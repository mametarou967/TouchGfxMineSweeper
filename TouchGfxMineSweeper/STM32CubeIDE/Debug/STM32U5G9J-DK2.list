
STM32U5G9J-DK2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000274  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000332d8  08000280  08000280  00001280  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005138  08033558  08033558  00034558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08038690  08038690  00039690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08038838  08038838  00039838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08038850  08038850  00039850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  0803885e  0803885e  0003985e  2**0
                  ALLOC
  7 .ARM          00000000  08038860  08038860  000fff90  2**0
                  CONTENTS
  8 .preinit_array 00000000  08038860  08038860  000fff90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000020  08038860  08038860  00039860  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08038880  08038880  00039880  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000002a8  20000000  08038888  0003a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00083438  200002a8  08038b30  0003a2a8  2**2
                  ALLOC
 13 ._user_heap_stack 00002000  200836e0  08038b30  0003a6e0  2**0
                  ALLOC
 14 .ARM.attributes 00000036  00000000  00000000  000fff90  2**0
                  CONTENTS, READONLY
 15 FramebufferSection 00177000  200856e0  200856e0  0003a6e0  2**2
                  ALLOC
 16 VideobufferSection 00000000  201fc6e0  201fc6e0  000fffc6  2**0
                  CONTENTS
 17 ExtFlashSection 000c4f90  a0000000  a0000000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .debug_info   000aa3ab  00000000  00000000  000fffc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00013ec0  00000000  00000000  001aa371  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loclists 0001ee9c  00000000  00000000  001be231  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 000035b8  00000000  00000000  001dd0d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 0000342c  00000000  00000000  001e0688  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0004fc55  00000000  00000000  001e3ab4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line   0005d029  00000000  00000000  00233709  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001c0fe2  00000000  00000000  00290732  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  00451714  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00009c7c  00000000  00000000  004517d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line_str 0000007e  00000000  00000000  0045b454  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000280 <__do_global_dtors_aux>:
 8000280:	b510      	push	{r4, lr}
 8000282:	4c05      	ldr	r4, [pc, #20]	@ (8000298 <__do_global_dtors_aux+0x18>)
 8000284:	7823      	ldrb	r3, [r4, #0]
 8000286:	b933      	cbnz	r3, 8000296 <__do_global_dtors_aux+0x16>
 8000288:	4b04      	ldr	r3, [pc, #16]	@ (800029c <__do_global_dtors_aux+0x1c>)
 800028a:	b113      	cbz	r3, 8000292 <__do_global_dtors_aux+0x12>
 800028c:	4804      	ldr	r0, [pc, #16]	@ (80002a0 <__do_global_dtors_aux+0x20>)
 800028e:	f3af 8000 	nop.w
 8000292:	2301      	movs	r3, #1
 8000294:	7023      	strb	r3, [r4, #0]
 8000296:	bd10      	pop	{r4, pc}
 8000298:	200002a8 	.word	0x200002a8
 800029c:	00000000 	.word	0x00000000
 80002a0:	08033540 	.word	0x08033540

080002a4 <frame_dummy>:
 80002a4:	b508      	push	{r3, lr}
 80002a6:	4b03      	ldr	r3, [pc, #12]	@ (80002b4 <frame_dummy+0x10>)
 80002a8:	b11b      	cbz	r3, 80002b2 <frame_dummy+0xe>
 80002aa:	4903      	ldr	r1, [pc, #12]	@ (80002b8 <frame_dummy+0x14>)
 80002ac:	4803      	ldr	r0, [pc, #12]	@ (80002bc <frame_dummy+0x18>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	bd08      	pop	{r3, pc}
 80002b4:	00000000 	.word	0x00000000
 80002b8:	200002ac 	.word	0x200002ac
 80002bc:	08033540 	.word	0x08033540

080002c0 <StartDefaultTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80002c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN defaultTask */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80002c2:	2001      	movs	r0, #1
 80002c4:	f008 fbf1 	bl	8008aaa <osDelay>
  for(;;)
 80002c8:	e7fb      	b.n	80002c2 <StartDefaultTask+0x2>
	...

080002cc <vApplicationIdleHook>:
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80002cc:	2000      	movs	r0, #0
 80002ce:	4901      	ldr	r1, [pc, #4]	@ (80002d4 <vApplicationIdleHook+0x8>)
 80002d0:	f009 be28 	b.w	8009f24 <vTaskSetApplicationTaskTag>
 80002d4:	08001385 	.word	0x08001385

080002d8 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 80002d8:	b508      	push	{r3, lr}
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002da:	2100      	movs	r1, #0
 80002dc:	4a06      	ldr	r2, [pc, #24]	@ (80002f8 <MX_FREERTOS_Init+0x20>)
 80002de:	4807      	ldr	r0, [pc, #28]	@ (80002fc <MX_FREERTOS_Init+0x24>)
 80002e0:	f008 fb98 	bl	8008a14 <osThreadNew>
 80002e4:	4b06      	ldr	r3, [pc, #24]	@ (8000300 <MX_FREERTOS_Init+0x28>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002e6:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002e8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002ea:	4a06      	ldr	r2, [pc, #24]	@ (8000304 <MX_FREERTOS_Init+0x2c>)
 80002ec:	4806      	ldr	r0, [pc, #24]	@ (8000308 <MX_FREERTOS_Init+0x30>)
 80002ee:	f008 fb91 	bl	8008a14 <osThreadNew>
 80002f2:	4b06      	ldr	r3, [pc, #24]	@ (800030c <MX_FREERTOS_Init+0x34>)
 80002f4:	6018      	str	r0, [r3, #0]
}
 80002f6:	bd08      	pop	{r3, pc}
 80002f8:	08033664 	.word	0x08033664
 80002fc:	080002c1 	.word	0x080002c1
 8000300:	200002c8 	.word	0x200002c8
 8000304:	08033640 	.word	0x08033640
 8000308:	08000fbb 	.word	0x08000fbb
 800030c:	200002c4 	.word	0x200002c4

08000310 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000310:	b530      	push	{r4, r5, lr}
 8000312:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000314:	2260      	movs	r2, #96	@ 0x60
 8000316:	2100      	movs	r1, #0
 8000318:	a806      	add	r0, sp, #24
 800031a:	f032 fad4 	bl	80328c6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800031e:	2218      	movs	r2, #24
 8000320:	2100      	movs	r1, #0
 8000322:	4668      	mov	r0, sp
 8000324:	f032 facf 	bl	80328c6 <memset>

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000328:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 800032c:	f006 f8fc 	bl	8006528 <HAL_PWREx_ControlVoltageScaling>
 8000330:	b108      	cbz	r0, 8000336 <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000332:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000334:	e7fe      	b.n	8000334 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000336:	2201      	movs	r2, #1
 8000338:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800033c:	2503      	movs	r5, #3
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800033e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000342:	2404      	movs	r4, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000344:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 80;
 8000346:	2250      	movs	r2, #80	@ 0x50
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000348:	e9cd 001c 	strd	r0, r0, [sp, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 800034c:	9017      	str	r0, [sp, #92]	@ 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800034e:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000350:	e9cd 3514 	strd	r3, r5, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000354:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000358:	e9cd 331a 	strd	r3, r3, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLM = 4;
 800035c:	9416      	str	r4, [sp, #88]	@ 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800035e:	f006 fba9 	bl	8006ab4 <HAL_RCC_OscConfig>
 8000362:	b108      	cbz	r0, 8000368 <SystemClock_Config+0x58>
 8000364:	b672      	cpsid	i
  while (1)
 8000366:	e7fe      	b.n	8000366 <SystemClock_Config+0x56>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000368:	231f      	movs	r3, #31
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800036a:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 800036e:	e9cd 0004 	strd	r0, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000372:	4621      	mov	r1, r4
 8000374:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000376:	e9cd 3500 	strd	r3, r5, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800037a:	f006 fa39 	bl	80067f0 <HAL_RCC_ClockConfig>
 800037e:	b108      	cbz	r0, 8000384 <SystemClock_Config+0x74>
 8000380:	b672      	cpsid	i
  while (1)
 8000382:	e7fe      	b.n	8000382 <SystemClock_Config+0x72>
}
 8000384:	b01f      	add	sp, #124	@ 0x7c
 8000386:	bd30      	pop	{r4, r5, pc}

08000388 <main>:
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b098      	sub	sp, #96	@ 0x60
  HAL_Init();
 800038c:	f003 fc50 	bl	8003c30 <HAL_Init>
  SystemClock_Config();
 8000390:	f7ff ffbe 	bl	8000310 <SystemClock_Config>
  HAL_PWREx_DisableUCPDDeadBattery();
 8000394:	f006 f93c 	bl	8006610 <HAL_PWREx_DisableUCPDDeadBattery>
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 8000398:	2002      	movs	r0, #2
 800039a:	f006 f90d 	bl	80065b8 <HAL_PWREx_ConfigSupply>
 800039e:	4605      	mov	r5, r0
 80003a0:	b108      	cbz	r0, 80003a6 <main+0x1e>
 80003a2:	b672      	cpsid	i
  while (1)
 80003a4:	e7fe      	b.n	80003a4 <main+0x1c>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003a6:	f04f 0914 	mov.w	r9, #20
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003aa:	4cc0      	ldr	r4, [pc, #768]	@ (80006ac <main+0x324>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003ac:	4601      	mov	r1, r0
 80003ae:	464a      	mov	r2, r9
 80003b0:	a80b      	add	r0, sp, #44	@ 0x2c
 80003b2:	f032 fa88 	bl	80328c6 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003b6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003ba:	2601      	movs	r6, #1
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003bc:	f043 0310 	orr.w	r3, r3, #16
 80003c0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003c4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003c8:	f04f 0810 	mov.w	r8, #16
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003cc:	f003 0310 	and.w	r3, r3, #16
 80003d0:	9304      	str	r3, [sp, #16]
 80003d2:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003d4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80003d8:	f04f 0a20 	mov.w	sl, #32
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003dc:	f043 0304 	orr.w	r3, r3, #4
 80003e0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003e4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003e8:	2201      	movs	r2, #1
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003ea:	f003 0304 	and.w	r3, r3, #4
 80003ee:	9305      	str	r3, [sp, #20]
 80003f0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003f6:	2150      	movs	r1, #80	@ 0x50
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f8:	f043 0320 	orr.w	r3, r3, #32
 80003fc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000400:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000404:	48aa      	ldr	r0, [pc, #680]	@ (80006b0 <main+0x328>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000406:	f003 0320 	and.w	r3, r3, #32
 800040a:	9306      	str	r3, [sp, #24]
 800040c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800040e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000412:	2702      	movs	r7, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000414:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000418:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800041c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000420:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000424:	9307      	str	r3, [sp, #28]
 8000426:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000428:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800042c:	f043 0302 	orr.w	r3, r3, #2
 8000430:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000434:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000438:	f003 0302 	and.w	r3, r3, #2
 800043c:	9308      	str	r3, [sp, #32]
 800043e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000440:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000444:	f043 0308 	orr.w	r3, r3, #8
 8000448:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800044c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000450:	f003 0308 	and.w	r3, r3, #8
 8000454:	9309      	str	r3, [sp, #36]	@ 0x24
 8000456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000458:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800045c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000460:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000464:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000468:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800046c:	930a      	str	r3, [sp, #40]	@ 0x28
 800046e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000470:	f004 fafe 	bl	8004a70 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000474:	462a      	mov	r2, r5
 8000476:	f641 4101 	movw	r1, #7169	@ 0x1c01
 800047a:	488e      	ldr	r0, [pc, #568]	@ (80006b4 <main+0x32c>)
 800047c:	f004 faf8 	bl	8004a70 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, USER_LD2_RED_Pin|USER_LD3_GREEN_Pin, GPIO_PIN_SET);
 8000480:	2201      	movs	r2, #1
 8000482:	4649      	mov	r1, r9
 8000484:	488c      	ldr	r0, [pc, #560]	@ (80006b8 <main+0x330>)
 8000486:	f004 faf3 	bl	8004a70 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 800048a:	4889      	ldr	r0, [pc, #548]	@ (80006b0 <main+0x328>)
 800048c:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800048e:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000492:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 8000496:	f004 f9d7 	bl	8004848 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800049a:	4b88      	ldr	r3, [pc, #544]	@ (80006bc <main+0x334>)
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 800049c:	4884      	ldr	r0, [pc, #528]	@ (80006b0 <main+0x328>)
 800049e:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80004a0:	e9cd a30b 	strd	sl, r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80004a4:	960d      	str	r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004a6:	f04f 0a11 	mov.w	sl, #17
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 80004aa:	f004 f9cd 	bl	8004848 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ae:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004b0:	487f      	ldr	r0, [pc, #508]	@ (80006b0 <main+0x328>)
 80004b2:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004b4:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004b8:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004bc:	f004 f9c4 	bl	8004848 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 80004c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004c4:	487b      	ldr	r0, [pc, #492]	@ (80006b4 <main+0x32c>)
 80004c6:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80004c8:	e9cd 350b 	strd	r3, r5, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80004cc:	970d      	str	r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004ce:	f004 f9bb 	bl	8004848 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin;
 80004d2:	f641 4301 	movw	r3, #7169	@ 0x1c01
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004d6:	4877      	ldr	r0, [pc, #476]	@ (80006b4 <main+0x32c>)
 80004d8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004da:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004de:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004e2:	f004 f9b1 	bl	8004848 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004e6:	4874      	ldr	r0, [pc, #464]	@ (80006b8 <main+0x330>)
 80004e8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ea:	e9cd 9a0b 	strd	r9, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004ee:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004f2:	f004 f9a9 	bl	8004848 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI5_IRQn, 5, 0);
 80004f6:	462a      	mov	r2, r5
 80004f8:	2105      	movs	r1, #5
 80004fa:	4640      	mov	r0, r8
 80004fc:	f003 fc00 	bl	8003d00 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI5_IRQn);
 8000500:	4640      	mov	r0, r8
 8000502:	f003 fc2d 	bl	8003d60 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000506:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800050a:	462a      	mov	r2, r5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800050c:	4333      	orrs	r3, r6
 800050e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8000512:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000516:	2105      	movs	r1, #5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000518:	4033      	ands	r3, r6
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800051a:	201d      	movs	r0, #29
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800051c:	9303      	str	r3, [sp, #12]
 800051e:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000520:	f003 fbee 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 8000524:	201d      	movs	r0, #29
 8000526:	f003 fc1b 	bl	8003d60 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPDMA1_Channel1_IRQn, 5, 0);
 800052a:	462a      	mov	r2, r5
 800052c:	2105      	movs	r1, #5
 800052e:	201e      	movs	r0, #30
 8000530:	f003 fbe6 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel1_IRQn);
 8000534:	201e      	movs	r0, #30
 8000536:	f003 fc13 	bl	8003d60 <HAL_NVIC_EnableIRQ>
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 800053a:	4628      	mov	r0, r5
 800053c:	f004 fe7a 	bl	8005234 <HAL_ICACHE_ConfigAssociativityMode>
 8000540:	b108      	cbz	r0, 8000546 <main+0x1be>
 8000542:	b672      	cpsid	i
  while (1)
 8000544:	e7fe      	b.n	8000544 <main+0x1bc>
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000546:	f004 fe85 	bl	8005254 <HAL_ICACHE_Enable>
 800054a:	b108      	cbz	r0, 8000550 <main+0x1c8>
 800054c:	b672      	cpsid	i
  while (1)
 800054e:	e7fe      	b.n	800054e <main+0x1c6>
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000550:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
  hdcache1.Instance = DCACHE1;
 8000554:	485a      	ldr	r0, [pc, #360]	@ (80006c0 <main+0x338>)
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000556:	4b5b      	ldr	r3, [pc, #364]	@ (80006c4 <main+0x33c>)
 8000558:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 800055c:	f003 fcc0 	bl	8003ee0 <HAL_DCACHE_Init>
 8000560:	b108      	cbz	r0, 8000566 <main+0x1de>
 8000562:	b672      	cpsid	i
  while (1)
 8000564:	e7fe      	b.n	8000564 <main+0x1dc>
  hdcache2.Instance = DCACHE2;
 8000566:	4858      	ldr	r0, [pc, #352]	@ (80006c8 <main+0x340>)
 8000568:	4b58      	ldr	r3, [pc, #352]	@ (80006cc <main+0x344>)
  hdcache2.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 800056a:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache2) != HAL_OK)
 800056e:	f003 fcb7 	bl	8003ee0 <HAL_DCACHE_Init>
 8000572:	4605      	mov	r5, r0
 8000574:	b108      	cbz	r0, 800057a <main+0x1f2>
 8000576:	b672      	cpsid	i
  while (1)
 8000578:	e7fe      	b.n	8000578 <main+0x1f0>
   __HAL_RCC_SYSCFG_CLK_ENABLE();
 800057a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800057e:	f043 0302 	orr.w	r3, r3, #2
 8000582:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8000586:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800058a:	f003 0302 	and.w	r3, r3, #2
 800058e:	9302      	str	r3, [sp, #8]
 8000590:	9b02      	ldr	r3, [sp, #8]
   HAL_SYSCFG_DisableSRAMCached();
 8000592:	f003 fb9b 	bl	8003ccc <HAL_SYSCFG_DisableSRAMCached>
  hcrc.Instance = CRC;
 8000596:	484e      	ldr	r0, [pc, #312]	@ (80006d0 <main+0x348>)
 8000598:	4b4e      	ldr	r3, [pc, #312]	@ (80006d4 <main+0x34c>)
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800059a:	e9c0 5505 	strd	r5, r5, [r0, #20]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800059e:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 80005a0:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005a2:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005a4:	f003 fc24 	bl	8003df0 <HAL_CRC_Init>
 80005a8:	4605      	mov	r5, r0
 80005aa:	b108      	cbz	r0, 80005b0 <main+0x228>
 80005ac:	b672      	cpsid	i
  while (1)
 80005ae:	e7fe      	b.n	80005ae <main+0x226>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80005b0:	2234      	movs	r2, #52	@ 0x34
 80005b2:	4601      	mov	r1, r0
 80005b4:	a80b      	add	r0, sp, #44	@ 0x2c
 80005b6:	f032 f986 	bl	80328c6 <memset>
  hltdc.Instance = LTDC;
 80005ba:	4c47      	ldr	r4, [pc, #284]	@ (80006d8 <main+0x350>)
 80005bc:	4b47      	ldr	r3, [pc, #284]	@ (80006dc <main+0x354>)
  hltdc.Init.AccumulatedActiveH = 492;
 80005be:	f44f 7c4b 	mov.w	ip, #812	@ 0x32c
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80005c2:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.HorizontalSync = 4;
 80005c6:	2304      	movs	r3, #4
  hltdc.Init.VerticalSync = 4;
 80005c8:	e9c4 3305 	strd	r3, r3, [r4, #20]
  hltdc.Init.AccumulatedHBP = 12;
 80005cc:	230c      	movs	r3, #12
  hltdc.Init.AccumulatedVBP = 12;
 80005ce:	e9c4 3307 	strd	r3, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 492;
 80005d2:	f44f 73f6 	mov.w	r3, #492	@ 0x1ec
  hltdc.Init.TotalHeigh = 506;
 80005d6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
  hltdc.Init.AccumulatedActiveH = 492;
 80005da:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 506;
 80005de:	f44f 73fd 	mov.w	r3, #506	@ 0x1fa
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005e2:	4620      	mov	r0, r4
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80005e4:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 506;
 80005e8:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80005ec:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
 80005ee:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80005f0:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005f4:	f005 fe82 	bl	80062fc <HAL_LTDC_Init>
 80005f8:	4602      	mov	r2, r0
 80005fa:	b108      	cbz	r0, 8000600 <main+0x278>
 80005fc:	b672      	cpsid	i
  while (1)
 80005fe:	e7fe      	b.n	80005fe <main+0x276>
  pLayerCfg.WindowX1 = 800;
 8000600:	f44f 7148 	mov.w	r1, #800	@ 0x320
  pLayerCfg.WindowX0 = 0;
 8000604:	900b      	str	r0, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
 8000606:	e9cd 100c 	strd	r1, r0, [sp, #48]	@ 0x30
  pLayerCfg.Alpha = 255;
 800060a:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800060c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000610:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000614:	2005      	movs	r0, #5
  pLayerCfg.WindowY1 = 480;
 8000616:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800061a:	e9cd 5012 	strd	r5, r0, [sp, #72]	@ 0x48
  pLayerCfg.ImageWidth = 800;
 800061e:	e9cd 2114 	strd	r2, r1, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000622:	4620      	mov	r0, r4
 8000624:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000626:	e9cd 370e 	strd	r3, r7, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 480;
 800062a:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800062c:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8000630:	f88d 205e 	strb.w	r2, [sp, #94]	@ 0x5e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000634:	f005 ff2d 	bl	8006492 <HAL_LTDC_ConfigLayer>
 8000638:	4603      	mov	r3, r0
 800063a:	b108      	cbz	r0, 8000640 <main+0x2b8>
 800063c:	b672      	cpsid	i
  while (1)
 800063e:	e7fe      	b.n	800063e <main+0x2b6>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000640:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
  hdma2d.Instance = DMA2D;
 8000644:	4826      	ldr	r0, [pc, #152]	@ (80006e0 <main+0x358>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000646:	4c27      	ldr	r4, [pc, #156]	@ (80006e4 <main+0x35c>)
  hdma2d.Init.OutputOffset = 0;
 8000648:	e9c0 6302 	strd	r6, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800064c:	e9c0 4200 	strd	r4, r2, [r0]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 8000650:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000654:	f003 ffa8 	bl	80045a8 <HAL_DMA2D_Init>
 8000658:	b108      	cbz	r0, 800065e <main+0x2d6>
 800065a:	b672      	cpsid	i
  while (1)
 800065c:	e7fe      	b.n	800065c <main+0x2d4>
  hgpu2d.Instance = GPU2D;
 800065e:	4822      	ldr	r0, [pc, #136]	@ (80006e8 <main+0x360>)
 8000660:	4b22      	ldr	r3, [pc, #136]	@ (80006ec <main+0x364>)
 8000662:	6003      	str	r3, [r0, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 8000664:	f004 fa28 	bl	8004ab8 <HAL_GPU2D_Init>
 8000668:	b108      	cbz	r0, 800066e <main+0x2e6>
 800066a:	b672      	cpsid	i
  while (1)
 800066c:	e7fe      	b.n	800066c <main+0x2e4>
  hxspi1.Init.FifoThresholdByte = 4;
 800066e:	2304      	movs	r3, #4
  hxspi1.Instance = HSPI1;
 8000670:	4c1f      	ldr	r4, [pc, #124]	@ (80006f0 <main+0x368>)
  hxspi1.Init.FifoThresholdByte = 4;
 8000672:	4920      	ldr	r1, [pc, #128]	@ (80006f4 <main+0x36c>)
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000674:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
  hxspi1.Init.FifoThresholdByte = 4;
 8000678:	e9c4 1300 	strd	r1, r3, [r4]
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 800067c:	2300      	movs	r3, #0
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 800067e:	2602      	movs	r6, #2
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000680:	e9c4 3202 	strd	r3, r2, [r4, #8]
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000684:	221a      	movs	r2, #26
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 8000686:	4620      	mov	r0, r4
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000688:	e9c4 2604 	strd	r2, r6, [r4, #16]
  hxspi1.Init.ClockMode = HAL_XSPI_CLOCK_MODE_0;
 800068c:	e9c4 3306 	strd	r3, r3, [r4, #24]
  hxspi1.Init.ClockPrescaler = 0;
 8000690:	e9c4 3308 	strd	r3, r3, [r4, #32]
  hxspi1.Init.DelayHoldQuarterCycle = HAL_XSPI_DHQC_DISABLE;
 8000694:	e9c4 330a 	strd	r3, r3, [r4, #40]	@ 0x28
  hxspi1.Init.Refresh = 0;
 8000698:	e9c4 330e 	strd	r3, r3, [r4, #56]	@ 0x38
  hxspi1.Init.ChipSelectBoundary = HAL_XSPI_BONDARYOF_NONE;
 800069c:	6323      	str	r3, [r4, #48]	@ 0x30
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 800069e:	f007 fe6b 	bl	8008378 <HAL_XSPI_Init>
 80006a2:	4605      	mov	r5, r0
 80006a4:	b340      	cbz	r0, 80006f8 <main+0x370>
 80006a6:	b672      	cpsid	i
  while (1)
 80006a8:	e7fe      	b.n	80006a8 <main+0x320>
 80006aa:	bf00      	nop
 80006ac:	46020c00 	.word	0x46020c00
 80006b0:	42021000 	.word	0x42021000
 80006b4:	42020800 	.word	0x42020800
 80006b8:	42020c00 	.word	0x42020c00
 80006bc:	10210000 	.word	0x10210000
 80006c0:	20000610 	.word	0x20000610
 80006c4:	40031400 	.word	0x40031400
 80006c8:	200005e4 	.word	0x200005e4
 80006cc:	40031800 	.word	0x40031800
 80006d0:	2000063c 	.word	0x2000063c
 80006d4:	40023000 	.word	0x40023000
 80006d8:	200002cc 	.word	0x200002cc
 80006dc:	40016800 	.word	0x40016800
 80006e0:	2000057c 	.word	0x2000057c
 80006e4:	4002b000 	.word	0x4002b000
 80006e8:	20000570 	.word	0x20000570
 80006ec:	4002f000 	.word	0x4002f000
 80006f0:	20000510 	.word	0x20000510
 80006f4:	420d3400 	.word	0x420d3400
  MX66UW1G45G_ResetEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 80006f8:	4602      	mov	r2, r0
 80006fa:	4601      	mov	r1, r0
 80006fc:	4620      	mov	r0, r4
 80006fe:	f003 fa13 	bl	8003b28 <MX66UW1G45G_ResetEnable>
  MX66UW1G45G_ResetMemory(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000702:	462a      	mov	r2, r5
 8000704:	4629      	mov	r1, r5
 8000706:	4620      	mov	r0, r4
 8000708:	f003 fa3f 	bl	8003b8a <MX66UW1G45G_ResetMemory>
  HAL_Delay(MX66UW1G45G_RESET_MAX_TIME);
 800070c:	2064      	movs	r0, #100	@ 0x64
 800070e:	f003 facb 	bl	8003ca8 <HAL_Delay>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000712:	462a      	mov	r2, r5
 8000714:	4629      	mov	r1, r5
 8000716:	4620      	mov	r0, r4
 8000718:	f003 f934 	bl	8003984 <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG3_ADDR, MX66UW1G45G_CR2_DC_6_CYCLES);
 800071c:	2307      	movs	r3, #7
 800071e:	462a      	mov	r2, r5
 8000720:	4629      	mov	r1, r5
 8000722:	4620      	mov	r0, r4
 8000724:	9300      	str	r3, [sp, #0]
 8000726:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800072a:	f003 f9a5 	bl	8003a78 <MX66UW1G45G_WriteCfg2Register>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 800072e:	462a      	mov	r2, r5
 8000730:	4629      	mov	r1, r5
 8000732:	4620      	mov	r0, r4
 8000734:	f003 f926 	bl	8003984 <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG1_ADDR, MX66UW1G45G_CR2_DOPI);
 8000738:	462b      	mov	r3, r5
 800073a:	462a      	mov	r2, r5
 800073c:	4629      	mov	r1, r5
 800073e:	4620      	mov	r0, r4
 8000740:	9600      	str	r6, [sp, #0]
 8000742:	f003 f999 	bl	8003a78 <MX66UW1G45G_WriteCfg2Register>
  HAL_Delay(MX66UW1G45G_WRITE_REG_MAX_TIME);
 8000746:	2028      	movs	r0, #40	@ 0x28
 8000748:	f003 faae 	bl	8003ca8 <HAL_Delay>
  MX66UW1G45G_EnableDTRMemoryMappedMode(&hxspi1, MX66UW1G45G_OPI_MODE);
 800074c:	2101      	movs	r1, #1
 800074e:	4620      	mov	r0, r4
 8000750:	f003 f8c9 	bl	80038e6 <MX66UW1G45G_EnableDTRMemoryMappedMode>
  hi2c2.Instance = I2C2;
 8000754:	4c19      	ldr	r4, [pc, #100]	@ (80007bc <main+0x434>)
  hi2c2.Init.Timing = 0x00F07BFF;
 8000756:	4a1a      	ldr	r2, [pc, #104]	@ (80007c0 <main+0x438>)
 8000758:	4b1a      	ldr	r3, [pc, #104]	@ (80007c4 <main+0x43c>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800075a:	4620      	mov	r0, r4
  hi2c2.Init.Timing = 0x00F07BFF;
 800075c:	e9c4 2300 	strd	r2, r3, [r4]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000760:	2301      	movs	r3, #1
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000762:	e9c4 5505 	strd	r5, r5, [r4, #20]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000766:	e9c4 3503 	strd	r3, r5, [r4, #12]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800076a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hi2c2.Init.OwnAddress1 = 0;
 800076e:	60a5      	str	r5, [r4, #8]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000770:	f004 fb07 	bl	8004d82 <HAL_I2C_Init>
 8000774:	4601      	mov	r1, r0
 8000776:	b108      	cbz	r0, 800077c <main+0x3f4>
 8000778:	b672      	cpsid	i
  while (1)
 800077a:	e7fe      	b.n	800077a <main+0x3f2>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800077c:	4620      	mov	r0, r4
 800077e:	f004 fd0d 	bl	800519c <HAL_I2CEx_ConfigAnalogFilter>
 8000782:	4601      	mov	r1, r0
 8000784:	b108      	cbz	r0, 800078a <main+0x402>
 8000786:	b672      	cpsid	i
  while (1)
 8000788:	e7fe      	b.n	8000788 <main+0x400>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800078a:	4620      	mov	r0, r4
 800078c:	f004 fd2c 	bl	80051e8 <HAL_I2CEx_ConfigDigitalFilter>
 8000790:	b108      	cbz	r0, 8000796 <main+0x40e>
 8000792:	b672      	cpsid	i
  while (1)
 8000794:	e7fe      	b.n	8000794 <main+0x40c>
  hjpeg.Instance = JPEG;
 8000796:	480c      	ldr	r0, [pc, #48]	@ (80007c8 <main+0x440>)
 8000798:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <main+0x444>)
 800079a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
 800079c:	f004 ff2a 	bl	80055f4 <HAL_JPEG_Init>
 80007a0:	b108      	cbz	r0, 80007a6 <main+0x41e>
 80007a2:	b672      	cpsid	i
  while (1)
 80007a4:	e7fe      	b.n	80007a4 <main+0x41c>
  MX_TouchGFX_Init();
 80007a6:	f000 fc01 	bl	8000fac <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80007aa:	f000 fbfe 	bl	8000faa <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80007ae:	f008 f8fb 	bl	80089a8 <osKernelInitialize>
  MX_FREERTOS_Init();
 80007b2:	f7ff fd91 	bl	80002d8 <MX_FREERTOS_Init>
  osKernelStart();
 80007b6:	f008 f90d 	bl	80089d4 <osKernelStart>
  while (1)
 80007ba:	e7fe      	b.n	80007ba <main+0x432>
 80007bc:	200004bc 	.word	0x200004bc
 80007c0:	40005800 	.word	0x40005800
 80007c4:	00f07bff 	.word	0x00f07bff
 80007c8:	20000464 	.word	0x20000464
 80007cc:	4002a000 	.word	0x4002a000

080007d0 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 80007d0:	6802      	ldr	r2, [r0, #0]
 80007d2:	4b03      	ldr	r3, [pc, #12]	@ (80007e0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80007d4:	429a      	cmp	r2, r3
 80007d6:	d101      	bne.n	80007dc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80007d8:	f003 ba54 	b.w	8003c84 <HAL_IncTick>
}
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40001000 	.word	0x40001000

080007e4 <Error_Handler>:
 80007e4:	b672      	cpsid	i
  while (1)
 80007e6:	e7fe      	b.n	80007e6 <Error_Handler+0x2>

080007e8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80007e8:	4b0a      	ldr	r3, [pc, #40]	@ (8000814 <HAL_MspInit+0x2c>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007ea:	210f      	movs	r1, #15
  __HAL_RCC_PWR_CLK_ENABLE();
 80007ec:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007f0:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80007f4:	f042 0204 	orr.w	r2, r2, #4
 80007f8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007fc:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 80007fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
{
 8000802:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8000804:	f003 0304 	and.w	r3, r3, #4
 8000808:	9301      	str	r3, [sp, #4]
 800080a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800080c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800080e:	f003 ba77 	b.w	8003d00 <HAL_NVIC_SetPriority>
 8000812:	bf00      	nop
 8000814:	46020c00 	.word	0x46020c00

08000818 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000818:	6802      	ldr	r2, [r0, #0]
 800081a:	4b09      	ldr	r3, [pc, #36]	@ (8000840 <HAL_CRC_MspInit+0x28>)
{
 800081c:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800081e:	429a      	cmp	r2, r3
 8000820:	d10c      	bne.n	800083c <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000822:	4b08      	ldr	r3, [pc, #32]	@ (8000844 <HAL_CRC_MspInit+0x2c>)
 8000824:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000828:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800082c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000830:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000834:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000838:	9301      	str	r3, [sp, #4]
 800083a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800083c:	b002      	add	sp, #8
 800083e:	4770      	bx	lr
 8000840:	40023000 	.word	0x40023000
 8000844:	46020c00 	.word	0x46020c00

08000848 <HAL_DCACHE_MspInit>:
* @param hdcache: DCACHE handle pointer
* @retval None
*/
void HAL_DCACHE_MspInit(DCACHE_HandleTypeDef* hdcache)
{
  if(hdcache->Instance==DCACHE1)
 8000848:	6803      	ldr	r3, [r0, #0]
 800084a:	4a12      	ldr	r2, [pc, #72]	@ (8000894 <HAL_DCACHE_MspInit+0x4c>)
{
 800084c:	b082      	sub	sp, #8
  if(hdcache->Instance==DCACHE1)
 800084e:	4293      	cmp	r3, r2
 8000850:	d10e      	bne.n	8000870 <HAL_DCACHE_MspInit+0x28>
  {
  /* USER CODE BEGIN DCACHE1_MspInit 0 */

  /* USER CODE END DCACHE1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DCACHE1_CLK_ENABLE();
 8000852:	4b11      	ldr	r3, [pc, #68]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000854:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000858:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800085c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000860:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000864:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8000868:	9300      	str	r3, [sp, #0]
 800086a:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN DCACHE2_MspInit 1 */

  /* USER CODE END DCACHE2_MspInit 1 */
  }

}
 800086c:	b002      	add	sp, #8
 800086e:	4770      	bx	lr
  else if(hdcache->Instance==DCACHE2)
 8000870:	4a0a      	ldr	r2, [pc, #40]	@ (800089c <HAL_DCACHE_MspInit+0x54>)
 8000872:	4293      	cmp	r3, r2
 8000874:	d1fa      	bne.n	800086c <HAL_DCACHE_MspInit+0x24>
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000876:	4b08      	ldr	r3, [pc, #32]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000878:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800087c:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000880:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000884:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000888:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800088c:	9301      	str	r3, [sp, #4]
 800088e:	9b01      	ldr	r3, [sp, #4]
}
 8000890:	e7ec      	b.n	800086c <HAL_DCACHE_MspInit+0x24>
 8000892:	bf00      	nop
 8000894:	40031400 	.word	0x40031400
 8000898:	46020c00 	.word	0x46020c00
 800089c:	40031800 	.word	0x40031800

080008a0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80008a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80008a2:	4b0f      	ldr	r3, [pc, #60]	@ (80008e0 <HAL_DMA2D_MspInit+0x40>)
 80008a4:	6802      	ldr	r2, [r0, #0]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	d117      	bne.n	80008da <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008aa:	4b0e      	ldr	r3, [pc, #56]	@ (80008e4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ac:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008ae:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008b2:	2076      	movs	r0, #118	@ 0x76
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008b4:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80008b8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80008bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008c0:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008c2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80008c6:	9301      	str	r3, [sp, #4]
 80008c8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ca:	f003 fa19 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008ce:	2076      	movs	r0, #118	@ 0x76
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80008d0:	b003      	add	sp, #12
 80008d2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008d6:	f003 ba43 	b.w	8003d60 <HAL_NVIC_EnableIRQ>
}
 80008da:	b003      	add	sp, #12
 80008dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80008e0:	4002b000 	.word	0x4002b000
 80008e4:	46020c00 	.word	0x46020c00

080008e8 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 80008e8:	b507      	push	{r0, r1, r2, lr}
  if(hgpu2d->Instance==GPU2D)
 80008ea:	4b19      	ldr	r3, [pc, #100]	@ (8000950 <HAL_GPU2D_MspInit+0x68>)
 80008ec:	6802      	ldr	r2, [r0, #0]
 80008ee:	429a      	cmp	r2, r3
 80008f0:	d12b      	bne.n	800094a <HAL_GPU2D_MspInit+0x62>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f2:	4b18      	ldr	r3, [pc, #96]	@ (8000954 <HAL_GPU2D_MspInit+0x6c>)
    __HAL_RCC_DCACHE2_CLK_ENABLE();
    /* GPU2D interrupt Init */
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008f4:	2105      	movs	r1, #5
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008fa:	2084      	movs	r0, #132	@ 0x84
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008fc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8000900:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000904:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000908:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800090c:	9200      	str	r2, [sp, #0]
 800090e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000910:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000914:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000918:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800091c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 8000920:	2200      	movs	r2, #0
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000922:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000926:	9301      	str	r3, [sp, #4]
 8000928:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 800092a:	f003 f9e9 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_IRQn);
 800092e:	2084      	movs	r0, #132	@ 0x84
 8000930:	f003 fa16 	bl	8003d60 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPU2D_ER_IRQn, 5, 0);
 8000934:	2200      	movs	r2, #0
 8000936:	2105      	movs	r1, #5
 8000938:	2085      	movs	r0, #133	@ 0x85
 800093a:	f003 f9e1 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 800093e:	2085      	movs	r0, #133	@ 0x85
  /* USER CODE BEGIN GPU2D_MspInit 1 */

  /* USER CODE END GPU2D_MspInit 1 */
  }

}
 8000940:	b003      	add	sp, #12
 8000942:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 8000946:	f003 ba0b 	b.w	8003d60 <HAL_NVIC_EnableIRQ>
}
 800094a:	b003      	add	sp, #12
 800094c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000950:	4002f000 	.word	0x4002f000
 8000954:	46020c00 	.word	0x46020c00

08000958 <HAL_XSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspInit(XSPI_HandleTypeDef* hxspi)
{
 8000958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800095a:	4604      	mov	r4, r0
 800095c:	b0c1      	sub	sp, #260	@ 0x104
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800095e:	2214      	movs	r2, #20
 8000960:	2100      	movs	r1, #0
 8000962:	a803      	add	r0, sp, #12
 8000964:	f031 ffaf 	bl	80328c6 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000968:	22e0      	movs	r2, #224	@ 0xe0
 800096a:	2100      	movs	r1, #0
 800096c:	a808      	add	r0, sp, #32
 800096e:	f031 ffaa 	bl	80328c6 <memset>
  if(hxspi->Instance==HSPI1)
 8000972:	6822      	ldr	r2, [r4, #0]
 8000974:	4b32      	ldr	r3, [pc, #200]	@ (8000a40 <HAL_XSPI_MspInit+0xe8>)
 8000976:	429a      	cmp	r2, r3
 8000978:	d15f      	bne.n	8000a3a <HAL_XSPI_MspInit+0xe2>

  /* USER CODE END HSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HSPI;
 800097a:	2301      	movs	r3, #1
 800097c:	2200      	movs	r2, #0
 800097e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000982:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL2.PLL2M = 4;
 8000986:	2103      	movs	r1, #3
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000988:	9338      	str	r3, [sp, #224]	@ 0xe0
    PeriphClkInit.PLL2.PLL2M = 4;
 800098a:	2304      	movs	r3, #4
    PeriphClkInit.PLL2.PLL2N = 66;
    PeriphClkInit.PLL2.PLL2P = 2;
 800098c:	2042      	movs	r0, #66	@ 0x42
    PeriphClkInit.PLL2.PLL2M = 4;
 800098e:	e9cd 130a 	strd	r1, r3, [sp, #40]	@ 0x28
    PeriphClkInit.PLL2.PLL2P = 2;
 8000992:	2302      	movs	r3, #2
 8000994:	e9cd 030c 	strd	r0, r3, [sp, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2Q = 2;
    PeriphClkInit.PLL2.PLL2R = 2;
 8000998:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL2.PLL2FRACN = 0;
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 800099c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a0:	a808      	add	r0, sp, #32
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 80009a2:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a4:	f006 fdf0 	bl	8007588 <HAL_RCCEx_PeriphCLKConfig>
 80009a8:	b108      	cbz	r0, 80009ae <HAL_XSPI_MspInit+0x56>
    {
      Error_Handler();
 80009aa:	f7ff ff1b 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009ae:	4b25      	ldr	r3, [pc, #148]	@ (8000a44 <HAL_XSPI_MspInit+0xec>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009b0:	2400      	movs	r4, #0
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b2:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009b6:	2702      	movs	r7, #2
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80009bc:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80009c0:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009c4:	2603      	movs	r6, #3
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009c6:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80009ca:	9200      	str	r2, [sp, #0]
 80009cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80009d2:	2508      	movs	r5, #8
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009d4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80009d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009dc:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009e0:	4819      	ldr	r0, [pc, #100]	@ (8000a48 <HAL_XSPI_MspInit+0xf0>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009e2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80009e6:	9201      	str	r2, [sp, #4]
 80009e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009ea:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009ee:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009f0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80009f4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009fc:	e9cd 4605 	strd	r4, r6, [sp, #20]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a00:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a04:	9302      	str	r3, [sp, #8]
 8000a06:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a08:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a0c:	9507      	str	r5, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a0e:	e9cd 3703 	strd	r3, r7, [sp, #12]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000a12:	f003 ff19 	bl	8004848 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000a16:	230f      	movs	r3, #15
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a18:	480c      	ldr	r0, [pc, #48]	@ (8000a4c <HAL_XSPI_MspInit+0xf4>)
 8000a1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a1c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a20:	e9cd 4605 	strd	r4, r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a24:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a26:	f003 ff0f 	bl	8004848 <HAL_GPIO_Init>

    /* HSPI1 interrupt Init */
    HAL_NVIC_SetPriority(HSPI1_IRQn, 5, 0);
 8000a2a:	2083      	movs	r0, #131	@ 0x83
 8000a2c:	4622      	mov	r2, r4
 8000a2e:	2105      	movs	r1, #5
 8000a30:	f003 f966 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(HSPI1_IRQn);
 8000a34:	2083      	movs	r0, #131	@ 0x83
 8000a36:	f003 f993 	bl	8003d60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN HSPI1_MspInit 1 */

  /* USER CODE END HSPI1_MspInit 1 */
  }

}
 8000a3a:	b041      	add	sp, #260	@ 0x104
 8000a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	420d3400 	.word	0x420d3400
 8000a44:	46020c00 	.word	0x46020c00
 8000a48:	42021c00 	.word	0x42021c00
 8000a4c:	42022000 	.word	0x42022000

08000a50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000a50:	b510      	push	{r4, lr}
 8000a52:	4604      	mov	r4, r0
 8000a54:	b0c0      	sub	sp, #256	@ 0x100
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a56:	2214      	movs	r2, #20
 8000a58:	2100      	movs	r1, #0
 8000a5a:	a803      	add	r0, sp, #12
 8000a5c:	f031 ff33 	bl	80328c6 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a60:	22e0      	movs	r2, #224	@ 0xe0
 8000a62:	2100      	movs	r1, #0
 8000a64:	a808      	add	r0, sp, #32
 8000a66:	f031 ff2e 	bl	80328c6 <memset>
  if(hi2c->Instance==I2C2)
 8000a6a:	6822      	ldr	r2, [r4, #0]
 8000a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8000ad8 <HAL_I2C_MspInit+0x88>)
 8000a6e:	429a      	cmp	r2, r3
 8000a70:	d12f      	bne.n	8000ad2 <HAL_I2C_MspInit+0x82>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a72:	2280      	movs	r2, #128	@ 0x80
 8000a74:	2300      	movs	r3, #0
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a76:	a808      	add	r0, sp, #32
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a78:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a7c:	f006 fd84 	bl	8007588 <HAL_RCCEx_PeriphCLKConfig>
 8000a80:	b108      	cbz	r0, 8000a86 <HAL_I2C_MspInit+0x36>
    {
      Error_Handler();
 8000a82:	f7ff feaf 	bl	80007e4 <Error_Handler>
    }

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a86:	4c15      	ldr	r4, [pc, #84]	@ (8000adc <HAL_I2C_MspInit+0x8c>)
    /**I2C2 GPIO Configuration
    PF0     ------> I2C2_SDA
    PF1     ------> I2C2_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a88:	2203      	movs	r2, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a8a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a8e:	4814      	ldr	r0, [pc, #80]	@ (8000ae0 <HAL_I2C_MspInit+0x90>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a90:	f043 0320 	orr.w	r3, r3, #32
 8000a94:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000a98:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a9c:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a9e:	f003 0320 	and.w	r3, r3, #32
 8000aa2:	9301      	str	r3, [sp, #4]
 8000aa4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000aa6:	2312      	movs	r3, #18
 8000aa8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aac:	2300      	movs	r3, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000aae:	e9cd 3305 	strd	r3, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000ab2:	2304      	movs	r3, #4
 8000ab4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ab6:	f003 fec7 	bl	8004848 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000aba:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000abe:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000ac2:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
 8000ac6:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000aca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000ace:	9302      	str	r3, [sp, #8]
 8000ad0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000ad2:	b040      	add	sp, #256	@ 0x100
 8000ad4:	bd10      	pop	{r4, pc}
 8000ad6:	bf00      	nop
 8000ad8:	40005800 	.word	0x40005800
 8000adc:	46020c00 	.word	0x46020c00
 8000ae0:	42021400 	.word	0x42021400

08000ae4 <HAL_JPEG_MspInit>:
* This function configures the hardware resources used in this example
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
 8000ae4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  DMA_DataHandlingConfTypeDef DataHandlingConfig;
  if(hjpeg->Instance==JPEG)
 8000ae6:	6802      	ldr	r2, [r0, #0]
 8000ae8:	4b3d      	ldr	r3, [pc, #244]	@ (8000be0 <HAL_JPEG_MspInit+0xfc>)
{
 8000aea:	4605      	mov	r5, r0
  if(hjpeg->Instance==JPEG)
 8000aec:	429a      	cmp	r2, r3
 8000aee:	d174      	bne.n	8000bda <HAL_JPEG_MspInit+0xf6>
  {
  /* USER CODE BEGIN JPEG_MspInit 0 */

  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af0:	4b3c      	ldr	r3, [pc, #240]	@ (8000be4 <HAL_JPEG_MspInit+0x100>)
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
    handle_GPDMA1_Channel1.Init.DestInc = DMA_DINC_INCREMENTED;
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000af2:	f44f 2600 	mov.w	r6, #524288	@ 0x80000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
 8000afa:	4c3b      	ldr	r4, [pc, #236]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000afc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8000b00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b04:	2202      	movs	r2, #2
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b0a:	f44f 3c00 	mov.w	ip, #131072	@ 0x20000
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b0e:	e9c4 6205 	strd	r6, r2, [r4, #20]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b12:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b16:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000b1a:	9301      	str	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b1c:	e9c4 c207 	strd	ip, r2, [r4, #28]
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b20:	9b01      	ldr	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 8;
 8000b22:	2208      	movs	r2, #8
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b24:	237d      	movs	r3, #125	@ 0x7d
 8000b26:	4831      	ldr	r0, [pc, #196]	@ (8000bec <HAL_JPEG_MspInit+0x108>)
    handle_GPDMA1_Channel1.Init.DestBurstLength = 8;
 8000b28:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b2c:	e9c4 0300 	strd	r0, r3, [r4]
    handle_GPDMA1_Channel1.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT1;
 8000b30:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000b34:	2300      	movs	r3, #0
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b36:	4620      	mov	r0, r4
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000b38:	e9c4 3302 	strd	r3, r3, [r4, #8]
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b3c:	e9c4 230b 	strd	r2, r3, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
 8000b40:	6123      	str	r3, [r4, #16]
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
 8000b42:	6363      	str	r3, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b44:	f003 fa02 	bl	8003f4c <HAL_DMA_Init>
 8000b48:	b108      	cbz	r0, 8000b4e <HAL_JPEG_MspInit+0x6a>
    {
      Error_Handler();
 8000b4a:	f7ff fe4b 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b4e:	636c      	str	r4, [r5, #52]	@ 0x34

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b50:	2110      	movs	r1, #16
 8000b52:	4825      	ldr	r0, [pc, #148]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b54:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b56:	f003 fd09 	bl	800456c <HAL_DMA_ConfigChannelAttributes>
 8000b5a:	b108      	cbz	r0, 8000b60 <HAL_JPEG_MspInit+0x7c>
    {
      Error_Handler();
 8000b5c:	f7ff fe42 	bl	80007e4 <Error_Handler>
    }

    /* GPDMA1_REQUEST_JPEG_RX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b60:	237c      	movs	r3, #124	@ 0x7c
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 8000b62:	4c23      	ldr	r4, [pc, #140]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b64:	4a23      	ldr	r2, [pc, #140]	@ (8000bf4 <HAL_JPEG_MspInit+0x110>)
    handle_GPDMA1_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b66:	2600      	movs	r6, #0
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b68:	e9c4 2300 	strd	r2, r3, [r4]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b6c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000b70:	e9c4 6302 	strd	r6, r3, [r4, #8]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000b74:	2308      	movs	r3, #8
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b76:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8000b7a:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000b7e:	e9c4 3604 	strd	r3, r6, [r4, #16]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 8;
    handle_GPDMA1_Channel0.Init.DestBurstLength = 8;
 8000b82:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT1|DMA_DEST_ALLOCATED_PORT0;
 8000b86:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b8a:	4620      	mov	r0, r4
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b8c:	e9c4 1207 	strd	r1, r2, [r4, #28]
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b90:	e9c4 360b 	strd	r3, r6, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000b94:	61a6      	str	r6, [r4, #24]
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8000b96:	6366      	str	r6, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b98:	f003 f9d8 	bl	8003f4c <HAL_DMA_Init>
 8000b9c:	b108      	cbz	r0, 8000ba2 <HAL_JPEG_MspInit+0xbe>
    {
      Error_Handler();
 8000b9e:	f7ff fe21 	bl	80007e4 <Error_Handler>
    }

    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000ba2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000ba6:	4812      	ldr	r0, [pc, #72]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
 8000ba8:	a902      	add	r1, sp, #8
    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
 8000baa:	9602      	str	r6, [sp, #8]
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000bac:	9303      	str	r3, [sp, #12]
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000bae:	f003 fe2b 	bl	8004808 <HAL_DMAEx_ConfigDataHandling>
 8000bb2:	b108      	cbz	r0, 8000bb8 <HAL_JPEG_MspInit+0xd4>
    {
      Error_Handler();
 8000bb4:	f7ff fe16 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bb8:	632c      	str	r4, [r5, #48]	@ 0x30

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bba:	2110      	movs	r1, #16
 8000bbc:	480c      	ldr	r0, [pc, #48]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bbe:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bc0:	f003 fcd4 	bl	800456c <HAL_DMA_ConfigChannelAttributes>
 8000bc4:	b108      	cbz	r0, 8000bca <HAL_JPEG_MspInit+0xe6>
    {
      Error_Handler();
 8000bc6:	f7ff fe0d 	bl	80007e4 <Error_Handler>
    }

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 7, 0);
 8000bca:	208c      	movs	r0, #140	@ 0x8c
 8000bcc:	2200      	movs	r2, #0
 8000bce:	2107      	movs	r1, #7
 8000bd0:	f003 f896 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
 8000bd4:	208c      	movs	r0, #140	@ 0x8c
 8000bd6:	f003 f8c3 	bl	8003d60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
 8000bda:	b004      	add	sp, #16
 8000bdc:	bd70      	pop	{r4, r5, r6, pc}
 8000bde:	bf00      	nop
 8000be0:	4002a000 	.word	0x4002a000
 8000be4:	46020c00 	.word	0x46020c00
 8000be8:	200003ec 	.word	0x200003ec
 8000bec:	400200d0 	.word	0x400200d0
 8000bf0:	20000374 	.word	0x20000374
 8000bf4:	40020050 	.word	0x40020050

08000bf8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bfa:	2514      	movs	r5, #20
{
 8000bfc:	4604      	mov	r4, r0
 8000bfe:	b0c3      	sub	sp, #268	@ 0x10c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c00:	462a      	mov	r2, r5
 8000c02:	2100      	movs	r1, #0
 8000c04:	eb0d 0005 	add.w	r0, sp, r5
 8000c08:	f031 fe5d 	bl	80328c6 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000c0c:	22e0      	movs	r2, #224	@ 0xe0
 8000c0e:	2100      	movs	r1, #0
 8000c10:	a80a      	add	r0, sp, #40	@ 0x28
 8000c12:	f031 fe58 	bl	80328c6 <memset>
  if(hltdc->Instance==LTDC)
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	4b57      	ldr	r3, [pc, #348]	@ (8000d78 <HAL_LTDC_MspInit+0x180>)
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	f040 80a9 	bne.w	8000d72 <HAL_LTDC_MspInit+0x17a>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000c20:	2200      	movs	r2, #0
 8000c22:	2302      	movs	r3, #2
 8000c24:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    PeriphClkInit.LtdcClockSelection = RCC_LTDCCLKSOURCE_PLL3;
    PeriphClkInit.PLL3.PLL3Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c28:	2304      	movs	r3, #4
 8000c2a:	2203      	movs	r2, #3
    PeriphClkInit.PLL3.PLL3N = 125;
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c2c:	217d      	movs	r1, #125	@ 0x7d
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c2e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c32:	2308      	movs	r3, #8
 8000c34:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
    PeriphClkInit.PLL3.PLL3Q = 2;
 8000c38:	2302      	movs	r3, #2
    PeriphClkInit.PLL3.PLL3R = 20;
 8000c3a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
    PeriphClkInit.PLL3.PLL3RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL3.PLL3FRACN = 0;
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c3e:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c42:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c44:	931d      	str	r3, [sp, #116]	@ 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c46:	f006 fc9f 	bl	8007588 <HAL_RCCEx_PeriphCLKConfig>
 8000c4a:	b108      	cbz	r0, 8000c50 <HAL_LTDC_MspInit+0x58>
    {
      Error_Handler();
 8000c4c:	f7ff fdca 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c50:	4b4a      	ldr	r3, [pc, #296]	@ (8000d7c <HAL_LTDC_MspInit+0x184>)
    PB9     ------> LTDC_B0
    PE0     ------> LTDC_HSYNC
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c52:	2400      	movs	r4, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c54:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c58:	2502      	movs	r5, #2
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c5a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000c5e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8000c62:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000c66:	2608      	movs	r6, #8
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c68:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000c6c:	9200      	str	r2, [sp, #0]
 8000c6e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c70:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c74:	4842      	ldr	r0, [pc, #264]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c76:	f042 0202 	orr.w	r2, r2, #2
 8000c7a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c7e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c82:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c84:	f002 0202 	and.w	r2, r2, #2
 8000c88:	9201      	str	r2, [sp, #4]
 8000c8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c8c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000c90:	2707      	movs	r7, #7
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c92:	f042 0210 	orr.w	r2, r2, #16
 8000c96:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c9a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000c9e:	f002 0210 	and.w	r2, r2, #16
 8000ca2:	9202      	str	r2, [sp, #8]
 8000ca4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ca6:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000caa:	f042 0208 	orr.w	r2, r2, #8
 8000cae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cb2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cb6:	f002 0208 	and.w	r2, r2, #8
 8000cba:	9203      	str	r2, [sp, #12]
 8000cbc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cbe:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cc2:	f042 0204 	orr.w	r2, r2, #4
 8000cc6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cce:	e9cd 4407 	strd	r4, r4, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cd2:	f003 0304 	and.w	r3, r3, #4
 8000cd6:	9304      	str	r3, [sp, #16]
 8000cd8:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cda:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cdc:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cde:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	f003 fdb1 	bl	8004848 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ce6:	f64f 7381 	movw	r3, #65409	@ 0xff81
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cea:	4826      	ldr	r0, [pc, #152]	@ (8000d84 <HAL_LTDC_MspInit+0x18c>)
 8000cec:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cee:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf2:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cf6:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cf8:	f003 fda6 	bl	8004848 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000cfc:	f64f 734b 	movw	r3, #65355	@ 0xff4b
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d00:	4821      	ldr	r0, [pc, #132]	@ (8000d88 <HAL_LTDC_MspInit+0x190>)
 8000d02:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d04:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d08:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d0c:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0e:	f003 fd9b 	bl	8004848 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d12:	23c0      	movs	r3, #192	@ 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d14:	481d      	ldr	r0, [pc, #116]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d16:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d18:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1c:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d20:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d22:	f003 fd91 	bl	8004848 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000d26:	f44f 7340 	mov.w	r3, #768	@ 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d2a:	4818      	ldr	r0, [pc, #96]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d2c:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d2e:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d32:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d36:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d38:	f003 fd86 	bl	8004848 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000d3c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d40:	480f      	ldr	r0, [pc, #60]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
 8000d42:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d44:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d48:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d4c:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d4e:	f003 fd7b 	bl	8004848 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000d52:	4622      	mov	r2, r4
 8000d54:	2105      	movs	r1, #5
 8000d56:	2087      	movs	r0, #135	@ 0x87
 8000d58:	f002 ffd2 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000d5c:	2087      	movs	r0, #135	@ 0x87
 8000d5e:	f002 ffff 	bl	8003d60 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 8000d62:	2088      	movs	r0, #136	@ 0x88
 8000d64:	4622      	mov	r2, r4
 8000d66:	2105      	movs	r1, #5
 8000d68:	f002 ffca 	bl	8003d00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000d6c:	2088      	movs	r0, #136	@ 0x88
 8000d6e:	f002 fff7 	bl	8003d60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000d72:	b043      	add	sp, #268	@ 0x10c
 8000d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d76:	bf00      	nop
 8000d78:	40016800 	.word	0x40016800
 8000d7c:	46020c00 	.word	0x46020c00
 8000d80:	42020400 	.word	0x42020400
 8000d84:	42021000 	.word	0x42021000
 8000d88:	42020c00 	.word	0x42020c00
 8000d8c:	42020800 	.word	0x42020800

08000d90 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d90:	4b1f      	ldr	r3, [pc, #124]	@ (8000e10 <HAL_InitTick+0x80>)
{
 8000d92:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d94:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
{
 8000d98:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d9a:	f042 0210 	orr.w	r2, r2, #16
 8000d9e:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8000da2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000da6:	4669      	mov	r1, sp
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000da8:	f003 0310 	and.w	r3, r3, #16
 8000dac:	9301      	str	r3, [sp, #4]
{
 8000dae:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db0:	a802      	add	r0, sp, #8

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8000db2:	4d18      	ldr	r5, [pc, #96]	@ (8000e14 <HAL_InitTick+0x84>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000db4:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db6:	f006 faed 	bl	8007394 <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000dba:	f006 fadb 	bl	8007374 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000dbe:	4b16      	ldr	r3, [pc, #88]	@ (8000e18 <HAL_InitTick+0x88>)
 8000dc0:	602b      	str	r3, [r5, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8000dc2:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000dc6:	60eb      	str	r3, [r5, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dc8:	4b14      	ldr	r3, [pc, #80]	@ (8000e1c <HAL_InitTick+0x8c>)
 8000dca:	fbb0 f0f3 	udiv	r0, r0, r3
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8000dce:	2300      	movs	r3, #0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dd0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8000dd2:	6068      	str	r0, [r5, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim6);
 8000dd4:	4628      	mov	r0, r5
  htim6.Init.ClockDivision = 0;
 8000dd6:	612b      	str	r3, [r5, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dd8:	60ab      	str	r3, [r5, #8]
  status = HAL_TIM_Base_Init(&htim6);
 8000dda:	f007 f963 	bl	80080a4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8000dde:	4604      	mov	r4, r0
 8000de0:	b968      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8000de2:	4628      	mov	r0, r5
 8000de4:	f006 ff78 	bl	8007cd8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8000de8:	4604      	mov	r4, r0
 8000dea:	b940      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000dec:	2e0f      	cmp	r6, #15
 8000dee:	d80c      	bhi.n	8000e0a <HAL_InitTick+0x7a>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8000df0:	4602      	mov	r2, r0
 8000df2:	4631      	mov	r1, r6
 8000df4:	2031      	movs	r0, #49	@ 0x31
 8000df6:	f002 ff83 	bl	8003d00 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000dfa:	4b09      	ldr	r3, [pc, #36]	@ (8000e20 <HAL_InitTick+0x90>)
 8000dfc:	601e      	str	r6, [r3, #0]
      }
    }
  }

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8000dfe:	2031      	movs	r0, #49	@ 0x31
 8000e00:	f002 ffae 	bl	8003d60 <HAL_NVIC_EnableIRQ>

 /* Return function status */
  return status;
}
 8000e04:	4620      	mov	r0, r4
 8000e06:	b008      	add	sp, #32
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
        status = HAL_ERROR;
 8000e0a:	2401      	movs	r4, #1
 8000e0c:	e7f7      	b.n	8000dfe <HAL_InitTick+0x6e>
 8000e0e:	bf00      	nop
 8000e10:	46020c00 	.word	0x46020c00
 8000e14:	20000660 	.word	0x20000660
 8000e18:	40001000 	.word	0x40001000
 8000e1c:	000f4240 	.word	0x000f4240
 8000e20:	20000054 	.word	0x20000054

08000e24 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e24:	e7fe      	b.n	8000e24 <NMI_Handler>

08000e26 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e26:	e7fe      	b.n	8000e26 <HardFault_Handler>

08000e28 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e28:	e7fe      	b.n	8000e28 <MemManage_Handler>

08000e2a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e2a:	e7fe      	b.n	8000e2a <BusFault_Handler>

08000e2c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e2c:	e7fe      	b.n	8000e2c <UsageFault_Handler>

08000e2e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e2e:	4770      	bx	lr

08000e30 <EXTI5_IRQHandler>:
void EXTI5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI5_IRQn 0 */

  /* USER CODE END EXTI5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8000e30:	2020      	movs	r0, #32
 8000e32:	f003 be2d 	b.w	8004a90 <HAL_GPIO_EXTI_IRQHandler>
	...

08000e38 <GPDMA1_Channel0_IRQHandler>:
void GPDMA1_Channel0_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8000e38:	4801      	ldr	r0, [pc, #4]	@ (8000e40 <GPDMA1_Channel0_IRQHandler+0x8>)
 8000e3a:	f003 bad6 	b.w	80043ea <HAL_DMA_IRQHandler>
 8000e3e:	bf00      	nop
 8000e40:	20000374 	.word	0x20000374

08000e44 <GPDMA1_Channel1_IRQHandler>:
void GPDMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel1_IRQn 0 */

  /* USER CODE END GPDMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel1);
 8000e44:	4801      	ldr	r0, [pc, #4]	@ (8000e4c <GPDMA1_Channel1_IRQHandler+0x8>)
 8000e46:	f003 bad0 	b.w	80043ea <HAL_DMA_IRQHandler>
 8000e4a:	bf00      	nop
 8000e4c:	200003ec 	.word	0x200003ec

08000e50 <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000e50:	4801      	ldr	r0, [pc, #4]	@ (8000e58 <TIM6_IRQHandler+0x8>)
 8000e52:	f006 bf9f 	b.w	8007d94 <HAL_TIM_IRQHandler>
 8000e56:	bf00      	nop
 8000e58:	20000660 	.word	0x20000660

08000e5c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8000e5c:	4801      	ldr	r0, [pc, #4]	@ (8000e64 <DMA2D_IRQHandler+0x8>)
 8000e5e:	f003 bbe2 	b.w	8004626 <HAL_DMA2D_IRQHandler>
 8000e62:	bf00      	nop
 8000e64:	2000057c 	.word	0x2000057c

08000e68 <HSPI1_IRQHandler>:
void HSPI1_IRQHandler(void)
{
  /* USER CODE BEGIN HSPI1_IRQn 0 */

  /* USER CODE END HSPI1_IRQn 0 */
  HAL_XSPI_IRQHandler(&hxspi1);
 8000e68:	4801      	ldr	r0, [pc, #4]	@ (8000e70 <HSPI1_IRQHandler+0x8>)
 8000e6a:	f007 bcc5 	b.w	80087f8 <HAL_XSPI_IRQHandler>
 8000e6e:	bf00      	nop
 8000e70:	20000510 	.word	0x20000510

08000e74 <GPU2D_IRQHandler>:
void GPU2D_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_IRQn 0 */

  /* USER CODE END GPU2D_IRQn 0 */
  HAL_GPU2D_IRQHandler(&hgpu2d);
 8000e74:	4801      	ldr	r0, [pc, #4]	@ (8000e7c <GPU2D_IRQHandler+0x8>)
 8000e76:	f003 be3a 	b.w	8004aee <HAL_GPU2D_IRQHandler>
 8000e7a:	bf00      	nop
 8000e7c:	20000570 	.word	0x20000570

08000e80 <GPU2D_ER_IRQHandler>:
void GPU2D_ER_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_ER_IRQn 0 */

  /* USER CODE END GPU2D_ER_IRQn 0 */
  HAL_GPU2D_ER_IRQHandler(&hgpu2d);
 8000e80:	4801      	ldr	r0, [pc, #4]	@ (8000e88 <GPU2D_ER_IRQHandler+0x8>)
 8000e82:	f003 be47 	b.w	8004b14 <HAL_GPU2D_ER_IRQHandler>
 8000e86:	bf00      	nop
 8000e88:	20000570 	.word	0x20000570

08000e8c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8000e8c:	4801      	ldr	r0, [pc, #4]	@ (8000e94 <LTDC_IRQHandler+0x8>)
 8000e8e:	f005 baa3 	b.w	80063d8 <HAL_LTDC_IRQHandler>
 8000e92:	bf00      	nop
 8000e94:	200002cc 	.word	0x200002cc

08000e98 <LTDC_ER_IRQHandler>:
}

/**
  * @brief This function handles LCD-TFT Error interrupt.
  */
void LTDC_ER_IRQHandler(void)
 8000e98:	f7ff bff8 	b.w	8000e8c <LTDC_IRQHandler>

08000e9c <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
 8000e9c:	4801      	ldr	r0, [pc, #4]	@ (8000ea4 <JPEG_IRQHandler+0x8>)
 8000e9e:	f005 b94e 	b.w	800613e <HAL_JPEG_IRQHandler>
 8000ea2:	bf00      	nop
 8000ea4:	20000464 	.word	0x20000464

08000ea8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	4770      	bx	lr

08000eac <_kill>:

int _kill(int pid, int sig)
{
 8000eac:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000eae:	f031 fdbf 	bl	8032a30 <__errno>
 8000eb2:	2316      	movs	r3, #22
 8000eb4:	6003      	str	r3, [r0, #0]
  return -1;
}
 8000eb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000eba:	bd08      	pop	{r3, pc}

08000ebc <_exit>:

void _exit (int status)
{
 8000ebc:	b508      	push	{r3, lr}
  errno = EINVAL;
 8000ebe:	f031 fdb7 	bl	8032a30 <__errno>
 8000ec2:	2316      	movs	r3, #22
 8000ec4:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8000ec6:	e7fe      	b.n	8000ec6 <_exit+0xa>

08000ec8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	460d      	mov	r5, r1
 8000ecc:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ece:	460e      	mov	r6, r1
 8000ed0:	1b73      	subs	r3, r6, r5
 8000ed2:	429c      	cmp	r4, r3
 8000ed4:	dc01      	bgt.n	8000eda <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8000eda:	f3af 8000 	nop.w
 8000ede:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ee2:	e7f5      	b.n	8000ed0 <_read+0x8>

08000ee4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460d      	mov	r5, r1
 8000ee8:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000eea:	460e      	mov	r6, r1
 8000eec:	1b73      	subs	r3, r6, r5
 8000eee:	429c      	cmp	r4, r3
 8000ef0:	dc01      	bgt.n	8000ef6 <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8000ef6:	f816 0b01 	ldrb.w	r0, [r6], #1
 8000efa:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000efe:	e7f5      	b.n	8000eec <_write+0x8>

08000f00 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000f00:	f04f 30ff 	mov.w	r0, #4294967295
 8000f04:	4770      	bx	lr

08000f06 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000f06:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 8000f0a:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8000f0c:	604b      	str	r3, [r1, #4]
}
 8000f0e:	4770      	bx	lr

08000f10 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000f10:	2001      	movs	r0, #1
 8000f12:	4770      	bx	lr

08000f14 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000f14:	2000      	movs	r0, #0
 8000f16:	4770      	bx	lr

08000f18 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f18:	4a0b      	ldr	r2, [pc, #44]	@ (8000f48 <_sbrk+0x30>)
{
 8000f1a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8000f1c:	6811      	ldr	r1, [r2, #0]
{
 8000f1e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8000f20:	b909      	cbnz	r1, 8000f26 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8000f22:	490a      	ldr	r1, [pc, #40]	@ (8000f4c <_sbrk+0x34>)
 8000f24:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f26:	6810      	ldr	r0, [r2, #0]
 8000f28:	4909      	ldr	r1, [pc, #36]	@ (8000f50 <_sbrk+0x38>)
 8000f2a:	4c0a      	ldr	r4, [pc, #40]	@ (8000f54 <_sbrk+0x3c>)
 8000f2c:	4403      	add	r3, r0
 8000f2e:	1b09      	subs	r1, r1, r4
 8000f30:	428b      	cmp	r3, r1
 8000f32:	d906      	bls.n	8000f42 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8000f34:	f031 fd7c 	bl	8032a30 <__errno>
 8000f38:	230c      	movs	r3, #12
 8000f3a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8000f40:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8000f42:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8000f44:	e7fc      	b.n	8000f40 <_sbrk+0x28>
 8000f46:	bf00      	nop
 8000f48:	200006ac 	.word	0x200006ac
 8000f4c:	200836e0 	.word	0x200836e0
 8000f50:	202f0000 	.word	0x202f0000
 8000f54:	00001000 	.word	0x00001000

08000f58 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8000f58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000f90 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f5c:	f002 fe46 	bl	8003bec <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8000f60:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8000f62:	e003      	b.n	8000f6c <LoopCopyDataInit>

08000f64 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8000f64:	4b0b      	ldr	r3, [pc, #44]	@ (8000f94 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8000f66:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8000f68:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8000f6a:	3104      	adds	r1, #4

08000f6c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8000f6c:	480a      	ldr	r0, [pc, #40]	@ (8000f98 <LoopForever+0xa>)
	ldr	r3, =_edata
 8000f6e:	4b0b      	ldr	r3, [pc, #44]	@ (8000f9c <LoopForever+0xe>)
	adds	r2, r0, r1
 8000f70:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000f72:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000f74:	d3f6      	bcc.n	8000f64 <CopyDataInit>
	ldr	r2, =_sbss
 8000f76:	4a0a      	ldr	r2, [pc, #40]	@ (8000fa0 <LoopForever+0x12>)
	b	LoopFillZerobss
 8000f78:	e002      	b.n	8000f80 <LoopFillZerobss>

08000f7a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8000f7a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8000f7c:	f842 3b04 	str.w	r3, [r2], #4

08000f80 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000f80:	4b08      	ldr	r3, [pc, #32]	@ (8000fa4 <LoopForever+0x16>)
	cmp	r2, r3
 8000f82:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000f84:	d3f9      	bcc.n	8000f7a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000f86:	f031 fd59 	bl	8032a3c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8000f8a:	f7ff f9fd 	bl	8000388 <main>

08000f8e <LoopForever>:

LoopForever:
    b LoopForever
 8000f8e:	e7fe      	b.n	8000f8e <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8000f90:	202f0000 	.word	0x202f0000
	ldr	r3, =_sidata
 8000f94:	08038888 	.word	0x08038888
	ldr	r0, =_sdata
 8000f98:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8000f9c:	200002a8 	.word	0x200002a8
	ldr	r2, =_sbss
 8000fa0:	200002a8 	.word	0x200002a8
	ldr	r3, = _ebss
 8000fa4:	200836e0 	.word	0x200836e0

08000fa8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000fa8:	e7fe      	b.n	8000fa8 <ADC1_2_IRQHandler>

08000faa <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000faa:	4770      	bx	lr

08000fac <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000fac:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000fae:	f001 fb6b 	bl	8002688 <touchgfx_components_init>
    touchgfx_init();
}
 8000fb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000fb6:	f001 baed 	b.w	8002594 <touchgfx_init>

08000fba <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000fba:	f001 bb75 	b.w	80026a8 <touchgfx_taskEntry>

08000fbe <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000fbe:	6840      	ldr	r0, [r0, #4]
    }
 8000fc0:	4770      	bx	lr

08000fc2 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000fc2:	6041      	str	r1, [r0, #4]
    }
 8000fc4:	4770      	bx	lr
	...

08000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000fc8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8000fcc:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8000fd0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000fd4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000fd8:	4b05      	ldr	r3, [pc, #20]	@ (8000ff0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000fda:	4a06      	ldr	r2, [pc, #24]	@ (8000ff4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000fdc:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8000fe0:	430a      	orrs	r2, r1
 8000fe2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000fe6:	681a      	ldr	r2, [r3, #0]
 8000fe8:	f042 0201 	orr.w	r2, r2, #1
 8000fec:	601a      	str	r2, [r3, #0]
}
 8000fee:	4770      	bx	lr
 8000ff0:	e0001000 	.word	0xe0001000
 8000ff4:	c5acce55 	.word	0xc5acce55

08000ff8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000ff8:	1a52      	subs	r2, r2, r1
 8000ffa:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8000ffe:	fbb2 f0f3 	udiv	r0, r2, r3
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001004:	4b01      	ldr	r3, [pc, #4]	@ (800100c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001006:	6858      	ldr	r0, [r3, #4]
}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	e0001000 	.word	0xe0001000

08001010 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001010:	4770      	bx	lr

08001012 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001012:	b510      	push	{r4, lr}
 8001014:	4604      	mov	r4, r0
 8001016:	210c      	movs	r1, #12
 8001018:	f030 f875 	bl	8031106 <_ZdlPvj>
 800101c:	4620      	mov	r0, r4
 800101e:	bd10      	pop	{r4, pc}

08001020 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001020:	6803      	ldr	r3, [r0, #0]
{
 8001022:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001024:	691b      	ldr	r3, [r3, #16]
{
 8001026:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001028:	b131      	cbz	r1, 8001038 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800102a:	4798      	blx	r3
 800102c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800102e:	6863      	ldr	r3, [r4, #4]
 8001030:	1a9b      	subs	r3, r3, r2
 8001032:	4403      	add	r3, r0
 8001034:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001036:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001038:	4798      	blx	r3
 800103a:	60a0      	str	r0, [r4, #8]
}
 800103c:	e7fb      	b.n	8001036 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800103e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800103e:	4770      	bx	lr

08001040 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001040:	4770      	bx	lr

08001042 <_ZN8touchgfx10KeySampler4initEv>:

using namespace touchgfx;

void KeySampler::init()
{
}
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001044:	b510      	push	{r4, lr}
    bool buttonPressed = false;
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 8001046:	4805      	ldr	r0, [pc, #20]	@ (800105c <_ZN8touchgfx10KeySampler6sampleERh+0x18>)
{
 8001048:	460c      	mov	r4, r1
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 800104a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800104e:	f003 fd09 	bl	8004a64 <HAL_GPIO_ReadPin>
 8001052:	b108      	cbz	r0, 8001058 <_ZN8touchgfx10KeySampler6sampleERh+0x14>
    {
        buttonPressed = true;
        key = 1; // This is the "hardware button key" reffered in the TouchGFX Designer Interactions
 8001054:	2001      	movs	r0, #1
 8001056:	7020      	strb	r0, [r4, #0]
    }
    return buttonPressed;
}
 8001058:	bd10      	pop	{r4, pc}
 800105a:	bf00      	nop
 800105c:	42020800 	.word	0x42020800

08001060 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001060:	b510      	push	{r4, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	2108      	movs	r1, #8
 8001066:	f030 f84e 	bl	8031106 <_ZdlPvj>
 800106a:	4620      	mov	r0, r4
 800106c:	bd10      	pop	{r4, pc}

0800106e <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
    // No init needed
}
 800106e:	4770      	bx	lr

08001070 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001070:	4770      	bx	lr

08001072 <_ZN20STM32TouchControllerD0Ev>:
 8001072:	b510      	push	{r4, lr}
 8001074:	4604      	mov	r4, r0
 8001076:	2104      	movs	r1, #4
 8001078:	f030 f845 	bl	8031106 <_ZdlPvj>
 800107c:	4620      	mov	r0, r4
 800107e:	bd10      	pop	{r4, pc}

08001080 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4615      	mov	r5, r2
    uint8_t touches = 0;
    uint8_t buf[6];
    const uint16_t STATUS_REG = 0x814E;
    const uint16_t TOUCH_POS_REG = 0x8150;
    uint8_t ZERO = 0;
 8001086:	f04f 0a00 	mov.w	sl, #0
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800108a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800108e:	4b28      	ldr	r3, [pc, #160]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
{
 8001090:	b089      	sub	sp, #36	@ 0x24
    uint8_t ZERO = 0;
 8001092:	f88d a017 	strb.w	sl, [sp, #23]
{
 8001096:	460e      	mov	r6, r1
 8001098:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  __ASM volatile ("dsb 0xF":::"memory");
 800109c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010a0:	f3bf 8f6f 	isb	sy

    NVIC_DisableIRQ(EXTI5_IRQn);
    if (doSampleTouch)
 80010a4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001138 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb8>
 80010a8:	f899 3000 	ldrb.w	r3, [r9]
 80010ac:	b30b      	cbz	r3, 80010f2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x72>
    {
        HAL_I2C_Mem_Read(&hi2c2, 0xBA, STATUS_REG, 2, buf, 1, HAL_MAX_DELAY);
 80010ae:	f04f 0b01 	mov.w	fp, #1
 80010b2:	f04f 38ff 	mov.w	r8, #4294967295
 80010b6:	af06      	add	r7, sp, #24
 80010b8:	2302      	movs	r3, #2
 80010ba:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010be:	21ba      	movs	r1, #186	@ 0xba
 80010c0:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010c4:	481b      	ldr	r0, [pc, #108]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 80010c6:	9700      	str	r7, [sp, #0]
 80010c8:	f003 ff8a 	bl	8004fe0 <HAL_I2C_Mem_Read>
        touches = (0x0F & buf[0]);
 80010cc:	f89d 4018 	ldrb.w	r4, [sp, #24]

        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010d0:	f10d 0317 	add.w	r3, sp, #23
 80010d4:	9300      	str	r3, [sp, #0]
 80010d6:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010da:	2302      	movs	r3, #2
 80010dc:	21ba      	movs	r1, #186	@ 0xba
 80010de:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010e2:	4814      	ldr	r0, [pc, #80]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
        touches = (0x0F & buf[0]);
 80010e4:	f004 040f 	and.w	r4, r4, #15
        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010e8:	f003 fea0 	bl	8004e2c <HAL_I2C_Mem_Write>

        doSampleTouch = false;
 80010ec:	f889 a000 	strb.w	sl, [r9]

        if (touches > 0)
 80010f0:	b954      	cbnz	r4, 8001108 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>
    uint8_t touches = 0;
 80010f2:	2400      	movs	r4, #0
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010f4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80010f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
 80010fa:	601a      	str	r2, [r3, #0]
        }
    }
    NVIC_EnableIRQ(EXTI5_IRQn);

    return (touches > 0);
}
 80010fc:	1e20      	subs	r0, r4, #0
 80010fe:	bf18      	it	ne
 8001100:	2001      	movne	r0, #1
 8001102:	b009      	add	sp, #36	@ 0x24
 8001104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            HAL_I2C_Mem_Read(&hi2c2, 0xBA, TOUCH_POS_REG, 2, buf, 4, HAL_MAX_DELAY);
 8001108:	2304      	movs	r3, #4
 800110a:	f248 1250 	movw	r2, #33104	@ 0x8150
 800110e:	e9cd 7300 	strd	r7, r3, [sp]
 8001112:	21ba      	movs	r1, #186	@ 0xba
 8001114:	2302      	movs	r3, #2
 8001116:	4807      	ldr	r0, [pc, #28]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 8001118:	f8cd 8008 	str.w	r8, [sp, #8]
 800111c:	f003 ff60 	bl	8004fe0 <HAL_I2C_Mem_Read>
            x = buf[0] + (buf[1] << 8);
 8001120:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8001124:	6033      	str	r3, [r6, #0]
            y = buf[2] + (buf[3] << 8);
 8001126:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800112a:	602b      	str	r3, [r5, #0]
 800112c:	e7e2      	b.n	80010f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x74>
 800112e:	bf00      	nop
 8001130:	e000e100 	.word	0xe000e100
 8001134:	200004bc 	.word	0x200004bc
 8001138:	200006b0 	.word	0x200006b0

0800113c <HAL_GPIO_EXTI_Falling_Callback>:
        if (GPIO_Pin == TP_IRQ_Pin)
 800113c:	2820      	cmp	r0, #32
            doSampleTouch = true;
 800113e:	bf02      	ittt	eq
 8001140:	2201      	moveq	r2, #1
 8001142:	4b01      	ldreq	r3, [pc, #4]	@ (8001148 <HAL_GPIO_EXTI_Falling_Callback+0xc>)
 8001144:	701a      	strbeq	r2, [r3, #0]
    }
 8001146:	4770      	bx	lr
 8001148:	200006b0 	.word	0x200006b0

0800114c <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 800114c:	4770      	bx	lr
	...

08001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001150:	2803      	cmp	r0, #3
 8001152:	d814      	bhi.n	800117e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
 8001154:	e8df f000 	tbb	[pc, r0]
 8001158:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
 800115c:	2201      	movs	r2, #1
 800115e:	4611      	mov	r1, r2
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001160:	4807      	ldr	r0, [pc, #28]	@ (8001180 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8001162:	f003 bc85 	b.w	8004a70 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001166:	2201      	movs	r2, #1
 8001168:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800116c:	e7f8      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
 800116e:	2201      	movs	r2, #1
 8001170:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001174:	e7f4      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001176:	2201      	movs	r2, #1
 8001178:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800117c:	e7f0      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 800117e:	4770      	bx	lr
 8001180:	42020800 	.word	0x42020800

08001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001184:	2803      	cmp	r0, #3
 8001186:	d814      	bhi.n	80011b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 8001188:	e8df f000 	tbb	[pc, r0]
 800118c:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001190:	2200      	movs	r2, #0
 8001192:	2101      	movs	r1, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001194:	4807      	ldr	r0, [pc, #28]	@ (80011b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8001196:	f003 bc6b 	b.w	8004a70 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800119a:	2200      	movs	r2, #0
 800119c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011a0:	e7f8      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80011a2:	2200      	movs	r2, #0
 80011a4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011a8:	e7f4      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011aa:	2200      	movs	r2, #0
 80011ac:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011b0:	e7f0      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80011b2:	4770      	bx	lr
 80011b4:	42020800 	.word	0x42020800

080011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80011b8:	2803      	cmp	r0, #3
 80011ba:	d810      	bhi.n	80011de <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x26>
 80011bc:	e8df f000 	tbb	[pc, r0]
 80011c0:	0c090602 	.word	0x0c090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80011c4:	2101      	movs	r1, #1
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011c6:	4806      	ldr	r0, [pc, #24]	@ (80011e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80011c8:	f003 bc57 	b.w	8004a7a <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80011cc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011d0:	e7f9      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80011d2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011d6:	e7f6      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011dc:	e7f3      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80011de:	4770      	bx	lr
 80011e0:	42020800 	.word	0x42020800

080011e4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80011e4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80011e6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80011ea:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80011ee:	4770      	bx	lr

080011f0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80011f0:	2000      	movs	r0, #0
 80011f2:	4770      	bx	lr

080011f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80011f4:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011f6:	3900      	subs	r1, #0
 80011f8:	bf18      	it	ne
 80011fa:	2101      	movne	r1, #1
 80011fc:	4b01      	ldr	r3, [pc, #4]	@ (8001204 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80011fe:	7019      	strb	r1, [r3, #0]
    }
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	20082ec3 	.word	0x20082ec3

08001208 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001208:	2000      	movs	r0, #0
 800120a:	4770      	bx	lr

0800120c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800120c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800120e:	b10b      	cbz	r3, 8001214 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001210:	4608      	mov	r0, r1
 8001212:	4718      	bx	r3
        }
    }
 8001214:	4770      	bx	lr

08001216 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001216:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800121c:	6840      	ldr	r0, [r0, #4]
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	699b      	ldr	r3, [r3, #24]
 8001222:	4718      	bx	r3

08001224 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001224:	4770      	bx	lr

08001226 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001226:	4770      	bx	lr

08001228 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001228:	4770      	bx	lr
	...

0800122c <_ZN11TouchGFXHAL10initializeEv>:

KeySampler btnctrl;


void TouchGFXHAL::initialize()
{
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4604      	mov	r4, r0
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
    instrumentation.init();
 8001230:	f104 05a8 	add.w	r5, r4, #168	@ 0xa8
    TouchGFXGeneratedHAL::initialize();
 8001234:	f001 fac4 	bl	80027c0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
 8001238:	4628      	mov	r0, r5
 800123a:	f7ff fec5 	bl	8000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800123e:	2301      	movs	r3, #1
 8001240:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
        buttonController = btnCtrl;
 8001244:	4b01      	ldr	r3, [pc, #4]	@ (800124c <_ZN11TouchGFXHAL10initializeEv+0x20>)
        mcuInstrumentation = mcuInstr;
 8001246:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8001248:	6163      	str	r3, [r4, #20]
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
    setButtonController(&btnctrl);

}
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	200006b4 	.word	0x200006b4

08001250 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001250:	f001 ba96 	b.w	8002780 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001254 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001254:	f001 ba9a 	b.w	800278c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001258 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001258:	f001 bb64 	b.w	8002924 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800125c <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800125c:	f001 bb64 	b.w	8002928 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001260 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001260:	f001 ba68 	b.w	8002734 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001264 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001264:	f001 bcce 	b.w	8002c04 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001268 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001268:	f001 bcb2 	b.w	8002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800126c:	f001 ba6e 	b.w	800274c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001270 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 8001270:	f001 bb54 	b.w	800291c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

08001274 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    TouchGFXGeneratedHAL::endFrame();
 8001274:	f001 bb54 	b.w	8002920 <_ZN20TouchGFXGeneratedHAL8endFrameEv>

08001278 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001278:	b510      	push	{r4, lr}
 800127a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800127c:	f00a fb96 	bl	800b9ac <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001280:	6823      	ldr	r3, [r4, #0]
 8001282:	4620      	mov	r0, r4
    }
 8001284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001288:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800128c:	4718      	bx	r3

0800128e <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
 800128e:	f009 bf17 	b.w	800b0c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08001292 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
 8001292:	f009 bddd 	b.w	800ae50 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001296 <_ZN11TouchGFXHALD0Ev>:
 8001296:	b510      	push	{r4, lr}
 8001298:	4604      	mov	r4, r0
 800129a:	21b4      	movs	r1, #180	@ 0xb4
 800129c:	f02f ff33 	bl	8031106 <_ZdlPvj>
 80012a0:	4620      	mov	r0, r4
 80012a2:	bd10      	pop	{r4, pc}

080012a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012a4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012a6:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80012aa:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80012ae:	4b0c      	ldr	r3, [pc, #48]	@ (80012e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80012b0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80012b2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80012b4:	d009      	beq.n	80012ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80012b6:	b93a      	cbnz	r2, 80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012b8:	490a      	ldr	r1, [pc, #40]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ba:	4a0b      	ldr	r2, [pc, #44]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012bc:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012be:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80012c0:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80012c2:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80012c6:	701a      	strb	r2, [r3, #0]
    }
 80012c8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80012ca:	2a00      	cmp	r2, #0
 80012cc:	d0fc      	beq.n	80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ce:	4a06      	ldr	r2, [pc, #24]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d0:	4904      	ldr	r1, [pc, #16]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d6:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80012d8:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80012da:	2200      	movs	r2, #0
 80012dc:	e7f3      	b.n	80012c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80012de:	bf00      	nop
 80012e0:	20082ebc 	.word	0x20082ebc
 80012e4:	20082eba 	.word	0x20082eba
 80012e8:	20082eb8 	.word	0x20082eb8

080012ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	460d      	mov	r5, r1
 80012f0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80012f2:	b935      	cbnz	r5, 8001302 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80012f4:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80012f8:	4b08      	ldr	r3, [pc, #32]	@ (800131c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80012fa:	4a09      	ldr	r2, [pc, #36]	@ (8001320 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80012fc:	4809      	ldr	r0, [pc, #36]	@ (8001324 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80012fe:	f031 f8db 	bl	80324b8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001302:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
    }
 8001306:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800130a:	3a00      	subs	r2, #0
 800130c:	bf18      	it	ne
 800130e:	2201      	movne	r2, #1
 8001310:	4b05      	ldr	r3, [pc, #20]	@ (8001328 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001312:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001314:	6803      	ldr	r3, [r0, #0]
 8001316:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800131a:	4718      	bx	r3
 800131c:	080336e4 	.word	0x080336e4
 8001320:	0803371c 	.word	0x0803371c
 8001324:	0803376a 	.word	0x0803376a
 8001328:	20082ec2 	.word	0x20082ec2

0800132c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800132c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800132e:	4b09      	ldr	r3, [pc, #36]	@ (8001354 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001330:	881b      	ldrh	r3, [r3, #0]
 8001332:	428b      	cmp	r3, r1
 8001334:	d803      	bhi.n	800133e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001336:	4b08      	ldr	r3, [pc, #32]	@ (8001358 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	4293      	cmp	r3, r2
 800133c:	d905      	bls.n	800134a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800133e:	219e      	movs	r1, #158	@ 0x9e
 8001340:	4b06      	ldr	r3, [pc, #24]	@ (800135c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001342:	4a07      	ldr	r2, [pc, #28]	@ (8001360 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001344:	4807      	ldr	r0, [pc, #28]	@ (8001364 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001346:	f031 f8b7 	bl	80324b8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800134a:	4b07      	ldr	r3, [pc, #28]	@ (8001368 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800134c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800134e:	4b07      	ldr	r3, [pc, #28]	@ (800136c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001350:	801a      	strh	r2, [r3, #0]
    }
 8001352:	bd08      	pop	{r3, pc}
 8001354:	20082eb8 	.word	0x20082eb8
 8001358:	20082eba 	.word	0x20082eba
 800135c:	080337af 	.word	0x080337af
 8001360:	08033812 	.word	0x08033812
 8001364:	0803376a 	.word	0x0803376a
 8001368:	20082ebe 	.word	0x20082ebe
 800136c:	20082ec0 	.word	0x20082ec0

08001370 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001370:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001372:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001376:	b118      	cbz	r0, 8001380 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001378:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800137a:	6803      	ldr	r3, [r0, #0]
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4718      	bx	r3
    }
 8001380:	4770      	bx	lr
	...

08001384 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001384:	4601      	mov	r1, r0
 8001386:	b508      	push	{r3, lr}
        return instance;
 8001388:	4b03      	ldr	r3, [pc, #12]	@ (8001398 <IdleTaskHook+0x14>)
 800138a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800138c:	b101      	cbz	r1, 8001390 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800138e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001390:	f00a fb26 	bl	800b9e0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001394:	2001      	movs	r0, #1
 8001396:	bd08      	pop	{r3, pc}
 8001398:	20082ec4 	.word	0x20082ec4

0800139c <_GLOBAL__sub_I_btnctrl>:
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 800139c:	4802      	ldr	r0, [pc, #8]	@ (80013a8 <_GLOBAL__sub_I_btnctrl+0xc>)
 800139e:	4b03      	ldr	r3, [pc, #12]	@ (80013ac <_GLOBAL__sub_I_btnctrl+0x10>)
 80013a0:	6003      	str	r3, [r0, #0]
        init();
 80013a2:	f7ff be4e 	b.w	8001042 <_ZN8touchgfx10KeySampler4initEv>
 80013a6:	bf00      	nop
 80013a8:	200006b4 	.word	0x200006b4
 80013ac:	080336b8 	.word	0x080336b8

080013b0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
 80013b0:	6940      	ldr	r0, [r0, #20]
 80013b2:	4770      	bx	lr

080013b4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
 80013b4:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
 80013b8:	4770      	bx	lr

080013ba <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
 80013ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80013bc:	b923      	cbnz	r3, 80013c8 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0xe>
 80013be:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80013c0:	3800      	subs	r0, #0
 80013c2:	bf18      	it	ne
 80013c4:	2001      	movne	r0, #1
 80013c6:	4770      	bx	lr
 80013c8:	2001      	movs	r0, #1
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
 80013cc:	6880      	ldr	r0, [r0, #8]
 80013ce:	4770      	bx	lr

080013d0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
 80013d0:	4770      	bx	lr

080013d2 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
 80013d2:	b510      	push	{r4, lr}
 80013d4:	460c      	mov	r4, r1
    *data = videoInfo;
 80013d6:	3004      	adds	r0, #4
 80013d8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80013da:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
 80013e0:	4770      	bx	lr
	...

080013e4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
 80013e4:	b508      	push	{r3, lr}
    assert(0);
 80013e6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80013ea:	4b02      	ldr	r3, [pc, #8]	@ (80013f4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
 80013ec:	4a02      	ldr	r2, [pc, #8]	@ (80013f8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
 80013ee:	4803      	ldr	r0, [pc, #12]	@ (80013fc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
 80013f0:	f031 f862 	bl	80324b8 <__assert_func>
 80013f4:	08034d95 	.word	0x08034d95
 80013f8:	08033930 	.word	0x08033930
 80013fc:	0803398b 	.word	0x0803398b

08001400 <_ZN20HardwareMJPEGDecoderD0Ev>:
 8001400:	b510      	push	{r4, lr}
 8001402:	4604      	mov	r4, r0
 8001404:	2148      	movs	r1, #72	@ 0x48
 8001406:	f02f fe7e 	bl	8031106 <_ZdlPvj>
 800140a:	4620      	mov	r0, r4
 800140c:	bd10      	pop	{r4, pc}
	...

08001410 <_ZN20HardwareMJPEGDecoderC1Ev>:
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 8001410:	2200      	movs	r2, #0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001412:	4b0e      	ldr	r3, [pc, #56]	@ (800144c <_ZN20HardwareMJPEGDecoderC1Ev+0x3c>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001414:	b510      	push	{r4, lr}
    semDecodingDone = SEM_CREATE();
 8001416:	4611      	mov	r1, r2
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001418:	4604      	mov	r4, r0
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 800141a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800141e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8001422:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001426:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 800142a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
    videoInfo.frame_width = 0;
 800142e:	e9c0 2203 	strd	r2, r2, [r0, #12]
    videoInfo.number_of_frames = 0;
 8001432:	e9c0 2201 	strd	r2, r2, [r0, #4]
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001436:	6003      	str	r3, [r0, #0]
 8001438:	63c2      	str	r2, [r0, #60]	@ 0x3c
 800143a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    semDecodingDone = SEM_CREATE();
 800143e:	2001      	movs	r0, #1
 8001440:	f007 fb41 	bl	8008ac6 <osSemaphoreNew>
 8001444:	4b02      	ldr	r3, [pc, #8]	@ (8001450 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
 8001446:	6018      	str	r0, [r3, #0]
}
 8001448:	4620      	mov	r0, r4
 800144a:	bd10      	pop	{r4, pc}
 800144c:	08033bcc 	.word	0x08033bcc
 8001450:	20000704 	.word	0x20000704

08001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>:
{
 8001454:	b410      	push	{r4}
 8001456:	460c      	mov	r4, r1
 8001458:	4611      	mov	r1, r2
 800145a:	461a      	mov	r2, r3
    if (reader != 0)
 800145c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800145e:	b13b      	cbz	r3, 8001470 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x1c>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
 8001460:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8001462:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8001464:	1ae4      	subs	r4, r4, r3
        src = (const char*)movieData + offset;
 8001466:	4420      	add	r0, r4
}
 8001468:	f85d 4b04 	ldr.w	r4, [sp], #4
    return strncmp(src, str, num);
 800146c:	f031 ba33 	b.w	80328d6 <strncmp>
        src = (const char*)movieData + offset;
 8001470:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8001472:	e7f8      	b.n	8001466 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x12>

08001474 <_ZN20HardwareMJPEGDecoder6getU32Em>:
    if (reader != 0)
 8001474:	6b03      	ldr	r3, [r0, #48]	@ 0x30
{
 8001476:	b510      	push	{r4, lr}
    if (reader != 0)
 8001478:	b173      	cbz	r3, 8001498 <_ZN20HardwareMJPEGDecoder6getU32Em+0x24>
        const uint32_t index = offset - aviBufferStartOffset;
 800147a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 800147c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
 800147e:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 8001480:	1853      	adds	r3, r2, r1
 8001482:	7898      	ldrb	r0, [r3, #2]
 8001484:	785c      	ldrb	r4, [r3, #1]
 8001486:	0400      	lsls	r0, r0, #16
 8001488:	5c52      	ldrb	r2, [r2, r1]
 800148a:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
        val |= d[3] << 24;
 800148e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
 8001490:	4310      	orrs	r0, r2
        val |= d[3] << 24;
 8001492:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
}
 8001496:	bd10      	pop	{r4, pc}
        volatile const uint8_t* const d = movieData + offset;
 8001498:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800149a:	1853      	adds	r3, r2, r1
        val |= d[0];
 800149c:	5c52      	ldrb	r2, [r2, r1]
        val |= d[1] << 8;
 800149e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
 80014a0:	7898      	ldrb	r0, [r3, #2]
 80014a2:	0400      	lsls	r0, r0, #16
 80014a4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80014a8:	e7f1      	b.n	800148e <_ZN20HardwareMJPEGDecoder6getU32Em+0x1a>

080014aa <_ZN20HardwareMJPEGDecoder6getU16Em>:
    if (reader != 0)
 80014aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80014ac:	b143      	cbz	r3, 80014c0 <_ZN20HardwareMJPEGDecoder6getU16Em+0x16>
        const uint32_t index = offset - aviBufferStartOffset;
 80014ae:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80014b0:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
 80014b2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80014b4:	185a      	adds	r2, r3, r1
 80014b6:	7852      	ldrb	r2, [r2, #1]
 80014b8:	5c58      	ldrb	r0, [r3, r1]
 80014ba:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80014be:	4770      	bx	lr
        volatile const uint8_t* const d = movieData + offset;
 80014c0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80014c2:	185a      	adds	r2, r3, r1
        val |= d[0];
 80014c4:	5c58      	ldrb	r0, [r3, r1]
        val |= d[1] << 8;
 80014c6:	7853      	ldrb	r3, [r2, #1]
 80014c8:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>:
{
 80014d0:	b570      	push	{r4, r5, r6, lr}
 80014d2:	4604      	mov	r4, r0
    if (reader != 0)
 80014d4:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
 80014d6:	460d      	mov	r5, r1
 80014d8:	4616      	mov	r6, r2
    if (reader != 0)
 80014da:	b1d8      	cbz	r0, 8001514 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x44>
        if (length > aviBufferLength)
 80014dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80014de:	4293      	cmp	r3, r2
 80014e0:	d208      	bcs.n	80014f4 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x24>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e2:	2309      	movs	r3, #9
            assert(!"Buffer to small");
 80014e4:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
 80014ea:	4a0c      	ldr	r2, [pc, #48]	@ (800151c <_ZN20HardwareMJPEGDecoder8readDataEmm+0x4c>)
 80014ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001520 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x50>)
 80014ee:	480d      	ldr	r0, [pc, #52]	@ (8001524 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x54>)
 80014f0:	f030 ffe2 	bl	80324b8 <__assert_func>
        reader->seek(offset);
 80014f4:	6803      	ldr	r3, [r0, #0]
 80014f6:	68db      	ldr	r3, [r3, #12]
 80014f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
 80014fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80014fc:	4632      	mov	r2, r6
 80014fe:	6803      	ldr	r3, [r0, #0]
 8001500:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001502:	691b      	ldr	r3, [r3, #16]
 8001504:	4798      	blx	r3
 8001506:	b910      	cbnz	r0, 800150e <_ZN20HardwareMJPEGDecoder8readDataEmm+0x3e>
            lastError = AVI_ERROR_EOF_REACHED;
 8001508:	230d      	movs	r3, #13
 800150a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
 800150e:	6b60      	ldr	r0, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
 8001510:	63e5      	str	r5, [r4, #60]	@ 0x3c
}
 8001512:	bd70      	pop	{r4, r5, r6, pc}
    return movieData + offset;
 8001514:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8001516:	4408      	add	r0, r1
 8001518:	e7fb      	b.n	8001512 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x42>
 800151a:	bf00      	nop
 800151c:	08033a07 	.word	0x08033a07
 8001520:	080339f4 	.word	0x080339f4
 8001524:	0803398b 	.word	0x0803398b

08001528 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
{
 8001528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 800152c:	6943      	ldr	r3, [r0, #20]
{
 800152e:	4604      	mov	r4, r0
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001530:	b92b      	cbnz	r3, 800153e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x16>
 8001532:	21f6      	movs	r1, #246	@ 0xf6
 8001534:	4b21      	ldr	r3, [pc, #132]	@ (80015bc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x94>)
 8001536:	4a22      	ldr	r2, [pc, #136]	@ (80015c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x98>)
 8001538:	4822      	ldr	r0, [pc, #136]	@ (80015c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x9c>)
 800153a:	f030 ffbd 	bl	80324b8 <__assert_func>
    readData(currentMovieOffset, 8);
 800153e:	2208      	movs	r2, #8
 8001540:	6981      	ldr	r1, [r0, #24]
 8001542:	f7ff ffc5 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001546:	69a1      	ldr	r1, [r4, #24]
 8001548:	4620      	mov	r0, r4
 800154a:	3104      	adds	r1, #4
 800154c:	f7ff ff92 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 8001550:	f243 0630 	movw	r6, #12336	@ 0x3030
 8001554:	f246 3764 	movw	r7, #25444	@ 0x6364
    while (currentMovieOffset + 8 + chunkSize < movieLength)
 8001558:	69a3      	ldr	r3, [r4, #24]
 800155a:	4418      	add	r0, r3
 800155c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800155e:	f100 0208 	add.w	r2, r0, #8
 8001562:	429a      	cmp	r2, r3
 8001564:	d306      	bcc.n	8001574 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x4c>
    frameNumber = 1;
 8001566:	2301      	movs	r3, #1
    return false;
 8001568:	2000      	movs	r0, #0
    frameNumber = 1;
 800156a:	6163      	str	r3, [r4, #20]
    currentMovieOffset = firstFrameOffset; /* start over */
 800156c:	6a23      	ldr	r3, [r4, #32]
 800156e:	61a3      	str	r3, [r4, #24]
}
 8001570:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        frameNumber++;
 8001574:	6963      	ldr	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001576:	f100 0109 	add.w	r1, r0, #9
        frameNumber++;
 800157a:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 800157c:	f021 0101 	bic.w	r1, r1, #1
        readData(currentMovieOffset, 8);
 8001580:	2208      	movs	r2, #8
        frameNumber++;
 8001582:	6163      	str	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001584:	61a1      	str	r1, [r4, #24]
        readData(currentMovieOffset, 8);
 8001586:	4620      	mov	r0, r4
 8001588:	f7ff ffa2 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
        uint32_t streamNo  = getU16(currentMovieOffset);
 800158c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 8001590:	4620      	mov	r0, r4
 8001592:	4649      	mov	r1, r9
 8001594:	f7ff ff89 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001598:	f109 0102 	add.w	r1, r9, #2
        uint32_t streamNo  = getU16(currentMovieOffset);
 800159c:	4680      	mov	r8, r0
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 800159e:	4620      	mov	r0, r4
 80015a0:	f7ff ff83 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        chunkSize = getU32(currentMovieOffset + 4);
 80015a4:	f109 0104 	add.w	r1, r9, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 80015a8:	4605      	mov	r5, r0
        chunkSize = getU32(currentMovieOffset + 4);
 80015aa:	4620      	mov	r0, r4
 80015ac:	f7ff ff62 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 80015b0:	45b0      	cmp	r8, r6
 80015b2:	d1d1      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
 80015b4:	42bd      	cmp	r5, r7
 80015b6:	d1cf      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
            return true;
 80015b8:	2001      	movs	r0, #1
 80015ba:	e7d9      	b.n	8001570 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x48>
 80015bc:	08033a49 	.word	0x08033a49
 80015c0:	08033a92 	.word	0x08033a92
 80015c4:	0803398b 	.word	0x0803398b

080015c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
    if (frameNumber == 0)
 80015c8:	2901      	cmp	r1, #1
 80015ca:	bf38      	it	cc
 80015cc:	2101      	movcc	r1, #1
    if (frameNumber > getNumberOfFrames())
 80015ce:	6803      	ldr	r3, [r0, #0]
{
 80015d0:	b570      	push	{r4, r5, r6, lr}
    if (frameNumber > getNumberOfFrames())
 80015d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015d4:	460d      	mov	r5, r1
{
 80015d6:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
 80015d8:	4798      	blx	r3
 80015da:	42a8      	cmp	r0, r5
 80015dc:	d204      	bcs.n	80015e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x20>
        frameNumber = getNumberOfFrames();
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	4620      	mov	r0, r4
 80015e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015e4:	4798      	blx	r3
 80015e6:	4605      	mov	r5, r0
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
 80015e8:	69e6      	ldr	r6, [r4, #28]
 80015ea:	1e6b      	subs	r3, r5, #1
 80015ec:	eb06 1603 	add.w	r6, r6, r3, lsl #4
    readData(offset, 16);
 80015f0:	2210      	movs	r2, #16
 80015f2:	f106 0108 	add.w	r1, r6, #8
 80015f6:	4620      	mov	r0, r4
 80015f8:	f7ff ff6a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
 80015fc:	4620      	mov	r0, r4
 80015fe:	f106 0110 	add.w	r1, r6, #16
 8001602:	f7ff ff37 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001606:	6a23      	ldr	r3, [r4, #32]
 8001608:	3b04      	subs	r3, #4
 800160a:	4403      	add	r3, r0
    this->frameNumber = frameNumber;
 800160c:	e9c4 5305 	strd	r5, r3, [r4, #20]
}
 8001610:	bd70      	pop	{r4, r5, r6, pc}
	...

08001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
    currentMovieOffset = 0;
 8001614:	2100      	movs	r1, #0
{
 8001616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800161a:	4604      	mov	r4, r0
    readData(0, 72);
 800161c:	2248      	movs	r2, #72	@ 0x48
    currentMovieOffset = 0;
 800161e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
 8001620:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    readData(0, 72);
 8001624:	f7ff ff54 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (compare(currentMovieOffset, "RIFF", 4))
 8001628:	69a6      	ldr	r6, [r4, #24]
 800162a:	2304      	movs	r3, #4
 800162c:	4631      	mov	r1, r6
 800162e:	4620      	mov	r0, r4
 8001630:	4a62      	ldr	r2, [pc, #392]	@ (80017bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a8>)
 8001632:	f7ff ff0f 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001636:	b148      	cbz	r0, 800164c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
        lastError = AVI_ERROR_NOT_RIFF;
 8001638:	2303      	movs	r3, #3
        assert(!"RIFF header not found");
 800163a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
 800163e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"RIFF header not found");
 8001642:	4a5f      	ldr	r2, [pc, #380]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 8001644:	4b5f      	ldr	r3, [pc, #380]	@ (80017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b0>)
        assert(!"AVI header not found");
 8001646:	4860      	ldr	r0, [pc, #384]	@ (80017c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>)
 8001648:	f030 ff36 	bl	80324b8 <__assert_func>
    currentMovieOffset += 8;
 800164c:	f106 0108 	add.w	r1, r6, #8
    if (compare(currentMovieOffset, "AVI ", 4))
 8001650:	2304      	movs	r3, #4
 8001652:	4620      	mov	r0, r4
 8001654:	4a5d      	ldr	r2, [pc, #372]	@ (80017cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>)
    currentMovieOffset += 8;
 8001656:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "AVI ", 4))
 8001658:	f7ff fefc 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800165c:	b138      	cbz	r0, 800166e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x5a>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 800165e:	2304      	movs	r3, #4
        assert(!"AVI header not found");
 8001660:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 8001664:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI header not found");
 8001668:	4a55      	ldr	r2, [pc, #340]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800166a:	4b59      	ldr	r3, [pc, #356]	@ (80017d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1bc>)
 800166c:	e7eb      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    currentMovieOffset += 4;
 800166e:	f106 010c 	add.w	r1, r6, #12
    if (compare(currentMovieOffset, "LIST", 4))
 8001672:	2304      	movs	r3, #4
 8001674:	4620      	mov	r0, r4
 8001676:	4a57      	ldr	r2, [pc, #348]	@ (80017d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c0>)
    currentMovieOffset += 4;
 8001678:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "LIST", 4))
 800167a:	f7ff feeb 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800167e:	4607      	mov	r7, r0
 8001680:	b138      	cbz	r0, 8001692 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x7e>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001682:	2305      	movs	r3, #5
        assert(!"AVI LIST not found");
 8001684:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001688:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI LIST not found");
 800168c:	4a4c      	ldr	r2, [pc, #304]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800168e:	4b52      	ldr	r3, [pc, #328]	@ (80017d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>)
 8001690:	e7d9      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
 8001692:	4620      	mov	r0, r4
 8001694:	f106 0110 	add.w	r1, r6, #16
 8001698:	f7ff feec 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    assert(aviListSize);
 800169c:	4605      	mov	r5, r0
 800169e:	b920      	cbnz	r0, 80016aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x96>
 80016a0:	f240 1153 	movw	r1, #339	@ 0x153
 80016a4:	4b4d      	ldr	r3, [pc, #308]	@ (80017dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c8>)
 80016a6:	4a46      	ldr	r2, [pc, #280]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 80016a8:	e7cd      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    uint32_t offset =  currentMovieOffset + 8;
 80016aa:	f106 0814 	add.w	r8, r6, #20
    if (compare(offset, "hdrl", 4))
 80016ae:	2304      	movs	r3, #4
 80016b0:	4641      	mov	r1, r8
 80016b2:	4620      	mov	r0, r4
 80016b4:	4a4a      	ldr	r2, [pc, #296]	@ (80017e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1cc>)
 80016b6:	f7ff fecd 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016ba:	2800      	cmp	r0, #0
 80016bc:	d049      	beq.n	8001752 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13e>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
 80016be:	2306      	movs	r3, #6
 80016c0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if (compare(offset, "avih", 4))
 80016c4:	2304      	movs	r3, #4
 80016c6:	4620      	mov	r0, r4
 80016c8:	4a46      	ldr	r2, [pc, #280]	@ (80017e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d0>)
 80016ca:	f106 0118 	add.w	r1, r6, #24
 80016ce:	f7ff fec1 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016d2:	2800      	cmp	r0, #0
 80016d4:	d03f      	beq.n	8001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x142>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
 80016d6:	2307      	movs	r3, #7
 80016d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
 80016dc:	4445      	add	r5, r8
    readData(listOffset, 12);
 80016de:	220c      	movs	r2, #12
 80016e0:	4629      	mov	r1, r5
 80016e2:	4620      	mov	r0, r4
 80016e4:	f7ff fef4 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
 80016e8:	4f3f      	ldr	r7, [pc, #252]	@ (80017e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d4>)
 80016ea:	f105 0608 	add.w	r6, r5, #8
 80016ee:	2304      	movs	r3, #4
 80016f0:	463a      	mov	r2, r7
 80016f2:	4631      	mov	r1, r6
 80016f4:	4620      	mov	r0, r4
 80016f6:	f7ff fead 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80016fe:	2800      	cmp	r0, #0
 8001700:	d048      	beq.n	8001794 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x180>
 8001702:	2b00      	cmp	r3, #0
 8001704:	d148      	bne.n	8001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x184>
 8001706:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001708:	42ab      	cmp	r3, r5
 800170a:	d849      	bhi.n	80017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x18c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 800170c:	f105 030c 	add.w	r3, r5, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001710:	3504      	adds	r5, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 8001712:	61a3      	str	r3, [r4, #24]
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001714:	4629      	mov	r1, r5
 8001716:	4620      	mov	r0, r4
 8001718:	f7ff feac 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 800171c:	4430      	add	r0, r6
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 800171e:	4629      	mov	r1, r5
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001720:	6260      	str	r0, [r4, #36]	@ 0x24
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 8001722:	4620      	mov	r0, r4
 8001724:	f7ff fea6 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    listOffset += listSize;
 8001728:	4406      	add	r6, r0
    readData(listOffset, 4);
 800172a:	2204      	movs	r2, #4
 800172c:	4631      	mov	r1, r6
 800172e:	4620      	mov	r0, r4
 8001730:	f7ff fece 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (!compare(listOffset, "idx1", 4))
 8001734:	2304      	movs	r3, #4
 8001736:	4631      	mov	r1, r6
 8001738:	4620      	mov	r0, r4
 800173a:	4a2c      	ldr	r2, [pc, #176]	@ (80017ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d8>)
 800173c:	f7ff fe8a 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001740:	2800      	cmp	r0, #0
 8001742:	d138      	bne.n	80017b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a2>
    frameNumber = 1; /* next frame number is 1 */
 8001744:	2301      	movs	r3, #1
 8001746:	6163      	str	r3, [r4, #20]
    firstFrameOffset = currentMovieOffset;
 8001748:	69a3      	ldr	r3, [r4, #24]
        indexOffset = listOffset;
 800174a:	61e6      	str	r6, [r4, #28]
    firstFrameOffset = currentMovieOffset;
 800174c:	6223      	str	r3, [r4, #32]
}
 800174e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bool foundFrame = true;
 8001752:	2701      	movs	r7, #1
 8001754:	e7b6      	b.n	80016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xb0>
    if (foundFrame)
 8001756:	2f00      	cmp	r7, #0
 8001758:	d0c0      	beq.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 800175a:	f106 0120 	add.w	r1, r6, #32
 800175e:	4620      	mov	r0, r4
 8001760:	f7ff fe88 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001764:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001768:	fbb0 f0f3 	udiv	r0, r0, r3
        videoInfo.number_of_frames = getU32(offset + 16);
 800176c:	f106 0130 	add.w	r1, r6, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 8001770:	6060      	str	r0, [r4, #4]
        videoInfo.number_of_frames = getU32(offset + 16);
 8001772:	4620      	mov	r0, r4
 8001774:	f7ff fe7e 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_width = getU32(offset + 32);
 8001778:	f106 0140 	add.w	r1, r6, #64	@ 0x40
        videoInfo.number_of_frames = getU32(offset + 16);
 800177c:	60a0      	str	r0, [r4, #8]
        videoInfo.frame_width = getU32(offset + 32);
 800177e:	4620      	mov	r0, r4
 8001780:	f7ff fe78 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_height = getU32(offset + 36);
 8001784:	f106 0144 	add.w	r1, r6, #68	@ 0x44
        videoInfo.frame_width = getU32(offset + 32);
 8001788:	60e0      	str	r0, [r4, #12]
        videoInfo.frame_height = getU32(offset + 36);
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff fe72 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001790:	6120      	str	r0, [r4, #16]
 8001792:	e7a3      	b.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    if (lastError != AVI_NO_ERROR)
 8001794:	2b00      	cmp	r3, #0
 8001796:	d0b9      	beq.n	800170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xf8>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
 8001798:	230a      	movs	r3, #10
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 800179a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return;
 800179e:	e7d6      	b.n	800174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13a>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
 80017a0:	1d29      	adds	r1, r5, #4
 80017a2:	4620      	mov	r0, r4
 80017a4:	f7ff fe66 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        listOffset += listSize;
 80017a8:	1985      	adds	r5, r0, r6
        readData(listOffset, 12);
 80017aa:	220c      	movs	r2, #12
 80017ac:	4629      	mov	r1, r5
 80017ae:	4620      	mov	r0, r4
 80017b0:	f7ff fe8e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
 80017b4:	e799      	b.n	80016ea <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 80017b6:	230b      	movs	r3, #11
 80017b8:	e7ef      	b.n	800179a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x186>
 80017ba:	bf00      	nop
 80017bc:	08033ac5 	.word	0x08033ac5
 80017c0:	08033ae3 	.word	0x08033ae3
 80017c4:	08033aca 	.word	0x08033aca
 80017c8:	0803398b 	.word	0x0803398b
 80017cc:	08033b10 	.word	0x08033b10
 80017d0:	08033b15 	.word	0x08033b15
 80017d4:	08033b2d 	.word	0x08033b2d
 80017d8:	08033b32 	.word	0x08033b32
 80017dc:	08033b48 	.word	0x08033b48
 80017e0:	08033b54 	.word	0x08033b54
 80017e4:	08033b59 	.word	0x08033b59
 80017e8:	08033b5e 	.word	0x08033b5e
 80017ec:	08033b63 	.word	0x08033b63

080017f0 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
    movieLength = length;
 80017f0:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
 80017f4:	2200      	movs	r2, #0
 80017f6:	6302      	str	r2, [r0, #48]	@ 0x30
    readVideoHeader();
 80017f8:	f7ff bf0c 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

080017fc <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
 80017fc:	b510      	push	{r4, lr}
    movieData = 0;
 80017fe:	2300      	movs	r3, #0
{
 8001800:	4604      	mov	r4, r0
    movieData = 0;
 8001802:	62e3      	str	r3, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
 8001804:	680b      	ldr	r3, [r1, #0]
    this->reader = &reader;
 8001806:	6321      	str	r1, [r4, #48]	@ 0x30
{
 8001808:	4608      	mov	r0, r1
    movieLength = reader.getDataLength();
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	4798      	blx	r3
 800180e:	62a0      	str	r0, [r4, #40]	@ 0x28
    readVideoHeader();
 8001810:	4620      	mov	r0, r4
}
 8001812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
 8001816:	f7ff befd 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
	...

0800181c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
 800181c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        FrameBufferAddress = output;
 800181e:	4c1d      	ldr	r4, [pc, #116]	@ (8001894 <JPEG_Decode_DMA+0x78>)
        JPEG_output_is_paused = 0;
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
 8001820:	4e1d      	ldr	r6, [pc, #116]	@ (8001898 <JPEG_Decode_DMA+0x7c>)
        FrameBufferAddress = output;
 8001822:	6023      	str	r3, [r4, #0]
        JPEG_output_is_paused = 0;
 8001824:	2400      	movs	r4, #0
 8001826:	4b1d      	ldr	r3, [pc, #116]	@ (800189c <JPEG_Decode_DMA+0x80>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001828:	4d1d      	ldr	r5, [pc, #116]	@ (80018a0 <JPEG_Decode_DMA+0x84>)
        JPEG_output_is_paused = 0;
 800182a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
 800182c:	4b1d      	ldr	r3, [pc, #116]	@ (80018a4 <JPEG_Decode_DMA+0x88>)
 800182e:	601c      	str	r4, [r3, #0]
        JPEG_InputImageIndex = 0;
 8001830:	4b1d      	ldr	r3, [pc, #116]	@ (80018a8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
 8001832:	6034      	str	r4, [r6, #0]
        JPEG_InputImageIndex = 0;
 8001834:	601c      	str	r4, [r3, #0]
        JPEG_InputImageAddress = (uint32_t)input;
 8001836:	4b1d      	ldr	r3, [pc, #116]	@ (80018ac <JPEG_Decode_DMA+0x90>)
 8001838:	6019      	str	r1, [r3, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
 800183a:	4b1d      	ldr	r3, [pc, #116]	@ (80018b0 <JPEG_Decode_DMA+0x94>)
 800183c:	601a      	str	r2, [r3, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800183e:	2201      	movs	r2, #1
        MCU_BlockIndex = 0;
 8001840:	4b1c      	ldr	r3, [pc, #112]	@ (80018b4 <JPEG_Decode_DMA+0x98>)
 8001842:	601c      	str	r4, [r3, #0]
        line_count = 0;
 8001844:	4b1c      	ldr	r3, [pc, #112]	@ (80018b8 <JPEG_Decode_DMA+0x9c>)
 8001846:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 8001848:	4b1c      	ldr	r3, [pc, #112]	@ (80018bc <JPEG_Decode_DMA+0xa0>)
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800184a:	765a      	strb	r2, [r3, #25]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 800184c:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 800184e:	e9c3 4402 	strd	r4, r4, [r3, #8]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001852:	1b12      	subs	r2, r2, r4
 8001854:	bf18      	it	ne
 8001856:	2201      	movne	r2, #1
 8001858:	761a      	strb	r2, [r3, #24]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800185a:	6832      	ldr	r2, [r6, #0]
 800185c:	261c      	movs	r6, #28
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 800185e:	e9c3 4404 	strd	r4, r4, [r3, #16]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 8001862:	e9c3 4409 	strd	r4, r4, [r3, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 8001866:	e9c3 440b 	strd	r4, r4, [r3, #44]	@ 0x2c
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186a:	701c      	strb	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].LastJob = false;
 800186c:	769c      	strb	r4, [r3, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186e:	771c      	strb	r4, [r3, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
 8001870:	869c      	strh	r4, [r3, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
 8001872:	f883 4036 	strb.w	r4, [r3, #54]	@ 0x36
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001876:	fb06 3302 	mla	r3, r6, r2, r3
 800187a:	68ea      	ldr	r2, [r5, #12]
 800187c:	f44f 75c0 	mov.w	r5, #384	@ 0x180
 8001880:	436a      	muls	r2, r5
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
 800188a:	f004 f867 	bl	800595c <HAL_JPEG_Decode_DMA>

        return 0;
    }
 800188e:	4620      	mov	r0, r4
 8001890:	b002      	add	sp, #8
 8001892:	bd70      	pop	{r4, r5, r6, pc}
 8001894:	20009f34 	.word	0x20009f34
 8001898:	20009f14 	.word	0x20009f14
 800189c:	20009f20 	.word	0x20009f20
 80018a0:	200006bc 	.word	0x200006bc
 80018a4:	20000700 	.word	0x20000700
 80018a8:	20009f30 	.word	0x20009f30
 80018ac:	20009f28 	.word	0x20009f28
 80018b0:	20009f2c 	.word	0x20009f2c
 80018b4:	20000708 	.word	0x20000708
 80018b8:	20009f10 	.word	0x20009f10
 80018bc:	20000004 	.word	0x20000004

080018c0 <HAL_JPEG_InfoReadyCallback>:
     */
    void HAL_JPEG_InfoReadyCallback(JPEG_HandleTypeDef* hjpeg, JPEG_ConfTypeDef* pInfo)
    {
        uint32_t hMCU, vMCU;

        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
 80018c0:	684b      	ldr	r3, [r1, #4]
 80018c2:	2b01      	cmp	r3, #1
 80018c4:	d10e      	bne.n	80018e4 <HAL_JPEG_InfoReadyCallback+0x24>
        {
            if ((pInfo->ImageWidth % 16) != 0)
 80018c6:	68cb      	ldr	r3, [r1, #12]
 80018c8:	071a      	lsls	r2, r3, #28
            {
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ca:	bf1e      	ittt	ne
 80018cc:	f023 030f 	bicne.w	r3, r3, #15
 80018d0:	3310      	addne	r3, #16
 80018d2:	60cb      	strne	r3, [r1, #12]
            }

            if ((pInfo->ImageHeight % 16) != 0)
 80018d4:	688b      	ldr	r3, [r1, #8]
 80018d6:	0718      	lsls	r0, r3, #28
 80018d8:	d003      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
            {
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
 80018da:	f023 030f 	bic.w	r3, r3, #15
 80018de:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
                }

                if ((pInfo->ImageHeight % 8) != 0)
                {
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018e0:	608b      	str	r3, [r1, #8]
                }
            }
        }
    }
 80018e2:	4770      	bx	lr
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d10d      	bne.n	8001904 <HAL_JPEG_InfoReadyCallback+0x44>
                if ((pInfo->ImageWidth % 16) != 0)
 80018e8:	68cb      	ldr	r3, [r1, #12]
 80018ea:	071a      	lsls	r2, r3, #28
 80018ec:	d003      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ee:	f023 030f 	bic.w	r3, r3, #15
 80018f2:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 80018f4:	60cb      	str	r3, [r1, #12]
                if ((pInfo->ImageHeight % 8) != 0)
 80018f6:	688b      	ldr	r3, [r1, #8]
 80018f8:	075a      	lsls	r2, r3, #29
 80018fa:	d0f2      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018fc:	f023 0307 	bic.w	r3, r3, #7
 8001900:	3308      	adds	r3, #8
 8001902:	e7ed      	b.n	80018e0 <HAL_JPEG_InfoReadyCallback+0x20>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
 8001904:	2b00      	cmp	r3, #0
 8001906:	d1ec      	bne.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                if ((pInfo->ImageWidth % 8) != 0)
 8001908:	68cb      	ldr	r3, [r1, #12]
 800190a:	0758      	lsls	r0, r3, #29
 800190c:	d0f3      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 800190e:	f023 0307 	bic.w	r3, r3, #7
 8001912:	3308      	adds	r3, #8
 8001914:	e7ee      	b.n	80018f4 <HAL_JPEG_InfoReadyCallback+0x34>
	...

08001918 <HAL_JPEG_GetDataCallback>:
     * @retval None
     */
    void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef* hjpeg, uint32_t NbDecodedData)
    {
        /* Input buffer has been consumed by the peripheral and to ask for a new data chunk if the operation (encoding/decoding) has not been complete yet. */
        JPEG_InputImageIndex += NbDecodedData;
 8001918:	4a0b      	ldr	r2, [pc, #44]	@ (8001948 <HAL_JPEG_GetDataCallback+0x30>)
    {
 800191a:	b430      	push	{r4, r5}
        JPEG_InputImageIndex += NbDecodedData;
 800191c:	6813      	ldr	r3, [r2, #0]
 800191e:	440b      	add	r3, r1
 8001920:	6013      	str	r3, [r2, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
 8001922:	4a0a      	ldr	r2, [pc, #40]	@ (800194c <HAL_JPEG_GetDataCallback+0x34>)
 8001924:	6812      	ldr	r2, [r2, #0]
 8001926:	4293      	cmp	r3, r2
 8001928:	d20c      	bcs.n	8001944 <HAL_JPEG_GetDataCallback+0x2c>
        {
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192a:	4c09      	ldr	r4, [pc, #36]	@ (8001950 <HAL_JPEG_GetDataCallback+0x38>)
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
 800192c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192e:	6825      	ldr	r5, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001930:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 8001934:	4429      	add	r1, r5
 8001936:	6021      	str	r1, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001938:	bf28      	it	cs
 800193a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
        }
    }
 800193e:	bc30      	pop	{r4, r5}
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001940:	f004 b873 	b.w	8005a2a <HAL_JPEG_ConfigInputBuffer>
    }
 8001944:	bc30      	pop	{r4, r5}
 8001946:	4770      	bx	lr
 8001948:	20009f30 	.word	0x20009f30
 800194c:	20009f2c 	.word	0x20009f2c
 8001950:	20009f28 	.word	0x20009f28

08001954 <HAL_JPEG_DataReadyCallback>:
     * @param pDataOut: pointer to the output data buffer
     * @param OutDataLength: length of output buffer in bytes
     * @retval None
     */
    void HAL_JPEG_DataReadyCallback(JPEG_HandleTypeDef* hjpeg, uint8_t* pDataOut, uint32_t OutDataLength)
    {
 8001954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        line_count += MCU_HEIGHT_PIXELS;
 8001958:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 8001a8c <HAL_JPEG_DataReadyCallback+0x138>

        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800195c:	4c43      	ldr	r4, [pc, #268]	@ (8001a6c <HAL_JPEG_DataReadyCallback+0x118>)
        line_count += MCU_HEIGHT_PIXELS;
 800195e:	f8d8 3000 	ldr.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 8001962:	4d43      	ldr	r5, [pc, #268]	@ (8001a70 <HAL_JPEG_DataReadyCallback+0x11c>)
        line_count += MCU_HEIGHT_PIXELS;
 8001964:	3310      	adds	r3, #16
 8001966:	f8c8 3000 	str.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800196a:	231c      	movs	r3, #28
 800196c:	6821      	ldr	r1, [r4, #0]
 800196e:	f8df e120 	ldr.w	lr, [pc, #288]	@ 8001a90 <HAL_JPEG_DataReadyCallback+0x13c>
 8001972:	fb03 5101 	mla	r1, r3, r1, r5
 8001976:	f8de 9000 	ldr.w	r9, [lr]

        /* Increment framebuffer */
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800197a:	4e3e      	ldr	r6, [pc, #248]	@ (8001a74 <HAL_JPEG_DataReadyCallback+0x120>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800197c:	f8c1 9014 	str.w	r9, [r1, #20]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001980:	493d      	ldr	r1, [pc, #244]	@ (8001a78 <HAL_JPEG_DataReadyCallback+0x124>)
    {
 8001982:	4694      	mov	ip, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001984:	6809      	ldr	r1, [r1, #0]
 8001986:	6932      	ldr	r2, [r6, #16]
    {
 8001988:	4607      	mov	r7, r0
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800198a:	4351      	muls	r1, r2
 800198c:	eb09 1101 	add.w	r1, r9, r1, lsl #4

        /* Decode until we reach area to draw */
        if (line_count <= JPEG_ConvertorParams.startY)
 8001990:	f8d8 2000 	ldr.w	r2, [r8]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001994:	f8ce 1000 	str.w	r1, [lr]
        if (line_count <= JPEG_ConvertorParams.startY)
 8001998:	6971      	ldr	r1, [r6, #20]
 800199a:	4291      	cmp	r1, r2
 800199c:	d30b      	bcc.n	80019b6 <HAL_JPEG_DataReadyCallback+0x62>
        {
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800199e:	6821      	ldr	r1, [r4, #0]
 80019a0:	68f2      	ldr	r2, [r6, #12]
 80019a2:	fb03 5301 	mla	r3, r3, r1, r5
 80019a6:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 80019aa:	434a      	muls	r2, r1
 80019ac:	6859      	ldr	r1, [r3, #4]
        /* Signal Hardware Decoding to wake up */
        if (!DMA2D_reference->isDMARunning())
        {
            SEM_POST(semDecodingDone);
        }
    }
 80019ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 80019b2:	f004 b83d 	b.w	8005a30 <HAL_JPEG_ConfigOutputBuffer>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019b6:	6822      	ldr	r2, [r4, #0]
 80019b8:	2001      	movs	r0, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019ba:	6821      	ldr	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019bc:	435a      	muls	r2, r3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019be:	fb03 5101 	mla	r1, r3, r1, r5
 80019c2:	f8c1 c008 	str.w	ip, [r1, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019c6:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019c8:	54a8      	strb	r0, [r5, r2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019ca:	6822      	ldr	r2, [r4, #0]
 80019cc:	fb03 5202 	mla	r2, r3, r2, r5
 80019d0:	6111      	str	r1, [r2, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
 80019d2:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 80019d4:	b11a      	cbz	r2, 80019de <HAL_JPEG_DataReadyCallback+0x8a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
 80019d6:	6822      	ldr	r2, [r4, #0]
 80019d8:	fb03 5302 	mla	r3, r3, r2, r5
 80019dc:	7618      	strb	r0, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
 80019de:	f8d8 3000 	ldr.w	r3, [r8]
 80019e2:	69b2      	ldr	r2, [r6, #24]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	d924      	bls.n	8001a32 <HAL_JPEG_DataReadyCallback+0xde>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
 80019e8:	221c      	movs	r2, #28
 80019ea:	6823      	ldr	r3, [r4, #0]
 80019ec:	fb02 5303 	mla	r3, r2, r3, r5
 80019f0:	2200      	movs	r2, #0
 80019f2:	769a      	strb	r2, [r3, #26]
            JPEG_OUT_Write_BufferIndex++;
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	3301      	adds	r3, #1
 80019f8:	6023      	str	r3, [r4, #0]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	2b01      	cmp	r3, #1
                JPEG_OUT_Write_BufferIndex = 0;
 80019fe:	bf88      	it	hi
 8001a00:	6022      	strhi	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
 8001a02:	221c      	movs	r2, #28
 8001a04:	6823      	ldr	r3, [r4, #0]
 8001a06:	4353      	muls	r3, r2
 8001a08:	5ceb      	ldrb	r3, [r5, r3]
 8001a0a:	b133      	cbz	r3, 8001a1a <HAL_JPEG_DataReadyCallback+0xc6>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a0c:	2102      	movs	r1, #2
 8001a0e:	4638      	mov	r0, r7
 8001a10:	f003 ffd8 	bl	80059c4 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
 8001a14:	2201      	movs	r2, #1
 8001a16:	4b19      	ldr	r3, [pc, #100]	@ (8001a7c <HAL_JPEG_DataReadyCallback+0x128>)
 8001a18:	601a      	str	r2, [r3, #0]
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001a1a:	211c      	movs	r1, #28
 8001a1c:	6823      	ldr	r3, [r4, #0]
 8001a1e:	68f2      	ldr	r2, [r6, #12]
 8001a20:	fb01 5303 	mla	r3, r1, r3, r5
 8001a24:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 8001a28:	4638      	mov	r0, r7
 8001a2a:	434a      	muls	r2, r1
 8001a2c:	6859      	ldr	r1, [r3, #4]
 8001a2e:	f003 ffff 	bl	8005a30 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
 8001a32:	f8d8 3000 	ldr.w	r3, [r8]
 8001a36:	69b2      	ldr	r2, [r6, #24]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d80b      	bhi.n	8001a54 <HAL_JPEG_DataReadyCallback+0x100>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a3c:	221c      	movs	r2, #28
 8001a3e:	6823      	ldr	r3, [r4, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a40:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a42:	fb02 5503 	mla	r5, r2, r3, r5
 8001a46:	2301      	movs	r3, #1
            Jpeg_HWDecodingEnd = 1;
 8001a48:	4a0d      	ldr	r2, [pc, #52]	@ (8001a80 <HAL_JPEG_DataReadyCallback+0x12c>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a4a:	4638      	mov	r0, r7
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a4c:	76ab      	strb	r3, [r5, #26]
            Jpeg_HWDecodingEnd = 1;
 8001a4e:	6013      	str	r3, [r2, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a50:	f003 ffb8 	bl	80059c4 <HAL_JPEG_Pause>
     *
     * @return true if a DMA operation is currently in progress.
     */
    bool isDMARunning()
    {
        return isRunning;
 8001a54:	4b0b      	ldr	r3, [pc, #44]	@ (8001a84 <HAL_JPEG_DataReadyCallback+0x130>)
 8001a56:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
 8001a58:	7a1b      	ldrb	r3, [r3, #8]
 8001a5a:	b92b      	cbnz	r3, 8001a68 <HAL_JPEG_DataReadyCallback+0x114>
            SEM_POST(semDecodingDone);
 8001a5c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a88 <HAL_JPEG_DataReadyCallback+0x134>)
 8001a5e:	6818      	ldr	r0, [r3, #0]
    }
 8001a60:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            SEM_POST(semDecodingDone);
 8001a64:	f007 b8ac 	b.w	8008bc0 <osSemaphoreRelease>
    }
 8001a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a6c:	20009f14 	.word	0x20009f14
 8001a70:	20000004 	.word	0x20000004
 8001a74:	200006bc 	.word	0x200006bc
 8001a78:	20009f0c 	.word	0x20009f0c
 8001a7c:	20009f20 	.word	0x20009f20
 8001a80:	20009f24 	.word	0x20009f24
 8001a84:	20009f18 	.word	0x20009f18
 8001a88:	20000704 	.word	0x20000704
 8001a8c:	20009f10 	.word	0x20009f10
 8001a90:	20009f34 	.word	0x20009f34

08001a94 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
 8001a94:	b672      	cpsid	i
     * @retval None
     */
    void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef* hjpeg)
    {
        __disable_irq();
        while (1)
 8001a96:	e7fe      	b.n	8001a96 <HAL_JPEG_ErrorCallback+0x2>

08001a98 <HAL_JPEG_DecodeCpltCallback>:
     * @param hjpeg: JPEG handle pointer
     * @retval None
     */
    void HAL_JPEG_DecodeCpltCallback(JPEG_HandleTypeDef* hjpeg)
    {
        Jpeg_HWDecodingEnd = 1;
 8001a98:	2201      	movs	r2, #1
 8001a9a:	4b01      	ldr	r3, [pc, #4]	@ (8001aa0 <HAL_JPEG_DecodeCpltCallback+0x8>)
 8001a9c:	601a      	str	r2, [r3, #0]
    }
 8001a9e:	4770      	bx	lr
 8001aa0:	20009f24 	.word	0x20009f24

08001aa4 <JPEG_OutputHandler>:
 * @brief  JPEG Ouput Data BackGround Postprocessing .
 * @param hjpeg: JPEG handle pointer
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
 8001aa4:	b538      	push	{r3, r4, r5, lr}
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aa6:	4d1c      	ldr	r5, [pc, #112]	@ (8001b18 <JPEG_OutputHandler+0x74>)
{
 8001aa8:	4604      	mov	r4, r0
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aaa:	682b      	ldr	r3, [r5, #0]
 8001aac:	b15b      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
 8001aae:	4b1b      	ldr	r3, [pc, #108]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	b143      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
    {
        /* Abort any ongoing operations */
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
 8001ab4:	f004 fb9e 	bl	80061f4 <HAL_JPEG_GetState>
 8001ab8:	2804      	cmp	r0, #4
 8001aba:	d102      	bne.n	8001ac2 <JPEG_OutputHandler+0x1e>
        {
            HAL_JPEG_Abort(hjpeg);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f003 ffba 	bl	8005a36 <HAL_JPEG_Abort>
        }
        return 1;
 8001ac2:	2001      	movs	r0, #1
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
}
 8001ac4:	bd38      	pop	{r3, r4, r5, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
 8001ac6:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <JPEG_OutputHandler+0x7c>)
 8001ac8:	6818      	ldr	r0, [r3, #0]
 8001aca:	7a03      	ldrb	r3, [r0, #8]
 8001acc:	b96b      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
 8001ace:	221c      	movs	r2, #28
 8001ad0:	4b14      	ldr	r3, [pc, #80]	@ (8001b24 <JPEG_OutputHandler+0x80>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4353      	muls	r3, r2
 8001ad6:	4a14      	ldr	r2, [pc, #80]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001ad8:	5cd3      	ldrb	r3, [r2, r3]
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d105      	bne.n	8001aea <JPEG_OutputHandler+0x46>
 8001ade:	4b0f      	ldr	r3, [pc, #60]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b913      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
        DMA2D_reference->start();
 8001ae4:	6803      	ldr	r3, [r0, #0]
 8001ae6:	691b      	ldr	r3, [r3, #16]
 8001ae8:	4798      	blx	r3
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001aea:	4a10      	ldr	r2, [pc, #64]	@ (8001b2c <JPEG_OutputHandler+0x88>)
 8001aec:	6813      	ldr	r3, [r2, #0]
 8001aee:	2b01      	cmp	r3, #1
 8001af0:	d106      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001af2:	211c      	movs	r1, #28
 8001af4:	4b0e      	ldr	r3, [pc, #56]	@ (8001b30 <JPEG_OutputHandler+0x8c>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	434b      	muls	r3, r1
 8001afa:	490b      	ldr	r1, [pc, #44]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001afc:	5ccb      	ldrb	r3, [r1, r3]
 8001afe:	b10b      	cbz	r3, 8001b04 <JPEG_OutputHandler+0x60>
    return 2;
 8001b00:	2002      	movs	r0, #2
 8001b02:	e7df      	b.n	8001ac4 <JPEG_OutputHandler+0x20>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001b04:	682b      	ldr	r3, [r5, #0]
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d1fa      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b0a:	2102      	movs	r1, #2
 8001b0c:	4620      	mov	r0, r4
        JPEG_output_is_paused = 0;
 8001b0e:	6013      	str	r3, [r2, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b10:	f004 fa1c 	bl	8005f4c <HAL_JPEG_Resume>
 8001b14:	e7f4      	b.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001b16:	bf00      	nop
 8001b18:	20009f24 	.word	0x20009f24
 8001b1c:	200006fc 	.word	0x200006fc
 8001b20:	20009f18 	.word	0x20009f18
 8001b24:	20000700 	.word	0x20000700
 8001b28:	20000004 	.word	0x20000004
 8001b2c:	20009f20 	.word	0x20009f20
 8001b30:	20009f14 	.word	0x20009f14

08001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>:
{
 8001b34:	b570      	push	{r4, r5, r6, lr}
 8001b36:	4605      	mov	r5, r0
    if (length == 0)
 8001b38:	2a00      	cmp	r2, #0
 8001b3a:	d034      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
    if (outputBuffer) /* only decode if buffers are assigned. */
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d032      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001b40:	2402      	movs	r4, #2
 8001b42:	4819      	ldr	r0, [pc, #100]	@ (8001ba8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x74>)
 8001b44:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b46:	68ec      	ldr	r4, [r5, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001b48:	0726      	lsls	r6, r4, #28
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b4a:	f44f 66c8 	mov.w	r6, #1600	@ 0x640
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001b4e:	bf1c      	itt	ne
 8001b50:	f024 040f 	bicne.w	r4, r4, #15
 8001b54:	3410      	addne	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b56:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001b58:	0924      	lsrs	r4, r4, #4
 8001b5a:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b5c:	692c      	ldr	r4, [r5, #16]
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b5e:	6046      	str	r6, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b60:	f014 040f 	ands.w	r4, r4, #15
 8001b64:	bf18      	it	ne
 8001b66:	f1c4 0410 	rsbne	r4, r4, #16
 8001b6a:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
 8001b6c:	480f      	ldr	r0, [pc, #60]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b6e:	f7ff fe55 	bl	800181c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
 8001b72:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 8001b74:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x7c>)
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b76:	4d0d      	ldr	r5, [pc, #52]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b78:	4c0e      	ldr	r4, [pc, #56]	@ (8001bb4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x80>)
        DMA2D_reference = dma;
 8001b7a:	601a      	str	r2, [r3, #0]
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b7c:	4628      	mov	r0, r5
 8001b7e:	f7ff ff91 	bl	8001aa4 <JPEG_OutputHandler>
 8001b82:	6020      	str	r0, [r4, #0]
            if (JpegProcessing_End == 2)
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	2b02      	cmp	r3, #2
 8001b88:	d105      	bne.n	8001b96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x62>
                SEM_WAIT(semDecodingDone);
 8001b8a:	4b0b      	ldr	r3, [pc, #44]	@ (8001bb8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x84>)
 8001b8c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b90:	6818      	ldr	r0, [r3, #0]
 8001b92:	f006 ffe7 	bl	8008b64 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
 8001b96:	6823      	ldr	r3, [r4, #0]
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d1ef      	bne.n	8001b7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x48>
        Jpeg_HWDecodingEnd = 0;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	4a07      	ldr	r2, [pc, #28]	@ (8001bbc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x88>)
 8001ba0:	6013      	str	r3, [r2, #0]
        DMA2D_CopyBufferEnd = 0;
 8001ba2:	4a07      	ldr	r2, [pc, #28]	@ (8001bc0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x8c>)
 8001ba4:	6013      	str	r3, [r2, #0]
}
 8001ba6:	bd70      	pop	{r4, r5, r6, pc}
 8001ba8:	200006bc 	.word	0x200006bc
 8001bac:	20000464 	.word	0x20000464
 8001bb0:	20009f18 	.word	0x20009f18
 8001bb4:	20009f1c 	.word	0x20009f1c
 8001bb8:	20000704 	.word	0x20000704
 8001bbc:	20009f24 	.word	0x20009f24
 8001bc0:	200006fc 	.word	0x200006fc

08001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
{
 8001bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bc8:	4699      	mov	r9, r3
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bca:	6943      	ldr	r3, [r0, #20]
{
 8001bcc:	4604      	mov	r4, r0
 8001bce:	460f      	mov	r7, r1
 8001bd0:	4690      	mov	r8, r2
 8001bd2:	b085      	sub	sp, #20
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bd4:	b92b      	cbnz	r3, 8001be2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x1e>
 8001bd6:	21c2      	movs	r1, #194	@ 0xc2
 8001bd8:	4b28      	ldr	r3, [pc, #160]	@ (8001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb8>)
 8001bda:	4a29      	ldr	r2, [pc, #164]	@ (8001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>)
 8001bdc:	4829      	ldr	r0, [pc, #164]	@ (8001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>)
 8001bde:	f030 fc6b 	bl	80324b8 <__assert_func>
    readData(currentMovieOffset, 8);
 8001be2:	2208      	movs	r2, #8
 8001be4:	6981      	ldr	r1, [r0, #24]
 8001be6:	f7ff fc73 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bea:	69a6      	ldr	r6, [r4, #24]
 8001bec:	4620      	mov	r0, r4
 8001bee:	4631      	mov	r1, r6
 8001bf0:	f7ff fc5b 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf4:	1cb1      	adds	r1, r6, #2
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bf6:	4683      	mov	fp, r0
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	f7ff fc56 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001bfe:	1d31      	adds	r1, r6, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001c00:	4682      	mov	sl, r0
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c02:	4620      	mov	r0, r4
 8001c04:	f7ff fc36 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c08:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001c0a:	f106 0108 	add.w	r1, r6, #8
 8001c0e:	1842      	adds	r2, r0, r1
 8001c10:	429a      	cmp	r2, r3
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c12:	4605      	mov	r5, r0
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c14:	d226      	bcs.n	8001c64 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
 8001c16:	f243 0330 	movw	r3, #12336	@ 0x3030
 8001c1a:	459b      	cmp	fp, r3
 8001c1c:	d117      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c1e:	f246 3364 	movw	r3, #25444	@ 0x6364
 8001c22:	459a      	cmp	sl, r3
 8001c24:	d113      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c26:	b190      	cbz	r0, 8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c28:	4602      	mov	r2, r0
            currentMovieOffset += 8;
 8001c2a:	61a1      	str	r1, [r4, #24]
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f7ff fc4f 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c34:	4601      	mov	r1, r0
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c36:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8001c3a:	462a      	mov	r2, r5
 8001c3c:	463b      	mov	r3, r7
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f8cd 8000 	str.w	r8, [sp]
 8001c44:	f7ff ff76 	bl	8001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>
            frameNumber++;
 8001c48:	6963      	ldr	r3, [r4, #20]
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	6163      	str	r3, [r4, #20]
        currentMovieOffset += chunkSize;
 8001c4e:	69a3      	ldr	r3, [r4, #24]
 8001c50:	442b      	add	r3, r5
        if (chunkSize == 0) /* Empty frame - Skip */
 8001c52:	b905      	cbnz	r5, 8001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x92>
            currentMovieOffset += 8;
 8001c54:	3308      	adds	r3, #8
        if (currentMovieOffset == lastFrameEnd)
 8001c56:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c58:	3301      	adds	r3, #1
 8001c5a:	f023 0301 	bic.w	r3, r3, #1
        if (currentMovieOffset == lastFrameEnd)
 8001c5e:	4293      	cmp	r3, r2
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c60:	61a3      	str	r3, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
 8001c62:	d109      	bne.n	8001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb4>
        frameNumber = 1;
 8001c64:	2301      	movs	r3, #1
            isCurrentFrameLast = true;
 8001c66:	2001      	movs	r0, #1
        frameNumber = 1;
 8001c68:	6163      	str	r3, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
 8001c6a:	6a23      	ldr	r3, [r4, #32]
 8001c6c:	61a3      	str	r3, [r4, #24]
}
 8001c6e:	f080 0001 	eor.w	r0, r0, #1
 8001c72:	b005      	add	sp, #20
 8001c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        isCurrentFrameLast = false;
 8001c78:	2000      	movs	r0, #0
 8001c7a:	e7f8      	b.n	8001c6e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
 8001c7c:	08033a49 	.word	0x08033a49
 8001c80:	08033b68 	.word	0x08033b68
 8001c84:	0803398b 	.word	0x0803398b

08001c88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
 8001c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c8c:	4607      	mov	r7, r0
 8001c8e:	468b      	mov	fp, r1
 8001c90:	4691      	mov	r9, r2
    readData(currentMovieOffset, 8);
 8001c92:	6981      	ldr	r1, [r0, #24]
 8001c94:	2208      	movs	r2, #8
{
 8001c96:	4698      	mov	r8, r3
    readData(currentMovieOffset, 8);
 8001c98:	f7ff fc1a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001c9c:	69bc      	ldr	r4, [r7, #24]
 8001c9e:	4638      	mov	r0, r7
 8001ca0:	1d21      	adds	r1, r4, #4
 8001ca2:	f7ff fbe7 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001ca6:	f104 0108 	add.w	r1, r4, #8
 8001caa:	4602      	mov	r2, r0
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001cac:	4682      	mov	sl, r0
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cae:	4638      	mov	r0, r7
 8001cb0:	f7ff fc0e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cb4:	2302      	movs	r3, #2
 8001cb6:	4c34      	ldr	r4, [pc, #208]	@ (8001d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>)
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cb8:	68fa      	ldr	r2, [r7, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cba:	6123      	str	r3, [r4, #16]
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cbc:	4601      	mov	r1, r0
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001cbe:	0713      	lsls	r3, r2, #28
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cc0:	f44f 60c8 	mov.w	r0, #1600	@ 0x640
 8001cc4:	bf0e      	itee	eq
 8001cc6:	4613      	moveq	r3, r2
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001cc8:	f022 030f 	bicne.w	r3, r2, #15
 8001ccc:	3310      	addne	r3, #16
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cce:	6060      	str	r0, [r4, #4]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
 8001cd0:	f8bb 5006 	ldrh.w	r5, [fp, #6]
    JPEG_ConvertorParams.startY = area.y;
 8001cd4:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cd8:	6023      	str	r3, [r4, #0]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001cda:	091b      	lsrs	r3, r3, #4
 8001cdc:	60e3      	str	r3, [r4, #12]
 8001cde:	4405      	add	r5, r0
 8001ce0:	693b      	ldr	r3, [r7, #16]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001ce2:	b22d      	sxth	r5, r5
 8001ce4:	429d      	cmp	r5, r3
 8001ce6:	bf28      	it	cs
 8001ce8:	461d      	movcs	r5, r3
    JPEG_ConvertorParams.startX = area.x;
 8001cea:	f9bb 3000 	ldrsh.w	r3, [fp]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001cee:	61a5      	str	r5, [r4, #24]
 8001cf0:	462e      	mov	r6, r5
        return x + width;
 8001cf2:	f8bb 5004 	ldrh.w	r5, [fp, #4]
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001cf6:	ea4f 1c13 	mov.w	ip, r3, lsr #4
 8001cfa:	441d      	add	r5, r3
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001cfc:	b22d      	sxth	r5, r5
 8001cfe:	4295      	cmp	r5, r2
 8001d00:	bf28      	it	cs
 8001d02:	4615      	movcs	r5, r2
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d04:	f105 020f 	add.w	r2, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001d08:	6225      	str	r5, [r4, #32]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d0a:	0912      	lsrs	r2, r2, #4
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d0c:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.startY = area.y;
 8001d10:	6160      	str	r0, [r4, #20]
    JPEG_ConvertorParams.startX = area.x;
 8001d12:	61e3      	str	r3, [r4, #28]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d14:	62a2      	str	r2, [r4, #40]	@ 0x28
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d16:	bf18      	it	ne
 8001d18:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d1c:	eba2 020c 	sub.w	r2, r2, ip
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d20:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d24:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d28:	f000 000f 	and.w	r0, r0, #15
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d2c:	62e2      	str	r2, [r4, #44]	@ 0x2c
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d2e:	6323      	str	r3, [r4, #48]	@ 0x30
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d30:	6360      	str	r0, [r4, #52]	@ 0x34
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d32:	464b      	mov	r3, r9
 8001d34:	4652      	mov	r2, sl
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d36:	bf18      	it	ne
 8001d38:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d3c:	4813      	ldr	r0, [pc, #76]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d3e:	63a5      	str	r5, [r4, #56]	@ 0x38
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001d40:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d44:	63e6      	str	r6, [r4, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d46:	f7ff fd69 	bl	800181c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
 8001d4a:	4b11      	ldr	r3, [pc, #68]	@ (8001d90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x108>)
 8001d4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d4e:	4d0f      	ldr	r5, [pc, #60]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    DMA2D_reference = dma;
 8001d50:	601a      	str	r2, [r3, #0]
    FrameBufferWidth = framebuffer_width;
 8001d52:	4b10      	ldr	r3, [pc, #64]	@ (8001d94 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>)
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d54:	4c10      	ldr	r4, [pc, #64]	@ (8001d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x110>)
    FrameBufferWidth = framebuffer_width;
 8001d56:	f8c3 8000 	str.w	r8, [r3]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	f7ff fea2 	bl	8001aa4 <JPEG_OutputHandler>
 8001d60:	6020      	str	r0, [r4, #0]
        if (JpegProcessing_End == 2)
 8001d62:	6823      	ldr	r3, [r4, #0]
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	d105      	bne.n	8001d74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xec>
            SEM_WAIT(semDecodingDone);
 8001d68:	4b0c      	ldr	r3, [pc, #48]	@ (8001d9c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x114>)
 8001d6a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d6e:	6818      	ldr	r0, [r3, #0]
 8001d70:	f006 fef8 	bl	8008b64 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
 8001d74:	6820      	ldr	r0, [r4, #0]
 8001d76:	2801      	cmp	r0, #1
 8001d78:	d1ef      	bne.n	8001d5a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xd2>
    Jpeg_HWDecodingEnd = 0;
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	4a08      	ldr	r2, [pc, #32]	@ (8001da0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x118>)
 8001d7e:	6013      	str	r3, [r2, #0]
    DMA2D_CopyBufferEnd = 0;
 8001d80:	4a08      	ldr	r2, [pc, #32]	@ (8001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11c>)
 8001d82:	6013      	str	r3, [r2, #0]
}
 8001d84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d88:	200006bc 	.word	0x200006bc
 8001d8c:	20000464 	.word	0x20000464
 8001d90:	20009f18 	.word	0x20009f18
 8001d94:	20009f0c 	.word	0x20009f0c
 8001d98:	20009f1c 	.word	0x20009f1c
 8001d9c:	20000704 	.word	0x20000704
 8001da0:	20009f24 	.word	0x20009f24
 8001da4:	200006fc 	.word	0x200006fc

08001da8 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001da8:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001daa:	f44f 75c0 	mov.w	r5, #384	@ 0x180
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dae:	f8df c08c 	ldr.w	ip, [pc, #140]	@ 8001e3c <DMA2D_CopyBuffer+0x94>
 8001db2:	6902      	ldr	r2, [r0, #16]
 8001db4:	f8dc e02c 	ldr.w	lr, [ip, #44]	@ 0x2c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001db8:	f8dc 1024 	ldr.w	r1, [ip, #36]	@ 0x24
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dbc:	ebae 0302 	sub.w	r3, lr, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
 8001dc0:	f8c0 e010 	str.w	lr, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dc4:	f04f 0e02 	mov.w	lr, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dc8:	440a      	add	r2, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dca:	f8dc 1010 	ldr.w	r1, [ip, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dce:	4355      	muls	r5, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd0:	434a      	muls	r2, r1
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dd2:	f8dc 4038 	ldr.w	r4, [ip, #56]	@ 0x38
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd6:	0111      	lsls	r1, r2, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dd8:	4a15      	ldr	r2, [pc, #84]	@ (8001e30 <DMA2D_CopyBuffer+0x88>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dda:	011f      	lsls	r7, r3, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ddc:	f8c2 e034 	str.w	lr, [r2, #52]	@ 0x34
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001de0:	ebc4 1303 	rsb	r3, r4, r3, lsl #4

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
 8001de4:	f890 e01a 	ldrb.w	lr, [r0, #26]
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
 8001de8:	f013 060f 	ands.w	r6, r3, #15
 8001dec:	bf18      	it	ne
 8001dee:	f1c6 0610 	rsbne	r6, r6, #16
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001df2:	041b      	lsls	r3, r3, #16
    if (job.LastJob)  /* Last line of frame */
 8001df4:	f1be 0f00 	cmp.w	lr, #0
 8001df8:	d016      	beq.n	8001e28 <DMA2D_CopyBuffer+0x80>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001dfa:	f8dc c03c 	ldr.w	ip, [ip, #60]	@ 0x3c
 8001dfe:	f1cc 0c10 	rsb	ip, ip, #16
 8001e02:	ea4c 0303 	orr.w	r3, ip, r3
    }
    else
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e06:	6453      	str	r3, [r2, #68]	@ 0x44
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e08:	6943      	ldr	r3, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e0a:	f504 7448 	add.w	r4, r4, #800	@ 0x320
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e0e:	440b      	add	r3, r1
 8001e10:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, scaledWidth);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e12:	4b08      	ldr	r3, [pc, #32]	@ (8001e34 <DMA2D_CopyBuffer+0x8c>)
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e14:	1be4      	subs	r4, r4, r7
 8001e16:	6414      	str	r4, [r2, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, scaledWidth);
 8001e18:	6116      	str	r6, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e1a:	61d3      	str	r3, [r2, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001e1c:	6843      	ldr	r3, [r0, #4]
 8001e1e:	442b      	add	r3, r5
 8001e20:	60d3      	str	r3, [r2, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001e22:	4b05      	ldr	r3, [pc, #20]	@ (8001e38 <DMA2D_CopyBuffer+0x90>)
 8001e24:	6013      	str	r3, [r2, #0]
}
 8001e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e28:	f043 0310 	orr.w	r3, r3, #16
 8001e2c:	e7eb      	b.n	8001e06 <DMA2D_CopyBuffer+0x5e>
 8001e2e:	bf00      	nop
 8001e30:	4002b000 	.word	0x4002b000
 8001e34:	ff09000b 	.word	0xff09000b
 8001e38:	00010201 	.word	0x00010201
 8001e3c:	200006bc 	.word	0x200006bc

08001e40 <DMA2D_CropBuffer>:
 * @brief  Configures external DMA2D job to copy and crop YCbCr data to an RGB cropping buffer
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e44:	6905      	ldr	r5, [r0, #16]
{
 8001e46:	4604      	mov	r4, r0
 8001e48:	4937      	ldr	r1, [pc, #220]	@ (8001f28 <DMA2D_CropBuffer+0xe8>)
 8001e4a:	b08b      	sub	sp, #44	@ 0x2c
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e4c:	2d00      	cmp	r5, #0
 8001e4e:	d166      	bne.n	8001f1e <DMA2D_CropBuffer+0xde>
 8001e50:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e52:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e54:	7e67      	ldrb	r7, [r4, #25]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e56:	3b01      	subs	r3, #1
 8001e58:	429d      	cmp	r5, r3
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e5a:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e5e:	7ea3      	ldrb	r3, [r4, #26]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e60:	bf14      	ite	ne
 8001e62:	f04f 0e00 	movne.w	lr, #0
 8001e66:	f8d1 e038 	ldreq.w	lr, [r1, #56]	@ 0x38
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e6a:	2f00      	cmp	r7, #0
 8001e6c:	bf14      	ite	ne
 8001e6e:	4640      	movne	r0, r8
 8001e70:	2000      	moveq	r0, #0
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d055      	beq.n	8001f22 <DMA2D_CropBuffer+0xe2>
 8001e76:	f8d1 c03c 	ldr.w	ip, [r1, #60]	@ 0x3c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001e7a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8001e7c:	f44f 76c0 	mov.w	r6, #384	@ 0x180
 8001e80:	eb05 0a03 	add.w	sl, r5, r3
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e84:	2332      	movs	r3, #50	@ 0x32
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e86:	f8d1 b010 	ldr.w	fp, [r1, #16]
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
                                   + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * MCU_HEIGHT_PIXELS;

    /* Update job and assert if more cropping is needed */
    job.MCU_drawn++;
 8001e8a:	3501      	adds	r5, #1
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e8c:	fb00 f90b 	mul.w	r9, r0, fp
 8001e90:	fb03 f309 	mul.w	r3, r3, r9
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
 8001e94:	fb02 f10b 	mul.w	r1, r2, fp
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e98:	fb0b 330a 	mla	r3, fp, sl, r3
    job.MCU_drawn++;
 8001e9c:	6125      	str	r5, [r4, #16]
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e9e:	eb01 1303 	add.w	r3, r1, r3, lsl #4
 8001ea2:	2500      	movs	r5, #0
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001ea4:	fb06 f60a 	mul.w	r6, r6, sl
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
 8001ea8:	eb01 1109 	add.w	r1, r1, r9, lsl #4
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
 8001eac:	f1b8 0f00 	cmp.w	r8, #0
 8001eb0:	d000      	beq.n	8001eb4 <DMA2D_CropBuffer+0x74>
 8001eb2:	b907      	cbnz	r7, 8001eb6 <DMA2D_CropBuffer+0x76>
    {
        job.DoCropping = false;
 8001eb4:	7625      	strb	r5, [r4, #24]
    }

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001eb6:	2701      	movs	r7, #1
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
 8001eb8:	f1c2 0210 	rsb	r2, r2, #16
 8001ebc:	eba2 020e 	sub.w	r2, r2, lr
 8001ec0:	f8ad 2018 	strh.w	r2, [sp, #24]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001ec4:	4a19      	ldr	r2, [pc, #100]	@ (8001f2c <DMA2D_CropBuffer+0xec>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ec6:	f1c0 0010 	rsb	r0, r0, #16
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001eca:	9207      	str	r2, [sp, #28]
    blitOp.dstLoopStride = 800;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ecc:	6962      	ldr	r2, [r4, #20]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ece:	eba0 000c 	sub.w	r0, r0, ip
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ed2:	441a      	add	r2, r3
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
 8001ed4:	4b16      	ldr	r3, [pc, #88]	@ (8001f30 <DMA2D_CropBuffer+0xf0>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ed6:	f8ad 001a 	strh.w	r0, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
 8001eda:	6818      	ldr	r0, [r3, #0]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
 8001edc:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
 8001ee0:	f88d 5022 	strb.w	r5, [sp, #34]	@ 0x22
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001ee4:	9701      	str	r7, [sp, #4]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001ee6:	4f13      	ldr	r7, [pc, #76]	@ (8001f34 <DMA2D_CropBuffer+0xf4>)
    DMA2D_reference->addToQueue(blitOp);
 8001ee8:	6803      	ldr	r3, [r0, #0]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001eea:	4439      	add	r1, r7
 8001eec:	9102      	str	r1, [sp, #8]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001eee:	9205      	str	r2, [sp, #20]
    DMA2D_reference->addToQueue(blitOp);
 8001ef0:	685b      	ldr	r3, [r3, #4]
        : color(0)
 8001ef2:	9504      	str	r5, [sp, #16]
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ef8:	2202      	movs	r2, #2
 8001efa:	4b0f      	ldr	r3, [pc, #60]	@ (8001f38 <DMA2D_CropBuffer+0xf8>)
 8001efc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
 8001efe:	f04f 1210 	mov.w	r2, #1048592	@ 0x100010
 8001f02:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, 0);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f04:	4a0d      	ldr	r2, [pc, #52]	@ (8001f3c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
 8001f06:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
 8001f08:	641d      	str	r5, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
 8001f0a:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f0c:	61da      	str	r2, [r3, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001f0e:	6862      	ldr	r2, [r4, #4]
 8001f10:	4432      	add	r2, r6
 8001f12:	60da      	str	r2, [r3, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001f14:	4a0a      	ldr	r2, [pc, #40]	@ (8001f40 <DMA2D_CropBuffer+0x100>)
 8001f16:	601a      	str	r2, [r3, #0]
}
 8001f18:	b00b      	add	sp, #44	@ 0x2c
 8001f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001f1e:	2200      	movs	r2, #0
 8001f20:	e797      	b.n	8001e52 <DMA2D_CropBuffer+0x12>
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001f22:	469c      	mov	ip, r3
 8001f24:	e7a9      	b.n	8001e7a <DMA2D_CropBuffer+0x3a>
 8001f26:	bf00      	nop
 8001f28:	200006bc 	.word	0x200006bc
 8001f2c:	03200010 	.word	0x03200010
 8001f30:	20009f18 	.word	0x20009f18
 8001f34:	2000070c 	.word	0x2000070c
 8001f38:	4002b000 	.word	0x4002b000
 8001f3c:	ff09000b 	.word	0xff09000b
 8001f40:	00010201 	.word	0x00010201

08001f44 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
 8001f44:	4b0d      	ldr	r3, [pc, #52]	@ (8001f7c <DMA2D_ExternalJobCompleted+0x38>)
 8001f46:	6902      	ldr	r2, [r0, #16]
 8001f48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d114      	bne.n	8001f78 <DMA2D_ExternalJobCompleted+0x34>
    {
        job.State = JPEG_BUFFER_EMPTY;
 8001f4e:	2200      	movs	r2, #0
        job.DataBufferSize = 0;
        job.DoCropping = false;
        job.FirstJob = false;

        JPEG_OUT_Read_BufferIndex++;
 8001f50:	4b0b      	ldr	r3, [pc, #44]	@ (8001f80 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
 8001f52:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
 8001f54:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
 8001f56:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
 8001f58:	3101      	adds	r1, #1
 8001f5a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f5c:	6819      	ldr	r1, [r3, #0]
        job.DoCropping = false;
 8001f5e:	8302      	strh	r2, [r0, #24]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f60:	2901      	cmp	r1, #1
        {
            JPEG_OUT_Read_BufferIndex = 0;
 8001f62:	bf88      	it	hi
 8001f64:	601a      	strhi	r2, [r3, #0]
        }

        /* Check if last line */
        if (job.LastJob)
 8001f66:	7e83      	ldrb	r3, [r0, #26]
 8001f68:	b113      	cbz	r3, 8001f70 <DMA2D_ExternalJobCompleted+0x2c>
        {
            DMA2D_CopyBufferEnd = 1;
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	4b05      	ldr	r3, [pc, #20]	@ (8001f84 <DMA2D_ExternalJobCompleted+0x40>)
 8001f6e:	601a      	str	r2, [r3, #0]
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
 8001f70:	4b05      	ldr	r3, [pc, #20]	@ (8001f88 <DMA2D_ExternalJobCompleted+0x44>)
 8001f72:	6818      	ldr	r0, [r3, #0]
 8001f74:	f006 be24 	b.w	8008bc0 <osSemaphoreRelease>
    }
}
 8001f78:	4770      	bx	lr
 8001f7a:	bf00      	nop
 8001f7c:	200006bc 	.word	0x200006bc
 8001f80:	20000700 	.word	0x20000700
 8001f84:	200006fc 	.word	0x200006fc
 8001f88:	20000704 	.word	0x20000704

08001f8c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f8c:	2101      	movs	r1, #1
{
 8001f8e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f90:	2200      	movs	r2, #0
 8001f92:	4608      	mov	r0, r1
 8001f94:	f006 fd97 	bl	8008ac6 <osSemaphoreNew>
 8001f98:	4b0a      	ldr	r3, [pc, #40]	@ (8001fc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001f9a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001f9c:	b928      	cbnz	r0, 8001faa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001f9e:	2128      	movs	r1, #40	@ 0x28
 8001fa0:	4b09      	ldr	r3, [pc, #36]	@ (8001fc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fa4:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001fa6:	f030 fa87 	bl	80324b8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2104      	movs	r1, #4
 8001fae:	2001      	movs	r0, #1
 8001fb0:	f006 fe2e 	bl	8008c10 <osMessageQueueNew>
 8001fb4:	4b07      	ldr	r3, [pc, #28]	@ (8001fd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001fb6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fb8:	b918      	cbnz	r0, 8001fc2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001fba:	212c      	movs	r1, #44	@ 0x2c
 8001fbc:	4b06      	ldr	r3, [pc, #24]	@ (8001fd8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001fbe:	4a03      	ldr	r2, [pc, #12]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001fc0:	e7f0      	b.n	8001fa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001fc2:	bd08      	pop	{r3, pc}
 8001fc4:	20009f3c 	.word	0x20009f3c
 8001fc8:	08033c08 	.word	0x08033c08
 8001fcc:	08033c51 	.word	0x08033c51
 8001fd0:	08033c80 	.word	0x08033c80
 8001fd4:	20009f38 	.word	0x20009f38
 8001fd8:	08033cdf 	.word	0x08033cdf

08001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001fdc:	4b02      	ldr	r3, [pc, #8]	@ (8001fe8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001fde:	f04f 31ff 	mov.w	r1, #4294967295
 8001fe2:	6818      	ldr	r0, [r3, #0]
 8001fe4:	f006 bdbe 	b.w	8008b64 <osSemaphoreAcquire>
 8001fe8:	20009f3c 	.word	0x20009f3c

08001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001fec:	4b01      	ldr	r3, [pc, #4]	@ (8001ff4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001fee:	6818      	ldr	r0, [r3, #0]
 8001ff0:	f006 bde6 	b.w	8008bc0 <osSemaphoreRelease>
 8001ff4:	20009f3c 	.word	0x20009f3c

08001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001ff8:	4b02      	ldr	r3, [pc, #8]	@ (8002004 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	6818      	ldr	r0, [r3, #0]
 8001ffe:	f006 bdb1 	b.w	8008b64 <osSemaphoreAcquire>
 8002002:	bf00      	nop
 8002004:	20009f3c 	.word	0x20009f3c

08002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8002008:	f7ff bff0 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800200c:	2300      	movs	r3, #0
 800200e:	4803      	ldr	r0, [pc, #12]	@ (800201c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002010:	461a      	mov	r2, r3
 8002012:	4903      	ldr	r1, [pc, #12]	@ (8002020 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002014:	6800      	ldr	r0, [r0, #0]
 8002016:	f006 be3a 	b.w	8008c8e <osMessageQueuePut>
 800201a:	bf00      	nop
 800201c:	20009f38 	.word	0x20009f38
 8002020:	2000003c 	.word	0x2000003c

08002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 */
void OSWrappers::waitForVSync()
{
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002024:	2300      	movs	r3, #0
{
 8002026:	b513      	push	{r0, r1, r4, lr}
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002028:	4c07      	ldr	r4, [pc, #28]	@ (8002048 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800202a:	461a      	mov	r2, r3
 800202c:	a901      	add	r1, sp, #4
 800202e:	6820      	ldr	r0, [r4, #0]
 8002030:	f006 fe61 	bl	8008cf6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002034:	f04f 33ff 	mov.w	r3, #4294967295
 8002038:	2200      	movs	r2, #0
 800203a:	6820      	ldr	r0, [r4, #0]
 800203c:	a901      	add	r1, sp, #4
 800203e:	f006 fe5a 	bl	8008cf6 <osMessageQueueGet>
}
 8002042:	b002      	add	sp, #8
 8002044:	bd10      	pop	{r4, pc}
 8002046:	bf00      	nop
 8002048:	20009f38 	.word	0x20009f38

0800204c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
 800204c:	6803      	ldr	r3, [r0, #0]
 800204e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002050:	4718      	bx	r3

08002052 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8002052:	2001      	movs	r0, #1
 8002054:	4770      	bx	lr

08002056 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8002056:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800205a:	4770      	bx	lr

0800205c <_ZN8STM32DMAD1Ev>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
STM32DMA::~STM32DMA()
 8002060:	4b04      	ldr	r3, [pc, #16]	@ (8002074 <_ZN8STM32DMAD1Ev+0x18>)
 8002062:	6003      	str	r3, [r0, #0]
 8002064:	4b04      	ldr	r3, [pc, #16]	@ (8002078 <_ZN8STM32DMAD1Ev+0x1c>)
 8002066:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 800206a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800206e:	f3bf 8f6f 	isb	sy
}
 8002072:	4770      	bx	lr
 8002074:	08033e90 	.word	0x08033e90
 8002078:	e000e100 	.word	0xe000e100

0800207c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
}
 8002080:	f640 51a4 	movw	r1, #3492	@ 0xda4
 8002084:	f7ff ffea 	bl	800205c <_ZN8STM32DMAD1Ev>
 8002088:	4620      	mov	r0, r4
 800208a:	f02f f83c 	bl	8031106 <_ZdlPvj>
 800208e:	4620      	mov	r0, r4
 8002090:	bd10      	pop	{r4, pc}
	...

08002094 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002094:	4b0f      	ldr	r3, [pc, #60]	@ (80020d4 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8002096:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002098:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800209c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020a0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80020a4:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80020a8:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80020ac:	9201      	str	r2, [sp, #4]
 80020ae:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80020b0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020b2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020b6:	661a      	str	r2, [r3, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80020b8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020ba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80020be:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80020c0:	4b05      	ldr	r3, [pc, #20]	@ (80020d8 <_ZN8STM32DMA10initializeEv+0x44>)
 80020c2:	4a06      	ldr	r2, [pc, #24]	@ (80020dc <_ZN8STM32DMA10initializeEv+0x48>)
 80020c4:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020c6:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80020ca:	4b05      	ldr	r3, [pc, #20]	@ (80020e0 <_ZN8STM32DMA10initializeEv+0x4c>)
 80020cc:	60da      	str	r2, [r3, #12]
}
 80020ce:	b002      	add	sp, #8
 80020d0:	4770      	bx	lr
 80020d2:	bf00      	nop
 80020d4:	46020c00 	.word	0x46020c00
 80020d8:	2000057c 	.word	0x2000057c
 80020dc:	08002331 	.word	0x08002331
 80020e0:	e000e100 	.word	0xe000e100

080020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80020e4:	b508      	push	{r3, lr}
    switch (format)
 80020e6:	280a      	cmp	r0, #10
 80020e8:	d809      	bhi.n	80020fe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80020ea:	e8df f000 	tbb	[pc, r0]
 80020ee:	1006      	.short	0x1006
 80020f0:	0808080e 	.word	0x0808080e
 80020f4:	10101008 	.word	0x10101008
 80020f8:	10          	.byte	0x10
 80020f9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80020fa:	2002      	movs	r0, #2
}
 80020fc:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80020fe:	2187      	movs	r1, #135	@ 0x87
 8002100:	4b04      	ldr	r3, [pc, #16]	@ (8002114 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8002102:	4a05      	ldr	r2, [pc, #20]	@ (8002118 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8002104:	4805      	ldr	r0, [pc, #20]	@ (800211c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8002106:	f030 f9d7 	bl	80324b8 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800210a:	2000      	movs	r0, #0
 800210c:	e7f6      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800210e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8002110:	e7f4      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8002112:	bf00      	nop
 8002114:	08033d21 	.word	0x08033d21
 8002118:	08033d3c 	.word	0x08033d3c
 800211c:	08033d87 	.word	0x08033d87

08002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8002120:	b538      	push	{r3, r4, r5, lr}
 8002122:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002124:	7f88      	ldrb	r0, [r1, #30]
 8002126:	f7ff ffdd 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800212a:	8aa5      	ldrh	r5, [r4, #20]
 800212c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800212e:	4b16      	ldr	r3, [pc, #88]	@ (8002188 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002130:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002134:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002136:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002138:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213a:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800213c:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213e:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002140:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002142:	6825      	ldr	r5, [r4, #0]
 8002144:	2d08      	cmp	r5, #8
 8002146:	d10e      	bne.n	8002166 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002148:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800214a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800214c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800214e:	7f20      	ldrb	r0, [r4, #28]
 8002150:	4a0e      	ldr	r2, [pc, #56]	@ (800218c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8002152:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002156:	61da      	str	r2, [r3, #28]
        return color;
 8002158:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800215a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800215c:	4a0c      	ldr	r2, [pc, #48]	@ (8002190 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800215e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002160:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002162:	601a      	str	r2, [r3, #0]
    }
}
 8002164:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002166:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002168:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800216a:	611a      	str	r2, [r3, #16]
 800216c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800216e:	0a0a      	lsrs	r2, r1, #8
 8002170:	0948      	lsrs	r0, r1, #5
 8002172:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8002176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800217a:	4302      	orrs	r2, r0
 800217c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8002180:	430a      	orrs	r2, r1
 8002182:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002184:	4a03      	ldr	r2, [pc, #12]	@ (8002194 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002186:	e7ec      	b.n	8002162 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002188:	4002b000 	.word	0x4002b000
 800218c:	00010009 	.word	0x00010009
 8002190:	00020201 	.word	0x00020201
 8002194:	00030201 	.word	0x00030201

08002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002198:	b508      	push	{r3, lr}
    switch (format)
 800219a:	280b      	cmp	r0, #11
 800219c:	d80b      	bhi.n	80021b6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800219e:	e8df f000 	tbb	[pc, r0]
 80021a2:	1206      	.short	0x1206
 80021a4:	0a0a0a10 	.word	0x0a0a0a10
 80021a8:	0808080a 	.word	0x0808080a
 80021ac:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80021ae:	2002      	movs	r0, #2
}
 80021b0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80021b2:	2005      	movs	r0, #5
        break;
 80021b4:	e7fc      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80021b6:	2166      	movs	r1, #102	@ 0x66
 80021b8:	4b04      	ldr	r3, [pc, #16]	@ (80021cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80021ba:	4a05      	ldr	r2, [pc, #20]	@ (80021d0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80021bc:	4805      	ldr	r0, [pc, #20]	@ (80021d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80021be:	f030 f97b 	bl	80324b8 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80021c2:	2000      	movs	r0, #0
 80021c4:	e7f4      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80021c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80021c8:	e7f2      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80021ca:	bf00      	nop
 80021cc:	08033d21 	.word	0x08033d21
 80021d0:	08033de4 	.word	0x08033de4
 80021d4:	08033d87 	.word	0x08033d87

080021d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80021d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021dc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80021e0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021e2:	4640      	mov	r0, r8
 80021e4:	f7ff ffd8 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021e8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021ea:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021ec:	4638      	mov	r0, r7
 80021ee:	f7ff ffd3 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80021f2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021f4:	4638      	mov	r0, r7
 80021f6:	f7ff ff75 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021fa:	8aa1      	ldrh	r1, [r4, #20]
 80021fc:	8b62      	ldrh	r2, [r4, #26]
 80021fe:	4b44      	ldr	r3, [pc, #272]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002200:	1a52      	subs	r2, r2, r1
 8002202:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002204:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8002206:	8b22      	ldrh	r2, [r4, #24]
 8002208:	1a52      	subs	r2, r2, r1
 800220a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800220c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800220e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002210:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002214:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002216:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8002218:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800221a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800221c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800221e:	6820      	ldr	r0, [r4, #0]
 8002220:	2880      	cmp	r0, #128	@ 0x80
 8002222:	d028      	beq.n	8002276 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8002224:	7f22      	ldrb	r2, [r4, #28]
 8002226:	d80f      	bhi.n	8002248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8002228:	2820      	cmp	r0, #32
 800222a:	d067      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800222c:	2840      	cmp	r0, #64	@ 0x40
 800222e:	d065      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8002230:	2804      	cmp	r0, #4
 8002232:	d01a      	beq.n	800226a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002234:	4b36      	ldr	r3, [pc, #216]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002236:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800223a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800223e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002240:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8002242:	d061      	beq.n	8002308 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8002244:	4a33      	ldr	r2, [pc, #204]	@ (8002314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8002246:	e044      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8002248:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800224c:	d004      	beq.n	8002258 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800224e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8002252:	d1ef      	bne.n	8002234 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002254:	4830      	ldr	r0, [pc, #192]	@ (8002318 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002256:	e000      	b.n	800225a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002258:	4830      	ldr	r0, [pc, #192]	@ (800231c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800225a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800225e:	61da      	str	r2, [r3, #28]
 8002260:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002262:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002264:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002266:	6159      	str	r1, [r3, #20]
 8002268:	e032      	b.n	80022d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800226a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800226e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002272:	61da      	str	r2, [r3, #28]
 8002274:	e7f6      	b.n	8002264 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002276:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002278:	1d02      	adds	r2, r0, #4
 800227a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800227c:	7f22      	ldrb	r2, [r4, #28]
 800227e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8002282:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8002286:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002288:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800228a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800228c:	7801      	ldrb	r1, [r0, #0]
 800228e:	b141      	cbz	r1, 80022a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8002290:	2901      	cmp	r1, #1
 8002292:	d021      	beq.n	80022d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8002294:	f240 1111 	movw	r1, #273	@ 0x111
 8002298:	4b21      	ldr	r3, [pc, #132]	@ (8002320 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800229a:	4a22      	ldr	r2, [pc, #136]	@ (8002324 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800229c:	4822      	ldr	r0, [pc, #136]	@ (8002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800229e:	f030 f90b 	bl	80324b8 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022a2:	69da      	ldr	r2, [r3, #28]
 80022a4:	8841      	ldrh	r1, [r0, #2]
 80022a6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022aa:	3901      	subs	r1, #1
 80022ac:	f022 0210 	bic.w	r2, r2, #16
 80022b0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 80022b4:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022b6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80022b8:	4b15      	ldr	r3, [pc, #84]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80022ba:	69da      	ldr	r2, [r3, #28]
 80022bc:	f042 0220 	orr.w	r2, r2, #32
 80022c0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80022c2:	69da      	ldr	r2, [r3, #28]
 80022c4:	0692      	lsls	r2, r2, #26
 80022c6:	d4fc      	bmi.n	80022c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80022c8:	2210      	movs	r2, #16
 80022ca:	609a      	str	r2, [r3, #8]
            if (blend)
 80022cc:	2900      	cmp	r1, #0
 80022ce:	d0b9      	beq.n	8002244 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80022d0:	4a16      	ldr	r2, [pc, #88]	@ (800232c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80022d2:	601a      	str	r2, [r3, #0]
}
 80022d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80022d8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022dc:	69da      	ldr	r2, [r3, #28]
 80022de:	8840      	ldrh	r0, [r0, #2]
 80022e0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022e4:	f100 30ff 	add.w	r0, r0, #4294967295
 80022e8:	f022 0210 	bic.w	r2, r2, #16
 80022ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80022f0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80022f4:	bf18      	it	ne
 80022f6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022f8:	61da      	str	r2, [r3, #28]
                break;
 80022fa:	e7dd      	b.n	80022b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80022fc:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8002300:	4b03      	ldr	r3, [pc, #12]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002302:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8002306:	e7b4      	b.n	8002272 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002308:	f240 2201 	movw	r2, #513	@ 0x201
 800230c:	e7e1      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800230e:	bf00      	nop
 8002310:	4002b000 	.word	0x4002b000
 8002314:	00010201 	.word	0x00010201
 8002318:	00020009 	.word	0x00020009
 800231c:	0002000a 	.word	0x0002000a
 8002320:	08033e2e 	.word	0x08033e2e
 8002324:	08033e48 	.word	0x08033e48
 8002328:	08033d87 	.word	0x08033d87
 800232c:	00020201 	.word	0x00020201

08002330 <DMA2D_XferCpltCallback>:
 8002330:	4b02      	ldr	r3, [pc, #8]	@ (800233c <DMA2D_XferCpltCallback+0xc>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	695b      	ldr	r3, [r3, #20]
 800233a:	4718      	bx	r3
 800233c:	20082ec4 	.word	0x20082ec4

08002340 <_ZN8STM32DMA18externalJobExecuteEv>:
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
 8002340:	2301      	movs	r3, #1
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002342:	221c      	movs	r2, #28
 8002344:	4908      	ldr	r1, [pc, #32]	@ (8002368 <_ZN8STM32DMA18externalJobExecuteEv+0x28>)
        isRunning = true;
 8002346:	7203      	strb	r3, [r0, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002348:	6808      	ldr	r0, [r1, #0]
 800234a:	4b08      	ldr	r3, [pc, #32]	@ (800236c <_ZN8STM32DMA18externalJobExecuteEv+0x2c>)
 800234c:	fb02 3000 	mla	r0, r2, r0, r3
 8002350:	7e00      	ldrb	r0, [r0, #24]
 8002352:	b120      	cbz	r0, 800235e <_ZN8STM32DMA18externalJobExecuteEv+0x1e>
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 8002354:	6808      	ldr	r0, [r1, #0]
 8002356:	fb02 3000 	mla	r0, r2, r0, r3
 800235a:	f7ff bd71 	b.w	8001e40 <DMA2D_CropBuffer>
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 800235e:	6808      	ldr	r0, [r1, #0]
 8002360:	fb02 3000 	mla	r0, r2, r0, r3
 8002364:	f7ff bd20 	b.w	8001da8 <DMA2D_CopyBuffer>
 8002368:	20000700 	.word	0x20000700
 800236c:	20000004 	.word	0x20000004

08002370 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
 8002370:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
 8002374:	b510      	push	{r4, lr}
 8002376:	4604      	mov	r4, r0
        if (!started_by_external_job)
 8002378:	b9ab      	cbnz	r3, 80023a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x36>
            executeCompleted();
 800237a:	6803      	ldr	r3, [r0, #0]
 800237c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800237e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
 8002380:	221c      	movs	r2, #28
 8002382:	4b17      	ldr	r3, [pc, #92]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4353      	muls	r3, r2
 8002388:	4a16      	ldr	r2, [pc, #88]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 800238a:	5cd3      	ldrb	r3, [r2, r3]
 800238c:	2b01      	cmp	r3, #1
 800238e:	d109      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002390:	4a15      	ldr	r2, [pc, #84]	@ (80023e8 <_ZN8STM32DMA18signalDMAInterruptEv+0x78>)
 8002392:	6812      	ldr	r2, [r2, #0]
 8002394:	b932      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002396:	7a22      	ldrb	r2, [r4, #8]
 8002398:	b922      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                externalJobExecute();
 800239a:	4620      	mov	r0, r4
                started_by_external_job = true;
 800239c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                externalJobExecute();
 80023a0:	f7ff ffce 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 80023a4:	bd10      	pop	{r4, pc}
        if (isRunning)
 80023a6:	7a03      	ldrb	r3, [r0, #8]
 80023a8:	b14b      	cbz	r3, 80023be <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            isRunning = false;
 80023aa:	2300      	movs	r3, #0
 80023ac:	7203      	strb	r3, [r0, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 80023ae:	201c      	movs	r0, #28
 80023b0:	4b0b      	ldr	r3, [pc, #44]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 80023b2:	681a      	ldr	r2, [r3, #0]
 80023b4:	4b0b      	ldr	r3, [pc, #44]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 80023b6:	fb00 3002 	mla	r0, r0, r2, r3
 80023ba:	f7ff fdc3 	bl	8001f44 <DMA2D_ExternalJobCompleted>
            if (!queue.isEmpty() && isAllowed)
 80023be:	6860      	ldr	r0, [r4, #4]
 80023c0:	6803      	ldr	r3, [r0, #0]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4798      	blx	r3
 80023c6:	2800      	cmp	r0, #0
 80023c8:	d1ec      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 80023ca:	7a63      	ldrb	r3, [r4, #9]
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d0e9      	beq.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                execute();
 80023d0:	6823      	ldr	r3, [r4, #0]
                started_by_external_job = false;
 80023d2:	f884 0da0 	strb.w	r0, [r4, #3488]	@ 0xda0
                execute();
 80023d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023d8:	4620      	mov	r0, r4
    }
 80023da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 80023de:	4718      	bx	r3
 80023e0:	20000700 	.word	0x20000700
 80023e4:	20000004 	.word	0x20000004
 80023e8:	200006fc 	.word	0x200006fc

080023ec <_ZN8STM32DMA5startEv>:
    virtual void start()
 80023ec:	b510      	push	{r4, lr}
 80023ee:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
 80023f0:	6840      	ldr	r0, [r0, #4]
 80023f2:	6803      	ldr	r3, [r0, #0]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4798      	blx	r3
 80023f8:	b958      	cbnz	r0, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fa:	7a63      	ldrb	r3, [r4, #9]
 80023fc:	b14b      	cbz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fe:	7a23      	ldrb	r3, [r4, #8]
 8002400:	b93b      	cbnz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
                started_by_external_job = false;
 8002402:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4620      	mov	r0, r4
    }
 800240a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 800240e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002410:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
 8002412:	221c      	movs	r2, #28
 8002414:	4b07      	ldr	r3, [pc, #28]	@ (8002434 <_ZN8STM32DMA5startEv+0x48>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	4353      	muls	r3, r2
 800241a:	4a07      	ldr	r2, [pc, #28]	@ (8002438 <_ZN8STM32DMA5startEv+0x4c>)
 800241c:	5cd3      	ldrb	r3, [r2, r3]
 800241e:	2b01      	cmp	r3, #1
 8002420:	d106      	bne.n	8002430 <_ZN8STM32DMA5startEv+0x44>
 8002422:	7a22      	ldrb	r2, [r4, #8]
 8002424:	b922      	cbnz	r2, 8002430 <_ZN8STM32DMA5startEv+0x44>
            externalJobExecute();
 8002426:	4620      	mov	r0, r4
            started_by_external_job = true;
 8002428:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            externalJobExecute();
 800242c:	f7ff ff88 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 8002430:	bd10      	pop	{r4, pc}
 8002432:	bf00      	nop
 8002434:	20000700 	.word	0x20000700
 8002438:	20000004 	.word	0x20000004

0800243c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800243c:	b570      	push	{r4, r5, r6, lr}
 800243e:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002440:	2600      	movs	r6, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002442:	4625      	mov	r5, r4
 8002444:	4b0a      	ldr	r3, [pc, #40]	@ (8002470 <_ZN8STM32DMAC1Ev+0x34>)
 8002446:	300c      	adds	r0, #12
 8002448:	6060      	str	r0, [r4, #4]
 800244a:	7226      	strb	r6, [r4, #8]
 800244c:	7266      	strb	r6, [r4, #9]
 800244e:	f845 3b20 	str.w	r3, [r5], #32
 8002452:	2260      	movs	r2, #96	@ 0x60
 8002454:	4629      	mov	r1, r5
 8002456:	f009 fc09 	bl	800bc6c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800245a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 800245e:	60ee      	str	r6, [r5, #12]
 8002460:	3524      	adds	r5, #36	@ 0x24
 8002462:	429d      	cmp	r5, r3
 8002464:	d1fb      	bne.n	800245e <_ZN8STM32DMAC1Ev+0x22>
}
 8002466:	4620      	mov	r0, r4
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002468:	f884 6da0 	strb.w	r6, [r4, #3488]	@ 0xda0
}
 800246c:	bd70      	pop	{r4, r5, r6, pc}
 800246e:	bf00      	nop
 8002470:	08033e90 	.word	0x08033e90

08002474 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002474:	2001      	movs	r0, #1
 8002476:	4770      	bx	lr

08002478 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002478:	200c      	movs	r0, #12
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800247c:	230c      	movs	r3, #12
 800247e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002482:	3008      	adds	r0, #8
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002486:	230c      	movs	r3, #12
 8002488:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800248c:	3008      	adds	r0, #8
 800248e:	4770      	bx	lr

08002490 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002490:	2001      	movs	r0, #1
 8002492:	4770      	bx	lr

08002494 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002494:	20e8      	movs	r0, #232	@ 0xe8
 8002496:	4770      	bx	lr

08002498 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002498:	23e8      	movs	r3, #232	@ 0xe8
 800249a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800249e:	3008      	adds	r0, #8
 80024a0:	4770      	bx	lr

080024a2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024a2:	23e8      	movs	r3, #232	@ 0xe8
 80024a4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024a8:	3008      	adds	r0, #8
 80024aa:	4770      	bx	lr

080024ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80024ac:	2001      	movs	r0, #1
 80024ae:	4770      	bx	lr

080024b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80024b0:	2010      	movs	r0, #16
 80024b2:	4770      	bx	lr

080024b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024b4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024b8:	3008      	adds	r0, #8
 80024ba:	4770      	bx	lr

080024bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024bc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024c0:	3008      	adds	r0, #8
 80024c2:	4770      	bx	lr

080024c4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoGameScreen1ScreenNoTransition();
 80024c4:	4608      	mov	r0, r1
 80024c6:	f000 be81 	b.w	80031cc <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
	...

080024cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80024cc:	b510      	push	{r4, lr}
 80024ce:	4604      	mov	r4, r0
 80024d0:	4b02      	ldr	r3, [pc, #8]	@ (80024dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024d2:	6003      	str	r3, [r0, #0]
 80024d4:	f008 fa15 	bl	800a902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80024d8:	4620      	mov	r0, r4
 80024da:	bd10      	pop	{r4, pc}
 80024dc:	08033f48 	.word	0x08033f48

080024e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80024e0:	b510      	push	{r4, lr}
 80024e2:	4604      	mov	r4, r0
 80024e4:	f7ff fff2 	bl	80024cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024e8:	4620      	mov	r0, r4
 80024ea:	2114      	movs	r1, #20
 80024ec:	f02e fe0b 	bl	8031106 <_ZdlPvj>
 80024f0:	4620      	mov	r0, r4
 80024f2:	bd10      	pop	{r4, pc}

080024f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80024f4:	b510      	push	{r4, lr}
 80024f6:	4604      	mov	r4, r0
 80024f8:	4b02      	ldr	r3, [pc, #8]	@ (8002504 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024fa:	6003      	str	r3, [r0, #0]
 80024fc:	f008 fa01 	bl	800a902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002500:	4620      	mov	r0, r4
 8002502:	bd10      	pop	{r4, pc}
 8002504:	08033f14 	.word	0x08033f14

08002508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002508:	b510      	push	{r4, lr}
 800250a:	4604      	mov	r4, r0
 800250c:	f7ff fff2 	bl	80024f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002510:	4620      	mov	r0, r4
 8002512:	21f0      	movs	r1, #240	@ 0xf0
 8002514:	f02e fdf7 	bl	8031106 <_ZdlPvj>
 8002518:	4620      	mov	r0, r4
 800251a:	bd10      	pop	{r4, pc}

0800251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800251c:	b510      	push	{r4, lr}
 800251e:	4604      	mov	r4, r0
 8002520:	4b02      	ldr	r3, [pc, #8]	@ (800252c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002522:	6003      	str	r3, [r0, #0]
 8002524:	f008 f9ed 	bl	800a902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002528:	4620      	mov	r0, r4
 800252a:	bd10      	pop	{r4, pc}
 800252c:	08033ee0 	.word	0x08033ee0

08002530 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002530:	b510      	push	{r4, lr}
 8002532:	4604      	mov	r4, r0
 8002534:	f7ff fff2 	bl	800251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002538:	4620      	mov	r0, r4
 800253a:	2118      	movs	r1, #24
 800253c:	f02e fde3 	bl	8031106 <_ZdlPvj>
 8002540:	4620      	mov	r0, r4
 8002542:	bd10      	pop	{r4, pc}

08002544 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002544:	b510      	push	{r4, lr}
 8002546:	4604      	mov	r4, r0
 8002548:	4b07      	ldr	r3, [pc, #28]	@ (8002568 <_ZN12FrontendHeapD1Ev+0x24>)
 800254a:	6003      	str	r3, [r0, #0]
 800254c:	f500 708e 	add.w	r0, r0, #284	@ 0x11c
 8002550:	f7ff ffbc 	bl	80024cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002554:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8002558:	f7ff ffcc 	bl	80024f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800255c:	f104 0014 	add.w	r0, r4, #20
 8002560:	f7ff ffdc 	bl	800251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002564:	4620      	mov	r0, r4
 8002566:	bd10      	pop	{r4, pc}
 8002568:	08033f7c 	.word	0x08033f7c

0800256c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800256c:	b508      	push	{r3, lr}
 800256e:	4802      	ldr	r0, [pc, #8]	@ (8002578 <__tcf_0+0xc>)
 8002570:	f7ff ffe8 	bl	8002544 <_ZN12FrontendHeapD1Ev>
 8002574:	bd08      	pop	{r3, pc}
 8002576:	bf00      	nop
 8002578:	2000b610 	.word	0x2000b610

0800257c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800257c:	b510      	push	{r4, lr}
 800257e:	4604      	mov	r4, r0
 8002580:	f7ff ffe0 	bl	8002544 <_ZN12FrontendHeapD1Ev>
 8002584:	4620      	mov	r0, r4
 8002586:	f44f 7124 	mov.w	r1, #656	@ 0x290
 800258a:	f02e fdbc 	bl	8031106 <_ZdlPvj>
 800258e:	4620      	mov	r0, r4
 8002590:	bd10      	pop	{r4, pc}
	...

08002594 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8002594:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002598:	f000 fcb4 	bl	8002f04 <_ZN14BitmapDatabase11getInstanceEv>
 800259c:	2400      	movs	r4, #0
 800259e:	4605      	mov	r5, r0
 80025a0:	f000 fcb4 	bl	8002f0c <_ZN14BitmapDatabase15getInstanceSizeEv>
 80025a4:	4623      	mov	r3, r4
 80025a6:	4601      	mov	r1, r0
 80025a8:	4622      	mov	r2, r4
 80025aa:	4628      	mov	r0, r5
 80025ac:	9400      	str	r4, [sp, #0]
 80025ae:	f00d fccd 	bl	800ff4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);

    display.setFrameBufferFormat(Bitmap::RGB565);
 80025b2:	4d28      	ldr	r5, [pc, #160]	@ (8002654 <touchgfx_init+0xc0>)
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80025b4:	4a28      	ldr	r2, [pc, #160]	@ (8002658 <touchgfx_init+0xc4>)
 80025b6:	4b29      	ldr	r3, [pc, #164]	@ (800265c <touchgfx_init+0xc8>)
    Texts::setLanguage(0);
 80025b8:	4620      	mov	r0, r4
 80025ba:	601a      	str	r2, [r3, #0]
 80025bc:	f001 f8a2 	bl	8003704 <_ZN8touchgfx5Texts11setLanguageEt>
    display.setFrameBufferFormat(Bitmap::RGB565);
 80025c0:	4621      	mov	r1, r4
 80025c2:	4628      	mov	r0, r5
 80025c4:	f022 fc60 	bl	8024e88 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 80025c8:	4b25      	ldr	r3, [pc, #148]	@ (8002660 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 80025ca:	4826      	ldr	r0, [pc, #152]	@ (8002664 <touchgfx_init+0xd0>)
 80025cc:	60ab      	str	r3, [r5, #8]
 80025ce:	f00d fc25 	bl	800fe1c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 80025d2:	4d25      	ldr	r5, [pc, #148]	@ (8002668 <touchgfx_init+0xd4>)
 80025d4:	e8d5 3faf 	lda	r3, [r5]
 80025d8:	07db      	lsls	r3, r3, #31
 80025da:	d435      	bmi.n	8002648 <touchgfx_init+0xb4>
 80025dc:	4628      	mov	r0, r5
 80025de:	f02e fd94 	bl	803110a <__cxa_guard_acquire>
 80025e2:	b388      	cbz	r0, 8002648 <touchgfx_init+0xb4>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80025e4:	4c21      	ldr	r4, [pc, #132]	@ (800266c <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80025e6:	4b22      	ldr	r3, [pc, #136]	@ (8002670 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80025e8:	f504 769a 	add.w	r6, r4, #308	@ 0x134
        : presenterStorage(pres),
 80025ec:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80025f0:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80025f4:	f504 778e 	add.w	r7, r4, #284	@ 0x11c
 80025f8:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 80025fa:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80025fc:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002600:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002602:	6126      	str	r6, [r4, #16]
 8002604:	f008 f97e 	bl	800a904 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002608:	4b1a      	ldr	r3, [pc, #104]	@ (8002674 <touchgfx_init+0xe0>)
 800260a:	4640      	mov	r0, r8
 800260c:	6163      	str	r3, [r4, #20]
 800260e:	f008 f979 	bl	800a904 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002612:	4b19      	ldr	r3, [pc, #100]	@ (8002678 <touchgfx_init+0xe4>)
 8002614:	4638      	mov	r0, r7
 8002616:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002618:	f008 f974 	bl	800a904 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800261c:	4b17      	ldr	r3, [pc, #92]	@ (800267c <touchgfx_init+0xe8>)
 800261e:	f504 7098 	add.w	r0, r4, #304	@ 0x130
 8002622:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
 8002626:	f001 f95a 	bl	80038de <_ZN5ModelC1Ev>
 800262a:	4622      	mov	r2, r4
 800262c:	f504 7198 	add.w	r1, r4, #304	@ 0x130
 8002630:	4630      	mov	r0, r6
 8002632:	f001 f8d3 	bl	80037dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002636:	4630      	mov	r0, r6
 8002638:	f000 fdc8 	bl	80031cc <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800263c:	4810      	ldr	r0, [pc, #64]	@ (8002680 <touchgfx_init+0xec>)
 800263e:	f02f ff59 	bl	80324f4 <atexit>
 8002642:	4628      	mov	r0, r5
 8002644:	f02e fd6d 	bl	8031122 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002648:	480e      	ldr	r0, [pc, #56]	@ (8002684 <touchgfx_init+0xf0>)
}
 800264a:	b002      	add	sp, #8
 800264c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002650:	f7fe bdec 	b.w	800122c <_ZN11TouchGFXHAL10initializeEv>
 8002654:	2000a014 	.word	0x2000a014
 8002658:	20009ff4 	.word	0x20009ff4
 800265c:	20082f20 	.word	0x20082f20
 8002660:	20009ff8 	.word	0x20009ff8
 8002664:	20000040 	.word	0x20000040
 8002668:	2000b60c 	.word	0x2000b60c
 800266c:	2000b610 	.word	0x2000b610
 8002670:	08033f7c 	.word	0x08033f7c
 8002674:	08033ee0 	.word	0x08033ee0
 8002678:	08033f14 	.word	0x08033f14
 800267c:	08033f48 	.word	0x08033f48
 8002680:	0800256d 	.word	0x0800256d
 8002684:	20009f40 	.word	0x20009f40

08002688 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8002688:	b508      	push	{r3, lr}
    nema_init();
 800268a:	f00e fa15 	bl	8010ab8 <nema_init>
    nema_vg_init_stencil_pool(800, 480, 1);
 800268e:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8002692:	f44f 7048 	mov.w	r0, #800	@ 0x320
 8002696:	2201      	movs	r2, #1
 8002698:	f016 fc72 	bl	8018f80 <nema_vg_init_stencil_pool>
    nema_vg_handle_large_coords(1, 1);
}
 800269c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    nema_vg_handle_large_coords(1, 1);
 80026a0:	2101      	movs	r1, #1
 80026a2:	4608      	mov	r0, r1
 80026a4:	f01a ba26 	b.w	801caf4 <nema_vg_handle_large_coords>

080026a8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80026a8:	4801      	ldr	r0, [pc, #4]	@ (80026b0 <touchgfx_taskEntry+0x8>)
 80026aa:	f008 bc3a 	b.w	800af22 <_ZN8touchgfx3HAL9taskEntryEv>
 80026ae:	bf00      	nop
 80026b0:	20009f40 	.word	0x20009f40

080026b4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80026b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
static STM32DMA dma;
 80026b6:	4d13      	ldr	r5, [pc, #76]	@ (8002704 <_GLOBAL__sub_I_touchgfx_init+0x50>)
{
public:

    STM32TouchController() {}
 80026b8:	4b13      	ldr	r3, [pc, #76]	@ (8002708 <_GLOBAL__sub_I_touchgfx_init+0x54>)
 80026ba:	4f14      	ldr	r7, [pc, #80]	@ (800270c <_GLOBAL__sub_I_touchgfx_init+0x58>)
static LCDGPU2D display;
 80026bc:	4e14      	ldr	r6, [pc, #80]	@ (8002710 <_GLOBAL__sub_I_touchgfx_init+0x5c>)
static STM32DMA dma;
 80026be:	4628      	mov	r0, r5
 80026c0:	603b      	str	r3, [r7, #0]
 80026c2:	f7ff febb 	bl	800243c <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 80026c6:	4630      	mov	r0, r6
 80026c8:	f022 fbd0 	bl	8024e6c <_ZN8touchgfx8LCDGPU2DC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 80026cc:	4811      	ldr	r0, [pc, #68]	@ (8002714 <_GLOBAL__sub_I_touchgfx_init+0x60>)
 80026ce:	f00b fddb 	bl	800e288 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 80026d2:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80026d6:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80026da:	4c0f      	ldr	r4, [pc, #60]	@ (8002718 <_GLOBAL__sub_I_touchgfx_init+0x64>)
 80026dc:	e9cd 3200 	strd	r3, r2, [sp]
 80026e0:	4629      	mov	r1, r5
 80026e2:	463b      	mov	r3, r7
 80026e4:	4632      	mov	r2, r6
 80026e6:	4620      	mov	r0, r4
 80026e8:	f01e f9d2 	bl	8020a90 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80026ec:	4b0b      	ldr	r3, [pc, #44]	@ (800271c <_GLOBAL__sub_I_touchgfx_init+0x68>)
 80026ee:	6023      	str	r3, [r4, #0]
        : cc_consumed(0),
 80026f0:	2300      	movs	r3, #0
 80026f2:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
          cc_in(0)
 80026f6:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80026fa:	4b09      	ldr	r3, [pc, #36]	@ (8002720 <_GLOBAL__sub_I_touchgfx_init+0x6c>)
 80026fc:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 8002700:	b003      	add	sp, #12
 8002702:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002704:	2000a864 	.word	0x2000a864
 8002708:	080336d4 	.word	0x080336d4
 800270c:	2000b608 	.word	0x2000b608
 8002710:	2000a014 	.word	0x2000a014
 8002714:	20009ff8 	.word	0x20009ff8
 8002718:	20009f40 	.word	0x20009f40
 800271c:	08033860 	.word	0x08033860
 8002720:	08033690 	.word	0x08033690

08002724 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002724:	4801      	ldr	r0, [pc, #4]	@ (800272c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002726:	f7ff bc99 	b.w	800205c <_ZN8STM32DMAD1Ev>
 800272a:	bf00      	nop
 800272c:	2000a864 	.word	0x2000a864

08002730 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static GPU2DVectorRenderer renderer;
 8002730:	4770      	bx	lr
	...

08002734 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002734:	2290      	movs	r2, #144	@ 0x90
 8002736:	4b04      	ldr	r3, [pc, #16]	@ (8002748 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x14>)
 8002738:	f883 2376 	strb.w	r2, [r3, #886]	@ 0x376
 800273c:	f883 2387 	strb.w	r2, [r3, #903]	@ 0x387
 8002740:	f883 2384 	strb.w	r2, [r3, #900]	@ 0x384
void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
    NVIC_SetPriority(GPU2D_IRQn, 9);
}
 8002744:	4770      	bx	lr
 8002746:	bf00      	nop
 8002748:	e000e100 	.word	0xe000e100

0800274c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(GPU2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800274c:	4a09      	ldr	r2, [pc, #36]	@ (8002774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800274e:	490a      	ldr	r1, [pc, #40]	@ (8002778 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002750:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002752:	480a      	ldr	r0, [pc, #40]	@ (800277c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002754:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002758:	3b01      	subs	r3, #1
 800275a:	b29b      	uxth	r3, r3
 800275c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800275e:	6911      	ldr	r1, [r2, #16]
 8002760:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002764:	3901      	subs	r1, #1
 8002766:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002768:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800276a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 800276c:	f043 0301 	orr.w	r3, r3, #1
 8002770:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8002772:	4770      	bx	lr
 8002774:	40016800 	.word	0x40016800
 8002778:	2000b8a2 	.word	0x2000b8a2
 800277c:	2000b8a0 	.word	0x2000b8a0

08002780 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HALGPU2D::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002780:	4b01      	ldr	r3, [pc, #4]	@ (8002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002782:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8002786:	4770      	bx	lr
 8002788:	40016800 	.word	0x40016800

0800278c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800278c:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800278e:	4b02      	ldr	r3, [pc, #8]	@ (8002798 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 8002790:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002794:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002796:	4770      	bx	lr
 8002798:	40016800 	.word	0x40016800

0800279c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
 800279c:	4770      	bx	lr

0800279e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
 800279e:	2324      	movs	r3, #36	@ 0x24
 80027a0:	fb03 0001 	mla	r0, r3, r1, r0
 80027a4:	2300      	movs	r3, #0
 80027a6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
 80027aa:	4770      	bx	lr

080027ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
 80027ac:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 80027b0:	4770      	bx	lr

080027b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027b2:	b510      	push	{r4, lr}
 80027b4:	4604      	mov	r4, r0
 80027b6:	2130      	movs	r1, #48	@ 0x30
 80027b8:	f02e fca5 	bl	8031106 <_ZdlPvj>
 80027bc:	4620      	mov	r0, r4
 80027be:	bd10      	pop	{r4, pc}

080027c0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80027c0:	b538      	push	{r3, r4, r5, lr}
 80027c2:	4604      	mov	r4, r0
    HALGPU2D::initialize(8192);
 80027c4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027c8:	f01e f9ca 	bl	8020b60 <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 80027cc:	6823      	ldr	r3, [r4, #0]
 80027ce:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80027d0:	f00a fc2e 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
 80027d4:	4601      	mov	r1, r0
 80027d6:	4620      	mov	r0, r4
 80027d8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80027da:	6823      	ldr	r3, [r4, #0]
 80027dc:	4a06      	ldr	r2, [pc, #24]	@ (80027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>)
 80027de:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80027e2:	4620      	mov	r0, r4
 80027e4:	2300      	movs	r3, #0
 80027e6:	4905      	ldr	r1, [pc, #20]	@ (80027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x3c>)
 80027e8:	47a8      	blx	r5
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
 80027ea:	6862      	ldr	r2, [r4, #4]
 80027ec:	4b04      	ldr	r3, [pc, #16]	@ (8002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x40>)
 80027ee:	645a      	str	r2, [r3, #68]	@ 0x44
        mjpegDecoders[index] = &decoder;
 80027f0:	4a04      	ldr	r2, [pc, #16]	@ (8002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 80027f2:	6053      	str	r3, [r2, #4]
}
 80027f4:	bd38      	pop	{r3, r4, r5, pc}
 80027f6:	bf00      	nop
 80027f8:	20140ee0 	.word	0x20140ee0
 80027fc:	200856e0 	.word	0x200856e0
 8002800:	2000b8d8 	.word	0x2000b8d8
 8002804:	2000b8a8 	.word	0x2000b8a8

08002808 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
 8002808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800280a:	4604      	mov	r4, r0
 800280c:	4610      	mov	r0, r2
        assert(handle < no_streams);
 800280e:	b129      	cbz	r1, 800281c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
 8002810:	21a9      	movs	r1, #169	@ 0xa9
 8002812:	4b3e      	ldr	r3, [pc, #248]	@ (800290c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x104>)
 8002814:	4a3e      	ldr	r2, [pc, #248]	@ (8002910 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x108>)
 8002816:	483f      	ldr	r0, [pc, #252]	@ (8002914 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x10c>)
 8002818:	f02f fe4e 	bl	80324b8 <__assert_func>
        if (stream.isPlaying || stream.isShowingOneFrame)
 800281c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8002820:	b91b      	cbnz	r3, 800282a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x22>
 8002822:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8002826:	2b00      	cmp	r3, #0
 8002828:	d06e      	beq.n	8002908 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x100>
            stream.isShowingOneFrame = false;
 800282a:	2700      	movs	r7, #0
        return vSyncForFrame;
 800282c:	4b3a      	ldr	r3, [pc, #232]	@ (8002918 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x110>)
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	f893 206b 	ldrb.w	r2, [r3, #107]	@ 0x6b
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 8002834:	6923      	ldr	r3, [r4, #16]
            stream.isShowingOneFrame = false;
 8002836:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 800283a:	4413      	add	r3, r2
 800283c:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
 800283e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8002842:	2b00      	cmp	r3, #0
 8002844:	d05c      	beq.n	8002900 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf8>
                widget.invalidate();
 8002846:	6803      	ldr	r3, [r0, #0]
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
 8002848:	6865      	ldr	r5, [r4, #4]
                widget.invalidate();
 800284a:	695b      	ldr	r3, [r3, #20]
 800284c:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
 800284e:	69e6      	ldr	r6, [r4, #28]
 8002850:	682b      	ldr	r3, [r5, #0]
 8002852:	2e00      	cmp	r6, #0
 8002854:	d02d      	beq.n	80028b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xaa>
                    decoder->gotoFrame(stream.seek_to_frame);
 8002856:	4631      	mov	r1, r6
 8002858:	4628      	mov	r0, r5
 800285a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800285c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
 800285e:	682b      	ldr	r3, [r5, #0]
 8002860:	4628      	mov	r0, r5
 8002862:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002864:	69e6      	ldr	r6, [r4, #28]
 8002866:	4798      	blx	r3
 8002868:	4286      	cmp	r6, r0
 800286a:	bf2c      	ite	cs
 800286c:	2600      	movcs	r6, #0
 800286e:	2601      	movcc	r6, #1
                    stream.seek_to_frame = 0;
 8002870:	61e7      	str	r7, [r4, #28]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 8002872:	682b      	ldr	r3, [r5, #0]
 8002874:	4628      	mov	r0, r5
 8002876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002878:	4798      	blx	r3
                stream.frameCount++;
 800287a:	68a3      	ldr	r3, [r4, #8]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 800287c:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
 800287e:	3301      	adds	r3, #1
 8002880:	60a3      	str	r3, [r4, #8]
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameNumber to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
 8002882:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002886:	69a1      	ldr	r1, [r4, #24]
 8002888:	4353      	muls	r3, r2
 800288a:	68a2      	ldr	r2, [r4, #8]
 800288c:	434a      	muls	r2, r1
 800288e:	4293      	cmp	r3, r2
 8002890:	d938      	bls.n	8002904 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xfc>
        {
            if (allowSkipFrames)
 8002892:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
 8002896:	b138      	cbz	r0, 80028a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa0>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
 8002898:	1a9b      	subs	r3, r3, r2
 800289a:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
 800289e:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
 80028a0:	bf98      	it	ls
 80028a2:	f102 32ff 	addls.w	r2, r2, #4294967295
 80028a6:	6222      	str	r2, [r4, #32]
                }
            }
            return true;
 80028a8:	2301      	movs	r3, #1
            stream.doDecodeNextFrame = decodeForNextTick(stream);
 80028aa:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
 80028ae:	4630      	mov	r0, r6
 80028b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    if (stream.skip_frames > 0)
 80028b2:	6a22      	ldr	r2, [r4, #32]
 80028b4:	b162      	cbz	r2, 80028d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xc8>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
 80028b6:	e9d3 7309 	ldrd	r7, r3, [r3, #36]	@ 0x24
 80028ba:	4628      	mov	r0, r5
 80028bc:	4798      	blx	r3
 80028be:	6a21      	ldr	r1, [r4, #32]
 80028c0:	4401      	add	r1, r0
 80028c2:	4628      	mov	r0, r5
 80028c4:	47b8      	blx	r7
                        stream.frameCount += stream.skip_frames;
 80028c6:	68a3      	ldr	r3, [r4, #8]
 80028c8:	6a22      	ldr	r2, [r4, #32]
                        stream.skip_frames = 0;
 80028ca:	6226      	str	r6, [r4, #32]
                        stream.frameCount += stream.skip_frames;
 80028cc:	4413      	add	r3, r2
 80028ce:	60a3      	str	r3, [r4, #8]
                    if (stream.repeat)
 80028d0:	f894 6027 	ldrb.w	r6, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
 80028d4:	682b      	ldr	r3, [r5, #0]
                    if (stream.repeat)
 80028d6:	b126      	cbz	r6, 80028e2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xda>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028d8:	4628      	mov	r0, r5
 80028da:	699b      	ldr	r3, [r3, #24]
 80028dc:	4798      	blx	r3
 80028de:	4606      	mov	r6, r0
 80028e0:	e7c7      	b.n	8002872 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
 80028e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80028e4:	4628      	mov	r0, r5
 80028e6:	4798      	blx	r3
 80028e8:	682b      	ldr	r3, [r5, #0]
 80028ea:	4607      	mov	r7, r0
 80028ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028ee:	4628      	mov	r0, r5
 80028f0:	4798      	blx	r3
 80028f2:	4287      	cmp	r7, r0
 80028f4:	d201      	bcs.n	80028fa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf2>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028f6:	682b      	ldr	r3, [r5, #0]
 80028f8:	e7ee      	b.n	80028d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd0>
                            stream.isPlaying = false;
 80028fa:	f884 6025 	strb.w	r6, [r4, #37]	@ 0x25
 80028fe:	e7b8      	b.n	8002872 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
        bool hasMoreFrames = true;
 8002900:	2601      	movs	r6, #1
 8002902:	e7be      	b.n	8002882 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x7a>
        }
        return false;
 8002904:	2300      	movs	r3, #0
 8002906:	e7d0      	b.n	80028aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa2>
        bool hasMoreFrames = true;
 8002908:	2601      	movs	r6, #1
 800290a:	e7d0      	b.n	80028ae <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa6>
 800290c:	08033f88 	.word	0x08033f88
 8002910:	08033f9c 	.word	0x08033f9c
 8002914:	080340cd 	.word	0x080340cd
 8002918:	20082ec4 	.word	0x20082ec4

0800291c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HALGPU2D::beginFrame();
 800291c:	f01e b84a 	b.w	80209b4 <_ZN8touchgfx8HALGPU2D10beginFrameEv>

08002920 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HALGPU2D::endFrame();
 8002920:	f01e b874 	b.w	8020a0c <_ZN8touchgfx8HALGPU2D8endFrameEv>

08002924 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HALGPU2D::flushFrameBuffer(rect);
 8002924:	f008 ba9a 	b.w	800ae5c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002928 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HALGPU2D::blockCopy(dest, src, numBytes);
 8002928:	f008 bc09 	b.w	800b13e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800292c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
    virtual bool getIsPlaying(const Handle handle)
 800292c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 800292e:	b131      	cbz	r1, 800293e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x12>
 8002930:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8002934:	4b03      	ldr	r3, [pc, #12]	@ (8002944 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
 8002936:	4a04      	ldr	r2, [pc, #16]	@ (8002948 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
 8002938:	4804      	ldr	r0, [pc, #16]	@ (800294c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
 800293a:	f02f fdbd 	bl	80324b8 <__assert_func>
    }
 800293e:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
 8002942:	bd08      	pop	{r3, pc}
 8002944:	08033f88 	.word	0x08033f88
 8002948:	08034112 	.word	0x08034112
 800294c:	080340cd 	.word	0x080340cd

08002950 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
 8002950:	b510      	push	{r4, lr}
        assert(handle < no_streams);
 8002952:	b131      	cbz	r1, 8002962 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x12>
 8002954:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8002958:	4b05      	ldr	r3, [pc, #20]	@ (8002970 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
 800295a:	4a06      	ldr	r2, [pc, #24]	@ (8002974 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
 800295c:	4806      	ldr	r0, [pc, #24]	@ (8002978 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x28>)
 800295e:	f02f fdab 	bl	80324b8 <__assert_func>
        mjpegDecoders[handle]->getVideoInfo(data);
 8002962:	6840      	ldr	r0, [r0, #4]
 8002964:	4611      	mov	r1, r2
    }
 8002966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->getVideoInfo(data);
 800296a:	6803      	ldr	r3, [r0, #0]
 800296c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800296e:	4718      	bx	r3
 8002970:	08033f88 	.word	0x08033f88
 8002974:	0803422c 	.word	0x0803422c
 8002978:	080340cd 	.word	0x080340cd

0800297c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
 800297c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 800297e:	b131      	cbz	r1, 800298e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x12>
 8002980:	f44f 718a 	mov.w	r1, #276	@ 0x114
 8002984:	4b03      	ldr	r3, [pc, #12]	@ (8002994 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
 8002986:	4a04      	ldr	r2, [pc, #16]	@ (8002998 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
 8002988:	4804      	ldr	r0, [pc, #16]	@ (800299c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
 800298a:	f02f fd95 	bl	80324b8 <__assert_func>
    }
 800298e:	68c0      	ldr	r0, [r0, #12]
 8002990:	bd08      	pop	{r3, pc}
 8002992:	bf00      	nop
 8002994:	08033f88 	.word	0x08033f88
 8002998:	0803436a 	.word	0x0803436a
 800299c:	080340cd 	.word	0x080340cd

080029a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
 80029a0:	b570      	push	{r4, r5, r6, lr}
 80029a2:	4604      	mov	r4, r0
        assert(handle < no_streams);
 80029a4:	b129      	cbz	r1, 80029b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x12>
 80029a6:	216e      	movs	r1, #110	@ 0x6e
 80029a8:	4b26      	ldr	r3, [pc, #152]	@ (8002a44 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa4>)
 80029aa:	4a27      	ldr	r2, [pc, #156]	@ (8002a48 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa8>)
 80029ac:	4827      	ldr	r0, [pc, #156]	@ (8002a4c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xac>)
 80029ae:	f02f fd83 	bl	80324b8 <__assert_func>
        switch (cmd)
 80029b2:	2a05      	cmp	r2, #5
 80029b4:	d82b      	bhi.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 80029b6:	e8df f002 	tbb	[pc, r2]
 80029ba:	2503      	.short	0x2503
 80029bc:	3f37302b 	.word	0x3f37302b
            if (mjpegDecoders[handle]->hasVideo())
 80029c0:	6840      	ldr	r0, [r0, #4]
 80029c2:	6803      	ldr	r3, [r0, #0]
 80029c4:	691b      	ldr	r3, [r3, #16]
 80029c6:	4798      	blx	r3
 80029c8:	b308      	cbz	r0, 8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                stream.isPlaying = true;
 80029ca:	2301      	movs	r3, #1
 80029cc:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
                stream.isShowingOneFrame = false;
 80029d0:	2300      	movs	r3, #0
 80029d2:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
                stream.frameCount = 0;
 80029d6:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
 80029d8:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
 80029da:	f894 3027 	ldrb.w	r3, [r4, #39]	@ 0x27
 80029de:	b9b3      	cbnz	r3, 8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                    MJPEGDecoder* const decoder = mjpegDecoders[handle];
 80029e0:	6864      	ldr	r4, [r4, #4]
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
 80029e2:	6823      	ldr	r3, [r4, #0]
 80029e4:	4620      	mov	r0, r4
 80029e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029e8:	4798      	blx	r3
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	4605      	mov	r5, r0
 80029ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80029f0:	4620      	mov	r0, r4
 80029f2:	4798      	blx	r3
 80029f4:	4285      	cmp	r5, r0
 80029f6:	d10a      	bne.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                        decoder->gotoNextFrame();
 80029f8:	6823      	ldr	r3, [r4, #0]
 80029fa:	4620      	mov	r0, r4
    }
 80029fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
 8002a00:	699b      	ldr	r3, [r3, #24]
 8002a02:	4718      	bx	r3
            stream.isPlaying = false;
 8002a04:	2300      	movs	r3, #0
 8002a06:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a0a:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
    }
 8002a0e:	bd70      	pop	{r4, r5, r6, pc}
            stream.seek_to_frame = param;
 8002a10:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
 8002a12:	2300      	movs	r3, #0
            stream.frameCount = 0;
 8002a14:	60a3      	str	r3, [r4, #8]
            stream.tickCount = 0;
 8002a16:	6123      	str	r3, [r4, #16]
            break;
 8002a18:	e7f9      	b.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
            stream.seek_to_frame = param;
 8002a1a:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
 8002a1c:	2301      	movs	r3, #1
 8002a1e:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
 8002a22:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8002a26:	e7f4      	b.n	8002a12 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x72>
            stream.isPlaying = false;
 8002a28:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
 8002a2a:	2201      	movs	r2, #1
            stream.isPlaying = false;
 8002a2c:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a30:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.seek_to_frame = 1;
 8002a34:	61c2      	str	r2, [r0, #28]
 8002a36:	e7ed      	b.n	8002a14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x74>
            stream.repeat = (param > 0);
 8002a38:	3b00      	subs	r3, #0
 8002a3a:	bf18      	it	ne
 8002a3c:	2301      	movne	r3, #1
 8002a3e:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
 8002a42:	e7e4      	b.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 8002a44:	08033f88 	.word	0x08033f88
 8002a48:	080344af 	.word	0x080344af
 8002a4c:	080340cd 	.word	0x080340cd

08002a50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
 8002a50:	b570      	push	{r4, r5, r6, lr}
 8002a52:	4604      	mov	r4, r0
        assert(handle < no_streams);
 8002a54:	460d      	mov	r5, r1
 8002a56:	b129      	cbz	r1, 8002a64 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x14>
 8002a58:	215e      	movs	r1, #94	@ 0x5e
 8002a5a:	4b0d      	ldr	r3, [pc, #52]	@ (8002a90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x40>)
 8002a5c:	4a0d      	ldr	r2, [pc, #52]	@ (8002a94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x44>)
 8002a5e:	480e      	ldr	r0, [pc, #56]	@ (8002a98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>)
 8002a60:	f02f fd2a 	bl	80324b8 <__assert_func>
        mjpegDecoders[handle]->setVideoData(reader);
 8002a64:	6840      	ldr	r0, [r0, #4]
 8002a66:	4611      	mov	r1, r2
 8002a68:	6803      	ldr	r3, [r0, #0]
 8002a6a:	68db      	ldr	r3, [r3, #12]
 8002a6c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a6e:	6860      	ldr	r0, [r4, #4]
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a74:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002a76:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a78:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002a7a:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002a7c:	4629      	mov	r1, r5
 8002a7e:	462b      	mov	r3, r5
 8002a80:	4620      	mov	r0, r4
 8002a82:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002a84:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002a88:	2201      	movs	r2, #1
    }
 8002a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002a8e:	4760      	bx	ip
 8002a90:	08033f88 	.word	0x08033f88
 8002a94:	08034613 	.word	0x08034613
 8002a98:	080340cd 	.word	0x080340cd

08002a9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
 8002a9c:	b570      	push	{r4, r5, r6, lr}
 8002a9e:	460d      	mov	r5, r1
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	4611      	mov	r1, r2
 8002aa4:	461a      	mov	r2, r3
        assert(handle < no_streams);
 8002aa6:	b12d      	cbz	r5, 8002ab4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x18>
 8002aa8:	214e      	movs	r1, #78	@ 0x4e
 8002aaa:	4b0d      	ldr	r3, [pc, #52]	@ (8002ae0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x44>)
 8002aac:	4a0d      	ldr	r2, [pc, #52]	@ (8002ae4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x48>)
 8002aae:	480e      	ldr	r0, [pc, #56]	@ (8002ae8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4c>)
 8002ab0:	f02f fd02 	bl	80324b8 <__assert_func>
        mjpegDecoders[handle]->setVideoData(movie, length);
 8002ab4:	6840      	ldr	r0, [r0, #4]
 8002ab6:	6803      	ldr	r3, [r0, #0]
 8002ab8:	689b      	ldr	r3, [r3, #8]
 8002aba:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002abc:	6860      	ldr	r0, [r4, #4]
 8002abe:	6803      	ldr	r3, [r0, #0]
 8002ac0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ac2:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002ac4:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ac6:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002ac8:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002aca:	4629      	mov	r1, r5
 8002acc:	462b      	mov	r3, r5
 8002ace:	4620      	mov	r0, r4
 8002ad0:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002ad2:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002ad6:	2201      	movs	r2, #1
    }
 8002ad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002adc:	4760      	bx	ip
 8002ade:	bf00      	nop
 8002ae0:	08033f88 	.word	0x08033f88
 8002ae4:	08034749 	.word	0x08034749
 8002ae8:	080340cd 	.word	0x080340cd

08002aec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
 8002aec:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002aee:	b129      	cbz	r1, 8002afc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x10>
 8002af0:	2140      	movs	r1, #64	@ 0x40
 8002af2:	4b05      	ldr	r3, [pc, #20]	@ (8002b08 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
 8002af4:	4a05      	ldr	r2, [pc, #20]	@ (8002b0c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
 8002af6:	4806      	ldr	r0, [pc, #24]	@ (8002b10 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
 8002af8:	f02f fcde 	bl	80324b8 <__assert_func>
        stream.frame_rate_video = video_frames;
 8002afc:	e9c0 3205 	strd	r3, r2, [r0, #20]
        stream.frameCount = 0;
 8002b00:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
 8002b02:	6101      	str	r1, [r0, #16]
    }
 8002b04:	bd08      	pop	{r3, pc}
 8002b06:	bf00      	nop
 8002b08:	08033f88 	.word	0x08033f88
 8002b0c:	080348b4 	.word	0x080348b4
 8002b10:	080340cd 	.word	0x080340cd

08002b14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
 8002b14:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002b18:	4604      	mov	r4, r0
 8002b1a:	4615      	mov	r5, r2
 8002b1c:	461f      	mov	r7, r3
        assert(handle < no_streams);
 8002b1e:	b129      	cbz	r1, 8002b2c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x18>
 8002b20:	21e9      	movs	r1, #233	@ 0xe9
 8002b22:	4b18      	ldr	r3, [pc, #96]	@ (8002b84 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
 8002b24:	4a18      	ldr	r2, [pc, #96]	@ (8002b88 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
 8002b26:	4819      	ldr	r0, [pc, #100]	@ (8002b8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
 8002b28:	f02f fcc6 	bl	80324b8 <__assert_func>
        if (mjpegDecoders[handle]->hasVideo())
 8002b2c:	6840      	ldr	r0, [r0, #4]
 8002b2e:	6803      	ldr	r3, [r0, #0]
 8002b30:	691b      	ldr	r3, [r3, #16]
 8002b32:	4798      	blx	r3
 8002b34:	b310      	cbz	r0, 8002b7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>
        return instance;
 8002b36:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 8002b94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x80>
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
 8002b3a:	2101      	movs	r1, #1
 8002b3c:	f8d8 0000 	ldr.w	r0, [r8]
 8002b40:	f008 ff96 	bl	800ba70 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8002b44:	4606      	mov	r6, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
 8002b46:	4639      	mov	r1, r7
 8002b48:	4668      	mov	r0, sp
 8002b4a:	f00b fb83 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b4e:	4b10      	ldr	r3, [pc, #64]	@ (8002b90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
 8002b50:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8002b54:	881b      	ldrh	r3, [r3, #0]
 8002b56:	f9bd 2000 	ldrsh.w	r2, [sp]
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b5a:	6860      	ldr	r0, [r4, #4]
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b5c:	fb03 2201 	mla	r2, r3, r1, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b60:	6801      	ldr	r1, [r0, #0]
 8002b62:	eb06 0242 	add.w	r2, r6, r2, lsl #1
 8002b66:	69cc      	ldr	r4, [r1, #28]
 8002b68:	4629      	mov	r1, r5
 8002b6a:	47a0      	blx	r4
 8002b6c:	f8d8 0000 	ldr.w	r0, [r8]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b70:	6803      	ldr	r3, [r0, #0]
 8002b72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
 8002b74:	b002      	add	sp, #8
 8002b76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b7a:	4718      	bx	r3
    }
 8002b7c:	b002      	add	sp, #8
 8002b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b82:	bf00      	nop
 8002b84:	08033f88 	.word	0x08033f88
 8002b88:	08034a00 	.word	0x08034a00
 8002b8c:	080340cd 	.word	0x080340cd
 8002b90:	20082ebe 	.word	0x20082ebe
 8002b94:	20082ec4 	.word	0x20082ec4

08002b98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
 8002b98:	b508      	push	{r3, lr}
 8002b9a:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
 8002b9c:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
 8002ba0:	b130      	cbz	r0, 8002bb0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x18>
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
 8002ba2:	f240 116b 	movw	r1, #363	@ 0x16b
 8002ba6:	4b07      	ldr	r3, [pc, #28]	@ (8002bc4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
 8002ba8:	4a07      	ldr	r2, [pc, #28]	@ (8002bc8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
 8002baa:	4808      	ldr	r0, [pc, #32]	@ (8002bcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
 8002bac:	f02f fc84 	bl	80324b8 <__assert_func>
        streams[handle].isActive = true;
 8002bb0:	2201      	movs	r2, #1
 8002bb2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
 8002bb6:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
 8002bba:	86c8      	strh	r0, [r1, #54]	@ 0x36
        bufferHeight = height;
 8002bbc:	8708      	strh	r0, [r1, #56]	@ 0x38
        buffer = videoBuffer;
 8002bbe:	6308      	str	r0, [r1, #48]	@ 0x30
    }
 8002bc0:	bd08      	pop	{r3, pc}
 8002bc2:	bf00      	nop
 8002bc4:	08034b47 	.word	0x08034b47
 8002bc8:	08034b77 	.word	0x08034b77
 8002bcc:	080340cd 	.word	0x080340cd

08002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd0:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002bd4:	4b0a      	ldr	r3, [pc, #40]	@ (8002c00 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x30>)
 8002bd6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8002bda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bde:	f3bf 8f6f 	isb	sy
 8002be2:	2280      	movs	r2, #128	@ 0x80
 8002be4:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002be8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bec:	f3bf 8f6f 	isb	sy
 8002bf0:	2210      	movs	r2, #16
 8002bf2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bf6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bfa:	f3bf 8f6f 	isb	sy
}
 8002bfe:	4770      	bx	lr
 8002c00:	e000e100 	.word	0xe000e100

08002c04 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c04:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002c08:	4b03      	ldr	r3, [pc, #12]	@ (8002c18 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x14>)
 8002c0a:	60da      	str	r2, [r3, #12]
 8002c0c:	2280      	movs	r2, #128	@ 0x80
 8002c0e:	611a      	str	r2, [r3, #16]
 8002c10:	2210      	movs	r2, #16
 8002c12:	611a      	str	r2, [r3, #16]
}
 8002c14:	4770      	bx	lr
 8002c16:	bf00      	nop
 8002c18:	e000e100 	.word	0xe000e100

08002c1c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002c1c:	b510      	push	{r4, lr}
    static GPU2DVectorRenderer renderer;
 8002c1e:	4c08      	ldr	r4, [pc, #32]	@ (8002c40 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x24>)
 8002c20:	e8d4 3faf 	lda	r3, [r4]
 8002c24:	07db      	lsls	r3, r3, #31
 8002c26:	d409      	bmi.n	8002c3c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c28:	4620      	mov	r0, r4
 8002c2a:	f02e fa6e 	bl	803110a <__cxa_guard_acquire>
 8002c2e:	b128      	cbz	r0, 8002c3c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c30:	4804      	ldr	r0, [pc, #16]	@ (8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x28>)
 8002c32:	f02f fc5f 	bl	80324f4 <atexit>
 8002c36:	4620      	mov	r0, r4
 8002c38:	f02e fa73 	bl	8031122 <__cxa_guard_release>
}
 8002c3c:	4802      	ldr	r0, [pc, #8]	@ (8002c48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x2c>)
 8002c3e:	bd10      	pop	{r4, pc}
 8002c40:	2000b8a4 	.word	0x2000b8a4
 8002c44:	08002731 	.word	0x08002731
 8002c48:	20000044 	.word	0x20000044

08002c4c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002c4c:	b510      	push	{r4, lr}
 8002c4e:	4c14      	ldr	r4, [pc, #80]	@ (8002ca0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002c50:	6823      	ldr	r3, [r4, #0]
 8002c52:	b323      	cbz	r3, 8002c9e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002c54:	4b13      	ldr	r3, [pc, #76]	@ (8002ca4 <HAL_LTDC_LineEventCallback+0x58>)
 8002c56:	4a14      	ldr	r2, [pc, #80]	@ (8002ca8 <HAL_LTDC_LineEventCallback+0x5c>)
 8002c58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c5a:	8811      	ldrh	r1, [r2, #0]
 8002c5c:	428b      	cmp	r3, r1
 8002c5e:	d113      	bne.n	8002c88 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002c60:	4b12      	ldr	r3, [pc, #72]	@ (8002cac <HAL_LTDC_LineEventCallback+0x60>)
 8002c62:	8819      	ldrh	r1, [r3, #0]
 8002c64:	f003 fc42 	bl	80064ec <HAL_LTDC_ProgramLineEvent>
 8002c68:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002c6a:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002c6e:	3301      	adds	r3, #1
 8002c70:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002c74:	f7ff f9ca 	bl	800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002c78:	6820      	ldr	r0, [r4, #0]
 8002c7a:	f008 fe97 	bl	800b9ac <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002c7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002c82:	2000      	movs	r0, #0
 8002c84:	f7fe ba64 	b.w	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002c88:	f003 fc30 	bl	80064ec <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002c8c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002c8e:	6803      	ldr	r3, [r0, #0]
 8002c90:	6a1b      	ldr	r3, [r3, #32]
 8002c92:	4798      	blx	r3
    }
 8002c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002c98:	2000      	movs	r0, #0
 8002c9a:	f7fe ba73 	b.w	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002c9e:	bd10      	pop	{r4, pc}
 8002ca0:	20082ec4 	.word	0x20082ec4
 8002ca4:	40016800 	.word	0x40016800
 8002ca8:	2000b8a2 	.word	0x2000b8a2
 8002cac:	2000b8a0 	.word	0x2000b8a0

08002cb0 <_GLOBAL__sub_I_mjpegdecoder1>:
}
 8002cb0:	b508      	push	{r3, lr}
HardwareMJPEGDecoder mjpegdecoder1;
 8002cb2:	480b      	ldr	r0, [pc, #44]	@ (8002ce0 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
 8002cb4:	f7fe fbac 	bl	8001410 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
 8002cb8:	4b0a      	ldr	r3, [pc, #40]	@ (8002ce4 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
 8002cba:	4a0b      	ldr	r2, [pc, #44]	@ (8002ce8 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
        Stream()
 8002cbc:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
 8002cc0:	601a      	str	r2, [r3, #0]
 8002cc2:	2201      	movs	r2, #1
 8002cc4:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
 8002cc8:	2200      	movs	r2, #0
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cca:	e9c3 2201 	strd	r2, r2, [r3, #4]
        Stream()
 8002cce:	6259      	str	r1, [r3, #36]	@ 0x24
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd0:	e9c3 2203 	strd	r2, r2, [r3, #12]
              frame_rate_video(0), frame_rate_ticks(0),
 8002cd4:	e9c3 2205 	strd	r2, r2, [r3, #20]
              seek_to_frame(0),
 8002cd8:	61da      	str	r2, [r3, #28]
              doDecodeNextFrame(false)
 8002cda:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
}
 8002cde:	bd08      	pop	{r3, pc}
 8002ce0:	2000b8d8 	.word	0x2000b8d8
 8002ce4:	2000b8a8 	.word	0x2000b8a8
 8002ce8:	08034c98 	.word	0x08034c98

08002cec <HAL_GPU2D_CommandListCpltCallback>:
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
{
    /* Prevent unused argument(s) compilation warning */
    UNUSED(hgpu2d);

    last_cl_id = CmdListID;
 8002cec:	4b02      	ldr	r3, [pc, #8]	@ (8002cf8 <HAL_GPU2D_CommandListCpltCallback+0xc>)
 8002cee:	6019      	str	r1, [r3, #0]

    /* Return a token back to a semaphore */
    osSemaphoreRelease(nema_irq_sem);
 8002cf0:	4b02      	ldr	r3, [pc, #8]	@ (8002cfc <HAL_GPU2D_CommandListCpltCallback+0x10>)
 8002cf2:	6818      	ldr	r0, [r3, #0]
 8002cf4:	f005 bf64 	b.w	8008bc0 <osSemaphoreRelease>
 8002cf8:	20000048 	.word	0x20000048
 8002cfc:	2000b920 	.word	0x2000b920

08002d00 <nema_reg_read>:

    return error_code;
}

uint32_t nema_reg_read(uint32_t reg)
{
 8002d00:	4601      	mov	r1, r0
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 8002d02:	4801      	ldr	r0, [pc, #4]	@ (8002d08 <nema_reg_read+0x8>)
 8002d04:	f001 beec 	b.w	8004ae0 <HAL_GPU2D_ReadRegister>
 8002d08:	20000570 	.word	0x20000570

08002d0c <nema_reg_write>:
}

void nema_reg_write(uint32_t reg, uint32_t value)
{
 8002d0c:	460a      	mov	r2, r1
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 8002d0e:	4601      	mov	r1, r0
 8002d10:	4801      	ldr	r0, [pc, #4]	@ (8002d18 <nema_reg_write+0xc>)
 8002d12:	f001 bee8 	b.w	8004ae6 <HAL_GPU2D_WriteRegister>
 8002d16:	bf00      	nop
 8002d18:	20000570 	.word	0x20000570

08002d1c <nema_wait_irq>:
}

int nema_wait_irq(void)
{
 8002d1c:	b508      	push	{r3, lr}
    /* Wait indefinitely for a free semaphore */
    osSemaphoreAcquire(nema_irq_sem, osWaitForever);
 8002d1e:	4b04      	ldr	r3, [pc, #16]	@ (8002d30 <nema_wait_irq+0x14>)
 8002d20:	f04f 31ff 	mov.w	r1, #4294967295
 8002d24:	6818      	ldr	r0, [r3, #0]
 8002d26:	f005 ff1d 	bl	8008b64 <osSemaphoreAcquire>

    return 0;
}
 8002d2a:	2000      	movs	r0, #0
 8002d2c:	bd08      	pop	{r3, pc}
 8002d2e:	bf00      	nop
 8002d30:	2000b920 	.word	0x2000b920

08002d34 <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 8002d34:	b538      	push	{r3, r4, r5, lr}
 8002d36:	4604      	mov	r4, r0
    while (last_cl_id < cl_id)
 8002d38:	4d04      	ldr	r5, [pc, #16]	@ (8002d4c <nema_wait_irq_cl+0x18>)
 8002d3a:	682b      	ldr	r3, [r5, #0]
 8002d3c:	42a3      	cmp	r3, r4
 8002d3e:	db01      	blt.n	8002d44 <nema_wait_irq_cl+0x10>
    {
        (void)nema_wait_irq();
    }

    return 0;
}
 8002d40:	2000      	movs	r0, #0
 8002d42:	bd38      	pop	{r3, r4, r5, pc}
        (void)nema_wait_irq();
 8002d44:	f7ff ffea 	bl	8002d1c <nema_wait_irq>
 8002d48:	e7f7      	b.n	8002d3a <nema_wait_irq_cl+0x6>
 8002d4a:	bf00      	nop
 8002d4c:	20000048 	.word	0x20000048

08002d50 <nema_host_free>:
    return 0;
}

void nema_host_free(void* ptr)
{
    tsi_free(ptr);
 8002d50:	f01a bcfe 	b.w	801d750 <tsi_free>

08002d54 <nema_host_malloc>:
}

void* nema_host_malloc(unsigned size)
{
 8002d54:	4601      	mov	r1, r0
    return tsi_malloc(size);
 8002d56:	2000      	movs	r0, #0
 8002d58:	f01a bc9c 	b.w	801d694 <tsi_malloc_pool>

08002d5c <nema_buffer_create>:
}

nema_buffer_t nema_buffer_create(int size)
{
 8002d5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d5e:	4604      	mov	r4, r0
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002d60:	2000      	movs	r0, #0
{
 8002d62:	460e      	mov	r6, r1
    memset(&bo, 0, sizeof(bo));
 8002d64:	9001      	str	r0, [sp, #4]
    bo.base_virt = tsi_malloc(size);
 8002d66:	f01a fc95 	bl	801d694 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002d6a:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002d6c:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002d70:	9600      	str	r6, [sp, #0]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 8002d72:	b928      	cbnz	r0, 8002d80 <nema_buffer_create+0x24>
 8002d74:	21a6      	movs	r1, #166	@ 0xa6
 8002d76:	4b06      	ldr	r3, [pc, #24]	@ (8002d90 <nema_buffer_create+0x34>)
 8002d78:	4a06      	ldr	r2, [pc, #24]	@ (8002d94 <nema_buffer_create+0x38>)
 8002d7a:	4807      	ldr	r0, [pc, #28]	@ (8002d98 <nema_buffer_create+0x3c>)
 8002d7c:	f02f fb9c 	bl	80324b8 <__assert_func>

    return bo;
 8002d80:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002d84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002d88:	4620      	mov	r0, r4
 8002d8a:	b004      	add	sp, #16
 8002d8c:	bd70      	pop	{r4, r5, r6, pc}
 8002d8e:	bf00      	nop
 8002d90:	08034cd0 	.word	0x08034cd0
 8002d94:	08034e18 	.word	0x08034e18
 8002d98:	08034d17 	.word	0x08034d17

08002d9c <nema_sys_init>:
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002d9c:	2101      	movs	r1, #1
{
 8002d9e:	b5f0      	push	{r4, r5, r6, r7, lr}
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da0:	2200      	movs	r2, #0
 8002da2:	4608      	mov	r0, r1
{
 8002da4:	b087      	sub	sp, #28
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da6:	f005 fe8e 	bl	8008ac6 <osSemaphoreNew>
 8002daa:	4b21      	ldr	r3, [pc, #132]	@ (8002e30 <nema_sys_init+0x94>)
 8002dac:	6018      	str	r0, [r3, #0]
    assert(nema_irq_sem != NULL);
 8002dae:	b928      	cbnz	r0, 8002dbc <nema_sys_init+0x20>
 8002db0:	2156      	movs	r1, #86	@ 0x56
 8002db2:	4b20      	ldr	r3, [pc, #128]	@ (8002e34 <nema_sys_init+0x98>)
 8002db4:	4a20      	ldr	r2, [pc, #128]	@ (8002e38 <nema_sys_init+0x9c>)
    assert(error_code == 0);
 8002db6:	4821      	ldr	r0, [pc, #132]	@ (8002e3c <nema_sys_init+0xa0>)
 8002db8:	f02f fb7e 	bl	80324b8 <__assert_func>
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 8002dbc:	2701      	movs	r7, #1
 8002dbe:	2408      	movs	r4, #8
 8002dc0:	4a1f      	ldr	r2, [pc, #124]	@ (8002e40 <nema_sys_init+0xa4>)
 8002dc2:	f44f 537c 	mov.w	r3, #16128	@ 0x3f00
 8002dc6:	4611      	mov	r1, r2
 8002dc8:	2000      	movs	r0, #0
 8002dca:	e9cd 7400 	strd	r7, r4, [sp]
 8002dce:	f01a fc05 	bl	801d5dc <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dd2:	b118      	cbz	r0, 8002ddc <nema_sys_init+0x40>
 8002dd4:	215a      	movs	r1, #90	@ 0x5a
 8002dd6:	4b1b      	ldr	r3, [pc, #108]	@ (8002e44 <nema_sys_init+0xa8>)
 8002dd8:	4a17      	ldr	r2, [pc, #92]	@ (8002e38 <nema_sys_init+0x9c>)
 8002dda:	e7ec      	b.n	8002db6 <nema_sys_init+0x1a>
    error_code = tsi_malloc_init_pool_aligned(1, (void*)nemagfx_stencil_buffer_mem, (uintptr_t)nemagfx_stencil_buffer_mem, NEMAGFX_STENCIL_POOL_SIZE, 1, 8);
 8002ddc:	4a1a      	ldr	r2, [pc, #104]	@ (8002e48 <nema_sys_init+0xac>)
 8002dde:	f44f 23be 	mov.w	r3, #389120	@ 0x5f000
 8002de2:	4611      	mov	r1, r2
 8002de4:	4638      	mov	r0, r7
 8002de6:	e9cd 7400 	strd	r7, r4, [sp]
 8002dea:	f01a fbf7 	bl	801d5dc <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dee:	4606      	mov	r6, r0
 8002df0:	b118      	cbz	r0, 8002dfa <nema_sys_init+0x5e>
 8002df2:	215c      	movs	r1, #92	@ 0x5c
 8002df4:	4b13      	ldr	r3, [pc, #76]	@ (8002e44 <nema_sys_init+0xa8>)
 8002df6:	4a10      	ldr	r2, [pc, #64]	@ (8002e38 <nema_sys_init+0x9c>)
 8002df8:	e7dd      	b.n	8002db6 <nema_sys_init+0x1a>
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 8002dfa:	ad02      	add	r5, sp, #8
 8002dfc:	4c13      	ldr	r4, [pc, #76]	@ (8002e4c <nema_sys_init+0xb0>)
 8002dfe:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002e02:	4628      	mov	r0, r5
 8002e04:	f7ff ffaa 	bl	8002d5c <nema_buffer_create>
 8002e08:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e0c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 8002e10:	b91a      	cbnz	r2, 8002e1a <nema_sys_init+0x7e>
 8002e12:	2160      	movs	r1, #96	@ 0x60
 8002e14:	4b0e      	ldr	r3, [pc, #56]	@ (8002e50 <nema_sys_init+0xb4>)
 8002e16:	4a08      	ldr	r2, [pc, #32]	@ (8002e38 <nema_sys_init+0x9c>)
 8002e18:	e7cd      	b.n	8002db6 <nema_sys_init+0x1a>
    error_code = nema_rb_init(&ring_buffer_str, 1);
 8002e1a:	4639      	mov	r1, r7
 8002e1c:	4620      	mov	r0, r4
 8002e1e:	f00d fc0d 	bl	801063c <nema_rb_init>
    if (error_code < 0)
 8002e22:	2800      	cmp	r0, #0
    last_cl_id = 0;
 8002e24:	bfa4      	itt	ge
 8002e26:	4b0b      	ldrge	r3, [pc, #44]	@ (8002e54 <nema_sys_init+0xb8>)
 8002e28:	601e      	strge	r6, [r3, #0]
}
 8002e2a:	b007      	add	sp, #28
 8002e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e2e:	bf00      	nop
 8002e30:	2000b920 	.word	0x2000b920
 8002e34:	08034d72 	.word	0x08034d72
 8002e38:	08034e2b 	.word	0x08034e2b
 8002e3c:	08034d17 	.word	0x08034d17
 8002e40:	2006a93c 	.word	0x2006a93c
 8002e44:	08034d87 	.word	0x08034d87
 8002e48:	2000b93c 	.word	0x2000b93c
 8002e4c:	2000b924 	.word	0x2000b924
 8002e50:	08034d97 	.word	0x08034d97
 8002e54:	20000048 	.word	0x20000048

08002e58 <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 8002e58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002e5a:	2300      	movs	r3, #0
{
 8002e5c:	4604      	mov	r4, r0
 8002e5e:	4608      	mov	r0, r1
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e60:	4611      	mov	r1, r2
{
 8002e62:	4616      	mov	r6, r2
    memset(&bo, 0, sizeof(bo));
 8002e64:	9301      	str	r3, [sp, #4]
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e66:	f01a fc15 	bl	801d694 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002e6a:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002e6c:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002e70:	9600      	str	r6, [sp, #0]
    bo.fd        = 0;
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create_pool");
 8002e72:	b928      	cbnz	r0, 8002e80 <nema_buffer_create_pool+0x28>
 8002e74:	21b3      	movs	r1, #179	@ 0xb3
 8002e76:	4b06      	ldr	r3, [pc, #24]	@ (8002e90 <nema_buffer_create_pool+0x38>)
 8002e78:	4a06      	ldr	r2, [pc, #24]	@ (8002e94 <nema_buffer_create_pool+0x3c>)
 8002e7a:	4807      	ldr	r0, [pc, #28]	@ (8002e98 <nema_buffer_create_pool+0x40>)
 8002e7c:	f02f fb1c 	bl	80324b8 <__assert_func>

    return bo;
 8002e80:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002e88:	4620      	mov	r0, r4
 8002e8a:	b004      	add	sp, #16
 8002e8c:	bd70      	pop	{r4, r5, r6, pc}
 8002e8e:	bf00      	nop
 8002e90:	08034db4 	.word	0x08034db4
 8002e94:	08034e00 	.word	0x08034e00
 8002e98:	08034d17 	.word	0x08034d17

08002e9c <nema_buffer_map>:

void* nema_buffer_map(nema_buffer_t* bo)
{
    return bo->base_virt;
}
 8002e9c:	6880      	ldr	r0, [r0, #8]
 8002e9e:	4770      	bx	lr

08002ea0 <nema_buffer_destroy>:
    UNUSED(bo);
}

void nema_buffer_destroy(nema_buffer_t* bo)
{
    if (bo->fd == -1)
 8002ea0:	6843      	ldr	r3, [r0, #4]
{
 8002ea2:	b510      	push	{r4, lr}
    if (bo->fd == -1)
 8002ea4:	3301      	adds	r3, #1
{
 8002ea6:	4604      	mov	r4, r0
    if (bo->fd == -1)
 8002ea8:	d009      	beq.n	8002ebe <nema_buffer_destroy+0x1e>
    {
        return; /* Buffer weren't allocated! */
    }

    tsi_free(bo->base_virt);
 8002eaa:	6880      	ldr	r0, [r0, #8]
 8002eac:	f01a fc50 	bl	801d750 <tsi_free>

    bo->base_virt = (void*)0;
 8002eb0:	2300      	movs	r3, #0
    bo->base_phys = 0;
 8002eb2:	e9c4 3302 	strd	r3, r3, [r4, #8]
    bo->size      = 0;
 8002eb6:	6023      	str	r3, [r4, #0]
    bo->fd        = -1; /* Buffer not allocated */
 8002eb8:	f04f 33ff 	mov.w	r3, #4294967295
 8002ebc:	6063      	str	r3, [r4, #4]
}
 8002ebe:	bd10      	pop	{r4, pc}

08002ec0 <nema_buffer_flush>:
uintptr_t nema_buffer_phys(nema_buffer_t* bo)
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t* bo)
 8002ec0:	4770      	bx	lr

08002ec2 <nema_mutex_lock>:
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);
    /* USER CODE END nema_mutex_lock */

    return retval;
}
 8002ec2:	2000      	movs	r0, #0
 8002ec4:	4770      	bx	lr

08002ec6 <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
 8002ec6:	2000      	movs	r0, #0
 8002ec8:	4770      	bx	lr

08002eca <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002eca:	4770      	bx	lr

08002ecc <_ZN23ApplicationFontProviderD0Ev>:
 8002ecc:	b510      	push	{r4, lr}
 8002ece:	4604      	mov	r4, r0
 8002ed0:	2104      	movs	r1, #4
 8002ed2:	f02e f918 	bl	8031106 <_ZdlPvj>
 8002ed6:	4620      	mov	r0, r4
 8002ed8:	bd10      	pop	{r4, pc}

08002eda <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002eda:	2901      	cmp	r1, #1
{
 8002edc:	b508      	push	{r3, lr}
    switch (typography)
 8002ede:	d006      	beq.n	8002eee <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002ee0:	2902      	cmp	r1, #2
 8002ee2:	d008      	beq.n	8002ef6 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002ee4:	b959      	cbnz	r1, 8002efe <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002ee6:	f000 fc4b 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 8002eea:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002eec:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002eee:	f000 fc47 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 8002ef2:	6840      	ldr	r0, [r0, #4]
 8002ef4:	e7fa      	b.n	8002eec <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002ef6:	f000 fc43 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 8002efa:	6880      	ldr	r0, [r0, #8]
 8002efc:	e7f6      	b.n	8002eec <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002efe:	2000      	movs	r0, #0
 8002f00:	e7f4      	b.n	8002eec <_ZN23ApplicationFontProvider7getFontEt+0x12>
	...

08002f04 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f04:	4800      	ldr	r0, [pc, #0]	@ (8002f08 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f06:	4770      	bx	lr
 8002f08:	08034e50 	.word	0x08034e50

08002f0c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f0c:	2004      	movs	r0, #4
 8002f0e:	4770      	bx	lr

08002f10 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f10:	b513      	push	{r0, r1, r4, lr}
 8002f12:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f14:	b151      	cbz	r1, 8002f2c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f16:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f18:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f1a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f1e:	aa01      	add	r2, sp, #4
 8002f20:	689c      	ldr	r4, [r3, #8]
 8002f22:	f10d 0303 	add.w	r3, sp, #3
 8002f26:	47a0      	blx	r4
        return glyph;
    }
 8002f28:	b002      	add	sp, #8
 8002f2a:	bd10      	pop	{r4, pc}
            return 0;
 8002f2c:	4608      	mov	r0, r1
 8002f2e:	e7fb      	b.n	8002f28 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f30 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f30:	89c0      	ldrh	r0, [r0, #14]
 8002f32:	4770      	bx	lr

08002f34 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f34:	8a00      	ldrh	r0, [r0, #16]
 8002f36:	4770      	bx	lr

08002f38 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f38:	88c0      	ldrh	r0, [r0, #6]
 8002f3a:	4770      	bx	lr

08002f3c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f3c:	8880      	ldrh	r0, [r0, #4]
 8002f3e:	4770      	bx	lr

08002f40 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f40:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f42:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f46:	4770      	bx	lr

08002f48 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f48:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f4a:	09c0      	lsrs	r0, r0, #7
 8002f4c:	4770      	bx	lr

08002f4e <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f4e:	2000      	movs	r0, #0
 8002f50:	4770      	bx	lr
	...

08002f54 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f54:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f5c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f58:	4770      	bx	lr
 8002f5a:	bf00      	nop
 8002f5c:	00000000 	.word	0x00000000

08002f60 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002f60:	4770      	bx	lr

08002f62 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002f62:	4770      	bx	lr

08002f64 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002f64:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002f68:	6808      	ldr	r0, [r1, #0]
 8002f6a:	6849      	ldr	r1, [r1, #4]
 8002f6c:	c303      	stmia	r3!, {r0, r1}
    }
 8002f6e:	4770      	bx	lr

08002f70 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002f70:	4770      	bx	lr

08002f72 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002f72:	4770      	bx	lr

08002f74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002f74:	6041      	str	r1, [r0, #4]
    }
 8002f76:	4770      	bx	lr

08002f78 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002f78:	4770      	bx	lr
	...

08002f7c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f7c:	4b06      	ldr	r3, [pc, #24]	@ (8002f98 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002f7e:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002f82:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002f86:	2300      	movs	r3, #0
 8002f88:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen1

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002f8c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002f90:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoGameScreen1ScreenNoTransition();
    }
 8002f94:	4770      	bx	lr
 8002f96:	bf00      	nop
 8002f98:	0800303d 	.word	0x0800303d

08002f9c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002f9c:	2301      	movs	r3, #1
 8002f9e:	7203      	strb	r3, [r0, #8]
    }
 8002fa0:	4770      	bx	lr

08002fa2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002fa2:	4770      	bx	lr

08002fa4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002fa4:	4770      	bx	lr

08002fa6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002fa6:	4603      	mov	r3, r0
 8002fa8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002faa:	6841      	ldr	r1, [r0, #4]
 8002fac:	68c2      	ldr	r2, [r0, #12]
 8002fae:	689b      	ldr	r3, [r3, #8]
 8002fb0:	1054      	asrs	r4, r2, #1
 8002fb2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002fb6:	07d2      	lsls	r2, r2, #31
 8002fb8:	bf48      	it	mi
 8002fba:	590a      	ldrmi	r2, [r1, r4]
    }
 8002fbc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002fc0:	bf48      	it	mi
 8002fc2:	58d3      	ldrmi	r3, [r2, r3]
 8002fc4:	4718      	bx	r3

08002fc6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002fc6:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002fc8:	6840      	ldr	r0, [r0, #4]
 8002fca:	b130      	cbz	r0, 8002fda <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002fcc:	689a      	ldr	r2, [r3, #8]
 8002fce:	b91a      	cbnz	r2, 8002fd8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002fd0:	68d8      	ldr	r0, [r3, #12]
 8002fd2:	f000 0001 	and.w	r0, r0, #1
 8002fd6:	4770      	bx	lr
 8002fd8:	2001      	movs	r0, #1
    }
 8002fda:	4770      	bx	lr

08002fdc <_ZN8touchgfx12NoTransitionD0Ev>:
 8002fdc:	b510      	push	{r4, lr}
 8002fde:	4604      	mov	r4, r0
 8002fe0:	210c      	movs	r1, #12
 8002fe2:	f02e f890 	bl	8031106 <_ZdlPvj>
 8002fe6:	4620      	mov	r0, r4
 8002fe8:	bd10      	pop	{r4, pc}

08002fea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002fea:	b510      	push	{r4, lr}
 8002fec:	4604      	mov	r4, r0
 8002fee:	2110      	movs	r1, #16
 8002ff0:	f02e f889 	bl	8031106 <_ZdlPvj>
 8002ff4:	4620      	mov	r0, r4
 8002ff6:	bd10      	pop	{r4, pc}

08002ff8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002ff8:	b510      	push	{r4, lr}
 8002ffa:	4604      	mov	r4, r0
 8002ffc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003000:	f02e f881 	bl	8031106 <_ZdlPvj>
 8003004:	4620      	mov	r0, r4
 8003006:	bd10      	pop	{r4, pc}

08003008 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003008:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800300a:	f00a f811 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800300e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003012:	6803      	ldr	r3, [r0, #0]
 8003014:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003016:	4718      	bx	r3

08003018 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003018:	b510      	push	{r4, lr}
 800301a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800301c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003020:	b158      	cbz	r0, 800303a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003022:	6803      	ldr	r3, [r0, #0]
 8003024:	68db      	ldr	r3, [r3, #12]
 8003026:	4798      	blx	r3
 8003028:	b138      	cbz	r0, 800303a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800302a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800302e:	6803      	ldr	r3, [r0, #0]
 8003030:	689b      	ldr	r3, [r3, #8]
 8003032:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003034:	2300      	movs	r3, #0
 8003036:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800303a:	bd10      	pop	{r4, pc}

0800303c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl()
{
 800303c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreen1View, GameScreen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003040:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003044:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003046:	68b0      	ldr	r0, [r6, #8]
 8003048:	6803      	ldr	r3, [r0, #0]
 800304a:	6a1b      	ldr	r3, [r3, #32]
 800304c:	4798      	blx	r3
 800304e:	28e7      	cmp	r0, #231	@ 0xe7
 8003050:	d805      	bhi.n	800305e <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x22>
 8003052:	21a3      	movs	r1, #163	@ 0xa3
 8003054:	4b43      	ldr	r3, [pc, #268]	@ (8003164 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x128>)
 8003056:	4a44      	ldr	r2, [pc, #272]	@ (8003168 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003058:	4844      	ldr	r0, [pc, #272]	@ (800316c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
 800305a:	f02f fa2d 	bl	80324b8 <__assert_func>
 800305e:	6870      	ldr	r0, [r6, #4]
 8003060:	6803      	ldr	r3, [r0, #0]
 8003062:	6a1b      	ldr	r3, [r3, #32]
 8003064:	4798      	blx	r3
 8003066:	280f      	cmp	r0, #15
 8003068:	d803      	bhi.n	8003072 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x36>
 800306a:	21a4      	movs	r1, #164	@ 0xa4
 800306c:	4b40      	ldr	r3, [pc, #256]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x134>)
 800306e:	4a3e      	ldr	r2, [pc, #248]	@ (8003168 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003070:	e7f2      	b.n	8003058 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003072:	68f0      	ldr	r0, [r6, #12]
 8003074:	6803      	ldr	r3, [r0, #0]
 8003076:	6a1b      	ldr	r3, [r3, #32]
 8003078:	4798      	blx	r3
 800307a:	280b      	cmp	r0, #11
 800307c:	d803      	bhi.n	8003086 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x4a>
 800307e:	21a5      	movs	r1, #165	@ 0xa5
 8003080:	4b3c      	ldr	r3, [pc, #240]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x138>)
 8003082:	4a39      	ldr	r2, [pc, #228]	@ (8003168 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003084:	e7e8      	b.n	8003058 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003086:	f009 ffd3 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800308a:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 800317c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800308e:	3004      	adds	r0, #4
 8003090:	f009 fff3 	bl	800d07a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003094:	f8d9 0000 	ldr.w	r0, [r9]
 8003098:	b110      	cbz	r0, 80030a0 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800309a:	6803      	ldr	r3, [r0, #0]
 800309c:	68db      	ldr	r3, [r3, #12]
 800309e:	4798      	blx	r3
    if (*currentTrans)
 80030a0:	f8d9 0000 	ldr.w	r0, [r9]
 80030a4:	b110      	cbz	r0, 80030ac <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80030a6:	6803      	ldr	r3, [r0, #0]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	4798      	blx	r3
    if (*currentScreen)
 80030ac:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003180 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x144>
 80030b0:	f8d8 0000 	ldr.w	r0, [r8]
 80030b4:	b110      	cbz	r0, 80030bc <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80030b6:	6803      	ldr	r3, [r0, #0]
 80030b8:	695b      	ldr	r3, [r3, #20]
 80030ba:	4798      	blx	r3
    if (*currentPresenter)
 80030bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030c0:	b110      	cbz	r0, 80030c8 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80030c2:	6803      	ldr	r3, [r0, #0]
 80030c4:	685b      	ldr	r3, [r3, #4]
 80030c6:	4798      	blx	r3
    if (*currentScreen)
 80030c8:	f8d8 0000 	ldr.w	r0, [r8]
 80030cc:	b110      	cbz	r0, 80030d4 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80030ce:	6803      	ldr	r3, [r0, #0]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	4798      	blx	r3
    if (*currentPresenter)
 80030d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030d8:	b110      	cbz	r0, 80030e0 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80030da:	6803      	ldr	r3, [r0, #0]
 80030dc:	689b      	ldr	r3, [r3, #8]
 80030de:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030e0:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80030e2:	2100      	movs	r1, #0
 80030e4:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
 80030e6:	f04f 0b00 	mov.w	fp, #0
 80030ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030ec:	4798      	blx	r3
 80030ee:	4b22      	ldr	r3, [pc, #136]	@ (8003178 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x13c>)
 80030f0:	4604      	mov	r4, r0
 80030f2:	f8c0 b004 	str.w	fp, [r0, #4]
 80030f6:	f880 b008 	strb.w	fp, [r0, #8]
 80030fa:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80030fc:	68b0      	ldr	r0, [r6, #8]
 80030fe:	4659      	mov	r1, fp
 8003100:	6803      	ldr	r3, [r0, #0]
 8003102:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003104:	4798      	blx	r3
 8003106:	4605      	mov	r5, r0
 8003108:	f000 fba0 	bl	800384c <_ZN15GameScreen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800310c:	6870      	ldr	r0, [r6, #4]
 800310e:	4659      	mov	r1, fp
 8003110:	6803      	ldr	r3, [r0, #0]
 8003112:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003114:	4798      	blx	r3
 8003116:	4606      	mov	r6, r0
 8003118:	4629      	mov	r1, r5
 800311a:	f000 fb77 	bl	800380c <_ZN20GameScreen1PresenterC1ER15GameScreen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 800311e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003120:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003124:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003128:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800312c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003130:	682b      	ldr	r3, [r5, #0]
 8003132:	4628      	mov	r0, r5
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003134:	f8c6 a008 	str.w	sl, [r6, #8]
 8003138:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800313a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800313c:	4798      	blx	r3
    newPresenter->activate();
 800313e:	6833      	ldr	r3, [r6, #0]
 8003140:	4630      	mov	r0, r6
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003146:	4621      	mov	r1, r4
 8003148:	4628      	mov	r0, r5
 800314a:	f00b ff63 	bl	800f014 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800314e:	6823      	ldr	r3, [r4, #0]
 8003150:	4620      	mov	r0, r4
 8003152:	691b      	ldr	r3, [r3, #16]
 8003154:	4798      	blx	r3
    newTransition->invalidate();
 8003156:	4620      	mov	r0, r4
 8003158:	6823      	ldr	r3, [r4, #0]
 800315a:	695b      	ldr	r3, [r3, #20]
}
 800315c:	b001      	add	sp, #4
 800315e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003162:	4718      	bx	r3
 8003164:	08034ea0 	.word	0x08034ea0
 8003168:	08034f2e 	.word	0x08034f2e
 800316c:	08035008 	.word	0x08035008
 8003170:	0803504f 	.word	0x0803504f
 8003174:	080350f2 	.word	0x080350f2
 8003178:	0803520c 	.word	0x0803520c
 800317c:	20082f04 	.word	0x20082f04
 8003180:	20082f00 	.word	0x20082f00

08003184 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003184:	b570      	push	{r4, r5, r6, lr}
 8003186:	4604      	mov	r4, r0
 8003188:	460d      	mov	r5, r1
 800318a:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 800318c:	f00a f812 	bl	800d1b4 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 8003190:	2100      	movs	r1, #0
        instance = this;
 8003192:	4b0a      	ldr	r3, [pc, #40]	@ (80031bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x38>)
        : pobject(0), pmemfun(0)
 8003194:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
 8003198:	601c      	str	r4, [r3, #0]
      model(m)
 800319a:	4b09      	ldr	r3, [pc, #36]	@ (80031c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3c>)
          pendingScreenTransitionCallback(0)
 800319c:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
 80031a0:	6023      	str	r3, [r4, #0]
 80031a2:	4b08      	ldr	r3, [pc, #32]	@ (80031c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>)
 80031a4:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
 80031a8:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
 80031ac:	4b06      	ldr	r3, [pc, #24]	@ (80031c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x44>)
 80031ae:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80031b0:	6803      	ldr	r3, [r0, #0]
 80031b2:	689b      	ldr	r3, [r3, #8]
 80031b4:	4798      	blx	r3
}
 80031b6:	4620      	mov	r0, r4
 80031b8:	bd70      	pop	{r4, r5, r6, pc}
 80031ba:	bf00      	nop
 80031bc:	20082f10 	.word	0x20082f10
 80031c0:	080351b8 	.word	0x080351b8
 80031c4:	080351a0 	.word	0x080351a0
 80031c8:	20082ec4 	.word	0x20082ec4

080031cc <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031cc:	4b06      	ldr	r3, [pc, #24]	@ (80031e8 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv+0x1c>)
 80031ce:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031d2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031d6:	2300      	movs	r3, #0
 80031d8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80031dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031e0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031e4:	4770      	bx	lr
 80031e6:	bf00      	nop
 80031e8:	0800303d 	.word	0x0800303d

080031ec <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80031ec:	2000      	movs	r0, #0
 80031ee:	4770      	bx	lr

080031f0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80031f0:	8081      	strh	r1, [r0, #4]
    }
 80031f2:	4770      	bx	lr

080031f4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80031f4:	80c1      	strh	r1, [r0, #6]
    }
 80031f6:	4770      	bx	lr

080031f8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80031f8:	8101      	strh	r1, [r0, #8]
    }
 80031fa:	4770      	bx	lr

080031fc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80031fc:	8141      	strh	r1, [r0, #10]
    }
 80031fe:	4770      	bx	lr

08003200 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003200:	4770      	bx	lr

08003202 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8003202:	4770      	bx	lr

08003204 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8003204:	4770      	bx	lr

08003206 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8003206:	4770      	bx	lr

08003208 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003208:	4770      	bx	lr

0800320a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800320a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800320c:	88c4      	ldrh	r4, [r0, #6]
 800320e:	6803      	ldr	r3, [r0, #0]
 8003210:	1b12      	subs	r2, r2, r4
 8003212:	8884      	ldrh	r4, [r0, #4]
 8003214:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003216:	1b09      	subs	r1, r1, r4
 8003218:	b212      	sxth	r2, r2
    }
 800321a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800321e:	b209      	sxth	r1, r1
 8003220:	4718      	bx	r3

08003222 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8003222:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003226:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003228:	f04f 33ff 	mov.w	r3, #4294967295
 800322c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800322e:	6813      	ldr	r3, [r2, #0]
 8003230:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8003232:	6010      	str	r0, [r2, #0]
    }
 8003234:	4770      	bx	lr

08003236 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003236:	4770      	bx	lr

08003238 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003238:	4770      	bx	lr

0800323a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800323a:	4770      	bx	lr

0800323c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800323c:	4770      	bx	lr

0800323e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800323e:	4770      	bx	lr

08003240 <_ZN19GameScreen1ViewBase16Block1_1_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void Block1_1_Clicked()
    {
        // Override and implement this function in GameScreen1
    }
 8003240:	4770      	bx	lr

08003242 <_ZN19GameScreen1ViewBaseD1Ev>:
}

GameScreen1ViewBase::~GameScreen1ViewBase()
{

}
 8003242:	4770      	bx	lr

08003244 <_ZN19GameScreen1ViewBase11setupScreenEv>:

void GameScreen1ViewBase::setupScreen()
{

}
 8003244:	4770      	bx	lr

08003246 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003246:	4770      	bx	lr

08003248 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003248:	4603      	mov	r3, r0
 800324a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800324c:	6844      	ldr	r4, [r0, #4]
 800324e:	68c2      	ldr	r2, [r0, #12]
 8003250:	689b      	ldr	r3, [r3, #8]
 8003252:	1055      	asrs	r5, r2, #1
 8003254:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003258:	07d2      	lsls	r2, r2, #31
 800325a:	bf48      	it	mi
 800325c:	5962      	ldrmi	r2, [r4, r5]
    }
 800325e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003260:	bf48      	it	mi
 8003262:	58d3      	ldrmi	r3, [r2, r3]
 8003264:	4718      	bx	r3

08003266 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003266:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003268:	6840      	ldr	r0, [r0, #4]
 800326a:	b130      	cbz	r0, 800327a <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800326c:	689a      	ldr	r2, [r3, #8]
 800326e:	b91a      	cbnz	r2, 8003278 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003270:	68d8      	ldr	r0, [r3, #12]
 8003272:	f000 0001 	and.w	r0, r0, #1
 8003276:	4770      	bx	lr
 8003278:	2001      	movs	r0, #1
    }
 800327a:	4770      	bx	lr

0800327c <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800327c:	b510      	push	{r4, lr}
 800327e:	4604      	mov	r4, r0
 8003280:	2110      	movs	r1, #16
 8003282:	f02d ff40 	bl	8031106 <_ZdlPvj>
 8003286:	4620      	mov	r0, r4
 8003288:	bd10      	pop	{r4, pc}

0800328a <_ZN19GameScreen1ViewBaseD0Ev>:
GameScreen1ViewBase::~GameScreen1ViewBase()
 800328a:	b510      	push	{r4, lr}
 800328c:	4604      	mov	r4, r0
}
 800328e:	21e4      	movs	r1, #228	@ 0xe4
 8003290:	f02d ff39 	bl	8031106 <_ZdlPvj>
 8003294:	4620      	mov	r0, r4
 8003296:	bd10      	pop	{r4, pc}

08003298 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8003298:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800329c:	b112      	cbz	r2, 80032a4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800329e:	6803      	ldr	r3, [r0, #0]
 80032a0:	695b      	ldr	r3, [r3, #20]
 80032a2:	4718      	bx	r3
    }
 80032a4:	4770      	bx	lr

080032a6 <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Block1_1)
 80032a6:	f100 0298 	add.w	r2, r0, #152	@ 0x98
 80032aa:	428a      	cmp	r2, r1
 80032ac:	d102      	bne.n	80032b4 <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Block1_1_Interaction
        //When Block1_1 clicked call virtual function
        //Call Block1_1_Clicked
        Block1_1_Clicked();
 80032ae:	6803      	ldr	r3, [r0, #0]
 80032b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032b2:	4718      	bx	r3
    }
}
 80032b4:	4770      	bx	lr

080032b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032b6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032ba:	b11a      	cbz	r2, 80032c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032bc:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80032c0:	b102      	cbz	r2, 80032c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032c2:	6018      	str	r0, [r3, #0]
        }
    }
 80032c4:	4770      	bx	lr

080032c6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80032c6:	b570      	push	{r4, r5, r6, lr}
 80032c8:	4604      	mov	r4, r0
 80032ca:	4615      	mov	r5, r2
        setX(x);
 80032cc:	6803      	ldr	r3, [r0, #0]
 80032ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d0:	4798      	blx	r3
        setY(y);
 80032d2:	6823      	ldr	r3, [r4, #0]
 80032d4:	4629      	mov	r1, r5
 80032d6:	4620      	mov	r0, r4
    }
 80032d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80032dc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80032de:	4718      	bx	r3

080032e0 <_ZN19GameScreen1ViewBaseC1Ev>:
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032e4:	4604      	mov	r4, r0
        : presenter(0)
 80032e6:	2500      	movs	r5, #0
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032e8:	4626      	mov	r6, r4
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032ea:	b086      	sub	sp, #24
 80032ec:	f00b fce6 	bl	800ecbc <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f0:	4b45      	ldr	r3, [pc, #276]	@ (8003408 <_ZN19GameScreen1ViewBaseC1Ev+0x128>)
 80032f2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032f4:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80032f8:	4b44      	ldr	r3, [pc, #272]	@ (800340c <_ZN19GameScreen1ViewBaseC1Ev+0x12c>)
          touchable(false),
 80032fa:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
 80032fe:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 8003302:	23ff      	movs	r3, #255	@ 0xff
 8003304:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003308:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800330c:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 8003310:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003314:	4a3e      	ldr	r2, [pc, #248]	@ (8003410 <_ZN19GameScreen1ViewBaseC1Ev+0x130>)
 8003316:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
    {
        Image::setBitmap(bmp);
 800331a:	f10d 0a14 	add.w	sl, sp, #20
 800331e:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 8003322:	4651      	mov	r1, sl
        : Widget(), bitmap(bmp), alpha(255)
 8003324:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8003326:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 800332a:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 800332e:	4640      	mov	r0, r8
 8003330:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8003334:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8003338:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 800333c:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 8003340:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 8003344:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 8003348:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 800334c:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 800334e:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003350:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003354:	f008 fdb7 	bl	800bec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003358:	4638      	mov	r0, r7
 800335a:	f008 fd8d 	bl	800be78 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800335e:	4b2d      	ldr	r3, [pc, #180]	@ (8003414 <_ZN19GameScreen1ViewBaseC1Ev+0x134>)
        setXY(x, y);
 8003360:	462a      	mov	r2, r5
 8003362:	e9c4 3435 	strd	r3, r4, [r4, #212]	@ 0xd4
 8003366:	4b2c      	ldr	r3, [pc, #176]	@ (8003418 <_ZN19GameScreen1ViewBaseC1Ev+0x138>)
 8003368:	4629      	mov	r1, r5
 800336a:	e9c4 3537 	strd	r3, r5, [r4, #220]	@ 0xdc
 800336e:	4630      	mov	r0, r6
 8003370:	f7ff ffa9 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003374:	4630      	mov	r0, r6
 8003376:	f44f 7148 	mov.w	r1, #800	@ 0x320
 800337a:	f7ff ff3d 	bl	80031f8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800337e:	4630      	mov	r0, r6
 8003380:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8003384:	f7ff ff3a 	bl	80031fc <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003388:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800338c:	f104 0904 	add.w	r9, r4, #4
 8003390:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003392:	4631      	mov	r1, r6
 8003394:	4648      	mov	r0, r9
 8003396:	f007 fac9 	bl	800a92c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackScreen.setXY(0, 0);
 800339a:	462a      	mov	r2, r5
 800339c:	4629      	mov	r1, r5
 800339e:	4640      	mov	r0, r8
 80033a0:	f7ff ff91 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 80033a4:	2302      	movs	r3, #2
    BackScreen.setBitmap(touchgfx::Bitmap(BITMAP_BACKSCREEN_ID));
 80033a6:	4651      	mov	r1, sl
 80033a8:	4640      	mov	r0, r8
 80033aa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033ae:	f008 fd8a 	bl	800bec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033b2:	4641      	mov	r1, r8
 80033b4:	4648      	mov	r0, r9
 80033b6:	f007 fab9 	bl	800a92c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_1.setXY(20, 19);
 80033ba:	4638      	mov	r0, r7
 80033bc:	2213      	movs	r2, #19
 80033be:	2114      	movs	r1, #20
 80033c0:	f7ff ff81 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 80033c4:	2303      	movs	r3, #3
    Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80033c6:	4638      	mov	r0, r7
 80033c8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80033cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033d0:	aa03      	add	r2, sp, #12
 80033d2:	ab04      	add	r3, sp, #16
 80033d4:	a902      	add	r1, sp, #8
 80033d6:	f8cd a000 	str.w	sl, [sp]
 80033da:	f8ad 5008 	strh.w	r5, [sp, #8]
 80033de:	f8ad 500c 	strh.w	r5, [sp, #12]
 80033e2:	f008 fca4 	bl	800bd2e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80033e6:	f04f 1305 	mov.w	r3, #327685	@ 0x50005
 80033ea:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    Block1_1.setAction(buttonCallback);
 80033ee:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 80033f2:	4648      	mov	r0, r9
 80033f4:	4639      	mov	r1, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80033f6:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80033fa:	f007 fa97 	bl	800a92c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80033fe:	4620      	mov	r0, r4
 8003400:	b006      	add	sp, #24
 8003402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003406:	bf00      	nop
 8003408:	08035248 	.word	0x08035248
 800340c:	080359b8 	.word	0x080359b8
 8003410:	08035a98 	.word	0x08035a98
 8003414:	08035230 	.word	0x08035230
 8003418:	080032a7 	.word	0x080032a7

0800341c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800341c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800341e:	4770      	bx	lr

08003420 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003420:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8003422:	4770      	bx	lr

08003424 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003424:	4770      	bx	lr

08003426 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003426:	888b      	ldrh	r3, [r1, #4]
 8003428:	69c0      	ldr	r0, [r0, #28]
 800342a:	0adb      	lsrs	r3, r3, #11
 800342c:	680a      	ldr	r2, [r1, #0]
 800342e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003432:	4410      	add	r0, r2
 8003434:	4770      	bx	lr

08003436 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003436:	b510      	push	{r4, lr}
 8003438:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800343a:	b1ba      	cbz	r2, 800346c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800343c:	7b10      	ldrb	r0, [r2, #12]
 800343e:	b168      	cbz	r0, 800345c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003440:	7b53      	ldrb	r3, [r2, #13]
 8003442:	7ad2      	ldrb	r2, [r2, #11]
 8003444:	021b      	lsls	r3, r3, #8
 8003446:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800344a:	431a      	orrs	r2, r3
 800344c:	6a23      	ldr	r3, [r4, #32]
 800344e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003452:	881a      	ldrh	r2, [r3, #0]
 8003454:	428a      	cmp	r2, r1
 8003456:	d102      	bne.n	800345e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003458:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 800345c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800345e:	d805      	bhi.n	800346c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003460:	3801      	subs	r0, #1
 8003462:	b280      	uxth	r0, r0
 8003464:	3304      	adds	r3, #4
 8003466:	2800      	cmp	r0, #0
 8003468:	d1f3      	bne.n	8003452 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800346a:	e7f7      	b.n	800345c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800346c:	2000      	movs	r0, #0
 800346e:	e7f5      	b.n	800345c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003470 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003470:	b510      	push	{r4, lr}
 8003472:	4604      	mov	r4, r0
 8003474:	212c      	movs	r1, #44	@ 0x2c
 8003476:	f02d fe46 	bl	8031106 <_ZdlPvj>
 800347a:	4620      	mov	r0, r4
 800347c:	bd10      	pop	{r4, pc}
	...

08003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003480:	b530      	push	{r4, r5, lr}
 8003482:	4604      	mov	r4, r0
 8003484:	b08b      	sub	sp, #44	@ 0x2c
      arabicTable(formsTable)
 8003486:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800348a:	9508      	str	r5, [sp, #32]
 800348c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8003490:	9507      	str	r5, [sp, #28]
 8003492:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8003496:	9506      	str	r5, [sp, #24]
 8003498:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 800349c:	9505      	str	r5, [sp, #20]
 800349e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80034a2:	9504      	str	r5, [sp, #16]
 80034a4:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80034a8:	9503      	str	r5, [sp, #12]
 80034aa:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80034ae:	9502      	str	r5, [sp, #8]
 80034b0:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80034b4:	9501      	str	r5, [sp, #4]
 80034b6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80034ba:	9500      	str	r5, [sp, #0]
 80034bc:	f00b fa04 	bl	800e8c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
}
 80034c0:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80034c2:	4b06      	ldr	r3, [pc, #24]	@ (80034dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80034c4:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80034c6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80034c8:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80034ca:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80034cc:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80034ce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80034d0:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80034d2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80034d4:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80034d6:	b00b      	add	sp, #44	@ 0x2c
 80034d8:	bd30      	pop	{r4, r5, pc}
 80034da:	bf00      	nop
 80034dc:	08035280 	.word	0x08035280

080034e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034e0:	4770      	bx	lr
	...

080034e4 <_Z23getFont_verdana_10_4bppv>:
{
 80034e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034e6:	4d15      	ldr	r5, [pc, #84]	@ (800353c <_Z23getFont_verdana_10_4bppv+0x58>)
{
 80034e8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034ea:	e8d5 4faf 	lda	r4, [r5]
 80034ee:	f014 0401 	ands.w	r4, r4, #1
 80034f2:	d120      	bne.n	8003536 <_Z23getFont_verdana_10_4bppv+0x52>
 80034f4:	4628      	mov	r0, r5
 80034f6:	f02d fe08 	bl	803110a <__cxa_guard_acquire>
 80034fa:	b1e0      	cbz	r0, 8003536 <_Z23getFont_verdana_10_4bppv+0x52>
 80034fc:	233f      	movs	r3, #63	@ 0x3f
 80034fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8003500:	4b0f      	ldr	r3, [pc, #60]	@ (8003540 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003502:	2201      	movs	r2, #1
 8003504:	9308      	str	r3, [sp, #32]
 8003506:	4b0f      	ldr	r3, [pc, #60]	@ (8003544 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003508:	490f      	ldr	r1, [pc, #60]	@ (8003548 <_Z23getFont_verdana_10_4bppv+0x64>)
 800350a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800350e:	2304      	movs	r3, #4
 8003510:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003514:	230a      	movs	r3, #10
 8003516:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800351a:	9300      	str	r3, [sp, #0]
 800351c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003520:	480a      	ldr	r0, [pc, #40]	@ (800354c <_Z23getFont_verdana_10_4bppv+0x68>)
 8003522:	940a      	str	r4, [sp, #40]	@ 0x28
 8003524:	9405      	str	r4, [sp, #20]
 8003526:	f7ff ffab 	bl	8003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800352a:	4809      	ldr	r0, [pc, #36]	@ (8003550 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800352c:	f02e ffe2 	bl	80324f4 <atexit>
 8003530:	4628      	mov	r0, r5
 8003532:	f02d fdf6 	bl	8031122 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003536:	4805      	ldr	r0, [pc, #20]	@ (800354c <_Z23getFont_verdana_10_4bppv+0x68>)
 8003538:	b00f      	add	sp, #60	@ 0x3c
 800353a:	bd30      	pop	{r4, r5, pc}
 800353c:	2006e83c 	.word	0x2006e83c
 8003540:	08038838 	.word	0x08038838
 8003544:	08038844 	.word	0x08038844
 8003548:	08038808 	.word	0x08038808
 800354c:	2006e840 	.word	0x2006e840
 8003550:	080034e1 	.word	0x080034e1

08003554 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003554:	4770      	bx	lr
	...

08003558 <_Z23getFont_verdana_20_4bppv>:
{
 8003558:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800355a:	4d15      	ldr	r5, [pc, #84]	@ (80035b0 <_Z23getFont_verdana_20_4bppv+0x58>)
{
 800355c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800355e:	e8d5 4faf 	lda	r4, [r5]
 8003562:	f014 0401 	ands.w	r4, r4, #1
 8003566:	d120      	bne.n	80035aa <_Z23getFont_verdana_20_4bppv+0x52>
 8003568:	4628      	mov	r0, r5
 800356a:	f02d fdce 	bl	803110a <__cxa_guard_acquire>
 800356e:	b1e0      	cbz	r0, 80035aa <_Z23getFont_verdana_20_4bppv+0x52>
 8003570:	233f      	movs	r3, #63	@ 0x3f
 8003572:	9309      	str	r3, [sp, #36]	@ 0x24
 8003574:	4b0f      	ldr	r3, [pc, #60]	@ (80035b4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003576:	2201      	movs	r2, #1
 8003578:	9308      	str	r3, [sp, #32]
 800357a:	4b0f      	ldr	r3, [pc, #60]	@ (80035b8 <_Z23getFont_verdana_20_4bppv+0x60>)
 800357c:	490f      	ldr	r1, [pc, #60]	@ (80035bc <_Z23getFont_verdana_20_4bppv+0x64>)
 800357e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003582:	2304      	movs	r3, #4
 8003584:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003588:	2314      	movs	r3, #20
 800358a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800358e:	9300      	str	r3, [sp, #0]
 8003590:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003594:	480a      	ldr	r0, [pc, #40]	@ (80035c0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003596:	940a      	str	r4, [sp, #40]	@ 0x28
 8003598:	9405      	str	r4, [sp, #20]
 800359a:	f7ff ff71 	bl	8003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800359e:	4809      	ldr	r0, [pc, #36]	@ (80035c4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80035a0:	f02e ffa8 	bl	80324f4 <atexit>
 80035a4:	4628      	mov	r0, r5
 80035a6:	f02d fdbc 	bl	8031122 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80035aa:	4805      	ldr	r0, [pc, #20]	@ (80035c0 <_Z23getFont_verdana_20_4bppv+0x68>)
 80035ac:	b00f      	add	sp, #60	@ 0x3c
 80035ae:	bd30      	pop	{r4, r5, pc}
 80035b0:	2006e86c 	.word	0x2006e86c
 80035b4:	0803883c 	.word	0x0803883c
 80035b8:	08038848 	.word	0x08038848
 80035bc:	08038818 	.word	0x08038818
 80035c0:	2006e870 	.word	0x2006e870
 80035c4:	08003555 	.word	0x08003555

080035c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035c8:	4770      	bx	lr
	...

080035cc <_Z23getFont_verdana_40_4bppv>:
{
 80035cc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035ce:	4d15      	ldr	r5, [pc, #84]	@ (8003624 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 80035d0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035d2:	e8d5 4faf 	lda	r4, [r5]
 80035d6:	f014 0401 	ands.w	r4, r4, #1
 80035da:	d120      	bne.n	800361e <_Z23getFont_verdana_40_4bppv+0x52>
 80035dc:	4628      	mov	r0, r5
 80035de:	f02d fd94 	bl	803110a <__cxa_guard_acquire>
 80035e2:	b1e0      	cbz	r0, 800361e <_Z23getFont_verdana_40_4bppv+0x52>
 80035e4:	233f      	movs	r3, #63	@ 0x3f
 80035e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80035e8:	4b0f      	ldr	r3, [pc, #60]	@ (8003628 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80035ea:	2201      	movs	r2, #1
 80035ec:	9308      	str	r3, [sp, #32]
 80035ee:	4b0f      	ldr	r3, [pc, #60]	@ (800362c <_Z23getFont_verdana_40_4bppv+0x60>)
 80035f0:	490f      	ldr	r1, [pc, #60]	@ (8003630 <_Z23getFont_verdana_40_4bppv+0x64>)
 80035f2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80035f6:	2304      	movs	r3, #4
 80035f8:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80035fc:	2328      	movs	r3, #40	@ 0x28
 80035fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003602:	9300      	str	r3, [sp, #0]
 8003604:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003608:	480a      	ldr	r0, [pc, #40]	@ (8003634 <_Z23getFont_verdana_40_4bppv+0x68>)
 800360a:	940a      	str	r4, [sp, #40]	@ 0x28
 800360c:	9405      	str	r4, [sp, #20]
 800360e:	f7ff ff37 	bl	8003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003612:	4809      	ldr	r0, [pc, #36]	@ (8003638 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003614:	f02e ff6e 	bl	80324f4 <atexit>
 8003618:	4628      	mov	r0, r5
 800361a:	f02d fd82 	bl	8031122 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800361e:	4805      	ldr	r0, [pc, #20]	@ (8003634 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003620:	b00f      	add	sp, #60	@ 0x3c
 8003622:	bd30      	pop	{r4, r5, pc}
 8003624:	2006e89c 	.word	0x2006e89c
 8003628:	08038840 	.word	0x08038840
 800362c:	0803884c 	.word	0x0803884c
 8003630:	08038828 	.word	0x08038828
 8003634:	2006e8a0 	.word	0x2006e8a0
 8003638:	080035c9 	.word	0x080035c9

0800363c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 800363c:	2000      	movs	r0, #0
 800363e:	4770      	bx	lr

08003640 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003640:	2000      	movs	r0, #0
 8003642:	4770      	bx	lr

08003644 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003644:	b40e      	push	{r1, r2, r3}
 8003646:	b503      	push	{r0, r1, lr}
 8003648:	ab03      	add	r3, sp, #12
 800364a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800364e:	2100      	movs	r1, #0
    va_start(pArg, text);
 8003650:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003652:	f00a fc39 	bl	800dec8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003656:	b002      	add	sp, #8
 8003658:	f85d eb04 	ldr.w	lr, [sp], #4
 800365c:	b003      	add	sp, #12
 800365e:	4770      	bx	lr

08003660 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003660:	b40c      	push	{r2, r3}
 8003662:	b507      	push	{r0, r1, r2, lr}
 8003664:	ab04      	add	r3, sp, #16
 8003666:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800366a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800366c:	f00a fc2c 	bl	800dec8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003670:	b003      	add	sp, #12
 8003672:	f85d eb04 	ldr.w	lr, [sp], #4
 8003676:	b002      	add	sp, #8
 8003678:	4770      	bx	lr
	...

0800367c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800367c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800367e:	b510      	push	{r4, lr}
 8003680:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003682:	b373      	cbz	r3, 80036e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003684:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8003686:	b92b      	cbnz	r3, 8003694 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003688:	21c5      	movs	r1, #197	@ 0xc5
 800368a:	4b18      	ldr	r3, [pc, #96]	@ (80036ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800368c:	4a18      	ldr	r2, [pc, #96]	@ (80036f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800368e:	4819      	ldr	r0, [pc, #100]	@ (80036f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003690:	f02e ff12 	bl	80324b8 <__assert_func>
            return buffer[pos];
 8003694:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8003696:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800369a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800369c:	b30b      	cbz	r3, 80036e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800369e:	f00c f980 	bl	800f9a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80036a2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80036a4:	2b01      	cmp	r3, #1
 80036a6:	d803      	bhi.n	80036b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80036a8:	21cb      	movs	r1, #203	@ 0xcb
 80036aa:	4b13      	ldr	r3, [pc, #76]	@ (80036f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80036ac:	4a13      	ldr	r2, [pc, #76]	@ (80036fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80036ae:	e7ee      	b.n	800368e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80036b0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80036b2:	f640 103f 	movw	r0, #2367	@ 0x93f
 80036b6:	1c53      	adds	r3, r2, #1
 80036b8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80036ba:	4619      	mov	r1, r3
 80036bc:	2b09      	cmp	r3, #9
 80036be:	bf88      	it	hi
 80036c0:	f1a3 010a 	subhi.w	r1, r3, #10
 80036c4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80036c8:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80036ca:	4281      	cmp	r1, r0
 80036cc:	d109      	bne.n	80036e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80036ce:	2b0a      	cmp	r3, #10
 80036d0:	bf28      	it	cs
 80036d2:	2300      	movcs	r3, #0
 80036d4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
            return buffer[pos];
 80036d8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80036da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80036de:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80036e0:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80036e2:	4620      	mov	r0, r4
}
 80036e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80036e8:	f00c b85e 	b.w	800f7a8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80036ec:	080352e0 	.word	0x080352e0
 80036f0:	080352e9 	.word	0x080352e9
 80036f4:	08035394 	.word	0x08035394
 80036f8:	080353de 	.word	0x080353de
 80036fc:	080353ec 	.word	0x080353ec

08003700 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003700:	f00c b819 	b.w	800f736 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003704 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003704:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003706:	bb18      	cbnz	r0, 8003750 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003708:	4b12      	ldr	r3, [pc, #72]	@ (8003754 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800370a:	4813      	ldr	r0, [pc, #76]	@ (8003758 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800370c:	681c      	ldr	r4, [r3, #0]
 800370e:	4913      	ldr	r1, [pc, #76]	@ (800375c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003710:	b1b4      	cbz	r4, 8003740 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003712:	6822      	ldr	r2, [r4, #0]
 8003714:	4422      	add	r2, r4
 8003716:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003718:	6862      	ldr	r2, [r4, #4]
 800371a:	4422      	add	r2, r4
 800371c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800371e:	68a2      	ldr	r2, [r4, #8]
 8003720:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003722:	2200      	movs	r2, #0
 8003724:	4b0e      	ldr	r3, [pc, #56]	@ (8003760 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003726:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003728:	f000 f82a 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 800372c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800372e:	f000 f825 	bl	800377c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003732:	4b0c      	ldr	r3, [pc, #48]	@ (8003764 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003734:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003736:	4b0c      	ldr	r3, [pc, #48]	@ (8003768 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003738:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800373a:	4b0c      	ldr	r3, [pc, #48]	@ (800376c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800373c:	8018      	strh	r0, [r3, #0]
    }
}
 800373e:	e007      	b.n	8003750 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003740:	4b0b      	ldr	r3, [pc, #44]	@ (8003770 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003742:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003744:	4b0b      	ldr	r3, [pc, #44]	@ (8003774 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003746:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003748:	4b0b      	ldr	r3, [pc, #44]	@ (8003778 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800374a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800374c:	2c00      	cmp	r4, #0
 800374e:	d1e8      	bne.n	8003722 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003750:	bd38      	pop	{r3, r4, r5, pc}
 8003752:	bf00      	nop
 8003754:	2006e8d8 	.word	0x2006e8d8
 8003758:	2006e8d0 	.word	0x2006e8d0
 800375c:	2006e8cc 	.word	0x2006e8cc
 8003760:	2006e8d4 	.word	0x2006e8d4
 8003764:	20082f14 	.word	0x20082f14
 8003768:	20082f1c 	.word	0x20082f1c
 800376c:	20082f18 	.word	0x20082f18
 8003770:	08038854 	.word	0x08038854
 8003774:	08038850 	.word	0x08038850
 8003778:	08038858 	.word	0x08038858

0800377c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 800377c:	2000      	movs	r0, #0
 800377e:	4770      	bx	lr

08003780 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003780:	4800      	ldr	r0, [pc, #0]	@ (8003784 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003782:	4770      	bx	lr
 8003784:	2006e8dc 	.word	0x2006e8dc

08003788 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003788:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800378a:	f7ff fee5 	bl	8003558 <_Z23getFont_verdana_20_4bppv>
};
 800378e:	4c04      	ldr	r4, [pc, #16]	@ (80037a0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8003790:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003792:	f7ff ff1b 	bl	80035cc <_Z23getFont_verdana_40_4bppv>
};
 8003796:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8003798:	f7ff fea4 	bl	80034e4 <_Z23getFont_verdana_10_4bppv>
};
 800379c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800379e:	bd10      	pop	{r4, pc}
 80037a0:	2006e8dc 	.word	0x2006e8dc

080037a4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80037a4:	b510      	push	{r4, lr}
    pointArray = 0;
 80037a6:	2400      	movs	r4, #0
 80037a8:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80037aa:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80037ac:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80037ae:	601c      	str	r4, [r3, #0]
}
 80037b0:	bd10      	pop	{r4, pc}

080037b2 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80037b2:	4770      	bx	lr

080037b4 <_ZN19FrontendApplicationD0Ev>:
 80037b4:	b510      	push	{r4, lr}
 80037b6:	4604      	mov	r4, r0
 80037b8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80037bc:	f02d fca3 	bl	8031106 <_ZdlPvj>
 80037c0:	4620      	mov	r0, r4
 80037c2:	bd10      	pop	{r4, pc}

080037c4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80037c4:	b510      	push	{r4, lr}
 80037c6:	4604      	mov	r4, r0
    {
        model.tick();
 80037c8:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80037cc:	f000 f88a 	bl	80038e4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80037d0:	4620      	mov	r0, r4
    }
 80037d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80037d6:	f009 bcad 	b.w	800d134 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080037dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80037dc:	b510      	push	{r4, lr}
 80037de:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80037e0:	f7ff fcd0 	bl	8003184 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80037e4:	4b01      	ldr	r3, [pc, #4]	@ (80037ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 80037e6:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 80037e8:	6023      	str	r3, [r4, #0]
}
 80037ea:	bd10      	pop	{r4, pc}
 80037ec:	080354c8 	.word	0x080354c8

080037f0 <_ZN20GameScreen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreen1Presenter() {}
 80037f0:	4770      	bx	lr

080037f2 <_ZThn4_N20GameScreen1PresenterD1Ev>:
 80037f2:	3804      	subs	r0, #4
 80037f4:	4770      	bx	lr

080037f6 <_ZN20GameScreen1Presenter10deactivateEv>:
}

void GameScreen1Presenter::activate()
{

}
 80037f6:	4770      	bx	lr

080037f8 <_ZN20GameScreen1PresenterD0Ev>:
 80037f8:	b510      	push	{r4, lr}
 80037fa:	4604      	mov	r4, r0
 80037fc:	2110      	movs	r1, #16
 80037fe:	f02d fc82 	bl	8031106 <_ZdlPvj>
 8003802:	4620      	mov	r0, r4
 8003804:	bd10      	pop	{r4, pc}

08003806 <_ZThn4_N20GameScreen1PresenterD0Ev>:
 8003806:	f1a0 0004 	sub.w	r0, r0, #4
 800380a:	e7f5      	b.n	80037f8 <_ZN20GameScreen1PresenterD0Ev>

0800380c <_ZN20GameScreen1PresenterC1ER15GameScreen1View>:
    ModelListener() : model(0) {}
 800380c:	2200      	movs	r2, #0
 800380e:	6082      	str	r2, [r0, #8]
    : view(v)
 8003810:	4a02      	ldr	r2, [pc, #8]	@ (800381c <_ZN20GameScreen1PresenterC1ER15GameScreen1View+0x10>)
 8003812:	60c1      	str	r1, [r0, #12]
 8003814:	6002      	str	r2, [r0, #0]
 8003816:	3218      	adds	r2, #24
 8003818:	6042      	str	r2, [r0, #4]
}
 800381a:	4770      	bx	lr
 800381c:	0803551c 	.word	0x0803551c

08003820 <_ZN15GameScreen1View14tearDownScreenEv>:
}

void GameScreen1View::tearDownScreen()
{
    GameScreen1ViewBase::tearDownScreen();
}
 8003820:	4770      	bx	lr
	...

08003824 <_ZN15GameScreen1ViewD1Ev>:

class GameScreen1View : public GameScreen1ViewBase
{
public:
    GameScreen1View();
    virtual ~GameScreen1View() {}
 8003824:	b510      	push	{r4, lr}
 8003826:	4604      	mov	r4, r0
 8003828:	4b02      	ldr	r3, [pc, #8]	@ (8003834 <_ZN15GameScreen1ViewD1Ev+0x10>)
 800382a:	6003      	str	r3, [r0, #0]
 800382c:	f7ff fd09 	bl	8003242 <_ZN19GameScreen1ViewBaseD1Ev>
 8003830:	4620      	mov	r0, r4
 8003832:	bd10      	pop	{r4, pc}
 8003834:	08035544 	.word	0x08035544

08003838 <_ZN15GameScreen1ViewD0Ev>:
 8003838:	b510      	push	{r4, lr}
 800383a:	4604      	mov	r4, r0
 800383c:	f7ff fff2 	bl	8003824 <_ZN15GameScreen1ViewD1Ev>
 8003840:	4620      	mov	r0, r4
 8003842:	21e8      	movs	r1, #232	@ 0xe8
 8003844:	f02d fc5f 	bl	8031106 <_ZdlPvj>
 8003848:	4620      	mov	r0, r4
 800384a:	bd10      	pop	{r4, pc}

0800384c <_ZN15GameScreen1ViewC1Ev>:
GameScreen1View::GameScreen1View()
 800384c:	b530      	push	{r4, r5, lr}
 800384e:	4604      	mov	r4, r0
 8003850:	b087      	sub	sp, #28
 8003852:	f7ff fd45 	bl	80032e0 <_ZN19GameScreen1ViewBaseC1Ev>
 8003856:	4620      	mov	r0, r4
 8003858:	4b0c      	ldr	r3, [pc, #48]	@ (800388c <_ZN15GameScreen1ViewC1Ev+0x40>)
 800385a:	2500      	movs	r5, #0
 800385c:	f840 3b98 	str.w	r3, [r0], #152
 8003860:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003864:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003868:	f8ad 3014 	strh.w	r3, [sp, #20]
	Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 800386c:	ab05      	add	r3, sp, #20
 800386e:	9300      	str	r3, [sp, #0]
 8003870:	aa03      	add	r2, sp, #12
 8003872:	ab04      	add	r3, sp, #16
 8003874:	a902      	add	r1, sp, #8
 8003876:	f8ad 5008 	strh.w	r5, [sp, #8]
 800387a:	f8ad 500c 	strh.w	r5, [sp, #12]
 800387e:	f008 fa56 	bl	800bd2e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
}
 8003882:	4620      	mov	r0, r4
	GameScreen1View::block1_1_Cliecked_Valid = false;
 8003884:	f884 50e4 	strb.w	r5, [r4, #228]	@ 0xe4
}
 8003888:	b007      	add	sp, #28
 800388a:	bd30      	pop	{r4, r5, pc}
 800388c:	08035544 	.word	0x08035544

08003890 <_ZN15GameScreen1View11setupScreenEv>:
    GameScreen1ViewBase::setupScreen();
 8003890:	f7ff bcd8 	b.w	8003244 <_ZN19GameScreen1ViewBase11setupScreenEv>

08003894 <_ZN15GameScreen1View16Block1_1_ClickedEv>:


void GameScreen1View::Block1_1_Clicked()
{
 8003894:	b570      	push	{r4, r5, r6, lr}
	if(!GameScreen1View::block1_1_Cliecked_Valid)
 8003896:	f890 10e4 	ldrb.w	r1, [r0, #228]	@ 0xe4
{
 800389a:	b086      	sub	sp, #24
 800389c:	4605      	mov	r5, r0
 800389e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID),
 80038a2:	f100 0698 	add.w	r6, r0, #152	@ 0x98
 80038a6:	aa05      	add	r2, sp, #20
	if(!GameScreen1View::block1_1_Cliecked_Valid)
 80038a8:	b9b9      	cbnz	r1, 80038da <_ZN15GameScreen1View16Block1_1_ClickedEv+0x46>
 80038aa:	2401      	movs	r4, #1
						touchgfx::Bitmap(BITMAP_INVALID));
		GameScreen1View::block1_1_Cliecked_Valid = true;
	}
	else
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 80038ac:	4630      	mov	r0, r6
 80038ae:	f8ad 3010 	strh.w	r3, [sp, #16]
 80038b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80038b6:	9200      	str	r2, [sp, #0]
 80038b8:	ab04      	add	r3, sp, #16
 80038ba:	aa03      	add	r2, sp, #12
 80038bc:	a902      	add	r1, sp, #8
 80038be:	f8ad 4008 	strh.w	r4, [sp, #8]
 80038c2:	f8ad 400c 	strh.w	r4, [sp, #12]
 80038c6:	f008 fa32 	bl	800bd2e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
						touchgfx::Bitmap(BITMAP_INVALID),
						touchgfx::Bitmap(BITMAP_INVALID));
		GameScreen1View::block1_1_Cliecked_Valid = false;
	}

	Block1_1.invalidate();
 80038ca:	4630      	mov	r0, r6
		GameScreen1View::block1_1_Cliecked_Valid = true;
 80038cc:	f885 40e4 	strb.w	r4, [r5, #228]	@ 0xe4
}
 80038d0:	b006      	add	sp, #24
 80038d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	Block1_1.invalidate();
 80038d6:	f00a bc21 	b.w	800e11c <_ZNK8touchgfx8Drawable10invalidateEv>
 80038da:	2400      	movs	r4, #0
 80038dc:	e7e6      	b.n	80038ac <_ZN15GameScreen1View16Block1_1_ClickedEv+0x18>

080038de <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80038de:	2200      	movs	r2, #0
 80038e0:	6002      	str	r2, [r0, #0]
{

}
 80038e2:	4770      	bx	lr

080038e4 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80038e4:	4770      	bx	lr

080038e6 <MX66UW1G45G_EnableDTRMemoryMappedMode>:
  * @param  AddressWidth Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval XSPI memory status
  */
int32_t MX66UW1G45G_EnableDTRMemoryMappedMode(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode)
{
 80038e6:	b510      	push	{r4, lr}
 80038e8:	b096      	sub	sp, #88	@ 0x58
 80038ea:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  XSPI_RegularCmdTypeDef s_command = {0};
 80038ec:	224c      	movs	r2, #76	@ 0x4c
 80038ee:	2100      	movs	r1, #0
 80038f0:	a803      	add	r0, sp, #12
 80038f2:	f02e ffe8 	bl	80328c6 <memset>
  XSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 80038f6:	2300      	movs	r3, #0
 80038f8:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the read command */
  s_command.OperationType = HAL_XSPI_OPTYPE_READ_CFG;
 80038fc:	2301      	movs	r3, #1
 80038fe:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003900:	2304      	movs	r3, #4
  s_command.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003902:	f04f 0c08 	mov.w	ip, #8
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003906:	9305      	str	r3, [sp, #20]
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003908:	2310      	movs	r3, #16
 800390a:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction = MX66UW1G45G_OCTA_READ_DTR_CMD;
 800390e:	f64e 6311 	movw	r3, #60945	@ 0xee11
 8003912:	9304      	str	r3, [sp, #16]
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 8003914:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  s_command.AddressDTRMode = HAL_XSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003918:	f44f 6100 	mov.w	r1, #2048	@ 0x800
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 800391c:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 800391e:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003922:	e9cd 310a 	strd	r3, r1, [sp, #40]	@ 0x28
  s_command.AlternateBytesMode = HAL_XSPI_ALT_BYTES_NONE;
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 8003926:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  s_command.DataDTRMode = HAL_XSPI_DATA_DTR_ENABLE;
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 800392a:	f04f 6c00 	mov.w	ip, #134217728	@ 0x8000000
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 800392e:	9310      	str	r3, [sp, #64]	@ 0x40
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003930:	2306      	movs	r3, #6
 8003932:	e9cd c312 	strd	ip, r3, [sp, #72]	@ 0x48
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003936:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800393a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800393e:	4620      	mov	r0, r4
 8003940:	a902      	add	r1, sp, #8
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003942:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003944:	f004 fdd2 	bl	80084ec <HAL_XSPI_Command>
 8003948:	b118      	cbz	r0, 8003952 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX66UW1G45G_ERROR;
 800394a:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 800394e:	b016      	add	sp, #88	@ 0x58
 8003950:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_XSPI_OPTYPE_WRITE_CFG;
 8003952:	2302      	movs	r3, #2
 8003954:	9302      	str	r3, [sp, #8]
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 8003956:	f241 23ed 	movw	r3, #4845	@ 0x12ed
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;
 800395a:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800395e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003962:	4620      	mov	r0, r4
 8003964:	a902      	add	r1, sp, #8
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 8003966:	9304      	str	r3, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003968:	f004 fdc0 	bl	80084ec <HAL_XSPI_Command>
 800396c:	2800      	cmp	r0, #0
 800396e:	d1ec      	bne.n	800394a <MX66UW1G45G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 8003970:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 8003972:	4669      	mov	r1, sp
 8003974:	4620      	mov	r0, r4
 8003976:	f004 fee6 	bl	8008746 <HAL_XSPI_MemoryMapped>
 800397a:	3800      	subs	r0, #0
 800397c:	bf18      	it	ne
 800397e:	2001      	movne	r0, #1
 8003980:	4240      	negs	r0, r0
 8003982:	e7e4      	b.n	800394e <MX66UW1G45G_EnableDTRMemoryMappedMode+0x68>

08003984 <MX66UW1G45G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_WriteEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003984:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003988:	460c      	mov	r4, r1
 800398a:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef s_command = {0};
 800398c:	2100      	movs	r1, #0
{
 800398e:	4607      	mov	r7, r0
 8003990:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003992:	a806      	add	r0, sp, #24
 8003994:	2250      	movs	r2, #80	@ 0x50
 8003996:	f02e ff96 	bl	80328c6 <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 800399a:	2214      	movs	r2, #20
 800399c:	2100      	movs	r1, #0
 800399e:	a801      	add	r0, sp, #4
 80039a0:	f02e ff91 	bl	80328c6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 80039a4:	b934      	cbnz	r4, 80039b4 <MX66UW1G45G_WriteEnable+0x30>
 80039a6:	2e01      	cmp	r6, #1
 80039a8:	d164      	bne.n	8003a74 <MX66UW1G45G_WriteEnable+0xf0>
  {
    return MX66UW1G45G_ERROR;
 80039aa:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 80039ae:	b01a      	add	sp, #104	@ 0x68
 80039b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 80039b4:	2304      	movs	r3, #4
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80039b6:	1e71      	subs	r1, r6, #1
 80039b8:	424d      	negs	r5, r1
 80039ba:	414d      	adcs	r5, r1
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 80039bc:	2c00      	cmp	r4, #0
 80039be:	bf14      	ite	ne
 80039c0:	f04f 0801 	movne.w	r8, #1
 80039c4:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 80039c8:	9309      	str	r3, [sp, #36]	@ 0x24
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80039ca:	ea4f 03c5 	mov.w	r3, r5, lsl #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 80039ce:	930b      	str	r3, [sp, #44]	@ 0x2c
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 80039d0:	ea4f 1308 	mov.w	r3, r8, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 80039d4:	930a      	str	r3, [sp, #40]	@ 0x28
                              : MX66UW1G45G_OCTA_WRITE_ENABLE_CMD;
 80039d6:	f240 63f9 	movw	r3, #1785	@ 0x6f9
 80039da:	bf08      	it	eq
 80039dc:	2306      	moveq	r3, #6
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039de:	f241 3288 	movw	r2, #5000	@ 0x1388
 80039e2:	4638      	mov	r0, r7
 80039e4:	a906      	add	r1, sp, #24
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 80039e6:	9308      	str	r3, [sp, #32]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039e8:	f004 fd80 	bl	80084ec <HAL_XSPI_Command>
 80039ec:	2800      	cmp	r0, #0
 80039ee:	d1dc      	bne.n	80039aa <MX66UW1G45G_WriteEnable+0x26>
                              : MX66UW1G45G_OCTA_READ_STATUS_REG_CMD;
 80039f0:	2c00      	cmp	r4, #0
 80039f2:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 80039f6:	bf08      	it	eq
 80039f8:	2305      	moveq	r3, #5
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 80039fa:	9308      	str	r3, [sp, #32]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 80039fc:	ea4f 2388 	mov.w	r3, r8, lsl #10
 8003a00:	930d      	str	r3, [sp, #52]	@ 0x34
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003a02:	ea4f 23c5 	mov.w	r3, r5, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a06:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003a08:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003a0c:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003a0e:	bf0c      	ite	eq
 8003a10:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003a14:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 8003a18:	9314      	str	r3, [sp, #80]	@ 0x50
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003a1a:	ea4f 63c5 	mov.w	r3, r5, lsl #27
  s_command.Address = 0U;
 8003a1e:	900c      	str	r0, [sp, #48]	@ 0x30
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003a20:	9316      	str	r3, [sp, #88]	@ 0x58
                              : ((Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a22:	d003      	beq.n	8003a2c <MX66UW1G45G_WriteEnable+0xa8>
 8003a24:	2e01      	cmp	r6, #1
 8003a26:	bf0c      	ite	eq
 8003a28:	2405      	moveq	r4, #5
 8003a2a:	2404      	movne	r4, #4
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a2c:	2e01      	cmp	r6, #1
 8003a2e:	bf0c      	ite	eq
 8003a30:	2302      	moveq	r3, #2
 8003a32:	2301      	movne	r3, #1
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a34:	076d      	lsls	r5, r5, #29
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a36:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a3a:	4638      	mov	r0, r7
 8003a3c:	a906      	add	r1, sp, #24
  s_command.DummyCycles = (Mode == MX66UW1G45G_SPI_MODE)
 8003a3e:	9417      	str	r4, [sp, #92]	@ 0x5c
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a40:	9315      	str	r3, [sp, #84]	@ 0x54
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a42:	9518      	str	r5, [sp, #96]	@ 0x60
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a44:	f004 fd52 	bl	80084ec <HAL_XSPI_Command>
 8003a48:	2800      	cmp	r0, #0
 8003a4a:	d1ae      	bne.n	80039aa <MX66UW1G45G_WriteEnable+0x26>
  s_config.MatchValue = 2U;
 8003a4c:	2302      	movs	r3, #2
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a4e:	2210      	movs	r2, #16
  s_config.MatchMask = 2U;
 8003a50:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a54:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_config.MatchMode = HAL_XSPI_MATCH_MODE_AND;
 8003a58:	9003      	str	r0, [sp, #12]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a5a:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a5e:	4638      	mov	r0, r7
 8003a60:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a64:	a901      	add	r1, sp, #4
 8003a66:	f004 fe19 	bl	800869c <HAL_XSPI_AutoPolling>
 8003a6a:	3800      	subs	r0, #0
 8003a6c:	bf18      	it	ne
 8003a6e:	2001      	movne	r0, #1
 8003a70:	4240      	negs	r0, r0
 8003a72:	e79c      	b.n	80039ae <MX66UW1G45G_WriteEnable+0x2a>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003a74:	2301      	movs	r3, #1
 8003a76:	e79e      	b.n	80039b6 <MX66UW1G45G_WriteEnable+0x32>

08003a78 <MX66UW1G45G_WriteCfg2Register>:
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX66UW1G45G_WriteCfg2Register(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode,
                                      MX66UW1G45G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 8003a78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003a7a:	460e      	mov	r6, r1
 8003a7c:	b095      	sub	sp, #84	@ 0x54
 8003a7e:	4605      	mov	r5, r0
 8003a80:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003a82:	2100      	movs	r1, #0
 8003a84:	2250      	movs	r2, #80	@ 0x50
 8003a86:	4668      	mov	r0, sp
{
 8003a88:	461f      	mov	r7, r3
  XSPI_RegularCmdTypeDef s_command = {0};
 8003a8a:	f02e ff1c 	bl	80328c6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003a8e:	b92e      	cbnz	r6, 8003a9c <MX66UW1G45G_WriteCfg2Register+0x24>
 8003a90:	2c01      	cmp	r4, #1
 8003a92:	d145      	bne.n	8003b20 <MX66UW1G45G_WriteCfg2Register+0xa8>
  {
    return MX66UW1G45G_ERROR;
 8003a94:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003a98:	b015      	add	sp, #84	@ 0x54
 8003a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003a9c:	2304      	movs	r3, #4
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003a9e:	9303      	str	r3, [sp, #12]
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003aa0:	1e63      	subs	r3, r4, #1
 8003aa2:	425a      	negs	r2, r3
 8003aa4:	415a      	adcs	r2, r3
 8003aa6:	00d3      	lsls	r3, r2, #3
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003aa8:	2e00      	cmp	r6, #0
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003aaa:	9305      	str	r3, [sp, #20]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003aac:	bf14      	ite	ne
 8003aae:	2301      	movne	r3, #1
 8003ab0:	2300      	moveq	r3, #0
 8003ab2:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003ab6:	9304      	str	r3, [sp, #16]
                              : MX66UW1G45G_OCTA_WRITE_CFG_REG2_CMD;
 8003ab8:	f247 238d 	movw	r3, #29325	@ 0x728d
 8003abc:	bf08      	it	eq
 8003abe:	2372      	moveq	r3, #114	@ 0x72
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003ac0:	9302      	str	r3, [sp, #8]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_1_LINE : HAL_XSPI_ADDRESS_8_LINES;
 8003ac2:	bf0c      	ite	eq
 8003ac4:	f44f 7380 	moveq.w	r3, #256	@ 0x100
 8003ac8:	f44f 6380 	movne.w	r3, #1024	@ 0x400
 8003acc:	9307      	str	r3, [sp, #28]
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003ace:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003ad2:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003ad4:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003ad8:	9308      	str	r3, [sp, #32]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003ada:	bf0c      	ite	eq
 8003adc:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003ae0:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
                              : HAL_XSPI_DATA_DTR_DISABLE;
 8003ae4:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.Address = WriteAddr;
 8003ae8:	9706      	str	r7, [sp, #24]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003aea:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003aec:	9210      	str	r2, [sp, #64]	@ 0x40
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003aee:	d019      	beq.n	8003b24 <MX66UW1G45G_WriteCfg2Register+0xac>
 8003af0:	2c01      	cmp	r4, #1
 8003af2:	bf14      	ite	ne
 8003af4:	2301      	movne	r3, #1
 8003af6:	2302      	moveq	r3, #2
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003af8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003afc:	4669      	mov	r1, sp
 8003afe:	4628      	mov	r0, r5
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b00:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b02:	f004 fcf3 	bl	80084ec <HAL_XSPI_Command>
 8003b06:	2800      	cmp	r0, #0
 8003b08:	d1c4      	bne.n	8003a94 <MX66UW1G45G_WriteCfg2Register+0x1c>
  if (HAL_XSPI_Transmit(Ctx, &Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b0a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b0e:	4628      	mov	r0, r5
 8003b10:	a91a      	add	r1, sp, #104	@ 0x68
 8003b12:	f004 fd7f 	bl	8008614 <HAL_XSPI_Transmit>
 8003b16:	3800      	subs	r0, #0
 8003b18:	bf18      	it	ne
 8003b1a:	2001      	movne	r0, #1
 8003b1c:	4240      	negs	r0, r0
 8003b1e:	e7bb      	b.n	8003a98 <MX66UW1G45G_WriteCfg2Register+0x20>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b20:	2301      	movs	r3, #1
 8003b22:	e7bc      	b.n	8003a9e <MX66UW1G45G_WriteCfg2Register+0x26>
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b24:	2301      	movs	r3, #1
 8003b26:	e7e7      	b.n	8003af8 <MX66UW1G45G_WriteCfg2Register+0x80>

08003b28 <MX66UW1G45G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003b28:	b570      	push	{r4, r5, r6, lr}
 8003b2a:	460d      	mov	r5, r1
 8003b2c:	b094      	sub	sp, #80	@ 0x50
 8003b2e:	4606      	mov	r6, r0
 8003b30:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003b32:	2100      	movs	r1, #0
 8003b34:	2250      	movs	r2, #80	@ 0x50
 8003b36:	4668      	mov	r0, sp
 8003b38:	f02e fec5 	bl	80328c6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003b3c:	bb05      	cbnz	r5, 8003b80 <MX66UW1G45G_ResetEnable+0x58>
 8003b3e:	2c01      	cmp	r4, #1
 8003b40:	d020      	beq.n	8003b84 <MX66UW1G45G_ResetEnable+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect =  HAL_XSPI_SELECT_IO_3_0;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b42:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b44:	1e62      	subs	r2, r4, #1
 8003b46:	4254      	negs	r4, r2
 8003b48:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b4a:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003b4c:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b4e:	bf14      	ite	ne
 8003b50:	2301      	movne	r3, #1
 8003b52:	2300      	moveq	r3, #0
 8003b54:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003b58:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_ENABLE_CMD
                              : MX66UW1G45G_OCTA_RESET_ENABLE_CMD;
 8003b5a:	f246 6399 	movw	r3, #26265	@ 0x6699
 8003b5e:	bf08      	it	eq
 8003b60:	2366      	moveq	r3, #102	@ 0x66
  s_command.DummyCycles = 0U;
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;


  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b62:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b66:	4669      	mov	r1, sp
 8003b68:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b6a:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003b6c:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003b6e:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b70:	f004 fcbc 	bl	80084ec <HAL_XSPI_Command>
 8003b74:	3800      	subs	r0, #0
 8003b76:	bf18      	it	ne
 8003b78:	2001      	movne	r0, #1
 8003b7a:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003b7c:	b014      	add	sp, #80	@ 0x50
 8003b7e:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b80:	2304      	movs	r3, #4
 8003b82:	e7df      	b.n	8003b44 <MX66UW1G45G_ResetEnable+0x1c>
    return MX66UW1G45G_ERROR;
 8003b84:	f04f 30ff 	mov.w	r0, #4294967295
 8003b88:	e7f8      	b.n	8003b7c <MX66UW1G45G_ResetEnable+0x54>

08003b8a <MX66UW1G45G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetMemory(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003b8a:	b570      	push	{r4, r5, r6, lr}
 8003b8c:	460d      	mov	r5, r1
 8003b8e:	b094      	sub	sp, #80	@ 0x50
 8003b90:	4606      	mov	r6, r0
 8003b92:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003b94:	2100      	movs	r1, #0
 8003b96:	2250      	movs	r2, #80	@ 0x50
 8003b98:	4668      	mov	r0, sp
 8003b9a:	f02e fe94 	bl	80328c6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003b9e:	bb05      	cbnz	r5, 8003be2 <MX66UW1G45G_ResetMemory+0x58>
 8003ba0:	2c01      	cmp	r4, #1
 8003ba2:	d020      	beq.n	8003be6 <MX66UW1G45G_ResetMemory+0x5c>

  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003ba4:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003ba6:	1e62      	subs	r2, r4, #1
 8003ba8:	4254      	negs	r4, r2
 8003baa:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003bac:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003bae:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003bb0:	bf14      	ite	ne
 8003bb2:	2301      	movne	r3, #1
 8003bb4:	2300      	moveq	r3, #0
 8003bb6:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003bba:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_MEMORY_CMD
                              : MX66UW1G45G_OCTA_RESET_MEMORY_CMD;
 8003bbc:	f649 1366 	movw	r3, #39270	@ 0x9966
 8003bc0:	bf08      	it	eq
 8003bc2:	2399      	moveq	r3, #153	@ 0x99
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bc4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003bc8:	4669      	mov	r1, sp
 8003bca:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003bcc:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003bce:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003bd0:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bd2:	f004 fc8b 	bl	80084ec <HAL_XSPI_Command>
 8003bd6:	3800      	subs	r0, #0
 8003bd8:	bf18      	it	ne
 8003bda:	2001      	movne	r0, #1
 8003bdc:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003bde:	b014      	add	sp, #80	@ 0x50
 8003be0:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003be2:	2304      	movs	r3, #4
 8003be4:	e7df      	b.n	8003ba6 <MX66UW1G45G_ResetMemory+0x1c>
    return MX66UW1G45G_ERROR;
 8003be6:	f04f 30ff 	mov.w	r0, #4294967295
 8003bea:	e7f8      	b.n	8003bde <MX66UW1G45G_ResetMemory+0x54>

08003bec <SystemInit>:
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8003bec:	2201      	movs	r2, #1
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8003bee:	480e      	ldr	r0, [pc, #56]	@ (8003c28 <SystemInit+0x3c>)
 8003bf0:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8003bf4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003bf8:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  RCC->CR = RCC_CR_MSISON;
 8003bfc:	4b0b      	ldr	r3, [pc, #44]	@ (8003c2c <SystemInit+0x40>)
 8003bfe:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8003c00:	2200      	movs	r2, #0
 8003c02:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8003c04:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8003c06:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8003c08:	6819      	ldr	r1, [r3, #0]
 8003c0a:	f021 51a8 	bic.w	r1, r1, #352321536	@ 0x15000000
 8003c0e:	f421 2110 	bic.w	r1, r1, #589824	@ 0x90000
 8003c12:	6019      	str	r1, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8003c14:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8003c16:	6819      	ldr	r1, [r3, #0]
 8003c18:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
 8003c1c:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8003c1e:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003c20:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003c24:	6083      	str	r3, [r0, #8]
  #endif
}
 8003c26:	4770      	bx	lr
 8003c28:	e000ed00 	.word	0xe000ed00
 8003c2c:	46020c00 	.word	0x46020c00

08003c30 <HAL_Init>:
  */
HAL_StatusTypeDef HAL_Init(void)
{
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c30:	4a10      	ldr	r2, [pc, #64]	@ (8003c74 <HAL_Init+0x44>)
{
 8003c32:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c34:	6813      	ldr	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c36:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c38:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c3c:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c3e:	f000 f84d 	bl	8003cdc <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8003c42:	f002 fd49 	bl	80066d8 <HAL_RCC_GetSysClockFreq>
 8003c46:	4b0c      	ldr	r3, [pc, #48]	@ (8003c78 <HAL_Init+0x48>)
 8003c48:	4a0c      	ldr	r2, [pc, #48]	@ (8003c7c <HAL_Init+0x4c>)
 8003c4a:	6a1b      	ldr	r3, [r3, #32]
 8003c4c:	f003 030f 	and.w	r3, r3, #15
 8003c50:	5cd3      	ldrb	r3, [r2, r3]
 8003c52:	40d8      	lsrs	r0, r3
 8003c54:	4b0a      	ldr	r3, [pc, #40]	@ (8003c80 <HAL_Init+0x50>)
 8003c56:	6018      	str	r0, [r3, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8003c58:	2004      	movs	r0, #4
 8003c5a:	f000 f88f 	bl	8003d7c <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003c5e:	2000      	movs	r0, #0
 8003c60:	f7fd f896 	bl	8000d90 <HAL_InitTick>
 8003c64:	4604      	mov	r4, r0
 8003c66:	b918      	cbnz	r0, 8003c70 <HAL_Init+0x40>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8003c68:	f7fc fdbe 	bl	80007e8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003c6c:	4620      	mov	r0, r4
 8003c6e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003c70:	2401      	movs	r4, #1
 8003c72:	e7fb      	b.n	8003c6c <HAL_Init+0x3c>
 8003c74:	40022000 	.word	0x40022000
 8003c78:	46020c00 	.word	0x46020c00
 8003c7c:	080355bc 	.word	0x080355bc
 8003c80:	2000004c 	.word	0x2000004c

08003c84 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8003c84:	4a03      	ldr	r2, [pc, #12]	@ (8003c94 <HAL_IncTick+0x10>)
 8003c86:	4b04      	ldr	r3, [pc, #16]	@ (8003c98 <HAL_IncTick+0x14>)
 8003c88:	6811      	ldr	r1, [r2, #0]
 8003c8a:	781b      	ldrb	r3, [r3, #0]
 8003c8c:	440b      	add	r3, r1
 8003c8e:	6013      	str	r3, [r2, #0]
}
 8003c90:	4770      	bx	lr
 8003c92:	bf00      	nop
 8003c94:	2006e8e8 	.word	0x2006e8e8
 8003c98:	20000050 	.word	0x20000050

08003c9c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003c9c:	4b01      	ldr	r3, [pc, #4]	@ (8003ca4 <HAL_GetTick+0x8>)
 8003c9e:	6818      	ldr	r0, [r3, #0]
}
 8003ca0:	4770      	bx	lr
 8003ca2:	bf00      	nop
 8003ca4:	2006e8e8 	.word	0x2006e8e8

08003ca8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003ca8:	b538      	push	{r3, r4, r5, lr}
 8003caa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003cac:	f7ff fff6 	bl	8003c9c <HAL_GetTick>
 8003cb0:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003cb2:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003cb4:	bf1e      	ittt	ne
 8003cb6:	4b04      	ldrne	r3, [pc, #16]	@ (8003cc8 <HAL_Delay+0x20>)
 8003cb8:	781b      	ldrbne	r3, [r3, #0]
 8003cba:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8003cbc:	f7ff ffee 	bl	8003c9c <HAL_GetTick>
 8003cc0:	1b43      	subs	r3, r0, r5
 8003cc2:	42a3      	cmp	r3, r4
 8003cc4:	d3fa      	bcc.n	8003cbc <HAL_Delay+0x14>
  {
  }
}
 8003cc6:	bd38      	pop	{r3, r4, r5, pc}
 8003cc8:	20000050 	.word	0x20000050

08003ccc <HAL_SYSCFG_DisableSRAMCached>:
  *
  * @retval None
  */
void HAL_SYSCFG_DisableSRAMCached(void)
{
  CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_SRAMCACHED);
 8003ccc:	4a02      	ldr	r2, [pc, #8]	@ (8003cd8 <HAL_SYSCFG_DisableSRAMCached+0xc>)
 8003cce:	6853      	ldr	r3, [r2, #4]
 8003cd0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003cd4:	6053      	str	r3, [r2, #4]
}
 8003cd6:	4770      	bx	lr
 8003cd8:	46000400 	.word	0x46000400

08003cdc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003cdc:	4907      	ldr	r1, [pc, #28]	@ (8003cfc <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003cde:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003ce0:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003ce2:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003ce6:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8003cea:	0412      	lsls	r2, r2, #16
 8003cec:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003cee:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003cf0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003cf4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003cf8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003cfa:	4770      	bx	lr
 8003cfc:	e000ed00 	.word	0xe000ed00

08003d00 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003d00:	4b15      	ldr	r3, [pc, #84]	@ (8003d58 <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003d02:	b530      	push	{r4, r5, lr}
 8003d04:	68dc      	ldr	r4, [r3, #12]
 8003d06:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d0a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d0e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d10:	2b04      	cmp	r3, #4
 8003d12:	bf28      	it	cs
 8003d14:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d16:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d18:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d1c:	bf94      	ite	ls
 8003d1e:	2400      	movls	r4, #0
 8003d20:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d22:	fa05 f303 	lsl.w	r3, r5, r3
 8003d26:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003d2a:	40a5      	lsls	r5, r4
 8003d2c:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d30:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003d32:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d34:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d38:	bfac      	ite	ge
 8003d3a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d3e:	4a07      	ldrlt	r2, [pc, #28]	@ (8003d5c <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d40:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003d44:	b2db      	uxtb	r3, r3
 8003d46:	bfab      	itete	ge
 8003d48:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d4c:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d50:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d54:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003d56:	bd30      	pop	{r4, r5, pc}
 8003d58:	e000ed00 	.word	0xe000ed00
 8003d5c:	e000ed14 	.word	0xe000ed14

08003d60 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003d60:	2800      	cmp	r0, #0
 8003d62:	db07      	blt.n	8003d74 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003d64:	2301      	movs	r3, #1
 8003d66:	0941      	lsrs	r1, r0, #5
 8003d68:	4a03      	ldr	r2, [pc, #12]	@ (8003d78 <HAL_NVIC_EnableIRQ+0x18>)
 8003d6a:	f000 001f 	and.w	r0, r0, #31
 8003d6e:	4083      	lsls	r3, r0
 8003d70:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003d74:	4770      	bx	lr
 8003d76:	bf00      	nop
 8003d78:	e000e100 	.word	0xe000e100

08003d7c <HAL_SYSTICK_CLKSourceConfig>:
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8003d7c:	2804      	cmp	r0, #4
 8003d7e:	d818      	bhi.n	8003db2 <HAL_SYSTICK_CLKSourceConfig+0x36>
 8003d80:	e8df f000 	tbb	[pc, r0]
 8003d84:	1726180a 	.word	0x1726180a
 8003d88:	03          	.byte	0x03
 8003d89:	00          	.byte	0x00
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003d8a:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003d8e:	6913      	ldr	r3, [r2, #16]
 8003d90:	f043 0304 	orr.w	r3, r3, #4
 8003d94:	6113      	str	r3, [r2, #16]
      break;
 8003d96:	4770      	bx	lr
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003d98:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003d9c:	6913      	ldr	r3, [r2, #16]
 8003d9e:	f023 0304 	bic.w	r3, r3, #4
 8003da2:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 8003da4:	4a11      	ldr	r2, [pc, #68]	@ (8003dec <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003da6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003daa:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
      break;
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003dae:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
    default:
      /* Nothing to do */
      break;
  }
}
 8003db2:	4770      	bx	lr
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003db4:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003db8:	6913      	ldr	r3, [r2, #16]
 8003dba:	f023 0304 	bic.w	r3, r3, #4
 8003dbe:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8003dc0:	4a0a      	ldr	r2, [pc, #40]	@ (8003dec <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003dc2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003dc6:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003dca:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003dce:	e7ee      	b.n	8003dae <HAL_SYSTICK_CLKSourceConfig+0x32>
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003dd0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003dd4:	6913      	ldr	r3, [r2, #16]
 8003dd6:	f023 0304 	bic.w	r3, r3, #4
 8003dda:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003ddc:	4a03      	ldr	r2, [pc, #12]	@ (8003dec <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003dde:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003de2:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003de6:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003dea:	e7e0      	b.n	8003dae <HAL_SYSTICK_CLKSourceConfig+0x32>
 8003dec:	46020c00 	.word	0x46020c00

08003df0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003df0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003df2:	4604      	mov	r4, r0
 8003df4:	b908      	cbnz	r0, 8003dfa <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8003df6:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8003df8:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003dfa:	7f43      	ldrb	r3, [r0, #29]
 8003dfc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003e00:	b913      	cbnz	r3, 8003e08 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8003e02:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8003e04:	f7fc fd08 	bl	8000818 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8003e08:	2302      	movs	r3, #2
 8003e0a:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003e0c:	7923      	ldrb	r3, [r4, #4]
 8003e0e:	b9e3      	cbnz	r3, 8003e4a <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003e10:	6823      	ldr	r3, [r4, #0]
 8003e12:	4a13      	ldr	r2, [pc, #76]	@ (8003e60 <HAL_CRC_Init+0x70>)
 8003e14:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003e16:	689a      	ldr	r2, [r3, #8]
 8003e18:	f022 0218 	bic.w	r2, r2, #24
 8003e1c:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003e1e:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003e20:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003e22:	b9d2      	cbnz	r2, 8003e5a <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003e24:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003e28:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003e2a:	689a      	ldr	r2, [r3, #8]
 8003e2c:	6961      	ldr	r1, [r4, #20]
 8003e2e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8003e32:	430a      	orrs	r2, r1
 8003e34:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003e36:	689a      	ldr	r2, [r3, #8]
 8003e38:	69a1      	ldr	r1, [r4, #24]
 8003e3a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003e3e:	430a      	orrs	r2, r1
 8003e40:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8003e42:	2301      	movs	r3, #1
  return HAL_OK;
 8003e44:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 8003e46:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8003e48:	e7d6      	b.n	8003df8 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8003e50:	f000 f808 	bl	8003e64 <HAL_CRCEx_Polynomial_Set>
 8003e54:	2800      	cmp	r0, #0
 8003e56:	d0e2      	beq.n	8003e1e <HAL_CRC_Init+0x2e>
 8003e58:	e7cd      	b.n	8003df6 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003e5a:	6922      	ldr	r2, [r4, #16]
 8003e5c:	e7e4      	b.n	8003e28 <HAL_CRC_Init+0x38>
 8003e5e:	bf00      	nop
 8003e60:	04c11db7 	.word	0x04c11db7

08003e64 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003e64:	07cb      	lsls	r3, r1, #31
{
 8003e66:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003e68:	d50d      	bpl.n	8003e86 <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003e6a:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003e6c:	3b01      	subs	r3, #1
 8003e6e:	d31d      	bcc.n	8003eac <HAL_CRCEx_Polynomial_Set+0x48>
 8003e70:	fa21 f403 	lsr.w	r4, r1, r3
 8003e74:	07e4      	lsls	r4, r4, #31
 8003e76:	d5f9      	bpl.n	8003e6c <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8003e78:	2a10      	cmp	r2, #16
 8003e7a:	d013      	beq.n	8003ea4 <HAL_CRCEx_Polynomial_Set+0x40>
 8003e7c:	2a10      	cmp	r2, #16
 8003e7e:	d804      	bhi.n	8003e8a <HAL_CRCEx_Polynomial_Set+0x26>
 8003e80:	b13a      	cbz	r2, 8003e92 <HAL_CRCEx_Polynomial_Set+0x2e>
 8003e82:	2a08      	cmp	r2, #8
 8003e84:	d010      	beq.n	8003ea8 <HAL_CRCEx_Polynomial_Set+0x44>
 8003e86:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8003e88:	e00b      	b.n	8003ea2 <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 8003e8a:	2a18      	cmp	r2, #24
 8003e8c:	d1fb      	bne.n	8003e86 <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
 8003e8e:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8003e90:	d8f9      	bhi.n	8003e86 <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003e92:	6800      	ldr	r0, [r0, #0]
 8003e94:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8003e96:	6883      	ldr	r3, [r0, #8]
 8003e98:	f023 0318 	bic.w	r3, r3, #24
 8003e9c:	4313      	orrs	r3, r2
 8003e9e:	6083      	str	r3, [r0, #8]
 8003ea0:	2000      	movs	r0, #0
}
 8003ea2:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 8003ea4:	2b07      	cmp	r3, #7
 8003ea6:	e7f3      	b.n	8003e90 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 8003ea8:	2b0f      	cmp	r3, #15
 8003eaa:	e7f1      	b.n	8003e90 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
 8003eac:	2a10      	cmp	r2, #16
 8003eae:	d1e5      	bne.n	8003e7c <HAL_CRCEx_Polynomial_Set+0x18>
 8003eb0:	e7e9      	b.n	8003e86 <HAL_CRCEx_Polynomial_Set+0x22>

08003eb2 <HAL_DCACHE_ErrorCallback>:
  * @brief  Error callback.
  * @param  hdcache Pointer to a DCACHE_HandleTypeDef structure that contains
  *                 the configuration information for the specified DCACHEx peripheral.
  * @retval None
  */
__weak void HAL_DCACHE_ErrorCallback(DCACHE_HandleTypeDef *hdcache)
 8003eb2:	4770      	bx	lr

08003eb4 <HAL_DCACHE_CleanByAddrCallback>:
__weak void HAL_DCACHE_CleanByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003eb4:	4770      	bx	lr

08003eb6 <HAL_DCACHE_InvalidateByAddrCallback>:
__weak void HAL_DCACHE_InvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003eb6:	4770      	bx	lr

08003eb8 <HAL_DCACHE_CleanAndInvalidateByAddrCallback>:
__weak void HAL_DCACHE_CleanAndInvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003eb8:	4770      	bx	lr

08003eba <HAL_DCACHE_InvalidateCompleteCallback>:
__weak void HAL_DCACHE_InvalidateCompleteCallback(DCACHE_HandleTypeDef *hdcache)
 8003eba:	4770      	bx	lr

08003ebc <HAL_DCACHE_Enable>:
  if (hdcache == NULL)
 8003ebc:	4602      	mov	r2, r0
 8003ebe:	b150      	cbz	r0, 8003ed6 <HAL_DCACHE_Enable+0x1a>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8003ec0:	6801      	ldr	r1, [r0, #0]
 8003ec2:	6848      	ldr	r0, [r1, #4]
 8003ec4:	f010 0009 	ands.w	r0, r0, #9
 8003ec8:	d107      	bne.n	8003eda <HAL_DCACHE_Enable+0x1e>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003eca:	6290      	str	r0, [r2, #40]	@ 0x28
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_EN);
 8003ecc:	680b      	ldr	r3, [r1, #0]
 8003ece:	f043 0301 	orr.w	r3, r3, #1
 8003ed2:	600b      	str	r3, [r1, #0]
 8003ed4:	4770      	bx	lr
    return HAL_ERROR;
 8003ed6:	2001      	movs	r0, #1
 8003ed8:	4770      	bx	lr
    status =  HAL_BUSY;
 8003eda:	2002      	movs	r0, #2
}
 8003edc:	4770      	bx	lr
	...

08003ee0 <HAL_DCACHE_Init>:
{
 8003ee0:	b510      	push	{r4, lr}
  if (hdcache == NULL)
 8003ee2:	4604      	mov	r4, r0
 8003ee4:	b320      	cbz	r0, 8003f30 <HAL_DCACHE_Init+0x50>
  if (hdcache->State == HAL_DCACHE_STATE_RESET)
 8003ee6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8003eea:	b983      	cbnz	r3, 8003f0e <HAL_DCACHE_Init+0x2e>
    hdcache->ErrorCallback                      = HAL_DCACHE_ErrorCallback;
 8003eec:	4b11      	ldr	r3, [pc, #68]	@ (8003f34 <HAL_DCACHE_Init+0x54>)
 8003eee:	6083      	str	r3, [r0, #8]
    hdcache->CleanByAddrCallback                = HAL_DCACHE_CleanByAddrCallback;
 8003ef0:	4b11      	ldr	r3, [pc, #68]	@ (8003f38 <HAL_DCACHE_Init+0x58>)
 8003ef2:	60c3      	str	r3, [r0, #12]
    hdcache->InvalidateByAddrCallback           = HAL_DCACHE_InvalidateByAddrCallback;
 8003ef4:	4b11      	ldr	r3, [pc, #68]	@ (8003f3c <HAL_DCACHE_Init+0x5c>)
 8003ef6:	6103      	str	r3, [r0, #16]
    hdcache->InvalidateCompleteCallback         = HAL_DCACHE_InvalidateCompleteCallback;
 8003ef8:	4b11      	ldr	r3, [pc, #68]	@ (8003f40 <HAL_DCACHE_Init+0x60>)
 8003efa:	6143      	str	r3, [r0, #20]
    hdcache->CleanAndInvalidateByAddrCallback   = HAL_DCACHE_CleanAndInvalidateByAddrCallback;
 8003efc:	4b11      	ldr	r3, [pc, #68]	@ (8003f44 <HAL_DCACHE_Init+0x64>)
 8003efe:	6183      	str	r3, [r0, #24]
    if (hdcache->MspInitCallback == NULL)
 8003f00:	69c3      	ldr	r3, [r0, #28]
 8003f02:	b90b      	cbnz	r3, 8003f08 <HAL_DCACHE_Init+0x28>
      hdcache->MspInitCallback = HAL_DCACHE_MspInit;
 8003f04:	4b10      	ldr	r3, [pc, #64]	@ (8003f48 <HAL_DCACHE_Init+0x68>)
 8003f06:	61c3      	str	r3, [r0, #28]
    hdcache->MspInitCallback(hdcache);
 8003f08:	4620      	mov	r0, r4
 8003f0a:	69e3      	ldr	r3, [r4, #28]
 8003f0c:	4798      	blx	r3
  hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003f0e:	2300      	movs	r3, #0
 8003f10:	62a3      	str	r3, [r4, #40]	@ 0x28
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003f12:	2301      	movs	r3, #1
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f14:	6822      	ldr	r2, [r4, #0]
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003f16:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f1a:	6813      	ldr	r3, [r2, #0]
 8003f1c:	6861      	ldr	r1, [r4, #4]
 8003f1e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003f22:	430b      	orrs	r3, r1
  status = HAL_DCACHE_Enable(hdcache);
 8003f24:	4620      	mov	r0, r4
}
 8003f26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f2a:	6013      	str	r3, [r2, #0]
  status = HAL_DCACHE_Enable(hdcache);
 8003f2c:	f7ff bfc6 	b.w	8003ebc <HAL_DCACHE_Enable>
}
 8003f30:	2001      	movs	r0, #1
 8003f32:	bd10      	pop	{r4, pc}
 8003f34:	08003eb3 	.word	0x08003eb3
 8003f38:	08003eb5 	.word	0x08003eb5
 8003f3c:	08003eb7 	.word	0x08003eb7
 8003f40:	08003ebb 	.word	0x08003ebb
 8003f44:	08003eb9 	.word	0x08003eb9
 8003f48:	08000849 	.word	0x08000849

08003f4c <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8003f4c:	b538      	push	{r3, r4, r5, lr}
 8003f4e:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8003f50:	f7ff fea4 	bl	8003c9c <HAL_GetTick>
 8003f54:	4605      	mov	r5, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8003f56:	2c00      	cmp	r4, #0
 8003f58:	f000 81a2 	beq.w	80042a0 <HAL_DMA_Init+0x354>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003f5c:	2300      	movs	r3, #0
 8003f5e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003f62:	2302      	movs	r3, #2
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f64:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003f66:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 8003f6a:	6953      	ldr	r3, [r2, #20]
 8003f6c:	f043 0306 	orr.w	r3, r3, #6
 8003f70:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 8003f72:	6823      	ldr	r3, [r4, #0]
 8003f74:	695a      	ldr	r2, [r3, #20]
 8003f76:	07d2      	lsls	r2, r2, #31
 8003f78:	f100 8187 	bmi.w	800428a <HAL_DMA_Init+0x33e>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8003f7c:	695a      	ldr	r2, [r3, #20]
 8003f7e:	6a21      	ldr	r1, [r4, #32]
 8003f80:	f422 0243 	bic.w	r2, r2, #12779520	@ 0xc30000
 8003f84:	430a      	orrs	r2, r1
 8003f86:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003f88:	69e1      	ldr	r1, [r4, #28]
 8003f8a:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f8c:	4daf      	ldr	r5, [pc, #700]	@ (800424c <HAL_DMA_Init+0x300>)
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003f8e:	430a      	orrs	r2, r1
 8003f90:	6921      	ldr	r1, [r4, #16]
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f92:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003f94:	ea42 0201 	orr.w	r2, r2, r1
 8003f98:	69a1      	ldr	r1, [r4, #24]
 8003f9a:	48ad      	ldr	r0, [pc, #692]	@ (8004250 <HAL_DMA_Init+0x304>)
 8003f9c:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fa0:	f000 8087 	beq.w	80040b2 <HAL_DMA_Init+0x166>
 8003fa4:	49ab      	ldr	r1, [pc, #684]	@ (8004254 <HAL_DMA_Init+0x308>)
 8003fa6:	428b      	cmp	r3, r1
 8003fa8:	f000 8083 	beq.w	80040b2 <HAL_DMA_Init+0x166>
 8003fac:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fb0:	3180      	adds	r1, #128	@ 0x80
 8003fb2:	428b      	cmp	r3, r1
 8003fb4:	d07d      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fb6:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fba:	428b      	cmp	r3, r1
 8003fbc:	d079      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fbe:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fc2:	3180      	adds	r1, #128	@ 0x80
 8003fc4:	428b      	cmp	r3, r1
 8003fc6:	d074      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fc8:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fcc:	428b      	cmp	r3, r1
 8003fce:	d070      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fd0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fd4:	3180      	adds	r1, #128	@ 0x80
 8003fd6:	428b      	cmp	r3, r1
 8003fd8:	d06b      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fda:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fde:	428b      	cmp	r3, r1
 8003fe0:	d067      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fe2:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fe6:	3180      	adds	r1, #128	@ 0x80
 8003fe8:	428b      	cmp	r3, r1
 8003fea:	d062      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003fec:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003ff0:	428b      	cmp	r3, r1
 8003ff2:	d05e      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003ff4:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003ff8:	3180      	adds	r1, #128	@ 0x80
 8003ffa:	428b      	cmp	r3, r1
 8003ffc:	d059      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8003ffe:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004002:	428b      	cmp	r3, r1
 8004004:	d055      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004006:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800400a:	3180      	adds	r1, #128	@ 0x80
 800400c:	428b      	cmp	r3, r1
 800400e:	d050      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004010:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004014:	428b      	cmp	r3, r1
 8004016:	d04c      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004018:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800401c:	3180      	adds	r1, #128	@ 0x80
 800401e:	428b      	cmp	r3, r1
 8004020:	d047      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004022:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004026:	428b      	cmp	r3, r1
 8004028:	d043      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 800402a:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800402e:	3180      	adds	r1, #128	@ 0x80
 8004030:	428b      	cmp	r3, r1
 8004032:	d03e      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004034:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004038:	428b      	cmp	r3, r1
 800403a:	d03a      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 800403c:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004040:	3180      	adds	r1, #128	@ 0x80
 8004042:	428b      	cmp	r3, r1
 8004044:	d035      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004046:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800404a:	428b      	cmp	r3, r1
 800404c:	d031      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 800404e:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004052:	3180      	adds	r1, #128	@ 0x80
 8004054:	428b      	cmp	r3, r1
 8004056:	d02c      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004058:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800405c:	428b      	cmp	r3, r1
 800405e:	d028      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004060:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004064:	3180      	adds	r1, #128	@ 0x80
 8004066:	428b      	cmp	r3, r1
 8004068:	d023      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 800406a:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800406e:	428b      	cmp	r3, r1
 8004070:	d01f      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004072:	4283      	cmp	r3, r0
 8004074:	d01d      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004076:	3180      	adds	r1, #128	@ 0x80
 8004078:	428b      	cmp	r3, r1
 800407a:	d01a      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 800407c:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004080:	3180      	adds	r1, #128	@ 0x80
 8004082:	428b      	cmp	r3, r1
 8004084:	d015      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004086:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800408a:	428b      	cmp	r3, r1
 800408c:	d011      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 800408e:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004092:	3180      	adds	r1, #128	@ 0x80
 8004094:	428b      	cmp	r3, r1
 8004096:	d00c      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 8004098:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800409c:	428b      	cmp	r3, r1
 800409e:	d008      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 80040a0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040a4:	3180      	adds	r1, #128	@ 0x80
 80040a6:	428b      	cmp	r3, r1
 80040a8:	d003      	beq.n	80040b2 <HAL_DMA_Init+0x166>
 80040aa:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040ae:	428b      	cmp	r3, r1
 80040b0:	d10d      	bne.n	80040ce <HAL_DMA_Init+0x182>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 80040b2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80040b4:	3901      	subs	r1, #1
 80040b6:	0509      	lsls	r1, r1, #20
 80040b8:	f001 717c 	and.w	r1, r1, #66060288	@ 0x3f00000
 80040bc:	4311      	orrs	r1, r2
 80040be:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80040c0:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 80040c2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80040c4:	3a01      	subs	r2, #1
 80040c6:	0112      	lsls	r2, r2, #4
 80040c8:	f402 727c 	and.w	r2, r2, #1008	@ 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 80040cc:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 80040ce:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80040d0:	f001 2180 	and.w	r1, r1, #2147516416	@ 0x80008000
 80040d4:	430a      	orrs	r2, r1
 80040d6:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 80040d8:	68a1      	ldr	r1, [r4, #8]
 80040da:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80040dc:	4311      	orrs	r1, r2
 80040de:	6862      	ldr	r2, [r4, #4]
 80040e0:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80040e4:	4311      	orrs	r1, r2

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80040e6:	68e2      	ldr	r2, [r4, #12]
 80040e8:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80040ec:	f040 80da 	bne.w	80042a4 <HAL_DMA_Init+0x358>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80040f0:	42ab      	cmp	r3, r5
 80040f2:	f000 8087 	beq.w	8004204 <HAL_DMA_Init+0x2b8>
 80040f6:	4a57      	ldr	r2, [pc, #348]	@ (8004254 <HAL_DMA_Init+0x308>)
 80040f8:	4293      	cmp	r3, r2
 80040fa:	f000 8083 	beq.w	8004204 <HAL_DMA_Init+0x2b8>
 80040fe:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004102:	3280      	adds	r2, #128	@ 0x80
 8004104:	4293      	cmp	r3, r2
 8004106:	d07d      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004108:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800410c:	4293      	cmp	r3, r2
 800410e:	d079      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004110:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004114:	3280      	adds	r2, #128	@ 0x80
 8004116:	4293      	cmp	r3, r2
 8004118:	d074      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 800411a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800411e:	4293      	cmp	r3, r2
 8004120:	d070      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004122:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004126:	3280      	adds	r2, #128	@ 0x80
 8004128:	4293      	cmp	r3, r2
 800412a:	d06b      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 800412c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004130:	4293      	cmp	r3, r2
 8004132:	d067      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004134:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004138:	3280      	adds	r2, #128	@ 0x80
 800413a:	4293      	cmp	r3, r2
 800413c:	d062      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 800413e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004142:	4293      	cmp	r3, r2
 8004144:	d05e      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004146:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800414a:	3280      	adds	r2, #128	@ 0x80
 800414c:	4293      	cmp	r3, r2
 800414e:	d059      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004150:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004154:	4293      	cmp	r3, r2
 8004156:	d055      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004158:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800415c:	3280      	adds	r2, #128	@ 0x80
 800415e:	4293      	cmp	r3, r2
 8004160:	d050      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004162:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004166:	4293      	cmp	r3, r2
 8004168:	d04c      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 800416a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800416e:	3280      	adds	r2, #128	@ 0x80
 8004170:	4293      	cmp	r3, r2
 8004172:	d047      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004174:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004178:	4293      	cmp	r3, r2
 800417a:	d043      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 800417c:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004180:	3280      	adds	r2, #128	@ 0x80
 8004182:	4293      	cmp	r3, r2
 8004184:	d03e      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004186:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800418a:	4293      	cmp	r3, r2
 800418c:	d03a      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 800418e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004192:	3280      	adds	r2, #128	@ 0x80
 8004194:	4293      	cmp	r3, r2
 8004196:	d035      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 8004198:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800419c:	4293      	cmp	r3, r2
 800419e:	d031      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041a0:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041a4:	3280      	adds	r2, #128	@ 0x80
 80041a6:	4293      	cmp	r3, r2
 80041a8:	d02c      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041aa:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041ae:	4293      	cmp	r3, r2
 80041b0:	d028      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041b2:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041b6:	3280      	adds	r2, #128	@ 0x80
 80041b8:	4293      	cmp	r3, r2
 80041ba:	d023      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041bc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d01f      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041c4:	4283      	cmp	r3, r0
 80041c6:	d01d      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041c8:	3280      	adds	r2, #128	@ 0x80
 80041ca:	4293      	cmp	r3, r2
 80041cc:	d01a      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041ce:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041d2:	3280      	adds	r2, #128	@ 0x80
 80041d4:	4293      	cmp	r3, r2
 80041d6:	d015      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041d8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041dc:	4293      	cmp	r3, r2
 80041de:	d011      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041e0:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041e4:	3280      	adds	r2, #128	@ 0x80
 80041e6:	4293      	cmp	r3, r2
 80041e8:	d00c      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041ea:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041ee:	4293      	cmp	r3, r2
 80041f0:	d008      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041f2:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041f6:	3280      	adds	r2, #128	@ 0x80
 80041f8:	4293      	cmp	r3, r2
 80041fa:	d003      	beq.n	8004204 <HAL_DMA_Init+0x2b8>
 80041fc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004200:	4293      	cmp	r3, r2
 8004202:	d101      	bne.n	8004208 <HAL_DMA_Init+0x2bc>
    {
      tmpreg |= DMA_CTR2_DREQ;
 8004204:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 8004208:	6c5d      	ldr	r5, [r3, #68]	@ 0x44
 800420a:	4a13      	ldr	r2, [pc, #76]	@ (8004258 <HAL_DMA_Init+0x30c>)

  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800420c:	4283      	cmp	r3, r0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 800420e:	ea02 0205 	and.w	r2, r2, r5
 8004212:	ea42 0201 	orr.w	r2, r2, r1
 8004216:	645a      	str	r2, [r3, #68]	@ 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 8004218:	f04f 0200 	mov.w	r2, #0
 800421c:	649a      	str	r2, [r3, #72]	@ 0x48
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800421e:	d028      	beq.n	8004272 <HAL_DMA_Init+0x326>
 8004220:	4a0e      	ldr	r2, [pc, #56]	@ (800425c <HAL_DMA_Init+0x310>)
 8004222:	4293      	cmp	r3, r2
 8004224:	d025      	beq.n	8004272 <HAL_DMA_Init+0x326>
 8004226:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800422a:	3280      	adds	r2, #128	@ 0x80
 800422c:	4293      	cmp	r3, r2
 800422e:	d020      	beq.n	8004272 <HAL_DMA_Init+0x326>
 8004230:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004234:	4293      	cmp	r3, r2
 8004236:	d01c      	beq.n	8004272 <HAL_DMA_Init+0x326>
 8004238:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800423c:	3280      	adds	r2, #128	@ 0x80
 800423e:	4293      	cmp	r3, r2
 8004240:	d017      	beq.n	8004272 <HAL_DMA_Init+0x326>
 8004242:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004246:	4293      	cmp	r3, r2
 8004248:	d013      	beq.n	8004272 <HAL_DMA_Init+0x326>
 800424a:	e009      	b.n	8004260 <HAL_DMA_Init+0x314>
 800424c:	40020050 	.word	0x40020050
 8004250:	40020650 	.word	0x40020650
 8004254:	50020050 	.word	0x50020050
 8004258:	3c803180 	.word	0x3c803180
 800425c:	50020650 	.word	0x50020650
 8004260:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004264:	3280      	adds	r2, #128	@ 0x80
 8004266:	4293      	cmp	r3, r2
 8004268:	d003      	beq.n	8004272 <HAL_DMA_Init+0x326>
 800426a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800426e:	4293      	cmp	r3, r2
 8004270:	d102      	bne.n	8004278 <HAL_DMA_Init+0x32c>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 8004272:	2200      	movs	r2, #0
 8004274:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 8004276:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 8004278:	2000      	movs	r0, #0
 800427a:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdma->Mode = hdma->Init.Mode;
 800427c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800427e:	65a0      	str	r0, [r4, #88]	@ 0x58
  hdma->Mode = hdma->Init.Mode;
 8004280:	6523      	str	r3, [r4, #80]	@ 0x50
  hdma->State = HAL_DMA_STATE_READY;
 8004282:	2301      	movs	r3, #1
 8004284:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
  return HAL_OK;
 8004288:	e00b      	b.n	80042a2 <HAL_DMA_Init+0x356>
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 800428a:	f7ff fd07 	bl	8003c9c <HAL_GetTick>
 800428e:	1b40      	subs	r0, r0, r5
 8004290:	2805      	cmp	r0, #5
 8004292:	f67f ae6e 	bls.w	8003f72 <HAL_DMA_Init+0x26>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004296:	2310      	movs	r3, #16
 8004298:	65a3      	str	r3, [r4, #88]	@ 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 800429a:	2303      	movs	r3, #3
 800429c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 80042a0:	2001      	movs	r0, #1
}
 80042a2:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 80042a4:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 80042a8:	bf08      	it	eq
 80042aa:	f441 7100 	orreq.w	r1, r1, #512	@ 0x200
 80042ae:	e7ab      	b.n	8004208 <HAL_DMA_Init+0x2bc>

080042b0 <HAL_DMA_Start_IT>:
{
 80042b0:	b530      	push	{r4, r5, lr}
  if (hdma == NULL)
 80042b2:	2800      	cmp	r0, #0
 80042b4:	d036      	beq.n	8004324 <HAL_DMA_Start_IT+0x74>
  __HAL_LOCK(hdma);
 80042b6:	f890 404c 	ldrb.w	r4, [r0, #76]	@ 0x4c
 80042ba:	2c01      	cmp	r4, #1
 80042bc:	d034      	beq.n	8004328 <HAL_DMA_Start_IT+0x78>
 80042be:	2401      	movs	r4, #1
 80042c0:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
  if (hdma->State == HAL_DMA_STATE_READY)
 80042c4:	f890 4054 	ldrb.w	r4, [r0, #84]	@ 0x54
 80042c8:	2c01      	cmp	r4, #1
 80042ca:	f04f 0400 	mov.w	r4, #0
 80042ce:	d125      	bne.n	800431c <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 80042d0:	2502      	movs	r5, #2
 80042d2:	f880 5054 	strb.w	r5, [r0, #84]	@ 0x54
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80042d6:	6584      	str	r4, [r0, #88]	@ 0x58
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 80042d8:	6804      	ldr	r4, [r0, #0]
 80042da:	b29b      	uxth	r3, r3
 80042dc:	6ca5      	ldr	r5, [r4, #72]	@ 0x48
 80042de:	0c2d      	lsrs	r5, r5, #16
 80042e0:	042d      	lsls	r5, r5, #16
 80042e2:	431d      	orrs	r5, r3
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80042e4:	f44f 43fe 	mov.w	r3, #32512	@ 0x7f00
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 80042e8:	64a5      	str	r5, [r4, #72]	@ 0x48
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80042ea:	60e3      	str	r3, [r4, #12]
  hdma->Instance->CSAR = SrcAddress;
 80042ec:	64e1      	str	r1, [r4, #76]	@ 0x4c
  hdma->Instance->CDAR = DstAddress;
 80042ee:	6522      	str	r2, [r4, #80]	@ 0x50
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80042f0:	6963      	ldr	r3, [r4, #20]
 80042f2:	f443 43ba 	orr.w	r3, r3, #23808	@ 0x5d00
 80042f6:	6163      	str	r3, [r4, #20]
    if (hdma->XferHalfCpltCallback != NULL)
 80042f8:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80042fa:	b11b      	cbz	r3, 8004304 <HAL_DMA_Start_IT+0x54>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 80042fc:	6963      	ldr	r3, [r4, #20]
 80042fe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004302:	6163      	str	r3, [r4, #20]
    if (hdma->XferSuspendCallback != NULL)
 8004304:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8004306:	b11b      	cbz	r3, 8004310 <HAL_DMA_Start_IT+0x60>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8004308:	6963      	ldr	r3, [r4, #20]
 800430a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800430e:	6163      	str	r3, [r4, #20]
  return HAL_OK;
 8004310:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 8004312:	6963      	ldr	r3, [r4, #20]
 8004314:	f043 0301 	orr.w	r3, r3, #1
 8004318:	6163      	str	r3, [r4, #20]
}
 800431a:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800431c:	2340      	movs	r3, #64	@ 0x40
    __HAL_UNLOCK(hdma);
 800431e:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004322:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 8004324:	2001      	movs	r0, #1
 8004326:	e7f8      	b.n	800431a <HAL_DMA_Start_IT+0x6a>
  __HAL_LOCK(hdma);
 8004328:	2002      	movs	r0, #2
 800432a:	e7f6      	b.n	800431a <HAL_DMA_Start_IT+0x6a>

0800432c <HAL_DMA_Abort>:
{
 800432c:	b538      	push	{r3, r4, r5, lr}
 800432e:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8004330:	f7ff fcb4 	bl	8003c9c <HAL_GetTick>
 8004334:	4605      	mov	r5, r0
  if (hdma == NULL)
 8004336:	b144      	cbz	r4, 800434a <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8004338:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800433c:	2b02      	cmp	r3, #2
 800433e:	d006      	beq.n	800434e <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004340:	2320      	movs	r3, #32
 8004342:	65a3      	str	r3, [r4, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004344:	2300      	movs	r3, #0
 8004346:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    return HAL_ERROR;
 800434a:	2001      	movs	r0, #1
}
 800434c:	bd38      	pop	{r3, r4, r5, pc}
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 800434e:	6822      	ldr	r2, [r4, #0]
 8004350:	6953      	ldr	r3, [r2, #20]
 8004352:	f043 0304 	orr.w	r3, r3, #4
 8004356:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 8004358:	2305      	movs	r3, #5
 800435a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 800435e:	6823      	ldr	r3, [r4, #0]
 8004360:	691a      	ldr	r2, [r3, #16]
 8004362:	0490      	lsls	r0, r2, #18
 8004364:	d519      	bpl.n	800439a <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004366:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004368:	6d21      	ldr	r1, [r4, #80]	@ 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 800436a:	f042 0202 	orr.w	r2, r2, #2
 800436e:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004370:	2204      	movs	r2, #4
 8004372:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8004376:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 800437a:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 800437c:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800437e:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004380:	bf48      	it	mi
 8004382:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
    hdma->State = HAL_DMA_STATE_READY;
 8004384:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8004388:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800438c:	bf42      	ittt	mi
 800438e:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 8004390:	2200      	movmi	r2, #0
 8004392:	649a      	strmi	r2, [r3, #72]	@ 0x48
    __HAL_UNLOCK(hdma);
 8004394:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
  return HAL_OK;
 8004398:	e7d8      	b.n	800434c <HAL_DMA_Abort+0x20>
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 800439a:	f7ff fc7f 	bl	8003c9c <HAL_GetTick>
 800439e:	1b40      	subs	r0, r0, r5
 80043a0:	2805      	cmp	r0, #5
 80043a2:	d9dc      	bls.n	800435e <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 80043a4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80043a6:	f043 0310 	orr.w	r3, r3, #16
 80043aa:	65a3      	str	r3, [r4, #88]	@ 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 80043ac:	2303      	movs	r3, #3
 80043ae:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80043b2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80043b4:	061d      	lsls	r5, r3, #24
 80043b6:	d5c5      	bpl.n	8004344 <HAL_DMA_Abort+0x18>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80043b8:	2201      	movs	r2, #1
 80043ba:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80043bc:	731a      	strb	r2, [r3, #12]
        __HAL_UNLOCK(hdma);
 80043be:	e7c1      	b.n	8004344 <HAL_DMA_Abort+0x18>

080043c0 <HAL_DMA_Abort_IT>:
  if (hdma == NULL)
 80043c0:	b128      	cbz	r0, 80043ce <HAL_DMA_Abort_IT+0xe>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 80043c2:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80043c6:	2b02      	cmp	r3, #2
 80043c8:	d003      	beq.n	80043d2 <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80043ca:	2320      	movs	r3, #32
 80043cc:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 80043ce:	2001      	movs	r0, #1
 80043d0:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 80043d2:	2304      	movs	r3, #4
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80043d4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80043d6:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80043da:	6953      	ldr	r3, [r2, #20]
  return HAL_OK;
 80043dc:	2000      	movs	r0, #0
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80043de:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80043e2:	f043 0304 	orr.w	r3, r3, #4
 80043e6:	6153      	str	r3, [r2, #20]
}
 80043e8:	4770      	bx	lr

080043ea <HAL_DMA_IRQHandler>:
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80043ea:	2101      	movs	r1, #1
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 80043ec:	6803      	ldr	r3, [r0, #0]
{
 80043ee:	b510      	push	{r4, lr}
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 80043f0:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
 80043f4:	f022 020f 	bic.w	r2, r2, #15
{
 80043f8:	4604      	mov	r4, r0
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 80043fa:	68d0      	ldr	r0, [r2, #12]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80043fc:	f3c3 020b 	ubfx	r2, r3, #0, #12
 8004400:	3a50      	subs	r2, #80	@ 0x50
 8004402:	f3c2 12c4 	ubfx	r2, r2, #7, #5
 8004406:	fa01 f202 	lsl.w	r2, r1, r2
  if (global_active_flag_ns == 0U)
 800440a:	4202      	tst	r2, r0
 800440c:	f000 80ab 	beq.w	8004566 <HAL_DMA_IRQHandler+0x17c>
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U))
 8004410:	691a      	ldr	r2, [r3, #16]
 8004412:	0550      	lsls	r0, r2, #21
 8004414:	d508      	bpl.n	8004428 <HAL_DMA_IRQHandler+0x3e>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 8004416:	695a      	ldr	r2, [r3, #20]
 8004418:	0552      	lsls	r2, r2, #21
 800441a:	d505      	bpl.n	8004428 <HAL_DMA_IRQHandler+0x3e>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 800441c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004420:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 8004422:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004424:	430a      	orrs	r2, r1
 8004426:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U))
 8004428:	691a      	ldr	r2, [r3, #16]
 800442a:	0510      	lsls	r0, r2, #20
 800442c:	d509      	bpl.n	8004442 <HAL_DMA_IRQHandler+0x58>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 800442e:	695a      	ldr	r2, [r3, #20]
 8004430:	0511      	lsls	r1, r2, #20
 8004432:	d506      	bpl.n	8004442 <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 8004434:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004438:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 800443a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800443c:	f042 0202 	orr.w	r2, r2, #2
 8004440:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U))
 8004442:	691a      	ldr	r2, [r3, #16]
 8004444:	04d2      	lsls	r2, r2, #19
 8004446:	d509      	bpl.n	800445c <HAL_DMA_IRQHandler+0x72>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8004448:	695a      	ldr	r2, [r3, #20]
 800444a:	04d0      	lsls	r0, r2, #19
 800444c:	d506      	bpl.n	800445c <HAL_DMA_IRQHandler+0x72>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 800444e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8004452:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 8004454:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004456:	f042 0204 	orr.w	r2, r2, #4
 800445a:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U))
 800445c:	691a      	ldr	r2, [r3, #16]
 800445e:	0451      	lsls	r1, r2, #17
 8004460:	d509      	bpl.n	8004476 <HAL_DMA_IRQHandler+0x8c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 8004462:	695a      	ldr	r2, [r3, #20]
 8004464:	0452      	lsls	r2, r2, #17
 8004466:	d506      	bpl.n	8004476 <HAL_DMA_IRQHandler+0x8c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 8004468:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800446c:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 800446e:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004470:	f042 0208 	orr.w	r2, r2, #8
 8004474:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U))
 8004476:	691a      	ldr	r2, [r3, #16]
 8004478:	0590      	lsls	r0, r2, #22
 800447a:	d509      	bpl.n	8004490 <HAL_DMA_IRQHandler+0xa6>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 800447c:	695a      	ldr	r2, [r3, #20]
 800447e:	0591      	lsls	r1, r2, #22
 8004480:	d506      	bpl.n	8004490 <HAL_DMA_IRQHandler+0xa6>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 8004482:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004486:	60da      	str	r2, [r3, #12]
      if (hdma->XferHalfCpltCallback != NULL)
 8004488:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800448a:	b10b      	cbz	r3, 8004490 <HAL_DMA_IRQHandler+0xa6>
        hdma->XferHalfCpltCallback(hdma);
 800448c:	4620      	mov	r0, r4
 800448e:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U))
 8004490:	6823      	ldr	r3, [r4, #0]
 8004492:	691a      	ldr	r2, [r3, #16]
 8004494:	0492      	lsls	r2, r2, #18
 8004496:	d52e      	bpl.n	80044f6 <HAL_DMA_IRQHandler+0x10c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 8004498:	695a      	ldr	r2, [r3, #20]
 800449a:	0490      	lsls	r0, r2, #18
 800449c:	d52b      	bpl.n	80044f6 <HAL_DMA_IRQHandler+0x10c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 800449e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80044a2:	60da      	str	r2, [r3, #12]
      if (hdma->State == HAL_DMA_STATE_ABORT)
 80044a4:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
 80044a8:	2a04      	cmp	r2, #4
 80044aa:	d11d      	bne.n	80044e8 <HAL_DMA_IRQHandler+0xfe>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 80044ac:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80044ae:	6d21      	ldr	r1, [r4, #80]	@ 0x50
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 80044b0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80044b4:	615a      	str	r2, [r3, #20]
        hdma->Instance->CCR |= DMA_CCR_RESET;
 80044b6:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80044b8:	0609      	lsls	r1, r1, #24
        hdma->Instance->CCR |= DMA_CCR_RESET;
 80044ba:	f042 0202 	orr.w	r2, r2, #2
 80044be:	615a      	str	r2, [r3, #20]
        hdma->State = HAL_DMA_STATE_READY;
 80044c0:	f04f 0201 	mov.w	r2, #1
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80044c4:	bf48      	it	mi
 80044c6:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
        hdma->State = HAL_DMA_STATE_READY;
 80044c8:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80044cc:	bf42      	ittt	mi
 80044ce:	730a      	strbmi	r2, [r1, #12]
          hdma->Instance->CBR1 = 0U;
 80044d0:	2200      	movmi	r2, #0
 80044d2:	649a      	strmi	r2, [r3, #72]	@ 0x48
        __HAL_UNLOCK(hdma);
 80044d4:	2300      	movs	r3, #0
 80044d6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
        if (hdma->XferAbortCallback != NULL)
 80044da:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
    if (hdma->XferErrorCallback != NULL)
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d042      	beq.n	8004566 <HAL_DMA_IRQHandler+0x17c>
      hdma->XferErrorCallback(hdma);
 80044e0:	4620      	mov	r0, r4
}
 80044e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hdma->XferErrorCallback(hdma);
 80044e6:	4718      	bx	r3
        hdma->State = HAL_DMA_STATE_SUSPEND;
 80044e8:	2305      	movs	r3, #5
 80044ea:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if (hdma->XferSuspendCallback != NULL)
 80044ee:	6f23      	ldr	r3, [r4, #112]	@ 0x70
 80044f0:	b10b      	cbz	r3, 80044f6 <HAL_DMA_IRQHandler+0x10c>
          hdma->XferSuspendCallback(hdma);
 80044f2:	4620      	mov	r0, r4
 80044f4:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U))
 80044f6:	6823      	ldr	r3, [r4, #0]
 80044f8:	691a      	ldr	r2, [r3, #16]
 80044fa:	05d2      	lsls	r2, r2, #23
 80044fc:	d518      	bpl.n	8004530 <HAL_DMA_IRQHandler+0x146>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 80044fe:	695a      	ldr	r2, [r3, #20]
 8004500:	05d0      	lsls	r0, r2, #23
 8004502:	d515      	bpl.n	8004530 <HAL_DMA_IRQHandler+0x146>
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004504:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8004506:	0611      	lsls	r1, r2, #24
 8004508:	d526      	bpl.n	8004558 <HAL_DMA_IRQHandler+0x16e>
        if (hdma->Instance->CLLR == 0U)
 800450a:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
 800450c:	b932      	cbnz	r2, 800451c <HAL_DMA_IRQHandler+0x132>
          if (hdma->Instance->CBR1 == 0U)
 800450e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004510:	b922      	cbnz	r2, 800451c <HAL_DMA_IRQHandler+0x132>
            hdma->State = HAL_DMA_STATE_READY;
 8004512:	2201      	movs	r2, #1
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004514:	6f61      	ldr	r1, [r4, #116]	@ 0x74
            hdma->State = HAL_DMA_STATE_READY;
 8004516:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800451a:	730a      	strb	r2, [r1, #12]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 800451c:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8004520:	60da      	str	r2, [r3, #12]
      __HAL_UNLOCK(hdma);
 8004522:	2300      	movs	r3, #0
 8004524:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      if (hdma->XferCpltCallback != NULL)
 8004528:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800452a:	b10b      	cbz	r3, 8004530 <HAL_DMA_IRQHandler+0x146>
        hdma->XferCpltCallback(hdma);
 800452c:	4620      	mov	r0, r4
 800452e:	4798      	blx	r3
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004530:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8004532:	b1c3      	cbz	r3, 8004566 <HAL_DMA_IRQHandler+0x17c>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004534:	6822      	ldr	r2, [r4, #0]
 8004536:	6953      	ldr	r3, [r2, #20]
 8004538:	f043 0302 	orr.w	r3, r3, #2
 800453c:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_READY;
 800453e:	2301      	movs	r3, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004540:	6d22      	ldr	r2, [r4, #80]	@ 0x50
    hdma->State = HAL_DMA_STATE_READY;
 8004542:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004546:	0612      	lsls	r2, r2, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004548:	bf44      	itt	mi
 800454a:	6f62      	ldrmi	r2, [r4, #116]	@ 0x74
 800454c:	7313      	strbmi	r3, [r2, #12]
    __HAL_UNLOCK(hdma);
 800454e:	2300      	movs	r3, #0
 8004550:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    if (hdma->XferErrorCallback != NULL)
 8004554:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 8004556:	e7c1      	b.n	80044dc <HAL_DMA_IRQHandler+0xf2>
        if (hdma->Instance->CBR1 == 0U)
 8004558:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800455a:	2a00      	cmp	r2, #0
 800455c:	d1de      	bne.n	800451c <HAL_DMA_IRQHandler+0x132>
          hdma->State = HAL_DMA_STATE_READY;
 800455e:	2201      	movs	r2, #1
 8004560:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 8004564:	e7da      	b.n	800451c <HAL_DMA_IRQHandler+0x132>
}
 8004566:	bd10      	pop	{r4, pc}

08004568 <HAL_DMA_GetError>:
  return hdma->ErrorCode;
 8004568:	6d80      	ldr	r0, [r0, #88]	@ 0x58
}
 800456a:	4770      	bx	lr

0800456c <HAL_DMA_ConfigChannelAttributes>:
  if (hdma == NULL)
 800456c:	b1d0      	cbz	r0, 80045a4 <HAL_DMA_ConfigChannelAttributes+0x38>
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 800456e:	06cb      	lsls	r3, r1, #27
 8004570:	d401      	bmi.n	8004576 <HAL_DMA_ConfigChannelAttributes+0xa>
  return HAL_OK;
 8004572:	2000      	movs	r0, #0
 8004574:	4770      	bx	lr
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004576:	6803      	ldr	r3, [r0, #0]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004578:	2001      	movs	r0, #1
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 800457a:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800457e:	f3c3 030b 	ubfx	r3, r3, #0, #12
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004582:	f022 020f 	bic.w	r2, r2, #15
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 8004586:	f001 0111 	and.w	r1, r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800458a:	3b50      	subs	r3, #80	@ 0x50
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 800458c:	2911      	cmp	r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800458e:	f3c3 13c4 	ubfx	r3, r3, #7, #5
      p_dma_instance->PRIVCFGR |= channel_idx;
 8004592:	6851      	ldr	r1, [r2, #4]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004594:	fa00 f303 	lsl.w	r3, r0, r3
      p_dma_instance->PRIVCFGR |= channel_idx;
 8004598:	bf0c      	ite	eq
 800459a:	430b      	orreq	r3, r1
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 800459c:	ea21 0303 	bicne.w	r3, r1, r3
 80045a0:	6053      	str	r3, [r2, #4]
 80045a2:	e7e6      	b.n	8004572 <HAL_DMA_ConfigChannelAttributes+0x6>
    return HAL_ERROR;
 80045a4:	2001      	movs	r0, #1
}
 80045a6:	4770      	bx	lr

080045a8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80045a8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80045aa:	4604      	mov	r4, r0
 80045ac:	2800      	cmp	r0, #0
 80045ae:	d036      	beq.n	800461e <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80045b0:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
 80045b4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80045b8:	b91b      	cbnz	r3, 80045c2 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80045ba:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80045be:	f7fc f96f 	bl	80008a0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80045c2:	2302      	movs	r3, #2
 80045c4:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 80045c8:	6823      	ldr	r3, [r4, #0]
 80045ca:	69e0      	ldr	r0, [r4, #28]
 80045cc:	6819      	ldr	r1, [r3, #0]
 80045ce:	6862      	ldr	r2, [r4, #4]
 80045d0:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
 80045d4:	4302      	orrs	r2, r0
 80045d6:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 80045da:	430a      	orrs	r2, r1
 80045dc:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 80045de:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80045e0:	69a0      	ldr	r0, [r4, #24]
 80045e2:	68a2      	ldr	r2, [r4, #8]
 80045e4:	f421 7183 	bic.w	r1, r1, #262	@ 0x106
 80045e8:	4302      	orrs	r2, r0
 80045ea:	f021 0101 	bic.w	r1, r1, #1
 80045ee:	430a      	orrs	r2, r1
 80045f0:	635a      	str	r2, [r3, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80045f2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80045f4:	68e1      	ldr	r1, [r4, #12]
 80045f6:	0c12      	lsrs	r2, r2, #16
 80045f8:	0412      	lsls	r2, r2, #16
 80045fa:	430a      	orrs	r2, r1
 80045fc:	641a      	str	r2, [r3, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 80045fe:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004600:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8004604:	0552      	lsls	r2, r2, #21
 8004606:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
 800460a:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800460e:	430a      	orrs	r2, r1
 8004610:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004612:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004614:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004616:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004618:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
 800461c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800461e:	2001      	movs	r0, #1
 8004620:	e7fc      	b.n	800461c <HAL_DMA2D_Init+0x74>

08004622 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004622:	4770      	bx	lr

08004624 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004624:	4770      	bx	lr

08004626 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004626:	6803      	ldr	r3, [r0, #0]
{
 8004628:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800462a:	685e      	ldr	r6, [r3, #4]
{
 800462c:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800462e:	07f2      	lsls	r2, r6, #31
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004630:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004632:	d514      	bpl.n	800465e <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004634:	05e9      	lsls	r1, r5, #23
 8004636:	d512      	bpl.n	800465e <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004638:	681a      	ldr	r2, [r3, #0]
 800463a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800463e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004640:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 8004642:	f042 0201 	orr.w	r2, r2, #1
 8004646:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004648:	2201      	movs	r2, #1
 800464a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800464c:	2304      	movs	r3, #4
 800464e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 8004652:	2300      	movs	r3, #0
 8004654:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004658:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800465a:	b103      	cbz	r3, 800465e <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800465c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800465e:	06b2      	lsls	r2, r6, #26
 8004660:	d516      	bpl.n	8004690 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004662:	04ab      	lsls	r3, r5, #18
 8004664:	d514      	bpl.n	8004690 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004666:	6823      	ldr	r3, [r4, #0]
 8004668:	681a      	ldr	r2, [r3, #0]
 800466a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800466e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004670:	2220      	movs	r2, #32
 8004672:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004674:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004676:	f043 0302 	orr.w	r3, r3, #2
 800467a:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800467c:	2304      	movs	r3, #4
 800467e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 8004682:	2300      	movs	r3, #0
 8004684:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004688:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800468a:	b10b      	cbz	r3, 8004690 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800468c:	4620      	mov	r0, r4
 800468e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004690:	0730      	lsls	r0, r6, #28
 8004692:	d516      	bpl.n	80046c2 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004694:	0529      	lsls	r1, r5, #20
 8004696:	d514      	bpl.n	80046c2 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004698:	6823      	ldr	r3, [r4, #0]
 800469a:	681a      	ldr	r2, [r3, #0]
 800469c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80046a0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80046a2:	2208      	movs	r2, #8
 80046a4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80046a6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046a8:	f043 0304 	orr.w	r3, r3, #4
 80046ac:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80046ae:	2304      	movs	r3, #4
 80046b0:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046b4:	2300      	movs	r3, #0
 80046b6:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 80046ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80046bc:	b10b      	cbz	r3, 80046c2 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 80046be:	4620      	mov	r0, r4
 80046c0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80046c2:	0772      	lsls	r2, r6, #29
 80046c4:	d50b      	bpl.n	80046de <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80046c6:	056b      	lsls	r3, r5, #21
 80046c8:	d509      	bpl.n	80046de <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80046ca:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80046cc:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80046ce:	681a      	ldr	r2, [r3, #0]
 80046d0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80046d4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80046d6:	2204      	movs	r2, #4
 80046d8:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80046da:	f7ff ffa2 	bl	8004622 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80046de:	07b0      	lsls	r0, r6, #30
 80046e0:	d514      	bpl.n	800470c <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80046e2:	05a9      	lsls	r1, r5, #22
 80046e4:	d512      	bpl.n	800470c <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80046e6:	6823      	ldr	r3, [r4, #0]
 80046e8:	681a      	ldr	r2, [r3, #0]
 80046ea:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80046ee:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80046f0:	2202      	movs	r2, #2
 80046f2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80046f4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046f6:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80046f8:	2301      	movs	r3, #1
 80046fa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046fe:	2300      	movs	r3, #0
 8004700:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
 8004704:	6a23      	ldr	r3, [r4, #32]
 8004706:	b10b      	cbz	r3, 800470c <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004708:	4620      	mov	r0, r4
 800470a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800470c:	06f2      	lsls	r2, r6, #27
 800470e:	d513      	bpl.n	8004738 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004710:	04eb      	lsls	r3, r5, #19
 8004712:	d511      	bpl.n	8004738 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004714:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004716:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004718:	681a      	ldr	r2, [r3, #0]
 800471a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800471e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004720:	2210      	movs	r2, #16
 8004722:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004724:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004726:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004728:	2301      	movs	r3, #1
 800472a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800472e:	2300      	movs	r3, #0
 8004730:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004734:	f7ff ff76 	bl	8004624 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004738:	bd70      	pop	{r4, r5, r6, pc}
	...

0800473c <DMA_List_GetCLLRNodeInfo.isra.0>:
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 800473c:	0783      	lsls	r3, r0, #30
 800473e:	d506      	bpl.n	800474e <DMA_List_GetCLLRNodeInfo.isra.0+0x12>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 8004740:	b109      	cbz	r1, 8004746 <DMA_List_GetCLLRNodeInfo.isra.0+0xa>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 8004742:	4b06      	ldr	r3, [pc, #24]	@ (800475c <DMA_List_GetCLLRNodeInfo.isra.0+0x20>)
 8004744:	600b      	str	r3, [r1, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 8004746:	b10a      	cbz	r2, 800474c <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 8004748:	2307      	movs	r3, #7
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 800474a:	6013      	str	r3, [r2, #0]
    }
  }
}
 800474c:	4770      	bx	lr
    if (cllr_mask != NULL)
 800474e:	b109      	cbz	r1, 8004754 <DMA_List_GetCLLRNodeInfo.isra.0+0x18>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 8004750:	4b03      	ldr	r3, [pc, #12]	@ (8004760 <DMA_List_GetCLLRNodeInfo.isra.0+0x24>)
 8004752:	600b      	str	r3, [r1, #0]
    if (cllr_offset != NULL)
 8004754:	2a00      	cmp	r2, #0
 8004756:	d0f9      	beq.n	800474c <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 8004758:	2305      	movs	r3, #5
 800475a:	e7f6      	b.n	800474a <DMA_List_GetCLLRNodeInfo.isra.0+0xe>
 800475c:	fe010000 	.word	0xfe010000
 8004760:	f8010000 	.word	0xf8010000

08004764 <HAL_DMAEx_List_Start_IT>:
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 8004764:	4603      	mov	r3, r0
{
 8004766:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 8004768:	2800      	cmp	r0, #0
 800476a:	d04b      	beq.n	8004804 <HAL_DMAEx_List_Start_IT+0xa0>
 800476c:	6f42      	ldr	r2, [r0, #116]	@ 0x74
 800476e:	2a00      	cmp	r2, #0
 8004770:	d048      	beq.n	8004804 <HAL_DMAEx_List_Start_IT+0xa0>
  dma_state = hdma->State;
 8004772:	f890 1054 	ldrb.w	r1, [r0, #84]	@ 0x54
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 8004776:	6804      	ldr	r4, [r0, #0]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 8004778:	2901      	cmp	r1, #1
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 800477a:	6960      	ldr	r0, [r4, #20]
  dma_state = hdma->State;
 800477c:	b2cd      	uxtb	r5, r1
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 800477e:	d003      	beq.n	8004788 <HAL_DMAEx_List_Start_IT+0x24>
 8004780:	2d02      	cmp	r5, #2
 8004782:	d13a      	bne.n	80047fa <HAL_DMAEx_List_Start_IT+0x96>
 8004784:	03c1      	lsls	r1, r0, #15
 8004786:	d538      	bpl.n	80047fa <HAL_DMAEx_List_Start_IT+0x96>
    if (hdma->State == HAL_DMA_STATE_READY)
 8004788:	f893 1054 	ldrb.w	r1, [r3, #84]	@ 0x54
 800478c:	2901      	cmp	r1, #1
 800478e:	b2cd      	uxtb	r5, r1
 8004790:	d12c      	bne.n	80047ec <HAL_DMAEx_List_Start_IT+0x88>
      __HAL_LOCK(hdma);
 8004792:	f893 104c 	ldrb.w	r1, [r3, #76]	@ 0x4c
 8004796:	2002      	movs	r0, #2
 8004798:	2901      	cmp	r1, #1
 800479a:	d02c      	beq.n	80047f6 <HAL_DMAEx_List_Start_IT+0x92>
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 800479c:	2100      	movs	r1, #0
      hdma->State                  = HAL_DMA_STATE_BUSY;
 800479e:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
      __HAL_LOCK(hdma);
 80047a2:	f883 504c 	strb.w	r5, [r3, #76]	@ 0x4c
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 80047a6:	7310      	strb	r0, [r2, #12]
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 80047a8:	6599      	str	r1, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 80047aa:	6111      	str	r1, [r2, #16]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80047ac:	6961      	ldr	r1, [r4, #20]
 80047ae:	f441 41ba 	orr.w	r1, r1, #23808	@ 0x5d00
 80047b2:	6161      	str	r1, [r4, #20]
      if (hdma->XferHalfCpltCallback != NULL)
 80047b4:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 80047b6:	b119      	cbz	r1, 80047c0 <HAL_DMAEx_List_Start_IT+0x5c>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 80047b8:	6961      	ldr	r1, [r4, #20]
 80047ba:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 80047be:	6161      	str	r1, [r4, #20]
      if (hdma->XferSuspendCallback != NULL)
 80047c0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80047c2:	b11b      	cbz	r3, 80047cc <HAL_DMAEx_List_Start_IT+0x68>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 80047c4:	6963      	ldr	r3, [r4, #20]
 80047c6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80047ca:	6163      	str	r3, [r4, #20]
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 80047cc:	6815      	ldr	r5, [r2, #0]
 80047ce:	a901      	add	r1, sp, #4
 80047d0:	6a28      	ldr	r0, [r5, #32]
 80047d2:	2200      	movs	r2, #0
 80047d4:	f7ff ffb2 	bl	800473c <DMA_List_GetCLLRNodeInfo.isra.0>
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 80047d8:	0c2b      	lsrs	r3, r5, #16
 80047da:	041b      	lsls	r3, r3, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 80047dc:	f025 0503 	bic.w	r5, r5, #3
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 80047e0:	6023      	str	r3, [r4, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 80047e2:	042d      	lsls	r5, r5, #16
 80047e4:	9b01      	ldr	r3, [sp, #4]
 80047e6:	0c2d      	lsrs	r5, r5, #16
 80047e8:	431d      	orrs	r5, r3
 80047ea:	67e5      	str	r5, [r4, #124]	@ 0x7c
  return HAL_OK;
 80047ec:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 80047ee:	6963      	ldr	r3, [r4, #20]
 80047f0:	f043 0301 	orr.w	r3, r3, #1
 80047f4:	6163      	str	r3, [r4, #20]
}
 80047f6:	b003      	add	sp, #12
 80047f8:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80047fa:	2240      	movs	r2, #64	@ 0x40
 80047fc:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 80047fe:	2200      	movs	r2, #0
 8004800:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 8004804:	2001      	movs	r0, #1
 8004806:	e7f6      	b.n	80047f6 <HAL_DMAEx_List_Start_IT+0x92>

08004808 <HAL_DMAEx_ConfigDataHandling>:
  if ((hdma == NULL) || (pConfigDataHandling == NULL))
 8004808:	b1b0      	cbz	r0, 8004838 <HAL_DMAEx_ConfigDataHandling+0x30>
 800480a:	b1a9      	cbz	r1, 8004838 <HAL_DMAEx_ConfigDataHandling+0x30>
  if (hdma->State == HAL_DMA_STATE_READY)
 800480c:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8004810:	2b01      	cmp	r3, #1
 8004812:	d10c      	bne.n	800482e <HAL_DMAEx_ConfigDataHandling+0x26>
    MODIFY_REG(hdma->Instance->CTR1, (DMA_CTR1_DHX | DMA_CTR1_DBX | DMA_CTR1_SBX | DMA_CTR1_PAM),
 8004814:	e9d1 1300 	ldrd	r1, r3, [r1]
 8004818:	6800      	ldr	r0, [r0, #0]
 800481a:	430b      	orrs	r3, r1
 800481c:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800481e:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 8004822:	f422 5260 	bic.w	r2, r2, #14336	@ 0x3800
 8004826:	4313      	orrs	r3, r2
 8004828:	6403      	str	r3, [r0, #64]	@ 0x40
  return HAL_OK;
 800482a:	2000      	movs	r0, #0
 800482c:	4770      	bx	lr
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800482e:	2340      	movs	r3, #64	@ 0x40
 8004830:	6583      	str	r3, [r0, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004832:	2300      	movs	r3, #0
 8004834:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
    return HAL_ERROR;
 8004838:	2001      	movs	r0, #1
}
 800483a:	4770      	bx	lr

0800483c <HAL_DMAEx_GetFifoLevel>:
  return ((hdma->Instance->CSR & DMA_CSR_FIFOL) >> DMA_CSR_FIFOL_Pos);
 800483c:	6803      	ldr	r3, [r0, #0]
 800483e:	6918      	ldr	r0, [r3, #16]
}
 8004840:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8004844:	4770      	bx	lr
	...

08004848 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8004848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800484c:	4b81      	ldr	r3, [pc, #516]	@ (8004a54 <HAL_GPIO_Init+0x20c>)
{
 800484e:	b085      	sub	sp, #20
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004850:	ea03 2390 	and.w	r3, r3, r0, lsr #10
 8004854:	9303      	str	r3, [sp, #12]
 8004856:	4b80      	ldr	r3, [pc, #512]	@ (8004a58 <HAL_GPIO_Init+0x210>)
  uint32_t position = 0U;
 8004858:	2200      	movs	r2, #0
 800485a:	9302      	str	r3, [sp, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 800485c:	f04f 0e03 	mov.w	lr, #3
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8004860:	4603      	mov	r3, r0
        EXTI->EXTICR[position >> 2U] = tmp;

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 8004862:	4f7e      	ldr	r7, [pc, #504]	@ (8004a5c <HAL_GPIO_Init+0x214>)
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8004864:	680e      	ldr	r6, [r1, #0]
 8004866:	fa36 f402 	lsrs.w	r4, r6, r2
 800486a:	d102      	bne.n	8004872 <HAL_GPIO_Init+0x2a>
        EXTI->IMR1 = tmp;
      }
    }
    position++;
  }
}
 800486c:	b005      	add	sp, #20
 800486e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 8004872:	2401      	movs	r4, #1
 8004874:	fa04 fc02 	lsl.w	ip, r4, r2
    if (iocurrent != 0U)
 8004878:	ea1c 0406 	ands.w	r4, ip, r6
 800487c:	9401      	str	r4, [sp, #4]
 800487e:	f000 808e 	beq.w	800499e <HAL_GPIO_Init+0x156>
      if (GPIOx == LPGPIO1)
 8004882:	4c77      	ldr	r4, [pc, #476]	@ (8004a60 <HAL_GPIO_Init+0x218>)
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8004884:	684d      	ldr	r5, [r1, #4]
      if (GPIOx == LPGPIO1)
 8004886:	42a0      	cmp	r0, r4
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004888:	f025 0810 	bic.w	r8, r5, #16
      if (GPIOx == LPGPIO1)
 800488c:	f040 808c 	bne.w	80049a8 <HAL_GPIO_Init+0x160>
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004890:	260f      	movs	r6, #15
        tmp = GPIOx->MODER;
 8004892:	6804      	ldr	r4, [r0, #0]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8004894:	f005 0301 	and.w	r3, r5, #1
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 8004898:	ea24 040c 	bic.w	r4, r4, ip
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 800489c:	4093      	lsls	r3, r2
 800489e:	4323      	orrs	r3, r4
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80048a0:	9c02      	ldr	r4, [sp, #8]
        GPIOx->MODER = tmp;
 80048a2:	6003      	str	r3, [r0, #0]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80048a4:	6864      	ldr	r4, [r4, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 80048a6:	9b02      	ldr	r3, [sp, #8]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048a8:	f004 0c07 	and.w	ip, r4, #7
 80048ac:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80048b0:	fa06 fa0c 	lsl.w	sl, r6, ip
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 80048b4:	260b      	movs	r6, #11
 80048b6:	fa06 fc0c 	lsl.w	ip, r6, ip
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 80048ba:	2602      	movs	r6, #2
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 80048bc:	681b      	ldr	r3, [r3, #0]
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 80048be:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 80048c2:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 80048c6:	f8d9 b020 	ldr.w	fp, [r9, #32]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048ca:	ea2b 0a0a 	bic.w	sl, fp, sl
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 80048ce:	ea4c 0c0a 	orr.w	ip, ip, sl
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 80048d2:	f8c9 c020 	str.w	ip, [r9, #32]
        tmp = p_gpio->MODER;
 80048d6:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80048da:	ea4f 0c44 	mov.w	ip, r4, lsl #1
 80048de:	fa0e fa0c 	lsl.w	sl, lr, ip
 80048e2:	ea29 090a 	bic.w	r9, r9, sl
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 80048e6:	fa06 fc0c 	lsl.w	ip, r6, ip
 80048ea:	ea4c 0c09 	orr.w	ip, ip, r9
        p_gpio->MODER = tmp;
 80048ee:	f8c3 c000 	str.w	ip, [r3]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80048f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80048f6:	f1b8 0f01 	cmp.w	r8, #1
 80048fa:	f240 8082 	bls.w	8004a02 <HAL_GPIO_Init+0x1ba>
      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 80048fe:	2d03      	cmp	r5, #3
 8004900:	d04d      	beq.n	800499e <HAL_GPIO_Init+0x156>
        tmp = p_gpio->PUPDR;
 8004902:	f8d3 800c 	ldr.w	r8, [r3, #12]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004906:	688e      	ldr	r6, [r1, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004908:	0064      	lsls	r4, r4, #1
 800490a:	fa0e fc04 	lsl.w	ip, lr, r4
 800490e:	ea28 0c0c 	bic.w	ip, r8, ip
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004912:	fa06 f404 	lsl.w	r4, r6, r4
 8004916:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->PUPDR = tmp;
 800491a:	60dc      	str	r4, [r3, #12]
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800491c:	00ec      	lsls	r4, r5, #3
 800491e:	d53e      	bpl.n	800499e <HAL_GPIO_Init+0x156>
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004920:	260f      	movs	r6, #15
 8004922:	f022 0c03 	bic.w	ip, r2, #3
 8004926:	f10c 4c8c 	add.w	ip, ip, #1174405120	@ 0x46000000
 800492a:	f002 0403 	and.w	r4, r2, #3
 800492e:	f50c 3c08 	add.w	ip, ip, #139264	@ 0x22000
 8004932:	00e4      	lsls	r4, r4, #3
        tmp = EXTI->EXTICR[position >> 2U];
 8004934:	f8dc 9060 	ldr.w	r9, [ip, #96]	@ 0x60
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004938:	fa06 f804 	lsl.w	r8, r6, r4
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800493c:	9e03      	ldr	r6, [sp, #12]
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800493e:	ea29 0808 	bic.w	r8, r9, r8
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004942:	fa06 f404 	lsl.w	r4, r6, r4
        tmp &= ~((uint32_t)iocurrent);
 8004946:	9e01      	ldr	r6, [sp, #4]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004948:	ea44 0408 	orr.w	r4, r4, r8
        EXTI->EXTICR[position >> 2U] = tmp;
 800494c:	f8cc 4060 	str.w	r4, [ip, #96]	@ 0x60
        tmp &= ~((uint32_t)iocurrent);
 8004950:	ea6f 0c06 	mvn.w	ip, r6
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004954:	02ee      	lsls	r6, r5, #11
          tmp |= iocurrent;
 8004956:	bf48      	it	mi
 8004958:	9e01      	ldrmi	r6, [sp, #4]
        tmp = EXTI->RTSR1;
 800495a:	683c      	ldr	r4, [r7, #0]
          tmp |= iocurrent;
 800495c:	bf4c      	ite	mi
 800495e:	4334      	orrmi	r4, r6
        tmp &= ~((uint32_t)iocurrent);
 8004960:	ea0c 0404 	andpl.w	r4, ip, r4
        EXTI->RTSR1 = tmp;
 8004964:	603c      	str	r4, [r7, #0]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004966:	02ae      	lsls	r6, r5, #10
        tmp = EXTI->FTSR1;
 8004968:	687c      	ldr	r4, [r7, #4]
          tmp |= iocurrent;
 800496a:	bf4a      	itet	mi
 800496c:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 800496e:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004972:	4334      	orrmi	r4, r6
        EXTI->FTSR1 = tmp;
 8004974:	607c      	str	r4, [r7, #4]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8004976:	03ae      	lsls	r6, r5, #14
        tmp = EXTI->EMR1;
 8004978:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
          tmp |= iocurrent;
 800497c:	bf4a      	itet	mi
 800497e:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004980:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004984:	4334      	orrmi	r4, r6
        EXTI->EMR1 = tmp;
 8004986:	f8c7 4084 	str.w	r4, [r7, #132]	@ 0x84
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800498a:	03ed      	lsls	r5, r5, #15
        tmp = EXTI->IMR1;
 800498c:	f8d7 4080 	ldr.w	r4, [r7, #128]	@ 0x80
          tmp |= iocurrent;
 8004990:	bf4a      	itet	mi
 8004992:	9d01      	ldrmi	r5, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004994:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004998:	432c      	orrmi	r4, r5
        EXTI->IMR1 = tmp;
 800499a:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
    position++;
 800499e:	9c02      	ldr	r4, [sp, #8]
 80049a0:	3201      	adds	r2, #1
 80049a2:	3408      	adds	r4, #8
 80049a4:	9402      	str	r4, [sp, #8]
 80049a6:	e75d      	b.n	8004864 <HAL_GPIO_Init+0x1c>
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80049a8:	ea4f 0942 	mov.w	r9, r2, lsl #1
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80049ac:	fa0e f409 	lsl.w	r4, lr, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 80049b0:	f005 0c03 	and.w	ip, r5, #3
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80049b4:	f1b8 0f02 	cmp.w	r8, #2
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80049b8:	ea6f 0404 	mvn.w	r4, r4
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 80049bc:	fa0c fc09 	lsl.w	ip, ip, r9
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80049c0:	d13e      	bne.n	8004a40 <HAL_GPIO_Init+0x1f8>
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049c2:	260f      	movs	r6, #15
        tmp = GPIOx->AFR[position >> 3U];
 80049c4:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049c8:	f002 0907 	and.w	r9, r2, #7
 80049cc:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80049d0:	ea4f 0989 	mov.w	r9, r9, lsl #2
        tmp = GPIOx->AFR[position >> 3U];
 80049d4:	f8d8 a020 	ldr.w	sl, [r8, #32]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049d8:	fa06 fb09 	lsl.w	fp, r6, r9
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049dc:	690e      	ldr	r6, [r1, #16]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049de:	ea2a 0a0b 	bic.w	sl, sl, fp
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049e2:	f006 0b0f 	and.w	fp, r6, #15
 80049e6:	fa0b fb09 	lsl.w	fp, fp, r9
 80049ea:	ea4b 0b0a 	orr.w	fp, fp, sl
        GPIOx->AFR[position >> 3U] = tmp;
 80049ee:	f8c8 b020 	str.w	fp, [r8, #32]
        tmp = p_gpio->MODER;
 80049f2:	f8d3 8000 	ldr.w	r8, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80049f6:	ea04 0808 	and.w	r8, r4, r8
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 80049fa:	ea48 040c 	orr.w	r4, r8, ip
        p_gpio->MODER = tmp;
 80049fe:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a00:	4614      	mov	r4, r2
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a02:	68ce      	ldr	r6, [r1, #12]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a04:	ea4f 0844 	mov.w	r8, r4, lsl #1
 8004a08:	fa0e f908 	lsl.w	r9, lr, r8
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a0c:	fa06 f808 	lsl.w	r8, r6, r8
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004a10:	2601      	movs	r6, #1
        tmp = p_gpio->OSPEEDR;
 8004a12:	f8d3 c008 	ldr.w	ip, [r3, #8]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a16:	ea2c 0c09 	bic.w	ip, ip, r9
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a1a:	ea48 080c 	orr.w	r8, r8, ip
        p_gpio->OSPEEDR = tmp;
 8004a1e:	f8c3 8008 	str.w	r8, [r3, #8]
        tmp = p_gpio->OTYPER;
 8004a22:	f8d3 8004 	ldr.w	r8, [r3, #4]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004a26:	fa06 fc04 	lsl.w	ip, r6, r4
 8004a2a:	ea28 080c 	bic.w	r8, r8, ip
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 8004a2e:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8004a32:	fa0c fc04 	lsl.w	ip, ip, r4
 8004a36:	ea4c 0c08 	orr.w	ip, ip, r8
        p_gpio->OTYPER = tmp;
 8004a3a:	f8c3 c004 	str.w	ip, [r3, #4]
 8004a3e:	e75e      	b.n	80048fe <HAL_GPIO_Init+0xb6>
        tmp = p_gpio->MODER;
 8004a40:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a44:	ea04 0409 	and.w	r4, r4, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a48:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->MODER = tmp;
 8004a4c:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a4e:	4614      	mov	r4, r2
 8004a50:	e74f      	b.n	80048f2 <HAL_GPIO_Init+0xaa>
 8004a52:	bf00      	nop
 8004a54:	002f7f7f 	.word	0x002f7f7f
 8004a58:	080355cc 	.word	0x080355cc
 8004a5c:	46022000 	.word	0x46022000
 8004a60:	46020000 	.word	0x46020000

08004a64 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0U)
 8004a64:	6903      	ldr	r3, [r0, #16]
 8004a66:	4219      	tst	r1, r3
  {
    bitstatus = GPIO_PIN_RESET;
  }

  return bitstatus;
}
 8004a68:	bf14      	ite	ne
 8004a6a:	2001      	movne	r0, #1
 8004a6c:	2000      	moveq	r0, #0
 8004a6e:	4770      	bx	lr

08004a70 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004a70:	b10a      	cbz	r2, 8004a76 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004a72:	6181      	str	r1, [r0, #24]
 8004a74:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 8004a76:	6281      	str	r1, [r0, #40]	@ 0x28
  }
}
 8004a78:	4770      	bx	lr

08004a7a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004a7a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004a7c:	ea01 0203 	and.w	r2, r1, r3
 8004a80:	ea21 0103 	bic.w	r1, r1, r3
 8004a84:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004a88:	6181      	str	r1, [r0, #24]
}
 8004a8a:	4770      	bx	lr

08004a8c <HAL_GPIO_EXTI_Rising_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8004a8c:	4770      	bx	lr
	...

08004a90 <HAL_GPIO_EXTI_IRQHandler>:
{
 8004a90:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004a92:	4d08      	ldr	r5, [pc, #32]	@ (8004ab4 <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8004a94:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004a96:	68eb      	ldr	r3, [r5, #12]
 8004a98:	4203      	tst	r3, r0
 8004a9a:	d002      	beq.n	8004aa2 <HAL_GPIO_EXTI_IRQHandler+0x12>
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8004a9c:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8004a9e:	f7ff fff5 	bl	8004a8c <HAL_GPIO_EXTI_Rising_Callback>
  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8004aa2:	692b      	ldr	r3, [r5, #16]
 8004aa4:	421c      	tst	r4, r3
 8004aa6:	d003      	beq.n	8004ab0 <HAL_GPIO_EXTI_IRQHandler+0x20>
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004aa8:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8004aaa:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004aac:	f7fc fb46 	bl	800113c <HAL_GPIO_EXTI_Falling_Callback>
}
 8004ab0:	bd38      	pop	{r3, r4, r5, pc}
 8004ab2:	bf00      	nop
 8004ab4:	46022000 	.word	0x46022000

08004ab8 <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8004ab8:	b510      	push	{r4, lr}
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8004aba:	4604      	mov	r4, r0
 8004abc:	b170      	cbz	r0, 8004adc <HAL_GPU2D_Init+0x24>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8004abe:	7943      	ldrb	r3, [r0, #5]
 8004ac0:	b93b      	cbnz	r3, 8004ad2 <HAL_GPU2D_Init+0x1a>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8004ac2:	f7fb ff11 	bl	80008e8 <HAL_GPU2D_MspInit>
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004ac6:	2000      	movs	r0, #0

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8004ac8:	f44f 7380 	mov.w	r3, #256	@ 0x100
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004acc:	60a0      	str	r0, [r4, #8]
  __HAL_UNLOCK(hgpu2d);
 8004ace:	80a3      	strh	r3, [r4, #4]

  return HAL_OK;
}
 8004ad0:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hgpu2d);
 8004ad2:	7903      	ldrb	r3, [r0, #4]
 8004ad4:	2b01      	cmp	r3, #1
 8004ad6:	d1f6      	bne.n	8004ac6 <HAL_GPU2D_Init+0xe>
 8004ad8:	2002      	movs	r0, #2
 8004ada:	e7f9      	b.n	8004ad0 <HAL_GPU2D_Init+0x18>
    return HAL_ERROR;
 8004adc:	2001      	movs	r0, #1
 8004ade:	e7f7      	b.n	8004ad0 <HAL_GPU2D_Init+0x18>

08004ae0 <HAL_GPU2D_ReadRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8004ae0:	6803      	ldr	r3, [r0, #0]
 8004ae2:	58c8      	ldr	r0, [r1, r3]

  return value;
}
 8004ae4:	4770      	bx	lr

08004ae6 <HAL_GPU2D_WriteRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004ae6:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8004ae8:	2000      	movs	r0, #0
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004aea:	50ca      	str	r2, [r1, r3]
}
 8004aec:	4770      	bx	lr

08004aee <HAL_GPU2D_IRQHandler>:
  *                the configuration information for the GPU2D.
  * @retval None
  */
void HAL_GPU2D_IRQHandler(GPU2D_HandleTypeDef *hgpu2d)
{
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004aee:	6802      	ldr	r2, [r0, #0]
{
 8004af0:	b508      	push	{r3, lr}
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004af2:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8

  /* Command List Complete Interrupt management */
  if ((isr_flags & GPU2D_FLAG_CLC) != 0U)
 8004af6:	07c9      	lsls	r1, r1, #31
 8004af8:	d50a      	bpl.n	8004b10 <HAL_GPU2D_IRQHandler+0x22>
  {
    uint32_t last_cl_id;

    /* Clear the completion flag */
    __HAL_GPU2D_CLEAR_FLAG(hgpu2d, GPU2D_FLAG_CLC);
 8004afa:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8
 8004afe:	f021 0101 	bic.w	r1, r1, #1
 8004b02:	f8c2 10f8 	str.w	r1, [r2, #248]	@ 0xf8

    last_cl_id = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_CLID);
 8004b06:	6803      	ldr	r3, [r0, #0]
 8004b08:	f8d3 1148 	ldr.w	r1, [r3, #328]	@ 0x148
    if (hgpu2d->CommandListCpltCallback != NULL)
    {
      hgpu2d->CommandListCpltCallback(hgpu2d, last_cl_id);
    }
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    HAL_GPU2D_CommandListCpltCallback(hgpu2d, last_cl_id);
 8004b0c:	f7fe f8ee 	bl	8002cec <HAL_GPU2D_CommandListCpltCallback>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
  }
}
 8004b10:	bd08      	pop	{r3, pc}

08004b12 <HAL_GPU2D_ErrorCallback>:
            the HAL_GPU2D_ErrorCallback can be implemented in the user file.
            The default implementation stops the execution as an error is considered
            fatal and non recoverable.
   */

  for (;;)
 8004b12:	e7fe      	b.n	8004b12 <HAL_GPU2D_ErrorCallback>

08004b14 <HAL_GPU2D_ER_IRQHandler>:
{
 8004b14:	b508      	push	{r3, lr}
  HAL_GPU2D_ErrorCallback(hgpu2d);
 8004b16:	f7ff fffc 	bl	8004b12 <HAL_GPU2D_ErrorCallback>
}
 8004b1a:	bd08      	pop	{r3, pc}

08004b1c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004b1c:	6803      	ldr	r3, [r0, #0]
 8004b1e:	699a      	ldr	r2, [r3, #24]
 8004b20:	0791      	lsls	r1, r2, #30
  {
    hi2c->Instance->TXDR = 0x00U;
 8004b22:	bf44      	itt	mi
 8004b24:	2200      	movmi	r2, #0
 8004b26:	629a      	strmi	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004b28:	699a      	ldr	r2, [r3, #24]
 8004b2a:	07d2      	lsls	r2, r2, #31
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004b2c:	bf5e      	ittt	pl
 8004b2e:	699a      	ldrpl	r2, [r3, #24]
 8004b30:	f042 0201 	orrpl.w	r2, r2, #1
 8004b34:	619a      	strpl	r2, [r3, #24]
  }
}
 8004b36:	4770      	bx	lr

08004b38 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004b38:	b530      	push	{r4, r5, lr}
 8004b3a:	9d03      	ldr	r5, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b3c:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b3e:	432b      	orrs	r3, r5
 8004b40:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b44:	4a06      	ldr	r2, [pc, #24]	@ (8004b60 <I2C_TransferConfig+0x28>)
 8004b46:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b48:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8004b4c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b4e:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b52:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b56:	ea20 0002 	bic.w	r0, r0, r2
 8004b5a:	4303      	orrs	r3, r0
 8004b5c:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004b5e:	bd30      	pop	{r4, r5, pc}
 8004b60:	03ff63ff 	.word	0x03ff63ff

08004b64 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004b64:	6803      	ldr	r3, [r0, #0]
{
 8004b66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004b6a:	699c      	ldr	r4, [r3, #24]
{
 8004b6c:	4605      	mov	r5, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004b6e:	f014 0410 	ands.w	r4, r4, #16
{
 8004b72:	460f      	mov	r7, r1
 8004b74:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004b76:	d06f      	beq.n	8004c58 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004b78:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004b7a:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004b7c:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004b7e:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004b80:	682b      	ldr	r3, [r5, #0]
 8004b82:	699a      	ldr	r2, [r3, #24]
 8004b84:	0690      	lsls	r0, r2, #26
 8004b86:	d461      	bmi.n	8004c4c <I2C_IsErrorOccurred+0xe8>
 8004b88:	f1b8 0f00 	cmp.w	r8, #0
 8004b8c:	d035      	beq.n	8004bfa <I2C_IsErrorOccurred+0x96>
    status = HAL_ERROR;
 8004b8e:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8004b90:	f044 0404 	orr.w	r4, r4, #4
  itflag = hi2c->Instance->ISR;
 8004b94:	682e      	ldr	r6, [r5, #0]
 8004b96:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004b98:	05d9      	lsls	r1, r3, #23
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004b9a:	bf41      	itttt	mi
 8004b9c:	f44f 7280 	movmi.w	r2, #256	@ 0x100
    status = HAL_ERROR;
 8004ba0:	2001      	movmi	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004ba2:	61f2      	strmi	r2, [r6, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8004ba4:	f044 0401 	orrmi.w	r4, r4, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004ba8:	055a      	lsls	r2, r3, #21
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004baa:	bf41      	itttt	mi
 8004bac:	f44f 6280 	movmi.w	r2, #1024	@ 0x400
    status = HAL_ERROR;
 8004bb0:	2001      	movmi	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8004bb2:	f044 0408 	orrmi.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004bb6:	61f2      	strmi	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004bb8:	059b      	lsls	r3, r3, #22
 8004bba:	d54f      	bpl.n	8004c5c <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004bbc:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004bc0:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004bc4:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004bc6:	4628      	mov	r0, r5
 8004bc8:	f7ff ffa8 	bl	8004b1c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004bcc:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004bce:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004bd0:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004bd4:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004bd8:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004bdc:	f023 0301 	bic.w	r3, r3, #1
 8004be0:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004be2:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004be4:	4323      	orrs	r3, r4
 8004be6:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004be8:	2320      	movs	r3, #32
 8004bea:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bee:	2300      	movs	r3, #0
 8004bf0:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004bf4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004bf8:	e032      	b.n	8004c60 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004bfa:	1c7a      	adds	r2, r7, #1
 8004bfc:	d0c1      	beq.n	8004b82 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004bfe:	f7ff f84d 	bl	8003c9c <HAL_GetTick>
 8004c02:	1b80      	subs	r0, r0, r6
 8004c04:	42b8      	cmp	r0, r7
 8004c06:	d801      	bhi.n	8004c0c <I2C_IsErrorOccurred+0xa8>
 8004c08:	2f00      	cmp	r7, #0
 8004c0a:	d1b9      	bne.n	8004b80 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004c0c:	682b      	ldr	r3, [r5, #0]
 8004c0e:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004c10:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004c14:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004c16:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004c18:	0400      	lsls	r0, r0, #16
 8004c1a:	d50a      	bpl.n	8004c32 <I2C_IsErrorOccurred+0xce>
 8004c1c:	0449      	lsls	r1, r1, #17
 8004c1e:	d408      	bmi.n	8004c32 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004c20:	2a20      	cmp	r2, #32
 8004c22:	d006      	beq.n	8004c32 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004c24:	685a      	ldr	r2, [r3, #4]
 8004c26:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c2a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004c2c:	f7ff f836 	bl	8003c9c <HAL_GetTick>
 8004c30:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004c32:	682b      	ldr	r3, [r5, #0]
 8004c34:	699b      	ldr	r3, [r3, #24]
 8004c36:	069b      	lsls	r3, r3, #26
 8004c38:	d4a2      	bmi.n	8004b80 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004c3a:	f7ff f82f 	bl	8003c9c <HAL_GetTick>
 8004c3e:	1b80      	subs	r0, r0, r6
 8004c40:	2819      	cmp	r0, #25
 8004c42:	d9f6      	bls.n	8004c32 <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004c44:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004c46:	f04f 0801 	mov.w	r8, #1
 8004c4a:	e799      	b.n	8004b80 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004c4c:	f1b8 0f00 	cmp.w	r8, #0
 8004c50:	d19d      	bne.n	8004b8e <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004c52:	2220      	movs	r2, #32
 8004c54:	61da      	str	r2, [r3, #28]
 8004c56:	e79a      	b.n	8004b8e <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004c58:	4620      	mov	r0, r4
 8004c5a:	e79b      	b.n	8004b94 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004c5c:	2800      	cmp	r0, #0
 8004c5e:	d1b2      	bne.n	8004bc6 <I2C_IsErrorOccurred+0x62>
}
 8004c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004c64 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004c64:	b570      	push	{r4, r5, r6, lr}
 8004c66:	4604      	mov	r4, r0
 8004c68:	460d      	mov	r5, r1
 8004c6a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004c6c:	6823      	ldr	r3, [r4, #0]
 8004c6e:	699b      	ldr	r3, [r3, #24]
 8004c70:	079b      	lsls	r3, r3, #30
 8004c72:	d501      	bpl.n	8004c78 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004c74:	2000      	movs	r0, #0
 8004c76:	e01f      	b.n	8004cb8 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c78:	4632      	mov	r2, r6
 8004c7a:	4629      	mov	r1, r5
 8004c7c:	4620      	mov	r0, r4
 8004c7e:	f7ff ff71 	bl	8004b64 <I2C_IsErrorOccurred>
 8004c82:	b9c0      	cbnz	r0, 8004cb6 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8004c84:	1c6a      	adds	r2, r5, #1
 8004c86:	d0f1      	beq.n	8004c6c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c88:	f7ff f808 	bl	8003c9c <HAL_GetTick>
 8004c8c:	1b80      	subs	r0, r0, r6
 8004c8e:	42a8      	cmp	r0, r5
 8004c90:	d801      	bhi.n	8004c96 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004c92:	2d00      	cmp	r5, #0
 8004c94:	d1ea      	bne.n	8004c6c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8004c96:	6823      	ldr	r3, [r4, #0]
 8004c98:	699b      	ldr	r3, [r3, #24]
 8004c9a:	f013 0302 	ands.w	r3, r3, #2
 8004c9e:	d1e5      	bne.n	8004c6c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004ca0:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
 8004ca2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004ca6:	f042 0220 	orr.w	r2, r2, #32
 8004caa:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004cac:	2220      	movs	r2, #32
 8004cae:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004cb2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004cb6:	2001      	movs	r0, #1
}
 8004cb8:	bd70      	pop	{r4, r5, r6, pc}

08004cba <I2C_WaitOnFlagUntilTimeout>:
{
 8004cba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cbe:	4604      	mov	r4, r0
 8004cc0:	460f      	mov	r7, r1
 8004cc2:	4616      	mov	r6, r2
 8004cc4:	461d      	mov	r5, r3
 8004cc6:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004cca:	6823      	ldr	r3, [r4, #0]
 8004ccc:	699b      	ldr	r3, [r3, #24]
 8004cce:	ea37 0303 	bics.w	r3, r7, r3
 8004cd2:	bf0c      	ite	eq
 8004cd4:	2301      	moveq	r3, #1
 8004cd6:	2300      	movne	r3, #0
 8004cd8:	42b3      	cmp	r3, r6
 8004cda:	d001      	beq.n	8004ce0 <I2C_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8004cdc:	2000      	movs	r0, #0
 8004cde:	e025      	b.n	8004d2c <I2C_WaitOnFlagUntilTimeout+0x72>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ce0:	4642      	mov	r2, r8
 8004ce2:	4629      	mov	r1, r5
 8004ce4:	4620      	mov	r0, r4
 8004ce6:	f7ff ff3d 	bl	8004b64 <I2C_IsErrorOccurred>
 8004cea:	b9f0      	cbnz	r0, 8004d2a <I2C_WaitOnFlagUntilTimeout+0x70>
    if (Timeout != HAL_MAX_DELAY)
 8004cec:	1c6b      	adds	r3, r5, #1
 8004cee:	d0ec      	beq.n	8004cca <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cf0:	f7fe ffd4 	bl	8003c9c <HAL_GetTick>
 8004cf4:	eba0 0008 	sub.w	r0, r0, r8
 8004cf8:	42a8      	cmp	r0, r5
 8004cfa:	d801      	bhi.n	8004d00 <I2C_WaitOnFlagUntilTimeout+0x46>
 8004cfc:	2d00      	cmp	r5, #0
 8004cfe:	d1e4      	bne.n	8004cca <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004d00:	6823      	ldr	r3, [r4, #0]
 8004d02:	699b      	ldr	r3, [r3, #24]
 8004d04:	ea37 0303 	bics.w	r3, r7, r3
 8004d08:	bf0c      	ite	eq
 8004d0a:	2301      	moveq	r3, #1
 8004d0c:	2300      	movne	r3, #0
 8004d0e:	42b3      	cmp	r3, r6
 8004d10:	d1db      	bne.n	8004cca <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d12:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004d14:	f043 0320 	orr.w	r3, r3, #32
 8004d18:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004d1a:	2320      	movs	r3, #32
 8004d1c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d20:	2300      	movs	r3, #0
 8004d22:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
 8004d26:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004d2a:	2001      	movs	r0, #1
}
 8004d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d30 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004d30:	b570      	push	{r4, r5, r6, lr}
 8004d32:	4604      	mov	r4, r0
 8004d34:	460d      	mov	r5, r1
 8004d36:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004d38:	6823      	ldr	r3, [r4, #0]
 8004d3a:	699b      	ldr	r3, [r3, #24]
 8004d3c:	069b      	lsls	r3, r3, #26
 8004d3e:	d501      	bpl.n	8004d44 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004d40:	2000      	movs	r0, #0
 8004d42:	e01d      	b.n	8004d80 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d44:	4632      	mov	r2, r6
 8004d46:	4629      	mov	r1, r5
 8004d48:	4620      	mov	r0, r4
 8004d4a:	f7ff ff0b 	bl	8004b64 <I2C_IsErrorOccurred>
 8004d4e:	b9b0      	cbnz	r0, 8004d7e <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d50:	f7fe ffa4 	bl	8003c9c <HAL_GetTick>
 8004d54:	1b80      	subs	r0, r0, r6
 8004d56:	42a8      	cmp	r0, r5
 8004d58:	d801      	bhi.n	8004d5e <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004d5a:	2d00      	cmp	r5, #0
 8004d5c:	d1ec      	bne.n	8004d38 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8004d5e:	6823      	ldr	r3, [r4, #0]
 8004d60:	699b      	ldr	r3, [r3, #24]
 8004d62:	f013 0320 	ands.w	r3, r3, #32
 8004d66:	d1e7      	bne.n	8004d38 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d68:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8004d6a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d6e:	f042 0220 	orr.w	r2, r2, #32
 8004d72:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004d74:	2220      	movs	r2, #32
 8004d76:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d7a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004d7e:	2001      	movs	r0, #1
}
 8004d80:	bd70      	pop	{r4, r5, r6, pc}

08004d82 <HAL_I2C_Init>:
{
 8004d82:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004d84:	4604      	mov	r4, r0
 8004d86:	2800      	cmp	r0, #0
 8004d88:	d04e      	beq.n	8004e28 <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004d8a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8004d8e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d92:	b91b      	cbnz	r3, 8004d9c <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8004d94:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8004d98:	f7fb fe5a 	bl	8000a50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004d9c:	2324      	movs	r3, #36	@ 0x24
 8004d9e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004da2:	6823      	ldr	r3, [r4, #0]
 8004da4:	681a      	ldr	r2, [r3, #0]
 8004da6:	f022 0201 	bic.w	r2, r2, #1
 8004daa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004dac:	6862      	ldr	r2, [r4, #4]
 8004dae:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004db2:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004db4:	689a      	ldr	r2, [r3, #8]
 8004db6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004dba:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004dbc:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004dc0:	2901      	cmp	r1, #1
 8004dc2:	d106      	bne.n	8004dd2 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004dc4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004dc8:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004dca:	685a      	ldr	r2, [r3, #4]
 8004dcc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004dd0:	e007      	b.n	8004de2 <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004dd2:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004dd6:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004dd8:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004dda:	d1f6      	bne.n	8004dca <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004ddc:	685a      	ldr	r2, [r3, #4]
 8004dde:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004de2:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004de4:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004de6:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004de8:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8004dec:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004df0:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8004df2:	68da      	ldr	r2, [r3, #12]
 8004df4:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004df8:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004dfa:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004dfe:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004e00:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004e02:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004e06:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004e08:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004e0c:	430a      	orrs	r2, r1
 8004e0e:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004e10:	681a      	ldr	r2, [r3, #0]
 8004e12:	f042 0201 	orr.w	r2, r2, #1
 8004e16:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004e18:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e1a:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004e1c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004e20:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e22:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004e26:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e28:	2001      	movs	r0, #1
 8004e2a:	e7fc      	b.n	8004e26 <HAL_I2C_Init+0xa4>

08004e2c <HAL_I2C_Mem_Write>:
{
 8004e2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e30:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e32:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004e36:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e38:	2b20      	cmp	r3, #32
{
 8004e3a:	460f      	mov	r7, r1
 8004e3c:	4616      	mov	r6, r2
 8004e3e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004e42:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e46:	f040 80c6 	bne.w	8004fd6 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004e4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e4c:	b113      	cbz	r3, 8004e54 <HAL_I2C_Mem_Write+0x28>
 8004e4e:	f1ba 0f00 	cmp.w	sl, #0
 8004e52:	d106      	bne.n	8004e62 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004e54:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004e58:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004e5a:	2001      	movs	r0, #1
}
 8004e5c:	b003      	add	sp, #12
 8004e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004e62:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004e66:	2b01      	cmp	r3, #1
 8004e68:	f000 80b5 	beq.w	8004fd6 <HAL_I2C_Mem_Write+0x1aa>
 8004e6c:	f04f 0b01 	mov.w	fp, #1
 8004e70:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004e74:	f7fe ff12 	bl	8003c9c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004e78:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8004e7a:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004e7c:	9000      	str	r0, [sp, #0]
 8004e7e:	465a      	mov	r2, fp
 8004e80:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004e84:	4620      	mov	r0, r4
 8004e86:	f7ff ff18 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 8004e8a:	2800      	cmp	r0, #0
 8004e8c:	d1e5      	bne.n	8004e5a <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004e8e:	2321      	movs	r3, #33	@ 0x21
 8004e90:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004e94:	2340      	movs	r3, #64	@ 0x40
 8004e96:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004e9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e9c:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 8004e9e:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004ea0:	4b4e      	ldr	r3, [pc, #312]	@ (8004fdc <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferISR   = NULL;
 8004ea2:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004ea4:	4639      	mov	r1, r7
 8004ea6:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8004ea8:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004eac:	fa5f f289 	uxtb.w	r2, r9
 8004eb0:	9300      	str	r3, [sp, #0]
 8004eb2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004eb6:	f7ff fe3f 	bl	8004b38 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004eba:	462a      	mov	r2, r5
 8004ebc:	4641      	mov	r1, r8
 8004ebe:	4620      	mov	r0, r4
 8004ec0:	f7ff fed0 	bl	8004c64 <I2C_WaitOnTXISFlagUntilTimeout>
 8004ec4:	bb18      	cbnz	r0, 8004f0e <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ec6:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004eca:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ecc:	d115      	bne.n	8004efa <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ece:	b2f6      	uxtb	r6, r6
 8004ed0:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004ed2:	2200      	movs	r2, #0
 8004ed4:	4643      	mov	r3, r8
 8004ed6:	2180      	movs	r1, #128	@ 0x80
 8004ed8:	4620      	mov	r0, r4
 8004eda:	9500      	str	r5, [sp, #0]
 8004edc:	f7ff feed 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 8004ee0:	b9a8      	cbnz	r0, 8004f0e <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004ee2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004ee4:	b29b      	uxth	r3, r3
 8004ee6:	2bff      	cmp	r3, #255	@ 0xff
 8004ee8:	d815      	bhi.n	8004f16 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004eea:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004eec:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8004ef0:	b292      	uxth	r2, r2
 8004ef2:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004ef4:	9000      	str	r0, [sp, #0]
 8004ef6:	b2d2      	uxtb	r2, r2
 8004ef8:	e012      	b.n	8004f20 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004efa:	0a32      	lsrs	r2, r6, #8
 8004efc:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004efe:	4641      	mov	r1, r8
 8004f00:	462a      	mov	r2, r5
 8004f02:	4620      	mov	r0, r4
 8004f04:	f7ff feae 	bl	8004c64 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f08:	b908      	cbnz	r0, 8004f0e <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f0a:	6823      	ldr	r3, [r4, #0]
 8004f0c:	e7df      	b.n	8004ece <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8004f0e:	2300      	movs	r3, #0
 8004f10:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004f14:	e7a1      	b.n	8004e5a <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f16:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004f18:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f1c:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004f1e:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f20:	4639      	mov	r1, r7
 8004f22:	4620      	mov	r0, r4
 8004f24:	f7ff fe08 	bl	8004b38 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f28:	462a      	mov	r2, r5
 8004f2a:	4641      	mov	r1, r8
 8004f2c:	4620      	mov	r0, r4
 8004f2e:	f7ff fe99 	bl	8004c64 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f32:	2800      	cmp	r0, #0
 8004f34:	d191      	bne.n	8004e5a <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8004f36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004f38:	6822      	ldr	r2, [r4, #0]
 8004f3a:	f813 1b01 	ldrb.w	r1, [r3], #1
 8004f3e:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004f40:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004f42:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f44:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004f46:	3b01      	subs	r3, #1
 8004f48:	b29b      	uxth	r3, r3
 8004f4a:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f4c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f4e:	3a01      	subs	r2, #1
 8004f50:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f52:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8004f54:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f56:	b1b3      	cbz	r3, 8004f86 <HAL_I2C_Mem_Write+0x15a>
 8004f58:	b9aa      	cbnz	r2, 8004f86 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004f5a:	4643      	mov	r3, r8
 8004f5c:	2180      	movs	r1, #128	@ 0x80
 8004f5e:	4620      	mov	r0, r4
 8004f60:	9500      	str	r5, [sp, #0]
 8004f62:	f7ff feaa 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 8004f66:	2800      	cmp	r0, #0
 8004f68:	f47f af77 	bne.w	8004e5a <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004f6c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f6e:	b29b      	uxth	r3, r3
 8004f70:	2bff      	cmp	r3, #255	@ 0xff
 8004f72:	d928      	bls.n	8004fc6 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f74:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004f76:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f7a:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004f7c:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004f7e:	4639      	mov	r1, r7
 8004f80:	4620      	mov	r0, r4
 8004f82:	f7ff fdd9 	bl	8004b38 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004f86:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f88:	b29b      	uxth	r3, r3
 8004f8a:	2b00      	cmp	r3, #0
 8004f8c:	d1cc      	bne.n	8004f28 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f8e:	462a      	mov	r2, r5
 8004f90:	4641      	mov	r1, r8
 8004f92:	4620      	mov	r0, r4
 8004f94:	f7ff fecc 	bl	8004d30 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004f98:	2800      	cmp	r0, #0
 8004f9a:	f47f af5e 	bne.w	8004e5a <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f9e:	2120      	movs	r1, #32
 8004fa0:	6823      	ldr	r3, [r4, #0]
 8004fa2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004fa4:	685a      	ldr	r2, [r3, #4]
 8004fa6:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004faa:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004fae:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8004fb2:	f022 0201 	bic.w	r2, r2, #1
 8004fb6:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8004fb8:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004fbc:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004fc0:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8004fc4:	e74a      	b.n	8004e5c <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8004fc6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fc8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8004fcc:	b292      	uxth	r2, r2
 8004fce:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fd0:	9000      	str	r0, [sp, #0]
 8004fd2:	b2d2      	uxtb	r2, r2
 8004fd4:	e7d3      	b.n	8004f7e <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8004fd6:	2002      	movs	r0, #2
 8004fd8:	e740      	b.n	8004e5c <HAL_I2C_Mem_Write+0x30>
 8004fda:	bf00      	nop
 8004fdc:	80002000 	.word	0x80002000

08004fe0 <HAL_I2C_Mem_Read>:
{
 8004fe0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fe4:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fe6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004fea:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fec:	2b20      	cmp	r3, #32
{
 8004fee:	460f      	mov	r7, r1
 8004ff0:	4616      	mov	r6, r2
 8004ff2:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004ff6:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ffa:	f040 80c9 	bne.w	8005190 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8004ffe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005000:	b113      	cbz	r3, 8005008 <HAL_I2C_Mem_Read+0x28>
 8005002:	f1ba 0f00 	cmp.w	sl, #0
 8005006:	d106      	bne.n	8005016 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005008:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800500c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 800500e:	2001      	movs	r0, #1
}
 8005010:	b003      	add	sp, #12
 8005012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005016:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 800501a:	2b01      	cmp	r3, #1
 800501c:	f000 80b8 	beq.w	8005190 <HAL_I2C_Mem_Read+0x1b0>
 8005020:	f04f 0b01 	mov.w	fp, #1
 8005024:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005028:	f7fe fe38 	bl	8003c9c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800502c:	2319      	movs	r3, #25
 800502e:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005030:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005032:	465a      	mov	r2, fp
 8005034:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005038:	4620      	mov	r0, r4
 800503a:	f7ff fe3e 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 800503e:	4603      	mov	r3, r0
 8005040:	2800      	cmp	r0, #0
 8005042:	d1e4      	bne.n	800500e <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005044:	2222      	movs	r2, #34	@ 0x22
 8005046:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800504a:	2240      	movs	r2, #64	@ 0x40
 800504c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005050:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005052:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 8005054:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005056:	4a4f      	ldr	r2, [pc, #316]	@ (8005194 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferISR   = NULL;
 8005058:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800505a:	4639      	mov	r1, r7
 800505c:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 800505e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005062:	9200      	str	r2, [sp, #0]
 8005064:	fa5f f289 	uxtb.w	r2, r9
 8005068:	f7ff fd66 	bl	8004b38 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800506c:	462a      	mov	r2, r5
 800506e:	4641      	mov	r1, r8
 8005070:	4620      	mov	r0, r4
 8005072:	f7ff fdf7 	bl	8004c64 <I2C_WaitOnTXISFlagUntilTimeout>
 8005076:	bb20      	cbnz	r0, 80050c2 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005078:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800507c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800507e:	d116      	bne.n	80050ae <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005080:	b2f6      	uxtb	r6, r6
 8005082:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005084:	2200      	movs	r2, #0
 8005086:	4643      	mov	r3, r8
 8005088:	2140      	movs	r1, #64	@ 0x40
 800508a:	4620      	mov	r0, r4
 800508c:	9500      	str	r5, [sp, #0]
 800508e:	f7ff fe14 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 8005092:	b9b0      	cbnz	r0, 80050c2 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005094:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005096:	b29b      	uxth	r3, r3
 8005098:	2bff      	cmp	r3, #255	@ 0xff
 800509a:	4b3f      	ldr	r3, [pc, #252]	@ (8005198 <HAL_I2C_Mem_Read+0x1b8>)
 800509c:	d815      	bhi.n	80050ca <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 800509e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80050a0:	b292      	uxth	r2, r2
 80050a2:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050a4:	9300      	str	r3, [sp, #0]
 80050a6:	b2d2      	uxtb	r2, r2
 80050a8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80050ac:	e012      	b.n	80050d4 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80050ae:	0a32      	lsrs	r2, r6, #8
 80050b0:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050b2:	4641      	mov	r1, r8
 80050b4:	462a      	mov	r2, r5
 80050b6:	4620      	mov	r0, r4
 80050b8:	f7ff fdd4 	bl	8004c64 <I2C_WaitOnTXISFlagUntilTimeout>
 80050bc:	b908      	cbnz	r0, 80050c2 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80050be:	6823      	ldr	r3, [r4, #0]
 80050c0:	e7de      	b.n	8005080 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 80050c2:	2300      	movs	r3, #0
 80050c4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80050c8:	e7a1      	b.n	800500e <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80050ca:	22ff      	movs	r2, #255	@ 0xff
 80050cc:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80050ce:	9300      	str	r3, [sp, #0]
 80050d0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050d4:	4639      	mov	r1, r7
 80050d6:	4620      	mov	r0, r4
 80050d8:	f7ff fd2e 	bl	8004b38 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80050dc:	4643      	mov	r3, r8
 80050de:	2200      	movs	r2, #0
 80050e0:	2104      	movs	r1, #4
 80050e2:	4620      	mov	r0, r4
 80050e4:	9500      	str	r5, [sp, #0]
 80050e6:	f7ff fde8 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 80050ea:	2800      	cmp	r0, #0
 80050ec:	d18f      	bne.n	800500e <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80050ee:	6823      	ldr	r3, [r4, #0]
 80050f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80050f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80050f4:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80050f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 80050f8:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 80050fa:	3301      	adds	r3, #1
 80050fc:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80050fe:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005100:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005102:	3b01      	subs	r3, #1
 8005104:	b29b      	uxth	r3, r3
 8005106:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005108:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800510a:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800510c:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 800510e:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005110:	b1b3      	cbz	r3, 8005140 <HAL_I2C_Mem_Read+0x160>
 8005112:	b9aa      	cbnz	r2, 8005140 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005114:	4643      	mov	r3, r8
 8005116:	2180      	movs	r1, #128	@ 0x80
 8005118:	4620      	mov	r0, r4
 800511a:	9500      	str	r5, [sp, #0]
 800511c:	f7ff fdcd 	bl	8004cba <I2C_WaitOnFlagUntilTimeout>
 8005120:	2800      	cmp	r0, #0
 8005122:	f47f af74 	bne.w	800500e <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005126:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005128:	b29b      	uxth	r3, r3
 800512a:	2bff      	cmp	r3, #255	@ 0xff
 800512c:	d928      	bls.n	8005180 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800512e:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005130:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005134:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005136:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005138:	4639      	mov	r1, r7
 800513a:	4620      	mov	r0, r4
 800513c:	f7ff fcfc 	bl	8004b38 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005140:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005142:	b29b      	uxth	r3, r3
 8005144:	2b00      	cmp	r3, #0
 8005146:	d1c9      	bne.n	80050dc <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005148:	462a      	mov	r2, r5
 800514a:	4641      	mov	r1, r8
 800514c:	4620      	mov	r0, r4
 800514e:	f7ff fdef 	bl	8004d30 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005152:	2800      	cmp	r0, #0
 8005154:	f47f af5b 	bne.w	800500e <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005158:	2120      	movs	r1, #32
 800515a:	6823      	ldr	r3, [r4, #0]
 800515c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800515e:	685a      	ldr	r2, [r3, #4]
 8005160:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005164:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005168:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 800516c:	f022 0201 	bic.w	r2, r2, #1
 8005170:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005172:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005176:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800517a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 800517e:	e747      	b.n	8005010 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005180:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005182:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005186:	b292      	uxth	r2, r2
 8005188:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800518a:	9000      	str	r0, [sp, #0]
 800518c:	b2d2      	uxtb	r2, r2
 800518e:	e7d3      	b.n	8005138 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8005190:	2002      	movs	r0, #2
 8005192:	e73d      	b.n	8005010 <HAL_I2C_Mem_Read+0x30>
 8005194:	80002000 	.word	0x80002000
 8005198:	80002400 	.word	0x80002400

0800519c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800519c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800519e:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80051a2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80051a4:	2a20      	cmp	r2, #32
 80051a6:	b2d4      	uxtb	r4, r2
 80051a8:	d11c      	bne.n	80051e4 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80051aa:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80051ae:	2a01      	cmp	r2, #1
 80051b0:	d018      	beq.n	80051e4 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80051b2:	2224      	movs	r2, #36	@ 0x24
 80051b4:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051b8:	6802      	ldr	r2, [r0, #0]
 80051ba:	6810      	ldr	r0, [r2, #0]
 80051bc:	f020 0001 	bic.w	r0, r0, #1
 80051c0:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80051c2:	6810      	ldr	r0, [r2, #0]
 80051c4:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 80051c8:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80051ca:	6810      	ldr	r0, [r2, #0]
 80051cc:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80051ce:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 80051d0:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80051d2:	6811      	ldr	r1, [r2, #0]
 80051d4:	f041 0101 	orr.w	r1, r1, #1
 80051d8:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80051da:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80051de:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 80051e2:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 80051e4:	2002      	movs	r0, #2
 80051e6:	e7fc      	b.n	80051e2 <HAL_I2CEx_ConfigAnalogFilter+0x46>

080051e8 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80051e8:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80051ea:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80051ee:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80051f0:	2a20      	cmp	r2, #32
 80051f2:	b2d4      	uxtb	r4, r2
 80051f4:	d11b      	bne.n	800522e <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80051f6:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80051fa:	2a01      	cmp	r2, #1
 80051fc:	d017      	beq.n	800522e <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80051fe:	2224      	movs	r2, #36	@ 0x24
 8005200:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005204:	6802      	ldr	r2, [r0, #0]
 8005206:	6810      	ldr	r0, [r2, #0]
 8005208:	f020 0001 	bic.w	r0, r0, #1
 800520c:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800520e:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005210:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005214:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005218:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 800521a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 800521c:	6811      	ldr	r1, [r2, #0]
 800521e:	f041 0101 	orr.w	r1, r1, #1
 8005222:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005224:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005228:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 800522c:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 800522e:	2002      	movs	r0, #2
 8005230:	e7fc      	b.n	800522c <HAL_I2CEx_ConfigDigitalFilter+0x44>
	...

08005234 <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 8005234:	4601      	mov	r1, r0

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 8005236:	4a06      	ldr	r2, [pc, #24]	@ (8005250 <HAL_ICACHE_ConfigAssociativityMode+0x1c>)
 8005238:	6810      	ldr	r0, [r2, #0]
 800523a:	f010 0001 	ands.w	r0, r0, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 800523e:	bf09      	itett	eq
 8005240:	6813      	ldreq	r3, [r2, #0]
    status = HAL_ERROR;
 8005242:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 8005244:	f023 0304 	biceq.w	r3, r3, #4
 8005248:	430b      	orreq	r3, r1
 800524a:	bf08      	it	eq
 800524c:	6013      	streq	r3, [r2, #0]
  }

  return status;
}
 800524e:	4770      	bx	lr
 8005250:	40030400 	.word	0x40030400

08005254 <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 8005254:	4a03      	ldr	r2, [pc, #12]	@ (8005264 <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 8005256:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 8005258:	6813      	ldr	r3, [r2, #0]
 800525a:	f043 0301 	orr.w	r3, r3, #1
 800525e:	6013      	str	r3, [r2, #0]
}
 8005260:	4770      	bx	lr
 8005262:	bf00      	nop
 8005264:	40030400 	.word	0x40030400

08005268 <JPEG_Bits_To_SizeCodes>:
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(const uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode,
                                                uint32_t *LastK)
{
 8005268:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Figure C.1: Generation of table of Huffman code sizes */
  j = 0;
  for (k = 0; k < 16UL; k++)
  {
    i = (uint32_t)Bits[k];
 800526a:	2401      	movs	r4, #1
  j = 0;
 800526c:	2500      	movs	r5, #0
    i = (uint32_t)Bits[k];
 800526e:	7807      	ldrb	r7, [r0, #0]
    if ((j + i) > 256UL)
 8005270:	194e      	adds	r6, r1, r5
 8005272:	443d      	add	r5, r7
 8005274:	194f      	adds	r7, r1, r5
    {
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
 8005276:	42be      	cmp	r6, r7
 8005278:	d112      	bne.n	80052a0 <JPEG_Bits_To_SizeCodes+0x38>
  for (k = 0; k < 16UL; k++)
 800527a:	2c10      	cmp	r4, #16
 800527c:	d108      	bne.n	8005290 <JPEG_Bits_To_SizeCodes+0x28>
      Huffsize[j] = (uint8_t) k + 1U;
      j++;
      i--;
    }
  }
  Huffsize[j] = 0;
 800527e:	2400      	movs	r4, #0
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if (si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005280:	2601      	movs	r6, #1
  Huffsize[j] = 0;
 8005282:	554c      	strb	r4, [r1, r5]
  *LastK = j;
 8005284:	601d      	str	r5, [r3, #0]
  j = 0;
 8005286:	4623      	mov	r3, r4
  si = Huffsize[0];
 8005288:	780d      	ldrb	r5, [r1, #0]
  while (Huffsize[j] != 0U)
 800528a:	5cc8      	ldrb	r0, [r1, r3]
 800528c:	b9d8      	cbnz	r0, 80052c6 <JPEG_Bits_To_SizeCodes+0x5e>
    code <<= 1;
    si++;
  }
  /* Return function status */
  return HAL_OK;
}
 800528e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = (uint32_t)Bits[k];
 8005290:	5d07      	ldrb	r7, [r0, r4]
    if ((j + i) > 256UL)
 8005292:	3401      	adds	r4, #1
 8005294:	19ee      	adds	r6, r5, r7
 8005296:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 800529a:	d9e9      	bls.n	8005270 <JPEG_Bits_To_SizeCodes+0x8>
      return HAL_ERROR;
 800529c:	2001      	movs	r0, #1
 800529e:	e7f6      	b.n	800528e <JPEG_Bits_To_SizeCodes+0x26>
      Huffsize[j] = (uint8_t) k + 1U;
 80052a0:	f806 4b01 	strb.w	r4, [r6], #1
      i--;
 80052a4:	e7e7      	b.n	8005276 <JPEG_Bits_To_SizeCodes+0xe>
      Huffcode[j] = code;
 80052a6:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
      j++;
 80052aa:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[j]) == si)
 80052ac:	5cc8      	ldrb	r0, [r1, r3]
 80052ae:	19dc      	adds	r4, r3, r7
 80052b0:	42a8      	cmp	r0, r5
 80052b2:	d0f8      	beq.n	80052a6 <JPEG_Bits_To_SizeCodes+0x3e>
    if (si > 31UL)
 80052b4:	2d1f      	cmp	r5, #31
 80052b6:	d8f1      	bhi.n	800529c <JPEG_Bits_To_SizeCodes+0x34>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 80052b8:	fa06 f005 	lsl.w	r0, r6, r5
 80052bc:	42a0      	cmp	r0, r4
 80052be:	d9ed      	bls.n	800529c <JPEG_Bits_To_SizeCodes+0x34>
    code <<= 1;
 80052c0:	0064      	lsls	r4, r4, #1
    si++;
 80052c2:	3501      	adds	r5, #1
 80052c4:	e7e1      	b.n	800528a <JPEG_Bits_To_SizeCodes+0x22>
 80052c6:	1ae7      	subs	r7, r4, r3
 80052c8:	e7f0      	b.n	80052ac <JPEG_Bits_To_SizeCodes+0x44>

080052ca <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
 80052ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052cc:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
 80052d0:	460d      	mov	r5, r1
  uint32_t k;
  uint32_t i;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80052d2:	ab01      	add	r3, sp, #4
 80052d4:	aa43      	add	r2, sp, #268	@ 0x10c
 80052d6:	a902      	add	r1, sp, #8
{
 80052d8:	4604      	mov	r4, r0
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80052da:	f7ff ffc5 	bl	8005268 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 80052de:	b938      	cbnz	r0, 80052f0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>
 80052e0:	9e01      	ldr	r6, [sp, #4]
 80052e2:	460b      	mov	r3, r1
 80052e4:	360f      	adds	r6, #15
 80052e6:	f104 010f 	add.w	r1, r4, #15
 80052ea:	4434      	add	r4, r6
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
 80052ec:	42a1      	cmp	r1, r4
 80052ee:	d102      	bne.n	80052f6 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2c>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 80052f0:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
 80052f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = DC_BitsValsTable->HuffVal[k];
 80052f6:	f811 6f01 	ldrb.w	r6, [r1, #1]!
    if (i >= JPEG_DC_HUFF_TABLE_SIZE)
 80052fa:	2e0b      	cmp	r6, #11
 80052fc:	d80a      	bhi.n	8005314 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4a>
      DC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80052fe:	f852 cb04 	ldr.w	ip, [r2], #4
 8005302:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 8005306:	f8c7 c00c 	str.w	ip, [r7, #12]
      DC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 800530a:	f813 7b01 	ldrb.w	r7, [r3], #1
 800530e:	3f01      	subs	r7, #1
 8005310:	55af      	strb	r7, [r5, r6]
      k++;
 8005312:	e7eb      	b.n	80052ec <JPEG_DCHuff_BitsVals_To_SizeCodes+0x22>
      return HAL_ERROR; /* Huffman Table overflow error*/
 8005314:	2001      	movs	r0, #1
 8005316:	e7eb      	b.n	80052f0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>

08005318 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
 8005318:	4603      	mov	r3, r0
 800531a:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 800531c:	681c      	ldr	r4, [r3, #0]
{
 800531e:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005320:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
 8005324:	429a      	cmp	r2, r3
{
 8005326:	b091      	sub	sp, #68	@ 0x44
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005328:	d127      	bne.n	800537a <JPEG_Set_HuffDC_Mem+0x62>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 800532a:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
    return HAL_ERROR;
  }

  if (HuffTableDC != NULL)
  {
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
 800532e:	a901      	add	r1, sp, #4
 8005330:	f7ff ffcb 	bl	80052ca <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
 8005334:	b9f8      	cbnz	r0, 8005376 <JPEG_Set_HuffDC_Mem+0x5e>
    {
      return  error;
    }
    addressDef = address;
    *addressDef = 0x0FFF0FFF;
 8005336:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 800533a:	aa01      	add	r2, sp, #4
    addressDef++;
    *addressDef = 0x0FFF0FFF;
 800533c:	4615      	mov	r5, r2
    *addressDef = 0x0FFF0FFF;
 800533e:	6023      	str	r3, [r4, #0]
    *addressDef = 0x0FFF0FFF;
 8005340:	f1a4 0618 	sub.w	r6, r4, #24
 8005344:	6063      	str	r3, [r4, #4]
    i = JPEG_DC_HUFF_TABLE_SIZE;
    while (i > 1UL)
    {
      i--;
      address --;
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005346:	7ad1      	ldrb	r1, [r2, #11]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005348:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800534c:	0209      	lsls	r1, r1, #8
 800534e:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
 8005352:	4319      	orrs	r1, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005354:	7a93      	ldrb	r3, [r2, #10]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005356:	f895 7034 	ldrb.w	r7, [r5, #52]	@ 0x34
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800535a:	021b      	lsls	r3, r3, #8
 800535c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8005360:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 8005362:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005366:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 800536a:	42b4      	cmp	r4, r6
 800536c:	f1a2 0202 	sub.w	r2, r2, #2
 8005370:	f1a5 0508 	sub.w	r5, r5, #8
 8005374:	d1e7      	bne.n	8005346 <JPEG_Set_HuffDC_Mem+0x2e>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005376:	b011      	add	sp, #68	@ 0x44
 8005378:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
 800537a:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
 800537e:	429a      	cmp	r2, r3
 8005380:	d102      	bne.n	8005388 <JPEG_Set_HuffDC_Mem+0x70>
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 8005382:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
  if (HuffTableDC != NULL)
 8005386:	e7d2      	b.n	800532e <JPEG_Set_HuffDC_Mem+0x16>
    return HAL_ERROR;
 8005388:	2001      	movs	r0, #1
 800538a:	e7f4      	b.n	8005376 <JPEG_Set_HuffDC_Mem+0x5e>

0800538c <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
 800538c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 8005390:	6804      	ldr	r4, [r0, #0]
{
 8005392:	460e      	mov	r6, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 8005394:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
 8005398:	429a      	cmp	r2, r3
{
 800539a:	f6ad 0d38 	subw	sp, sp, #2104	@ 0x838
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 800539e:	d14b      	bne.n	8005438 <JPEG_Set_HuffAC_Mem+0xac>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 80053a0:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80053a4:	466b      	mov	r3, sp
 80053a6:	4630      	mov	r0, r6
 80053a8:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
 80053ac:	a901      	add	r1, sp, #4
 80053ae:	f7ff ff5b 	bl	8005268 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 80053b2:	2800      	cmp	r0, #0
 80053b4:	d13c      	bne.n	8005430 <JPEG_Set_HuffAC_Mem+0xa4>
 80053b6:	4617      	mov	r7, r2
      i = (msb * 10UL) + lsb - 1UL;
 80053b8:	f04f 0e0a 	mov.w	lr, #10
 80053bc:	9b00      	ldr	r3, [sp, #0]
 80053be:	460d      	mov	r5, r1
 80053c0:	330f      	adds	r3, #15
 80053c2:	f106 0c0f 	add.w	ip, r6, #15
 80053c6:	18f1      	adds	r1, r6, r3
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80053c8:	ae42      	add	r6, sp, #264	@ 0x108
  while (k < lastK)
 80053ca:	4561      	cmp	r1, ip
 80053cc:	d13b      	bne.n	8005446 <JPEG_Set_HuffAC_Mem+0xba>
    /* Locations 162:175 of each AC table contain information used internally by the core */

    addressDef = address;
    for (i = 0; i < 3UL; i++)
    {
      *addressDef = 0x0FFF0FFF;
 80053ce:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 80053d2:	a942      	add	r1, sp, #264	@ 0x108
    addressDef++;
    *addressDef = 0x0FD30FD2;
    addressDef++;
    *addressDef = 0x0FD50FD4;
    addressDef++;
    *addressDef = 0x0FD70FD6;
 80053d4:	460d      	mov	r5, r1
      *addressDef = 0x0FFF0FFF;
 80053d6:	6023      	str	r3, [r4, #0]
 80053d8:	6063      	str	r3, [r4, #4]
 80053da:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD10FD0;
 80053dc:	f103 33d1 	add.w	r3, r3, #3520188881	@ 0xd1d1d1d1
 80053e0:	f103 232e 	add.w	r3, r3, #771763712	@ 0x2e002e00
 80053e4:	60e3      	str	r3, [r4, #12]
    *addressDef = 0x0FD30FD2;
 80053e6:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80053ea:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
 80053ec:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80053f0:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
 80053f2:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80053f6:	61a3      	str	r3, [r4, #24]
    /* end of Locations 162:175  */


    i = JPEG_AC_HUFF_TABLE_SIZE;
    while (i > 1UL)
 80053f8:	f5a4 76a2 	sub.w	r6, r4, #324	@ 0x144
    {
      i--;
      address--;
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053fc:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005400:	f895 3328 	ldrb.w	r3, [r5, #808]	@ 0x328
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005404:	0212      	lsls	r2, r2, #8
 8005406:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
 800540a:	431a      	orrs	r2, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800540c:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005410:	f895 7324 	ldrb.w	r7, [r5, #804]	@ 0x324
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005414:	021b      	lsls	r3, r3, #8
 8005416:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800541a:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 800541c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005420:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 8005424:	42b4      	cmp	r4, r6
 8005426:	f1a1 0102 	sub.w	r1, r1, #2
 800542a:	f1a5 0508 	sub.w	r5, r5, #8
 800542e:	d1e5      	bne.n	80053fc <JPEG_Set_HuffAC_Mem+0x70>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005430:	f60d 0d38 	addw	sp, sp, #2104	@ 0x838
 8005434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
 8005438:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
 800543c:	429a      	cmp	r2, r3
 800543e:	d10f      	bne.n	8005460 <JPEG_Set_HuffAC_Mem+0xd4>
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005440:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  if (HuffTableAC != NULL)
 8005444:	e7ae      	b.n	80053a4 <JPEG_Set_HuffAC_Mem+0x18>
    i = AC_BitsValsTable->HuffVal[k];
 8005446:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (i == 0UL)
 800544a:	b15b      	cbz	r3, 8005464 <JPEG_Set_HuffAC_Mem+0xd8>
    else if (i == 0xF0UL) /* i = 0xF0 ZRL code*/
 800544c:	2bf0      	cmp	r3, #240	@ 0xf0
 800544e:	d015      	beq.n	800547c <JPEG_Set_HuffAC_Mem+0xf0>
      msb = (i & 0xF0UL) >> 4;
 8005450:	091a      	lsrs	r2, r3, #4
      lsb = (i & 0x0FUL);
 8005452:	f003 030f 	and.w	r3, r3, #15
      i = (msb * 10UL) + lsb - 1UL;
 8005456:	3b01      	subs	r3, #1
 8005458:	fb0e 3302 	mla	r3, lr, r2, r3
    if (i >= JPEG_AC_HUFF_TABLE_SIZE)
 800545c:	2ba1      	cmp	r3, #161	@ 0xa1
 800545e:	d902      	bls.n	8005466 <JPEG_Set_HuffAC_Mem+0xda>
    return HAL_ERROR;
 8005460:	2001      	movs	r0, #1
 8005462:	e7e5      	b.n	8005430 <JPEG_Set_HuffAC_Mem+0xa4>
      i = JPEG_AC_HUFF_TABLE_SIZE - 2UL; /*i = 0x00 EOB code*/
 8005464:	23a0      	movs	r3, #160	@ 0xa0
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 8005466:	f857 8b04 	ldr.w	r8, [r7], #4
 800546a:	eb06 0283 	add.w	r2, r6, r3, lsl #2
 800546e:	f8c2 80a4 	str.w	r8, [r2, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 8005472:	f815 2b01 	ldrb.w	r2, [r5], #1
 8005476:	3a01      	subs	r2, #1
 8005478:	54f2      	strb	r2, [r6, r3]
      k++;
 800547a:	e7a6      	b.n	80053ca <JPEG_Set_HuffAC_Mem+0x3e>
      i = JPEG_AC_HUFF_TABLE_SIZE - 1UL;
 800547c:	23a1      	movs	r3, #161	@ 0xa1
 800547e:	e7f2      	b.n	8005466 <JPEG_Set_HuffAC_Mem+0xda>

08005480 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
 8005480:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005482:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8005486:	6543      	str	r3, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005488:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 800548a:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 800548c:	f002 0203 	and.w	r2, r2, #3
 8005490:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 8005492:	685a      	ldr	r2, [r3, #4]
 8005494:	bf0c      	ite	eq
 8005496:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
 800549a:	f022 0208 	bicne.w	r2, r2, #8
 800549e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80054a0:	681a      	ldr	r2, [r3, #0]
 80054a2:	f022 0201 	bic.w	r2, r2, #1
 80054a6:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80054a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054aa:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 80054ae:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Disable All DMA requests */
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 80054b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054b2:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 80054b6:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 80054b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054ba:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80054be:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 80054c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054c2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80054c6:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 80054c8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80054ca:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80054ce:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
 80054d0:	681a      	ldr	r2, [r3, #0]
 80054d2:	f042 0201 	orr.w	r2, r2, #1
 80054d6:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80054d8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80054da:	f002 020c 	and.w	r2, r2, #12
 80054de:	2a08      	cmp	r2, #8
 80054e0:	d104      	bne.n	80054ec <JPEG_Init_Process+0x6c>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
 80054e2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054e4:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
  {
    /*Enable End Of Conversation, and End Of Header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80054e8:	631a      	str	r2, [r3, #48]	@ 0x30
  }
  else
  {
    /* Nothing to do */
  }
}
 80054ea:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 80054ec:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80054ee:	f002 020c 	and.w	r2, r2, #12
 80054f2:	2a0c      	cmp	r2, #12
 80054f4:	d1f9      	bne.n	80054ea <JPEG_Init_Process+0x6a>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80054f6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054f8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80054fc:	e7f4      	b.n	80054e8 <JPEG_Init_Process+0x68>
	...

08005500 <JPEG_DMA_StartProcess>:
  * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
  *         the configuration information for JPEG module
  * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING
  */
static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg)
{
 8005500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 8005502:	6a83      	ldr	r3, [r0, #40]	@ 0x28
{
 8005504:	4604      	mov	r4, r0
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 8005506:	2b03      	cmp	r3, #3
 8005508:	d92a      	bls.n	8005560 <JPEG_DMA_StartProcess+0x60>
 800550a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800550c:	2903      	cmp	r1, #3
 800550e:	d927      	bls.n	8005560 <JPEG_DMA_StartProcess+0x60>
  {
    return HAL_ERROR;
  }
  /* Reset Ending DMA internal context flag*/
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 8005510:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  /* Disable DMA In/Out Request*/
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);

  /* Set the JPEG DMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005512:	4d34      	ldr	r5, [pc, #208]	@ (80055e4 <JPEG_DMA_StartProcess+0xe4>)
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 8005514:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005518:	6542      	str	r2, [r0, #84]	@ 0x54
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800551a:	6802      	ldr	r2, [r0, #0]
  /* Set the DMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 800551c:	4e32      	ldr	r6, [pc, #200]	@ (80055e8 <JPEG_DMA_StartProcess+0xe8>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800551e:	6b10      	ldr	r0, [r2, #48]	@ 0x30

  /* Set the JPEG DMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005520:	4f32      	ldr	r7, [pc, #200]	@ (80055ec <JPEG_DMA_StartProcess+0xec>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 8005522:	f420 50c0 	bic.w	r0, r0, #6144	@ 0x1800
 8005526:	6310      	str	r0, [r2, #48]	@ 0x30
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005528:	6b20      	ldr	r0, [r4, #48]	@ 0x30

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 800552a:	f021 0103 	bic.w	r1, r1, #3
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 800552e:	6605      	str	r5, [r0, #96]	@ 0x60
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005530:	6b65      	ldr	r5, [r4, #52]	@ 0x34
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 8005532:	6686      	str	r6, [r0, #104]	@ 0x68
  hjpeg->hdmaout->XferErrorCallback = JPEG_DMAErrorCallback;
 8005534:	66ae      	str	r6, [r5, #104]	@ 0x68
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 8005536:	4e2e      	ldr	r6, [pc, #184]	@ (80055f0 <JPEG_DMA_StartProcess+0xf0>)
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005538:	662f      	str	r7, [r5, #96]	@ 0x60
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 800553a:	66ee      	str	r6, [r5, #108]	@ 0x6c
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 800553c:	62e1      	str	r1, [r4, #44]	@ 0x2c

  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800553e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005540:	f023 0303 	bic.w	r3, r3, #3
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005544:	0609      	lsls	r1, r1, #24
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005546:	62a3      	str	r3, [r4, #40]	@ 0x28
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005548:	d516      	bpl.n	8005578 <JPEG_DMA_StartProcess+0x78>
  {
    if (hjpeg->hdmain->LinkedListQueue != NULL)
 800554a:	6f41      	ldr	r1, [r0, #116]	@ 0x74
 800554c:	b151      	cbz	r1, 8005564 <JPEG_DMA_StartProcess+0x64>
    {
      /* Set DMA data size */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 800554e:	6809      	ldr	r1, [r1, #0]

      /* Set DMA source address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;

      /* Set DMA destination address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 8005550:	3240      	adds	r2, #64	@ 0x40
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 8005552:	608b      	str	r3, [r1, #8]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 8005554:	69a3      	ldr	r3, [r4, #24]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 8005556:	610a      	str	r2, [r1, #16]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 8005558:	60cb      	str	r3, [r1, #12]

      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmain) != HAL_OK)
 800555a:	f7ff f903 	bl	8004764 <HAL_DMAEx_List_Start_IT>
 800555e:	b1a8      	cbz	r0, 800558c <JPEG_DMA_StartProcess+0x8c>
    return HAL_ERROR;
 8005560:	2001      	movs	r0, #1

  /* Enable JPEG In/Out DMA requests*/
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);

  return HAL_OK;
}
 8005562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hjpeg->State = HAL_JPEG_STATE_READY;
 8005564:	2301      	movs	r3, #1
 8005566:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800556a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 800556c:	f884 104c 	strb.w	r1, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005570:	f043 0304 	orr.w	r3, r3, #4
 8005574:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 8005576:	e7f3      	b.n	8005560 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005578:	69a1      	ldr	r1, [r4, #24]
 800557a:	3240      	adds	r2, #64	@ 0x40
 800557c:	f7fe fe98 	bl	80042b0 <HAL_DMA_Start_IT>
 8005580:	b120      	cbz	r0, 800558c <JPEG_DMA_StartProcess+0x8c>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005582:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005584:	f043 0304 	orr.w	r3, r3, #4
 8005588:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 800558a:	e7e9      	b.n	8005560 <JPEG_DMA_StartProcess+0x60>
  if ((hjpeg->hdmaout->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800558c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800558e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8005590:	061b      	lsls	r3, r3, #24
 8005592:	d51e      	bpl.n	80055d2 <JPEG_DMA_StartProcess+0xd2>
    if (hjpeg->hdmaout->LinkedListQueue != NULL)
 8005594:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8005596:	b193      	cbz	r3, 80055be <JPEG_DMA_StartProcess+0xbe>
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->OutDataLength;
 8005598:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	609a      	str	r2, [r3, #8]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DOR;
 800559e:	6822      	ldr	r2, [r4, #0]
 80055a0:	3244      	adds	r2, #68	@ 0x44
 80055a2:	60da      	str	r2, [r3, #12]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegOutBuffPtr;
 80055a4:	69e2      	ldr	r2, [r4, #28]
 80055a6:	611a      	str	r2, [r3, #16]
      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmaout) != HAL_OK)
 80055a8:	f7ff f8dc 	bl	8004764 <HAL_DMAEx_List_Start_IT>
 80055ac:	2800      	cmp	r0, #0
 80055ae:	d1d7      	bne.n	8005560 <JPEG_DMA_StartProcess+0x60>
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 80055b0:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
 80055b2:	2000      	movs	r0, #0
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 80055b4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80055b6:	f443 53c0 	orr.w	r3, r3, #6144	@ 0x1800
 80055ba:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 80055bc:	e7d1      	b.n	8005562 <JPEG_DMA_StartProcess+0x62>
      hjpeg->State = HAL_JPEG_STATE_READY;
 80055be:	2201      	movs	r2, #1
 80055c0:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055c4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 80055c6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055ca:	f042 0204 	orr.w	r2, r2, #4
 80055ce:	6522      	str	r2, [r4, #80]	@ 0x50
      return HAL_ERROR;
 80055d0:	e7c6      	b.n	8005560 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 80055d2:	6821      	ldr	r1, [r4, #0]
 80055d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80055d6:	69e2      	ldr	r2, [r4, #28]
 80055d8:	3144      	adds	r1, #68	@ 0x44
 80055da:	f7fe fe69 	bl	80042b0 <HAL_DMA_Start_IT>
 80055de:	2800      	cmp	r0, #0
 80055e0:	d0e6      	beq.n	80055b0 <JPEG_DMA_StartProcess+0xb0>
 80055e2:	e7ce      	b.n	8005582 <JPEG_DMA_StartProcess+0x82>
 80055e4:	08005c15 	.word	0x08005c15
 80055e8:	08005b07 	.word	0x08005b07
 80055ec:	080060b3 	.word	0x080060b3
 80055f0:	080060a5 	.word	0x080060a5

080055f4 <HAL_JPEG_Init>:
{
 80055f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg == NULL)
 80055f6:	4605      	mov	r5, r0
 80055f8:	2800      	cmp	r0, #0
 80055fa:	f000 80f6 	beq.w	80057ea <HAL_JPEG_Init+0x1f6>
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
 80055fe:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
 8005602:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005606:	b91b      	cbnz	r3, 8005610 <HAL_JPEG_Init+0x1c>
    hjpeg->Lock = HAL_UNLOCKED;
 8005608:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
 800560c:	f7fb fa6a 	bl	8000ae4 <HAL_JPEG_MspInit>
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 8005610:	2302      	movs	r3, #2
  __HAL_JPEG_ENABLE(hjpeg);
 8005612:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 8005614:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
 8005618:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800561a:	4a87      	ldr	r2, [pc, #540]	@ (8005838 <HAL_JPEG_Init+0x244>)
 800561c:	f043 0301 	orr.w	r3, r3, #1
 8005620:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005622:	6823      	ldr	r3, [r4, #0]
  address = (hjpeg->Instance->DHTMEM + 3);
 8005624:	f504 715b 	add.w	r1, r4, #876	@ 0x36c
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005628:	f023 0301 	bic.w	r3, r3, #1
 800562c:	6023      	str	r3, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 800562e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005630:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 8005634:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
 8005638:	6323      	str	r3, [r4, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 800563a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800563c:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
 8005640:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005642:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005644:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005648:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 800564a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800564c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005650:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005652:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005654:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005658:	63a3      	str	r3, [r4, #56]	@ 0x38
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
 800565a:	4b78      	ldr	r3, [pc, #480]	@ (800583c <HAL_JPEG_Init+0x248>)
 800565c:	63eb      	str	r3, [r5, #60]	@ 0x3c
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
 800565e:	4b78      	ldr	r3, [pc, #480]	@ (8005840 <HAL_JPEG_Init+0x24c>)
 8005660:	642b      	str	r3, [r5, #64]	@ 0x40
  hjpeg->QuantTable2 = NULL;
 8005662:	2300      	movs	r3, #0
  hjpeg->QuantTable3 = NULL;
 8005664:	e9c5 3311 	strd	r3, r3, [r5, #68]	@ 0x44
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005668:	7b93      	ldrb	r3, [r2, #14]
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 800566a:	7bd6      	ldrb	r6, [r2, #15]
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 800566c:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 800566e:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableDC0->Bits[index - 4UL] & 0xFFUL);
 8005672:	7b16      	ldrb	r6, [r2, #12]
  while (index > 3UL)
 8005674:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableDC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 8005676:	4333      	orrs	r3, r6
 8005678:	7c56      	ldrb	r6, [r2, #17]
 800567a:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 800567e:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 8005682:	4281      	cmp	r1, r0
 8005684:	d1f0      	bne.n	8005668 <HAL_JPEG_Init+0x74>
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005686:	4a6f      	ldr	r2, [pc, #444]	@ (8005844 <HAL_JPEG_Init+0x250>)
  address = (hjpeg->Instance->DHTMEM + 10UL);
 8005688:	f504 7162 	add.w	r1, r4, #904	@ 0x388
 800568c:	4610      	mov	r0, r2
 800568e:	460e      	mov	r6, r1
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005690:	4b6d      	ldr	r3, [pc, #436]	@ (8005848 <HAL_JPEG_Init+0x254>)
 8005692:	f504 775e 	add.w	r7, r4, #888	@ 0x378
 8005696:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 800569a:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 800569e:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
 80056a2:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80056a6:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056aa:	7b83      	ldrb	r3, [r0, #14]
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056ac:	f890 c00f 	ldrb.w	ip, [r0, #15]
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056b0:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056b2:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
               ((uint32_t)HuffTableAC0->Bits[index - 4UL] & 0xFFUL);
 80056b6:	f890 c00c 	ldrb.w	ip, [r0, #12]
  while (index > 3UL)
 80056ba:	3804      	subs	r0, #4
               (((uint32_t)HuffTableAC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 80056bc:	ea43 030c 	orr.w	r3, r3, ip
 80056c0:	f890 c011 	ldrb.w	ip, [r0, #17]
 80056c4:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056c8:	f846 3904 	str.w	r3, [r6], #-4
  while (index > 3UL)
 80056cc:	42be      	cmp	r6, r7
 80056ce:	d1ec      	bne.n	80056aa <HAL_JPEG_Init+0xb6>
  value = *address & 0xFFFF0000U;
 80056d0:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
 80056d4:	f504 6085 	add.w	r0, r4, #1064	@ 0x428
  value = *address & 0xFFFF0000U;
 80056d8:	0c1b      	lsrs	r3, r3, #16
 80056da:	041b      	lsls	r3, r3, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) |
 80056dc:	f443 437a 	orr.w	r3, r3, #64000	@ 0xfa00
 80056e0:	f043 03f9 	orr.w	r3, r3, #249	@ 0xf9
  *address = value;
 80056e4:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 80056e8:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056ec:	f892 60af 	ldrb.w	r6, [r2, #175]	@ 0xaf
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 80056f0:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056f2:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
 80056f6:	f892 60ac 	ldrb.w	r6, [r2, #172]	@ 0xac
  while (index > 3UL)
 80056fa:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
 80056fc:	4333      	orrs	r3, r6
 80056fe:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
 8005702:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005706:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
 800570a:	4281      	cmp	r1, r0
 800570c:	d1ec      	bne.n	80056e8 <HAL_JPEG_Init+0xf4>
  value = *address & 0x0000FFFFU;
 800570e:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 8005712:	4a4e      	ldr	r2, [pc, #312]	@ (800584c <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFU;
 8005714:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) |
 8005716:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
 800571a:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 800571e:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  address = (hjpeg->Instance->DHTMEM + 102);
 8005722:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
  value = *address & 0xFFFF0000U;
 8005726:	4013      	ands	r3, r2
  *address = value;
 8005728:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 800572c:	2301      	movs	r3, #1
 800572e:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
 8005732:	f04f 3301 	mov.w	r3, #16843009	@ 0x1010101
 8005736:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 800573a:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
  value = *address & 0x0000FFFFUL;
 800573e:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005742:	f504 608b 	add.w	r0, r4, #1112	@ 0x458
  value = *address & 0x0000FFFFUL;
 8005746:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005748:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 800574c:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
 8005750:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 8005754:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) |
 8005756:	f443 6330 	orr.w	r3, r3, #2816	@ 0xb00
 800575a:	f043 030a 	orr.w	r3, r3, #10
  *address = value;
 800575e:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005762:	4b3b      	ldr	r3, [pc, #236]	@ (8005850 <HAL_JPEG_Init+0x25c>)
 8005764:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
 8005768:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 800576c:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
 8005770:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 8005774:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) |
 8005776:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
 800577a:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
 800577e:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 8005782:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
 8005784:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 8005788:	f043 0302 	orr.w	r3, r3, #2
  *address = value;
 800578c:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 8005790:	4b30      	ldr	r3, [pc, #192]	@ (8005854 <HAL_JPEG_Init+0x260>)
 8005792:	4a31      	ldr	r2, [pc, #196]	@ (8005858 <HAL_JPEG_Init+0x264>)
 8005794:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 8005798:	4b30      	ldr	r3, [pc, #192]	@ (800585c <HAL_JPEG_Init+0x268>)
 800579a:	f8c4 3450 	str.w	r3, [r4, #1104]	@ 0x450
 800579e:	4b30      	ldr	r3, [pc, #192]	@ (8005860 <HAL_JPEG_Init+0x26c>)
 80057a0:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
 80057a4:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 80057a8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) |
 80057aa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 80057ae:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 80057b2:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 80057b6:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 80057ba:	041b      	lsls	r3, r3, #16
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 80057bc:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
 80057c0:	f892 60ae 	ldrb.w	r6, [r2, #174]	@ 0xae
  while (index > 3UL)
 80057c4:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 80057c6:	4333      	orrs	r3, r6
 80057c8:	f892 60b3 	ldrb.w	r6, [r2, #179]	@ 0xb3
 80057cc:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 80057d0:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 80057d4:	4281      	cmp	r1, r0
 80057d6:	d1ec      	bne.n	80057b2 <HAL_JPEG_Init+0x1be>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
 80057d8:	4628      	mov	r0, r5
 80057da:	491a      	ldr	r1, [pc, #104]	@ (8005844 <HAL_JPEG_Init+0x250>)
 80057dc:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
 80057e0:	f7ff fdd4 	bl	800538c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 80057e4:	b118      	cbz	r0, 80057ee <HAL_JPEG_Init+0x1fa>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
 80057e6:	2301      	movs	r3, #1
 80057e8:	652b      	str	r3, [r5, #80]	@ 0x50
    return HAL_ERROR;
 80057ea:	2001      	movs	r0, #1
}
 80057ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
 80057ee:	4628      	mov	r0, r5
 80057f0:	4919      	ldr	r1, [pc, #100]	@ (8005858 <HAL_JPEG_Init+0x264>)
 80057f2:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
 80057f6:	f7ff fdc9 	bl	800538c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 80057fa:	2800      	cmp	r0, #0
 80057fc:	d1f3      	bne.n	80057e6 <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
 80057fe:	4628      	mov	r0, r5
 8005800:	490d      	ldr	r1, [pc, #52]	@ (8005838 <HAL_JPEG_Init+0x244>)
 8005802:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
 8005806:	f7ff fd87 	bl	8005318 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
 800580a:	2800      	cmp	r0, #0
 800580c:	d1eb      	bne.n	80057e6 <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
 800580e:	4628      	mov	r0, r5
 8005810:	4914      	ldr	r1, [pc, #80]	@ (8005864 <HAL_JPEG_Init+0x270>)
 8005812:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
 8005816:	f7ff fd7f 	bl	8005318 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
 800581a:	2800      	cmp	r0, #0
 800581c:	d1e3      	bne.n	80057e6 <HAL_JPEG_Init+0x1f2>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 800581e:	6863      	ldr	r3, [r4, #4]
 8005820:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005824:	6063      	str	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
 8005826:	2301      	movs	r3, #1
  hjpeg->JpegInCount = 0;
 8005828:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
 800582a:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
 800582c:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
 8005830:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
 8005832:	6568      	str	r0, [r5, #84]	@ 0x54
  return HAL_OK;
 8005834:	e7da      	b.n	80057ec <HAL_JPEG_Init+0x1f8>
 8005836:	bf00      	nop
 8005838:	0803588c 	.word	0x0803588c
 800583c:	0803568c 	.word	0x0803568c
 8005840:	0803564c 	.word	0x0803564c
 8005844:	080357be 	.word	0x080357be
 8005848:	0b0a0908 	.word	0x0b0a0908
 800584c:	ffff0000 	.word	0xffff0000
 8005850:	09080706 	.word	0x09080706
 8005854:	01000404 	.word	0x01000404
 8005858:	0803570c 	.word	0x0803570c
 800585c:	05070403 	.word	0x05070403
 8005860:	04040201 	.word	0x04040201
 8005864:	08035870 	.word	0x08035870

08005868 <HAL_JPEG_GetInfo>:
{
 8005868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ((hjpeg == NULL) || (pInfo == NULL))
 800586c:	2800      	cmp	r0, #0
 800586e:	d070      	beq.n	8005952 <HAL_JPEG_GetInfo+0xea>
 8005870:	2900      	cmp	r1, #0
 8005872:	d06e      	beq.n	8005952 <HAL_JPEG_GetInfo+0xea>
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
 8005874:	6804      	ldr	r4, [r0, #0]
 8005876:	6863      	ldr	r3, [r4, #4]
 8005878:	f003 0303 	and.w	r3, r3, #3
 800587c:	2b02      	cmp	r3, #2
 800587e:	d048      	beq.n	8005912 <HAL_JPEG_GetInfo+0xaa>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
 8005880:	6863      	ldr	r3, [r4, #4]
 8005882:	f013 0303 	ands.w	r3, r3, #3
 8005886:	d005      	beq.n	8005894 <HAL_JPEG_GetInfo+0x2c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
 8005888:	6863      	ldr	r3, [r4, #4]
 800588a:	f003 0303 	and.w	r3, r3, #3
 800588e:	2b03      	cmp	r3, #3
 8005890:	d15f      	bne.n	8005952 <HAL_JPEG_GetInfo+0xea>
 8005892:	2330      	movs	r3, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 8005894:	6862      	ldr	r2, [r4, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
 8005896:	600b      	str	r3, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 8005898:	0c12      	lsrs	r2, r2, #16
 800589a:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 800589c:	68e2      	ldr	r2, [r4, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 800589e:	f023 0320 	bic.w	r3, r3, #32
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058a2:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058a4:	2b10      	cmp	r3, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058a6:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058a8:	d13e      	bne.n	8005928 <HAL_JPEG_GetInfo+0xc0>
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 80058aa:	6925      	ldr	r5, [r4, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 80058ac:	6963      	ldr	r3, [r4, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 80058ae:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 80058b2:	69a2      	ldr	r2, [r4, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 80058b4:	2d01      	cmp	r5, #1
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 80058b6:	ea4f 1313 	mov.w	r3, r3, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 80058ba:	ea4f 1212 	mov.w	r2, r2, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 80058be:	d12a      	bne.n	8005916 <HAL_JPEG_GetInfo+0xae>
 80058c0:	4313      	orrs	r3, r2
 80058c2:	f013 0f0f 	tst.w	r3, #15
 80058c6:	bf0c      	ite	eq
 80058c8:	2301      	moveq	r3, #1
 80058ca:	2300      	movne	r3, #0
 80058cc:	005b      	lsls	r3, r3, #1
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
 80058ce:	604b      	str	r3, [r1, #4]
  *         the configuration information for JPEG module
  * @retval JPEG image quality from 1 to 100.
  */
static uint32_t JPEG_GetQuality(const JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
 80058d0:	2300      	movs	r3, #0
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 80058d2:	f04f 0e64 	mov.w	lr, #100	@ 0x64
  i = 0;
 80058d6:	461d      	mov	r5, r3
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
 80058d8:	f241 3888 	movw	r8, #5000	@ 0x1388
 80058dc:	f8df c078 	ldr.w	ip, [pc, #120]	@ 8005958 <HAL_JPEG_GetInfo+0xf0>
 80058e0:	3450      	adds	r4, #80	@ 0x50
    quantRow = *tableAddress;
 80058e2:	2600      	movs	r6, #0
 80058e4:	f854 9005 	ldr.w	r9, [r4, r5]
    for (j = 0; j < 4UL; j++)
 80058e8:	eb05 070c 	add.w	r7, r5, ip
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
 80058ec:	fa29 f206 	lsr.w	r2, r9, r6
 80058f0:	b2d2      	uxtb	r2, r2
      if (quantVal == 1UL)
 80058f2:	2a01      	cmp	r2, #1
 80058f4:	d11a      	bne.n	800592c <HAL_JPEG_GetInfo+0xc4>
        quality += 100UL;
 80058f6:	3364      	adds	r3, #100	@ 0x64
    for (j = 0; j < 4UL; j++)
 80058f8:	3608      	adds	r6, #8
 80058fa:	2e20      	cmp	r6, #32
 80058fc:	f107 0701 	add.w	r7, r7, #1
 8005900:	d1f4      	bne.n	80058ec <HAL_JPEG_GetInfo+0x84>
        }
      }
    }

    i += 4UL;
 8005902:	3504      	adds	r5, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
 8005904:	2d40      	cmp	r5, #64	@ 0x40
 8005906:	d1ec      	bne.n	80058e2 <HAL_JPEG_GetInfo+0x7a>
  return HAL_OK;
 8005908:	2000      	movs	r0, #0
    tableAddress ++;
  }

  return (quality / 64UL);
 800590a:	099b      	lsrs	r3, r3, #6
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
 800590c:	610b      	str	r3, [r1, #16]
}
 800590e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005912:	2310      	movs	r3, #16
 8005914:	e7be      	b.n	8005894 <HAL_JPEG_GetInfo+0x2c>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005916:	2d03      	cmp	r5, #3
 8005918:	d106      	bne.n	8005928 <HAL_JPEG_GetInfo+0xc0>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 800591a:	4313      	orrs	r3, r2
 800591c:	f013 0f0f 	tst.w	r3, #15
 8005920:	bf0c      	ite	eq
 8005922:	2301      	moveq	r3, #1
 8005924:	2300      	movne	r3, #0
 8005926:	e7d2      	b.n	80058ce <HAL_JPEG_GetInfo+0x66>
 8005928:	2300      	movs	r3, #0
 800592a:	e7d0      	b.n	80058ce <HAL_JPEG_GetInfo+0x66>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 800592c:	fb0e fb02 	mul.w	fp, lr, r2
 8005930:	f897 a000 	ldrb.w	sl, [r7]
 8005934:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005936:	f812 a00a 	ldrb.w	sl, [r2, sl]
 800593a:	fbbb f2fa 	udiv	r2, fp, sl
        if (scale <= 100UL)
 800593e:	2a64      	cmp	r2, #100	@ 0x64
          quality += 5000UL / scale;
 8005940:	bf8d      	iteet	hi
 8005942:	fbb8 f2f2 	udivhi	r2, r8, r2
          quality += (200UL - scale) / 2UL;
 8005946:	f1c2 02c8 	rsbls	r2, r2, #200	@ 0xc8
 800594a:	eb03 0352 	addls.w	r3, r3, r2, lsr #1
          quality += 5000UL / scale;
 800594e:	189b      	addhi	r3, r3, r2
 8005950:	e7d2      	b.n	80058f8 <HAL_JPEG_GetInfo+0x90>
    return HAL_ERROR;
 8005952:	2001      	movs	r0, #1
 8005954:	e7db      	b.n	800590e <HAL_JPEG_GetInfo+0xa6>
 8005956:	bf00      	nop
 8005958:	080356cc 	.word	0x080356cc

0800595c <HAL_JPEG_Decode_DMA>:
{
 800595c:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
 800595e:	4604      	mov	r4, r0
 8005960:	b348      	cbz	r0, 80059b6 <HAL_JPEG_Decode_DMA+0x5a>
 8005962:	b341      	cbz	r1, 80059b6 <HAL_JPEG_Decode_DMA+0x5a>
 8005964:	b33b      	cbz	r3, 80059b6 <HAL_JPEG_Decode_DMA+0x5a>
  __HAL_LOCK(hjpeg);
 8005966:	f890 504c 	ldrb.w	r5, [r0, #76]	@ 0x4c
 800596a:	2d01      	cmp	r5, #1
 800596c:	d028      	beq.n	80059c0 <HAL_JPEG_Decode_DMA+0x64>
 800596e:	2501      	movs	r5, #1
 8005970:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
 8005974:	f890 504d 	ldrb.w	r5, [r0, #77]	@ 0x4d
 8005978:	2d01      	cmp	r5, #1
 800597a:	d11e      	bne.n	80059ba <HAL_JPEG_Decode_DMA+0x5e>
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
 800597c:	2504      	movs	r5, #4
 800597e:	f880 504d 	strb.w	r5, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 8005982:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 8005984:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 8005988:	f025 050f 	bic.w	r5, r5, #15
 800598c:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 800598e:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->OutDataLength = OutDataLength;
 8005990:	9b04      	ldr	r3, [sp, #16]
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 8005992:	f045 050e 	orr.w	r5, r5, #14
 8005996:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
 8005998:	2500      	movs	r5, #0
    hjpeg->InDataLength = InDataLength;
 800599a:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 800599c:	6205      	str	r5, [r0, #32]
    hjpeg->OutDataLength = OutDataLength;
 800599e:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->JpegOutCount = 0;
 80059a0:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
 80059a2:	f7ff fd6d 	bl	8005480 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
 80059a6:	f7ff fdab 	bl	8005500 <JPEG_DMA_StartProcess>
 80059aa:	b128      	cbz	r0, 80059b8 <HAL_JPEG_Decode_DMA+0x5c>
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 80059ac:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
 80059ae:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 80059b2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 80059b6:	2001      	movs	r0, #1
}
 80059b8:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
 80059ba:	2300      	movs	r3, #0
 80059bc:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
 80059c0:	2002      	movs	r0, #2
 80059c2:	e7f9      	b.n	80059b8 <HAL_JPEG_Decode_DMA+0x5c>

080059c4 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 80059c4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80059c6:	f003 030c 	and.w	r3, r3, #12
 80059ca:	2b0c      	cmp	r3, #12
 80059cc:	d117      	bne.n	80059fe <HAL_JPEG_Pause+0x3a>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 80059ce:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 80059d2:	bf1f      	itttt	ne
 80059d4:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 80059d6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80059da:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_IDMA;
 80059dc:	f44f 6300 	movne.w	r3, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 80059e0:	0789      	lsls	r1, r1, #30
 80059e2:	d505      	bpl.n	80059f0 <HAL_JPEG_Pause+0x2c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 80059e4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_ODMA;
 80059e6:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 80059ea:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80059ee:	6542      	str	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
 80059f0:	6801      	ldr	r1, [r0, #0]
 80059f2:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 80059f4:	ea22 0303 	bic.w	r3, r2, r3
 80059f8:	630b      	str	r3, [r1, #48]	@ 0x30
}
 80059fa:	2000      	movs	r0, #0
 80059fc:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80059fe:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005a00:	f003 030c 	and.w	r3, r3, #12
 8005a04:	2b08      	cmp	r3, #8
 8005a06:	d1f8      	bne.n	80059fa <HAL_JPEG_Pause+0x36>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005a08:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005a0c:	bf1f      	itttt	ne
 8005a0e:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005a10:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005a14:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8005a16:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005a18:	078a      	lsls	r2, r1, #30
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a1a:	bf41      	itttt	mi
 8005a1c:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a1e:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a22:	f442 5200 	orrmi.w	r2, r2, #8192	@ 0x2000
 8005a26:	6542      	strmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a28:	e7e2      	b.n	80059f0 <HAL_JPEG_Pause+0x2c>

08005a2a <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
 8005a2a:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
 8005a2c:	6282      	str	r2, [r0, #40]	@ 0x28
}
 8005a2e:	4770      	bx	lr

08005a30 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
 8005a30:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
 8005a32:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
 8005a34:	4770      	bx	lr

08005a36 <HAL_JPEG_Abort>:
{
 8005a36:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
 8005a38:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a3a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005a3c:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a3e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8005a42:	f023 030f 	bic.w	r3, r3, #15
 8005a46:	6543      	str	r3, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005a48:	f002 030c 	and.w	r3, r2, #12
 8005a4c:	2b0c      	cmp	r3, #12
 8005a4e:	d117      	bne.n	8005a80 <HAL_JPEG_Abort+0x4a>
    if (HAL_DMA_Abort(hjpeg->hdmaout) != HAL_OK)
 8005a50:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005a52:	f7fe fc6b 	bl	800432c <HAL_DMA_Abort>
 8005a56:	b138      	cbz	r0, 8005a68 <HAL_JPEG_Abort+0x32>
      if (hjpeg->hdmaout->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005a58:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005a5a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a5c:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005a5e:	bf02      	ittt	eq
 8005a60:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005a62:	f043 0304 	orreq.w	r3, r3, #4
 8005a66:	6523      	streq	r3, [r4, #80]	@ 0x50
    if (HAL_DMA_Abort(hjpeg->hdmain) != HAL_OK)
 8005a68:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005a6a:	f7fe fc5f 	bl	800432c <HAL_DMA_Abort>
 8005a6e:	b138      	cbz	r0, 8005a80 <HAL_JPEG_Abort+0x4a>
      if (hjpeg->hdmain->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005a70:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005a72:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a74:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005a76:	bf02      	ittt	eq
 8005a78:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005a7a:	f043 0304 	orreq.w	r3, r3, #4
 8005a7e:	6523      	streq	r3, [r4, #80]	@ 0x50
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005a80:	6822      	ldr	r2, [r4, #0]
 8005a82:	6813      	ldr	r3, [r2, #0]
 8005a84:	f023 0301 	bic.w	r3, r3, #1
 8005a88:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8005a8a:	f7fe f907 	bl	8003c9c <HAL_GetTick>
 8005a8e:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
 8005a90:	6823      	ldr	r3, [r4, #0]
 8005a92:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005a94:	061b      	lsls	r3, r3, #24
 8005a96:	d50c      	bpl.n	8005ab2 <HAL_JPEG_Abort+0x7c>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
 8005a98:	f7fe f900 	bl	8003c9c <HAL_GetTick>
 8005a9c:	1b40      	subs	r0, r0, r5
 8005a9e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005aa2:	d9f5      	bls.n	8005a90 <HAL_JPEG_Abort+0x5a>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
 8005aa4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005aa6:	f043 0308 	orr.w	r3, r3, #8
 8005aaa:	6523      	str	r3, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005aac:	2306      	movs	r3, #6
 8005aae:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005ab2:	6823      	ldr	r3, [r4, #0]
 8005ab4:	2001      	movs	r0, #1
 8005ab6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005ab8:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005abc:	631a      	str	r2, [r3, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005abe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005ac0:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005ac4:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005ac6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005ac8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005acc:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005ace:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005ad0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005ad4:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005ad6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005ad8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005adc:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
 8005ade:	2300      	movs	r3, #0
 8005ae0:	6223      	str	r3, [r4, #32]
  hjpeg->JpegOutCount = 0;
 8005ae2:	6263      	str	r3, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
 8005ae4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005ae6:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8005aea:	6562      	str	r2, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
 8005aec:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8005aee:	b12a      	cbz	r2, 8005afc <HAL_JPEG_Abort+0xc6>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005af0:	2206      	movs	r2, #6
 8005af2:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    __HAL_UNLOCK(hjpeg);
 8005af6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
 8005afa:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005afc:	f884 004d 	strb.w	r0, [r4, #77]	@ 0x4d
    return HAL_OK;
 8005b00:	4618      	mov	r0, r3
 8005b02:	e7f8      	b.n	8005af6 <HAL_JPEG_Abort+0xc0>

08005b04 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
 8005b04:	4770      	bx	lr

08005b06 <JPEG_DMAErrorCallback>:
{
 8005b06:	b510      	push	{r4, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005b08:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 8005b0a:	f7fe fd2d 	bl	8004568 <HAL_DMA_GetError>
 8005b0e:	b1b0      	cbz	r0, 8005b3e <JPEG_DMAErrorCallback+0x38>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005b10:	6823      	ldr	r3, [r4, #0]
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b12:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005b14:	681a      	ldr	r2, [r3, #0]
 8005b16:	f022 0201 	bic.w	r2, r2, #1
 8005b1a:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005b1c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b1e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005b22:	631a      	str	r2, [r3, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005b24:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b26:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005b2a:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005b2c:	2301      	movs	r3, #1
 8005b2e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005b32:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005b34:	f043 0304 	orr.w	r3, r3, #4
 8005b38:	6523      	str	r3, [r4, #80]	@ 0x50
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b3a:	f7fb ffab 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005b3e:	bd10      	pop	{r4, pc}

08005b40 <JPEG_ReadInputData>:
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b40:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
 8005b42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b44:	4604      	mov	r4, r0
 8005b46:	460d      	mov	r5, r1
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b48:	b922      	cbnz	r2, 8005b54 <JPEG_ReadInputData+0x14>
    (void) HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_INPUT);
 8005b4a:	2101      	movs	r1, #1
 8005b4c:	f7ff ff3a 	bl	80059c4 <HAL_JPEG_Pause>
  uint32_t nb_bytes = 0;
 8005b50:	2200      	movs	r2, #0
 8005b52:	e004      	b.n	8005b5e <JPEG_ReadInputData+0x1e>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005b54:	6a03      	ldr	r3, [r0, #32]
 8005b56:	429a      	cmp	r2, r3
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005b58:	6a03      	ldr	r3, [r0, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005b5a:	d922      	bls.n	8005ba2 <JPEG_ReadInputData+0x62>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005b5c:	1ad2      	subs	r2, r2, r3
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
 8005b5e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005b60:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005b64:	d11c      	bne.n	8005ba0 <JPEG_ReadInputData+0x60>
 8005b66:	b1da      	cbz	r2, 8005ba0 <JPEG_ReadInputData+0x60>
    if (nb_words >= nbRequestWords)
 8005b68:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
 8005b6c:	69a1      	ldr	r1, [r4, #24]
    nb_words = nb_bytes / 4UL;
 8005b6e:	ea4f 0692 	mov.w	r6, r2, lsr #2
    if (nb_words >= nbRequestWords)
 8005b72:	d826      	bhi.n	8005bc2 <JPEG_ReadInputData+0x82>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b74:	6827      	ldr	r7, [r4, #0]
        input_count = hjpeg->JpegInCount;
 8005b76:	6a26      	ldr	r6, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005b78:	3301      	adds	r3, #1
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005b7a:	1988      	adds	r0, r1, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005b7c:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005b7e:	f890 c001 	ldrb.w	ip, [r0, #1]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b82:	5d8e      	ldrb	r6, [r1, r6]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005b84:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005b86:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005b88:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005b8c:	4332      	orrs	r2, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005b8e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b92:	643a      	str	r2, [r7, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
 8005b94:	6a22      	ldr	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005b96:	429d      	cmp	r5, r3
        hjpeg->JpegInCount += 4UL;
 8005b98:	f102 0204 	add.w	r2, r2, #4
 8005b9c:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005b9e:	d1ea      	bne.n	8005b76 <JPEG_ReadInputData+0x36>
}
 8005ba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
 8005ba2:	429a      	cmp	r2, r3
 8005ba4:	d1d4      	bne.n	8005b50 <JPEG_ReadInputData+0x10>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005ba6:	6a01      	ldr	r1, [r0, #32]
 8005ba8:	f7fb feb6 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
 8005bac:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005bae:	2b04      	cmp	r3, #4
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005bb0:	bf82      	ittt	hi
 8005bb2:	3303      	addhi	r3, #3
 8005bb4:	f023 0303 	bichi.w	r3, r3, #3
 8005bb8:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005bba:	2300      	movs	r3, #0
    nb_bytes = hjpeg->InDataLength;
 8005bbc:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005bbe:	6223      	str	r3, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
 8005bc0:	e7cd      	b.n	8005b5e <JPEG_ReadInputData+0x1e>
      if (nb_words > 0UL)
 8005bc2:	2a03      	cmp	r2, #3
 8005bc4:	d916      	bls.n	8005bf4 <JPEG_ReadInputData+0xb4>
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bc6:	6827      	ldr	r7, [r4, #0]
          input_count = hjpeg->JpegInCount;
 8005bc8:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005bca:	3301      	adds	r3, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bcc:	1948      	adds	r0, r1, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bce:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bd0:	f890 c001 	ldrb.w	ip, [r0, #1]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bd4:	5d4d      	ldrb	r5, [r1, r5]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bd6:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005bd8:	78c0      	ldrb	r0, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bda:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005bde:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005be0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005be4:	643a      	str	r2, [r7, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
 8005be6:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005be8:	429e      	cmp	r6, r3
          hjpeg->JpegInCount += 4UL;
 8005bea:	f102 0204 	add.w	r2, r2, #4
 8005bee:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005bf0:	d1ea      	bne.n	8005bc8 <JPEG_ReadInputData+0x88>
 8005bf2:	e7d5      	b.n	8005ba0 <JPEG_ReadInputData+0x60>
        for (index = 0; index < nb_bytes; index++)
 8005bf4:	4618      	mov	r0, r3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005bf6:	6a25      	ldr	r5, [r4, #32]
 8005bf8:	00c6      	lsls	r6, r0, #3
 8005bfa:	5d4d      	ldrb	r5, [r1, r5]
        for (index = 0; index < nb_bytes; index++)
 8005bfc:	3001      	adds	r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005bfe:	40b5      	lsls	r5, r6
 8005c00:	432b      	orrs	r3, r5
          hjpeg->JpegInCount++;
 8005c02:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005c04:	4282      	cmp	r2, r0
          hjpeg->JpegInCount++;
 8005c06:	f105 0501 	add.w	r5, r5, #1
 8005c0a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005c0c:	d1f3      	bne.n	8005bf6 <JPEG_ReadInputData+0xb6>
        hjpeg->Instance->DIR = dataword;
 8005c0e:	6822      	ldr	r2, [r4, #0]
 8005c10:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8005c12:	e7c5      	b.n	8005ba0 <JPEG_ReadInputData+0x60>

08005c14 <JPEG_DMAInCpltCallback>:
{
 8005c14:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005c16:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005c18:	6822      	ldr	r2, [r4, #0]
 8005c1a:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 8005c1c:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8005c20:	6311      	str	r1, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8005c22:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8005c24:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8005c28:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8005c2c:	0409      	lsls	r1, r1, #16
 8005c2e:	0c09      	lsrs	r1, r1, #16
 8005c30:	290c      	cmp	r1, #12
 8005c32:	d12d      	bne.n	8005c90 <JPEG_DMAInCpltCallback+0x7c>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c34:	6b11      	ldr	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c36:	6803      	ldr	r3, [r0, #0]
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c38:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 8005c3c:	6311      	str	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c3e:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8005c40:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8005c42:	f7fe fdfb 	bl	800483c <HAL_DMAEx_GetFifoLevel>
 8005c46:	b2b6      	uxth	r6, r6
 8005c48:	1bad      	subs	r5, r5, r6
 8005c4a:	1a2d      	subs	r5, r5, r0
 8005c4c:	6225      	str	r5, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005c4e:	4620      	mov	r0, r4
 8005c50:	6a21      	ldr	r1, [r4, #32]
 8005c52:	f7fb fe61 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= 4UL)
 8005c56:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005c58:	6822      	ldr	r2, [r4, #0]
    if (hjpeg->InDataLength >= 4UL)
 8005c5a:	2b03      	cmp	r3, #3
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005c5c:	bf82      	ittt	hi
 8005c5e:	3303      	addhi	r3, #3
 8005c60:	f023 0303 	bichi.w	r3, r3, #3
 8005c64:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
 8005c66:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005c68:	04db      	lsls	r3, r3, #19
 8005c6a:	d417      	bmi.n	8005c9c <JPEG_DMAInCpltCallback+0x88>
 8005c6c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005c6e:	b1ab      	cbz	r3, 8005c9c <JPEG_DMAInCpltCallback+0x88>
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005c70:	69a1      	ldr	r1, [r4, #24]
 8005c72:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005c74:	3240      	adds	r2, #64	@ 0x40
 8005c76:	f7fe fb1b 	bl	80042b0 <HAL_DMA_Start_IT>
 8005c7a:	b150      	cbz	r0, 8005c92 <JPEG_DMAInCpltCallback+0x7e>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005c7c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        HAL_JPEG_ErrorCallback(hjpeg);
 8005c7e:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005c80:	f043 0304 	orr.w	r3, r3, #4
 8005c84:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005c86:	2306      	movs	r3, #6
 8005c88:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
 8005c8c:	f7fb ff02 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005c90:	bd70      	pop	{r4, r5, r6, pc}
      JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c92:	6822      	ldr	r2, [r4, #0]
 8005c94:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005c96:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8005c9a:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005c9c:	6822      	ldr	r2, [r4, #0]
 8005c9e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005ca0:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005ca4:	6313      	str	r3, [r2, #48]	@ 0x30
 8005ca6:	e7f3      	b.n	8005c90 <JPEG_DMAInCpltCallback+0x7c>

08005ca8 <JPEG_StoreOutputData>:
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005ca8:	6a42      	ldr	r2, [r0, #36]	@ 0x24
{
 8005caa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cac:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8005cae:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8005cb2:	4293      	cmp	r3, r2
{
 8005cb4:	4604      	mov	r4, r0
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cb6:	d32a      	bcc.n	8005d0e <JPEG_StoreOutputData+0x66>
    for (index = 0; index < nbOutputWords; index++)
 8005cb8:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005cba:	6823      	ldr	r3, [r4, #0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005cbc:	69e5      	ldr	r5, [r4, #28]
      dataword = hjpeg->Instance->DOR;
 8005cbe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005cc0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005cc2:	3201      	adds	r2, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005cc4:	542b      	strb	r3, [r5, r0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005cc6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005cc8:	69e0      	ldr	r0, [r4, #28]
    for (index = 0; index < nbOutputWords; index++)
 8005cca:	4291      	cmp	r1, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005ccc:	4428      	add	r0, r5
 8005cce:	ea4f 2513 	mov.w	r5, r3, lsr #8
 8005cd2:	7045      	strb	r5, [r0, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005cd4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005cd6:	69e0      	ldr	r0, [r4, #28]
 8005cd8:	4428      	add	r0, r5
 8005cda:	ea4f 4513 	mov.w	r5, r3, lsr #16
 8005cde:	7085      	strb	r5, [r0, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005ce0:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005ce2:	69e0      	ldr	r0, [r4, #28]
 8005ce4:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8005ce8:	4428      	add	r0, r5
 8005cea:	70c3      	strb	r3, [r0, #3]
      hjpeg->JpegOutCount += 4UL;
 8005cec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005cee:	f103 0304 	add.w	r3, r3, #4
 8005cf2:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005cf4:	d1e1      	bne.n	8005cba <JPEG_StoreOutputData+0x12>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005cf6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005cf8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005cfa:	429a      	cmp	r2, r3
 8005cfc:	d106      	bne.n	8005d0c <JPEG_StoreOutputData+0x64>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005cfe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d00:	69e1      	ldr	r1, [r4, #28]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d02:	4620      	mov	r0, r4
 8005d04:	f7fb fe26 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005d08:	2300      	movs	r3, #0
 8005d0a:	6263      	str	r3, [r4, #36]	@ 0x24
}
 8005d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
 8005d0e:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8005d10:	4293      	cmp	r3, r2
 8005d12:	d9fb      	bls.n	8005d0c <JPEG_StoreOutputData+0x64>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005d14:	6a42      	ldr	r2, [r0, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005d16:	2000      	movs	r0, #0
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005d18:	1a9b      	subs	r3, r3, r2
 8005d1a:	089a      	lsrs	r2, r3, #2
    for (index = 0; index < nb_words; index++)
 8005d1c:	4290      	cmp	r0, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d1e:	69e1      	ldr	r1, [r4, #28]
    for (index = 0; index < nb_words; index++)
 8005d20:	d105      	bne.n	8005d2e <JPEG_StoreOutputData+0x86>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005d22:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005d24:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d26:	429f      	cmp	r7, r3
 8005d28:	d119      	bne.n	8005d5e <JPEG_StoreOutputData+0xb6>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d2a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d2c:	e7e9      	b.n	8005d02 <JPEG_StoreOutputData+0x5a>
      dataword = hjpeg->Instance->DOR;
 8005d2e:	6823      	ldr	r3, [r4, #0]
    for (index = 0; index < nb_words; index++)
 8005d30:	3001      	adds	r0, #1
      dataword = hjpeg->Instance->DOR;
 8005d32:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d34:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d36:	554b      	strb	r3, [r1, r5]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d38:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d3a:	69e1      	ldr	r1, [r4, #28]
 8005d3c:	4429      	add	r1, r5
 8005d3e:	0a1d      	lsrs	r5, r3, #8
 8005d40:	704d      	strb	r5, [r1, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005d42:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d44:	69e1      	ldr	r1, [r4, #28]
 8005d46:	4429      	add	r1, r5
 8005d48:	0c1d      	lsrs	r5, r3, #16
 8005d4a:	708d      	strb	r5, [r1, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005d4c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d4e:	69e1      	ldr	r1, [r4, #28]
 8005d50:	0e1b      	lsrs	r3, r3, #24
 8005d52:	4429      	add	r1, r5
 8005d54:	70cb      	strb	r3, [r1, #3]
      hjpeg->JpegOutCount += 4UL;
 8005d56:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d58:	3304      	adds	r3, #4
 8005d5a:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005d5c:	e7de      	b.n	8005d1c <JPEG_StoreOutputData+0x74>
      for (index = 0; index < nb_bytes; index++)
 8005d5e:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005d60:	6823      	ldr	r3, [r4, #0]
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005d62:	6a65      	ldr	r5, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
 8005d64:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005d66:	1b78      	subs	r0, r7, r5
      for (index = 0; index < nb_bytes; index++)
 8005d68:	4282      	cmp	r2, r0
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005d6a:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
 8005d6c:	d114      	bne.n	8005d98 <JPEG_StoreOutputData+0xf0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d6e:	4620      	mov	r0, r4
 8005d70:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d72:	f7fb fdef 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005d76:	2300      	movs	r3, #0
 8005d78:	6263      	str	r3, [r4, #36]	@ 0x24
      nb_bytes = 4UL - nb_bytes;
 8005d7a:	1d2b      	adds	r3, r5, #4
 8005d7c:	1bdb      	subs	r3, r3, r7
      for (index = nb_bytes; index < 4UL; index++)
 8005d7e:	2b03      	cmp	r3, #3
 8005d80:	d8c4      	bhi.n	8005d0c <JPEG_StoreOutputData+0x64>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
 8005d82:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005d84:	00da      	lsls	r2, r3, #3
 8005d86:	69e0      	ldr	r0, [r4, #28]
 8005d88:	fa26 f202 	lsr.w	r2, r6, r2
 8005d8c:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
 8005d8e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005d90:	3301      	adds	r3, #1
        hjpeg->JpegOutCount++;
 8005d92:	3201      	adds	r2, #1
 8005d94:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005d96:	e7f2      	b.n	8005d7e <JPEG_StoreOutputData+0xd6>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005d98:	f002 0303 	and.w	r3, r2, #3
 8005d9c:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
 8005da0:	00db      	lsls	r3, r3, #3
 8005da2:	fa26 f303 	lsr.w	r3, r6, r3
 8005da6:	f801 300c 	strb.w	r3, [r1, ip]
        hjpeg->JpegOutCount++;
 8005daa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005dac:	3201      	adds	r2, #1
        hjpeg->JpegOutCount++;
 8005dae:	3301      	adds	r3, #1
 8005db0:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005db2:	e7d9      	b.n	8005d68 <JPEG_StoreOutputData+0xc0>

08005db4 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005db4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005db6:	b510      	push	{r4, lr}
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005db8:	f003 0303 	and.w	r3, r3, #3
 8005dbc:	2b02      	cmp	r3, #2
{
 8005dbe:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005dc0:	d114      	bne.n	8005dec <JPEG_Process+0x38>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 8005dc2:	6803      	ldr	r3, [r0, #0]
 8005dc4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005dc6:	065b      	lsls	r3, r3, #25
 8005dc8:	d510      	bpl.n	8005dec <JPEG_Process+0x38>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8005dca:	1d01      	adds	r1, r0, #4
 8005dcc:	f7ff fd4c 	bl	8005868 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8005dd0:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005dd2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 8005dd4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005dd6:	f7fb fd73 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 8005dda:	6823      	ldr	r3, [r4, #0]
 8005ddc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005dde:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005de2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 8005de4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005de6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005dea:	639a      	str	r2, [r3, #56]	@ 0x38
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
 8005dec:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005dee:	04d9      	lsls	r1, r3, #19
 8005df0:	d407      	bmi.n	8005e02 <JPEG_Process+0x4e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
 8005df2:	6823      	ldr	r3, [r4, #0]
 8005df4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005df6:	0792      	lsls	r2, r2, #30
 8005df8:	d542      	bpl.n	8005e80 <JPEG_Process+0xcc>
      JPEG_ReadInputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005dfa:	2104      	movs	r1, #4
      JPEG_ReadInputData(hjpeg, 1);
 8005dfc:	4620      	mov	r0, r4
 8005dfe:	f7ff fe9f 	bl	8005b40 <JPEG_ReadInputData>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005e02:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e04:	0499      	lsls	r1, r3, #18
 8005e06:	d407      	bmi.n	8005e18 <JPEG_Process+0x64>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
 8005e08:	6823      	ldr	r3, [r4, #0]
 8005e0a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e0c:	0712      	lsls	r2, r2, #28
 8005e0e:	d53c      	bpl.n	8005e8a <JPEG_Process+0xd6>
      JPEG_StoreOutputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005e10:	2104      	movs	r1, #4
      JPEG_StoreOutputData(hjpeg, 1);
 8005e12:	4620      	mov	r0, r4
 8005e14:	f7ff ff48 	bl	8005ca8 <JPEG_StoreOutputData>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
 8005e18:	6823      	ldr	r3, [r4, #0]
 8005e1a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e1c:	f002 0238 	and.w	r2, r2, #56	@ 0x38
 8005e20:	2a20      	cmp	r2, #32
 8005e22:	d13a      	bne.n	8005e9a <JPEG_Process+0xe6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005e24:	681a      	ldr	r2, [r3, #0]
 8005e26:	f022 0201 	bic.w	r2, r2, #1
 8005e2a:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005e2c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005e2e:	f002 020c 	and.w	r2, r2, #12
 8005e32:	2a08      	cmp	r2, #8
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005e34:	bf02      	ittt	eq
 8005e36:	6b1a      	ldreq	r2, [r3, #48]	@ 0x30
 8005e38:	f022 027e 	biceq.w	r2, r2, #126	@ 0x7e
 8005e3c:	631a      	streq	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005e3e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005e40:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005e44:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
 8005e46:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e48:	b133      	cbz	r3, 8005e58 <JPEG_Process+0xa4>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005e4a:	4620      	mov	r0, r4
 8005e4c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e4e:	69e1      	ldr	r1, [r4, #28]
 8005e50:	f7fb fd80 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005e54:	2300      	movs	r3, #0
 8005e56:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005e58:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005e5a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e5c:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005e60:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005e64:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005e66:	2200      	movs	r2, #0
 8005e68:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005e6c:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e6e:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005e70:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005e72:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e76:	d10d      	bne.n	8005e94 <JPEG_Process+0xe0>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005e78:	f7fb fe0e 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
 8005e7c:	2001      	movs	r0, #1
}
 8005e7e:	bd10      	pop	{r4, pc}
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
 8005e80:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005e82:	0758      	lsls	r0, r3, #29
 8005e84:	d5bd      	bpl.n	8005e02 <JPEG_Process+0x4e>
      JPEG_ReadInputData(hjpeg, 1);
 8005e86:	2101      	movs	r1, #1
 8005e88:	e7b8      	b.n	8005dfc <JPEG_Process+0x48>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005e8a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005e8c:	06db      	lsls	r3, r3, #27
 8005e8e:	d5c3      	bpl.n	8005e18 <JPEG_Process+0x64>
      JPEG_StoreOutputData(hjpeg, 1);
 8005e90:	2101      	movs	r1, #1
 8005e92:	e7be      	b.n	8005e12 <JPEG_Process+0x5e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005e94:	f7ff fe36 	bl	8005b04 <HAL_JPEG_EncodeCpltCallback>
 8005e98:	e7f0      	b.n	8005e7c <JPEG_Process+0xc8>
  return JPEG_PROCESS_ONGOING;
 8005e9a:	2000      	movs	r0, #0
 8005e9c:	e7ef      	b.n	8005e7e <JPEG_Process+0xca>

08005e9e <JPEG_DMA_PollResidualData>:
{
 8005e9e:	b570      	push	{r4, r5, r6, lr}
 8005ea0:	4604      	mov	r4, r0
 8005ea2:	2610      	movs	r6, #16
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005ea4:	6d65      	ldr	r5, [r4, #84]	@ 0x54
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005ea6:	6823      	ldr	r3, [r4, #0]
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005ea8:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
 8005eac:	d122      	bne.n	8005ef4 <JPEG_DMA_PollResidualData+0x56>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005eae:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005eb0:	06d0      	lsls	r0, r2, #27
 8005eb2:	d51f      	bpl.n	8005ef4 <JPEG_DMA_PollResidualData+0x56>
        dataOut = hjpeg->Instance->DOR;
 8005eb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
 8005eb6:	69e1      	ldr	r1, [r4, #28]
 8005eb8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005eba:	548b      	strb	r3, [r1, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
 8005ebc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005ebe:	69e2      	ldr	r2, [r4, #28]
 8005ec0:	440a      	add	r2, r1
 8005ec2:	0a19      	lsrs	r1, r3, #8
 8005ec4:	7051      	strb	r1, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
 8005ec6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005ec8:	69e2      	ldr	r2, [r4, #28]
 8005eca:	440a      	add	r2, r1
 8005ecc:	0c19      	lsrs	r1, r3, #16
 8005ece:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
 8005ed0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005ed2:	69e2      	ldr	r2, [r4, #28]
 8005ed4:	0e1b      	lsrs	r3, r3, #24
 8005ed6:	440a      	add	r2, r1
 8005ed8:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
 8005eda:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005edc:	3304      	adds	r3, #4
 8005ede:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 8005ee0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005ee2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005ee4:	429a      	cmp	r2, r3
 8005ee6:	d105      	bne.n	8005ef4 <JPEG_DMA_PollResidualData+0x56>
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005ee8:	4620      	mov	r0, r4
 8005eea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005eec:	69e1      	ldr	r1, [r4, #28]
 8005eee:	f7fb fd31 	bl	8001954 <HAL_JPEG_DataReadyCallback>
          hjpeg->JpegOutCount = 0;
 8005ef2:	6265      	str	r5, [r4, #36]	@ 0x24
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
 8005ef4:	3e01      	subs	r6, #1
 8005ef6:	d1d5      	bne.n	8005ea4 <JPEG_DMA_PollResidualData+0x6>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005ef8:	6823      	ldr	r3, [r4, #0]
  tmpContext = hjpeg->Context;
 8005efa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005efc:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8005efe:	06c9      	lsls	r1, r1, #27
 8005f00:	d501      	bpl.n	8005f06 <JPEG_DMA_PollResidualData+0x68>
 8005f02:	0492      	lsls	r2, r2, #18
 8005f04:	d41e      	bmi.n	8005f44 <JPEG_DMA_PollResidualData+0xa6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005f06:	681a      	ldr	r2, [r3, #0]
 8005f08:	f022 0201 	bic.w	r2, r2, #1
 8005f0c:	601a      	str	r2, [r3, #0]
    if (hjpeg->JpegOutCount > 0UL)
 8005f0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005f10:	b133      	cbz	r3, 8005f20 <JPEG_DMA_PollResidualData+0x82>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005f12:	4620      	mov	r0, r4
 8005f14:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f16:	69e1      	ldr	r1, [r4, #28]
 8005f18:	f7fb fd1c 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005f1c:	2300      	movs	r3, #0
 8005f1e:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005f20:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f22:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f24:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f28:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005f2c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005f2e:	2200      	movs	r2, #0
 8005f30:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f34:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f36:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f38:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f3a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f3e:	d102      	bne.n	8005f46 <JPEG_DMA_PollResidualData+0xa8>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f40:	f7fb fdaa 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 8005f44:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005f46:	f7ff fddd 	bl	8005b04 <HAL_JPEG_EncodeCpltCallback>
}
 8005f4a:	e7fb      	b.n	8005f44 <JPEG_DMA_PollResidualData+0xa6>

08005f4c <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f4c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005f4e:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f50:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
{
 8005f54:	4604      	mov	r4, r0
 8005f56:	460d      	mov	r5, r1
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f58:	d033      	beq.n	8005fc2 <HAL_JPEG_Resume+0x76>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005f5a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005f5c:	f003 030c 	and.w	r3, r3, #12
 8005f60:	2b0c      	cmp	r3, #12
 8005f62:	d13c      	bne.n	8005fde <HAL_JPEG_Resume+0x92>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005f64:	f011 0601 	ands.w	r6, r1, #1
 8005f68:	d00a      	beq.n	8005f80 <HAL_JPEG_Resume+0x34>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8005f6a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005f6c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005f70:	6543      	str	r3, [r0, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005f72:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005f74:	f023 0303 	bic.w	r3, r3, #3
 8005f78:	6283      	str	r3, [r0, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
 8005f7a:	b99b      	cbnz	r3, 8005fa4 <HAL_JPEG_Resume+0x58>
      mask |= JPEG_DMA_IDMA;
 8005f7c:	f44f 6600 	mov.w	r6, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005f80:	07a8      	lsls	r0, r5, #30
 8005f82:	d509      	bpl.n	8005f98 <HAL_JPEG_Resume+0x4c>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005f84:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f86:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005f8a:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 8005f8c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f8e:	0419      	lsls	r1, r3, #16
 8005f90:	d519      	bpl.n	8005fc6 <HAL_JPEG_Resume+0x7a>
        JPEG_DMA_PollResidualData(hjpeg);
 8005f92:	4620      	mov	r0, r4
 8005f94:	f7ff ff83 	bl	8005e9e <JPEG_DMA_PollResidualData>
    JPEG_ENABLE_DMA(hjpeg, mask);
 8005f98:	6822      	ldr	r2, [r4, #0]
 8005f9a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005f9c:	4333      	orrs	r3, r6
 8005f9e:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005fa0:	2000      	movs	r0, #0
}
 8005fa2:	bd70      	pop	{r4, r5, r6, pc}
        if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005fa4:	6802      	ldr	r2, [r0, #0]
 8005fa6:	6981      	ldr	r1, [r0, #24]
 8005fa8:	3240      	adds	r2, #64	@ 0x40
 8005faa:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8005fac:	f7fe f980 	bl	80042b0 <HAL_DMA_Start_IT>
 8005fb0:	2800      	cmp	r0, #0
 8005fb2:	d0e3      	beq.n	8005f7c <HAL_JPEG_Resume+0x30>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005fb4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005fb6:	f043 0304 	orr.w	r3, r3, #4
 8005fba:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005fbc:	2306      	movs	r3, #6
 8005fbe:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 8005fc2:	2001      	movs	r0, #1
 8005fc4:	e7ed      	b.n	8005fa2 <HAL_JPEG_Resume+0x56>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 8005fc6:	6821      	ldr	r1, [r4, #0]
 8005fc8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005fca:	69e2      	ldr	r2, [r4, #28]
 8005fcc:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8005fce:	3144      	adds	r1, #68	@ 0x44
 8005fd0:	f7fe f96e 	bl	80042b0 <HAL_DMA_Start_IT>
 8005fd4:	2800      	cmp	r0, #0
 8005fd6:	d1ed      	bne.n	8005fb4 <HAL_JPEG_Resume+0x68>
        mask |= JPEG_DMA_ODMA;
 8005fd8:	f446 5680 	orr.w	r6, r6, #4096	@ 0x1000
 8005fdc:	e7dc      	b.n	8005f98 <HAL_JPEG_Resume+0x4c>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005fde:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005fe0:	f003 030c 	and.w	r3, r3, #12
 8005fe4:	2b08      	cmp	r3, #8
 8005fe6:	d1db      	bne.n	8005fa0 <HAL_JPEG_Resume+0x54>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005fe8:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8005fec:	bf1f      	itttt	ne
 8005fee:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005ff0:	f423 5380 	bicne.w	r3, r3, #4096	@ 0x1000
 8005ff4:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8005ff6:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005ff8:	078a      	lsls	r2, r1, #30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005ffa:	bf48      	it	mi
 8005ffc:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8005ffe:	6801      	ldr	r1, [r0, #0]
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8006000:	bf44      	itt	mi
 8006002:	f422 5200 	bicmi.w	r2, r2, #8192	@ 0x2000
 8006006:	6542      	strmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006008:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 800600a:	bf48      	it	mi
 800600c:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006010:	4313      	orrs	r3, r2
 8006012:	630b      	str	r3, [r1, #48]	@ 0x30
 8006014:	e7c4      	b.n	8005fa0 <HAL_JPEG_Resume+0x54>

08006016 <JPEG_DMA_EndProcess>:
{
 8006016:	b570      	push	{r4, r5, r6, lr}
 8006018:	4604      	mov	r4, r0
  hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hjpeg->hdmaout);
 800601a:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800601c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800601e:	6803      	ldr	r3, [r0, #0]
 8006020:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8006022:	f7fe fc0b 	bl	800483c <HAL_DMAEx_GetFifoLevel>
 8006026:	b2b6      	uxth	r6, r6
 8006028:	1bad      	subs	r5, r5, r6
 800602a:	1a2d      	subs	r5, r5, r0
 800602c:	6265      	str	r5, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 800602e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006030:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006032:	429a      	cmp	r2, r3
 8006034:	d106      	bne.n	8006044 <JPEG_DMA_EndProcess+0x2e>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8006036:	4620      	mov	r0, r4
 8006038:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800603a:	69e1      	ldr	r1, [r4, #28]
 800603c:	f7fb fc8a 	bl	8001954 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
 8006040:	2300      	movs	r3, #0
 8006042:	6263      	str	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
 8006044:	6823      	ldr	r3, [r4, #0]
 8006046:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 8006048:	f015 0510 	ands.w	r5, r5, #16
 800604c:	d122      	bne.n	8006094 <JPEG_DMA_EndProcess+0x7e>
    if (hjpeg->JpegOutCount > 0UL)
 800604e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006050:	b12b      	cbz	r3, 800605e <JPEG_DMA_EndProcess+0x48>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8006052:	4620      	mov	r0, r4
 8006054:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006056:	69e1      	ldr	r1, [r4, #28]
 8006058:	f7fb fc7c 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 800605c:	6265      	str	r5, [r4, #36]	@ 0x24
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 800605e:	6822      	ldr	r2, [r4, #0]
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006060:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8006062:	6813      	ldr	r3, [r2, #0]
 8006064:	f023 0301 	bic.w	r3, r3, #1
 8006068:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
 800606a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 800606c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 800606e:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8006072:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8006076:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8006078:	2200      	movs	r2, #0
 800607a:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 800607e:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006080:	2b02      	cmp	r3, #2
    hjpeg->State = HAL_JPEG_STATE_READY;
 8006082:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006086:	d102      	bne.n	800608e <JPEG_DMA_EndProcess+0x78>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006088:	f7fb fd06 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 800608c:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 800608e:	f7ff fd39 	bl	8005b04 <HAL_JPEG_EncodeCpltCallback>
 8006092:	e7fb      	b.n	800608c <JPEG_DMA_EndProcess+0x76>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8006094:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006096:	049b      	lsls	r3, r3, #18
 8006098:	d4f8      	bmi.n	800608c <JPEG_DMA_EndProcess+0x76>
    JPEG_DMA_PollResidualData(hjpeg);
 800609a:	4620      	mov	r0, r4
}
 800609c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    JPEG_DMA_PollResidualData(hjpeg);
 80060a0:	f7ff befd 	b.w	8005e9e <JPEG_DMA_PollResidualData>

080060a4 <JPEG_DMAOutAbortCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80060a4:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 80060a6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80060a8:	041b      	lsls	r3, r3, #16
 80060aa:	d501      	bpl.n	80060b0 <JPEG_DMAOutAbortCallback+0xc>
    JPEG_DMA_EndProcess(hjpeg);
 80060ac:	f7ff bfb3 	b.w	8006016 <JPEG_DMA_EndProcess>
}
 80060b0:	4770      	bx	lr

080060b2 <JPEG_DMAOutCpltCallback>:
{
 80060b2:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80060b4:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80060b6:	6823      	ldr	r3, [r4, #0]
 80060b8:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80060ba:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 80060be:	6319      	str	r1, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 80060c0:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 80060c2:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 80060c6:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 80060ca:	0409      	lsls	r1, r1, #16
 80060cc:	0c09      	lsrs	r1, r1, #16
 80060ce:	290c      	cmp	r1, #12
 80060d0:	d129      	bne.n	8006126 <JPEG_DMAOutCpltCallback+0x74>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
 80060d2:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80060d4:	0689      	lsls	r1, r1, #26
 80060d6:	d42c      	bmi.n	8006132 <JPEG_DMAOutCpltCallback+0x80>
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80060d8:	6b19      	ldr	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 80060da:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80060dc:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 80060e0:	6319      	str	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 80060e2:	6803      	ldr	r3, [r0, #0]
 80060e4:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 80060e6:	f7fe fba9 	bl	800483c <HAL_DMAEx_GetFifoLevel>
 80060ea:	b2b6      	uxth	r6, r6
 80060ec:	1bad      	subs	r5, r5, r6
 80060ee:	1a2d      	subs	r5, r5, r0
 80060f0:	6265      	str	r5, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80060f2:	4620      	mov	r0, r4
 80060f4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80060f6:	69e1      	ldr	r1, [r4, #28]
 80060f8:	f7fb fc2c 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 80060fc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060fe:	049b      	lsls	r3, r3, #18
 8006100:	d417      	bmi.n	8006132 <JPEG_DMAOutCpltCallback+0x80>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 8006102:	6821      	ldr	r1, [r4, #0]
 8006104:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006106:	69e2      	ldr	r2, [r4, #28]
 8006108:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800610a:	3144      	adds	r1, #68	@ 0x44
 800610c:	f7fe f8d0 	bl	80042b0 <HAL_DMA_Start_IT>
 8006110:	b150      	cbz	r0, 8006128 <JPEG_DMAOutCpltCallback+0x76>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8006112:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          HAL_JPEG_ErrorCallback(hjpeg);
 8006114:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8006116:	f043 0304 	orr.w	r3, r3, #4
 800611a:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 800611c:	2306      	movs	r3, #6
 800611e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
 8006122:	f7fb fcb7 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8006126:	bd70      	pop	{r4, r5, r6, pc}
        JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006128:	6822      	ldr	r2, [r4, #0]
 800612a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800612c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8006130:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8006132:	6822      	ldr	r2, [r4, #0]
 8006134:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8006136:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 800613a:	6313      	str	r3, [r2, #48]	@ 0x30
 800613c:	e7f3      	b.n	8006126 <JPEG_DMAOutCpltCallback+0x74>

0800613e <HAL_JPEG_IRQHandler>:
{
 800613e:	b510      	push	{r4, lr}
  switch (hjpeg->State)
 8006140:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
{
 8006144:	4604      	mov	r4, r0
  switch (hjpeg->State)
 8006146:	3b03      	subs	r3, #3
 8006148:	2b01      	cmp	r3, #1
 800614a:	d852      	bhi.n	80061f2 <HAL_JPEG_IRQHandler+0xb4>
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 800614c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800614e:	f003 030c 	and.w	r3, r3, #12
 8006152:	2b08      	cmp	r3, #8
 8006154:	d103      	bne.n	800615e <HAL_JPEG_IRQHandler+0x20>
}
 8006156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        (void) JPEG_Process(hjpeg);
 800615a:	f7ff be2b 	b.w	8005db4 <JPEG_Process>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 800615e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006160:	f003 030c 	and.w	r3, r3, #12
 8006164:	2b0c      	cmp	r3, #12
 8006166:	d144      	bne.n	80061f2 <HAL_JPEG_IRQHandler+0xb4>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006168:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800616a:	f003 0303 	and.w	r3, r3, #3
 800616e:	2b02      	cmp	r3, #2
 8006170:	d114      	bne.n	800619c <HAL_JPEG_IRQHandler+0x5e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 8006172:	6803      	ldr	r3, [r0, #0]
 8006174:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006176:	0659      	lsls	r1, r3, #25
 8006178:	d510      	bpl.n	800619c <HAL_JPEG_IRQHandler+0x5e>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 800617a:	1d01      	adds	r1, r0, #4
 800617c:	f7ff fb74 	bl	8005868 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8006180:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8006182:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 8006184:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8006186:	f7fb fb9b 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 800618a:	6823      	ldr	r3, [r4, #0]
 800618c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800618e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006192:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 8006194:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006196:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800619a:	639a      	str	r2, [r3, #56]	@ 0x38
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
 800619c:	6823      	ldr	r3, [r4, #0]
 800619e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80061a0:	0692      	lsls	r2, r2, #26
 80061a2:	d526      	bpl.n	80061f2 <HAL_JPEG_IRQHandler+0xb4>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80061a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 80061a6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80061a8:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 80061ac:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
 80061ae:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80061b0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80061b4:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80061b6:	681a      	ldr	r2, [r3, #0]
 80061b8:	f022 0201 	bic.w	r2, r2, #1
 80061bc:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80061be:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80061c0:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 80061c4:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 80061c6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80061c8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80061cc:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 80061ce:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80061d2:	2b02      	cmp	r3, #2
 80061d4:	d101      	bne.n	80061da <HAL_JPEG_IRQHandler+0x9c>
      (void) HAL_DMA_Abort(hjpeg->hdmain);
 80061d6:	f7fe f8a9 	bl	800432c <HAL_DMA_Abort>
    if (hjpeg->hdmaout->State == HAL_DMA_STATE_BUSY)
 80061da:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80061dc:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80061e0:	2b02      	cmp	r3, #2
 80061e2:	d101      	bne.n	80061e8 <HAL_JPEG_IRQHandler+0xaa>
      (void) HAL_DMA_Abort(hjpeg->hdmaout);
 80061e4:	f7fe f8a2 	bl	800432c <HAL_DMA_Abort>
    JPEG_DMA_EndProcess(hjpeg);
 80061e8:	4620      	mov	r0, r4
}
 80061ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    JPEG_DMA_EndProcess(hjpeg);
 80061ee:	f7ff bf12 	b.w	8006016 <JPEG_DMA_EndProcess>
}
 80061f2:	bd10      	pop	{r4, pc}

080061f4 <HAL_JPEG_GetState>:
  return hjpeg->State;
 80061f4:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
 80061f8:	4770      	bx	lr

080061fa <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80061fa:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80061fc:	01d2      	lsls	r2, r2, #7
 80061fe:	3284      	adds	r2, #132	@ 0x84
 8006200:	1883      	adds	r3, r0, r2
{
 8006202:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006204:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006206:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006208:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800620a:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 800620e:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006210:	68c5      	ldr	r5, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006212:	680e      	ldr	r6, [r1, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006214:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8006218:	f106 0c01 	add.w	ip, r6, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800621c:	f3c7 470b 	ubfx	r7, r7, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006220:	4465      	add	r5, ip
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006222:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006224:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006228:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800622a:	68c7      	ldr	r7, [r0, #12]
 800622c:	68cd      	ldr	r5, [r1, #12]
 800622e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006232:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006234:	689d      	ldr	r5, [r3, #8]
 8006236:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 800623a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800623c:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8006240:	688d      	ldr	r5, [r1, #8]
 8006242:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 8006246:	3501      	adds	r5, #1
 8006248:	4465      	add	r5, ip
 800624a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800624e:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006250:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006252:	f8d1 c010 	ldr.w	ip, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006256:	f025 0507 	bic.w	r5, r5, #7
 800625a:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800625c:	f8c3 c010 	str.w	ip, [r3, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006260:	698f      	ldr	r7, [r1, #24]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8006262:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8006266:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800626a:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 800626e:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006272:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8006276:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800627a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800627c:	695d      	ldr	r5, [r3, #20]
 800627e:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8006282:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006284:	694d      	ldr	r5, [r1, #20]
 8006286:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006288:	69dd      	ldr	r5, [r3, #28]
 800628a:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 800628e:	f025 0507 	bic.w	r5, r5, #7
 8006292:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006294:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006298:	433d      	orrs	r5, r7
 800629a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 800629c:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 800629e:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80062a0:	f1bc 0f00 	cmp.w	ip, #0
 80062a4:	d024      	beq.n	80062f0 <LTDC_SetConfig+0xf6>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80062a6:	f1bc 0f01 	cmp.w	ip, #1
 80062aa:	d023      	beq.n	80062f4 <LTDC_SetConfig+0xfa>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80062ac:	f1ac 0502 	sub.w	r5, ip, #2
 80062b0:	2d02      	cmp	r5, #2
 80062b2:	d921      	bls.n	80062f8 <LTDC_SetConfig+0xfe>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 80062b4:	f1bc 0f07 	cmp.w	ip, #7
 80062b8:	bf14      	ite	ne
 80062ba:	2501      	movne	r5, #1
 80062bc:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80062be:	6adf      	ldr	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80062c0:	1ba4      	subs	r4, r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80062c2:	f007 27e0 	and.w	r7, r7, #3758153728	@ 0xe000e000
 80062c6:	62df      	str	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80062c8:	6a8f      	ldr	r7, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80062ca:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80062cc:	436f      	muls	r7, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80062ce:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80062d0:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 80062d4:	62dc      	str	r4, [r3, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80062d6:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80062d8:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80062da:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 80062de:	f024 0407 	bic.w	r4, r4, #7
 80062e2:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80062e4:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80062e6:	5883      	ldr	r3, [r0, r2]
 80062e8:	f043 0301 	orr.w	r3, r3, #1
 80062ec:	5083      	str	r3, [r0, r2]
}
 80062ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmp = 4U;
 80062f0:	2504      	movs	r5, #4
 80062f2:	e7e4      	b.n	80062be <LTDC_SetConfig+0xc4>
    tmp = 3U;
 80062f4:	2503      	movs	r5, #3
 80062f6:	e7e2      	b.n	80062be <LTDC_SetConfig+0xc4>
    tmp = 2U;
 80062f8:	2502      	movs	r5, #2
 80062fa:	e7e0      	b.n	80062be <LTDC_SetConfig+0xc4>

080062fc <HAL_LTDC_Init>:
{
 80062fc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80062fe:	4604      	mov	r4, r0
 8006300:	2800      	cmp	r0, #0
 8006302:	d063      	beq.n	80063cc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006304:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8006308:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800630c:	b91b      	cbnz	r3, 8006316 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800630e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006312:	f7fa fc71 	bl	8000bf8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006316:	2302      	movs	r3, #2
 8006318:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800631c:	6823      	ldr	r3, [r4, #0]
 800631e:	699a      	ldr	r2, [r3, #24]
 8006320:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8006324:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006326:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800632a:	4302      	orrs	r2, r0
 800632c:	68e0      	ldr	r0, [r4, #12]
 800632e:	6999      	ldr	r1, [r3, #24]
 8006330:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006332:	6920      	ldr	r0, [r4, #16]
 8006334:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006336:	430a      	orrs	r2, r1
 8006338:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800633a:	689a      	ldr	r2, [r3, #8]
 800633c:	4924      	ldr	r1, [pc, #144]	@ (80063d0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800633e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006340:	400a      	ands	r2, r1
 8006342:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006344:	689a      	ldr	r2, [r3, #8]
 8006346:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800634a:	69a0      	ldr	r0, [r4, #24]
 800634c:	4302      	orrs	r2, r0
 800634e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006350:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006352:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006354:	400a      	ands	r2, r1
 8006356:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006358:	68da      	ldr	r2, [r3, #12]
 800635a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800635e:	6a20      	ldr	r0, [r4, #32]
 8006360:	4302      	orrs	r2, r0
 8006362:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006364:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006366:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006368:	400a      	ands	r2, r1
 800636a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800636c:	691a      	ldr	r2, [r3, #16]
 800636e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006372:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006374:	4302      	orrs	r2, r0
 8006376:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006378:	695a      	ldr	r2, [r3, #20]
 800637a:	400a      	ands	r2, r1
 800637c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800637e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006380:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006382:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006386:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8006388:	430a      	orrs	r2, r1
 800638a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800638c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800638e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006392:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006396:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800639a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800639c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800639e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80063a2:	432a      	orrs	r2, r5
 80063a4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80063a8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80063ac:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80063ae:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80063b0:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80063b2:	f042 0206 	orr.w	r2, r2, #6
 80063b6:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80063b8:	699a      	ldr	r2, [r3, #24]
 80063ba:	f042 0201 	orr.w	r2, r2, #1
 80063be:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 80063c0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80063c2:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80063c6:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80063ca:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80063cc:	2001      	movs	r0, #1
 80063ce:	e7fc      	b.n	80063ca <HAL_LTDC_Init+0xce>
 80063d0:	f000f800 	.word	0xf000f800

080063d4 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80063d4:	4770      	bx	lr

080063d6 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80063d6:	4770      	bx	lr

080063d8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80063d8:	6803      	ldr	r3, [r0, #0]
{
 80063da:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80063dc:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 80063de:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80063e0:	0772      	lsls	r2, r6, #29
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80063e2:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80063e4:	d514      	bpl.n	8006410 <HAL_LTDC_IRQHandler+0x38>
 80063e6:	0769      	lsls	r1, r5, #29
 80063e8:	d512      	bpl.n	8006410 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80063ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80063ec:	f022 0204 	bic.w	r2, r2, #4
 80063f0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80063f2:	2204      	movs	r2, #4
 80063f4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80063f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 80063fa:	f043 0301 	orr.w	r3, r3, #1
 80063fe:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8006402:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006404:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006408:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800640c:	f7ff ffe2 	bl	80063d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006410:	07b2      	lsls	r2, r6, #30
 8006412:	d516      	bpl.n	8006442 <HAL_LTDC_IRQHandler+0x6a>
 8006414:	07ab      	lsls	r3, r5, #30
 8006416:	d514      	bpl.n	8006442 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006418:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800641a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800641c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800641e:	f022 0202 	bic.w	r2, r2, #2
 8006422:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006424:	2202      	movs	r2, #2
 8006426:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006428:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800642c:	4313      	orrs	r3, r2
 800642e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006432:	2304      	movs	r3, #4
 8006434:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006438:	2300      	movs	r3, #0
 800643a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800643e:	f7ff ffc9 	bl	80063d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006442:	07f0      	lsls	r0, r6, #31
 8006444:	d510      	bpl.n	8006468 <HAL_LTDC_IRQHandler+0x90>
 8006446:	07e9      	lsls	r1, r5, #31
 8006448:	d50e      	bpl.n	8006468 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800644a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 800644c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800644e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006450:	f022 0201 	bic.w	r2, r2, #1
 8006454:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006456:	2201      	movs	r2, #1
 8006458:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800645a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800645c:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006460:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006464:	f7fc fbf2 	bl	8002c4c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006468:	0732      	lsls	r2, r6, #28
 800646a:	d511      	bpl.n	8006490 <HAL_LTDC_IRQHandler+0xb8>
 800646c:	072b      	lsls	r3, r5, #28
 800646e:	d50f      	bpl.n	8006490 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006470:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006472:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006474:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006476:	f022 0208 	bic.w	r2, r2, #8
 800647a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800647c:	2208      	movs	r2, #8
 800647e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006480:	2301      	movs	r3, #1
 8006482:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006486:	2300      	movs	r3, #0
 8006488:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800648c:	f7ff ffa3 	bl	80063d6 <HAL_LTDC_ReloadEventCallback>
}
 8006490:	bd70      	pop	{r4, r5, r6, pc}

08006492 <HAL_LTDC_ConfigLayer>:
{
 8006492:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8006496:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 800649a:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
 800649c:	2b01      	cmp	r3, #1
{
 800649e:	460f      	mov	r7, r1
 80064a0:	4694      	mov	ip, r2
 80064a2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80064a6:	d01f      	beq.n	80064e8 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064a8:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 80064aa:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064ae:	460d      	mov	r5, r1
 80064b0:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 80064b4:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80064b8:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064bc:	3438      	adds	r4, #56	@ 0x38
 80064be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80064c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80064c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80064c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80064c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80064c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80064ca:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80064cc:	4630      	mov	r0, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064ce:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80064d0:	4662      	mov	r2, ip
 80064d2:	4639      	mov	r1, r7
 80064d4:	f7ff fe91 	bl	80061fa <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 80064d8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80064da:	6833      	ldr	r3, [r6, #0]
 80064dc:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80064e0:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 80064e4:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 80064e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080064ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80064ec:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 80064f0:	4603      	mov	r3, r0
  __HAL_LOCK(hltdc);
 80064f2:	2a01      	cmp	r2, #1
 80064f4:	f04f 0002 	mov.w	r0, #2
 80064f8:	d012      	beq.n	8006520 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80064fa:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80064fc:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006500:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8006502:	f020 0001 	bic.w	r0, r0, #1
 8006506:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006508:	4806      	ldr	r0, [pc, #24]	@ (8006524 <HAL_LTDC_ProgramLineEvent+0x38>)
 800650a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800650c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800650e:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006510:	f041 0101 	orr.w	r1, r1, #1
 8006514:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006516:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8006518:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 800651c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8006520:	4770      	bx	lr
 8006522:	bf00      	nop
 8006524:	40016800 	.word	0x40016800

08006528 <HAL_PWREx_ControlVoltageScaling>:

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 8006528:	4b1d      	ldr	r3, [pc, #116]	@ (80065a0 <HAL_PWREx_ControlVoltageScaling+0x78>)
 800652a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800652c:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 8006530:	4282      	cmp	r2, r0
 8006532:	d108      	bne.n	8006546 <HAL_PWREx_ControlVoltageScaling+0x1e>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006534:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006538:	d903      	bls.n	8006542 <HAL_PWREx_ControlVoltageScaling+0x1a>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 800653a:	68da      	ldr	r2, [r3, #12]
 800653c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006540:	60da      	str	r2, [r3, #12]
    }

    return HAL_OK;
 8006542:	2000      	movs	r0, #0
 8006544:	4770      	bx	lr
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006546:	68da      	ldr	r2, [r3, #12]
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006548:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 800654c:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8006550:	ea42 0200 	orr.w	r2, r2, r0
 8006554:	bf88      	it	hi
 8006556:	f442 2280 	orrhi.w	r2, r2, #262144	@ 0x40000
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 800655a:	60da      	str	r2, [r3, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 800655c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006560:	4b10      	ldr	r3, [pc, #64]	@ (80065a4 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8006562:	2132      	movs	r1, #50	@ 0x32
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	fbb3 f3f2 	udiv	r3, r3, r2
 800656a:	434b      	muls	r3, r1
 800656c:	fbb3 f3f2 	udiv	r3, r3, r2
 8006570:	3301      	adds	r3, #1
 8006572:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 8006574:	490a      	ldr	r1, [pc, #40]	@ (80065a0 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006576:	68c8      	ldr	r0, [r1, #12]
 8006578:	0400      	lsls	r0, r0, #16
 800657a:	d404      	bmi.n	8006586 <HAL_PWREx_ControlVoltageScaling+0x5e>
 800657c:	b90a      	cbnz	r2, 8006582 <HAL_PWREx_ControlVoltageScaling+0x5a>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 800657e:	2003      	movs	r0, #3
  }

  return HAL_OK;
}
 8006580:	4770      	bx	lr
    timeout--;
 8006582:	3a01      	subs	r2, #1
 8006584:	e7f7      	b.n	8006576 <HAL_PWREx_ControlVoltageScaling+0x4e>
  if (timeout != 0U)
 8006586:	2a00      	cmp	r2, #0
 8006588:	d0f9      	beq.n	800657e <HAL_PWREx_ControlVoltageScaling+0x56>
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 800658a:	4a05      	ldr	r2, [pc, #20]	@ (80065a0 <HAL_PWREx_ControlVoltageScaling+0x78>)
 800658c:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 800658e:	0409      	lsls	r1, r1, #16
 8006590:	d403      	bmi.n	800659a <HAL_PWREx_ControlVoltageScaling+0x72>
 8006592:	2b00      	cmp	r3, #0
 8006594:	d0f3      	beq.n	800657e <HAL_PWREx_ControlVoltageScaling+0x56>
      timeout--;
 8006596:	3b01      	subs	r3, #1
 8006598:	e7f8      	b.n	800658c <HAL_PWREx_ControlVoltageScaling+0x64>
  if (timeout == 0U)
 800659a:	2b00      	cmp	r3, #0
 800659c:	d1d1      	bne.n	8006542 <HAL_PWREx_ControlVoltageScaling+0x1a>
 800659e:	e7ee      	b.n	800657e <HAL_PWREx_ControlVoltageScaling+0x56>
 80065a0:	46020800 	.word	0x46020800
 80065a4:	2000004c 	.word	0x2000004c

080065a8 <HAL_PWREx_GetVoltageRange>:
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 80065a8:	4b02      	ldr	r3, [pc, #8]	@ (80065b4 <HAL_PWREx_GetVoltageRange+0xc>)
 80065aa:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
}
 80065ac:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
 80065b0:	4770      	bx	lr
 80065b2:	bf00      	nop
 80065b4:	46020800 	.word	0x46020800

080065b8 <HAL_PWREx_ConfigSupply>:

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 80065b8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80065bc:	4b12      	ldr	r3, [pc, #72]	@ (8006608 <HAL_PWREx_ConfigSupply+0x50>)
 80065be:	2132      	movs	r1, #50	@ 0x32
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	fbb3 f3f2 	udiv	r3, r3, r2
 80065c6:	434b      	muls	r3, r1
 80065c8:	fbb3 f3f2 	udiv	r3, r3, r2
 80065cc:	4a0f      	ldr	r2, [pc, #60]	@ (800660c <HAL_PWREx_ConfigSupply+0x54>)
 80065ce:	3301      	adds	r3, #1

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80065d0:	6891      	ldr	r1, [r2, #8]
  if (SupplySource == PWR_LDO_SUPPLY)
 80065d2:	b950      	cbnz	r0, 80065ea <HAL_PWREx_ConfigSupply+0x32>
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80065d4:	f021 0102 	bic.w	r1, r1, #2
 80065d8:	6091      	str	r1, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80065da:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80065dc:	0788      	lsls	r0, r1, #30
 80065de:	d50e      	bpl.n	80065fe <HAL_PWREx_ConfigSupply+0x46>
 80065e0:	b90b      	cbnz	r3, 80065e6 <HAL_PWREx_ConfigSupply+0x2e>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 80065e2:	2003      	movs	r0, #3
 80065e4:	4770      	bx	lr
      timeout--;
 80065e6:	3b01      	subs	r3, #1
 80065e8:	e7f7      	b.n	80065da <HAL_PWREx_ConfigSupply+0x22>
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80065ea:	f041 0102 	orr.w	r1, r1, #2
 80065ee:	6091      	str	r1, [r2, #8]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80065f0:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80065f2:	0789      	lsls	r1, r1, #30
 80065f4:	d403      	bmi.n	80065fe <HAL_PWREx_ConfigSupply+0x46>
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d0f3      	beq.n	80065e2 <HAL_PWREx_ConfigSupply+0x2a>
      timeout--;
 80065fa:	3b01      	subs	r3, #1
 80065fc:	e7f8      	b.n	80065f0 <HAL_PWREx_ConfigSupply+0x38>
  if (timeout == 0U)
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d0ef      	beq.n	80065e2 <HAL_PWREx_ConfigSupply+0x2a>
  }

  return HAL_OK;
 8006602:	2000      	movs	r0, #0
}
 8006604:	4770      	bx	lr
 8006606:	bf00      	nop
 8006608:	2000004c 	.word	0x2000004c
 800660c:	46020800 	.word	0x46020800

08006610 <HAL_PWREx_DisableUCPDDeadBattery>:
  *         initialized before doing the disable).
  * @retval None.
  */
void HAL_PWREx_DisableUCPDDeadBattery(void)
{
  SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 8006610:	4a02      	ldr	r2, [pc, #8]	@ (800661c <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 8006612:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 8006614:	f043 0301 	orr.w	r3, r3, #1
 8006618:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 800661a:	4770      	bx	lr
 800661c:	46020800 	.word	0x46020800

08006620 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8006620:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 8006622:	4d2b      	ldr	r5, [pc, #172]	@ (80066d0 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
{
 8006624:	4604      	mov	r4, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 8006626:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800662a:	075b      	lsls	r3, r3, #29
 800662c:	d518      	bpl.n	8006660 <RCC_SetFlashLatencyFromMSIRange+0x40>
  {
    vos = HAL_PWREx_GetVoltageRange();
 800662e:	f7ff ffbb 	bl	80065a8 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 8006632:	f420 3380 	bic.w	r3, r0, #65536	@ 0x10000
 8006636:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800663a:	d126      	bne.n	800668a <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {

    if (msirange < RCC_MSIRANGE_1)
 800663c:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006640:	bf2c      	ite	cs
 8006642:	2000      	movcs	r0, #0
 8006644:	2001      	movcc	r0, #1
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8006646:	4a23      	ldr	r2, [pc, #140]	@ (80066d4 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8006648:	6813      	ldr	r3, [r2, #0]
 800664a:	f023 030f 	bic.w	r3, r3, #15
 800664e:	4303      	orrs	r3, r0
 8006650:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 8006652:	6813      	ldr	r3, [r2, #0]
 8006654:	f003 030f 	and.w	r3, r3, #15
 8006658:	1a18      	subs	r0, r3, r0
 800665a:	bf18      	it	ne
 800665c:	2001      	movne	r0, #1
 800665e:	e01b      	b.n	8006698 <RCC_SetFlashLatencyFromMSIRange+0x78>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006660:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006664:	f043 0304 	orr.w	r3, r3, #4
 8006668:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800666c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006670:	f003 0304 	and.w	r3, r3, #4
 8006674:	9301      	str	r3, [sp, #4]
 8006676:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8006678:	f7ff ff96 	bl	80065a8 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 800667c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006680:	f023 0304 	bic.w	r3, r3, #4
 8006684:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006688:	e7d3      	b.n	8006632 <RCC_SetFlashLatencyFromMSIRange+0x12>
    if (msirange < RCC_MSIRANGE_1)
 800668a:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 800668e:	d205      	bcs.n	800669c <RCC_SetFlashLatencyFromMSIRange+0x7c>
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 8006690:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8006694:	d015      	beq.n	80066c2 <RCC_SetFlashLatencyFromMSIRange+0xa2>
        return HAL_ERROR;
 8006696:	2001      	movs	r0, #1
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8006698:	b003      	add	sp, #12
 800669a:	bd30      	pop	{r4, r5, pc}
      if (msirange > RCC_MSIRANGE_2)
 800669c:	f1b4 5f00 	cmp.w	r4, #536870912	@ 0x20000000
 80066a0:	d906      	bls.n	80066b0 <RCC_SetFlashLatencyFromMSIRange+0x90>
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 80066a2:	b980      	cbnz	r0, 80066c6 <RCC_SetFlashLatencyFromMSIRange+0xa6>
          if (msirange > RCC_MSIRANGE_3)
 80066a4:	f1b4 5f40 	cmp.w	r4, #805306368	@ 0x30000000
 80066a8:	bf8c      	ite	hi
 80066aa:	2000      	movhi	r0, #0
 80066ac:	2001      	movls	r0, #1
 80066ae:	e7ca      	b.n	8006646 <RCC_SetFlashLatencyFromMSIRange+0x26>
        if (msirange == RCC_MSIRANGE_1)
 80066b0:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 80066b4:	d109      	bne.n	80066ca <RCC_SetFlashLatencyFromMSIRange+0xaa>
          latency = FLASH_LATENCY_1; /* 1WS */
 80066b6:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80066ba:	bf14      	ite	ne
 80066bc:	2002      	movne	r0, #2
 80066be:	2001      	moveq	r0, #1
 80066c0:	e7c1      	b.n	8006646 <RCC_SetFlashLatencyFromMSIRange+0x26>
        latency = FLASH_LATENCY_3; /* 3WS */
 80066c2:	2003      	movs	r0, #3
 80066c4:	e7bf      	b.n	8006646 <RCC_SetFlashLatencyFromMSIRange+0x26>
      latency = FLASH_LATENCY_0; /* 0WS */
 80066c6:	2000      	movs	r0, #0
 80066c8:	e7bd      	b.n	8006646 <RCC_SetFlashLatencyFromMSIRange+0x26>
          latency = FLASH_LATENCY_1; /* 1WS */
 80066ca:	2001      	movs	r0, #1
 80066cc:	e7bb      	b.n	8006646 <RCC_SetFlashLatencyFromMSIRange+0x26>
 80066ce:	bf00      	nop
 80066d0:	46020c00 	.word	0x46020c00
 80066d4:	40022000 	.word	0x40022000

080066d8 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80066d8:	4a40      	ldr	r2, [pc, #256]	@ (80067dc <HAL_RCC_GetSysClockFreq+0x104>)
{
 80066da:	b510      	push	{r4, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80066dc:	69d3      	ldr	r3, [r2, #28]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80066de:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 80066e0:	f013 030c 	ands.w	r3, r3, #12
 80066e4:	d005      	beq.n	80066f2 <HAL_RCC_GetSysClockFreq+0x1a>
 80066e6:	2b0c      	cmp	r3, #12
 80066e8:	d148      	bne.n	800677c <HAL_RCC_GetSysClockFreq+0xa4>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80066ea:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 80066ee:	2901      	cmp	r1, #1
 80066f0:	d144      	bne.n	800677c <HAL_RCC_GetSysClockFreq+0xa4>
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 80066f2:	6891      	ldr	r1, [r2, #8]
 80066f4:	0209      	lsls	r1, r1, #8
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 80066f6:	bf54      	ite	pl
 80066f8:	f8d2 20f4 	ldrpl.w	r2, [r2, #244]	@ 0xf4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 80066fc:	6892      	ldrmi	r2, [r2, #8]
    msirange = MSIRangeTable[msirange];
 80066fe:	4938      	ldr	r1, [pc, #224]	@ (80067e0 <HAL_RCC_GetSysClockFreq+0x108>)
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8006700:	bf54      	ite	pl
 8006702:	f3c2 3203 	ubfxpl	r2, r2, #12, #4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 8006706:	0f12      	lsrmi	r2, r2, #28
    msirange = MSIRangeTable[msirange];
 8006708:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 800670c:	2b00      	cmp	r3, #0
 800670e:	d063      	beq.n	80067d8 <HAL_RCC_GetSysClockFreq+0x100>
  uint32_t sysclockfreq = 0U;
 8006710:	2000      	movs	r0, #0
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8006712:	2b0c      	cmp	r3, #12
 8006714:	d15e      	bne.n	80067d4 <HAL_RCC_GetSysClockFreq+0xfc>
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8006716:	4931      	ldr	r1, [pc, #196]	@ (80067dc <HAL_RCC_GetSysClockFreq+0x104>)
 8006718:	eddf 5a32 	vldr	s11, [pc, #200]	@ 80067e4 <HAL_RCC_GetSysClockFreq+0x10c>
 800671c:	6a88      	ldr	r0, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 800671e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8006720:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8006722:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8006726:	3301      	adds	r3, #1
 8006728:	ee07 3a90 	vmov	s15, r3
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800672c:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 800672e:	f3c4 1400 	ubfx	r4, r4, #4, #1
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006732:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 8006736:	4363      	muls	r3, r4
 8006738:	ee07 3a10 	vmov	s14, r3
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 800673c:	f000 0003 	and.w	r0, r0, #3
    switch (pllsource)
 8006740:	2802      	cmp	r0, #2
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006742:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    switch (pllsource)
 8006746:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800674a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 800674e:	d021      	beq.n	8006794 <HAL_RCC_GetSysClockFreq+0xbc>
 8006750:	2803      	cmp	r0, #3
 8006752:	d01f      	beq.n	8006794 <HAL_RCC_GetSysClockFreq+0xbc>
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006754:	ee06 2a90 	vmov	s13, r2
 8006758:	eef8 6a66 	vcvt.f32.u32	s13, s13
 800675c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800675e:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 8006762:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006766:	ee07 3a90 	vmov	s15, r3
 800676a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800676e:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8006772:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006776:	ee67 7a85 	vmul.f32	s15, s15, s10
        break;
 800677a:	e01c      	b.n	80067b6 <HAL_RCC_GetSysClockFreq+0xde>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800677c:	69d2      	ldr	r2, [r2, #28]
 800677e:	f002 020c 	and.w	r2, r2, #12
 8006782:	2a04      	cmp	r2, #4
 8006784:	d004      	beq.n	8006790 <HAL_RCC_GetSysClockFreq+0xb8>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8006786:	2b08      	cmp	r3, #8
 8006788:	d025      	beq.n	80067d6 <HAL_RCC_GetSysClockFreq+0xfe>
  uint32_t sysclockfreq = 0U;
 800678a:	2000      	movs	r0, #0
  uint32_t msirange = 0U;
 800678c:	2200      	movs	r2, #0
 800678e:	e7c0      	b.n	8006712 <HAL_RCC_GetSysClockFreq+0x3a>
    sysclockfreq = HSI_VALUE;
 8006790:	4815      	ldr	r0, [pc, #84]	@ (80067e8 <HAL_RCC_GetSysClockFreq+0x110>)
 8006792:	e7fb      	b.n	800678c <HAL_RCC_GetSysClockFreq+0xb4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006794:	ed9f 5a15 	vldr	s10, [pc, #84]	@ 80067ec <HAL_RCC_GetSysClockFreq+0x114>
 8006798:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800679a:	eec5 6a27 	vdiv.f32	s13, s10, s15
 800679e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80067a2:	ee07 3a90 	vmov	s15, r3
 80067a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80067aa:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80067ae:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067b2:	ee67 7aa6 	vmul.f32	s15, s15, s13
    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 80067b6:	4b09      	ldr	r3, [pc, #36]	@ (80067dc <HAL_RCC_GetSysClockFreq+0x104>)
 80067b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80067ba:	f3c3 6306 	ubfx	r3, r3, #24, #7
 80067be:	3301      	adds	r3, #1
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 80067c0:	ee07 3a10 	vmov	s14, r3
 80067c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80067c8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80067cc:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 80067d0:	ee17 0a90 	vmov	r0, s15
}
 80067d4:	bd10      	pop	{r4, pc}
    sysclockfreq = HSE_VALUE;
 80067d6:	4a04      	ldr	r2, [pc, #16]	@ (80067e8 <HAL_RCC_GetSysClockFreq+0x110>)
  uint32_t msirange = 0U;
 80067d8:	4610      	mov	r0, r2
 80067da:	e7fb      	b.n	80067d4 <HAL_RCC_GetSysClockFreq+0xfc>
 80067dc:	46020c00 	.word	0x46020c00
 80067e0:	08035574 	.word	0x08035574
 80067e4:	39000000 	.word	0x39000000
 80067e8:	00f42400 	.word	0x00f42400
 80067ec:	4b742400 	.word	0x4b742400

080067f0 <HAL_RCC_ClockConfig>:
{
 80067f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80067f4:	460d      	mov	r5, r1
  if (pRCC_ClkInitStruct == NULL)
 80067f6:	4604      	mov	r4, r0
 80067f8:	b918      	cbnz	r0, 8006802 <HAL_RCC_ClockConfig+0x12>
    return HAL_ERROR;
 80067fa:	2001      	movs	r0, #1
}
 80067fc:	b002      	add	sp, #8
 80067fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006802:	4a9c      	ldr	r2, [pc, #624]	@ (8006a74 <HAL_RCC_ClockConfig+0x284>)
 8006804:	6813      	ldr	r3, [r2, #0]
 8006806:	f003 030f 	and.w	r3, r3, #15
 800680a:	428b      	cmp	r3, r1
 800680c:	d36e      	bcc.n	80068ec <HAL_RCC_ClockConfig+0xfc>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 800680e:	6823      	ldr	r3, [r4, #0]
 8006810:	06d8      	lsls	r0, r3, #27
 8006812:	d477      	bmi.n	8006904 <HAL_RCC_ClockConfig+0x114>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006814:	0719      	lsls	r1, r3, #28
 8006816:	d50d      	bpl.n	8006834 <HAL_RCC_ClockConfig+0x44>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006818:	4997      	ldr	r1, [pc, #604]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 800681a:	6920      	ldr	r0, [r4, #16]
 800681c:	6a0a      	ldr	r2, [r1, #32]
 800681e:	0912      	lsrs	r2, r2, #4
 8006820:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006824:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8006826:	bf81      	itttt	hi
 8006828:	6a0a      	ldrhi	r2, [r1, #32]
 800682a:	f422 62e0 	bichi.w	r2, r2, #1792	@ 0x700
 800682e:	ea42 1200 	orrhi.w	r2, r2, r0, lsl #4
 8006832:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006834:	075a      	lsls	r2, r3, #29
 8006836:	d50b      	bpl.n	8006850 <HAL_RCC_ClockConfig+0x60>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006838:	498f      	ldr	r1, [pc, #572]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 800683a:	68e0      	ldr	r0, [r4, #12]
 800683c:	6a0a      	ldr	r2, [r1, #32]
 800683e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006842:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006844:	bf81      	itttt	hi
 8006846:	6a0a      	ldrhi	r2, [r1, #32]
 8006848:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 800684c:	4302      	orrhi	r2, r0
 800684e:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006850:	079f      	lsls	r7, r3, #30
 8006852:	d50b      	bpl.n	800686c <HAL_RCC_ClockConfig+0x7c>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006854:	4988      	ldr	r1, [pc, #544]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006856:	68a0      	ldr	r0, [r4, #8]
 8006858:	6a0a      	ldr	r2, [r1, #32]
 800685a:	f002 020f 	and.w	r2, r2, #15
 800685e:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006860:	bf81      	itttt	hi
 8006862:	6a0a      	ldrhi	r2, [r1, #32]
 8006864:	f022 020f 	bichi.w	r2, r2, #15
 8006868:	4302      	orrhi	r2, r0
 800686a:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800686c:	07de      	lsls	r6, r3, #31
 800686e:	d456      	bmi.n	800691e <HAL_RCC_ClockConfig+0x12e>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006870:	6822      	ldr	r2, [r4, #0]
 8006872:	0790      	lsls	r0, r2, #30
 8006874:	f100 80d8 	bmi.w	8006a28 <HAL_RCC_ClockConfig+0x238>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006878:	497e      	ldr	r1, [pc, #504]	@ (8006a74 <HAL_RCC_ClockConfig+0x284>)
 800687a:	680b      	ldr	r3, [r1, #0]
 800687c:	f003 030f 	and.w	r3, r3, #15
 8006880:	42ab      	cmp	r3, r5
 8006882:	f200 80de 	bhi.w	8006a42 <HAL_RCC_ClockConfig+0x252>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006886:	0750      	lsls	r0, r2, #29
 8006888:	f100 80e7 	bmi.w	8006a5a <HAL_RCC_ClockConfig+0x26a>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800688c:	0711      	lsls	r1, r2, #28
 800688e:	d50d      	bpl.n	80068ac <HAL_RCC_ClockConfig+0xbc>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006890:	4979      	ldr	r1, [pc, #484]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006892:	6920      	ldr	r0, [r4, #16]
 8006894:	6a0b      	ldr	r3, [r1, #32]
 8006896:	091b      	lsrs	r3, r3, #4
 8006898:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800689c:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 800689e:	bf3f      	itttt	cc
 80068a0:	6a0b      	ldrcc	r3, [r1, #32]
 80068a2:	f423 63e0 	biccc.w	r3, r3, #1792	@ 0x700
 80068a6:	ea43 1300 	orrcc.w	r3, r3, r0, lsl #4
 80068aa:	620b      	strcc	r3, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 80068ac:	06d3      	lsls	r3, r2, #27
 80068ae:	d50b      	bpl.n	80068c8 <HAL_RCC_ClockConfig+0xd8>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 80068b0:	4a71      	ldr	r2, [pc, #452]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 80068b2:	6961      	ldr	r1, [r4, #20]
 80068b4:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 80068b6:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80068ba:	4299      	cmp	r1, r3
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 80068bc:	bf3f      	itttt	cc
 80068be:	6a53      	ldrcc	r3, [r2, #36]	@ 0x24
 80068c0:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 80068c4:	430b      	orrcc	r3, r1
 80068c6:	6253      	strcc	r3, [r2, #36]	@ 0x24
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 80068c8:	f7ff ff06 	bl	80066d8 <HAL_RCC_GetSysClockFreq>
 80068cc:	4b6a      	ldr	r3, [pc, #424]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 80068ce:	4a6b      	ldr	r2, [pc, #428]	@ (8006a7c <HAL_RCC_ClockConfig+0x28c>)
 80068d0:	6a1b      	ldr	r3, [r3, #32]
 80068d2:	f003 030f 	and.w	r3, r3, #15
 80068d6:	5cd3      	ldrb	r3, [r2, r3]
 80068d8:	40d8      	lsrs	r0, r3
 80068da:	4b69      	ldr	r3, [pc, #420]	@ (8006a80 <HAL_RCC_ClockConfig+0x290>)
 80068dc:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 80068de:	4b69      	ldr	r3, [pc, #420]	@ (8006a84 <HAL_RCC_ClockConfig+0x294>)
 80068e0:	6818      	ldr	r0, [r3, #0]
}
 80068e2:	b002      	add	sp, #8
 80068e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  status = HAL_InitTick(uwTickPrio);
 80068e8:	f7fa ba52 	b.w	8000d90 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80068ec:	6813      	ldr	r3, [r2, #0]
 80068ee:	f023 030f 	bic.w	r3, r3, #15
 80068f2:	430b      	orrs	r3, r1
 80068f4:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80068f6:	6813      	ldr	r3, [r2, #0]
 80068f8:	f003 030f 	and.w	r3, r3, #15
 80068fc:	428b      	cmp	r3, r1
 80068fe:	f47f af7c 	bne.w	80067fa <HAL_RCC_ClockConfig+0xa>
 8006902:	e784      	b.n	800680e <HAL_RCC_ClockConfig+0x1e>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8006904:	495c      	ldr	r1, [pc, #368]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006906:	6960      	ldr	r0, [r4, #20]
 8006908:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800690a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800690e:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 8006910:	bf81      	itttt	hi
 8006912:	6a4a      	ldrhi	r2, [r1, #36]	@ 0x24
 8006914:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006918:	4302      	orrhi	r2, r0
 800691a:	624a      	strhi	r2, [r1, #36]	@ 0x24
 800691c:	e77a      	b.n	8006814 <HAL_RCC_ClockConfig+0x24>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800691e:	6862      	ldr	r2, [r4, #4]
 8006920:	4b55      	ldr	r3, [pc, #340]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006922:	2a03      	cmp	r2, #3
 8006924:	d14e      	bne.n	80069c4 <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006926:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800692a:	0751      	lsls	r1, r2, #29
 800692c:	d43d      	bmi.n	80069aa <HAL_RCC_ClockConfig+0x1ba>
        pwrclkchanged = SET;
 800692e:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 8006930:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006934:	f042 0204 	orr.w	r2, r2, #4
 8006938:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 800693c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006940:	f003 0304 	and.w	r3, r3, #4
 8006944:	9301      	str	r3, [sp, #4]
 8006946:	9b01      	ldr	r3, [sp, #4]
      tickstart = HAL_GetTick();
 8006948:	f7fd f9a8 	bl	8003c9c <HAL_GetTick>
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 800694c:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 8006a88 <HAL_RCC_ClockConfig+0x298>
      tickstart = HAL_GetTick();
 8006950:	4606      	mov	r6, r0
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 8006952:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006956:	035a      	lsls	r2, r3, #13
 8006958:	d429      	bmi.n	80069ae <HAL_RCC_ClockConfig+0x1be>
      if (pwrclkchanged == SET)
 800695a:	4b47      	ldr	r3, [pc, #284]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 800695c:	b12f      	cbz	r7, 800696a <HAL_RCC_ClockConfig+0x17a>
        __HAL_RCC_PWR_CLK_DISABLE();
 800695e:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006962:	f022 0204 	bic.w	r2, r2, #4
 8006966:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006970:	f43f af43 	beq.w	80067fa <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 8006974:	4e40      	ldr	r6, [pc, #256]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006976:	6862      	ldr	r2, [r4, #4]
 8006978:	69f3      	ldr	r3, [r6, #28]
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800697a:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 800697e:	f023 0303 	bic.w	r3, r3, #3
 8006982:	4313      	orrs	r3, r2
 8006984:	61f3      	str	r3, [r6, #28]
    tickstart = HAL_GetTick();
 8006986:	f7fd f989 	bl	8003c9c <HAL_GetTick>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800698a:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 800698c:	4607      	mov	r7, r0
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800698e:	2b03      	cmp	r3, #3
 8006990:	d125      	bne.n	80069de <HAL_RCC_ClockConfig+0x1ee>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8006992:	69f3      	ldr	r3, [r6, #28]
 8006994:	f003 030c 	and.w	r3, r3, #12
 8006998:	2b0c      	cmp	r3, #12
 800699a:	f43f af69 	beq.w	8006870 <HAL_RCC_ClockConfig+0x80>
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800699e:	f7fd f97d 	bl	8003c9c <HAL_GetTick>
 80069a2:	1bc0      	subs	r0, r0, r7
 80069a4:	4540      	cmp	r0, r8
 80069a6:	d9f4      	bls.n	8006992 <HAL_RCC_ClockConfig+0x1a2>
 80069a8:	e00a      	b.n	80069c0 <HAL_RCC_ClockConfig+0x1d0>
    FlagStatus  pwrclkchanged = RESET;
 80069aa:	2700      	movs	r7, #0
 80069ac:	e7cc      	b.n	8006948 <HAL_RCC_ClockConfig+0x158>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 80069ae:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80069b2:	045b      	lsls	r3, r3, #17
 80069b4:	d4d1      	bmi.n	800695a <HAL_RCC_ClockConfig+0x16a>
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 80069b6:	f7fd f971 	bl	8003c9c <HAL_GetTick>
 80069ba:	1b80      	subs	r0, r0, r6
 80069bc:	2802      	cmp	r0, #2
 80069be:	d9f6      	bls.n	80069ae <HAL_RCC_ClockConfig+0x1be>
            return HAL_TIMEOUT;
 80069c0:	2003      	movs	r0, #3
 80069c2:	e71b      	b.n	80067fc <HAL_RCC_ClockConfig+0xc>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80069c4:	2a02      	cmp	r2, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80069c6:	681b      	ldr	r3, [r3, #0]
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80069c8:	d102      	bne.n	80069d0 <HAL_RCC_ClockConfig+0x1e0>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80069ca:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 80069ce:	e7cf      	b.n	8006970 <HAL_RCC_ClockConfig+0x180>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80069d0:	b912      	cbnz	r2, 80069d8 <HAL_RCC_ClockConfig+0x1e8>
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 80069d2:	f013 0f04 	tst.w	r3, #4
 80069d6:	e7cb      	b.n	8006970 <HAL_RCC_ClockConfig+0x180>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80069d8:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 80069dc:	e7c8      	b.n	8006970 <HAL_RCC_ClockConfig+0x180>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80069de:	2b02      	cmp	r3, #2
 80069e0:	d10b      	bne.n	80069fa <HAL_RCC_ClockConfig+0x20a>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80069e2:	69f3      	ldr	r3, [r6, #28]
 80069e4:	f003 030c 	and.w	r3, r3, #12
 80069e8:	2b08      	cmp	r3, #8
 80069ea:	f43f af41 	beq.w	8006870 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069ee:	f7fd f955 	bl	8003c9c <HAL_GetTick>
 80069f2:	1bc0      	subs	r0, r0, r7
 80069f4:	4540      	cmp	r0, r8
 80069f6:	d9f4      	bls.n	80069e2 <HAL_RCC_ClockConfig+0x1f2>
 80069f8:	e7e2      	b.n	80069c0 <HAL_RCC_ClockConfig+0x1d0>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80069fa:	b97b      	cbnz	r3, 8006a1c <HAL_RCC_ClockConfig+0x22c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 80069fc:	69f3      	ldr	r3, [r6, #28]
 80069fe:	f013 0f0c 	tst.w	r3, #12
 8006a02:	f43f af35 	beq.w	8006870 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a06:	f7fd f949 	bl	8003c9c <HAL_GetTick>
 8006a0a:	1bc0      	subs	r0, r0, r7
 8006a0c:	4540      	cmp	r0, r8
 8006a0e:	d9f5      	bls.n	80069fc <HAL_RCC_ClockConfig+0x20c>
 8006a10:	e7d6      	b.n	80069c0 <HAL_RCC_ClockConfig+0x1d0>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a12:	f7fd f943 	bl	8003c9c <HAL_GetTick>
 8006a16:	1bc0      	subs	r0, r0, r7
 8006a18:	4540      	cmp	r0, r8
 8006a1a:	d8d1      	bhi.n	80069c0 <HAL_RCC_ClockConfig+0x1d0>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8006a1c:	69f3      	ldr	r3, [r6, #28]
 8006a1e:	f003 030c 	and.w	r3, r3, #12
 8006a22:	2b04      	cmp	r3, #4
 8006a24:	d1f5      	bne.n	8006a12 <HAL_RCC_ClockConfig+0x222>
 8006a26:	e723      	b.n	8006870 <HAL_RCC_ClockConfig+0x80>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006a28:	4913      	ldr	r1, [pc, #76]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006a2a:	68a0      	ldr	r0, [r4, #8]
 8006a2c:	6a0b      	ldr	r3, [r1, #32]
 8006a2e:	f003 030f 	and.w	r3, r3, #15
 8006a32:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006a34:	bf3f      	itttt	cc
 8006a36:	6a0b      	ldrcc	r3, [r1, #32]
 8006a38:	f023 030f 	biccc.w	r3, r3, #15
 8006a3c:	4303      	orrcc	r3, r0
 8006a3e:	620b      	strcc	r3, [r1, #32]
 8006a40:	e71a      	b.n	8006878 <HAL_RCC_ClockConfig+0x88>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006a42:	680b      	ldr	r3, [r1, #0]
 8006a44:	f023 030f 	bic.w	r3, r3, #15
 8006a48:	432b      	orrs	r3, r5
 8006a4a:	600b      	str	r3, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a4c:	680b      	ldr	r3, [r1, #0]
 8006a4e:	f003 030f 	and.w	r3, r3, #15
 8006a52:	42ab      	cmp	r3, r5
 8006a54:	f47f aed1 	bne.w	80067fa <HAL_RCC_ClockConfig+0xa>
 8006a58:	e715      	b.n	8006886 <HAL_RCC_ClockConfig+0x96>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006a5a:	4907      	ldr	r1, [pc, #28]	@ (8006a78 <HAL_RCC_ClockConfig+0x288>)
 8006a5c:	68e0      	ldr	r0, [r4, #12]
 8006a5e:	6a0b      	ldr	r3, [r1, #32]
 8006a60:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006a64:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006a66:	bf3f      	itttt	cc
 8006a68:	6a0b      	ldrcc	r3, [r1, #32]
 8006a6a:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006a6e:	4303      	orrcc	r3, r0
 8006a70:	620b      	strcc	r3, [r1, #32]
 8006a72:	e70b      	b.n	800688c <HAL_RCC_ClockConfig+0x9c>
 8006a74:	40022000 	.word	0x40022000
 8006a78:	46020c00 	.word	0x46020c00
 8006a7c:	080355bc 	.word	0x080355bc
 8006a80:	2000004c 	.word	0x2000004c
 8006a84:	20000054 	.word	0x20000054
 8006a88:	46020800 	.word	0x46020800

08006a8c <HAL_RCC_GetHCLKFreq>:
{
 8006a8c:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006a8e:	f7ff fe23 	bl	80066d8 <HAL_RCC_GetSysClockFreq>
 8006a92:	4b05      	ldr	r3, [pc, #20]	@ (8006aa8 <HAL_RCC_GetHCLKFreq+0x1c>)
 8006a94:	4a05      	ldr	r2, [pc, #20]	@ (8006aac <HAL_RCC_GetHCLKFreq+0x20>)
 8006a96:	6a1b      	ldr	r3, [r3, #32]
 8006a98:	f003 030f 	and.w	r3, r3, #15
 8006a9c:	5cd3      	ldrb	r3, [r2, r3]
 8006a9e:	40d8      	lsrs	r0, r3
 8006aa0:	4b03      	ldr	r3, [pc, #12]	@ (8006ab0 <HAL_RCC_GetHCLKFreq+0x24>)
 8006aa2:	6018      	str	r0, [r3, #0]
}
 8006aa4:	bd08      	pop	{r3, pc}
 8006aa6:	bf00      	nop
 8006aa8:	46020c00 	.word	0x46020c00
 8006aac:	080355bc 	.word	0x080355bc
 8006ab0:	2000004c 	.word	0x2000004c

08006ab4 <HAL_RCC_OscConfig>:
{
 8006ab4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if (pRCC_OscInitStruct == NULL)
 8006ab8:	4604      	mov	r4, r0
 8006aba:	2800      	cmp	r0, #0
 8006abc:	d039      	beq.n	8006b32 <HAL_RCC_OscConfig+0x7e>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006abe:	4ba3      	ldr	r3, [pc, #652]	@ (8006d4c <HAL_RCC_OscConfig+0x298>)
 8006ac0:	69de      	ldr	r6, [r3, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006ac2:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006ac4:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006ac6:	f006 060c 	and.w	r6, r6, #12
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006aca:	06d8      	lsls	r0, r3, #27
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006acc:	f007 0703 	and.w	r7, r7, #3
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006ad0:	f140 809a 	bpl.w	8006c08 <HAL_RCC_OscConfig+0x154>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006ad4:	69e3      	ldr	r3, [r4, #28]
 8006ad6:	b11e      	cbz	r6, 8006ae0 <HAL_RCC_OscConfig+0x2c>
 8006ad8:	2e0c      	cmp	r6, #12
 8006ada:	d175      	bne.n	8006bc8 <HAL_RCC_OscConfig+0x114>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 8006adc:	2f01      	cmp	r7, #1
 8006ade:	d173      	bne.n	8006bc8 <HAL_RCC_OscConfig+0x114>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8006ae0:	b33b      	cbz	r3, 8006b32 <HAL_RCC_OscConfig+0x7e>
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8006ae2:	4d9a      	ldr	r5, [pc, #616]	@ (8006d4c <HAL_RCC_OscConfig+0x298>)
 8006ae4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8006ae6:	68ab      	ldr	r3, [r5, #8]
 8006ae8:	0219      	lsls	r1, r3, #8
 8006aea:	bf56      	itet	pl
 8006aec:	f8d5 30f4 	ldrpl.w	r3, [r5, #244]	@ 0xf4
 8006af0:	68ab      	ldrmi	r3, [r5, #8]
 8006af2:	041b      	lslpl	r3, r3, #16
 8006af4:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8006af8:	4298      	cmp	r0, r3
 8006afa:	d938      	bls.n	8006b6e <HAL_RCC_OscConfig+0xba>
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006afc:	b1ae      	cbz	r6, 8006b2a <HAL_RCC_OscConfig+0x76>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006afe:	68ab      	ldr	r3, [r5, #8]
 8006b00:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006b04:	60ab      	str	r3, [r5, #8]
 8006b06:	68ab      	ldr	r3, [r5, #8]
 8006b08:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006b0a:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006b0e:	430b      	orrs	r3, r1
 8006b10:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b12:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006b16:	6a22      	ldr	r2, [r4, #32]
 8006b18:	d20d      	bcs.n	8006b36 <HAL_RCC_OscConfig+0x82>
 8006b1a:	2900      	cmp	r1, #0
 8006b1c:	68eb      	ldr	r3, [r5, #12]
 8006b1e:	da1a      	bge.n	8006b56 <HAL_RCC_OscConfig+0xa2>
 8006b20:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006b24:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006b28:	e009      	b.n	8006b3e <HAL_RCC_OscConfig+0x8a>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006b2a:	f7ff fd79 	bl	8006620 <RCC_SetFlashLatencyFromMSIRange>
 8006b2e:	2800      	cmp	r0, #0
 8006b30:	d0e5      	beq.n	8006afe <HAL_RCC_OscConfig+0x4a>
    return HAL_ERROR;
 8006b32:	2001      	movs	r0, #1
 8006b34:	e00c      	b.n	8006b50 <HAL_RCC_OscConfig+0x9c>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b36:	68eb      	ldr	r3, [r5, #12]
 8006b38:	f023 031f 	bic.w	r3, r3, #31
 8006b3c:	4313      	orrs	r3, r2
 8006b3e:	60eb      	str	r3, [r5, #12]
        (void) HAL_RCC_GetHCLKFreq();
 8006b40:	f7ff ffa4 	bl	8006a8c <HAL_RCC_GetHCLKFreq>
        status = HAL_InitTick(uwTickPrio);
 8006b44:	4b82      	ldr	r3, [pc, #520]	@ (8006d50 <HAL_RCC_OscConfig+0x29c>)
 8006b46:	6818      	ldr	r0, [r3, #0]
 8006b48:	f7fa f922 	bl	8000d90 <HAL_InitTick>
        if (status != HAL_OK)
 8006b4c:	2800      	cmp	r0, #0
 8006b4e:	d05b      	beq.n	8006c08 <HAL_RCC_OscConfig+0x154>
}
 8006b50:	b004      	add	sp, #16
 8006b52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b56:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006b5a:	bf2b      	itete	cs
 8006b5c:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006b60:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006b64:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006b68:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006b6c:	e7e7      	b.n	8006b3e <HAL_RCC_OscConfig+0x8a>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006b6e:	68ab      	ldr	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b70:	f1b0 4f40 	cmp.w	r0, #3221225472	@ 0xc0000000
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006b74:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006b78:	60ab      	str	r3, [r5, #8]
 8006b7a:	68ab      	ldr	r3, [r5, #8]
 8006b7c:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006b80:	ea43 0300 	orr.w	r3, r3, r0
 8006b84:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b86:	6a22      	ldr	r2, [r4, #32]
 8006b88:	68eb      	ldr	r3, [r5, #12]
 8006b8a:	d30a      	bcc.n	8006ba2 <HAL_RCC_OscConfig+0xee>
 8006b8c:	f023 031f 	bic.w	r3, r3, #31
 8006b90:	4313      	orrs	r3, r2
 8006b92:	60eb      	str	r3, [r5, #12]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006b94:	2e00      	cmp	r6, #0
 8006b96:	d1d3      	bne.n	8006b40 <HAL_RCC_OscConfig+0x8c>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006b98:	f7ff fd42 	bl	8006620 <RCC_SetFlashLatencyFromMSIRange>
 8006b9c:	2800      	cmp	r0, #0
 8006b9e:	d0cf      	beq.n	8006b40 <HAL_RCC_OscConfig+0x8c>
 8006ba0:	e7c7      	b.n	8006b32 <HAL_RCC_OscConfig+0x7e>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006ba2:	2800      	cmp	r0, #0
 8006ba4:	da04      	bge.n	8006bb0 <HAL_RCC_OscConfig+0xfc>
 8006ba6:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006baa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006bae:	e7f0      	b.n	8006b92 <HAL_RCC_OscConfig+0xde>
 8006bb0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006bb4:	bf2b      	itete	cs
 8006bb6:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006bba:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006bbe:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006bc2:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006bc6:	e7e4      	b.n	8006b92 <HAL_RCC_OscConfig+0xde>
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8006bc8:	4d60      	ldr	r5, [pc, #384]	@ (8006d4c <HAL_RCC_OscConfig+0x298>)
 8006bca:	2b00      	cmp	r3, #0
 8006bcc:	d074      	beq.n	8006cb8 <HAL_RCC_OscConfig+0x204>
        __HAL_RCC_MSI_ENABLE();
 8006bce:	682b      	ldr	r3, [r5, #0]
 8006bd0:	f043 0301 	orr.w	r3, r3, #1
 8006bd4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006bd6:	f7fd f861 	bl	8003c9c <HAL_GetTick>
 8006bda:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006bdc:	682b      	ldr	r3, [r5, #0]
 8006bde:	075a      	lsls	r2, r3, #29
 8006be0:	d54e      	bpl.n	8006c80 <HAL_RCC_OscConfig+0x1cc>
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006be2:	68ab      	ldr	r3, [r5, #8]
 8006be4:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006be8:	60ab      	str	r3, [r5, #8]
 8006bea:	68ab      	ldr	r3, [r5, #8]
 8006bec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006bee:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006bf2:	430b      	orrs	r3, r1
 8006bf4:	60ab      	str	r3, [r5, #8]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bf6:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006bfa:	6a22      	ldr	r2, [r4, #32]
 8006bfc:	68eb      	ldr	r3, [r5, #12]
 8006bfe:	d347      	bcc.n	8006c90 <HAL_RCC_OscConfig+0x1dc>
 8006c00:	f023 031f 	bic.w	r3, r3, #31
 8006c04:	4313      	orrs	r3, r2
 8006c06:	60eb      	str	r3, [r5, #12]
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006c08:	6823      	ldr	r3, [r4, #0]
 8006c0a:	07dd      	lsls	r5, r3, #31
 8006c0c:	d465      	bmi.n	8006cda <HAL_RCC_OscConfig+0x226>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006c0e:	6823      	ldr	r3, [r4, #0]
 8006c10:	0798      	lsls	r0, r3, #30
 8006c12:	f100 80bd 	bmi.w	8006d90 <HAL_RCC_OscConfig+0x2dc>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006c16:	6823      	ldr	r3, [r4, #0]
 8006c18:	0718      	lsls	r0, r3, #28
 8006c1a:	f140 8138 	bpl.w	8006e8e <HAL_RCC_OscConfig+0x3da>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006c1e:	4b4b      	ldr	r3, [pc, #300]	@ (8006d4c <HAL_RCC_OscConfig+0x298>)
 8006c20:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c24:	0751      	lsls	r1, r2, #29
 8006c26:	f100 80f1 	bmi.w	8006e0c <HAL_RCC_OscConfig+0x358>
      pwrclkchanged = SET;
 8006c2a:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006c2c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c30:	f042 0204 	orr.w	r2, r2, #4
 8006c34:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006c38:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006c3c:	f003 0304 	and.w	r3, r3, #4
 8006c40:	9301      	str	r3, [sp, #4]
 8006c42:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006c44:	4d43      	ldr	r5, [pc, #268]	@ (8006d54 <HAL_RCC_OscConfig+0x2a0>)
 8006c46:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006c48:	07da      	lsls	r2, r3, #31
 8006c4a:	f140 80e1 	bpl.w	8006e10 <HAL_RCC_OscConfig+0x35c>
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8006c4e:	6963      	ldr	r3, [r4, #20]
 8006c50:	4d3e      	ldr	r5, [pc, #248]	@ (8006d4c <HAL_RCC_OscConfig+0x298>)
 8006c52:	2b00      	cmp	r3, #0
 8006c54:	f040 80ed 	bne.w	8006e32 <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_LSI_DISABLE();
 8006c58:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006c5c:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006c60:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006c64:	f7fd f81a 	bl	8003c9c <HAL_GetTick>
 8006c68:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006c6a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006c6e:	011b      	lsls	r3, r3, #4
 8006c70:	f140 8105 	bpl.w	8006e7e <HAL_RCC_OscConfig+0x3ca>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006c74:	f7fd f812 	bl	8003c9c <HAL_GetTick>
 8006c78:	1b80      	subs	r0, r0, r6
 8006c7a:	2805      	cmp	r0, #5
 8006c7c:	d9f5      	bls.n	8006c6a <HAL_RCC_OscConfig+0x1b6>
 8006c7e:	e005      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006c80:	f7fd f80c 	bl	8003c9c <HAL_GetTick>
 8006c84:	eba0 0008 	sub.w	r0, r0, r8
 8006c88:	2802      	cmp	r0, #2
 8006c8a:	d9a7      	bls.n	8006bdc <HAL_RCC_OscConfig+0x128>
            return HAL_TIMEOUT;
 8006c8c:	2003      	movs	r0, #3
 8006c8e:	e75f      	b.n	8006b50 <HAL_RCC_OscConfig+0x9c>
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006c90:	2900      	cmp	r1, #0
 8006c92:	da04      	bge.n	8006c9e <HAL_RCC_OscConfig+0x1ea>
 8006c94:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006c98:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006c9c:	e7b3      	b.n	8006c06 <HAL_RCC_OscConfig+0x152>
 8006c9e:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006ca2:	d304      	bcc.n	8006cae <HAL_RCC_OscConfig+0x1fa>
 8006ca4:	f423 43f8 	bic.w	r3, r3, #31744	@ 0x7c00
 8006ca8:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 8006cac:	e7ab      	b.n	8006c06 <HAL_RCC_OscConfig+0x152>
 8006cae:	f423 2378 	bic.w	r3, r3, #1015808	@ 0xf8000
 8006cb2:	ea43 33c2 	orr.w	r3, r3, r2, lsl #15
 8006cb6:	e7a6      	b.n	8006c06 <HAL_RCC_OscConfig+0x152>
        __HAL_RCC_MSI_DISABLE();
 8006cb8:	682b      	ldr	r3, [r5, #0]
 8006cba:	f023 0301 	bic.w	r3, r3, #1
 8006cbe:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006cc0:	f7fc ffec 	bl	8003c9c <HAL_GetTick>
 8006cc4:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8006cc6:	682b      	ldr	r3, [r5, #0]
 8006cc8:	075b      	lsls	r3, r3, #29
 8006cca:	d59d      	bpl.n	8006c08 <HAL_RCC_OscConfig+0x154>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006ccc:	f7fc ffe6 	bl	8003c9c <HAL_GetTick>
 8006cd0:	eba0 0008 	sub.w	r0, r0, r8
 8006cd4:	2802      	cmp	r0, #2
 8006cd6:	d9f6      	bls.n	8006cc6 <HAL_RCC_OscConfig+0x212>
 8006cd8:	e7d8      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 8006cda:	2e08      	cmp	r6, #8
 8006cdc:	6863      	ldr	r3, [r4, #4]
 8006cde:	d003      	beq.n	8006ce8 <HAL_RCC_OscConfig+0x234>
 8006ce0:	2e0c      	cmp	r6, #12
 8006ce2:	d104      	bne.n	8006cee <HAL_RCC_OscConfig+0x23a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8006ce4:	2f03      	cmp	r7, #3
 8006ce6:	d102      	bne.n	8006cee <HAL_RCC_OscConfig+0x23a>
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8006ce8:	2b00      	cmp	r3, #0
 8006cea:	d190      	bne.n	8006c0e <HAL_RCC_OscConfig+0x15a>
 8006cec:	e721      	b.n	8006b32 <HAL_RCC_OscConfig+0x7e>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006cee:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006cf2:	4d16      	ldr	r5, [pc, #88]	@ (8006d4c <HAL_RCC_OscConfig+0x298>)
 8006cf4:	d113      	bne.n	8006d1e <HAL_RCC_OscConfig+0x26a>
 8006cf6:	682b      	ldr	r3, [r5, #0]
 8006cf8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006cfc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006cfe:	f7fc ffcd 	bl	8003c9c <HAL_GetTick>
 8006d02:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006d04:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8006d4c <HAL_RCC_OscConfig+0x298>
 8006d08:	f8d8 3000 	ldr.w	r3, [r8]
 8006d0c:	0399      	lsls	r1, r3, #14
 8006d0e:	f53f af7e 	bmi.w	8006c0e <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006d12:	f7fc ffc3 	bl	8003c9c <HAL_GetTick>
 8006d16:	1b40      	subs	r0, r0, r5
 8006d18:	2864      	cmp	r0, #100	@ 0x64
 8006d1a:	d9f5      	bls.n	8006d08 <HAL_RCC_OscConfig+0x254>
 8006d1c:	e7b6      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006d1e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006d22:	d108      	bne.n	8006d36 <HAL_RCC_OscConfig+0x282>
 8006d24:	682b      	ldr	r3, [r5, #0]
 8006d26:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d2a:	602b      	str	r3, [r5, #0]
 8006d2c:	682b      	ldr	r3, [r5, #0]
 8006d2e:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8006d32:	602b      	str	r3, [r5, #0]
 8006d34:	e7df      	b.n	8006cf6 <HAL_RCC_OscConfig+0x242>
 8006d36:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8006d3a:	d10d      	bne.n	8006d58 <HAL_RCC_OscConfig+0x2a4>
 8006d3c:	682b      	ldr	r3, [r5, #0]
 8006d3e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d42:	602b      	str	r3, [r5, #0]
 8006d44:	682b      	ldr	r3, [r5, #0]
 8006d46:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006d4a:	e7f2      	b.n	8006d32 <HAL_RCC_OscConfig+0x27e>
 8006d4c:	46020c00 	.word	0x46020c00
 8006d50:	20000054 	.word	0x20000054
 8006d54:	46020800 	.word	0x46020800
 8006d58:	682a      	ldr	r2, [r5, #0]
 8006d5a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006d5e:	602a      	str	r2, [r5, #0]
 8006d60:	682a      	ldr	r2, [r5, #0]
 8006d62:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006d66:	602a      	str	r2, [r5, #0]
 8006d68:	682a      	ldr	r2, [r5, #0]
 8006d6a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8006d6e:	602a      	str	r2, [r5, #0]
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006d70:	2b00      	cmp	r3, #0
 8006d72:	d1c4      	bne.n	8006cfe <HAL_RCC_OscConfig+0x24a>
        tickstart = HAL_GetTick();
 8006d74:	f7fc ff92 	bl	8003c9c <HAL_GetTick>
 8006d78:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8006d7a:	682b      	ldr	r3, [r5, #0]
 8006d7c:	039a      	lsls	r2, r3, #14
 8006d7e:	f57f af46 	bpl.w	8006c0e <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006d82:	f7fc ff8b 	bl	8003c9c <HAL_GetTick>
 8006d86:	eba0 0008 	sub.w	r0, r0, r8
 8006d8a:	2864      	cmp	r0, #100	@ 0x64
 8006d8c:	d9f5      	bls.n	8006d7a <HAL_RCC_OscConfig+0x2c6>
 8006d8e:	e77d      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8006d90:	2e04      	cmp	r6, #4
 8006d92:	68e3      	ldr	r3, [r4, #12]
 8006d94:	d003      	beq.n	8006d9e <HAL_RCC_OscConfig+0x2ea>
 8006d96:	2e0c      	cmp	r6, #12
 8006d98:	d10d      	bne.n	8006db6 <HAL_RCC_OscConfig+0x302>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8006d9a:	2f02      	cmp	r7, #2
 8006d9c:	d10b      	bne.n	8006db6 <HAL_RCC_OscConfig+0x302>
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006d9e:	2b00      	cmp	r3, #0
 8006da0:	f43f aec7 	beq.w	8006b32 <HAL_RCC_OscConfig+0x7e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006da4:	4aa9      	ldr	r2, [pc, #676]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006da6:	6921      	ldr	r1, [r4, #16]
 8006da8:	6913      	ldr	r3, [r2, #16]
 8006daa:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006dae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006db2:	6113      	str	r3, [r2, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006db4:	e72f      	b.n	8006c16 <HAL_RCC_OscConfig+0x162>
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8006db6:	4da5      	ldr	r5, [pc, #660]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006db8:	b1bb      	cbz	r3, 8006dea <HAL_RCC_OscConfig+0x336>
        __HAL_RCC_HSI_ENABLE();
 8006dba:	682b      	ldr	r3, [r5, #0]
 8006dbc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006dc0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006dc2:	f7fc ff6b 	bl	8003c9c <HAL_GetTick>
 8006dc6:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006dc8:	682b      	ldr	r3, [r5, #0]
 8006dca:	055b      	lsls	r3, r3, #21
 8006dcc:	d507      	bpl.n	8006dde <HAL_RCC_OscConfig+0x32a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006dce:	692b      	ldr	r3, [r5, #16]
 8006dd0:	6922      	ldr	r2, [r4, #16]
 8006dd2:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006dd6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006dda:	612b      	str	r3, [r5, #16]
 8006ddc:	e71b      	b.n	8006c16 <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006dde:	f7fc ff5d 	bl	8003c9c <HAL_GetTick>
 8006de2:	1b80      	subs	r0, r0, r6
 8006de4:	2802      	cmp	r0, #2
 8006de6:	d9ef      	bls.n	8006dc8 <HAL_RCC_OscConfig+0x314>
 8006de8:	e750      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI_DISABLE();
 8006dea:	682b      	ldr	r3, [r5, #0]
 8006dec:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006df0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006df2:	f7fc ff53 	bl	8003c9c <HAL_GetTick>
 8006df6:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8006df8:	682b      	ldr	r3, [r5, #0]
 8006dfa:	055f      	lsls	r7, r3, #21
 8006dfc:	f57f af0b 	bpl.w	8006c16 <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006e00:	f7fc ff4c 	bl	8003c9c <HAL_GetTick>
 8006e04:	1b80      	subs	r0, r0, r6
 8006e06:	2802      	cmp	r0, #2
 8006e08:	d9f6      	bls.n	8006df8 <HAL_RCC_OscConfig+0x344>
 8006e0a:	e73f      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    FlagStatus  pwrclkchanged = RESET;
 8006e0c:	2700      	movs	r7, #0
 8006e0e:	e719      	b.n	8006c44 <HAL_RCC_OscConfig+0x190>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006e10:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e12:	f043 0301 	orr.w	r3, r3, #1
 8006e16:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006e18:	f7fc ff40 	bl	8003c9c <HAL_GetTick>
 8006e1c:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006e1e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e20:	07db      	lsls	r3, r3, #31
 8006e22:	f53f af14 	bmi.w	8006c4e <HAL_RCC_OscConfig+0x19a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006e26:	f7fc ff39 	bl	8003c9c <HAL_GetTick>
 8006e2a:	1b80      	subs	r0, r0, r6
 8006e2c:	2802      	cmp	r0, #2
 8006e2e:	d9f6      	bls.n	8006e1e <HAL_RCC_OscConfig+0x36a>
 8006e30:	e72c      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
      uint32_t bdcr_temp = RCC->BDCR;
 8006e32:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 8006e36:	69a1      	ldr	r1, [r4, #24]
 8006e38:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8006e3c:	4291      	cmp	r1, r2
 8006e3e:	d010      	beq.n	8006e62 <HAL_RCC_OscConfig+0x3ae>
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8006e40:	f003 6240 	and.w	r2, r3, #201326592	@ 0xc000000
 8006e44:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8006e48:	f43f ae73 	beq.w	8006b32 <HAL_RCC_OscConfig+0x7e>
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 8006e4c:	0158      	lsls	r0, r3, #5
 8006e4e:	d46c      	bmi.n	8006f2a <HAL_RCC_OscConfig+0x476>
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 8006e50:	4a7e      	ldr	r2, [pc, #504]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006e52:	69a1      	ldr	r1, [r4, #24]
 8006e54:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8006e58:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006e5c:	430b      	orrs	r3, r1
 8006e5e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      __HAL_RCC_LSI_ENABLE();
 8006e62:	4d7a      	ldr	r5, [pc, #488]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006e64:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006e68:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8006e6c:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006e70:	f7fc ff14 	bl	8003c9c <HAL_GetTick>
 8006e74:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8006e76:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006e7a:	011a      	lsls	r2, r3, #4
 8006e7c:	d568      	bpl.n	8006f50 <HAL_RCC_OscConfig+0x49c>
    if (pwrclkchanged == SET)
 8006e7e:	b137      	cbz	r7, 8006e8e <HAL_RCC_OscConfig+0x3da>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006e80:	4a72      	ldr	r2, [pc, #456]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006e82:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8006e86:	f023 0304 	bic.w	r3, r3, #4
 8006e8a:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006e8e:	6823      	ldr	r3, [r4, #0]
 8006e90:	075d      	lsls	r5, r3, #29
 8006e92:	f140 80a7 	bpl.w	8006fe4 <HAL_RCC_OscConfig+0x530>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006e96:	4b6d      	ldr	r3, [pc, #436]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006e98:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006e9c:	0750      	lsls	r0, r2, #29
 8006e9e:	d45d      	bmi.n	8006f5c <HAL_RCC_OscConfig+0x4a8>
      pwrclkchanged = SET;
 8006ea0:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006ea2:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006ea6:	f042 0204 	orr.w	r2, r2, #4
 8006eaa:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006eae:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006eb2:	f003 0304 	and.w	r3, r3, #4
 8006eb6:	9302      	str	r3, [sp, #8]
 8006eb8:	9b02      	ldr	r3, [sp, #8]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006eba:	4d65      	ldr	r5, [pc, #404]	@ (8007050 <HAL_RCC_OscConfig+0x59c>)
 8006ebc:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006ebe:	07d9      	lsls	r1, r3, #31
 8006ec0:	d54e      	bpl.n	8006f60 <HAL_RCC_OscConfig+0x4ac>
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 8006ec2:	68a3      	ldr	r3, [r4, #8]
 8006ec4:	4d61      	ldr	r5, [pc, #388]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006ec6:	f013 0f01 	tst.w	r3, #1
 8006eca:	d159      	bne.n	8006f80 <HAL_RCC_OscConfig+0x4cc>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006ecc:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006ed0:	f022 0201 	bic.w	r2, r2, #1
 8006ed4:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006ed8:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006edc:	f022 0204 	bic.w	r2, r2, #4
 8006ee0:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8006ee4:	2b00      	cmp	r3, #0
 8006ee6:	d15a      	bne.n	8006f9e <HAL_RCC_OscConfig+0x4ea>
      tickstart = HAL_GetTick();
 8006ee8:	f7fc fed8 	bl	8003c9c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006eec:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006ef0:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8006ef2:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ef6:	079a      	lsls	r2, r3, #30
 8006ef8:	f100 80a0 	bmi.w	800703c <HAL_RCC_OscConfig+0x588>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 8006efc:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f00:	061b      	lsls	r3, r3, #24
 8006f02:	d567      	bpl.n	8006fd4 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f04:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006f08:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f0c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006f10:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8006f14:	4d4d      	ldr	r5, [pc, #308]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006f16:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f1a:	0518      	lsls	r0, r3, #20
 8006f1c:	d55a      	bpl.n	8006fd4 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f1e:	f7fc febd 	bl	8003c9c <HAL_GetTick>
 8006f22:	1b80      	subs	r0, r0, r6
 8006f24:	4540      	cmp	r0, r8
 8006f26:	d9f6      	bls.n	8006f16 <HAL_RCC_OscConfig+0x462>
 8006f28:	e6b0      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
          __HAL_RCC_LSI_DISABLE();
 8006f2a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f2e:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006f32:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
          tickstart = HAL_GetTick();
 8006f36:	f7fc feb1 	bl	8003c9c <HAL_GetTick>
 8006f3a:	4606      	mov	r6, r0
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006f3c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f40:	0119      	lsls	r1, r3, #4
 8006f42:	d585      	bpl.n	8006e50 <HAL_RCC_OscConfig+0x39c>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f44:	f7fc feaa 	bl	8003c9c <HAL_GetTick>
 8006f48:	1b80      	subs	r0, r0, r6
 8006f4a:	2805      	cmp	r0, #5
 8006f4c:	d9f6      	bls.n	8006f3c <HAL_RCC_OscConfig+0x488>
 8006f4e:	e69d      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f50:	f7fc fea4 	bl	8003c9c <HAL_GetTick>
 8006f54:	1b80      	subs	r0, r0, r6
 8006f56:	2805      	cmp	r0, #5
 8006f58:	d98d      	bls.n	8006e76 <HAL_RCC_OscConfig+0x3c2>
 8006f5a:	e697      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    FlagStatus pwrclkchanged = RESET;
 8006f5c:	2700      	movs	r7, #0
 8006f5e:	e7ac      	b.n	8006eba <HAL_RCC_OscConfig+0x406>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006f60:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f62:	f043 0301 	orr.w	r3, r3, #1
 8006f66:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006f68:	f7fc fe98 	bl	8003c9c <HAL_GetTick>
 8006f6c:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006f6e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f70:	07da      	lsls	r2, r3, #31
 8006f72:	d4a6      	bmi.n	8006ec2 <HAL_RCC_OscConfig+0x40e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006f74:	f7fc fe92 	bl	8003c9c <HAL_GetTick>
 8006f78:	1b80      	subs	r0, r0, r6
 8006f7a:	2802      	cmp	r0, #2
 8006f7c:	d9f7      	bls.n	8006f6e <HAL_RCC_OscConfig+0x4ba>
 8006f7e:	e685      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 8006f80:	f013 0f04 	tst.w	r3, #4
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006f84:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f88:	bf1e      	ittt	ne
 8006f8a:	f043 0304 	orrne.w	r3, r3, #4
 8006f8e:	f8c5 30f0 	strne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006f92:	f8d5 30f0 	ldrne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006f96:	f043 0301 	orr.w	r3, r3, #1
 8006f9a:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006f9e:	f7fc fe7d 	bl	8003c9c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fa2:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006fa6:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8006fa8:	4e28      	ldr	r6, [pc, #160]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006faa:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8006fae:	079b      	lsls	r3, r3, #30
 8006fb0:	d527      	bpl.n	8007002 <HAL_RCC_OscConfig+0x54e>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8006fb2:	68a3      	ldr	r3, [r4, #8]
 8006fb4:	f013 0f80 	tst.w	r3, #128	@ 0x80
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006fb8:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8006fbc:	d02d      	beq.n	800701a <HAL_RCC_OscConfig+0x566>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fbe:	f241 3888 	movw	r8, #5000	@ 0x1388
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006fc2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006fc6:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 8006fca:	4e20      	ldr	r6, [pc, #128]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006fcc:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8006fd0:	0518      	lsls	r0, r3, #20
 8006fd2:	d51c      	bpl.n	800700e <HAL_RCC_OscConfig+0x55a>
    if (pwrclkchanged == SET)
 8006fd4:	b137      	cbz	r7, 8006fe4 <HAL_RCC_OscConfig+0x530>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006fd6:	4a1d      	ldr	r2, [pc, #116]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8006fd8:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8006fdc:	f023 0304 	bic.w	r3, r3, #4
 8006fe0:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006fe4:	6823      	ldr	r3, [r4, #0]
 8006fe6:	0699      	lsls	r1, r3, #26
 8006fe8:	d434      	bmi.n	8007054 <HAL_RCC_OscConfig+0x5a0>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 8006fea:	6823      	ldr	r3, [r4, #0]
 8006fec:	061a      	lsls	r2, r3, #24
 8006fee:	d454      	bmi.n	800709a <HAL_RCC_OscConfig+0x5e6>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 8006ff0:	6823      	ldr	r3, [r4, #0]
 8006ff2:	0658      	lsls	r0, r3, #25
 8006ff4:	d474      	bmi.n	80070e0 <HAL_RCC_OscConfig+0x62c>
  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006ff6:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8006ff8:	2900      	cmp	r1, #0
 8006ffa:	f040 80c1 	bne.w	8007180 <HAL_RCC_OscConfig+0x6cc>
  return HAL_OK;
 8006ffe:	2000      	movs	r0, #0
 8007000:	e5a6      	b.n	8006b50 <HAL_RCC_OscConfig+0x9c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007002:	f7fc fe4b 	bl	8003c9c <HAL_GetTick>
 8007006:	1b40      	subs	r0, r0, r5
 8007008:	4540      	cmp	r0, r8
 800700a:	d9ce      	bls.n	8006faa <HAL_RCC_OscConfig+0x4f6>
 800700c:	e63e      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800700e:	f7fc fe45 	bl	8003c9c <HAL_GetTick>
 8007012:	1b40      	subs	r0, r0, r5
 8007014:	4540      	cmp	r0, r8
 8007016:	d9d9      	bls.n	8006fcc <HAL_RCC_OscConfig+0x518>
 8007018:	e638      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800701a:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 800701e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007022:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8007026:	4e09      	ldr	r6, [pc, #36]	@ (800704c <HAL_RCC_OscConfig+0x598>)
 8007028:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 800702c:	0519      	lsls	r1, r3, #20
 800702e:	d5d1      	bpl.n	8006fd4 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007030:	f7fc fe34 	bl	8003c9c <HAL_GetTick>
 8007034:	1b40      	subs	r0, r0, r5
 8007036:	4540      	cmp	r0, r8
 8007038:	d9f6      	bls.n	8007028 <HAL_RCC_OscConfig+0x574>
 800703a:	e627      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800703c:	f7fc fe2e 	bl	8003c9c <HAL_GetTick>
 8007040:	1b80      	subs	r0, r0, r6
 8007042:	4540      	cmp	r0, r8
 8007044:	f67f af55 	bls.w	8006ef2 <HAL_RCC_OscConfig+0x43e>
 8007048:	e620      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
 800704a:	bf00      	nop
 800704c:	46020c00 	.word	0x46020c00
 8007050:	46020800 	.word	0x46020800
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8007054:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007056:	4d9b      	ldr	r5, [pc, #620]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
 8007058:	b17b      	cbz	r3, 800707a <HAL_RCC_OscConfig+0x5c6>
      __HAL_RCC_HSI48_ENABLE();
 800705a:	682b      	ldr	r3, [r5, #0]
 800705c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8007060:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007062:	f7fc fe1b 	bl	8003c9c <HAL_GetTick>
 8007066:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8007068:	682b      	ldr	r3, [r5, #0]
 800706a:	049b      	lsls	r3, r3, #18
 800706c:	d4bd      	bmi.n	8006fea <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800706e:	f7fc fe15 	bl	8003c9c <HAL_GetTick>
 8007072:	1b80      	subs	r0, r0, r6
 8007074:	2802      	cmp	r0, #2
 8007076:	d9f7      	bls.n	8007068 <HAL_RCC_OscConfig+0x5b4>
 8007078:	e608      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSI48_DISABLE();
 800707a:	682b      	ldr	r3, [r5, #0]
 800707c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007080:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007082:	f7fc fe0b 	bl	8003c9c <HAL_GetTick>
 8007086:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8007088:	682b      	ldr	r3, [r5, #0]
 800708a:	049f      	lsls	r7, r3, #18
 800708c:	d5ad      	bpl.n	8006fea <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800708e:	f7fc fe05 	bl	8003c9c <HAL_GetTick>
 8007092:	1b80      	subs	r0, r0, r6
 8007094:	2802      	cmp	r0, #2
 8007096:	d9f7      	bls.n	8007088 <HAL_RCC_OscConfig+0x5d4>
 8007098:	e5f8      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 800709a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800709c:	4d89      	ldr	r5, [pc, #548]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
 800709e:	b17b      	cbz	r3, 80070c0 <HAL_RCC_OscConfig+0x60c>
      __HAL_RCC_SHSI_ENABLE();
 80070a0:	682b      	ldr	r3, [r5, #0]
 80070a2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80070a6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070a8:	f7fc fdf8 	bl	8003c9c <HAL_GetTick>
 80070ac:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 80070ae:	682b      	ldr	r3, [r5, #0]
 80070b0:	0419      	lsls	r1, r3, #16
 80070b2:	d49d      	bmi.n	8006ff0 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 80070b4:	f7fc fdf2 	bl	8003c9c <HAL_GetTick>
 80070b8:	1b80      	subs	r0, r0, r6
 80070ba:	2802      	cmp	r0, #2
 80070bc:	d9f7      	bls.n	80070ae <HAL_RCC_OscConfig+0x5fa>
 80070be:	e5e5      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_SHSI_DISABLE();
 80070c0:	682b      	ldr	r3, [r5, #0]
 80070c2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80070c6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070c8:	f7fc fde8 	bl	8003c9c <HAL_GetTick>
 80070cc:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 80070ce:	682b      	ldr	r3, [r5, #0]
 80070d0:	041a      	lsls	r2, r3, #16
 80070d2:	d58d      	bpl.n	8006ff0 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 80070d4:	f7fc fde2 	bl	8003c9c <HAL_GetTick>
 80070d8:	1b80      	subs	r0, r0, r6
 80070da:	2802      	cmp	r0, #2
 80070dc:	d9f7      	bls.n	80070ce <HAL_RCC_OscConfig+0x61a>
 80070de:	e5d5      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 80070e0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80070e2:	4d78      	ldr	r5, [pc, #480]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d03a      	beq.n	800715e <HAL_RCC_OscConfig+0x6aa>
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 80070e8:	68ab      	ldr	r3, [r5, #8]
 80070ea:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80070ee:	60ab      	str	r3, [r5, #8]
 80070f0:	68ab      	ldr	r3, [r5, #8]
 80070f2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80070f4:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 80070f8:	4313      	orrs	r3, r2
 80070fa:	60ab      	str	r3, [r5, #8]
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80070fc:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 8007100:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8007104:	d316      	bcc.n	8007134 <HAL_RCC_OscConfig+0x680>
 8007106:	68eb      	ldr	r3, [r5, #12]
 8007108:	f023 031f 	bic.w	r3, r3, #31
 800710c:	4313      	orrs	r3, r2
 800710e:	60eb      	str	r3, [r5, #12]
      __HAL_RCC_MSIK_ENABLE();
 8007110:	4d6c      	ldr	r5, [pc, #432]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
 8007112:	682b      	ldr	r3, [r5, #0]
 8007114:	f043 0310 	orr.w	r3, r3, #16
 8007118:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800711a:	f7fc fdbf 	bl	8003c9c <HAL_GetTick>
 800711e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 8007120:	682b      	ldr	r3, [r5, #0]
 8007122:	069b      	lsls	r3, r3, #26
 8007124:	f53f af67 	bmi.w	8006ff6 <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007128:	f7fc fdb8 	bl	8003c9c <HAL_GetTick>
 800712c:	1b80      	subs	r0, r0, r6
 800712e:	2802      	cmp	r0, #2
 8007130:	d9f6      	bls.n	8007120 <HAL_RCC_OscConfig+0x66c>
 8007132:	e5ab      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007134:	2b00      	cmp	r3, #0
 8007136:	da05      	bge.n	8007144 <HAL_RCC_OscConfig+0x690>
 8007138:	68eb      	ldr	r3, [r5, #12]
 800713a:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 800713e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007142:	e7e4      	b.n	800710e <HAL_RCC_OscConfig+0x65a>
 8007144:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007148:	68eb      	ldr	r3, [r5, #12]
 800714a:	bf2b      	itete	cs
 800714c:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8007150:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8007154:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8007158:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 800715c:	e7d7      	b.n	800710e <HAL_RCC_OscConfig+0x65a>
      __HAL_RCC_MSIK_DISABLE();
 800715e:	682b      	ldr	r3, [r5, #0]
 8007160:	f023 0310 	bic.w	r3, r3, #16
 8007164:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007166:	f7fc fd99 	bl	8003c9c <HAL_GetTick>
 800716a:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 800716c:	682b      	ldr	r3, [r5, #0]
 800716e:	069f      	lsls	r7, r3, #26
 8007170:	f57f af41 	bpl.w	8006ff6 <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007174:	f7fc fd92 	bl	8003c9c <HAL_GetTick>
 8007178:	1b80      	subs	r0, r0, r6
 800717a:	2802      	cmp	r0, #2
 800717c:	d9f6      	bls.n	800716c <HAL_RCC_OscConfig+0x6b8>
 800717e:	e585      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007180:	4d50      	ldr	r5, [pc, #320]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
 8007182:	69eb      	ldr	r3, [r5, #28]
 8007184:	f003 030c 	and.w	r3, r3, #12
 8007188:	2b0c      	cmp	r3, #12
 800718a:	f000 80a1 	beq.w	80072d0 <HAL_RCC_OscConfig+0x81c>
        __HAL_RCC_PLL_DISABLE();
 800718e:	682b      	ldr	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007190:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
 8007192:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007196:	602b      	str	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007198:	f040 8081 	bne.w	800729e <HAL_RCC_OscConfig+0x7ea>
        tickstart = HAL_GetTick();
 800719c:	f7fc fd7e 	bl	8003c9c <HAL_GetTick>
 80071a0:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80071a2:	6829      	ldr	r1, [r5, #0]
 80071a4:	f011 7100 	ands.w	r1, r1, #33554432	@ 0x2000000
 80071a8:	d16d      	bne.n	8007286 <HAL_RCC_OscConfig+0x7d2>
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80071aa:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80071ae:	075e      	lsls	r6, r3, #29
 80071b0:	d40c      	bmi.n	80071cc <HAL_RCC_OscConfig+0x718>
          pwrclkchanged = SET;
 80071b2:	2101      	movs	r1, #1
          __HAL_RCC_PWR_CLK_ENABLE();
 80071b4:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80071b8:	f043 0304 	orr.w	r3, r3, #4
 80071bc:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80071c0:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80071c4:	f003 0304 	and.w	r3, r3, #4
 80071c8:	9303      	str	r3, [sp, #12]
 80071ca:	9b03      	ldr	r3, [sp, #12]
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 80071cc:	4d3e      	ldr	r5, [pc, #248]	@ (80072c8 <HAL_RCC_OscConfig+0x814>)
 80071ce:	68ee      	ldr	r6, [r5, #12]
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 80071d0:	68eb      	ldr	r3, [r5, #12]
 80071d2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80071d6:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 80071d8:	4b3a      	ldr	r3, [pc, #232]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
 80071da:	6c67      	ldr	r7, [r4, #68]	@ 0x44
 80071dc:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 80071de:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80071e0:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 80071e4:	433a      	orrs	r2, r7
 80071e6:	f020 0003 	bic.w	r0, r0, #3
 80071ea:	4302      	orrs	r2, r0
 80071ec:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80071ee:	3801      	subs	r0, #1
 80071f0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80071f4:	629a      	str	r2, [r3, #40]	@ 0x28
 80071f6:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80071f8:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
 80071fa:	4834      	ldr	r0, [pc, #208]	@ (80072cc <HAL_RCC_OscConfig+0x818>)
 80071fc:	3a01      	subs	r2, #1
 80071fe:	4038      	ands	r0, r7
 8007200:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007204:	4302      	orrs	r2, r0
 8007206:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8007208:	3801      	subs	r0, #1
 800720a:	0240      	lsls	r0, r0, #9
 800720c:	b280      	uxth	r0, r0
 800720e:	4302      	orrs	r2, r0
 8007210:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8007212:	3801      	subs	r0, #1
 8007214:	0400      	lsls	r0, r0, #16
 8007216:	f400 00fe 	and.w	r0, r0, #8323072	@ 0x7f0000
 800721a:	4302      	orrs	r2, r0
 800721c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800721e:	3801      	subs	r0, #1
 8007220:	0600      	lsls	r0, r0, #24
 8007222:	f000 40fe 	and.w	r0, r0, #2130706432	@ 0x7f000000
 8007226:	4302      	orrs	r2, r0
 8007228:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_RCC_PLL_FRACN_DISABLE();
 800722a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800722c:	f022 0210 	bic.w	r2, r2, #16
 8007230:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8007232:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007234:	00d2      	lsls	r2, r2, #3
 8007236:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007238:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800723a:	f042 0210 	orr.w	r2, r2, #16
 800723e:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 8007240:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007242:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007244:	f022 020c 	bic.w	r2, r2, #12
 8007248:	4302      	orrs	r2, r0
 800724a:	629a      	str	r2, [r3, #40]	@ 0x28
        if (pwrboosten == SET)
 800724c:	0370      	lsls	r0, r6, #13
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 800724e:	bf42      	ittt	mi
 8007250:	68ea      	ldrmi	r2, [r5, #12]
 8007252:	f442 2280 	orrmi.w	r2, r2, #262144	@ 0x40000
 8007256:	60ea      	strmi	r2, [r5, #12]
        if (pwrclkchanged == SET)
 8007258:	b129      	cbz	r1, 8007266 <HAL_RCC_OscConfig+0x7b2>
          __HAL_RCC_PWR_CLK_DISABLE();
 800725a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800725e:	f022 0204 	bic.w	r2, r2, #4
 8007262:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
        __HAL_RCC_PLL_ENABLE();
 8007266:	681a      	ldr	r2, [r3, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8007268:	4c16      	ldr	r4, [pc, #88]	@ (80072c4 <HAL_RCC_OscConfig+0x810>)
        __HAL_RCC_PLL_ENABLE();
 800726a:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 800726e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007270:	f7fc fd14 	bl	8003c9c <HAL_GetTick>
 8007274:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8007276:	6823      	ldr	r3, [r4, #0]
 8007278:	019a      	lsls	r2, r3, #6
 800727a:	d50a      	bpl.n	8007292 <HAL_RCC_OscConfig+0x7de>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 800727c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800727e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8007282:	62a3      	str	r3, [r4, #40]	@ 0x28
 8007284:	e6bb      	b.n	8006ffe <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007286:	f7fc fd09 	bl	8003c9c <HAL_GetTick>
 800728a:	1b80      	subs	r0, r0, r6
 800728c:	2802      	cmp	r0, #2
 800728e:	d988      	bls.n	80071a2 <HAL_RCC_OscConfig+0x6ee>
 8007290:	e4fc      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007292:	f7fc fd03 	bl	8003c9c <HAL_GetTick>
 8007296:	1b40      	subs	r0, r0, r5
 8007298:	2802      	cmp	r0, #2
 800729a:	d9ec      	bls.n	8007276 <HAL_RCC_OscConfig+0x7c2>
 800729c:	e4f6      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
        tickstart = HAL_GetTick();
 800729e:	f7fc fcfd 	bl	8003c9c <HAL_GetTick>
 80072a2:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80072a4:	682b      	ldr	r3, [r5, #0]
 80072a6:	019b      	lsls	r3, r3, #6
 80072a8:	d406      	bmi.n	80072b8 <HAL_RCC_OscConfig+0x804>
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 80072aa:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80072ac:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80072b0:	f023 0303 	bic.w	r3, r3, #3
 80072b4:	62ab      	str	r3, [r5, #40]	@ 0x28
 80072b6:	e6a2      	b.n	8006ffe <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072b8:	f7fc fcf0 	bl	8003c9c <HAL_GetTick>
 80072bc:	1b00      	subs	r0, r0, r4
 80072be:	2802      	cmp	r0, #2
 80072c0:	d9f0      	bls.n	80072a4 <HAL_RCC_OscConfig+0x7f0>
 80072c2:	e4e3      	b.n	8006c8c <HAL_RCC_OscConfig+0x1d8>
 80072c4:	46020c00 	.word	0x46020c00
 80072c8:	46020800 	.word	0x46020800
 80072cc:	80800000 	.word	0x80800000
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80072d0:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLL1CFGR;
 80072d2:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 80072d4:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80072d6:	f43f ac2c 	beq.w	8006b32 <HAL_RCC_OscConfig+0x7e>
 80072da:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 80072dc:	f002 0103 	and.w	r1, r2, #3
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80072e0:	4281      	cmp	r1, r0
 80072e2:	f47f ac26 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072e6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 80072e8:	f3c2 2003 	ubfx	r0, r2, #8, #4
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072ec:	3901      	subs	r1, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 80072ee:	4288      	cmp	r0, r1
 80072f0:	f47f ac1f 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072f4:	6c61      	ldr	r1, [r4, #68]	@ 0x44
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 80072f6:	f402 4270 	and.w	r2, r2, #61440	@ 0xf000
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072fa:	428a      	cmp	r2, r1
 80072fc:	f47f ac19 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007300:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8007302:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8007306:	3a01      	subs	r2, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8007308:	4291      	cmp	r1, r2
 800730a:	f47f ac12 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800730e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 8007310:	f3c3 2146 	ubfx	r1, r3, #9, #7
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007314:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007316:	4291      	cmp	r1, r2
 8007318:	f47f ac0b 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 800731c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 800731e:	f3c3 4106 	ubfx	r1, r3, #16, #7
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007322:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007324:	4291      	cmp	r1, r2
 8007326:	f47f ac04 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 800732a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 800732c:	f3c3 6306 	ubfx	r3, r3, #24, #7
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007330:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007332:	4293      	cmp	r3, r2
 8007334:	f47f abfd 	bne.w	8006b32 <HAL_RCC_OscConfig+0x7e>
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8007338:	4b0d      	ldr	r3, [pc, #52]	@ (8007370 <HAL_RCC_OscConfig+0x8bc>)
 800733a:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 800733c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800733e:	f3c2 02cc 	ubfx	r2, r2, #3, #13
 8007342:	428a      	cmp	r2, r1
 8007344:	f43f ae5b 	beq.w	8006ffe <HAL_RCC_OscConfig+0x54a>
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007348:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800734a:	f022 0210 	bic.w	r2, r2, #16
 800734e:	629a      	str	r2, [r3, #40]	@ 0x28
        tickstart = HAL_GetTick();
 8007350:	f7fc fca4 	bl	8003c9c <HAL_GetTick>
 8007354:	4605      	mov	r5, r0
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 8007356:	f7fc fca1 	bl	8003c9c <HAL_GetTick>
 800735a:	42a8      	cmp	r0, r5
 800735c:	d0fb      	beq.n	8007356 <HAL_RCC_OscConfig+0x8a2>
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 800735e:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007360:	4b03      	ldr	r3, [pc, #12]	@ (8007370 <HAL_RCC_OscConfig+0x8bc>)
 8007362:	00d2      	lsls	r2, r2, #3
 8007364:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007366:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007368:	f042 0210 	orr.w	r2, r2, #16
 800736c:	629a      	str	r2, [r3, #40]	@ 0x28
 800736e:	e646      	b.n	8006ffe <HAL_RCC_OscConfig+0x54a>
 8007370:	46020c00 	.word	0x46020c00

08007374 <HAL_RCC_GetPCLK1Freq>:
{
 8007374:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 8007376:	f7ff fb89 	bl	8006a8c <HAL_RCC_GetHCLKFreq>
 800737a:	4b04      	ldr	r3, [pc, #16]	@ (800738c <HAL_RCC_GetPCLK1Freq+0x18>)
 800737c:	4a04      	ldr	r2, [pc, #16]	@ (8007390 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800737e:	6a1b      	ldr	r3, [r3, #32]
 8007380:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8007384:	5cd3      	ldrb	r3, [r2, r3]
}
 8007386:	40d8      	lsrs	r0, r3
 8007388:	bd08      	pop	{r3, pc}
 800738a:	bf00      	nop
 800738c:	46020c00 	.word	0x46020c00
 8007390:	080355b4 	.word	0x080355b4

08007394 <HAL_RCC_GetClockConfig>:
  pRCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | \
 8007394:	231f      	movs	r3, #31
 8007396:	6003      	str	r3, [r0, #0]
  pRCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 8007398:	4b0d      	ldr	r3, [pc, #52]	@ (80073d0 <HAL_RCC_GetClockConfig+0x3c>)
 800739a:	69da      	ldr	r2, [r3, #28]
 800739c:	f002 0203 	and.w	r2, r2, #3
 80073a0:	6042      	str	r2, [r0, #4]
  pRCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_HPRE);
 80073a2:	6a1a      	ldr	r2, [r3, #32]
 80073a4:	f002 020f 	and.w	r2, r2, #15
 80073a8:	6082      	str	r2, [r0, #8]
  pRCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PPRE1);
 80073aa:	6a1a      	ldr	r2, [r3, #32]
 80073ac:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 80073b0:	60c2      	str	r2, [r0, #12]
  pRCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4);
 80073b2:	6a1a      	ldr	r2, [r3, #32]
 80073b4:	0912      	lsrs	r2, r2, #4
 80073b6:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 80073ba:	6102      	str	r2, [r0, #16]
  pRCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CFGR3 & RCC_CFGR3_PPRE3);
 80073bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80073be:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80073c2:	6143      	str	r3, [r0, #20]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80073c4:	4b03      	ldr	r3, [pc, #12]	@ (80073d4 <HAL_RCC_GetClockConfig+0x40>)
 80073c6:	681b      	ldr	r3, [r3, #0]
 80073c8:	f003 030f 	and.w	r3, r3, #15
 80073cc:	600b      	str	r3, [r1, #0]
}
 80073ce:	4770      	bx	lr
 80073d0:	46020c00 	.word	0x46020c00
 80073d4:	40022000 	.word	0x40022000

080073d8 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 80073d8:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 80073da:	4c33      	ldr	r4, [pc, #204]	@ (80074a8 <RCCEx_PLL2_Config+0xd0>)
{
 80073dc:	4605      	mov	r5, r0
  __HAL_RCC_PLL2_DISABLE();
 80073de:	6823      	ldr	r3, [r4, #0]
 80073e0:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80073e4:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80073e6:	f7fc fc59 	bl	8003c9c <HAL_GetTick>
 80073ea:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80073ec:	6823      	ldr	r3, [r4, #0]
 80073ee:	011a      	lsls	r2, r3, #4
 80073f0:	d44d      	bmi.n	800748e <RCCEx_PLL2_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 80073f2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80073f4:	6829      	ldr	r1, [r5, #0]
 80073f6:	686a      	ldr	r2, [r5, #4]
 80073f8:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80073fc:	f023 0303 	bic.w	r3, r3, #3
 8007400:	3a01      	subs	r2, #1
 8007402:	430b      	orrs	r3, r1
 8007404:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007408:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800740a:	68ab      	ldr	r3, [r5, #8]
 800740c:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 800740e:	4a27      	ldr	r2, [pc, #156]	@ (80074ac <RCCEx_PLL2_Config+0xd4>)
 8007410:	3b01      	subs	r3, #1
 8007412:	400a      	ands	r2, r1
 8007414:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007418:	4313      	orrs	r3, r2
 800741a:	68ea      	ldr	r2, [r5, #12]
 800741c:	3a01      	subs	r2, #1
 800741e:	0252      	lsls	r2, r2, #9
 8007420:	b292      	uxth	r2, r2
 8007422:	4313      	orrs	r3, r2
 8007424:	692a      	ldr	r2, [r5, #16]
 8007426:	3a01      	subs	r2, #1
 8007428:	0412      	lsls	r2, r2, #16
 800742a:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 800742e:	4313      	orrs	r3, r2
 8007430:	696a      	ldr	r2, [r5, #20]
 8007432:	3a01      	subs	r2, #1
 8007434:	0612      	lsls	r2, r2, #24
 8007436:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 800743a:	4313      	orrs	r3, r2
 800743c:	63e3      	str	r3, [r4, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 800743e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007440:	69aa      	ldr	r2, [r5, #24]
 8007442:	f023 030c 	bic.w	r3, r3, #12
 8007446:	4313      	orrs	r3, r2
 8007448:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 800744a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800744c:	6a2a      	ldr	r2, [r5, #32]
 800744e:	4313      	orrs	r3, r2
 8007450:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 8007452:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007454:	f023 0310 	bic.w	r3, r3, #16
 8007458:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800745a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800745c:	69ea      	ldr	r2, [r5, #28]
 800745e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007462:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8007466:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800746a:	6423      	str	r3, [r4, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 800746c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800746e:	4d0e      	ldr	r5, [pc, #56]	@ (80074a8 <RCCEx_PLL2_Config+0xd0>)
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007470:	f043 0310 	orr.w	r3, r3, #16
 8007474:	62e3      	str	r3, [r4, #44]	@ 0x2c
  __HAL_RCC_PLL2_ENABLE();
 8007476:	6823      	ldr	r3, [r4, #0]
 8007478:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800747c:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800747e:	f7fc fc0d 	bl	8003c9c <HAL_GetTick>
 8007482:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007484:	682b      	ldr	r3, [r5, #0]
 8007486:	011b      	lsls	r3, r3, #4
 8007488:	d508      	bpl.n	800749c <RCCEx_PLL2_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800748a:	2000      	movs	r0, #0
 800748c:	e005      	b.n	800749a <RCCEx_PLL2_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800748e:	f7fc fc05 	bl	8003c9c <HAL_GetTick>
 8007492:	1b80      	subs	r0, r0, r6
 8007494:	2802      	cmp	r0, #2
 8007496:	d9a9      	bls.n	80073ec <RCCEx_PLL2_Config+0x14>
      return HAL_TIMEOUT;
 8007498:	2003      	movs	r0, #3

}
 800749a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800749c:	f7fc fbfe 	bl	8003c9c <HAL_GetTick>
 80074a0:	1b00      	subs	r0, r0, r4
 80074a2:	2802      	cmp	r0, #2
 80074a4:	d9ee      	bls.n	8007484 <RCCEx_PLL2_Config+0xac>
 80074a6:	e7f7      	b.n	8007498 <RCCEx_PLL2_Config+0xc0>
 80074a8:	46020c00 	.word	0x46020c00
 80074ac:	80800000 	.word	0x80800000

080074b0 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 80074b0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 80074b2:	4c33      	ldr	r4, [pc, #204]	@ (8007580 <RCCEx_PLL3_Config+0xd0>)
{
 80074b4:	4605      	mov	r5, r0
  __HAL_RCC_PLL3_DISABLE();
 80074b6:	6823      	ldr	r3, [r4, #0]
 80074b8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80074bc:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80074be:	f7fc fbed 	bl	8003c9c <HAL_GetTick>
 80074c2:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80074c4:	6823      	ldr	r3, [r4, #0]
 80074c6:	009a      	lsls	r2, r3, #2
 80074c8:	d44d      	bmi.n	8007566 <RCCEx_PLL3_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 80074ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074cc:	6829      	ldr	r1, [r5, #0]
 80074ce:	686a      	ldr	r2, [r5, #4]
 80074d0:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80074d4:	f023 0303 	bic.w	r3, r3, #3
 80074d8:	3a01      	subs	r2, #1
 80074da:	430b      	orrs	r3, r1
 80074dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80074e0:	6323      	str	r3, [r4, #48]	@ 0x30
 80074e2:	68ab      	ldr	r3, [r5, #8]
 80074e4:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80074e6:	4a27      	ldr	r2, [pc, #156]	@ (8007584 <RCCEx_PLL3_Config+0xd4>)
 80074e8:	3b01      	subs	r3, #1
 80074ea:	400a      	ands	r2, r1
 80074ec:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80074f0:	4313      	orrs	r3, r2
 80074f2:	68ea      	ldr	r2, [r5, #12]
 80074f4:	3a01      	subs	r2, #1
 80074f6:	0252      	lsls	r2, r2, #9
 80074f8:	b292      	uxth	r2, r2
 80074fa:	4313      	orrs	r3, r2
 80074fc:	692a      	ldr	r2, [r5, #16]
 80074fe:	3a01      	subs	r2, #1
 8007500:	0412      	lsls	r2, r2, #16
 8007502:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8007506:	4313      	orrs	r3, r2
 8007508:	696a      	ldr	r2, [r5, #20]
 800750a:	3a01      	subs	r2, #1
 800750c:	0612      	lsls	r2, r2, #24
 800750e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007512:	4313      	orrs	r3, r2
 8007514:	6463      	str	r3, [r4, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 8007516:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007518:	69aa      	ldr	r2, [r5, #24]
 800751a:	f023 030c 	bic.w	r3, r3, #12
 800751e:	4313      	orrs	r3, r2
 8007520:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 8007522:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007524:	6a2a      	ldr	r2, [r5, #32]
 8007526:	4313      	orrs	r3, r2
 8007528:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 800752a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800752c:	f023 0310 	bic.w	r3, r3, #16
 8007530:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8007532:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8007534:	69ea      	ldr	r2, [r5, #28]
 8007536:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800753a:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800753e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007542:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007544:	6b23      	ldr	r3, [r4, #48]	@ 0x30

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007546:	4d0e      	ldr	r5, [pc, #56]	@ (8007580 <RCCEx_PLL3_Config+0xd0>)
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007548:	f043 0310 	orr.w	r3, r3, #16
 800754c:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_RCC_PLL3_ENABLE();
 800754e:	6823      	ldr	r3, [r4, #0]
 8007550:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007554:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8007556:	f7fc fba1 	bl	8003c9c <HAL_GetTick>
 800755a:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800755c:	682b      	ldr	r3, [r5, #0]
 800755e:	009b      	lsls	r3, r3, #2
 8007560:	d508      	bpl.n	8007574 <RCCEx_PLL3_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007562:	2000      	movs	r0, #0
 8007564:	e005      	b.n	8007572 <RCCEx_PLL3_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007566:	f7fc fb99 	bl	8003c9c <HAL_GetTick>
 800756a:	1b80      	subs	r0, r0, r6
 800756c:	2802      	cmp	r0, #2
 800756e:	d9a9      	bls.n	80074c4 <RCCEx_PLL3_Config+0x14>
      return HAL_TIMEOUT;
 8007570:	2003      	movs	r0, #3
}
 8007572:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007574:	f7fc fb92 	bl	8003c9c <HAL_GetTick>
 8007578:	1b00      	subs	r0, r0, r4
 800757a:	2802      	cmp	r0, #2
 800757c:	d9ee      	bls.n	800755c <RCCEx_PLL3_Config+0xac>
 800757e:	e7f7      	b.n	8007570 <RCCEx_PLL3_Config+0xc0>
 8007580:	46020c00 	.word	0x46020c00
 8007584:	80800000 	.word	0x80800000

08007588 <HAL_RCCEx_PeriphCLKConfig>:
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007588:	6803      	ldr	r3, [r0, #0]
{
 800758a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800758e:	07da      	lsls	r2, r3, #31
{
 8007590:	4605      	mov	r5, r0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007592:	d508      	bpl.n	80075a6 <HAL_RCCEx_PeriphCLKConfig+0x1e>
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 8007594:	49a5      	ldr	r1, [pc, #660]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007596:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8007598:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800759c:	f022 0203 	bic.w	r2, r2, #3
 80075a0:	4302      	orrs	r2, r0
 80075a2:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80075a6:	079f      	lsls	r7, r3, #30
 80075a8:	d508      	bpl.n	80075bc <HAL_RCCEx_PeriphCLKConfig+0x34>
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 80075aa:	49a0      	ldr	r1, [pc, #640]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075ac:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 80075ae:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075b2:	f022 020c 	bic.w	r2, r2, #12
 80075b6:	4302      	orrs	r2, r0
 80075b8:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 80075bc:	075e      	lsls	r6, r3, #29
 80075be:	d508      	bpl.n	80075d2 <HAL_RCCEx_PeriphCLKConfig+0x4a>
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 80075c0:	499a      	ldr	r1, [pc, #616]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075c2:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80075c4:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075c8:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 80075cc:	4302      	orrs	r2, r0
 80075ce:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 80075d2:	071c      	lsls	r4, r3, #28
 80075d4:	d508      	bpl.n	80075e8 <HAL_RCCEx_PeriphCLKConfig+0x60>
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 80075d6:	4995      	ldr	r1, [pc, #596]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075d8:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 80075da:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075de:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80075e2:	4302      	orrs	r2, r0
 80075e4:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80075e8:	06d8      	lsls	r0, r3, #27
 80075ea:	d508      	bpl.n	80075fe <HAL_RCCEx_PeriphCLKConfig+0x76>
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 80075ec:	498f      	ldr	r1, [pc, #572]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075ee:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 80075f0:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075f4:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80075f8:	4302      	orrs	r2, r0
 80075fa:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80075fe:	0099      	lsls	r1, r3, #2
 8007600:	d508      	bpl.n	8007614 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 8007602:	498a      	ldr	r1, [pc, #552]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007604:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 8007606:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800760a:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800760e:	4302      	orrs	r2, r0
 8007610:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007614:	069a      	lsls	r2, r3, #26
 8007616:	d508      	bpl.n	800762a <HAL_RCCEx_PeriphCLKConfig+0xa2>
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 8007618:	4984      	ldr	r1, [pc, #528]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800761a:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 800761c:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007620:	f022 0207 	bic.w	r2, r2, #7
 8007624:	4302      	orrs	r2, r0
 8007626:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800762a:	065f      	lsls	r7, r3, #25
 800762c:	d508      	bpl.n	8007640 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 800762e:	497f      	ldr	r1, [pc, #508]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007630:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 8007632:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007636:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800763a:	4302      	orrs	r2, r0
 800763c:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007640:	061e      	lsls	r6, r3, #24
 8007642:	d508      	bpl.n	8007656 <HAL_RCCEx_PeriphCLKConfig+0xce>
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 8007644:	4979      	ldr	r1, [pc, #484]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007646:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 8007648:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800764c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007650:	4302      	orrs	r2, r0
 8007652:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8007656:	05dc      	lsls	r4, r3, #23
 8007658:	d508      	bpl.n	800766c <HAL_RCCEx_PeriphCLKConfig+0xe4>
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 800765a:	4974      	ldr	r1, [pc, #464]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800765c:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 800765e:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007662:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8007666:	4302      	orrs	r2, r0
 8007668:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 800766c:	0258      	lsls	r0, r3, #9
 800766e:	d508      	bpl.n	8007682 <HAL_RCCEx_PeriphCLKConfig+0xfa>
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 8007670:	496e      	ldr	r1, [pc, #440]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007672:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 8007674:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007678:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 800767c:	4302      	orrs	r2, r0
 800767e:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 8007682:	0059      	lsls	r1, r3, #1
 8007684:	d508      	bpl.n	8007698 <HAL_RCCEx_PeriphCLKConfig+0x110>
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 8007686:	4969      	ldr	r1, [pc, #420]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007688:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 800768a:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800768e:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8007692:	4302      	orrs	r2, r0
 8007694:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 8007698:	2b00      	cmp	r3, #0
 800769a:	da09      	bge.n	80076b0 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 800769c:	4963      	ldr	r1, [pc, #396]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800769e:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 80076a2:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80076a6:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 80076aa:	4302      	orrs	r2, r0
 80076ac:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 80076b0:	059a      	lsls	r2, r3, #22
 80076b2:	d509      	bpl.n	80076c8 <HAL_RCCEx_PeriphCLKConfig+0x140>
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 80076b4:	495d      	ldr	r1, [pc, #372]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076b6:	f8d5 0084 	ldr.w	r0, [r5, #132]	@ 0x84
 80076ba:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80076be:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80076c2:	4302      	orrs	r2, r0
 80076c4:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 80076c8:	055f      	lsls	r7, r3, #21
 80076ca:	d509      	bpl.n	80076e0 <HAL_RCCEx_PeriphCLKConfig+0x158>
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 80076cc:	4957      	ldr	r1, [pc, #348]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076ce:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 80076d2:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80076d6:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 80076da:	4302      	orrs	r2, r0
 80076dc:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 80076e0:	051e      	lsls	r6, r3, #20
 80076e2:	d509      	bpl.n	80076f8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 80076e4:	4951      	ldr	r1, [pc, #324]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076e6:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 80076ea:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80076ee:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80076f2:	4302      	orrs	r2, r0
 80076f4:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 80076f8:	049c      	lsls	r4, r3, #18
 80076fa:	d527      	bpl.n	800774c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80076fc:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 8007700:	2b40      	cmp	r3, #64	@ 0x40
 8007702:	d025      	beq.n	8007750 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8007704:	d814      	bhi.n	8007730 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8007706:	b34b      	cbz	r3, 800775c <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8007708:	2b20      	cmp	r3, #32
 800770a:	d02f      	beq.n	800776c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800770c:	2601      	movs	r6, #1
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 800770e:	682b      	ldr	r3, [r5, #0]
 8007710:	0458      	lsls	r0, r3, #17
 8007712:	d50b      	bpl.n	800772c <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    switch (pPeriphClkInit->Sai2ClockSelection)
 8007714:	f8d5 30a0 	ldr.w	r3, [r5, #160]	@ 0xa0
 8007718:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800771c:	d058      	beq.n	80077d0 <HAL_RCCEx_PeriphCLKConfig+0x248>
 800771e:	d82a      	bhi.n	8007776 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8007720:	2b00      	cmp	r3, #0
 8007722:	d05b      	beq.n	80077dc <HAL_RCCEx_PeriphCLKConfig+0x254>
 8007724:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007728:	d05e      	beq.n	80077e8 <HAL_RCCEx_PeriphCLKConfig+0x260>
 800772a:	2601      	movs	r6, #1
 800772c:	4634      	mov	r4, r6
 800772e:	e035      	b.n	800779c <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007730:	2b60      	cmp	r3, #96	@ 0x60
 8007732:	d001      	beq.n	8007738 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 8007734:	2b80      	cmp	r3, #128	@ 0x80
 8007736:	d1e9      	bne.n	800770c <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8007738:	4a3c      	ldr	r2, [pc, #240]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800773a:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
 800773e:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007742:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 8007746:	430b      	orrs	r3, r1
 8007748:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 800774c:	2600      	movs	r6, #0
 800774e:	e7de      	b.n	800770e <HAL_RCCEx_PeriphCLKConfig+0x186>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007750:	4a36      	ldr	r2, [pc, #216]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007752:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007754:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007758:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 800775a:	e7ed      	b.n	8007738 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800775c:	f105 0008 	add.w	r0, r5, #8
 8007760:	f7ff fe3a 	bl	80073d8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007764:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 8007766:	2800      	cmp	r0, #0
 8007768:	d1d1      	bne.n	800770e <HAL_RCCEx_PeriphCLKConfig+0x186>
 800776a:	e7e5      	b.n	8007738 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800776c:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007770:	f7ff fe9e 	bl	80074b0 <RCCEx_PLL3_Config>
 8007774:	e7f6      	b.n	8007764 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (pPeriphClkInit->Sai2ClockSelection)
 8007776:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800777a:	d002      	beq.n	8007782 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800777c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007780:	d1d3      	bne.n	800772a <HAL_RCCEx_PeriphCLKConfig+0x1a2>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007782:	4634      	mov	r4, r6
    if (ret == HAL_OK)
 8007784:	2c00      	cmp	r4, #0
 8007786:	d134      	bne.n	80077f2 <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8007788:	4a28      	ldr	r2, [pc, #160]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800778a:	f8d5 10a0 	ldr.w	r1, [r5, #160]	@ 0xa0
 800778e:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007792:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8007796:	430b      	orrs	r3, r1
 8007798:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 800779c:	682b      	ldr	r3, [r5, #0]
 800779e:	0419      	lsls	r1, r3, #16
 80077a0:	d50a      	bpl.n	80077b8 <HAL_RCCEx_PeriphCLKConfig+0x230>
    switch (pPeriphClkInit->AdcDacClockSelection)
 80077a2:	f8d5 30b4 	ldr.w	r3, [r5, #180]	@ 0xb4
 80077a6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80077aa:	d036      	beq.n	800781a <HAL_RCCEx_PeriphCLKConfig+0x292>
 80077ac:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80077b0:	d821      	bhi.n	80077f6 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 80077b2:	b332      	cbz	r2, 8007802 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80077b4:	2601      	movs	r6, #1
 80077b6:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 80077b8:	682b      	ldr	r3, [r5, #0]
 80077ba:	03da      	lsls	r2, r3, #15
 80077bc:	d548      	bpl.n	8007850 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 80077be:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80077c2:	2b04      	cmp	r3, #4
 80077c4:	d85a      	bhi.n	800787c <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 80077c6:	e8df f003 	tbb	[pc, r3]
 80077ca:	3338      	.short	0x3338
 80077cc:	3853      	.short	0x3853
 80077ce:	38          	.byte	0x38
 80077cf:	00          	.byte	0x00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80077d0:	4a16      	ldr	r2, [pc, #88]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80077d2:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80077d4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80077d8:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80077da:	e7d2      	b.n	8007782 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80077dc:	f105 0008 	add.w	r0, r5, #8
 80077e0:	f7ff fdfa 	bl	80073d8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077e4:	4604      	mov	r4, r0
        break;
 80077e6:	e7cd      	b.n	8007784 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077e8:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80077ec:	f7ff fe60 	bl	80074b0 <RCCEx_PLL3_Config>
 80077f0:	e7f8      	b.n	80077e4 <HAL_RCCEx_PeriphCLKConfig+0x25c>
 80077f2:	4626      	mov	r6, r4
 80077f4:	e7d2      	b.n	800779c <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->AdcDacClockSelection)
 80077f6:	f5b2 4f80 	cmp.w	r2, #16384	@ 0x4000
 80077fa:	d002      	beq.n	8007802 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80077fc:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007800:	d1d8      	bne.n	80077b4 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    if (ret == HAL_OK)
 8007802:	b984      	cbnz	r4, 8007826 <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 8007804:	4a09      	ldr	r2, [pc, #36]	@ (800782c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007806:	f8d5 10b4 	ldr.w	r1, [r5, #180]	@ 0xb4
 800780a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 800780e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007812:	430b      	orrs	r3, r1
 8007814:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8007818:	e7ce      	b.n	80077b8 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800781a:	f105 0008 	add.w	r0, r5, #8
 800781e:	f7ff fddb 	bl	80073d8 <RCCEx_PLL2_Config>
 8007822:	4604      	mov	r4, r0
        break;
 8007824:	e7ed      	b.n	8007802 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007826:	4626      	mov	r6, r4
 8007828:	e7c6      	b.n	80077b8 <HAL_RCCEx_PeriphCLKConfig+0x230>
 800782a:	bf00      	nop
 800782c:	46020c00 	.word	0x46020c00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007830:	4a69      	ldr	r2, [pc, #420]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007832:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007834:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007838:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 800783a:	bb14      	cbnz	r4, 8007882 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 800783c:	4a66      	ldr	r2, [pc, #408]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800783e:	f8d5 1094 	ldr.w	r1, [r5, #148]	@ 0x94
 8007842:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007846:	f023 0307 	bic.w	r3, r3, #7
 800784a:	430b      	orrs	r3, r1
 800784c:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 8007850:	682b      	ldr	r3, [r5, #0]
 8007852:	039b      	lsls	r3, r3, #14
 8007854:	d529      	bpl.n	80078aa <HAL_RCCEx_PeriphCLKConfig+0x322>
    switch (pPeriphClkInit->Adf1ClockSelection)
 8007856:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 800785a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800785e:	d07d      	beq.n	800795c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
 8007860:	d811      	bhi.n	8007886 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 8007862:	b1b3      	cbz	r3, 8007892 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007864:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007868:	d072      	beq.n	8007950 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 800786a:	2601      	movs	r6, #1
 800786c:	4634      	mov	r4, r6
 800786e:	e01c      	b.n	80078aa <HAL_RCCEx_PeriphCLKConfig+0x322>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007870:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007874:	f7ff fe1c 	bl	80074b0 <RCCEx_PLL3_Config>
 8007878:	4604      	mov	r4, r0
        break;
 800787a:	e7de      	b.n	800783a <HAL_RCCEx_PeriphCLKConfig+0x2b2>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 800787c:	2601      	movs	r6, #1
 800787e:	4634      	mov	r4, r6
 8007880:	e7e6      	b.n	8007850 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8007882:	4626      	mov	r6, r4
 8007884:	e7e4      	b.n	8007850 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Adf1ClockSelection)
 8007886:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800788a:	d002      	beq.n	8007892 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 800788c:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007890:	d1eb      	bne.n	800786a <HAL_RCCEx_PeriphCLKConfig+0x2e2>
    if (ret == HAL_OK)
 8007892:	2c00      	cmp	r4, #0
 8007894:	d168      	bne.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 8007896:	4a50      	ldr	r2, [pc, #320]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007898:	f8d5 1098 	ldr.w	r1, [r5, #152]	@ 0x98
 800789c:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80078a0:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80078a4:	430b      	orrs	r3, r1
 80078a6:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80078aa:	682b      	ldr	r3, [r5, #0]
 80078ac:	035f      	lsls	r7, r3, #13
 80078ae:	d53c      	bpl.n	800792a <HAL_RCCEx_PeriphCLKConfig+0x3a2>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80078b0:	4b49      	ldr	r3, [pc, #292]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80078b2:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80078b6:	0750      	lsls	r0, r2, #29
 80078b8:	d458      	bmi.n	800796c <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      pwrclkchanged = SET;
 80078ba:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 80078bc:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80078c0:	f042 0204 	orr.w	r2, r2, #4
 80078c4:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 80078c8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80078cc:	f003 0304 	and.w	r3, r3, #4
 80078d0:	9301      	str	r3, [sp, #4]
 80078d2:	9b01      	ldr	r3, [sp, #4]
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 80078d4:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 80079dc <HAL_RCCEx_PeriphCLKConfig+0x454>
 80078d8:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 80078dc:	f043 0301 	orr.w	r3, r3, #1
 80078e0:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
    tickstart = HAL_GetTick();
 80078e4:	f7fc f9da 	bl	8003c9c <HAL_GetTick>
 80078e8:	4681      	mov	r9, r0
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 80078ea:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 80078ee:	07d9      	lsls	r1, r3, #31
 80078f0:	d53e      	bpl.n	8007970 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    if (ret == HAL_OK)
 80078f2:	2c00      	cmp	r4, #0
 80078f4:	d16d      	bne.n	80079d2 <HAL_RCCEx_PeriphCLKConfig+0x44a>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80078f6:	4b38      	ldr	r3, [pc, #224]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80078f8:	f8d5 20d0 	ldr.w	r2, [r5, #208]	@ 0xd0
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80078fc:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007900:	f411 7140 	ands.w	r1, r1, #768	@ 0x300
 8007904:	d13d      	bne.n	8007982 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 8007906:	4a34      	ldr	r2, [pc, #208]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007908:	f8d5 10d0 	ldr.w	r1, [r5, #208]	@ 0xd0
 800790c:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8007910:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007914:	430b      	orrs	r3, r1
 8007916:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    if (pwrclkchanged == SET)
 800791a:	b137      	cbz	r7, 800792a <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      __HAL_RCC_PWR_CLK_DISABLE();
 800791c:	4a2e      	ldr	r2, [pc, #184]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800791e:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8007922:	f023 0304 	bic.w	r3, r3, #4
 8007926:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 800792a:	682b      	ldr	r3, [r5, #0]
 800792c:	02df      	lsls	r7, r3, #11
 800792e:	d567      	bpl.n	8007a00 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->IclkClockSelection)
 8007930:	f8d5 30ac 	ldr.w	r3, [r5, #172]	@ 0xac
 8007934:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007938:	f000 8165 	beq.w	8007c06 <HAL_RCCEx_PeriphCLKConfig+0x67e>
 800793c:	d850      	bhi.n	80079e0 <HAL_RCCEx_PeriphCLKConfig+0x458>
 800793e:	2b00      	cmp	r3, #0
 8007940:	d051      	beq.n	80079e6 <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007942:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8007946:	f000 8158 	beq.w	8007bfa <HAL_RCCEx_PeriphCLKConfig+0x672>
 800794a:	2601      	movs	r6, #1
 800794c:	4634      	mov	r4, r6
 800794e:	e057      	b.n	8007a00 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007950:	4a21      	ldr	r2, [pc, #132]	@ (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007952:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007954:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007958:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 800795a:	e79a      	b.n	8007892 <HAL_RCCEx_PeriphCLKConfig+0x30a>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800795c:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007960:	f7ff fda6 	bl	80074b0 <RCCEx_PLL3_Config>
 8007964:	4604      	mov	r4, r0
        break;
 8007966:	e794      	b.n	8007892 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007968:	4626      	mov	r6, r4
 800796a:	e79e      	b.n	80078aa <HAL_RCCEx_PeriphCLKConfig+0x322>
    FlagStatus       pwrclkchanged = RESET;
 800796c:	2700      	movs	r7, #0
 800796e:	e7b1      	b.n	80078d4 <HAL_RCCEx_PeriphCLKConfig+0x34c>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007970:	f7fc f994 	bl	8003c9c <HAL_GetTick>
 8007974:	eba0 0009 	sub.w	r0, r0, r9
 8007978:	2802      	cmp	r0, #2
 800797a:	d9b6      	bls.n	80078ea <HAL_RCCEx_PeriphCLKConfig+0x362>
        ret = HAL_TIMEOUT;
 800797c:	2603      	movs	r6, #3
 800797e:	4634      	mov	r4, r6
 8007980:	e7cb      	b.n	800791a <HAL_RCCEx_PeriphCLKConfig+0x392>
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007982:	4291      	cmp	r1, r2
 8007984:	d011      	beq.n	80079aa <HAL_RCCEx_PeriphCLKConfig+0x422>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8007986:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_FORCE();
 800798a:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 800798e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8007992:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 8007996:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 800799a:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 800799e:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 80079a2:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        RCC->BDCR = tmpregister;
 80079a6:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 80079aa:	07d2      	lsls	r2, r2, #31
 80079ac:	d5ab      	bpl.n	8007906 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        tickstart = HAL_GetTick();
 80079ae:	f7fc f975 	bl	8003c9c <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80079b2:	f241 3a88 	movw	sl, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80079b6:	4680      	mov	r8, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80079b8:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 80079d8 <HAL_RCCEx_PeriphCLKConfig+0x450>
 80079bc:	f8d9 30f0 	ldr.w	r3, [r9, #240]	@ 0xf0
 80079c0:	079b      	lsls	r3, r3, #30
 80079c2:	d4a0      	bmi.n	8007906 <HAL_RCCEx_PeriphCLKConfig+0x37e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80079c4:	f7fc f96a 	bl	8003c9c <HAL_GetTick>
 80079c8:	eba0 0008 	sub.w	r0, r0, r8
 80079cc:	4550      	cmp	r0, sl
 80079ce:	d9f5      	bls.n	80079bc <HAL_RCCEx_PeriphCLKConfig+0x434>
 80079d0:	e7d4      	b.n	800797c <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 80079d2:	4626      	mov	r6, r4
 80079d4:	e7a1      	b.n	800791a <HAL_RCCEx_PeriphCLKConfig+0x392>
 80079d6:	bf00      	nop
 80079d8:	46020c00 	.word	0x46020c00
 80079dc:	46020800 	.word	0x46020800
    switch (pPeriphClkInit->IclkClockSelection)
 80079e0:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80079e4:	d1b1      	bne.n	800794a <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    if (ret == HAL_OK)
 80079e6:	2c00      	cmp	r4, #0
 80079e8:	f040 8113 	bne.w	8007c12 <HAL_RCCEx_PeriphCLKConfig+0x68a>
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 80079ec:	4ab8      	ldr	r2, [pc, #736]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80079ee:	f8d5 10ac 	ldr.w	r1, [r5, #172]	@ 0xac
 80079f2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 80079f6:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80079fa:	430b      	orrs	r3, r1
 80079fc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007a00:	682b      	ldr	r3, [r5, #0]
 8007a02:	0318      	lsls	r0, r3, #12
 8007a04:	d513      	bpl.n	8007a2e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (pPeriphClkInit->RngClockSelection)
 8007a06:	f8d5 10a4 	ldr.w	r1, [r5, #164]	@ 0xa4
 8007a0a:	f431 5280 	bics.w	r2, r1, #4096	@ 0x1000
 8007a0e:	d003      	beq.n	8007a18 <HAL_RCCEx_PeriphCLKConfig+0x490>
 8007a10:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
 8007a14:	f040 80ff 	bne.w	8007c16 <HAL_RCCEx_PeriphCLKConfig+0x68e>
    if (ret == HAL_OK)
 8007a18:	2c00      	cmp	r4, #0
 8007a1a:	f040 80ff 	bne.w	8007c1c <HAL_RCCEx_PeriphCLKConfig+0x694>
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8007a1e:	48ac      	ldr	r0, [pc, #688]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a20:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
 8007a24:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007a28:	430a      	orrs	r2, r1
 8007a2a:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 8007a2e:	04d9      	lsls	r1, r3, #19
 8007a30:	d509      	bpl.n	8007a46 <HAL_RCCEx_PeriphCLKConfig+0x4be>
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 8007a32:	49a7      	ldr	r1, [pc, #668]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a34:	f8d5 00a8 	ldr.w	r0, [r5, #168]	@ 0xa8
 8007a38:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007a3c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007a40:	4302      	orrs	r2, r0
 8007a42:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 8007a46:	029a      	lsls	r2, r3, #10
 8007a48:	d510      	bpl.n	8007a6c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 8007a4a:	f8d5 00b0 	ldr.w	r0, [r5, #176]	@ 0xb0
 8007a4e:	49a0      	ldr	r1, [pc, #640]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a50:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007a54:	bf02      	ittt	eq
 8007a56:	6a8a      	ldreq	r2, [r1, #40]	@ 0x28
 8007a58:	f442 3280 	orreq.w	r2, r2, #65536	@ 0x10000
 8007a5c:	628a      	streq	r2, [r1, #40]	@ 0x28
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 8007a5e:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007a62:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007a66:	4302      	orrs	r2, r0
 8007a68:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8007a6c:	021f      	lsls	r7, r3, #8
 8007a6e:	d509      	bpl.n	8007a84 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8007a70:	4997      	ldr	r1, [pc, #604]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a72:	f8d5 00c4 	ldr.w	r0, [r5, #196]	@ 0xc4
 8007a76:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007a7a:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007a7e:	4302      	orrs	r2, r0
 8007a80:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8007a84:	01d8      	lsls	r0, r3, #7
 8007a86:	d509      	bpl.n	8007a9c <HAL_RCCEx_PeriphCLKConfig+0x514>
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8007a88:	4991      	ldr	r1, [pc, #580]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a8a:	f8d5 00c8 	ldr.w	r0, [r5, #200]	@ 0xc8
 8007a8e:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007a92:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007a96:	4302      	orrs	r2, r0
 8007a98:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8007a9c:	0199      	lsls	r1, r3, #6
 8007a9e:	d509      	bpl.n	8007ab4 <HAL_RCCEx_PeriphCLKConfig+0x52c>
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8007aa0:	498b      	ldr	r1, [pc, #556]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007aa2:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 8007aa6:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007aaa:	f022 0218 	bic.w	r2, r2, #24
 8007aae:	4302      	orrs	r2, r0
 8007ab0:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007ab4:	015a      	lsls	r2, r3, #5
 8007ab6:	d517      	bpl.n	8007ae8 <HAL_RCCEx_PeriphCLKConfig+0x560>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 8007ab8:	f8d5 30bc 	ldr.w	r3, [r5, #188]	@ 0xbc
 8007abc:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007ac0:	f040 80ae 	bne.w	8007c20 <HAL_RCCEx_PeriphCLKConfig+0x698>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ac4:	4a82      	ldr	r2, [pc, #520]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ac6:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007ac8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007acc:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007ace:	2c00      	cmp	r4, #0
 8007ad0:	f040 80b0 	bne.w	8007c34 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8007ad4:	4a7e      	ldr	r2, [pc, #504]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ad6:	f8d5 10bc 	ldr.w	r1, [r5, #188]	@ 0xbc
 8007ada:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007ade:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007ae2:	430b      	orrs	r3, r1
 8007ae4:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 8007ae8:	686b      	ldr	r3, [r5, #4]
 8007aea:	07db      	lsls	r3, r3, #31
 8007aec:	d510      	bpl.n	8007b10 <HAL_RCCEx_PeriphCLKConfig+0x588>
    switch (pPeriphClkInit->HspiClockSelection)
 8007aee:	f8d5 30c0 	ldr.w	r3, [r5, #192]	@ 0xc0
 8007af2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007af6:	f000 80b9 	beq.w	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x6e4>
 8007afa:	f200 809d 	bhi.w	8007c38 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
 8007afe:	2b00      	cmp	r3, #0
 8007b00:	f000 80a8 	beq.w	8007c54 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007b04:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007b08:	f000 809f 	beq.w	8007c4a <HAL_RCCEx_PeriphCLKConfig+0x6c2>
 8007b0c:	2601      	movs	r6, #1
 8007b0e:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 8007b10:	682b      	ldr	r3, [r5, #0]
 8007b12:	011f      	lsls	r7, r3, #4
 8007b14:	d50e      	bpl.n	8007b34 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
    switch (pPeriphClkInit->Fdcan1ClockSelection)
 8007b16:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8007b1a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007b1e:	f000 80ad 	beq.w	8007c7c <HAL_RCCEx_PeriphCLKConfig+0x6f4>
 8007b22:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007b26:	f000 80ba 	beq.w	8007c9e <HAL_RCCEx_PeriphCLKConfig+0x716>
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	f000 80ab 	beq.w	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007b30:	2601      	movs	r6, #1
 8007b32:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 8007b34:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007b38:	00d8      	lsls	r0, r3, #3
 8007b3a:	d509      	bpl.n	8007b50 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 8007b3c:	4a64      	ldr	r2, [pc, #400]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b3e:	f8d5 00b8 	ldr.w	r0, [r5, #184]	@ 0xb8
 8007b42:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007b46:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007b4a:	4303      	orrs	r3, r0
 8007b4c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007b50:	0789      	lsls	r1, r1, #30
 8007b52:	d51a      	bpl.n	8007b8a <HAL_RCCEx_PeriphCLKConfig+0x602>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007b54:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 8007b58:	2b00      	cmp	r3, #0
 8007b5a:	f000 80a8 	beq.w	8007cae <HAL_RCCEx_PeriphCLKConfig+0x726>
 8007b5e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007b62:	f040 80a9 	bne.w	8007cb8 <HAL_RCCEx_PeriphCLKConfig+0x730>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007b66:	f105 0008 	add.w	r0, r5, #8
 8007b6a:	f7ff fc35 	bl	80073d8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007b6e:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007b70:	2800      	cmp	r0, #0
 8007b72:	f040 80a4 	bne.w	8007cbe <HAL_RCCEx_PeriphCLKConfig+0x736>
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8007b76:	4a56      	ldr	r2, [pc, #344]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b78:	f8d5 10d4 	ldr.w	r1, [r5, #212]	@ 0xd4
 8007b7c:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007b80:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007b84:	430b      	orrs	r3, r1
 8007b86:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8007b8a:	686b      	ldr	r3, [r5, #4]
 8007b8c:	075a      	lsls	r2, r3, #29
 8007b8e:	d514      	bpl.n	8007bba <HAL_RCCEx_PeriphCLKConfig+0x632>
    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8007b90:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
 8007b94:	b923      	cbnz	r3, 8007ba0 <HAL_RCCEx_PeriphCLKConfig+0x618>
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007b96:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007b9a:	f7ff fc89 	bl	80074b0 <RCCEx_PLL3_Config>
 8007b9e:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007ba0:	2c00      	cmp	r4, #0
 8007ba2:	f040 808e 	bne.w	8007cc2 <HAL_RCCEx_PeriphCLKConfig+0x73a>
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 8007ba6:	4a4a      	ldr	r2, [pc, #296]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ba8:	f8d5 10d8 	ldr.w	r1, [r5, #216]	@ 0xd8
 8007bac:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007bb0:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007bb4:	430b      	orrs	r3, r1
 8007bb6:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 8007bba:	686b      	ldr	r3, [r5, #4]
 8007bbc:	071b      	lsls	r3, r3, #28
 8007bbe:	d517      	bpl.n	8007bf0 <HAL_RCCEx_PeriphCLKConfig+0x668>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007bc0:	f8d5 20dc 	ldr.w	r2, [r5, #220]	@ 0xdc
 8007bc4:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8007bc8:	d009      	beq.n	8007bde <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007bca:	d87c      	bhi.n	8007cc6 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8007bcc:	b13a      	cbz	r2, 8007bde <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007bce:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8007bd2:	d17b      	bne.n	8007ccc <HAL_RCCEx_PeriphCLKConfig+0x744>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007bd4:	493e      	ldr	r1, [pc, #248]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bd6:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8007bd8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007bdc:	628b      	str	r3, [r1, #40]	@ 0x28
    if (ret == HAL_OK)
 8007bde:	b944      	cbnz	r4, 8007bf2 <HAL_RCCEx_PeriphCLKConfig+0x66a>
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 8007be0:	493b      	ldr	r1, [pc, #236]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007be2:	f8d1 30e4 	ldr.w	r3, [r1, #228]	@ 0xe4
 8007be6:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8007bea:	4313      	orrs	r3, r2
 8007bec:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 8007bf0:	4634      	mov	r4, r6
}
 8007bf2:	4620      	mov	r0, r4
 8007bf4:	b002      	add	sp, #8
 8007bf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007bfa:	f105 0008 	add.w	r0, r5, #8
 8007bfe:	f7ff fbeb 	bl	80073d8 <RCCEx_PLL2_Config>
 8007c02:	4604      	mov	r4, r0
        break;
 8007c04:	e6ef      	b.n	80079e6 <HAL_RCCEx_PeriphCLKConfig+0x45e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c06:	4a32      	ldr	r2, [pc, #200]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c08:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c0a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c0e:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007c10:	e6e9      	b.n	80079e6 <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007c12:	4626      	mov	r6, r4
 8007c14:	e6f4      	b.n	8007a00 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->RngClockSelection)
 8007c16:	2601      	movs	r6, #1
 8007c18:	4634      	mov	r4, r6
 8007c1a:	e708      	b.n	8007a2e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8007c1c:	4626      	mov	r6, r4
 8007c1e:	e706      	b.n	8007a2e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 8007c20:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007c24:	f47f af53 	bne.w	8007ace <HAL_RCCEx_PeriphCLKConfig+0x546>
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c28:	f105 0008 	add.w	r0, r5, #8
 8007c2c:	f7ff fbd4 	bl	80073d8 <RCCEx_PLL2_Config>
 8007c30:	4604      	mov	r4, r0
 8007c32:	e74c      	b.n	8007ace <HAL_RCCEx_PeriphCLKConfig+0x546>
 8007c34:	4626      	mov	r6, r4
 8007c36:	e757      	b.n	8007ae8 <HAL_RCCEx_PeriphCLKConfig+0x560>
    switch (pPeriphClkInit->HspiClockSelection)
 8007c38:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8007c3c:	f47f af66 	bne.w	8007b0c <HAL_RCCEx_PeriphCLKConfig+0x584>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c40:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007c44:	f7ff fc34 	bl	80074b0 <RCCEx_PLL3_Config>
 8007c48:	e014      	b.n	8007c74 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c4a:	4a21      	ldr	r2, [pc, #132]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c4c:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c4e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c52:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c54:	b984      	cbnz	r4, 8007c78 <HAL_RCCEx_PeriphCLKConfig+0x6f0>
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 8007c56:	4a1e      	ldr	r2, [pc, #120]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c58:	f8d5 10c0 	ldr.w	r1, [r5, #192]	@ 0xc0
 8007c5c:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007c60:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8007c64:	430b      	orrs	r3, r1
 8007c66:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8007c6a:	e751      	b.n	8007b10 <HAL_RCCEx_PeriphCLKConfig+0x588>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c6c:	f105 0008 	add.w	r0, r5, #8
 8007c70:	f7ff fbb2 	bl	80073d8 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c74:	4604      	mov	r4, r0
        break;
 8007c76:	e7ed      	b.n	8007c54 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007c78:	4626      	mov	r6, r4
 8007c7a:	e749      	b.n	8007b10 <HAL_RCCEx_PeriphCLKConfig+0x588>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c7c:	4a14      	ldr	r2, [pc, #80]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c7e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c80:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c84:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c86:	b984      	cbnz	r4, 8007caa <HAL_RCCEx_PeriphCLKConfig+0x722>
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 8007c88:	4a11      	ldr	r2, [pc, #68]	@ (8007cd0 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c8a:	f8d5 1090 	ldr.w	r1, [r5, #144]	@ 0x90
 8007c8e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007c92:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8007c96:	430b      	orrs	r3, r1
 8007c98:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8007c9c:	e74a      	b.n	8007b34 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c9e:	f105 0008 	add.w	r0, r5, #8
 8007ca2:	f7ff fb99 	bl	80073d8 <RCCEx_PLL2_Config>
 8007ca6:	4604      	mov	r4, r0
        break;
 8007ca8:	e7ed      	b.n	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007caa:	4626      	mov	r6, r4
 8007cac:	e742      	b.n	8007b34 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007cae:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007cb2:	f7ff fbfd 	bl	80074b0 <RCCEx_PLL3_Config>
 8007cb6:	e75a      	b.n	8007b6e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007cb8:	2601      	movs	r6, #1
 8007cba:	4634      	mov	r4, r6
 8007cbc:	e765      	b.n	8007b8a <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007cbe:	4606      	mov	r6, r0
 8007cc0:	e763      	b.n	8007b8a <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007cc2:	4626      	mov	r6, r4
 8007cc4:	e779      	b.n	8007bba <HAL_RCCEx_PeriphCLKConfig+0x632>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007cc6:	f1b2 4f40 	cmp.w	r2, #3221225472	@ 0xc0000000
 8007cca:	e782      	b.n	8007bd2 <HAL_RCCEx_PeriphCLKConfig+0x64a>
 8007ccc:	2401      	movs	r4, #1
 8007cce:	e790      	b.n	8007bf2 <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8007cd0:	46020c00 	.word	0x46020c00

08007cd4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007cd4:	4770      	bx	lr
	...

08007cd8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007cd8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007cdc:	2b01      	cmp	r3, #1
 8007cde:	d145      	bne.n	8007d6c <HAL_TIM_Base_Start_IT+0x94>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007ce0:	2302      	movs	r3, #2
 8007ce2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007ce6:	6803      	ldr	r3, [r0, #0]
 8007ce8:	68da      	ldr	r2, [r3, #12]
 8007cea:	f042 0201 	orr.w	r2, r2, #1
 8007cee:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007cf0:	4a1f      	ldr	r2, [pc, #124]	@ (8007d70 <HAL_TIM_Base_Start_IT+0x98>)
 8007cf2:	4293      	cmp	r3, r2
 8007cf4:	d02c      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007cf6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007cfa:	4293      	cmp	r3, r2
 8007cfc:	d028      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007cfe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007d02:	d025      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d04:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007d08:	d022      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d0a:	4a1a      	ldr	r2, [pc, #104]	@ (8007d74 <HAL_TIM_Base_Start_IT+0x9c>)
 8007d0c:	4293      	cmp	r3, r2
 8007d0e:	d01f      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d10:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d14:	4293      	cmp	r3, r2
 8007d16:	d01b      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d18:	4a17      	ldr	r2, [pc, #92]	@ (8007d78 <HAL_TIM_Base_Start_IT+0xa0>)
 8007d1a:	4293      	cmp	r3, r2
 8007d1c:	d018      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d1e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d22:	4293      	cmp	r3, r2
 8007d24:	d014      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d26:	4a15      	ldr	r2, [pc, #84]	@ (8007d7c <HAL_TIM_Base_Start_IT+0xa4>)
 8007d28:	4293      	cmp	r3, r2
 8007d2a:	d011      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d2c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d30:	4293      	cmp	r3, r2
 8007d32:	d00d      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d34:	4a12      	ldr	r2, [pc, #72]	@ (8007d80 <HAL_TIM_Base_Start_IT+0xa8>)
 8007d36:	4293      	cmp	r3, r2
 8007d38:	d00a      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d3a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d3e:	4293      	cmp	r3, r2
 8007d40:	d006      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d42:	4a10      	ldr	r2, [pc, #64]	@ (8007d84 <HAL_TIM_Base_Start_IT+0xac>)
 8007d44:	4293      	cmp	r3, r2
 8007d46:	d003      	beq.n	8007d50 <HAL_TIM_Base_Start_IT+0x78>
 8007d48:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d4c:	4293      	cmp	r3, r2
 8007d4e:	d107      	bne.n	8007d60 <HAL_TIM_Base_Start_IT+0x88>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007d50:	6899      	ldr	r1, [r3, #8]
 8007d52:	4a0d      	ldr	r2, [pc, #52]	@ (8007d88 <HAL_TIM_Base_Start_IT+0xb0>)
 8007d54:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d56:	2a06      	cmp	r2, #6
 8007d58:	d006      	beq.n	8007d68 <HAL_TIM_Base_Start_IT+0x90>
 8007d5a:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8007d5e:	d003      	beq.n	8007d68 <HAL_TIM_Base_Start_IT+0x90>
    {
      __HAL_TIM_ENABLE(htim);
 8007d60:	681a      	ldr	r2, [r3, #0]
 8007d62:	f042 0201 	orr.w	r2, r2, #1
 8007d66:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007d68:	2000      	movs	r0, #0
 8007d6a:	4770      	bx	lr
    return HAL_ERROR;
 8007d6c:	2001      	movs	r0, #1
}
 8007d6e:	4770      	bx	lr
 8007d70:	40012c00 	.word	0x40012c00
 8007d74:	40000400 	.word	0x40000400
 8007d78:	40000800 	.word	0x40000800
 8007d7c:	40000c00 	.word	0x40000c00
 8007d80:	40013400 	.word	0x40013400
 8007d84:	40014000 	.word	0x40014000
 8007d88:	00010007 	.word	0x00010007

08007d8c <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007d8c:	4770      	bx	lr

08007d8e <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007d8e:	4770      	bx	lr

08007d90 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007d90:	4770      	bx	lr

08007d92 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007d92:	4770      	bx	lr

08007d94 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007d94:	6803      	ldr	r3, [r0, #0]
{
 8007d96:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007d98:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007d9a:	691e      	ldr	r6, [r3, #16]
{
 8007d9c:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007d9e:	07b2      	lsls	r2, r6, #30
 8007da0:	d50e      	bpl.n	8007dc0 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007da2:	07a9      	lsls	r1, r5, #30
 8007da4:	d50c      	bpl.n	8007dc0 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007da6:	f06f 0202 	mvn.w	r2, #2
 8007daa:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007dac:	2201      	movs	r2, #1
 8007dae:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007db0:	699b      	ldr	r3, [r3, #24]
 8007db2:	079a      	lsls	r2, r3, #30
 8007db4:	f000 80a4 	beq.w	8007f00 <HAL_TIM_IRQHandler+0x16c>
          HAL_TIM_IC_CaptureCallback(htim);
 8007db8:	f7ff ffe9 	bl	8007d8e <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007dbc:	2300      	movs	r3, #0
 8007dbe:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007dc0:	0773      	lsls	r3, r6, #29
 8007dc2:	d511      	bpl.n	8007de8 <HAL_TIM_IRQHandler+0x54>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007dc4:	0768      	lsls	r0, r5, #29
 8007dc6:	d50f      	bpl.n	8007de8 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007dc8:	f06f 0204 	mvn.w	r2, #4
 8007dcc:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007dce:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007dd0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007dd2:	2202      	movs	r2, #2
 8007dd4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007dd6:	699b      	ldr	r3, [r3, #24]
 8007dd8:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007ddc:	f000 8096 	beq.w	8007f0c <HAL_TIM_IRQHandler+0x178>
        HAL_TIM_IC_CaptureCallback(htim);
 8007de0:	f7ff ffd5 	bl	8007d8e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007de4:	2300      	movs	r3, #0
 8007de6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007de8:	0731      	lsls	r1, r6, #28
 8007dea:	d510      	bpl.n	8007e0e <HAL_TIM_IRQHandler+0x7a>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007dec:	072a      	lsls	r2, r5, #28
 8007dee:	d50e      	bpl.n	8007e0e <HAL_TIM_IRQHandler+0x7a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007df0:	f06f 0208 	mvn.w	r2, #8
 8007df4:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007df6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007df8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007dfa:	2204      	movs	r2, #4
 8007dfc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007dfe:	69db      	ldr	r3, [r3, #28]
 8007e00:	079b      	lsls	r3, r3, #30
 8007e02:	f000 8089 	beq.w	8007f18 <HAL_TIM_IRQHandler+0x184>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e06:	f7ff ffc2 	bl	8007d8e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e0a:	2300      	movs	r3, #0
 8007e0c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007e0e:	06f1      	lsls	r1, r6, #27
 8007e10:	d510      	bpl.n	8007e34 <HAL_TIM_IRQHandler+0xa0>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007e12:	06ea      	lsls	r2, r5, #27
 8007e14:	d50e      	bpl.n	8007e34 <HAL_TIM_IRQHandler+0xa0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007e16:	f06f 0210 	mvn.w	r2, #16
 8007e1a:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e1c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007e1e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007e20:	2208      	movs	r2, #8
 8007e22:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007e24:	69db      	ldr	r3, [r3, #28]
 8007e26:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007e2a:	d07b      	beq.n	8007f24 <HAL_TIM_IRQHandler+0x190>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e2c:	f7ff ffaf 	bl	8007d8e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e30:	2300      	movs	r3, #0
 8007e32:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007e34:	07f3      	lsls	r3, r6, #31
 8007e36:	d508      	bpl.n	8007e4a <HAL_TIM_IRQHandler+0xb6>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8007e38:	07e8      	lsls	r0, r5, #31
 8007e3a:	d506      	bpl.n	8007e4a <HAL_TIM_IRQHandler+0xb6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e3c:	f06f 0201 	mvn.w	r2, #1
 8007e40:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e42:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e44:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e46:	f7f8 fcc3 	bl	80007d0 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8007e4a:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
 8007e4e:	d008      	beq.n	8007e62 <HAL_TIM_IRQHandler+0xce>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007e50:	0629      	lsls	r1, r5, #24
 8007e52:	d506      	bpl.n	8007e62 <HAL_TIM_IRQHandler+0xce>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007e54:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007e58:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_BreakCallback(htim);
 8007e5a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007e5c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007e5e:	f000 f952 	bl	8008106 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8007e62:	05f2      	lsls	r2, r6, #23
 8007e64:	d508      	bpl.n	8007e78 <HAL_TIM_IRQHandler+0xe4>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007e66:	062b      	lsls	r3, r5, #24
 8007e68:	d506      	bpl.n	8007e78 <HAL_TIM_IRQHandler+0xe4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007e6a:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007e6e:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_Break2Callback(htim);
 8007e70:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007e72:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8007e74:	f000 f948 	bl	8008108 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007e78:	0670      	lsls	r0, r6, #25
 8007e7a:	d508      	bpl.n	8007e8e <HAL_TIM_IRQHandler+0xfa>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007e7c:	0669      	lsls	r1, r5, #25
 8007e7e:	d506      	bpl.n	8007e8e <HAL_TIM_IRQHandler+0xfa>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007e80:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007e84:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_TriggerCallback(htim);
 8007e86:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007e88:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007e8a:	f7ff ff82 	bl	8007d92 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007e8e:	06b2      	lsls	r2, r6, #26
 8007e90:	d508      	bpl.n	8007ea4 <HAL_TIM_IRQHandler+0x110>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007e92:	06ab      	lsls	r3, r5, #26
 8007e94:	d506      	bpl.n	8007ea4 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007e96:	f06f 0220 	mvn.w	r2, #32
 8007e9a:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_CommutCallback(htim);
 8007e9c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007e9e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8007ea0:	f000 f930 	bl	8008104 <HAL_TIMEx_CommutCallback>
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8007ea4:	02f0      	lsls	r0, r6, #11
 8007ea6:	d508      	bpl.n	8007eba <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8007ea8:	02e9      	lsls	r1, r5, #11
 8007eaa:	d506      	bpl.n	8007eba <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007eac:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8007eb0:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007eb2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007eb4:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007eb6:	f000 f928 	bl	800810a <HAL_TIMEx_EncoderIndexCallback>
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8007eba:	02b2      	lsls	r2, r6, #10
 8007ebc:	d508      	bpl.n	8007ed0 <HAL_TIM_IRQHandler+0x13c>
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8007ebe:	02ab      	lsls	r3, r5, #10
 8007ec0:	d506      	bpl.n	8007ed0 <HAL_TIM_IRQHandler+0x13c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007ec2:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8007ec6:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007ec8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007eca:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007ecc:	f000 f91e 	bl	800810c <HAL_TIMEx_DirectionChangeCallback>
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8007ed0:	0270      	lsls	r0, r6, #9
 8007ed2:	d508      	bpl.n	8007ee6 <HAL_TIM_IRQHandler+0x152>
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8007ed4:	0269      	lsls	r1, r5, #9
 8007ed6:	d506      	bpl.n	8007ee6 <HAL_TIM_IRQHandler+0x152>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007ed8:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8007edc:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007ede:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007ee0:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007ee2:	f000 f914 	bl	800810e <HAL_TIMEx_IndexErrorCallback>
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8007ee6:	0232      	lsls	r2, r6, #8
 8007ee8:	d522      	bpl.n	8007f30 <HAL_TIM_IRQHandler+0x19c>
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8007eea:	022b      	lsls	r3, r5, #8
 8007eec:	d520      	bpl.n	8007f30 <HAL_TIM_IRQHandler+0x19c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007eee:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8007ef2:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007ef4:	4620      	mov	r0, r4
}
 8007ef6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007efa:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007efc:	f000 b908 	b.w	8008110 <HAL_TIMEx_TransitionErrorCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f00:	f7ff ff44 	bl	8007d8c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f04:	4620      	mov	r0, r4
 8007f06:	f7ff ff43 	bl	8007d90 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f0a:	e757      	b.n	8007dbc <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f0c:	f7ff ff3e 	bl	8007d8c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f10:	4620      	mov	r0, r4
 8007f12:	f7ff ff3d 	bl	8007d90 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f16:	e765      	b.n	8007de4 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f18:	f7ff ff38 	bl	8007d8c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f1c:	4620      	mov	r0, r4
 8007f1e:	f7ff ff37 	bl	8007d90 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f22:	e772      	b.n	8007e0a <HAL_TIM_IRQHandler+0x76>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f24:	f7ff ff32 	bl	8007d8c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f28:	4620      	mov	r0, r4
 8007f2a:	f7ff ff31 	bl	8007d90 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f2e:	e77f      	b.n	8007e30 <HAL_TIM_IRQHandler+0x9c>
}
 8007f30:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f34 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f34:	4a53      	ldr	r2, [pc, #332]	@ (8008084 <TIM_Base_SetConfig+0x150>)
  tmpcr1 = TIMx->CR1;
 8007f36:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f38:	4290      	cmp	r0, r2
 8007f3a:	d025      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f3c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f40:	4290      	cmp	r0, r2
 8007f42:	d021      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f44:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007f48:	d01e      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f4a:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007f4e:	d01b      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f50:	4a4d      	ldr	r2, [pc, #308]	@ (8008088 <TIM_Base_SetConfig+0x154>)
 8007f52:	4290      	cmp	r0, r2
 8007f54:	d018      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f56:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f5a:	4290      	cmp	r0, r2
 8007f5c:	d014      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f5e:	4a4b      	ldr	r2, [pc, #300]	@ (800808c <TIM_Base_SetConfig+0x158>)
 8007f60:	4290      	cmp	r0, r2
 8007f62:	d011      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f64:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f68:	4290      	cmp	r0, r2
 8007f6a:	d00d      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f6c:	4a48      	ldr	r2, [pc, #288]	@ (8008090 <TIM_Base_SetConfig+0x15c>)
 8007f6e:	4290      	cmp	r0, r2
 8007f70:	d00a      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f72:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f76:	4290      	cmp	r0, r2
 8007f78:	d006      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f7a:	4a46      	ldr	r2, [pc, #280]	@ (8008094 <TIM_Base_SetConfig+0x160>)
 8007f7c:	4290      	cmp	r0, r2
 8007f7e:	d003      	beq.n	8007f88 <TIM_Base_SetConfig+0x54>
 8007f80:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f84:	4290      	cmp	r0, r2
 8007f86:	d12c      	bne.n	8007fe2 <TIM_Base_SetConfig+0xae>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007f88:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007f8a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007f8e:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007f90:	4a3c      	ldr	r2, [pc, #240]	@ (8008084 <TIM_Base_SetConfig+0x150>)
 8007f92:	4290      	cmp	r0, r2
 8007f94:	d03a      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007f96:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f9a:	4290      	cmp	r0, r2
 8007f9c:	d036      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007f9e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007fa2:	d033      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fa4:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007fa8:	d030      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007faa:	4a37      	ldr	r2, [pc, #220]	@ (8008088 <TIM_Base_SetConfig+0x154>)
 8007fac:	4290      	cmp	r0, r2
 8007fae:	d02d      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fb0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fb4:	4290      	cmp	r0, r2
 8007fb6:	d029      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fb8:	4a34      	ldr	r2, [pc, #208]	@ (800808c <TIM_Base_SetConfig+0x158>)
 8007fba:	4290      	cmp	r0, r2
 8007fbc:	d026      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fbe:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fc2:	4290      	cmp	r0, r2
 8007fc4:	d022      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fc6:	4a32      	ldr	r2, [pc, #200]	@ (8008090 <TIM_Base_SetConfig+0x15c>)
 8007fc8:	4290      	cmp	r0, r2
 8007fca:	d01f      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fcc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fd0:	4290      	cmp	r0, r2
 8007fd2:	d01b      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fd4:	4a2f      	ldr	r2, [pc, #188]	@ (8008094 <TIM_Base_SetConfig+0x160>)
 8007fd6:	4290      	cmp	r0, r2
 8007fd8:	d018      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fda:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fde:	4290      	cmp	r0, r2
 8007fe0:	d014      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fe2:	4a2d      	ldr	r2, [pc, #180]	@ (8008098 <TIM_Base_SetConfig+0x164>)
 8007fe4:	4290      	cmp	r0, r2
 8007fe6:	d011      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007fe8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fec:	4290      	cmp	r0, r2
 8007fee:	d00d      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007ff0:	4a2a      	ldr	r2, [pc, #168]	@ (800809c <TIM_Base_SetConfig+0x168>)
 8007ff2:	4290      	cmp	r0, r2
 8007ff4:	d00a      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007ff6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007ffa:	4290      	cmp	r0, r2
 8007ffc:	d006      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8007ffe:	4a28      	ldr	r2, [pc, #160]	@ (80080a0 <TIM_Base_SetConfig+0x16c>)
 8008000:	4290      	cmp	r0, r2
 8008002:	d003      	beq.n	800800c <TIM_Base_SetConfig+0xd8>
 8008004:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008008:	4290      	cmp	r0, r2
 800800a:	d103      	bne.n	8008014 <TIM_Base_SetConfig+0xe0>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800800c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800800e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008012:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008014:	694a      	ldr	r2, [r1, #20]
 8008016:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800801a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800801c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800801e:	688b      	ldr	r3, [r1, #8]
 8008020:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008022:	680b      	ldr	r3, [r1, #0]
 8008024:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008026:	4b17      	ldr	r3, [pc, #92]	@ (8008084 <TIM_Base_SetConfig+0x150>)
 8008028:	4298      	cmp	r0, r3
 800802a:	d01f      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 800802c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008030:	4298      	cmp	r0, r3
 8008032:	d01b      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 8008034:	4b17      	ldr	r3, [pc, #92]	@ (8008094 <TIM_Base_SetConfig+0x160>)
 8008036:	4298      	cmp	r0, r3
 8008038:	d018      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 800803a:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800803e:	4298      	cmp	r0, r3
 8008040:	d014      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 8008042:	4b15      	ldr	r3, [pc, #84]	@ (8008098 <TIM_Base_SetConfig+0x164>)
 8008044:	4298      	cmp	r0, r3
 8008046:	d011      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 8008048:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800804c:	4298      	cmp	r0, r3
 800804e:	d00d      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 8008050:	4b12      	ldr	r3, [pc, #72]	@ (800809c <TIM_Base_SetConfig+0x168>)
 8008052:	4298      	cmp	r0, r3
 8008054:	d00a      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 8008056:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800805a:	4298      	cmp	r0, r3
 800805c:	d006      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 800805e:	4b10      	ldr	r3, [pc, #64]	@ (80080a0 <TIM_Base_SetConfig+0x16c>)
 8008060:	4298      	cmp	r0, r3
 8008062:	d003      	beq.n	800806c <TIM_Base_SetConfig+0x138>
 8008064:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008068:	4298      	cmp	r0, r3
 800806a:	d101      	bne.n	8008070 <TIM_Base_SetConfig+0x13c>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800806c:	690b      	ldr	r3, [r1, #16]
 800806e:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008070:	2301      	movs	r3, #1
 8008072:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8008074:	6903      	ldr	r3, [r0, #16]
 8008076:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8008078:	bf42      	ittt	mi
 800807a:	6903      	ldrmi	r3, [r0, #16]
 800807c:	f023 0301 	bicmi.w	r3, r3, #1
 8008080:	6103      	strmi	r3, [r0, #16]
  }
}
 8008082:	4770      	bx	lr
 8008084:	40012c00 	.word	0x40012c00
 8008088:	40000400 	.word	0x40000400
 800808c:	40000800 	.word	0x40000800
 8008090:	40000c00 	.word	0x40000c00
 8008094:	40013400 	.word	0x40013400
 8008098:	40014000 	.word	0x40014000
 800809c:	40014400 	.word	0x40014400
 80080a0:	40014800 	.word	0x40014800

080080a4 <HAL_TIM_Base_Init>:
{
 80080a4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80080a6:	4604      	mov	r4, r0
 80080a8:	b350      	cbz	r0, 8008100 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 80080aa:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80080ae:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80080b2:	b91b      	cbnz	r3, 80080bc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80080b4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 80080b8:	f7ff fe0c 	bl	8007cd4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80080bc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80080be:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80080c0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80080c4:	1d21      	adds	r1, r4, #4
 80080c6:	f7ff ff35 	bl	8007f34 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80080ca:	2301      	movs	r3, #1
  return HAL_OK;
 80080cc:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80080ce:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80080d2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80080d6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80080da:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80080de:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80080e2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80080e6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80080ea:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80080ee:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80080f2:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 80080f6:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 80080fa:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80080fe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008100:	2001      	movs	r0, #1
 8008102:	e7fc      	b.n	80080fe <HAL_TIM_Base_Init+0x5a>

08008104 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8008104:	4770      	bx	lr

08008106 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8008106:	4770      	bx	lr

08008108 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8008108:	4770      	bx	lr

0800810a <HAL_TIMEx_EncoderIndexCallback>:
/**
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
 800810a:	4770      	bx	lr

0800810c <HAL_TIMEx_DirectionChangeCallback>:
/**
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
 800810c:	4770      	bx	lr

0800810e <HAL_TIMEx_IndexErrorCallback>:
/**
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
 800810e:	4770      	bx	lr

08008110 <HAL_TIMEx_TransitionErrorCallback>:
/**
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
 8008110:	4770      	bx	lr
	...

08008114 <XSPI_ConfigCmd>:
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 8008114:	6802      	ldr	r2, [r0, #0]
{
 8008116:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 800811a:	6813      	ldr	r3, [r2, #0]
 800811c:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008120:	6013      	str	r3, [r2, #0]

  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008122:	4b7e      	ldr	r3, [pc, #504]	@ (800831c <XSPI_ConfigCmd+0x208>)
 8008124:	429a      	cmp	r2, r3
 8008126:	d00d      	beq.n	8008144 <XSPI_ConfigCmd+0x30>
 8008128:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800812c:	429a      	cmp	r2, r3
 800812e:	d009      	beq.n	8008144 <XSPI_ConfigCmd+0x30>
 8008130:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008134:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008138:	429a      	cmp	r2, r3
 800813a:	d003      	beq.n	8008144 <XSPI_ConfigCmd+0x30>
 800813c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008140:	429a      	cmp	r2, r3
 8008142:	d15c      	bne.n	80081fe <XSPI_ConfigCmd+0xea>
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 8008144:	6883      	ldr	r3, [r0, #8]
 8008146:	b92b      	cbnz	r3, 8008154 <XSPI_ConfigCmd+0x40>
    {
      assert_param(IS_OCTOSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, OCTOSPI_CR_MSEL, pCmd->IOSelect);
 8008148:	6813      	ldr	r3, [r2, #0]
 800814a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
    {
      assert_param(IS_HSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 800814e:	684c      	ldr	r4, [r1, #4]
 8008150:	4323      	orrs	r3, r4
 8008152:	6013      	str	r3, [r2, #0]
  {
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
    return HAL_ERROR;
  }

  if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 8008154:	680b      	ldr	r3, [r1, #0]
 8008156:	2b02      	cmp	r3, #2
 8008158:	d165      	bne.n	8008226 <XSPI_ConfigCmd+0x112>
  {
    ccr_reg = &(hxspi->Instance->WCCR);
 800815a:	f502 74c0 	add.w	r4, r2, #384	@ 0x180
    tcr_reg = &(hxspi->Instance->WTCR);
 800815e:	f502 76c4 	add.w	r6, r2, #392	@ 0x188
    ir_reg  = &(hxspi->Instance->WIR);
 8008162:	f502 75c8 	add.w	r5, r2, #400	@ 0x190
    abr_reg = &(hxspi->Instance->WABR);
 8008166:	f502 7cd0 	add.w	ip, r2, #416	@ 0x1a0
    ir_reg  = &(hxspi->Instance->IR);
    abr_reg = &(hxspi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (pCmd->DQSMode | pCmd->SIOOMode);
 800816a:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	@ 0x48
 800816e:	433b      	orrs	r3, r7
 8008170:	6023      	str	r3, [r4, #0]

  if (pCmd->AlternateBytesMode != HAL_XSPI_ALT_BYTES_NONE)
 8008172:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8008174:	b16b      	cbz	r3, 8008192 <XSPI_ConfigCmd+0x7e>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = pCmd->AlternateBytes;
 8008176:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8008178:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (XSPI_CCR_ABMODE | XSPI_CCR_ABDTR | XSPI_CCR_ABSIZE),
 800817c:	6b4f      	ldr	r7, [r1, #52]	@ 0x34
 800817e:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8008180:	f8d4 c000 	ldr.w	ip, [r4]
 8008184:	433b      	orrs	r3, r7
 8008186:	6b0f      	ldr	r7, [r1, #48]	@ 0x30
 8008188:	433b      	orrs	r3, r7
 800818a:	f42c 177c 	bic.w	r7, ip, #4128768	@ 0x3f0000
 800818e:	433b      	orrs	r3, r7
 8008190:	6023      	str	r3, [r4, #0]
               (pCmd->AlternateBytesMode | pCmd->AlternateBytesDTRMode | pCmd->AlternateBytesWidth));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), XSPI_TCR_DCYC, pCmd->DummyCycles);
 8008192:	6833      	ldr	r3, [r6, #0]
 8008194:	6c4f      	ldr	r7, [r1, #68]	@ 0x44
 8008196:	f023 031f 	bic.w	r3, r3, #31
 800819a:	433b      	orrs	r3, r7
 800819c:	6033      	str	r3, [r6, #0]

  if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800819e:	f8d1 e038 	ldr.w	lr, [r1, #56]	@ 0x38
 80081a2:	f1be 0f00 	cmp.w	lr, #0
 80081a6:	d004      	beq.n	80081b2 <XSPI_ConfigCmd+0x9e>
  {
    if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 80081a8:	680b      	ldr	r3, [r1, #0]
 80081aa:	b913      	cbnz	r3, 80081b2 <XSPI_ConfigCmd+0x9e>
    {
      /* Configure the DLR register with the number of data */
      hxspi->Instance->DLR = (pCmd->DataLength - 1U);
 80081ac:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 80081ae:	3b01      	subs	r3, #1
 80081b0:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }

  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 80081b2:	68cb      	ldr	r3, [r1, #12]
  {
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 80081b4:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 80081b8:	2b00      	cmp	r3, #0
 80081ba:	f000 808e 	beq.w	80082da <XSPI_ConfigCmd+0x1c6>
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80081be:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 80081c2:	f1b9 0f00 	cmp.w	r9, #0
 80081c6:	d05e      	beq.n	8008286 <XSPI_ConfigCmd+0x172>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80081c8:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80081cc:	f1be 0f00 	cmp.w	lr, #0
 80081d0:	d03d      	beq.n	800824e <XSPI_ConfigCmd+0x13a>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80081d2:	ea4e 0303 	orr.w	r3, lr, r3
 80081d6:	ea43 0309 	orr.w	r3, r3, r9
 80081da:	ea43 0308 	orr.w	r3, r3, r8
 80081de:	ea43 030c 	orr.w	r3, r3, ip
 80081e2:	433b      	orrs	r3, r7
 80081e4:	4333      	orrs	r3, r6
 80081e6:	6c0e      	ldr	r6, [r1, #64]	@ 0x40
 80081e8:	6820      	ldr	r0, [r4, #0]
 80081ea:	4333      	orrs	r3, r6
 80081ec:	4e4c      	ldr	r6, [pc, #304]	@ (8008320 <XSPI_ConfigCmd+0x20c>)
 80081ee:	4006      	ands	r6, r0
 80081f0:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
            (pCmd->InstructionDTRMode == HAL_XSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80081f2:	6023      	str	r3, [r4, #0]
        }
      }
      /* Configure the IR register with the instruction value */
      *ir_reg = pCmd->Instruction;
 80081f4:	688b      	ldr	r3, [r1, #8]
 80081f6:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
                   (pCmd->AddressMode | pCmd->AddressDTRMode | pCmd->AddressWidth));
      }

      /* Configure the AR register with the instruction value */
      hxspi->Instance->AR = pCmd->Address;
 80081f8:	698b      	ldr	r3, [r1, #24]
 80081fa:	6493      	str	r3, [r2, #72]	@ 0x48
 80081fc:	e057      	b.n	80082ae <XSPI_ConfigCmd+0x19a>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80081fe:	4b49      	ldr	r3, [pc, #292]	@ (8008324 <XSPI_ConfigCmd+0x210>)
 8008200:	429a      	cmp	r2, r3
 8008202:	d003      	beq.n	800820c <XSPI_ConfigCmd+0xf8>
 8008204:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008208:	429a      	cmp	r2, r3
 800820a:	d106      	bne.n	800821a <XSPI_ConfigCmd+0x106>
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800820c:	6883      	ldr	r3, [r0, #8]
 800820e:	2b00      	cmp	r3, #0
 8008210:	d1a0      	bne.n	8008154 <XSPI_ConfigCmd+0x40>
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 8008212:	6813      	ldr	r3, [r2, #0]
 8008214:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8008218:	e799      	b.n	800814e <XSPI_ConfigCmd+0x3a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800821a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 800821c:	f043 0308 	orr.w	r3, r3, #8
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008220:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 8008222:	2001      	movs	r0, #1
 8008224:	e044      	b.n	80082b0 <XSPI_ConfigCmd+0x19c>
  else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG)
 8008226:	2b03      	cmp	r3, #3
    ccr_reg = &(hxspi->Instance->WPCCR);
 8008228:	bf01      	itttt	eq
 800822a:	f502 74a0 	addeq.w	r4, r2, #320	@ 0x140
    tcr_reg = &(hxspi->Instance->WPTCR);
 800822e:	f502 76a4 	addeq.w	r6, r2, #328	@ 0x148
    ir_reg  = &(hxspi->Instance->WPIR);
 8008232:	f502 75a8 	addeq.w	r5, r2, #336	@ 0x150
    abr_reg = &(hxspi->Instance->WPABR);
 8008236:	f502 7cb0 	addeq.w	ip, r2, #352	@ 0x160
    ccr_reg = &(hxspi->Instance->CCR);
 800823a:	bf1f      	itttt	ne
 800823c:	f502 7480 	addne.w	r4, r2, #256	@ 0x100
    tcr_reg = &(hxspi->Instance->TCR);
 8008240:	f502 7684 	addne.w	r6, r2, #264	@ 0x108
    ir_reg  = &(hxspi->Instance->IR);
 8008244:	f502 7588 	addne.w	r5, r2, #272	@ 0x110
    abr_reg = &(hxspi->Instance->ABR);
 8008248:	f502 7c90 	addne.w	ip, r2, #288	@ 0x120
 800824c:	e78d      	b.n	800816a <XSPI_ConfigCmd+0x56>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800824e:	ea43 0309 	orr.w	r3, r3, r9
 8008252:	f8d4 e000 	ldr.w	lr, [r4]
 8008256:	ea43 0308 	orr.w	r3, r3, r8
 800825a:	ea43 030c 	orr.w	r3, r3, ip
 800825e:	433b      	orrs	r3, r7
 8008260:	f42e 5e7c 	bic.w	lr, lr, #16128	@ 0x3f00
 8008264:	4333      	orrs	r3, r6
 8008266:	f02e 0e3f 	bic.w	lr, lr, #63	@ 0x3f
 800826a:	ea43 030e 	orr.w	r3, r3, lr
 800826e:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 8008270:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008272:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008276:	d1bd      	bne.n	80081f4 <XSPI_ConfigCmd+0xe0>
 8008278:	694b      	ldr	r3, [r1, #20]
 800827a:	2b08      	cmp	r3, #8
 800827c:	d1ba      	bne.n	80081f4 <XSPI_ConfigCmd+0xe0>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800827e:	6823      	ldr	r3, [r4, #0]
 8008280:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8008284:	e7b5      	b.n	80081f2 <XSPI_ConfigCmd+0xde>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 8008286:	6822      	ldr	r2, [r4, #0]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008288:	f1be 0f00 	cmp.w	lr, #0
 800828c:	d012      	beq.n	80082b4 <XSPI_ConfigCmd+0x1a0>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 800828e:	ea4e 0303 	orr.w	r3, lr, r3
 8008292:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 8008294:	ea43 0308 	orr.w	r3, r3, r8
 8008298:	ea43 030c 	orr.w	r3, r3, ip
 800829c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80082a0:	4303      	orrs	r3, r0
 80082a2:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 80082a6:	4313      	orrs	r3, r2
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082a8:	6023      	str	r3, [r4, #0]
      *ir_reg = pCmd->Instruction;
 80082aa:	688b      	ldr	r3, [r1, #8]
 80082ac:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80082ae:	2000      	movs	r0, #0
    }
  }

  return status;
}
 80082b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE),
 80082b4:	ea43 0308 	orr.w	r3, r3, r8
 80082b8:	ea43 030c 	orr.w	r3, r3, ip
 80082bc:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 80082c0:	4313      	orrs	r3, r2
 80082c2:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 80082c4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80082c6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80082ca:	d1ee      	bne.n	80082aa <XSPI_ConfigCmd+0x196>
 80082cc:	694b      	ldr	r3, [r1, #20]
 80082ce:	2b08      	cmp	r3, #8
 80082d0:	d1eb      	bne.n	80082aa <XSPI_ConfigCmd+0x196>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082d2:	6823      	ldr	r3, [r4, #0]
 80082d4:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80082d8:	e7e6      	b.n	80082a8 <XSPI_ConfigCmd+0x194>
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 80082da:	f1b9 0f00 	cmp.w	r9, #0
 80082de:	d01b      	beq.n	8008318 <XSPI_ConfigCmd+0x204>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80082e0:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80082e4:	f1be 0f00 	cmp.w	lr, #0
 80082e8:	d00d      	beq.n	8008306 <XSPI_ConfigCmd+0x1f2>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE |
 80082ea:	ea4e 0309 	orr.w	r3, lr, r9
 80082ee:	6825      	ldr	r5, [r4, #0]
 80082f0:	4303      	orrs	r3, r0
 80082f2:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 80082f4:	4333      	orrs	r3, r6
 80082f6:	4303      	orrs	r3, r0
 80082f8:	f025 6070 	bic.w	r0, r5, #251658240	@ 0xf000000
 80082fc:	f420 507c 	bic.w	r0, r0, #16128	@ 0x3f00
 8008300:	4303      	orrs	r3, r0
 8008302:	6023      	str	r3, [r4, #0]
 8008304:	e778      	b.n	80081f8 <XSPI_ConfigCmd+0xe4>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
 8008306:	6823      	ldr	r3, [r4, #0]
 8008308:	ea40 0009 	orr.w	r0, r0, r9
 800830c:	4330      	orrs	r0, r6
 800830e:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8008312:	4318      	orrs	r0, r3
 8008314:	6020      	str	r0, [r4, #0]
 8008316:	e76f      	b.n	80081f8 <XSPI_ConfigCmd+0xe4>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008318:	2308      	movs	r3, #8
 800831a:	e781      	b.n	8008220 <XSPI_ConfigCmd+0x10c>
 800831c:	420d1400 	.word	0x420d1400
 8008320:	f0ffc0c0 	.word	0xf0ffc0c0
 8008324:	420d3400 	.word	0x420d3400

08008328 <XSPI_WaitFlagStateUntilTimeout>:
{
 8008328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800832c:	4604      	mov	r4, r0
 800832e:	460e      	mov	r6, r1
 8008330:	4615      	mov	r5, r2
 8008332:	461f      	mov	r7, r3
 8008334:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 8008338:	6822      	ldr	r2, [r4, #0]
 800833a:	6a13      	ldr	r3, [r2, #32]
 800833c:	4233      	tst	r3, r6
 800833e:	bf14      	ite	ne
 8008340:	2301      	movne	r3, #1
 8008342:	2300      	moveq	r3, #0
 8008344:	42ab      	cmp	r3, r5
 8008346:	d101      	bne.n	800834c <XSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008348:	2000      	movs	r0, #0
 800834a:	e012      	b.n	8008372 <XSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800834c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8008350:	d0f3      	beq.n	800833a <XSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008352:	f7fb fca3 	bl	8003c9c <HAL_GetTick>
 8008356:	1bc0      	subs	r0, r0, r7
 8008358:	4540      	cmp	r0, r8
 800835a:	d802      	bhi.n	8008362 <XSPI_WaitFlagStateUntilTimeout+0x3a>
 800835c:	f1b8 0f00 	cmp.w	r8, #0
 8008360:	d1ea      	bne.n	8008338 <XSPI_WaitFlagStateUntilTimeout+0x10>
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 8008362:	f44f 7300 	mov.w	r3, #512	@ 0x200
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 8008366:	2003      	movs	r0, #3
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 8008368:	6563      	str	r3, [r4, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 800836a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800836c:	f043 0301 	orr.w	r3, r3, #1
 8008370:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 8008372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08008378 <HAL_XSPI_Init>:
{
 8008378:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800837a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800837c:	f7fb fc8e 	bl	8003c9c <HAL_GetTick>
 8008380:	4605      	mov	r5, r0
  if (hxspi == NULL)
 8008382:	2c00      	cmp	r4, #0
 8008384:	f000 80a8 	beq.w	80084d8 <HAL_XSPI_Init+0x160>
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 8008388:	2300      	movs	r3, #0
 800838a:	65a3      	str	r3, [r4, #88]	@ 0x58
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 800838c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800838e:	2b00      	cmp	r3, #0
 8008390:	f040 8094 	bne.w	80084bc <HAL_XSPI_Init+0x144>
      HAL_XSPI_MspInit(hxspi);
 8008394:	4620      	mov	r0, r4
 8008396:	f7f8 fadf 	bl	8000958 <HAL_XSPI_MspInit>
  hxspi->Timeout = Timeout;
 800839a:	f241 3388 	movw	r3, #5000	@ 0x1388
      MODIFY_REG(hxspi->Instance->DCR1,
 800839e:	68e1      	ldr	r1, [r4, #12]
  hxspi->Timeout = Timeout;
 80083a0:	65e3      	str	r3, [r4, #92]	@ 0x5c
      MODIFY_REG(hxspi->Instance->DCR1,
 80083a2:	69e3      	ldr	r3, [r4, #28]
 80083a4:	6822      	ldr	r2, [r4, #0]
 80083a6:	4319      	orrs	r1, r3
 80083a8:	6923      	ldr	r3, [r4, #16]
 80083aa:	6890      	ldr	r0, [r2, #8]
 80083ac:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80083b0:	4b4a      	ldr	r3, [pc, #296]	@ (80084dc <HAL_XSPI_Init+0x164>)
 80083b2:	4003      	ands	r3, r0
 80083b4:	4319      	orrs	r1, r3
 80083b6:	6963      	ldr	r3, [r4, #20]
 80083b8:	3b01      	subs	r3, #1
 80083ba:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 80083be:	6091      	str	r1, [r2, #8]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80083c0:	4947      	ldr	r1, [pc, #284]	@ (80084e0 <HAL_XSPI_Init+0x168>)
 80083c2:	428a      	cmp	r2, r1
 80083c4:	d00c      	beq.n	80083e0 <HAL_XSPI_Init+0x68>
 80083c6:	4b47      	ldr	r3, [pc, #284]	@ (80084e4 <HAL_XSPI_Init+0x16c>)
 80083c8:	429a      	cmp	r2, r3
 80083ca:	d009      	beq.n	80083e0 <HAL_XSPI_Init+0x68>
 80083cc:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80083d0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80083d4:	429a      	cmp	r2, r3
 80083d6:	d003      	beq.n	80083e0 <HAL_XSPI_Init+0x68>
 80083d8:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80083dc:	429a      	cmp	r2, r3
 80083de:	d105      	bne.n	80083ec <HAL_XSPI_Init+0x74>
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 80083e0:	6893      	ldr	r3, [r2, #8]
 80083e2:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80083e4:	f023 0308 	bic.w	r3, r3, #8
 80083e8:	4303      	orrs	r3, r0
 80083ea:	6093      	str	r3, [r2, #8]
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 80083ec:	68d3      	ldr	r3, [r2, #12]
 80083ee:	6a20      	ldr	r0, [r4, #32]
 80083f0:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80083f4:	4303      	orrs	r3, r0
 80083f6:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 80083f8:	6913      	ldr	r3, [r2, #16]
 80083fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80083fc:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8008400:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008404:	428a      	cmp	r2, r1
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 8008406:	6113      	str	r3, [r2, #16]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008408:	d00c      	beq.n	8008424 <HAL_XSPI_Init+0xac>
 800840a:	4b36      	ldr	r3, [pc, #216]	@ (80084e4 <HAL_XSPI_Init+0x16c>)
 800840c:	429a      	cmp	r2, r3
 800840e:	d009      	beq.n	8008424 <HAL_XSPI_Init+0xac>
 8008410:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008414:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008418:	429a      	cmp	r2, r3
 800841a:	d003      	beq.n	8008424 <HAL_XSPI_Init+0xac>
 800841c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008420:	429a      	cmp	r2, r3
 8008422:	d105      	bne.n	8008430 <HAL_XSPI_Init+0xb8>
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 8008424:	6913      	ldr	r3, [r2, #16]
 8008426:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8008428:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800842c:	430b      	orrs	r3, r1
 800842e:	6113      	str	r3, [r2, #16]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 8008430:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 8008432:	6861      	ldr	r1, [r4, #4]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 8008434:	6153      	str	r3, [r2, #20]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 8008436:	6813      	ldr	r3, [r2, #0]
 8008438:	3901      	subs	r1, #1
 800843a:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800843e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8008442:	6013      	str	r3, [r2, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008444:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008448:	2200      	movs	r2, #0
 800844a:	9300      	str	r3, [sp, #0]
 800844c:	2120      	movs	r1, #32
 800844e:	462b      	mov	r3, r5
 8008450:	4620      	mov	r0, r4
 8008452:	f7ff ff69 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008456:	2800      	cmp	r0, #0
 8008458:	d13c      	bne.n	80084d4 <HAL_XSPI_Init+0x15c>
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 800845a:	6822      	ldr	r2, [r4, #0]
 800845c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800845e:	68d3      	ldr	r3, [r2, #12]
 8008460:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8008464:	430b      	orrs	r3, r1
 8008466:	60d3      	str	r3, [r2, #12]
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008468:	4b1f      	ldr	r3, [pc, #124]	@ (80084e8 <HAL_XSPI_Init+0x170>)
 800846a:	429a      	cmp	r2, r3
 800846c:	d028      	beq.n	80084c0 <HAL_XSPI_Init+0x148>
 800846e:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008472:	429a      	cmp	r2, r3
 8008474:	d024      	beq.n	80084c0 <HAL_XSPI_Init+0x148>
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 8008476:	6823      	ldr	r3, [r4, #0]
 8008478:	68a1      	ldr	r1, [r4, #8]
 800847a:	681a      	ldr	r2, [r3, #0]
 800847c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008480:	430a      	orrs	r2, r1
 8008482:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 8008484:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 8008488:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 800848c:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 8008490:	4302      	orrs	r2, r0
 8008492:	430a      	orrs	r2, r1
 8008494:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        HAL_XSPI_ENABLE(hxspi);
 8008498:	681a      	ldr	r2, [r3, #0]
 800849a:	f042 0201 	orr.w	r2, r2, #1
 800849e:	601a      	str	r2, [r3, #0]
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 80084a0:	69a2      	ldr	r2, [r4, #24]
 80084a2:	2a02      	cmp	r2, #2
 80084a4:	d103      	bne.n	80084ae <HAL_XSPI_Init+0x136>
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 80084a6:	689a      	ldr	r2, [r3, #8]
 80084a8:	f042 0202 	orr.w	r2, r2, #2
 80084ac:	609a      	str	r2, [r3, #8]
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80084ae:	68e3      	ldr	r3, [r4, #12]
 80084b0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 80084b4:	bf0c      	ite	eq
 80084b6:	2301      	moveq	r3, #1
          hxspi->State = HAL_XSPI_STATE_READY;
 80084b8:	2302      	movne	r3, #2
 80084ba:	6563      	str	r3, [r4, #84]	@ 0x54
  HAL_StatusTypeDef status = HAL_OK;
 80084bc:	2000      	movs	r0, #0
 80084be:	e009      	b.n	80084d4 <HAL_XSPI_Init+0x15c>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 80084c0:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 80084c2:	2200      	movs	r2, #0
 80084c4:	9300      	str	r3, [sp, #0]
 80084c6:	2120      	movs	r1, #32
 80084c8:	462b      	mov	r3, r5
 80084ca:	4620      	mov	r0, r4
 80084cc:	f7ff ff2c 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
          if (status != HAL_OK)
 80084d0:	2800      	cmp	r0, #0
 80084d2:	d0d0      	beq.n	8008476 <HAL_XSPI_Init+0xfe>
}
 80084d4:	b003      	add	sp, #12
 80084d6:	bd30      	pop	{r4, r5, pc}
    status = HAL_ERROR;
 80084d8:	2001      	movs	r0, #1
 80084da:	e7fb      	b.n	80084d4 <HAL_XSPI_Init+0x15c>
 80084dc:	f8e0c0fc 	.word	0xf8e0c0fc
 80084e0:	420d1400 	.word	0x420d1400
 80084e4:	520d1400 	.word	0x520d1400
 80084e8:	420d3400 	.word	0x420d3400

080084ec <HAL_XSPI_Command>:
{
 80084ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80084f0:	4604      	mov	r4, r0
 80084f2:	4690      	mov	r8, r2
 80084f4:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 80084f6:	f7fb fbd1 	bl	8003c9c <HAL_GetTick>
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80084fa:	68a2      	ldr	r2, [r4, #8]
  uint32_t tickstart = HAL_GetTick();
 80084fc:	4607      	mov	r7, r0
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80084fe:	6825      	ldr	r5, [r4, #0]
 8008500:	4b42      	ldr	r3, [pc, #264]	@ (800860c <HAL_XSPI_Command+0x120>)
 8008502:	bb02      	cbnz	r2, 8008546 <HAL_XSPI_Command+0x5a>
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008504:	429d      	cmp	r5, r3
 8008506:	d037      	beq.n	8008578 <HAL_XSPI_Command+0x8c>
 8008508:	4a41      	ldr	r2, [pc, #260]	@ (8008610 <HAL_XSPI_Command+0x124>)
 800850a:	4295      	cmp	r5, r2
 800850c:	d01b      	beq.n	8008546 <HAL_XSPI_Command+0x5a>
 800850e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8008512:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8008516:	4295      	cmp	r5, r2
 8008518:	d015      	beq.n	8008546 <HAL_XSPI_Command+0x5a>
 800851a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800851e:	4295      	cmp	r5, r2
 8008520:	d011      	beq.n	8008546 <HAL_XSPI_Command+0x5a>
    else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008522:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8008526:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800852a:	4295      	cmp	r5, r2
 800852c:	d00b      	beq.n	8008546 <HAL_XSPI_Command+0x5a>
 800852e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008532:	4295      	cmp	r5, r2
 8008534:	d007      	beq.n	8008546 <HAL_XSPI_Command+0x5a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 8008536:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008538:	f043 0308 	orr.w	r3, r3, #8
      return HAL_ERROR;
 800853c:	2001      	movs	r0, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800853e:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 8008540:	b002      	add	sp, #8
 8008542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008546:	429d      	cmp	r5, r3
 8008548:	d016      	beq.n	8008578 <HAL_XSPI_Command+0x8c>
 800854a:	4b31      	ldr	r3, [pc, #196]	@ (8008610 <HAL_XSPI_Command+0x124>)
 800854c:	429d      	cmp	r5, r3
 800854e:	d013      	beq.n	8008578 <HAL_XSPI_Command+0x8c>
 8008550:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008554:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008558:	429d      	cmp	r5, r3
 800855a:	d00d      	beq.n	8008578 <HAL_XSPI_Command+0x8c>
 800855c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008560:	429d      	cmp	r5, r3
 8008562:	d009      	beq.n	8008578 <HAL_XSPI_Command+0x8c>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008564:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008568:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800856c:	429d      	cmp	r5, r3
 800856e:	d003      	beq.n	8008578 <HAL_XSPI_Command+0x8c>
 8008570:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008574:	429d      	cmp	r5, r3
 8008576:	d1de      	bne.n	8008536 <HAL_XSPI_Command+0x4a>
  state = hxspi->State;
 8008578:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 800857a:	2b02      	cmp	r3, #2
 800857c:	d105      	bne.n	800858a <HAL_XSPI_Command+0x9e>
 800857e:	68e3      	ldr	r3, [r4, #12]
 8008580:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8008584:	d107      	bne.n	8008596 <HAL_XSPI_Command+0xaa>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008586:	2310      	movs	r3, #16
 8008588:	e7d8      	b.n	800853c <HAL_XSPI_Command+0x50>
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 800858a:	2b14      	cmp	r3, #20
 800858c:	d121      	bne.n	80085d2 <HAL_XSPI_Command+0xe6>
      ((state == HAL_XSPI_STATE_READ_CMD_CFG)  && ((pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG) ||
 800858e:	6833      	ldr	r3, [r6, #0]
 8008590:	3b02      	subs	r3, #2
 8008592:	2b01      	cmp	r3, #1
 8008594:	d8f7      	bhi.n	8008586 <HAL_XSPI_Command+0x9a>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008596:	463b      	mov	r3, r7
 8008598:	2200      	movs	r2, #0
 800859a:	2120      	movs	r1, #32
 800859c:	4620      	mov	r0, r4
 800859e:	f8cd 8000 	str.w	r8, [sp]
 80085a2:	f7ff fec1 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80085a6:	bb78      	cbnz	r0, 8008608 <HAL_XSPI_Command+0x11c>
      hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 80085a8:	65a0      	str	r0, [r4, #88]	@ 0x58
      status = XSPI_ConfigCmd(hxspi, pCmd);
 80085aa:	4631      	mov	r1, r6
 80085ac:	4620      	mov	r0, r4
 80085ae:	f7ff fdb1 	bl	8008114 <XSPI_ConfigCmd>
      if (status == HAL_OK)
 80085b2:	2800      	cmp	r0, #0
 80085b4:	d1c4      	bne.n	8008540 <HAL_XSPI_Command+0x54>
        if (pCmd->DataMode == HAL_XSPI_DATA_NONE)
 80085b6:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 80085b8:	b99b      	cbnz	r3, 80085e2 <HAL_XSPI_Command+0xf6>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 80085ba:	463b      	mov	r3, r7
 80085bc:	2201      	movs	r2, #1
 80085be:	2102      	movs	r1, #2
 80085c0:	4620      	mov	r0, r4
 80085c2:	f8cd 8000 	str.w	r8, [sp]
 80085c6:	f7ff feaf 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 80085ca:	2202      	movs	r2, #2
 80085cc:	6823      	ldr	r3, [r4, #0]
 80085ce:	625a      	str	r2, [r3, #36]	@ 0x24
 80085d0:	e7b6      	b.n	8008540 <HAL_XSPI_Command+0x54>
                                                   (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG))) ||
 80085d2:	2b24      	cmp	r3, #36	@ 0x24
 80085d4:	d1d7      	bne.n	8008586 <HAL_XSPI_Command+0x9a>
      ((state == HAL_XSPI_STATE_WRITE_CMD_CFG) &&
 80085d6:	6833      	ldr	r3, [r6, #0]
 80085d8:	f023 0302 	bic.w	r3, r3, #2
 80085dc:	2b01      	cmp	r3, #1
 80085de:	d1d2      	bne.n	8008586 <HAL_XSPI_Command+0x9a>
 80085e0:	e7d9      	b.n	8008596 <HAL_XSPI_Command+0xaa>
          if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 80085e2:	6833      	ldr	r3, [r6, #0]
 80085e4:	b90b      	cbnz	r3, 80085ea <HAL_XSPI_Command+0xfe>
              hxspi->State = HAL_XSPI_STATE_CMD_CFG;
 80085e6:	2304      	movs	r3, #4
 80085e8:	e005      	b.n	80085f6 <HAL_XSPI_Command+0x10a>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_READ_CFG)
 80085ea:	2b01      	cmp	r3, #1
 80085ec:	d105      	bne.n	80085fa <HAL_XSPI_Command+0x10e>
            if (hxspi->State == HAL_XSPI_STATE_WRITE_CMD_CFG)
 80085ee:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80085f0:	2b24      	cmp	r3, #36	@ 0x24
 80085f2:	d0f8      	beq.n	80085e6 <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_READ_CMD_CFG;
 80085f4:	2314      	movs	r3, #20
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 80085f6:	6563      	str	r3, [r4, #84]	@ 0x54
 80085f8:	e7a2      	b.n	8008540 <HAL_XSPI_Command+0x54>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 80085fa:	2b02      	cmp	r3, #2
 80085fc:	d1a0      	bne.n	8008540 <HAL_XSPI_Command+0x54>
            if (hxspi->State == HAL_XSPI_STATE_READ_CMD_CFG)
 80085fe:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008600:	2b14      	cmp	r3, #20
 8008602:	d0f0      	beq.n	80085e6 <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 8008604:	2324      	movs	r3, #36	@ 0x24
 8008606:	e7f6      	b.n	80085f6 <HAL_XSPI_Command+0x10a>
      status = HAL_BUSY;
 8008608:	2002      	movs	r0, #2
 800860a:	e799      	b.n	8008540 <HAL_XSPI_Command+0x54>
 800860c:	420d1400 	.word	0x420d1400
 8008610:	520d1400 	.word	0x520d1400

08008614 <HAL_XSPI_Transmit>:
{
 8008614:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008618:	4604      	mov	r4, r0
 800861a:	4688      	mov	r8, r1
 800861c:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 800861e:	f7fb fb3d 	bl	8003c9c <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 8008622:	6827      	ldr	r7, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8008624:	4605      	mov	r5, r0
  if (pData == NULL)
 8008626:	f1b8 0f00 	cmp.w	r8, #0
 800862a:	d103      	bne.n	8008634 <HAL_XSPI_Transmit+0x20>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800862c:	2308      	movs	r3, #8
    status = HAL_ERROR;
 800862e:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008630:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008632:	e02e      	b.n	8008692 <HAL_XSPI_Transmit+0x7e>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008634:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008636:	2b04      	cmp	r3, #4
 8008638:	d12e      	bne.n	8008698 <HAL_XSPI_Transmit+0x84>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 800863a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 800863c:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008640:	3301      	adds	r3, #1
 8008642:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 8008644:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008646:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008648:	683b      	ldr	r3, [r7, #0]
 800864a:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800864e:	603b      	str	r3, [r7, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_FT, SET, tickstart, Timeout);
 8008650:	462b      	mov	r3, r5
 8008652:	2201      	movs	r2, #1
 8008654:	2104      	movs	r1, #4
 8008656:	4620      	mov	r0, r4
 8008658:	9600      	str	r6, [sp, #0]
 800865a:	f7ff fe65 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800865e:	b9c0      	cbnz	r0, 8008692 <HAL_XSPI_Transmit+0x7e>
        *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008660:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008662:	781b      	ldrb	r3, [r3, #0]
 8008664:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
        hxspi->pBuffPtr++;
 8008668:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800866a:	3301      	adds	r3, #1
 800866c:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 800866e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008670:	3b01      	subs	r3, #1
 8008672:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 8008674:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008676:	2b00      	cmp	r3, #0
 8008678:	d1ea      	bne.n	8008650 <HAL_XSPI_Transmit+0x3c>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 800867a:	462b      	mov	r3, r5
 800867c:	2201      	movs	r2, #1
 800867e:	2102      	movs	r1, #2
 8008680:	4620      	mov	r0, r4
 8008682:	9600      	str	r6, [sp, #0]
 8008684:	f7ff fe50 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8008688:	b918      	cbnz	r0, 8008692 <HAL_XSPI_Transmit+0x7e>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800868a:	2302      	movs	r3, #2
 800868c:	6822      	ldr	r2, [r4, #0]
 800868e:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 8008690:	6563      	str	r3, [r4, #84]	@ 0x54
}
 8008692:	b002      	add	sp, #8
 8008694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008698:	2310      	movs	r3, #16
 800869a:	e7c8      	b.n	800862e <HAL_XSPI_Transmit+0x1a>

0800869c <HAL_XSPI_AutoPolling>:
{
 800869c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80086a0:	4604      	mov	r4, r0
 80086a2:	460e      	mov	r6, r1
 80086a4:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80086a6:	f7fb faf9 	bl	8003c9c <HAL_GetTick>
  uint32_t addr_reg = hxspi->Instance->AR;
 80086aa:	6823      	ldr	r3, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80086ac:	4682      	mov	sl, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 80086ae:	f8d3 8048 	ldr.w	r8, [r3, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 80086b2:	f8d3 9110 	ldr.w	r9, [r3, #272]	@ 0x110
  if ((hxspi->State == HAL_XSPI_STATE_CMD_CFG) && (pCfg->AutomaticStop == HAL_XSPI_AUTOMATIC_STOP_ENABLE))
 80086b6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80086b8:	2b04      	cmp	r3, #4
 80086ba:	d13e      	bne.n	800873a <HAL_XSPI_AutoPolling+0x9e>
 80086bc:	68f3      	ldr	r3, [r6, #12]
 80086be:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80086c2:	d13a      	bne.n	800873a <HAL_XSPI_AutoPolling+0x9e>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80086c4:	4603      	mov	r3, r0
 80086c6:	2200      	movs	r2, #0
 80086c8:	2120      	movs	r1, #32
 80086ca:	4620      	mov	r0, r4
 80086cc:	9700      	str	r7, [sp, #0]
 80086ce:	f7ff fe2b 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80086d2:	2800      	cmp	r0, #0
 80086d4:	d135      	bne.n	8008742 <HAL_XSPI_AutoPolling+0xa6>
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086d6:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 80086da:	6825      	ldr	r5, [r4, #0]
 80086dc:	6833      	ldr	r3, [r6, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086de:	4311      	orrs	r1, r2
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 80086e0:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      WRITE_REG(hxspi->Instance->PSMKR, pCfg->MatchMask);
 80086e4:	6873      	ldr	r3, [r6, #4]
 80086e6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
      WRITE_REG(hxspi->Instance->PIR,   pCfg->IntervalTime);
 80086ea:	6933      	ldr	r3, [r6, #16]
 80086ec:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086f0:	682b      	ldr	r3, [r5, #0]
 80086f2:	f023 5343 	bic.w	r3, r3, #817889280	@ 0x30c00000
 80086f6:	4319      	orrs	r1, r3
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80086f8:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086fa:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80086fe:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008702:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008704:	d111      	bne.n	800872a <HAL_XSPI_AutoPolling+0x8e>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 8008706:	f8c5 8048 	str.w	r8, [r5, #72]	@ 0x48
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_SM, SET, tickstart, Timeout);
 800870a:	4653      	mov	r3, sl
 800870c:	2201      	movs	r2, #1
 800870e:	2108      	movs	r1, #8
 8008710:	4620      	mov	r0, r4
 8008712:	9700      	str	r7, [sp, #0]
 8008714:	f7ff fe08 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008718:	b920      	cbnz	r0, 8008724 <HAL_XSPI_AutoPolling+0x88>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_SM);
 800871a:	2208      	movs	r2, #8
 800871c:	6823      	ldr	r3, [r4, #0]
 800871e:	625a      	str	r2, [r3, #36]	@ 0x24
        hxspi->State = HAL_XSPI_STATE_READY;
 8008720:	2302      	movs	r3, #2
 8008722:	6563      	str	r3, [r4, #84]	@ 0x54
}
 8008724:	b002      	add	sp, #8
 8008726:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 800872a:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 800872e:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 8008732:	d1e8      	bne.n	8008706 <HAL_XSPI_AutoPolling+0x6a>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 8008734:	f8c5 9110 	str.w	r9, [r5, #272]	@ 0x110
 8008738:	e7e7      	b.n	800870a <HAL_XSPI_AutoPolling+0x6e>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800873a:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800873c:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800873e:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008740:	e7f0      	b.n	8008724 <HAL_XSPI_AutoPolling+0x88>
      status = HAL_BUSY;
 8008742:	2002      	movs	r0, #2
 8008744:	e7ee      	b.n	8008724 <HAL_XSPI_AutoPolling+0x88>

08008746 <HAL_XSPI_MemoryMapped>:
{
 8008746:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008748:	4604      	mov	r4, r0
 800874a:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 800874c:	f7fb faa6 	bl	8003c9c <HAL_GetTick>
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008750:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 8008752:	4603      	mov	r3, r0
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008754:	2a04      	cmp	r2, #4
 8008756:	d121      	bne.n	800879c <HAL_XSPI_MemoryMapped+0x56>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008758:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 800875a:	2120      	movs	r1, #32
 800875c:	9200      	str	r2, [sp, #0]
 800875e:	4620      	mov	r0, r4
 8008760:	2200      	movs	r2, #0
 8008762:	f7ff fde1 	bl	8008328 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008766:	b9b8      	cbnz	r0, 8008798 <HAL_XSPI_MemoryMapped+0x52>
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 8008768:	2388      	movs	r3, #136	@ 0x88
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 800876a:	6829      	ldr	r1, [r5, #0]
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 800876c:	6822      	ldr	r2, [r4, #0]
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 800876e:	2908      	cmp	r1, #8
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 8008770:	6563      	str	r3, [r4, #84]	@ 0x54
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 8008772:	d108      	bne.n	8008786 <HAL_XSPI_MemoryMapped+0x40>
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 8008774:	686b      	ldr	r3, [r5, #4]
 8008776:	f8c2 3130 	str.w	r3, [r2, #304]	@ 0x130
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TO);
 800877a:	2310      	movs	r3, #16
 800877c:	6253      	str	r3, [r2, #36]	@ 0x24
        HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TO);
 800877e:	6813      	ldr	r3, [r2, #0]
 8008780:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8008784:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_TCEN | XSPI_CR_FMODE),
 8008786:	6813      	ldr	r3, [r2, #0]
 8008788:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800878c:	f023 0308 	bic.w	r3, r3, #8
 8008790:	430b      	orrs	r3, r1
 8008792:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 8008796:	6013      	str	r3, [r2, #0]
}
 8008798:	b003      	add	sp, #12
 800879a:	bd30      	pop	{r4, r5, pc}
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800879c:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800879e:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80087a0:	65a3      	str	r3, [r4, #88]	@ 0x58
 80087a2:	e7f9      	b.n	8008798 <HAL_XSPI_MemoryMapped+0x52>

080087a4 <HAL_XSPI_ErrorCallback>:
__weak void HAL_XSPI_ErrorCallback(XSPI_HandleTypeDef *hxspi)
 80087a4:	4770      	bx	lr

080087a6 <HAL_XSPI_AbortCpltCallback>:
__weak void HAL_XSPI_AbortCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087a6:	4770      	bx	lr

080087a8 <XSPI_DMAAbortCplt>:
{
 80087a8:	b508      	push	{r3, lr}
  hxspi->XferCount = 0;
 80087aa:	2300      	movs	r3, #0
  XSPI_HandleTypeDef *hxspi = (XSPI_HandleTypeDef *)(hdma->Parent);
 80087ac:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  hxspi->XferCount = 0;
 80087ae:	6483      	str	r3, [r0, #72]	@ 0x48
  if (hxspi->State == HAL_XSPI_STATE_ABORT)
 80087b0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80087b2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80087b6:	d114      	bne.n	80087e2 <XSPI_DMAAbortCplt+0x3a>
    if (HAL_XSPI_GET_FLAG(hxspi, HAL_XSPI_FLAG_BUSY) != RESET)
 80087b8:	6803      	ldr	r3, [r0, #0]
 80087ba:	6a1a      	ldr	r2, [r3, #32]
 80087bc:	f012 0f20 	tst.w	r2, #32
 80087c0:	f04f 0202 	mov.w	r2, #2
 80087c4:	d009      	beq.n	80087da <XSPI_DMAAbortCplt+0x32>
      HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 80087c6:	625a      	str	r2, [r3, #36]	@ 0x24
      HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TC);
 80087c8:	681a      	ldr	r2, [r3, #0]
 80087ca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80087ce:	601a      	str	r2, [r3, #0]
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 80087d0:	681a      	ldr	r2, [r3, #0]
 80087d2:	f042 0202 	orr.w	r2, r2, #2
 80087d6:	601a      	str	r2, [r3, #0]
}
 80087d8:	bd08      	pop	{r3, pc}
      hxspi->State = HAL_XSPI_STATE_READY;
 80087da:	6542      	str	r2, [r0, #84]	@ 0x54
      HAL_XSPI_AbortCpltCallback(hxspi);
 80087dc:	f7ff ffe3 	bl	80087a6 <HAL_XSPI_AbortCpltCallback>
 80087e0:	e7fa      	b.n	80087d8 <XSPI_DMAAbortCplt+0x30>
    hxspi->State = HAL_XSPI_STATE_READY;
 80087e2:	2302      	movs	r3, #2
 80087e4:	6543      	str	r3, [r0, #84]	@ 0x54
    HAL_XSPI_ErrorCallback(hxspi);
 80087e6:	f7ff ffdd 	bl	80087a4 <HAL_XSPI_ErrorCallback>
}
 80087ea:	e7f5      	b.n	80087d8 <XSPI_DMAAbortCplt+0x30>

080087ec <HAL_XSPI_FifoThresholdCallback>:
__weak void HAL_XSPI_FifoThresholdCallback(XSPI_HandleTypeDef *hxspi)
 80087ec:	4770      	bx	lr

080087ee <HAL_XSPI_CmdCpltCallback>:
__weak void HAL_XSPI_CmdCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087ee:	4770      	bx	lr

080087f0 <HAL_XSPI_RxCpltCallback>:
__weak void HAL_XSPI_RxCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087f0:	4770      	bx	lr

080087f2 <HAL_XSPI_TxCpltCallback>:
__weak void HAL_XSPI_TxCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087f2:	4770      	bx	lr

080087f4 <HAL_XSPI_StatusMatchCallback>:
__weak void HAL_XSPI_StatusMatchCallback(XSPI_HandleTypeDef *hxspi)
 80087f4:	4770      	bx	lr

080087f6 <HAL_XSPI_TimeOutCallback>:
__weak void HAL_XSPI_TimeOutCallback(XSPI_HandleTypeDef *hxspi)
 80087f6:	4770      	bx	lr

080087f8 <HAL_XSPI_IRQHandler>:
{
 80087f8:	b570      	push	{r4, r5, r6, lr}
 80087fa:	4604      	mov	r4, r0
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 80087fc:	6803      	ldr	r3, [r0, #0]
  uint32_t flag           = hxspi->Instance->SR;
 80087fe:	6a1a      	ldr	r2, [r3, #32]
  uint32_t itsource       = hxspi->Instance->CR;
 8008800:	6818      	ldr	r0, [r3, #0]
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 8008802:	0755      	lsls	r5, r2, #29
  uint32_t currentstate   = hxspi->State;
 8008804:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 8008806:	d51f      	bpl.n	8008848 <HAL_XSPI_IRQHandler+0x50>
 8008808:	0346      	lsls	r6, r0, #13
 800880a:	d51d      	bpl.n	8008848 <HAL_XSPI_IRQHandler+0x50>
    if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 800880c:	2918      	cmp	r1, #24
 800880e:	d114      	bne.n	800883a <HAL_XSPI_IRQHandler+0x42>
      *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008810:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008812:	7812      	ldrb	r2, [r2, #0]
 8008814:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
      hxspi->pBuffPtr++;
 8008818:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800881a:	3301      	adds	r3, #1
 800881c:	6423      	str	r3, [r4, #64]	@ 0x40
      hxspi->XferCount--;
 800881e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008820:	3b01      	subs	r3, #1
 8008822:	64a3      	str	r3, [r4, #72]	@ 0x48
    if (hxspi->XferCount == 0U)
 8008824:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008826:	b923      	cbnz	r3, 8008832 <HAL_XSPI_IRQHandler+0x3a>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_FT);
 8008828:	6822      	ldr	r2, [r4, #0]
 800882a:	6813      	ldr	r3, [r2, #0]
 800882c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008830:	6013      	str	r3, [r2, #0]
    HAL_XSPI_FifoThresholdCallback(hxspi);
 8008832:	4620      	mov	r0, r4
 8008834:	f7ff ffda 	bl	80087ec <HAL_XSPI_FifoThresholdCallback>
}
 8008838:	bd70      	pop	{r4, r5, r6, pc}
    else if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 800883a:	2928      	cmp	r1, #40	@ 0x28
 800883c:	d1f2      	bne.n	8008824 <HAL_XSPI_IRQHandler+0x2c>
      *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 800883e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008840:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008844:	7013      	strb	r3, [r2, #0]
 8008846:	e7e7      	b.n	8008818 <HAL_XSPI_IRQHandler+0x20>
  else if (((flag & HAL_XSPI_FLAG_TC) != 0U) && ((itsource & HAL_XSPI_IT_TC) != 0U))
 8008848:	0795      	lsls	r5, r2, #30
 800884a:	d53e      	bpl.n	80088ca <HAL_XSPI_IRQHandler+0xd2>
 800884c:	0386      	lsls	r6, r0, #14
 800884e:	d53c      	bpl.n	80088ca <HAL_XSPI_IRQHandler+0xd2>
    if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008850:	2928      	cmp	r1, #40	@ 0x28
 8008852:	d11d      	bne.n	8008890 <HAL_XSPI_IRQHandler+0x98>
      if ((hxspi->XferCount > 0U) && ((flag & XSPI_SR_FLEVEL) != 0U))
 8008854:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8008856:	b169      	cbz	r1, 8008874 <HAL_XSPI_IRQHandler+0x7c>
 8008858:	f412 4ffe 	tst.w	r2, #32512	@ 0x7f00
 800885c:	d00a      	beq.n	8008874 <HAL_XSPI_IRQHandler+0x7c>
        *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 800885e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008862:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008864:	7013      	strb	r3, [r2, #0]
        hxspi->pBuffPtr++;
 8008866:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008868:	3301      	adds	r3, #1
 800886a:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 800886c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800886e:	3b01      	subs	r3, #1
 8008870:	64a3      	str	r3, [r4, #72]	@ 0x48
 8008872:	e7e1      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
      else if (hxspi->XferCount == 0U)
 8008874:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8008876:	2a00      	cmp	r2, #0
 8008878:	d1de      	bne.n	8008838 <HAL_XSPI_IRQHandler+0x40>
        hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 800887a:	2102      	movs	r1, #2
 800887c:	6259      	str	r1, [r3, #36]	@ 0x24
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 800887e:	681a      	ldr	r2, [r3, #0]
        HAL_XSPI_RxCpltCallback(hxspi);
 8008880:	4620      	mov	r0, r4
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008882:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8008886:	601a      	str	r2, [r3, #0]
        hxspi->State = HAL_XSPI_STATE_READY;
 8008888:	6561      	str	r1, [r4, #84]	@ 0x54
        HAL_XSPI_RxCpltCallback(hxspi);
 800888a:	f7ff ffb1 	bl	80087f0 <HAL_XSPI_RxCpltCallback>
 800888e:	e7d3      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
      hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 8008890:	2002      	movs	r0, #2
 8008892:	6258      	str	r0, [r3, #36]	@ 0x24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008894:	681a      	ldr	r2, [r3, #0]
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 8008896:	2918      	cmp	r1, #24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008898:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 800889c:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 800889e:	6560      	str	r0, [r4, #84]	@ 0x54
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 80088a0:	d103      	bne.n	80088aa <HAL_XSPI_IRQHandler+0xb2>
        HAL_XSPI_TxCpltCallback(hxspi);
 80088a2:	4620      	mov	r0, r4
 80088a4:	f7ff ffa5 	bl	80087f2 <HAL_XSPI_TxCpltCallback>
 80088a8:	e7c6      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_BUSY_CMD)
 80088aa:	2908      	cmp	r1, #8
 80088ac:	d103      	bne.n	80088b6 <HAL_XSPI_IRQHandler+0xbe>
        HAL_XSPI_CmdCpltCallback(hxspi);
 80088ae:	4620      	mov	r0, r4
 80088b0:	f7ff ff9d 	bl	80087ee <HAL_XSPI_CmdCpltCallback>
 80088b4:	e7c0      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_ABORT)
 80088b6:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 80088ba:	d1bd      	bne.n	8008838 <HAL_XSPI_IRQHandler+0x40>
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 80088bc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
          HAL_XSPI_AbortCpltCallback(hxspi);
 80088be:	4620      	mov	r0, r4
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 80088c0:	2b00      	cmp	r3, #0
 80088c2:	d13b      	bne.n	800893c <HAL_XSPI_IRQHandler+0x144>
          HAL_XSPI_AbortCpltCallback(hxspi);
 80088c4:	f7ff ff6f 	bl	80087a6 <HAL_XSPI_AbortCpltCallback>
 80088c8:	e7b6      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_SM) != 0U) && ((itsource & HAL_XSPI_IT_SM) != 0U))
 80088ca:	0715      	lsls	r5, r2, #28
 80088cc:	d510      	bpl.n	80088f0 <HAL_XSPI_IRQHandler+0xf8>
 80088ce:	0301      	lsls	r1, r0, #12
 80088d0:	d50e      	bpl.n	80088f0 <HAL_XSPI_IRQHandler+0xf8>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_SM;
 80088d2:	2208      	movs	r2, #8
 80088d4:	625a      	str	r2, [r3, #36]	@ 0x24
    if ((hxspi->Instance->CR & XSPI_CR_APMS) != 0U)
 80088d6:	681a      	ldr	r2, [r3, #0]
 80088d8:	0252      	lsls	r2, r2, #9
 80088da:	d505      	bpl.n	80088e8 <HAL_XSPI_IRQHandler+0xf0>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_SM | HAL_XSPI_IT_TE);
 80088dc:	681a      	ldr	r2, [r3, #0]
 80088de:	f422 2210 	bic.w	r2, r2, #589824	@ 0x90000
 80088e2:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 80088e4:	2302      	movs	r3, #2
 80088e6:	6563      	str	r3, [r4, #84]	@ 0x54
    HAL_XSPI_StatusMatchCallback(hxspi);
 80088e8:	4620      	mov	r0, r4
 80088ea:	f7ff ff83 	bl	80087f4 <HAL_XSPI_StatusMatchCallback>
 80088ee:	e7a3      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_TE) != 0U) && ((itsource & HAL_XSPI_IT_TE) != 0U))
 80088f0:	07d6      	lsls	r6, r2, #31
 80088f2:	d528      	bpl.n	8008946 <HAL_XSPI_IRQHandler+0x14e>
 80088f4:	03c5      	lsls	r5, r0, #15
 80088f6:	d526      	bpl.n	8008946 <HAL_XSPI_IRQHandler+0x14e>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 80088f8:	2201      	movs	r2, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 80088fa:	2502      	movs	r5, #2
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 80088fc:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_DISABLE_IT(hxspi, (HAL_XSPI_IT_TO | HAL_XSPI_IT_SM | HAL_XSPI_IT_FT | HAL_XSPI_IT_TC | HAL_XSPI_IT_TE));
 80088fe:	681a      	ldr	r2, [r3, #0]
 8008900:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 8008904:	601a      	str	r2, [r3, #0]
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 8008906:	65a5      	str	r5, [r4, #88]	@ 0x58
    if ((hxspi->Instance->CR & XSPI_CR_DMAEN) != 0U)
 8008908:	681a      	ldr	r2, [r3, #0]
 800890a:	0750      	lsls	r0, r2, #29
 800890c:	d519      	bpl.n	8008942 <HAL_XSPI_IRQHandler+0x14a>
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 800890e:	681a      	ldr	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008910:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8008912:	4e13      	ldr	r6, [pc, #76]	@ (8008960 <HAL_XSPI_IRQHandler+0x168>)
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 8008914:	f022 0204 	bic.w	r2, r2, #4
 8008918:	601a      	str	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 800891a:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmatx) != HAL_OK)
 800891c:	f7fb fd50 	bl	80043c0 <HAL_DMA_Abort_IT>
 8008920:	b118      	cbz	r0, 800892a <HAL_XSPI_IRQHandler+0x132>
        HAL_XSPI_ErrorCallback(hxspi);
 8008922:	4620      	mov	r0, r4
        hxspi->State = HAL_XSPI_STATE_READY;
 8008924:	6565      	str	r5, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 8008926:	f7ff ff3d 	bl	80087a4 <HAL_XSPI_ErrorCallback>
      hxspi->hdmarx->XferAbortCallback = XSPI_DMAAbortCplt;
 800892a:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800892c:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmarx) != HAL_OK)
 800892e:	f7fb fd47 	bl	80043c0 <HAL_DMA_Abort_IT>
 8008932:	2800      	cmp	r0, #0
 8008934:	d080      	beq.n	8008838 <HAL_XSPI_IRQHandler+0x40>
        hxspi->State = HAL_XSPI_STATE_READY;
 8008936:	2302      	movs	r3, #2
 8008938:	6563      	str	r3, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 800893a:	4620      	mov	r0, r4
 800893c:	f7ff ff32 	bl	80087a4 <HAL_XSPI_ErrorCallback>
 8008940:	e77a      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
      hxspi->State = HAL_XSPI_STATE_READY;
 8008942:	6565      	str	r5, [r4, #84]	@ 0x54
      HAL_XSPI_ErrorCallback(hxspi);
 8008944:	e7f9      	b.n	800893a <HAL_XSPI_IRQHandler+0x142>
  else if (((flag & HAL_XSPI_FLAG_TO) != 0U) && ((itsource & HAL_XSPI_IT_TO) != 0U))
 8008946:	06d1      	lsls	r1, r2, #27
 8008948:	f57f af76 	bpl.w	8008838 <HAL_XSPI_IRQHandler+0x40>
 800894c:	02c2      	lsls	r2, r0, #11
 800894e:	f57f af73 	bpl.w	8008838 <HAL_XSPI_IRQHandler+0x40>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 8008952:	2210      	movs	r2, #16
    HAL_XSPI_TimeOutCallback(hxspi);
 8008954:	4620      	mov	r0, r4
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 8008956:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_TimeOutCallback(hxspi);
 8008958:	f7ff ff4d 	bl	80087f6 <HAL_XSPI_TimeOutCallback>
}
 800895c:	e76c      	b.n	8008838 <HAL_XSPI_IRQHandler+0x40>
 800895e:	bf00      	nop
 8008960:	080087a9 	.word	0x080087a9

08008964 <IRQ_Context>:
#endif

/*
  Determine if CPU executes from interrupt context or if interrupts are masked.
*/
__STATIC_INLINE uint32_t IRQ_Context (void) {
 8008964:	b510      	push	{r4, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008966:	f3ef 8405 	mrs	r4, IPSR
  uint32_t irq;
  BaseType_t state;

  irq = 0U;

  if (IS_IRQ_MODE()) {
 800896a:	b114      	cbz	r4, 8008972 <IRQ_Context+0xe>
    /* Called from interrupt context */
    irq = 1U;
 800896c:	2401      	movs	r4, #1
    }
  }

  /* Return context, 0: thread context, 1: IRQ context */
  return (irq);
}
 800896e:	4620      	mov	r0, r4
 8008970:	bd10      	pop	{r4, pc}
    state = xTaskGetSchedulerState();
 8008972:	f001 fc51 	bl	800a218 <xTaskGetSchedulerState>
    if (state != taskSCHEDULER_NOT_STARTED) {
 8008976:	2801      	cmp	r0, #1
 8008978:	d0f9      	beq.n	800896e <IRQ_Context+0xa>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 800897a:	f3ef 8310 	mrs	r3, PRIMASK
      if (IS_IRQ_MASKED()) {
 800897e:	2b00      	cmp	r3, #0
 8008980:	d1f4      	bne.n	800896c <IRQ_Context+0x8>
 */
__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008982:	f3ef 8411 	mrs	r4, BASEPRI
 8008986:	3c00      	subs	r4, #0
 8008988:	bf18      	it	ne
 800898a:	2401      	movne	r4, #1
  return (irq);
 800898c:	e7ef      	b.n	800896e <IRQ_Context+0xa>

0800898e <SysTick_Handler>:
void SysTick_Handler (void) {
 800898e:	b508      	push	{r3, lr}
  SysTick->CTRL;
 8008990:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008994:	691b      	ldr	r3, [r3, #16]
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008996:	f001 fc3f 	bl	800a218 <xTaskGetSchedulerState>
 800899a:	2801      	cmp	r0, #1
 800899c:	d003      	beq.n	80089a6 <SysTick_Handler+0x18>
}
 800899e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80089a2:	f000 ba7d 	b.w	8008ea0 <xPortSysTickHandler>
}
 80089a6:	bd08      	pop	{r3, pc}

080089a8 <osKernelInitialize>:
/* ==== Kernel Management Functions ==== */

/*
  Initialize the RTOS Kernel.
*/
osStatus_t osKernelInitialize (void) {
 80089a8:	b508      	push	{r3, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 80089aa:	f7ff ffdb 	bl	8008964 <IRQ_Context>
 80089ae:	b948      	cbnz	r0, 80089c4 <osKernelInitialize+0x1c>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 80089b0:	f001 fc32 	bl	800a218 <xTaskGetSchedulerState>

    /* Initialize if scheduler not started and not initialized before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 80089b4:	2801      	cmp	r0, #1
    state = xTaskGetSchedulerState();
 80089b6:	4603      	mov	r3, r0
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 80089b8:	d107      	bne.n	80089ca <osKernelInitialize+0x22>
 80089ba:	4a05      	ldr	r2, [pc, #20]	@ (80089d0 <osKernelInitialize+0x28>)
 80089bc:	6810      	ldr	r0, [r2, #0]
 80089be:	b920      	cbnz	r0, 80089ca <osKernelInitialize+0x22>
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        /* Initialize the memory regions when using heap_5 variant */
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80089c0:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return execution status */
  return (stat);
}
 80089c2:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 80089c4:	f06f 0005 	mvn.w	r0, #5
 80089c8:	e7fb      	b.n	80089c2 <osKernelInitialize+0x1a>
      stat = osError;
 80089ca:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80089ce:	e7f8      	b.n	80089c2 <osKernelInitialize+0x1a>
 80089d0:	2006efac 	.word	0x2006efac

080089d4 <osKernelStart>:
}

/*
  Start the RTOS Kernel scheduler.
*/
osStatus_t osKernelStart (void) {
 80089d4:	b510      	push	{r4, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 80089d6:	f7ff ffc5 	bl	8008964 <IRQ_Context>
 80089da:	4604      	mov	r4, r0
 80089dc:	b978      	cbnz	r0, 80089fe <osKernelStart+0x2a>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 80089de:	f001 fc1b 	bl	800a218 <xTaskGetSchedulerState>

    /* Start scheduler if initialized and not started before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelReady)) {
 80089e2:	2801      	cmp	r0, #1
 80089e4:	d10e      	bne.n	8008a04 <osKernelStart+0x30>
 80089e6:	4b09      	ldr	r3, [pc, #36]	@ (8008a0c <osKernelStart+0x38>)
 80089e8:	681a      	ldr	r2, [r3, #0]
 80089ea:	2a01      	cmp	r2, #1
 80089ec:	d10a      	bne.n	8008a04 <osKernelStart+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80089ee:	4a08      	ldr	r2, [pc, #32]	@ (8008a10 <osKernelStart+0x3c>)
 80089f0:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to ensure correct API flow */
      KernelState = osKernelRunning;
 80089f2:	2202      	movs	r2, #2
 80089f4:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80089f6:	f001 fab1 	bl	8009f5c <vTaskStartScheduler>
      stat = osOK;
 80089fa:	4620      	mov	r0, r4
    }
  }

  /* Return execution status */
  return (stat);
}
 80089fc:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80089fe:	f06f 0005 	mvn.w	r0, #5
 8008a02:	e7fb      	b.n	80089fc <osKernelStart+0x28>
      stat = osError;
 8008a04:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008a08:	e7f8      	b.n	80089fc <osKernelStart+0x28>
 8008a0a:	bf00      	nop
 8008a0c:	2006efac 	.word	0x2006efac
 8008a10:	e000ed00 	.word	0xe000ed00

08008a14 <osThreadNew>:
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008a14:	2300      	movs	r3, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008a16:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a18:	b087      	sub	sp, #28
 8008a1a:	4606      	mov	r6, r0
 8008a1c:	460f      	mov	r7, r1
 8008a1e:	4614      	mov	r4, r2
  hTask = NULL;
 8008a20:	9305      	str	r3, [sp, #20]

  if ((IRQ_Context() == 0U) && (func != NULL)) {
 8008a22:	f7ff ff9f 	bl	8008964 <IRQ_Context>
 8008a26:	b9d8      	cbnz	r0, 8008a60 <osThreadNew+0x4c>
 8008a28:	b1d6      	cbz	r6, 8008a60 <osThreadNew+0x4c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008a2a:	2c00      	cmp	r4, #0
 8008a2c:	d02f      	beq.n	8008a8e <osThreadNew+0x7a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008a2e:	69a5      	ldr	r5, [r4, #24]
 8008a30:	2d00      	cmp	r5, #0
 8008a32:	bf08      	it	eq
 8008a34:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008a36:	1e6b      	subs	r3, r5, #1
 8008a38:	2b37      	cmp	r3, #55	@ 0x37
 8008a3a:	46ae      	mov	lr, r5
 8008a3c:	d811      	bhi.n	8008a62 <osThreadNew+0x4e>
 8008a3e:	6863      	ldr	r3, [r4, #4]
 8008a40:	07db      	lsls	r3, r3, #31
 8008a42:	d40e      	bmi.n	8008a62 <osThreadNew+0x4e>
        /* Invalid priority or unsupported osThreadJoinable attribute used */
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008a44:	6963      	ldr	r3, [r4, #20]
 8008a46:	b173      	cbz	r3, 8008a66 <osThreadNew+0x52>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008a48:	089a      	lsrs	r2, r3, #2
      if (attr->name != NULL) {
 8008a4a:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a4c:	e9d4 c002 	ldrd	ip, r0, [r4, #8]
 8008a50:	f1bc 0f00 	cmp.w	ip, #0
 8008a54:	d009      	beq.n	8008a6a <osThreadNew+0x56>
 8008a56:	285f      	cmp	r0, #95	@ 0x5f
 8008a58:	d902      	bls.n	8008a60 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008a5a:	6920      	ldr	r0, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a5c:	b100      	cbz	r0, 8008a60 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008a5e:	b9db      	cbnz	r3, 8008a98 <osThreadNew+0x84>
      }
    }
  }

  /* Return thread ID */
  return ((osThreadId_t)hTask);
 8008a60:	9805      	ldr	r0, [sp, #20]
}
 8008a62:	b007      	add	sp, #28
 8008a64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008a66:	2280      	movs	r2, #128	@ 0x80
 8008a68:	e7ef      	b.n	8008a4a <osThreadNew+0x36>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008a6a:	2800      	cmp	r0, #0
 8008a6c:	d1f8      	bne.n	8008a60 <osThreadNew+0x4c>
      if (mem == 0) {
 8008a6e:	6923      	ldr	r3, [r4, #16]
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	d1f5      	bne.n	8008a60 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (configSTACK_DEPTH_TYPE)stack, argument, prio, &hTask) != pdPASS) {
 8008a74:	ab05      	add	r3, sp, #20
 8008a76:	e9cd e300 	strd	lr, r3, [sp]
 8008a7a:	4630      	mov	r0, r6
 8008a7c:	463b      	mov	r3, r7
 8008a7e:	b292      	uxth	r2, r2
 8008a80:	f001 f8bd 	bl	8009bfe <xTaskCreate>
 8008a84:	2801      	cmp	r0, #1
            hTask = NULL;
 8008a86:	bf1c      	itt	ne
 8008a88:	2300      	movne	r3, #0
 8008a8a:	9305      	strne	r3, [sp, #20]
 8008a8c:	e7e8      	b.n	8008a60 <osThreadNew+0x4c>
    name = NULL;
 8008a8e:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8008a90:	f04f 0e18 	mov.w	lr, #24
    stack = configMINIMAL_STACK_SIZE;
 8008a94:	2280      	movs	r2, #128	@ 0x80
 8008a96:	e7ed      	b.n	8008a74 <osThreadNew+0x60>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008a98:	e9cd 0c01 	strd	r0, ip, [sp, #4]
 8008a9c:	463b      	mov	r3, r7
 8008a9e:	4630      	mov	r0, r6
 8008aa0:	9500      	str	r5, [sp, #0]
 8008aa2:	f001 f886 	bl	8009bb2 <xTaskCreateStatic>
 8008aa6:	9005      	str	r0, [sp, #20]
 8008aa8:	e7da      	b.n	8008a60 <osThreadNew+0x4c>

08008aaa <osDelay>:
/* ==== Generic Wait Functions ==== */

/*
  Wait for Timeout (Time Delay).
*/
osStatus_t osDelay (uint32_t ticks) {
 8008aaa:	b510      	push	{r4, lr}
 8008aac:	4604      	mov	r4, r0
  osStatus_t stat;

  if (IRQ_Context() != 0U) {
 8008aae:	f7ff ff59 	bl	8008964 <IRQ_Context>
 8008ab2:	b928      	cbnz	r0, 8008ac0 <osDelay+0x16>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008ab4:	b114      	cbz	r4, 8008abc <osDelay+0x12>
      vTaskDelay(ticks);
 8008ab6:	4620      	mov	r0, r4
 8008ab8:	f001 fa1c 	bl	8009ef4 <vTaskDelay>
    stat = osOK;
 8008abc:	2000      	movs	r0, #0
    }
  }

  /* Return execution status */
  return (stat);
}
 8008abe:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008ac0:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8008ac4:	e7fb      	b.n	8008abe <osDelay+0x14>

08008ac6 <osSemaphoreNew>:
/* ==== Semaphore Management Functions ==== */

/*
  Create and Initialize a Semaphore object.
*/
osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008ac6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008ac8:	4604      	mov	r4, r0
 8008aca:	460e      	mov	r6, r1
 8008acc:	4615      	mov	r5, r2
  SemaphoreHandle_t hSemaphore;
  int32_t mem;

  hSemaphore = NULL;

  if ((IRQ_Context() == 0U) && (max_count > 0U) && (initial_count <= max_count)) {
 8008ace:	f7ff ff49 	bl	8008964 <IRQ_Context>
 8008ad2:	b940      	cbnz	r0, 8008ae6 <osSemaphoreNew+0x20>
 8008ad4:	b13c      	cbz	r4, 8008ae6 <osSemaphoreNew+0x20>
 8008ad6:	42b4      	cmp	r4, r6
 8008ad8:	d305      	bcc.n	8008ae6 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008ada:	b155      	cbz	r5, 8008af2 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008adc:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008ae0:	b12b      	cbz	r3, 8008aee <osSemaphoreNew+0x28>
 8008ae2:	2a4f      	cmp	r2, #79	@ 0x4f
 8008ae4:	d825      	bhi.n	8008b32 <osSemaphoreNew+0x6c>
  hSemaphore = NULL;
 8008ae6:	2400      	movs	r4, #0
    }
  }

  /* Return semaphore ID */
  return ((osSemaphoreId_t)hSemaphore);
}
 8008ae8:	4620      	mov	r0, r4
 8008aea:	b002      	add	sp, #8
 8008aec:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008aee:	2a00      	cmp	r2, #0
 8008af0:	d1f9      	bne.n	8008ae6 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8008af2:	2c01      	cmp	r4, #1
 8008af4:	d008      	beq.n	8008b08 <osSemaphoreNew+0x42>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008af6:	4620      	mov	r0, r4
 8008af8:	4631      	mov	r1, r6
 8008afa:	f000 fc18 	bl	800932e <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008afe:	4604      	mov	r4, r0
 8008b00:	2800      	cmp	r0, #0
 8008b02:	d0f0      	beq.n	8008ae6 <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008b04:	b975      	cbnz	r5, 8008b24 <osSemaphoreNew+0x5e>
 8008b06:	e7ef      	b.n	8008ae8 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8008b08:	2203      	movs	r2, #3
 8008b0a:	2100      	movs	r1, #0
 8008b0c:	2001      	movs	r0, #1
 8008b0e:	f000 fbd1 	bl	80092b4 <xQueueGenericCreate>
 8008b12:	e017      	b.n	8008b44 <osSemaphoreNew+0x7e>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008b14:	4620      	mov	r0, r4
 8008b16:	461a      	mov	r2, r3
 8008b18:	4631      	mov	r1, r6
 8008b1a:	f000 fbf5 	bl	8009308 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008b1e:	4604      	mov	r4, r0
 8008b20:	2800      	cmp	r0, #0
 8008b22:	d0e0      	beq.n	8008ae6 <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008b24:	6829      	ldr	r1, [r5, #0]
 8008b26:	2900      	cmp	r1, #0
 8008b28:	d0de      	beq.n	8008ae8 <osSemaphoreNew+0x22>
          vQueueAddToRegistry (hSemaphore, attr->name);
 8008b2a:	4620      	mov	r0, r4
 8008b2c:	f000 fe6c 	bl	8009808 <vQueueAddToRegistry>
 8008b30:	e7da      	b.n	8008ae8 <osSemaphoreNew+0x22>
      if (max_count == 1U) {
 8008b32:	2c01      	cmp	r4, #1
 8008b34:	d1ee      	bne.n	8008b14 <osSemaphoreNew+0x4e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008b36:	2203      	movs	r2, #3
 8008b38:	4601      	mov	r1, r0
 8008b3a:	9200      	str	r2, [sp, #0]
 8008b3c:	4602      	mov	r2, r0
 8008b3e:	4620      	mov	r0, r4
 8008b40:	f000 fb8d 	bl	800925e <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008b44:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008b46:	2800      	cmp	r0, #0
 8008b48:	d0cd      	beq.n	8008ae6 <osSemaphoreNew+0x20>
 8008b4a:	2e00      	cmp	r6, #0
 8008b4c:	d0da      	beq.n	8008b04 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008b4e:	2300      	movs	r3, #0
 8008b50:	461a      	mov	r2, r3
 8008b52:	4619      	mov	r1, r3
 8008b54:	f000 fbfa 	bl	800934c <xQueueGenericSend>
 8008b58:	2801      	cmp	r0, #1
 8008b5a:	d0d3      	beq.n	8008b04 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8008b5c:	4620      	mov	r0, r4
 8008b5e:	f000 fe91 	bl	8009884 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008b62:	e7c0      	b.n	8008ae6 <osSemaphoreNew+0x20>

08008b64 <osSemaphoreAcquire>:

/*
  Acquire a Semaphore token or timeout if no tokens are available.
*/
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008b64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b66:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008b68:	4605      	mov	r5, r0
 8008b6a:	b918      	cbnz	r0, 8008b74 <osSemaphoreAcquire+0x10>
    stat = osErrorParameter;
 8008b6c:	f06f 0003 	mvn.w	r0, #3
    }
  }

  /* Return execution status */
  return (stat);
}
 8008b70:	b003      	add	sp, #12
 8008b72:	bd30      	pop	{r4, r5, pc}
  else if (IRQ_Context() != 0U) {
 8008b74:	f7ff fef6 	bl	8008964 <IRQ_Context>
 8008b78:	b1b8      	cbz	r0, 8008baa <osSemaphoreAcquire+0x46>
    if (timeout != 0U) {
 8008b7a:	2c00      	cmp	r4, #0
 8008b7c:	d1f6      	bne.n	8008b6c <osSemaphoreAcquire+0x8>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008b7e:	4621      	mov	r1, r4
 8008b80:	4628      	mov	r0, r5
 8008b82:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008b84:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008b86:	f000 fe01 	bl	800978c <xQueueReceiveFromISR>
 8008b8a:	2801      	cmp	r0, #1
 8008b8c:	d002      	beq.n	8008b94 <osSemaphoreAcquire+0x30>
        stat = osErrorResource;
 8008b8e:	f06f 0002 	mvn.w	r0, #2
 8008b92:	e7ed      	b.n	8008b70 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008b94:	9b01      	ldr	r3, [sp, #4]
 8008b96:	b90b      	cbnz	r3, 8008b9c <osSemaphoreAcquire+0x38>
  stat = osOK;
 8008b98:	2000      	movs	r0, #0
 8008b9a:	e7e9      	b.n	8008b70 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008b9c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ba0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ba4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ba8:	e7f6      	b.n	8008b98 <osSemaphoreAcquire+0x34>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008baa:	4621      	mov	r1, r4
 8008bac:	4628      	mov	r0, r5
 8008bae:	f000 fd58 	bl	8009662 <xQueueSemaphoreTake>
 8008bb2:	2801      	cmp	r0, #1
 8008bb4:	d0f0      	beq.n	8008b98 <osSemaphoreAcquire+0x34>
      if (timeout != 0U) {
 8008bb6:	2c00      	cmp	r4, #0
 8008bb8:	d0e9      	beq.n	8008b8e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008bba:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008bbe:	e7d7      	b.n	8008b70 <osSemaphoreAcquire+0xc>

08008bc0 <osSemaphoreRelease>:

/*
  Release a Semaphore token up to the initial maximum count.
*/
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008bc0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008bc2:	4604      	mov	r4, r0
 8008bc4:	b308      	cbz	r0, 8008c0a <osSemaphoreRelease+0x4a>
    stat = osErrorParameter;
  }
  else if (IRQ_Context() != 0U) {
 8008bc6:	f7ff fecd 	bl	8008964 <IRQ_Context>
 8008bca:	4603      	mov	r3, r0
 8008bcc:	b1a8      	cbz	r0, 8008bfa <osSemaphoreRelease+0x3a>
    yield = pdFALSE;
 8008bce:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008bd0:	4620      	mov	r0, r4
 8008bd2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008bd4:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008bd6:	f000 fc8b 	bl	80094f0 <xQueueGiveFromISR>
 8008bda:	2801      	cmp	r0, #1
 8008bdc:	d003      	beq.n	8008be6 <osSemaphoreRelease+0x26>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008bde:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008be2:	b002      	add	sp, #8
 8008be4:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008be6:	9b01      	ldr	r3, [sp, #4]
 8008be8:	b12b      	cbz	r3, 8008bf6 <osSemaphoreRelease+0x36>
 8008bea:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008bee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bf2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
  stat = osOK;
 8008bf6:	2000      	movs	r0, #0
 8008bf8:	e7f3      	b.n	8008be2 <osSemaphoreRelease+0x22>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008bfa:	4602      	mov	r2, r0
 8008bfc:	4601      	mov	r1, r0
 8008bfe:	4620      	mov	r0, r4
 8008c00:	f000 fba4 	bl	800934c <xQueueGenericSend>
 8008c04:	2801      	cmp	r0, #1
 8008c06:	d0f6      	beq.n	8008bf6 <osSemaphoreRelease+0x36>
 8008c08:	e7e9      	b.n	8008bde <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008c0a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008c0e:	e7e8      	b.n	8008be2 <osSemaphoreRelease+0x22>

08008c10 <osMessageQueueNew>:

  Limitations:
  - The memory for control block and and message data must be provided in the
    osThreadAttr_t structure in order to allocate object statically.
*/
osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008c10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c12:	4605      	mov	r5, r0
 8008c14:	460e      	mov	r6, r1
 8008c16:	4614      	mov	r4, r2
  QueueHandle_t hQueue;
  int32_t mem;

  hQueue = NULL;

  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008c18:	f7ff fea4 	bl	8008964 <IRQ_Context>
 8008c1c:	b118      	cbz	r0, 8008c26 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008c1e:	2500      	movs	r5, #0

  }

  /* Return message queue ID */
  return ((osMessageQueueId_t)hQueue);
}
 8008c20:	4628      	mov	r0, r5
 8008c22:	b003      	add	sp, #12
 8008c24:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008c26:	2d00      	cmp	r5, #0
 8008c28:	d0f9      	beq.n	8008c1e <osMessageQueueNew+0xe>
 8008c2a:	2e00      	cmp	r6, #0
 8008c2c:	d0f7      	beq.n	8008c1e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008c2e:	b31c      	cbz	r4, 8008c78 <osMessageQueueNew+0x68>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c30:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008c34:	b1c3      	cbz	r3, 8008c68 <osMessageQueueNew+0x58>
 8008c36:	2a4f      	cmp	r2, #79	@ 0x4f
 8008c38:	d9f1      	bls.n	8008c1e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c3a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c3c:	2a00      	cmp	r2, #0
 8008c3e:	d0ee      	beq.n	8008c1e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c40:	fb06 f105 	mul.w	r1, r6, r5
 8008c44:	6967      	ldr	r7, [r4, #20]
 8008c46:	428f      	cmp	r7, r1
 8008c48:	d3e9      	bcc.n	8008c1e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008c4a:	9000      	str	r0, [sp, #0]
 8008c4c:	4631      	mov	r1, r6
 8008c4e:	4628      	mov	r0, r5
 8008c50:	f000 fb05 	bl	800925e <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008c54:	4605      	mov	r5, r0
 8008c56:	2800      	cmp	r0, #0
 8008c58:	d0e1      	beq.n	8008c1e <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008c5a:	6821      	ldr	r1, [r4, #0]
 8008c5c:	2900      	cmp	r1, #0
 8008c5e:	d0df      	beq.n	8008c20 <osMessageQueueNew+0x10>
        vQueueAddToRegistry (hQueue, attr->name);
 8008c60:	4628      	mov	r0, r5
 8008c62:	f000 fdd1 	bl	8009808 <vQueueAddToRegistry>
 8008c66:	e7db      	b.n	8008c20 <osMessageQueueNew+0x10>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008c68:	2a00      	cmp	r2, #0
 8008c6a:	d1d8      	bne.n	8008c1e <osMessageQueueNew+0xe>
 8008c6c:	6923      	ldr	r3, [r4, #16]
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d1d5      	bne.n	8008c1e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008c72:	6963      	ldr	r3, [r4, #20]
 8008c74:	2b00      	cmp	r3, #0
 8008c76:	d1d2      	bne.n	8008c1e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008c78:	4628      	mov	r0, r5
 8008c7a:	2200      	movs	r2, #0
 8008c7c:	4631      	mov	r1, r6
 8008c7e:	f000 fb19 	bl	80092b4 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008c82:	4605      	mov	r5, r0
 8008c84:	2800      	cmp	r0, #0
 8008c86:	d0ca      	beq.n	8008c1e <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008c88:	2c00      	cmp	r4, #0
 8008c8a:	d1e6      	bne.n	8008c5a <osMessageQueueNew+0x4a>
 8008c8c:	e7c8      	b.n	8008c20 <osMessageQueueNew+0x10>

08008c8e <osMessageQueuePut>:
  Put a Message into a Queue or timeout if Queue is full.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008c8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008c90:	461c      	mov	r4, r3
 8008c92:	4605      	mov	r5, r0
 8008c94:	460e      	mov	r6, r1

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008c96:	f7ff fe65 	bl	8008964 <IRQ_Context>
 8008c9a:	4603      	mov	r3, r0
 8008c9c:	b1d0      	cbz	r0, 8008cd4 <osMessageQueuePut+0x46>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008c9e:	b33d      	cbz	r5, 8008cf0 <osMessageQueuePut+0x62>
 8008ca0:	b336      	cbz	r6, 8008cf0 <osMessageQueuePut+0x62>
 8008ca2:	bb2c      	cbnz	r4, 8008cf0 <osMessageQueuePut+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008ca4:	4623      	mov	r3, r4
 8008ca6:	4631      	mov	r1, r6
 8008ca8:	4628      	mov	r0, r5
 8008caa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008cac:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008cae:	f000 fbd6 	bl	800945e <xQueueGenericSendFromISR>
 8008cb2:	2801      	cmp	r0, #1
 8008cb4:	d003      	beq.n	8008cbe <osMessageQueuePut+0x30>
        stat = osErrorResource;
 8008cb6:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008cba:	b002      	add	sp, #8
 8008cbc:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008cbe:	9b01      	ldr	r3, [sp, #4]
 8008cc0:	b90b      	cbnz	r3, 8008cc6 <osMessageQueuePut+0x38>
  stat = osOK;
 8008cc2:	2000      	movs	r0, #0
 8008cc4:	e7f9      	b.n	8008cba <osMessageQueuePut+0x2c>
        portYIELD_FROM_ISR (yield);
 8008cc6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008cca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cce:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cd2:	e7f6      	b.n	8008cc2 <osMessageQueuePut+0x34>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008cd4:	b165      	cbz	r5, 8008cf0 <osMessageQueuePut+0x62>
 8008cd6:	b15e      	cbz	r6, 8008cf0 <osMessageQueuePut+0x62>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008cd8:	4622      	mov	r2, r4
 8008cda:	4631      	mov	r1, r6
 8008cdc:	4628      	mov	r0, r5
 8008cde:	f000 fb35 	bl	800934c <xQueueGenericSend>
 8008ce2:	2801      	cmp	r0, #1
 8008ce4:	d0ed      	beq.n	8008cc2 <osMessageQueuePut+0x34>
        if (timeout != 0U) {
 8008ce6:	2c00      	cmp	r4, #0
 8008ce8:	d0e5      	beq.n	8008cb6 <osMessageQueuePut+0x28>
          stat = osErrorTimeout;
 8008cea:	f06f 0001 	mvn.w	r0, #1
 8008cee:	e7e4      	b.n	8008cba <osMessageQueuePut+0x2c>
      stat = osErrorParameter;
 8008cf0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008cf4:	e7e1      	b.n	8008cba <osMessageQueuePut+0x2c>

08008cf6 <osMessageQueueGet>:
  Get a Message from a Queue or timeout if Queue is empty.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008cf6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008cf8:	4605      	mov	r5, r0
 8008cfa:	460e      	mov	r6, r1
 8008cfc:	461c      	mov	r4, r3

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008cfe:	f7ff fe31 	bl	8008964 <IRQ_Context>
 8008d02:	b1c8      	cbz	r0, 8008d38 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008d04:	b335      	cbz	r5, 8008d54 <osMessageQueueGet+0x5e>
 8008d06:	b32e      	cbz	r6, 8008d54 <osMessageQueueGet+0x5e>
 8008d08:	bb24      	cbnz	r4, 8008d54 <osMessageQueueGet+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008d0a:	4631      	mov	r1, r6
 8008d0c:	4628      	mov	r0, r5
 8008d0e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008d10:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008d12:	f000 fd3b 	bl	800978c <xQueueReceiveFromISR>
 8008d16:	2801      	cmp	r0, #1
 8008d18:	d003      	beq.n	8008d22 <osMessageQueueGet+0x2c>
        stat = osErrorResource;
 8008d1a:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008d1e:	b002      	add	sp, #8
 8008d20:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008d22:	9b01      	ldr	r3, [sp, #4]
 8008d24:	b90b      	cbnz	r3, 8008d2a <osMessageQueueGet+0x34>
  stat = osOK;
 8008d26:	2000      	movs	r0, #0
 8008d28:	e7f9      	b.n	8008d1e <osMessageQueueGet+0x28>
        portYIELD_FROM_ISR (yield);
 8008d2a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d2e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d32:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d36:	e7f6      	b.n	8008d26 <osMessageQueueGet+0x30>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d38:	b165      	cbz	r5, 8008d54 <osMessageQueueGet+0x5e>
 8008d3a:	b15e      	cbz	r6, 8008d54 <osMessageQueueGet+0x5e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d3c:	4622      	mov	r2, r4
 8008d3e:	4631      	mov	r1, r6
 8008d40:	4628      	mov	r0, r5
 8008d42:	f000 fc12 	bl	800956a <xQueueReceive>
 8008d46:	2801      	cmp	r0, #1
 8008d48:	d0ed      	beq.n	8008d26 <osMessageQueueGet+0x30>
        if (timeout != 0U) {
 8008d4a:	2c00      	cmp	r4, #0
 8008d4c:	d0e5      	beq.n	8008d1a <osMessageQueueGet+0x24>
          stat = osErrorTimeout;
 8008d4e:	f06f 0001 	mvn.w	r0, #1
 8008d52:	e7e4      	b.n	8008d1e <osMessageQueueGet+0x28>
      stat = osErrorParameter;
 8008d54:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008d58:	e7e1      	b.n	8008d1e <osMessageQueueGet+0x28>
	...

08008d5c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008d5c:	4b03      	ldr	r3, [pc, #12]	@ (8008d6c <vApplicationGetIdleTaskMemory+0x10>)
 8008d5e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008d60:	4b03      	ldr	r3, [pc, #12]	@ (8008d70 <vApplicationGetIdleTaskMemory+0x14>)
 8008d62:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008d64:	2380      	movs	r3, #128	@ 0x80
 8008d66:	6013      	str	r3, [r2, #0]
}
 8008d68:	4770      	bx	lr
 8008d6a:	bf00      	nop
 8008d6c:	2006ef4c 	.word	0x2006ef4c
 8008d70:	2006ed4c 	.word	0x2006ed4c

08008d74 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008d74:	4b03      	ldr	r3, [pc, #12]	@ (8008d84 <vApplicationGetTimerTaskMemory+0x10>)
 8008d76:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008d78:	4b03      	ldr	r3, [pc, #12]	@ (8008d88 <vApplicationGetTimerTaskMemory+0x14>)
 8008d7a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008d7c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008d80:	6013      	str	r3, [r2, #0]
}
 8008d82:	4770      	bx	lr
 8008d84:	2006ecec 	.word	0x2006ecec
 8008d88:	2006e8ec 	.word	0x2006e8ec

08008d8c <vListInitialise>:
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008d8c:	f04f 32ff 	mov.w	r2, #4294967295
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d90:	f100 0308 	add.w	r3, r0, #8

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d94:	e9c0 2302 	strd	r2, r3, [r0, #8]
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d98:	6043      	str	r3, [r0, #4]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d9a:	6103      	str	r3, [r0, #16]

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008d9c:	2300      	movs	r3, #0
 8008d9e:	6003      	str	r3, [r0, #0]

    /* Write known values into the list if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008da0:	4770      	bx	lr

08008da2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 8008da2:	2300      	movs	r3, #0
 8008da4:	6103      	str	r3, [r0, #16]

    /* Write known values into the list item if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008da6:	4770      	bx	lr

08008da8 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 8008da8:	b530      	push	{r4, r5, lr}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008daa:	680c      	ldr	r4, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 8008dac:	1c63      	adds	r3, r4, #1
 8008dae:	d10a      	bne.n	8008dc6 <vListInsert+0x1e>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
 8008db0:	6903      	ldr	r3, [r0, #16]
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 8008db2:	685a      	ldr	r2, [r3, #4]
 8008db4:	604a      	str	r2, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008db6:	6091      	str	r1, [r2, #8]
    pxNewListItem->pxPrevious = pxIterator;
 8008db8:	608b      	str	r3, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 8008dba:	6059      	str	r1, [r3, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
 8008dbc:	6803      	ldr	r3, [r0, #0]
    pxNewListItem->pxContainer = pxList;
 8008dbe:	6108      	str	r0, [r1, #16]
    ( pxList->uxNumberOfItems )++;
 8008dc0:	3301      	adds	r3, #1
 8008dc2:	6003      	str	r3, [r0, #0]
}
 8008dc4:	bd30      	pop	{r4, r5, pc}
        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008dc6:	f100 0208 	add.w	r2, r0, #8
 8008dca:	4613      	mov	r3, r2
 8008dcc:	6852      	ldr	r2, [r2, #4]
 8008dce:	6815      	ldr	r5, [r2, #0]
 8008dd0:	42a5      	cmp	r5, r4
 8008dd2:	d9fa      	bls.n	8008dca <vListInsert+0x22>
 8008dd4:	e7ed      	b.n	8008db2 <vListInsert+0xa>

08008dd6 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 8008dd6:	6903      	ldr	r3, [r0, #16]

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008dd8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008ddc:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008dde:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 8008de0:	6859      	ldr	r1, [r3, #4]
 8008de2:	4281      	cmp	r1, r0
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008de4:	bf08      	it	eq
 8008de6:	605a      	streq	r2, [r3, #4]
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 8008de8:	2200      	movs	r2, #0
 8008dea:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems )--;
 8008dec:	681a      	ldr	r2, [r3, #0]
 8008dee:	3a01      	subs	r2, #1
 8008df0:	601a      	str	r2, [r3, #0]

    return pxList->uxNumberOfItems;
 8008df2:	6818      	ldr	r0, [r3, #0]
}
 8008df4:	4770      	bx	lr
	...

08008df8 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    volatile uint32_t ulDummy = 0UL;
 8008df8:	2300      	movs	r3, #0
{
 8008dfa:	b507      	push	{r0, r1, r2, lr}
    volatile uint32_t ulDummy = 0UL;
 8008dfc:	9301      	str	r3, [sp, #4]
    /* A function that implements a task must not exit or attempt to return to
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
 8008dfe:	4b07      	ldr	r3, [pc, #28]	@ (8008e1c <prvTaskExitError+0x24>)
 8008e00:	681b      	ldr	r3, [r3, #0]
 8008e02:	3301      	adds	r3, #1
 8008e04:	d002      	beq.n	8008e0c <prvTaskExitError+0x14>
 8008e06:	f000 f905 	bl	8009014 <ulSetInterruptMask>
 8008e0a:	e7fe      	b.n	8008e0a <prvTaskExitError+0x12>
    portDISABLE_INTERRUPTS();
 8008e0c:	f000 f902 	bl	8009014 <ulSetInterruptMask>

    while( ulDummy == 0 )
 8008e10:	9b01      	ldr	r3, [sp, #4]
 8008e12:	2b00      	cmp	r3, #0
 8008e14:	d0fc      	beq.n	8008e10 <prvTaskExitError+0x18>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
 8008e16:	b003      	add	sp, #12
 8008e18:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e1c:	20000058 	.word	0x20000058

08008e20 <vPortSetupTimerInterrupt>:
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e20:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008e24:	2300      	movs	r3, #0
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e26:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e2a:	6113      	str	r3, [r2, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008e2c:	6193      	str	r3, [r2, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e2e:	4b04      	ldr	r3, [pc, #16]	@ (8008e40 <vPortSetupTimerInterrupt+0x20>)
 8008e30:	681b      	ldr	r3, [r3, #0]
 8008e32:	fbb3 f3f1 	udiv	r3, r3, r1
 8008e36:	3b01      	subs	r3, #1
 8008e38:	6153      	str	r3, [r2, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 8008e3a:	2307      	movs	r3, #7
 8008e3c:	6113      	str	r3, [r2, #16]
}
 8008e3e:	4770      	bx	lr
 8008e40:	2000004c 	.word	0x2000004c

08008e44 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e44:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e48:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008e50:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008e54:	f3bf 8f6f 	isb	sy
}
 8008e58:	4770      	bx	lr
	...

08008e5c <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008e5c:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
 8008e5e:	f000 f8d9 	bl	8009014 <ulSetInterruptMask>
    ulCriticalNesting++;
 8008e62:	4a04      	ldr	r2, [pc, #16]	@ (8008e74 <vPortEnterCritical+0x18>)
 8008e64:	6813      	ldr	r3, [r2, #0]
 8008e66:	3301      	adds	r3, #1
 8008e68:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008e6a:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008e6e:	f3bf 8f6f 	isb	sy
}
 8008e72:	bd08      	pop	{r3, pc}
 8008e74:	20000058 	.word	0x20000058

08008e78 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008e78:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
 8008e7a:	4b08      	ldr	r3, [pc, #32]	@ (8008e9c <vPortExitCritical+0x24>)
 8008e7c:	681a      	ldr	r2, [r3, #0]
 8008e7e:	b912      	cbnz	r2, 8008e86 <vPortExitCritical+0xe>
 8008e80:	f000 f8c8 	bl	8009014 <ulSetInterruptMask>
 8008e84:	e7fe      	b.n	8008e84 <vPortExitCritical+0xc>
    ulCriticalNesting--;
 8008e86:	681a      	ldr	r2, [r3, #0]
 8008e88:	3a01      	subs	r2, #1
 8008e8a:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
 8008e8c:	6818      	ldr	r0, [r3, #0]
 8008e8e:	b918      	cbnz	r0, 8008e98 <vPortExitCritical+0x20>
    {
        portENABLE_INTERRUPTS();
    }
}
 8008e90:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        portENABLE_INTERRUPTS();
 8008e94:	f000 b8c9 	b.w	800902a <vClearInterruptMask>
}
 8008e98:	bd08      	pop	{r3, pc}
 8008e9a:	bf00      	nop
 8008e9c:	20000058 	.word	0x20000058

08008ea0 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
 8008ea0:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 8008ea2:	f000 f8b7 	bl	8009014 <ulSetInterruptMask>
 8008ea6:	4604      	mov	r4, r0
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
 8008ea8:	f000 fee6 	bl	8009c78 <xTaskIncrementTick>
 8008eac:	b128      	cbz	r0, 8008eba <xPortSysTickHandler+0x1a>
        {
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008eae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008eb2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008eb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008eba:	4620      	mov	r0, r4
}
 8008ebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008ec0:	f000 b8b3 	b.w	800902a <vClearInterruptMask>

08008ec4 <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
 8008ec4:	b508      	push	{r3, lr}
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ 6 ];
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
 8008ec6:	6983      	ldr	r3, [r0, #24]

    switch( ucSVCNumber )
 8008ec8:	f813 3c02 	ldrb.w	r3, [r3, #-2]
 8008ecc:	2b02      	cmp	r3, #2
 8008ece:	d111      	bne.n	8008ef4 <vPortSVCHandler_C+0x30>
        *( portCPACR ) |= ( ( portCPACR_CP10_VALUE << portCPACR_CP10_POS ) |
 8008ed0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ed4:	f8d3 2d88 	ldr.w	r2, [r3, #3464]	@ 0xd88
 8008ed8:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8008edc:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
        *( portFPCCR ) |= ( portFPCCR_ASPEN_MASK | portFPCCR_LSPEN_MASK );
 8008ee0:	f8d3 2f34 	ldr.w	r2, [r3, #3892]	@ 0xf34
 8008ee4:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
 8008ee8:	f8c3 2f34 	str.w	r2, [r3, #3892]	@ 0xf34

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
 8008eec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            vRestoreContextOfFirstTask();
 8008ef0:	f000 b85e 	b.w	8008fb0 <vRestoreContextOfFirstTask>
            configASSERT( pdFALSE );
 8008ef4:	f000 f88e 	bl	8009014 <ulSetInterruptMask>
 8008ef8:	e7fe      	b.n	8008ef8 <vPortSVCHandler_C+0x34>
	...

08008efc <pxPortInitialiseStack>:
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
#endif /* configENABLE_MPU */
/* *INDENT-ON* */
{
 8008efc:	b510      	push	{r4, lr}
            #endif /* configENABLE_TRUSTZONE */
        }
    #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
 8008efe:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
 8008f02:	e940 2402 	strd	r2, r4, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008f06:	4a18      	ldr	r2, [pc, #96]	@ (8008f68 <pxPortInitialiseStack+0x6c>)
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f08:	f04f 3412 	mov.w	r4, #303174162	@ 0x12121212
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008f0c:	f840 2c0c 	str.w	r2, [r0, #-12]
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f10:	f04f 3203 	mov.w	r2, #50529027	@ 0x3030303
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f14:	f04f 3c02 	mov.w	ip, #33686018	@ 0x2020202
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f18:	e940 2405 	strd	r2, r4, [r0, #-20]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f1c:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
 8008f20:	f840 3c20 	str.w	r3, [r0, #-32]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f24:	e940 2c07 	strd	r2, ip, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f28:	f04f 3310 	mov.w	r3, #269488144	@ 0x10101010
 8008f2c:	f04f 3211 	mov.w	r2, #286331153	@ 0x11111111
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f30:	f04f 3409 	mov.w	r4, #151587081	@ 0x9090909
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f34:	e940 320a 	strd	r3, r2, [r0, #-40]	@ 0x28
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f38:	f04f 3308 	mov.w	r3, #134744072	@ 0x8080808
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f3c:	f04f 3c07 	mov.w	ip, #117901063	@ 0x7070707
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f40:	e940 340c 	strd	r3, r4, [r0, #-48]	@ 0x30
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f44:	f04f 3306 	mov.w	r3, #101058054	@ 0x6060606
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f48:	f04f 3205 	mov.w	r2, #84215045	@ 0x5050505
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f4c:	e940 3c0e 	strd	r3, ip, [r0, #-56]	@ 0x38
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f50:	f04f 3304 	mov.w	r3, #67372036	@ 0x4040404
 8008f54:	e940 3210 	strd	r3, r2, [r0, #-64]	@ 0x40
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN */
 8008f58:	f06f 0343 	mvn.w	r3, #67	@ 0x43
 8008f5c:	f840 3c44 	str.w	r3, [r0, #-68]
                    }
                }
            #endif /* configENABLE_MPU */

            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack; /* Slot used to hold this task's PSPLIM value. */
 8008f60:	f840 1d48 	str.w	r1, [r0, #-72]!
            #endif /* configENABLE_TRUSTZONE */
        }
    #endif /* portPRELOAD_REGISTERS */

    return pxTopOfStack;
}
 8008f64:	bd10      	pop	{r4, pc}
 8008f66:	bf00      	nop
 8008f68:	08008df9 	.word	0x08008df9

08008f6c <xPortStartScheduler>:
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
    /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008f6c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008f70:	b510      	push	{r4, lr}
    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
 8008f72:	2400      	movs	r4, #0
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008f74:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008f78:	f442 027f 	orr.w	r2, r2, #16711680	@ 0xff0000
 8008f7c:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 8008f80:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008f84:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8008f88:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    vPortSetupTimerInterrupt();
 8008f8c:	f7ff ff48 	bl	8008e20 <vPortSetupTimerInterrupt>
    ulCriticalNesting = 0;
 8008f90:	4b04      	ldr	r3, [pc, #16]	@ (8008fa4 <xPortStartScheduler+0x38>)
 8008f92:	601c      	str	r4, [r3, #0]

    /* Start the first task. */
    vStartFirstTask();
 8008f94:	f000 f82c 	bl	8008ff0 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
 8008f98:	f001 f824 	bl	8009fe4 <vTaskSwitchContext>
    prvTaskExitError();
 8008f9c:	f7ff ff2c 	bl	8008df8 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	bd10      	pop	{r4, pc}
 8008fa4:	20000058 	.word	0x20000058
	...

08008fb0 <vRestoreContextOfFirstTask>:
 * header files. */
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008fb0:	4a0b      	ldr	r2, [pc, #44]	@ (8008fe0 <pxCurrentTCBConst2>)
 8008fb2:	6811      	ldr	r1, [r2, #0]
 8008fb4:	6808      	ldr	r0, [r1, #0]
 8008fb6:	c806      	ldmia	r0!, {r1, r2}
 8008fb8:	f381 880b 	msr	PSPLIM, r1
 8008fbc:	2102      	movs	r1, #2
 8008fbe:	f381 8814 	msr	CONTROL, r1
 8008fc2:	3020      	adds	r0, #32
 8008fc4:	f380 8809 	msr	PSP, r0
 8008fc8:	f3bf 8f6f 	isb	sy
 8008fcc:	f04f 0000 	mov.w	r0, #0
 8008fd0:	f380 8811 	msr	BASEPRI, r0
 8008fd4:	4710      	bx	r2
 8008fd6:	bf00      	nop
 8008fd8:	f3af 8000 	nop.w
 8008fdc:	f3af 8000 	nop.w

08008fe0 <pxCurrentTCBConst2>:
 8008fe0:	2006f4e8 	.word	0x2006f4e8
	...

08008ff0 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008ff0:	4807      	ldr	r0, [pc, #28]	@ (8009010 <xVTORConst>)
 8008ff2:	6800      	ldr	r0, [r0, #0]
 8008ff4:	6800      	ldr	r0, [r0, #0]
 8008ff6:	f380 8808 	msr	MSP, r0
 8008ffa:	b662      	cpsie	i
 8008ffc:	b661      	cpsie	f
 8008ffe:	f3bf 8f4f 	dsb	sy
 8009002:	f3bf 8f6f 	isb	sy
 8009006:	df02      	svc	2
 8009008:	bf00      	nop
 800900a:	bf00      	nop
 800900c:	f3af 8000 	nop.w

08009010 <xVTORConst>:
 8009010:	e000ed08 	.word	0xe000ed08

08009014 <ulSetInterruptMask>:
}
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009014:	f3ef 8011 	mrs	r0, BASEPRI
 8009018:	f04f 0150 	mov.w	r1, #80	@ 0x50
 800901c:	f381 8811 	msr	BASEPRI, r1
 8009020:	f3bf 8f4f 	dsb	sy
 8009024:	f3bf 8f6f 	isb	sy
 8009028:	4770      	bx	lr

0800902a <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800902a:	f380 8811 	msr	BASEPRI, r0
 800902e:	f3bf 8f4f 	dsb	sy
 8009032:	f3bf 8f6f 	isb	sy
 8009036:	4770      	bx	lr
	...

08009040 <PendSV_Handler>:
}
/*-----------------------------------------------------------*/

void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009040:	f3ef 8009 	mrs	r0, PSP
 8009044:	f01e 0f10 	tst.w	lr, #16
 8009048:	bf08      	it	eq
 800904a:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800904e:	f3ef 820b 	mrs	r2, PSPLIM
 8009052:	4673      	mov	r3, lr
 8009054:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009058:	4a11      	ldr	r2, [pc, #68]	@ (80090a0 <pxCurrentTCBConst>)
 800905a:	6811      	ldr	r1, [r2, #0]
 800905c:	6008      	str	r0, [r1, #0]
 800905e:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8009062:	f380 8811 	msr	BASEPRI, r0
 8009066:	f3bf 8f4f 	dsb	sy
 800906a:	f3bf 8f6f 	isb	sy
 800906e:	f000 ffb9 	bl	8009fe4 <vTaskSwitchContext>
 8009072:	f04f 0000 	mov.w	r0, #0
 8009076:	f380 8811 	msr	BASEPRI, r0
 800907a:	4a09      	ldr	r2, [pc, #36]	@ (80090a0 <pxCurrentTCBConst>)
 800907c:	6811      	ldr	r1, [r2, #0]
 800907e:	6808      	ldr	r0, [r1, #0]
 8009080:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009084:	f013 0f10 	tst.w	r3, #16
 8009088:	bf08      	it	eq
 800908a:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800908e:	f382 880b 	msr	PSPLIM, r2
 8009092:	f380 8809 	msr	PSP, r0
 8009096:	4718      	bx	r3
 8009098:	f3af 8000 	nop.w
 800909c:	f3af 8000 	nop.w

080090a0 <pxCurrentTCBConst>:
 80090a0:	2006f4e8 	.word	0x2006f4e8
	...

080090b0 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 80090b0:	f01e 0f04 	tst.w	lr, #4
 80090b4:	bf0c      	ite	eq
 80090b6:	f3ef 8008 	mrseq	r0, MSP
 80090ba:	f3ef 8009 	mrsne	r0, PSP
 80090be:	4904      	ldr	r1, [pc, #16]	@ (80090d0 <svchandler_address_const>)
 80090c0:	4708      	bx	r1
 80090c2:	bf00      	nop
 80090c4:	f3af 8000 	nop.w
 80090c8:	f3af 8000 	nop.w
 80090cc:	f3af 8000 	nop.w

080090d0 <svchandler_address_const>:
 80090d0:	08008ec5 	.word	0x08008ec5

080090d4 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 80090d4:	b510      	push	{r4, lr}
 80090d6:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 80090d8:	f7ff fec0 	bl	8008e5c <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 80090dc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 80090de:	f7ff fecb 	bl	8008e78 <vPortExitCritical>

    return xReturn;
}
 80090e2:	fab4 f084 	clz	r0, r4
 80090e6:	0940      	lsrs	r0, r0, #5
 80090e8:	bd10      	pop	{r4, pc}

080090ea <prvCopyDataToQueue>:
{
 80090ea:	b570      	push	{r4, r5, r6, lr}
 80090ec:	4616      	mov	r6, r2
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090ee:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 80090f0:	4604      	mov	r4, r0
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80090f2:	6b85      	ldr	r5, [r0, #56]	@ 0x38
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090f4:	b942      	cbnz	r2, 8009108 <prvCopyDataToQueue+0x1e>
                if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090f6:	6806      	ldr	r6, [r0, #0]
 80090f8:	b99e      	cbnz	r6, 8009122 <prvCopyDataToQueue+0x38>
                    xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80090fa:	6880      	ldr	r0, [r0, #8]
 80090fc:	f001 f8e2 	bl	800a2c4 <xTaskPriorityDisinherit>
                    pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009100:	60a6      	str	r6, [r4, #8]
    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009102:	3501      	adds	r5, #1
 8009104:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8009106:	bd70      	pop	{r4, r5, r6, pc}
    else if( xPosition == queueSEND_TO_BACK )
 8009108:	b96e      	cbnz	r6, 8009126 <prvCopyDataToQueue+0x3c>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800910a:	6840      	ldr	r0, [r0, #4]
 800910c:	f029 fcbd 	bl	8032a8a <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009110:	6863      	ldr	r3, [r4, #4]
 8009112:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009114:	4413      	add	r3, r2
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009116:	68a2      	ldr	r2, [r4, #8]
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009118:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800911a:	4293      	cmp	r3, r2
            pxQueue->pcWriteTo = pxQueue->pcHead;
 800911c:	bf24      	itt	cs
 800911e:	6823      	ldrcs	r3, [r4, #0]
 8009120:	6063      	strcs	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 8009122:	2000      	movs	r0, #0
 8009124:	e7ed      	b.n	8009102 <prvCopyDataToQueue+0x18>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009126:	68c0      	ldr	r0, [r0, #12]
 8009128:	f029 fcaf 	bl	8032a8a <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800912c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800912e:	68e3      	ldr	r3, [r4, #12]
 8009130:	4251      	negs	r1, r2
 8009132:	1a9b      	subs	r3, r3, r2
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009134:	6822      	ldr	r2, [r4, #0]
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009136:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009138:	4293      	cmp	r3, r2
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800913a:	bf3e      	ittt	cc
 800913c:	68a3      	ldrcc	r3, [r4, #8]
 800913e:	185b      	addcc	r3, r3, r1
 8009140:	60e3      	strcc	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 8009142:	2e02      	cmp	r6, #2
 8009144:	d1ed      	bne.n	8009122 <prvCopyDataToQueue+0x38>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009146:	b10d      	cbz	r5, 800914c <prvCopyDataToQueue+0x62>
                --uxMessagesWaiting;
 8009148:	3d01      	subs	r5, #1
 800914a:	e7ea      	b.n	8009122 <prvCopyDataToQueue+0x38>
    BaseType_t xReturn = pdFALSE;
 800914c:	4628      	mov	r0, r5
 800914e:	e7d8      	b.n	8009102 <prvCopyDataToQueue+0x18>

08009150 <prvCopyDataFromQueue>:
{
 8009150:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009152:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8009154:	4608      	mov	r0, r1
 8009156:	b410      	push	{r4}
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009158:	b16a      	cbz	r2, 8009176 <prvCopyDataFromQueue+0x26>
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800915a:	68dc      	ldr	r4, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800915c:	6899      	ldr	r1, [r3, #8]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800915e:	4414      	add	r4, r2
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009160:	428c      	cmp	r4, r1
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009162:	bf28      	it	cs
 8009164:	6819      	ldrcs	r1, [r3, #0]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009166:	60dc      	str	r4, [r3, #12]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009168:	bf28      	it	cs
 800916a:	60d9      	strcs	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800916c:	68d9      	ldr	r1, [r3, #12]
}
 800916e:	f85d 4b04 	ldr.w	r4, [sp], #4
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009172:	f029 bc8a 	b.w	8032a8a <memcpy>
}
 8009176:	f85d 4b04 	ldr.w	r4, [sp], #4
 800917a:	4770      	bx	lr

0800917c <prvUnlockQueue>:
{
 800917c:	b570      	push	{r4, r5, r6, lr}
 800917e:	4604      	mov	r4, r0
    taskENTER_CRITICAL();
 8009180:	f7ff fe6c 	bl	8008e5c <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 8009184:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009188:	f104 0624 	add.w	r6, r4, #36	@ 0x24
        int8_t cTxLock = pxQueue->cTxLock;
 800918c:	b26d      	sxtb	r5, r5
        while( cTxLock > queueLOCKED_UNMODIFIED )
 800918e:	2d00      	cmp	r5, #0
 8009190:	dc14      	bgt.n	80091bc <prvUnlockQueue+0x40>
        pxQueue->cTxLock = queueUNLOCKED;
 8009192:	23ff      	movs	r3, #255	@ 0xff
 8009194:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
    taskEXIT_CRITICAL();
 8009198:	f7ff fe6e 	bl	8008e78 <vPortExitCritical>
    taskENTER_CRITICAL();
 800919c:	f7ff fe5e 	bl	8008e5c <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 80091a0:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091a4:	f104 0610 	add.w	r6, r4, #16
        int8_t cRxLock = pxQueue->cRxLock;
 80091a8:	b26d      	sxtb	r5, r5
        while( cRxLock > queueLOCKED_UNMODIFIED )
 80091aa:	2d00      	cmp	r5, #0
 80091ac:	dc12      	bgt.n	80091d4 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 80091ae:	23ff      	movs	r3, #255	@ 0xff
 80091b0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 80091b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    taskEXIT_CRITICAL();
 80091b8:	f7ff be5e 	b.w	8008e78 <vPortExitCritical>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80091bc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80091be:	2b00      	cmp	r3, #0
 80091c0:	d0e7      	beq.n	8009192 <prvUnlockQueue+0x16>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091c2:	4630      	mov	r0, r6
 80091c4:	f000 ff88 	bl	800a0d8 <xTaskRemoveFromEventList>
 80091c8:	b108      	cbz	r0, 80091ce <prvUnlockQueue+0x52>
                            vTaskMissedYield();
 80091ca:	f001 f81f 	bl	800a20c <vTaskMissedYield>
            --cTxLock;
 80091ce:	3d01      	subs	r5, #1
 80091d0:	b26d      	sxtb	r5, r5
 80091d2:	e7dc      	b.n	800918e <prvUnlockQueue+0x12>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091d4:	6923      	ldr	r3, [r4, #16]
 80091d6:	2b00      	cmp	r3, #0
 80091d8:	d0e9      	beq.n	80091ae <prvUnlockQueue+0x32>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091da:	4630      	mov	r0, r6
 80091dc:	f000 ff7c 	bl	800a0d8 <xTaskRemoveFromEventList>
 80091e0:	b108      	cbz	r0, 80091e6 <prvUnlockQueue+0x6a>
                    vTaskMissedYield();
 80091e2:	f001 f813 	bl	800a20c <vTaskMissedYield>
                --cRxLock;
 80091e6:	3d01      	subs	r5, #1
 80091e8:	b26d      	sxtb	r5, r5
 80091ea:	e7de      	b.n	80091aa <prvUnlockQueue+0x2e>

080091ec <xQueueGenericReset>:
{
 80091ec:	b570      	push	{r4, r5, r6, lr}
 80091ee:	460e      	mov	r6, r1
    configASSERT( pxQueue );
 80091f0:	4604      	mov	r4, r0
 80091f2:	b910      	cbnz	r0, 80091fa <xQueueGenericReset+0xe>
 80091f4:	f7ff ff0e 	bl	8009014 <ulSetInterruptMask>
 80091f8:	e7fe      	b.n	80091f8 <xQueueGenericReset+0xc>
        ( pxQueue->uxLength >= 1U ) &&
 80091fa:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
    if( ( pxQueue != NULL ) &&
 80091fc:	b365      	cbz	r5, 8009258 <xQueueGenericReset+0x6c>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 80091fe:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009200:	fba3 3505 	umull	r3, r5, r3, r5
 8009204:	bb45      	cbnz	r5, 8009258 <xQueueGenericReset+0x6c>
        taskENTER_CRITICAL();
 8009206:	f7ff fe29 	bl	8008e5c <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800920a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800920e:	434b      	muls	r3, r1
 8009210:	6822      	ldr	r2, [r4, #0]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009212:	63a5      	str	r5, [r4, #56]	@ 0x38
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009214:	18d0      	adds	r0, r2, r3
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009216:	1a5b      	subs	r3, r3, r1
            pxQueue->pcWriteTo = pxQueue->pcHead;
 8009218:	6062      	str	r2, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800921a:	441a      	add	r2, r3
            pxQueue->cRxLock = queueUNLOCKED;
 800921c:	23ff      	movs	r3, #255	@ 0xff
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800921e:	60a0      	str	r0, [r4, #8]
            pxQueue->cRxLock = queueUNLOCKED;
 8009220:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009224:	60e2      	str	r2, [r4, #12]
            pxQueue->cTxLock = queueUNLOCKED;
 8009226:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
            if( xNewQueue == pdFALSE )
 800922a:	b966      	cbnz	r6, 8009246 <xQueueGenericReset+0x5a>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800922c:	6923      	ldr	r3, [r4, #16]
 800922e:	b133      	cbz	r3, 800923e <xQueueGenericReset+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009230:	f104 0010 	add.w	r0, r4, #16
 8009234:	f000 ff50 	bl	800a0d8 <xTaskRemoveFromEventList>
 8009238:	b108      	cbz	r0, 800923e <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 800923a:	f7ff fe03 	bl	8008e44 <vPortYield>
        taskEXIT_CRITICAL();
 800923e:	f7ff fe1b 	bl	8008e78 <vPortExitCritical>
}
 8009242:	2001      	movs	r0, #1
 8009244:	bd70      	pop	{r4, r5, r6, pc}
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009246:	f104 0010 	add.w	r0, r4, #16
 800924a:	f7ff fd9f 	bl	8008d8c <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800924e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009252:	f7ff fd9b 	bl	8008d8c <vListInitialise>
 8009256:	e7f2      	b.n	800923e <xQueueGenericReset+0x52>
    configASSERT( xReturn != pdFAIL );
 8009258:	f7ff fedc 	bl	8009014 <ulSetInterruptMask>
 800925c:	e7fe      	b.n	800925c <xQueueGenericReset+0x70>

0800925e <xQueueGenericCreateStatic>:
    {
 800925e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009260:	460d      	mov	r5, r1
        configASSERT( pxStaticQueue );
 8009262:	461c      	mov	r4, r3
 8009264:	b913      	cbnz	r3, 800926c <xQueueGenericCreateStatic+0xe>
 8009266:	f7ff fed5 	bl	8009014 <ulSetInterruptMask>
 800926a:	e7fe      	b.n	800926a <xQueueGenericCreateStatic+0xc>
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800926c:	b108      	cbz	r0, 8009272 <xQueueGenericCreateStatic+0x14>
            ( pxStaticQueue != NULL ) &&
 800926e:	b11a      	cbz	r2, 8009278 <xQueueGenericCreateStatic+0x1a>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 8009270:	b921      	cbnz	r1, 800927c <xQueueGenericCreateStatic+0x1e>
            configASSERT( pxNewQueue );
 8009272:	f7ff fecf 	bl	8009014 <ulSetInterruptMask>
 8009276:	e7fe      	b.n	8009276 <xQueueGenericCreateStatic+0x18>
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 8009278:	2900      	cmp	r1, #0
 800927a:	d1fa      	bne.n	8009272 <xQueueGenericCreateStatic+0x14>
                    volatile size_t xSize = sizeof( StaticQueue_t );
 800927c:	2350      	movs	r3, #80	@ 0x50
 800927e:	9301      	str	r3, [sp, #4]
                    configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 8009280:	9b01      	ldr	r3, [sp, #4]
 8009282:	2b50      	cmp	r3, #80	@ 0x50
 8009284:	d002      	beq.n	800928c <xQueueGenericCreateStatic+0x2e>
 8009286:	f7ff fec5 	bl	8009014 <ulSetInterruptMask>
 800928a:	e7fe      	b.n	800928a <xQueueGenericCreateStatic+0x2c>
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800928c:	2101      	movs	r1, #1
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800928e:	2d00      	cmp	r5, #0
 8009290:	bf08      	it	eq
 8009292:	4622      	moveq	r2, r4
    pxNewQueue->uxItemSize = uxItemSize;
 8009294:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009298:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800929c:	4620      	mov	r0, r4
 800929e:	6022      	str	r2, [r4, #0]
                    ( void ) xSize;                             /* Keeps lint quiet when configASSERT() is not defined. */
 80092a0:	9b01      	ldr	r3, [sp, #4]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092a2:	f7ff ffa3 	bl	80091ec <xQueueGenericReset>
    }
 80092a6:	4620      	mov	r0, r4
            pxNewQueue->ucQueueType = ucQueueType;
 80092a8:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80092ac:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    }
 80092b0:	b003      	add	sp, #12
 80092b2:	bd30      	pop	{r4, r5, pc}

080092b4 <xQueueGenericCreate>:
    {
 80092b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092b8:	460d      	mov	r5, r1
 80092ba:	4617      	mov	r7, r2
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 80092bc:	4606      	mov	r6, r0
 80092be:	b300      	cbz	r0, 8009302 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 80092c0:	fba1 3800 	umull	r3, r8, r1, r0
 80092c4:	f1b8 0f00 	cmp.w	r8, #0
 80092c8:	d11b      	bne.n	8009302 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 80092ca:	4348      	muls	r0, r1
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 80092cc:	f110 0f51 	cmn.w	r0, #81	@ 0x51
 80092d0:	d817      	bhi.n	8009302 <xQueueGenericCreate+0x4e>
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80092d2:	3050      	adds	r0, #80	@ 0x50
 80092d4:	f001 fa30 	bl	800a738 <pvPortMalloc>
            if( pxNewQueue != NULL )
 80092d8:	4604      	mov	r4, r0
 80092da:	b168      	cbz	r0, 80092f8 <xQueueGenericCreate+0x44>
                        pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80092dc:	f880 8046 	strb.w	r8, [r0, #70]	@ 0x46
    if( uxItemSize == ( UBaseType_t ) 0 )
 80092e0:	b16d      	cbz	r5, 80092fe <xQueueGenericCreate+0x4a>
                pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80092e2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092e6:	2101      	movs	r1, #1
 80092e8:	4620      	mov	r0, r4
    pxNewQueue->uxItemSize = uxItemSize;
 80092ea:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80092ee:	6023      	str	r3, [r4, #0]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092f0:	f7ff ff7c 	bl	80091ec <xQueueGenericReset>
            pxNewQueue->ucQueueType = ucQueueType;
 80092f4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
    }
 80092f8:	4620      	mov	r0, r4
 80092fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80092fe:	4603      	mov	r3, r0
 8009300:	e7f1      	b.n	80092e6 <xQueueGenericCreate+0x32>
            configASSERT( pxNewQueue );
 8009302:	f7ff fe87 	bl	8009014 <ulSetInterruptMask>
 8009306:	e7fe      	b.n	8009306 <xQueueGenericCreate+0x52>

08009308 <xQueueCreateCountingSemaphoreStatic>:
    {
 8009308:	b513      	push	{r0, r1, r4, lr}
 800930a:	4613      	mov	r3, r2
 800930c:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 800930e:	b158      	cbz	r0, 8009328 <xQueueCreateCountingSemaphoreStatic+0x20>
 8009310:	4288      	cmp	r0, r1
 8009312:	d309      	bcc.n	8009328 <xQueueCreateCountingSemaphoreStatic+0x20>
            xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009314:	2202      	movs	r2, #2
 8009316:	9200      	str	r2, [sp, #0]
 8009318:	2200      	movs	r2, #0
 800931a:	4611      	mov	r1, r2
 800931c:	f7ff ff9f 	bl	800925e <xQueueGenericCreateStatic>
            if( xHandle != NULL )
 8009320:	b100      	cbz	r0, 8009324 <xQueueCreateCountingSemaphoreStatic+0x1c>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009322:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009324:	b002      	add	sp, #8
 8009326:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009328:	f7ff fe74 	bl	8009014 <ulSetInterruptMask>
 800932c:	e7fe      	b.n	800932c <xQueueCreateCountingSemaphoreStatic+0x24>

0800932e <xQueueCreateCountingSemaphore>:
    {
 800932e:	b510      	push	{r4, lr}
 8009330:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 8009332:	b140      	cbz	r0, 8009346 <xQueueCreateCountingSemaphore+0x18>
 8009334:	4288      	cmp	r0, r1
 8009336:	d306      	bcc.n	8009346 <xQueueCreateCountingSemaphore+0x18>
            xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009338:	2202      	movs	r2, #2
 800933a:	2100      	movs	r1, #0
 800933c:	f7ff ffba 	bl	80092b4 <xQueueGenericCreate>
            if( xHandle != NULL )
 8009340:	b100      	cbz	r0, 8009344 <xQueueCreateCountingSemaphore+0x16>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009342:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009344:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009346:	f7ff fe65 	bl	8009014 <ulSetInterruptMask>
 800934a:	e7fe      	b.n	800934a <xQueueCreateCountingSemaphore+0x1c>

0800934c <xQueueGenericSend>:
{
 800934c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009350:	460f      	mov	r7, r1
 8009352:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009354:	4604      	mov	r4, r0
{
 8009356:	9201      	str	r2, [sp, #4]
    configASSERT( pxQueue );
 8009358:	b910      	cbnz	r0, 8009360 <xQueueGenericSend+0x14>
 800935a:	f7ff fe5b 	bl	8009014 <ulSetInterruptMask>
 800935e:	e7fe      	b.n	800935e <xQueueGenericSend+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009360:	b921      	cbnz	r1, 800936c <xQueueGenericSend+0x20>
 8009362:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009364:	b113      	cbz	r3, 800936c <xQueueGenericSend+0x20>
 8009366:	f7ff fe55 	bl	8009014 <ulSetInterruptMask>
 800936a:	e7fe      	b.n	800936a <xQueueGenericSend+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800936c:	2e02      	cmp	r6, #2
 800936e:	d105      	bne.n	800937c <xQueueGenericSend+0x30>
 8009370:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009372:	2b01      	cmp	r3, #1
 8009374:	d002      	beq.n	800937c <xQueueGenericSend+0x30>
 8009376:	f7ff fe4d 	bl	8009014 <ulSetInterruptMask>
 800937a:	e7fe      	b.n	800937a <xQueueGenericSend+0x2e>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800937c:	f000 ff4c 	bl	800a218 <xTaskGetSchedulerState>
 8009380:	4605      	mov	r5, r0
 8009382:	b1f0      	cbz	r0, 80093c2 <xQueueGenericSend+0x76>
 8009384:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 8009386:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 800938a:	f7ff fd67 	bl	8008e5c <vPortEnterCritical>
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800938e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009390:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009392:	429a      	cmp	r2, r3
 8009394:	d301      	bcc.n	800939a <xQueueGenericSend+0x4e>
 8009396:	2e02      	cmp	r6, #2
 8009398:	d119      	bne.n	80093ce <xQueueGenericSend+0x82>
                        xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800939a:	4632      	mov	r2, r6
 800939c:	4639      	mov	r1, r7
 800939e:	4620      	mov	r0, r4
 80093a0:	f7ff fea3 	bl	80090ea <prvCopyDataToQueue>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80093a6:	b11b      	cbz	r3, 80093b0 <xQueueGenericSend+0x64>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093a8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80093ac:	f000 fe94 	bl	800a0d8 <xTaskRemoveFromEventList>
 80093b0:	b108      	cbz	r0, 80093b6 <xQueueGenericSend+0x6a>
                                queueYIELD_IF_USING_PREEMPTION();
 80093b2:	f7ff fd47 	bl	8008e44 <vPortYield>
                taskEXIT_CRITICAL();
 80093b6:	f7ff fd5f 	bl	8008e78 <vPortExitCritical>
                return pdPASS;
 80093ba:	2001      	movs	r0, #1
}
 80093bc:	b004      	add	sp, #16
 80093be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80093c2:	9b01      	ldr	r3, [sp, #4]
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	d0de      	beq.n	8009386 <xQueueGenericSend+0x3a>
 80093c8:	f7ff fe24 	bl	8009014 <ulSetInterruptMask>
 80093cc:	e7fe      	b.n	80093cc <xQueueGenericSend+0x80>
                if( xTicksToWait == ( TickType_t ) 0 )
 80093ce:	9b01      	ldr	r3, [sp, #4]
 80093d0:	b91b      	cbnz	r3, 80093da <xQueueGenericSend+0x8e>
                    taskEXIT_CRITICAL();
 80093d2:	f7ff fd51 	bl	8008e78 <vPortExitCritical>
                    return errQUEUE_FULL;
 80093d6:	2000      	movs	r0, #0
 80093d8:	e7f0      	b.n	80093bc <xQueueGenericSend+0x70>
                else if( xEntryTimeSet == pdFALSE )
 80093da:	b915      	cbnz	r5, 80093e2 <xQueueGenericSend+0x96>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80093dc:	a802      	add	r0, sp, #8
 80093de:	f000 fed9 	bl	800a194 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80093e2:	f7ff fd49 	bl	8008e78 <vPortExitCritical>
        vTaskSuspendAll();
 80093e6:	f000 fc39 	bl	8009c5c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80093ea:	f7ff fd37 	bl	8008e5c <vPortEnterCritical>
 80093ee:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80093f2:	2bff      	cmp	r3, #255	@ 0xff
 80093f4:	bf08      	it	eq
 80093f6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80093fa:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80093fe:	2bff      	cmp	r3, #255	@ 0xff
 8009400:	bf08      	it	eq
 8009402:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8009406:	f7ff fd37 	bl	8008e78 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800940a:	a901      	add	r1, sp, #4
 800940c:	a802      	add	r0, sp, #8
 800940e:	f000 fecd 	bl	800a1ac <xTaskCheckForTimeOut>
 8009412:	b9f0      	cbnz	r0, 8009452 <xQueueGenericSend+0x106>

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8009414:	f7ff fd22 	bl	8008e5c <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009418:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800941a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800941c:	429a      	cmp	r2, r3
 800941e:	d10f      	bne.n	8009440 <xQueueGenericSend+0xf4>
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 8009420:	f7ff fd2a 	bl	8008e78 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009424:	9901      	ldr	r1, [sp, #4]
 8009426:	f104 0010 	add.w	r0, r4, #16
 800942a:	f000 fe19 	bl	800a060 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800942e:	4620      	mov	r0, r4
 8009430:	f7ff fea4 	bl	800917c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009434:	f000 fcd0 	bl	8009dd8 <xTaskResumeAll>
 8009438:	b948      	cbnz	r0, 800944e <xQueueGenericSend+0x102>
                    portYIELD_WITHIN_API();
 800943a:	f7ff fd03 	bl	8008e44 <vPortYield>
 800943e:	e006      	b.n	800944e <xQueueGenericSend+0x102>
    taskEXIT_CRITICAL();
 8009440:	f7ff fd1a 	bl	8008e78 <vPortExitCritical>
                prvUnlockQueue( pxQueue );
 8009444:	4620      	mov	r0, r4
 8009446:	f7ff fe99 	bl	800917c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800944a:	f000 fcc5 	bl	8009dd8 <xTaskResumeAll>
 800944e:	2501      	movs	r5, #1
 8009450:	e79b      	b.n	800938a <xQueueGenericSend+0x3e>
            prvUnlockQueue( pxQueue );
 8009452:	4620      	mov	r0, r4
 8009454:	f7ff fe92 	bl	800917c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009458:	f000 fcbe 	bl	8009dd8 <xTaskResumeAll>
            return errQUEUE_FULL;
 800945c:	e7bb      	b.n	80093d6 <xQueueGenericSend+0x8a>

0800945e <xQueueGenericSendFromISR>:
{
 800945e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009462:	4689      	mov	r9, r1
 8009464:	4617      	mov	r7, r2
 8009466:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009468:	4604      	mov	r4, r0
 800946a:	b910      	cbnz	r0, 8009472 <xQueueGenericSendFromISR+0x14>
 800946c:	f7ff fdd2 	bl	8009014 <ulSetInterruptMask>
 8009470:	e7fe      	b.n	8009470 <xQueueGenericSendFromISR+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009472:	b921      	cbnz	r1, 800947e <xQueueGenericSendFromISR+0x20>
 8009474:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009476:	b113      	cbz	r3, 800947e <xQueueGenericSendFromISR+0x20>
 8009478:	f7ff fdcc 	bl	8009014 <ulSetInterruptMask>
 800947c:	e7fe      	b.n	800947c <xQueueGenericSendFromISR+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800947e:	2e02      	cmp	r6, #2
 8009480:	d105      	bne.n	800948e <xQueueGenericSendFromISR+0x30>
 8009482:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009484:	2b01      	cmp	r3, #1
 8009486:	d002      	beq.n	800948e <xQueueGenericSendFromISR+0x30>
 8009488:	f7ff fdc4 	bl	8009014 <ulSetInterruptMask>
 800948c:	e7fe      	b.n	800948c <xQueueGenericSendFromISR+0x2e>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800948e:	f7ff fdc1 	bl	8009014 <ulSetInterruptMask>
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009492:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009494:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009496:	4680      	mov	r8, r0
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009498:	429a      	cmp	r2, r3
 800949a:	d301      	bcc.n	80094a0 <xQueueGenericSendFromISR+0x42>
 800949c:	2e02      	cmp	r6, #2
 800949e:	d125      	bne.n	80094ec <xQueueGenericSendFromISR+0x8e>
            const int8_t cTxLock = pxQueue->cTxLock;
 80094a0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094a4:	4632      	mov	r2, r6
 80094a6:	4649      	mov	r1, r9
 80094a8:	4620      	mov	r0, r4
            const int8_t cTxLock = pxQueue->cTxLock;
 80094aa:	b26d      	sxtb	r5, r5
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094ac:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094ae:	f7ff fe1c 	bl	80090ea <prvCopyDataToQueue>
            if( cTxLock == queueUNLOCKED )
 80094b2:	1c6b      	adds	r3, r5, #1
 80094b4:	d110      	bne.n	80094d8 <xQueueGenericSendFromISR+0x7a>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094b6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80094b8:	b13b      	cbz	r3, 80094ca <xQueueGenericSendFromISR+0x6c>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094ba:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80094be:	f000 fe0b 	bl	800a0d8 <xTaskRemoveFromEventList>
 80094c2:	b110      	cbz	r0, 80094ca <xQueueGenericSendFromISR+0x6c>
                                if( pxHigherPriorityTaskWoken != NULL )
 80094c4:	b10f      	cbz	r7, 80094ca <xQueueGenericSendFromISR+0x6c>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 80094c6:	2301      	movs	r3, #1
 80094c8:	603b      	str	r3, [r7, #0]
            xReturn = pdPASS;
 80094ca:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 80094cc:	4640      	mov	r0, r8
 80094ce:	f7ff fdac 	bl	800902a <vClearInterruptMask>
}
 80094d2:	4620      	mov	r0, r4
 80094d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 80094d8:	2d7f      	cmp	r5, #127	@ 0x7f
 80094da:	d102      	bne.n	80094e2 <xQueueGenericSendFromISR+0x84>
 80094dc:	f7ff fd9a 	bl	8009014 <ulSetInterruptMask>
 80094e0:	e7fe      	b.n	80094e0 <xQueueGenericSendFromISR+0x82>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094e2:	3501      	adds	r5, #1
 80094e4:	b26d      	sxtb	r5, r5
 80094e6:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80094ea:	e7ee      	b.n	80094ca <xQueueGenericSendFromISR+0x6c>
            xReturn = errQUEUE_FULL;
 80094ec:	2400      	movs	r4, #0
 80094ee:	e7ed      	b.n	80094cc <xQueueGenericSendFromISR+0x6e>

080094f0 <xQueueGiveFromISR>:
{
 80094f0:	b570      	push	{r4, r5, r6, lr}
 80094f2:	460d      	mov	r5, r1
    configASSERT( pxQueue );
 80094f4:	4604      	mov	r4, r0
 80094f6:	b910      	cbnz	r0, 80094fe <xQueueGiveFromISR+0xe>
 80094f8:	f7ff fd8c 	bl	8009014 <ulSetInterruptMask>
 80094fc:	e7fe      	b.n	80094fc <xQueueGiveFromISR+0xc>
    configASSERT( pxQueue->uxItemSize == 0 );
 80094fe:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009500:	b113      	cbz	r3, 8009508 <xQueueGiveFromISR+0x18>
 8009502:	f7ff fd87 	bl	8009014 <ulSetInterruptMask>
 8009506:	e7fe      	b.n	8009506 <xQueueGiveFromISR+0x16>
    configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009508:	6803      	ldr	r3, [r0, #0]
 800950a:	b923      	cbnz	r3, 8009516 <xQueueGiveFromISR+0x26>
 800950c:	6883      	ldr	r3, [r0, #8]
 800950e:	b113      	cbz	r3, 8009516 <xQueueGiveFromISR+0x26>
 8009510:	f7ff fd80 	bl	8009014 <ulSetInterruptMask>
 8009514:	e7fe      	b.n	8009514 <xQueueGiveFromISR+0x24>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009516:	f7ff fd7d 	bl	8009014 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800951a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        if( uxMessagesWaiting < pxQueue->uxLength )
 800951c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800951e:	4606      	mov	r6, r0
        if( uxMessagesWaiting < pxQueue->uxLength )
 8009520:	4293      	cmp	r3, r2
 8009522:	d920      	bls.n	8009566 <xQueueGiveFromISR+0x76>
            const int8_t cTxLock = pxQueue->cTxLock;
 8009524:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009528:	3201      	adds	r2, #1
            if( cTxLock == queueUNLOCKED )
 800952a:	29ff      	cmp	r1, #255	@ 0xff
            const int8_t cTxLock = pxQueue->cTxLock;
 800952c:	b24b      	sxtb	r3, r1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800952e:	63a2      	str	r2, [r4, #56]	@ 0x38
            if( cTxLock == queueUNLOCKED )
 8009530:	d10f      	bne.n	8009552 <xQueueGiveFromISR+0x62>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009532:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009534:	b13b      	cbz	r3, 8009546 <xQueueGiveFromISR+0x56>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009536:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800953a:	f000 fdcd 	bl	800a0d8 <xTaskRemoveFromEventList>
 800953e:	b110      	cbz	r0, 8009546 <xQueueGiveFromISR+0x56>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009540:	b10d      	cbz	r5, 8009546 <xQueueGiveFromISR+0x56>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009542:	2301      	movs	r3, #1
 8009544:	602b      	str	r3, [r5, #0]
            xReturn = pdPASS;
 8009546:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009548:	4630      	mov	r0, r6
 800954a:	f7ff fd6e 	bl	800902a <vClearInterruptMask>
}
 800954e:	4620      	mov	r0, r4
 8009550:	bd70      	pop	{r4, r5, r6, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009552:	2b7f      	cmp	r3, #127	@ 0x7f
 8009554:	d102      	bne.n	800955c <xQueueGiveFromISR+0x6c>
 8009556:	f7ff fd5d 	bl	8009014 <ulSetInterruptMask>
 800955a:	e7fe      	b.n	800955a <xQueueGiveFromISR+0x6a>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800955c:	3301      	adds	r3, #1
 800955e:	b25b      	sxtb	r3, r3
 8009560:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8009564:	e7ef      	b.n	8009546 <xQueueGiveFromISR+0x56>
            xReturn = errQUEUE_FULL;
 8009566:	2400      	movs	r4, #0
 8009568:	e7ee      	b.n	8009548 <xQueueGiveFromISR+0x58>

0800956a <xQueueReceive>:
{
 800956a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800956e:	460e      	mov	r6, r1
    configASSERT( ( pxQueue ) );
 8009570:	4604      	mov	r4, r0
{
 8009572:	9201      	str	r2, [sp, #4]
    configASSERT( ( pxQueue ) );
 8009574:	b910      	cbnz	r0, 800957c <xQueueReceive+0x12>
 8009576:	f7ff fd4d 	bl	8009014 <ulSetInterruptMask>
 800957a:	e7fe      	b.n	800957a <xQueueReceive+0x10>
    configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800957c:	b921      	cbnz	r1, 8009588 <xQueueReceive+0x1e>
 800957e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009580:	b113      	cbz	r3, 8009588 <xQueueReceive+0x1e>
 8009582:	f7ff fd47 	bl	8009014 <ulSetInterruptMask>
 8009586:	e7fe      	b.n	8009586 <xQueueReceive+0x1c>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009588:	f000 fe46 	bl	800a218 <xTaskGetSchedulerState>
 800958c:	4605      	mov	r5, r0
 800958e:	b1d8      	cbz	r0, 80095c8 <xQueueReceive+0x5e>
 8009590:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 8009592:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 8009596:	f7ff fc61 	bl	8008e5c <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800959a:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800959c:	b1d7      	cbz	r7, 80095d4 <xQueueReceive+0x6a>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 800959e:	4631      	mov	r1, r6
 80095a0:	4620      	mov	r0, r4
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095a2:	3f01      	subs	r7, #1
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095a4:	f7ff fdd4 	bl	8009150 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095a8:	63a7      	str	r7, [r4, #56]	@ 0x38
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095aa:	6923      	ldr	r3, [r4, #16]
 80095ac:	b133      	cbz	r3, 80095bc <xQueueReceive+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095ae:	f104 0010 	add.w	r0, r4, #16
 80095b2:	f000 fd91 	bl	800a0d8 <xTaskRemoveFromEventList>
 80095b6:	b108      	cbz	r0, 80095bc <xQueueReceive+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 80095b8:	f7ff fc44 	bl	8008e44 <vPortYield>
                taskEXIT_CRITICAL();
 80095bc:	f7ff fc5c 	bl	8008e78 <vPortExitCritical>
                return pdPASS;
 80095c0:	2001      	movs	r0, #1
}
 80095c2:	b004      	add	sp, #16
 80095c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80095c8:	9b01      	ldr	r3, [sp, #4]
 80095ca:	2b00      	cmp	r3, #0
 80095cc:	d0e1      	beq.n	8009592 <xQueueReceive+0x28>
 80095ce:	f7ff fd21 	bl	8009014 <ulSetInterruptMask>
 80095d2:	e7fe      	b.n	80095d2 <xQueueReceive+0x68>
                if( xTicksToWait == ( TickType_t ) 0 )
 80095d4:	9b01      	ldr	r3, [sp, #4]
 80095d6:	b91b      	cbnz	r3, 80095e0 <xQueueReceive+0x76>
                    taskEXIT_CRITICAL();
 80095d8:	f7ff fc4e 	bl	8008e78 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 80095dc:	2000      	movs	r0, #0
 80095de:	e7f0      	b.n	80095c2 <xQueueReceive+0x58>
                else if( xEntryTimeSet == pdFALSE )
 80095e0:	b915      	cbnz	r5, 80095e8 <xQueueReceive+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80095e2:	a802      	add	r0, sp, #8
 80095e4:	f000 fdd6 	bl	800a194 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80095e8:	f7ff fc46 	bl	8008e78 <vPortExitCritical>
        vTaskSuspendAll();
 80095ec:	f000 fb36 	bl	8009c5c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80095f0:	f7ff fc34 	bl	8008e5c <vPortEnterCritical>
 80095f4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80095f8:	2bff      	cmp	r3, #255	@ 0xff
 80095fa:	bf08      	it	eq
 80095fc:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8009600:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009604:	2bff      	cmp	r3, #255	@ 0xff
 8009606:	bf08      	it	eq
 8009608:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800960c:	f7ff fc34 	bl	8008e78 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009610:	a901      	add	r1, sp, #4
 8009612:	a802      	add	r0, sp, #8
 8009614:	f000 fdca 	bl	800a1ac <xTaskCheckForTimeOut>
 8009618:	b9c0      	cbnz	r0, 800964c <xQueueReceive+0xe2>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800961a:	4620      	mov	r0, r4
 800961c:	f7ff fd5a 	bl	80090d4 <prvIsQueueEmpty>
 8009620:	b170      	cbz	r0, 8009640 <xQueueReceive+0xd6>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009622:	9901      	ldr	r1, [sp, #4]
 8009624:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009628:	f000 fd1a 	bl	800a060 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800962c:	4620      	mov	r0, r4
 800962e:	f7ff fda5 	bl	800917c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009632:	f000 fbd1 	bl	8009dd8 <xTaskResumeAll>
 8009636:	b908      	cbnz	r0, 800963c <xQueueReceive+0xd2>
                    portYIELD_WITHIN_API();
 8009638:	f7ff fc04 	bl	8008e44 <vPortYield>
 800963c:	2501      	movs	r5, #1
 800963e:	e7aa      	b.n	8009596 <xQueueReceive+0x2c>
                prvUnlockQueue( pxQueue );
 8009640:	4620      	mov	r0, r4
 8009642:	f7ff fd9b 	bl	800917c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009646:	f000 fbc7 	bl	8009dd8 <xTaskResumeAll>
 800964a:	e7f7      	b.n	800963c <xQueueReceive+0xd2>
            prvUnlockQueue( pxQueue );
 800964c:	4620      	mov	r0, r4
 800964e:	f7ff fd95 	bl	800917c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009652:	f000 fbc1 	bl	8009dd8 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009656:	4620      	mov	r0, r4
 8009658:	f7ff fd3c 	bl	80090d4 <prvIsQueueEmpty>
 800965c:	2800      	cmp	r0, #0
 800965e:	d0ed      	beq.n	800963c <xQueueReceive+0xd2>
 8009660:	e7bc      	b.n	80095dc <xQueueReceive+0x72>

08009662 <xQueueSemaphoreTake>:
{
 8009662:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009664:	b085      	sub	sp, #20
    configASSERT( ( pxQueue ) );
 8009666:	4604      	mov	r4, r0
{
 8009668:	9101      	str	r1, [sp, #4]
    configASSERT( ( pxQueue ) );
 800966a:	b910      	cbnz	r0, 8009672 <xQueueSemaphoreTake+0x10>
 800966c:	f7ff fcd2 	bl	8009014 <ulSetInterruptMask>
 8009670:	e7fe      	b.n	8009670 <xQueueSemaphoreTake+0xe>
    configASSERT( pxQueue->uxItemSize == 0 );
 8009672:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8009674:	b115      	cbz	r5, 800967c <xQueueSemaphoreTake+0x1a>
 8009676:	f7ff fccd 	bl	8009014 <ulSetInterruptMask>
 800967a:	e7fe      	b.n	800967a <xQueueSemaphoreTake+0x18>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800967c:	f000 fdcc 	bl	800a218 <xTaskGetSchedulerState>
 8009680:	4606      	mov	r6, r0
 8009682:	b1e0      	cbz	r0, 80096be <xQueueSemaphoreTake+0x5c>
 8009684:	462e      	mov	r6, r5
        prvLockQueue( pxQueue );
 8009686:	2700      	movs	r7, #0
        taskENTER_CRITICAL();
 8009688:	f7ff fbe8 	bl	8008e5c <vPortEnterCritical>
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800968c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800968e:	b1e3      	cbz	r3, 80096ca <xQueueSemaphoreTake+0x68>
                pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009690:	3b01      	subs	r3, #1
 8009692:	63a3      	str	r3, [r4, #56]	@ 0x38
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009694:	6823      	ldr	r3, [r4, #0]
 8009696:	b913      	cbnz	r3, 800969e <xQueueSemaphoreTake+0x3c>
                            pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009698:	f000 fe98 	bl	800a3cc <pvTaskIncrementMutexHeldCount>
 800969c:	60a0      	str	r0, [r4, #8]
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800969e:	6923      	ldr	r3, [r4, #16]
 80096a0:	b133      	cbz	r3, 80096b0 <xQueueSemaphoreTake+0x4e>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096a2:	f104 0010 	add.w	r0, r4, #16
 80096a6:	f000 fd17 	bl	800a0d8 <xTaskRemoveFromEventList>
 80096aa:	b108      	cbz	r0, 80096b0 <xQueueSemaphoreTake+0x4e>
                        queueYIELD_IF_USING_PREEMPTION();
 80096ac:	f7ff fbca 	bl	8008e44 <vPortYield>
                taskEXIT_CRITICAL();
 80096b0:	f7ff fbe2 	bl	8008e78 <vPortExitCritical>
                return pdPASS;
 80096b4:	2001      	movs	r0, #1
}
 80096b6:	b005      	add	sp, #20
 80096b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096ba:	4635      	mov	r5, r6
 80096bc:	e7e3      	b.n	8009686 <xQueueSemaphoreTake+0x24>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80096be:	9b01      	ldr	r3, [sp, #4]
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d0fa      	beq.n	80096ba <xQueueSemaphoreTake+0x58>
 80096c4:	f7ff fca6 	bl	8009014 <ulSetInterruptMask>
 80096c8:	e7fe      	b.n	80096c8 <xQueueSemaphoreTake+0x66>
                if( xTicksToWait == ( TickType_t ) 0 )
 80096ca:	9b01      	ldr	r3, [sp, #4]
 80096cc:	b923      	cbnz	r3, 80096d8 <xQueueSemaphoreTake+0x76>
                            configASSERT( xInheritanceOccurred == pdFALSE );
 80096ce:	2d00      	cmp	r5, #0
 80096d0:	d058      	beq.n	8009784 <xQueueSemaphoreTake+0x122>
 80096d2:	f7ff fc9f 	bl	8009014 <ulSetInterruptMask>
 80096d6:	e7fe      	b.n	80096d6 <xQueueSemaphoreTake+0x74>
                else if( xEntryTimeSet == pdFALSE )
 80096d8:	b916      	cbnz	r6, 80096e0 <xQueueSemaphoreTake+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80096da:	a802      	add	r0, sp, #8
 80096dc:	f000 fd5a 	bl	800a194 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80096e0:	f7ff fbca 	bl	8008e78 <vPortExitCritical>
        vTaskSuspendAll();
 80096e4:	f000 faba 	bl	8009c5c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80096e8:	f7ff fbb8 	bl	8008e5c <vPortEnterCritical>
 80096ec:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80096f0:	2bff      	cmp	r3, #255	@ 0xff
 80096f2:	bf08      	it	eq
 80096f4:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80096f8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80096fc:	2bff      	cmp	r3, #255	@ 0xff
 80096fe:	bf08      	it	eq
 8009700:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8009704:	f7ff fbb8 	bl	8008e78 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009708:	a901      	add	r1, sp, #4
 800970a:	a802      	add	r0, sp, #8
 800970c:	f000 fd4e 	bl	800a1ac <xTaskCheckForTimeOut>
 8009710:	bb10      	cbnz	r0, 8009758 <xQueueSemaphoreTake+0xf6>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009712:	4620      	mov	r0, r4
 8009714:	f7ff fcde 	bl	80090d4 <prvIsQueueEmpty>
 8009718:	b1c0      	cbz	r0, 800974c <xQueueSemaphoreTake+0xea>
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800971a:	6823      	ldr	r3, [r4, #0]
 800971c:	b93b      	cbnz	r3, 800972e <xQueueSemaphoreTake+0xcc>
                            taskENTER_CRITICAL();
 800971e:	f7ff fb9d 	bl	8008e5c <vPortEnterCritical>
                                xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009722:	68a0      	ldr	r0, [r4, #8]
 8009724:	f000 fd88 	bl	800a238 <xTaskPriorityInherit>
 8009728:	4605      	mov	r5, r0
                            taskEXIT_CRITICAL();
 800972a:	f7ff fba5 	bl	8008e78 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800972e:	9901      	ldr	r1, [sp, #4]
 8009730:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009734:	f000 fc94 	bl	800a060 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 8009738:	4620      	mov	r0, r4
 800973a:	f7ff fd1f 	bl	800917c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800973e:	f000 fb4b 	bl	8009dd8 <xTaskResumeAll>
 8009742:	b908      	cbnz	r0, 8009748 <xQueueSemaphoreTake+0xe6>
                    portYIELD_WITHIN_API();
 8009744:	f7ff fb7e 	bl	8008e44 <vPortYield>
 8009748:	2601      	movs	r6, #1
 800974a:	e79d      	b.n	8009688 <xQueueSemaphoreTake+0x26>
                prvUnlockQueue( pxQueue );
 800974c:	4620      	mov	r0, r4
 800974e:	f7ff fd15 	bl	800917c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009752:	f000 fb41 	bl	8009dd8 <xTaskResumeAll>
 8009756:	e7f7      	b.n	8009748 <xQueueSemaphoreTake+0xe6>
            prvUnlockQueue( pxQueue );
 8009758:	4620      	mov	r0, r4
 800975a:	f7ff fd0f 	bl	800917c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 800975e:	f000 fb3b 	bl	8009dd8 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009762:	4620      	mov	r0, r4
 8009764:	f7ff fcb6 	bl	80090d4 <prvIsQueueEmpty>
 8009768:	2800      	cmp	r0, #0
 800976a:	d0ed      	beq.n	8009748 <xQueueSemaphoreTake+0xe6>
                        if( xInheritanceOccurred != pdFALSE )
 800976c:	b165      	cbz	r5, 8009788 <xQueueSemaphoreTake+0x126>
                            taskENTER_CRITICAL();
 800976e:	f7ff fb75 	bl	8008e5c <vPortEnterCritical>
        if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009772:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8009774:	b119      	cbz	r1, 800977e <xQueueSemaphoreTake+0x11c>
            uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009776:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009778:	6819      	ldr	r1, [r3, #0]
 800977a:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
                                vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800977e:	68a0      	ldr	r0, [r4, #8]
 8009780:	f000 fdde 	bl	800a340 <vTaskPriorityDisinheritAfterTimeout>
                            taskEXIT_CRITICAL();
 8009784:	f7ff fb78 	bl	8008e78 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 8009788:	2000      	movs	r0, #0
 800978a:	e794      	b.n	80096b6 <xQueueSemaphoreTake+0x54>

0800978c <xQueueReceiveFromISR>:
{
 800978c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009790:	4689      	mov	r9, r1
 8009792:	4690      	mov	r8, r2
    configASSERT( pxQueue );
 8009794:	4604      	mov	r4, r0
 8009796:	b910      	cbnz	r0, 800979e <xQueueReceiveFromISR+0x12>
 8009798:	f7ff fc3c 	bl	8009014 <ulSetInterruptMask>
 800979c:	e7fe      	b.n	800979c <xQueueReceiveFromISR+0x10>
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800979e:	b921      	cbnz	r1, 80097aa <xQueueReceiveFromISR+0x1e>
 80097a0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80097a2:	b113      	cbz	r3, 80097aa <xQueueReceiveFromISR+0x1e>
 80097a4:	f7ff fc36 	bl	8009014 <ulSetInterruptMask>
 80097a8:	e7fe      	b.n	80097a8 <xQueueReceiveFromISR+0x1c>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097aa:	f7ff fc33 	bl	8009014 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097ae:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097b0:	4607      	mov	r7, r0
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097b2:	b1c6      	cbz	r6, 80097e6 <xQueueReceiveFromISR+0x5a>
            const int8_t cRxLock = pxQueue->cRxLock;
 80097b4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097b8:	4649      	mov	r1, r9
 80097ba:	4620      	mov	r0, r4
            const int8_t cRxLock = pxQueue->cRxLock;
 80097bc:	b26d      	sxtb	r5, r5
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097be:	f7ff fcc7 	bl	8009150 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097c2:	3e01      	subs	r6, #1
            if( cRxLock == queueUNLOCKED )
 80097c4:	1c6b      	adds	r3, r5, #1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097c6:	63a6      	str	r6, [r4, #56]	@ 0x38
            if( cRxLock == queueUNLOCKED )
 80097c8:	d113      	bne.n	80097f2 <xQueueReceiveFromISR+0x66>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80097ca:	6923      	ldr	r3, [r4, #16]
 80097cc:	b153      	cbz	r3, 80097e4 <xQueueReceiveFromISR+0x58>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80097ce:	f104 0010 	add.w	r0, r4, #16
 80097d2:	f000 fc81 	bl	800a0d8 <xTaskRemoveFromEventList>
 80097d6:	b128      	cbz	r0, 80097e4 <xQueueReceiveFromISR+0x58>
                        if( pxHigherPriorityTaskWoken != NULL )
 80097d8:	f1b8 0f00 	cmp.w	r8, #0
 80097dc:	d002      	beq.n	80097e4 <xQueueReceiveFromISR+0x58>
                            *pxHigherPriorityTaskWoken = pdTRUE;
 80097de:	2301      	movs	r3, #1
 80097e0:	f8c8 3000 	str.w	r3, [r8]
            xReturn = pdPASS;
 80097e4:	2601      	movs	r6, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 80097e6:	4638      	mov	r0, r7
 80097e8:	f7ff fc1f 	bl	800902a <vClearInterruptMask>
}
 80097ec:	4630      	mov	r0, r6
 80097ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cRxLock != queueINT8_MAX );
 80097f2:	2d7f      	cmp	r5, #127	@ 0x7f
 80097f4:	d102      	bne.n	80097fc <xQueueReceiveFromISR+0x70>
 80097f6:	f7ff fc0d 	bl	8009014 <ulSetInterruptMask>
 80097fa:	e7fe      	b.n	80097fa <xQueueReceiveFromISR+0x6e>
                pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80097fc:	3501      	adds	r5, #1
 80097fe:	b26d      	sxtb	r5, r5
 8009800:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8009804:	e7ee      	b.n	80097e4 <xQueueReceiveFromISR+0x58>
	...

08009808 <vQueueAddToRegistry>:

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueAddToRegistry( QueueHandle_t xQueue,
                              const char * pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
    {
 8009808:	b570      	push	{r4, r5, r6, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800980a:	b910      	cbnz	r0, 8009812 <vQueueAddToRegistry+0xa>
 800980c:	f7ff fc02 	bl	8009014 <ulSetInterruptMask>
 8009810:	e7fe      	b.n	8009810 <vQueueAddToRegistry+0x8>

        QueueRegistryItem_t * pxEntryToWrite = NULL;

        if( pcQueueName != NULL )
 8009812:	b1b9      	cbz	r1, 8009844 <vQueueAddToRegistry+0x3c>
        QueueRegistryItem_t * pxEntryToWrite = NULL;
 8009814:	2300      	movs	r3, #0
 8009816:	4a0c      	ldr	r2, [pc, #48]	@ (8009848 <vQueueAddToRegistry+0x40>)
        {
            /* See if there is an empty space in the registry.  A NULL name denotes
             * a free slot. */
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009818:	461c      	mov	r4, r3
 800981a:	4615      	mov	r5, r2
            {
                /* Replace an existing entry if the queue is already in the registry. */
                if( xQueue == xQueueRegistry[ ux ].xHandle )
 800981c:	6856      	ldr	r6, [r2, #4]
 800981e:	4286      	cmp	r6, r0
 8009820:	d104      	bne.n	800982c <vQueueAddToRegistry+0x24>
                {
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009822:	eb05 03c4 	add.w	r3, r5, r4, lsl #3

        if( pxEntryToWrite != NULL )
        {
            /* Store the information on this queue. */
            pxEntryToWrite->pcQueueName = pcQueueName;
            pxEntryToWrite->xHandle = xQueue;
 8009826:	e9c3 1000 	strd	r1, r0, [r3]

            traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
        }
    }
 800982a:	e00b      	b.n	8009844 <vQueueAddToRegistry+0x3c>
                else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL ) )
 800982c:	b91b      	cbnz	r3, 8009836 <vQueueAddToRegistry+0x2e>
 800982e:	6816      	ldr	r6, [r2, #0]
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009830:	2e00      	cmp	r6, #0
 8009832:	bf08      	it	eq
 8009834:	4613      	moveq	r3, r2
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009836:	3401      	adds	r4, #1
 8009838:	2c08      	cmp	r4, #8
 800983a:	f102 0208 	add.w	r2, r2, #8
 800983e:	d1ed      	bne.n	800981c <vQueueAddToRegistry+0x14>
        if( pxEntryToWrite != NULL )
 8009840:	2b00      	cmp	r3, #0
 8009842:	d1f0      	bne.n	8009826 <vQueueAddToRegistry+0x1e>
    }
 8009844:	bd70      	pop	{r4, r5, r6, pc}
 8009846:	bf00      	nop
 8009848:	2006efb0 	.word	0x2006efb0

0800984c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueUnregisterQueue( QueueHandle_t xQueue )
    {
 800984c:	b510      	push	{r4, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800984e:	b910      	cbnz	r0, 8009856 <vQueueUnregisterQueue+0xa>
 8009850:	f7ff fbe0 	bl	8009014 <ulSetInterruptMask>
 8009854:	e7fe      	b.n	8009854 <vQueueUnregisterQueue+0x8>

        /* See if the handle of the queue being unregistered in actually in the
         * registry. */
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009856:	2300      	movs	r3, #0
        {
            if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009858:	4a08      	ldr	r2, [pc, #32]	@ (800987c <vQueueUnregisterQueue+0x30>)
 800985a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800985e:	00dc      	lsls	r4, r3, #3
 8009860:	4288      	cmp	r0, r1
 8009862:	d106      	bne.n	8009872 <vQueueUnregisterQueue+0x26>
            {
                /* Set the name to NULL to show that this slot if free again. */
                xQueueRegistry[ ux ].pcQueueName = NULL;
 8009864:	2100      	movs	r1, #0
 8009866:	4a06      	ldr	r2, [pc, #24]	@ (8009880 <vQueueUnregisterQueue+0x34>)
 8009868:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

                /* Set the handle to NULL to ensure the same queue handle cannot
                 * appear in the registry twice if it is added, removed, then
                 * added again. */
                xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800986c:	4422      	add	r2, r4
 800986e:	6051      	str	r1, [r2, #4]
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009870:	bd10      	pop	{r4, pc}
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009872:	3301      	adds	r3, #1
 8009874:	2b08      	cmp	r3, #8
 8009876:	d1f0      	bne.n	800985a <vQueueUnregisterQueue+0xe>
 8009878:	e7fa      	b.n	8009870 <vQueueUnregisterQueue+0x24>
 800987a:	bf00      	nop
 800987c:	2006efb4 	.word	0x2006efb4
 8009880:	2006efb0 	.word	0x2006efb0

08009884 <vQueueDelete>:
{
 8009884:	b510      	push	{r4, lr}
    configASSERT( pxQueue );
 8009886:	4604      	mov	r4, r0
 8009888:	b910      	cbnz	r0, 8009890 <vQueueDelete+0xc>
 800988a:	f7ff fbc3 	bl	8009014 <ulSetInterruptMask>
 800988e:	e7fe      	b.n	800988e <vQueueDelete+0xa>
            vQueueUnregisterQueue( pxQueue );
 8009890:	f7ff ffdc 	bl	800984c <vQueueUnregisterQueue>
            if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009894:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 8009898:	b923      	cbnz	r3, 80098a4 <vQueueDelete+0x20>
                vPortFree( pxQueue );
 800989a:	4620      	mov	r0, r4
}
 800989c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                vPortFree( pxQueue );
 80098a0:	f000 bfda 	b.w	800a858 <vPortFree>
}
 80098a4:	bd10      	pop	{r4, pc}

080098a6 <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
 80098a6:	b570      	push	{r4, r5, r6, lr}
 80098a8:	4604      	mov	r4, r0
 80098aa:	460d      	mov	r5, r1
 80098ac:	4616      	mov	r6, r2
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
 80098ae:	f7ff fad5 	bl	8008e5c <vPortEnterCritical>
 80098b2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80098b6:	2bff      	cmp	r3, #255	@ 0xff
 80098b8:	bf04      	itt	eq
 80098ba:	2300      	moveq	r3, #0
 80098bc:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 80098c0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80098c4:	2bff      	cmp	r3, #255	@ 0xff
 80098c6:	bf04      	itt	eq
 80098c8:	2300      	moveq	r3, #0
 80098ca:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 80098ce:	f7ff fad3 	bl	8008e78 <vPortExitCritical>

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098d2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80098d4:	b92b      	cbnz	r3, 80098e2 <vQueueWaitForMessageRestricted+0x3c>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098d6:	4632      	mov	r2, r6
 80098d8:	4629      	mov	r1, r5
 80098da:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80098de:	f000 fbd3 	bl	800a088 <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
 80098e2:	4620      	mov	r0, r4
    }
 80098e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvUnlockQueue( pxQueue );
 80098e8:	f7ff bc48 	b.w	800917c <prvUnlockQueue>

080098ec <prvAddNewTaskToReadyList>:
    }
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
{
 80098ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098f0:	4604      	mov	r4, r0
    /* Ensure interrupts don't access the task lists while the lists are being
     * updated. */
    taskENTER_CRITICAL();
 80098f2:	f7ff fab3 	bl	8008e5c <vPortEnterCritical>
    {
        uxCurrentNumberOfTasks++;
 80098f6:	4b30      	ldr	r3, [pc, #192]	@ (80099b8 <prvAddNewTaskToReadyList+0xcc>)

        if( pxCurrentTCB == NULL )
 80098f8:	4e30      	ldr	r6, [pc, #192]	@ (80099bc <prvAddNewTaskToReadyList+0xd0>)
        uxCurrentNumberOfTasks++;
 80098fa:	681a      	ldr	r2, [r3, #0]
 80098fc:	4f30      	ldr	r7, [pc, #192]	@ (80099c0 <prvAddNewTaskToReadyList+0xd4>)
 80098fe:	3201      	adds	r2, #1
 8009900:	601a      	str	r2, [r3, #0]
        if( pxCurrentTCB == NULL )
 8009902:	6835      	ldr	r5, [r6, #0]
 8009904:	2d00      	cmp	r5, #0
 8009906:	d14a      	bne.n	800999e <prvAddNewTaskToReadyList+0xb2>
        {
            /* There are no other tasks, or all the other tasks are in
             * the suspended state - make this the current task. */
            pxCurrentTCB = pxNewTCB;
 8009908:	6034      	str	r4, [r6, #0]

            if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800990a:	681b      	ldr	r3, [r3, #0]
 800990c:	2b01      	cmp	r3, #1
 800990e:	d11f      	bne.n	8009950 <prvAddNewTaskToReadyList+0x64>
 8009910:	46b8      	mov	r8, r7
{
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009912:	4640      	mov	r0, r8
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009914:	3501      	adds	r5, #1
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009916:	f7ff fa39 	bl	8008d8c <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800991a:	2d38      	cmp	r5, #56	@ 0x38
 800991c:	f108 0814 	add.w	r8, r8, #20
 8009920:	d1f7      	bne.n	8009912 <prvAddNewTaskToReadyList+0x26>
    }

    vListInitialise( &xDelayedTaskList1 );
 8009922:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 80099e8 <prvAddNewTaskToReadyList+0xfc>
    vListInitialise( &xDelayedTaskList2 );
 8009926:	4d27      	ldr	r5, [pc, #156]	@ (80099c4 <prvAddNewTaskToReadyList+0xd8>)
    vListInitialise( &xDelayedTaskList1 );
 8009928:	4640      	mov	r0, r8
 800992a:	f7ff fa2f 	bl	8008d8c <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 800992e:	4628      	mov	r0, r5
 8009930:	f7ff fa2c 	bl	8008d8c <vListInitialise>
    vListInitialise( &xPendingReadyList );
 8009934:	4824      	ldr	r0, [pc, #144]	@ (80099c8 <prvAddNewTaskToReadyList+0xdc>)
 8009936:	f7ff fa29 	bl	8008d8c <vListInitialise>

    #if ( INCLUDE_vTaskDelete == 1 )
        {
            vListInitialise( &xTasksWaitingTermination );
 800993a:	4824      	ldr	r0, [pc, #144]	@ (80099cc <prvAddNewTaskToReadyList+0xe0>)
 800993c:	f7ff fa26 	bl	8008d8c <vListInitialise>
        }
    #endif /* INCLUDE_vTaskDelete */

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            vListInitialise( &xSuspendedTaskList );
 8009940:	4823      	ldr	r0, [pc, #140]	@ (80099d0 <prvAddNewTaskToReadyList+0xe4>)
 8009942:	f7ff fa23 	bl	8008d8c <vListInitialise>
        }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
 8009946:	4b23      	ldr	r3, [pc, #140]	@ (80099d4 <prvAddNewTaskToReadyList+0xe8>)
 8009948:	f8c3 8000 	str.w	r8, [r3]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800994c:	4b22      	ldr	r3, [pc, #136]	@ (80099d8 <prvAddNewTaskToReadyList+0xec>)
 800994e:	601d      	str	r5, [r3, #0]
        uxTaskNumber++;
 8009950:	4a22      	ldr	r2, [pc, #136]	@ (80099dc <prvAddNewTaskToReadyList+0xf0>)
        prvAddTaskToReadyList( pxNewTCB );
 8009952:	1d20      	adds	r0, r4, #4
        uxTaskNumber++;
 8009954:	6813      	ldr	r3, [r2, #0]
 8009956:	3301      	adds	r3, #1
 8009958:	6013      	str	r3, [r2, #0]
        prvAddTaskToReadyList( pxNewTCB );
 800995a:	4a21      	ldr	r2, [pc, #132]	@ (80099e0 <prvAddNewTaskToReadyList+0xf4>)
                pxNewTCB->uxTCBNumber = uxTaskNumber;
 800995c:	6463      	str	r3, [r4, #68]	@ 0x44
        prvAddTaskToReadyList( pxNewTCB );
 800995e:	6811      	ldr	r1, [r2, #0]
 8009960:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009962:	428b      	cmp	r3, r1
 8009964:	bf88      	it	hi
 8009966:	6013      	strhi	r3, [r2, #0]
 8009968:	2214      	movs	r2, #20
 800996a:	4353      	muls	r3, r2
 800996c:	18f9      	adds	r1, r7, r3
 800996e:	684a      	ldr	r2, [r1, #4]
 8009970:	6895      	ldr	r5, [r2, #8]
 8009972:	60a2      	str	r2, [r4, #8]
 8009974:	60e5      	str	r5, [r4, #12]
 8009976:	6068      	str	r0, [r5, #4]
 8009978:	6090      	str	r0, [r2, #8]
 800997a:	58fa      	ldr	r2, [r7, r3]
 800997c:	6161      	str	r1, [r4, #20]
 800997e:	3201      	adds	r2, #1
 8009980:	50fa      	str	r2, [r7, r3]
    taskEXIT_CRITICAL();
 8009982:	f7ff fa79 	bl	8008e78 <vPortExitCritical>
    if( xSchedulerRunning != pdFALSE )
 8009986:	4b17      	ldr	r3, [pc, #92]	@ (80099e4 <prvAddNewTaskToReadyList+0xf8>)
 8009988:	681b      	ldr	r3, [r3, #0]
 800998a:	b19b      	cbz	r3, 80099b4 <prvAddNewTaskToReadyList+0xc8>
        if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800998c:	6833      	ldr	r3, [r6, #0]
 800998e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009990:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009992:	429a      	cmp	r2, r3
 8009994:	d20e      	bcs.n	80099b4 <prvAddNewTaskToReadyList+0xc8>
}
 8009996:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            taskYIELD_IF_USING_PREEMPTION();
 800999a:	f7ff ba53 	b.w	8008e44 <vPortYield>
            if( xSchedulerRunning == pdFALSE )
 800999e:	4b11      	ldr	r3, [pc, #68]	@ (80099e4 <prvAddNewTaskToReadyList+0xf8>)
 80099a0:	681a      	ldr	r2, [r3, #0]
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099a2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
            if( xSchedulerRunning == pdFALSE )
 80099a4:	2a00      	cmp	r2, #0
 80099a6:	d1d3      	bne.n	8009950 <prvAddNewTaskToReadyList+0x64>
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099a8:	6832      	ldr	r2, [r6, #0]
 80099aa:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80099ac:	429a      	cmp	r2, r3
                    pxCurrentTCB = pxNewTCB;
 80099ae:	bf98      	it	ls
 80099b0:	6034      	strls	r4, [r6, #0]
 80099b2:	e7cd      	b.n	8009950 <prvAddNewTaskToReadyList+0x64>
}
 80099b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80099b8:	2006f014 	.word	0x2006f014
 80099bc:	2006f4e8 	.word	0x2006f4e8
 80099c0:	2006f088 	.word	0x2006f088
 80099c4:	2006f060 	.word	0x2006f060
 80099c8:	2006f044 	.word	0x2006f044
 80099cc:	2006f030 	.word	0x2006f030
 80099d0:	2006f018 	.word	0x2006f018
 80099d4:	2006f05c 	.word	0x2006f05c
 80099d8:	2006f058 	.word	0x2006f058
 80099dc:	2006eff8 	.word	0x2006eff8
 80099e0:	2006f00c 	.word	0x2006f00c
 80099e4:	2006f008 	.word	0x2006f008
 80099e8:	2006f074 	.word	0x2006f074

080099ec <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 80099ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80099ee:	4606      	mov	r6, r0
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 80099f0:	4b1a      	ldr	r3, [pc, #104]	@ (8009a5c <prvAddCurrentTaskToDelayedList+0x70>)
        }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099f2:	4c1b      	ldr	r4, [pc, #108]	@ (8009a60 <prvAddCurrentTaskToDelayedList+0x74>)
    const TickType_t xConstTickCount = xTickCount;
 80099f4:	681d      	ldr	r5, [r3, #0]
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099f6:	6820      	ldr	r0, [r4, #0]
{
 80099f8:	460f      	mov	r7, r1
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099fa:	3004      	adds	r0, #4
 80099fc:	f7ff f9eb 	bl	8008dd6 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a00:	1c73      	adds	r3, r6, #1
 8009a02:	d113      	bne.n	8009a2c <prvAddCurrentTaskToDelayedList+0x40>
 8009a04:	b197      	cbz	r7, 8009a2c <prvAddCurrentTaskToDelayedList+0x40>
            {
                /* Add the task to the suspended task list instead of a delayed task
                 * list to ensure it is not woken by a timing event.  It will block
                 * indefinitely. */
                listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a06:	4b17      	ldr	r3, [pc, #92]	@ (8009a64 <prvAddCurrentTaskToDelayedList+0x78>)
 8009a08:	6821      	ldr	r1, [r4, #0]
 8009a0a:	685a      	ldr	r2, [r3, #4]
 8009a0c:	608a      	str	r2, [r1, #8]
 8009a0e:	6890      	ldr	r0, [r2, #8]
 8009a10:	6821      	ldr	r1, [r4, #0]
 8009a12:	60c8      	str	r0, [r1, #12]
 8009a14:	6821      	ldr	r1, [r4, #0]
 8009a16:	3104      	adds	r1, #4
 8009a18:	6041      	str	r1, [r0, #4]
 8009a1a:	6821      	ldr	r1, [r4, #0]
 8009a1c:	3104      	adds	r1, #4
 8009a1e:	6091      	str	r1, [r2, #8]
 8009a20:	6822      	ldr	r2, [r4, #0]
 8009a22:	6153      	str	r3, [r2, #20]
 8009a24:	681a      	ldr	r2, [r3, #0]
 8009a26:	3201      	adds	r2, #1
 8009a28:	601a      	str	r2, [r3, #0]

            /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
            ( void ) xCanBlockIndefinitely;
        }
    #endif /* INCLUDE_vTaskSuspend */
}
 8009a2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a2c:	6823      	ldr	r3, [r4, #0]
 8009a2e:	19ad      	adds	r5, r5, r6
 8009a30:	605d      	str	r5, [r3, #4]
                if( xTimeToWake < xConstTickCount )
 8009a32:	d307      	bcc.n	8009a44 <prvAddCurrentTaskToDelayedList+0x58>
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a34:	4b0c      	ldr	r3, [pc, #48]	@ (8009a68 <prvAddCurrentTaskToDelayedList+0x7c>)
 8009a36:	6818      	ldr	r0, [r3, #0]
 8009a38:	6821      	ldr	r1, [r4, #0]
}
 8009a3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a3e:	3104      	adds	r1, #4
 8009a40:	f7ff b9b2 	b.w	8008da8 <vListInsert>
                    vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a44:	4b09      	ldr	r3, [pc, #36]	@ (8009a6c <prvAddCurrentTaskToDelayedList+0x80>)
 8009a46:	6818      	ldr	r0, [r3, #0]
 8009a48:	6821      	ldr	r1, [r4, #0]
 8009a4a:	3104      	adds	r1, #4
 8009a4c:	f7ff f9ac 	bl	8008da8 <vListInsert>
                    if( xTimeToWake < xNextTaskUnblockTime )
 8009a50:	4b07      	ldr	r3, [pc, #28]	@ (8009a70 <prvAddCurrentTaskToDelayedList+0x84>)
 8009a52:	681a      	ldr	r2, [r3, #0]
 8009a54:	42aa      	cmp	r2, r5
                        xNextTaskUnblockTime = xTimeToWake;
 8009a56:	bf88      	it	hi
 8009a58:	601d      	strhi	r5, [r3, #0]
}
 8009a5a:	e7e6      	b.n	8009a2a <prvAddCurrentTaskToDelayedList+0x3e>
 8009a5c:	2006f010 	.word	0x2006f010
 8009a60:	2006f4e8 	.word	0x2006f4e8
 8009a64:	2006f018 	.word	0x2006f018
 8009a68:	2006f058 	.word	0x2006f058
 8009a6c:	2006f05c 	.word	0x2006f05c
 8009a70:	2006eff4 	.word	0x2006eff4

08009a74 <prvResetNextTaskUnblockTime>:
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a74:	4a06      	ldr	r2, [pc, #24]	@ (8009a90 <prvResetNextTaskUnblockTime+0x1c>)
 8009a76:	6813      	ldr	r3, [r2, #0]
 8009a78:	6819      	ldr	r1, [r3, #0]
 8009a7a:	4b06      	ldr	r3, [pc, #24]	@ (8009a94 <prvResetNextTaskUnblockTime+0x20>)
 8009a7c:	b919      	cbnz	r1, 8009a86 <prvResetNextTaskUnblockTime+0x12>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009a7e:	f04f 32ff 	mov.w	r2, #4294967295
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009a82:	601a      	str	r2, [r3, #0]
}
 8009a84:	4770      	bx	lr
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009a86:	6812      	ldr	r2, [r2, #0]
 8009a88:	68d2      	ldr	r2, [r2, #12]
 8009a8a:	6812      	ldr	r2, [r2, #0]
 8009a8c:	e7f9      	b.n	8009a82 <prvResetNextTaskUnblockTime+0xe>
 8009a8e:	bf00      	nop
 8009a90:	2006f05c 	.word	0x2006f05c
 8009a94:	2006eff4 	.word	0x2006eff4

08009a98 <prvDeleteTCB>:
    {
 8009a98:	b510      	push	{r4, lr}
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a9a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
    {
 8009a9e:	4604      	mov	r4, r0
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009aa0:	b93b      	cbnz	r3, 8009ab2 <prvDeleteTCB+0x1a>
                    vPortFreeStack( pxTCB->pxStack );
 8009aa2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009aa4:	f000 fed8 	bl	800a858 <vPortFree>
                    vPortFree( pxTCB );
 8009aa8:	4620      	mov	r0, r4
    }
 8009aaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    vPortFree( pxTCB );
 8009aae:	f000 bed3 	b.w	800a858 <vPortFree>
                else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009ab2:	2b01      	cmp	r3, #1
 8009ab4:	d0f9      	beq.n	8009aaa <prvDeleteTCB+0x12>
                    configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB );
 8009ab6:	2b02      	cmp	r3, #2
 8009ab8:	d002      	beq.n	8009ac0 <prvDeleteTCB+0x28>
 8009aba:	f7ff faab 	bl	8009014 <ulSetInterruptMask>
 8009abe:	e7fe      	b.n	8009abe <prvDeleteTCB+0x26>
    }
 8009ac0:	bd10      	pop	{r4, pc}
	...

08009ac4 <prvIdleTask>:
{
 8009ac4:	b580      	push	{r7, lr}
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009ac6:	4c10      	ldr	r4, [pc, #64]	@ (8009b08 <prvIdleTask+0x44>)
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ac8:	4f10      	ldr	r7, [pc, #64]	@ (8009b0c <prvIdleTask+0x48>)
                    --uxCurrentNumberOfTasks;
 8009aca:	4d11      	ldr	r5, [pc, #68]	@ (8009b10 <prvIdleTask+0x4c>)
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009acc:	6823      	ldr	r3, [r4, #0]
 8009ace:	b943      	cbnz	r3, 8009ae2 <prvIdleTask+0x1e>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009ad0:	4b10      	ldr	r3, [pc, #64]	@ (8009b14 <prvIdleTask+0x50>)
 8009ad2:	681b      	ldr	r3, [r3, #0]
 8009ad4:	2b01      	cmp	r3, #1
 8009ad6:	d901      	bls.n	8009adc <prvIdleTask+0x18>
                    taskYIELD();
 8009ad8:	f7ff f9b4 	bl	8008e44 <vPortYield>
                vApplicationIdleHook();
 8009adc:	f7f6 fbf6 	bl	80002cc <vApplicationIdleHook>
        prvCheckTasksWaitingTermination();
 8009ae0:	e7f3      	b.n	8009aca <prvIdleTask+0x6>
                taskENTER_CRITICAL();
 8009ae2:	f7ff f9bb 	bl	8008e5c <vPortEnterCritical>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ae6:	68fb      	ldr	r3, [r7, #12]
 8009ae8:	68de      	ldr	r6, [r3, #12]
                    ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009aea:	1d30      	adds	r0, r6, #4
 8009aec:	f7ff f973 	bl	8008dd6 <uxListRemove>
                    --uxCurrentNumberOfTasks;
 8009af0:	682b      	ldr	r3, [r5, #0]
 8009af2:	3b01      	subs	r3, #1
 8009af4:	602b      	str	r3, [r5, #0]
                    --uxDeletedTasksWaitingCleanUp;
 8009af6:	6823      	ldr	r3, [r4, #0]
 8009af8:	3b01      	subs	r3, #1
 8009afa:	6023      	str	r3, [r4, #0]
                taskEXIT_CRITICAL();
 8009afc:	f7ff f9bc 	bl	8008e78 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 8009b00:	4630      	mov	r0, r6
 8009b02:	f7ff ffc9 	bl	8009a98 <prvDeleteTCB>
 8009b06:	e7e1      	b.n	8009acc <prvIdleTask+0x8>
 8009b08:	2006f02c 	.word	0x2006f02c
 8009b0c:	2006f030 	.word	0x2006f030
 8009b10:	2006f014 	.word	0x2006f014
 8009b14:	2006f088 	.word	0x2006f088

08009b18 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b18:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b1c:	460d      	mov	r5, r1
 8009b1e:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	@ 0x28
 8009b22:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b24:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b26:	4680      	mov	r8, r0
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b28:	4632      	mov	r2, r6
 8009b2a:	21a5      	movs	r1, #165	@ 0xa5
 8009b2c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b2e:	4699      	mov	r9, r3
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b30:	f028 fec9 	bl	80328c6 <memset>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b34:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
    if( pcName != NULL )
 8009b38:	b195      	cbz	r5, 8009b60 <prvInitialiseNewTask.constprop.0+0x48>
 8009b3a:	1e6b      	subs	r3, r5, #1
 8009b3c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009b40:	350f      	adds	r5, #15
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b42:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009b46:	f802 1f01 	strb.w	r1, [r2, #1]!
            if( pcName[ x ] == ( char ) 0x00 )
 8009b4a:	b109      	cbz	r1, 8009b50 <prvInitialiseNewTask.constprop.0+0x38>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b4c:	42ab      	cmp	r3, r5
 8009b4e:	d1f8      	bne.n	8009b42 <prvInitialiseNewTask.constprop.0+0x2a>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b50:	2300      	movs	r3, #0
 8009b52:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
    configASSERT( uxPriority < configMAX_PRIORITIES );
 8009b56:	2f37      	cmp	r7, #55	@ 0x37
 8009b58:	d905      	bls.n	8009b66 <prvInitialiseNewTask.constprop.0+0x4e>
 8009b5a:	f7ff fa5b 	bl	8009014 <ulSetInterruptMask>
 8009b5e:	e7fe      	b.n	8009b5e <prvInitialiseNewTask.constprop.0+0x46>
        pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009b60:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009b64:	e7f7      	b.n	8009b56 <prvInitialiseNewTask.constprop.0+0x3e>
            pxNewTCB->uxMutexesHeld = 0;
 8009b66:	2500      	movs	r5, #0
    pxNewTCB->uxPriority = uxPriority;
 8009b68:	62e7      	str	r7, [r4, #44]	@ 0x2c
            pxNewTCB->uxBasePriority = uxPriority;
 8009b6a:	64e7      	str	r7, [r4, #76]	@ 0x4c
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b6c:	1d20      	adds	r0, r4, #4
            pxNewTCB->uxMutexesHeld = 0;
 8009b6e:	6525      	str	r5, [r4, #80]	@ 0x50
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b70:	f7ff f917 	bl	8008da2 <vListInitialiseItem>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b74:	3e04      	subs	r6, #4
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b76:	f104 0018 	add.w	r0, r4, #24
 8009b7a:	f7ff f912 	bl	8008da2 <vListInitialiseItem>
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b7e:	f1c7 0738 	rsb	r7, r7, #56	@ 0x38
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b82:	eb0b 0006 	add.w	r0, fp, r6
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009b86:	464b      	mov	r3, r9
 8009b88:	4642      	mov	r2, r8
 8009b8a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b8c:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b8e:	61a7      	str	r7, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b90:	6264      	str	r4, [r4, #36]	@ 0x24
            pxNewTCB->pxTaskTag = NULL;
 8009b92:	6565      	str	r5, [r4, #84]	@ 0x54
            memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
 8009b94:	65a5      	str	r5, [r4, #88]	@ 0x58
            memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
 8009b96:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009b9a:	f020 0007 	bic.w	r0, r0, #7
 8009b9e:	f7ff f9ad 	bl	8008efc <pxPortInitialiseStack>
 8009ba2:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 8009ba4:	f1ba 0f00 	cmp.w	sl, #0
 8009ba8:	d001      	beq.n	8009bae <prvInitialiseNewTask.constprop.0+0x96>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009baa:	f8ca 4000 	str.w	r4, [sl]
}
 8009bae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009bb2 <xTaskCreateStatic>:
    {
 8009bb2:	b570      	push	{r4, r5, r6, lr}
 8009bb4:	b086      	sub	sp, #24
 8009bb6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
        configASSERT( puxStackBuffer != NULL );
 8009bba:	b915      	cbnz	r5, 8009bc2 <xTaskCreateStatic+0x10>
 8009bbc:	f7ff fa2a 	bl	8009014 <ulSetInterruptMask>
 8009bc0:	e7fe      	b.n	8009bc0 <xTaskCreateStatic+0xe>
        configASSERT( pxTaskBuffer != NULL );
 8009bc2:	b914      	cbnz	r4, 8009bca <xTaskCreateStatic+0x18>
 8009bc4:	f7ff fa26 	bl	8009014 <ulSetInterruptMask>
 8009bc8:	e7fe      	b.n	8009bc8 <xTaskCreateStatic+0x16>
                volatile size_t xSize = sizeof( StaticTask_t );
 8009bca:	2660      	movs	r6, #96	@ 0x60
 8009bcc:	9605      	str	r6, [sp, #20]
                configASSERT( xSize == sizeof( TCB_t ) );
 8009bce:	9e05      	ldr	r6, [sp, #20]
 8009bd0:	2e60      	cmp	r6, #96	@ 0x60
 8009bd2:	d002      	beq.n	8009bda <xTaskCreateStatic+0x28>
 8009bd4:	f7ff fa1e 	bl	8009014 <ulSetInterruptMask>
 8009bd8:	e7fe      	b.n	8009bd8 <xTaskCreateStatic+0x26>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009bda:	6325      	str	r5, [r4, #48]	@ 0x30
                    pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009bdc:	2502      	movs	r5, #2
 8009bde:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009be2:	ad04      	add	r5, sp, #16
 8009be4:	9501      	str	r5, [sp, #4]
 8009be6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009be8:	9402      	str	r4, [sp, #8]
 8009bea:	9500      	str	r5, [sp, #0]
                ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009bec:	9e05      	ldr	r6, [sp, #20]
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009bee:	f7ff ff93 	bl	8009b18 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009bf2:	4620      	mov	r0, r4
 8009bf4:	f7ff fe7a 	bl	80098ec <prvAddNewTaskToReadyList>
    }
 8009bf8:	9804      	ldr	r0, [sp, #16]
 8009bfa:	b006      	add	sp, #24
 8009bfc:	bd70      	pop	{r4, r5, r6, pc}

08009bfe <xTaskCreate>:
    {
 8009bfe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c02:	4607      	mov	r7, r0
 8009c04:	b085      	sub	sp, #20
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c06:	0090      	lsls	r0, r2, #2
    {
 8009c08:	4688      	mov	r8, r1
 8009c0a:	4616      	mov	r6, r2
 8009c0c:	4699      	mov	r9, r3
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c0e:	f000 fd93 	bl	800a738 <pvPortMalloc>
                if( pxStack != NULL )
 8009c12:	4605      	mov	r5, r0
 8009c14:	b920      	cbnz	r0, 8009c20 <xTaskCreate+0x22>
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c16:	f04f 30ff 	mov.w	r0, #4294967295
    }
 8009c1a:	b005      	add	sp, #20
 8009c1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c20:	2060      	movs	r0, #96	@ 0x60
 8009c22:	f000 fd89 	bl	800a738 <pvPortMalloc>
                    if( pxNewTCB != NULL )
 8009c26:	4604      	mov	r4, r0
 8009c28:	b198      	cbz	r0, 8009c52 <xTaskCreate+0x54>
                    pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c2a:	2300      	movs	r3, #0
 8009c2c:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c30:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
                        pxNewTCB->pxStack = pxStack;
 8009c32:	6305      	str	r5, [r0, #48]	@ 0x30
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c34:	9301      	str	r3, [sp, #4]
 8009c36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009c38:	4632      	mov	r2, r6
 8009c3a:	4641      	mov	r1, r8
 8009c3c:	9002      	str	r0, [sp, #8]
 8009c3e:	9300      	str	r3, [sp, #0]
 8009c40:	4638      	mov	r0, r7
 8009c42:	464b      	mov	r3, r9
 8009c44:	f7ff ff68 	bl	8009b18 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009c48:	4620      	mov	r0, r4
 8009c4a:	f7ff fe4f 	bl	80098ec <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 8009c4e:	2001      	movs	r0, #1
 8009c50:	e7e3      	b.n	8009c1a <xTaskCreate+0x1c>
                        vPortFreeStack( pxStack );
 8009c52:	4628      	mov	r0, r5
 8009c54:	f000 fe00 	bl	800a858 <vPortFree>
        if( pxNewTCB != NULL )
 8009c58:	e7dd      	b.n	8009c16 <xTaskCreate+0x18>
	...

08009c5c <vTaskSuspendAll>:
    ++uxSchedulerSuspended;
 8009c5c:	4a02      	ldr	r2, [pc, #8]	@ (8009c68 <vTaskSuspendAll+0xc>)
 8009c5e:	6813      	ldr	r3, [r2, #0]
 8009c60:	3301      	adds	r3, #1
 8009c62:	6013      	str	r3, [r2, #0]
}
 8009c64:	4770      	bx	lr
 8009c66:	bf00      	nop
 8009c68:	2006eff0 	.word	0x2006eff0

08009c6c <xTaskGetTickCount>:
        xTicks = xTickCount;
 8009c6c:	4b01      	ldr	r3, [pc, #4]	@ (8009c74 <xTaskGetTickCount+0x8>)
 8009c6e:	6818      	ldr	r0, [r3, #0]
}
 8009c70:	4770      	bx	lr
 8009c72:	bf00      	nop
 8009c74:	2006f010 	.word	0x2006f010

08009c78 <xTaskIncrementTick>:
{
 8009c78:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c7c:	4b4b      	ldr	r3, [pc, #300]	@ (8009dac <xTaskIncrementTick+0x134>)
 8009c7e:	681b      	ldr	r3, [r3, #0]
 8009c80:	2b00      	cmp	r3, #0
 8009c82:	f040 808d 	bne.w	8009da0 <xTaskIncrementTick+0x128>
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009c86:	4b4a      	ldr	r3, [pc, #296]	@ (8009db0 <xTaskIncrementTick+0x138>)
 8009c88:	681c      	ldr	r4, [r3, #0]
 8009c8a:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 8009c8c:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009c8e:	b98c      	cbnz	r4, 8009cb4 <xTaskIncrementTick+0x3c>
            taskSWITCH_DELAYED_LISTS();
 8009c90:	4b48      	ldr	r3, [pc, #288]	@ (8009db4 <xTaskIncrementTick+0x13c>)
 8009c92:	681a      	ldr	r2, [r3, #0]
 8009c94:	6812      	ldr	r2, [r2, #0]
 8009c96:	b112      	cbz	r2, 8009c9e <xTaskIncrementTick+0x26>
 8009c98:	f7ff f9bc 	bl	8009014 <ulSetInterruptMask>
 8009c9c:	e7fe      	b.n	8009c9c <xTaskIncrementTick+0x24>
 8009c9e:	4a46      	ldr	r2, [pc, #280]	@ (8009db8 <xTaskIncrementTick+0x140>)
 8009ca0:	6819      	ldr	r1, [r3, #0]
 8009ca2:	6810      	ldr	r0, [r2, #0]
 8009ca4:	6018      	str	r0, [r3, #0]
 8009ca6:	6011      	str	r1, [r2, #0]
 8009ca8:	4a44      	ldr	r2, [pc, #272]	@ (8009dbc <xTaskIncrementTick+0x144>)
 8009caa:	6813      	ldr	r3, [r2, #0]
 8009cac:	3301      	adds	r3, #1
 8009cae:	6013      	str	r3, [r2, #0]
 8009cb0:	f7ff fee0 	bl	8009a74 <prvResetNextTaskUnblockTime>
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009cb4:	f8df c114 	ldr.w	ip, [pc, #276]	@ 8009dcc <xTaskIncrementTick+0x154>
    BaseType_t xSwitchRequired = pdFALSE;
 8009cb8:	2000      	movs	r0, #0
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009cba:	f8dc 3000 	ldr.w	r3, [ip]
 8009cbe:	4a40      	ldr	r2, [pc, #256]	@ (8009dc0 <xTaskIncrementTick+0x148>)
 8009cc0:	429c      	cmp	r4, r3
 8009cc2:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8009dd0 <xTaskIncrementTick+0x158>
 8009cc6:	d20f      	bcs.n	8009ce8 <xTaskIncrementTick+0x70>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009cc8:	2114      	movs	r1, #20
 8009cca:	f8d8 3000 	ldr.w	r3, [r8]
 8009cce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009cd0:	434b      	muls	r3, r1
 8009cd2:	58d3      	ldr	r3, [r2, r3]
                    xSwitchRequired = pdTRUE;
 8009cd4:	2b02      	cmp	r3, #2
                if( xYieldPending != pdFALSE )
 8009cd6:	4b3b      	ldr	r3, [pc, #236]	@ (8009dc4 <xTaskIncrementTick+0x14c>)
                    xSwitchRequired = pdTRUE;
 8009cd8:	bf28      	it	cs
 8009cda:	2001      	movcs	r0, #1
                if( xYieldPending != pdFALSE )
 8009cdc:	681b      	ldr	r3, [r3, #0]
                    xSwitchRequired = pdTRUE;
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	bf18      	it	ne
 8009ce2:	2001      	movne	r0, #1
}
 8009ce4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ce8:	f8df e0c8 	ldr.w	lr, [pc, #200]	@ 8009db4 <xTaskIncrementTick+0x13c>
                    prvAddTaskToReadyList( pxTCB );
 8009cec:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 8009dd4 <xTaskIncrementTick+0x15c>
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009cf0:	f8de 3000 	ldr.w	r3, [lr]
 8009cf4:	681b      	ldr	r3, [r3, #0]
 8009cf6:	b923      	cbnz	r3, 8009d02 <xTaskIncrementTick+0x8a>
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cf8:	f04f 33ff 	mov.w	r3, #4294967295
 8009cfc:	f8cc 3000 	str.w	r3, [ip]
                    break;
 8009d00:	e7e2      	b.n	8009cc8 <xTaskIncrementTick+0x50>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d02:	f8de 3000 	ldr.w	r3, [lr]
 8009d06:	68db      	ldr	r3, [r3, #12]
 8009d08:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009d0a:	6859      	ldr	r1, [r3, #4]
                    if( xConstTickCount < xItemValue )
 8009d0c:	428c      	cmp	r4, r1
 8009d0e:	d202      	bcs.n	8009d16 <xTaskIncrementTick+0x9e>
                        xNextTaskUnblockTime = xItemValue;
 8009d10:	f8cc 1000 	str.w	r1, [ip]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
 8009d14:	e7d8      	b.n	8009cc8 <xTaskIncrementTick+0x50>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009d16:	695d      	ldr	r5, [r3, #20]
 8009d18:	e9d3 1602 	ldrd	r1, r6, [r3, #8]
 8009d1c:	608e      	str	r6, [r1, #8]
 8009d1e:	6071      	str	r1, [r6, #4]
 8009d20:	6869      	ldr	r1, [r5, #4]
 8009d22:	1d1f      	adds	r7, r3, #4
 8009d24:	42b9      	cmp	r1, r7
 8009d26:	f04f 0100 	mov.w	r1, #0
 8009d2a:	bf08      	it	eq
 8009d2c:	606e      	streq	r6, [r5, #4]
 8009d2e:	6159      	str	r1, [r3, #20]
 8009d30:	6829      	ldr	r1, [r5, #0]
 8009d32:	3901      	subs	r1, #1
 8009d34:	6029      	str	r1, [r5, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009d36:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 8009d38:	b17d      	cbz	r5, 8009d5a <xTaskIncrementTick+0xe2>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009d3a:	e9d3 1607 	ldrd	r1, r6, [r3, #28]
 8009d3e:	608e      	str	r6, [r1, #8]
 8009d40:	6071      	str	r1, [r6, #4]
 8009d42:	6869      	ldr	r1, [r5, #4]
 8009d44:	f103 0a18 	add.w	sl, r3, #24
 8009d48:	4551      	cmp	r1, sl
 8009d4a:	f04f 0100 	mov.w	r1, #0
 8009d4e:	bf08      	it	eq
 8009d50:	606e      	streq	r6, [r5, #4]
 8009d52:	6299      	str	r1, [r3, #40]	@ 0x28
 8009d54:	6829      	ldr	r1, [r5, #0]
 8009d56:	3901      	subs	r1, #1
 8009d58:	6029      	str	r1, [r5, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009d5a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8009d5c:	f8d9 5000 	ldr.w	r5, [r9]
 8009d60:	42a9      	cmp	r1, r5
 8009d62:	f04f 0514 	mov.w	r5, #20
 8009d66:	fb05 f501 	mul.w	r5, r5, r1
 8009d6a:	eb02 0a05 	add.w	sl, r2, r5
 8009d6e:	f8da 6004 	ldr.w	r6, [sl, #4]
 8009d72:	bf88      	it	hi
 8009d74:	f8c9 1000 	strhi.w	r1, [r9]
 8009d78:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8009d7c:	609e      	str	r6, [r3, #8]
 8009d7e:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009d82:	f8cb 7004 	str.w	r7, [fp, #4]
 8009d86:	60b7      	str	r7, [r6, #8]
 8009d88:	f8c3 a014 	str.w	sl, [r3, #20]
 8009d8c:	5953      	ldr	r3, [r2, r5]
 8009d8e:	3301      	adds	r3, #1
 8009d90:	5153      	str	r3, [r2, r5]
                            if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009d92:	f8d8 3000 	ldr.w	r3, [r8]
 8009d96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                                xSwitchRequired = pdTRUE;
 8009d98:	4299      	cmp	r1, r3
 8009d9a:	bf28      	it	cs
 8009d9c:	2001      	movcs	r0, #1
 8009d9e:	e7a7      	b.n	8009cf0 <xTaskIncrementTick+0x78>
        ++xPendedTicks;
 8009da0:	4a09      	ldr	r2, [pc, #36]	@ (8009dc8 <xTaskIncrementTick+0x150>)
    BaseType_t xSwitchRequired = pdFALSE;
 8009da2:	2000      	movs	r0, #0
        ++xPendedTicks;
 8009da4:	6813      	ldr	r3, [r2, #0]
 8009da6:	3301      	adds	r3, #1
 8009da8:	6013      	str	r3, [r2, #0]
 8009daa:	e79b      	b.n	8009ce4 <xTaskIncrementTick+0x6c>
 8009dac:	2006eff0 	.word	0x2006eff0
 8009db0:	2006f010 	.word	0x2006f010
 8009db4:	2006f05c 	.word	0x2006f05c
 8009db8:	2006f058 	.word	0x2006f058
 8009dbc:	2006effc 	.word	0x2006effc
 8009dc0:	2006f088 	.word	0x2006f088
 8009dc4:	2006f000 	.word	0x2006f000
 8009dc8:	2006f004 	.word	0x2006f004
 8009dcc:	2006eff4 	.word	0x2006eff4
 8009dd0:	2006f4e8 	.word	0x2006f4e8
 8009dd4:	2006f00c 	.word	0x2006f00c

08009dd8 <xTaskResumeAll>:
{
 8009dd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    configASSERT( uxSchedulerSuspended );
 8009ddc:	4c3d      	ldr	r4, [pc, #244]	@ (8009ed4 <xTaskResumeAll+0xfc>)
 8009dde:	6823      	ldr	r3, [r4, #0]
 8009de0:	b913      	cbnz	r3, 8009de8 <xTaskResumeAll+0x10>
 8009de2:	f7ff f917 	bl	8009014 <ulSetInterruptMask>
 8009de6:	e7fe      	b.n	8009de6 <xTaskResumeAll+0xe>
    taskENTER_CRITICAL();
 8009de8:	f7ff f838 	bl	8008e5c <vPortEnterCritical>
        --uxSchedulerSuspended;
 8009dec:	6823      	ldr	r3, [r4, #0]
 8009dee:	3b01      	subs	r3, #1
 8009df0:	6023      	str	r3, [r4, #0]
        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009df2:	6823      	ldr	r3, [r4, #0]
 8009df4:	b12b      	cbz	r3, 8009e02 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 8009df6:	2400      	movs	r4, #0
    taskEXIT_CRITICAL();
 8009df8:	f7ff f83e 	bl	8008e78 <vPortExitCritical>
}
 8009dfc:	4620      	mov	r0, r4
 8009dfe:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009e02:	4a35      	ldr	r2, [pc, #212]	@ (8009ed8 <xTaskResumeAll+0x100>)
 8009e04:	6812      	ldr	r2, [r2, #0]
 8009e06:	2a00      	cmp	r2, #0
 8009e08:	d0f5      	beq.n	8009df6 <xTaskResumeAll+0x1e>
                    prvAddTaskToReadyList( pxTCB );
 8009e0a:	f04f 0c14 	mov.w	ip, #20
                        xYieldPending = pdTRUE;
 8009e0e:	f04f 0901 	mov.w	r9, #1
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e12:	4e32      	ldr	r6, [pc, #200]	@ (8009edc <xTaskResumeAll+0x104>)
                    prvAddTaskToReadyList( pxTCB );
 8009e14:	4f32      	ldr	r7, [pc, #200]	@ (8009ee0 <xTaskResumeAll+0x108>)
 8009e16:	4933      	ldr	r1, [pc, #204]	@ (8009ee4 <xTaskResumeAll+0x10c>)
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e18:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 8009ef0 <xTaskResumeAll+0x118>
                        xYieldPending = pdTRUE;
 8009e1c:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 8009eec <xTaskResumeAll+0x114>
 8009e20:	e03e      	b.n	8009ea0 <xTaskResumeAll+0xc8>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e22:	68f3      	ldr	r3, [r6, #12]
 8009e24:	68db      	ldr	r3, [r3, #12]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009e26:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8009e28:	e9d3 2407 	ldrd	r2, r4, [r3, #28]
 8009e2c:	6094      	str	r4, [r2, #8]
 8009e2e:	6062      	str	r2, [r4, #4]
 8009e30:	6842      	ldr	r2, [r0, #4]
 8009e32:	f103 0518 	add.w	r5, r3, #24
 8009e36:	42aa      	cmp	r2, r5
 8009e38:	f04f 0200 	mov.w	r2, #0
 8009e3c:	bf08      	it	eq
 8009e3e:	6044      	streq	r4, [r0, #4]
 8009e40:	629a      	str	r2, [r3, #40]	@ 0x28
 8009e42:	6802      	ldr	r2, [r0, #0]
 8009e44:	3a01      	subs	r2, #1
 8009e46:	6002      	str	r2, [r0, #0]
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009e48:	6958      	ldr	r0, [r3, #20]
 8009e4a:	e9d3 2402 	ldrd	r2, r4, [r3, #8]
 8009e4e:	6094      	str	r4, [r2, #8]
 8009e50:	6062      	str	r2, [r4, #4]
 8009e52:	6842      	ldr	r2, [r0, #4]
 8009e54:	1d1d      	adds	r5, r3, #4
 8009e56:	42aa      	cmp	r2, r5
 8009e58:	6802      	ldr	r2, [r0, #0]
 8009e5a:	bf08      	it	eq
 8009e5c:	6044      	streq	r4, [r0, #4]
 8009e5e:	3a01      	subs	r2, #1
 8009e60:	6002      	str	r2, [r0, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009e62:	6838      	ldr	r0, [r7, #0]
 8009e64:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009e66:	4282      	cmp	r2, r0
 8009e68:	fb0c f002 	mul.w	r0, ip, r2
 8009e6c:	eb01 0a00 	add.w	sl, r1, r0
 8009e70:	f8da 4004 	ldr.w	r4, [sl, #4]
 8009e74:	bf88      	it	hi
 8009e76:	603a      	strhi	r2, [r7, #0]
 8009e78:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8009e7c:	609c      	str	r4, [r3, #8]
 8009e7e:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009e82:	f8cb 5004 	str.w	r5, [fp, #4]
 8009e86:	60a5      	str	r5, [r4, #8]
 8009e88:	580c      	ldr	r4, [r1, r0]
 8009e8a:	f8c3 a014 	str.w	sl, [r3, #20]
 8009e8e:	3401      	adds	r4, #1
 8009e90:	500c      	str	r4, [r1, r0]
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e92:	f8de 0000 	ldr.w	r0, [lr]
 8009e96:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8009e98:	4282      	cmp	r2, r0
 8009e9a:	d301      	bcc.n	8009ea0 <xTaskResumeAll+0xc8>
                        xYieldPending = pdTRUE;
 8009e9c:	f8c8 9000 	str.w	r9, [r8]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ea0:	6832      	ldr	r2, [r6, #0]
 8009ea2:	2a00      	cmp	r2, #0
 8009ea4:	d1bd      	bne.n	8009e22 <xTaskResumeAll+0x4a>
                if( pxTCB != NULL )
 8009ea6:	b10b      	cbz	r3, 8009eac <xTaskResumeAll+0xd4>
                    prvResetNextTaskUnblockTime();
 8009ea8:	f7ff fde4 	bl	8009a74 <prvResetNextTaskUnblockTime>
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009eac:	4d0e      	ldr	r5, [pc, #56]	@ (8009ee8 <xTaskResumeAll+0x110>)
 8009eae:	682c      	ldr	r4, [r5, #0]
                    if( xPendedCounts > ( TickType_t ) 0U )
 8009eb0:	b144      	cbz	r4, 8009ec4 <xTaskResumeAll+0xec>
                                xYieldPending = pdTRUE;
 8009eb2:	2701      	movs	r7, #1
 8009eb4:	4e0d      	ldr	r6, [pc, #52]	@ (8009eec <xTaskResumeAll+0x114>)
                            if( xTaskIncrementTick() != pdFALSE )
 8009eb6:	f7ff fedf 	bl	8009c78 <xTaskIncrementTick>
 8009eba:	b100      	cbz	r0, 8009ebe <xTaskResumeAll+0xe6>
                                xYieldPending = pdTRUE;
 8009ebc:	6037      	str	r7, [r6, #0]
                        } while( xPendedCounts > ( TickType_t ) 0U );
 8009ebe:	3c01      	subs	r4, #1
 8009ec0:	d1f9      	bne.n	8009eb6 <xTaskResumeAll+0xde>
                        xPendedTicks = 0;
 8009ec2:	602c      	str	r4, [r5, #0]
                if( xYieldPending != pdFALSE )
 8009ec4:	4b09      	ldr	r3, [pc, #36]	@ (8009eec <xTaskResumeAll+0x114>)
 8009ec6:	681b      	ldr	r3, [r3, #0]
 8009ec8:	2b00      	cmp	r3, #0
 8009eca:	d094      	beq.n	8009df6 <xTaskResumeAll+0x1e>
                    taskYIELD_IF_USING_PREEMPTION();
 8009ecc:	f7fe ffba 	bl	8008e44 <vPortYield>
                            xAlreadyYielded = pdTRUE;
 8009ed0:	2401      	movs	r4, #1
 8009ed2:	e791      	b.n	8009df8 <xTaskResumeAll+0x20>
 8009ed4:	2006eff0 	.word	0x2006eff0
 8009ed8:	2006f014 	.word	0x2006f014
 8009edc:	2006f044 	.word	0x2006f044
 8009ee0:	2006f00c 	.word	0x2006f00c
 8009ee4:	2006f088 	.word	0x2006f088
 8009ee8:	2006f004 	.word	0x2006f004
 8009eec:	2006f000 	.word	0x2006f000
 8009ef0:	2006f4e8 	.word	0x2006f4e8

08009ef4 <vTaskDelay>:
    {
 8009ef4:	b508      	push	{r3, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 8009ef6:	b918      	cbnz	r0, 8009f00 <vTaskDelay+0xc>
    }
 8009ef8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            portYIELD_WITHIN_API();
 8009efc:	f7fe bfa2 	b.w	8008e44 <vPortYield>
            configASSERT( uxSchedulerSuspended == 0 );
 8009f00:	4b07      	ldr	r3, [pc, #28]	@ (8009f20 <vTaskDelay+0x2c>)
 8009f02:	6819      	ldr	r1, [r3, #0]
 8009f04:	b111      	cbz	r1, 8009f0c <vTaskDelay+0x18>
 8009f06:	f7ff f885 	bl	8009014 <ulSetInterruptMask>
 8009f0a:	e7fe      	b.n	8009f0a <vTaskDelay+0x16>
            vTaskSuspendAll();
 8009f0c:	f7ff fea6 	bl	8009c5c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f10:	f7ff fd6c 	bl	80099ec <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 8009f14:	f7ff ff60 	bl	8009dd8 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 8009f18:	2800      	cmp	r0, #0
 8009f1a:	d0ed      	beq.n	8009ef8 <vTaskDelay+0x4>
    }
 8009f1c:	bd08      	pop	{r3, pc}
 8009f1e:	bf00      	nop
 8009f20:	2006eff0 	.word	0x2006eff0

08009f24 <vTaskSetApplicationTaskTag>:
    {
 8009f24:	b538      	push	{r3, r4, r5, lr}
 8009f26:	460d      	mov	r5, r1
        if( xTask == NULL )
 8009f28:	4604      	mov	r4, r0
 8009f2a:	b908      	cbnz	r0, 8009f30 <vTaskSetApplicationTaskTag+0xc>
            xTCB = ( TCB_t * ) pxCurrentTCB;
 8009f2c:	4b04      	ldr	r3, [pc, #16]	@ (8009f40 <vTaskSetApplicationTaskTag+0x1c>)
 8009f2e:	681c      	ldr	r4, [r3, #0]
        taskENTER_CRITICAL();
 8009f30:	f7fe ff94 	bl	8008e5c <vPortEnterCritical>
            xTCB->pxTaskTag = pxHookFunction;
 8009f34:	6565      	str	r5, [r4, #84]	@ 0x54
    }
 8009f36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        taskEXIT_CRITICAL();
 8009f3a:	f7fe bf9d 	b.w	8008e78 <vPortExitCritical>
 8009f3e:	bf00      	nop
 8009f40:	2006f4e8 	.word	0x2006f4e8

08009f44 <xTaskCallApplicationTaskHook>:
    {
 8009f44:	4603      	mov	r3, r0
 8009f46:	4608      	mov	r0, r1
        if( xTask == NULL )
 8009f48:	b90b      	cbnz	r3, 8009f4e <xTaskCallApplicationTaskHook+0xa>
            xTCB = pxCurrentTCB;
 8009f4a:	4b03      	ldr	r3, [pc, #12]	@ (8009f58 <xTaskCallApplicationTaskHook+0x14>)
 8009f4c:	681b      	ldr	r3, [r3, #0]
        if( xTCB->pxTaskTag != NULL )
 8009f4e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009f50:	b103      	cbz	r3, 8009f54 <xTaskCallApplicationTaskHook+0x10>
            xReturn = xTCB->pxTaskTag( pvParameter );
 8009f52:	4718      	bx	r3
    }
 8009f54:	4618      	mov	r0, r3
 8009f56:	4770      	bx	lr
 8009f58:	2006f4e8 	.word	0x2006f4e8

08009f5c <vTaskStartScheduler>:
{
 8009f5c:	b530      	push	{r4, r5, lr}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 8009f5e:	2400      	movs	r4, #0
{
 8009f60:	b089      	sub	sp, #36	@ 0x24
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009f62:	aa07      	add	r2, sp, #28
 8009f64:	a906      	add	r1, sp, #24
 8009f66:	a805      	add	r0, sp, #20
            StackType_t * pxIdleTaskStackBuffer = NULL;
 8009f68:	e9cd 4405 	strd	r4, r4, [sp, #20]
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009f6c:	f7fe fef6 	bl	8008d5c <vApplicationGetIdleTaskMemory>
            xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 8009f70:	9b05      	ldr	r3, [sp, #20]
 8009f72:	9a07      	ldr	r2, [sp, #28]
 8009f74:	9302      	str	r3, [sp, #8]
 8009f76:	9b06      	ldr	r3, [sp, #24]
 8009f78:	4913      	ldr	r1, [pc, #76]	@ (8009fc8 <vTaskStartScheduler+0x6c>)
 8009f7a:	e9cd 4300 	strd	r4, r3, [sp]
 8009f7e:	4813      	ldr	r0, [pc, #76]	@ (8009fcc <vTaskStartScheduler+0x70>)
 8009f80:	4623      	mov	r3, r4
 8009f82:	f7ff fe16 	bl	8009bb2 <xTaskCreateStatic>
            if( xIdleTaskHandle != NULL )
 8009f86:	b1a8      	cbz	r0, 8009fb4 <vTaskStartScheduler+0x58>
                xReturn = xTimerCreateTimerTask();
 8009f88:	f000 fb84 	bl	800a694 <xTimerCreateTimerTask>
    if( xReturn == pdPASS )
 8009f8c:	2801      	cmp	r0, #1
                xReturn = xTimerCreateTimerTask();
 8009f8e:	4605      	mov	r5, r0
    if( xReturn == pdPASS )
 8009f90:	d114      	bne.n	8009fbc <vTaskStartScheduler+0x60>
        portDISABLE_INTERRUPTS();
 8009f92:	f7ff f83f 	bl	8009014 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009f96:	f04f 32ff 	mov.w	r2, #4294967295
 8009f9a:	4b0d      	ldr	r3, [pc, #52]	@ (8009fd0 <vTaskStartScheduler+0x74>)
        traceTASK_SWITCHED_IN();
 8009f9c:	4621      	mov	r1, r4
        xNextTaskUnblockTime = portMAX_DELAY;
 8009f9e:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 8009fa0:	4b0c      	ldr	r3, [pc, #48]	@ (8009fd4 <vTaskStartScheduler+0x78>)
 8009fa2:	601d      	str	r5, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009fa4:	4b0c      	ldr	r3, [pc, #48]	@ (8009fd8 <vTaskStartScheduler+0x7c>)
 8009fa6:	601c      	str	r4, [r3, #0]
        traceTASK_SWITCHED_IN();
 8009fa8:	4b0c      	ldr	r3, [pc, #48]	@ (8009fdc <vTaskStartScheduler+0x80>)
 8009faa:	6818      	ldr	r0, [r3, #0]
 8009fac:	f7ff ffca 	bl	8009f44 <xTaskCallApplicationTaskHook>
        if( xPortStartScheduler() != pdFALSE )
 8009fb0:	f7fe ffdc 	bl	8008f6c <xPortStartScheduler>
    ( void ) uxTopUsedPriority;
 8009fb4:	4b0a      	ldr	r3, [pc, #40]	@ (8009fe0 <vTaskStartScheduler+0x84>)
 8009fb6:	681b      	ldr	r3, [r3, #0]
}
 8009fb8:	b009      	add	sp, #36	@ 0x24
 8009fba:	bd30      	pop	{r4, r5, pc}
        configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009fbc:	3501      	adds	r5, #1
 8009fbe:	d1f9      	bne.n	8009fb4 <vTaskStartScheduler+0x58>
 8009fc0:	f7ff f828 	bl	8009014 <ulSetInterruptMask>
 8009fc4:	e7fe      	b.n	8009fc4 <vTaskStartScheduler+0x68>
 8009fc6:	bf00      	nop
 8009fc8:	080358a8 	.word	0x080358a8
 8009fcc:	08009ac5 	.word	0x08009ac5
 8009fd0:	2006eff4 	.word	0x2006eff4
 8009fd4:	2006f008 	.word	0x2006f008
 8009fd8:	2006f010 	.word	0x2006f010
 8009fdc:	2006f4e8 	.word	0x2006f4e8
 8009fe0:	2000005c 	.word	0x2000005c

08009fe4 <vTaskSwitchContext>:
{
 8009fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fe6:	4b19      	ldr	r3, [pc, #100]	@ (800a04c <vTaskSwitchContext+0x68>)
 8009fe8:	681a      	ldr	r2, [r3, #0]
 8009fea:	4b19      	ldr	r3, [pc, #100]	@ (800a050 <vTaskSwitchContext+0x6c>)
 8009fec:	b112      	cbz	r2, 8009ff4 <vTaskSwitchContext+0x10>
        xYieldPending = pdTRUE;
 8009fee:	2201      	movs	r2, #1
 8009ff0:	601a      	str	r2, [r3, #0]
}
 8009ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ff4:	2714      	movs	r7, #20
        traceTASK_SWITCHED_OUT();
 8009ff6:	4c17      	ldr	r4, [pc, #92]	@ (800a054 <vTaskSwitchContext+0x70>)
        xYieldPending = pdFALSE;
 8009ff8:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ffa:	4e17      	ldr	r6, [pc, #92]	@ (800a058 <vTaskSwitchContext+0x74>)
        traceTASK_SWITCHED_OUT();
 8009ffc:	2101      	movs	r1, #1
 8009ffe:	6820      	ldr	r0, [r4, #0]
 800a000:	f7ff ffa0 	bl	8009f44 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a004:	6832      	ldr	r2, [r6, #0]
 800a006:	4915      	ldr	r1, [pc, #84]	@ (800a05c <vTaskSwitchContext+0x78>)
 800a008:	fb07 f302 	mul.w	r3, r7, r2
 800a00c:	58cd      	ldr	r5, [r1, r3]
 800a00e:	18c8      	adds	r0, r1, r3
 800a010:	b1b5      	cbz	r5, 800a040 <vTaskSwitchContext+0x5c>
 800a012:	6845      	ldr	r5, [r0, #4]
 800a014:	3308      	adds	r3, #8
 800a016:	686d      	ldr	r5, [r5, #4]
 800a018:	440b      	add	r3, r1
 800a01a:	429d      	cmp	r5, r3
 800a01c:	bf08      	it	eq
 800a01e:	686b      	ldreq	r3, [r5, #4]
 800a020:	6045      	str	r5, [r0, #4]
 800a022:	bf08      	it	eq
 800a024:	6043      	streq	r3, [r0, #4]
 800a026:	2314      	movs	r3, #20
 800a028:	fb03 1102 	mla	r1, r3, r2, r1
 800a02c:	684b      	ldr	r3, [r1, #4]
        traceTASK_SWITCHED_IN();
 800a02e:	2100      	movs	r1, #0
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a030:	68db      	ldr	r3, [r3, #12]
 800a032:	6023      	str	r3, [r4, #0]
 800a034:	6032      	str	r2, [r6, #0]
        traceTASK_SWITCHED_IN();
 800a036:	6820      	ldr	r0, [r4, #0]
}
 800a038:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        traceTASK_SWITCHED_IN();
 800a03c:	f7ff bf82 	b.w	8009f44 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a040:	b912      	cbnz	r2, 800a048 <vTaskSwitchContext+0x64>
 800a042:	f7fe ffe7 	bl	8009014 <ulSetInterruptMask>
 800a046:	e7fe      	b.n	800a046 <vTaskSwitchContext+0x62>
 800a048:	3a01      	subs	r2, #1
 800a04a:	e7dd      	b.n	800a008 <vTaskSwitchContext+0x24>
 800a04c:	2006eff0 	.word	0x2006eff0
 800a050:	2006f000 	.word	0x2006f000
 800a054:	2006f4e8 	.word	0x2006f4e8
 800a058:	2006f00c 	.word	0x2006f00c
 800a05c:	2006f088 	.word	0x2006f088

0800a060 <vTaskPlaceOnEventList>:
{
 800a060:	b510      	push	{r4, lr}
 800a062:	460c      	mov	r4, r1
    configASSERT( pxEventList );
 800a064:	b910      	cbnz	r0, 800a06c <vTaskPlaceOnEventList+0xc>
 800a066:	f7fe ffd5 	bl	8009014 <ulSetInterruptMask>
 800a06a:	e7fe      	b.n	800a06a <vTaskPlaceOnEventList+0xa>
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a06c:	4b05      	ldr	r3, [pc, #20]	@ (800a084 <vTaskPlaceOnEventList+0x24>)
 800a06e:	6819      	ldr	r1, [r3, #0]
 800a070:	3118      	adds	r1, #24
 800a072:	f7fe fe99 	bl	8008da8 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a076:	4620      	mov	r0, r4
}
 800a078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a07c:	2101      	movs	r1, #1
 800a07e:	f7ff bcb5 	b.w	80099ec <prvAddCurrentTaskToDelayedList>
 800a082:	bf00      	nop
 800a084:	2006f4e8 	.word	0x2006f4e8

0800a088 <vTaskPlaceOnEventListRestricted>:
    {
 800a088:	b570      	push	{r4, r5, r6, lr}
 800a08a:	460c      	mov	r4, r1
 800a08c:	4611      	mov	r1, r2
        configASSERT( pxEventList );
 800a08e:	b910      	cbnz	r0, 800a096 <vTaskPlaceOnEventListRestricted+0xe>
 800a090:	f7fe ffc0 	bl	8009014 <ulSetInterruptMask>
 800a094:	e7fe      	b.n	800a094 <vTaskPlaceOnEventListRestricted+0xc>
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a096:	4b0f      	ldr	r3, [pc, #60]	@ (800a0d4 <vTaskPlaceOnEventListRestricted+0x4c>)
 800a098:	6842      	ldr	r2, [r0, #4]
 800a09a:	681d      	ldr	r5, [r3, #0]
 800a09c:	6896      	ldr	r6, [r2, #8]
 800a09e:	61ea      	str	r2, [r5, #28]
 800a0a0:	681d      	ldr	r5, [r3, #0]
            xTicksToWait = portMAX_DELAY;
 800a0a2:	2900      	cmp	r1, #0
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0a4:	622e      	str	r6, [r5, #32]
 800a0a6:	681d      	ldr	r5, [r3, #0]
 800a0a8:	f105 0518 	add.w	r5, r5, #24
 800a0ac:	6075      	str	r5, [r6, #4]
 800a0ae:	681d      	ldr	r5, [r3, #0]
 800a0b0:	681b      	ldr	r3, [r3, #0]
 800a0b2:	f105 0518 	add.w	r5, r5, #24
 800a0b6:	6095      	str	r5, [r2, #8]
 800a0b8:	6298      	str	r0, [r3, #40]	@ 0x28
 800a0ba:	6803      	ldr	r3, [r0, #0]
 800a0bc:	f103 0301 	add.w	r3, r3, #1
 800a0c0:	6003      	str	r3, [r0, #0]
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0c2:	bf08      	it	eq
 800a0c4:	4620      	moveq	r0, r4
    }
 800a0c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0ca:	bf18      	it	ne
 800a0cc:	f04f 30ff 	movne.w	r0, #4294967295
 800a0d0:	f7ff bc8c 	b.w	80099ec <prvAddCurrentTaskToDelayedList>
 800a0d4:	2006f4e8 	.word	0x2006f4e8

0800a0d8 <xTaskRemoveFromEventList>:
{
 800a0d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0da:	68c3      	ldr	r3, [r0, #12]
 800a0dc:	68db      	ldr	r3, [r3, #12]
    configASSERT( pxUnblockedTCB );
 800a0de:	b913      	cbnz	r3, 800a0e6 <xTaskRemoveFromEventList+0xe>
 800a0e0:	f7fe ff98 	bl	8009014 <ulSetInterruptMask>
 800a0e4:	e7fe      	b.n	800a0e4 <xTaskRemoveFromEventList+0xc>
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800a0e6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a0e8:	e9d3 0107 	ldrd	r0, r1, [r3, #28]
 800a0ec:	6081      	str	r1, [r0, #8]
 800a0ee:	6048      	str	r0, [r1, #4]
 800a0f0:	6850      	ldr	r0, [r2, #4]
 800a0f2:	f103 0418 	add.w	r4, r3, #24
 800a0f6:	42a0      	cmp	r0, r4
 800a0f8:	bf08      	it	eq
 800a0fa:	6051      	streq	r1, [r2, #4]
 800a0fc:	2100      	movs	r1, #0
 800a0fe:	6299      	str	r1, [r3, #40]	@ 0x28
 800a100:	6811      	ldr	r1, [r2, #0]
 800a102:	3901      	subs	r1, #1
 800a104:	6011      	str	r1, [r2, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a106:	4a1d      	ldr	r2, [pc, #116]	@ (800a17c <xTaskRemoveFromEventList+0xa4>)
 800a108:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a10a:	6812      	ldr	r2, [r2, #0]
 800a10c:	2a00      	cmp	r2, #0
 800a10e:	d129      	bne.n	800a164 <xTaskRemoveFromEventList+0x8c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 800a110:	e9d3 4002 	ldrd	r4, r0, [r3, #8]
 800a114:	695a      	ldr	r2, [r3, #20]
 800a116:	60a0      	str	r0, [r4, #8]
 800a118:	6044      	str	r4, [r0, #4]
 800a11a:	6854      	ldr	r4, [r2, #4]
 800a11c:	1d1d      	adds	r5, r3, #4
 800a11e:	42ac      	cmp	r4, r5
 800a120:	bf08      	it	eq
 800a122:	6050      	streq	r0, [r2, #4]
 800a124:	6810      	ldr	r0, [r2, #0]
 800a126:	3801      	subs	r0, #1
 800a128:	6010      	str	r0, [r2, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 800a12a:	4a15      	ldr	r2, [pc, #84]	@ (800a180 <xTaskRemoveFromEventList+0xa8>)
 800a12c:	6810      	ldr	r0, [r2, #0]
 800a12e:	4281      	cmp	r1, r0
 800a130:	bf88      	it	hi
 800a132:	6011      	strhi	r1, [r2, #0]
 800a134:	2214      	movs	r2, #20
 800a136:	434a      	muls	r2, r1
 800a138:	4812      	ldr	r0, [pc, #72]	@ (800a184 <xTaskRemoveFromEventList+0xac>)
 800a13a:	1886      	adds	r6, r0, r2
 800a13c:	6874      	ldr	r4, [r6, #4]
 800a13e:	68a7      	ldr	r7, [r4, #8]
 800a140:	609c      	str	r4, [r3, #8]
 800a142:	60df      	str	r7, [r3, #12]
 800a144:	607d      	str	r5, [r7, #4]
 800a146:	60a5      	str	r5, [r4, #8]
 800a148:	615e      	str	r6, [r3, #20]
 800a14a:	5883      	ldr	r3, [r0, r2]
 800a14c:	3301      	adds	r3, #1
 800a14e:	5083      	str	r3, [r0, r2]
    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a150:	4b0d      	ldr	r3, [pc, #52]	@ (800a188 <xTaskRemoveFromEventList+0xb0>)
 800a152:	681b      	ldr	r3, [r3, #0]
 800a154:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a156:	4299      	cmp	r1, r3
        xYieldPending = pdTRUE;
 800a158:	bf85      	ittet	hi
 800a15a:	2001      	movhi	r0, #1
 800a15c:	4b0b      	ldrhi	r3, [pc, #44]	@ (800a18c <xTaskRemoveFromEventList+0xb4>)
        xReturn = pdFALSE;
 800a15e:	2000      	movls	r0, #0
        xYieldPending = pdTRUE;
 800a160:	6018      	strhi	r0, [r3, #0]
}
 800a162:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a164:	4a0a      	ldr	r2, [pc, #40]	@ (800a190 <xTaskRemoveFromEventList+0xb8>)
 800a166:	6850      	ldr	r0, [r2, #4]
 800a168:	6885      	ldr	r5, [r0, #8]
 800a16a:	61d8      	str	r0, [r3, #28]
 800a16c:	621d      	str	r5, [r3, #32]
 800a16e:	606c      	str	r4, [r5, #4]
 800a170:	6084      	str	r4, [r0, #8]
 800a172:	629a      	str	r2, [r3, #40]	@ 0x28
 800a174:	6813      	ldr	r3, [r2, #0]
 800a176:	3301      	adds	r3, #1
 800a178:	6013      	str	r3, [r2, #0]
 800a17a:	e7e9      	b.n	800a150 <xTaskRemoveFromEventList+0x78>
 800a17c:	2006eff0 	.word	0x2006eff0
 800a180:	2006f00c 	.word	0x2006f00c
 800a184:	2006f088 	.word	0x2006f088
 800a188:	2006f4e8 	.word	0x2006f4e8
 800a18c:	2006f000 	.word	0x2006f000
 800a190:	2006f044 	.word	0x2006f044

0800a194 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a194:	4b03      	ldr	r3, [pc, #12]	@ (800a1a4 <vTaskInternalSetTimeOutState+0x10>)
 800a196:	681b      	ldr	r3, [r3, #0]
 800a198:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 800a19a:	4b03      	ldr	r3, [pc, #12]	@ (800a1a8 <vTaskInternalSetTimeOutState+0x14>)
 800a19c:	681b      	ldr	r3, [r3, #0]
 800a19e:	6043      	str	r3, [r0, #4]
}
 800a1a0:	4770      	bx	lr
 800a1a2:	bf00      	nop
 800a1a4:	2006effc 	.word	0x2006effc
 800a1a8:	2006f010 	.word	0x2006f010

0800a1ac <xTaskCheckForTimeOut>:
{
 800a1ac:	b570      	push	{r4, r5, r6, lr}
 800a1ae:	460d      	mov	r5, r1
    configASSERT( pxTimeOut );
 800a1b0:	4604      	mov	r4, r0
 800a1b2:	b910      	cbnz	r0, 800a1ba <xTaskCheckForTimeOut+0xe>
 800a1b4:	f7fe ff2e 	bl	8009014 <ulSetInterruptMask>
 800a1b8:	e7fe      	b.n	800a1b8 <xTaskCheckForTimeOut+0xc>
    configASSERT( pxTicksToWait );
 800a1ba:	b911      	cbnz	r1, 800a1c2 <xTaskCheckForTimeOut+0x16>
 800a1bc:	f7fe ff2a 	bl	8009014 <ulSetInterruptMask>
 800a1c0:	e7fe      	b.n	800a1c0 <xTaskCheckForTimeOut+0x14>
    taskENTER_CRITICAL();
 800a1c2:	f7fe fe4b 	bl	8008e5c <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 800a1c6:	4b0f      	ldr	r3, [pc, #60]	@ (800a204 <xTaskCheckForTimeOut+0x58>)
 800a1c8:	6819      	ldr	r1, [r3, #0]
            if( *pxTicksToWait == portMAX_DELAY )
 800a1ca:	682b      	ldr	r3, [r5, #0]
 800a1cc:	1c5a      	adds	r2, r3, #1
 800a1ce:	d017      	beq.n	800a200 <xTaskCheckForTimeOut+0x54>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1d0:	480d      	ldr	r0, [pc, #52]	@ (800a208 <xTaskCheckForTimeOut+0x5c>)
 800a1d2:	6826      	ldr	r6, [r4, #0]
 800a1d4:	6800      	ldr	r0, [r0, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1d6:	6862      	ldr	r2, [r4, #4]
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1d8:	4286      	cmp	r6, r0
 800a1da:	d008      	beq.n	800a1ee <xTaskCheckForTimeOut+0x42>
 800a1dc:	428a      	cmp	r2, r1
 800a1de:	d806      	bhi.n	800a1ee <xTaskCheckForTimeOut+0x42>
            *pxTicksToWait = ( TickType_t ) 0;
 800a1e0:	2300      	movs	r3, #0
            xReturn = pdTRUE;
 800a1e2:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 800a1e4:	602b      	str	r3, [r5, #0]
    taskEXIT_CRITICAL();
 800a1e6:	f7fe fe47 	bl	8008e78 <vPortExitCritical>
}
 800a1ea:	4620      	mov	r0, r4
 800a1ec:	bd70      	pop	{r4, r5, r6, pc}
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1ee:	1a88      	subs	r0, r1, r2
        else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a1f0:	4283      	cmp	r3, r0
 800a1f2:	d9f5      	bls.n	800a1e0 <xTaskCheckForTimeOut+0x34>
            *pxTicksToWait -= xElapsedTime;
 800a1f4:	1a5b      	subs	r3, r3, r1
 800a1f6:	4413      	add	r3, r2
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a1f8:	4620      	mov	r0, r4
            *pxTicksToWait -= xElapsedTime;
 800a1fa:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a1fc:	f7ff ffca 	bl	800a194 <vTaskInternalSetTimeOutState>
                xReturn = pdFALSE;
 800a200:	2400      	movs	r4, #0
 800a202:	e7f0      	b.n	800a1e6 <xTaskCheckForTimeOut+0x3a>
 800a204:	2006f010 	.word	0x2006f010
 800a208:	2006effc 	.word	0x2006effc

0800a20c <vTaskMissedYield>:
    xYieldPending = pdTRUE;
 800a20c:	2201      	movs	r2, #1
 800a20e:	4b01      	ldr	r3, [pc, #4]	@ (800a214 <vTaskMissedYield+0x8>)
 800a210:	601a      	str	r2, [r3, #0]
}
 800a212:	4770      	bx	lr
 800a214:	2006f000 	.word	0x2006f000

0800a218 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 800a218:	4b05      	ldr	r3, [pc, #20]	@ (800a230 <xTaskGetSchedulerState+0x18>)
 800a21a:	681b      	ldr	r3, [r3, #0]
 800a21c:	b133      	cbz	r3, 800a22c <xTaskGetSchedulerState+0x14>
            if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a21e:	4b05      	ldr	r3, [pc, #20]	@ (800a234 <xTaskGetSchedulerState+0x1c>)
 800a220:	6818      	ldr	r0, [r3, #0]
 800a222:	fab0 f080 	clz	r0, r0
 800a226:	0940      	lsrs	r0, r0, #5
 800a228:	0040      	lsls	r0, r0, #1
 800a22a:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 800a22c:	2001      	movs	r0, #1
    }
 800a22e:	4770      	bx	lr
 800a230:	2006f008 	.word	0x2006f008
 800a234:	2006eff0 	.word	0x2006eff0

0800a238 <xTaskPriorityInherit>:
    {
 800a238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if( pxMutexHolder != NULL )
 800a23a:	4604      	mov	r4, r0
 800a23c:	2800      	cmp	r0, #0
 800a23e:	d02e      	beq.n	800a29e <xTaskPriorityInherit+0x66>
            if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a240:	4d1d      	ldr	r5, [pc, #116]	@ (800a2b8 <xTaskPriorityInherit+0x80>)
 800a242:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a244:	682a      	ldr	r2, [r5, #0]
 800a246:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a248:	4293      	cmp	r3, r2
 800a24a:	d22d      	bcs.n	800a2a8 <xTaskPriorityInherit+0x70>
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a24c:	6982      	ldr	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a24e:	4e1b      	ldr	r6, [pc, #108]	@ (800a2bc <xTaskPriorityInherit+0x84>)
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a250:	2a00      	cmp	r2, #0
                    listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a252:	bfa1      	itttt	ge
 800a254:	682a      	ldrge	r2, [r5, #0]
 800a256:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a258:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a25c:	6182      	strge	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a25e:	2214      	movs	r2, #20
 800a260:	fb02 6303 	mla	r3, r2, r3, r6
 800a264:	6942      	ldr	r2, [r0, #20]
 800a266:	429a      	cmp	r2, r3
 800a268:	d11a      	bne.n	800a2a0 <xTaskPriorityInherit+0x68>
                    if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a26a:	1d07      	adds	r7, r0, #4
 800a26c:	4638      	mov	r0, r7
 800a26e:	f7fe fdb2 	bl	8008dd6 <uxListRemove>
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a272:	682b      	ldr	r3, [r5, #0]
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a274:	4a12      	ldr	r2, [pc, #72]	@ (800a2c0 <xTaskPriorityInherit+0x88>)
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a276:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a278:	6811      	ldr	r1, [r2, #0]
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a27a:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a27c:	428b      	cmp	r3, r1
 800a27e:	bf88      	it	hi
 800a280:	6013      	strhi	r3, [r2, #0]
 800a282:	2214      	movs	r2, #20
 800a284:	4353      	muls	r3, r2
 800a286:	18f1      	adds	r1, r6, r3
 800a288:	684a      	ldr	r2, [r1, #4]
 800a28a:	6890      	ldr	r0, [r2, #8]
 800a28c:	60a2      	str	r2, [r4, #8]
 800a28e:	60e0      	str	r0, [r4, #12]
 800a290:	6047      	str	r7, [r0, #4]
 800a292:	6097      	str	r7, [r2, #8]
 800a294:	58f2      	ldr	r2, [r6, r3]
 800a296:	6161      	str	r1, [r4, #20]
 800a298:	3201      	adds	r2, #1
 800a29a:	50f2      	str	r2, [r6, r3]
                xReturn = pdTRUE;
 800a29c:	2001      	movs	r0, #1
    }
 800a29e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2a0:	682b      	ldr	r3, [r5, #0]
 800a2a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2a4:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a2a6:	e7f9      	b.n	800a29c <xTaskPriorityInherit+0x64>
                if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a2a8:	682b      	ldr	r3, [r5, #0]
 800a2aa:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a2ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2ae:	4298      	cmp	r0, r3
 800a2b0:	bf2c      	ite	cs
 800a2b2:	2000      	movcs	r0, #0
 800a2b4:	2001      	movcc	r0, #1
 800a2b6:	e7f2      	b.n	800a29e <xTaskPriorityInherit+0x66>
 800a2b8:	2006f4e8 	.word	0x2006f4e8
 800a2bc:	2006f088 	.word	0x2006f088
 800a2c0:	2006f00c 	.word	0x2006f00c

0800a2c4 <xTaskPriorityDisinherit>:
    {
 800a2c4:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a2c6:	4604      	mov	r4, r0
 800a2c8:	b908      	cbnz	r0, 800a2ce <xTaskPriorityDisinherit+0xa>
        BaseType_t xReturn = pdFALSE;
 800a2ca:	2000      	movs	r0, #0
    }
 800a2cc:	bd70      	pop	{r4, r5, r6, pc}
            configASSERT( pxTCB == pxCurrentTCB );
 800a2ce:	4b19      	ldr	r3, [pc, #100]	@ (800a334 <xTaskPriorityDisinherit+0x70>)
 800a2d0:	681b      	ldr	r3, [r3, #0]
 800a2d2:	4283      	cmp	r3, r0
 800a2d4:	d002      	beq.n	800a2dc <xTaskPriorityDisinherit+0x18>
 800a2d6:	f7fe fe9d 	bl	8009014 <ulSetInterruptMask>
 800a2da:	e7fe      	b.n	800a2da <xTaskPriorityDisinherit+0x16>
            configASSERT( pxTCB->uxMutexesHeld );
 800a2dc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a2de:	b913      	cbnz	r3, 800a2e6 <xTaskPriorityDisinherit+0x22>
 800a2e0:	f7fe fe98 	bl	8009014 <ulSetInterruptMask>
 800a2e4:	e7fe      	b.n	800a2e4 <xTaskPriorityDisinherit+0x20>
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2e6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a2e8:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
            ( pxTCB->uxMutexesHeld )--;
 800a2ea:	3b01      	subs	r3, #1
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2ec:	4291      	cmp	r1, r2
            ( pxTCB->uxMutexesHeld )--;
 800a2ee:	6503      	str	r3, [r0, #80]	@ 0x50
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2f0:	d0eb      	beq.n	800a2ca <xTaskPriorityDisinherit+0x6>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2f2:	2b00      	cmp	r3, #0
 800a2f4:	d1e9      	bne.n	800a2ca <xTaskPriorityDisinherit+0x6>
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2f6:	1d05      	adds	r5, r0, #4
 800a2f8:	4628      	mov	r0, r5
 800a2fa:	f7fe fd6c 	bl	8008dd6 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2fe:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a300:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a304:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 800a306:	4a0c      	ldr	r2, [pc, #48]	@ (800a338 <xTaskPriorityDisinherit+0x74>)
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a308:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxTCB );
 800a30a:	6811      	ldr	r1, [r2, #0]
 800a30c:	428b      	cmp	r3, r1
 800a30e:	f04f 0114 	mov.w	r1, #20
 800a312:	bf88      	it	hi
 800a314:	6013      	strhi	r3, [r2, #0]
 800a316:	434b      	muls	r3, r1
 800a318:	4a08      	ldr	r2, [pc, #32]	@ (800a33c <xTaskPriorityDisinherit+0x78>)
 800a31a:	18d0      	adds	r0, r2, r3
 800a31c:	6841      	ldr	r1, [r0, #4]
 800a31e:	688e      	ldr	r6, [r1, #8]
 800a320:	60a1      	str	r1, [r4, #8]
 800a322:	60e6      	str	r6, [r4, #12]
 800a324:	6075      	str	r5, [r6, #4]
 800a326:	608d      	str	r5, [r1, #8]
 800a328:	58d1      	ldr	r1, [r2, r3]
 800a32a:	6160      	str	r0, [r4, #20]
 800a32c:	3101      	adds	r1, #1
                    xReturn = pdTRUE;
 800a32e:	2001      	movs	r0, #1
                    prvAddTaskToReadyList( pxTCB );
 800a330:	50d1      	str	r1, [r2, r3]
        return xReturn;
 800a332:	e7cb      	b.n	800a2cc <xTaskPriorityDisinherit+0x8>
 800a334:	2006f4e8 	.word	0x2006f4e8
 800a338:	2006f00c 	.word	0x2006f00c
 800a33c:	2006f088 	.word	0x2006f088

0800a340 <vTaskPriorityDisinheritAfterTimeout>:
    {
 800a340:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a342:	4604      	mov	r4, r0
 800a344:	2800      	cmp	r0, #0
 800a346:	d03a      	beq.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x7e>
            configASSERT( pxTCB->uxMutexesHeld );
 800a348:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a34a:	b912      	cbnz	r2, 800a352 <vTaskPriorityDisinheritAfterTimeout+0x12>
 800a34c:	f7fe fe62 	bl	8009014 <ulSetInterruptMask>
 800a350:	e7fe      	b.n	800a350 <vTaskPriorityDisinheritAfterTimeout+0x10>
            if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a352:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a354:	4299      	cmp	r1, r3
 800a356:	bf38      	it	cc
 800a358:	4619      	movcc	r1, r3
            if( pxTCB->uxPriority != uxPriorityToUse )
 800a35a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a35c:	428b      	cmp	r3, r1
 800a35e:	d02e      	beq.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x7e>
                if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a360:	2a01      	cmp	r2, #1
 800a362:	d12c      	bne.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x7e>
                    configASSERT( pxTCB != pxCurrentTCB );
 800a364:	4a16      	ldr	r2, [pc, #88]	@ (800a3c0 <vTaskPriorityDisinheritAfterTimeout+0x80>)
 800a366:	6812      	ldr	r2, [r2, #0]
 800a368:	4282      	cmp	r2, r0
 800a36a:	d102      	bne.n	800a372 <vTaskPriorityDisinheritAfterTimeout+0x32>
 800a36c:	f7fe fe52 	bl	8009014 <ulSetInterruptMask>
 800a370:	e7fe      	b.n	800a370 <vTaskPriorityDisinheritAfterTimeout+0x30>
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a372:	6982      	ldr	r2, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a374:	4d13      	ldr	r5, [pc, #76]	@ (800a3c4 <vTaskPriorityDisinheritAfterTimeout+0x84>)
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a376:	2a00      	cmp	r2, #0
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a378:	f04f 0214 	mov.w	r2, #20
 800a37c:	fb02 5303 	mla	r3, r2, r3, r5
 800a380:	6942      	ldr	r2, [r0, #20]
                    pxTCB->uxPriority = uxPriorityToUse;
 800a382:	62c1      	str	r1, [r0, #44]	@ 0x2c
                        listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a384:	bfa4      	itt	ge
 800a386:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a38a:	6181      	strge	r1, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a38c:	429a      	cmp	r2, r3
 800a38e:	d116      	bne.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x7e>
                        if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a390:	1d06      	adds	r6, r0, #4
 800a392:	4630      	mov	r0, r6
 800a394:	f7fe fd1f 	bl	8008dd6 <uxListRemove>
                        prvAddTaskToReadyList( pxTCB );
 800a398:	4a0b      	ldr	r2, [pc, #44]	@ (800a3c8 <vTaskPriorityDisinheritAfterTimeout+0x88>)
 800a39a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a39c:	6811      	ldr	r1, [r2, #0]
 800a39e:	428b      	cmp	r3, r1
 800a3a0:	bf88      	it	hi
 800a3a2:	6013      	strhi	r3, [r2, #0]
 800a3a4:	2214      	movs	r2, #20
 800a3a6:	4353      	muls	r3, r2
 800a3a8:	18e9      	adds	r1, r5, r3
 800a3aa:	684a      	ldr	r2, [r1, #4]
 800a3ac:	6890      	ldr	r0, [r2, #8]
 800a3ae:	60a2      	str	r2, [r4, #8]
 800a3b0:	60e0      	str	r0, [r4, #12]
 800a3b2:	6046      	str	r6, [r0, #4]
 800a3b4:	6096      	str	r6, [r2, #8]
 800a3b6:	58ea      	ldr	r2, [r5, r3]
 800a3b8:	6161      	str	r1, [r4, #20]
 800a3ba:	3201      	adds	r2, #1
 800a3bc:	50ea      	str	r2, [r5, r3]
    }
 800a3be:	bd70      	pop	{r4, r5, r6, pc}
 800a3c0:	2006f4e8 	.word	0x2006f4e8
 800a3c4:	2006f088 	.word	0x2006f088
 800a3c8:	2006f00c 	.word	0x2006f00c

0800a3cc <pvTaskIncrementMutexHeldCount>:
        if( pxCurrentTCB != NULL )
 800a3cc:	4b04      	ldr	r3, [pc, #16]	@ (800a3e0 <pvTaskIncrementMutexHeldCount+0x14>)
 800a3ce:	681a      	ldr	r2, [r3, #0]
 800a3d0:	b11a      	cbz	r2, 800a3da <pvTaskIncrementMutexHeldCount+0xe>
            ( pxCurrentTCB->uxMutexesHeld )++;
 800a3d2:	6819      	ldr	r1, [r3, #0]
 800a3d4:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a3d6:	3201      	adds	r2, #1
 800a3d8:	650a      	str	r2, [r1, #80]	@ 0x50
        return pxCurrentTCB;
 800a3da:	6818      	ldr	r0, [r3, #0]
    }
 800a3dc:	4770      	bx	lr
 800a3de:	bf00      	nop
 800a3e0:	2006f4e8 	.word	0x2006f4e8

0800a3e4 <prvInsertTimerInActiveList>:
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

        if( xNextExpiryTime <= xTimeNow )
 800a3e4:	4291      	cmp	r1, r2
    {
 800a3e6:	b508      	push	{r3, lr}
        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a3e8:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a3ea:	6100      	str	r0, [r0, #16]
        if( xNextExpiryTime <= xTimeNow )
 800a3ec:	d80a      	bhi.n	800a404 <prvInsertTimerInActiveList+0x20>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3ee:	1ad2      	subs	r2, r2, r3
 800a3f0:	6983      	ldr	r3, [r0, #24]
 800a3f2:	429a      	cmp	r2, r3
 800a3f4:	d20d      	bcs.n	800a412 <prvInsertTimerInActiveList+0x2e>
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a3f6:	4b08      	ldr	r3, [pc, #32]	@ (800a418 <prvInsertTimerInActiveList+0x34>)
 800a3f8:	1d01      	adds	r1, r0, #4
                 * its expiry time and should be processed immediately. */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a3fa:	6818      	ldr	r0, [r3, #0]
 800a3fc:	f7fe fcd4 	bl	8008da8 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 800a400:	2000      	movs	r0, #0
            }
        }

        return xProcessTimerNow;
    }
 800a402:	bd08      	pop	{r3, pc}
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a404:	429a      	cmp	r2, r3
 800a406:	d201      	bcs.n	800a40c <prvInsertTimerInActiveList+0x28>
 800a408:	4299      	cmp	r1, r3
 800a40a:	d202      	bcs.n	800a412 <prvInsertTimerInActiveList+0x2e>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a40c:	4b03      	ldr	r3, [pc, #12]	@ (800a41c <prvInsertTimerInActiveList+0x38>)
 800a40e:	1d01      	adds	r1, r0, #4
 800a410:	e7f3      	b.n	800a3fa <prvInsertTimerInActiveList+0x16>
                xProcessTimerNow = pdTRUE;
 800a412:	2001      	movs	r0, #1
        return xProcessTimerNow;
 800a414:	e7f5      	b.n	800a402 <prvInsertTimerInActiveList+0x1e>
 800a416:	bf00      	nop
 800a418:	2006f5e8 	.word	0x2006f5e8
 800a41c:	2006f5ec 	.word	0x2006f5ec

0800a420 <prvReloadTimer>:
    {
 800a420:	b570      	push	{r4, r5, r6, lr}
 800a422:	4604      	mov	r4, r0
 800a424:	460d      	mov	r5, r1
 800a426:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 800a428:	69a1      	ldr	r1, [r4, #24]
 800a42a:	462b      	mov	r3, r5
 800a42c:	4632      	mov	r2, r6
 800a42e:	4620      	mov	r0, r4
 800a430:	4429      	add	r1, r5
 800a432:	f7ff ffd7 	bl	800a3e4 <prvInsertTimerInActiveList>
 800a436:	b900      	cbnz	r0, 800a43a <prvReloadTimer+0x1a>
    }
 800a438:	bd70      	pop	{r4, r5, r6, pc}
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a43a:	69a3      	ldr	r3, [r4, #24]
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a43c:	4620      	mov	r0, r4
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a43e:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a440:	6a23      	ldr	r3, [r4, #32]
 800a442:	4798      	blx	r3
 800a444:	e7f0      	b.n	800a428 <prvReloadTimer+0x8>
	...

0800a448 <prvProcessExpiredTimer>:
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a448:	4b0e      	ldr	r3, [pc, #56]	@ (800a484 <prvProcessExpiredTimer+0x3c>)
    {
 800a44a:	b570      	push	{r4, r5, r6, lr}
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a44c:	681b      	ldr	r3, [r3, #0]
    {
 800a44e:	4605      	mov	r5, r0
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a450:	68db      	ldr	r3, [r3, #12]
    {
 800a452:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a454:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a456:	1d20      	adds	r0, r4, #4
 800a458:	f7fe fcbd 	bl	8008dd6 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a45c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a460:	075a      	lsls	r2, r3, #29
 800a462:	d509      	bpl.n	800a478 <prvProcessExpiredTimer+0x30>
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 800a464:	4632      	mov	r2, r6
 800a466:	4629      	mov	r1, r5
 800a468:	4620      	mov	r0, r4
 800a46a:	f7ff ffd9 	bl	800a420 <prvReloadTimer>
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a46e:	4620      	mov	r0, r4
 800a470:	6a23      	ldr	r3, [r4, #32]
    }
 800a472:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a476:	4718      	bx	r3
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a478:	f023 0301 	bic.w	r3, r3, #1
 800a47c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a480:	e7f5      	b.n	800a46e <prvProcessExpiredTimer+0x26>
 800a482:	bf00      	nop
 800a484:	2006f5ec 	.word	0x2006f5ec

0800a488 <prvSampleTimeNow>:
    {
 800a488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a48a:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 800a48c:	f7ff fbee 	bl	8009c6c <xTaskGetTickCount>
        if( xTimeNow < xLastTime )
 800a490:	4e0d      	ldr	r6, [pc, #52]	@ (800a4c8 <prvSampleTimeNow+0x40>)
        xTimeNow = xTaskGetTickCount();
 800a492:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 800a494:	6833      	ldr	r3, [r6, #0]
 800a496:	4283      	cmp	r3, r0
 800a498:	d909      	bls.n	800a4ae <prvSampleTimeNow+0x26>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a49a:	4f0c      	ldr	r7, [pc, #48]	@ (800a4cc <prvSampleTimeNow+0x44>)
 800a49c:	683b      	ldr	r3, [r7, #0]
 800a49e:	681a      	ldr	r2, [r3, #0]
 800a4a0:	b952      	cbnz	r2, 800a4b8 <prvSampleTimeNow+0x30>
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 800a4a2:	4a0b      	ldr	r2, [pc, #44]	@ (800a4d0 <prvSampleTimeNow+0x48>)
 800a4a4:	6811      	ldr	r1, [r2, #0]
        pxOverflowTimerList = pxTemp;
 800a4a6:	6013      	str	r3, [r2, #0]
        pxCurrentTimerList = pxOverflowTimerList;
 800a4a8:	6039      	str	r1, [r7, #0]
            *pxTimerListsWereSwitched = pdTRUE;
 800a4aa:	2301      	movs	r3, #1
 800a4ac:	e000      	b.n	800a4b0 <prvSampleTimeNow+0x28>
 800a4ae:	2300      	movs	r3, #0
    }
 800a4b0:	4620      	mov	r0, r4
            *pxTimerListsWereSwitched = pdTRUE;
 800a4b2:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 800a4b4:	6034      	str	r4, [r6, #0]
    }
 800a4b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4b8:	68db      	ldr	r3, [r3, #12]
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 800a4ba:	f04f 31ff 	mov.w	r1, #4294967295
 800a4be:	6818      	ldr	r0, [r3, #0]
 800a4c0:	f7ff ffc2 	bl	800a448 <prvProcessExpiredTimer>
 800a4c4:	e7ea      	b.n	800a49c <prvSampleTimeNow+0x14>
 800a4c6:	bf00      	nop
 800a4c8:	2006f5dc 	.word	0x2006f5dc
 800a4cc:	2006f5ec 	.word	0x2006f5ec
 800a4d0:	2006f5e8 	.word	0x2006f5e8

0800a4d4 <prvTimerTask>:
    {
 800a4d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a4d8:	4f51      	ldr	r7, [pc, #324]	@ (800a620 <prvTimerTask+0x14c>)
 800a4da:	4e52      	ldr	r6, [pc, #328]	@ (800a624 <prvTimerTask+0x150>)
    {
 800a4dc:	b086      	sub	sp, #24
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a4de:	683b      	ldr	r3, [r7, #0]
 800a4e0:	f8d3 8000 	ldr.w	r8, [r3]
 800a4e4:	f1b8 0f00 	cmp.w	r8, #0
 800a4e8:	d032      	beq.n	800a550 <prvTimerTask+0x7c>
 800a4ea:	2400      	movs	r4, #0
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4ec:	68db      	ldr	r3, [r3, #12]
 800a4ee:	f8d3 8000 	ldr.w	r8, [r3]
        vTaskSuspendAll();
 800a4f2:	f7ff fbb3 	bl	8009c5c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a4f6:	a802      	add	r0, sp, #8
 800a4f8:	f7ff ffc6 	bl	800a488 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 800a4fc:	9b02      	ldr	r3, [sp, #8]
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a4fe:	4605      	mov	r5, r0
            if( xTimerListsWereSwitched == pdFALSE )
 800a500:	2b00      	cmp	r3, #0
 800a502:	d13a      	bne.n	800a57a <prvTimerTask+0xa6>
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a504:	bb34      	cbnz	r4, 800a554 <prvTimerTask+0x80>
 800a506:	4540      	cmp	r0, r8
 800a508:	d32a      	bcc.n	800a560 <prvTimerTask+0x8c>
                    ( void ) xTaskResumeAll();
 800a50a:	f7ff fc65 	bl	8009dd8 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800a50e:	4629      	mov	r1, r5
 800a510:	4640      	mov	r0, r8
 800a512:	f7ff ff99 	bl	800a448 <prvProcessExpiredTimer>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a516:	2200      	movs	r2, #0
 800a518:	6830      	ldr	r0, [r6, #0]
 800a51a:	a902      	add	r1, sp, #8
 800a51c:	f7ff f825 	bl	800956a <xQueueReceive>
 800a520:	2800      	cmp	r0, #0
 800a522:	d0dc      	beq.n	800a4de <prvTimerTask+0xa>
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a524:	9b02      	ldr	r3, [sp, #8]
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a526:	9804      	ldr	r0, [sp, #16]
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a528:	2b00      	cmp	r3, #0
 800a52a:	db29      	blt.n	800a580 <prvTimerTask+0xac>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a52c:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a52e:	6963      	ldr	r3, [r4, #20]
 800a530:	bb6b      	cbnz	r3, 800a58e <prvTimerTask+0xba>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a532:	a801      	add	r0, sp, #4
 800a534:	f7ff ffa8 	bl	800a488 <prvSampleTimeNow>
                switch( xMessage.xMessageID )
 800a538:	9b02      	ldr	r3, [sp, #8]
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a53a:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 800a53c:	3b01      	subs	r3, #1
 800a53e:	2b08      	cmp	r3, #8
 800a540:	d8e9      	bhi.n	800a516 <prvTimerTask+0x42>
 800a542:	e8df f003 	tbb	[pc, r3]
 800a546:	2828      	.short	0x2828
 800a548:	2865524b 	.word	0x2865524b
 800a54c:	4b28      	.short	0x4b28
 800a54e:	52          	.byte	0x52
 800a54f:	00          	.byte	0x00
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a550:	2401      	movs	r4, #1
 800a552:	e7ce      	b.n	800a4f2 <prvTimerTask+0x1e>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a554:	4b34      	ldr	r3, [pc, #208]	@ (800a628 <prvTimerTask+0x154>)
 800a556:	681b      	ldr	r3, [r3, #0]
 800a558:	681c      	ldr	r4, [r3, #0]
 800a55a:	fab4 f484 	clz	r4, r4
 800a55e:	0964      	lsrs	r4, r4, #5
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a560:	4622      	mov	r2, r4
 800a562:	6830      	ldr	r0, [r6, #0]
 800a564:	eba8 0105 	sub.w	r1, r8, r5
 800a568:	f7ff f99d 	bl	80098a6 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 800a56c:	f7ff fc34 	bl	8009dd8 <xTaskResumeAll>
 800a570:	2800      	cmp	r0, #0
 800a572:	d1d0      	bne.n	800a516 <prvTimerTask+0x42>
                        portYIELD_WITHIN_API();
 800a574:	f7fe fc66 	bl	8008e44 <vPortYield>
 800a578:	e7cd      	b.n	800a516 <prvTimerTask+0x42>
                ( void ) xTaskResumeAll();
 800a57a:	f7ff fc2d 	bl	8009dd8 <xTaskResumeAll>
    }
 800a57e:	e7ca      	b.n	800a516 <prvTimerTask+0x42>
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a580:	9b03      	ldr	r3, [sp, #12]
 800a582:	9905      	ldr	r1, [sp, #20]
 800a584:	4798      	blx	r3
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a586:	9b02      	ldr	r3, [sp, #8]
 800a588:	2b00      	cmp	r3, #0
 800a58a:	dbc4      	blt.n	800a516 <prvTimerTask+0x42>
 800a58c:	e7ce      	b.n	800a52c <prvTimerTask+0x58>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a58e:	1d20      	adds	r0, r4, #4
 800a590:	f7fe fc21 	bl	8008dd6 <uxListRemove>
 800a594:	e7cd      	b.n	800a532 <prvTimerTask+0x5e>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a596:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a59a:	69a1      	ldr	r1, [r4, #24]
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a59c:	f043 0301 	orr.w	r3, r3, #1
 800a5a0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5a4:	9b03      	ldr	r3, [sp, #12]
 800a5a6:	4602      	mov	r2, r0
 800a5a8:	4419      	add	r1, r3
 800a5aa:	4620      	mov	r0, r4
 800a5ac:	f7ff ff1a 	bl	800a3e4 <prvInsertTimerInActiveList>
 800a5b0:	2800      	cmp	r0, #0
 800a5b2:	d0b0      	beq.n	800a516 <prvTimerTask+0x42>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5b4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a5b8:	0759      	lsls	r1, r3, #29
 800a5ba:	d50a      	bpl.n	800a5d2 <prvTimerTask+0xfe>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 800a5bc:	69a3      	ldr	r3, [r4, #24]
 800a5be:	9903      	ldr	r1, [sp, #12]
 800a5c0:	462a      	mov	r2, r5
 800a5c2:	4620      	mov	r0, r4
 800a5c4:	4419      	add	r1, r3
 800a5c6:	f7ff ff2b 	bl	800a420 <prvReloadTimer>
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a5ca:	4620      	mov	r0, r4
 800a5cc:	6a23      	ldr	r3, [r4, #32]
 800a5ce:	4798      	blx	r3
 800a5d0:	e7a1      	b.n	800a516 <prvTimerTask+0x42>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a5d2:	f023 0301 	bic.w	r3, r3, #1
 800a5d6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a5da:	e7f6      	b.n	800a5ca <prvTimerTask+0xf6>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a5dc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                                    pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a5e0:	f023 0301 	bic.w	r3, r3, #1
 800a5e4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a5e8:	e795      	b.n	800a516 <prvTimerTask+0x42>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5ea:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a5ee:	f043 0301 	orr.w	r3, r3, #1
 800a5f2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a5f6:	9903      	ldr	r1, [sp, #12]
 800a5f8:	61a1      	str	r1, [r4, #24]
                        configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a5fa:	b911      	cbnz	r1, 800a602 <prvTimerTask+0x12e>
 800a5fc:	f7fe fd0a 	bl	8009014 <ulSetInterruptMask>
 800a600:	e7fe      	b.n	800a600 <prvTimerTask+0x12c>
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a602:	4603      	mov	r3, r0
 800a604:	4602      	mov	r2, r0
 800a606:	4401      	add	r1, r0
 800a608:	4620      	mov	r0, r4
 800a60a:	f7ff feeb 	bl	800a3e4 <prvInsertTimerInActiveList>
                        break;
 800a60e:	e782      	b.n	800a516 <prvTimerTask+0x42>
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a610:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a614:	079a      	lsls	r2, r3, #30
 800a616:	d4e3      	bmi.n	800a5e0 <prvTimerTask+0x10c>
                                    vPortFree( pxTimer );
 800a618:	4620      	mov	r0, r4
 800a61a:	f000 f91d 	bl	800a858 <vPortFree>
 800a61e:	e77a      	b.n	800a516 <prvTimerTask+0x42>
 800a620:	2006f5ec 	.word	0x2006f5ec
 800a624:	2006f5e4 	.word	0x2006f5e4
 800a628:	2006f5e8 	.word	0x2006f5e8

0800a62c <prvCheckForValidListAndQueue>:
    }
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 800a62c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
        {
            if( xTimerQueue == NULL )
 800a62e:	4c11      	ldr	r4, [pc, #68]	@ (800a674 <prvCheckForValidListAndQueue+0x48>)
        taskENTER_CRITICAL();
 800a630:	f7fe fc14 	bl	8008e5c <vPortEnterCritical>
            if( xTimerQueue == NULL )
 800a634:	6825      	ldr	r5, [r4, #0]
 800a636:	b9bd      	cbnz	r5, 800a668 <prvCheckForValidListAndQueue+0x3c>
            {
                vListInitialise( &xActiveTimerList1 );
 800a638:	4f0f      	ldr	r7, [pc, #60]	@ (800a678 <prvCheckForValidListAndQueue+0x4c>)
                vListInitialise( &xActiveTimerList2 );
 800a63a:	4e10      	ldr	r6, [pc, #64]	@ (800a67c <prvCheckForValidListAndQueue+0x50>)
                vListInitialise( &xActiveTimerList1 );
 800a63c:	4638      	mov	r0, r7
 800a63e:	f7fe fba5 	bl	8008d8c <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 800a642:	4630      	mov	r0, r6
 800a644:	f7fe fba2 	bl	8008d8c <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 800a648:	4b0d      	ldr	r3, [pc, #52]	@ (800a680 <prvCheckForValidListAndQueue+0x54>)
                        /* The timer queue is allocated statically in case
                         * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
                        PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                                                                          /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
                        PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a64a:	2110      	movs	r1, #16
                pxCurrentTimerList = &xActiveTimerList1;
 800a64c:	601f      	str	r7, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 800a64e:	4b0d      	ldr	r3, [pc, #52]	@ (800a684 <prvCheckForValidListAndQueue+0x58>)
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a650:	200a      	movs	r0, #10
                pxOverflowTimerList = &xActiveTimerList2;
 800a652:	601e      	str	r6, [r3, #0]
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a654:	4a0c      	ldr	r2, [pc, #48]	@ (800a688 <prvCheckForValidListAndQueue+0x5c>)
 800a656:	4b0d      	ldr	r3, [pc, #52]	@ (800a68c <prvCheckForValidListAndQueue+0x60>)
 800a658:	9500      	str	r5, [sp, #0]
 800a65a:	f7fe fe00 	bl	800925e <xQueueGenericCreateStatic>
 800a65e:	6020      	str	r0, [r4, #0]
                    }
                #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */

                #if ( configQUEUE_REGISTRY_SIZE > 0 )
                    {
                        if( xTimerQueue != NULL )
 800a660:	b110      	cbz	r0, 800a668 <prvCheckForValidListAndQueue+0x3c>
                        {
                            vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a662:	490b      	ldr	r1, [pc, #44]	@ (800a690 <prvCheckForValidListAndQueue+0x64>)
 800a664:	f7ff f8d0 	bl	8009808 <vQueueAddToRegistry>
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    }
 800a668:	b003      	add	sp, #12
 800a66a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        taskEXIT_CRITICAL();
 800a66e:	f7fe bc03 	b.w	8008e78 <vPortExitCritical>
 800a672:	bf00      	nop
 800a674:	2006f5e4 	.word	0x2006f5e4
 800a678:	2006f604 	.word	0x2006f604
 800a67c:	2006f5f0 	.word	0x2006f5f0
 800a680:	2006f5ec 	.word	0x2006f5ec
 800a684:	2006f5e8 	.word	0x2006f5e8
 800a688:	2006f53c 	.word	0x2006f53c
 800a68c:	2006f4ec 	.word	0x2006f4ec
 800a690:	080358ad 	.word	0x080358ad

0800a694 <xTimerCreateTimerTask>:
    {
 800a694:	b510      	push	{r4, lr}
 800a696:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 800a698:	f7ff ffc8 	bl	800a62c <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 800a69c:	4b0f      	ldr	r3, [pc, #60]	@ (800a6dc <xTimerCreateTimerTask+0x48>)
 800a69e:	681b      	ldr	r3, [r3, #0]
 800a6a0:	b1b3      	cbz	r3, 800a6d0 <xTimerCreateTimerTask+0x3c>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 800a6a2:	2400      	movs	r4, #0
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6a4:	aa07      	add	r2, sp, #28
 800a6a6:	a906      	add	r1, sp, #24
 800a6a8:	a805      	add	r0, sp, #20
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 800a6aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6ae:	f7fe fb61 	bl	8008d74 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 800a6b2:	9b05      	ldr	r3, [sp, #20]
 800a6b4:	9a07      	ldr	r2, [sp, #28]
 800a6b6:	9302      	str	r3, [sp, #8]
 800a6b8:	9b06      	ldr	r3, [sp, #24]
 800a6ba:	4909      	ldr	r1, [pc, #36]	@ (800a6e0 <xTimerCreateTimerTask+0x4c>)
 800a6bc:	9301      	str	r3, [sp, #4]
 800a6be:	2302      	movs	r3, #2
 800a6c0:	4808      	ldr	r0, [pc, #32]	@ (800a6e4 <xTimerCreateTimerTask+0x50>)
 800a6c2:	9300      	str	r3, [sp, #0]
 800a6c4:	4623      	mov	r3, r4
 800a6c6:	f7ff fa74 	bl	8009bb2 <xTaskCreateStatic>
 800a6ca:	4b07      	ldr	r3, [pc, #28]	@ (800a6e8 <xTimerCreateTimerTask+0x54>)
 800a6cc:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 800a6ce:	b910      	cbnz	r0, 800a6d6 <xTimerCreateTimerTask+0x42>
        configASSERT( xReturn );
 800a6d0:	f7fe fca0 	bl	8009014 <ulSetInterruptMask>
 800a6d4:	e7fe      	b.n	800a6d4 <xTimerCreateTimerTask+0x40>
    }
 800a6d6:	2001      	movs	r0, #1
 800a6d8:	b008      	add	sp, #32
 800a6da:	bd10      	pop	{r4, pc}
 800a6dc:	2006f5e4 	.word	0x2006f5e4
 800a6e0:	080358b2 	.word	0x080358b2
 800a6e4:	0800a4d5 	.word	0x0800a4d5
 800a6e8:	2006f5e0 	.word	0x2006f5e0

0800a6ec <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 800a6ec:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a6ee:	4b10      	ldr	r3, [pc, #64]	@ (800a730 <prvInsertBlockIntoFreeList+0x44>)
 800a6f0:	461a      	mov	r2, r3
 800a6f2:	681b      	ldr	r3, [r3, #0]
 800a6f4:	4283      	cmp	r3, r0
 800a6f6:	d3fb      	bcc.n	800a6f0 <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a6f8:	6854      	ldr	r4, [r2, #4]
 800a6fa:	1911      	adds	r1, r2, r4
 800a6fc:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a6fe:	bf01      	itttt	eq
 800a700:	6841      	ldreq	r1, [r0, #4]
 800a702:	4610      	moveq	r0, r2
 800a704:	1909      	addeq	r1, r1, r4
 800a706:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a708:	6844      	ldr	r4, [r0, #4]
 800a70a:	1901      	adds	r1, r0, r4
 800a70c:	428b      	cmp	r3, r1
 800a70e:	d10c      	bne.n	800a72a <prvInsertBlockIntoFreeList+0x3e>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 800a710:	4908      	ldr	r1, [pc, #32]	@ (800a734 <prvInsertBlockIntoFreeList+0x48>)
 800a712:	6809      	ldr	r1, [r1, #0]
 800a714:	428b      	cmp	r3, r1
 800a716:	d003      	beq.n	800a720 <prvInsertBlockIntoFreeList+0x34>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a718:	6859      	ldr	r1, [r3, #4]
 800a71a:	4421      	add	r1, r4
 800a71c:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a71e:	6819      	ldr	r1, [r3, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 800a720:	4290      	cmp	r0, r2
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800a722:	6001      	str	r1, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a724:	bf18      	it	ne
 800a726:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 800a728:	bd10      	pop	{r4, pc}
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a72a:	4619      	mov	r1, r3
 800a72c:	e7f8      	b.n	800a720 <prvInsertBlockIntoFreeList+0x34>
 800a72e:	bf00      	nop
 800a730:	2006f630 	.word	0x2006f630
 800a734:	2006f62c 	.word	0x2006f62c

0800a738 <pvPortMalloc>:
{
 800a738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a73c:	4605      	mov	r5, r0
    vTaskSuspendAll();
 800a73e:	f7ff fa8d 	bl	8009c5c <vTaskSuspendAll>
        if( pxEnd == NULL )
 800a742:	493c      	ldr	r1, [pc, #240]	@ (800a834 <pvPortMalloc+0xfc>)
 800a744:	4c3c      	ldr	r4, [pc, #240]	@ (800a838 <pvPortMalloc+0x100>)
 800a746:	680b      	ldr	r3, [r1, #0]
 800a748:	b9f3      	cbnz	r3, 800a788 <pvPortMalloc+0x50>
    xStart.xBlockSize = ( size_t ) 0;
 800a74a:	2000      	movs	r0, #0
    uxAddress = ( size_t ) ucHeap;
 800a74c:	4a3b      	ldr	r2, [pc, #236]	@ (800a83c <pvPortMalloc+0x104>)
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a74e:	0756      	lsls	r6, r2, #29
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a750:	bf1d      	ittte	ne
 800a752:	3207      	addne	r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a754:	4b3a      	ldrne	r3, [pc, #232]	@ (800a840 <pvPortMalloc+0x108>)
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a756:	f022 0207 	bicne.w	r2, r2, #7
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a75a:	4b3a      	ldreq	r3, [pc, #232]	@ (800a844 <pvPortMalloc+0x10c>)
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a75c:	bf18      	it	ne
 800a75e:	1a9b      	subne	r3, r3, r2
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a760:	4413      	add	r3, r2
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a762:	4e39      	ldr	r6, [pc, #228]	@ (800a848 <pvPortMalloc+0x110>)
    uxAddress -= xHeapStructSize;
 800a764:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a766:	f023 0307 	bic.w	r3, r3, #7
    xStart.xBlockSize = ( size_t ) 0;
 800a76a:	6070      	str	r0, [r6, #4]
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a76c:	6032      	str	r2, [r6, #0]
    pxEnd->pxNextFreeBlock = NULL;
 800a76e:	e9c3 0000 	strd	r0, r0, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a772:	1a98      	subs	r0, r3, r2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a774:	e9c2 3000 	strd	r3, r0, [r2]
    pxEnd = ( void * ) uxAddress;
 800a778:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a77a:	4b34      	ldr	r3, [pc, #208]	@ (800a84c <pvPortMalloc+0x114>)
 800a77c:	6018      	str	r0, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a77e:	4b34      	ldr	r3, [pc, #208]	@ (800a850 <pvPortMalloc+0x118>)
 800a780:	6018      	str	r0, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a782:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800a786:	6023      	str	r3, [r4, #0]
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a788:	6827      	ldr	r7, [r4, #0]
 800a78a:	ea17 0405 	ands.w	r4, r7, r5
 800a78e:	d14b      	bne.n	800a828 <pvPortMalloc+0xf0>
            if( ( xWantedSize > 0 ) &&
 800a790:	1e6b      	subs	r3, r5, #1
 800a792:	330a      	adds	r3, #10
 800a794:	d808      	bhi.n	800a7a8 <pvPortMalloc+0x70>
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a796:	0768      	lsls	r0, r5, #29
                xWantedSize += xHeapStructSize;
 800a798:	f105 0208 	add.w	r2, r5, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a79c:	d00b      	beq.n	800a7b6 <pvPortMalloc+0x7e>
                    if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) ) )
 800a79e:	f022 0307 	bic.w	r3, r2, #7
 800a7a2:	3308      	adds	r3, #8
 800a7a4:	4293      	cmp	r3, r2
 800a7a6:	d807      	bhi.n	800a7b8 <pvPortMalloc+0x80>
    ( void ) xTaskResumeAll();
 800a7a8:	f7ff fb16 	bl	8009dd8 <xTaskResumeAll>
    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a7ac:	0763      	lsls	r3, r4, #29
 800a7ae:	d03d      	beq.n	800a82c <pvPortMalloc+0xf4>
 800a7b0:	f7fe fc30 	bl	8009014 <ulSetInterruptMask>
 800a7b4:	e7fe      	b.n	800a7b4 <pvPortMalloc+0x7c>
 800a7b6:	4613      	mov	r3, r2
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a7b8:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800a850 <pvPortMalloc+0x118>
 800a7bc:	f8d8 6000 	ldr.w	r6, [r8]
 800a7c0:	429e      	cmp	r6, r3
 800a7c2:	d331      	bcc.n	800a828 <pvPortMalloc+0xf0>
                pxBlock = xStart.pxNextFreeBlock;
 800a7c4:	4a20      	ldr	r2, [pc, #128]	@ (800a848 <pvPortMalloc+0x110>)
 800a7c6:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a7c8:	6868      	ldr	r0, [r5, #4]
 800a7ca:	4298      	cmp	r0, r3
 800a7cc:	d201      	bcs.n	800a7d2 <pvPortMalloc+0x9a>
 800a7ce:	682c      	ldr	r4, [r5, #0]
 800a7d0:	b984      	cbnz	r4, 800a7f4 <pvPortMalloc+0xbc>
                if( pxBlock != pxEnd )
 800a7d2:	6809      	ldr	r1, [r1, #0]
 800a7d4:	42a9      	cmp	r1, r5
 800a7d6:	d027      	beq.n	800a828 <pvPortMalloc+0xf0>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a7d8:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a7da:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a7dc:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a7de:	1ac2      	subs	r2, r0, r3
 800a7e0:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a7e2:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a7e6:	d90c      	bls.n	800a802 <pvPortMalloc+0xca>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a7e8:	18e8      	adds	r0, r5, r3
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a7ea:	0741      	lsls	r1, r0, #29
 800a7ec:	d005      	beq.n	800a7fa <pvPortMalloc+0xc2>
 800a7ee:	f7fe fc11 	bl	8009014 <ulSetInterruptMask>
 800a7f2:	e7fe      	b.n	800a7f2 <pvPortMalloc+0xba>
 800a7f4:	462a      	mov	r2, r5
 800a7f6:	4625      	mov	r5, r4
 800a7f8:	e7e6      	b.n	800a7c8 <pvPortMalloc+0x90>
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a7fa:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 800a7fc:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a7fe:	f7ff ff75 	bl	800a6ec <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 800a802:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a804:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a806:	4911      	ldr	r1, [pc, #68]	@ (800a84c <pvPortMalloc+0x114>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a808:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a80a:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 800a80c:	4a11      	ldr	r2, [pc, #68]	@ (800a854 <pvPortMalloc+0x11c>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a80e:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 800a810:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 800a812:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a814:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 800a816:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a81a:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a81e:	bf38      	it	cc
 800a820:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a822:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 800a824:	6013      	str	r3, [r2, #0]
 800a826:	e7bf      	b.n	800a7a8 <pvPortMalloc+0x70>
    void * pvReturn = NULL;
 800a828:	2400      	movs	r4, #0
 800a82a:	e7bd      	b.n	800a7a8 <pvPortMalloc+0x70>
}
 800a82c:	4620      	mov	r0, r4
 800a82e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a832:	bf00      	nop
 800a834:	2006f62c 	.word	0x2006f62c
 800a838:	2006f618 	.word	0x2006f618
 800a83c:	2006f638 	.word	0x2006f638
 800a840:	20082eb8 	.word	0x20082eb8
 800a844:	00013880 	.word	0x00013880
 800a848:	2006f630 	.word	0x2006f630
 800a84c:	2006f624 	.word	0x2006f624
 800a850:	2006f628 	.word	0x2006f628
 800a854:	2006f620 	.word	0x2006f620

0800a858 <vPortFree>:
{
 800a858:	b510      	push	{r4, lr}
    if( pv != NULL )
 800a85a:	4604      	mov	r4, r0
 800a85c:	b330      	cbz	r0, 800a8ac <vPortFree+0x54>
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a85e:	4a14      	ldr	r2, [pc, #80]	@ (800a8b0 <vPortFree+0x58>)
 800a860:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a864:	6812      	ldr	r2, [r2, #0]
 800a866:	4213      	tst	r3, r2
 800a868:	d102      	bne.n	800a870 <vPortFree+0x18>
 800a86a:	f7fe fbd3 	bl	8009014 <ulSetInterruptMask>
 800a86e:	e7fe      	b.n	800a86e <vPortFree+0x16>
        configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a870:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a874:	b111      	cbz	r1, 800a87c <vPortFree+0x24>
 800a876:	f7fe fbcd 	bl	8009014 <ulSetInterruptMask>
 800a87a:	e7fe      	b.n	800a87a <vPortFree+0x22>
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a87c:	ea23 0302 	bic.w	r3, r3, r2
 800a880:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 800a884:	f7ff f9ea 	bl	8009c5c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a888:	4a0a      	ldr	r2, [pc, #40]	@ (800a8b4 <vPortFree+0x5c>)
 800a88a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a88e:	6811      	ldr	r1, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a890:	f1a4 0008 	sub.w	r0, r4, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a894:	440b      	add	r3, r1
 800a896:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a898:	f7ff ff28 	bl	800a6ec <prvInsertBlockIntoFreeList>
}
 800a89c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    xNumberOfSuccessfulFrees++;
 800a8a0:	4a05      	ldr	r2, [pc, #20]	@ (800a8b8 <vPortFree+0x60>)
 800a8a2:	6813      	ldr	r3, [r2, #0]
 800a8a4:	3301      	adds	r3, #1
 800a8a6:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 800a8a8:	f7ff ba96 	b.w	8009dd8 <xTaskResumeAll>
}
 800a8ac:	bd10      	pop	{r4, pc}
 800a8ae:	bf00      	nop
 800a8b0:	2006f618 	.word	0x2006f618
 800a8b4:	2006f628 	.word	0x2006f628
 800a8b8:	2006f61c 	.word	0x2006f61c

0800a8bc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a8bc:	8880      	ldrh	r0, [r0, #4]
 800a8be:	4770      	bx	lr

0800a8c0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a8c0:	b570      	push	{r4, r5, r6, lr}
 800a8c2:	6803      	ldr	r3, [r0, #0]
 800a8c4:	4605      	mov	r5, r0
 800a8c6:	460c      	mov	r4, r1
 800a8c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a8ca:	2100      	movs	r1, #0
 800a8cc:	4798      	blx	r3
 800a8ce:	682b      	ldr	r3, [r5, #0]
 800a8d0:	4606      	mov	r6, r0
 800a8d2:	6a1b      	ldr	r3, [r3, #32]
 800a8d4:	4628      	mov	r0, r5
 800a8d6:	4798      	blx	r3
 800a8d8:	1ba4      	subs	r4, r4, r6
 800a8da:	b2a4      	uxth	r4, r4
 800a8dc:	fbb4 f0f0 	udiv	r0, r4, r0
 800a8e0:	bd70      	pop	{r4, r5, r6, pc}

0800a8e2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a8e2:	2300      	movs	r3, #0
 800a8e4:	8083      	strh	r3, [r0, #4]
 800a8e6:	4770      	bx	lr

0800a8e8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a8e8:	b510      	push	{r4, lr}
 800a8ea:	4604      	mov	r4, r0
 800a8ec:	6803      	ldr	r3, [r0, #0]
 800a8ee:	8881      	ldrh	r1, [r0, #4]
 800a8f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a8f2:	4798      	blx	r3
 800a8f4:	88a3      	ldrh	r3, [r4, #4]
 800a8f6:	3301      	adds	r3, #1
 800a8f8:	80a3      	strh	r3, [r4, #4]
 800a8fa:	bd10      	pop	{r4, pc}

0800a8fc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a8fc:	6803      	ldr	r3, [r0, #0]
 800a8fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a900:	4718      	bx	r3

0800a902 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a902:	4770      	bx	lr

0800a904 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a904:	4a02      	ldr	r2, [pc, #8]	@ (800a910 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a906:	6002      	str	r2, [r0, #0]
 800a908:	2200      	movs	r2, #0
 800a90a:	8082      	strh	r2, [r0, #4]
 800a90c:	4770      	bx	lr
 800a90e:	bf00      	nop
 800a910:	080358c4 	.word	0x080358c4

0800a914 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a914:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a916:	4770      	bx	lr

0800a918 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a918:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a91a:	2000      	movs	r0, #0
 800a91c:	b12b      	cbz	r3, 800a92a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a91e:	b920      	cbnz	r0, 800a92a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a920:	1a5a      	subs	r2, r3, r1
 800a922:	4250      	negs	r0, r2
 800a924:	4150      	adcs	r0, r2
 800a926:	699b      	ldr	r3, [r3, #24]
 800a928:	e7f8      	b.n	800a91c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a92a:	4770      	bx	lr

0800a92c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a92c:	2300      	movs	r3, #0
 800a92e:	6148      	str	r0, [r1, #20]
 800a930:	618b      	str	r3, [r1, #24]
 800a932:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a934:	b913      	cbnz	r3, 800a93c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a936:	6281      	str	r1, [r0, #40]	@ 0x28
 800a938:	4770      	bx	lr
 800a93a:	4613      	mov	r3, r2
 800a93c:	699a      	ldr	r2, [r3, #24]
 800a93e:	2a00      	cmp	r2, #0
 800a940:	d1fb      	bne.n	800a93a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a942:	6199      	str	r1, [r3, #24]
 800a944:	4770      	bx	lr

0800a946 <_ZN8touchgfx9Container9removeAllEv>:
 800a946:	2200      	movs	r2, #0
 800a948:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a94a:	b123      	cbz	r3, 800a956 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a94c:	6999      	ldr	r1, [r3, #24]
 800a94e:	6281      	str	r1, [r0, #40]	@ 0x28
 800a950:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a954:	e7f8      	b.n	800a948 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a956:	4770      	bx	lr

0800a958 <_ZN8touchgfx9Container6unlinkEv>:
 800a958:	2300      	movs	r3, #0
 800a95a:	6283      	str	r3, [r0, #40]	@ 0x28
 800a95c:	4770      	bx	lr

0800a95e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a95e:	2200      	movs	r2, #0
 800a960:	8002      	strh	r2, [r0, #0]
 800a962:	8042      	strh	r2, [r0, #2]
 800a964:	8082      	strh	r2, [r0, #4]
 800a966:	80c2      	strh	r2, [r0, #6]
 800a968:	4770      	bx	lr

0800a96a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a96a:	b570      	push	{r4, r5, r6, lr}
 800a96c:	460d      	mov	r5, r1
 800a96e:	4616      	mov	r6, r2
 800a970:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a972:	b13c      	cbz	r4, 800a984 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a974:	6823      	ldr	r3, [r4, #0]
 800a976:	4620      	mov	r0, r4
 800a978:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a97a:	4632      	mov	r2, r6
 800a97c:	4629      	mov	r1, r5
 800a97e:	4798      	blx	r3
 800a980:	69a4      	ldr	r4, [r4, #24]
 800a982:	e7f6      	b.n	800a972 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a984:	bd70      	pop	{r4, r5, r6, pc}

0800a986 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a986:	b538      	push	{r3, r4, r5, lr}
 800a988:	460d      	mov	r5, r1
 800a98a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a98c:	b134      	cbz	r4, 800a99c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a98e:	682b      	ldr	r3, [r5, #0]
 800a990:	4621      	mov	r1, r4
 800a992:	689b      	ldr	r3, [r3, #8]
 800a994:	4628      	mov	r0, r5
 800a996:	4798      	blx	r3
 800a998:	69a4      	ldr	r4, [r4, #24]
 800a99a:	e7f7      	b.n	800a98c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a99c:	bd38      	pop	{r3, r4, r5, pc}

0800a99e <_ZN8touchgfx9ContainerD1Ev>:
 800a99e:	4770      	bx	lr

0800a9a0 <_ZN8touchgfx9ContainerD0Ev>:
 800a9a0:	b510      	push	{r4, lr}
 800a9a2:	4604      	mov	r4, r0
 800a9a4:	212c      	movs	r1, #44	@ 0x2c
 800a9a6:	f026 fbae 	bl	8031106 <_ZdlPvj>
 800a9aa:	4620      	mov	r0, r4
 800a9ac:	bd10      	pop	{r4, pc}

0800a9ae <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a9ae:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a9b0:	b19b      	cbz	r3, 800a9da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a9b2:	428b      	cmp	r3, r1
 800a9b4:	d109      	bne.n	800a9ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a9b6:	2100      	movs	r1, #0
 800a9b8:	699a      	ldr	r2, [r3, #24]
 800a9ba:	6159      	str	r1, [r3, #20]
 800a9bc:	6282      	str	r2, [r0, #40]	@ 0x28
 800a9be:	b902      	cbnz	r2, 800a9c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a9c0:	4770      	bx	lr
 800a9c2:	6199      	str	r1, [r3, #24]
 800a9c4:	4770      	bx	lr
 800a9c6:	4613      	mov	r3, r2
 800a9c8:	b13a      	cbz	r2, 800a9da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a9ca:	699a      	ldr	r2, [r3, #24]
 800a9cc:	428a      	cmp	r2, r1
 800a9ce:	d1fa      	bne.n	800a9c6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a9d0:	698a      	ldr	r2, [r1, #24]
 800a9d2:	619a      	str	r2, [r3, #24]
 800a9d4:	2300      	movs	r3, #0
 800a9d6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a9da:	4770      	bx	lr

0800a9dc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a9dc:	b410      	push	{r4}
 800a9de:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a9e0:	4604      	mov	r4, r0
 800a9e2:	b92b      	cbnz	r3, 800a9f0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a9e4:	6803      	ldr	r3, [r0, #0]
 800a9e6:	4611      	mov	r1, r2
 800a9e8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a9ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a9ee:	4718      	bx	r3
 800a9f0:	b941      	cbnz	r1, 800aa04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a9f2:	6193      	str	r3, [r2, #24]
 800a9f4:	6282      	str	r2, [r0, #40]	@ 0x28
 800a9f6:	6154      	str	r4, [r2, #20]
 800a9f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a9fc:	4770      	bx	lr
 800a9fe:	4603      	mov	r3, r0
 800aa00:	2800      	cmp	r0, #0
 800aa02:	d0f9      	beq.n	800a9f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aa04:	4299      	cmp	r1, r3
 800aa06:	6998      	ldr	r0, [r3, #24]
 800aa08:	d1f9      	bne.n	800a9fe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aa0a:	6190      	str	r0, [r2, #24]
 800aa0c:	618a      	str	r2, [r1, #24]
 800aa0e:	e7f2      	b.n	800a9f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aa10 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aa10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa14:	461f      	mov	r7, r3
 800aa16:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800aa1a:	460d      	mov	r5, r1
 800aa1c:	4616      	mov	r6, r2
 800aa1e:	b103      	cbz	r3, 800aa22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aa20:	6038      	str	r0, [r7, #0]
 800aa22:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa24:	b314      	cbz	r4, 800aa6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800aa26:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aa2a:	b1eb      	cbz	r3, 800aa68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa2c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aa30:	428d      	cmp	r5, r1
 800aa32:	db19      	blt.n	800aa68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa34:	8923      	ldrh	r3, [r4, #8]
 800aa36:	b289      	uxth	r1, r1
 800aa38:	440b      	add	r3, r1
 800aa3a:	b21b      	sxth	r3, r3
 800aa3c:	429d      	cmp	r5, r3
 800aa3e:	da13      	bge.n	800aa68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa40:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aa44:	4296      	cmp	r6, r2
 800aa46:	db0f      	blt.n	800aa68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa48:	8963      	ldrh	r3, [r4, #10]
 800aa4a:	b292      	uxth	r2, r2
 800aa4c:	4413      	add	r3, r2
 800aa4e:	b21b      	sxth	r3, r3
 800aa50:	429e      	cmp	r6, r3
 800aa52:	da09      	bge.n	800aa68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa54:	6823      	ldr	r3, [r4, #0]
 800aa56:	1ab2      	subs	r2, r6, r2
 800aa58:	1a69      	subs	r1, r5, r1
 800aa5a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800aa5e:	b212      	sxth	r2, r2
 800aa60:	463b      	mov	r3, r7
 800aa62:	b209      	sxth	r1, r1
 800aa64:	4620      	mov	r0, r4
 800aa66:	47c0      	blx	r8
 800aa68:	69a4      	ldr	r4, [r4, #24]
 800aa6a:	e7db      	b.n	800aa24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800aa6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800aa70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa74:	4c6c      	ldr	r4, [pc, #432]	@ (800ac28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800aa76:	b0a1      	sub	sp, #132	@ 0x84
 800aa78:	6824      	ldr	r4, [r4, #0]
 800aa7a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800aa7c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800aa80:	2400      	movs	r4, #0
 800aa82:	802c      	strh	r4, [r5, #0]
 800aa84:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800aa86:	4606      	mov	r6, r0
 800aa88:	802c      	strh	r4, [r5, #0]
 800aa8a:	601c      	str	r4, [r3, #0]
 800aa8c:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800aa90:	9303      	str	r3, [sp, #12]
 800aa92:	f7ff ffbd 	bl	800aa10 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aa96:	f1b9 0f03 	cmp.w	r9, #3
 800aa9a:	f340 80bf 	ble.w	800ac1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800aa9e:	4631      	mov	r1, r6
 800aaa0:	a80c      	add	r0, sp, #48	@ 0x30
 800aaa2:	f003 fbd7 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aaa6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800aaaa:	9306      	str	r3, [sp, #24]
 800aaac:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800aab0:	9307      	str	r3, [sp, #28]
 800aab2:	9b03      	ldr	r3, [sp, #12]
 800aab4:	f8d3 a000 	ldr.w	sl, [r3]
 800aab8:	f1ba 0f00 	cmp.w	sl, #0
 800aabc:	f000 80b1 	beq.w	800ac22 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800aac0:	4651      	mov	r1, sl
 800aac2:	a810      	add	r0, sp, #64	@ 0x40
 800aac4:	f003 fbc6 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aac8:	2002      	movs	r0, #2
 800aaca:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800aace:	9b01      	ldr	r3, [sp, #4]
 800aad0:	fb91 f1f0 	sdiv	r1, r1, r0
 800aad4:	9a06      	ldr	r2, [sp, #24]
 800aad6:	189d      	adds	r5, r3, r2
 800aad8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800aadc:	9a07      	ldr	r2, [sp, #28]
 800aade:	4419      	add	r1, r3
 800aae0:	9b02      	ldr	r3, [sp, #8]
 800aae2:	1a6d      	subs	r5, r5, r1
 800aae4:	4413      	add	r3, r2
 800aae6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800aaea:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800aaee:	fb92 f2f0 	sdiv	r2, r2, r0
 800aaf2:	440a      	add	r2, r1
 800aaf4:	1a9b      	subs	r3, r3, r2
 800aaf6:	435b      	muls	r3, r3
 800aaf8:	fb05 3505 	mla	r5, r5, r5, r3
 800aafc:	4f4b      	ldr	r7, [pc, #300]	@ (800ac2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800aafe:	ac10      	add	r4, sp, #64	@ 0x40
 800ab00:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab04:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab08:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab0c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ab10:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ab14:	2303      	movs	r3, #3
 800ab16:	f1b9 0f0c 	cmp.w	r9, #12
 800ab1a:	bfda      	itte	le
 800ab1c:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ab20:	fb92 f8f3 	sdivle	r8, r2, r3
 800ab24:	4698      	movgt	r8, r3
 800ab26:	2400      	movs	r4, #0
 800ab28:	f8cd 9000 	str.w	r9, [sp]
 800ab2c:	1c63      	adds	r3, r4, #1
 800ab2e:	9308      	str	r3, [sp, #32]
 800ab30:	9b00      	ldr	r3, [sp, #0]
 800ab32:	f04f 0b00 	mov.w	fp, #0
 800ab36:	fb93 f3f8 	sdiv	r3, r3, r8
 800ab3a:	f004 0401 	and.w	r4, r4, #1
 800ab3e:	aa10      	add	r2, sp, #64	@ 0x40
 800ab40:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ab44:	b29b      	uxth	r3, r3
 800ab46:	3404      	adds	r4, #4
 800ab48:	9304      	str	r3, [sp, #16]
 800ab4a:	9a04      	ldr	r2, [sp, #16]
 800ab4c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ab50:	fb13 f302 	smulbb	r3, r3, r2
 800ab54:	9a01      	ldr	r2, [sp, #4]
 800ab56:	b29b      	uxth	r3, r3
 800ab58:	1899      	adds	r1, r3, r2
 800ab5a:	9305      	str	r3, [sp, #20]
 800ab5c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ab60:	b209      	sxth	r1, r1
 800ab62:	4299      	cmp	r1, r3
 800ab64:	db4d      	blt.n	800ac02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab66:	8932      	ldrh	r2, [r6, #8]
 800ab68:	4413      	add	r3, r2
 800ab6a:	b21b      	sxth	r3, r3
 800ab6c:	4299      	cmp	r1, r3
 800ab6e:	da48      	bge.n	800ac02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab70:	9b04      	ldr	r3, [sp, #16]
 800ab72:	6827      	ldr	r7, [r4, #0]
 800ab74:	fb17 f703 	smulbb	r7, r7, r3
 800ab78:	9b02      	ldr	r3, [sp, #8]
 800ab7a:	b2bf      	uxth	r7, r7
 800ab7c:	18fa      	adds	r2, r7, r3
 800ab7e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ab82:	b212      	sxth	r2, r2
 800ab84:	429a      	cmp	r2, r3
 800ab86:	db3c      	blt.n	800ac02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab88:	8970      	ldrh	r0, [r6, #10]
 800ab8a:	4403      	add	r3, r0
 800ab8c:	b21b      	sxth	r3, r3
 800ab8e:	429a      	cmp	r2, r3
 800ab90:	da37      	bge.n	800ac02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab92:	2300      	movs	r3, #0
 800ab94:	4630      	mov	r0, r6
 800ab96:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ab98:	ab0b      	add	r3, sp, #44	@ 0x2c
 800ab9a:	f7ff ff39 	bl	800aa10 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab9e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800aba0:	b37a      	cbz	r2, 800ac02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800aba2:	4552      	cmp	r2, sl
 800aba4:	d02d      	beq.n	800ac02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800aba6:	4611      	mov	r1, r2
 800aba8:	a80e      	add	r0, sp, #56	@ 0x38
 800abaa:	9209      	str	r2, [sp, #36]	@ 0x24
 800abac:	f003 fb52 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abb0:	f04f 0e02 	mov.w	lr, #2
 800abb4:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800abb8:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800abbc:	fb91 f1fe 	sdiv	r1, r1, lr
 800abc0:	fb9c fcfe 	sdiv	ip, ip, lr
 800abc4:	9a06      	ldr	r2, [sp, #24]
 800abc6:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800abca:	9b01      	ldr	r3, [sp, #4]
 800abcc:	4401      	add	r1, r0
 800abce:	4413      	add	r3, r2
 800abd0:	1a58      	subs	r0, r3, r1
 800abd2:	9a07      	ldr	r2, [sp, #28]
 800abd4:	9b02      	ldr	r3, [sp, #8]
 800abd6:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800abda:	4413      	add	r3, r2
 800abdc:	448c      	add	ip, r1
 800abde:	eba3 030c 	sub.w	r3, r3, ip
 800abe2:	435b      	muls	r3, r3
 800abe4:	fb00 3300 	mla	r3, r0, r0, r3
 800abe8:	42ab      	cmp	r3, r5
 800abea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800abec:	d208      	bcs.n	800ac00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800abee:	461d      	mov	r5, r3
 800abf0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800abf2:	9803      	ldr	r0, [sp, #12]
 800abf4:	6001      	str	r1, [r0, #0]
 800abf6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800abf8:	9805      	ldr	r0, [sp, #20]
 800abfa:	8008      	strh	r0, [r1, #0]
 800abfc:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800abfe:	800f      	strh	r7, [r1, #0]
 800ac00:	4692      	mov	sl, r2
 800ac02:	f10b 0b01 	add.w	fp, fp, #1
 800ac06:	f1bb 0f04 	cmp.w	fp, #4
 800ac0a:	f104 0408 	add.w	r4, r4, #8
 800ac0e:	d19c      	bne.n	800ab4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800ac10:	9b00      	ldr	r3, [sp, #0]
 800ac12:	9c08      	ldr	r4, [sp, #32]
 800ac14:	444b      	add	r3, r9
 800ac16:	4544      	cmp	r4, r8
 800ac18:	9300      	str	r3, [sp, #0]
 800ac1a:	d187      	bne.n	800ab2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800ac1c:	b021      	add	sp, #132	@ 0x84
 800ac1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac22:	f04f 35ff 	mov.w	r5, #4294967295
 800ac26:	e769      	b.n	800aafc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ac28:	20082ec4 	.word	0x20082ec4
 800ac2c:	08033558 	.word	0x08033558

0800ac30 <_ZN8touchgfx4RectaNERKS0_>:
 800ac30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac34:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ac38:	888c      	ldrh	r4, [r1, #4]
 800ac3a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ac3e:	443c      	add	r4, r7
 800ac40:	b2a4      	uxth	r4, r4
 800ac42:	fa0f f884 	sxth.w	r8, r4
 800ac46:	45c1      	cmp	r9, r8
 800ac48:	da2f      	bge.n	800acaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac4a:	8882      	ldrh	r2, [r0, #4]
 800ac4c:	444a      	add	r2, r9
 800ac4e:	b292      	uxth	r2, r2
 800ac50:	fa0f fe82 	sxth.w	lr, r2
 800ac54:	4577      	cmp	r7, lr
 800ac56:	da28      	bge.n	800acaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac58:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ac5c:	88cb      	ldrh	r3, [r1, #6]
 800ac5e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ac62:	442b      	add	r3, r5
 800ac64:	b21b      	sxth	r3, r3
 800ac66:	429e      	cmp	r6, r3
 800ac68:	da1f      	bge.n	800acaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac6a:	88c3      	ldrh	r3, [r0, #6]
 800ac6c:	4433      	add	r3, r6
 800ac6e:	b29b      	uxth	r3, r3
 800ac70:	fa0f fc83 	sxth.w	ip, r3
 800ac74:	4565      	cmp	r5, ip
 800ac76:	da18      	bge.n	800acaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac78:	454f      	cmp	r7, r9
 800ac7a:	bfb8      	it	lt
 800ac7c:	464f      	movlt	r7, r9
 800ac7e:	42b5      	cmp	r5, r6
 800ac80:	bfb8      	it	lt
 800ac82:	4635      	movlt	r5, r6
 800ac84:	45f0      	cmp	r8, lr
 800ac86:	bfd8      	it	le
 800ac88:	4622      	movle	r2, r4
 800ac8a:	1bd2      	subs	r2, r2, r7
 800ac8c:	8082      	strh	r2, [r0, #4]
 800ac8e:	884a      	ldrh	r2, [r1, #2]
 800ac90:	88c9      	ldrh	r1, [r1, #6]
 800ac92:	8007      	strh	r7, [r0, #0]
 800ac94:	440a      	add	r2, r1
 800ac96:	b292      	uxth	r2, r2
 800ac98:	b211      	sxth	r1, r2
 800ac9a:	458c      	cmp	ip, r1
 800ac9c:	bfa8      	it	ge
 800ac9e:	4613      	movge	r3, r2
 800aca0:	1b5b      	subs	r3, r3, r5
 800aca2:	80c3      	strh	r3, [r0, #6]
 800aca4:	8045      	strh	r5, [r0, #2]
 800aca6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800acaa:	2300      	movs	r3, #0
 800acac:	8003      	strh	r3, [r0, #0]
 800acae:	8043      	strh	r3, [r0, #2]
 800acb0:	8083      	strh	r3, [r0, #4]
 800acb2:	80c3      	strh	r3, [r0, #6]
 800acb4:	e7f7      	b.n	800aca6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800acb6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800acba:	2b00      	cmp	r3, #0
 800acbc:	dd06      	ble.n	800accc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800acbe:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800acc2:	2800      	cmp	r0, #0
 800acc4:	bfcc      	ite	gt
 800acc6:	2000      	movgt	r0, #0
 800acc8:	2001      	movle	r0, #1
 800acca:	4770      	bx	lr
 800accc:	2001      	movs	r0, #1
 800acce:	4770      	bx	lr

0800acd0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800acd0:	2300      	movs	r3, #0
 800acd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acd6:	4604      	mov	r4, r0
 800acd8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800acda:	8003      	strh	r3, [r0, #0]
 800acdc:	8043      	strh	r3, [r0, #2]
 800acde:	8083      	strh	r3, [r0, #4]
 800ace0:	80c3      	strh	r3, [r0, #6]
 800ace2:	2d00      	cmp	r5, #0
 800ace4:	d040      	beq.n	800ad68 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ace6:	1d28      	adds	r0, r5, #4
 800ace8:	f7ff ffe5 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acec:	b988      	cbnz	r0, 800ad12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800acee:	4620      	mov	r0, r4
 800acf0:	f7ff ffe1 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acf4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800acf8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800acfc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ad00:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ad04:	b138      	cbz	r0, 800ad16 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ad06:	8022      	strh	r2, [r4, #0]
 800ad08:	8063      	strh	r3, [r4, #2]
 800ad0a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ad0e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ad12:	69ad      	ldr	r5, [r5, #24]
 800ad14:	e7e5      	b.n	800ace2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ad16:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ad1a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ad1e:	4290      	cmp	r0, r2
 800ad20:	4607      	mov	r7, r0
 800ad22:	bfa8      	it	ge
 800ad24:	4617      	movge	r7, r2
 800ad26:	4299      	cmp	r1, r3
 800ad28:	460e      	mov	r6, r1
 800ad2a:	bfa8      	it	ge
 800ad2c:	461e      	movge	r6, r3
 800ad2e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ad32:	4472      	add	r2, lr
 800ad34:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ad38:	4440      	add	r0, r8
 800ad3a:	4471      	add	r1, lr
 800ad3c:	4463      	add	r3, ip
 800ad3e:	b200      	sxth	r0, r0
 800ad40:	b212      	sxth	r2, r2
 800ad42:	b209      	sxth	r1, r1
 800ad44:	b21b      	sxth	r3, r3
 800ad46:	4290      	cmp	r0, r2
 800ad48:	bfac      	ite	ge
 800ad4a:	ebc7 0200 	rsbge	r2, r7, r0
 800ad4e:	ebc7 0202 	rsblt	r2, r7, r2
 800ad52:	4299      	cmp	r1, r3
 800ad54:	bfac      	ite	ge
 800ad56:	ebc6 0301 	rsbge	r3, r6, r1
 800ad5a:	ebc6 0303 	rsblt	r3, r6, r3
 800ad5e:	8027      	strh	r7, [r4, #0]
 800ad60:	8066      	strh	r6, [r4, #2]
 800ad62:	80a2      	strh	r2, [r4, #4]
 800ad64:	80e3      	strh	r3, [r4, #6]
 800ad66:	e7d4      	b.n	800ad12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ad68:	4620      	mov	r0, r4
 800ad6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad6e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ad6e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ad72:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ad76:	b383      	cbz	r3, 800adda <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ad78:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ad7a:	b374      	cbz	r4, 800adda <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ad7c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ad80:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ad84:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ad88:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ad8c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ad90:	b303      	cbz	r3, 800add4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ad92:	4668      	mov	r0, sp
 800ad94:	1d21      	adds	r1, r4, #4
 800ad96:	f8ad 5000 	strh.w	r5, [sp]
 800ad9a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ad9e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ada2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ada6:	f7ff ff43 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800adaa:	4668      	mov	r0, sp
 800adac:	f7ff ff83 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adb0:	b980      	cbnz	r0, 800add4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800adb2:	f8bd 3000 	ldrh.w	r3, [sp]
 800adb6:	88a2      	ldrh	r2, [r4, #4]
 800adb8:	4669      	mov	r1, sp
 800adba:	1a9b      	subs	r3, r3, r2
 800adbc:	f8ad 3000 	strh.w	r3, [sp]
 800adc0:	88e2      	ldrh	r2, [r4, #6]
 800adc2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800adc6:	4620      	mov	r0, r4
 800adc8:	1a9b      	subs	r3, r3, r2
 800adca:	f8ad 3002 	strh.w	r3, [sp, #2]
 800adce:	6823      	ldr	r3, [r4, #0]
 800add0:	689b      	ldr	r3, [r3, #8]
 800add2:	4798      	blx	r3
 800add4:	69a4      	ldr	r4, [r4, #24]
 800add6:	2c00      	cmp	r4, #0
 800add8:	d1d8      	bne.n	800ad8c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800adda:	b002      	add	sp, #8
 800addc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ade0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ade0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ade2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ade6:	460d      	mov	r5, r1
 800ade8:	4616      	mov	r6, r2
 800adea:	b323      	cbz	r3, 800ae36 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800adec:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800adee:	b314      	cbz	r4, 800ae36 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800adf0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800adf4:	b1eb      	cbz	r3, 800ae32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800adf6:	466b      	mov	r3, sp
 800adf8:	6828      	ldr	r0, [r5, #0]
 800adfa:	6869      	ldr	r1, [r5, #4]
 800adfc:	c303      	stmia	r3!, {r0, r1}
 800adfe:	4668      	mov	r0, sp
 800ae00:	1d21      	adds	r1, r4, #4
 800ae02:	f7ff ff15 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800ae06:	4668      	mov	r0, sp
 800ae08:	f7ff ff55 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae0c:	b988      	cbnz	r0, 800ae32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ae0e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ae12:	88a2      	ldrh	r2, [r4, #4]
 800ae14:	4669      	mov	r1, sp
 800ae16:	1a9b      	subs	r3, r3, r2
 800ae18:	f8ad 3000 	strh.w	r3, [sp]
 800ae1c:	88e2      	ldrh	r2, [r4, #6]
 800ae1e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ae22:	4620      	mov	r0, r4
 800ae24:	1a9b      	subs	r3, r3, r2
 800ae26:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae2a:	6823      	ldr	r3, [r4, #0]
 800ae2c:	4632      	mov	r2, r6
 800ae2e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ae30:	4798      	blx	r3
 800ae32:	69a4      	ldr	r4, [r4, #24]
 800ae34:	e7db      	b.n	800adee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ae36:	b002      	add	sp, #8
 800ae38:	bd70      	pop	{r4, r5, r6, pc}

0800ae3a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ae3a:	b513      	push	{r0, r1, r4, lr}
 800ae3c:	6803      	ldr	r3, [r0, #0]
 800ae3e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800ae42:	2300      	movs	r3, #0
 800ae44:	e9cd 3300 	strd	r3, r3, [sp]
 800ae48:	466b      	mov	r3, sp
 800ae4a:	47a0      	blx	r4
 800ae4c:	b002      	add	sp, #8
 800ae4e:	bd10      	pop	{r4, pc}

0800ae50 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ae50:	2301      	movs	r3, #1
 800ae52:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ae56:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ae5a:	4770      	bx	lr

0800ae5c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ae5c:	2301      	movs	r3, #1
 800ae5e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ae62:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ae66:	4770      	bx	lr

0800ae68 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ae68:	2201      	movs	r2, #1
 800ae6a:	6843      	ldr	r3, [r0, #4]
 800ae6c:	725a      	strb	r2, [r3, #9]
 800ae6e:	6840      	ldr	r0, [r0, #4]
 800ae70:	6803      	ldr	r3, [r0, #0]
 800ae72:	691b      	ldr	r3, [r3, #16]
 800ae74:	4718      	bx	r3

0800ae76 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ae76:	6840      	ldr	r0, [r0, #4]
 800ae78:	6803      	ldr	r3, [r0, #0]
 800ae7a:	689b      	ldr	r3, [r3, #8]
 800ae7c:	4718      	bx	r3

0800ae7e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ae7e:	b530      	push	{r4, r5, lr}
 800ae80:	b08b      	sub	sp, #44	@ 0x2c
 800ae82:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800ae86:	6804      	ldr	r4, [r0, #0]
 800ae88:	9509      	str	r5, [sp, #36]	@ 0x24
 800ae8a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800ae8e:	9508      	str	r5, [sp, #32]
 800ae90:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800ae94:	9507      	str	r5, [sp, #28]
 800ae96:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800ae9a:	9506      	str	r5, [sp, #24]
 800ae9c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800aea0:	9505      	str	r5, [sp, #20]
 800aea2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800aea6:	9504      	str	r5, [sp, #16]
 800aea8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800aeac:	9503      	str	r5, [sp, #12]
 800aeae:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800aeb2:	9502      	str	r5, [sp, #8]
 800aeb4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800aeb8:	e9cd 3500 	strd	r3, r5, [sp]
 800aebc:	4613      	mov	r3, r2
 800aebe:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800aec0:	2200      	movs	r2, #0
 800aec2:	47a0      	blx	r4
 800aec4:	b00b      	add	sp, #44	@ 0x2c
 800aec6:	bd30      	pop	{r4, r5, pc}

0800aec8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800aec8:	4b04      	ldr	r3, [pc, #16]	@ (800aedc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800aeca:	781b      	ldrb	r3, [r3, #0]
 800aecc:	b123      	cbz	r3, 800aed8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800aece:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800aed2:	f080 0001 	eor.w	r0, r0, #1
 800aed6:	4770      	bx	lr
 800aed8:	2001      	movs	r0, #1
 800aeda:	4770      	bx	lr
 800aedc:	20082ec2 	.word	0x20082ec2

0800aee0 <_ZN8touchgfx3HAL8endFrameEv>:
 800aee0:	b510      	push	{r4, lr}
 800aee2:	4604      	mov	r4, r0
 800aee4:	6840      	ldr	r0, [r0, #4]
 800aee6:	6803      	ldr	r3, [r0, #0]
 800aee8:	689b      	ldr	r3, [r3, #8]
 800aeea:	4798      	blx	r3
 800aeec:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800aef0:	b113      	cbz	r3, 800aef8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800aef2:	2301      	movs	r3, #1
 800aef4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800aef8:	bd10      	pop	{r4, pc}

0800aefa <_ZN8touchgfx3HAL10initializeEv>:
 800aefa:	b510      	push	{r4, lr}
 800aefc:	4604      	mov	r4, r0
 800aefe:	f7f7 f845 	bl	8001f8c <_ZN8touchgfx10OSWrappers10initializeEv>
 800af02:	f7f6 f923 	bl	800114c <_ZN8touchgfx4GPIO4initEv>
 800af06:	6860      	ldr	r0, [r4, #4]
 800af08:	6803      	ldr	r3, [r0, #0]
 800af0a:	68db      	ldr	r3, [r3, #12]
 800af0c:	4798      	blx	r3
 800af0e:	68e0      	ldr	r0, [r4, #12]
 800af10:	6803      	ldr	r3, [r0, #0]
 800af12:	689b      	ldr	r3, [r3, #8]
 800af14:	4798      	blx	r3
 800af16:	6823      	ldr	r3, [r4, #0]
 800af18:	4620      	mov	r0, r4
 800af1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800af1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800af20:	4718      	bx	r3

0800af22 <_ZN8touchgfx3HAL9taskEntryEv>:
 800af22:	4604      	mov	r4, r0
 800af24:	b508      	push	{r3, lr}
 800af26:	6803      	ldr	r3, [r0, #0]
 800af28:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800af2c:	4798      	blx	r3
 800af2e:	6823      	ldr	r3, [r4, #0]
 800af30:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800af32:	4620      	mov	r0, r4
 800af34:	4798      	blx	r3
 800af36:	f7f7 f875 	bl	8002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800af3a:	6823      	ldr	r3, [r4, #0]
 800af3c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800af3e:	e7f8      	b.n	800af32 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800af40 <_ZN8touchgfx3HAL4tickEv>:
 800af40:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800af42:	6803      	ldr	r3, [r0, #0]
 800af44:	4604      	mov	r4, r0
 800af46:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800af4a:	4798      	blx	r3
 800af4c:	4d59      	ldr	r5, [pc, #356]	@ (800b0b4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800af4e:	2800      	cmp	r0, #0
 800af50:	f000 8095 	beq.w	800b07e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800af54:	2600      	movs	r6, #0
 800af56:	2001      	movs	r0, #1
 800af58:	f7f6 f8fa 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800af5c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800af60:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800af64:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800af68:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800af6c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800af70:	b133      	cbz	r3, 800af80 <_ZN8touchgfx3HAL4tickEv+0x40>
 800af72:	6823      	ldr	r3, [r4, #0]
 800af74:	4620      	mov	r0, r4
 800af76:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800af7a:	4798      	blx	r3
 800af7c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800af80:	2601      	movs	r6, #1
 800af82:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800af86:	6862      	ldr	r2, [r4, #4]
 800af88:	f083 0301 	eor.w	r3, r3, #1
 800af8c:	7253      	strb	r3, [r2, #9]
 800af8e:	702e      	strb	r6, [r5, #0]
 800af90:	f002 f84e 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
 800af94:	6803      	ldr	r3, [r0, #0]
 800af96:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800af98:	4798      	blx	r3
 800af9a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800af9e:	b90b      	cbnz	r3, 800afa4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800afa0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800afa4:	f002 f844 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
 800afa8:	6803      	ldr	r3, [r0, #0]
 800afaa:	695b      	ldr	r3, [r3, #20]
 800afac:	4798      	blx	r3
 800afae:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800afb0:	6803      	ldr	r3, [r0, #0]
 800afb2:	691b      	ldr	r3, [r3, #16]
 800afb4:	4798      	blx	r3
 800afb6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800afba:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800afbe:	3b01      	subs	r3, #1
 800afc0:	b2db      	uxtb	r3, r3
 800afc2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800afc6:	b10a      	cbz	r2, 800afcc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800afc8:	2b00      	cmp	r3, #0
 800afca:	d1eb      	bne.n	800afa4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800afcc:	4a3a      	ldr	r2, [pc, #232]	@ (800b0b8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800afce:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800afd2:	7813      	ldrb	r3, [r2, #0]
 800afd4:	3301      	adds	r3, #1
 800afd6:	b25b      	sxtb	r3, r3
 800afd8:	4299      	cmp	r1, r3
 800afda:	7013      	strb	r3, [r2, #0]
 800afdc:	dc10      	bgt.n	800b000 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800afde:	2300      	movs	r3, #0
 800afe0:	68e0      	ldr	r0, [r4, #12]
 800afe2:	7013      	strb	r3, [r2, #0]
 800afe4:	6803      	ldr	r3, [r0, #0]
 800afe6:	aa03      	add	r2, sp, #12
 800afe8:	68db      	ldr	r3, [r3, #12]
 800afea:	a902      	add	r1, sp, #8
 800afec:	4798      	blx	r3
 800afee:	6823      	ldr	r3, [r4, #0]
 800aff0:	2800      	cmp	r0, #0
 800aff2:	d050      	beq.n	800b096 <_ZN8touchgfx3HAL4tickEv+0x156>
 800aff4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800aff8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800affc:	4620      	mov	r0, r4
 800affe:	4798      	blx	r3
 800b000:	2300      	movs	r3, #0
 800b002:	6960      	ldr	r0, [r4, #20]
 800b004:	f88d 3007 	strb.w	r3, [sp, #7]
 800b008:	b158      	cbz	r0, 800b022 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b00a:	6803      	ldr	r3, [r0, #0]
 800b00c:	f10d 0107 	add.w	r1, sp, #7
 800b010:	68db      	ldr	r3, [r3, #12]
 800b012:	4798      	blx	r3
 800b014:	b128      	cbz	r0, 800b022 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b016:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b018:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b01c:	6803      	ldr	r3, [r0, #0]
 800b01e:	68db      	ldr	r3, [r3, #12]
 800b020:	4798      	blx	r3
 800b022:	f104 001c 	add.w	r0, r4, #28
 800b026:	f005 f98f 	bl	8010348 <_ZN8touchgfx8Gestures4tickEv>
 800b02a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b02e:	b30b      	cbz	r3, 800b074 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b030:	6920      	ldr	r0, [r4, #16]
 800b032:	6803      	ldr	r3, [r0, #0]
 800b034:	691b      	ldr	r3, [r3, #16]
 800b036:	4798      	blx	r3
 800b038:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b03a:	4606      	mov	r6, r0
 800b03c:	b903      	cbnz	r3, 800b040 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b03e:	6760      	str	r0, [r4, #116]	@ 0x74
 800b040:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b042:	4a1e      	ldr	r2, [pc, #120]	@ (800b0bc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b044:	1af3      	subs	r3, r6, r3
 800b046:	4293      	cmp	r3, r2
 800b048:	d914      	bls.n	800b074 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b04a:	6920      	ldr	r0, [r4, #16]
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	699b      	ldr	r3, [r3, #24]
 800b050:	4798      	blx	r3
 800b052:	2264      	movs	r2, #100	@ 0x64
 800b054:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b056:	1af3      	subs	r3, r6, r3
 800b058:	fbb3 f3f2 	udiv	r3, r3, r2
 800b05c:	fbb0 f0f3 	udiv	r0, r0, r3
 800b060:	2800      	cmp	r0, #0
 800b062:	dc1d      	bgt.n	800b0a0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b064:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b068:	6920      	ldr	r0, [r4, #16]
 800b06a:	2100      	movs	r1, #0
 800b06c:	6803      	ldr	r3, [r0, #0]
 800b06e:	69db      	ldr	r3, [r3, #28]
 800b070:	4798      	blx	r3
 800b072:	6766      	str	r6, [r4, #116]	@ 0x74
 800b074:	f001 ffdc 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
 800b078:	6803      	ldr	r3, [r0, #0]
 800b07a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b07c:	4798      	blx	r3
 800b07e:	6823      	ldr	r3, [r4, #0]
 800b080:	4620      	mov	r0, r4
 800b082:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800b086:	4798      	blx	r3
 800b088:	2001      	movs	r0, #1
 800b08a:	f7f6 f87b 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b08e:	2300      	movs	r3, #0
 800b090:	702b      	strb	r3, [r5, #0]
 800b092:	b004      	add	sp, #16
 800b094:	bd70      	pop	{r4, r5, r6, pc}
 800b096:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b09a:	4620      	mov	r0, r4
 800b09c:	4798      	blx	r3
 800b09e:	e7af      	b.n	800b000 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b0a0:	2863      	cmp	r0, #99	@ 0x63
 800b0a2:	bfcb      	itete	gt
 800b0a4:	2300      	movgt	r3, #0
 800b0a6:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b0aa:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b0ae:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b0b2:	e7d9      	b.n	800b068 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b0b4:	20082ec8 	.word	0x20082ec8
 800b0b8:	20082ec9 	.word	0x20082ec9
 800b0bc:	05f5e100 	.word	0x05f5e100

0800b0c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b0c0:	b510      	push	{r4, lr}
 800b0c2:	4604      	mov	r4, r0
 800b0c4:	f7f6 ff92 	bl	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b0c8:	2200      	movs	r2, #0
 800b0ca:	6863      	ldr	r3, [r4, #4]
 800b0cc:	729a      	strb	r2, [r3, #10]
 800b0ce:	bd10      	pop	{r4, pc}

0800b0d0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b0d0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b0d2:	301c      	adds	r0, #28
 800b0d4:	f005 b936 	b.w	8010344 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b0d8 <_ZN8touchgfx3HAL5touchEll>:
 800b0d8:	b530      	push	{r4, r5, lr}
 800b0da:	4604      	mov	r4, r0
 800b0dc:	b087      	sub	sp, #28
 800b0de:	a804      	add	r0, sp, #16
 800b0e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b0e4:	f001 fd8c 	bl	800cc00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b0e8:	9b04      	ldr	r3, [sp, #16]
 800b0ea:	a906      	add	r1, sp, #24
 800b0ec:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b0f0:	9b05      	ldr	r3, [sp, #20]
 800b0f2:	a803      	add	r0, sp, #12
 800b0f4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b0f8:	f001 fdd4 	bl	800cca4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b0fc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b100:	f104 001c 	add.w	r0, r4, #28
 800b104:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b108:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b10c:	b189      	cbz	r1, 800b132 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b10e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b112:	9300      	str	r3, [sp, #0]
 800b114:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b118:	4613      	mov	r3, r2
 800b11a:	462a      	mov	r2, r5
 800b11c:	f005 f922 	bl	8010364 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b120:	b128      	cbz	r0, 800b12e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b122:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b126:	6623      	str	r3, [r4, #96]	@ 0x60
 800b128:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b12c:	6663      	str	r3, [r4, #100]	@ 0x64
 800b12e:	b007      	add	sp, #28
 800b130:	bd30      	pop	{r4, r5, pc}
 800b132:	f005 f957 	bl	80103e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b136:	2301      	movs	r3, #1
 800b138:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b13c:	e7f1      	b.n	800b122 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b13e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b13e:	b510      	push	{r4, lr}
 800b140:	2b00      	cmp	r3, #0
 800b142:	d046      	beq.n	800b1d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b144:	ea81 0002 	eor.w	r0, r1, r2
 800b148:	07c4      	lsls	r4, r0, #31
 800b14a:	d508      	bpl.n	800b15e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b14c:	440b      	add	r3, r1
 800b14e:	3a01      	subs	r2, #1
 800b150:	428b      	cmp	r3, r1
 800b152:	d93e      	bls.n	800b1d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b154:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b158:	f801 0b01 	strb.w	r0, [r1], #1
 800b15c:	e7f8      	b.n	800b150 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b15e:	07d0      	lsls	r0, r2, #31
 800b160:	bf42      	ittt	mi
 800b162:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b166:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b16a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b16e:	2b01      	cmp	r3, #1
 800b170:	d911      	bls.n	800b196 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b172:	ea81 0402 	eor.w	r4, r1, r2
 800b176:	07a4      	lsls	r4, r4, #30
 800b178:	4610      	mov	r0, r2
 800b17a:	d022      	beq.n	800b1c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b17c:	f023 0401 	bic.w	r4, r3, #1
 800b180:	440c      	add	r4, r1
 800b182:	428c      	cmp	r4, r1
 800b184:	4602      	mov	r2, r0
 800b186:	d904      	bls.n	800b192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b188:	8812      	ldrh	r2, [r2, #0]
 800b18a:	3002      	adds	r0, #2
 800b18c:	f821 2b02 	strh.w	r2, [r1], #2
 800b190:	e7f7      	b.n	800b182 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b192:	f003 0301 	and.w	r3, r3, #1
 800b196:	f023 0003 	bic.w	r0, r3, #3
 800b19a:	4408      	add	r0, r1
 800b19c:	4288      	cmp	r0, r1
 800b19e:	4614      	mov	r4, r2
 800b1a0:	d904      	bls.n	800b1ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b1a2:	6824      	ldr	r4, [r4, #0]
 800b1a4:	3204      	adds	r2, #4
 800b1a6:	f841 4b04 	str.w	r4, [r1], #4
 800b1aa:	e7f7      	b.n	800b19c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b1ac:	f003 0303 	and.w	r3, r3, #3
 800b1b0:	440b      	add	r3, r1
 800b1b2:	3a01      	subs	r2, #1
 800b1b4:	428b      	cmp	r3, r1
 800b1b6:	d90c      	bls.n	800b1d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b1b8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b1bc:	f801 0b01 	strb.w	r0, [r1], #1
 800b1c0:	e7f8      	b.n	800b1b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b1c2:	0790      	lsls	r0, r2, #30
 800b1c4:	d0e7      	beq.n	800b196 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b1c6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b1ca:	3b02      	subs	r3, #2
 800b1cc:	f821 0b02 	strh.w	r0, [r1], #2
 800b1d0:	e7e1      	b.n	800b196 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b1d2:	2001      	movs	r0, #1
 800b1d4:	bd10      	pop	{r4, pc}

0800b1d6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b1d6:	b510      	push	{r4, lr}
 800b1d8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b1dc:	4604      	mov	r4, r0
 800b1de:	b153      	cbz	r3, 800b1f6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b1e0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b1e4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b1e8:	2101      	movs	r1, #1
 800b1ea:	301c      	adds	r0, #28
 800b1ec:	f005 f8fa 	bl	80103e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b1f0:	2300      	movs	r3, #0
 800b1f2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b1f6:	bd10      	pop	{r4, pc}

0800b1f8 <_ZN8touchgfx3HAL3lcdEv>:
 800b1f8:	4b04      	ldr	r3, [pc, #16]	@ (800b20c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800b1fa:	681b      	ldr	r3, [r3, #0]
 800b1fc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b200:	b10a      	cbz	r2, 800b206 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800b202:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b204:	b900      	cbnz	r0, 800b208 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800b206:	6898      	ldr	r0, [r3, #8]
 800b208:	4770      	bx	lr
 800b20a:	bf00      	nop
 800b20c:	20082ec4 	.word	0x20082ec4

0800b210 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b210:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b214:	4604      	mov	r4, r0
 800b216:	2000      	movs	r0, #0
 800b218:	b085      	sub	sp, #20
 800b21a:	ad04      	add	r5, sp, #16
 800b21c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b220:	69a0      	ldr	r0, [r4, #24]
 800b222:	4699      	mov	r9, r3
 800b224:	6806      	ldr	r6, [r0, #0]
 800b226:	9501      	str	r5, [sp, #4]
 800b228:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b22c:	460f      	mov	r7, r1
 800b22e:	9500      	str	r5, [sp, #0]
 800b230:	6835      	ldr	r5, [r6, #0]
 800b232:	4690      	mov	r8, r2
 800b234:	47a8      	blx	r5
 800b236:	4d10      	ldr	r5, [pc, #64]	@ (800b278 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b238:	4606      	mov	r6, r0
 800b23a:	f8a5 9000 	strh.w	r9, [r5]
 800b23e:	f7ff ffdb 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b242:	6803      	ldr	r3, [r0, #0]
 800b244:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b246:	4798      	blx	r3
 800b248:	b128      	cbz	r0, 800b256 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b24a:	2801      	cmp	r0, #1
 800b24c:	d00b      	beq.n	800b266 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b24e:	4630      	mov	r0, r6
 800b250:	b005      	add	sp, #20
 800b252:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b256:	882b      	ldrh	r3, [r5, #0]
 800b258:	fb08 7203 	mla	r2, r8, r3, r7
 800b25c:	9b03      	ldr	r3, [sp, #12]
 800b25e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b262:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b264:	e7f3      	b.n	800b24e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b266:	882a      	ldrh	r2, [r5, #0]
 800b268:	9b03      	ldr	r3, [sp, #12]
 800b26a:	fb08 7202 	mla	r2, r8, r2, r7
 800b26e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b272:	1a9a      	subs	r2, r3, r2
 800b274:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b276:	e7ea      	b.n	800b24e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b278:	20082ebe 	.word	0x20082ebe

0800b27c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b27c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b27e:	b08b      	sub	sp, #44	@ 0x2c
 800b280:	4617      	mov	r7, r2
 800b282:	4604      	mov	r4, r0
 800b284:	460e      	mov	r6, r1
 800b286:	461d      	mov	r5, r3
 800b288:	f7ff ffb6 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b28c:	6803      	ldr	r3, [r0, #0]
 800b28e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b290:	4798      	blx	r3
 800b292:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b296:	9007      	str	r0, [sp, #28]
 800b298:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b29c:	4b0d      	ldr	r3, [pc, #52]	@ (800b2d4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b29e:	6822      	ldr	r2, [r4, #0]
 800b2a0:	881b      	ldrh	r3, [r3, #0]
 800b2a2:	4631      	mov	r1, r6
 800b2a4:	9306      	str	r3, [sp, #24]
 800b2a6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b2aa:	4620      	mov	r0, r4
 800b2ac:	9305      	str	r3, [sp, #20]
 800b2ae:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b2b2:	9304      	str	r3, [sp, #16]
 800b2b4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b2b8:	9303      	str	r3, [sp, #12]
 800b2ba:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b2be:	9302      	str	r3, [sp, #8]
 800b2c0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b2c4:	e9cd 5300 	strd	r5, r3, [sp]
 800b2c8:	463b      	mov	r3, r7
 800b2ca:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800b2cc:	2200      	movs	r2, #0
 800b2ce:	47a8      	blx	r5
 800b2d0:	b00b      	add	sp, #44	@ 0x2c
 800b2d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b2d4:	20082ebe 	.word	0x20082ebe

0800b2d8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b2d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b2dc:	4698      	mov	r8, r3
 800b2de:	6803      	ldr	r3, [r0, #0]
 800b2e0:	b08b      	sub	sp, #44	@ 0x2c
 800b2e2:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800b2e4:	4b14      	ldr	r3, [pc, #80]	@ (800b338 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b2e6:	4617      	mov	r7, r2
 800b2e8:	f8b3 9000 	ldrh.w	r9, [r3]
 800b2ec:	460e      	mov	r6, r1
 800b2ee:	4604      	mov	r4, r0
 800b2f0:	f7ff ff82 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b2f4:	6803      	ldr	r3, [r0, #0]
 800b2f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2f8:	4798      	blx	r3
 800b2fa:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b2fe:	2200      	movs	r2, #0
 800b300:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b304:	2302      	movs	r3, #2
 800b306:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b30a:	2301      	movs	r3, #1
 800b30c:	9305      	str	r3, [sp, #20]
 800b30e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b312:	4631      	mov	r1, r6
 800b314:	9304      	str	r3, [sp, #16]
 800b316:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b31a:	4620      	mov	r0, r4
 800b31c:	9303      	str	r3, [sp, #12]
 800b31e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b322:	9302      	str	r3, [sp, #8]
 800b324:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b328:	e9cd 8300 	strd	r8, r3, [sp]
 800b32c:	463b      	mov	r3, r7
 800b32e:	47a8      	blx	r5
 800b330:	b00b      	add	sp, #44	@ 0x2c
 800b332:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b336:	bf00      	nop
 800b338:	20082ebe 	.word	0x20082ebe

0800b33c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b33c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b340:	4698      	mov	r8, r3
 800b342:	6803      	ldr	r3, [r0, #0]
 800b344:	b087      	sub	sp, #28
 800b346:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800b348:	4b10      	ldr	r3, [pc, #64]	@ (800b38c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b34a:	460e      	mov	r6, r1
 800b34c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b350:	4617      	mov	r7, r2
 800b352:	4604      	mov	r4, r0
 800b354:	f7ff ff50 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b358:	6803      	ldr	r3, [r0, #0]
 800b35a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b35c:	4798      	blx	r3
 800b35e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b362:	f8cd 900c 	str.w	r9, [sp, #12]
 800b366:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b36a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b36e:	463a      	mov	r2, r7
 800b370:	9302      	str	r3, [sp, #8]
 800b372:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b376:	4631      	mov	r1, r6
 800b378:	9301      	str	r3, [sp, #4]
 800b37a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b37e:	4620      	mov	r0, r4
 800b380:	9300      	str	r3, [sp, #0]
 800b382:	4643      	mov	r3, r8
 800b384:	47a8      	blx	r5
 800b386:	b007      	add	sp, #28
 800b388:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b38c:	20082ebe 	.word	0x20082ebe

0800b390 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b394:	4604      	mov	r4, r0
 800b396:	b08f      	sub	sp, #60	@ 0x3c
 800b398:	4610      	mov	r0, r2
 800b39a:	460d      	mov	r5, r1
 800b39c:	4691      	mov	r9, r2
 800b39e:	461e      	mov	r6, r3
 800b3a0:	f004 fd54 	bl	800fe4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b3a4:	2800      	cmp	r0, #0
 800b3a6:	f000 809d 	beq.w	800b4e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b3aa:	6823      	ldr	r3, [r4, #0]
 800b3ac:	4620      	mov	r0, r4
 800b3ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b3b0:	4798      	blx	r3
 800b3b2:	6823      	ldr	r3, [r4, #0]
 800b3b4:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800b548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b3b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3ba:	4620      	mov	r0, r4
 800b3bc:	4798      	blx	r3
 800b3be:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b54c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b3c2:	f8bb 3000 	ldrh.w	r3, [fp]
 800b3c6:	4f5d      	ldr	r7, [pc, #372]	@ (800b53c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b3c8:	9301      	str	r3, [sp, #4]
 800b3ca:	f8ba 3000 	ldrh.w	r3, [sl]
 800b3ce:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b3d2:	9302      	str	r3, [sp, #8]
 800b3d4:	883b      	ldrh	r3, [r7, #0]
 800b3d6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b3da:	9303      	str	r3, [sp, #12]
 800b3dc:	4b58      	ldr	r3, [pc, #352]	@ (800b540 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b3de:	4640      	mov	r0, r8
 800b3e0:	881a      	ldrh	r2, [r3, #0]
 800b3e2:	9305      	str	r3, [sp, #20]
 800b3e4:	9204      	str	r2, [sp, #16]
 800b3e6:	f004 fdc5 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b3ea:	8038      	strh	r0, [r7, #0]
 800b3ec:	4640      	mov	r0, r8
 800b3ee:	f004 fdf5 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b3f2:	9b05      	ldr	r3, [sp, #20]
 800b3f4:	b280      	uxth	r0, r0
 800b3f6:	8018      	strh	r0, [r3, #0]
 800b3f8:	4b52      	ldr	r3, [pc, #328]	@ (800b544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b3fa:	781b      	ldrb	r3, [r3, #0]
 800b3fc:	2b00      	cmp	r3, #0
 800b3fe:	d174      	bne.n	800b4ea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b400:	883b      	ldrh	r3, [r7, #0]
 800b402:	f8aa 0000 	strh.w	r0, [sl]
 800b406:	f8ab 3000 	strh.w	r3, [fp]
 800b40a:	4648      	mov	r0, r9
 800b40c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b410:	f004 fd1c 	bl	800fe4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b414:	2200      	movs	r2, #0
 800b416:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b41a:	4611      	mov	r1, r2
 800b41c:	4628      	mov	r0, r5
 800b41e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b422:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b426:	f7f7 ff4e 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 800b42a:	2301      	movs	r3, #1
 800b42c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b430:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b434:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b438:	2b00      	cmp	r3, #0
 800b43a:	dd5c      	ble.n	800b4f6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b43c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b440:	2b00      	cmp	r3, #0
 800b442:	dd58      	ble.n	800b4f6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b444:	462a      	mov	r2, r5
 800b446:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b44a:	ab0a      	add	r3, sp, #40	@ 0x28
 800b44c:	6851      	ldr	r1, [r2, #4]
 800b44e:	c303      	stmia	r3!, {r0, r1}
 800b450:	4631      	mov	r1, r6
 800b452:	a80a      	add	r0, sp, #40	@ 0x28
 800b454:	f7ff fbec 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800b458:	2100      	movs	r1, #0
 800b45a:	4b38      	ldr	r3, [pc, #224]	@ (800b53c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b45c:	910c      	str	r1, [sp, #48]	@ 0x30
 800b45e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b462:	4b37      	ldr	r3, [pc, #220]	@ (800b540 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b464:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b468:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b46c:	aa0a      	add	r2, sp, #40	@ 0x28
 800b46e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b472:	ab08      	add	r3, sp, #32
 800b474:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b478:	e883 0003 	stmia.w	r3, {r0, r1}
 800b47c:	4618      	mov	r0, r3
 800b47e:	a90c      	add	r1, sp, #48	@ 0x30
 800b480:	f7ff fbd6 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800b484:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b486:	2b00      	cmp	r3, #0
 800b488:	d13c      	bne.n	800b504 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b48a:	2000      	movs	r0, #0
 800b48c:	2600      	movs	r6, #0
 800b48e:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b492:	696b      	ldr	r3, [r5, #20]
 800b494:	682a      	ldr	r2, [r5, #0]
 800b496:	616e      	str	r6, [r5, #20]
 800b498:	9305      	str	r3, [sp, #20]
 800b49a:	6892      	ldr	r2, [r2, #8]
 800b49c:	a908      	add	r1, sp, #32
 800b49e:	4628      	mov	r0, r5
 800b4a0:	4790      	blx	r2
 800b4a2:	9b05      	ldr	r3, [sp, #20]
 800b4a4:	4652      	mov	r2, sl
 800b4a6:	616b      	str	r3, [r5, #20]
 800b4a8:	4649      	mov	r1, r9
 800b4aa:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b4ae:	4628      	mov	r0, r5
 800b4b0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b4b4:	f7f7 ff07 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 800b4b8:	9a01      	ldr	r2, [sp, #4]
 800b4ba:	4b23      	ldr	r3, [pc, #140]	@ (800b548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b4bc:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b4c0:	801a      	strh	r2, [r3, #0]
 800b4c2:	9a02      	ldr	r2, [sp, #8]
 800b4c4:	4b21      	ldr	r3, [pc, #132]	@ (800b54c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	801a      	strh	r2, [r3, #0]
 800b4ca:	9a03      	ldr	r2, [sp, #12]
 800b4cc:	4b1b      	ldr	r3, [pc, #108]	@ (800b53c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b4ce:	801a      	strh	r2, [r3, #0]
 800b4d0:	4b1b      	ldr	r3, [pc, #108]	@ (800b540 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4d2:	9a04      	ldr	r2, [sp, #16]
 800b4d4:	801a      	strh	r2, [r3, #0]
 800b4d6:	6823      	ldr	r3, [r4, #0]
 800b4d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b4da:	4798      	blx	r3
 800b4dc:	6823      	ldr	r3, [r4, #0]
 800b4de:	4620      	mov	r0, r4
 800b4e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4e2:	4798      	blx	r3
 800b4e4:	b00f      	add	sp, #60	@ 0x3c
 800b4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4ea:	883b      	ldrh	r3, [r7, #0]
 800b4ec:	f8ab 0000 	strh.w	r0, [fp]
 800b4f0:	f8aa 3000 	strh.w	r3, [sl]
 800b4f4:	e789      	b.n	800b40a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b4f6:	462a      	mov	r2, r5
 800b4f8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b4fc:	ab0a      	add	r3, sp, #40	@ 0x28
 800b4fe:	6851      	ldr	r1, [r2, #4]
 800b500:	c303      	stmia	r3!, {r0, r1}
 800b502:	e7a9      	b.n	800b458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b504:	a807      	add	r0, sp, #28
 800b506:	f004 fe73 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b50a:	4606      	mov	r6, r0
 800b50c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b50e:	6803      	ldr	r3, [r0, #0]
 800b510:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b512:	4798      	blx	r3
 800b514:	4286      	cmp	r6, r0
 800b516:	d1b8      	bne.n	800b48a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b518:	f7ff fe6e 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b51c:	6803      	ldr	r3, [r0, #0]
 800b51e:	4606      	mov	r6, r0
 800b520:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b522:	a807      	add	r0, sp, #28
 800b524:	9305      	str	r3, [sp, #20]
 800b526:	f004 fe63 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b52a:	9b05      	ldr	r3, [sp, #20]
 800b52c:	4601      	mov	r1, r0
 800b52e:	4630      	mov	r0, r6
 800b530:	4798      	blx	r3
 800b532:	f080 0001 	eor.w	r0, r0, #1
 800b536:	b2c0      	uxtb	r0, r0
 800b538:	e7a8      	b.n	800b48c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b53a:	bf00      	nop
 800b53c:	20082eb8 	.word	0x20082eb8
 800b540:	20082eba 	.word	0x20082eba
 800b544:	20082ebc 	.word	0x20082ebc
 800b548:	20082ebe 	.word	0x20082ebe
 800b54c:	20082ec0 	.word	0x20082ec0

0800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b550:	b510      	push	{r4, lr}
 800b552:	4b07      	ldr	r3, [pc, #28]	@ (800b570 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b554:	4604      	mov	r4, r0
 800b556:	781b      	ldrb	r3, [r3, #0]
 800b558:	b13b      	cbz	r3, 800b56a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b55a:	6803      	ldr	r3, [r0, #0]
 800b55c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b55e:	4798      	blx	r3
 800b560:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b562:	4283      	cmp	r3, r0
 800b564:	d101      	bne.n	800b56a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b566:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b568:	bd10      	pop	{r4, pc}
 800b56a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b56c:	e7fc      	b.n	800b568 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b56e:	bf00      	nop
 800b570:	20082ec2 	.word	0x20082ec2

0800b574 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b578:	461d      	mov	r5, r3
 800b57a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b57e:	2400      	movs	r4, #0
 800b580:	b08a      	sub	sp, #40	@ 0x28
 800b582:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b586:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b58a:	4690      	mov	r8, r2
 800b58c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b590:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b594:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b598:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b59c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b5a0:	4607      	mov	r7, r0
 800b5a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b5a6:	9404      	str	r4, [sp, #16]
 800b5a8:	f88d 4020 	strb.w	r4, [sp, #32]
 800b5ac:	f7ff ffd0 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5b0:	fb06 8505 	mla	r5, r6, r5, r8
 800b5b4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b5b8:	6878      	ldr	r0, [r7, #4]
 800b5ba:	9505      	str	r5, [sp, #20]
 800b5bc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b5c0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b5c4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b5c8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b5cc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b5d0:	6803      	ldr	r3, [r0, #0]
 800b5d2:	a901      	add	r1, sp, #4
 800b5d4:	685b      	ldr	r3, [r3, #4]
 800b5d6:	4798      	blx	r3
 800b5d8:	b00a      	add	sp, #40	@ 0x28
 800b5da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b5de <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b5de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b5e2:	2400      	movs	r4, #0
 800b5e4:	461d      	mov	r5, r3
 800b5e6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b5ea:	4691      	mov	r9, r2
 800b5ec:	b08b      	sub	sp, #44	@ 0x2c
 800b5ee:	4688      	mov	r8, r1
 800b5f0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b5f4:	4607      	mov	r7, r0
 800b5f6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b5fa:	9404      	str	r4, [sp, #16]
 800b5fc:	f7ff ffa8 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b600:	fb06 9505 	mla	r5, r6, r5, r9
 800b604:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b608:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b60c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b610:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b614:	6878      	ldr	r0, [r7, #4]
 800b616:	9505      	str	r5, [sp, #20]
 800b618:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b61c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b620:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b624:	f8cd 8010 	str.w	r8, [sp, #16]
 800b628:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b62c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b630:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b634:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b638:	6803      	ldr	r3, [r0, #0]
 800b63a:	a901      	add	r1, sp, #4
 800b63c:	685b      	ldr	r3, [r3, #4]
 800b63e:	4798      	blx	r3
 800b640:	b00b      	add	sp, #44	@ 0x2c
 800b642:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b648 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b64c:	4698      	mov	r8, r3
 800b64e:	2300      	movs	r3, #0
 800b650:	b08a      	sub	sp, #40	@ 0x28
 800b652:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b656:	4606      	mov	r6, r0
 800b658:	2d0b      	cmp	r5, #11
 800b65a:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b65e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b662:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b666:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b66a:	9304      	str	r3, [sp, #16]
 800b66c:	d137      	bne.n	800b6de <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b66e:	2380      	movs	r3, #128	@ 0x80
 800b670:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b674:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b678:	f88d 0020 	strb.w	r0, [sp, #32]
 800b67c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b680:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b684:	4630      	mov	r0, r6
 800b686:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b68a:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b68e:	9203      	str	r2, [sp, #12]
 800b690:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b694:	f7ff ff5c 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b698:	2c0b      	cmp	r4, #11
 800b69a:	bf8c      	ite	hi
 800b69c:	2100      	movhi	r1, #0
 800b69e:	4b1b      	ldrls	r3, [pc, #108]	@ (800b70c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b6a0:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b6a4:	bf98      	it	ls
 800b6a6:	5d19      	ldrbls	r1, [r3, r4]
 800b6a8:	fb02 8307 	mla	r3, r2, r7, r8
 800b6ac:	10c9      	asrs	r1, r1, #3
 800b6ae:	fb01 0003 	mla	r0, r1, r3, r0
 800b6b2:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b6b6:	9005      	str	r0, [sp, #20]
 800b6b8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b6bc:	2300      	movs	r3, #0
 800b6be:	6870      	ldr	r0, [r6, #4]
 800b6c0:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b6c4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b6c8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b6cc:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b6d0:	6803      	ldr	r3, [r0, #0]
 800b6d2:	a901      	add	r1, sp, #4
 800b6d4:	685b      	ldr	r3, [r3, #4]
 800b6d6:	4798      	blx	r3
 800b6d8:	b00a      	add	sp, #40	@ 0x28
 800b6da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6de:	2d02      	cmp	r5, #2
 800b6e0:	d109      	bne.n	800b6f6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b6e2:	28ff      	cmp	r0, #255	@ 0xff
 800b6e4:	d105      	bne.n	800b6f2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b6e6:	f1bc 0f00 	cmp.w	ip, #0
 800b6ea:	bf14      	ite	ne
 800b6ec:	2340      	movne	r3, #64	@ 0x40
 800b6ee:	2320      	moveq	r3, #32
 800b6f0:	e7be      	b.n	800b670 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b6f2:	2340      	movs	r3, #64	@ 0x40
 800b6f4:	e7bc      	b.n	800b670 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b6f6:	28ff      	cmp	r0, #255	@ 0xff
 800b6f8:	d105      	bne.n	800b706 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b6fa:	f1bc 0f00 	cmp.w	ip, #0
 800b6fe:	bf14      	ite	ne
 800b700:	2304      	movne	r3, #4
 800b702:	2301      	moveq	r3, #1
 800b704:	e7b4      	b.n	800b670 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b706:	2304      	movs	r3, #4
 800b708:	e7b2      	b.n	800b670 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b70a:	bf00      	nop
 800b70c:	08035980 	.word	0x08035980

0800b710 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b714:	b08b      	sub	sp, #44	@ 0x2c
 800b716:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b71a:	461d      	mov	r5, r3
 800b71c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b720:	bf14      	ite	ne
 800b722:	2308      	movne	r3, #8
 800b724:	2302      	moveq	r3, #2
 800b726:	2400      	movs	r4, #0
 800b728:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b72c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b730:	4688      	mov	r8, r1
 800b732:	4693      	mov	fp, r2
 800b734:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b738:	9404      	str	r4, [sp, #16]
 800b73a:	4607      	mov	r7, r0
 800b73c:	f7ff ff08 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b740:	2e0b      	cmp	r6, #11
 800b742:	bf98      	it	ls
 800b744:	4b15      	ldrls	r3, [pc, #84]	@ (800b79c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b746:	fb05 b50a 	mla	r5, r5, sl, fp
 800b74a:	bf98      	it	ls
 800b74c:	5d9c      	ldrbls	r4, [r3, r6]
 800b74e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b752:	10e4      	asrs	r4, r4, #3
 800b754:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b758:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b75c:	fb04 0405 	mla	r4, r4, r5, r0
 800b760:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b764:	2300      	movs	r3, #0
 800b766:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b76a:	6878      	ldr	r0, [r7, #4]
 800b76c:	9405      	str	r4, [sp, #20]
 800b76e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b772:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b776:	f8cd 8010 	str.w	r8, [sp, #16]
 800b77a:	f88d 9020 	strb.w	r9, [sp, #32]
 800b77e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b782:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b786:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b78a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b78e:	6803      	ldr	r3, [r0, #0]
 800b790:	a901      	add	r1, sp, #4
 800b792:	685b      	ldr	r3, [r3, #4]
 800b794:	4798      	blx	r3
 800b796:	b00b      	add	sp, #44	@ 0x2c
 800b798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b79c:	08035980 	.word	0x08035980

0800b7a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b7a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7a4:	461e      	mov	r6, r3
 800b7a6:	4b0a      	ldr	r3, [pc, #40]	@ (800b7d0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b7a8:	460f      	mov	r7, r1
 800b7aa:	881d      	ldrh	r5, [r3, #0]
 800b7ac:	4690      	mov	r8, r2
 800b7ae:	f7ff fd23 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b7b2:	6803      	ldr	r3, [r0, #0]
 800b7b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7b6:	4798      	blx	r3
 800b7b8:	280b      	cmp	r0, #11
 800b7ba:	bf8e      	itee	hi
 800b7bc:	2400      	movhi	r4, #0
 800b7be:	4b05      	ldrls	r3, [pc, #20]	@ (800b7d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b7c0:	5c1c      	ldrbls	r4, [r3, r0]
 800b7c2:	fb08 7005 	mla	r0, r8, r5, r7
 800b7c6:	10e4      	asrs	r4, r4, #3
 800b7c8:	fb04 6000 	mla	r0, r4, r0, r6
 800b7cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7d0:	20082ebe 	.word	0x20082ebe
 800b7d4:	08035980 	.word	0x08035980

0800b7d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b7d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7da:	2500      	movs	r5, #0
 800b7dc:	b08b      	sub	sp, #44	@ 0x2c
 800b7de:	461f      	mov	r7, r3
 800b7e0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b7e4:	4604      	mov	r4, r0
 800b7e6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b7ea:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b7ee:	4616      	mov	r6, r2
 800b7f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b7f8:	9504      	str	r5, [sp, #16]
 800b7fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b802:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b806:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b80a:	f88d 3020 	strb.w	r3, [sp, #32]
 800b80e:	f7ff fe9f 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b812:	463a      	mov	r2, r7
 800b814:	4631      	mov	r1, r6
 800b816:	4603      	mov	r3, r0
 800b818:	4620      	mov	r0, r4
 800b81a:	f7ff ffc1 	bl	800b7a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b81e:	4b0e      	ldr	r3, [pc, #56]	@ (800b858 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b820:	9005      	str	r0, [sp, #20]
 800b822:	881b      	ldrh	r3, [r3, #0]
 800b824:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b828:	f7ff fce6 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b82c:	6803      	ldr	r3, [r0, #0]
 800b82e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b830:	4798      	blx	r3
 800b832:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b834:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b838:	9304      	str	r3, [sp, #16]
 800b83a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b83e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b842:	6860      	ldr	r0, [r4, #4]
 800b844:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b848:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b84c:	6803      	ldr	r3, [r0, #0]
 800b84e:	a901      	add	r1, sp, #4
 800b850:	685b      	ldr	r3, [r3, #4]
 800b852:	4798      	blx	r3
 800b854:	b00b      	add	sp, #44	@ 0x2c
 800b856:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b858:	20082ebe 	.word	0x20082ebe

0800b85c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b85c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b85e:	b08d      	sub	sp, #52	@ 0x34
 800b860:	466b      	mov	r3, sp
 800b862:	e883 0006 	stmia.w	r3, {r1, r2}
 800b866:	2300      	movs	r3, #0
 800b868:	2501      	movs	r5, #1
 800b86a:	9306      	str	r3, [sp, #24]
 800b86c:	6803      	ldr	r3, [r0, #0]
 800b86e:	9503      	str	r5, [sp, #12]
 800b870:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b872:	4604      	mov	r4, r0
 800b874:	f8bd 6000 	ldrh.w	r6, [sp]
 800b878:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b87c:	4798      	blx	r3
 800b87e:	463a      	mov	r2, r7
 800b880:	4631      	mov	r1, r6
 800b882:	4603      	mov	r3, r0
 800b884:	4620      	mov	r0, r4
 800b886:	f7ff ff8b 	bl	800b7a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b88a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b88c:	9004      	str	r0, [sp, #16]
 800b88e:	9307      	str	r3, [sp, #28]
 800b890:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b894:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b898:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b89c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b8a0:	4b0e      	ldr	r3, [pc, #56]	@ (800b8dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b8a2:	881b      	ldrh	r3, [r3, #0]
 800b8a4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b8a8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b8ac:	f7ff fca4 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b8b0:	6803      	ldr	r3, [r0, #0]
 800b8b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b8b4:	4798      	blx	r3
 800b8b6:	23ff      	movs	r3, #255	@ 0xff
 800b8b8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b8bc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b8c0:	6860      	ldr	r0, [r4, #4]
 800b8c2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b8c6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b8ca:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b8ce:	6803      	ldr	r3, [r0, #0]
 800b8d0:	a903      	add	r1, sp, #12
 800b8d2:	685b      	ldr	r3, [r3, #4]
 800b8d4:	4798      	blx	r3
 800b8d6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b8d8:	b00d      	add	sp, #52	@ 0x34
 800b8da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8dc:	20082ebe 	.word	0x20082ebe

0800b8e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b8e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8e4:	b08c      	sub	sp, #48	@ 0x30
 800b8e6:	466d      	mov	r5, sp
 800b8e8:	461e      	mov	r6, r3
 800b8ea:	2300      	movs	r3, #0
 800b8ec:	e885 0006 	stmia.w	r5, {r1, r2}
 800b8f0:	2501      	movs	r5, #1
 800b8f2:	9306      	str	r3, [sp, #24]
 800b8f4:	6803      	ldr	r3, [r0, #0]
 800b8f6:	9503      	str	r5, [sp, #12]
 800b8f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b8fa:	4604      	mov	r4, r0
 800b8fc:	f8bd 7000 	ldrh.w	r7, [sp]
 800b900:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b904:	4798      	blx	r3
 800b906:	4642      	mov	r2, r8
 800b908:	4639      	mov	r1, r7
 800b90a:	4603      	mov	r3, r0
 800b90c:	4620      	mov	r0, r4
 800b90e:	f7ff ff47 	bl	800b7a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b912:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b916:	9004      	str	r0, [sp, #16]
 800b918:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b91c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b920:	9607      	str	r6, [sp, #28]
 800b922:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b926:	4b10      	ldr	r3, [pc, #64]	@ (800b968 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b928:	881b      	ldrh	r3, [r3, #0]
 800b92a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b92e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b930:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b934:	f7ff fc60 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 800b938:	6803      	ldr	r3, [r0, #0]
 800b93a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b93c:	4798      	blx	r3
 800b93e:	23ff      	movs	r3, #255	@ 0xff
 800b940:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b944:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b948:	6860      	ldr	r0, [r4, #4]
 800b94a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b94e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b952:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b956:	6803      	ldr	r3, [r0, #0]
 800b958:	a903      	add	r1, sp, #12
 800b95a:	685b      	ldr	r3, [r3, #4]
 800b95c:	4798      	blx	r3
 800b95e:	4630      	mov	r0, r6
 800b960:	b00c      	add	sp, #48	@ 0x30
 800b962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b966:	bf00      	nop
 800b968:	20082ebe 	.word	0x20082ebe

0800b96c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b96c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b96e:	b085      	sub	sp, #20
 800b970:	ac02      	add	r4, sp, #8
 800b972:	e884 0006 	stmia.w	r4, {r1, r2}
 800b976:	4605      	mov	r5, r0
 800b978:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b97c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b980:	f7ff fde6 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b984:	463a      	mov	r2, r7
 800b986:	4603      	mov	r3, r0
 800b988:	4631      	mov	r1, r6
 800b98a:	4628      	mov	r0, r5
 800b98c:	f7ff ff08 	bl	800b7a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b990:	4a05      	ldr	r2, [pc, #20]	@ (800b9a8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b992:	682b      	ldr	r3, [r5, #0]
 800b994:	8812      	ldrh	r2, [r2, #0]
 800b996:	9200      	str	r2, [sp, #0]
 800b998:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b99a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b99e:	4603      	mov	r3, r0
 800b9a0:	4628      	mov	r0, r5
 800b9a2:	47b0      	blx	r6
 800b9a4:	b005      	add	sp, #20
 800b9a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9a8:	20082ebe 	.word	0x20082ebe

0800b9ac <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b9ac:	b570      	push	{r4, r5, r6, lr}
 800b9ae:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b9b2:	4604      	mov	r4, r0
 800b9b4:	b19b      	cbz	r3, 800b9de <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b9b6:	2002      	movs	r0, #2
 800b9b8:	f7f5 fbfe 	bl	80011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b9bc:	2300      	movs	r3, #0
 800b9be:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b9c2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b9c6:	6823      	ldr	r3, [r4, #0]
 800b9c8:	4620      	mov	r0, r4
 800b9ca:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b9ce:	f7ff fdbf 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9d2:	462b      	mov	r3, r5
 800b9d4:	4601      	mov	r1, r0
 800b9d6:	4620      	mov	r0, r4
 800b9d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9dc:	4718      	bx	r3
 800b9de:	bd70      	pop	{r4, r5, r6, pc}

0800b9e0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b9e0:	b570      	push	{r4, r5, r6, lr}
 800b9e2:	4605      	mov	r5, r0
 800b9e4:	460c      	mov	r4, r1
 800b9e6:	2003      	movs	r0, #3
 800b9e8:	b149      	cbz	r1, 800b9fe <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b9ea:	f7f5 fbb1 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b9ee:	6928      	ldr	r0, [r5, #16]
 800b9f0:	b168      	cbz	r0, 800ba0e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b9f2:	2101      	movs	r1, #1
 800b9f4:	6803      	ldr	r3, [r0, #0]
 800b9f6:	695b      	ldr	r3, [r3, #20]
 800b9f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9fc:	4718      	bx	r3
 800b9fe:	f7f5 fbc1 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ba02:	6928      	ldr	r0, [r5, #16]
 800ba04:	b118      	cbz	r0, 800ba0e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba06:	6803      	ldr	r3, [r0, #0]
 800ba08:	4621      	mov	r1, r4
 800ba0a:	695b      	ldr	r3, [r3, #20]
 800ba0c:	e7f4      	b.n	800b9f8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800ba0e:	bd70      	pop	{r4, r5, r6, pc}

0800ba10 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ba10:	b538      	push	{r3, r4, r5, lr}
 800ba12:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800ba16:	4604      	mov	r4, r0
 800ba18:	428b      	cmp	r3, r1
 800ba1a:	460d      	mov	r5, r1
 800ba1c:	d006      	beq.n	800ba2c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ba1e:	6803      	ldr	r3, [r0, #0]
 800ba20:	b929      	cbnz	r1, 800ba2e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ba22:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800ba26:	4798      	blx	r3
 800ba28:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800ba2c:	bd38      	pop	{r3, r4, r5, pc}
 800ba2e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ba32:	e7f8      	b.n	800ba26 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800ba34 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ba34:	b510      	push	{r4, lr}
 800ba36:	4b0d      	ldr	r3, [pc, #52]	@ (800ba6c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800ba38:	4604      	mov	r4, r0
 800ba3a:	781b      	ldrb	r3, [r3, #0]
 800ba3c:	b95b      	cbnz	r3, 800ba56 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba3e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ba42:	2b02      	cmp	r3, #2
 800ba44:	d007      	beq.n	800ba56 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba46:	6840      	ldr	r0, [r0, #4]
 800ba48:	f000 f91c 	bl	800bc84 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ba4c:	b118      	cbz	r0, 800ba56 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba4e:	6862      	ldr	r2, [r4, #4]
 800ba50:	7a53      	ldrb	r3, [r2, #9]
 800ba52:	2b00      	cmp	r3, #0
 800ba54:	d0fc      	beq.n	800ba50 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ba56:	f7f6 fac1 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ba5a:	4620      	mov	r0, r4
 800ba5c:	2100      	movs	r1, #0
 800ba5e:	f7ff ffd7 	bl	800ba10 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ba62:	4620      	mov	r0, r4
 800ba64:	f7ff fd74 	bl	800b550 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba68:	bd10      	pop	{r4, pc}
 800ba6a:	bf00      	nop
 800ba6c:	20082ec2 	.word	0x20082ec2

0800ba70 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800ba70:	b570      	push	{r4, r5, r6, lr}
 800ba72:	4604      	mov	r4, r0
 800ba74:	6803      	ldr	r3, [r0, #0]
 800ba76:	b919      	cbnz	r1, 800ba80 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800ba78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba7e:	4718      	bx	r3
 800ba80:	2200      	movs	r2, #0
 800ba82:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800ba86:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800ba8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba8c:	4798      	blx	r3
 800ba8e:	2101      	movs	r1, #1
 800ba90:	4605      	mov	r5, r0
 800ba92:	6863      	ldr	r3, [r4, #4]
 800ba94:	4620      	mov	r0, r4
 800ba96:	7299      	strb	r1, [r3, #10]
 800ba98:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800ba9c:	f7ff ffb8 	bl	800ba10 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800baa0:	4628      	mov	r0, r5
 800baa2:	bd70      	pop	{r4, r5, r6, pc}

0800baa4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800baa4:	2000      	movs	r0, #0
 800baa6:	4770      	bx	lr

0800baa8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800baa8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800baac:	1a13      	subs	r3, r2, r0
 800baae:	4258      	negs	r0, r3
 800bab0:	4158      	adcs	r0, r3
 800bab2:	4770      	bx	lr

0800bab4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bab4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bab8:	1a9b      	subs	r3, r3, r2
 800baba:	2b00      	cmp	r3, #0
 800babc:	bfdc      	itt	le
 800babe:	6882      	ldrle	r2, [r0, #8]
 800bac0:	189b      	addle	r3, r3, r2
 800bac2:	2b01      	cmp	r3, #1
 800bac4:	bfcc      	ite	gt
 800bac6:	2000      	movgt	r0, #0
 800bac8:	2001      	movle	r0, #1
 800baca:	4770      	bx	lr

0800bacc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bacc:	6902      	ldr	r2, [r0, #16]
 800bace:	6843      	ldr	r3, [r0, #4]
 800bad0:	2024      	movs	r0, #36	@ 0x24
 800bad2:	fb00 3002 	mla	r0, r0, r2, r3
 800bad6:	4770      	bx	lr

0800bad8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bad8:	6803      	ldr	r3, [r0, #0]
 800bada:	691b      	ldr	r3, [r3, #16]
 800badc:	4718      	bx	r3

0800bade <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bade:	2301      	movs	r3, #1
 800bae0:	b570      	push	{r4, r5, r6, lr}
 800bae2:	7203      	strb	r3, [r0, #8]
 800bae4:	4604      	mov	r4, r0
 800bae6:	6840      	ldr	r0, [r0, #4]
 800bae8:	6803      	ldr	r3, [r0, #0]
 800baea:	699b      	ldr	r3, [r3, #24]
 800baec:	4798      	blx	r3
 800baee:	6803      	ldr	r3, [r0, #0]
 800baf0:	4605      	mov	r5, r0
 800baf2:	2b40      	cmp	r3, #64	@ 0x40
 800baf4:	d00c      	beq.n	800bb10 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800baf6:	d810      	bhi.n	800bb1a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800baf8:	2b04      	cmp	r3, #4
 800bafa:	d01d      	beq.n	800bb38 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bafc:	d804      	bhi.n	800bb08 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bafe:	2b01      	cmp	r3, #1
 800bb00:	d006      	beq.n	800bb10 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb02:	2b02      	cmp	r3, #2
 800bb04:	d02c      	beq.n	800bb60 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bb06:	bd70      	pop	{r4, r5, r6, pc}
 800bb08:	2b08      	cmp	r3, #8
 800bb0a:	d01d      	beq.n	800bb48 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bb0c:	2b20      	cmp	r3, #32
 800bb0e:	d1fa      	bne.n	800bb06 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bb10:	6823      	ldr	r3, [r4, #0]
 800bb12:	4620      	mov	r0, r4
 800bb14:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bb16:	4798      	blx	r3
 800bb18:	e013      	b.n	800bb42 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bb1a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bb1e:	d0f7      	beq.n	800bb10 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb20:	d804      	bhi.n	800bb2c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bb22:	2b80      	cmp	r3, #128	@ 0x80
 800bb24:	d0f4      	beq.n	800bb10 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb26:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bb2a:	e7f0      	b.n	800bb0e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bb2c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bb30:	d0ee      	beq.n	800bb10 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb32:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bb36:	e7e5      	b.n	800bb04 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bb38:	6823      	ldr	r3, [r4, #0]
 800bb3a:	7f01      	ldrb	r1, [r0, #28]
 800bb3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb3e:	4620      	mov	r0, r4
 800bb40:	4798      	blx	r3
 800bb42:	6823      	ldr	r3, [r4, #0]
 800bb44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bb46:	e006      	b.n	800bb56 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bb48:	6823      	ldr	r3, [r4, #0]
 800bb4a:	7f01      	ldrb	r1, [r0, #28]
 800bb4c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb4e:	4620      	mov	r0, r4
 800bb50:	4798      	blx	r3
 800bb52:	6823      	ldr	r3, [r4, #0]
 800bb54:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bb56:	4629      	mov	r1, r5
 800bb58:	4620      	mov	r0, r4
 800bb5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb5e:	4718      	bx	r3
 800bb60:	6823      	ldr	r3, [r4, #0]
 800bb62:	4620      	mov	r0, r4
 800bb64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bb66:	4798      	blx	r3
 800bb68:	e7f3      	b.n	800bb52 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bb6a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bb6a:	4770      	bx	lr

0800bb6c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bb6c:	4770      	bx	lr

0800bb6e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bb6e:	4770      	bx	lr

0800bb70 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bb70:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bb74:	1ad2      	subs	r2, r2, r3
 800bb76:	2a00      	cmp	r2, #0
 800bb78:	b510      	push	{r4, lr}
 800bb7a:	bfdc      	itt	le
 800bb7c:	6884      	ldrle	r4, [r0, #8]
 800bb7e:	1912      	addle	r2, r2, r4
 800bb80:	2a01      	cmp	r2, #1
 800bb82:	dd16      	ble.n	800bbb2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bb84:	2424      	movs	r4, #36	@ 0x24
 800bb86:	6842      	ldr	r2, [r0, #4]
 800bb88:	fb04 2303 	mla	r3, r4, r3, r2
 800bb8c:	f101 0220 	add.w	r2, r1, #32
 800bb90:	f851 4b04 	ldr.w	r4, [r1], #4
 800bb94:	4291      	cmp	r1, r2
 800bb96:	f843 4b04 	str.w	r4, [r3], #4
 800bb9a:	d1f9      	bne.n	800bb90 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bb9c:	780a      	ldrb	r2, [r1, #0]
 800bb9e:	701a      	strb	r2, [r3, #0]
 800bba0:	68c3      	ldr	r3, [r0, #12]
 800bba2:	6882      	ldr	r2, [r0, #8]
 800bba4:	3301      	adds	r3, #1
 800bba6:	429a      	cmp	r2, r3
 800bba8:	bfd8      	it	le
 800bbaa:	1a9b      	suble	r3, r3, r2
 800bbac:	f3bf 8f5b 	dmb	ish
 800bbb0:	60c3      	str	r3, [r0, #12]
 800bbb2:	bd10      	pop	{r4, pc}

0800bbb4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bbb4:	6903      	ldr	r3, [r0, #16]
 800bbb6:	6882      	ldr	r2, [r0, #8]
 800bbb8:	3301      	adds	r3, #1
 800bbba:	429a      	cmp	r2, r3
 800bbbc:	bfd8      	it	le
 800bbbe:	1a9b      	suble	r3, r3, r2
 800bbc0:	f3bf 8f5b 	dmb	ish
 800bbc4:	6103      	str	r3, [r0, #16]
 800bbc6:	4770      	bx	lr

0800bbc8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bbc8:	b570      	push	{r4, r5, r6, lr}
 800bbca:	4604      	mov	r4, r0
 800bbcc:	460e      	mov	r6, r1
 800bbce:	6860      	ldr	r0, [r4, #4]
 800bbd0:	6803      	ldr	r3, [r0, #0]
 800bbd2:	685b      	ldr	r3, [r3, #4]
 800bbd4:	4798      	blx	r3
 800bbd6:	2800      	cmp	r0, #0
 800bbd8:	d1f9      	bne.n	800bbce <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bbda:	4d0d      	ldr	r5, [pc, #52]	@ (800bc10 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bbdc:	6828      	ldr	r0, [r5, #0]
 800bbde:	6803      	ldr	r3, [r0, #0]
 800bbe0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bbe2:	4798      	blx	r3
 800bbe4:	f7f6 fa08 	bl	8001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bbe8:	6828      	ldr	r0, [r5, #0]
 800bbea:	2101      	movs	r1, #1
 800bbec:	f7ff ff10 	bl	800ba10 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bbf0:	6860      	ldr	r0, [r4, #4]
 800bbf2:	4631      	mov	r1, r6
 800bbf4:	6803      	ldr	r3, [r0, #0]
 800bbf6:	689b      	ldr	r3, [r3, #8]
 800bbf8:	4798      	blx	r3
 800bbfa:	6823      	ldr	r3, [r4, #0]
 800bbfc:	4620      	mov	r0, r4
 800bbfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc00:	4798      	blx	r3
 800bc02:	6828      	ldr	r0, [r5, #0]
 800bc04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc08:	6803      	ldr	r3, [r0, #0]
 800bc0a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800bc0c:	4718      	bx	r3
 800bc0e:	bf00      	nop
 800bc10:	20082ec4 	.word	0x20082ec4

0800bc14 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bc14:	b508      	push	{r3, lr}
 800bc16:	f7f6 f9e1 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bc1e:	f7f6 b9e5 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bc22 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bc22:	b510      	push	{r4, lr}
 800bc24:	4604      	mov	r4, r0
 800bc26:	2114      	movs	r1, #20
 800bc28:	f025 fa6d 	bl	8031106 <_ZdlPvj>
 800bc2c:	4620      	mov	r0, r4
 800bc2e:	bd10      	pop	{r4, pc}

0800bc30 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bc30:	b570      	push	{r4, r5, r6, lr}
 800bc32:	4604      	mov	r4, r0
 800bc34:	6840      	ldr	r0, [r0, #4]
 800bc36:	6803      	ldr	r3, [r0, #0]
 800bc38:	681b      	ldr	r3, [r3, #0]
 800bc3a:	4798      	blx	r3
 800bc3c:	4605      	mov	r5, r0
 800bc3e:	b930      	cbnz	r0, 800bc4e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc40:	7a23      	ldrb	r3, [r4, #8]
 800bc42:	b123      	cbz	r3, 800bc4e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc44:	6860      	ldr	r0, [r4, #4]
 800bc46:	6803      	ldr	r3, [r0, #0]
 800bc48:	695b      	ldr	r3, [r3, #20]
 800bc4a:	4798      	blx	r3
 800bc4c:	7225      	strb	r5, [r4, #8]
 800bc4e:	6860      	ldr	r0, [r4, #4]
 800bc50:	6803      	ldr	r3, [r0, #0]
 800bc52:	681b      	ldr	r3, [r3, #0]
 800bc54:	4798      	blx	r3
 800bc56:	b928      	cbnz	r0, 800bc64 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bc58:	6823      	ldr	r3, [r4, #0]
 800bc5a:	4620      	mov	r0, r4
 800bc5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bc62:	4718      	bx	r3
 800bc64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc68:	f7f6 b9ce 	b.w	8002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bc6c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bc6c:	6082      	str	r2, [r0, #8]
 800bc6e:	2200      	movs	r2, #0
 800bc70:	b510      	push	{r4, lr}
 800bc72:	4c03      	ldr	r4, [pc, #12]	@ (800bc80 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bc74:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bc78:	e9c0 4100 	strd	r4, r1, [r0]
 800bc7c:	bd10      	pop	{r4, pc}
 800bc7e:	bf00      	nop
 800bc80:	08035994 	.word	0x08035994

0800bc84 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bc84:	6840      	ldr	r0, [r0, #4]
 800bc86:	6803      	ldr	r3, [r0, #0]
 800bc88:	681b      	ldr	r3, [r3, #0]
 800bc8a:	4718      	bx	r3

0800bc8c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bc8c:	2300      	movs	r3, #0
 800bc8e:	8083      	strh	r3, [r0, #4]
 800bc90:	80c3      	strh	r3, [r0, #6]
 800bc92:	8003      	strh	r3, [r0, #0]
 800bc94:	8043      	strh	r3, [r0, #2]
 800bc96:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800bc9a:	2bff      	cmp	r3, #255	@ 0xff
 800bc9c:	bf01      	itttt	eq
 800bc9e:	890b      	ldrheq	r3, [r1, #8]
 800bca0:	8083      	strheq	r3, [r0, #4]
 800bca2:	894b      	ldrheq	r3, [r1, #10]
 800bca4:	80c3      	strheq	r3, [r0, #6]
 800bca6:	4770      	bx	lr

0800bca8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bca8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bcaa:	4604      	mov	r4, r0
 800bcac:	466b      	mov	r3, sp
 800bcae:	6808      	ldr	r0, [r1, #0]
 800bcb0:	6849      	ldr	r1, [r1, #4]
 800bcb2:	c303      	stmia	r3!, {r0, r1}
 800bcb4:	6823      	ldr	r3, [r4, #0]
 800bcb6:	4669      	mov	r1, sp
 800bcb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bcba:	4620      	mov	r0, r4
 800bcbc:	4798      	blx	r3
 800bcbe:	4b08      	ldr	r3, [pc, #32]	@ (800bce0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bcc0:	681b      	ldr	r3, [r3, #0]
 800bcc2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bcc6:	b10a      	cbz	r2, 800bccc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bcc8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bcca:	b900      	cbnz	r0, 800bcce <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800bccc:	6898      	ldr	r0, [r3, #8]
 800bcce:	6803      	ldr	r3, [r0, #0]
 800bcd0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bcd2:	6a1d      	ldr	r5, [r3, #32]
 800bcd4:	4669      	mov	r1, sp
 800bcd6:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800bcda:	47a8      	blx	r5
 800bcdc:	b003      	add	sp, #12
 800bcde:	bd30      	pop	{r4, r5, pc}
 800bce0:	20082ec4 	.word	0x20082ec4

0800bce4 <_ZN8touchgfx3BoxD1Ev>:
 800bce4:	4770      	bx	lr

0800bce6 <_ZN8touchgfx3BoxD0Ev>:
 800bce6:	b510      	push	{r4, lr}
 800bce8:	4604      	mov	r4, r0
 800bcea:	212c      	movs	r1, #44	@ 0x2c
 800bcec:	f025 fa0b 	bl	8031106 <_ZdlPvj>
 800bcf0:	4620      	mov	r0, r4
 800bcf2:	bd10      	pop	{r4, pc}

0800bcf4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800bcf4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800bcf8:	b12a      	cbz	r2, 800bd06 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bcfa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bcfe:	b112      	cbz	r2, 800bd06 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bd00:	6803      	ldr	r3, [r0, #0]
 800bd02:	695b      	ldr	r3, [r3, #20]
 800bd04:	4718      	bx	r3
 800bd06:	4770      	bx	lr

0800bd08 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800bd08:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800bd0c:	4770      	bx	lr

0800bd0e <_ZNK8touchgfx6Button17invalidateContentEv>:
 800bd0e:	b508      	push	{r3, lr}
 800bd10:	f890 3032 	ldrb.w	r3, [r0, #50]	@ 0x32
 800bd14:	b10b      	cbz	r3, 800bd1a <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
 800bd16:	f7f7 fabf 	bl	8003298 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800bd1a:	bd08      	pop	{r3, pc}

0800bd1c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 800bd1c:	4770      	bx	lr

0800bd1e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800bd1e:	4770      	bx	lr

0800bd20 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800bd20:	b510      	push	{r4, lr}
 800bd22:	4604      	mov	r4, r0
 800bd24:	213c      	movs	r1, #60	@ 0x3c
 800bd26:	f025 f9ee 	bl	8031106 <_ZdlPvj>
 800bd2a:	4620      	mov	r0, r4
 800bd2c:	bd10      	pop	{r4, pc}

0800bd2e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800bd2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd32:	461c      	mov	r4, r3
 800bd34:	4606      	mov	r6, r0
 800bd36:	9f06      	ldr	r7, [sp, #24]
 800bd38:	f004 fbd5 	bl	80104e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800bd3c:	8823      	ldrh	r3, [r4, #0]
 800bd3e:	f04f 0802 	mov.w	r8, #2
 800bd42:	86b3      	strh	r3, [r6, #52]	@ 0x34
 800bd44:	883b      	ldrh	r3, [r7, #0]
 800bd46:	4638      	mov	r0, r7
 800bd48:	86f3      	strh	r3, [r6, #54]	@ 0x36
 800bd4a:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800bd4e:	f004 f911 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd52:	fb95 f5f8 	sdiv	r5, r5, r8
 800bd56:	fb90 f0f8 	sdiv	r0, r0, r8
 800bd5a:	b2ad      	uxth	r5, r5
 800bd5c:	1a2d      	subs	r5, r5, r0
 800bd5e:	8735      	strh	r5, [r6, #56]	@ 0x38
 800bd60:	4638      	mov	r0, r7
 800bd62:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800bd66:	f004 f939 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bd6a:	fb94 f4f8 	sdiv	r4, r4, r8
 800bd6e:	fb90 f0f8 	sdiv	r0, r0, r8
 800bd72:	b2a4      	uxth	r4, r4
 800bd74:	1a24      	subs	r4, r4, r0
 800bd76:	8774      	strh	r4, [r6, #58]	@ 0x3a
 800bd78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd7c <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800bd7c:	b510      	push	{r4, lr}
 800bd7e:	4604      	mov	r4, r0
 800bd80:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800bd82:	b150      	cbz	r0, 800bd9a <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bd84:	6803      	ldr	r3, [r0, #0]
 800bd86:	68db      	ldr	r3, [r3, #12]
 800bd88:	4798      	blx	r3
 800bd8a:	b130      	cbz	r0, 800bd9a <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bd8c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800bd8e:	4621      	mov	r1, r4
 800bd90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd94:	6803      	ldr	r3, [r0, #0]
 800bd96:	689b      	ldr	r3, [r3, #8]
 800bd98:	4718      	bx	r3
 800bd9a:	bd10      	pop	{r4, pc}

0800bd9c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800bd9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bda0:	4604      	mov	r4, r0
 800bda2:	b08c      	sub	sp, #48	@ 0x30
 800bda4:	460d      	mov	r5, r1
 800bda6:	f004 fbd1 	bl	801054c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800bdaa:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800bdae:	2b00      	cmp	r3, #0
 800bdb0:	d05d      	beq.n	800be6e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800bdb2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800bdb4:	a805      	add	r0, sp, #20
 800bdb6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bdba:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 800bdbe:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 800bdc2:	f004 f8d7 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bdc6:	4606      	mov	r6, r0
 800bdc8:	a805      	add	r0, sp, #20
 800bdca:	f004 f907 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bdce:	6869      	ldr	r1, [r5, #4]
 800bdd0:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bdd4:	6828      	ldr	r0, [r5, #0]
 800bdd6:	ab08      	add	r3, sp, #32
 800bdd8:	ad08      	add	r5, sp, #32
 800bdda:	c303      	stmia	r3!, {r0, r1}
 800bddc:	a906      	add	r1, sp, #24
 800bdde:	4628      	mov	r0, r5
 800bde0:	f8ad 8018 	strh.w	r8, [sp, #24]
 800bde4:	f8ad 701a 	strh.w	r7, [sp, #26]
 800bde8:	f8ad 601c 	strh.w	r6, [sp, #28]
 800bdec:	f7fe ff20 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800bdf0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bdf4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800bdf8:	429a      	cmp	r2, r3
 800bdfa:	d035      	beq.n	800be68 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800bdfc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 800be00:	2b00      	cmp	r3, #0
 800be02:	dd31      	ble.n	800be68 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be04:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 800be08:	2b00      	cmp	r3, #0
 800be0a:	dd2d      	ble.n	800be68 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be0c:	2300      	movs	r3, #0
 800be0e:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 800be12:	6823      	ldr	r3, [r4, #0]
 800be14:	a90a      	add	r1, sp, #40	@ 0x28
 800be16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be18:	4620      	mov	r0, r4
 800be1a:	4798      	blx	r3
 800be1c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800be20:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 800be22:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800be26:	1a9b      	subs	r3, r3, r2
 800be28:	f8ad 3020 	strh.w	r3, [sp, #32]
 800be2c:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 800be2e:	1ac9      	subs	r1, r1, r3
 800be30:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800be34:	490f      	ldr	r1, [pc, #60]	@ (800be74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800be36:	6809      	ldr	r1, [r1, #0]
 800be38:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 800be3c:	b108      	cbz	r0, 800be42 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800be3e:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 800be40:	b900      	cbnz	r0, 800be44 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800be42:	6888      	ldr	r0, [r1, #8]
 800be44:	2601      	movs	r6, #1
 800be46:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 800be4a:	440b      	add	r3, r1
 800be4c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 800be50:	b21b      	sxth	r3, r3
 800be52:	440a      	add	r2, r1
 800be54:	6801      	ldr	r1, [r0, #0]
 800be56:	9602      	str	r6, [sp, #8]
 800be58:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800be5c:	b212      	sxth	r2, r2
 800be5e:	e9cd 5400 	strd	r5, r4, [sp]
 800be62:	688c      	ldr	r4, [r1, #8]
 800be64:	a905      	add	r1, sp, #20
 800be66:	47a0      	blx	r4
 800be68:	b00c      	add	sp, #48	@ 0x30
 800be6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be6e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800be70:	e7a0      	b.n	800bdb4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800be72:	bf00      	nop
 800be74:	20082ec4 	.word	0x20082ec4

0800be78 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800be78:	2101      	movs	r1, #1
 800be7a:	2200      	movs	r2, #0
 800be7c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800be80:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800be84:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800be88:	b510      	push	{r4, lr}
 800be8a:	4c0d      	ldr	r4, [pc, #52]	@ (800bec0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800be8c:	8082      	strh	r2, [r0, #4]
 800be8e:	80c2      	strh	r2, [r0, #6]
 800be90:	8102      	strh	r2, [r0, #8]
 800be92:	8142      	strh	r2, [r0, #10]
 800be94:	8182      	strh	r2, [r0, #12]
 800be96:	81c2      	strh	r2, [r0, #14]
 800be98:	8202      	strh	r2, [r0, #16]
 800be9a:	8242      	strh	r2, [r0, #18]
 800be9c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bea0:	61c2      	str	r2, [r0, #28]
 800bea2:	8402      	strh	r2, [r0, #32]
 800bea4:	8442      	strh	r2, [r0, #34]	@ 0x22
 800bea6:	6282      	str	r2, [r0, #40]	@ 0x28
 800bea8:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800beac:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800beae:	8601      	strh	r1, [r0, #48]	@ 0x30
 800beb0:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800beb4:	6004      	str	r4, [r0, #0]
 800beb6:	8681      	strh	r1, [r0, #52]	@ 0x34
 800beb8:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800beba:	8702      	strh	r2, [r0, #56]	@ 0x38
 800bebc:	8742      	strh	r2, [r0, #58]	@ 0x3a
 800bebe:	bd10      	pop	{r4, pc}
 800bec0:	08035a20 	.word	0x08035a20

0800bec4 <_ZN8touchgfx5ImageD1Ev>:
 800bec4:	4770      	bx	lr

0800bec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800bec6:	b570      	push	{r4, r5, r6, lr}
 800bec8:	880b      	ldrh	r3, [r1, #0]
 800beca:	4604      	mov	r4, r0
 800becc:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800bece:	4608      	mov	r0, r1
 800bed0:	460d      	mov	r5, r1
 800bed2:	f004 f84f 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bed6:	4606      	mov	r6, r0
 800bed8:	4628      	mov	r0, r5
 800beda:	f004 f87f 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bede:	4605      	mov	r5, r0
 800bee0:	6823      	ldr	r3, [r4, #0]
 800bee2:	4631      	mov	r1, r6
 800bee4:	4620      	mov	r0, r4
 800bee6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bee8:	4798      	blx	r3
 800beea:	6823      	ldr	r3, [r4, #0]
 800beec:	4629      	mov	r1, r5
 800beee:	4620      	mov	r0, r4
 800bef0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bef4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bef6:	4718      	bx	r3

0800bef8 <_ZN8touchgfx5ImageD0Ev>:
 800bef8:	b510      	push	{r4, lr}
 800befa:	4604      	mov	r4, r0
 800befc:	212c      	movs	r1, #44	@ 0x2c
 800befe:	f025 f902 	bl	8031106 <_ZdlPvj>
 800bf02:	4620      	mov	r0, r4
 800bf04:	bd10      	pop	{r4, pc}

0800bf06 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800bf06:	b510      	push	{r4, lr}
 800bf08:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800bf0c:	4604      	mov	r4, r0
 800bf0e:	2bff      	cmp	r3, #255	@ 0xff
 800bf10:	d006      	beq.n	800bf20 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800bf12:	2300      	movs	r3, #0
 800bf14:	8003      	strh	r3, [r0, #0]
 800bf16:	8043      	strh	r3, [r0, #2]
 800bf18:	8083      	strh	r3, [r0, #4]
 800bf1a:	80c3      	strh	r3, [r0, #6]
 800bf1c:	4620      	mov	r0, r4
 800bf1e:	bd10      	pop	{r4, pc}
 800bf20:	3126      	adds	r1, #38	@ 0x26
 800bf22:	f004 f88f 	bl	8010044 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800bf26:	e7f9      	b.n	800bf1c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800bf28 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800bf28:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800bf2c:	b12a      	cbz	r2, 800bf3a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf2e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bf32:	b112      	cbz	r2, 800bf3a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf34:	6803      	ldr	r3, [r0, #0]
 800bf36:	695b      	ldr	r3, [r3, #20]
 800bf38:	4718      	bx	r3
 800bf3a:	4770      	bx	lr

0800bf3c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800bf3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf40:	4604      	mov	r4, r0
 800bf42:	2500      	movs	r5, #0
 800bf44:	f854 3b26 	ldr.w	r3, [r4], #38
 800bf48:	b088      	sub	sp, #32
 800bf4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf4c:	460f      	mov	r7, r1
 800bf4e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800bf52:	a904      	add	r1, sp, #16
 800bf54:	4606      	mov	r6, r0
 800bf56:	4798      	blx	r3
 800bf58:	4620      	mov	r0, r4
 800bf5a:	f004 f80b 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf5e:	4680      	mov	r8, r0
 800bf60:	4620      	mov	r0, r4
 800bf62:	f004 f83b 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bf66:	9506      	str	r5, [sp, #24]
 800bf68:	ad06      	add	r5, sp, #24
 800bf6a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bf6e:	4639      	mov	r1, r7
 800bf70:	4628      	mov	r0, r5
 800bf72:	f8ad 801c 	strh.w	r8, [sp, #28]
 800bf76:	f7fe fe5b 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800bf7a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800bf7e:	2b00      	cmp	r3, #0
 800bf80:	dd19      	ble.n	800bfb6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bf82:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800bf86:	2b00      	cmp	r3, #0
 800bf88:	dd15      	ble.n	800bfb6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bf8a:	4b0c      	ldr	r3, [pc, #48]	@ (800bfbc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800bf8c:	681b      	ldr	r3, [r3, #0]
 800bf8e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bf92:	b10a      	cbz	r2, 800bf98 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800bf94:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bf96:	b900      	cbnz	r0, 800bf9a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800bf98:	6898      	ldr	r0, [r3, #8]
 800bf9a:	2701      	movs	r7, #1
 800bf9c:	6801      	ldr	r1, [r0, #0]
 800bf9e:	9702      	str	r7, [sp, #8]
 800bfa0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800bfa4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800bfa8:	e9cd 5600 	strd	r5, r6, [sp]
 800bfac:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800bfb0:	688d      	ldr	r5, [r1, #8]
 800bfb2:	4621      	mov	r1, r4
 800bfb4:	47a8      	blx	r5
 800bfb6:	b008      	add	sp, #32
 800bfb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfbc:	20082ec4 	.word	0x20082ec4

0800bfc0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800bfc0:	b510      	push	{r4, lr}
 800bfc2:	6803      	ldr	r3, [r0, #0]
 800bfc4:	460c      	mov	r4, r1
 800bfc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bfc8:	4798      	blx	r3
 800bfca:	1b03      	subs	r3, r0, r4
 800bfcc:	4258      	negs	r0, r3
 800bfce:	4158      	adcs	r0, r3
 800bfd0:	bd10      	pop	{r4, pc}
	...

0800bfd4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800bfd4:	4b01      	ldr	r3, [pc, #4]	@ (800bfdc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800bfd6:	6019      	str	r1, [r3, #0]
 800bfd8:	4770      	bx	lr
 800bfda:	bf00      	nop
 800bfdc:	20082ecc 	.word	0x20082ecc

0800bfe0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800bfe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfe4:	4696      	mov	lr, r2
 800bfe6:	4614      	mov	r4, r2
 800bfe8:	4605      	mov	r5, r0
 800bfea:	460e      	mov	r6, r1
 800bfec:	461f      	mov	r7, r3
 800bfee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800bff2:	b097      	sub	sp, #92	@ 0x5c
 800bff4:	f10d 0c1c 	add.w	ip, sp, #28
 800bff8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800bffc:	f8de 3000 	ldr.w	r3, [lr]
 800c000:	f104 0e14 	add.w	lr, r4, #20
 800c004:	f8cc 3000 	str.w	r3, [ip]
 800c008:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c00c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c010:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c014:	f8de 3000 	ldr.w	r3, [lr]
 800c018:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c01c:	f8cc 3000 	str.w	r3, [ip]
 800c020:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c024:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c028:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c02c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c030:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c034:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c038:	f8de 3000 	ldr.w	r3, [lr]
 800c03c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c03e:	f8cc 3000 	str.w	r3, [ip]
 800c042:	9201      	str	r2, [sp, #4]
 800c044:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c048:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c04a:	682b      	ldr	r3, [r5, #0]
 800c04c:	9200      	str	r2, [sp, #0]
 800c04e:	f8cd 8008 	str.w	r8, [sp, #8]
 800c052:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c056:	aa07      	add	r2, sp, #28
 800c058:	463b      	mov	r3, r7
 800c05a:	4631      	mov	r1, r6
 800c05c:	4628      	mov	r0, r5
 800c05e:	47d8      	blx	fp
 800c060:	46a6      	mov	lr, r4
 800c062:	f10d 0c1c 	add.w	ip, sp, #28
 800c066:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c06a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c06e:	f8de 3000 	ldr.w	r3, [lr]
 800c072:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c076:	f8cc 3000 	str.w	r3, [ip]
 800c07a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c07e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c082:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c086:	f8de 3000 	ldr.w	r3, [lr]
 800c08a:	343c      	adds	r4, #60	@ 0x3c
 800c08c:	f8cc 3000 	str.w	r3, [ip]
 800c090:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c094:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c096:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c09a:	6823      	ldr	r3, [r4, #0]
 800c09c:	4631      	mov	r1, r6
 800c09e:	f8cc 3000 	str.w	r3, [ip]
 800c0a2:	682b      	ldr	r3, [r5, #0]
 800c0a4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c0a8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c0aa:	f8cd 8008 	str.w	r8, [sp, #8]
 800c0ae:	9201      	str	r2, [sp, #4]
 800c0b0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c0b2:	4628      	mov	r0, r5
 800c0b4:	9200      	str	r2, [sp, #0]
 800c0b6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c0b8:	aa07      	add	r2, sp, #28
 800c0ba:	463b      	mov	r3, r7
 800c0bc:	47a0      	blx	r4
 800c0be:	b017      	add	sp, #92	@ 0x5c
 800c0c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c0c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c0c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0c8:	b08d      	sub	sp, #52	@ 0x34
 800c0ca:	4688      	mov	r8, r1
 800c0cc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c0ce:	f8d3 c000 	ldr.w	ip, [r3]
 800c0d2:	680f      	ldr	r7, [r1, #0]
 800c0d4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c0d8:	eba7 070c 	sub.w	r7, r7, ip
 800c0dc:	42bc      	cmp	r4, r7
 800c0de:	bfa8      	it	ge
 800c0e0:	463c      	movge	r4, r7
 800c0e2:	ee07 4a90 	vmov	s15, r4
 800c0e6:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c0ea:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c0ee:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c0f2:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c0f6:	edd3 6a07 	vldr	s13, [r3, #28]
 800c0fa:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c0fe:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c102:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c106:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c10a:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c10e:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c112:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c116:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c118:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c11c:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c120:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c124:	eb09 0e0c 	add.w	lr, r9, ip
 800c128:	4571      	cmp	r1, lr
 800c12a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c12e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c132:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c136:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c13a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c13e:	f340 808c 	ble.w	800c25a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c142:	eba1 060e 	sub.w	r6, r1, lr
 800c146:	fb96 f5f4 	sdiv	r5, r6, r4
 800c14a:	ee07 5a10 	vmov	s14, r5
 800c14e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c152:	2d00      	cmp	r5, #0
 800c154:	fb04 6615 	mls	r6, r4, r5, r6
 800c158:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c15c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c160:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c164:	dd12      	ble.n	800c18c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c166:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c16a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c16e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c172:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c176:	bf14      	ite	ne
 800c178:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c17c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c180:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c184:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c188:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c18c:	fb05 f204 	mul.w	r2, r5, r4
 800c190:	1abf      	subs	r7, r7, r2
 800c192:	4494      	add	ip, r2
 800c194:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c198:	4411      	add	r1, r2
 800c19a:	eb09 020c 	add.w	r2, r9, ip
 800c19e:	443a      	add	r2, r7
 800c1a0:	b209      	sxth	r1, r1
 800c1a2:	428a      	cmp	r2, r1
 800c1a4:	bfc4      	itt	gt
 800c1a6:	eba1 0209 	subgt.w	r2, r1, r9
 800c1aa:	eba2 070c 	subgt.w	r7, r2, ip
 800c1ae:	2f00      	cmp	r7, #0
 800c1b0:	dd50      	ble.n	800c254 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c1b2:	fb97 f1f4 	sdiv	r1, r7, r4
 800c1b6:	fb04 7211 	mls	r2, r4, r1, r7
 800c1ba:	b90a      	cbnz	r2, 800c1c0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c1bc:	4622      	mov	r2, r4
 800c1be:	3901      	subs	r1, #1
 800c1c0:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c1c4:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c1c8:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c1cc:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c1d0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c1d4:	ee17 7a90 	vmov	r7, s15
 800c1d8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c1dc:	eef0 6a42 	vmov.f32	s13, s4
 800c1e0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c1e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c1e8:	ee17 ca90 	vmov	ip, s15
 800c1ec:	eeb0 7a61 	vmov.f32	s14, s3
 800c1f0:	6840      	ldr	r0, [r0, #4]
 800c1f2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c1f6:	f8d0 a000 	ldr.w	sl, [r0]
 800c1fa:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c1fc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c1fe:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c202:	9008      	str	r0, [sp, #32]
 800c204:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c206:	695b      	ldr	r3, [r3, #20]
 800c208:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c20c:	fb9c fcf4 	sdiv	ip, ip, r4
 800c210:	445b      	add	r3, fp
 800c212:	9307      	str	r3, [sp, #28]
 800c214:	ee16 3a90 	vmov	r3, s13
 800c218:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c21c:	fb0c 3306 	mla	r3, ip, r6, r3
 800c220:	fb97 f7f4 	sdiv	r7, r7, r4
 800c224:	9302      	str	r3, [sp, #8]
 800c226:	ee17 3a10 	vmov	r3, s14
 800c22a:	2900      	cmp	r1, #0
 800c22c:	bfcc      	ite	gt
 800c22e:	46a1      	movgt	r9, r4
 800c230:	4691      	movle	r9, r2
 800c232:	44b6      	add	lr, r6
 800c234:	fb04 e505 	mla	r5, r4, r5, lr
 800c238:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c23c:	fb07 3706 	mla	r7, r7, r6, r3
 800c240:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c244:	e9cd 4700 	strd	r4, r7, [sp]
 800c248:	eba9 0306 	sub.w	r3, r9, r6
 800c24c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c250:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c252:	47a0      	blx	r4
 800c254:	b00d      	add	sp, #52	@ 0x34
 800c256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c25a:	2500      	movs	r5, #0
 800c25c:	462e      	mov	r6, r5
 800c25e:	e799      	b.n	800c194 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c264:	461d      	mov	r5, r3
 800c266:	b0db      	sub	sp, #364	@ 0x16c
 800c268:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c26c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c26e:	930a      	str	r3, [sp, #40]	@ 0x28
 800c270:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c274:	9009      	str	r0, [sp, #36]	@ 0x24
 800c276:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c278:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c27c:	4614      	mov	r4, r2
 800c27e:	9310      	str	r3, [sp, #64]	@ 0x40
 800c280:	6803      	ldr	r3, [r0, #0]
 800c282:	4629      	mov	r1, r5
 800c284:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c286:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c28a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c28e:	47b8      	blx	r7
 800c290:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c292:	6058      	str	r0, [r3, #4]
 800c294:	2800      	cmp	r0, #0
 800c296:	f000 83a1 	beq.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c29a:	ed94 7a02 	vldr	s14, [r4, #8]
 800c29e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c2a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2a6:	682b      	ldr	r3, [r5, #0]
 800c2a8:	9314      	str	r3, [sp, #80]	@ 0x50
 800c2aa:	686b      	ldr	r3, [r5, #4]
 800c2ac:	9315      	str	r3, [sp, #84]	@ 0x54
 800c2ae:	4bc1      	ldr	r3, [pc, #772]	@ (800c5b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c2b0:	7819      	ldrb	r1, [r3, #0]
 800c2b2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c2b6:	2900      	cmp	r1, #0
 800c2b8:	bf16      	itet	ne
 800c2ba:	4619      	movne	r1, r3
 800c2bc:	4611      	moveq	r1, r2
 800c2be:	4613      	movne	r3, r2
 800c2c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2c4:	9116      	str	r1, [sp, #88]	@ 0x58
 800c2c6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c2ca:	f240 8387 	bls.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2ce:	ed94 7a07 	vldr	s14, [r4, #28]
 800c2d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2da:	f240 837f 	bls.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2de:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c2e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2ea:	f240 8377 	bls.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2ee:	6822      	ldr	r2, [r4, #0]
 800c2f0:	4bb1      	ldr	r3, [pc, #708]	@ (800c5b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c2f2:	429a      	cmp	r2, r3
 800c2f4:	f2c0 8372 	blt.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2f8:	49b0      	ldr	r1, [pc, #704]	@ (800c5bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c2fa:	6963      	ldr	r3, [r4, #20]
 800c2fc:	428a      	cmp	r2, r1
 800c2fe:	f300 836d 	bgt.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c302:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c306:	48ae      	ldr	r0, [pc, #696]	@ (800c5c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c308:	33ff      	adds	r3, #255	@ 0xff
 800c30a:	4283      	cmp	r3, r0
 800c30c:	f200 8366 	bhi.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c310:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c312:	4dac      	ldr	r5, [pc, #688]	@ (800c5c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c314:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c318:	33ff      	adds	r3, #255	@ 0xff
 800c31a:	42ab      	cmp	r3, r5
 800c31c:	f200 835e 	bhi.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c320:	6862      	ldr	r2, [r4, #4]
 800c322:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c326:	33ff      	adds	r3, #255	@ 0xff
 800c328:	4283      	cmp	r3, r0
 800c32a:	f200 8357 	bhi.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c32e:	69a1      	ldr	r1, [r4, #24]
 800c330:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c334:	33ff      	adds	r3, #255	@ 0xff
 800c336:	4283      	cmp	r3, r0
 800c338:	f200 8350 	bhi.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c33c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c33e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c342:	30ff      	adds	r0, #255	@ 0xff
 800c344:	42a8      	cmp	r0, r5
 800c346:	f200 8349 	bhi.w	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c34a:	428a      	cmp	r2, r1
 800c34c:	f280 8110 	bge.w	800c570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c350:	429a      	cmp	r2, r3
 800c352:	f300 8119 	bgt.w	800c588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c356:	4299      	cmp	r1, r3
 800c358:	f280 811d 	bge.w	800c596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c35c:	2502      	movs	r5, #2
 800c35e:	2701      	movs	r7, #1
 800c360:	46a9      	mov	r9, r5
 800c362:	46b8      	mov	r8, r7
 800c364:	f04f 0a00 	mov.w	sl, #0
 800c368:	4621      	mov	r1, r4
 800c36a:	a849      	add	r0, sp, #292	@ 0x124
 800c36c:	f003 fb38 	bl	800f9e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c370:	4622      	mov	r2, r4
 800c372:	4653      	mov	r3, sl
 800c374:	a949      	add	r1, sp, #292	@ 0x124
 800c376:	f8cd 9000 	str.w	r9, [sp]
 800c37a:	a819      	add	r0, sp, #100	@ 0x64
 800c37c:	f003 fc62 	bl	800fc44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c380:	4622      	mov	r2, r4
 800c382:	4653      	mov	r3, sl
 800c384:	a949      	add	r1, sp, #292	@ 0x124
 800c386:	f8cd 8000 	str.w	r8, [sp]
 800c38a:	a829      	add	r0, sp, #164	@ 0xa4
 800c38c:	f003 fc5a 	bl	800fc44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c390:	4643      	mov	r3, r8
 800c392:	4622      	mov	r2, r4
 800c394:	a949      	add	r1, sp, #292	@ 0x124
 800c396:	f8cd 9000 	str.w	r9, [sp]
 800c39a:	a839      	add	r0, sp, #228	@ 0xe4
 800c39c:	f003 fc52 	bl	800fc44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3a0:	42af      	cmp	r7, r5
 800c3a2:	bfb5      	itete	lt
 800c3a4:	2300      	movlt	r3, #0
 800c3a6:	2301      	movge	r3, #1
 800c3a8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800c3aa:	930e      	strge	r3, [sp, #56]	@ 0x38
 800c3ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c3ae:	af12      	add	r7, sp, #72	@ 0x48
 800c3b0:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c3b4:	bfb9      	ittee	lt
 800c3b6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800c3b8:	ac19      	addlt	r4, sp, #100	@ 0x64
 800c3ba:	ad19      	addge	r5, sp, #100	@ 0x64
 800c3bc:	ac29      	addge	r4, sp, #164	@ 0xa4
 800c3be:	e887 0003 	stmia.w	r7, {r0, r1}
 800c3c2:	b928      	cbnz	r0, 800c3d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c3c4:	4b80      	ldr	r3, [pc, #512]	@ (800c5c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c3c6:	6818      	ldr	r0, [r3, #0]
 800c3c8:	6803      	ldr	r3, [r0, #0]
 800c3ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c3cc:	4798      	blx	r3
 800c3ce:	6038      	str	r0, [r7, #0]
 800c3d0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c3d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c3d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c3da:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800c3dc:	930c      	str	r3, [sp, #48]	@ 0x30
 800c3de:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c3e0:	6963      	ldr	r3, [r4, #20]
 800c3e2:	440b      	add	r3, r1
 800c3e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c3e8:	4408      	add	r0, r1
 800c3ea:	b200      	sxth	r0, r0
 800c3ec:	4283      	cmp	r3, r0
 800c3ee:	900d      	str	r0, [sp, #52]	@ 0x34
 800c3f0:	f280 80dd 	bge.w	800c5ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c3f4:	428b      	cmp	r3, r1
 800c3f6:	da08      	bge.n	800c40a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c3f8:	2a00      	cmp	r2, #0
 800c3fa:	dd06      	ble.n	800c40a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c3fc:	1acb      	subs	r3, r1, r3
 800c3fe:	429a      	cmp	r2, r3
 800c400:	f2c0 80e4 	blt.w	800c5cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c404:	2b00      	cmp	r3, #0
 800c406:	f300 80e2 	bgt.w	800c5ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c40a:	6967      	ldr	r7, [r4, #20]
 800c40c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c40e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c412:	443b      	add	r3, r7
 800c414:	461f      	mov	r7, r3
 800c416:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c418:	1bdf      	subs	r7, r3, r7
 800c41a:	4297      	cmp	r7, r2
 800c41c:	bfa8      	it	ge
 800c41e:	4617      	movge	r7, r2
 800c420:	2f00      	cmp	r7, #0
 800c422:	f340 8166 	ble.w	800c6f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c426:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c428:	6829      	ldr	r1, [r5, #0]
 800c42a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c42e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c432:	4411      	add	r1, r2
 800c434:	4299      	cmp	r1, r3
 800c436:	6820      	ldr	r0, [r4, #0]
 800c438:	dd1a      	ble.n	800c470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c43a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c43e:	4402      	add	r2, r0
 800c440:	440b      	add	r3, r1
 800c442:	b21b      	sxth	r3, r3
 800c444:	429a      	cmp	r2, r3
 800c446:	dc13      	bgt.n	800c470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c448:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c44a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c44c:	a912      	add	r1, sp, #72	@ 0x48
 800c44e:	681b      	ldr	r3, [r3, #0]
 800c450:	9206      	str	r2, [sp, #24]
 800c452:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c454:	9500      	str	r5, [sp, #0]
 800c456:	9205      	str	r2, [sp, #20]
 800c458:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c45a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c45c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c460:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c462:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c466:	aa49      	add	r2, sp, #292	@ 0x124
 800c468:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c46c:	4623      	mov	r3, r4
 800c46e:	47c8      	blx	r9
 800c470:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c474:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c478:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c47c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c480:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c484:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c488:	ed94 6a08 	vldr	s12, [r4, #32]
 800c48c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c490:	edd4 6a07 	vldr	s13, [r4, #28]
 800c494:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c498:	441a      	add	r2, r3
 800c49a:	6963      	ldr	r3, [r4, #20]
 800c49c:	68a1      	ldr	r1, [r4, #8]
 800c49e:	3301      	adds	r3, #1
 800c4a0:	6163      	str	r3, [r4, #20]
 800c4a2:	69a3      	ldr	r3, [r4, #24]
 800c4a4:	6022      	str	r2, [r4, #0]
 800c4a6:	3b01      	subs	r3, #1
 800c4a8:	61a3      	str	r3, [r4, #24]
 800c4aa:	6923      	ldr	r3, [r4, #16]
 800c4ac:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c4b0:	440b      	add	r3, r1
 800c4b2:	68e1      	ldr	r1, [r4, #12]
 800c4b4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c4b8:	428b      	cmp	r3, r1
 800c4ba:	edc4 6a07 	vstr	s13, [r4, #28]
 800c4be:	6123      	str	r3, [r4, #16]
 800c4c0:	db15      	blt.n	800c4ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c4c2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c4c6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c4ca:	edc4 6a07 	vstr	s13, [r4, #28]
 800c4ce:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c4d2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c4d6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c4da:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c4de:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c4e2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c4e6:	3201      	adds	r2, #1
 800c4e8:	1a5b      	subs	r3, r3, r1
 800c4ea:	6022      	str	r2, [r4, #0]
 800c4ec:	6123      	str	r3, [r4, #16]
 800c4ee:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c4f2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c4f6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c4fa:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c4fe:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c502:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c506:	ed95 6a08 	vldr	s12, [r5, #32]
 800c50a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c50e:	edd5 6a07 	vldr	s13, [r5, #28]
 800c512:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c516:	441a      	add	r2, r3
 800c518:	696b      	ldr	r3, [r5, #20]
 800c51a:	68a9      	ldr	r1, [r5, #8]
 800c51c:	3301      	adds	r3, #1
 800c51e:	616b      	str	r3, [r5, #20]
 800c520:	69ab      	ldr	r3, [r5, #24]
 800c522:	602a      	str	r2, [r5, #0]
 800c524:	3b01      	subs	r3, #1
 800c526:	61ab      	str	r3, [r5, #24]
 800c528:	692b      	ldr	r3, [r5, #16]
 800c52a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c52e:	440b      	add	r3, r1
 800c530:	68e9      	ldr	r1, [r5, #12]
 800c532:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c536:	428b      	cmp	r3, r1
 800c538:	edc5 6a07 	vstr	s13, [r5, #28]
 800c53c:	612b      	str	r3, [r5, #16]
 800c53e:	db15      	blt.n	800c56c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800c540:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c544:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c548:	edc5 6a07 	vstr	s13, [r5, #28]
 800c54c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c550:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c554:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c558:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c55c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c560:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c564:	3201      	adds	r2, #1
 800c566:	1a5b      	subs	r3, r3, r1
 800c568:	602a      	str	r2, [r5, #0]
 800c56a:	612b      	str	r3, [r5, #16]
 800c56c:	3f01      	subs	r7, #1
 800c56e:	e757      	b.n	800c420 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800c570:	4299      	cmp	r1, r3
 800c572:	dc13      	bgt.n	800c59c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800c574:	429a      	cmp	r2, r3
 800c576:	da14      	bge.n	800c5a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800c578:	2502      	movs	r5, #2
 800c57a:	2703      	movs	r7, #3
 800c57c:	46a9      	mov	r9, r5
 800c57e:	f04f 0800 	mov.w	r8, #0
 800c582:	f04f 0a01 	mov.w	sl, #1
 800c586:	e6ef      	b.n	800c368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c588:	2501      	movs	r5, #1
 800c58a:	2700      	movs	r7, #0
 800c58c:	46a9      	mov	r9, r5
 800c58e:	46b8      	mov	r8, r7
 800c590:	f04f 0a02 	mov.w	sl, #2
 800c594:	e6e8      	b.n	800c368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c596:	2501      	movs	r5, #1
 800c598:	2702      	movs	r7, #2
 800c59a:	e6e1      	b.n	800c360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800c59c:	2500      	movs	r5, #0
 800c59e:	2701      	movs	r7, #1
 800c5a0:	e7f4      	b.n	800c58c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800c5a2:	2702      	movs	r7, #2
 800c5a4:	2503      	movs	r5, #3
 800c5a6:	f04f 0900 	mov.w	r9, #0
 800c5aa:	46b8      	mov	r8, r7
 800c5ac:	e7e9      	b.n	800c582 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800c5ae:	4613      	mov	r3, r2
 800c5b0:	e728      	b.n	800c404 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800c5b2:	bf00      	nop
 800c5b4:	20082ebc 	.word	0x20082ebc
 800c5b8:	fffd8f01 	.word	0xfffd8f01
 800c5bc:	00027100 	.word	0x00027100
 800c5c0:	0004e1ff 	.word	0x0004e1ff
 800c5c4:	0004e1fe 	.word	0x0004e1fe
 800c5c8:	20082ec4 	.word	0x20082ec4
 800c5cc:	4613      	mov	r3, r2
 800c5ce:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800c5d2:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800c5d6:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800c5da:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800c5de:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800c5e2:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800c5e6:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800c5ea:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800c5ee:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800c5f2:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800c5f6:	469e      	mov	lr, r3
 800c5f8:	469c      	mov	ip, r3
 800c5fa:	f04f 0900 	mov.w	r9, #0
 800c5fe:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c600:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800c602:	9111      	str	r1, [sp, #68]	@ 0x44
 800c604:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800c608:	f1bc 0f00 	cmp.w	ip, #0
 800c60c:	d147      	bne.n	800c69e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800c60e:	eb03 0c07 	add.w	ip, r3, r7
 800c612:	1ad7      	subs	r7, r2, r3
 800c614:	f1b9 0f00 	cmp.w	r9, #0
 800c618:	d009      	beq.n	800c62e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800c61a:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800c61e:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800c622:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800c626:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800c62a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800c62c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800c62e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c632:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c636:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c63a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c63e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c642:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c646:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c64a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c64e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c652:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c656:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c65a:	f04f 0800 	mov.w	r8, #0
 800c65e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c660:	9111      	str	r1, [sp, #68]	@ 0x44
 800c662:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c666:	f1be 0f00 	cmp.w	lr, #0
 800c66a:	d031      	beq.n	800c6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800c66c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c66e:	4450      	add	r0, sl
 800c670:	4431      	add	r1, r6
 800c672:	4549      	cmp	r1, r9
 800c674:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c678:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c67c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c680:	db08      	blt.n	800c694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800c682:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c686:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c68a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c68e:	3001      	adds	r0, #1
 800c690:	eba1 0109 	sub.w	r1, r1, r9
 800c694:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c698:	f04f 0801 	mov.w	r8, #1
 800c69c:	e7e3      	b.n	800c666 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800c69e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c6a0:	4450      	add	r0, sl
 800c6a2:	4431      	add	r1, r6
 800c6a4:	4541      	cmp	r1, r8
 800c6a6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c6aa:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c6ae:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c6b2:	db08      	blt.n	800c6c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800c6b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c6b8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c6bc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c6c0:	3001      	adds	r0, #1
 800c6c2:	eba1 0108 	sub.w	r1, r1, r8
 800c6c6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c6ca:	f04f 0901 	mov.w	r9, #1
 800c6ce:	e79b      	b.n	800c608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800c6d0:	449c      	add	ip, r3
 800c6d2:	1aff      	subs	r7, r7, r3
 800c6d4:	f1b8 0f00 	cmp.w	r8, #0
 800c6d8:	d009      	beq.n	800c6ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800c6da:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c6de:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c6e2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c6e6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c6ea:	9019      	str	r0, [sp, #100]	@ 0x64
 800c6ec:	911d      	str	r1, [sp, #116]	@ 0x74
 800c6ee:	1ad2      	subs	r2, r2, r3
 800c6f0:	e68b      	b.n	800c40a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c6f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c6f4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800c6f6:	2b00      	cmp	r3, #0
 800c6f8:	f000 80d1 	beq.w	800c89e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800c6fc:	ad19      	add	r5, sp, #100	@ 0x64
 800c6fe:	ac39      	add	r4, sp, #228	@ 0xe4
 800c700:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c702:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c706:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c70a:	930c      	str	r3, [sp, #48]	@ 0x30
 800c70c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c70e:	6963      	ldr	r3, [r4, #20]
 800c710:	440b      	add	r3, r1
 800c712:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c716:	4408      	add	r0, r1
 800c718:	b200      	sxth	r0, r0
 800c71a:	4283      	cmp	r3, r0
 800c71c:	900d      	str	r0, [sp, #52]	@ 0x34
 800c71e:	f280 80c1 	bge.w	800c8a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800c722:	428b      	cmp	r3, r1
 800c724:	da08      	bge.n	800c738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c726:	2a00      	cmp	r2, #0
 800c728:	dd06      	ble.n	800c738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c72a:	1acb      	subs	r3, r1, r3
 800c72c:	429a      	cmp	r2, r3
 800c72e:	f2c0 80bb 	blt.w	800c8a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800c732:	2b00      	cmp	r3, #0
 800c734:	f300 80b9 	bgt.w	800c8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800c738:	6967      	ldr	r7, [r4, #20]
 800c73a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c73c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c740:	443b      	add	r3, r7
 800c742:	461f      	mov	r7, r3
 800c744:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c746:	1bdf      	subs	r7, r3, r7
 800c748:	4297      	cmp	r7, r2
 800c74a:	bfa8      	it	ge
 800c74c:	4617      	movge	r7, r2
 800c74e:	2f00      	cmp	r7, #0
 800c750:	f340 813c 	ble.w	800c9cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800c754:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c756:	6829      	ldr	r1, [r5, #0]
 800c758:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c75c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c760:	4411      	add	r1, r2
 800c762:	4299      	cmp	r1, r3
 800c764:	6820      	ldr	r0, [r4, #0]
 800c766:	dd1a      	ble.n	800c79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c768:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c76c:	4402      	add	r2, r0
 800c76e:	440b      	add	r3, r1
 800c770:	b21b      	sxth	r3, r3
 800c772:	429a      	cmp	r2, r3
 800c774:	dc13      	bgt.n	800c79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c776:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c778:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c77a:	a912      	add	r1, sp, #72	@ 0x48
 800c77c:	681b      	ldr	r3, [r3, #0]
 800c77e:	9206      	str	r2, [sp, #24]
 800c780:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c782:	9500      	str	r5, [sp, #0]
 800c784:	9205      	str	r2, [sp, #20]
 800c786:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c788:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c78a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c78e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c790:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c794:	aa49      	add	r2, sp, #292	@ 0x124
 800c796:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c79a:	4623      	mov	r3, r4
 800c79c:	47c8      	blx	r9
 800c79e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c7a2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c7a6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c7aa:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c7ae:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c7b2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c7b6:	ed94 6a08 	vldr	s12, [r4, #32]
 800c7ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c7be:	edd4 6a07 	vldr	s13, [r4, #28]
 800c7c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c7c6:	441a      	add	r2, r3
 800c7c8:	6963      	ldr	r3, [r4, #20]
 800c7ca:	68a1      	ldr	r1, [r4, #8]
 800c7cc:	3301      	adds	r3, #1
 800c7ce:	6163      	str	r3, [r4, #20]
 800c7d0:	69a3      	ldr	r3, [r4, #24]
 800c7d2:	6022      	str	r2, [r4, #0]
 800c7d4:	3b01      	subs	r3, #1
 800c7d6:	61a3      	str	r3, [r4, #24]
 800c7d8:	6923      	ldr	r3, [r4, #16]
 800c7da:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c7de:	440b      	add	r3, r1
 800c7e0:	68e1      	ldr	r1, [r4, #12]
 800c7e2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c7e6:	428b      	cmp	r3, r1
 800c7e8:	edc4 6a07 	vstr	s13, [r4, #28]
 800c7ec:	6123      	str	r3, [r4, #16]
 800c7ee:	db15      	blt.n	800c81c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800c7f0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c7f4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c7f8:	edc4 6a07 	vstr	s13, [r4, #28]
 800c7fc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c800:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c804:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c808:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c80c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c810:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c814:	3201      	adds	r2, #1
 800c816:	1a5b      	subs	r3, r3, r1
 800c818:	6022      	str	r2, [r4, #0]
 800c81a:	6123      	str	r3, [r4, #16]
 800c81c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c820:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c824:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c828:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c82c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c830:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c834:	ed95 6a08 	vldr	s12, [r5, #32]
 800c838:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c83c:	edd5 6a07 	vldr	s13, [r5, #28]
 800c840:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c844:	441a      	add	r2, r3
 800c846:	696b      	ldr	r3, [r5, #20]
 800c848:	68a9      	ldr	r1, [r5, #8]
 800c84a:	3301      	adds	r3, #1
 800c84c:	616b      	str	r3, [r5, #20]
 800c84e:	69ab      	ldr	r3, [r5, #24]
 800c850:	602a      	str	r2, [r5, #0]
 800c852:	3b01      	subs	r3, #1
 800c854:	61ab      	str	r3, [r5, #24]
 800c856:	692b      	ldr	r3, [r5, #16]
 800c858:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c85c:	440b      	add	r3, r1
 800c85e:	68e9      	ldr	r1, [r5, #12]
 800c860:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c864:	428b      	cmp	r3, r1
 800c866:	edc5 6a07 	vstr	s13, [r5, #28]
 800c86a:	612b      	str	r3, [r5, #16]
 800c86c:	db15      	blt.n	800c89a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800c86e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c872:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c876:	edc5 6a07 	vstr	s13, [r5, #28]
 800c87a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c87e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c882:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c886:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c88a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c88e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c892:	3201      	adds	r2, #1
 800c894:	1a5b      	subs	r3, r3, r1
 800c896:	602a      	str	r2, [r5, #0]
 800c898:	612b      	str	r3, [r5, #16]
 800c89a:	3f01      	subs	r7, #1
 800c89c:	e757      	b.n	800c74e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800c89e:	ad39      	add	r5, sp, #228	@ 0xe4
 800c8a0:	ac19      	add	r4, sp, #100	@ 0x64
 800c8a2:	e72d      	b.n	800c700 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800c8a4:	4613      	mov	r3, r2
 800c8a6:	e744      	b.n	800c732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800c8a8:	4613      	mov	r3, r2
 800c8aa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800c8ae:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800c8b2:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800c8b6:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800c8ba:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800c8be:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800c8c2:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800c8c6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800c8ca:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800c8ce:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800c8d2:	469e      	mov	lr, r3
 800c8d4:	461f      	mov	r7, r3
 800c8d6:	f04f 0900 	mov.w	r9, #0
 800c8da:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800c8dc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800c8e0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800c8e2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800c8e6:	960e      	str	r6, [sp, #56]	@ 0x38
 800c8e8:	2f00      	cmp	r7, #0
 800c8ea:	d146      	bne.n	800c97a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800c8ec:	449c      	add	ip, r3
 800c8ee:	1ad7      	subs	r7, r2, r3
 800c8f0:	f1b9 0f00 	cmp.w	r9, #0
 800c8f4:	d009      	beq.n	800c90a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800c8f6:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800c8fa:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800c8fe:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800c902:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800c906:	9039      	str	r0, [sp, #228]	@ 0xe4
 800c908:	913d      	str	r1, [sp, #244]	@ 0xf4
 800c90a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c90e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c912:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c916:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c91a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c91e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c922:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c926:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c92a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c92e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c932:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c936:	f04f 0800 	mov.w	r8, #0
 800c93a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c93c:	910e      	str	r1, [sp, #56]	@ 0x38
 800c93e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c942:	f1be 0f00 	cmp.w	lr, #0
 800c946:	d030      	beq.n	800c9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800c948:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c94a:	4450      	add	r0, sl
 800c94c:	4431      	add	r1, r6
 800c94e:	4549      	cmp	r1, r9
 800c950:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c954:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c958:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c95c:	db08      	blt.n	800c970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800c95e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c962:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c966:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c96a:	3001      	adds	r0, #1
 800c96c:	eba1 0109 	sub.w	r1, r1, r9
 800c970:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c974:	f04f 0801 	mov.w	r8, #1
 800c978:	e7e3      	b.n	800c942 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800c97a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c97c:	4450      	add	r0, sl
 800c97e:	4431      	add	r1, r6
 800c980:	4541      	cmp	r1, r8
 800c982:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c986:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c98a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c98e:	db08      	blt.n	800c9a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800c990:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c994:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c998:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c99c:	3001      	adds	r0, #1
 800c99e:	eba1 0108 	sub.w	r1, r1, r8
 800c9a2:	3f01      	subs	r7, #1
 800c9a4:	f04f 0901 	mov.w	r9, #1
 800c9a8:	e79e      	b.n	800c8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800c9aa:	449c      	add	ip, r3
 800c9ac:	1aff      	subs	r7, r7, r3
 800c9ae:	f1b8 0f00 	cmp.w	r8, #0
 800c9b2:	d009      	beq.n	800c9c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800c9b4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c9b8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c9bc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c9c0:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c9c4:	9019      	str	r0, [sp, #100]	@ 0x64
 800c9c6:	911d      	str	r1, [sp, #116]	@ 0x74
 800c9c8:	1ad2      	subs	r2, r2, r3
 800c9ca:	e6b5      	b.n	800c738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c9cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c9ce:	681b      	ldr	r3, [r3, #0]
 800c9d0:	b923      	cbnz	r3, 800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9d2:	4b04      	ldr	r3, [pc, #16]	@ (800c9e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800c9d4:	6818      	ldr	r0, [r3, #0]
 800c9d6:	6803      	ldr	r3, [r0, #0]
 800c9d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c9da:	4798      	blx	r3
 800c9dc:	b05b      	add	sp, #364	@ 0x16c
 800c9de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9e2:	bf00      	nop
 800c9e4:	20082ec4 	.word	0x20082ec4

0800c9e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c9e8:	2b03      	cmp	r3, #3
 800c9ea:	d818      	bhi.n	800ca1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c9ec:	e8df f003 	tbb	[pc, r3]
 800c9f0:	130d0602 	.word	0x130d0602
 800c9f4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c9f8:	1850      	adds	r0, r2, r1
 800c9fa:	4770      	bx	lr
 800c9fc:	8803      	ldrh	r3, [r0, #0]
 800c9fe:	8880      	ldrh	r0, [r0, #4]
 800ca00:	4418      	add	r0, r3
 800ca02:	b200      	sxth	r0, r0
 800ca04:	1a80      	subs	r0, r0, r2
 800ca06:	3801      	subs	r0, #1
 800ca08:	4770      	bx	lr
 800ca0a:	8803      	ldrh	r3, [r0, #0]
 800ca0c:	8880      	ldrh	r0, [r0, #4]
 800ca0e:	4418      	add	r0, r3
 800ca10:	b200      	sxth	r0, r0
 800ca12:	1a40      	subs	r0, r0, r1
 800ca14:	e7f7      	b.n	800ca06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ca16:	f9b0 0000 	ldrsh.w	r0, [r0]
 800ca1a:	4410      	add	r0, r2
 800ca1c:	4770      	bx	lr
 800ca1e:	2000      	movs	r0, #0
 800ca20:	4770      	bx	lr

0800ca22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ca22:	2b03      	cmp	r3, #3
 800ca24:	d817      	bhi.n	800ca56 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800ca26:	e8df f003 	tbb	[pc, r3]
 800ca2a:	0602      	.short	0x0602
 800ca2c:	1009      	.short	0x1009
 800ca2e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ca32:	1850      	adds	r0, r2, r1
 800ca34:	4770      	bx	lr
 800ca36:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ca3a:	e7fa      	b.n	800ca32 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ca3c:	8843      	ldrh	r3, [r0, #2]
 800ca3e:	88c0      	ldrh	r0, [r0, #6]
 800ca40:	4418      	add	r0, r3
 800ca42:	b200      	sxth	r0, r0
 800ca44:	1a80      	subs	r0, r0, r2
 800ca46:	3801      	subs	r0, #1
 800ca48:	4770      	bx	lr
 800ca4a:	8843      	ldrh	r3, [r0, #2]
 800ca4c:	88c0      	ldrh	r0, [r0, #6]
 800ca4e:	4418      	add	r0, r3
 800ca50:	b200      	sxth	r0, r0
 800ca52:	1a40      	subs	r0, r0, r1
 800ca54:	e7f7      	b.n	800ca46 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ca56:	2000      	movs	r0, #0
 800ca58:	4770      	bx	lr
	...

0800ca5c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ca5c:	2200      	movs	r2, #0
 800ca5e:	4b01      	ldr	r3, [pc, #4]	@ (800ca64 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ca60:	601a      	str	r2, [r3, #0]
 800ca62:	4770      	bx	lr
 800ca64:	20082ecc 	.word	0x20082ecc

0800ca68 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ca68:	4603      	mov	r3, r0
 800ca6a:	b1c8      	cbz	r0, 800caa0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ca6c:	0c02      	lsrs	r2, r0, #16
 800ca6e:	0412      	lsls	r2, r2, #16
 800ca70:	b9a2      	cbnz	r2, 800ca9c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ca72:	0403      	lsls	r3, r0, #16
 800ca74:	2010      	movs	r0, #16
 800ca76:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800ca7a:	bf04      	itt	eq
 800ca7c:	021b      	lsleq	r3, r3, #8
 800ca7e:	3008      	addeq	r0, #8
 800ca80:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800ca84:	bf04      	itt	eq
 800ca86:	011b      	lsleq	r3, r3, #4
 800ca88:	3004      	addeq	r0, #4
 800ca8a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800ca8e:	bf04      	itt	eq
 800ca90:	009b      	lsleq	r3, r3, #2
 800ca92:	3002      	addeq	r0, #2
 800ca94:	2b00      	cmp	r3, #0
 800ca96:	db04      	blt.n	800caa2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ca98:	3001      	adds	r0, #1
 800ca9a:	4770      	bx	lr
 800ca9c:	2000      	movs	r0, #0
 800ca9e:	e7ea      	b.n	800ca76 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800caa0:	2020      	movs	r0, #32
 800caa2:	4770      	bx	lr

0800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800caa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800caa8:	b087      	sub	sp, #28
 800caaa:	460d      	mov	r5, r1
 800caac:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800cab0:	4616      	mov	r6, r2
 800cab2:	4698      	mov	r8, r3
 800cab4:	4601      	mov	r1, r0
 800cab6:	b120      	cbz	r0, 800cac2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cab8:	b11a      	cbz	r2, 800cac2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800caba:	2d1f      	cmp	r5, #31
 800cabc:	d801      	bhi.n	800cac2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cabe:	2b1f      	cmp	r3, #31
 800cac0:	d904      	bls.n	800cacc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800cac2:	2000      	movs	r0, #0
 800cac4:	6038      	str	r0, [r7, #0]
 800cac6:	b007      	add	sp, #28
 800cac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cacc:	b97d      	cbnz	r5, 800caee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800cace:	b143      	cbz	r3, 800cae2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800cad0:	4602      	mov	r2, r0
 800cad2:	e9cd 4700 	strd	r4, r7, [sp]
 800cad6:	462b      	mov	r3, r5
 800cad8:	4641      	mov	r1, r8
 800cada:	4630      	mov	r0, r6
 800cadc:	f7ff ffe2 	bl	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cae0:	e7f1      	b.n	800cac6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cae2:	f04f 33ff 	mov.w	r3, #4294967295
 800cae6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800caea:	603b      	str	r3, [r7, #0]
 800caec:	e7eb      	b.n	800cac6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800caee:	fa32 fa05 	lsrs.w	sl, r2, r5
 800caf2:	d106      	bne.n	800cb02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800caf4:	4346      	muls	r6, r0
 800caf6:	fbb6 f0f4 	udiv	r0, r6, r4
 800cafa:	fb04 6610 	mls	r6, r4, r0, r6
 800cafe:	603e      	str	r6, [r7, #0]
 800cb00:	e7e1      	b.n	800cac6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb02:	fa00 fb05 	lsl.w	fp, r0, r5
 800cb06:	fbbb f9f4 	udiv	r9, fp, r4
 800cb0a:	2201      	movs	r2, #1
 800cb0c:	fb0a f309 	mul.w	r3, sl, r9
 800cb10:	40aa      	lsls	r2, r5
 800cb12:	3a01      	subs	r2, #1
 800cb14:	4016      	ands	r6, r2
 800cb16:	4630      	mov	r0, r6
 800cb18:	9303      	str	r3, [sp, #12]
 800cb1a:	f7ff ffa5 	bl	800ca68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb1e:	462b      	mov	r3, r5
 800cb20:	460a      	mov	r2, r1
 800cb22:	e9cd 4700 	strd	r4, r7, [sp]
 800cb26:	4601      	mov	r1, r0
 800cb28:	4630      	mov	r0, r6
 800cb2a:	f7ff ffbb 	bl	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb2e:	fb04 b919 	mls	r9, r4, r9, fp
 800cb32:	4606      	mov	r6, r0
 800cb34:	4648      	mov	r0, r9
 800cb36:	eb05 0108 	add.w	r1, r5, r8
 800cb3a:	f7ff ff95 	bl	800ca68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb3e:	ab05      	add	r3, sp, #20
 800cb40:	e9cd 4300 	strd	r4, r3, [sp]
 800cb44:	464a      	mov	r2, r9
 800cb46:	4603      	mov	r3, r0
 800cb48:	4650      	mov	r0, sl
 800cb4a:	f7ff ffab 	bl	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb4e:	6839      	ldr	r1, [r7, #0]
 800cb50:	9a05      	ldr	r2, [sp, #20]
 800cb52:	9b03      	ldr	r3, [sp, #12]
 800cb54:	4411      	add	r1, r2
 800cb56:	fbb1 f2f4 	udiv	r2, r1, r4
 800cb5a:	fb04 1412 	mls	r4, r4, r2, r1
 800cb5e:	18d3      	adds	r3, r2, r3
 800cb60:	441e      	add	r6, r3
 800cb62:	4430      	add	r0, r6
 800cb64:	603c      	str	r4, [r7, #0]
 800cb66:	e7ae      	b.n	800cac6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800cb68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800cb68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb6c:	b085      	sub	sp, #20
 800cb6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800cb70:	f1b0 0900 	subs.w	r9, r0, #0
 800cb74:	461d      	mov	r5, r3
 800cb76:	bfbf      	itttt	lt
 800cb78:	6823      	ldrlt	r3, [r4, #0]
 800cb7a:	f1c9 0900 	rsblt	r9, r9, #0
 800cb7e:	425b      	neglt	r3, r3
 800cb80:	6023      	strlt	r3, [r4, #0]
 800cb82:	bfb4      	ite	lt
 800cb84:	f04f 36ff 	movlt.w	r6, #4294967295
 800cb88:	2601      	movge	r6, #1
 800cb8a:	2a00      	cmp	r2, #0
 800cb8c:	4617      	mov	r7, r2
 800cb8e:	da04      	bge.n	800cb9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cb90:	6823      	ldr	r3, [r4, #0]
 800cb92:	4257      	negs	r7, r2
 800cb94:	425b      	negs	r3, r3
 800cb96:	4276      	negs	r6, r6
 800cb98:	6023      	str	r3, [r4, #0]
 800cb9a:	2d00      	cmp	r5, #0
 800cb9c:	4638      	mov	r0, r7
 800cb9e:	bfba      	itte	lt
 800cba0:	426d      	neglt	r5, r5
 800cba2:	f04f 38ff 	movlt.w	r8, #4294967295
 800cba6:	f04f 0801 	movge.w	r8, #1
 800cbaa:	f7ff ff5d 	bl	800ca68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cbae:	ab03      	add	r3, sp, #12
 800cbb0:	e9cd 5300 	strd	r5, r3, [sp]
 800cbb4:	463a      	mov	r2, r7
 800cbb6:	4603      	mov	r3, r0
 800cbb8:	4648      	mov	r0, r9
 800cbba:	f7ff ff73 	bl	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cbbe:	6823      	ldr	r3, [r4, #0]
 800cbc0:	9a03      	ldr	r2, [sp, #12]
 800cbc2:	4546      	cmp	r6, r8
 800cbc4:	441a      	add	r2, r3
 800cbc6:	fb92 f3f5 	sdiv	r3, r2, r5
 800cbca:	4418      	add	r0, r3
 800cbcc:	fb05 2313 	mls	r3, r5, r3, r2
 800cbd0:	bf18      	it	ne
 800cbd2:	4240      	negne	r0, r0
 800cbd4:	1c72      	adds	r2, r6, #1
 800cbd6:	6023      	str	r3, [r4, #0]
 800cbd8:	d105      	bne.n	800cbe6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cbda:	2b00      	cmp	r3, #0
 800cbdc:	f1c3 0200 	rsb	r2, r3, #0
 800cbe0:	db0b      	blt.n	800cbfa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cbe2:	6022      	str	r2, [r4, #0]
 800cbe4:	e006      	b.n	800cbf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbe6:	2e01      	cmp	r6, #1
 800cbe8:	d104      	bne.n	800cbf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbea:	2b00      	cmp	r3, #0
 800cbec:	da02      	bge.n	800cbf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbee:	442b      	add	r3, r5
 800cbf0:	3801      	subs	r0, #1
 800cbf2:	6023      	str	r3, [r4, #0]
 800cbf4:	b005      	add	sp, #20
 800cbf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbfa:	3801      	subs	r0, #1
 800cbfc:	1b52      	subs	r2, r2, r5
 800cbfe:	e7f0      	b.n	800cbe2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800cc00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cc00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cc04:	4c1c      	ldr	r4, [pc, #112]	@ (800cc78 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cc06:	4605      	mov	r5, r0
 800cc08:	69a3      	ldr	r3, [r4, #24]
 800cc0a:	6807      	ldr	r7, [r0, #0]
 800cc0c:	b92b      	cbnz	r3, 800cc1a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cc0e:	6840      	ldr	r0, [r0, #4]
 800cc10:	e9c5 7000 	strd	r7, r0, [r5]
 800cc14:	b004      	add	sp, #16
 800cc16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc1a:	f04f 0802 	mov.w	r8, #2
 800cc1e:	fb93 f1f8 	sdiv	r1, r3, r8
 800cc22:	68a2      	ldr	r2, [r4, #8]
 800cc24:	ae04      	add	r6, sp, #16
 800cc26:	440a      	add	r2, r1
 800cc28:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cc2c:	69e1      	ldr	r1, [r4, #28]
 800cc2e:	463a      	mov	r2, r7
 800cc30:	9600      	str	r6, [sp, #0]
 800cc32:	6820      	ldr	r0, [r4, #0]
 800cc34:	f7ff ff98 	bl	800cb68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc38:	69a3      	ldr	r3, [r4, #24]
 800cc3a:	4607      	mov	r7, r0
 800cc3c:	686a      	ldr	r2, [r5, #4]
 800cc3e:	6a21      	ldr	r1, [r4, #32]
 800cc40:	9600      	str	r6, [sp, #0]
 800cc42:	6860      	ldr	r0, [r4, #4]
 800cc44:	f7ff ff90 	bl	800cb68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc48:	69a3      	ldr	r3, [r4, #24]
 800cc4a:	6962      	ldr	r2, [r4, #20]
 800cc4c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cc50:	4442      	add	r2, r8
 800cc52:	9203      	str	r2, [sp, #12]
 800cc54:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cc56:	682a      	ldr	r2, [r5, #0]
 800cc58:	4407      	add	r7, r0
 800cc5a:	9600      	str	r6, [sp, #0]
 800cc5c:	68e0      	ldr	r0, [r4, #12]
 800cc5e:	f7ff ff83 	bl	800cb68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc62:	9600      	str	r6, [sp, #0]
 800cc64:	4680      	mov	r8, r0
 800cc66:	69a3      	ldr	r3, [r4, #24]
 800cc68:	686a      	ldr	r2, [r5, #4]
 800cc6a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800cc6c:	6920      	ldr	r0, [r4, #16]
 800cc6e:	f7ff ff7b 	bl	800cb68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc72:	4440      	add	r0, r8
 800cc74:	e7cc      	b.n	800cc10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800cc76:	bf00      	nop
 800cc78:	20082ed0 	.word	0x20082ed0

0800cc7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cc7c:	4b07      	ldr	r3, [pc, #28]	@ (800cc9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800cc7e:	781b      	ldrb	r3, [r3, #0]
 800cc80:	2b01      	cmp	r3, #1
 800cc82:	d109      	bne.n	800cc98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800cc84:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cc88:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cc8c:	8003      	strh	r3, [r0, #0]
 800cc8e:	4b04      	ldr	r3, [pc, #16]	@ (800cca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cc90:	881b      	ldrh	r3, [r3, #0]
 800cc92:	3b01      	subs	r3, #1
 800cc94:	1a9b      	subs	r3, r3, r2
 800cc96:	800b      	strh	r3, [r1, #0]
 800cc98:	4770      	bx	lr
 800cc9a:	bf00      	nop
 800cc9c:	20082ebc 	.word	0x20082ebc
 800cca0:	20082eb8 	.word	0x20082eb8

0800cca4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cca4:	b510      	push	{r4, lr}
 800cca6:	4b07      	ldr	r3, [pc, #28]	@ (800ccc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cca8:	781b      	ldrb	r3, [r3, #0]
 800ccaa:	2b01      	cmp	r3, #1
 800ccac:	d108      	bne.n	800ccc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ccae:	4b06      	ldr	r3, [pc, #24]	@ (800ccc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ccb0:	880c      	ldrh	r4, [r1, #0]
 800ccb2:	881b      	ldrh	r3, [r3, #0]
 800ccb4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ccb8:	3b01      	subs	r3, #1
 800ccba:	1b1b      	subs	r3, r3, r4
 800ccbc:	8003      	strh	r3, [r0, #0]
 800ccbe:	800a      	strh	r2, [r1, #0]
 800ccc0:	bd10      	pop	{r4, pc}
 800ccc2:	bf00      	nop
 800ccc4:	20082ebc 	.word	0x20082ebc
 800ccc8:	20082eb8 	.word	0x20082eb8

0800cccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cccc:	b510      	push	{r4, lr}
 800ccce:	4b0a      	ldr	r3, [pc, #40]	@ (800ccf8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ccd0:	781b      	ldrb	r3, [r3, #0]
 800ccd2:	2b01      	cmp	r3, #1
 800ccd4:	d10e      	bne.n	800ccf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ccd6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ccda:	8843      	ldrh	r3, [r0, #2]
 800ccdc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cce0:	18ca      	adds	r2, r1, r3
 800cce2:	4b06      	ldr	r3, [pc, #24]	@ (800ccfc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800cce4:	8044      	strh	r4, [r0, #2]
 800cce6:	881b      	ldrh	r3, [r3, #0]
 800cce8:	1a9b      	subs	r3, r3, r2
 800ccea:	8003      	strh	r3, [r0, #0]
 800ccec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ccf0:	8081      	strh	r1, [r0, #4]
 800ccf2:	80c3      	strh	r3, [r0, #6]
 800ccf4:	bd10      	pop	{r4, pc}
 800ccf6:	bf00      	nop
 800ccf8:	20082ebc 	.word	0x20082ebc
 800ccfc:	20082eb8 	.word	0x20082eb8

0800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cd00:	4b08      	ldr	r3, [pc, #32]	@ (800cd24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800cd02:	781b      	ldrb	r3, [r3, #0]
 800cd04:	2b01      	cmp	r3, #1
 800cd06:	d10c      	bne.n	800cd22 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800cd08:	8803      	ldrh	r3, [r0, #0]
 800cd0a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800cd0e:	8842      	ldrh	r2, [r0, #2]
 800cd10:	8002      	strh	r2, [r0, #0]
 800cd12:	185a      	adds	r2, r3, r1
 800cd14:	4b04      	ldr	r3, [pc, #16]	@ (800cd28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cd16:	881b      	ldrh	r3, [r3, #0]
 800cd18:	1a9b      	subs	r3, r3, r2
 800cd1a:	8043      	strh	r3, [r0, #2]
 800cd1c:	88c3      	ldrh	r3, [r0, #6]
 800cd1e:	80c1      	strh	r1, [r0, #6]
 800cd20:	8083      	strh	r3, [r0, #4]
 800cd22:	4770      	bx	lr
 800cd24:	20082ebc 	.word	0x20082ebc
 800cd28:	20082eb8 	.word	0x20082eb8

0800cd2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800cd2c:	b510      	push	{r4, lr}
 800cd2e:	4b07      	ldr	r3, [pc, #28]	@ (800cd4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cd30:	781b      	ldrb	r3, [r3, #0]
 800cd32:	2b01      	cmp	r3, #1
 800cd34:	d108      	bne.n	800cd48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cd36:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cd3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd3e:	8003      	strh	r3, [r0, #0]
 800cd40:	8893      	ldrh	r3, [r2, #4]
 800cd42:	3b01      	subs	r3, #1
 800cd44:	1b1b      	subs	r3, r3, r4
 800cd46:	800b      	strh	r3, [r1, #0]
 800cd48:	bd10      	pop	{r4, pc}
 800cd4a:	bf00      	nop
 800cd4c:	20082ebc 	.word	0x20082ebc

0800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cd50:	b510      	push	{r4, lr}
 800cd52:	4b0a      	ldr	r3, [pc, #40]	@ (800cd7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cd54:	460a      	mov	r2, r1
 800cd56:	781b      	ldrb	r3, [r3, #0]
 800cd58:	2b01      	cmp	r3, #1
 800cd5a:	d10d      	bne.n	800cd78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cd5c:	8881      	ldrh	r1, [r0, #4]
 800cd5e:	8803      	ldrh	r3, [r0, #0]
 800cd60:	440b      	add	r3, r1
 800cd62:	4601      	mov	r1, r0
 800cd64:	3b01      	subs	r3, #1
 800cd66:	f821 3b02 	strh.w	r3, [r1], #2
 800cd6a:	f7ff ffdf 	bl	800cd2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cd6e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd72:	88c2      	ldrh	r2, [r0, #6]
 800cd74:	80c3      	strh	r3, [r0, #6]
 800cd76:	8082      	strh	r2, [r0, #4]
 800cd78:	bd10      	pop	{r4, pc}
 800cd7a:	bf00      	nop
 800cd7c:	20082ebc 	.word	0x20082ebc

0800cd80 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cd80:	2100      	movs	r1, #0
 800cd82:	4b06      	ldr	r3, [pc, #24]	@ (800cd9c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cd84:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800cd88:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd8c:	4b04      	ldr	r3, [pc, #16]	@ (800cda0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cd8e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800cd92:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd96:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800cd9a:	4770      	bx	lr
 800cd9c:	20082eb8 	.word	0x20082eb8
 800cda0:	20082eba 	.word	0x20082eba

0800cda4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cda4:	4b03      	ldr	r3, [pc, #12]	@ (800cdb4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cda6:	6818      	ldr	r0, [r3, #0]
 800cda8:	b110      	cbz	r0, 800cdb0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cdaa:	6803      	ldr	r3, [r0, #0]
 800cdac:	699b      	ldr	r3, [r3, #24]
 800cdae:	4718      	bx	r3
 800cdb0:	4770      	bx	lr
 800cdb2:	bf00      	nop
 800cdb4:	20082f00 	.word	0x20082f00

0800cdb8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cdb8:	4770      	bx	lr
	...

0800cdbc <_ZN8touchgfx11Application4drawEv>:
 800cdbc:	b507      	push	{r0, r1, r2, lr}
 800cdbe:	2100      	movs	r1, #0
 800cdc0:	4b08      	ldr	r3, [pc, #32]	@ (800cde4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800cdc2:	9100      	str	r1, [sp, #0]
 800cdc4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdc8:	4b07      	ldr	r3, [pc, #28]	@ (800cde8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cdca:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cdce:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cdd2:	4669      	mov	r1, sp
 800cdd4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cdd8:	6803      	ldr	r3, [r0, #0]
 800cdda:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800cddc:	4798      	blx	r3
 800cdde:	b003      	add	sp, #12
 800cde0:	f85d fb04 	ldr.w	pc, [sp], #4
 800cde4:	20082eb8 	.word	0x20082eb8
 800cde8:	20082eba 	.word	0x20082eba

0800cdec <_ZN8touchgfx11Application10invalidateEv>:
 800cdec:	2100      	movs	r1, #0
 800cdee:	4b09      	ldr	r3, [pc, #36]	@ (800ce14 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800cdf0:	b082      	sub	sp, #8
 800cdf2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdf6:	4b08      	ldr	r3, [pc, #32]	@ (800ce18 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800cdf8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cdfc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce00:	9100      	str	r1, [sp, #0]
 800ce02:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ce06:	6803      	ldr	r3, [r0, #0]
 800ce08:	aa02      	add	r2, sp, #8
 800ce0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ce0c:	e912 0006 	ldmdb	r2, {r1, r2}
 800ce10:	b002      	add	sp, #8
 800ce12:	4718      	bx	r3
 800ce14:	20082eb8 	.word	0x20082eb8
 800ce18:	20082eba 	.word	0x20082eba

0800ce1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ce1c:	4b03      	ldr	r3, [pc, #12]	@ (800ce2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ce1e:	6818      	ldr	r0, [r3, #0]
 800ce20:	b110      	cbz	r0, 800ce28 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ce22:	6803      	ldr	r3, [r0, #0]
 800ce24:	69db      	ldr	r3, [r3, #28]
 800ce26:	4718      	bx	r3
 800ce28:	4770      	bx	lr
 800ce2a:	bf00      	nop
 800ce2c:	20082f00 	.word	0x20082f00

0800ce30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ce30:	4b03      	ldr	r3, [pc, #12]	@ (800ce40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ce32:	6818      	ldr	r0, [r3, #0]
 800ce34:	b110      	cbz	r0, 800ce3c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ce36:	6803      	ldr	r3, [r0, #0]
 800ce38:	6a1b      	ldr	r3, [r3, #32]
 800ce3a:	4718      	bx	r3
 800ce3c:	4770      	bx	lr
 800ce3e:	bf00      	nop
 800ce40:	20082f00 	.word	0x20082f00

0800ce44 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ce44:	2300      	movs	r3, #0
 800ce46:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ce4a:	4770      	bx	lr

0800ce4c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ce4c:	4b03      	ldr	r3, [pc, #12]	@ (800ce5c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ce4e:	6818      	ldr	r0, [r3, #0]
 800ce50:	b110      	cbz	r0, 800ce58 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ce52:	6803      	ldr	r3, [r0, #0]
 800ce54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ce56:	4718      	bx	r3
 800ce58:	4770      	bx	lr
 800ce5a:	bf00      	nop
 800ce5c:	20082f00 	.word	0x20082f00

0800ce60 <_ZN8touchgfx11ApplicationD1Ev>:
 800ce60:	4770      	bx	lr

0800ce62 <_ZN8touchgfx11ApplicationD0Ev>:
 800ce62:	b510      	push	{r4, lr}
 800ce64:	4604      	mov	r4, r0
 800ce66:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800ce6a:	f024 f94c 	bl	8031106 <_ZdlPvj>
 800ce6e:	4620      	mov	r0, r4
 800ce70:	bd10      	pop	{r4, pc}

0800ce72 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ce72:	b510      	push	{r4, lr}
 800ce74:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ce78:	888a      	ldrh	r2, [r1, #4]
 800ce7a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ce7e:	4422      	add	r2, r4
 800ce80:	b212      	sxth	r2, r2
 800ce82:	4293      	cmp	r3, r2
 800ce84:	da15      	bge.n	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ce86:	8882      	ldrh	r2, [r0, #4]
 800ce88:	4413      	add	r3, r2
 800ce8a:	b21b      	sxth	r3, r3
 800ce8c:	429c      	cmp	r4, r3
 800ce8e:	da10      	bge.n	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ce90:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ce94:	88c9      	ldrh	r1, [r1, #6]
 800ce96:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ce9a:	4419      	add	r1, r3
 800ce9c:	b209      	sxth	r1, r1
 800ce9e:	428a      	cmp	r2, r1
 800cea0:	da07      	bge.n	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cea2:	88c0      	ldrh	r0, [r0, #6]
 800cea4:	4410      	add	r0, r2
 800cea6:	b200      	sxth	r0, r0
 800cea8:	4283      	cmp	r3, r0
 800ceaa:	bfac      	ite	ge
 800ceac:	2000      	movge	r0, #0
 800ceae:	2001      	movlt	r0, #1
 800ceb0:	bd10      	pop	{r4, pc}
 800ceb2:	2000      	movs	r0, #0
 800ceb4:	e7fc      	b.n	800ceb0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ceb6 <_ZN8touchgfx4Rect10restrictToEss>:
 800ceb6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ceba:	b510      	push	{r4, lr}
 800cebc:	2b00      	cmp	r3, #0
 800cebe:	da04      	bge.n	800ceca <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cec0:	8884      	ldrh	r4, [r0, #4]
 800cec2:	4423      	add	r3, r4
 800cec4:	8083      	strh	r3, [r0, #4]
 800cec6:	2300      	movs	r3, #0
 800cec8:	8003      	strh	r3, [r0, #0]
 800ceca:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cece:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ced2:	1b09      	subs	r1, r1, r4
 800ced4:	428b      	cmp	r3, r1
 800ced6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ceda:	bfc8      	it	gt
 800cedc:	8081      	strhgt	r1, [r0, #4]
 800cede:	2b00      	cmp	r3, #0
 800cee0:	da04      	bge.n	800ceec <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800cee2:	88c1      	ldrh	r1, [r0, #6]
 800cee4:	440b      	add	r3, r1
 800cee6:	80c3      	strh	r3, [r0, #6]
 800cee8:	2300      	movs	r3, #0
 800ceea:	8043      	strh	r3, [r0, #2]
 800ceec:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cef0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cef4:	1a52      	subs	r2, r2, r1
 800cef6:	4293      	cmp	r3, r2
 800cef8:	bfc8      	it	gt
 800cefa:	80c2      	strhgt	r2, [r0, #6]
 800cefc:	bd10      	pop	{r4, pc}
	...

0800cf00 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cf00:	b510      	push	{r4, lr}
 800cf02:	460c      	mov	r4, r1
 800cf04:	4b0f      	ldr	r3, [pc, #60]	@ (800cf44 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cf06:	4620      	mov	r0, r4
 800cf08:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf0c:	4b0e      	ldr	r3, [pc, #56]	@ (800cf48 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cf0e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cf12:	f7ff ffd0 	bl	800ceb6 <_ZN8touchgfx4Rect10restrictToEss>
 800cf16:	4b0d      	ldr	r3, [pc, #52]	@ (800cf4c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cf18:	6818      	ldr	r0, [r3, #0]
 800cf1a:	b190      	cbz	r0, 800cf42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cf1c:	6803      	ldr	r3, [r0, #0]
 800cf1e:	4621      	mov	r1, r4
 800cf20:	689b      	ldr	r3, [r3, #8]
 800cf22:	4798      	blx	r3
 800cf24:	4b0a      	ldr	r3, [pc, #40]	@ (800cf50 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cf26:	6818      	ldr	r0, [r3, #0]
 800cf28:	b118      	cbz	r0, 800cf32 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cf2a:	6803      	ldr	r3, [r0, #0]
 800cf2c:	4621      	mov	r1, r4
 800cf2e:	689b      	ldr	r3, [r3, #8]
 800cf30:	4798      	blx	r3
 800cf32:	4b08      	ldr	r3, [pc, #32]	@ (800cf54 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cf34:	4621      	mov	r1, r4
 800cf36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf3a:	6818      	ldr	r0, [r3, #0]
 800cf3c:	6803      	ldr	r3, [r0, #0]
 800cf3e:	69db      	ldr	r3, [r3, #28]
 800cf40:	4718      	bx	r3
 800cf42:	bd10      	pop	{r4, pc}
 800cf44:	20082eba 	.word	0x20082eba
 800cf48:	20082eb8 	.word	0x20082eb8
 800cf4c:	20082f00 	.word	0x20082f00
 800cf50:	20082efc 	.word	0x20082efc
 800cf54:	20082ec4 	.word	0x20082ec4

0800cf58 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cf58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf5a:	4606      	mov	r6, r0
 800cf5c:	4608      	mov	r0, r1
 800cf5e:	460f      	mov	r7, r1
 800cf60:	f7fd fea9 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf64:	b9e8      	cbnz	r0, 800cfa2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf66:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cf6a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cf6e:	42a5      	cmp	r5, r4
 800cf70:	db17      	blt.n	800cfa2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf72:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cf76:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cf7a:	429a      	cmp	r2, r3
 800cf7c:	db11      	blt.n	800cfa2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf7e:	88b9      	ldrh	r1, [r7, #4]
 800cf80:	440d      	add	r5, r1
 800cf82:	88b1      	ldrh	r1, [r6, #4]
 800cf84:	b22d      	sxth	r5, r5
 800cf86:	440c      	add	r4, r1
 800cf88:	b224      	sxth	r4, r4
 800cf8a:	42a5      	cmp	r5, r4
 800cf8c:	dc09      	bgt.n	800cfa2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf8e:	88f8      	ldrh	r0, [r7, #6]
 800cf90:	4410      	add	r0, r2
 800cf92:	88f2      	ldrh	r2, [r6, #6]
 800cf94:	b200      	sxth	r0, r0
 800cf96:	4413      	add	r3, r2
 800cf98:	b21b      	sxth	r3, r3
 800cf9a:	4298      	cmp	r0, r3
 800cf9c:	bfcc      	ite	gt
 800cf9e:	2000      	movgt	r0, #0
 800cfa0:	2001      	movle	r0, #1
 800cfa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cfa4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cfa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfa6:	4604      	mov	r4, r0
 800cfa8:	4608      	mov	r0, r1
 800cfaa:	460d      	mov	r5, r1
 800cfac:	f7fd fe83 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cfb0:	b978      	cbnz	r0, 800cfd2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cfb2:	4620      	mov	r0, r4
 800cfb4:	f7fd fe7f 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cfb8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cfbc:	b150      	cbz	r0, 800cfd4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cfbe:	8026      	strh	r6, [r4, #0]
 800cfc0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cfc4:	8063      	strh	r3, [r4, #2]
 800cfc6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cfca:	80a3      	strh	r3, [r4, #4]
 800cfcc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cfd0:	80e3      	strh	r3, [r4, #6]
 800cfd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cfd4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cfd8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cfdc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cfe0:	42b1      	cmp	r1, r6
 800cfe2:	460f      	mov	r7, r1
 800cfe4:	bfa8      	it	ge
 800cfe6:	4637      	movge	r7, r6
 800cfe8:	4293      	cmp	r3, r2
 800cfea:	4618      	mov	r0, r3
 800cfec:	bfa8      	it	ge
 800cfee:	4610      	movge	r0, r2
 800cff0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cff4:	88ed      	ldrh	r5, [r5, #6]
 800cff6:	4466      	add	r6, ip
 800cff8:	442a      	add	r2, r5
 800cffa:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cffe:	88e5      	ldrh	r5, [r4, #6]
 800d000:	4461      	add	r1, ip
 800d002:	442b      	add	r3, r5
 800d004:	b236      	sxth	r6, r6
 800d006:	b209      	sxth	r1, r1
 800d008:	b212      	sxth	r2, r2
 800d00a:	b21b      	sxth	r3, r3
 800d00c:	428e      	cmp	r6, r1
 800d00e:	bfac      	ite	ge
 800d010:	ebc7 0106 	rsbge	r1, r7, r6
 800d014:	ebc7 0101 	rsblt	r1, r7, r1
 800d018:	429a      	cmp	r2, r3
 800d01a:	bfac      	ite	ge
 800d01c:	ebc0 0202 	rsbge	r2, r0, r2
 800d020:	ebc0 0203 	rsblt	r2, r0, r3
 800d024:	8027      	strh	r7, [r4, #0]
 800d026:	8060      	strh	r0, [r4, #2]
 800d028:	80a1      	strh	r1, [r4, #4]
 800d02a:	80e2      	strh	r2, [r4, #6]
 800d02c:	e7d1      	b.n	800cfd2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d030 <_ZN8touchgfx11Application11getInstanceEv>:
 800d030:	4b01      	ldr	r3, [pc, #4]	@ (800d038 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d032:	6818      	ldr	r0, [r3, #0]
 800d034:	4770      	bx	lr
 800d036:	bf00      	nop
 800d038:	20082f10 	.word	0x20082f10

0800d03c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800d03c:	2300      	movs	r3, #0
 800d03e:	b510      	push	{r4, lr}
 800d040:	4604      	mov	r4, r0
 800d042:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800d046:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d04a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d04e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d052:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800d056:	429a      	cmp	r2, r3
 800d058:	d90e      	bls.n	800d078 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800d05a:	18e2      	adds	r2, r4, r3
 800d05c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800d060:	b122      	cbz	r2, 800d06c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800d062:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800d066:	6803      	ldr	r3, [r0, #0]
 800d068:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d06a:	4798      	blx	r3
 800d06c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d070:	3301      	adds	r3, #1
 800d072:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d076:	e7ea      	b.n	800d04e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800d078:	bd10      	pop	{r4, pc}

0800d07a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800d07a:	2300      	movs	r3, #0
 800d07c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800d080:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d084:	30a4      	adds	r0, #164	@ 0xa4
 800d086:	f802 3b01 	strb.w	r3, [r2], #1
 800d08a:	4282      	cmp	r2, r0
 800d08c:	d1fb      	bne.n	800d086 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800d08e:	4770      	bx	lr

0800d090 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d090:	b570      	push	{r4, r5, r6, lr}
 800d092:	4c0b      	ldr	r4, [pc, #44]	@ (800d0c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800d094:	4605      	mov	r5, r0
 800d096:	6820      	ldr	r0, [r4, #0]
 800d098:	460e      	mov	r6, r1
 800d09a:	b110      	cbz	r0, 800d0a2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800d09c:	6803      	ldr	r3, [r0, #0]
 800d09e:	695b      	ldr	r3, [r3, #20]
 800d0a0:	4798      	blx	r3
 800d0a2:	1d28      	adds	r0, r5, #4
 800d0a4:	f7ff ffe9 	bl	800d07a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d0a8:	6026      	str	r6, [r4, #0]
 800d0aa:	6833      	ldr	r3, [r6, #0]
 800d0ac:	4630      	mov	r0, r6
 800d0ae:	68db      	ldr	r3, [r3, #12]
 800d0b0:	4798      	blx	r3
 800d0b2:	682b      	ldr	r3, [r5, #0]
 800d0b4:	4628      	mov	r0, r5
 800d0b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d0bc:	4718      	bx	r3
 800d0be:	bf00      	nop
 800d0c0:	20082f00 	.word	0x20082f00

0800d0c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800d0c4:	2300      	movs	r3, #0
 800d0c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d0c8:	461a      	mov	r2, r3
 800d0ca:	461c      	mov	r4, r3
 800d0cc:	461d      	mov	r5, r3
 800d0ce:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800d0d2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800d0d6:	459c      	cmp	ip, r3
 800d0d8:	dd1a      	ble.n	800d110 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800d0da:	18c6      	adds	r6, r0, r3
 800d0dc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800d0e0:	b16e      	cbz	r6, 800d0fe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800d0e2:	429a      	cmp	r2, r3
 800d0e4:	d008      	beq.n	800d0f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800d0e6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800d0ea:	fa1f fe82 	uxth.w	lr, r2
 800d0ee:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800d0f2:	1887      	adds	r7, r0, r2
 800d0f4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800d0f8:	3201      	adds	r2, #1
 800d0fa:	3301      	adds	r3, #1
 800d0fc:	e7eb      	b.n	800d0d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800d0fe:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800d102:	4299      	cmp	r1, r3
 800d104:	bfa8      	it	ge
 800d106:	3501      	addge	r5, #1
 800d108:	429e      	cmp	r6, r3
 800d10a:	bfc8      	it	gt
 800d10c:	3401      	addgt	r4, #1
 800d10e:	e7f4      	b.n	800d0fa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800d110:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800d114:	1b49      	subs	r1, r1, r5
 800d116:	1b1b      	subs	r3, r3, r4
 800d118:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800d11c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d120:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d124:	4293      	cmp	r3, r2
 800d126:	dd03      	ble.n	800d130 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800d128:	3b01      	subs	r3, #1
 800d12a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d12e:	e7f7      	b.n	800d120 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800d130:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d134 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d134:	b570      	push	{r4, r5, r6, lr}
 800d136:	4d16      	ldr	r5, [pc, #88]	@ (800d190 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800d138:	4604      	mov	r4, r0
 800d13a:	6828      	ldr	r0, [r5, #0]
 800d13c:	b140      	cbz	r0, 800d150 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d13e:	7a03      	ldrb	r3, [r0, #8]
 800d140:	b933      	cbnz	r3, 800d150 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d142:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d146:	6803      	ldr	r3, [r0, #0]
 800d148:	689b      	ldr	r3, [r3, #8]
 800d14a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d14e:	4718      	bx	r3
 800d150:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800d154:	4e0f      	ldr	r6, [pc, #60]	@ (800d194 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800d156:	b973      	cbnz	r3, 800d176 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d158:	b168      	cbz	r0, 800d176 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d15a:	7a03      	ldrb	r3, [r0, #8]
 800d15c:	b15b      	cbz	r3, 800d176 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d15e:	6830      	ldr	r0, [r6, #0]
 800d160:	b110      	cbz	r0, 800d168 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800d162:	6803      	ldr	r3, [r0, #0]
 800d164:	691b      	ldr	r3, [r3, #16]
 800d166:	4798      	blx	r3
 800d168:	6828      	ldr	r0, [r5, #0]
 800d16a:	6803      	ldr	r3, [r0, #0]
 800d16c:	68db      	ldr	r3, [r3, #12]
 800d16e:	4798      	blx	r3
 800d170:	2301      	movs	r3, #1
 800d172:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d176:	3404      	adds	r4, #4
 800d178:	4620      	mov	r0, r4
 800d17a:	f7ff ff5f 	bl	800d03c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800d17e:	4620      	mov	r0, r4
 800d180:	f7ff ffa0 	bl	800d0c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d184:	6830      	ldr	r0, [r6, #0]
 800d186:	b110      	cbz	r0, 800d18e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800d188:	6803      	ldr	r3, [r0, #0]
 800d18a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d18c:	e7dd      	b.n	800d14a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800d18e:	bd70      	pop	{r4, r5, r6, pc}
 800d190:	20082f04 	.word	0x20082f04
 800d194:	20082f00 	.word	0x20082f00

0800d198 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d198:	4603      	mov	r3, r0
 800d19a:	2200      	movs	r2, #0
 800d19c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800d1a0:	801a      	strh	r2, [r3, #0]
 800d1a2:	805a      	strh	r2, [r3, #2]
 800d1a4:	809a      	strh	r2, [r3, #4]
 800d1a6:	80da      	strh	r2, [r3, #6]
 800d1a8:	3308      	adds	r3, #8
 800d1aa:	428b      	cmp	r3, r1
 800d1ac:	d1f8      	bne.n	800d1a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d1ae:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800d1b2:	4770      	bx	lr

0800d1b4 <_ZN8touchgfx11ApplicationC1Ev>:
 800d1b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1b6:	4606      	mov	r6, r0
 800d1b8:	4604      	mov	r4, r0
 800d1ba:	2500      	movs	r5, #0
 800d1bc:	4b1b      	ldr	r3, [pc, #108]	@ (800d22c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d1be:	22a8      	movs	r2, #168	@ 0xa8
 800d1c0:	f846 3b04 	str.w	r3, [r6], #4
 800d1c4:	2100      	movs	r1, #0
 800d1c6:	4630      	mov	r0, r6
 800d1c8:	f025 fb7d 	bl	80328c6 <memset>
 800d1cc:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800d1d0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d1d4:	f7ff ffe0 	bl	800d198 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1d8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d1dc:	f7ff ffdc 	bl	800d198 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1e0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800d1e4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800d1e8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800d1ec:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800d1f0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800d1f4:	490e      	ldr	r1, [pc, #56]	@ (800d230 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d1f6:	480f      	ldr	r0, [pc, #60]	@ (800d234 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d1f8:	f003 f832 	bl	8010260 <CRC_Lock>
 800d1fc:	4f0e      	ldr	r7, [pc, #56]	@ (800d238 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d1fe:	4b0f      	ldr	r3, [pc, #60]	@ (800d23c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d200:	b158      	cbz	r0, 800d21a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d202:	801d      	strh	r5, [r3, #0]
 800d204:	2300      	movs	r3, #0
 800d206:	4a0e      	ldr	r2, [pc, #56]	@ (800d240 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d208:	4630      	mov	r0, r6
 800d20a:	6013      	str	r3, [r2, #0]
 800d20c:	4a0d      	ldr	r2, [pc, #52]	@ (800d244 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d20e:	603b      	str	r3, [r7, #0]
 800d210:	6013      	str	r3, [r2, #0]
 800d212:	f7ff ff32 	bl	800d07a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d216:	4620      	mov	r0, r4
 800d218:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d21a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800d21e:	2002      	movs	r0, #2
 800d220:	801a      	strh	r2, [r3, #0]
 800d222:	6038      	str	r0, [r7, #0]
 800d224:	f001 fd82 	bl	800ed2c <_ZN8touchgfx6Screen4drawEv>
 800d228:	e7ec      	b.n	800d204 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d22a:	bf00      	nop
 800d22c:	08035b04 	.word	0x08035b04
 800d230:	b5e8b5cd 	.word	0xb5e8b5cd
 800d234:	f407a5c2 	.word	0xf407a5c2
 800d238:	20082f00 	.word	0x20082f00
 800d23c:	20000060 	.word	0x20000060
 800d240:	20082f10 	.word	0x20082f10
 800d244:	20082f04 	.word	0x20082f04

0800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d248:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800d24c:	b510      	push	{r4, lr}
 800d24e:	3b01      	subs	r3, #1
 800d250:	b29b      	uxth	r3, r3
 800d252:	428b      	cmp	r3, r1
 800d254:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800d258:	d908      	bls.n	800d26c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d25a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d25e:	681a      	ldr	r2, [r3, #0]
 800d260:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d264:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d268:	685a      	ldr	r2, [r3, #4]
 800d26a:	6062      	str	r2, [r4, #4]
 800d26c:	bd10      	pop	{r4, pc}
	...

0800d270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d274:	4b8f      	ldr	r3, [pc, #572]	@ (800d4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d276:	b08f      	sub	sp, #60	@ 0x3c
 800d278:	ac0a      	add	r4, sp, #40	@ 0x28
 800d27a:	e884 0006 	stmia.w	r4, {r1, r2}
 800d27e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d282:	4b8d      	ldr	r3, [pc, #564]	@ (800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d284:	4683      	mov	fp, r0
 800d286:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d28a:	4620      	mov	r0, r4
 800d28c:	f7ff fe13 	bl	800ceb6 <_ZN8touchgfx4Rect10restrictToEss>
 800d290:	4620      	mov	r0, r4
 800d292:	f7fd fd10 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d296:	2800      	cmp	r0, #0
 800d298:	d16a      	bne.n	800d370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d29a:	9403      	str	r4, [sp, #12]
 800d29c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d2a0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d2a4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d2a8:	35a4      	adds	r5, #164	@ 0xa4
 800d2aa:	9301      	str	r3, [sp, #4]
 800d2ac:	b15c      	cbz	r4, 800d2c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d2ae:	4629      	mov	r1, r5
 800d2b0:	9803      	ldr	r0, [sp, #12]
 800d2b2:	f7ff fe51 	bl	800cf58 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d2b6:	3c01      	subs	r4, #1
 800d2b8:	b118      	cbz	r0, 800d2c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d2ba:	b2a1      	uxth	r1, r4
 800d2bc:	9801      	ldr	r0, [sp, #4]
 800d2be:	f7ff ffc3 	bl	800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d2c2:	3d08      	subs	r5, #8
 800d2c4:	e7f2      	b.n	800d2ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d2c6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800d2ca:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d2ce:	9302      	str	r3, [sp, #8]
 800d2d0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d2d4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800d2d8:	f8cd a010 	str.w	sl, [sp, #16]
 800d2dc:	9306      	str	r3, [sp, #24]
 800d2de:	445c      	add	r4, fp
 800d2e0:	2500      	movs	r5, #0
 800d2e2:	4626      	mov	r6, r4
 800d2e4:	462f      	mov	r7, r5
 800d2e6:	f8cd a014 	str.w	sl, [sp, #20]
 800d2ea:	9b05      	ldr	r3, [sp, #20]
 800d2ec:	2b00      	cmp	r3, #0
 800d2ee:	d073      	beq.n	800d3d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d2f0:	9903      	ldr	r1, [sp, #12]
 800d2f2:	4630      	mov	r0, r6
 800d2f4:	f7ff fdbd 	bl	800ce72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d2f8:	b350      	cbz	r0, 800d350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d2fa:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800d2fe:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d302:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800d306:	45e6      	cmp	lr, ip
 800d308:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d30c:	db33      	blt.n	800d376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d30e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d312:	88b3      	ldrh	r3, [r6, #4]
 800d314:	4472      	add	r2, lr
 800d316:	4463      	add	r3, ip
 800d318:	b212      	sxth	r2, r2
 800d31a:	b21b      	sxth	r3, r3
 800d31c:	429a      	cmp	r2, r3
 800d31e:	dc2a      	bgt.n	800d376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d320:	88f3      	ldrh	r3, [r6, #6]
 800d322:	fa1f f289 	uxth.w	r2, r9
 800d326:	4413      	add	r3, r2
 800d328:	b29b      	uxth	r3, r3
 800d32a:	45c8      	cmp	r8, r9
 800d32c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d330:	fa1f fc88 	uxth.w	ip, r8
 800d334:	fa0f fe83 	sxth.w	lr, r3
 800d338:	db0f      	blt.n	800d35a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d33a:	eba3 030c 	sub.w	r3, r3, ip
 800d33e:	1ac9      	subs	r1, r1, r3
 800d340:	b209      	sxth	r1, r1
 800d342:	2900      	cmp	r1, #0
 800d344:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d348:	dd12      	ble.n	800d370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d34a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d34e:	4605      	mov	r5, r0
 800d350:	9b05      	ldr	r3, [sp, #20]
 800d352:	3e08      	subs	r6, #8
 800d354:	3b01      	subs	r3, #1
 800d356:	9305      	str	r3, [sp, #20]
 800d358:	e7c7      	b.n	800d2ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d35a:	4461      	add	r1, ip
 800d35c:	b209      	sxth	r1, r1
 800d35e:	4571      	cmp	r1, lr
 800d360:	dc38      	bgt.n	800d3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d362:	eba2 020c 	sub.w	r2, r2, ip
 800d366:	b212      	sxth	r2, r2
 800d368:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d36c:	2a00      	cmp	r2, #0
 800d36e:	dcee      	bgt.n	800d34e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d370:	b00f      	add	sp, #60	@ 0x3c
 800d372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d376:	45c8      	cmp	r8, r9
 800d378:	db2c      	blt.n	800d3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d37a:	88f3      	ldrh	r3, [r6, #6]
 800d37c:	4499      	add	r9, r3
 800d37e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d382:	fa0f f989 	sxth.w	r9, r9
 800d386:	4498      	add	r8, r3
 800d388:	fa0f f888 	sxth.w	r8, r8
 800d38c:	45c1      	cmp	r9, r8
 800d38e:	db21      	blt.n	800d3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d390:	88b3      	ldrh	r3, [r6, #4]
 800d392:	fa1f f28c 	uxth.w	r2, ip
 800d396:	4413      	add	r3, r2
 800d398:	b29b      	uxth	r3, r3
 800d39a:	45e6      	cmp	lr, ip
 800d39c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d3a0:	fa1f f88e 	uxth.w	r8, lr
 800d3a4:	fa0f f983 	sxth.w	r9, r3
 800d3a8:	db0a      	blt.n	800d3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d3aa:	eba3 0308 	sub.w	r3, r3, r8
 800d3ae:	1ac9      	subs	r1, r1, r3
 800d3b0:	b209      	sxth	r1, r1
 800d3b2:	2900      	cmp	r1, #0
 800d3b4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d3b8:	ddda      	ble.n	800d370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d3ba:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d3be:	e7c6      	b.n	800d34e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d3c0:	4441      	add	r1, r8
 800d3c2:	b209      	sxth	r1, r1
 800d3c4:	4549      	cmp	r1, r9
 800d3c6:	dc05      	bgt.n	800d3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3c8:	eba2 0208 	sub.w	r2, r2, r8
 800d3cc:	b212      	sxth	r2, r2
 800d3ce:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d3d2:	e7cb      	b.n	800d36c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d3d4:	4607      	mov	r7, r0
 800d3d6:	e7bb      	b.n	800d350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d3d8:	2d00      	cmp	r5, #0
 800d3da:	d181      	bne.n	800d2e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d3dc:	2f00      	cmp	r7, #0
 800d3de:	f000 81de 	beq.w	800d79e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d3e2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d3e6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d3ea:	b2b3      	uxth	r3, r6
 800d3ec:	9305      	str	r3, [sp, #20]
 800d3ee:	9a05      	ldr	r2, [sp, #20]
 800d3f0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d3f4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d3f8:	4413      	add	r3, r2
 800d3fa:	b2ba      	uxth	r2, r7
 800d3fc:	4492      	add	sl, r2
 800d3fe:	b29b      	uxth	r3, r3
 800d400:	fa1f fa8a 	uxth.w	sl, sl
 800d404:	fa0f f883 	sxth.w	r8, r3
 800d408:	fa0f f98a 	sxth.w	r9, sl
 800d40c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d410:	9b04      	ldr	r3, [sp, #16]
 800d412:	2b00      	cmp	r3, #0
 800d414:	d052      	beq.n	800d4bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d416:	9903      	ldr	r1, [sp, #12]
 800d418:	4620      	mov	r0, r4
 800d41a:	f7ff fd2a 	bl	800ce72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d41e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d422:	b1c0      	cbz	r0, 800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d424:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d428:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d42c:	4576      	cmp	r6, lr
 800d42e:	dc22      	bgt.n	800d476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d430:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d434:	44f4      	add	ip, lr
 800d436:	fa0f fc8c 	sxth.w	ip, ip
 800d43a:	45e0      	cmp	r8, ip
 800d43c:	db1b      	blt.n	800d476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d43e:	428f      	cmp	r7, r1
 800d440:	fa1f fc81 	uxth.w	ip, r1
 800d444:	88e1      	ldrh	r1, [r4, #6]
 800d446:	dc0d      	bgt.n	800d464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d448:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d44c:	eba1 010c 	sub.w	r1, r1, ip
 800d450:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d454:	80e1      	strh	r1, [r4, #6]
 800d456:	4628      	mov	r0, r5
 800d458:	9904      	ldr	r1, [sp, #16]
 800d45a:	3c08      	subs	r4, #8
 800d45c:	3901      	subs	r1, #1
 800d45e:	9104      	str	r1, [sp, #16]
 800d460:	4605      	mov	r5, r0
 800d462:	e7d3      	b.n	800d40c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d464:	4461      	add	r1, ip
 800d466:	b209      	sxth	r1, r1
 800d468:	4549      	cmp	r1, r9
 800d46a:	dcf5      	bgt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d46c:	eba2 0c0c 	sub.w	ip, r2, ip
 800d470:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d474:	e7ef      	b.n	800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d476:	428f      	cmp	r7, r1
 800d478:	dcee      	bgt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d47a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d47e:	4461      	add	r1, ip
 800d480:	b209      	sxth	r1, r1
 800d482:	4589      	cmp	r9, r1
 800d484:	dbe8      	blt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d486:	4576      	cmp	r6, lr
 800d488:	fa1f fc8e 	uxth.w	ip, lr
 800d48c:	88a1      	ldrh	r1, [r4, #4]
 800d48e:	dc07      	bgt.n	800d4a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d490:	eba3 0c0c 	sub.w	ip, r3, ip
 800d494:	eba1 010c 	sub.w	r1, r1, ip
 800d498:	f8a4 8000 	strh.w	r8, [r4]
 800d49c:	80a1      	strh	r1, [r4, #4]
 800d49e:	e7da      	b.n	800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4a0:	4461      	add	r1, ip
 800d4a2:	b209      	sxth	r1, r1
 800d4a4:	4588      	cmp	r8, r1
 800d4a6:	dbd7      	blt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4a8:	9905      	ldr	r1, [sp, #20]
 800d4aa:	eba1 0c0c 	sub.w	ip, r1, ip
 800d4ae:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d4b2:	e7d0      	b.n	800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4b4:	20082eba 	.word	0x20082eba
 800d4b8:	20082eb8 	.word	0x20082eb8
 800d4bc:	2d00      	cmp	r5, #0
 800d4be:	f000 816e 	beq.w	800d79e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d4c2:	9b06      	ldr	r3, [sp, #24]
 800d4c4:	445b      	add	r3, fp
 800d4c6:	461c      	mov	r4, r3
 800d4c8:	9b02      	ldr	r3, [sp, #8]
 800d4ca:	3301      	adds	r3, #1
 800d4cc:	f000 8167 	beq.w	800d79e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d4d0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d4d4:	4629      	mov	r1, r5
 800d4d6:	9803      	ldr	r0, [sp, #12]
 800d4d8:	f7ff fd3e 	bl	800cf58 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d4dc:	b120      	cbz	r0, 800d4e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d4de:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d4e2:	9801      	ldr	r0, [sp, #4]
 800d4e4:	f7ff feb0 	bl	800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d4e8:	9903      	ldr	r1, [sp, #12]
 800d4ea:	4628      	mov	r0, r5
 800d4ec:	f7ff fcc1 	bl	800ce72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d4f0:	2800      	cmp	r0, #0
 800d4f2:	f000 809c 	beq.w	800d62e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d4f6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d4fa:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d4fe:	fa1f f189 	uxth.w	r1, r9
 800d502:	eb01 0c03 	add.w	ip, r1, r3
 800d506:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d50a:	fa1f fa8c 	uxth.w	sl, ip
 800d50e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d512:	9309      	str	r3, [sp, #36]	@ 0x24
 800d514:	b283      	uxth	r3, r0
 800d516:	eb03 050c 	add.w	r5, r3, ip
 800d51a:	b2ad      	uxth	r5, r5
 800d51c:	9505      	str	r5, [sp, #20]
 800d51e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d522:	4548      	cmp	r0, r9
 800d524:	9504      	str	r5, [sp, #16]
 800d526:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d52a:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d52e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d532:	f340 8099 	ble.w	800d668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d536:	1a5b      	subs	r3, r3, r1
 800d538:	b29b      	uxth	r3, r3
 800d53a:	4596      	cmp	lr, r2
 800d53c:	fa0f f08a 	sxth.w	r0, sl
 800d540:	b21e      	sxth	r6, r3
 800d542:	dd2e      	ble.n	800d5a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d544:	9f02      	ldr	r7, [sp, #8]
 800d546:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d54a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d54e:	9f04      	ldr	r7, [sp, #16]
 800d550:	fa1f fe8e 	uxth.w	lr, lr
 800d554:	1a3f      	subs	r7, r7, r0
 800d556:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d55a:	b292      	uxth	r2, r2
 800d55c:	ebae 0102 	sub.w	r1, lr, r2
 800d560:	44a6      	add	lr, r4
 800d562:	4402      	add	r2, r0
 800d564:	b289      	uxth	r1, r1
 800d566:	fa0f fe8e 	sxth.w	lr, lr
 800d56a:	b212      	sxth	r2, r2
 800d56c:	b20d      	sxth	r5, r1
 800d56e:	ebae 0202 	sub.w	r2, lr, r2
 800d572:	436f      	muls	r7, r5
 800d574:	4372      	muls	r2, r6
 800d576:	4297      	cmp	r7, r2
 800d578:	db09      	blt.n	800d58e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d57a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d57e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d582:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d586:	449c      	add	ip, r3
 800d588:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d58c:	e686      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d58e:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d592:	4421      	add	r1, r4
 800d594:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d598:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d59c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d5a0:	e67c      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5a2:	9f04      	ldr	r7, [sp, #16]
 800d5a4:	42b8      	cmp	r0, r7
 800d5a6:	da27      	bge.n	800d5f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d5a8:	9902      	ldr	r1, [sp, #8]
 800d5aa:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d5ae:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d5b2:	eb05 010e 	add.w	r1, r5, lr
 800d5b6:	fa1f f881 	uxth.w	r8, r1
 800d5ba:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d5be:	fa0f f988 	sxth.w	r9, r8
 800d5c2:	4411      	add	r1, r2
 800d5c4:	eba1 0108 	sub.w	r1, r1, r8
 800d5c8:	b289      	uxth	r1, r1
 800d5ca:	fa0f f881 	sxth.w	r8, r1
 800d5ce:	eba2 020e 	sub.w	r2, r2, lr
 800d5d2:	1a3f      	subs	r7, r7, r0
 800d5d4:	4372      	muls	r2, r6
 800d5d6:	fb08 f707 	mul.w	r7, r8, r7
 800d5da:	42ba      	cmp	r2, r7
 800d5dc:	dc06      	bgt.n	800d5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d5de:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d5e2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d5e6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d5ea:	e7ca      	b.n	800d582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d5ec:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d5f0:	4429      	add	r1, r5
 800d5f2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d5f6:	e651      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5f8:	9805      	ldr	r0, [sp, #20]
 800d5fa:	2d06      	cmp	r5, #6
 800d5fc:	ebaa 0000 	sub.w	r0, sl, r0
 800d600:	b280      	uxth	r0, r0
 800d602:	fa0f fe80 	sxth.w	lr, r0
 800d606:	d817      	bhi.n	800d638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d608:	9b04      	ldr	r3, [sp, #16]
 800d60a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d60e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d612:	1c6b      	adds	r3, r5, #1
 800d614:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d618:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d61c:	9b01      	ldr	r3, [sp, #4]
 800d61e:	9801      	ldr	r0, [sp, #4]
 800d620:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d624:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d628:	805a      	strh	r2, [r3, #2]
 800d62a:	809e      	strh	r6, [r3, #4]
 800d62c:	80d9      	strh	r1, [r3, #6]
 800d62e:	9b02      	ldr	r3, [sp, #8]
 800d630:	3c08      	subs	r4, #8
 800d632:	3b01      	subs	r3, #1
 800d634:	9302      	str	r3, [sp, #8]
 800d636:	e747      	b.n	800d4c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d638:	9a02      	ldr	r2, [sp, #8]
 800d63a:	45b6      	cmp	lr, r6
 800d63c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d640:	db0d      	blt.n	800d65e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d642:	449c      	add	ip, r3
 800d644:	fa1f fc8c 	uxth.w	ip, ip
 800d648:	445a      	add	r2, fp
 800d64a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d64e:	448c      	add	ip, r1
 800d650:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d654:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d658:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d65c:	e61e      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d65e:	445a      	add	r2, fp
 800d660:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d664:	4484      	add	ip, r0
 800d666:	e78f      	b.n	800d588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d668:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d66c:	fa1f f18e 	uxth.w	r1, lr
 800d670:	eb01 0806 	add.w	r8, r1, r6
 800d674:	b293      	uxth	r3, r2
 800d676:	fa1f f888 	uxth.w	r8, r8
 800d67a:	9306      	str	r3, [sp, #24]
 800d67c:	fa0f f388 	sxth.w	r3, r8
 800d680:	9307      	str	r3, [sp, #28]
 800d682:	9f06      	ldr	r7, [sp, #24]
 800d684:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d688:	4596      	cmp	lr, r2
 800d68a:	443b      	add	r3, r7
 800d68c:	b29b      	uxth	r3, r3
 800d68e:	9308      	str	r3, [sp, #32]
 800d690:	da24      	bge.n	800d6dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d692:	9905      	ldr	r1, [sp, #20]
 800d694:	eba3 0308 	sub.w	r3, r3, r8
 800d698:	ebaa 0401 	sub.w	r4, sl, r1
 800d69c:	b2a4      	uxth	r4, r4
 800d69e:	b29b      	uxth	r3, r3
 800d6a0:	b225      	sxth	r5, r4
 800d6a2:	b219      	sxth	r1, r3
 800d6a4:	eba2 020e 	sub.w	r2, r2, lr
 800d6a8:	eba9 0000 	sub.w	r0, r9, r0
 800d6ac:	436a      	muls	r2, r5
 800d6ae:	4348      	muls	r0, r1
 800d6b0:	4282      	cmp	r2, r0
 800d6b2:	9a02      	ldr	r2, [sp, #8]
 800d6b4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d6b8:	445a      	add	r2, fp
 800d6ba:	dc06      	bgt.n	800d6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d6bc:	9b07      	ldr	r3, [sp, #28]
 800d6be:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d6c2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d6c6:	44a4      	add	ip, r4
 800d6c8:	e75e      	b.n	800d588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d6ca:	9904      	ldr	r1, [sp, #16]
 800d6cc:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d6d0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d6d4:	4433      	add	r3, r6
 800d6d6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d6da:	e5df      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d6dc:	9f06      	ldr	r7, [sp, #24]
 800d6de:	9b04      	ldr	r3, [sp, #16]
 800d6e0:	1bc9      	subs	r1, r1, r7
 800d6e2:	fa0f f78a 	sxth.w	r7, sl
 800d6e6:	b289      	uxth	r1, r1
 800d6e8:	429f      	cmp	r7, r3
 800d6ea:	fa0f fe81 	sxth.w	lr, r1
 800d6ee:	dd24      	ble.n	800d73a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 800d6f0:	9a05      	ldr	r2, [sp, #20]
 800d6f2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d6f6:	ebaa 0202 	sub.w	r2, sl, r2
 800d6fa:	9d07      	ldr	r5, [sp, #28]
 800d6fc:	b292      	uxth	r2, r2
 800d6fe:	eba5 0a03 	sub.w	sl, r5, r3
 800d702:	b214      	sxth	r4, r2
 800d704:	eba9 0000 	sub.w	r0, r9, r0
 800d708:	fb0e f000 	mul.w	r0, lr, r0
 800d70c:	fb04 fa0a 	mul.w	sl, r4, sl
 800d710:	9b02      	ldr	r3, [sp, #8]
 800d712:	4550      	cmp	r0, sl
 800d714:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800d718:	445b      	add	r3, fp
 800d71a:	db03      	blt.n	800d724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 800d71c:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d720:	4494      	add	ip, r2
 800d722:	e731      	b.n	800d588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d724:	9a04      	ldr	r2, [sp, #16]
 800d726:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d72a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d72e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d732:	4431      	add	r1, r6
 800d734:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d738:	e75b      	b.n	800d5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d73a:	9b08      	ldr	r3, [sp, #32]
 800d73c:	2d06      	cmp	r5, #6
 800d73e:	eba3 0308 	sub.w	r3, r3, r8
 800d742:	b29b      	uxth	r3, r3
 800d744:	b218      	sxth	r0, r3
 800d746:	d813      	bhi.n	800d770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 800d748:	9b07      	ldr	r3, [sp, #28]
 800d74a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800d74e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800d752:	1c6b      	adds	r3, r5, #1
 800d754:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d758:	9b01      	ldr	r3, [sp, #4]
 800d75a:	9901      	ldr	r1, [sp, #4]
 800d75c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d760:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d764:	805a      	strh	r2, [r3, #2]
 800d766:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d768:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d76c:	809a      	strh	r2, [r3, #4]
 800d76e:	e75e      	b.n	800d62e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d770:	9c02      	ldr	r4, [sp, #8]
 800d772:	4570      	cmp	r0, lr
 800d774:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d778:	db0d      	blt.n	800d796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 800d77a:	4431      	add	r1, r6
 800d77c:	9b06      	ldr	r3, [sp, #24]
 800d77e:	b289      	uxth	r1, r1
 800d780:	445c      	add	r4, fp
 800d782:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d786:	4419      	add	r1, r3
 800d788:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d78c:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800d790:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800d794:	e582      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d796:	445c      	add	r4, fp
 800d798:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800d79c:	e79a      	b.n	800d6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d79e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800d7a2:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d7a6:	1e65      	subs	r5, r4, #1
 800d7a8:	b2ad      	uxth	r5, r5
 800d7aa:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d7ae:	42b5      	cmp	r5, r6
 800d7b0:	d044      	beq.n	800d83c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 800d7b2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800d7b6:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800d7ba:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800d7be:	4282      	cmp	r2, r0
 800d7c0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800d7c4:	d11f      	bne.n	800d806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d7c6:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800d7ca:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d7ce:	459c      	cmp	ip, r3
 800d7d0:	d119      	bne.n	800d806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d7d2:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800d7d6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d7da:	19d8      	adds	r0, r3, r7
 800d7dc:	b200      	sxth	r0, r0
 800d7de:	4288      	cmp	r0, r1
 800d7e0:	d109      	bne.n	800d7f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800d7e2:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800d7e6:	4413      	add	r3, r2
 800d7e8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800d7ec:	4629      	mov	r1, r5
 800d7ee:	9801      	ldr	r0, [sp, #4]
 800d7f0:	f7ff fd2a 	bl	800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d7f4:	e003      	b.n	800d7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d7f6:	4411      	add	r1, r2
 800d7f8:	b209      	sxth	r1, r1
 800d7fa:	42b9      	cmp	r1, r7
 800d7fc:	d0f3      	beq.n	800d7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 800d7fe:	3d01      	subs	r5, #1
 800d800:	b2ad      	uxth	r5, r5
 800d802:	3c08      	subs	r4, #8
 800d804:	e7d3      	b.n	800d7ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800d806:	42b9      	cmp	r1, r7
 800d808:	d1f9      	bne.n	800d7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d80a:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800d80e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d812:	4299      	cmp	r1, r3
 800d814:	d1f3      	bne.n	800d7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d816:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d81a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d81e:	181f      	adds	r7, r3, r0
 800d820:	b23f      	sxth	r7, r7
 800d822:	42ba      	cmp	r2, r7
 800d824:	d105      	bne.n	800d832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 800d826:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800d82a:	440b      	add	r3, r1
 800d82c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d830:	e7dc      	b.n	800d7ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 800d832:	440a      	add	r2, r1
 800d834:	b212      	sxth	r2, r2
 800d836:	4290      	cmp	r0, r2
 800d838:	d1e1      	bne.n	800d7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d83a:	e7f6      	b.n	800d82a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 800d83c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800d840:	2e07      	cmp	r6, #7
 800d842:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d846:	d812      	bhi.n	800d86e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d848:	1c75      	adds	r5, r6, #1
 800d84a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800d84e:	9d01      	ldr	r5, [sp, #4]
 800d850:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d854:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800d858:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800d85c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800d860:	442c      	add	r4, r5
 800d862:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d866:	8061      	strh	r1, [r4, #2]
 800d868:	80a2      	strh	r2, [r4, #4]
 800d86a:	80e3      	strh	r3, [r4, #6]
 800d86c:	e580      	b.n	800d370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d86e:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800d872:	f04f 37ff 	mov.w	r7, #4294967295
 800d876:	2500      	movs	r5, #0
 800d878:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d87c:	3e01      	subs	r6, #1
 800d87e:	445c      	add	r4, fp
 800d880:	9305      	str	r3, [sp, #20]
 800d882:	1e72      	subs	r2, r6, #1
 800d884:	4691      	mov	r9, r2
 800d886:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d88a:	9302      	str	r3, [sp, #8]
 800d88c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d890:	9304      	str	r3, [sp, #16]
 800d892:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800d896:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d89a:	bf16      	itet	ne
 800d89c:	9905      	ldrne	r1, [sp, #20]
 800d89e:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d8a2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d8a6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d8aa:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d8ae:	6818      	ldr	r0, [r3, #0]
 800d8b0:	fb18 f801 	smulbb	r8, r8, r1
 800d8b4:	6859      	ldr	r1, [r3, #4]
 800d8b6:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d8ba:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d8be:	4671      	mov	r1, lr
 800d8c0:	a80c      	add	r0, sp, #48	@ 0x30
 800d8c2:	9207      	str	r2, [sp, #28]
 800d8c4:	9306      	str	r3, [sp, #24]
 800d8c6:	f7ff fb6d 	bl	800cfa4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d8ca:	f04f 0c08 	mov.w	ip, #8
 800d8ce:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d8d2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d8d6:	9b04      	ldr	r3, [sp, #16]
 800d8d8:	9a02      	ldr	r2, [sp, #8]
 800d8da:	fb10 f001 	smulbb	r0, r0, r1
 800d8de:	fb02 8803 	mla	r8, r2, r3, r8
 800d8e2:	eba0 0108 	sub.w	r1, r0, r8
 800d8e6:	fb90 f0fc 	sdiv	r0, r0, ip
 800d8ea:	4288      	cmp	r0, r1
 800d8ec:	dc20      	bgt.n	800d930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d8ee:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d8f2:	4551      	cmp	r1, sl
 800d8f4:	da03      	bge.n	800d8fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d8f6:	b1d9      	cbz	r1, 800d930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d8f8:	468a      	mov	sl, r1
 800d8fa:	464f      	mov	r7, r9
 800d8fc:	4635      	mov	r5, r6
 800d8fe:	f109 39ff 	add.w	r9, r9, #4294967295
 800d902:	f119 0f02 	cmn.w	r9, #2
 800d906:	d1c6      	bne.n	800d896 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 800d908:	4616      	mov	r6, r2
 800d90a:	3201      	adds	r2, #1
 800d90c:	f1a4 0408 	sub.w	r4, r4, #8
 800d910:	d1b7      	bne.n	800d882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800d912:	9b01      	ldr	r3, [sp, #4]
 800d914:	b2ac      	uxth	r4, r5
 800d916:	00ed      	lsls	r5, r5, #3
 800d918:	1958      	adds	r0, r3, r5
 800d91a:	1c7b      	adds	r3, r7, #1
 800d91c:	d10b      	bne.n	800d936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d91e:	4601      	mov	r1, r0
 800d920:	9803      	ldr	r0, [sp, #12]
 800d922:	f7ff fb3f 	bl	800cfa4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d926:	4621      	mov	r1, r4
 800d928:	9801      	ldr	r0, [sp, #4]
 800d92a:	f7ff fc8d 	bl	800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d92e:	e4b5      	b.n	800d29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d930:	464f      	mov	r7, r9
 800d932:	4635      	mov	r5, r6
 800d934:	e7ed      	b.n	800d912 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d936:	9b01      	ldr	r3, [sp, #4]
 800d938:	00ff      	lsls	r7, r7, #3
 800d93a:	19d9      	adds	r1, r3, r7
 800d93c:	f7ff fb32 	bl	800cfa4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d940:	9b03      	ldr	r3, [sp, #12]
 800d942:	445f      	add	r7, fp
 800d944:	cb03      	ldmia	r3!, {r0, r1}
 800d946:	445d      	add	r5, fp
 800d948:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800d94c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800d950:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d954:	9b03      	ldr	r3, [sp, #12]
 800d956:	6869      	ldr	r1, [r5, #4]
 800d958:	c303      	stmia	r3!, {r0, r1}
 800d95a:	e7e4      	b.n	800d926 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d95c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d960:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800d964:	b09b      	sub	sp, #108	@ 0x6c
 800d966:	4604      	mov	r4, r0
 800d968:	4630      	mov	r0, r6
 800d96a:	f7fd f9a4 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d96e:	4605      	mov	r5, r0
 800d970:	b948      	cbnz	r0, 800d986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d972:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d976:	6823      	ldr	r3, [r4, #0]
 800d978:	4620      	mov	r0, r4
 800d97a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d97c:	4798      	blx	r3
 800d97e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800d982:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800d986:	4bc6      	ldr	r3, [pc, #792]	@ (800dca0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d988:	681b      	ldr	r3, [r3, #0]
 800d98a:	2b00      	cmp	r3, #0
 800d98c:	d03f      	beq.n	800da0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d98e:	4dc5      	ldr	r5, [pc, #788]	@ (800dca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d990:	4628      	mov	r0, r5
 800d992:	f7fd f990 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d996:	4606      	mov	r6, r0
 800d998:	2800      	cmp	r0, #0
 800d99a:	d138      	bne.n	800da0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d99c:	4628      	mov	r0, r5
 800d99e:	f7ff f995 	bl	800cccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d9a2:	6823      	ldr	r3, [r4, #0]
 800d9a4:	6829      	ldr	r1, [r5, #0]
 800d9a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d9a8:	686a      	ldr	r2, [r5, #4]
 800d9aa:	4620      	mov	r0, r4
 800d9ac:	4798      	blx	r3
 800d9ae:	802e      	strh	r6, [r5, #0]
 800d9b0:	806e      	strh	r6, [r5, #2]
 800d9b2:	80ae      	strh	r6, [r5, #4]
 800d9b4:	80ee      	strh	r6, [r5, #6]
 800d9b6:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800d9ba:	4dbb      	ldr	r5, [pc, #748]	@ (800dca8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d9bc:	4640      	mov	r0, r8
 800d9be:	f7ff fbeb 	bl	800d198 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d9c2:	882e      	ldrh	r6, [r5, #0]
 800d9c4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800d9c8:	4633      	mov	r3, r6
 800d9ca:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d9ce:	42bb      	cmp	r3, r7
 800d9d0:	d224      	bcs.n	800da1c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d9d2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800d9d6:	2907      	cmp	r1, #7
 800d9d8:	d816      	bhi.n	800da08 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800d9da:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d9de:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800d9e2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d9e6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d9ea:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800d9ee:	1c4a      	adds	r2, r1, #1
 800d9f0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800d9f4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800d9f8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800d9fc:	f8a2 a002 	strh.w	sl, [r2, #2]
 800da00:	f8a2 e004 	strh.w	lr, [r2, #4]
 800da04:	f8a2 c006 	strh.w	ip, [r2, #6]
 800da08:	3301      	adds	r3, #1
 800da0a:	b29b      	uxth	r3, r3
 800da0c:	e7df      	b.n	800d9ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800da0e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800da12:	2b00      	cmp	r3, #0
 800da14:	d1cf      	bne.n	800d9b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800da16:	b01b      	add	sp, #108	@ 0x6c
 800da18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da1c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800da20:	42b3      	cmp	r3, r6
 800da22:	d90c      	bls.n	800da3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800da24:	6822      	ldr	r2, [r4, #0]
 800da26:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800da2a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800da2c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800da30:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800da34:	4620      	mov	r0, r4
 800da36:	3601      	adds	r6, #1
 800da38:	47b8      	blx	r7
 800da3a:	b2b6      	uxth	r6, r6
 800da3c:	e7ee      	b.n	800da1c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da3e:	4a9b      	ldr	r2, [pc, #620]	@ (800dcac <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800da40:	6813      	ldr	r3, [r2, #0]
 800da42:	4691      	mov	r9, r2
 800da44:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800da48:	2b01      	cmp	r3, #1
 800da4a:	f040 80e2 	bne.w	800dc12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800da4e:	2600      	movs	r6, #0
 800da50:	8829      	ldrh	r1, [r5, #0]
 800da52:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800da56:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800da5a:	33ae      	adds	r3, #174	@ 0xae
 800da5c:	428f      	cmp	r7, r1
 800da5e:	f103 0308 	add.w	r3, r3, #8
 800da62:	dd0a      	ble.n	800da7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800da64:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800da68:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800da6c:	3101      	adds	r1, #1
 800da6e:	4402      	add	r2, r0
 800da70:	b212      	sxth	r2, r2
 800da72:	4296      	cmp	r6, r2
 800da74:	bfb8      	it	lt
 800da76:	4616      	movlt	r6, r2
 800da78:	e7f0      	b.n	800da5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800da7a:	4b8d      	ldr	r3, [pc, #564]	@ (800dcb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800da7c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800dcac <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800da80:	881b      	ldrh	r3, [r3, #0]
 800da82:	2b0f      	cmp	r3, #15
 800da84:	bf88      	it	hi
 800da86:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800da8a:	f04f 0300 	mov.w	r3, #0
 800da8e:	bf98      	it	ls
 800da90:	f04f 0b01 	movls.w	fp, #1
 800da94:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800da98:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800da9c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800daa0:	4b82      	ldr	r3, [pc, #520]	@ (800dcac <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800daa2:	4438      	add	r0, r7
 800daa4:	b207      	sxth	r7, r0
 800daa6:	6818      	ldr	r0, [r3, #0]
 800daa8:	42b7      	cmp	r7, r6
 800daaa:	6803      	ldr	r3, [r0, #0]
 800daac:	f280 8083 	bge.w	800dbb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800dab0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800dab4:	4798      	blx	r3
 800dab6:	eb07 030b 	add.w	r3, r7, fp
 800daba:	4298      	cmp	r0, r3
 800dabc:	da07      	bge.n	800dace <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800dabe:	42b0      	cmp	r0, r6
 800dac0:	da05      	bge.n	800dace <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800dac2:	4287      	cmp	r7, r0
 800dac4:	dd6c      	ble.n	800dba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800dac6:	2f00      	cmp	r7, #0
 800dac8:	dd6a      	ble.n	800dba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800daca:	4630      	mov	r0, r6
 800dacc:	e004      	b.n	800dad8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800dace:	4287      	cmp	r7, r0
 800dad0:	dcfb      	bgt.n	800daca <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800dad2:	42b0      	cmp	r0, r6
 800dad4:	bfa8      	it	ge
 800dad6:	4630      	movge	r0, r6
 800dad8:	2200      	movs	r2, #0
 800dada:	4b76      	ldr	r3, [pc, #472]	@ (800dcb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800dadc:	1bc0      	subs	r0, r0, r7
 800dade:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dae2:	f8ad 7016 	strh.w	r7, [sp, #22]
 800dae6:	882f      	ldrh	r7, [r5, #0]
 800dae8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800daec:	f8ad 3018 	strh.w	r3, [sp, #24]
 800daf0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800daf4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800daf8:	42bb      	cmp	r3, r7
 800dafa:	d9cd      	bls.n	800da98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800dafc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800db00:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800db04:	ab07      	add	r3, sp, #28
 800db06:	6851      	ldr	r1, [r2, #4]
 800db08:	c303      	stmia	r3!, {r0, r1}
 800db0a:	a905      	add	r1, sp, #20
 800db0c:	a807      	add	r0, sp, #28
 800db0e:	f7ff f9b0 	bl	800ce72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800db12:	2800      	cmp	r0, #0
 800db14:	d04c      	beq.n	800dbb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800db16:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800db1a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800db1e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800db22:	4686      	mov	lr, r0
 800db24:	4290      	cmp	r0, r2
 800db26:	4450      	add	r0, sl
 800db28:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800db2c:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800db30:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db34:	bfb8      	it	lt
 800db36:	4696      	movlt	lr, r2
 800db38:	4452      	add	r2, sl
 800db3a:	4299      	cmp	r1, r3
 800db3c:	b280      	uxth	r0, r0
 800db3e:	b292      	uxth	r2, r2
 800db40:	468c      	mov	ip, r1
 800db42:	9302      	str	r3, [sp, #8]
 800db44:	bfb8      	it	lt
 800db46:	469c      	movlt	ip, r3
 800db48:	fa0f fa82 	sxth.w	sl, r2
 800db4c:	b203      	sxth	r3, r0
 800db4e:	4553      	cmp	r3, sl
 800db50:	bfb8      	it	lt
 800db52:	4602      	movlt	r2, r0
 800db54:	eba2 020e 	sub.w	r2, r2, lr
 800db58:	f8ad 2020 	strh.w	r2, [sp, #32]
 800db5c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800db60:	9b02      	ldr	r3, [sp, #8]
 800db62:	4411      	add	r1, r2
 800db64:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800db68:	b289      	uxth	r1, r1
 800db6a:	4413      	add	r3, r2
 800db6c:	b29b      	uxth	r3, r3
 800db6e:	b208      	sxth	r0, r1
 800db70:	b21a      	sxth	r2, r3
 800db72:	4290      	cmp	r0, r2
 800db74:	bfb8      	it	lt
 800db76:	460b      	movlt	r3, r1
 800db78:	eba3 030c 	sub.w	r3, r3, ip
 800db7c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800db80:	f8ad e01c 	strh.w	lr, [sp, #28]
 800db84:	f8ad c01e 	strh.w	ip, [sp, #30]
 800db88:	a807      	add	r0, sp, #28
 800db8a:	f7fd f894 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800db8e:	b920      	cbnz	r0, 800db9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800db90:	6823      	ldr	r3, [r4, #0]
 800db92:	a907      	add	r1, sp, #28
 800db94:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800db96:	4620      	mov	r0, r4
 800db98:	4798      	blx	r3
 800db9a:	3701      	adds	r7, #1
 800db9c:	b2bf      	uxth	r7, r7
 800db9e:	e7a9      	b.n	800daf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800dba0:	f8d9 0000 	ldr.w	r0, [r9]
 800dba4:	2101      	movs	r1, #1
 800dba6:	6803      	ldr	r3, [r0, #0]
 800dba8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800dbac:	4798      	blx	r3
 800dbae:	e773      	b.n	800da98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800dbb0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800dbb4:	e7e8      	b.n	800db88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800dbb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dbb8:	4798      	blx	r3
 800dbba:	4b3f      	ldr	r3, [pc, #252]	@ (800dcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800dbbc:	781b      	ldrb	r3, [r3, #0]
 800dbbe:	2b00      	cmp	r3, #0
 800dbc0:	f43f af29 	beq.w	800da16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dbc4:	2300      	movs	r3, #0
 800dbc6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800dbca:	882b      	ldrh	r3, [r5, #0]
 800dbcc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800dbd0:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800dbd4:	42ab      	cmp	r3, r5
 800dbd6:	f4bf af1e 	bcs.w	800da16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dbda:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800dbde:	2907      	cmp	r1, #7
 800dbe0:	d814      	bhi.n	800dc0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800dbe2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800dbe6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800dbea:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800dbee:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800dbf2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800dbf6:	1c4a      	adds	r2, r1, #1
 800dbf8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800dbfc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800dc00:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dc04:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dc08:	8097      	strh	r7, [r2, #4]
 800dc0a:	80d6      	strh	r6, [r2, #6]
 800dc0c:	3301      	adds	r3, #1
 800dc0e:	b29b      	uxth	r3, r3
 800dc10:	e7e0      	b.n	800dbd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800dc12:	2b02      	cmp	r3, #2
 800dc14:	f040 8133 	bne.w	800de7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800dc18:	4b28      	ldr	r3, [pc, #160]	@ (800dcbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800dc1a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800dc1e:	781b      	ldrb	r3, [r3, #0]
 800dc20:	2b01      	cmp	r3, #1
 800dc22:	f000 8098 	beq.w	800dd56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dc26:	882a      	ldrh	r2, [r5, #0]
 800dc28:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800dc2c:	3201      	adds	r2, #1
 800dc2e:	b292      	uxth	r2, r2
 800dc30:	2900      	cmp	r1, #0
 800dc32:	d0c2      	beq.n	800dbba <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dc34:	4694      	mov	ip, r2
 800dc36:	f04f 0900 	mov.w	r9, #0
 800dc3a:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800dc3e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800dc42:	441e      	add	r6, r3
 800dc44:	b236      	sxth	r6, r6
 800dc46:	fa1f f38c 	uxth.w	r3, ip
 800dc4a:	4299      	cmp	r1, r3
 800dc4c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800dc50:	f240 80bf 	bls.w	800ddd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800dc54:	4427      	add	r7, r4
 800dc56:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800dc5a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800dc5e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800dc62:	4283      	cmp	r3, r0
 800dc64:	f340 80a1 	ble.w	800ddaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800dc68:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800dc6c:	46e1      	mov	r9, ip
 800dc6e:	4406      	add	r6, r0
 800dc70:	b236      	sxth	r6, r6
 800dc72:	429e      	cmp	r6, r3
 800dc74:	bfa8      	it	ge
 800dc76:	461e      	movge	r6, r3
 800dc78:	f10c 0c01 	add.w	ip, ip, #1
 800dc7c:	e7e3      	b.n	800dc46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800dc7e:	d10a      	bne.n	800dc96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800dc80:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800dc84:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800dc88:	4562      	cmp	r2, ip
 800dc8a:	bfb8      	it	lt
 800dc8c:	4662      	movlt	r2, ip
 800dc8e:	4288      	cmp	r0, r1
 800dc90:	bfb8      	it	lt
 800dc92:	461f      	movlt	r7, r3
 800dc94:	e087      	b.n	800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dc96:	428a      	cmp	r2, r1
 800dc98:	bfb8      	it	lt
 800dc9a:	460a      	movlt	r2, r1
 800dc9c:	e083      	b.n	800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dc9e:	bf00      	nop
 800dca0:	20082efc 	.word	0x20082efc
 800dca4:	20082f08 	.word	0x20082f08
 800dca8:	20000060 	.word	0x20000060
 800dcac:	20082ec4 	.word	0x20082ec4
 800dcb0:	20082eba 	.word	0x20082eba
 800dcb4:	20082eb8 	.word	0x20082eb8
 800dcb8:	20082ec2 	.word	0x20082ec2
 800dcbc:	20082ebc 	.word	0x20082ebc
 800dcc0:	19a1      	adds	r1, r4, r6
 800dcc2:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800dcc6:	ab07      	add	r3, sp, #28
 800dcc8:	6849      	ldr	r1, [r1, #4]
 800dcca:	c303      	stmia	r3!, {r0, r1}
 800dccc:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dcd0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dcd4:	2b13      	cmp	r3, #19
 800dcd6:	bfd8      	it	le
 800dcd8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800dcdc:	440b      	add	r3, r1
 800dcde:	1a9b      	subs	r3, r3, r2
 800dce0:	a807      	add	r0, sp, #28
 800dce2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dce6:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dcea:	f7ff f809 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dcee:	a807      	add	r0, sp, #28
 800dcf0:	f7fc ffe1 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dcf4:	bb78      	cbnz	r0, 800dd56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dcf6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800dcfa:	f8d9 0000 	ldr.w	r0, [r9]
 800dcfe:	f1bc 0f14 	cmp.w	ip, #20
 800dd02:	bfa8      	it	ge
 800dd04:	f04f 0c14 	movge.w	ip, #20
 800dd08:	f8d0 e000 	ldr.w	lr, [r0]
 800dd0c:	fa1f fc8c 	uxth.w	ip, ip
 800dd10:	f8cd c000 	str.w	ip, [sp]
 800dd14:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800dd18:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dd1c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dd20:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dd24:	47d8      	blx	fp
 800dd26:	4683      	mov	fp, r0
 800dd28:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dd2c:	a807      	add	r0, sp, #28
 800dd2e:	f7fe ffcd 	bl	800cccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dd32:	6823      	ldr	r3, [r4, #0]
 800dd34:	4620      	mov	r0, r4
 800dd36:	4426      	add	r6, r4
 800dd38:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dd3a:	a907      	add	r1, sp, #28
 800dd3c:	4798      	blx	r3
 800dd3e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd42:	eba0 000b 	sub.w	r0, r0, fp
 800dd46:	b200      	sxth	r0, r0
 800dd48:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800dd4c:	b918      	cbnz	r0, 800dd56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd4e:	b2b9      	uxth	r1, r7
 800dd50:	4650      	mov	r0, sl
 800dd52:	f7ff fa79 	bl	800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dd56:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800dd5a:	f1bb 0f00 	cmp.w	fp, #0
 800dd5e:	f43f af2c 	beq.w	800dbba <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dd62:	2700      	movs	r7, #0
 800dd64:	882b      	ldrh	r3, [r5, #0]
 800dd66:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800dd6a:	3301      	adds	r3, #1
 800dd6c:	b29b      	uxth	r3, r3
 800dd6e:	b299      	uxth	r1, r3
 800dd70:	458b      	cmp	fp, r1
 800dd72:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800dd76:	d9a3      	bls.n	800dcc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800dd78:	4426      	add	r6, r4
 800dd7a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800dd7e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd82:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800dd86:	4408      	add	r0, r1
 800dd88:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800dd8c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800dd90:	b200      	sxth	r0, r0
 800dd92:	4461      	add	r1, ip
 800dd94:	b209      	sxth	r1, r1
 800dd96:	4288      	cmp	r0, r1
 800dd98:	f6bf af71 	bge.w	800dc7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800dd9c:	4584      	cmp	ip, r0
 800dd9e:	4662      	mov	r2, ip
 800dda0:	461f      	mov	r7, r3
 800dda2:	bfb8      	it	lt
 800dda4:	4602      	movlt	r2, r0
 800dda6:	3301      	adds	r3, #1
 800dda8:	e7e1      	b.n	800dd6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800ddaa:	d10e      	bne.n	800ddca <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800ddac:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800ddb0:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800ddb4:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800ddb8:	4473      	add	r3, lr
 800ddba:	b21b      	sxth	r3, r3
 800ddbc:	429e      	cmp	r6, r3
 800ddbe:	bfa8      	it	ge
 800ddc0:	461e      	movge	r6, r3
 800ddc2:	4287      	cmp	r7, r0
 800ddc4:	bfb8      	it	lt
 800ddc6:	46e1      	movlt	r9, ip
 800ddc8:	e756      	b.n	800dc78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800ddca:	4286      	cmp	r6, r0
 800ddcc:	bfa8      	it	ge
 800ddce:	4606      	movge	r6, r0
 800ddd0:	e752      	b.n	800dc78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800ddd2:	eb0a 0007 	add.w	r0, sl, r7
 800ddd6:	4427      	add	r7, r4
 800ddd8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800dddc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800dde0:	f1bb 0f13 	cmp.w	fp, #19
 800dde4:	bfde      	ittt	le
 800dde6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800ddea:	445e      	addle	r6, fp
 800ddec:	b236      	sxthle	r6, r6
 800ddee:	f7fc ff62 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ddf2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800ddf6:	2800      	cmp	r0, #0
 800ddf8:	f47f af1a 	bne.w	800dc30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800ddfc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800de00:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de04:	1ab6      	subs	r6, r6, r2
 800de06:	2e14      	cmp	r6, #20
 800de08:	bfa8      	it	ge
 800de0a:	2614      	movge	r6, #20
 800de0c:	4828      	ldr	r0, [pc, #160]	@ (800deb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800de0e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800de12:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800de16:	6800      	ldr	r0, [r0, #0]
 800de18:	f8ad 101c 	strh.w	r1, [sp, #28]
 800de1c:	f8ad 201e 	strh.w	r2, [sp, #30]
 800de20:	f8ad 3020 	strh.w	r3, [sp, #32]
 800de24:	f8d0 c000 	ldr.w	ip, [r0]
 800de28:	b2b6      	uxth	r6, r6
 800de2a:	fa1f fb8b 	uxth.w	fp, fp
 800de2e:	455e      	cmp	r6, fp
 800de30:	bf94      	ite	ls
 800de32:	9600      	strls	r6, [sp, #0]
 800de34:	f8cd b000 	strhi.w	fp, [sp]
 800de38:	b292      	uxth	r2, r2
 800de3a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800de3e:	b29b      	uxth	r3, r3
 800de40:	b289      	uxth	r1, r1
 800de42:	47b0      	blx	r6
 800de44:	6823      	ldr	r3, [r4, #0]
 800de46:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de4c:	a907      	add	r1, sp, #28
 800de4e:	4620      	mov	r0, r4
 800de50:	4798      	blx	r3
 800de52:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800de56:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800de5a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800de5e:	1a5b      	subs	r3, r3, r1
 800de60:	440a      	add	r2, r1
 800de62:	b21b      	sxth	r3, r3
 800de64:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800de68:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800de6c:	2b00      	cmp	r3, #0
 800de6e:	f47f aeda 	bne.w	800dc26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800de72:	fa1f f189 	uxth.w	r1, r9
 800de76:	4650      	mov	r0, sl
 800de78:	f7ff f9e6 	bl	800d248 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800de7c:	e6d3      	b.n	800dc26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800de7e:	882e      	ldrh	r6, [r5, #0]
 800de80:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800de84:	42b3      	cmp	r3, r6
 800de86:	f67f ae98 	bls.w	800dbba <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800de8a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800de8e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800de92:	ab07      	add	r3, sp, #28
 800de94:	6851      	ldr	r1, [r2, #4]
 800de96:	c303      	stmia	r3!, {r0, r1}
 800de98:	a807      	add	r0, sp, #28
 800de9a:	f7fc ff0c 	bl	800acb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de9e:	b920      	cbnz	r0, 800deaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800dea0:	6823      	ldr	r3, [r4, #0]
 800dea2:	a907      	add	r1, sp, #28
 800dea4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dea6:	4620      	mov	r0, r4
 800dea8:	4798      	blx	r3
 800deaa:	3601      	adds	r6, #1
 800deac:	b2b6      	uxth	r6, r6
 800deae:	e7e7      	b.n	800de80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800deb0:	20082ec4 	.word	0x20082ec4

0800deb4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800deb4:	2200      	movs	r2, #0
 800deb6:	4b03      	ldr	r3, [pc, #12]	@ (800dec4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800deb8:	801a      	strh	r2, [r3, #0]
 800deba:	805a      	strh	r2, [r3, #2]
 800debc:	809a      	strh	r2, [r3, #4]
 800debe:	80da      	strh	r2, [r3, #6]
 800dec0:	4770      	bx	lr
 800dec2:	bf00      	nop
 800dec4:	20082f08 	.word	0x20082f08

0800dec8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800dec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800decc:	4606      	mov	r6, r0
 800dece:	b09d      	sub	sp, #116	@ 0x74
 800ded0:	a803      	add	r0, sp, #12
 800ded2:	4614      	mov	r4, r2
 800ded4:	468a      	mov	sl, r1
 800ded6:	461d      	mov	r5, r3
 800ded8:	f001 f8a2 	bl	800f020 <_ZN8touchgfx12TextProviderC1Ev>
 800dedc:	6833      	ldr	r3, [r6, #0]
 800dede:	4630      	mov	r0, r6
 800dee0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dee2:	4798      	blx	r3
 800dee4:	6833      	ldr	r3, [r6, #0]
 800dee6:	4607      	mov	r7, r0
 800dee8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800deea:	4630      	mov	r0, r6
 800deec:	4798      	blx	r3
 800deee:	462a      	mov	r2, r5
 800def0:	2500      	movs	r5, #0
 800def2:	9000      	str	r0, [sp, #0]
 800def4:	4621      	mov	r1, r4
 800def6:	463b      	mov	r3, r7
 800def8:	a803      	add	r0, sp, #12
 800defa:	f001 f8e4 	bl	800f0c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800defe:	462c      	mov	r4, r5
 800df00:	46a9      	mov	r9, r5
 800df02:	46a8      	mov	r8, r5
 800df04:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800df08:	2300      	movs	r3, #0
 800df0a:	9302      	str	r3, [sp, #8]
 800df0c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800df10:	429c      	cmp	r4, r3
 800df12:	d002      	beq.n	800df1a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800df14:	455c      	cmp	r4, fp
 800df16:	bf18      	it	ne
 800df18:	4625      	movne	r5, r4
 800df1a:	ab02      	add	r3, sp, #8
 800df1c:	4632      	mov	r2, r6
 800df1e:	4651      	mov	r1, sl
 800df20:	a803      	add	r0, sp, #12
 800df22:	f001 fbbf 	bl	800f6a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df26:	4604      	mov	r4, r0
 800df28:	b108      	cbz	r0, 800df2e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800df2a:	280a      	cmp	r0, #10
 800df2c:	d10a      	bne.n	800df44 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800df2e:	45c1      	cmp	r9, r8
 800df30:	bf38      	it	cc
 800df32:	46c1      	movcc	r9, r8
 800df34:	f04f 0800 	mov.w	r8, #0
 800df38:	2c00      	cmp	r4, #0
 800df3a:	d1e5      	bne.n	800df08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df3c:	4648      	mov	r0, r9
 800df3e:	b01d      	add	sp, #116	@ 0x74
 800df40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df44:	9a02      	ldr	r2, [sp, #8]
 800df46:	2a00      	cmp	r2, #0
 800df48:	d0de      	beq.n	800df08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df4a:	7b57      	ldrb	r7, [r2, #13]
 800df4c:	6833      	ldr	r3, [r6, #0]
 800df4e:	007f      	lsls	r7, r7, #1
 800df50:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800df54:	7a97      	ldrb	r7, [r2, #10]
 800df56:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800df58:	4307      	orrs	r7, r0
 800df5a:	4629      	mov	r1, r5
 800df5c:	4630      	mov	r0, r6
 800df5e:	8894      	ldrh	r4, [r2, #4]
 800df60:	4798      	blx	r3
 800df62:	4438      	add	r0, r7
 800df64:	4480      	add	r8, r0
 800df66:	fa1f f888 	uxth.w	r8, r8
 800df6a:	e7e5      	b.n	800df38 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800df6c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800df6c:	b508      	push	{r3, lr}
 800df6e:	6803      	ldr	r3, [r0, #0]
 800df70:	68db      	ldr	r3, [r3, #12]
 800df72:	4798      	blx	r3
 800df74:	b128      	cbz	r0, 800df82 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800df76:	7b43      	ldrb	r3, [r0, #13]
 800df78:	7a80      	ldrb	r0, [r0, #10]
 800df7a:	005b      	lsls	r3, r3, #1
 800df7c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800df80:	4318      	orrs	r0, r3
 800df82:	bd08      	pop	{r3, pc}

0800df84 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800df84:	b40e      	push	{r1, r2, r3}
 800df86:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df88:	4605      	mov	r5, r0
 800df8a:	b09e      	sub	sp, #120	@ 0x78
 800df8c:	ab23      	add	r3, sp, #140	@ 0x8c
 800df8e:	f853 4b04 	ldr.w	r4, [r3], #4
 800df92:	a805      	add	r0, sp, #20
 800df94:	9303      	str	r3, [sp, #12]
 800df96:	f001 f843 	bl	800f020 <_ZN8touchgfx12TextProviderC1Ev>
 800df9a:	682b      	ldr	r3, [r5, #0]
 800df9c:	4628      	mov	r0, r5
 800df9e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dfa0:	4798      	blx	r3
 800dfa2:	682b      	ldr	r3, [r5, #0]
 800dfa4:	4606      	mov	r6, r0
 800dfa6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dfa8:	4628      	mov	r0, r5
 800dfaa:	4798      	blx	r3
 800dfac:	4621      	mov	r1, r4
 800dfae:	2400      	movs	r4, #0
 800dfb0:	4633      	mov	r3, r6
 800dfb2:	9000      	str	r0, [sp, #0]
 800dfb4:	9a03      	ldr	r2, [sp, #12]
 800dfb6:	ae1e      	add	r6, sp, #120	@ 0x78
 800dfb8:	a805      	add	r0, sp, #20
 800dfba:	f001 f884 	bl	800f0c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dfbe:	f846 4d68 	str.w	r4, [r6, #-104]!
 800dfc2:	4633      	mov	r3, r6
 800dfc4:	462a      	mov	r2, r5
 800dfc6:	4621      	mov	r1, r4
 800dfc8:	a805      	add	r0, sp, #20
 800dfca:	f001 fb6b 	bl	800f6a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dfce:	b1f0      	cbz	r0, 800e00e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800dfd0:	280a      	cmp	r0, #10
 800dfd2:	d018      	beq.n	800e006 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dfd4:	9f04      	ldr	r7, [sp, #16]
 800dfd6:	b1b7      	cbz	r7, 800e006 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dfd8:	7b78      	ldrb	r0, [r7, #13]
 800dfda:	7a3b      	ldrb	r3, [r7, #8]
 800dfdc:	00c1      	lsls	r1, r0, #3
 800dfde:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800dfe2:	4319      	orrs	r1, r3
 800dfe4:	0643      	lsls	r3, r0, #25
 800dfe6:	bf44      	itt	mi
 800dfe8:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800dfec:	b219      	sxthmi	r1, r3
 800dfee:	0100      	lsls	r0, r0, #4
 800dff0:	79fb      	ldrb	r3, [r7, #7]
 800dff2:	88ea      	ldrh	r2, [r5, #6]
 800dff4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800dff8:	4303      	orrs	r3, r0
 800dffa:	4413      	add	r3, r2
 800dffc:	1a5b      	subs	r3, r3, r1
 800dffe:	b21b      	sxth	r3, r3
 800e000:	429c      	cmp	r4, r3
 800e002:	bfb8      	it	lt
 800e004:	461c      	movlt	r4, r3
 800e006:	4633      	mov	r3, r6
 800e008:	462a      	mov	r2, r5
 800e00a:	2100      	movs	r1, #0
 800e00c:	e7dc      	b.n	800dfc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800e00e:	b2a0      	uxth	r0, r4
 800e010:	b01e      	add	sp, #120	@ 0x78
 800e012:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e016:	b003      	add	sp, #12
 800e018:	4770      	bx	lr

0800e01a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800e01a:	7a43      	ldrb	r3, [r0, #9]
 800e01c:	8880      	ldrh	r0, [r0, #4]
 800e01e:	4418      	add	r0, r3
 800e020:	b280      	uxth	r0, r0
 800e022:	4770      	bx	lr

0800e024 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800e024:	6803      	ldr	r3, [r0, #0]
 800e026:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e028:	4718      	bx	r3

0800e02a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800e02a:	b40e      	push	{r1, r2, r3}
 800e02c:	b570      	push	{r4, r5, r6, lr}
 800e02e:	4604      	mov	r4, r0
 800e030:	b09d      	sub	sp, #116	@ 0x74
 800e032:	ab21      	add	r3, sp, #132	@ 0x84
 800e034:	f853 5b04 	ldr.w	r5, [r3], #4
 800e038:	a803      	add	r0, sp, #12
 800e03a:	9302      	str	r3, [sp, #8]
 800e03c:	f000 fff0 	bl	800f020 <_ZN8touchgfx12TextProviderC1Ev>
 800e040:	6823      	ldr	r3, [r4, #0]
 800e042:	4620      	mov	r0, r4
 800e044:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e046:	4798      	blx	r3
 800e048:	6823      	ldr	r3, [r4, #0]
 800e04a:	4606      	mov	r6, r0
 800e04c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e04e:	4620      	mov	r0, r4
 800e050:	4798      	blx	r3
 800e052:	4633      	mov	r3, r6
 800e054:	9000      	str	r0, [sp, #0]
 800e056:	9a02      	ldr	r2, [sp, #8]
 800e058:	4629      	mov	r1, r5
 800e05a:	a803      	add	r0, sp, #12
 800e05c:	f001 f833 	bl	800f0c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e060:	a803      	add	r0, sp, #12
 800e062:	f001 fba1 	bl	800f7a8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e066:	2401      	movs	r4, #1
 800e068:	b2a3      	uxth	r3, r4
 800e06a:	b140      	cbz	r0, 800e07e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800e06c:	280a      	cmp	r0, #10
 800e06e:	bf08      	it	eq
 800e070:	3301      	addeq	r3, #1
 800e072:	a803      	add	r0, sp, #12
 800e074:	bf08      	it	eq
 800e076:	b21c      	sxtheq	r4, r3
 800e078:	f001 fb96 	bl	800f7a8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e07c:	e7f4      	b.n	800e068 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800e07e:	4618      	mov	r0, r3
 800e080:	b01d      	add	sp, #116	@ 0x74
 800e082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e086:	b003      	add	sp, #12
 800e088:	4770      	bx	lr

0800e08a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e08a:	b40e      	push	{r1, r2, r3}
 800e08c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e08e:	4604      	mov	r4, r0
 800e090:	b09e      	sub	sp, #120	@ 0x78
 800e092:	ab23      	add	r3, sp, #140	@ 0x8c
 800e094:	f853 5b04 	ldr.w	r5, [r3], #4
 800e098:	a805      	add	r0, sp, #20
 800e09a:	9303      	str	r3, [sp, #12]
 800e09c:	f000 ffc0 	bl	800f020 <_ZN8touchgfx12TextProviderC1Ev>
 800e0a0:	6823      	ldr	r3, [r4, #0]
 800e0a2:	4620      	mov	r0, r4
 800e0a4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e0a6:	4798      	blx	r3
 800e0a8:	6823      	ldr	r3, [r4, #0]
 800e0aa:	4606      	mov	r6, r0
 800e0ac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e0ae:	4620      	mov	r0, r4
 800e0b0:	4798      	blx	r3
 800e0b2:	4633      	mov	r3, r6
 800e0b4:	4629      	mov	r1, r5
 800e0b6:	9000      	str	r0, [sp, #0]
 800e0b8:	9a03      	ldr	r2, [sp, #12]
 800e0ba:	a805      	add	r0, sp, #20
 800e0bc:	f001 f803 	bl	800f0c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e0c0:	2100      	movs	r1, #0
 800e0c2:	ad1e      	add	r5, sp, #120	@ 0x78
 800e0c4:	f845 1d68 	str.w	r1, [r5, #-104]!
 800e0c8:	462b      	mov	r3, r5
 800e0ca:	4622      	mov	r2, r4
 800e0cc:	a805      	add	r0, sp, #20
 800e0ce:	f001 fae9 	bl	800f6a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e0d2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800e0d6:	b1d8      	cbz	r0, 800e110 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800e0d8:	280a      	cmp	r0, #10
 800e0da:	d012      	beq.n	800e102 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e0dc:	9804      	ldr	r0, [sp, #16]
 800e0de:	b180      	cbz	r0, 800e102 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e0e0:	7b47      	ldrb	r7, [r0, #13]
 800e0e2:	88e2      	ldrh	r2, [r4, #6]
 800e0e4:	00fb      	lsls	r3, r7, #3
 800e0e6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e0ea:	7a03      	ldrb	r3, [r0, #8]
 800e0ec:	430b      	orrs	r3, r1
 800e0ee:	0679      	lsls	r1, r7, #25
 800e0f0:	bf44      	itt	mi
 800e0f2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e0f6:	b21b      	sxthmi	r3, r3
 800e0f8:	1ad3      	subs	r3, r2, r3
 800e0fa:	b21b      	sxth	r3, r3
 800e0fc:	429e      	cmp	r6, r3
 800e0fe:	bfa8      	it	ge
 800e100:	461e      	movge	r6, r3
 800e102:	462b      	mov	r3, r5
 800e104:	4622      	mov	r2, r4
 800e106:	2100      	movs	r1, #0
 800e108:	a805      	add	r0, sp, #20
 800e10a:	f001 facb 	bl	800f6a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e10e:	e7e2      	b.n	800e0d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800e110:	4630      	mov	r0, r6
 800e112:	b01e      	add	sp, #120	@ 0x78
 800e114:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e118:	b003      	add	sp, #12
 800e11a:	4770      	bx	lr

0800e11c <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e11c:	b513      	push	{r0, r1, r4, lr}
 800e11e:	2400      	movs	r4, #0
 800e120:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e124:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e128:	6803      	ldr	r3, [r0, #0]
 800e12a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e12e:	9400      	str	r4, [sp, #0]
 800e130:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e134:	691b      	ldr	r3, [r3, #16]
 800e136:	4669      	mov	r1, sp
 800e138:	4798      	blx	r3
 800e13a:	b002      	add	sp, #8
 800e13c:	bd10      	pop	{r4, pc}

0800e13e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e13e:	b538      	push	{r3, r4, r5, lr}
 800e140:	460c      	mov	r4, r1
 800e142:	4605      	mov	r5, r0
 800e144:	680b      	ldr	r3, [r1, #0]
 800e146:	68db      	ldr	r3, [r3, #12]
 800e148:	4798      	blx	r3
 800e14a:	6823      	ldr	r3, [r4, #0]
 800e14c:	4620      	mov	r0, r4
 800e14e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e150:	4629      	mov	r1, r5
 800e152:	4798      	blx	r3
 800e154:	4628      	mov	r0, r5
 800e156:	bd38      	pop	{r3, r4, r5, pc}

0800e158 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e158:	b410      	push	{r4}
 800e15a:	880a      	ldrh	r2, [r1, #0]
 800e15c:	8884      	ldrh	r4, [r0, #4]
 800e15e:	4422      	add	r2, r4
 800e160:	800a      	strh	r2, [r1, #0]
 800e162:	88c4      	ldrh	r4, [r0, #6]
 800e164:	884a      	ldrh	r2, [r1, #2]
 800e166:	4422      	add	r2, r4
 800e168:	804a      	strh	r2, [r1, #2]
 800e16a:	6940      	ldr	r0, [r0, #20]
 800e16c:	b120      	cbz	r0, 800e178 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e16e:	6803      	ldr	r3, [r0, #0]
 800e170:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e176:	4718      	bx	r3
 800e178:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e17c:	4770      	bx	lr

0800e17e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e17e:	b570      	push	{r4, r5, r6, lr}
 800e180:	460c      	mov	r4, r1
 800e182:	8882      	ldrh	r2, [r0, #4]
 800e184:	880b      	ldrh	r3, [r1, #0]
 800e186:	4605      	mov	r5, r0
 800e188:	4413      	add	r3, r2
 800e18a:	800b      	strh	r3, [r1, #0]
 800e18c:	88c2      	ldrh	r2, [r0, #6]
 800e18e:	884b      	ldrh	r3, [r1, #2]
 800e190:	4413      	add	r3, r2
 800e192:	804b      	strh	r3, [r1, #2]
 800e194:	1d01      	adds	r1, r0, #4
 800e196:	4620      	mov	r0, r4
 800e198:	f7fc fd4a 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800e19c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1a0:	2b00      	cmp	r3, #0
 800e1a2:	dd0b      	ble.n	800e1bc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1a4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1a8:	2b00      	cmp	r3, #0
 800e1aa:	dd07      	ble.n	800e1bc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1ac:	6968      	ldr	r0, [r5, #20]
 800e1ae:	b128      	cbz	r0, 800e1bc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1b0:	6803      	ldr	r3, [r0, #0]
 800e1b2:	4621      	mov	r1, r4
 800e1b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e1ba:	4718      	bx	r3
 800e1bc:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e1c0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e1c0:	b570      	push	{r4, r5, r6, lr}
 800e1c2:	460c      	mov	r4, r1
 800e1c4:	8882      	ldrh	r2, [r0, #4]
 800e1c6:	880b      	ldrh	r3, [r1, #0]
 800e1c8:	4605      	mov	r5, r0
 800e1ca:	4413      	add	r3, r2
 800e1cc:	800b      	strh	r3, [r1, #0]
 800e1ce:	88c2      	ldrh	r2, [r0, #6]
 800e1d0:	884b      	ldrh	r3, [r1, #2]
 800e1d2:	4413      	add	r3, r2
 800e1d4:	804b      	strh	r3, [r1, #2]
 800e1d6:	1d01      	adds	r1, r0, #4
 800e1d8:	4620      	mov	r0, r4
 800e1da:	f7fc fd29 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800e1de:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1e2:	2b00      	cmp	r3, #0
 800e1e4:	dd19      	ble.n	800e21a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1e6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1ea:	2b00      	cmp	r3, #0
 800e1ec:	dd15      	ble.n	800e21a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1ee:	6968      	ldr	r0, [r5, #20]
 800e1f0:	b128      	cbz	r0, 800e1fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e1f2:	6803      	ldr	r3, [r0, #0]
 800e1f4:	4621      	mov	r1, r4
 800e1f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1fa:	691b      	ldr	r3, [r3, #16]
 800e1fc:	4718      	bx	r3
 800e1fe:	4b07      	ldr	r3, [pc, #28]	@ (800e21c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e200:	681b      	ldr	r3, [r3, #0]
 800e202:	3304      	adds	r3, #4
 800e204:	429d      	cmp	r5, r3
 800e206:	d108      	bne.n	800e21a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e208:	f7fe ff12 	bl	800d030 <_ZN8touchgfx11Application11getInstanceEv>
 800e20c:	6803      	ldr	r3, [r0, #0]
 800e20e:	6821      	ldr	r1, [r4, #0]
 800e210:	6862      	ldr	r2, [r4, #4]
 800e212:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e214:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e218:	4718      	bx	r3
 800e21a:	bd70      	pop	{r4, r5, r6, pc}
 800e21c:	20082f00 	.word	0x20082f00

0800e220 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e220:	b570      	push	{r4, r5, r6, lr}
 800e222:	4604      	mov	r4, r0
 800e224:	4616      	mov	r6, r2
 800e226:	460d      	mov	r5, r1
 800e228:	b901      	cbnz	r1, 800e22c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e22a:	b192      	cbz	r2, 800e252 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e22c:	6823      	ldr	r3, [r4, #0]
 800e22e:	4620      	mov	r0, r4
 800e230:	699b      	ldr	r3, [r3, #24]
 800e232:	4798      	blx	r3
 800e234:	88e2      	ldrh	r2, [r4, #6]
 800e236:	88a1      	ldrh	r1, [r4, #4]
 800e238:	4432      	add	r2, r6
 800e23a:	4429      	add	r1, r5
 800e23c:	4620      	mov	r0, r4
 800e23e:	b212      	sxth	r2, r2
 800e240:	b209      	sxth	r1, r1
 800e242:	f7f5 f840 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 800e246:	6823      	ldr	r3, [r4, #0]
 800e248:	4620      	mov	r0, r4
 800e24a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e24e:	699b      	ldr	r3, [r3, #24]
 800e250:	4718      	bx	r3
 800e252:	bd70      	pop	{r4, r5, r6, pc}

0800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e254:	b510      	push	{r4, lr}
 800e256:	2300      	movs	r3, #0
 800e258:	4604      	mov	r4, r0
 800e25a:	4608      	mov	r0, r1
 800e25c:	8023      	strh	r3, [r4, #0]
 800e25e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e262:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e266:	8063      	strh	r3, [r4, #2]
 800e268:	6803      	ldr	r3, [r0, #0]
 800e26a:	80a1      	strh	r1, [r4, #4]
 800e26c:	80e2      	strh	r2, [r4, #6]
 800e26e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e270:	4621      	mov	r1, r4
 800e272:	4798      	blx	r3
 800e274:	4620      	mov	r0, r4
 800e276:	bd10      	pop	{r4, pc}

0800e278 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 800e278:	4770      	bx	lr

0800e27a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 800e27a:	b510      	push	{r4, lr}
 800e27c:	4604      	mov	r4, r0
 800e27e:	211c      	movs	r1, #28
 800e280:	f022 ff41 	bl	8031106 <_ZdlPvj>
 800e284:	4620      	mov	r0, r4
 800e286:	bd10      	pop	{r4, pc}

0800e288 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 800e288:	4a04      	ldr	r2, [pc, #16]	@ (800e29c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 800e28a:	6002      	str	r2, [r0, #0]
 800e28c:	2200      	movs	r2, #0
 800e28e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e292:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e296:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e29a:	4770      	bx	lr
 800e29c:	08035b58 	.word	0x08035b58

0800e2a0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 800e2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2a4:	4604      	mov	r4, r0
 800e2a6:	4696      	mov	lr, r2
 800e2a8:	8b22      	ldrh	r2, [r4, #24]
 800e2aa:	b087      	sub	sp, #28
 800e2ac:	9105      	str	r1, [sp, #20]
 800e2ae:	1c51      	adds	r1, r2, #1
 800e2b0:	6880      	ldr	r0, [r0, #8]
 800e2b2:	8321      	strh	r1, [r4, #24]
 800e2b4:	2101      	movs	r1, #1
 800e2b6:	5481      	strb	r1, [r0, r2]
 800e2b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e2bc:	8b60      	ldrh	r0, [r4, #26]
 800e2be:	ee06 2a90 	vmov	s13, r2
 800e2c2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e2c6:	68e2      	ldr	r2, [r4, #12]
 800e2c8:	1845      	adds	r5, r0, r1
 800e2ca:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e2ce:	8365      	strh	r5, [r4, #26]
 800e2d0:	edc2 6a00 	vstr	s13, [r2]
 800e2d4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e2d8:	8b60      	ldrh	r0, [r4, #26]
 800e2da:	ee07 2a10 	vmov	s14, r2
 800e2de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e2e2:	68e2      	ldr	r2, [r4, #12]
 800e2e4:	1845      	adds	r5, r0, r1
 800e2e6:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e2ea:	8365      	strh	r5, [r4, #26]
 800e2ec:	ed82 7a00 	vstr	s14, [r2]
 800e2f0:	f8be 2000 	ldrh.w	r2, [lr]
 800e2f4:	1d18      	adds	r0, r3, #4
 800e2f6:	9203      	str	r2, [sp, #12]
 800e2f8:	2200      	movs	r2, #0
 800e2fa:	4689      	mov	r9, r1
 800e2fc:	4613      	mov	r3, r2
 800e2fe:	4694      	mov	ip, r2
 800e300:	460d      	mov	r5, r1
 800e302:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800e306:	9201      	str	r2, [sp, #4]
 800e308:	9202      	str	r2, [sp, #8]
 800e30a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 800e30e:	9e05      	ldr	r6, [sp, #20]
 800e310:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800e314:	f108 0701 	add.w	r7, r8, #1
 800e318:	428e      	cmp	r6, r1
 800e31a:	b2bf      	uxth	r7, r7
 800e31c:	eb0a 0b08 	add.w	fp, sl, r8
 800e320:	f340 80b6 	ble.w	800e490 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 800e324:	9b03      	ldr	r3, [sp, #12]
 800e326:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e32a:	fa43 fb05 	asr.w	fp, r3, r5
 800e32e:	f00b 0b01 	and.w	fp, fp, #1
 800e332:	fa5f f38b 	uxtb.w	r3, fp
 800e336:	9304      	str	r3, [sp, #16]
 800e338:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e33c:	f1bb 0f00 	cmp.w	fp, #0
 800e340:	d057      	beq.n	800e3f2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 800e342:	ee07 ca90 	vmov	s15, ip
 800e346:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 800e34a:	ee07 3a90 	vmov	s15, r3
 800e34e:	8327      	strh	r7, [r4, #24]
 800e350:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e354:	f1b9 0f00 	cmp.w	r9, #0
 800e358:	d028      	beq.n	800e3ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 800e35a:	f04f 0602 	mov.w	r6, #2
 800e35e:	f80a 6008 	strb.w	r6, [sl, r8]
 800e362:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e366:	68e7      	ldr	r7, [r4, #12]
 800e368:	f108 0901 	add.w	r9, r8, #1
 800e36c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e370:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e374:	edc7 5a00 	vstr	s11, [r7]
 800e378:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e37c:	68e7      	ldr	r7, [r4, #12]
 800e37e:	f108 0901 	add.w	r9, r8, #1
 800e382:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e386:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e38a:	edc7 7a00 	vstr	s15, [r7]
 800e38e:	3501      	adds	r5, #1
 800e390:	2d10      	cmp	r5, #16
 800e392:	d106      	bne.n	800e3a2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 800e394:	9d02      	ldr	r5, [sp, #8]
 800e396:	3501      	adds	r5, #1
 800e398:	9502      	str	r5, [sp, #8]
 800e39a:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 800e39e:	9503      	str	r5, [sp, #12]
 800e3a0:	2500      	movs	r5, #0
 800e3a2:	3101      	adds	r1, #1
 800e3a4:	3004      	adds	r0, #4
 800e3a6:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e3aa:	e7ae      	b.n	800e30a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 800e3ac:	ed9d 5a01 	vldr	s10, [sp, #4]
 800e3b0:	f04f 0605 	mov.w	r6, #5
 800e3b4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e3b8:	f80a 6008 	strb.w	r6, [sl, r8]
 800e3bc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3c0:	68e7      	ldr	r7, [r4, #12]
 800e3c2:	f108 0901 	add.w	r9, r8, #1
 800e3c6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3ca:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3ce:	ed87 5a00 	vstr	s10, [r7]
 800e3d2:	ee05 2a10 	vmov	s10, r2
 800e3d6:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e3da:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3de:	68e7      	ldr	r7, [r4, #12]
 800e3e0:	f108 0901 	add.w	r9, r8, #1
 800e3e4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3e8:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3ec:	ed87 5a00 	vstr	s10, [r7]
 800e3f0:	e7b7      	b.n	800e362 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 800e3f2:	f1b9 0f00 	cmp.w	r9, #0
 800e3f6:	d147      	bne.n	800e488 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 800e3f8:	eddd 7a01 	vldr	s15, [sp, #4]
 800e3fc:	f04f 0605 	mov.w	r6, #5
 800e400:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e404:	8327      	strh	r7, [r4, #24]
 800e406:	f80a 6008 	strb.w	r6, [sl, r8]
 800e40a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e40e:	68e7      	ldr	r7, [r4, #12]
 800e410:	f108 0901 	add.w	r9, r8, #1
 800e414:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e418:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e41c:	edc7 7a00 	vstr	s15, [r7]
 800e420:	ee07 2a90 	vmov	s15, r2
 800e424:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e428:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e42c:	68e7      	ldr	r7, [r4, #12]
 800e42e:	9e01      	ldr	r6, [sp, #4]
 800e430:	f108 0901 	add.w	r9, r8, #1
 800e434:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e438:	4466      	add	r6, ip
 800e43a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e43e:	edc7 7a00 	vstr	s15, [r7]
 800e442:	ee07 6a90 	vmov	s15, r6
 800e446:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e44a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e44e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e452:	68e7      	ldr	r7, [r4, #12]
 800e454:	f108 0901 	add.w	r9, r8, #1
 800e458:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e45c:	441a      	add	r2, r3
 800e45e:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e462:	edc7 7a00 	vstr	s15, [r7]
 800e466:	ee07 2a90 	vmov	s15, r2
 800e46a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e46e:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e472:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e476:	68e7      	ldr	r7, [r4, #12]
 800e478:	f108 0901 	add.w	r9, r8, #1
 800e47c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e480:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e484:	edc7 7a00 	vstr	s15, [r7]
 800e488:	461a      	mov	r2, r3
 800e48a:	f8cd c004 	str.w	ip, [sp, #4]
 800e48e:	e77e      	b.n	800e38e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 800e490:	f1b9 0f00 	cmp.w	r9, #0
 800e494:	d028      	beq.n	800e4e8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e496:	ee07 ca90 	vmov	s15, ip
 800e49a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e49e:	eef4 6a67 	vcmp.f32	s13, s15
 800e4a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4a6:	d108      	bne.n	800e4ba <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 800e4a8:	ee07 3a90 	vmov	s15, r3
 800e4ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4b0:	eeb4 7a67 	vcmp.f32	s14, s15
 800e4b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4b8:	d016      	beq.n	800e4e8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e4ba:	2302      	movs	r3, #2
 800e4bc:	8327      	strh	r7, [r4, #24]
 800e4be:	f88b 3000 	strb.w	r3, [fp]
 800e4c2:	8b62      	ldrh	r2, [r4, #26]
 800e4c4:	68e3      	ldr	r3, [r4, #12]
 800e4c6:	1c51      	adds	r1, r2, #1
 800e4c8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e4cc:	8361      	strh	r1, [r4, #26]
 800e4ce:	edc3 6a00 	vstr	s13, [r3]
 800e4d2:	8b62      	ldrh	r2, [r4, #26]
 800e4d4:	68e3      	ldr	r3, [r4, #12]
 800e4d6:	1c51      	adds	r1, r2, #1
 800e4d8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e4dc:	8361      	strh	r1, [r4, #26]
 800e4de:	ed83 7a00 	vstr	s14, [r3]
 800e4e2:	b007      	add	sp, #28
 800e4e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4e8:	eddd 7a01 	vldr	s15, [sp, #4]
 800e4ec:	2305      	movs	r3, #5
 800e4ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4f2:	8327      	strh	r7, [r4, #24]
 800e4f4:	f88b 3000 	strb.w	r3, [fp]
 800e4f8:	8b61      	ldrh	r1, [r4, #26]
 800e4fa:	68e3      	ldr	r3, [r4, #12]
 800e4fc:	1c4d      	adds	r5, r1, #1
 800e4fe:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e502:	8365      	strh	r5, [r4, #26]
 800e504:	edc3 7a00 	vstr	s15, [r3]
 800e508:	ee07 2a90 	vmov	s15, r2
 800e50c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e510:	8b61      	ldrh	r1, [r4, #26]
 800e512:	68e3      	ldr	r3, [r4, #12]
 800e514:	1c4d      	adds	r5, r1, #1
 800e516:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e51a:	8365      	strh	r5, [r4, #26]
 800e51c:	edc3 7a00 	vstr	s15, [r3]
 800e520:	e7cf      	b.n	800e4c2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

0800e524 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 800e524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e528:	b08e      	sub	sp, #56	@ 0x38
 800e52a:	4604      	mov	r4, r0
 800e52c:	4688      	mov	r8, r1
 800e52e:	4615      	mov	r5, r2
 800e530:	4699      	mov	r9, r3
 800e532:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 800e534:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 800e538:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 800e53a:	f7f4 fb6f 	bl	8002c1c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 800e53e:	6060      	str	r0, [r4, #4]
 800e540:	f1b9 0f00 	cmp.w	r9, #0
 800e544:	f000 80e8 	beq.w	800e718 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e548:	2800      	cmp	r0, #0
 800e54a:	f000 80e5 	beq.w	800e718 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e54e:	a805      	add	r0, sp, #20
 800e550:	f000 f8f9 	bl	800e746 <_ZN8touchgfx9Matrix3x3C1Ev>
 800e554:	6833      	ldr	r3, [r6, #0]
 800e556:	4630      	mov	r0, r6
 800e558:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800e55a:	4798      	blx	r3
 800e55c:	a805      	add	r0, sp, #20
 800e55e:	eef0 0a40 	vmov.f32	s1, s0
 800e562:	f000 f8f4 	bl	800e74e <_ZN8touchgfx9Matrix3x35scaleEff>
 800e566:	6860      	ldr	r0, [r4, #4]
 800e568:	f1ba 0f03 	cmp.w	sl, #3
 800e56c:	d83b      	bhi.n	800e5e6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 800e56e:	e8df f00a 	tbb	[pc, sl]
 800e572:	1002      	.short	0x1002
 800e574:	9f71      	.short	0x9f71
 800e576:	6803      	ldr	r3, [r0, #0]
 800e578:	462a      	mov	r2, r5
 800e57a:	689b      	ldr	r3, [r3, #8]
 800e57c:	4641      	mov	r1, r8
 800e57e:	4798      	blx	r3
 800e580:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e584:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e588:	ee07 7a90 	vmov	s15, r7
 800e58c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800e590:	e026      	b.n	800e5e0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 800e592:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800e596:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e59a:	8869      	ldrh	r1, [r5, #2]
 800e59c:	1a9b      	subs	r3, r3, r2
 800e59e:	1a5b      	subs	r3, r3, r1
 800e5a0:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e5a4:	882b      	ldrh	r3, [r5, #0]
 800e5a6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e5aa:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e5ae:	88ab      	ldrh	r3, [r5, #4]
 800e5b0:	aa03      	add	r2, sp, #12
 800e5b2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e5b6:	6803      	ldr	r3, [r0, #0]
 800e5b8:	4641      	mov	r1, r8
 800e5ba:	689b      	ldr	r3, [r3, #8]
 800e5bc:	4798      	blx	r3
 800e5be:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 800e720 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 800e5c2:	a805      	add	r0, sp, #20
 800e5c4:	f000 f8e8 	bl	800e798 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e5c8:	ee07 7a90 	vmov	s15, r7
 800e5cc:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e5d0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e5d2:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e5d6:	1a9b      	subs	r3, r3, r2
 800e5d8:	ee00 3a10 	vmov	s0, r3
 800e5dc:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800e5e0:	a805      	add	r0, sp, #20
 800e5e2:	f000 f927 	bl	800e834 <_ZN8touchgfx9Matrix3x39translateEff>
 800e5e6:	2500      	movs	r5, #0
 800e5e8:	6860      	ldr	r0, [r4, #4]
 800e5ea:	a905      	add	r1, sp, #20
 800e5ec:	6803      	ldr	r3, [r0, #0]
 800e5ee:	f109 0602 	add.w	r6, r9, #2
 800e5f2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e5f4:	4798      	blx	r3
 800e5f6:	6860      	ldr	r0, [r4, #4]
 800e5f8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e5fa:	6803      	ldr	r3, [r0, #0]
 800e5fc:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 800e600:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e602:	4798      	blx	r3
 800e604:	6860      	ldr	r0, [r4, #4]
 800e606:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 800e60a:	6803      	ldr	r3, [r0, #0]
 800e60c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e60e:	4798      	blx	r3
 800e610:	6860      	ldr	r0, [r4, #4]
 800e612:	2101      	movs	r1, #1
 800e614:	6803      	ldr	r3, [r0, #0]
 800e616:	68db      	ldr	r3, [r3, #12]
 800e618:	4798      	blx	r3
 800e61a:	f8b9 7000 	ldrh.w	r7, [r9]
 800e61e:	f104 0310 	add.w	r3, r4, #16
 800e622:	61a5      	str	r5, [r4, #24]
 800e624:	f104 0208 	add.w	r2, r4, #8
 800e628:	f104 0114 	add.w	r1, r4, #20
 800e62c:	f104 000c 	add.w	r0, r4, #12
 800e630:	f7f5 f8b8 	bl	80037a4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 800e634:	42af      	cmp	r7, r5
 800e636:	dd60      	ble.n	800e6fa <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 800e638:	8831      	ldrh	r1, [r6, #0]
 800e63a:	1cb2      	adds	r2, r6, #2
 800e63c:	f101 030f 	add.w	r3, r1, #15
 800e640:	f3c3 1307 	ubfx	r3, r3, #4, #8
 800e644:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e648:	4620      	mov	r0, r4
 800e64a:	f7ff fe29 	bl	800e2a0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 800e64e:	3501      	adds	r5, #1
 800e650:	4606      	mov	r6, r0
 800e652:	e7ef      	b.n	800e634 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 800e654:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e658:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e65c:	8829      	ldrh	r1, [r5, #0]
 800e65e:	1a9b      	subs	r3, r3, r2
 800e660:	1a5b      	subs	r3, r3, r1
 800e662:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e666:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e66a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e66e:	886d      	ldrh	r5, [r5, #2]
 800e670:	1a5b      	subs	r3, r3, r1
 800e672:	1b5b      	subs	r3, r3, r5
 800e674:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e678:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e67c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e680:	6803      	ldr	r3, [r0, #0]
 800e682:	aa03      	add	r2, sp, #12
 800e684:	689b      	ldr	r3, [r3, #8]
 800e686:	4641      	mov	r1, r8
 800e688:	4798      	blx	r3
 800e68a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 800e724 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 800e68e:	a805      	add	r0, sp, #20
 800e690:	f000 f882 	bl	800e798 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e694:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e698:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e69a:	1a9b      	subs	r3, r3, r2
 800e69c:	ee00 3a90 	vmov	s1, r3
 800e6a0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e6a4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e6a8:	1bdb      	subs	r3, r3, r7
 800e6aa:	ee00 3a10 	vmov	s0, r3
 800e6ae:	e795      	b.n	800e5dc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 800e6b0:	886b      	ldrh	r3, [r5, #2]
 800e6b2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e6b6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e6ba:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e6be:	8829      	ldrh	r1, [r5, #0]
 800e6c0:	1a9b      	subs	r3, r3, r2
 800e6c2:	1a5b      	subs	r3, r3, r1
 800e6c4:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e6c8:	88eb      	ldrh	r3, [r5, #6]
 800e6ca:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e6ce:	f8ad 3010 	strh.w	r3, [sp, #16]
 800e6d2:	6803      	ldr	r3, [r0, #0]
 800e6d4:	aa03      	add	r2, sp, #12
 800e6d6:	689b      	ldr	r3, [r3, #8]
 800e6d8:	4641      	mov	r1, r8
 800e6da:	4798      	blx	r3
 800e6dc:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 800e728 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 800e6e0:	a805      	add	r0, sp, #20
 800e6e2:	f000 f859 	bl	800e798 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e6e6:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e6ea:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e6ee:	1bdb      	subs	r3, r3, r7
 800e6f0:	ee00 3a90 	vmov	s1, r3
 800e6f4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e6f8:	e748      	b.n	800e58c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 800e6fa:	2100      	movs	r1, #0
 800e6fc:	6860      	ldr	r0, [r4, #4]
 800e6fe:	8b22      	ldrh	r2, [r4, #24]
 800e700:	6803      	ldr	r3, [r0, #0]
 800e702:	9101      	str	r1, [sp, #4]
 800e704:	8b61      	ldrh	r1, [r4, #26]
 800e706:	9100      	str	r1, [sp, #0]
 800e708:	6a1d      	ldr	r5, [r3, #32]
 800e70a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 800e70e:	47a8      	blx	r5
 800e710:	6860      	ldr	r0, [r4, #4]
 800e712:	6803      	ldr	r3, [r0, #0]
 800e714:	69db      	ldr	r3, [r3, #28]
 800e716:	4798      	blx	r3
 800e718:	b00e      	add	sp, #56	@ 0x38
 800e71a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e71e:	bf00      	nop
 800e720:	42b40000 	.word	0x42b40000
 800e724:	43340000 	.word	0x43340000
 800e728:	43870000 	.word	0x43870000

0800e72c <_ZN8touchgfx9Matrix3x35resetEv>:
 800e72c:	2300      	movs	r3, #0
 800e72e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e732:	6043      	str	r3, [r0, #4]
 800e734:	6002      	str	r2, [r0, #0]
 800e736:	6083      	str	r3, [r0, #8]
 800e738:	60c3      	str	r3, [r0, #12]
 800e73a:	6102      	str	r2, [r0, #16]
 800e73c:	6143      	str	r3, [r0, #20]
 800e73e:	6183      	str	r3, [r0, #24]
 800e740:	61c3      	str	r3, [r0, #28]
 800e742:	6202      	str	r2, [r0, #32]
 800e744:	4770      	bx	lr

0800e746 <_ZN8touchgfx9Matrix3x3C1Ev>:
 800e746:	b508      	push	{r3, lr}
 800e748:	f7ff fff0 	bl	800e72c <_ZN8touchgfx9Matrix3x35resetEv>
 800e74c:	bd08      	pop	{r3, pc}

0800e74e <_ZN8touchgfx9Matrix3x35scaleEff>:
 800e74e:	edd0 7a00 	vldr	s15, [r0]
 800e752:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e756:	edc0 7a00 	vstr	s15, [r0]
 800e75a:	edd0 7a01 	vldr	s15, [r0, #4]
 800e75e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e762:	edc0 7a01 	vstr	s15, [r0, #4]
 800e766:	edd0 7a02 	vldr	s15, [r0, #8]
 800e76a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800e76e:	edd0 7a03 	vldr	s15, [r0, #12]
 800e772:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e776:	edc0 7a03 	vstr	s15, [r0, #12]
 800e77a:	edd0 7a04 	vldr	s15, [r0, #16]
 800e77e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e782:	edc0 7a04 	vstr	s15, [r0, #16]
 800e786:	edd0 7a05 	vldr	s15, [r0, #20]
 800e78a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800e78e:	ed80 0a02 	vstr	s0, [r0, #8]
 800e792:	edc0 0a05 	vstr	s1, [r0, #20]
 800e796:	4770      	bx	lr

0800e798 <_ZN8touchgfx9Matrix3x36rotateEf>:
 800e798:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800e82c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 800e79c:	ee20 0a27 	vmul.f32	s0, s0, s15
 800e7a0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 800e830 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 800e7a4:	b510      	push	{r4, lr}
 800e7a6:	ed2d 8b02 	vpush	{d8}
 800e7aa:	eec0 8a27 	vdiv.f32	s17, s0, s15
 800e7ae:	eeb0 0a68 	vmov.f32	s0, s17
 800e7b2:	4604      	mov	r4, r0
 800e7b4:	f022 fe0e 	bl	80313d4 <cosf>
 800e7b8:	eeb0 8a40 	vmov.f32	s16, s0
 800e7bc:	eeb0 0a68 	vmov.f32	s0, s17
 800e7c0:	f022 fe54 	bl	803146c <sinf>
 800e7c4:	edd4 6a03 	vldr	s13, [r4, #12]
 800e7c8:	edd4 4a00 	vldr	s9, [r4]
 800e7cc:	ee60 7a66 	vnmul.f32	s15, s0, s13
 800e7d0:	ed94 7a04 	vldr	s14, [r4, #16]
 800e7d4:	eee8 7a24 	vfma.f32	s15, s16, s9
 800e7d8:	ed94 5a01 	vldr	s10, [r4, #4]
 800e7dc:	edc4 7a00 	vstr	s15, [r4]
 800e7e0:	ee60 7a47 	vnmul.f32	s15, s0, s14
 800e7e4:	eee8 7a05 	vfma.f32	s15, s16, s10
 800e7e8:	edc4 7a01 	vstr	s15, [r4, #4]
 800e7ec:	edd4 7a05 	vldr	s15, [r4, #20]
 800e7f0:	edd4 5a02 	vldr	s11, [r4, #8]
 800e7f4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 800e7f8:	ee66 6a88 	vmul.f32	s13, s13, s16
 800e7fc:	ee27 7a08 	vmul.f32	s14, s14, s16
 800e800:	ee67 7a88 	vmul.f32	s15, s15, s16
 800e804:	eea8 6a25 	vfma.f32	s12, s16, s11
 800e808:	ecbd 8b02 	vpop	{d8}
 800e80c:	eee0 6a24 	vfma.f32	s13, s0, s9
 800e810:	eea0 7a05 	vfma.f32	s14, s0, s10
 800e814:	eee0 7a25 	vfma.f32	s15, s0, s11
 800e818:	ed84 6a02 	vstr	s12, [r4, #8]
 800e81c:	edc4 6a03 	vstr	s13, [r4, #12]
 800e820:	ed84 7a04 	vstr	s14, [r4, #16]
 800e824:	edc4 7a05 	vstr	s15, [r4, #20]
 800e828:	bd10      	pop	{r4, pc}
 800e82a:	bf00      	nop
 800e82c:	40490fdb 	.word	0x40490fdb
 800e830:	43340000 	.word	0x43340000

0800e834 <_ZN8touchgfx9Matrix3x39translateEff>:
 800e834:	ed90 6a06 	vldr	s12, [r0, #24]
 800e838:	edd0 7a00 	vldr	s15, [r0]
 800e83c:	eee6 7a00 	vfma.f32	s15, s12, s0
 800e840:	edd0 6a07 	vldr	s13, [r0, #28]
 800e844:	edc0 7a00 	vstr	s15, [r0]
 800e848:	edd0 7a01 	vldr	s15, [r0, #4]
 800e84c:	eee6 7a80 	vfma.f32	s15, s13, s0
 800e850:	ed90 7a08 	vldr	s14, [r0, #32]
 800e854:	edc0 7a01 	vstr	s15, [r0, #4]
 800e858:	edd0 7a02 	vldr	s15, [r0, #8]
 800e85c:	eee7 7a00 	vfma.f32	s15, s14, s0
 800e860:	edc0 7a02 	vstr	s15, [r0, #8]
 800e864:	edd0 7a03 	vldr	s15, [r0, #12]
 800e868:	eee6 7a20 	vfma.f32	s15, s12, s1
 800e86c:	edc0 7a03 	vstr	s15, [r0, #12]
 800e870:	edd0 7a04 	vldr	s15, [r0, #16]
 800e874:	eee6 7aa0 	vfma.f32	s15, s13, s1
 800e878:	edc0 7a04 	vstr	s15, [r0, #16]
 800e87c:	edd0 7a05 	vldr	s15, [r0, #20]
 800e880:	eee7 7a20 	vfma.f32	s15, s14, s1
 800e884:	edc0 7a05 	vstr	s15, [r0, #20]
 800e888:	4770      	bx	lr

0800e88a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>:
 800e88a:	ed91 0a01 	vldr	s0, [r1, #4]
 800e88e:	edd0 6a01 	vldr	s13, [r0, #4]
 800e892:	edd0 0a04 	vldr	s1, [r0, #16]
 800e896:	edd1 7a00 	vldr	s15, [r1]
 800e89a:	ed90 7a03 	vldr	s14, [r0, #12]
 800e89e:	ee60 0a20 	vmul.f32	s1, s0, s1
 800e8a2:	ee20 0a26 	vmul.f32	s0, s0, s13
 800e8a6:	edd0 6a00 	vldr	s13, [r0]
 800e8aa:	eee7 0a27 	vfma.f32	s1, s14, s15
 800e8ae:	eea6 0aa7 	vfma.f32	s0, s13, s15
 800e8b2:	ed90 7a05 	vldr	s14, [r0, #20]
 800e8b6:	edd0 7a02 	vldr	s15, [r0, #8]
 800e8ba:	ee70 0a87 	vadd.f32	s1, s1, s14
 800e8be:	ee30 0a27 	vadd.f32	s0, s0, s15
 800e8c2:	b084      	sub	sp, #16
 800e8c4:	b004      	add	sp, #16
 800e8c6:	4770      	bx	lr

0800e8c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800e8c8:	b530      	push	{r4, r5, lr}
 800e8ca:	8083      	strh	r3, [r0, #4]
 800e8cc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e8d0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e8d4:	80c3      	strh	r3, [r0, #6]
 800e8d6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800e8da:	6141      	str	r1, [r0, #20]
 800e8dc:	7203      	strb	r3, [r0, #8]
 800e8de:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e8e2:	8302      	strh	r2, [r0, #24]
 800e8e4:	7243      	strb	r3, [r0, #9]
 800e8e6:	7a83      	ldrb	r3, [r0, #10]
 800e8e8:	f365 0306 	bfi	r3, r5, #0, #7
 800e8ec:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800e8f0:	f365 13c7 	bfi	r3, r5, #7, #1
 800e8f4:	7283      	strb	r3, [r0, #10]
 800e8f6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800e8fa:	72c3      	strb	r3, [r0, #11]
 800e8fc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800e900:	7303      	strb	r3, [r0, #12]
 800e902:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800e906:	81c3      	strh	r3, [r0, #14]
 800e908:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e90c:	8203      	strh	r3, [r0, #16]
 800e90e:	4b01      	ldr	r3, [pc, #4]	@ (800e914 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800e910:	6003      	str	r3, [r0, #0]
 800e912:	bd30      	pop	{r4, r5, pc}
 800e914:	08035b6c 	.word	0x08035b6c

0800e918 <_ZNK8touchgfx9ConstFont4findEt>:
 800e918:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e91a:	6944      	ldr	r4, [r0, #20]
 800e91c:	b3bc      	cbz	r4, 800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e91e:	88a3      	ldrh	r3, [r4, #4]
 800e920:	8b02      	ldrh	r2, [r0, #24]
 800e922:	1acb      	subs	r3, r1, r3
 800e924:	f102 32ff 	add.w	r2, r2, #4294967295
 800e928:	d431      	bmi.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e92a:	4293      	cmp	r3, r2
 800e92c:	dd0c      	ble.n	800e948 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e92e:	230e      	movs	r3, #14
 800e930:	fb03 4302 	mla	r3, r3, r2, r4
 800e934:	889b      	ldrh	r3, [r3, #4]
 800e936:	1a5b      	subs	r3, r3, r1
 800e938:	1ad3      	subs	r3, r2, r3
 800e93a:	429a      	cmp	r2, r3
 800e93c:	db27      	blt.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e93e:	2b00      	cmp	r3, #0
 800e940:	bfbc      	itt	lt
 800e942:	2302      	movlt	r3, #2
 800e944:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e948:	2500      	movs	r5, #0
 800e94a:	260e      	movs	r6, #14
 800e94c:	4295      	cmp	r5, r2
 800e94e:	dc1e      	bgt.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e950:	fb06 4003 	mla	r0, r6, r3, r4
 800e954:	8887      	ldrh	r7, [r0, #4]
 800e956:	42b9      	cmp	r1, r7
 800e958:	d01a      	beq.n	800e990 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e95a:	d20d      	bcs.n	800e978 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e95c:	1e5a      	subs	r2, r3, #1
 800e95e:	4295      	cmp	r5, r2
 800e960:	dc15      	bgt.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e962:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e966:	1a5b      	subs	r3, r3, r1
 800e968:	1ad3      	subs	r3, r2, r3
 800e96a:	429a      	cmp	r2, r3
 800e96c:	db0f      	blt.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e96e:	429d      	cmp	r5, r3
 800e970:	ddec      	ble.n	800e94c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e972:	1953      	adds	r3, r2, r5
 800e974:	105b      	asrs	r3, r3, #1
 800e976:	e7e9      	b.n	800e94c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e978:	1c5d      	adds	r5, r3, #1
 800e97a:	42aa      	cmp	r2, r5
 800e97c:	db07      	blt.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e97e:	8a43      	ldrh	r3, [r0, #18]
 800e980:	1acb      	subs	r3, r1, r3
 800e982:	442b      	add	r3, r5
 800e984:	429d      	cmp	r5, r3
 800e986:	dc02      	bgt.n	800e98e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e988:	429a      	cmp	r2, r3
 800e98a:	dadf      	bge.n	800e94c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e98c:	e7f1      	b.n	800e972 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e98e:	2000      	movs	r0, #0
 800e990:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e992 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e992:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e994:	4604      	mov	r4, r0
 800e996:	4617      	mov	r7, r2
 800e998:	461e      	mov	r6, r3
 800e99a:	b911      	cbnz	r1, 800e9a2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e99c:	2500      	movs	r5, #0
 800e99e:	4628      	mov	r0, r5
 800e9a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9a2:	290a      	cmp	r1, #10
 800e9a4:	d0fa      	beq.n	800e99c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9a6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e9aa:	4291      	cmp	r1, r2
 800e9ac:	d0f6      	beq.n	800e99c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9ae:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e9b2:	4291      	cmp	r1, r2
 800e9b4:	d0f2      	beq.n	800e99c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9b6:	f7ff ffaf 	bl	800e918 <_ZNK8touchgfx9ConstFont4findEt>
 800e9ba:	4605      	mov	r5, r0
 800e9bc:	b950      	cbnz	r0, 800e9d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e9be:	6823      	ldr	r3, [r4, #0]
 800e9c0:	4620      	mov	r0, r4
 800e9c2:	691b      	ldr	r3, [r3, #16]
 800e9c4:	4798      	blx	r3
 800e9c6:	4601      	mov	r1, r0
 800e9c8:	4620      	mov	r0, r4
 800e9ca:	f7ff ffa5 	bl	800e918 <_ZNK8touchgfx9ConstFont4findEt>
 800e9ce:	4605      	mov	r5, r0
 800e9d0:	2800      	cmp	r0, #0
 800e9d2:	d0e3      	beq.n	800e99c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9d4:	6823      	ldr	r3, [r4, #0]
 800e9d6:	4629      	mov	r1, r5
 800e9d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800e9da:	4620      	mov	r0, r4
 800e9dc:	4798      	blx	r3
 800e9de:	6038      	str	r0, [r7, #0]
 800e9e0:	6823      	ldr	r3, [r4, #0]
 800e9e2:	4620      	mov	r0, r4
 800e9e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e9e6:	4798      	blx	r3
 800e9e8:	7030      	strb	r0, [r6, #0]
 800e9ea:	e7d8      	b.n	800e99e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e9ec <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800e9ec:	2000      	movs	r0, #0
 800e9ee:	4770      	bx	lr

0800e9f0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800e9f0:	2001      	movs	r0, #1
 800e9f2:	4770      	bx	lr

0800e9f4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800e9f4:	2002      	movs	r0, #2
 800e9f6:	4770      	bx	lr

0800e9f8 <_ZN8touchgfx6ScreenD1Ev>:
 800e9f8:	4770      	bx	lr

0800e9fa <_ZN8touchgfx12GestureEventD1Ev>:
 800e9fa:	4770      	bx	lr

0800e9fc <_ZN8touchgfx9DragEventD1Ev>:
 800e9fc:	4770      	bx	lr

0800e9fe <_ZN8touchgfx10ClickEventD1Ev>:
 800e9fe:	4770      	bx	lr

0800ea00 <_ZN8touchgfx10ClickEventD0Ev>:
 800ea00:	b510      	push	{r4, lr}
 800ea02:	4604      	mov	r4, r0
 800ea04:	210c      	movs	r1, #12
 800ea06:	f022 fb7e 	bl	8031106 <_ZdlPvj>
 800ea0a:	4620      	mov	r0, r4
 800ea0c:	bd10      	pop	{r4, pc}

0800ea0e <_ZN8touchgfx9DragEventD0Ev>:
 800ea0e:	b510      	push	{r4, lr}
 800ea10:	4604      	mov	r4, r0
 800ea12:	2110      	movs	r1, #16
 800ea14:	f022 fb77 	bl	8031106 <_ZdlPvj>
 800ea18:	4620      	mov	r0, r4
 800ea1a:	bd10      	pop	{r4, pc}

0800ea1c <_ZN8touchgfx12GestureEventD0Ev>:
 800ea1c:	b510      	push	{r4, lr}
 800ea1e:	4604      	mov	r4, r0
 800ea20:	210c      	movs	r1, #12
 800ea22:	f022 fb70 	bl	8031106 <_ZdlPvj>
 800ea26:	4620      	mov	r0, r4
 800ea28:	bd10      	pop	{r4, pc}

0800ea2a <_ZN8touchgfx6ScreenD0Ev>:
 800ea2a:	b510      	push	{r4, lr}
 800ea2c:	4604      	mov	r4, r0
 800ea2e:	213c      	movs	r1, #60	@ 0x3c
 800ea30:	f022 fb69 	bl	8031106 <_ZdlPvj>
 800ea34:	4620      	mov	r0, r4
 800ea36:	bd10      	pop	{r4, pc}

0800ea38 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ea38:	b530      	push	{r4, r5, lr}
 800ea3a:	460d      	mov	r5, r1
 800ea3c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800ea3e:	b087      	sub	sp, #28
 800ea40:	4604      	mov	r4, r0
 800ea42:	b301      	cbz	r1, 800ea86 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ea44:	a801      	add	r0, sp, #4
 800ea46:	f7ff fc05 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea4a:	892a      	ldrh	r2, [r5, #8]
 800ea4c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ea50:	7928      	ldrb	r0, [r5, #4]
 800ea52:	1ad2      	subs	r2, r2, r3
 800ea54:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800ea56:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ea5a:	441a      	add	r2, r3
 800ea5c:	896b      	ldrh	r3, [r5, #10]
 800ea5e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800ea62:	f88d 0010 	strb.w	r0, [sp, #16]
 800ea66:	1b5b      	subs	r3, r3, r5
 800ea68:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800ea6a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800ea6c:	442b      	add	r3, r5
 800ea6e:	4d07      	ldr	r5, [pc, #28]	@ (800ea8c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800ea70:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ea74:	9503      	str	r5, [sp, #12]
 800ea76:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ea7a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ea7e:	6803      	ldr	r3, [r0, #0]
 800ea80:	a903      	add	r1, sp, #12
 800ea82:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ea84:	4798      	blx	r3
 800ea86:	b007      	add	sp, #28
 800ea88:	bd30      	pop	{r4, r5, pc}
 800ea8a:	bf00      	nop
 800ea8c:	08035bfc 	.word	0x08035bfc

0800ea90 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800ea90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea94:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800ea96:	b08a      	sub	sp, #40	@ 0x28
 800ea98:	4604      	mov	r4, r0
 800ea9a:	460d      	mov	r5, r1
 800ea9c:	b113      	cbz	r3, 800eaa4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800ea9e:	790b      	ldrb	r3, [r1, #4]
 800eaa0:	2b00      	cmp	r3, #0
 800eaa2:	d044      	beq.n	800eb2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eaa4:	f104 0804 	add.w	r8, r4, #4
 800eaa8:	4641      	mov	r1, r8
 800eaaa:	a803      	add	r0, sp, #12
 800eaac:	f7ff fbd2 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eab0:	792b      	ldrb	r3, [r5, #4]
 800eab2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800eab6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800eaba:	b983      	cbnz	r3, 800eade <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800eabc:	892a      	ldrh	r2, [r5, #8]
 800eabe:	88e9      	ldrh	r1, [r5, #6]
 800eac0:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800eac4:	1b92      	subs	r2, r2, r6
 800eac6:	1bc9      	subs	r1, r1, r7
 800eac8:	9301      	str	r3, [sp, #4]
 800eaca:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800eace:	9300      	str	r3, [sp, #0]
 800ead0:	b212      	sxth	r2, r2
 800ead2:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800ead6:	b209      	sxth	r1, r1
 800ead8:	4640      	mov	r0, r8
 800eada:	f7fb ffc9 	bl	800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800eade:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800eae0:	b329      	cbz	r1, 800eb2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eae2:	a805      	add	r0, sp, #20
 800eae4:	f7ff fbb6 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eae8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800eaec:	792b      	ldrb	r3, [r5, #4]
 800eaee:	1abf      	subs	r7, r7, r2
 800eaf0:	88ea      	ldrh	r2, [r5, #6]
 800eaf2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800eaf4:	4417      	add	r7, r2
 800eaf6:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800eaf8:	f88d 3020 	strb.w	r3, [sp, #32]
 800eafc:	4417      	add	r7, r2
 800eafe:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800eb02:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800eb06:	1ab6      	subs	r6, r6, r2
 800eb08:	892a      	ldrh	r2, [r5, #8]
 800eb0a:	a907      	add	r1, sp, #28
 800eb0c:	4416      	add	r6, r2
 800eb0e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800eb10:	4416      	add	r6, r2
 800eb12:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800eb16:	2600      	movs	r6, #0
 800eb18:	4a06      	ldr	r2, [pc, #24]	@ (800eb34 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800eb1a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800eb1e:	9207      	str	r2, [sp, #28]
 800eb20:	6803      	ldr	r3, [r0, #0]
 800eb22:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800eb24:	4798      	blx	r3
 800eb26:	792b      	ldrb	r3, [r5, #4]
 800eb28:	b10b      	cbz	r3, 800eb2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eb2a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800eb2e:	b00a      	add	sp, #40	@ 0x28
 800eb30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb34:	08035bd4 	.word	0x08035bd4

0800eb38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800eb38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb3c:	460c      	mov	r4, r1
 800eb3e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800eb40:	b088      	sub	sp, #32
 800eb42:	4605      	mov	r5, r0
 800eb44:	2900      	cmp	r1, #0
 800eb46:	d06d      	beq.n	800ec24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800eb48:	4668      	mov	r0, sp
 800eb4a:	f7ff fb83 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb4e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800eb50:	88e3      	ldrh	r3, [r4, #6]
 800eb52:	f9bd 8000 	ldrsh.w	r8, [sp]
 800eb56:	440b      	add	r3, r1
 800eb58:	b21b      	sxth	r3, r3
 800eb5a:	4543      	cmp	r3, r8
 800eb5c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800eb60:	db31      	blt.n	800ebc6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb62:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800eb66:	44c4      	add	ip, r8
 800eb68:	fa0f fc8c 	sxth.w	ip, ip
 800eb6c:	4563      	cmp	r3, ip
 800eb6e:	da2a      	bge.n	800ebc6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb70:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800eb72:	8926      	ldrh	r6, [r4, #8]
 800eb74:	4416      	add	r6, r2
 800eb76:	b236      	sxth	r6, r6
 800eb78:	42be      	cmp	r6, r7
 800eb7a:	db24      	blt.n	800ebc6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb7c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800eb80:	4438      	add	r0, r7
 800eb82:	b200      	sxth	r0, r0
 800eb84:	4286      	cmp	r6, r0
 800eb86:	da1e      	bge.n	800ebc6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb88:	8963      	ldrh	r3, [r4, #10]
 800eb8a:	4419      	add	r1, r3
 800eb8c:	b209      	sxth	r1, r1
 800eb8e:	4541      	cmp	r1, r8
 800eb90:	db08      	blt.n	800eba4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800eb92:	4561      	cmp	r1, ip
 800eb94:	da06      	bge.n	800eba4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800eb96:	89a3      	ldrh	r3, [r4, #12]
 800eb98:	441a      	add	r2, r3
 800eb9a:	b212      	sxth	r2, r2
 800eb9c:	42ba      	cmp	r2, r7
 800eb9e:	db01      	blt.n	800eba4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800eba0:	4282      	cmp	r2, r0
 800eba2:	db10      	blt.n	800ebc6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eba4:	4b21      	ldr	r3, [pc, #132]	@ (800ec2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800eba6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800eba8:	9304      	str	r3, [sp, #16]
 800ebaa:	2302      	movs	r3, #2
 800ebac:	f88d 3014 	strb.w	r3, [sp, #20]
 800ebb0:	2300      	movs	r3, #0
 800ebb2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ebb6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ebba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ebbe:	6803      	ldr	r3, [r0, #0]
 800ebc0:	a904      	add	r1, sp, #16
 800ebc2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ebc4:	4798      	blx	r3
 800ebc6:	1d29      	adds	r1, r5, #4
 800ebc8:	a802      	add	r0, sp, #8
 800ebca:	f7ff fb43 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ebce:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ebd2:	88e0      	ldrh	r0, [r4, #6]
 800ebd4:	eba3 0808 	sub.w	r8, r3, r8
 800ebd8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ebdc:	7921      	ldrb	r1, [r4, #4]
 800ebde:	1bdf      	subs	r7, r3, r7
 800ebe0:	b2bb      	uxth	r3, r7
 800ebe2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800ebe6:	fa1f f888 	uxth.w	r8, r8
 800ebea:	8922      	ldrh	r2, [r4, #8]
 800ebec:	8967      	ldrh	r7, [r4, #10]
 800ebee:	89a4      	ldrh	r4, [r4, #12]
 800ebf0:	4440      	add	r0, r8
 800ebf2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800ebf4:	4460      	add	r0, ip
 800ebf6:	441a      	add	r2, r3
 800ebf8:	44b8      	add	r8, r7
 800ebfa:	4423      	add	r3, r4
 800ebfc:	4c0c      	ldr	r4, [pc, #48]	@ (800ec30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800ebfe:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ec02:	4433      	add	r3, r6
 800ec04:	4432      	add	r2, r6
 800ec06:	44e0      	add	r8, ip
 800ec08:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ec0a:	f88d 1014 	strb.w	r1, [sp, #20]
 800ec0e:	9404      	str	r4, [sp, #16]
 800ec10:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ec14:	f8ad 801a 	strh.w	r8, [sp, #26]
 800ec18:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ec1c:	6803      	ldr	r3, [r0, #0]
 800ec1e:	a904      	add	r1, sp, #16
 800ec20:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ec22:	4798      	blx	r3
 800ec24:	b008      	add	sp, #32
 800ec26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec2a:	bf00      	nop
 800ec2c:	08035bd4 	.word	0x08035bd4
 800ec30:	08035be8 	.word	0x08035be8

0800ec34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ec34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec36:	4604      	mov	r4, r0
 800ec38:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ec3c:	3201      	adds	r2, #1
 800ec3e:	d112      	bne.n	800ec66 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ec40:	2500      	movs	r5, #0
 800ec42:	9500      	str	r5, [sp, #0]
 800ec44:	466d      	mov	r5, sp
 800ec46:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ec4a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ec4e:	6803      	ldr	r3, [r0, #0]
 800ec50:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ec54:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ec58:	4629      	mov	r1, r5
 800ec5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ec5c:	4798      	blx	r3
 800ec5e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ec62:	e884 0003 	stmia.w	r4, {r0, r1}
 800ec66:	4620      	mov	r0, r4
 800ec68:	b003      	add	sp, #12
 800ec6a:	bd30      	pop	{r4, r5, pc}

0800ec6c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ec6c:	b513      	push	{r0, r1, r4, lr}
 800ec6e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ec72:	4604      	mov	r4, r0
 800ec74:	3301      	adds	r3, #1
 800ec76:	d109      	bne.n	800ec8c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ec78:	4601      	mov	r1, r0
 800ec7a:	4668      	mov	r0, sp
 800ec7c:	f7ff faea 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec80:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec84:	8423      	strh	r3, [r4, #32]
 800ec86:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ec8a:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ec8c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ec90:	b002      	add	sp, #8
 800ec92:	bd10      	pop	{r4, pc}

0800ec94 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ec94:	b513      	push	{r0, r1, r4, lr}
 800ec96:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800ec9a:	4604      	mov	r4, r0
 800ec9c:	3301      	adds	r3, #1
 800ec9e:	d109      	bne.n	800ecb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800eca0:	4601      	mov	r1, r0
 800eca2:	4668      	mov	r0, sp
 800eca4:	f7ff fad6 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eca8:	f8bd 3000 	ldrh.w	r3, [sp]
 800ecac:	8423      	strh	r3, [r4, #32]
 800ecae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ecb2:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ecb4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800ecb8:	b002      	add	sp, #8
 800ecba:	bd10      	pop	{r4, pc}

0800ecbc <_ZN8touchgfx6ScreenC1Ev>:
 800ecbc:	b570      	push	{r4, r5, r6, lr}
 800ecbe:	4605      	mov	r5, r0
 800ecc0:	4b16      	ldr	r3, [pc, #88]	@ (800ed1c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800ecc2:	2101      	movs	r1, #1
 800ecc4:	f845 3b04 	str.w	r3, [r5], #4
 800ecc8:	2300      	movs	r3, #0
 800ecca:	4604      	mov	r4, r0
 800eccc:	8103      	strh	r3, [r0, #8]
 800ecce:	8143      	strh	r3, [r0, #10]
 800ecd0:	8183      	strh	r3, [r0, #12]
 800ecd2:	81c3      	strh	r3, [r0, #14]
 800ecd4:	8203      	strh	r3, [r0, #16]
 800ecd6:	8243      	strh	r3, [r0, #18]
 800ecd8:	8283      	strh	r3, [r0, #20]
 800ecda:	82c3      	strh	r3, [r0, #22]
 800ecdc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800ece0:	6203      	str	r3, [r0, #32]
 800ece2:	8483      	strh	r3, [r0, #36]	@ 0x24
 800ece4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ece6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800ecea:	4a0d      	ldr	r2, [pc, #52]	@ (800ed20 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ecec:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800ecf0:	6343      	str	r3, [r0, #52]	@ 0x34
 800ecf2:	4b0c      	ldr	r3, [pc, #48]	@ (800ed24 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ecf4:	6042      	str	r2, [r0, #4]
 800ecf6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ecfa:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800ecfc:	4a0a      	ldr	r2, [pc, #40]	@ (800ed28 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ecfe:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800ed02:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800ed06:	f9b2 1000 	ldrsh.w	r1, [r2]
 800ed0a:	4628      	mov	r0, r5
 800ed0c:	4798      	blx	r3
 800ed0e:	6863      	ldr	r3, [r4, #4]
 800ed10:	4628      	mov	r0, r5
 800ed12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ed14:	4631      	mov	r1, r6
 800ed16:	4798      	blx	r3
 800ed18:	4620      	mov	r0, r4
 800ed1a:	bd70      	pop	{r4, r5, r6, pc}
 800ed1c:	08035c10 	.word	0x08035c10
 800ed20:	080358f8 	.word	0x080358f8
 800ed24:	20082eba 	.word	0x20082eba
 800ed28:	20082eb8 	.word	0x20082eb8

0800ed2c <_ZN8touchgfx6Screen4drawEv>:
 800ed2c:	b507      	push	{r0, r1, r2, lr}
 800ed2e:	2100      	movs	r1, #0
 800ed30:	4b08      	ldr	r3, [pc, #32]	@ (800ed54 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ed32:	9100      	str	r1, [sp, #0]
 800ed34:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed38:	4b07      	ldr	r3, [pc, #28]	@ (800ed58 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800ed3a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ed3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ed42:	4669      	mov	r1, sp
 800ed44:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ed48:	6803      	ldr	r3, [r0, #0]
 800ed4a:	689b      	ldr	r3, [r3, #8]
 800ed4c:	4798      	blx	r3
 800ed4e:	b003      	add	sp, #12
 800ed50:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed54:	20082eb8 	.word	0x20082eb8
 800ed58:	20082eba 	.word	0x20082eba

0800ed5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800ed5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed60:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ed64:	b089      	sub	sp, #36	@ 0x24
 800ed66:	2b00      	cmp	r3, #0
 800ed68:	4680      	mov	r8, r0
 800ed6a:	460c      	mov	r4, r1
 800ed6c:	4615      	mov	r5, r2
 800ed6e:	dd0e      	ble.n	800ed8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ed70:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ed74:	2b00      	cmp	r3, #0
 800ed76:	dd0a      	ble.n	800ed8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ed78:	4628      	mov	r0, r5
 800ed7a:	f7ff ff5b 	bl	800ec34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ed7e:	4621      	mov	r1, r4
 800ed80:	f7fe f877 	bl	800ce72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ed84:	69eb      	ldr	r3, [r5, #28]
 800ed86:	b928      	cbnz	r0, 800ed94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800ed88:	461d      	mov	r5, r3
 800ed8a:	2b00      	cmp	r3, #0
 800ed8c:	d1f4      	bne.n	800ed78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800ed8e:	b009      	add	sp, #36	@ 0x24
 800ed90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed94:	ae04      	add	r6, sp, #16
 800ed96:	2b00      	cmp	r3, #0
 800ed98:	f000 80b5 	beq.w	800ef06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ed9c:	682b      	ldr	r3, [r5, #0]
 800ed9e:	4629      	mov	r1, r5
 800eda0:	68db      	ldr	r3, [r3, #12]
 800eda2:	a802      	add	r0, sp, #8
 800eda4:	4798      	blx	r3
 800eda6:	4628      	mov	r0, r5
 800eda8:	f7ff ff60 	bl	800ec6c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800edac:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800edb0:	4407      	add	r7, r0
 800edb2:	4628      	mov	r0, r5
 800edb4:	f7ff ff6e 	bl	800ec94 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800edb8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800edbc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800edc0:	4418      	add	r0, r3
 800edc2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800edc6:	4621      	mov	r1, r4
 800edc8:	f8ad 0012 	strh.w	r0, [sp, #18]
 800edcc:	b23f      	sxth	r7, r7
 800edce:	4630      	mov	r0, r6
 800edd0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800edd4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800edd8:	f8ad 7010 	strh.w	r7, [sp, #16]
 800eddc:	f7fb ff28 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800ede0:	4628      	mov	r0, r5
 800ede2:	f7ff ff27 	bl	800ec34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ede6:	4602      	mov	r2, r0
 800ede8:	e896 0003 	ldmia.w	r6, {r0, r1}
 800edec:	ab06      	add	r3, sp, #24
 800edee:	e883 0003 	stmia.w	r3, {r0, r1}
 800edf2:	4611      	mov	r1, r2
 800edf4:	4618      	mov	r0, r3
 800edf6:	f7fb ff1b 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800edfa:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800edfe:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ee02:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800ee06:	4299      	cmp	r1, r3
 800ee08:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800ee0c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800ee10:	d10b      	bne.n	800ee2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee12:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee16:	4552      	cmp	r2, sl
 800ee18:	d107      	bne.n	800ee2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee1a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800ee1e:	455a      	cmp	r2, fp
 800ee20:	d103      	bne.n	800ee2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee22:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ee26:	454a      	cmp	r2, r9
 800ee28:	d06d      	beq.n	800ef06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ee2a:	f1bb 0f00 	cmp.w	fp, #0
 800ee2e:	dd65      	ble.n	800eefc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee30:	f1b9 0f00 	cmp.w	r9, #0
 800ee34:	dd62      	ble.n	800eefc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee36:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee3a:	fa1f f08a 	uxth.w	r0, sl
 800ee3e:	4552      	cmp	r2, sl
 800ee40:	9000      	str	r0, [sp, #0]
 800ee42:	da12      	bge.n	800ee6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800ee44:	9301      	str	r3, [sp, #4]
 800ee46:	9b00      	ldr	r3, [sp, #0]
 800ee48:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ee4c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ee50:	1a9a      	subs	r2, r3, r2
 800ee52:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ee56:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ee5a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ee5e:	69ea      	ldr	r2, [r5, #28]
 800ee60:	4631      	mov	r1, r6
 800ee62:	4640      	mov	r0, r8
 800ee64:	f7ff ff7a 	bl	800ed5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee68:	9b01      	ldr	r3, [sp, #4]
 800ee6a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800ee6e:	b29f      	uxth	r7, r3
 800ee70:	429a      	cmp	r2, r3
 800ee72:	da0d      	bge.n	800ee90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800ee74:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ee78:	1aba      	subs	r2, r7, r2
 800ee7a:	f8ad a012 	strh.w	sl, [sp, #18]
 800ee7e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ee82:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ee86:	69ea      	ldr	r2, [r5, #28]
 800ee88:	4631      	mov	r1, r6
 800ee8a:	4640      	mov	r0, r8
 800ee8c:	f7ff ff66 	bl	800ed5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee90:	8822      	ldrh	r2, [r4, #0]
 800ee92:	88a3      	ldrh	r3, [r4, #4]
 800ee94:	445f      	add	r7, fp
 800ee96:	4413      	add	r3, r2
 800ee98:	b29b      	uxth	r3, r3
 800ee9a:	b2bf      	uxth	r7, r7
 800ee9c:	b23a      	sxth	r2, r7
 800ee9e:	b219      	sxth	r1, r3
 800eea0:	4291      	cmp	r1, r2
 800eea2:	dd0d      	ble.n	800eec0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800eea4:	1bdb      	subs	r3, r3, r7
 800eea6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800eeaa:	f8ad a012 	strh.w	sl, [sp, #18]
 800eeae:	f8ad 3014 	strh.w	r3, [sp, #20]
 800eeb2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800eeb6:	69ea      	ldr	r2, [r5, #28]
 800eeb8:	4631      	mov	r1, r6
 800eeba:	4640      	mov	r0, r8
 800eebc:	f7ff ff4e 	bl	800ed5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eec0:	88e2      	ldrh	r2, [r4, #6]
 800eec2:	8863      	ldrh	r3, [r4, #2]
 800eec4:	4413      	add	r3, r2
 800eec6:	9a00      	ldr	r2, [sp, #0]
 800eec8:	b29b      	uxth	r3, r3
 800eeca:	444a      	add	r2, r9
 800eecc:	fa1f f982 	uxth.w	r9, r2
 800eed0:	fa0f f289 	sxth.w	r2, r9
 800eed4:	b219      	sxth	r1, r3
 800eed6:	428a      	cmp	r2, r1
 800eed8:	da15      	bge.n	800ef06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800eeda:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800eede:	f9b4 0000 	ldrsh.w	r0, [r4]
 800eee2:	eba3 0309 	sub.w	r3, r3, r9
 800eee6:	f8ad 1014 	strh.w	r1, [sp, #20]
 800eeea:	f8ad 0010 	strh.w	r0, [sp, #16]
 800eeee:	f8ad 2012 	strh.w	r2, [sp, #18]
 800eef2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eef6:	69ea      	ldr	r2, [r5, #28]
 800eef8:	4631      	mov	r1, r6
 800eefa:	e001      	b.n	800ef00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800eefc:	4621      	mov	r1, r4
 800eefe:	69ea      	ldr	r2, [r5, #28]
 800ef00:	4640      	mov	r0, r8
 800ef02:	f7ff ff2b 	bl	800ed5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef06:	4628      	mov	r0, r5
 800ef08:	f7ff fe94 	bl	800ec34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ef0c:	4633      	mov	r3, r6
 800ef0e:	4602      	mov	r2, r0
 800ef10:	6861      	ldr	r1, [r4, #4]
 800ef12:	6820      	ldr	r0, [r4, #0]
 800ef14:	c303      	stmia	r3!, {r0, r1}
 800ef16:	4611      	mov	r1, r2
 800ef18:	4630      	mov	r0, r6
 800ef1a:	f7fb fe89 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800ef1e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ef22:	2b00      	cmp	r3, #0
 800ef24:	f77f af33 	ble.w	800ed8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef28:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	f77f af2e 	ble.w	800ed8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef32:	4628      	mov	r0, r5
 800ef34:	f7ff fe9a 	bl	800ec6c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ef38:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800ef3c:	1a18      	subs	r0, r3, r0
 800ef3e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ef42:	4628      	mov	r0, r5
 800ef44:	f7ff fea6 	bl	800ec94 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ef48:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ef4c:	4631      	mov	r1, r6
 800ef4e:	1a18      	subs	r0, r3, r0
 800ef50:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ef54:	682b      	ldr	r3, [r5, #0]
 800ef56:	4628      	mov	r0, r5
 800ef58:	689b      	ldr	r3, [r3, #8]
 800ef5a:	4798      	blx	r3
 800ef5c:	e717      	b.n	800ed8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800ef5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800ef5e:	b570      	push	{r4, r5, r6, lr}
 800ef60:	2300      	movs	r3, #0
 800ef62:	460c      	mov	r4, r1
 800ef64:	b086      	sub	sp, #24
 800ef66:	1d06      	adds	r6, r0, #4
 800ef68:	4631      	mov	r1, r6
 800ef6a:	4605      	mov	r5, r0
 800ef6c:	a802      	add	r0, sp, #8
 800ef6e:	9301      	str	r3, [sp, #4]
 800ef70:	f7ff f970 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef74:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ef78:	8822      	ldrh	r2, [r4, #0]
 800ef7a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800ef7e:	1ad2      	subs	r2, r2, r3
 800ef80:	8863      	ldrh	r3, [r4, #2]
 800ef82:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ef86:	1a5b      	subs	r3, r3, r1
 800ef88:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800ef8c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ef90:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ef94:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ef98:	aa01      	add	r2, sp, #4
 800ef9a:	a904      	add	r1, sp, #16
 800ef9c:	4630      	mov	r0, r6
 800ef9e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800efa2:	f7fb ff1d 	bl	800ade0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800efa6:	9a01      	ldr	r2, [sp, #4]
 800efa8:	b11a      	cbz	r2, 800efb2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800efaa:	4621      	mov	r1, r4
 800efac:	4628      	mov	r0, r5
 800efae:	f7ff fed5 	bl	800ed5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800efb2:	b006      	add	sp, #24
 800efb4:	bd70      	pop	{r4, r5, r6, pc}

0800efb6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800efb6:	b530      	push	{r4, r5, lr}
 800efb8:	4602      	mov	r2, r0
 800efba:	b085      	sub	sp, #20
 800efbc:	460d      	mov	r5, r1
 800efbe:	466b      	mov	r3, sp
 800efc0:	4604      	mov	r4, r0
 800efc2:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800efc6:	6851      	ldr	r1, [r2, #4]
 800efc8:	c303      	stmia	r3!, {r0, r1}
 800efca:	4629      	mov	r1, r5
 800efcc:	4668      	mov	r0, sp
 800efce:	f7fb fe2f 	bl	800ac30 <_ZN8touchgfx4RectaNERKS0_>
 800efd2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800efd6:	b12b      	cbz	r3, 800efe4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800efd8:	4669      	mov	r1, sp
 800efda:	4620      	mov	r0, r4
 800efdc:	f7ff ffbf 	bl	800ef5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800efe0:	b005      	add	sp, #20
 800efe2:	bd30      	pop	{r4, r5, pc}
 800efe4:	3404      	adds	r4, #4
 800efe6:	4621      	mov	r1, r4
 800efe8:	a802      	add	r0, sp, #8
 800efea:	f7ff f933 	bl	800e254 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800efee:	f8bd 3000 	ldrh.w	r3, [sp]
 800eff2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800eff6:	4669      	mov	r1, sp
 800eff8:	1a9b      	subs	r3, r3, r2
 800effa:	f8ad 3000 	strh.w	r3, [sp]
 800effe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f002:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f006:	4620      	mov	r0, r4
 800f008:	1a9b      	subs	r3, r3, r2
 800f00a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f00e:	f7fb feae 	bl	800ad6e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f012:	e7e5      	b.n	800efe0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f014 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f014:	460b      	mov	r3, r1
 800f016:	680a      	ldr	r2, [r1, #0]
 800f018:	1d01      	adds	r1, r0, #4
 800f01a:	6992      	ldr	r2, [r2, #24]
 800f01c:	4618      	mov	r0, r3
 800f01e:	4710      	bx	r2

0800f020 <_ZN8touchgfx12TextProviderC1Ev>:
 800f020:	b538      	push	{r3, r4, r5, lr}
 800f022:	2500      	movs	r5, #0
 800f024:	2302      	movs	r3, #2
 800f026:	4604      	mov	r4, r0
 800f028:	e9c0 5500 	strd	r5, r5, [r0]
 800f02c:	7403      	strb	r3, [r0, #16]
 800f02e:	6145      	str	r5, [r0, #20]
 800f030:	7605      	strb	r5, [r0, #24]
 800f032:	83c5      	strh	r5, [r0, #30]
 800f034:	8405      	strh	r5, [r0, #32]
 800f036:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f038:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f03a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f03c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f040:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f044:	220e      	movs	r2, #14
 800f046:	4629      	mov	r1, r5
 800f048:	304c      	adds	r0, #76	@ 0x4c
 800f04a:	f023 fc3c 	bl	80328c6 <memset>
 800f04e:	2301      	movs	r3, #1
 800f050:	4620      	mov	r0, r4
 800f052:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f056:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f05a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f05e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f062:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f066:	f7f4 fb4b 	bl	8003700 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f06a:	4620      	mov	r0, r4
 800f06c:	bd38      	pop	{r3, r4, r5, pc}

0800f06e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f06e:	b530      	push	{r4, r5, lr}
 800f070:	2500      	movs	r5, #0
 800f072:	2401      	movs	r4, #1
 800f074:	6843      	ldr	r3, [r0, #4]
 800f076:	b913      	cbnz	r3, 800f07e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f078:	6803      	ldr	r3, [r0, #0]
 800f07a:	b313      	cbz	r3, 800f0c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f07c:	6043      	str	r3, [r0, #4]
 800f07e:	7e03      	ldrb	r3, [r0, #24]
 800f080:	b143      	cbz	r3, 800f094 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f082:	6943      	ldr	r3, [r0, #20]
 800f084:	b12b      	cbz	r3, 800f092 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f086:	881a      	ldrh	r2, [r3, #0]
 800f088:	b11a      	cbz	r2, 800f092 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f08a:	1c9a      	adds	r2, r3, #2
 800f08c:	6142      	str	r2, [r0, #20]
 800f08e:	8818      	ldrh	r0, [r3, #0]
 800f090:	bd30      	pop	{r4, r5, pc}
 800f092:	7605      	strb	r5, [r0, #24]
 800f094:	6843      	ldr	r3, [r0, #4]
 800f096:	8819      	ldrh	r1, [r3, #0]
 800f098:	b199      	cbz	r1, 800f0c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f09a:	1c9a      	adds	r2, r3, #2
 800f09c:	2902      	cmp	r1, #2
 800f09e:	6042      	str	r2, [r0, #4]
 800f0a0:	d1f5      	bne.n	800f08e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f0a2:	7c03      	ldrb	r3, [r0, #16]
 800f0a4:	2b01      	cmp	r3, #1
 800f0a6:	d8e5      	bhi.n	800f074 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0a8:	1c5a      	adds	r2, r3, #1
 800f0aa:	7402      	strb	r2, [r0, #16]
 800f0ac:	3302      	adds	r3, #2
 800f0ae:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f0b2:	6143      	str	r3, [r0, #20]
 800f0b4:	2b00      	cmp	r3, #0
 800f0b6:	d0dd      	beq.n	800f074 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0b8:	881b      	ldrh	r3, [r3, #0]
 800f0ba:	2b00      	cmp	r3, #0
 800f0bc:	d0da      	beq.n	800f074 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0be:	7604      	strb	r4, [r0, #24]
 800f0c0:	e7d8      	b.n	800f074 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0c2:	2000      	movs	r0, #0
 800f0c4:	e7e4      	b.n	800f090 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f0c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f0c6:	6001      	str	r1, [r0, #0]
 800f0c8:	2100      	movs	r1, #0
 800f0ca:	b430      	push	{r4, r5}
 800f0cc:	6041      	str	r1, [r0, #4]
 800f0ce:	6815      	ldr	r5, [r2, #0]
 800f0d0:	6085      	str	r5, [r0, #8]
 800f0d2:	6852      	ldr	r2, [r2, #4]
 800f0d4:	6443      	str	r3, [r0, #68]	@ 0x44
 800f0d6:	9b02      	ldr	r3, [sp, #8]
 800f0d8:	60c2      	str	r2, [r0, #12]
 800f0da:	7401      	strb	r1, [r0, #16]
 800f0dc:	6141      	str	r1, [r0, #20]
 800f0de:	7601      	strb	r1, [r0, #24]
 800f0e0:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f0e2:	8401      	strh	r1, [r0, #32]
 800f0e4:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800f0e8:	6483      	str	r3, [r0, #72]	@ 0x48
 800f0ea:	bc30      	pop	{r4, r5}
 800f0ec:	f7f4 bb08 	b.w	8003700 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f0f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f0f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0f2:	4605      	mov	r5, r0
 800f0f4:	4608      	mov	r0, r1
 800f0f6:	b1e9      	cbz	r1, 800f134 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f0f8:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800f0fc:	460b      	mov	r3, r1
 800f0fe:	4622      	mov	r2, r4
 800f100:	f101 0708 	add.w	r7, r1, #8
 800f104:	4626      	mov	r6, r4
 800f106:	6818      	ldr	r0, [r3, #0]
 800f108:	6859      	ldr	r1, [r3, #4]
 800f10a:	3308      	adds	r3, #8
 800f10c:	c603      	stmia	r6!, {r0, r1}
 800f10e:	42bb      	cmp	r3, r7
 800f110:	4634      	mov	r4, r6
 800f112:	d1f7      	bne.n	800f104 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f114:	6818      	ldr	r0, [r3, #0]
 800f116:	6030      	str	r0, [r6, #0]
 800f118:	4610      	mov	r0, r2
 800f11a:	889b      	ldrh	r3, [r3, #4]
 800f11c:	80b3      	strh	r3, [r6, #4]
 800f11e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800f122:	015b      	lsls	r3, r3, #5
 800f124:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f128:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800f12c:	430b      	orrs	r3, r1
 800f12e:	425b      	negs	r3, r3
 800f130:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800f134:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f136 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f136:	b538      	push	{r3, r4, r5, lr}
 800f138:	460c      	mov	r4, r1
 800f13a:	6811      	ldr	r1, [r2, #0]
 800f13c:	4610      	mov	r0, r2
 800f13e:	68cd      	ldr	r5, [r1, #12]
 800f140:	4619      	mov	r1, r3
 800f142:	47a8      	blx	r5
 800f144:	2800      	cmp	r0, #0
 800f146:	bf08      	it	eq
 800f148:	4620      	moveq	r0, r4
 800f14a:	bd38      	pop	{r3, r4, r5, pc}

0800f14c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f14c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f14e:	4604      	mov	r4, r0
 800f150:	4615      	mov	r5, r2
 800f152:	4608      	mov	r0, r1
 800f154:	b93a      	cbnz	r2, 800f166 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f156:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f15a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800f15e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800f162:	4628      	mov	r0, r5
 800f164:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f166:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800f16a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f16e:	8893      	ldrh	r3, [r2, #4]
 800f170:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f174:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f178:	79ee      	ldrb	r6, [r5, #7]
 800f17a:	4316      	orrs	r6, r2
 800f17c:	19da      	adds	r2, r3, r7
 800f17e:	b291      	uxth	r1, r2
 800f180:	291d      	cmp	r1, #29
 800f182:	b2b7      	uxth	r7, r6
 800f184:	d879      	bhi.n	800f27a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f186:	2201      	movs	r2, #1
 800f188:	408a      	lsls	r2, r1
 800f18a:	4974      	ldr	r1, [pc, #464]	@ (800f35c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>)
 800f18c:	10f6      	asrs	r6, r6, #3
 800f18e:	420a      	tst	r2, r1
 800f190:	d12d      	bne.n	800f1ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 800f192:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800f196:	d070      	beq.n	800f27a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f198:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800f19c:	462b      	mov	r3, r5
 800f19e:	f105 0e08 	add.w	lr, r5, #8
 800f1a2:	4615      	mov	r5, r2
 800f1a4:	4694      	mov	ip, r2
 800f1a6:	6818      	ldr	r0, [r3, #0]
 800f1a8:	6859      	ldr	r1, [r3, #4]
 800f1aa:	3308      	adds	r3, #8
 800f1ac:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f1b0:	4573      	cmp	r3, lr
 800f1b2:	4662      	mov	r2, ip
 800f1b4:	d1f6      	bne.n	800f1a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800f1b6:	6818      	ldr	r0, [r3, #0]
 800f1b8:	f8cc 0000 	str.w	r0, [ip]
 800f1bc:	889b      	ldrh	r3, [r3, #4]
 800f1be:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f1c2:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800f1c6:	b2b3      	uxth	r3, r6
 800f1c8:	1aca      	subs	r2, r1, r3
 800f1ca:	b292      	uxth	r2, r2
 800f1cc:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800f1d0:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800f1d4:	10d2      	asrs	r2, r2, #3
 800f1d6:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800f1da:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800f1de:	4302      	orrs	r2, r0
 800f1e0:	1bcf      	subs	r7, r1, r7
 800f1e2:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800f1e6:	1afb      	subs	r3, r7, r3
 800f1e8:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f1ec:	e7b9      	b.n	800f162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f1ee:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f1f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f1f4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800f1f6:	f640 6333 	movw	r3, #3635	@ 0xe33
 800f1fa:	4299      	cmp	r1, r3
 800f1fc:	d110      	bne.n	800f220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd4>
 800f1fe:	6803      	ldr	r3, [r0, #0]
 800f200:	68db      	ldr	r3, [r3, #12]
 800f202:	4798      	blx	r3
 800f204:	7b41      	ldrb	r1, [r0, #13]
 800f206:	00cb      	lsls	r3, r1, #3
 800f208:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f20c:	7a03      	ldrb	r3, [r0, #8]
 800f20e:	0648      	lsls	r0, r1, #25
 800f210:	ea43 0302 	orr.w	r3, r3, r2
 800f214:	bf44      	itt	mi
 800f216:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f21a:	b21b      	sxthmi	r3, r3
 800f21c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f220:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800f224:	462a      	mov	r2, r5
 800f226:	443b      	add	r3, r7
 800f228:	4433      	add	r3, r6
 800f22a:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800f22e:	f105 0c08 	add.w	ip, r5, #8
 800f232:	4635      	mov	r5, r6
 800f234:	b29b      	uxth	r3, r3
 800f236:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f23a:	4637      	mov	r7, r6
 800f23c:	6810      	ldr	r0, [r2, #0]
 800f23e:	6851      	ldr	r1, [r2, #4]
 800f240:	3208      	adds	r2, #8
 800f242:	c703      	stmia	r7!, {r0, r1}
 800f244:	4562      	cmp	r2, ip
 800f246:	463e      	mov	r6, r7
 800f248:	d1f7      	bne.n	800f23a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xee>
 800f24a:	6810      	ldr	r0, [r2, #0]
 800f24c:	6038      	str	r0, [r7, #0]
 800f24e:	8892      	ldrh	r2, [r2, #4]
 800f250:	80ba      	strh	r2, [r7, #4]
 800f252:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f256:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f25a:	10db      	asrs	r3, r3, #3
 800f25c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f260:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f264:	4313      	orrs	r3, r2
 800f266:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f26a:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800f26e:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800f272:	1a9b      	subs	r3, r3, r2
 800f274:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800f278:	e773      	b.n	800f162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f27a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800f27e:	f023 0204 	bic.w	r2, r3, #4
 800f282:	428a      	cmp	r2, r1
 800f284:	d003      	beq.n	800f28e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f286:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800f28a:	4293      	cmp	r3, r2
 800f28c:	d120      	bne.n	800f2d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x184>
 800f28e:	3b01      	subs	r3, #1
 800f290:	4602      	mov	r2, r0
 800f292:	b29b      	uxth	r3, r3
 800f294:	4629      	mov	r1, r5
 800f296:	4620      	mov	r0, r4
 800f298:	f7ff ff4d 	bl	800f136 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f29c:	7b41      	ldrb	r1, [r0, #13]
 800f29e:	00cb      	lsls	r3, r1, #3
 800f2a0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f2a4:	7a03      	ldrb	r3, [r0, #8]
 800f2a6:	0649      	lsls	r1, r1, #25
 800f2a8:	ea43 0302 	orr.w	r3, r3, r2
 800f2ac:	bf44      	itt	mi
 800f2ae:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f2b2:	b21b      	sxthmi	r3, r3
 800f2b4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f2b8:	7b6b      	ldrb	r3, [r5, #13]
 800f2ba:	7aaa      	ldrb	r2, [r5, #10]
 800f2bc:	005b      	lsls	r3, r3, #1
 800f2be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f2c2:	4313      	orrs	r3, r2
 800f2c4:	115a      	asrs	r2, r3, #5
 800f2c6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f2ca:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f2ce:	e036      	b.n	800f33e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 800f2d0:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f2d4:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800f2d8:	7a2a      	ldrb	r2, [r5, #8]
 800f2da:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f2de:	ea42 0201 	orr.w	r2, r2, r1
 800f2e2:	f640 6109 	movw	r1, #3593	@ 0xe09
 800f2e6:	bf1c      	itt	ne
 800f2e8:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800f2ec:	b212      	sxthne	r2, r2
 800f2ee:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f2f2:	f023 0210 	bic.w	r2, r3, #16
 800f2f6:	428a      	cmp	r2, r1
 800f2f8:	d003      	beq.n	800f302 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 800f2fa:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f2fe:	4293      	cmp	r3, r2
 800f300:	d12a      	bne.n	800f358 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20c>
 800f302:	7b6e      	ldrb	r6, [r5, #13]
 800f304:	4629      	mov	r1, r5
 800f306:	0076      	lsls	r6, r6, #1
 800f308:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f30c:	7aae      	ldrb	r6, [r5, #10]
 800f30e:	4316      	orrs	r6, r2
 800f310:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f314:	4293      	cmp	r3, r2
 800f316:	bf18      	it	ne
 800f318:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f31c:	4602      	mov	r2, r0
 800f31e:	bf14      	ite	ne
 800f320:	b29b      	uxthne	r3, r3
 800f322:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800f326:	4620      	mov	r0, r4
 800f328:	f7ff ff05 	bl	800f136 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f32c:	7b43      	ldrb	r3, [r0, #13]
 800f32e:	7a82      	ldrb	r2, [r0, #10]
 800f330:	005b      	lsls	r3, r3, #1
 800f332:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f336:	4313      	orrs	r3, r2
 800f338:	1af6      	subs	r6, r6, r3
 800f33a:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800f33e:	7b69      	ldrb	r1, [r5, #13]
 800f340:	00cb      	lsls	r3, r1, #3
 800f342:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f346:	7a2b      	ldrb	r3, [r5, #8]
 800f348:	4313      	orrs	r3, r2
 800f34a:	064a      	lsls	r2, r1, #25
 800f34c:	bf44      	itt	mi
 800f34e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f352:	b21b      	sxthmi	r3, r3
 800f354:	1bdb      	subs	r3, r3, r7
 800f356:	e747      	b.n	800f1e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 800f358:	2300      	movs	r3, #0
 800f35a:	e7b6      	b.n	800f2ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x17e>
 800f35c:	3fc00079 	.word	0x3fc00079

0800f360 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800f360:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f364:	4604      	mov	r4, r0
 800f366:	b942      	cbnz	r2, 800f37a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800f368:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f36c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800f370:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800f374:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f378:	e047      	b.n	800f40a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f37a:	7b51      	ldrb	r1, [r2, #13]
 800f37c:	8893      	ldrh	r3, [r2, #4]
 800f37e:	010d      	lsls	r5, r1, #4
 800f380:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800f384:	79d5      	ldrb	r5, [r2, #7]
 800f386:	4305      	orrs	r5, r0
 800f388:	2d04      	cmp	r5, #4
 800f38a:	bfcc      	ite	gt
 800f38c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800f390:	f04f 0e01 	movle.w	lr, #1
 800f394:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800f398:	f200 80ab 	bhi.w	800f4f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800f39c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800f3a0:	4283      	cmp	r3, r0
 800f3a2:	d216      	bcs.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3a4:	f240 605b 	movw	r0, #1627	@ 0x65b
 800f3a8:	4283      	cmp	r3, r0
 800f3aa:	d859      	bhi.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800f3ac:	f240 6057 	movw	r0, #1623	@ 0x657
 800f3b0:	4283      	cmp	r3, r0
 800f3b2:	d20e      	bcs.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3b4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f3b8:	d24a      	bcs.n	800f450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800f3ba:	f240 604e 	movw	r0, #1614	@ 0x64e
 800f3be:	4283      	cmp	r3, r0
 800f3c0:	d207      	bcs.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3c2:	f240 601a 	movw	r0, #1562	@ 0x61a
 800f3c6:	4283      	cmp	r3, r0
 800f3c8:	d02a      	beq.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f3ca:	d821      	bhi.n	800f410 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800f3cc:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800f3d0:	d35b      	bcc.n	800f48a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f3d2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800f3d6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f3da:	f040 80d0 	bne.w	800f57e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f3de:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800f3e2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f3e6:	f040 80ca 	bne.w	800f57e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f3ea:	00cb      	lsls	r3, r1, #3
 800f3ec:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f3f0:	7a13      	ldrb	r3, [r2, #8]
 800f3f2:	0649      	lsls	r1, r1, #25
 800f3f4:	ea43 0300 	orr.w	r3, r3, r0
 800f3f8:	bf44      	itt	mi
 800f3fa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f3fe:	b21b      	sxthmi	r3, r3
 800f400:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f404:	1b5d      	subs	r5, r3, r5
 800f406:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f40a:	4610      	mov	r0, r2
 800f40c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f410:	f240 604b 	movw	r0, #1611	@ 0x64b
 800f414:	4283      	cmp	r3, r0
 800f416:	d338      	bcc.n	800f48a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f418:	f240 604c 	movw	r0, #1612	@ 0x64c
 800f41c:	4283      	cmp	r3, r0
 800f41e:	d9d8      	bls.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f420:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800f424:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800f428:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f42c:	f040 80f2 	bne.w	800f614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f430:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f434:	f040 80ee 	bne.w	800f614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f438:	00cb      	lsls	r3, r1, #3
 800f43a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f43e:	7a13      	ldrb	r3, [r2, #8]
 800f440:	064e      	lsls	r6, r1, #25
 800f442:	ea43 0300 	orr.w	r3, r3, r0
 800f446:	bf44      	itt	mi
 800f448:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f44c:	b21b      	sxthmi	r3, r3
 800f44e:	e7d9      	b.n	800f404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800f450:	f240 6054 	movw	r0, #1620	@ 0x654
 800f454:	4283      	cmp	r3, r0
 800f456:	d8e3      	bhi.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f458:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f45c:	d9e0      	bls.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f45e:	e7b8      	b.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f460:	f240 6074 	movw	r0, #1652	@ 0x674
 800f464:	4283      	cmp	r3, r0
 800f466:	d0b4      	beq.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f468:	d82d      	bhi.n	800f4c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800f46a:	f240 605e 	movw	r0, #1630	@ 0x65e
 800f46e:	4283      	cmp	r3, r0
 800f470:	d804      	bhi.n	800f47c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800f472:	f240 605d 	movw	r0, #1629	@ 0x65d
 800f476:	4283      	cmp	r3, r0
 800f478:	d3d2      	bcc.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f47a:	e7aa      	b.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f47c:	f240 605f 	movw	r0, #1631	@ 0x65f
 800f480:	4283      	cmp	r3, r0
 800f482:	d0cd      	beq.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f484:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800f488:	d0a3      	beq.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f48a:	00cb      	lsls	r3, r1, #3
 800f48c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f490:	7a13      	ldrb	r3, [r2, #8]
 800f492:	0649      	lsls	r1, r1, #25
 800f494:	ea43 0300 	orr.w	r3, r3, r0
 800f498:	bf44      	itt	mi
 800f49a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f49e:	b21b      	sxthmi	r3, r3
 800f4a0:	1b5d      	subs	r5, r3, r5
 800f4a2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f4a6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f4aa:	7b53      	ldrb	r3, [r2, #13]
 800f4ac:	015b      	lsls	r3, r3, #5
 800f4ae:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f4b2:	7993      	ldrb	r3, [r2, #6]
 800f4b4:	430b      	orrs	r3, r1
 800f4b6:	2105      	movs	r1, #5
 800f4b8:	005b      	lsls	r3, r3, #1
 800f4ba:	fb93 f3f1 	sdiv	r3, r3, r1
 800f4be:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800f4c2:	440b      	add	r3, r1
 800f4c4:	e756      	b.n	800f374 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800f4c6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800f4ca:	4283      	cmp	r3, r0
 800f4cc:	d809      	bhi.n	800f4e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800f4ce:	f240 60df 	movw	r0, #1759	@ 0x6df
 800f4d2:	4283      	cmp	r3, r0
 800f4d4:	f4bf af7d 	bcs.w	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4d8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800f4dc:	2b05      	cmp	r3, #5
 800f4de:	d8d4      	bhi.n	800f48a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f4e0:	e777      	b.n	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4e2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800f4e6:	4283      	cmp	r3, r0
 800f4e8:	d09a      	beq.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4ea:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800f4ee:	4283      	cmp	r3, r0
 800f4f0:	e7ca      	b.n	800f488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800f4f2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800f4f6:	d22b      	bcs.n	800f550 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800f4f8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800f4fc:	4283      	cmp	r3, r0
 800f4fe:	d28f      	bcs.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f500:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800f504:	4283      	cmp	r3, r0
 800f506:	d816      	bhi.n	800f536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800f508:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800f50c:	4283      	cmp	r3, r0
 800f50e:	f4bf af60 	bcs.w	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f512:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800f516:	4283      	cmp	r3, r0
 800f518:	d80a      	bhi.n	800f530 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800f51a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800f51e:	4283      	cmp	r3, r0
 800f520:	f4bf af57 	bcs.w	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f524:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800f528:	4283      	cmp	r3, r0
 800f52a:	f43f af79 	beq.w	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f52e:	e7ac      	b.n	800f48a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f530:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800f534:	e7f8      	b.n	800f528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800f536:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800f53a:	4283      	cmp	r3, r0
 800f53c:	d802      	bhi.n	800f544 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800f53e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800f542:	e798      	b.n	800f476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800f544:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800f548:	4283      	cmp	r3, r0
 800f54a:	f47f af42 	bne.w	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f54e:	e767      	b.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f550:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800f554:	4283      	cmp	r3, r0
 800f556:	f43f af63 	beq.w	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f55a:	d802      	bhi.n	800f562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800f55c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800f560:	e7f2      	b.n	800f548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800f562:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800f566:	4283      	cmp	r3, r0
 800f568:	d805      	bhi.n	800f576 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800f56a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800f56e:	4283      	cmp	r3, r0
 800f570:	f4ff af2f 	bcc.w	800f3d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f574:	e754      	b.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f576:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800f57a:	4283      	cmp	r3, r0
 800f57c:	e7af      	b.n	800f4de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800f57e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f582:	4617      	mov	r7, r2
 800f584:	4666      	mov	r6, ip
 800f586:	f102 0808 	add.w	r8, r2, #8
 800f58a:	46e6      	mov	lr, ip
 800f58c:	6838      	ldr	r0, [r7, #0]
 800f58e:	6879      	ldr	r1, [r7, #4]
 800f590:	3708      	adds	r7, #8
 800f592:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800f596:	4547      	cmp	r7, r8
 800f598:	46f4      	mov	ip, lr
 800f59a:	d1f6      	bne.n	800f58a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800f59c:	6838      	ldr	r0, [r7, #0]
 800f59e:	f8ce 0000 	str.w	r0, [lr]
 800f5a2:	88b9      	ldrh	r1, [r7, #4]
 800f5a4:	f8ae 1004 	strh.w	r1, [lr, #4]
 800f5a8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f5ac:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f5b0:	d009      	beq.n	800f5c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800f5b2:	7b51      	ldrb	r1, [r2, #13]
 800f5b4:	7992      	ldrb	r2, [r2, #6]
 800f5b6:	0149      	lsls	r1, r1, #5
 800f5b8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f5bc:	4311      	orrs	r1, r2
 800f5be:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f5c2:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f5c6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f5ca:	b2ad      	uxth	r5, r5
 800f5cc:	d00d      	beq.n	800f5ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800f5ce:	442b      	add	r3, r5
 800f5d0:	b29b      	uxth	r3, r3
 800f5d2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f5d6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f5da:	10db      	asrs	r3, r3, #3
 800f5dc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f5e0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f5e4:	4313      	orrs	r3, r2
 800f5e6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f5ea:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f5ee:	00cb      	lsls	r3, r1, #3
 800f5f0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f5f4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f5f8:	064f      	lsls	r7, r1, #25
 800f5fa:	ea43 0302 	orr.w	r3, r3, r2
 800f5fe:	bf44      	itt	mi
 800f600:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f604:	b21b      	sxthmi	r3, r3
 800f606:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f60a:	1b5b      	subs	r3, r3, r5
 800f60c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f610:	4632      	mov	r2, r6
 800f612:	e6fa      	b.n	800f40a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f614:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f618:	4617      	mov	r7, r2
 800f61a:	4666      	mov	r6, ip
 800f61c:	f102 0908 	add.w	r9, r2, #8
 800f620:	46e0      	mov	r8, ip
 800f622:	6838      	ldr	r0, [r7, #0]
 800f624:	6879      	ldr	r1, [r7, #4]
 800f626:	3708      	adds	r7, #8
 800f628:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800f62c:	454f      	cmp	r7, r9
 800f62e:	46c4      	mov	ip, r8
 800f630:	d1f6      	bne.n	800f620 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800f632:	6838      	ldr	r0, [r7, #0]
 800f634:	f8c8 0000 	str.w	r0, [r8]
 800f638:	88b9      	ldrh	r1, [r7, #4]
 800f63a:	f8a8 1004 	strh.w	r1, [r8, #4]
 800f63e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f642:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f646:	d009      	beq.n	800f65c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800f648:	7b51      	ldrb	r1, [r2, #13]
 800f64a:	7992      	ldrb	r2, [r2, #6]
 800f64c:	0149      	lsls	r1, r1, #5
 800f64e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f652:	4311      	orrs	r1, r2
 800f654:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f658:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f65c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f660:	d00e      	beq.n	800f680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800f662:	eba3 030e 	sub.w	r3, r3, lr
 800f666:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f66a:	b29b      	uxth	r3, r3
 800f66c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f670:	10db      	asrs	r3, r3, #3
 800f672:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f676:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f67a:	4313      	orrs	r3, r2
 800f67c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f680:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f684:	00cb      	lsls	r3, r1, #3
 800f686:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f68a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f68e:	0648      	lsls	r0, r1, #25
 800f690:	ea43 0302 	orr.w	r3, r3, r2
 800f694:	bf44      	itt	mi
 800f696:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f69a:	b21b      	sxthmi	r3, r3
 800f69c:	1b5d      	subs	r5, r3, r5
 800f69e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f6a2:	e7b5      	b.n	800f610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800f6a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f6a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6a8:	461e      	mov	r6, r3
 800f6aa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f6ac:	4604      	mov	r4, r0
 800f6ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f6b2:	4617      	mov	r7, r2
 800f6b4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f6b8:	f7f3 ffe0 	bl	800367c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f6bc:	4605      	mov	r5, r0
 800f6be:	b918      	cbnz	r0, 800f6c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800f6c0:	6030      	str	r0, [r6, #0]
 800f6c2:	4628      	mov	r0, r5
 800f6c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6c8:	683b      	ldr	r3, [r7, #0]
 800f6ca:	4601      	mov	r1, r0
 800f6cc:	68db      	ldr	r3, [r3, #12]
 800f6ce:	4638      	mov	r0, r7
 800f6d0:	4798      	blx	r3
 800f6d2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f6d6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f6da:	4602      	mov	r2, r0
 800f6dc:	6030      	str	r0, [r6, #0]
 800f6de:	d213      	bcs.n	800f708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800f6e0:	4643      	mov	r3, r8
 800f6e2:	4639      	mov	r1, r7
 800f6e4:	4620      	mov	r0, r4
 800f6e6:	f7ff fe3b 	bl	800f360 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f6ea:	6030      	str	r0, [r6, #0]
 800f6ec:	6833      	ldr	r3, [r6, #0]
 800f6ee:	b143      	cbz	r3, 800f702 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800f6f0:	7b5a      	ldrb	r2, [r3, #13]
 800f6f2:	7a9b      	ldrb	r3, [r3, #10]
 800f6f4:	0052      	lsls	r2, r2, #1
 800f6f6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f6fa:	4313      	orrs	r3, r2
 800f6fc:	bf0c      	ite	eq
 800f6fe:	2301      	moveq	r3, #1
 800f700:	2300      	movne	r3, #0
 800f702:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f706:	e7dc      	b.n	800f6c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800f708:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f70c:	b29b      	uxth	r3, r3
 800f70e:	2b7f      	cmp	r3, #127	@ 0x7f
 800f710:	d804      	bhi.n	800f71c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800f712:	4639      	mov	r1, r7
 800f714:	4620      	mov	r0, r4
 800f716:	f7ff fd19 	bl	800f14c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f71a:	e7e6      	b.n	800f6ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f71c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f720:	2b00      	cmp	r3, #0
 800f722:	d0e3      	beq.n	800f6ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f724:	f640 1302 	movw	r3, #2306	@ 0x902
 800f728:	429d      	cmp	r5, r3
 800f72a:	d1df      	bne.n	800f6ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f72c:	4601      	mov	r1, r0
 800f72e:	4620      	mov	r0, r4
 800f730:	f7ff fcde 	bl	800f0f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f734:	e7d9      	b.n	800f6ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800f736 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f736:	b510      	push	{r4, lr}
 800f738:	4604      	mov	r4, r0
 800f73a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800f73e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f740:	b1f1      	cbz	r1, 800f780 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f742:	2b0a      	cmp	r3, #10
 800f744:	d02f      	beq.n	800f7a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f746:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800f748:	3901      	subs	r1, #1
 800f74a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f74e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800f750:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800f754:	1c51      	adds	r1, r2, #1
 800f756:	b289      	uxth	r1, r1
 800f758:	2901      	cmp	r1, #1
 800f75a:	bf84      	itt	hi
 800f75c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f760:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800f762:	f103 0201 	add.w	r2, r3, #1
 800f766:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f768:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f76a:	bf98      	it	ls
 800f76c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800f76e:	4413      	add	r3, r2
 800f770:	b29b      	uxth	r3, r3
 800f772:	2b09      	cmp	r3, #9
 800f774:	bf88      	it	hi
 800f776:	3b0a      	subhi	r3, #10
 800f778:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f77c:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f77e:	e7dc      	b.n	800f73a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f780:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f782:	2b0a      	cmp	r3, #10
 800f784:	d00f      	beq.n	800f7a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f786:	4620      	mov	r0, r4
 800f788:	f7ff fc71 	bl	800f06e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f78c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f78e:	1c5a      	adds	r2, r3, #1
 800f790:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f792:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f794:	4413      	add	r3, r2
 800f796:	b29b      	uxth	r3, r3
 800f798:	2b09      	cmp	r3, #9
 800f79a:	bf88      	it	hi
 800f79c:	3b0a      	subhi	r3, #10
 800f79e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f7a2:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f7a4:	e7ec      	b.n	800f780 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f7a6:	bd10      	pop	{r4, pc}

0800f7a8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f7a8:	b538      	push	{r3, r4, r5, lr}
 800f7aa:	4604      	mov	r4, r0
 800f7ac:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f7ae:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800f7b2:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800f7b4:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800f7b6:	3a01      	subs	r2, #1
 800f7b8:	8702      	strh	r2, [r0, #56]	@ 0x38
 800f7ba:	1c5a      	adds	r2, r3, #1
 800f7bc:	b292      	uxth	r2, r2
 800f7be:	2a09      	cmp	r2, #9
 800f7c0:	bf86      	itte	hi
 800f7c2:	3b09      	subhi	r3, #9
 800f7c4:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800f7c6:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800f7c8:	f7ff ffb5 	bl	800f736 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f7cc:	8c23      	ldrh	r3, [r4, #32]
 800f7ce:	2b01      	cmp	r3, #1
 800f7d0:	bf9c      	itt	ls
 800f7d2:	3301      	addls	r3, #1
 800f7d4:	8423      	strhls	r3, [r4, #32]
 800f7d6:	8be3      	ldrh	r3, [r4, #30]
 800f7d8:	b90b      	cbnz	r3, 800f7de <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800f7da:	2302      	movs	r3, #2
 800f7dc:	83e3      	strh	r3, [r4, #30]
 800f7de:	8be3      	ldrh	r3, [r4, #30]
 800f7e0:	4628      	mov	r0, r5
 800f7e2:	3b01      	subs	r3, #1
 800f7e4:	b29b      	uxth	r3, r3
 800f7e6:	83e3      	strh	r3, [r4, #30]
 800f7e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f7ec:	8365      	strh	r5, [r4, #26]
 800f7ee:	bd38      	pop	{r3, r4, r5, pc}

0800f7f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f7f0:	428a      	cmp	r2, r1
 800f7f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f7f6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800f7f8:	d931      	bls.n	800f85e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800f7fa:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800f7fc:	1a54      	subs	r4, r2, r1
 800f7fe:	19ee      	adds	r6, r5, r7
 800f800:	3e01      	subs	r6, #1
 800f802:	fa1f fe84 	uxth.w	lr, r4
 800f806:	b2b4      	uxth	r4, r6
 800f808:	eba4 090e 	sub.w	r9, r4, lr
 800f80c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800f810:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800f814:	fa1f f989 	uxth.w	r9, r9
 800f818:	2c09      	cmp	r4, #9
 800f81a:	4626      	mov	r6, r4
 800f81c:	bf88      	it	hi
 800f81e:	f1a4 060a 	subhi.w	r6, r4, #10
 800f822:	f1bc 0f00 	cmp.w	ip, #0
 800f826:	bf08      	it	eq
 800f828:	f04f 0c02 	moveq.w	ip, #2
 800f82c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f830:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f834:	3c01      	subs	r4, #1
 800f836:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800f83a:	fa1f fc8c 	uxth.w	ip, ip
 800f83e:	b2a4      	uxth	r4, r4
 800f840:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f844:	454c      	cmp	r4, r9
 800f846:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800f84a:	d1e5      	bne.n	800f818 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f84c:	eba5 050e 	sub.w	r5, r5, lr
 800f850:	eb0e 0408 	add.w	r4, lr, r8
 800f854:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f856:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800f85a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800f85e:	250a      	movs	r5, #10
 800f860:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800f862:	1a64      	subs	r4, r4, r1
 800f864:	4439      	add	r1, r7
 800f866:	b289      	uxth	r1, r1
 800f868:	2909      	cmp	r1, #9
 800f86a:	bf88      	it	hi
 800f86c:	390a      	subhi	r1, #10
 800f86e:	8704      	strh	r4, [r0, #56]	@ 0x38
 800f870:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f872:	b18a      	cbz	r2, 800f898 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f874:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800f876:	3a01      	subs	r2, #1
 800f878:	3101      	adds	r1, #1
 800f87a:	b292      	uxth	r2, r2
 800f87c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f880:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f882:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f884:	b901      	cbnz	r1, 800f888 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f886:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f888:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f88a:	3901      	subs	r1, #1
 800f88c:	b289      	uxth	r1, r1
 800f88e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f890:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f894:	844c      	strh	r4, [r1, #34]	@ 0x22
 800f896:	e7ec      	b.n	800f872 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f898:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f89c:	f7ff bf4b 	b.w	800f736 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f8a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f8a0:	b570      	push	{r4, r5, r6, lr}
 800f8a2:	2500      	movs	r5, #0
 800f8a4:	4295      	cmp	r5, r2
 800f8a6:	d011      	beq.n	800f8cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f8a8:	8bc4      	ldrh	r4, [r0, #30]
 800f8aa:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f8ae:	4414      	add	r4, r2
 800f8b0:	3c01      	subs	r4, #1
 800f8b2:	1b64      	subs	r4, r4, r5
 800f8b4:	b2a4      	uxth	r4, r4
 800f8b6:	2c01      	cmp	r4, #1
 800f8b8:	bf88      	it	hi
 800f8ba:	3c02      	subhi	r4, #2
 800f8bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f8c0:	8b64      	ldrh	r4, [r4, #26]
 800f8c2:	42b4      	cmp	r4, r6
 800f8c4:	d117      	bne.n	800f8f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f8c6:	3501      	adds	r5, #1
 800f8c8:	b2ad      	uxth	r5, r5
 800f8ca:	e7eb      	b.n	800f8a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f8cc:	2400      	movs	r4, #0
 800f8ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f8d2:	4413      	add	r3, r2
 800f8d4:	b2a2      	uxth	r2, r4
 800f8d6:	429a      	cmp	r2, r3
 800f8d8:	da0f      	bge.n	800f8fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f8da:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800f8dc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f8e0:	4432      	add	r2, r6
 800f8e2:	b292      	uxth	r2, r2
 800f8e4:	2a09      	cmp	r2, #9
 800f8e6:	bf88      	it	hi
 800f8e8:	3a0a      	subhi	r2, #10
 800f8ea:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f8ee:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800f8f0:	3401      	adds	r4, #1
 800f8f2:	42aa      	cmp	r2, r5
 800f8f4:	d0ee      	beq.n	800f8d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f8f6:	2000      	movs	r0, #0
 800f8f8:	bd70      	pop	{r4, r5, r6, pc}
 800f8fa:	2001      	movs	r0, #1
 800f8fc:	e7fc      	b.n	800f8f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f8fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f8fe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f902:	4605      	mov	r5, r0
 800f904:	4616      	mov	r6, r2
 800f906:	1c8c      	adds	r4, r1, #2
 800f908:	8809      	ldrh	r1, [r1, #0]
 800f90a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f90e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f912:	42b3      	cmp	r3, r6
 800f914:	d124      	bne.n	800f960 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f916:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f91a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f91e:	f001 070f 	and.w	r7, r1, #15
 800f922:	f8cd 8000 	str.w	r8, [sp]
 800f926:	464b      	mov	r3, r9
 800f928:	4652      	mov	r2, sl
 800f92a:	4621      	mov	r1, r4
 800f92c:	4628      	mov	r0, r5
 800f92e:	f7ff ffb7 	bl	800f8a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f932:	4683      	mov	fp, r0
 800f934:	b168      	cbz	r0, 800f952 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f936:	eb0a 0109 	add.w	r1, sl, r9
 800f93a:	4441      	add	r1, r8
 800f93c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f940:	463a      	mov	r2, r7
 800f942:	4649      	mov	r1, r9
 800f944:	4628      	mov	r0, r5
 800f946:	f7ff ff53 	bl	800f7f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f94a:	4658      	mov	r0, fp
 800f94c:	b003      	add	sp, #12
 800f94e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f952:	eb07 010a 	add.w	r1, r7, sl
 800f956:	4449      	add	r1, r9
 800f958:	4441      	add	r1, r8
 800f95a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f95e:	e7d2      	b.n	800f906 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f960:	f04f 0b00 	mov.w	fp, #0
 800f964:	e7f1      	b.n	800f94a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f966 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f966:	b570      	push	{r4, r5, r6, lr}
 800f968:	8810      	ldrh	r0, [r2, #0]
 800f96a:	4298      	cmp	r0, r3
 800f96c:	d817      	bhi.n	800f99e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f96e:	1e48      	subs	r0, r1, #1
 800f970:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f974:	4298      	cmp	r0, r3
 800f976:	d312      	bcc.n	800f99e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f978:	2400      	movs	r4, #0
 800f97a:	428c      	cmp	r4, r1
 800f97c:	d20f      	bcs.n	800f99e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f97e:	1860      	adds	r0, r4, r1
 800f980:	1040      	asrs	r0, r0, #1
 800f982:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f986:	0085      	lsls	r5, r0, #2
 800f988:	42b3      	cmp	r3, r6
 800f98a:	d902      	bls.n	800f992 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f98c:	3001      	adds	r0, #1
 800f98e:	b284      	uxth	r4, r0
 800f990:	e7f3      	b.n	800f97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f992:	d201      	bcs.n	800f998 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f994:	b281      	uxth	r1, r0
 800f996:	e7f0      	b.n	800f97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f998:	442a      	add	r2, r5
 800f99a:	8850      	ldrh	r0, [r2, #2]
 800f99c:	bd70      	pop	{r4, r5, r6, pc}
 800f99e:	2000      	movs	r0, #0
 800f9a0:	e7fc      	b.n	800f99c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f9a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f9a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9a6:	4604      	mov	r4, r0
 800f9a8:	260b      	movs	r6, #11
 800f9aa:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800f9ac:	886f      	ldrh	r7, [r5, #2]
 800f9ae:	087f      	lsrs	r7, r7, #1
 800f9b0:	3e01      	subs	r6, #1
 800f9b2:	d013      	beq.n	800f9dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f9b4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f9b6:	462a      	mov	r2, r5
 800f9b8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f9bc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f9c0:	4639      	mov	r1, r7
 800f9c2:	4643      	mov	r3, r8
 800f9c4:	4620      	mov	r0, r4
 800f9c6:	f7ff ffce 	bl	800f966 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f9ca:	b138      	cbz	r0, 800f9dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f9cc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f9d0:	4642      	mov	r2, r8
 800f9d2:	4620      	mov	r0, r4
 800f9d4:	f7ff ff93 	bl	800f8fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f9d8:	2800      	cmp	r0, #0
 800f9da:	d1e9      	bne.n	800f9b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f9dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f9e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f9e0:	b570      	push	{r4, r5, r6, lr}
 800f9e2:	694a      	ldr	r2, [r1, #20]
 800f9e4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800f9e6:	684b      	ldr	r3, [r1, #4]
 800f9e8:	1b54      	subs	r4, r2, r5
 800f9ea:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800f9ec:	f000 8107 	beq.w	800fbfe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 800f9f0:	1b9b      	subs	r3, r3, r6
 800f9f2:	d003      	beq.n	800f9fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f9f4:	2210      	movs	r2, #16
 800f9f6:	4363      	muls	r3, r4
 800f9f8:	fb93 f3f2 	sdiv	r3, r3, r2
 800f9fc:	680c      	ldr	r4, [r1, #0]
 800f9fe:	698a      	ldr	r2, [r1, #24]
 800fa00:	1b65      	subs	r5, r4, r5
 800fa02:	f000 80fe 	beq.w	800fc02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 800fa06:	1b92      	subs	r2, r2, r6
 800fa08:	d003      	beq.n	800fa12 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fa0a:	2410      	movs	r4, #16
 800fa0c:	436a      	muls	r2, r5
 800fa0e:	fb92 f2f4 	sdiv	r2, r2, r4
 800fa12:	1a9b      	subs	r3, r3, r2
 800fa14:	ee07 3a90 	vmov	s15, r3
 800fa18:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 800fc40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 800fa1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fa24:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fa28:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800fa2c:	460a      	mov	r2, r1
 800fa2e:	eeb1 6a43 	vneg.f32	s12, s6
 800fa32:	4603      	mov	r3, r0
 800fa34:	f100 040c 	add.w	r4, r0, #12
 800fa38:	edd2 7a02 	vldr	s15, [r2, #8]
 800fa3c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800fa40:	ece3 6a01 	vstmia	r3!, {s13}
 800fa44:	edd2 7a03 	vldr	s15, [r2, #12]
 800fa48:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa4c:	edc3 7a02 	vstr	s15, [r3, #8]
 800fa50:	edd2 7a04 	vldr	s15, [r2, #16]
 800fa54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa58:	429c      	cmp	r4, r3
 800fa5a:	edc3 7a05 	vstr	s15, [r3, #20]
 800fa5e:	f102 0214 	add.w	r2, r2, #20
 800fa62:	d1e9      	bne.n	800fa38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800fa64:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fa66:	698b      	ldr	r3, [r1, #24]
 800fa68:	edd0 4a02 	vldr	s9, [r0, #8]
 800fa6c:	1a9b      	subs	r3, r3, r2
 800fa6e:	ee07 3a90 	vmov	s15, r3
 800fa72:	684b      	ldr	r3, [r1, #4]
 800fa74:	edd0 3a00 	vldr	s7, [r0]
 800fa78:	1a9b      	subs	r3, r3, r2
 800fa7a:	edd0 6a01 	vldr	s13, [r0, #4]
 800fa7e:	ee07 3a10 	vmov	s14, r3
 800fa82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa86:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800fa8a:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fa8e:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800fa92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fa96:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800fa9a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fa9e:	eee6 7a87 	vfma.f32	s15, s13, s14
 800faa2:	ee67 7a83 	vmul.f32	s15, s15, s6
 800faa6:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800faaa:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800faac:	694a      	ldr	r2, [r1, #20]
 800faae:	ed90 5a05 	vldr	s10, [r0, #20]
 800fab2:	1b13      	subs	r3, r2, r4
 800fab4:	ee07 3a10 	vmov	s14, r3
 800fab8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fabc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fac0:	680b      	ldr	r3, [r1, #0]
 800fac2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800fac6:	1b1b      	subs	r3, r3, r4
 800fac8:	ee07 3a10 	vmov	s14, r3
 800facc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fad0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fad4:	eee6 4a87 	vfma.f32	s9, s13, s14
 800fad8:	ee64 4a86 	vmul.f32	s9, s9, s12
 800fadc:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800fae0:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fae2:	698b      	ldr	r3, [r1, #24]
 800fae4:	ed90 2a03 	vldr	s4, [r0, #12]
 800fae8:	1a9b      	subs	r3, r3, r2
 800faea:	ee06 3a90 	vmov	s13, r3
 800faee:	684b      	ldr	r3, [r1, #4]
 800faf0:	edd0 5a04 	vldr	s11, [r0, #16]
 800faf4:	1a9b      	subs	r3, r3, r2
 800faf6:	ee07 3a10 	vmov	s14, r3
 800fafa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fafe:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800fb02:	ee66 6a84 	vmul.f32	s13, s13, s8
 800fb06:	ee32 5a45 	vsub.f32	s10, s4, s10
 800fb0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb0e:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800fb12:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb16:	eee5 6a87 	vfma.f32	s13, s11, s14
 800fb1a:	ee66 6a83 	vmul.f32	s13, s13, s6
 800fb1e:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800fb22:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fb24:	694a      	ldr	r2, [r1, #20]
 800fb26:	ed90 1a07 	vldr	s2, [r0, #28]
 800fb2a:	1b13      	subs	r3, r2, r4
 800fb2c:	ee07 3a10 	vmov	s14, r3
 800fb30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb34:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb38:	680b      	ldr	r3, [r1, #0]
 800fb3a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800fb3e:	1b1b      	subs	r3, r3, r4
 800fb40:	ee07 3a10 	vmov	s14, r3
 800fb44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb48:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb4c:	eea5 5a87 	vfma.f32	s10, s11, s14
 800fb50:	ee25 5a06 	vmul.f32	s10, s10, s12
 800fb54:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800fb58:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fb5a:	698b      	ldr	r3, [r1, #24]
 800fb5c:	edd0 5a08 	vldr	s11, [r0, #32]
 800fb60:	1a9b      	subs	r3, r3, r2
 800fb62:	ee07 3a10 	vmov	s14, r3
 800fb66:	684b      	ldr	r3, [r1, #4]
 800fb68:	edd0 2a06 	vldr	s5, [r0, #24]
 800fb6c:	1a9b      	subs	r3, r3, r2
 800fb6e:	ee01 3a90 	vmov	s3, r3
 800fb72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb76:	ee31 1a65 	vsub.f32	s2, s2, s11
 800fb7a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb7e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800fb82:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800fb86:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800fb8a:	ee61 1a84 	vmul.f32	s3, s3, s8
 800fb8e:	eea1 7a21 	vfma.f32	s14, s2, s3
 800fb92:	ee27 7a03 	vmul.f32	s14, s14, s6
 800fb96:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fb9a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fb9c:	694a      	ldr	r2, [r1, #20]
 800fb9e:	1b13      	subs	r3, r2, r4
 800fba0:	ee03 3a10 	vmov	s6, r3
 800fba4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fba8:	ee23 3a04 	vmul.f32	s6, s6, s8
 800fbac:	680b      	ldr	r3, [r1, #0]
 800fbae:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800fbb2:	1b1b      	subs	r3, r3, r4
 800fbb4:	ee03 3a10 	vmov	s6, r3
 800fbb8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fbbc:	ee23 4a04 	vmul.f32	s8, s6, s8
 800fbc0:	eee1 5a04 	vfma.f32	s11, s2, s8
 800fbc4:	ee25 6a86 	vmul.f32	s12, s11, s12
 800fbc8:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800fbcc:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800fbd0:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800fbd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fbd8:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800fbdc:	dd13      	ble.n	800fc06 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800fbde:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fbe2:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800fbe6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800fbea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fbee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fbf2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fbf4:	dd15      	ble.n	800fc22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800fbf6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fbfa:	6403      	str	r3, [r0, #64]	@ 0x40
 800fbfc:	bd70      	pop	{r4, r5, r6, pc}
 800fbfe:	4623      	mov	r3, r4
 800fc00:	e6fc      	b.n	800f9fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fc02:	462a      	mov	r2, r5
 800fc04:	e705      	b.n	800fa12 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fc06:	d502      	bpl.n	800fc0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 800fc08:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fc0c:	e7e9      	b.n	800fbe2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 800fc0e:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800fc12:	eea3 2a85 	vfma.f32	s4, s7, s10
 800fc16:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800fc1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc1e:	dade      	bge.n	800fbde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 800fc20:	e7f2      	b.n	800fc08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 800fc22:	d502      	bpl.n	800fc2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 800fc24:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fc28:	e7e7      	b.n	800fbfa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 800fc2a:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800fc2e:	eee3 4a86 	vfma.f32	s9, s7, s12
 800fc32:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800fc36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc3a:	dadc      	bge.n	800fbf6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 800fc3c:	e7f2      	b.n	800fc24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 800fc3e:	bf00      	nop
 800fc40:	3d800000 	.word	0x3d800000

0800fc44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800fc44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc48:	2714      	movs	r7, #20
 800fc4a:	435f      	muls	r7, r3
 800fc4c:	eb02 0c07 	add.w	ip, r2, r7
 800fc50:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800fc54:	f115 0e0f 	adds.w	lr, r5, #15
 800fc58:	f100 80a2 	bmi.w	800fda0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800fc5c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800fc60:	2614      	movs	r6, #20
 800fc62:	9c08      	ldr	r4, [sp, #32]
 800fc64:	f8c0 e014 	str.w	lr, [r0, #20]
 800fc68:	4366      	muls	r6, r4
 800fc6a:	eb02 0806 	add.w	r8, r2, r6
 800fc6e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800fc72:	f115 040f 	adds.w	r4, r5, #15
 800fc76:	f100 809f 	bmi.w	800fdb8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800fc7a:	1124      	asrs	r4, r4, #4
 800fc7c:	eba4 040e 	sub.w	r4, r4, lr
 800fc80:	6184      	str	r4, [r0, #24]
 800fc82:	2c00      	cmp	r4, #0
 800fc84:	f000 808a 	beq.w	800fd9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800fc88:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800fc8c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800fc90:	5995      	ldr	r5, [r2, r6]
 800fc92:	eba4 0809 	sub.w	r8, r4, r9
 800fc96:	59d4      	ldr	r4, [r2, r7]
 800fc98:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800fc9c:	eba5 0a04 	sub.w	sl, r5, r4
 800fca0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800fca4:	fb0e fe05 	mul.w	lr, lr, r5
 800fca8:	fb0a ee19 	mls	lr, sl, r9, lr
 800fcac:	fb08 e404 	mla	r4, r8, r4, lr
 800fcb0:	3c01      	subs	r4, #1
 800fcb2:	19a4      	adds	r4, r4, r6
 800fcb4:	f100 808c 	bmi.w	800fdd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800fcb8:	fb94 fef6 	sdiv	lr, r4, r6
 800fcbc:	fb06 441e 	mls	r4, r6, lr, r4
 800fcc0:	f8c0 e000 	str.w	lr, [r0]
 800fcc4:	6104      	str	r4, [r0, #16]
 800fcc6:	2d00      	cmp	r5, #0
 800fcc8:	f2c0 8095 	blt.w	800fdf6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800fccc:	fb95 f4f6 	sdiv	r4, r5, r6
 800fcd0:	fb06 5514 	mls	r5, r6, r4, r5
 800fcd4:	6044      	str	r4, [r0, #4]
 800fcd6:	6085      	str	r5, [r0, #8]
 800fcd8:	60c6      	str	r6, [r0, #12]
 800fcda:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800fcde:	6945      	ldr	r5, [r0, #20]
 800fce0:	59d2      	ldr	r2, [r2, r7]
 800fce2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800fce6:	ee07 4a10 	vmov	s14, r4
 800fcea:	6804      	ldr	r4, [r0, #0]
 800fcec:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 800fe18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800fcf0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800fcf4:	ee07 2a90 	vmov	s15, r2
 800fcf8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fcfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd00:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800fd04:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd08:	ee27 7a26 	vmul.f32	s14, s14, s13
 800fd0c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fd10:	edd3 6a00 	vldr	s13, [r3]
 800fd14:	eee6 6a07 	vfma.f32	s13, s12, s14
 800fd18:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800fd1c:	eee6 6a27 	vfma.f32	s13, s12, s15
 800fd20:	edc0 6a07 	vstr	s13, [r0, #28]
 800fd24:	edd0 6a01 	vldr	s13, [r0, #4]
 800fd28:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800fd2c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd30:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fd34:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fd38:	ed80 6a08 	vstr	s12, [r0, #32]
 800fd3c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800fd3e:	6242      	str	r2, [r0, #36]	@ 0x24
 800fd40:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800fd44:	ed93 6a03 	vldr	s12, [r3, #12]
 800fd48:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fd4c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fd50:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800fd54:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800fd58:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fd5c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800fd60:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fd64:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800fd68:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fd6a:	6302      	str	r2, [r0, #48]	@ 0x30
 800fd6c:	ed93 6a06 	vldr	s12, [r3, #24]
 800fd70:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800fd74:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fd78:	eeb0 7a46 	vmov.f32	s14, s12
 800fd7c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800fd80:	eea6 7a27 	vfma.f32	s14, s12, s15
 800fd84:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fd88:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800fd8c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800fd90:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fd94:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800fd98:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800fd9a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fd9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fda0:	2410      	movs	r4, #16
 800fda2:	f1c5 0501 	rsb	r5, r5, #1
 800fda6:	f015 050f 	ands.w	r5, r5, #15
 800fdaa:	fb9e fef4 	sdiv	lr, lr, r4
 800fdae:	bf18      	it	ne
 800fdb0:	2501      	movne	r5, #1
 800fdb2:	ebae 0e05 	sub.w	lr, lr, r5
 800fdb6:	e753      	b.n	800fc60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800fdb8:	f04f 0910 	mov.w	r9, #16
 800fdbc:	f1c5 0501 	rsb	r5, r5, #1
 800fdc0:	f015 050f 	ands.w	r5, r5, #15
 800fdc4:	fb94 f4f9 	sdiv	r4, r4, r9
 800fdc8:	bf18      	it	ne
 800fdca:	2501      	movne	r5, #1
 800fdcc:	1b64      	subs	r4, r4, r5
 800fdce:	e755      	b.n	800fc7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800fdd0:	4264      	negs	r4, r4
 800fdd2:	fb94 fef6 	sdiv	lr, r4, r6
 800fdd6:	fb06 441e 	mls	r4, r6, lr, r4
 800fdda:	f1ce 0800 	rsb	r8, lr, #0
 800fdde:	f8c0 8000 	str.w	r8, [r0]
 800fde2:	6104      	str	r4, [r0, #16]
 800fde4:	2c00      	cmp	r4, #0
 800fde6:	f43f af6e 	beq.w	800fcc6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800fdea:	ea6f 0e0e 	mvn.w	lr, lr
 800fdee:	1b34      	subs	r4, r6, r4
 800fdf0:	f8c0 e000 	str.w	lr, [r0]
 800fdf4:	e766      	b.n	800fcc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800fdf6:	426d      	negs	r5, r5
 800fdf8:	fb95 f4f6 	sdiv	r4, r5, r6
 800fdfc:	fb06 5514 	mls	r5, r6, r4, r5
 800fe00:	f1c4 0e00 	rsb	lr, r4, #0
 800fe04:	f8c0 e004 	str.w	lr, [r0, #4]
 800fe08:	6085      	str	r5, [r0, #8]
 800fe0a:	2d00      	cmp	r5, #0
 800fe0c:	f43f af64 	beq.w	800fcd8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800fe10:	43e4      	mvns	r4, r4
 800fe12:	1b75      	subs	r5, r6, r5
 800fe14:	6044      	str	r4, [r0, #4]
 800fe16:	e75e      	b.n	800fcd6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800fe18:	3d800000 	.word	0x3d800000

0800fe1c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fe1c:	4b01      	ldr	r3, [pc, #4]	@ (800fe24 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fe1e:	6018      	str	r0, [r3, #0]
 800fe20:	4770      	bx	lr
 800fe22:	bf00      	nop
 800fe24:	20082f24 	.word	0x20082f24

0800fe28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fe28:	4b06      	ldr	r3, [pc, #24]	@ (800fe44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fe2a:	881a      	ldrh	r2, [r3, #0]
 800fe2c:	4282      	cmp	r2, r0
 800fe2e:	d807      	bhi.n	800fe40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fe30:	4b05      	ldr	r3, [pc, #20]	@ (800fe48 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fe32:	881b      	ldrh	r3, [r3, #0]
 800fe34:	4413      	add	r3, r2
 800fe36:	4298      	cmp	r0, r3
 800fe38:	bfac      	ite	ge
 800fe3a:	2000      	movge	r0, #0
 800fe3c:	2001      	movlt	r0, #1
 800fe3e:	4770      	bx	lr
 800fe40:	2000      	movs	r0, #0
 800fe42:	4770      	bx	lr
 800fe44:	20082f44 	.word	0x20082f44
 800fe48:	20082f48 	.word	0x20082f48

0800fe4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fe4c:	b508      	push	{r3, lr}
 800fe4e:	4601      	mov	r1, r0
 800fe50:	f7ff ffea 	bl	800fe28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fe54:	b118      	cbz	r0, 800fe5e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fe56:	4b02      	ldr	r3, [pc, #8]	@ (800fe60 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fe58:	681b      	ldr	r3, [r3, #0]
 800fe5a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800fe5e:	bd08      	pop	{r3, pc}
 800fe60:	20082f28 	.word	0x20082f28

0800fe64 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fe64:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe66:	4c24      	ldr	r4, [pc, #144]	@ (800fef8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800fe68:	6823      	ldr	r3, [r4, #0]
 800fe6a:	2b00      	cmp	r3, #0
 800fe6c:	d042      	beq.n	800fef4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fe6e:	4a23      	ldr	r2, [pc, #140]	@ (800fefc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fe70:	4d23      	ldr	r5, [pc, #140]	@ (800ff00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fe72:	8811      	ldrh	r1, [r2, #0]
 800fe74:	f8b5 c000 	ldrh.w	ip, [r5]
 800fe78:	4822      	ldr	r0, [pc, #136]	@ (800ff04 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fe7a:	4461      	add	r1, ip
 800fe7c:	1c4a      	adds	r2, r1, #1
 800fe7e:	f022 0201 	bic.w	r2, r2, #1
 800fe82:	008f      	lsls	r7, r1, #2
 800fe84:	0412      	lsls	r2, r2, #16
 800fe86:	19de      	adds	r6, r3, r7
 800fe88:	0c12      	lsrs	r2, r2, #16
 800fe8a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fe8e:	6006      	str	r6, [r0, #0]
 800fe90:	4e1d      	ldr	r6, [pc, #116]	@ (800ff08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fe92:	19da      	adds	r2, r3, r7
 800fe94:	6032      	str	r2, [r6, #0]
 800fe96:	220e      	movs	r2, #14
 800fe98:	fb02 f20c 	mul.w	r2, r2, ip
 800fe9c:	3203      	adds	r2, #3
 800fe9e:	f022 0203 	bic.w	r2, r2, #3
 800fea2:	443a      	add	r2, r7
 800fea4:	4f19      	ldr	r7, [pc, #100]	@ (800ff0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fea6:	4413      	add	r3, r2
 800fea8:	603b      	str	r3, [r7, #0]
 800feaa:	2300      	movs	r3, #0
 800feac:	4f18      	ldr	r7, [pc, #96]	@ (800ff10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800feae:	469c      	mov	ip, r3
 800feb0:	803b      	strh	r3, [r7, #0]
 800feb2:	4f18      	ldr	r7, [pc, #96]	@ (800ff14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800feb4:	683f      	ldr	r7, [r7, #0]
 800feb6:	1aba      	subs	r2, r7, r2
 800feb8:	4f17      	ldr	r7, [pc, #92]	@ (800ff18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800feba:	603a      	str	r2, [r7, #0]
 800febc:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800fec0:	4a16      	ldr	r2, [pc, #88]	@ (800ff1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800fec2:	8013      	strh	r3, [r2, #0]
 800fec4:	428b      	cmp	r3, r1
 800fec6:	d10d      	bne.n	800fee4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800fec8:	2300      	movs	r3, #0
 800feca:	240e      	movs	r4, #14
 800fecc:	882d      	ldrh	r5, [r5, #0]
 800fece:	6830      	ldr	r0, [r6, #0]
 800fed0:	429d      	cmp	r5, r3
 800fed2:	d90f      	bls.n	800fef4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fed4:	fb04 0203 	mla	r2, r4, r3, r0
 800fed8:	7b11      	ldrb	r1, [r2, #12]
 800feda:	3301      	adds	r3, #1
 800fedc:	f36f 1145 	bfc	r1, #5, #1
 800fee0:	7311      	strb	r1, [r2, #12]
 800fee2:	e7f5      	b.n	800fed0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800fee4:	6822      	ldr	r2, [r4, #0]
 800fee6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800feea:	6802      	ldr	r2, [r0, #0]
 800feec:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800fef0:	3301      	adds	r3, #1
 800fef2:	e7e7      	b.n	800fec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800fef4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fef6:	bf00      	nop
 800fef8:	20082f28 	.word	0x20082f28
 800fefc:	20082f44 	.word	0x20082f44
 800ff00:	20082f48 	.word	0x20082f48
 800ff04:	20082f3c 	.word	0x20082f3c
 800ff08:	20082f2c 	.word	0x20082f2c
 800ff0c:	20082f34 	.word	0x20082f34
 800ff10:	20082f46 	.word	0x20082f46
 800ff14:	20082f30 	.word	0x20082f30
 800ff18:	20082f40 	.word	0x20082f40
 800ff1c:	20082f38 	.word	0x20082f38

0800ff20 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ff20:	4b06      	ldr	r3, [pc, #24]	@ (800ff3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800ff22:	681b      	ldr	r3, [r3, #0]
 800ff24:	b943      	cbnz	r3, 800ff38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff26:	b139      	cbz	r1, 800ff38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff28:	4b05      	ldr	r3, [pc, #20]	@ (800ff40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800ff2a:	801a      	strh	r2, [r3, #0]
 800ff2c:	4b05      	ldr	r3, [pc, #20]	@ (800ff44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800ff2e:	6019      	str	r1, [r3, #0]
 800ff30:	4b05      	ldr	r3, [pc, #20]	@ (800ff48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800ff32:	6018      	str	r0, [r3, #0]
 800ff34:	f7ff bf96 	b.w	800fe64 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ff38:	4770      	bx	lr
 800ff3a:	bf00      	nop
 800ff3c:	20082f34 	.word	0x20082f34
 800ff40:	20082f48 	.word	0x20082f48
 800ff44:	20082f30 	.word	0x20082f30
 800ff48:	20082f28 	.word	0x20082f28

0800ff4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ff4c:	b470      	push	{r4, r5, r6}
 800ff4e:	4c07      	ldr	r4, [pc, #28]	@ (800ff6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ff50:	4605      	mov	r5, r0
 800ff52:	6826      	ldr	r6, [r4, #0]
 800ff54:	4610      	mov	r0, r2
 800ff56:	9a03      	ldr	r2, [sp, #12]
 800ff58:	b936      	cbnz	r6, 800ff68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ff5a:	6025      	str	r5, [r4, #0]
 800ff5c:	4c04      	ldr	r4, [pc, #16]	@ (800ff70 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ff5e:	8021      	strh	r1, [r4, #0]
 800ff60:	bc70      	pop	{r4, r5, r6}
 800ff62:	4619      	mov	r1, r3
 800ff64:	f7ff bfdc 	b.w	800ff20 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ff68:	bc70      	pop	{r4, r5, r6}
 800ff6a:	4770      	bx	lr
 800ff6c:	20082f4c 	.word	0x20082f4c
 800ff70:	20082f44 	.word	0x20082f44

0800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ff74:	4a12      	ldr	r2, [pc, #72]	@ (800ffc0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800ff76:	8803      	ldrh	r3, [r0, #0]
 800ff78:	8812      	ldrh	r2, [r2, #0]
 800ff7a:	4293      	cmp	r3, r2
 800ff7c:	d207      	bcs.n	800ff8e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800ff7e:	2114      	movs	r1, #20
 800ff80:	4a10      	ldr	r2, [pc, #64]	@ (800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800ff82:	6812      	ldr	r2, [r2, #0]
 800ff84:	fb01 2303 	mla	r3, r1, r3, r2
 800ff88:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800ff8c:	4770      	bx	lr
 800ff8e:	490e      	ldr	r1, [pc, #56]	@ (800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ff90:	8809      	ldrh	r1, [r1, #0]
 800ff92:	4411      	add	r1, r2
 800ff94:	428b      	cmp	r3, r1
 800ff96:	da04      	bge.n	800ffa2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800ff98:	1a9b      	subs	r3, r3, r2
 800ff9a:	4a0c      	ldr	r2, [pc, #48]	@ (800ffcc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800ff9c:	210e      	movs	r1, #14
 800ff9e:	6812      	ldr	r2, [r2, #0]
 800ffa0:	e7f0      	b.n	800ff84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800ffa2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800ffa6:	4293      	cmp	r3, r2
 800ffa8:	d108      	bne.n	800ffbc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800ffaa:	4b09      	ldr	r3, [pc, #36]	@ (800ffd0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800ffac:	781b      	ldrb	r3, [r3, #0]
 800ffae:	b91b      	cbnz	r3, 800ffb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800ffb0:	4b08      	ldr	r3, [pc, #32]	@ (800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800ffb2:	f9b3 0000 	ldrsh.w	r0, [r3]
 800ffb6:	4770      	bx	lr
 800ffb8:	4b07      	ldr	r3, [pc, #28]	@ (800ffd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800ffba:	e7fa      	b.n	800ffb2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800ffbc:	2000      	movs	r0, #0
 800ffbe:	4770      	bx	lr
 800ffc0:	20082f44 	.word	0x20082f44
 800ffc4:	20082f4c 	.word	0x20082f4c
 800ffc8:	20082f48 	.word	0x20082f48
 800ffcc:	20082f2c 	.word	0x20082f2c
 800ffd0:	20082ebc 	.word	0x20082ebc
 800ffd4:	20082ebe 	.word	0x20082ebe
 800ffd8:	20082ec0 	.word	0x20082ec0

0800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800ffdc:	4a12      	ldr	r2, [pc, #72]	@ (8010028 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800ffde:	8803      	ldrh	r3, [r0, #0]
 800ffe0:	8812      	ldrh	r2, [r2, #0]
 800ffe2:	4293      	cmp	r3, r2
 800ffe4:	d207      	bcs.n	800fff6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800ffe6:	2114      	movs	r1, #20
 800ffe8:	4a10      	ldr	r2, [pc, #64]	@ (801002c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800ffea:	6812      	ldr	r2, [r2, #0]
 800ffec:	fb01 2303 	mla	r3, r1, r3, r2
 800fff0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800fff4:	4770      	bx	lr
 800fff6:	490e      	ldr	r1, [pc, #56]	@ (8010030 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800fff8:	8809      	ldrh	r1, [r1, #0]
 800fffa:	4411      	add	r1, r2
 800fffc:	428b      	cmp	r3, r1
 800fffe:	da04      	bge.n	801000a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8010000:	1a9b      	subs	r3, r3, r2
 8010002:	4a0c      	ldr	r2, [pc, #48]	@ (8010034 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010004:	210e      	movs	r1, #14
 8010006:	6812      	ldr	r2, [r2, #0]
 8010008:	e7f0      	b.n	800ffec <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801000a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801000e:	4293      	cmp	r3, r2
 8010010:	d108      	bne.n	8010024 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8010012:	4b09      	ldr	r3, [pc, #36]	@ (8010038 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010014:	781b      	ldrb	r3, [r3, #0]
 8010016:	b91b      	cbnz	r3, 8010020 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8010018:	4b08      	ldr	r3, [pc, #32]	@ (801003c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801001a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801001e:	4770      	bx	lr
 8010020:	4b07      	ldr	r3, [pc, #28]	@ (8010040 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010022:	e7fa      	b.n	801001a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8010024:	2000      	movs	r0, #0
 8010026:	4770      	bx	lr
 8010028:	20082f44 	.word	0x20082f44
 801002c:	20082f4c 	.word	0x20082f4c
 8010030:	20082f48 	.word	0x20082f48
 8010034:	20082f2c 	.word	0x20082f2c
 8010038:	20082ebc 	.word	0x20082ebc
 801003c:	20082ec0 	.word	0x20082ec0
 8010040:	20082ebe 	.word	0x20082ebe

08010044 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010044:	b530      	push	{r4, r5, lr}
 8010046:	4a22      	ldr	r2, [pc, #136]	@ (80100d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010048:	880b      	ldrh	r3, [r1, #0]
 801004a:	8812      	ldrh	r2, [r2, #0]
 801004c:	4293      	cmp	r3, r2
 801004e:	d213      	bcs.n	8010078 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010050:	2114      	movs	r1, #20
 8010052:	4a20      	ldr	r2, [pc, #128]	@ (80100d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010054:	6812      	ldr	r2, [r2, #0]
 8010056:	fb01 2303 	mla	r3, r1, r3, r2
 801005a:	8a1a      	ldrh	r2, [r3, #16]
 801005c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010060:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010064:	8a5b      	ldrh	r3, [r3, #18]
 8010066:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801006a:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801006e:	8004      	strh	r4, [r0, #0]
 8010070:	8041      	strh	r1, [r0, #2]
 8010072:	8082      	strh	r2, [r0, #4]
 8010074:	80c3      	strh	r3, [r0, #6]
 8010076:	e024      	b.n	80100c2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8010078:	4917      	ldr	r1, [pc, #92]	@ (80100d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801007a:	8809      	ldrh	r1, [r1, #0]
 801007c:	4411      	add	r1, r2
 801007e:	428b      	cmp	r3, r1
 8010080:	da10      	bge.n	80100a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8010082:	1a9b      	subs	r3, r3, r2
 8010084:	220e      	movs	r2, #14
 8010086:	4353      	muls	r3, r2
 8010088:	4a14      	ldr	r2, [pc, #80]	@ (80100dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801008a:	6811      	ldr	r1, [r2, #0]
 801008c:	18ca      	adds	r2, r1, r3
 801008e:	5ecd      	ldrsh	r5, [r1, r3]
 8010090:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8010094:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8010098:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801009c:	8005      	strh	r5, [r0, #0]
 801009e:	8044      	strh	r4, [r0, #2]
 80100a0:	8081      	strh	r1, [r0, #4]
 80100a2:	e7e7      	b.n	8010074 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80100a4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80100a8:	4293      	cmp	r3, r2
 80100aa:	d10b      	bne.n	80100c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80100ac:	4b0c      	ldr	r3, [pc, #48]	@ (80100e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80100ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 80100b2:	4b0c      	ldr	r3, [pc, #48]	@ (80100e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80100b4:	8081      	strh	r1, [r0, #4]
 80100b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100ba:	2300      	movs	r3, #0
 80100bc:	80c2      	strh	r2, [r0, #6]
 80100be:	8003      	strh	r3, [r0, #0]
 80100c0:	8043      	strh	r3, [r0, #2]
 80100c2:	bd30      	pop	{r4, r5, pc}
 80100c4:	2300      	movs	r3, #0
 80100c6:	8003      	strh	r3, [r0, #0]
 80100c8:	8043      	strh	r3, [r0, #2]
 80100ca:	8083      	strh	r3, [r0, #4]
 80100cc:	e7d2      	b.n	8010074 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80100ce:	bf00      	nop
 80100d0:	20082f44 	.word	0x20082f44
 80100d4:	20082f4c 	.word	0x20082f4c
 80100d8:	20082f48 	.word	0x20082f48
 80100dc:	20082f2c 	.word	0x20082f2c
 80100e0:	20082eb8 	.word	0x20082eb8
 80100e4:	20082eba 	.word	0x20082eba

080100e8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80100e8:	4a12      	ldr	r2, [pc, #72]	@ (8010134 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80100ea:	8803      	ldrh	r3, [r0, #0]
 80100ec:	8811      	ldrh	r1, [r2, #0]
 80100ee:	428b      	cmp	r3, r1
 80100f0:	d20b      	bcs.n	801010a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80100f2:	4a11      	ldr	r2, [pc, #68]	@ (8010138 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80100f4:	6812      	ldr	r2, [r2, #0]
 80100f6:	b112      	cbz	r2, 80100fe <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80100f8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80100fc:	b9c0      	cbnz	r0, 8010130 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80100fe:	4a0f      	ldr	r2, [pc, #60]	@ (801013c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010100:	6811      	ldr	r1, [r2, #0]
 8010102:	2214      	movs	r2, #20
 8010104:	4353      	muls	r3, r2
 8010106:	58c8      	ldr	r0, [r1, r3]
 8010108:	4770      	bx	lr
 801010a:	4a0d      	ldr	r2, [pc, #52]	@ (8010140 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801010c:	8812      	ldrh	r2, [r2, #0]
 801010e:	440a      	add	r2, r1
 8010110:	4293      	cmp	r3, r2
 8010112:	da04      	bge.n	801011e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8010114:	4a08      	ldr	r2, [pc, #32]	@ (8010138 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010116:	6812      	ldr	r2, [r2, #0]
 8010118:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801011c:	4770      	bx	lr
 801011e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010122:	4293      	cmp	r3, r2
 8010124:	d103      	bne.n	801012e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010126:	4b07      	ldr	r3, [pc, #28]	@ (8010144 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010128:	681b      	ldr	r3, [r3, #0]
 801012a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801012c:	4770      	bx	lr
 801012e:	2000      	movs	r0, #0
 8010130:	4770      	bx	lr
 8010132:	bf00      	nop
 8010134:	20082f44 	.word	0x20082f44
 8010138:	20082f28 	.word	0x20082f28
 801013c:	20082f4c 	.word	0x20082f4c
 8010140:	20082f48 	.word	0x20082f48
 8010144:	20082ec4 	.word	0x20082ec4

08010148 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010148:	4b24      	ldr	r3, [pc, #144]	@ (80101dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801014a:	8802      	ldrh	r2, [r0, #0]
 801014c:	8818      	ldrh	r0, [r3, #0]
 801014e:	4282      	cmp	r2, r0
 8010150:	d221      	bcs.n	8010196 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8010152:	4b23      	ldr	r3, [pc, #140]	@ (80101e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010154:	6819      	ldr	r1, [r3, #0]
 8010156:	2314      	movs	r3, #20
 8010158:	fb03 1302 	mla	r3, r3, r2, r1
 801015c:	6858      	ldr	r0, [r3, #4]
 801015e:	2800      	cmp	r0, #0
 8010160:	d03a      	beq.n	80101d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010162:	4920      	ldr	r1, [pc, #128]	@ (80101e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010164:	6809      	ldr	r1, [r1, #0]
 8010166:	2900      	cmp	r1, #0
 8010168:	d036      	beq.n	80101d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801016a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801016e:	2900      	cmp	r1, #0
 8010170:	d032      	beq.n	80101d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010172:	891a      	ldrh	r2, [r3, #8]
 8010174:	8958      	ldrh	r0, [r3, #10]
 8010176:	4350      	muls	r0, r2
 8010178:	7c5a      	ldrb	r2, [r3, #17]
 801017a:	7cdb      	ldrb	r3, [r3, #19]
 801017c:	0952      	lsrs	r2, r2, #5
 801017e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010182:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010186:	2b0b      	cmp	r3, #11
 8010188:	bf18      	it	ne
 801018a:	0040      	lslne	r0, r0, #1
 801018c:	3003      	adds	r0, #3
 801018e:	f020 0003 	bic.w	r0, r0, #3
 8010192:	4408      	add	r0, r1
 8010194:	4770      	bx	lr
 8010196:	4b14      	ldr	r3, [pc, #80]	@ (80101e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010198:	881b      	ldrh	r3, [r3, #0]
 801019a:	4403      	add	r3, r0
 801019c:	429a      	cmp	r2, r3
 801019e:	da1a      	bge.n	80101d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80101a0:	210e      	movs	r1, #14
 80101a2:	4b12      	ldr	r3, [pc, #72]	@ (80101ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80101a4:	1a10      	subs	r0, r2, r0
 80101a6:	681b      	ldr	r3, [r3, #0]
 80101a8:	fb01 3000 	mla	r0, r1, r0, r3
 80101ac:	7b03      	ldrb	r3, [r0, #12]
 80101ae:	f003 031f 	and.w	r3, r3, #31
 80101b2:	2b0b      	cmp	r3, #11
 80101b4:	d10b      	bne.n	80101ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80101b6:	8903      	ldrh	r3, [r0, #8]
 80101b8:	8940      	ldrh	r0, [r0, #10]
 80101ba:	4358      	muls	r0, r3
 80101bc:	4b09      	ldr	r3, [pc, #36]	@ (80101e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80101be:	3003      	adds	r0, #3
 80101c0:	6819      	ldr	r1, [r3, #0]
 80101c2:	f020 0303 	bic.w	r3, r0, #3
 80101c6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80101ca:	4418      	add	r0, r3
 80101cc:	4770      	bx	lr
 80101ce:	2b0d      	cmp	r3, #13
 80101d0:	d101      	bne.n	80101d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80101d2:	300d      	adds	r0, #13
 80101d4:	4770      	bx	lr
 80101d6:	2000      	movs	r0, #0
 80101d8:	4770      	bx	lr
 80101da:	bf00      	nop
 80101dc:	20082f44 	.word	0x20082f44
 80101e0:	20082f4c 	.word	0x20082f4c
 80101e4:	20082f28 	.word	0x20082f28
 80101e8:	20082f48 	.word	0x20082f48
 80101ec:	20082f2c 	.word	0x20082f2c

080101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80101f0:	b510      	push	{r4, lr}
 80101f2:	4a17      	ldr	r2, [pc, #92]	@ (8010250 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80101f4:	8803      	ldrh	r3, [r0, #0]
 80101f6:	8812      	ldrh	r2, [r2, #0]
 80101f8:	4293      	cmp	r3, r2
 80101fa:	d20c      	bcs.n	8010216 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80101fc:	2114      	movs	r1, #20
 80101fe:	4a15      	ldr	r2, [pc, #84]	@ (8010254 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010200:	6812      	ldr	r2, [r2, #0]
 8010202:	fb01 2303 	mla	r3, r1, r3, r2
 8010206:	7c58      	ldrb	r0, [r3, #17]
 8010208:	0942      	lsrs	r2, r0, #5
 801020a:	7cd8      	ldrb	r0, [r3, #19]
 801020c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010210:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010214:	bd10      	pop	{r4, pc}
 8010216:	4910      	ldr	r1, [pc, #64]	@ (8010258 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010218:	8809      	ldrh	r1, [r1, #0]
 801021a:	4411      	add	r1, r2
 801021c:	428b      	cmp	r3, r1
 801021e:	da09      	bge.n	8010234 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010220:	210e      	movs	r1, #14
 8010222:	1a9b      	subs	r3, r3, r2
 8010224:	4a0d      	ldr	r2, [pc, #52]	@ (801025c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010226:	6812      	ldr	r2, [r2, #0]
 8010228:	fb01 2303 	mla	r3, r1, r3, r2
 801022c:	7b18      	ldrb	r0, [r3, #12]
 801022e:	f000 001f 	and.w	r0, r0, #31
 8010232:	e7ef      	b.n	8010214 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010234:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010238:	4293      	cmp	r3, r2
 801023a:	d106      	bne.n	801024a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801023c:	f7fa ffdc 	bl	800b1f8 <_ZN8touchgfx3HAL3lcdEv>
 8010240:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010244:	6803      	ldr	r3, [r0, #0]
 8010246:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010248:	4718      	bx	r3
 801024a:	2000      	movs	r0, #0
 801024c:	e7e2      	b.n	8010214 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801024e:	bf00      	nop
 8010250:	20082f44 	.word	0x20082f44
 8010254:	20082f4c 	.word	0x20082f4c
 8010258:	20082f48 	.word	0x20082f48
 801025c:	20082f2c 	.word	0x20082f2c

08010260 <CRC_Lock>:
 8010260:	b530      	push	{r4, r5, lr}
 8010262:	4a2d      	ldr	r2, [pc, #180]	@ (8010318 <CRC_Lock+0xb8>)
 8010264:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8010268:	6813      	ldr	r3, [r2, #0]
 801026a:	f023 0301 	bic.w	r3, r3, #1
 801026e:	6013      	str	r3, [r2, #0]
 8010270:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8010274:	4b29      	ldr	r3, [pc, #164]	@ (801031c <CRC_Lock+0xbc>)
 8010276:	681c      	ldr	r4, [r3, #0]
 8010278:	4014      	ands	r4, r2
 801027a:	42ac      	cmp	r4, r5
 801027c:	d005      	beq.n	801028a <CRC_Lock+0x2a>
 801027e:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8010282:	681c      	ldr	r4, [r3, #0]
 8010284:	4014      	ands	r4, r2
 8010286:	42ac      	cmp	r4, r5
 8010288:	d125      	bne.n	80102d6 <CRC_Lock+0x76>
 801028a:	4b25      	ldr	r3, [pc, #148]	@ (8010320 <CRC_Lock+0xc0>)
 801028c:	681b      	ldr	r3, [r3, #0]
 801028e:	2b00      	cmp	r3, #0
 8010290:	d139      	bne.n	8010306 <CRC_Lock+0xa6>
 8010292:	4b24      	ldr	r3, [pc, #144]	@ (8010324 <CRC_Lock+0xc4>)
 8010294:	681a      	ldr	r2, [r3, #0]
 8010296:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801029a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801029e:	d00d      	beq.n	80102bc <CRC_Lock+0x5c>
 80102a0:	f240 4483 	movw	r4, #1155	@ 0x483
 80102a4:	681a      	ldr	r2, [r3, #0]
 80102a6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80102aa:	42a2      	cmp	r2, r4
 80102ac:	d006      	beq.n	80102bc <CRC_Lock+0x5c>
 80102ae:	f240 4285 	movw	r2, #1157	@ 0x485
 80102b2:	681b      	ldr	r3, [r3, #0]
 80102b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80102b8:	4293      	cmp	r3, r2
 80102ba:	d124      	bne.n	8010306 <CRC_Lock+0xa6>
 80102bc:	2201      	movs	r2, #1
 80102be:	4b1a      	ldr	r3, [pc, #104]	@ (8010328 <CRC_Lock+0xc8>)
 80102c0:	601a      	str	r2, [r3, #0]
 80102c2:	681a      	ldr	r2, [r3, #0]
 80102c4:	2a00      	cmp	r2, #0
 80102c6:	d1fc      	bne.n	80102c2 <CRC_Lock+0x62>
 80102c8:	4b18      	ldr	r3, [pc, #96]	@ (801032c <CRC_Lock+0xcc>)
 80102ca:	6018      	str	r0, [r3, #0]
 80102cc:	6818      	ldr	r0, [r3, #0]
 80102ce:	1a43      	subs	r3, r0, r1
 80102d0:	4258      	negs	r0, r3
 80102d2:	4158      	adcs	r0, r3
 80102d4:	e00e      	b.n	80102f4 <CRC_Lock+0x94>
 80102d6:	681b      	ldr	r3, [r3, #0]
 80102d8:	4013      	ands	r3, r2
 80102da:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80102de:	4293      	cmp	r3, r2
 80102e0:	d111      	bne.n	8010306 <CRC_Lock+0xa6>
 80102e2:	f240 4286 	movw	r2, #1158	@ 0x486
 80102e6:	4b12      	ldr	r3, [pc, #72]	@ (8010330 <CRC_Lock+0xd0>)
 80102e8:	681b      	ldr	r3, [r3, #0]
 80102ea:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80102ee:	4293      	cmp	r3, r2
 80102f0:	d001      	beq.n	80102f6 <CRC_Lock+0x96>
 80102f2:	2000      	movs	r0, #0
 80102f4:	bd30      	pop	{r4, r5, pc}
 80102f6:	2201      	movs	r2, #1
 80102f8:	4b0e      	ldr	r3, [pc, #56]	@ (8010334 <CRC_Lock+0xd4>)
 80102fa:	601a      	str	r2, [r3, #0]
 80102fc:	681a      	ldr	r2, [r3, #0]
 80102fe:	2a00      	cmp	r2, #0
 8010300:	d1fc      	bne.n	80102fc <CRC_Lock+0x9c>
 8010302:	4b0d      	ldr	r3, [pc, #52]	@ (8010338 <CRC_Lock+0xd8>)
 8010304:	e7e1      	b.n	80102ca <CRC_Lock+0x6a>
 8010306:	2201      	movs	r2, #1
 8010308:	4b0c      	ldr	r3, [pc, #48]	@ (801033c <CRC_Lock+0xdc>)
 801030a:	601a      	str	r2, [r3, #0]
 801030c:	681a      	ldr	r2, [r3, #0]
 801030e:	2a00      	cmp	r2, #0
 8010310:	d1fc      	bne.n	801030c <CRC_Lock+0xac>
 8010312:	4b0b      	ldr	r3, [pc, #44]	@ (8010340 <CRC_Lock+0xe0>)
 8010314:	e7d9      	b.n	80102ca <CRC_Lock+0x6a>
 8010316:	bf00      	nop
 8010318:	e0002000 	.word	0xe0002000
 801031c:	e000ed00 	.word	0xe000ed00
 8010320:	e0042000 	.word	0xe0042000
 8010324:	5c001000 	.word	0x5c001000
 8010328:	58024c08 	.word	0x58024c08
 801032c:	58024c00 	.word	0x58024c00
 8010330:	46008ff0 	.word	0x46008ff0
 8010334:	46024c08 	.word	0x46024c08
 8010338:	46024c00 	.word	0x46024c00
 801033c:	40023008 	.word	0x40023008
 8010340:	40023000 	.word	0x40023000

08010344 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8010344:	6101      	str	r1, [r0, #16]
 8010346:	4770      	bx	lr

08010348 <_ZN8touchgfx8Gestures4tickEv>:
 8010348:	7b83      	ldrb	r3, [r0, #14]
 801034a:	b14b      	cbz	r3, 8010360 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801034c:	8903      	ldrh	r3, [r0, #8]
 801034e:	3301      	adds	r3, #1
 8010350:	b29b      	uxth	r3, r3
 8010352:	2b07      	cmp	r3, #7
 8010354:	8103      	strh	r3, [r0, #8]
 8010356:	bf81      	itttt	hi
 8010358:	2300      	movhi	r3, #0
 801035a:	8143      	strhhi	r3, [r0, #10]
 801035c:	8183      	strhhi	r3, [r0, #12]
 801035e:	7383      	strbhi	r3, [r0, #14]
 8010360:	4770      	bx	lr
	...

08010364 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8010364:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010368:	4698      	mov	r8, r3
 801036a:	4604      	mov	r4, r0
 801036c:	8883      	ldrh	r3, [r0, #4]
 801036e:	460e      	mov	r6, r1
 8010370:	88c1      	ldrh	r1, [r0, #6]
 8010372:	2000      	movs	r0, #0
 8010374:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010378:	eba8 0303 	sub.w	r3, r8, r3
 801037c:	b21b      	sxth	r3, r3
 801037e:	4617      	mov	r7, r2
 8010380:	4a17      	ldr	r2, [pc, #92]	@ (80103e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8010382:	2b00      	cmp	r3, #0
 8010384:	bfb8      	it	lt
 8010386:	425b      	neglt	r3, r3
 8010388:	9200      	str	r2, [sp, #0]
 801038a:	8aa2      	ldrh	r2, [r4, #20]
 801038c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8010390:	b21b      	sxth	r3, r3
 8010392:	4293      	cmp	r3, r2
 8010394:	f88d 0004 	strb.w	r0, [sp, #4]
 8010398:	f8ad 1008 	strh.w	r1, [sp, #8]
 801039c:	f8ad 800a 	strh.w	r8, [sp, #10]
 80103a0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80103a4:	dc07      	bgt.n	80103b6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80103a6:	1a69      	subs	r1, r5, r1
 80103a8:	b209      	sxth	r1, r1
 80103aa:	2900      	cmp	r1, #0
 80103ac:	bfb8      	it	lt
 80103ae:	4249      	neglt	r1, r1
 80103b0:	b209      	sxth	r1, r1
 80103b2:	428a      	cmp	r2, r1
 80103b4:	da10      	bge.n	80103d8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80103b6:	6920      	ldr	r0, [r4, #16]
 80103b8:	4669      	mov	r1, sp
 80103ba:	6803      	ldr	r3, [r0, #0]
 80103bc:	eba8 0606 	sub.w	r6, r8, r6
 80103c0:	685b      	ldr	r3, [r3, #4]
 80103c2:	4798      	blx	r3
 80103c4:	2300      	movs	r3, #0
 80103c6:	2001      	movs	r0, #1
 80103c8:	1bef      	subs	r7, r5, r7
 80103ca:	8123      	strh	r3, [r4, #8]
 80103cc:	8166      	strh	r6, [r4, #10]
 80103ce:	81a7      	strh	r7, [r4, #12]
 80103d0:	f8a4 8004 	strh.w	r8, [r4, #4]
 80103d4:	80e5      	strh	r5, [r4, #6]
 80103d6:	73a0      	strb	r0, [r4, #14]
 80103d8:	b004      	add	sp, #16
 80103da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103de:	bf00      	nop
 80103e0:	08035be8 	.word	0x08035be8

080103e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80103e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103e6:	461e      	mov	r6, r3
 80103e8:	1e4b      	subs	r3, r1, #1
 80103ea:	2b01      	cmp	r3, #1
 80103ec:	b085      	sub	sp, #20
 80103ee:	4604      	mov	r4, r0
 80103f0:	460d      	mov	r5, r1
 80103f2:	4617      	mov	r7, r2
 80103f4:	d84b      	bhi.n	801048e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80103f6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80103fa:	1cd3      	adds	r3, r2, #3
 80103fc:	b29b      	uxth	r3, r3
 80103fe:	2b06      	cmp	r3, #6
 8010400:	d916      	bls.n	8010430 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8010402:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80104a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010406:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801040a:	f8cd c004 	str.w	ip, [sp, #4]
 801040e:	f04f 0c00 	mov.w	ip, #0
 8010412:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010416:	6900      	ldr	r0, [r0, #16]
 8010418:	f8ad 100c 	strh.w	r1, [sp, #12]
 801041c:	f88d c008 	strb.w	ip, [sp, #8]
 8010420:	f8ad 200a 	strh.w	r2, [sp, #10]
 8010424:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010428:	6803      	ldr	r3, [r0, #0]
 801042a:	a901      	add	r1, sp, #4
 801042c:	689b      	ldr	r3, [r3, #8]
 801042e:	4798      	blx	r3
 8010430:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8010434:	1cd3      	adds	r3, r2, #3
 8010436:	b29b      	uxth	r3, r3
 8010438:	2b06      	cmp	r3, #6
 801043a:	d916      	bls.n	801046a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801043c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80104a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010440:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010444:	f8cd c004 	str.w	ip, [sp, #4]
 8010448:	f04f 0c01 	mov.w	ip, #1
 801044c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010450:	6920      	ldr	r0, [r4, #16]
 8010452:	f8ad 100c 	strh.w	r1, [sp, #12]
 8010456:	f88d c008 	strb.w	ip, [sp, #8]
 801045a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801045e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010462:	6803      	ldr	r3, [r0, #0]
 8010464:	a901      	add	r1, sp, #4
 8010466:	689b      	ldr	r3, [r3, #8]
 8010468:	4798      	blx	r3
 801046a:	4b0d      	ldr	r3, [pc, #52]	@ (80104a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801046c:	6920      	ldr	r0, [r4, #16]
 801046e:	9301      	str	r3, [sp, #4]
 8010470:	2300      	movs	r3, #0
 8010472:	f88d 5008 	strb.w	r5, [sp, #8]
 8010476:	f8ad 700a 	strh.w	r7, [sp, #10]
 801047a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801047e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010482:	6803      	ldr	r3, [r0, #0]
 8010484:	a901      	add	r1, sp, #4
 8010486:	681b      	ldr	r3, [r3, #0]
 8010488:	4798      	blx	r3
 801048a:	b005      	add	sp, #20
 801048c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801048e:	2900      	cmp	r1, #0
 8010490:	d1eb      	bne.n	801046a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8010492:	80a2      	strh	r2, [r4, #4]
 8010494:	80c6      	strh	r6, [r0, #6]
 8010496:	60a1      	str	r1, [r4, #8]
 8010498:	81a1      	strh	r1, [r4, #12]
 801049a:	73a1      	strb	r1, [r4, #14]
 801049c:	e7e5      	b.n	801046a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801049e:	bf00      	nop
 80104a0:	08035bd4 	.word	0x08035bd4
 80104a4:	08035bfc 	.word	0x08035bfc

080104a8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80104a8:	790b      	ldrb	r3, [r1, #4]
 80104aa:	b570      	push	{r4, r5, r6, lr}
 80104ac:	2b00      	cmp	r3, #0
 80104ae:	bf0c      	ite	eq
 80104b0:	2301      	moveq	r3, #1
 80104b2:	2300      	movne	r3, #0
 80104b4:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 80104b8:	4604      	mov	r4, r0
 80104ba:	460e      	mov	r6, r1
 80104bc:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 80104c0:	d109      	bne.n	80104d6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80104c2:	b14d      	cbz	r5, 80104d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80104c4:	7933      	ldrb	r3, [r6, #4]
 80104c6:	2b01      	cmp	r3, #1
 80104c8:	d10c      	bne.n	80104e4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80104ca:	6823      	ldr	r3, [r4, #0]
 80104cc:	4620      	mov	r0, r4
 80104ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104d2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80104d4:	4718      	bx	r3
 80104d6:	b12d      	cbz	r5, 80104e4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80104d8:	6823      	ldr	r3, [r4, #0]
 80104da:	4620      	mov	r0, r4
 80104dc:	695b      	ldr	r3, [r3, #20]
 80104de:	4798      	blx	r3
 80104e0:	2d00      	cmp	r5, #0
 80104e2:	d1ef      	bne.n	80104c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80104e4:	bd70      	pop	{r4, r5, r6, pc}

080104e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80104e6:	b570      	push	{r4, r5, r6, lr}
 80104e8:	4605      	mov	r5, r0
 80104ea:	880b      	ldrh	r3, [r1, #0]
 80104ec:	4604      	mov	r4, r0
 80104ee:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80104f0:	8813      	ldrh	r3, [r2, #0]
 80104f2:	f825 3f30 	strh.w	r3, [r5, #48]!
 80104f6:	4628      	mov	r0, r5
 80104f8:	f7ff fd3c 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80104fc:	4606      	mov	r6, r0
 80104fe:	4628      	mov	r0, r5
 8010500:	f7ff fd6c 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010504:	4605      	mov	r5, r0
 8010506:	6823      	ldr	r3, [r4, #0]
 8010508:	4631      	mov	r1, r6
 801050a:	4620      	mov	r0, r4
 801050c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801050e:	4798      	blx	r3
 8010510:	6823      	ldr	r3, [r4, #0]
 8010512:	4629      	mov	r1, r5
 8010514:	4620      	mov	r0, r4
 8010516:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801051a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801051c:	4718      	bx	r3

0801051e <_ZNK8touchgfx6Button12getSolidRectEv>:
 801051e:	b510      	push	{r4, lr}
 8010520:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8010524:	4604      	mov	r4, r0
 8010526:	2bff      	cmp	r3, #255	@ 0xff
 8010528:	d006      	beq.n	8010538 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801052a:	2300      	movs	r3, #0
 801052c:	8003      	strh	r3, [r0, #0]
 801052e:	8043      	strh	r3, [r0, #2]
 8010530:	8083      	strh	r3, [r0, #4]
 8010532:	80c3      	strh	r3, [r0, #6]
 8010534:	4620      	mov	r0, r4
 8010536:	bd10      	pop	{r4, pc}
 8010538:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801053c:	b11b      	cbz	r3, 8010546 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801053e:	3130      	adds	r1, #48	@ 0x30
 8010540:	f7ff fd80 	bl	8010044 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010544:	e7f6      	b.n	8010534 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010546:	312e      	adds	r1, #46	@ 0x2e
 8010548:	e7fa      	b.n	8010540 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0801054c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801054c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010550:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8010554:	b08a      	sub	sp, #40	@ 0x28
 8010556:	4604      	mov	r4, r0
 8010558:	4688      	mov	r8, r1
 801055a:	2b00      	cmp	r3, #0
 801055c:	d066      	beq.n	801062c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801055e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8010560:	a805      	add	r0, sp, #20
 8010562:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010566:	f7ff fd05 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801056a:	4607      	mov	r7, r0
 801056c:	a805      	add	r0, sp, #20
 801056e:	f7ff fd35 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010572:	2300      	movs	r3, #0
 8010574:	f9b8 6000 	ldrsh.w	r6, [r8]
 8010578:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801057c:	9306      	str	r3, [sp, #24]
 801057e:	4432      	add	r2, r6
 8010580:	b292      	uxth	r2, r2
 8010582:	fa0f fc82 	sxth.w	ip, r2
 8010586:	459c      	cmp	ip, r3
 8010588:	dd52      	ble.n	8010630 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801058a:	42b7      	cmp	r7, r6
 801058c:	dd50      	ble.n	8010630 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801058e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8010592:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010596:	442b      	add	r3, r5
 8010598:	b29b      	uxth	r3, r3
 801059a:	b219      	sxth	r1, r3
 801059c:	2900      	cmp	r1, #0
 801059e:	dd47      	ble.n	8010630 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105a0:	42a8      	cmp	r0, r5
 80105a2:	dd45      	ble.n	8010630 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105a4:	4567      	cmp	r7, ip
 80105a6:	bfb8      	it	lt
 80105a8:	b2ba      	uxthlt	r2, r7
 80105aa:	4288      	cmp	r0, r1
 80105ac:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80105b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80105b4:	bfb8      	it	lt
 80105b6:	b283      	uxthlt	r3, r0
 80105b8:	1b92      	subs	r2, r2, r6
 80105ba:	1b5b      	subs	r3, r3, r5
 80105bc:	f8ad 201c 	strh.w	r2, [sp, #28]
 80105c0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80105c4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80105c8:	f8ad 501a 	strh.w	r5, [sp, #26]
 80105cc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80105d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80105d4:	429a      	cmp	r2, r3
 80105d6:	d026      	beq.n	8010626 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80105d8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80105dc:	2b00      	cmp	r3, #0
 80105de:	dd22      	ble.n	8010626 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80105e0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80105e4:	2b00      	cmp	r3, #0
 80105e6:	dd1e      	ble.n	8010626 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80105e8:	2300      	movs	r3, #0
 80105ea:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80105ee:	6823      	ldr	r3, [r4, #0]
 80105f0:	a908      	add	r1, sp, #32
 80105f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80105f4:	4620      	mov	r0, r4
 80105f6:	4798      	blx	r3
 80105f8:	4b0f      	ldr	r3, [pc, #60]	@ (8010638 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80105fa:	681b      	ldr	r3, [r3, #0]
 80105fc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010600:	b10a      	cbz	r2, 8010606 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8010602:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8010604:	b900      	cbnz	r0, 8010608 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8010606:	6898      	ldr	r0, [r3, #8]
 8010608:	2501      	movs	r5, #1
 801060a:	6801      	ldr	r1, [r0, #0]
 801060c:	9502      	str	r5, [sp, #8]
 801060e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8010612:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8010616:	9401      	str	r4, [sp, #4]
 8010618:	ac06      	add	r4, sp, #24
 801061a:	9400      	str	r4, [sp, #0]
 801061c:	688c      	ldr	r4, [r1, #8]
 801061e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010622:	a905      	add	r1, sp, #20
 8010624:	47a0      	blx	r4
 8010626:	b00a      	add	sp, #40	@ 0x28
 8010628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801062c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801062e:	e797      	b.n	8010560 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010630:	2300      	movs	r3, #0
 8010632:	9307      	str	r3, [sp, #28]
 8010634:	e7ca      	b.n	80105cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8010636:	bf00      	nop
 8010638:	20082ec4 	.word	0x20082ec4

0801063c <nema_rb_init>:
 801063c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010640:	6805      	ldr	r5, [r0, #0]
 8010642:	4f23      	ldr	r7, [pc, #140]	@ (80106d0 <nema_rb_init+0x94>)
 8010644:	2d00      	cmp	r5, #0
 8010646:	603d      	str	r5, [r7, #0]
 8010648:	dd3c      	ble.n	80106c4 <nema_rb_init+0x88>
 801064a:	f8df c090 	ldr.w	ip, [pc, #144]	@ 80106dc <nema_rb_init+0xa0>
 801064e:	10ab      	asrs	r3, r5, #2
 8010650:	3b04      	subs	r3, #4
 8010652:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 80106e0 <nema_rb_init+0xa4>
 8010656:	6886      	ldr	r6, [r0, #8]
 8010658:	4c1e      	ldr	r4, [pc, #120]	@ (80106d4 <nema_rb_init+0x98>)
 801065a:	f8cc 3000 	str.w	r3, [ip]
 801065e:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 80106e4 <nema_rb_init+0xa8>
 8010662:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8010666:	f8ce 0000 	str.w	r0, [lr]
 801066a:	6026      	str	r6, [r4, #0]
 801066c:	f8c8 c000 	str.w	ip, [r8]
 8010670:	b329      	cbz	r1, 80106be <nema_rb_init+0x82>
 8010672:	2400      	movs	r4, #0
 8010674:	f8df e070 	ldr.w	lr, [pc, #112]	@ 80106e8 <nema_rb_init+0xac>
 8010678:	4917      	ldr	r1, [pc, #92]	@ (80106d8 <nema_rb_init+0x9c>)
 801067a:	e9c0 4404 	strd	r4, r4, [r0, #16]
 801067e:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 8010682:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010686:	e9c3 1502 	strd	r1, r5, [r3, #8]
 801068a:	f8c3 c004 	str.w	ip, [r3, #4]
 801068e:	f7f2 fc17 	bl	8002ec0 <nema_buffer_flush>
 8010692:	4621      	mov	r1, r4
 8010694:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 8010698:	f7f2 fb38 	bl	8002d0c <nema_reg_write>
 801069c:	f8d8 1000 	ldr.w	r1, [r8]
 80106a0:	20ec      	movs	r0, #236	@ 0xec
 80106a2:	f041 0106 	orr.w	r1, r1, #6
 80106a6:	f7f2 fb31 	bl	8002d0c <nema_reg_write>
 80106aa:	f8d8 1000 	ldr.w	r1, [r8]
 80106ae:	20f0      	movs	r0, #240	@ 0xf0
 80106b0:	f7f2 fb2c 	bl	8002d0c <nema_reg_write>
 80106b4:	6839      	ldr	r1, [r7, #0]
 80106b6:	20f4      	movs	r0, #244	@ 0xf4
 80106b8:	f7f2 fb28 	bl	8002d0c <nema_reg_write>
 80106bc:	4621      	mov	r1, r4
 80106be:	4608      	mov	r0, r1
 80106c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106c4:	2004      	movs	r0, #4
 80106c6:	f000 fa25 	bl	8010b14 <nema_set_error>
 80106ca:	f04f 31ff 	mov.w	r1, #4294967295
 80106ce:	e7f6      	b.n	80106be <nema_rb_init+0x82>
 80106d0:	20082f60 	.word	0x20082f60
 80106d4:	20082f58 	.word	0x20082f58
 80106d8:	ff0000f4 	.word	0xff0000f4
 80106dc:	20082f5c 	.word	0x20082f5c
 80106e0:	20082f50 	.word	0x20082f50
 80106e4:	20082f54 	.word	0x20082f54
 80106e8:	ff0000f0 	.word	0xff0000f0

080106ec <nema_rb_submit_cmdlist2>:
 80106ec:	2900      	cmp	r1, #0
 80106ee:	d074      	beq.n	80107da <nema_rb_submit_cmdlist2+0xee>
 80106f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106f4:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 80107f0 <nema_rb_submit_cmdlist2+0x104>
 80106f8:	4b39      	ldr	r3, [pc, #228]	@ (80107e0 <nema_rb_submit_cmdlist2+0xf4>)
 80106fa:	f8d8 2000 	ldr.w	r2, [r8]
 80106fe:	681d      	ldr	r5, [r3, #0]
 8010700:	6913      	ldr	r3, [r2, #16]
 8010702:	468c      	mov	ip, r1
 8010704:	4c37      	ldr	r4, [pc, #220]	@ (80107e4 <nema_rb_submit_cmdlist2+0xf8>)
 8010706:	1d19      	adds	r1, r3, #4
 8010708:	42a9      	cmp	r1, r5
 801070a:	6824      	ldr	r4, [r4, #0]
 801070c:	db0a      	blt.n	8010724 <nema_rb_submit_cmdlist2+0x38>
 801070e:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8010712:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010716:	6913      	ldr	r3, [r2, #16]
 8010718:	3301      	adds	r3, #1
 801071a:	429d      	cmp	r5, r3
 801071c:	6113      	str	r3, [r2, #16]
 801071e:	dc59      	bgt.n	80107d4 <nema_rb_submit_cmdlist2+0xe8>
 8010720:	2300      	movs	r3, #0
 8010722:	6113      	str	r3, [r2, #16]
 8010724:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8010728:	f04f 0e00 	mov.w	lr, #0
 801072c:	e009      	b.n	8010742 <nema_rb_submit_cmdlist2+0x56>
 801072e:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010732:	6913      	ldr	r3, [r2, #16]
 8010734:	3301      	adds	r3, #1
 8010736:	429d      	cmp	r5, r3
 8010738:	6113      	str	r3, [r2, #16]
 801073a:	bfdc      	itt	le
 801073c:	2300      	movle	r3, #0
 801073e:	f8c2 e010 	strle.w	lr, [r2, #16]
 8010742:	f013 0703 	ands.w	r7, r3, #3
 8010746:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 801074a:	d1f0      	bne.n	801072e <nema_rb_submit_cmdlist2+0x42>
 801074c:	23f0      	movs	r3, #240	@ 0xf0
 801074e:	6033      	str	r3, [r6, #0]
 8010750:	6913      	ldr	r3, [r2, #16]
 8010752:	3301      	adds	r3, #1
 8010754:	429d      	cmp	r5, r3
 8010756:	bfd3      	iteet	le
 8010758:	4623      	movle	r3, r4
 801075a:	6113      	strgt	r3, [r2, #16]
 801075c:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 8010760:	6117      	strle	r7, [r2, #16]
 8010762:	6018      	str	r0, [r3, #0]
 8010764:	6913      	ldr	r3, [r2, #16]
 8010766:	3301      	adds	r3, #1
 8010768:	429d      	cmp	r5, r3
 801076a:	dd2f      	ble.n	80107cc <nema_rb_submit_cmdlist2+0xe0>
 801076c:	6113      	str	r3, [r2, #16]
 801076e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010772:	491d      	ldr	r1, [pc, #116]	@ (80107e8 <nema_rb_submit_cmdlist2+0xfc>)
 8010774:	4610      	mov	r0, r2
 8010776:	6019      	str	r1, [r3, #0]
 8010778:	6913      	ldr	r3, [r2, #16]
 801077a:	3301      	adds	r3, #1
 801077c:	429d      	cmp	r5, r3
 801077e:	bfd3      	iteet	le
 8010780:	2300      	movle	r3, #0
 8010782:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8010786:	6113      	strgt	r3, [r2, #16]
 8010788:	6113      	strle	r3, [r2, #16]
 801078a:	f8c4 c000 	str.w	ip, [r4]
 801078e:	6913      	ldr	r3, [r2, #16]
 8010790:	3301      	adds	r3, #1
 8010792:	429d      	cmp	r5, r3
 8010794:	bfd8      	it	le
 8010796:	2300      	movle	r3, #0
 8010798:	6113      	str	r3, [r2, #16]
 801079a:	f7f2 fb91 	bl	8002ec0 <nema_buffer_flush>
 801079e:	4a13      	ldr	r2, [pc, #76]	@ (80107ec <nema_rb_submit_cmdlist2+0x100>)
 80107a0:	f8d8 3000 	ldr.w	r3, [r8]
 80107a4:	6811      	ldr	r1, [r2, #0]
 80107a6:	691b      	ldr	r3, [r3, #16]
 80107a8:	20ec      	movs	r0, #236	@ 0xec
 80107aa:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80107ae:	f041 0104 	orr.w	r1, r1, #4
 80107b2:	f7f2 faab 	bl	8002d0c <nema_reg_write>
 80107b6:	f8d8 3000 	ldr.w	r3, [r8]
 80107ba:	6958      	ldr	r0, [r3, #20]
 80107bc:	3001      	adds	r0, #1
 80107be:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 80107c2:	bfa8      	it	ge
 80107c4:	2000      	movge	r0, #0
 80107c6:	6158      	str	r0, [r3, #20]
 80107c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107cc:	2100      	movs	r1, #0
 80107ce:	4623      	mov	r3, r4
 80107d0:	6111      	str	r1, [r2, #16]
 80107d2:	e7ce      	b.n	8010772 <nema_rb_submit_cmdlist2+0x86>
 80107d4:	2b00      	cmp	r3, #0
 80107d6:	d19c      	bne.n	8010712 <nema_rb_submit_cmdlist2+0x26>
 80107d8:	e7a4      	b.n	8010724 <nema_rb_submit_cmdlist2+0x38>
 80107da:	f04f 30ff 	mov.w	r0, #4294967295
 80107de:	4770      	bx	lr
 80107e0:	20082f5c 	.word	0x20082f5c
 80107e4:	20082f58 	.word	0x20082f58
 80107e8:	000200f4 	.word	0x000200f4
 80107ec:	20082f54 	.word	0x20082f54
 80107f0:	20082f50 	.word	0x20082f50

080107f4 <nema_rb_submit_cmdlist>:
 80107f4:	68c0      	ldr	r0, [r0, #12]
 80107f6:	f7ff bf79 	b.w	80106ec <nema_rb_submit_cmdlist2>
 80107fa:	bf00      	nop

080107fc <nema_rb_inline_cmd>:
 80107fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107fe:	4e21      	ldr	r6, [pc, #132]	@ (8010884 <nema_rb_inline_cmd+0x88>)
 8010800:	4b21      	ldr	r3, [pc, #132]	@ (8010888 <nema_rb_inline_cmd+0x8c>)
 8010802:	6832      	ldr	r2, [r6, #0]
 8010804:	681d      	ldr	r5, [r3, #0]
 8010806:	6913      	ldr	r3, [r2, #16]
 8010808:	4c20      	ldr	r4, [pc, #128]	@ (801088c <nema_rb_inline_cmd+0x90>)
 801080a:	1c5f      	adds	r7, r3, #1
 801080c:	42af      	cmp	r7, r5
 801080e:	6824      	ldr	r4, [r4, #0]
 8010810:	db24      	blt.n	801085c <nema_rb_inline_cmd+0x60>
 8010812:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 8010816:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 801081a:	6913      	ldr	r3, [r2, #16]
 801081c:	3301      	adds	r3, #1
 801081e:	429d      	cmp	r5, r3
 8010820:	6113      	str	r3, [r2, #16]
 8010822:	dc17      	bgt.n	8010854 <nema_rb_inline_cmd+0x58>
 8010824:	2700      	movs	r7, #0
 8010826:	4623      	mov	r3, r4
 8010828:	6117      	str	r7, [r2, #16]
 801082a:	6018      	str	r0, [r3, #0]
 801082c:	6913      	ldr	r3, [r2, #16]
 801082e:	3301      	adds	r3, #1
 8010830:	429d      	cmp	r5, r3
 8010832:	bfd3      	iteet	le
 8010834:	2300      	movle	r3, #0
 8010836:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 801083a:	6113      	strgt	r3, [r2, #16]
 801083c:	6113      	strle	r3, [r2, #16]
 801083e:	6021      	str	r1, [r4, #0]
 8010840:	6913      	ldr	r3, [r2, #16]
 8010842:	3301      	adds	r3, #1
 8010844:	429d      	cmp	r5, r3
 8010846:	bfd8      	it	le
 8010848:	2300      	movle	r3, #0
 801084a:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 801084e:	6113      	str	r3, [r2, #16]
 8010850:	d107      	bne.n	8010862 <nema_rb_inline_cmd+0x66>
 8010852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010854:	2b00      	cmp	r3, #0
 8010856:	d1de      	bne.n	8010816 <nema_rb_inline_cmd+0x1a>
 8010858:	4623      	mov	r3, r4
 801085a:	e7e6      	b.n	801082a <nema_rb_inline_cmd+0x2e>
 801085c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010860:	e7e3      	b.n	801082a <nema_rb_inline_cmd+0x2e>
 8010862:	4610      	mov	r0, r2
 8010864:	f7f2 fb2c 	bl	8002ec0 <nema_buffer_flush>
 8010868:	6833      	ldr	r3, [r6, #0]
 801086a:	4a09      	ldr	r2, [pc, #36]	@ (8010890 <nema_rb_inline_cmd+0x94>)
 801086c:	691b      	ldr	r3, [r3, #16]
 801086e:	6811      	ldr	r1, [r2, #0]
 8010870:	20ec      	movs	r0, #236	@ 0xec
 8010872:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010876:	f041 0104 	orr.w	r1, r1, #4
 801087a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801087e:	f7f2 ba45 	b.w	8002d0c <nema_reg_write>
 8010882:	bf00      	nop
 8010884:	20082f50 	.word	0x20082f50
 8010888:	20082f5c 	.word	0x20082f5c
 801088c:	20082f58 	.word	0x20082f58
 8010890:	20082f54 	.word	0x20082f54

08010894 <nema_rb_force_flush>:
 8010894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010896:	4e36      	ldr	r6, [pc, #216]	@ (8010970 <nema_rb_force_flush+0xdc>)
 8010898:	4b36      	ldr	r3, [pc, #216]	@ (8010974 <nema_rb_force_flush+0xe0>)
 801089a:	6830      	ldr	r0, [r6, #0]
 801089c:	6819      	ldr	r1, [r3, #0]
 801089e:	6903      	ldr	r3, [r0, #16]
 80108a0:	4a35      	ldr	r2, [pc, #212]	@ (8010978 <nema_rb_force_flush+0xe4>)
 80108a2:	1d1c      	adds	r4, r3, #4
 80108a4:	428c      	cmp	r4, r1
 80108a6:	6812      	ldr	r2, [r2, #0]
 80108a8:	db0a      	blt.n	80108c0 <nema_rb_force_flush+0x2c>
 80108aa:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 80108ae:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 80108b2:	6903      	ldr	r3, [r0, #16]
 80108b4:	3301      	adds	r3, #1
 80108b6:	4299      	cmp	r1, r3
 80108b8:	6103      	str	r3, [r0, #16]
 80108ba:	dc51      	bgt.n	8010960 <nema_rb_force_flush+0xcc>
 80108bc:	2300      	movs	r3, #0
 80108be:	6103      	str	r3, [r0, #16]
 80108c0:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 80108c4:	2700      	movs	r7, #0
 80108c6:	e008      	b.n	80108da <nema_rb_force_flush+0x46>
 80108c8:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 80108cc:	6903      	ldr	r3, [r0, #16]
 80108ce:	3301      	adds	r3, #1
 80108d0:	4299      	cmp	r1, r3
 80108d2:	6103      	str	r3, [r0, #16]
 80108d4:	bfdc      	itt	le
 80108d6:	2300      	movle	r3, #0
 80108d8:	6107      	strle	r7, [r0, #16]
 80108da:	f013 0c03 	ands.w	ip, r3, #3
 80108de:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 80108e2:	d1f1      	bne.n	80108c8 <nema_rb_force_flush+0x34>
 80108e4:	4d25      	ldr	r5, [pc, #148]	@ (801097c <nema_rb_force_flush+0xe8>)
 80108e6:	4f26      	ldr	r7, [pc, #152]	@ (8010980 <nema_rb_force_flush+0xec>)
 80108e8:	6025      	str	r5, [r4, #0]
 80108ea:	6904      	ldr	r4, [r0, #16]
 80108ec:	683d      	ldr	r5, [r7, #0]
 80108ee:	3401      	adds	r4, #1
 80108f0:	42a1      	cmp	r1, r4
 80108f2:	bfd8      	it	le
 80108f4:	4614      	movle	r4, r2
 80108f6:	f103 0304 	add.w	r3, r3, #4
 80108fa:	bfc8      	it	gt
 80108fc:	6104      	strgt	r4, [r0, #16]
 80108fe:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8010902:	bfcc      	ite	gt
 8010904:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 8010908:	f8c0 c010 	strle.w	ip, [r0, #16]
 801090c:	6023      	str	r3, [r4, #0]
 801090e:	6903      	ldr	r3, [r0, #16]
 8010910:	3301      	adds	r3, #1
 8010912:	4299      	cmp	r1, r3
 8010914:	dd27      	ble.n	8010966 <nema_rb_force_flush+0xd2>
 8010916:	6103      	str	r3, [r0, #16]
 8010918:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801091c:	4c19      	ldr	r4, [pc, #100]	@ (8010984 <nema_rb_force_flush+0xf0>)
 801091e:	601c      	str	r4, [r3, #0]
 8010920:	6903      	ldr	r3, [r0, #16]
 8010922:	3301      	adds	r3, #1
 8010924:	4299      	cmp	r1, r3
 8010926:	bfd5      	itete	le
 8010928:	2300      	movle	r3, #0
 801092a:	6103      	strgt	r3, [r0, #16]
 801092c:	6103      	strle	r3, [r0, #16]
 801092e:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 8010932:	4b15      	ldr	r3, [pc, #84]	@ (8010988 <nema_rb_force_flush+0xf4>)
 8010934:	681b      	ldr	r3, [r3, #0]
 8010936:	6013      	str	r3, [r2, #0]
 8010938:	6903      	ldr	r3, [r0, #16]
 801093a:	3301      	adds	r3, #1
 801093c:	4299      	cmp	r1, r3
 801093e:	bfd8      	it	le
 8010940:	2300      	movle	r3, #0
 8010942:	6103      	str	r3, [r0, #16]
 8010944:	f7f2 fabc 	bl	8002ec0 <nema_buffer_flush>
 8010948:	6833      	ldr	r3, [r6, #0]
 801094a:	6839      	ldr	r1, [r7, #0]
 801094c:	691b      	ldr	r3, [r3, #16]
 801094e:	20ec      	movs	r0, #236	@ 0xec
 8010950:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010954:	f041 0104 	orr.w	r1, r1, #4
 8010958:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801095c:	f7f2 b9d6 	b.w	8002d0c <nema_reg_write>
 8010960:	2b00      	cmp	r3, #0
 8010962:	d1a4      	bne.n	80108ae <nema_rb_force_flush+0x1a>
 8010964:	e7ac      	b.n	80108c0 <nema_rb_force_flush+0x2c>
 8010966:	2400      	movs	r4, #0
 8010968:	4613      	mov	r3, r2
 801096a:	6104      	str	r4, [r0, #16]
 801096c:	e7d6      	b.n	801091c <nema_rb_force_flush+0x88>
 801096e:	bf00      	nop
 8010970:	20082f50 	.word	0x20082f50
 8010974:	20082f5c 	.word	0x20082f5c
 8010978:	20082f58 	.word	0x20082f58
 801097c:	ff0000f0 	.word	0xff0000f0
 8010980:	20082f54 	.word	0x20082f54
 8010984:	ff0000f4 	.word	0xff0000f4
 8010988:	20082f60 	.word	0x20082f60

0801098c <nema_rb_submit_cl_id>:
 801098c:	b510      	push	{r4, lr}
 801098e:	1e04      	subs	r4, r0, #0
 8010990:	dd40      	ble.n	8010a14 <nema_rb_submit_cl_id+0x88>
 8010992:	2000      	movs	r0, #0
 8010994:	f7f2 fa95 	bl	8002ec2 <nema_mutex_lock>
 8010998:	4621      	mov	r1, r4
 801099a:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 801099e:	f7ff ff2d 	bl	80107fc <nema_rb_inline_cmd>
 80109a2:	4a1d      	ldr	r2, [pc, #116]	@ (8010a18 <nema_rb_submit_cl_id+0x8c>)
 80109a4:	4b1d      	ldr	r3, [pc, #116]	@ (8010a1c <nema_rb_submit_cl_id+0x90>)
 80109a6:	6812      	ldr	r2, [r2, #0]
 80109a8:	6818      	ldr	r0, [r3, #0]
 80109aa:	6913      	ldr	r3, [r2, #16]
 80109ac:	1c59      	adds	r1, r3, #1
 80109ae:	4281      	cmp	r1, r0
 80109b0:	db0e      	blt.n	80109d0 <nema_rb_submit_cl_id+0x44>
 80109b2:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 80109b6:	491a      	ldr	r1, [pc, #104]	@ (8010a20 <nema_rb_submit_cl_id+0x94>)
 80109b8:	6809      	ldr	r1, [r1, #0]
 80109ba:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80109be:	6913      	ldr	r3, [r2, #16]
 80109c0:	3301      	adds	r3, #1
 80109c2:	4298      	cmp	r0, r3
 80109c4:	6113      	str	r3, [r2, #16]
 80109c6:	dc21      	bgt.n	8010a0c <nema_rb_submit_cl_id+0x80>
 80109c8:	2400      	movs	r4, #0
 80109ca:	460b      	mov	r3, r1
 80109cc:	6114      	str	r4, [r2, #16]
 80109ce:	e003      	b.n	80109d8 <nema_rb_submit_cl_id+0x4c>
 80109d0:	4913      	ldr	r1, [pc, #76]	@ (8010a20 <nema_rb_submit_cl_id+0x94>)
 80109d2:	6809      	ldr	r1, [r1, #0]
 80109d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80109d8:	24f8      	movs	r4, #248	@ 0xf8
 80109da:	601c      	str	r4, [r3, #0]
 80109dc:	6913      	ldr	r3, [r2, #16]
 80109de:	3301      	adds	r3, #1
 80109e0:	4298      	cmp	r0, r3
 80109e2:	bfd5      	itete	le
 80109e4:	2300      	movle	r3, #0
 80109e6:	6113      	strgt	r3, [r2, #16]
 80109e8:	6113      	strle	r3, [r2, #16]
 80109ea:	eb01 0183 	addgt.w	r1, r1, r3, lsl #2
 80109ee:	2301      	movs	r3, #1
 80109f0:	600b      	str	r3, [r1, #0]
 80109f2:	6913      	ldr	r3, [r2, #16]
 80109f4:	3301      	adds	r3, #1
 80109f6:	4298      	cmp	r0, r3
 80109f8:	bfd8      	it	le
 80109fa:	2300      	movle	r3, #0
 80109fc:	6113      	str	r3, [r2, #16]
 80109fe:	f7ff ff49 	bl	8010894 <nema_rb_force_flush>
 8010a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a06:	2000      	movs	r0, #0
 8010a08:	f7f2 ba5d 	b.w	8002ec6 <nema_mutex_unlock>
 8010a0c:	2b00      	cmp	r3, #0
 8010a0e:	d1d4      	bne.n	80109ba <nema_rb_submit_cl_id+0x2e>
 8010a10:	460b      	mov	r3, r1
 8010a12:	e7e1      	b.n	80109d8 <nema_rb_submit_cl_id+0x4c>
 8010a14:	bd10      	pop	{r4, pc}
 8010a16:	bf00      	nop
 8010a18:	20082f50 	.word	0x20082f50
 8010a1c:	20082f5c 	.word	0x20082f5c
 8010a20:	20082f58 	.word	0x20082f58

08010a24 <init_nema_regs>:
 8010a24:	b538      	push	{r3, r4, r5, lr}
 8010a26:	2100      	movs	r1, #0
 8010a28:	20e8      	movs	r0, #232	@ 0xe8
 8010a2a:	f7f2 f96f 	bl	8002d0c <nema_reg_write>
 8010a2e:	2100      	movs	r1, #0
 8010a30:	20fc      	movs	r0, #252	@ 0xfc
 8010a32:	f7f2 f96b 	bl	8002d0c <nema_reg_write>
 8010a36:	2101      	movs	r1, #1
 8010a38:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8010a3c:	f7f2 f966 	bl	8002d0c <nema_reg_write>
 8010a40:	2000      	movs	r0, #0
 8010a42:	f001 fd35 	bl	80124b0 <nema_set_interrupt_ctrl>
 8010a46:	f00d fa9d 	bl	801df84 <nema_blender_init>
 8010a4a:	2100      	movs	r1, #0
 8010a4c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010a50:	f00d f9a4 	bl	801dd9c <nema_cl_add_cmd>
 8010a54:	f04f 31ff 	mov.w	r1, #4294967295
 8010a58:	f44f 7001 	mov.w	r0, #516	@ 0x204
 8010a5c:	f00d f99e 	bl	801dd9c <nema_cl_add_cmd>
 8010a60:	f001 fa92 	bl	8011f88 <nema_readHwConfig>
 8010a64:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8010a68:	d015      	beq.n	8010a96 <init_nema_regs+0x72>
 8010a6a:	2007      	movs	r0, #7
 8010a6c:	f001 fc20 	bl	80122b0 <nema_set_depth_ctrl>
 8010a70:	2300      	movs	r3, #0
 8010a72:	4c10      	ldr	r4, [pc, #64]	@ (8010ab4 <init_nema_regs+0x90>)
 8010a74:	7820      	ldrb	r0, [r4, #0]
 8010a76:	7063      	strb	r3, [r4, #1]
 8010a78:	f001 fa98 	bl	8011fac <nema_enable_tiling>
 8010a7c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8010a80:	2500      	movs	r5, #0
 8010a82:	6962      	ldr	r2, [r4, #20]
 8010a84:	430b      	orrs	r3, r1
 8010a86:	4313      	orrs	r3, r2
 8010a88:	e9c4 5303 	strd	r5, r3, [r4, #12]
 8010a8c:	f001 fa8a 	bl	8011fa4 <nema_readHwConfigH>
 8010a90:	0583      	lsls	r3, r0, #22
 8010a92:	d403      	bmi.n	8010a9c <init_nema_regs+0x78>
 8010a94:	bd38      	pop	{r3, r4, r5, pc}
 8010a96:	4c07      	ldr	r4, [pc, #28]	@ (8010ab4 <init_nema_regs+0x90>)
 8010a98:	70a0      	strb	r0, [r4, #2]
 8010a9a:	e7ef      	b.n	8010a7c <init_nema_regs+0x58>
 8010a9c:	4629      	mov	r1, r5
 8010a9e:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8010aa2:	f7f2 f933 	bl	8002d0c <nema_reg_write>
 8010aa6:	4629      	mov	r1, r5
 8010aa8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010aac:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8010ab0:	f7f2 b92c 	b.w	8002d0c <nema_reg_write>
 8010ab4:	20000064 	.word	0x20000064

08010ab8 <nema_init>:
 8010ab8:	b510      	push	{r4, lr}
 8010aba:	f7f2 f96f 	bl	8002d9c <nema_sys_init>
 8010abe:	1e04      	subs	r4, r0, #0
 8010ac0:	db11      	blt.n	8010ae6 <nema_init+0x2e>
 8010ac2:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8010ac6:	f7f2 f91b 	bl	8002d00 <nema_reg_read>
 8010aca:	4b10      	ldr	r3, [pc, #64]	@ (8010b0c <nema_init+0x54>)
 8010acc:	4298      	cmp	r0, r3
 8010ace:	d114      	bne.n	8010afa <nema_init+0x42>
 8010ad0:	f00d f870 	bl	801dbb4 <nema_cl_unbind>
 8010ad4:	22d0      	movs	r2, #208	@ 0xd0
 8010ad6:	2100      	movs	r1, #0
 8010ad8:	480d      	ldr	r0, [pc, #52]	@ (8010b10 <nema_init+0x58>)
 8010ada:	f021 fef4 	bl	80328c6 <memset>
 8010ade:	b14c      	cbz	r4, 8010af4 <nema_init+0x3c>
 8010ae0:	2400      	movs	r4, #0
 8010ae2:	4620      	mov	r0, r4
 8010ae4:	bd10      	pop	{r4, pc}
 8010ae6:	4a0a      	ldr	r2, [pc, #40]	@ (8010b10 <nema_init+0x58>)
 8010ae8:	4620      	mov	r0, r4
 8010aea:	6993      	ldr	r3, [r2, #24]
 8010aec:	f043 0301 	orr.w	r3, r3, #1
 8010af0:	6193      	str	r3, [r2, #24]
 8010af2:	bd10      	pop	{r4, pc}
 8010af4:	f7ff ff96 	bl	8010a24 <init_nema_regs>
 8010af8:	e7f3      	b.n	8010ae2 <nema_init+0x2a>
 8010afa:	4a05      	ldr	r2, [pc, #20]	@ (8010b10 <nema_init+0x58>)
 8010afc:	f04f 34ff 	mov.w	r4, #4294967295
 8010b00:	6993      	ldr	r3, [r2, #24]
 8010b02:	f043 0302 	orr.w	r3, r3, #2
 8010b06:	6193      	str	r3, [r2, #24]
 8010b08:	e7eb      	b.n	8010ae2 <nema_init+0x2a>
 8010b0a:	bf00      	nop
 8010b0c:	86362000 	.word	0x86362000
 8010b10:	20000064 	.word	0x20000064

08010b14 <nema_set_error>:
 8010b14:	4a02      	ldr	r2, [pc, #8]	@ (8010b20 <nema_set_error+0xc>)
 8010b16:	6993      	ldr	r3, [r2, #24]
 8010b18:	4318      	orrs	r0, r3
 8010b1a:	6190      	str	r0, [r2, #24]
 8010b1c:	4770      	bx	lr
 8010b1e:	bf00      	nop
 8010b20:	20000064 	.word	0x20000064

08010b24 <nema_bind_tex>:
 8010b24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010b28:	1c44      	adds	r4, r0, #1
 8010b2a:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010b2e:	f89d 6028 	ldrb.w	r6, [sp, #40]	@ 0x28
 8010b32:	d029      	beq.n	8010b88 <nema_bind_tex+0x64>
 8010b34:	4698      	mov	r8, r3
 8010b36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b38:	4617      	mov	r7, r2
 8010b3a:	3301      	adds	r3, #1
 8010b3c:	4689      	mov	r9, r1
 8010b3e:	4604      	mov	r4, r0
 8010b40:	d035      	beq.n	8010bae <nema_bind_tex+0x8a>
 8010b42:	b31c      	cbz	r4, 8010b8c <nema_bind_tex+0x68>
 8010b44:	4d50      	ldr	r5, [pc, #320]	@ (8010c88 <nema_bind_tex+0x164>)
 8010b46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b48:	2201      	movs	r2, #1
 8010b4a:	0436      	lsls	r6, r6, #16
 8010b4c:	b29b      	uxth	r3, r3
 8010b4e:	ea46 660a 	orr.w	r6, r6, sl, lsl #24
 8010b52:	431e      	orrs	r6, r3
 8010b54:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8010b58:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8010b5c:	2003      	movs	r0, #3
 8010b5e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8010b60:	e9c5 970c 	strd	r9, r7, [r5, #48]	@ 0x30
 8010b64:	f8c5 8038 	str.w	r8, [r5, #56]	@ 0x38
 8010b68:	642a      	str	r2, [r5, #64]	@ 0x40
 8010b6a:	f00d f8bb 	bl	801dce4 <nema_cl_get_space>
 8010b6e:	b158      	cbz	r0, 8010b88 <nema_bind_tex+0x64>
 8010b70:	0124      	lsls	r4, r4, #4
 8010b72:	e9c0 4900 	strd	r4, r9, [r0]
 8010b76:	1d23      	adds	r3, r4, #4
 8010b78:	6083      	str	r3, [r0, #8]
 8010b7a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 8010b7c:	3408      	adds	r4, #8
 8010b7e:	e9c0 3403 	strd	r3, r4, [r0, #12]
 8010b82:	ea47 4708 	orr.w	r7, r7, r8, lsl #16
 8010b86:	6147      	str	r7, [r0, #20]
 8010b88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b8c:	f00a 037f 	and.w	r3, sl, #127	@ 0x7f
 8010b90:	2b12      	cmp	r3, #18
 8010b92:	d03d      	beq.n	8010c10 <nema_bind_tex+0xec>
 8010b94:	f1a3 0216 	sub.w	r2, r3, #22
 8010b98:	2a01      	cmp	r2, #1
 8010b9a:	d939      	bls.n	8010c10 <nema_bind_tex+0xec>
 8010b9c:	3b4c      	subs	r3, #76	@ 0x4c
 8010b9e:	2b01      	cmp	r3, #1
 8010ba0:	d96a      	bls.n	8010c78 <nema_bind_tex+0x154>
 8010ba2:	4d39      	ldr	r5, [pc, #228]	@ (8010c88 <nema_bind_tex+0x164>)
 8010ba4:	7868      	ldrb	r0, [r5, #1]
 8010ba6:	f001 fa01 	bl	8011fac <nema_enable_tiling>
 8010baa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010bac:	e7cc      	b.n	8010b48 <nema_bind_tex+0x24>
 8010bae:	06f3      	lsls	r3, r6, #27
 8010bb0:	f00a 017f 	and.w	r1, sl, #127	@ 0x7f
 8010bb4:	d434      	bmi.n	8010c20 <nema_bind_tex+0xfc>
 8010bb6:	4613      	mov	r3, r2
 8010bb8:	f1a1 020b 	sub.w	r2, r1, #11
 8010bbc:	2a42      	cmp	r2, #66	@ 0x42
 8010bbe:	d84f      	bhi.n	8010c60 <nema_bind_tex+0x13c>
 8010bc0:	e8df f002 	tbb	[pc, r2]
 8010bc4:	4e4e3535 	.word	0x4e4e3535
 8010bc8:	484e4e4e 	.word	0x484e4e4e
 8010bcc:	224e4e4e 	.word	0x224e4e4e
 8010bd0:	4e4e4e22 	.word	0x4e4e4e22
 8010bd4:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bd8:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bdc:	4e4e4e4e 	.word	0x4e4e4e4e
 8010be0:	35343c35 	.word	0x35343c35
 8010be4:	4e4e343c 	.word	0x4e4e343c
 8010be8:	4e3c3c4e 	.word	0x4e3c3c4e
 8010bec:	4e34344e 	.word	0x4e34344e
 8010bf0:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bf4:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bf8:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bfc:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c00:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c04:	424e      	.short	0x424e
 8010c06:	42          	.byte	0x42
 8010c07:	00          	.byte	0x00
 8010c08:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c0e:	bb2c      	cbnz	r4, 8010c5c <nema_bind_tex+0x138>
 8010c10:	2301      	movs	r3, #1
 8010c12:	4d1d      	ldr	r5, [pc, #116]	@ (8010c88 <nema_bind_tex+0x164>)
 8010c14:	4618      	mov	r0, r3
 8010c16:	702b      	strb	r3, [r5, #0]
 8010c18:	f001 f9c8 	bl	8011fac <nema_enable_tiling>
 8010c1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c1e:	e793      	b.n	8010b48 <nema_bind_tex+0x24>
 8010c20:	1cd3      	adds	r3, r2, #3
 8010c22:	bf48      	it	mi
 8010c24:	1d93      	addmi	r3, r2, #6
 8010c26:	f023 0303 	bic.w	r3, r3, #3
 8010c2a:	e7c5      	b.n	8010bb8 <nema_bind_tex+0x94>
 8010c2c:	009b      	lsls	r3, r3, #2
 8010c2e:	1dda      	adds	r2, r3, #7
 8010c30:	d407      	bmi.n	8010c42 <nema_bind_tex+0x11e>
 8010c32:	10d3      	asrs	r3, r2, #3
 8010c34:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c36:	2c00      	cmp	r4, #0
 8010c38:	d0a8      	beq.n	8010b8c <nema_bind_tex+0x68>
 8010c3a:	e783      	b.n	8010b44 <nema_bind_tex+0x20>
 8010c3c:	005b      	lsls	r3, r3, #1
 8010c3e:	1dda      	adds	r2, r3, #7
 8010c40:	d5f7      	bpl.n	8010c32 <nema_bind_tex+0x10e>
 8010c42:	f103 020e 	add.w	r2, r3, #14
 8010c46:	e7f4      	b.n	8010c32 <nema_bind_tex+0x10e>
 8010c48:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c4e:	2c00      	cmp	r4, #0
 8010c50:	d09c      	beq.n	8010b8c <nema_bind_tex+0x68>
 8010c52:	e777      	b.n	8010b44 <nema_bind_tex+0x20>
 8010c54:	005b      	lsls	r3, r3, #1
 8010c56:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c58:	2c00      	cmp	r4, #0
 8010c5a:	d0d9      	beq.n	8010c10 <nema_bind_tex+0xec>
 8010c5c:	4d0a      	ldr	r5, [pc, #40]	@ (8010c88 <nema_bind_tex+0x164>)
 8010c5e:	e773      	b.n	8010b48 <nema_bind_tex+0x24>
 8010c60:	3904      	subs	r1, #4
 8010c62:	2949      	cmp	r1, #73	@ 0x49
 8010c64:	bf8e      	itee	hi
 8010c66:	2204      	movhi	r2, #4
 8010c68:	4a08      	ldrls	r2, [pc, #32]	@ (8010c8c <nema_bind_tex+0x168>)
 8010c6a:	5652      	ldrsbls	r2, [r2, r1]
 8010c6c:	fb02 f303 	mul.w	r3, r2, r3
 8010c70:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c72:	2c00      	cmp	r4, #0
 8010c74:	d08a      	beq.n	8010b8c <nema_bind_tex+0x68>
 8010c76:	e765      	b.n	8010b44 <nema_bind_tex+0x20>
 8010c78:	2301      	movs	r3, #1
 8010c7a:	4d03      	ldr	r5, [pc, #12]	@ (8010c88 <nema_bind_tex+0x164>)
 8010c7c:	4618      	mov	r0, r3
 8010c7e:	702b      	strb	r3, [r5, #0]
 8010c80:	f001 f9a8 	bl	8011fd4 <nema_enable_tiling_2x2>
 8010c84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c86:	e75f      	b.n	8010b48 <nema_bind_tex+0x24>
 8010c88:	20000064 	.word	0x20000064
 8010c8c:	08035c3c 	.word	0x08035c3c

08010c90 <nema_set_tex_color>:
 8010c90:	4601      	mov	r1, r0
 8010c92:	201c      	movs	r0, #28
 8010c94:	f00d b882 	b.w	801dd9c <nema_cl_add_cmd>

08010c98 <nema_set_const_reg>:
 8010c98:	3080      	adds	r0, #128	@ 0x80
 8010c9a:	0080      	lsls	r0, r0, #2
 8010c9c:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 8010ca0:	d900      	bls.n	8010ca4 <nema_set_const_reg+0xc>
 8010ca2:	4770      	bx	lr
 8010ca4:	f00d b87a 	b.w	801dd9c <nema_cl_add_cmd>

08010ca8 <nema_set_clip>:
 8010ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010caa:	460c      	mov	r4, r1
 8010cac:	4607      	mov	r7, r0
 8010cae:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010cb2:	4d0c      	ldr	r5, [pc, #48]	@ (8010ce4 <nema_set_clip+0x3c>)
 8010cb4:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8010cb8:	b289      	uxth	r1, r1
 8010cba:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8010cbe:	19d6      	adds	r6, r2, r7
 8010cc0:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010cc4:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8010cc8:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8010ccc:	441c      	add	r4, r3
 8010cce:	f00d f865 	bl	801dd9c <nema_cl_add_cmd>
 8010cd2:	b2b1      	uxth	r1, r6
 8010cd4:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010cd8:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010cdc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010ce0:	f00d b85c 	b.w	801dd9c <nema_cl_add_cmd>
 8010ce4:	20000064 	.word	0x20000064

08010ce8 <nema_set_clip2>:
 8010ce8:	b570      	push	{r4, r5, r6, lr}
 8010cea:	460d      	mov	r5, r1
 8010cec:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010cf0:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010cf4:	b289      	uxth	r1, r1
 8010cf6:	1814      	adds	r4, r2, r0
 8010cf8:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010cfc:	f44f 70ac 	mov.w	r0, #344	@ 0x158
 8010d00:	441d      	add	r5, r3
 8010d02:	f00d f84b 	bl	801dd9c <nema_cl_add_cmd>
 8010d06:	b2a1      	uxth	r1, r4
 8010d08:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d0c:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010d10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d14:	f00d b842 	b.w	801dd9c <nema_cl_add_cmd>

08010d18 <nema_supports_clip2>:
 8010d18:	b508      	push	{r3, lr}
 8010d1a:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010d1e:	f7f1 ffef 	bl	8002d00 <nema_reg_read>
 8010d22:	3000      	adds	r0, #0
 8010d24:	bf18      	it	ne
 8010d26:	2001      	movne	r0, #1
 8010d28:	bd08      	pop	{r3, pc}
 8010d2a:	bf00      	nop

08010d2c <nema_set_clip_temp>:
 8010d2c:	b570      	push	{r4, r5, r6, lr}
 8010d2e:	460d      	mov	r5, r1
 8010d30:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d34:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010d38:	b289      	uxth	r1, r1
 8010d3a:	1814      	adds	r4, r2, r0
 8010d3c:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010d40:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d44:	441d      	add	r5, r3
 8010d46:	f00d f829 	bl	801dd9c <nema_cl_add_cmd>
 8010d4a:	b2a1      	uxth	r1, r4
 8010d4c:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d50:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d58:	f00d b820 	b.w	801dd9c <nema_cl_add_cmd>

08010d5c <nema_set_clip_pop>:
 8010d5c:	b538      	push	{r3, r4, r5, lr}
 8010d5e:	4d0d      	ldr	r5, [pc, #52]	@ (8010d94 <nema_set_clip_pop+0x38>)
 8010d60:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d64:	e9d5 3207 	ldrd	r3, r2, [r5, #28]
 8010d68:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8010d6c:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
 8010d70:	b289      	uxth	r1, r1
 8010d72:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010d76:	e9d5 4509 	ldrd	r4, r5, [r5, #36]	@ 0x24
 8010d7a:	441c      	add	r4, r3
 8010d7c:	4415      	add	r5, r2
 8010d7e:	f00d f80d 	bl	801dd9c <nema_cl_add_cmd>
 8010d82:	b2a1      	uxth	r1, r4
 8010d84:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d88:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010d90:	f00d b804 	b.w	801dd9c <nema_cl_add_cmd>
 8010d94:	20000064 	.word	0x20000064

08010d98 <nema_enable_gradient>:
 8010d98:	2800      	cmp	r0, #0
 8010d9a:	bf14      	ite	ne
 8010d9c:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8010da0:	2100      	moveq	r1, #0
 8010da2:	b410      	push	{r4}
 8010da4:	4a05      	ldr	r2, [pc, #20]	@ (8010dbc <nema_enable_gradient+0x24>)
 8010da6:	6950      	ldr	r0, [r2, #20]
 8010da8:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 8010dac:	4323      	orrs	r3, r4
 8010dae:	4303      	orrs	r3, r0
 8010db0:	430b      	orrs	r3, r1
 8010db2:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8010db6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010dba:	4770      	bx	lr
 8010dbc:	20000064 	.word	0x20000064

08010dc0 <nema_stride_size>:
 8010dc0:	06cb      	lsls	r3, r1, #27
 8010dc2:	d504      	bpl.n	8010dce <nema_stride_size+0xe>
 8010dc4:	1cd3      	adds	r3, r2, #3
 8010dc6:	bf48      	it	mi
 8010dc8:	1d93      	addmi	r3, r2, #6
 8010dca:	f023 0203 	bic.w	r2, r3, #3
 8010dce:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8010dd2:	f1a0 030b 	sub.w	r3, r0, #11
 8010dd6:	2b42      	cmp	r3, #66	@ 0x42
 8010dd8:	d839      	bhi.n	8010e4e <nema_stride_size+0x8e>
 8010dda:	e8df f003 	tbb	[pc, r3]
 8010dde:	3232      	.short	0x3232
 8010de0:	38383838 	.word	0x38383838
 8010de4:	38382538 	.word	0x38382538
 8010de8:	38222238 	.word	0x38222238
 8010dec:	38383838 	.word	0x38383838
 8010df0:	38383838 	.word	0x38383838
 8010df4:	38383838 	.word	0x38383838
 8010df8:	2c323838 	.word	0x2c323838
 8010dfc:	272c3227 	.word	0x272c3227
 8010e00:	2c383838 	.word	0x2c383838
 8010e04:	2738382c 	.word	0x2738382c
 8010e08:	38383827 	.word	0x38383827
 8010e0c:	38383838 	.word	0x38383838
 8010e10:	38383838 	.word	0x38383838
 8010e14:	38383838 	.word	0x38383838
 8010e18:	38383838 	.word	0x38383838
 8010e1c:	22383838 	.word	0x22383838
 8010e20:	22          	.byte	0x22
 8010e21:	00          	.byte	0x00
 8010e22:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8010e26:	4770      	bx	lr
 8010e28:	0050      	lsls	r0, r2, #1
 8010e2a:	4770      	bx	lr
 8010e2c:	0090      	lsls	r0, r2, #2
 8010e2e:	1dc2      	adds	r2, r0, #7
 8010e30:	d404      	bmi.n	8010e3c <nema_stride_size+0x7c>
 8010e32:	10d0      	asrs	r0, r2, #3
 8010e34:	4770      	bx	lr
 8010e36:	0050      	lsls	r0, r2, #1
 8010e38:	1dc2      	adds	r2, r0, #7
 8010e3a:	d5fa      	bpl.n	8010e32 <nema_stride_size+0x72>
 8010e3c:	f100 020e 	add.w	r2, r0, #14
 8010e40:	e7f7      	b.n	8010e32 <nema_stride_size+0x72>
 8010e42:	1dd0      	adds	r0, r2, #7
 8010e44:	bf48      	it	mi
 8010e46:	f102 000e 	addmi.w	r0, r2, #14
 8010e4a:	10c0      	asrs	r0, r0, #3
 8010e4c:	4770      	bx	lr
 8010e4e:	3804      	subs	r0, #4
 8010e50:	2849      	cmp	r0, #73	@ 0x49
 8010e52:	bf8e      	itee	hi
 8010e54:	2004      	movhi	r0, #4
 8010e56:	4b02      	ldrls	r3, [pc, #8]	@ (8010e60 <nema_stride_size+0xa0>)
 8010e58:	5618      	ldrsbls	r0, [r3, r0]
 8010e5a:	fb00 f002 	mul.w	r0, r0, r2
 8010e5e:	4770      	bx	lr
 8010e60:	08035c3c 	.word	0x08035c3c

08010e64 <nema_rgba>:
 8010e64:	061b      	lsls	r3, r3, #24
 8010e66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010e6a:	4318      	orrs	r0, r3
 8010e6c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8010e70:	4770      	bx	lr
 8010e72:	bf00      	nop

08010e74 <nema_bind_src_tex>:
 8010e74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e78:	9c06      	ldr	r4, [sp, #24]
 8010e7a:	460e      	mov	r6, r1
 8010e7c:	1c61      	adds	r1, r4, #1
 8010e7e:	4605      	mov	r5, r0
 8010e80:	4617      	mov	r7, r2
 8010e82:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8010e86:	d022      	beq.n	8010ece <nema_bind_src_tex+0x5a>
 8010e88:	2201      	movs	r2, #1
 8010e8a:	0400      	lsls	r0, r0, #16
 8010e8c:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8010f78 <nema_bind_src_tex+0x104>
 8010e90:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8010e94:	b2a4      	uxth	r4, r4
 8010e96:	4323      	orrs	r3, r4
 8010e98:	2003      	movs	r0, #3
 8010e9a:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 8010e9e:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8010ea2:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8010ea6:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 8010eaa:	f00c ff1b 	bl	801dce4 <nema_cl_get_space>
 8010eae:	b160      	cbz	r0, 8010eca <nema_bind_src_tex+0x56>
 8010eb0:	2110      	movs	r1, #16
 8010eb2:	2214      	movs	r2, #20
 8010eb4:	2318      	movs	r3, #24
 8010eb6:	e9c0 1500 	strd	r1, r5, [r0]
 8010eba:	6082      	str	r2, [r0, #8]
 8010ebc:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8010ec0:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8010ec4:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010ec8:	6146      	str	r6, [r0, #20]
 8010eca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ece:	06c2      	lsls	r2, r0, #27
 8010ed0:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8010ed4:	d428      	bmi.n	8010f28 <nema_bind_src_tex+0xb4>
 8010ed6:	4634      	mov	r4, r6
 8010ed8:	f1a1 020b 	sub.w	r2, r1, #11
 8010edc:	2a42      	cmp	r2, #66	@ 0x42
 8010ede:	d83f      	bhi.n	8010f60 <nema_bind_src_tex+0xec>
 8010ee0:	e8df f002 	tbb	[pc, r2]
 8010ee4:	3e3e3636 	.word	0x3e3e3636
 8010ee8:	3c3e3e3e 	.word	0x3c3e3e3e
 8010eec:	283e3e3e 	.word	0x283e3e3e
 8010ef0:	3e3e3e28 	.word	0x3e3e3e28
 8010ef4:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ef8:	3e3e3e3e 	.word	0x3e3e3e3e
 8010efc:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f00:	36302b36 	.word	0x36302b36
 8010f04:	3e3e302b 	.word	0x3e3e302b
 8010f08:	3e2b2b3e 	.word	0x3e2b2b3e
 8010f0c:	3e30303e 	.word	0x3e30303e
 8010f10:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f14:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f18:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f1c:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f20:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f24:	283e      	.short	0x283e
 8010f26:	28          	.byte	0x28
 8010f27:	00          	.byte	0x00
 8010f28:	1cf4      	adds	r4, r6, #3
 8010f2a:	bf48      	it	mi
 8010f2c:	1db4      	addmi	r4, r6, #6
 8010f2e:	f024 0403 	bic.w	r4, r4, #3
 8010f32:	e7d1      	b.n	8010ed8 <nema_bind_src_tex+0x64>
 8010f34:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010f38:	e7a6      	b.n	8010e88 <nema_bind_src_tex+0x14>
 8010f3a:	0062      	lsls	r2, r4, #1
 8010f3c:	1dd4      	adds	r4, r2, #7
 8010f3e:	d404      	bmi.n	8010f4a <nema_bind_src_tex+0xd6>
 8010f40:	10e4      	asrs	r4, r4, #3
 8010f42:	e7a1      	b.n	8010e88 <nema_bind_src_tex+0x14>
 8010f44:	00a2      	lsls	r2, r4, #2
 8010f46:	1dd4      	adds	r4, r2, #7
 8010f48:	d5fa      	bpl.n	8010f40 <nema_bind_src_tex+0xcc>
 8010f4a:	f102 040e 	add.w	r4, r2, #14
 8010f4e:	e7f7      	b.n	8010f40 <nema_bind_src_tex+0xcc>
 8010f50:	1de2      	adds	r2, r4, #7
 8010f52:	bf48      	it	mi
 8010f54:	f104 020e 	addmi.w	r2, r4, #14
 8010f58:	10d4      	asrs	r4, r2, #3
 8010f5a:	e795      	b.n	8010e88 <nema_bind_src_tex+0x14>
 8010f5c:	0064      	lsls	r4, r4, #1
 8010f5e:	e793      	b.n	8010e88 <nema_bind_src_tex+0x14>
 8010f60:	3904      	subs	r1, #4
 8010f62:	2949      	cmp	r1, #73	@ 0x49
 8010f64:	bf8e      	itee	hi
 8010f66:	2204      	movhi	r2, #4
 8010f68:	4a02      	ldrls	r2, [pc, #8]	@ (8010f74 <nema_bind_src_tex+0x100>)
 8010f6a:	5652      	ldrsbls	r2, [r2, r1]
 8010f6c:	fb02 f404 	mul.w	r4, r2, r4
 8010f70:	e78a      	b.n	8010e88 <nema_bind_src_tex+0x14>
 8010f72:	bf00      	nop
 8010f74:	08035c3c 	.word	0x08035c3c
 8010f78:	20000064 	.word	0x20000064

08010f7c <nema_bind_dst_tex>:
 8010f7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010f80:	9d08      	ldr	r5, [sp, #32]
 8010f82:	4699      	mov	r9, r3
 8010f84:	4617      	mov	r7, r2
 8010f86:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8010f8a:	1c6b      	adds	r3, r5, #1
 8010f8c:	4680      	mov	r8, r0
 8010f8e:	460e      	mov	r6, r1
 8010f90:	d031      	beq.n	8010ff6 <nema_bind_dst_tex+0x7a>
 8010f92:	2a12      	cmp	r2, #18
 8010f94:	d00e      	beq.n	8010fb4 <nema_bind_dst_tex+0x38>
 8010f96:	f1a2 0316 	sub.w	r3, r2, #22
 8010f9a:	2b01      	cmp	r3, #1
 8010f9c:	d90a      	bls.n	8010fb4 <nema_bind_dst_tex+0x38>
 8010f9e:	3a4c      	subs	r2, #76	@ 0x4c
 8010fa0:	2a01      	cmp	r2, #1
 8010fa2:	f240 80b7 	bls.w	8011114 <nema_bind_dst_tex+0x198>
 8010fa6:	4c6e      	ldr	r4, [pc, #440]	@ (8011160 <nema_bind_dst_tex+0x1e4>)
 8010fa8:	7860      	ldrb	r0, [r4, #1]
 8010faa:	f000 ffff 	bl	8011fac <nema_enable_tiling>
 8010fae:	e007      	b.n	8010fc0 <nema_bind_dst_tex+0x44>
 8010fb0:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8010fb4:	2301      	movs	r3, #1
 8010fb6:	4c6a      	ldr	r4, [pc, #424]	@ (8011160 <nema_bind_dst_tex+0x1e4>)
 8010fb8:	4618      	mov	r0, r3
 8010fba:	7023      	strb	r3, [r4, #0]
 8010fbc:	f000 fff6 	bl	8011fac <nema_enable_tiling>
 8010fc0:	2201      	movs	r2, #1
 8010fc2:	b2ad      	uxth	r5, r5
 8010fc4:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8010fc8:	2003      	movs	r0, #3
 8010fca:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8010fcc:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8010fd0:	63a7      	str	r7, [r4, #56]	@ 0x38
 8010fd2:	6422      	str	r2, [r4, #64]	@ 0x40
 8010fd4:	f00c fe86 	bl	801dce4 <nema_cl_get_space>
 8010fd8:	b158      	cbz	r0, 8010ff2 <nema_bind_dst_tex+0x76>
 8010fda:	2100      	movs	r1, #0
 8010fdc:	2204      	movs	r2, #4
 8010fde:	2308      	movs	r3, #8
 8010fe0:	e9c0 1800 	strd	r1, r8, [r0]
 8010fe4:	6082      	str	r2, [r0, #8]
 8010fe6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8010fe8:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8010fec:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010ff0:	6146      	str	r6, [r0, #20]
 8010ff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010ff6:	f1a2 030b 	sub.w	r3, r2, #11
 8010ffa:	2b42      	cmp	r3, #66	@ 0x42
 8010ffc:	f200 80a6 	bhi.w	801114c <nema_bind_dst_tex+0x1d0>
 8011000:	a101      	add	r1, pc, #4	@ (adr r1, 8011008 <nema_bind_dst_tex+0x8c>)
 8011002:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8011006:	bf00      	nop
 8011008:	0801113f 	.word	0x0801113f
 801100c:	0801113f 	.word	0x0801113f
 8011010:	0801114d 	.word	0x0801114d
 8011014:	0801114d 	.word	0x0801114d
 8011018:	0801114d 	.word	0x0801114d
 801101c:	0801114d 	.word	0x0801114d
 8011020:	0801114d 	.word	0x0801114d
 8011024:	08011149 	.word	0x08011149
 8011028:	0801114d 	.word	0x0801114d
 801102c:	0801114d 	.word	0x0801114d
 8011030:	0801114d 	.word	0x0801114d
 8011034:	08010fb1 	.word	0x08010fb1
 8011038:	08010fb1 	.word	0x08010fb1
 801103c:	0801114d 	.word	0x0801114d
 8011040:	0801114d 	.word	0x0801114d
 8011044:	0801114d 	.word	0x0801114d
 8011048:	0801114d 	.word	0x0801114d
 801104c:	0801114d 	.word	0x0801114d
 8011050:	0801114d 	.word	0x0801114d
 8011054:	0801114d 	.word	0x0801114d
 8011058:	0801114d 	.word	0x0801114d
 801105c:	0801114d 	.word	0x0801114d
 8011060:	0801114d 	.word	0x0801114d
 8011064:	0801114d 	.word	0x0801114d
 8011068:	0801114d 	.word	0x0801114d
 801106c:	0801114d 	.word	0x0801114d
 8011070:	0801114d 	.word	0x0801114d
 8011074:	0801114d 	.word	0x0801114d
 8011078:	0801113f 	.word	0x0801113f
 801107c:	08011129 	.word	0x08011129
 8011080:	08011133 	.word	0x08011133
 8011084:	0801113f 	.word	0x0801113f
 8011088:	08011129 	.word	0x08011129
 801108c:	08011133 	.word	0x08011133
 8011090:	0801114d 	.word	0x0801114d
 8011094:	0801114d 	.word	0x0801114d
 8011098:	0801114d 	.word	0x0801114d
 801109c:	08011129 	.word	0x08011129
 80110a0:	08011129 	.word	0x08011129
 80110a4:	0801114d 	.word	0x0801114d
 80110a8:	0801114d 	.word	0x0801114d
 80110ac:	08011133 	.word	0x08011133
 80110b0:	08011133 	.word	0x08011133
 80110b4:	0801114d 	.word	0x0801114d
 80110b8:	0801114d 	.word	0x0801114d
 80110bc:	0801114d 	.word	0x0801114d
 80110c0:	0801114d 	.word	0x0801114d
 80110c4:	0801114d 	.word	0x0801114d
 80110c8:	0801114d 	.word	0x0801114d
 80110cc:	0801114d 	.word	0x0801114d
 80110d0:	0801114d 	.word	0x0801114d
 80110d4:	0801114d 	.word	0x0801114d
 80110d8:	0801114d 	.word	0x0801114d
 80110dc:	0801114d 	.word	0x0801114d
 80110e0:	0801114d 	.word	0x0801114d
 80110e4:	0801114d 	.word	0x0801114d
 80110e8:	0801114d 	.word	0x0801114d
 80110ec:	0801114d 	.word	0x0801114d
 80110f0:	0801114d 	.word	0x0801114d
 80110f4:	0801114d 	.word	0x0801114d
 80110f8:	0801114d 	.word	0x0801114d
 80110fc:	0801114d 	.word	0x0801114d
 8011100:	0801114d 	.word	0x0801114d
 8011104:	0801114d 	.word	0x0801114d
 8011108:	0801114d 	.word	0x0801114d
 801110c:	08011123 	.word	0x08011123
 8011110:	08011123 	.word	0x08011123
 8011114:	2301      	movs	r3, #1
 8011116:	4c12      	ldr	r4, [pc, #72]	@ (8011160 <nema_bind_dst_tex+0x1e4>)
 8011118:	4618      	mov	r0, r3
 801111a:	7023      	strb	r3, [r4, #0]
 801111c:	f000 ff5a 	bl	8011fd4 <nema_enable_tiling_2x2>
 8011120:	e74e      	b.n	8010fc0 <nema_bind_dst_tex+0x44>
 8011122:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8011126:	e734      	b.n	8010f92 <nema_bind_dst_tex+0x16>
 8011128:	0073      	lsls	r3, r6, #1
 801112a:	1ddd      	adds	r5, r3, #7
 801112c:	d404      	bmi.n	8011138 <nema_bind_dst_tex+0x1bc>
 801112e:	10ed      	asrs	r5, r5, #3
 8011130:	e72f      	b.n	8010f92 <nema_bind_dst_tex+0x16>
 8011132:	00b3      	lsls	r3, r6, #2
 8011134:	1ddd      	adds	r5, r3, #7
 8011136:	d5fa      	bpl.n	801112e <nema_bind_dst_tex+0x1b2>
 8011138:	f103 050e 	add.w	r5, r3, #14
 801113c:	e7f7      	b.n	801112e <nema_bind_dst_tex+0x1b2>
 801113e:	1df5      	adds	r5, r6, #7
 8011140:	d5f5      	bpl.n	801112e <nema_bind_dst_tex+0x1b2>
 8011142:	f106 050e 	add.w	r5, r6, #14
 8011146:	e7f2      	b.n	801112e <nema_bind_dst_tex+0x1b2>
 8011148:	0075      	lsls	r5, r6, #1
 801114a:	e733      	b.n	8010fb4 <nema_bind_dst_tex+0x38>
 801114c:	1f13      	subs	r3, r2, #4
 801114e:	2b49      	cmp	r3, #73	@ 0x49
 8011150:	bf8e      	itee	hi
 8011152:	2504      	movhi	r5, #4
 8011154:	4903      	ldrls	r1, [pc, #12]	@ (8011164 <nema_bind_dst_tex+0x1e8>)
 8011156:	56cd      	ldrsbls	r5, [r1, r3]
 8011158:	fb05 f506 	mul.w	r5, r5, r6
 801115c:	e719      	b.n	8010f92 <nema_bind_dst_tex+0x16>
 801115e:	bf00      	nop
 8011160:	20000064 	.word	0x20000064
 8011164:	08035c3c 	.word	0x08035c3c

08011168 <nema_bind_lut_tex>:
 8011168:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801116c:	f1a3 040b 	sub.w	r4, r3, #11
 8011170:	2c2a      	cmp	r4, #42	@ 0x2a
 8011172:	469a      	mov	sl, r3
 8011174:	4680      	mov	r8, r0
 8011176:	460e      	mov	r6, r1
 8011178:	4617      	mov	r7, r2
 801117a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801117e:	f89d 502c 	ldrb.w	r5, [sp, #44]	@ 0x2c
 8011182:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011184:	d84a      	bhi.n	801121c <nema_bind_lut_tex+0xb4>
 8011186:	4a27      	ldr	r2, [pc, #156]	@ (8011224 <nema_bind_lut_tex+0xbc>)
 8011188:	f832 b014 	ldrh.w	fp, [r2, r4, lsl #1]
 801118c:	465a      	mov	r2, fp
 801118e:	2101      	movs	r1, #1
 8011190:	4c25      	ldr	r4, [pc, #148]	@ (8011228 <nema_bind_lut_tex+0xc0>)
 8011192:	061b      	lsls	r3, r3, #24
 8011194:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8011198:	6663      	str	r3, [r4, #100]	@ 0x64
 801119a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801119c:	2003      	movs	r0, #3
 801119e:	e9c4 3216 	strd	r3, r2, [r4, #88]	@ 0x58
 80111a2:	6621      	str	r1, [r4, #96]	@ 0x60
 80111a4:	66a1      	str	r1, [r4, #104]	@ 0x68
 80111a6:	f00c fd9d 	bl	801dce4 <nema_cl_get_space>
 80111aa:	b170      	cbz	r0, 80111ca <nema_bind_lut_tex+0x62>
 80111ac:	2220      	movs	r2, #32
 80111ae:	f04f 0c24 	mov.w	ip, #36	@ 0x24
 80111b2:	2128      	movs	r1, #40	@ 0x28
 80111b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80111b6:	f8c0 c008 	str.w	ip, [r0, #8]
 80111ba:	e9c0 2300 	strd	r2, r3, [r0]
 80111be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80111c0:	f44b 3280 	orr.w	r2, fp, #65536	@ 0x10000
 80111c4:	e9c0 3103 	strd	r3, r1, [r0, #12]
 80111c8:	6142      	str	r2, [r0, #20]
 80111ca:	f1b9 3fff 	cmp.w	r9, #4294967295
 80111ce:	d106      	bne.n	80111de <nema_bind_lut_tex+0x76>
 80111d0:	4632      	mov	r2, r6
 80111d2:	4629      	mov	r1, r5
 80111d4:	f00a 007f 	and.w	r0, sl, #127	@ 0x7f
 80111d8:	f7ff fdf2 	bl	8010dc0 <nema_stride_size>
 80111dc:	4681      	mov	r9, r0
 80111de:	2201      	movs	r2, #1
 80111e0:	042d      	lsls	r5, r5, #16
 80111e2:	ea45 630a 	orr.w	r3, r5, sl, lsl #24
 80111e6:	fa1f f989 	uxth.w	r9, r9
 80111ea:	ea43 0309 	orr.w	r3, r3, r9
 80111ee:	2003      	movs	r0, #3
 80111f0:	6523      	str	r3, [r4, #80]	@ 0x50
 80111f2:	e9c4 8611 	strd	r8, r6, [r4, #68]	@ 0x44
 80111f6:	64e7      	str	r7, [r4, #76]	@ 0x4c
 80111f8:	6562      	str	r2, [r4, #84]	@ 0x54
 80111fa:	f00c fd73 	bl	801dce4 <nema_cl_get_space>
 80111fe:	b158      	cbz	r0, 8011218 <nema_bind_lut_tex+0xb0>
 8011200:	2110      	movs	r1, #16
 8011202:	2214      	movs	r2, #20
 8011204:	2318      	movs	r3, #24
 8011206:	e9c0 1800 	strd	r1, r8, [r0]
 801120a:	6082      	str	r2, [r0, #8]
 801120c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801120e:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8011212:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011216:	6146      	str	r6, [r0, #20]
 8011218:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801121c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8011220:	4693      	mov	fp, r2
 8011222:	e7b4      	b.n	801118e <nema_bind_lut_tex+0x26>
 8011224:	08035c88 	.word	0x08035c88
 8011228:	20000064 	.word	0x20000064

0801122c <nema_set_gradient>:
 801122c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011230:	ed2d 8b0c 	vpush	{d8-d13}
 8011234:	eeb0 da60 	vmov.f32	s26, s1
 8011238:	b08d      	sub	sp, #52	@ 0x34
 801123a:	eef0 ca41 	vmov.f32	s25, s2
 801123e:	eeb0 ca61 	vmov.f32	s24, s3
 8011242:	eef0 ba42 	vmov.f32	s23, s4
 8011246:	eeb0 ba62 	vmov.f32	s22, s5
 801124a:	eef0 aa43 	vmov.f32	s21, s6
 801124e:	eeb0 aa63 	vmov.f32	s20, s7
 8011252:	eef0 9a44 	vmov.f32	s19, s8
 8011256:	eeb0 9a64 	vmov.f32	s18, s9
 801125a:	eef0 8a45 	vmov.f32	s17, s10
 801125e:	eeb0 8a65 	vmov.f32	s16, s11
 8011262:	f000 fb25 	bl	80118b0 <nema_f2fx>
 8011266:	eeb0 0a4d 	vmov.f32	s0, s26
 801126a:	4604      	mov	r4, r0
 801126c:	f000 fb20 	bl	80118b0 <nema_f2fx>
 8011270:	eeb0 0a6c 	vmov.f32	s0, s25
 8011274:	4605      	mov	r5, r0
 8011276:	f000 fb1b 	bl	80118b0 <nema_f2fx>
 801127a:	eeb0 0a4c 	vmov.f32	s0, s24
 801127e:	4606      	mov	r6, r0
 8011280:	f000 fb16 	bl	80118b0 <nema_f2fx>
 8011284:	eeb0 0a6b 	vmov.f32	s0, s23
 8011288:	4607      	mov	r7, r0
 801128a:	f000 fb11 	bl	80118b0 <nema_f2fx>
 801128e:	eeb0 0a4b 	vmov.f32	s0, s22
 8011292:	900b      	str	r0, [sp, #44]	@ 0x2c
 8011294:	f000 fb0c 	bl	80118b0 <nema_f2fx>
 8011298:	eeb0 0a6a 	vmov.f32	s0, s21
 801129c:	4680      	mov	r8, r0
 801129e:	f000 fb07 	bl	80118b0 <nema_f2fx>
 80112a2:	eeb0 0a4a 	vmov.f32	s0, s20
 80112a6:	4681      	mov	r9, r0
 80112a8:	f000 fb02 	bl	80118b0 <nema_f2fx>
 80112ac:	eeb0 0a69 	vmov.f32	s0, s19
 80112b0:	4682      	mov	sl, r0
 80112b2:	f000 fafd 	bl	80118b0 <nema_f2fx>
 80112b6:	eeb0 0a49 	vmov.f32	s0, s18
 80112ba:	4683      	mov	fp, r0
 80112bc:	f000 faf8 	bl	80118b0 <nema_f2fx>
 80112c0:	eeb0 0a68 	vmov.f32	s0, s17
 80112c4:	900a      	str	r0, [sp, #40]	@ 0x28
 80112c6:	f000 faf3 	bl	80118b0 <nema_f2fx>
 80112ca:	eeb0 0a48 	vmov.f32	s0, s16
 80112ce:	9009      	str	r0, [sp, #36]	@ 0x24
 80112d0:	f000 faee 	bl	80118b0 <nema_f2fx>
 80112d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80112d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80112d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80112da:	9100      	str	r1, [sp, #0]
 80112dc:	9007      	str	r0, [sp, #28]
 80112de:	9206      	str	r2, [sp, #24]
 80112e0:	e9cd b304 	strd	fp, r3, [sp, #16]
 80112e4:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 80112e8:	f8cd 8004 	str.w	r8, [sp, #4]
 80112ec:	463b      	mov	r3, r7
 80112ee:	4632      	mov	r2, r6
 80112f0:	4629      	mov	r1, r5
 80112f2:	4620      	mov	r0, r4
 80112f4:	f000 ffe2 	bl	80122bc <nema_set_gradient_fx>
 80112f8:	b00d      	add	sp, #52	@ 0x34
 80112fa:	ecbd 8b0c 	vpop	{d8-d13}
 80112fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011302:	bf00      	nop

08011304 <nema_fill_rect>:
 8011304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011308:	4604      	mov	r4, r0
 801130a:	460d      	mov	r5, r1
 801130c:	4616      	mov	r6, r2
 801130e:	461f      	mov	r7, r3
 8011310:	9806      	ldr	r0, [sp, #24]
 8011312:	f001 f81f 	bl	8012354 <nema_set_raster_color>
 8011316:	463b      	mov	r3, r7
 8011318:	4632      	mov	r2, r6
 801131a:	4629      	mov	r1, r5
 801131c:	4620      	mov	r0, r4
 801131e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011322:	f001 b859 	b.w	80123d8 <nema_raster_rect>
 8011326:	bf00      	nop

08011328 <nema_blit>:
 8011328:	ee07 0a90 	vmov	s15, r0
 801132c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011330:	ee07 1a90 	vmov	s15, r1
 8011334:	b500      	push	{lr}
 8011336:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801133a:	b083      	sub	sp, #12
 801133c:	e9cd 0100 	strd	r0, r1, [sp]
 8011340:	f000 ff56 	bl	80121f0 <nema_set_matrix_translate>
 8011344:	e9dd 0100 	ldrd	r0, r1, [sp]
 8011348:	4a03      	ldr	r2, [pc, #12]	@ (8011358 <nema_blit+0x30>)
 801134a:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 801134e:	b003      	add	sp, #12
 8011350:	f85d eb04 	ldr.w	lr, [sp], #4
 8011354:	f001 b840 	b.w	80123d8 <nema_raster_rect>
 8011358:	20000064 	.word	0x20000064

0801135c <nema_blit_rotate>:
 801135c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801135e:	2600      	movs	r6, #0
 8011360:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 8011364:	4b68      	ldr	r3, [pc, #416]	@ (8011508 <nema_blit_rotate+0x1ac>)
 8011366:	b08b      	sub	sp, #44	@ 0x2c
 8011368:	3a01      	subs	r2, #1
 801136a:	9607      	str	r6, [sp, #28]
 801136c:	9608      	str	r6, [sp, #32]
 801136e:	9709      	str	r7, [sp, #36]	@ 0x24
 8011370:	4604      	mov	r4, r0
 8011372:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 8011376:	460d      	mov	r5, r1
 8011378:	2a0e      	cmp	r2, #14
 801137a:	f200 80b0 	bhi.w	80114de <nema_blit_rotate+0x182>
 801137e:	e8df f002 	tbb	[pc, r2]
 8011382:	4730      	.short	0x4730
 8011384:	9a836f58 	.word	0x9a836f58
 8011388:	6f089a08 	.word	0x6f089a08
 801138c:	ae584783 	.word	0xae584783
 8011390:	30          	.byte	0x30
 8011391:	00          	.byte	0x00
 8011392:	1970      	adds	r0, r6, r5
 8011394:	ee07 0a10 	vmov	s14, r0
 8011398:	1938      	adds	r0, r7, r4
 801139a:	4631      	mov	r1, r6
 801139c:	ee07 0a90 	vmov	s15, r0
 80113a0:	2200      	movs	r2, #0
 80113a2:	463e      	mov	r6, r7
 80113a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80113ac:	460f      	mov	r7, r1
 80113ae:	4b57      	ldr	r3, [pc, #348]	@ (801150c <nema_blit_rotate+0x1b0>)
 80113b0:	9201      	str	r2, [sp, #4]
 80113b2:	9205      	str	r2, [sp, #20]
 80113b4:	9302      	str	r3, [sp, #8]
 80113b6:	9304      	str	r3, [sp, #16]
 80113b8:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8011510 <nema_blit_rotate+0x1b4>
 80113bc:	ee37 7a26 	vadd.f32	s14, s14, s13
 80113c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80113c4:	a801      	add	r0, sp, #4
 80113c6:	ed8d 7a03 	vstr	s14, [sp, #12]
 80113ca:	edcd 7a06 	vstr	s15, [sp, #24]
 80113ce:	f000 fe55 	bl	801207c <nema_set_matrix>
 80113d2:	463b      	mov	r3, r7
 80113d4:	4632      	mov	r2, r6
 80113d6:	4629      	mov	r1, r5
 80113d8:	4620      	mov	r0, r4
 80113da:	f000 fffd 	bl	80123d8 <nema_raster_rect>
 80113de:	b00b      	add	sp, #44	@ 0x2c
 80113e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80113e2:	ee07 4a90 	vmov	s15, r4
 80113e6:	4630      	mov	r0, r6
 80113e8:	442e      	add	r6, r5
 80113ea:	2300      	movs	r3, #0
 80113ec:	ee07 6a10 	vmov	s14, r6
 80113f0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80113f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80113f8:	4944      	ldr	r1, [pc, #272]	@ (801150c <nema_blit_rotate+0x1b0>)
 80113fa:	463e      	mov	r6, r7
 80113fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011400:	9301      	str	r3, [sp, #4]
 8011402:	4607      	mov	r7, r0
 8011404:	9305      	str	r3, [sp, #20]
 8011406:	9102      	str	r1, [sp, #8]
 8011408:	9204      	str	r2, [sp, #16]
 801140a:	eef1 7a67 	vneg.f32	s15, s15
 801140e:	e7d3      	b.n	80113b8 <nema_blit_rotate+0x5c>
 8011410:	4b3e      	ldr	r3, [pc, #248]	@ (801150c <nema_blit_rotate+0x1b0>)
 8011412:	2200      	movs	r2, #0
 8011414:	9301      	str	r3, [sp, #4]
 8011416:	9305      	str	r3, [sp, #20]
 8011418:	1833      	adds	r3, r6, r0
 801141a:	ee07 3a90 	vmov	s15, r3
 801141e:	1878      	adds	r0, r7, r1
 8011420:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011424:	ee07 0a90 	vmov	s15, r0
 8011428:	9202      	str	r2, [sp, #8]
 801142a:	9204      	str	r2, [sp, #16]
 801142c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011430:	e7c2      	b.n	80113b8 <nema_blit_rotate+0x5c>
 8011432:	ee07 5a10 	vmov	s14, r5
 8011436:	4630      	mov	r0, r6
 8011438:	193e      	adds	r6, r7, r4
 801143a:	2300      	movs	r3, #0
 801143c:	ee07 6a90 	vmov	s15, r6
 8011440:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011444:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011448:	4a30      	ldr	r2, [pc, #192]	@ (801150c <nema_blit_rotate+0x1b0>)
 801144a:	463e      	mov	r6, r7
 801144c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011450:	4607      	mov	r7, r0
 8011452:	9301      	str	r3, [sp, #4]
 8011454:	9305      	str	r3, [sp, #20]
 8011456:	9102      	str	r1, [sp, #8]
 8011458:	eeb1 7a47 	vneg.f32	s14, s14
 801145c:	9204      	str	r2, [sp, #16]
 801145e:	e7ab      	b.n	80113b8 <nema_blit_rotate+0x5c>
 8011460:	ee07 4a90 	vmov	s15, r4
 8011464:	1978      	adds	r0, r7, r5
 8011466:	2300      	movs	r3, #0
 8011468:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801146c:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011470:	ee07 0a90 	vmov	s15, r0
 8011474:	4a25      	ldr	r2, [pc, #148]	@ (801150c <nema_blit_rotate+0x1b0>)
 8011476:	9101      	str	r1, [sp, #4]
 8011478:	9302      	str	r3, [sp, #8]
 801147a:	9304      	str	r3, [sp, #16]
 801147c:	eeb1 7a47 	vneg.f32	s14, s14
 8011480:	9205      	str	r2, [sp, #20]
 8011482:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011486:	e797      	b.n	80113b8 <nema_blit_rotate+0x5c>
 8011488:	ee07 5a90 	vmov	s15, r5
 801148c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011490:	ee07 0a90 	vmov	s15, r0
 8011494:	4631      	mov	r1, r6
 8011496:	2200      	movs	r2, #0
 8011498:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801149c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114a0:	463e      	mov	r6, r7
 80114a2:	eeb1 7a47 	vneg.f32	s14, s14
 80114a6:	460f      	mov	r7, r1
 80114a8:	eef1 7a67 	vneg.f32	s15, s15
 80114ac:	9201      	str	r2, [sp, #4]
 80114ae:	9205      	str	r2, [sp, #20]
 80114b0:	9302      	str	r3, [sp, #8]
 80114b2:	9304      	str	r3, [sp, #16]
 80114b4:	e780      	b.n	80113b8 <nema_blit_rotate+0x5c>
 80114b6:	ee07 5a90 	vmov	s15, r5
 80114ba:	1830      	adds	r0, r6, r0
 80114bc:	2300      	movs	r3, #0
 80114be:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80114c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114c6:	ee07 0a10 	vmov	s14, r0
 80114ca:	4910      	ldr	r1, [pc, #64]	@ (801150c <nema_blit_rotate+0x1b0>)
 80114cc:	9302      	str	r3, [sp, #8]
 80114ce:	9101      	str	r1, [sp, #4]
 80114d0:	9304      	str	r3, [sp, #16]
 80114d2:	9205      	str	r2, [sp, #20]
 80114d4:	eef1 7a67 	vneg.f32	s15, s15
 80114d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80114dc:	e76c      	b.n	80113b8 <nema_blit_rotate+0x5c>
 80114de:	ee07 0a90 	vmov	s15, r0
 80114e2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80114e6:	ee07 1a90 	vmov	s15, r1
 80114ea:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80114ee:	2300      	movs	r3, #0
 80114f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114f4:	9201      	str	r2, [sp, #4]
 80114f6:	9205      	str	r2, [sp, #20]
 80114f8:	9302      	str	r3, [sp, #8]
 80114fa:	9304      	str	r3, [sp, #16]
 80114fc:	eeb1 7a47 	vneg.f32	s14, s14
 8011500:	eef1 7a67 	vneg.f32	s15, s15
 8011504:	e758      	b.n	80113b8 <nema_blit_rotate+0x5c>
 8011506:	bf00      	nop
 8011508:	20000064 	.word	0x20000064
 801150c:	bf800000 	.word	0xbf800000
 8011510:	00000000 	.word	0x00000000

08011514 <nema_blit_tri_fit>:
 8011514:	2803      	cmp	r0, #3
 8011516:	d801      	bhi.n	801151c <nema_blit_tri_fit+0x8>
 8011518:	2903      	cmp	r1, #3
 801151a:	d900      	bls.n	801151e <nema_blit_tri_fit+0xa>
 801151c:	4770      	bx	lr
 801151e:	2a03      	cmp	r2, #3
 8011520:	d8fc      	bhi.n	801151c <nema_blit_tri_fit+0x8>
 8011522:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011526:	460c      	mov	r4, r1
 8011528:	493b      	ldr	r1, [pc, #236]	@ (8011618 <nema_blit_tri_fit+0x104>)
 801152a:	4603      	mov	r3, r0
 801152c:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 8011530:	ee07 0a90 	vmov	s15, r0
 8011534:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011538:	ee07 1a90 	vmov	s15, r1
 801153c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011540:	b08a      	sub	sp, #40	@ 0x28
 8011542:	f04f 0c00 	mov.w	ip, #0
 8011546:	edcd 7a08 	vstr	s15, [sp, #32]
 801154a:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801154e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8011552:	ed8d 7a03 	vstr	s14, [sp, #12]
 8011556:	ed8d 7a04 	vstr	s14, [sp, #16]
 801155a:	ee12 8a10 	vmov	r8, s4
 801155e:	ee11 9a90 	vmov	r9, s3
 8011562:	ee11 aa10 	vmov	sl, s2
 8011566:	ee10 6a10 	vmov	r6, s0
 801156a:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 801156e:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 8011572:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 8011576:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 801157a:	f8cd c008 	str.w	ip, [sp, #8]
 801157e:	f8cd c014 	str.w	ip, [sp, #20]
 8011582:	f8cd c018 	str.w	ip, [sp, #24]
 8011586:	f8cd c01c 	str.w	ip, [sp, #28]
 801158a:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 801158e:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 8011592:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 8011596:	ed12 7a04 	vldr	s14, [r2, #-16]
 801159a:	ed54 4a04 	vldr	s9, [r4, #-16]
 801159e:	ed13 2a04 	vldr	s4, [r3, #-16]
 80115a2:	eef0 5a62 	vmov.f32	s11, s5
 80115a6:	ee05 8a10 	vmov	s10, r8
 80115aa:	ee03 9a10 	vmov	s6, r9
 80115ae:	eef0 3a46 	vmov.f32	s7, s12
 80115b2:	eeb0 1a46 	vmov.f32	s2, s12
 80115b6:	ee12 7a90 	vmov	r7, s5
 80115ba:	ee02 aa90 	vmov	s5, sl
 80115be:	ee10 5a90 	vmov	r5, s1
 80115c2:	f000 f8d1 	bl	8011768 <nema_interpolate_tx_ty>
 80115c6:	ee00 6a10 	vmov	s0, r6
 80115ca:	f000 f971 	bl	80118b0 <nema_f2fx>
 80115ce:	ee00 5a10 	vmov	s0, r5
 80115d2:	4604      	mov	r4, r0
 80115d4:	f000 f96c 	bl	80118b0 <nema_f2fx>
 80115d8:	ee00 aa10 	vmov	s0, sl
 80115dc:	4605      	mov	r5, r0
 80115de:	f000 f967 	bl	80118b0 <nema_f2fx>
 80115e2:	ee00 9a10 	vmov	s0, r9
 80115e6:	4606      	mov	r6, r0
 80115e8:	f000 f962 	bl	80118b0 <nema_f2fx>
 80115ec:	ee00 8a10 	vmov	s0, r8
 80115f0:	4681      	mov	r9, r0
 80115f2:	f000 f95d 	bl	80118b0 <nema_f2fx>
 80115f6:	ee00 7a10 	vmov	s0, r7
 80115fa:	4680      	mov	r8, r0
 80115fc:	f000 f958 	bl	80118b0 <nema_f2fx>
 8011600:	464b      	mov	r3, r9
 8011602:	e9cd 8000 	strd	r8, r0, [sp]
 8011606:	4632      	mov	r2, r6
 8011608:	4629      	mov	r1, r5
 801160a:	4620      	mov	r0, r4
 801160c:	f000 fea8 	bl	8012360 <nema_raster_triangle_fx>
 8011610:	b00a      	add	sp, #40	@ 0x28
 8011612:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011616:	bf00      	nop
 8011618:	20000064 	.word	0x20000064

0801161c <nema_blit_quad_fit>:
 801161c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011620:	ed2d 8b08 	vpush	{d8-d11}
 8011624:	4b2b      	ldr	r3, [pc, #172]	@ (80116d4 <nema_blit_quad_fit+0xb8>)
 8011626:	b08e      	sub	sp, #56	@ 0x38
 8011628:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 801162c:	aa05      	add	r2, sp, #20
 801162e:	eef0 ba40 	vmov.f32	s23, s0
 8011632:	eeb0 ba60 	vmov.f32	s22, s1
 8011636:	eef0 aa41 	vmov.f32	s21, s2
 801163a:	eeb0 aa61 	vmov.f32	s20, s3
 801163e:	eef0 9a42 	vmov.f32	s19, s4
 8011642:	eeb0 9a62 	vmov.f32	s18, s5
 8011646:	eef0 8a43 	vmov.f32	s17, s6
 801164a:	eeb0 8a63 	vmov.f32	s16, s7
 801164e:	f000 fb33 	bl	8011cb8 <nema_mat3x3_quad_to_rect>
 8011652:	b120      	cbz	r0, 801165e <nema_blit_quad_fit+0x42>
 8011654:	b00e      	add	sp, #56	@ 0x38
 8011656:	ecbd 8b08 	vpop	{d8-d11}
 801165a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801165e:	a805      	add	r0, sp, #20
 8011660:	f000 fd0c 	bl	801207c <nema_set_matrix>
 8011664:	eeb0 0a6b 	vmov.f32	s0, s23
 8011668:	f000 f922 	bl	80118b0 <nema_f2fx>
 801166c:	eeb0 0a4b 	vmov.f32	s0, s22
 8011670:	4604      	mov	r4, r0
 8011672:	f000 f91d 	bl	80118b0 <nema_f2fx>
 8011676:	eeb0 0a6a 	vmov.f32	s0, s21
 801167a:	4605      	mov	r5, r0
 801167c:	f000 f918 	bl	80118b0 <nema_f2fx>
 8011680:	eeb0 0a4a 	vmov.f32	s0, s20
 8011684:	4606      	mov	r6, r0
 8011686:	f000 f913 	bl	80118b0 <nema_f2fx>
 801168a:	eeb0 0a69 	vmov.f32	s0, s19
 801168e:	4607      	mov	r7, r0
 8011690:	f000 f90e 	bl	80118b0 <nema_f2fx>
 8011694:	eeb0 0a49 	vmov.f32	s0, s18
 8011698:	4682      	mov	sl, r0
 801169a:	f000 f909 	bl	80118b0 <nema_f2fx>
 801169e:	eeb0 0a68 	vmov.f32	s0, s17
 80116a2:	4680      	mov	r8, r0
 80116a4:	f000 f904 	bl	80118b0 <nema_f2fx>
 80116a8:	eeb0 0a48 	vmov.f32	s0, s16
 80116ac:	4681      	mov	r9, r0
 80116ae:	f000 f8ff 	bl	80118b0 <nema_f2fx>
 80116b2:	f8cd a000 	str.w	sl, [sp]
 80116b6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80116ba:	f8cd 8004 	str.w	r8, [sp, #4]
 80116be:	463b      	mov	r3, r7
 80116c0:	4632      	mov	r2, r6
 80116c2:	4629      	mov	r1, r5
 80116c4:	4620      	mov	r0, r4
 80116c6:	f000 feb1 	bl	801242c <nema_raster_quad_fx>
 80116ca:	b00e      	add	sp, #56	@ 0x38
 80116cc:	ecbd 8b08 	vpop	{d8-d11}
 80116d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80116d4:	20000064 	.word	0x20000064

080116d8 <nema_interpolate_rect_colors>:
 80116d8:	b410      	push	{r4}
 80116da:	9803      	ldr	r0, [sp, #12]
 80116dc:	e9dd 1401 	ldrd	r1, r4, [sp, #4]
 80116e0:	edd0 2a00 	vldr	s5, [r0]
 80116e4:	edd4 7a00 	vldr	s15, [r4]
 80116e8:	ed91 0a00 	vldr	s0, [r1]
 80116ec:	ee72 2ae7 	vsub.f32	s5, s5, s15
 80116f0:	ee37 2ac0 	vsub.f32	s4, s15, s0
 80116f4:	ee07 3a90 	vmov	s15, r3
 80116f8:	ed94 3a01 	vldr	s6, [r4, #4]
 80116fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011700:	ed94 4a02 	vldr	s8, [r4, #8]
 8011704:	ed94 5a03 	vldr	s10, [r4, #12]
 8011708:	edd0 3a01 	vldr	s7, [r0, #4]
 801170c:	edd1 0a01 	vldr	s1, [r1, #4]
 8011710:	edd0 4a02 	vldr	s9, [r0, #8]
 8011714:	edd0 5a03 	vldr	s11, [r0, #12]
 8011718:	edd1 1a03 	vldr	s3, [r1, #12]
 801171c:	ed91 1a02 	vldr	s2, [r1, #8]
 8011720:	ee07 2a90 	vmov	s15, r2
 8011724:	ee73 3ac3 	vsub.f32	s7, s7, s6
 8011728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801172c:	ee74 4ac4 	vsub.f32	s9, s9, s8
 8011730:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011734:	ee33 3a60 	vsub.f32	s6, s6, s1
 8011738:	ee35 5a61 	vsub.f32	s10, s10, s3
 801173c:	ee34 4a41 	vsub.f32	s8, s8, s2
 8011740:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011744:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011748:	eec3 3a87 	vdiv.f32	s7, s7, s14
 801174c:	ee83 3a27 	vdiv.f32	s6, s6, s15
 8011750:	eec4 4a87 	vdiv.f32	s9, s9, s14
 8011754:	eec5 5a87 	vdiv.f32	s11, s11, s14
 8011758:	ee85 5a27 	vdiv.f32	s10, s10, s15
 801175c:	ee84 4a27 	vdiv.f32	s8, s8, s15
 8011760:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011764:	f7ff bd62 	b.w	801122c <nema_set_gradient>

08011768 <nema_interpolate_tx_ty>:
 8011768:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801176c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011770:	d407      	bmi.n	8011782 <nema_interpolate_tx_ty+0x1a>
 8011772:	eddf 7a40 	vldr	s15, [pc, #256]	@ 8011874 <nema_interpolate_tx_ty+0x10c>
 8011776:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801177a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801177e:	d807      	bhi.n	8011790 <nema_interpolate_tx_ty+0x28>
 8011780:	4770      	bx	lr
 8011782:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8011878 <nema_interpolate_tx_ty+0x110>
 8011786:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801178a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801178e:	daf7      	bge.n	8011780 <nema_interpolate_tx_ty+0x18>
 8011790:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8011794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011798:	d45b      	bmi.n	8011852 <nema_interpolate_tx_ty+0xea>
 801179a:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8011874 <nema_interpolate_tx_ty+0x10c>
 801179e:	eef4 3ae7 	vcmpe.f32	s7, s15
 80117a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117a6:	d9eb      	bls.n	8011780 <nema_interpolate_tx_ty+0x18>
 80117a8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80117ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117b0:	d457      	bmi.n	8011862 <nema_interpolate_tx_ty+0xfa>
 80117b2:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8011874 <nema_interpolate_tx_ty+0x10c>
 80117b6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80117ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117be:	d9df      	bls.n	8011780 <nema_interpolate_tx_ty+0x18>
 80117c0:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80117c4:	b570      	push	{r4, r5, r6, lr}
 80117c6:	ee15 3a90 	vmov	r3, s11
 80117ca:	ee13 2a10 	vmov	r2, s6
 80117ce:	eec7 5a86 	vdiv.f32	s11, s15, s12
 80117d2:	ee87 3a81 	vdiv.f32	s6, s15, s2
 80117d6:	ee15 4a10 	vmov	r4, s10
 80117da:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 80117de:	ee63 1a21 	vmul.f32	s3, s6, s3
 80117e2:	ee23 2a02 	vmul.f32	s4, s6, s4
 80117e6:	ee25 4a04 	vmul.f32	s8, s10, s8
 80117ea:	ee65 4a24 	vmul.f32	s9, s10, s9
 80117ee:	ee65 6aa6 	vmul.f32	s13, s11, s13
 80117f2:	ee25 7a87 	vmul.f32	s14, s11, s14
 80117f6:	b092      	sub	sp, #72	@ 0x48
 80117f8:	a809      	add	r0, sp, #36	@ 0x24
 80117fa:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80117fe:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 8011802:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 8011806:	920d      	str	r2, [sp, #52]	@ 0x34
 8011808:	930e      	str	r3, [sp, #56]	@ 0x38
 801180a:	edcd 1a00 	vstr	s3, [sp]
 801180e:	ed8d 2a03 	vstr	s4, [sp, #12]
 8011812:	ed8d 4a01 	vstr	s8, [sp, #4]
 8011816:	edcd 4a04 	vstr	s9, [sp, #16]
 801181a:	edcd 6a02 	vstr	s13, [sp, #8]
 801181e:	ed8d 7a05 	vstr	s14, [sp, #20]
 8011822:	ed8d 3a06 	vstr	s6, [sp, #24]
 8011826:	ed8d 5a07 	vstr	s10, [sp, #28]
 801182a:	edcd 5a08 	vstr	s11, [sp, #32]
 801182e:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8011832:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8011836:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801183a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801183c:	f000 f938 	bl	8011ab0 <nema_mat3x3_adj>
 8011840:	a909      	add	r1, sp, #36	@ 0x24
 8011842:	4668      	mov	r0, sp
 8011844:	f000 f89e 	bl	8011984 <nema_mat3x3_mul>
 8011848:	4668      	mov	r0, sp
 801184a:	f000 fc17 	bl	801207c <nema_set_matrix>
 801184e:	b012      	add	sp, #72	@ 0x48
 8011850:	bd70      	pop	{r4, r5, r6, pc}
 8011852:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8011878 <nema_interpolate_tx_ty+0x110>
 8011856:	eef4 3ae7 	vcmpe.f32	s7, s15
 801185a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801185e:	da8f      	bge.n	8011780 <nema_interpolate_tx_ty+0x18>
 8011860:	e7a2      	b.n	80117a8 <nema_interpolate_tx_ty+0x40>
 8011862:	eddf 7a05 	vldr	s15, [pc, #20]	@ 8011878 <nema_interpolate_tx_ty+0x110>
 8011866:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801186a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801186e:	da87      	bge.n	8011780 <nema_interpolate_tx_ty+0x18>
 8011870:	e7a6      	b.n	80117c0 <nema_interpolate_tx_ty+0x58>
 8011872:	bf00      	nop
 8011874:	3727c5ac 	.word	0x3727c5ac
 8011878:	b727c5ac 	.word	0xb727c5ac

0801187c <nema_sqrt>:
 801187c:	ee10 2a10 	vmov	r2, s0
 8011880:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011884:	4b09      	ldr	r3, [pc, #36]	@ (80118ac <nema_sqrt+0x30>)
 8011886:	ee20 7a07 	vmul.f32	s14, s0, s14
 801188a:	eba3 0352 	sub.w	r3, r3, r2, lsr #1
 801188e:	ee07 3a90 	vmov	s15, r3
 8011892:	ee27 7a27 	vmul.f32	s14, s14, s15
 8011896:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 801189a:	ee27 7a27 	vmul.f32	s14, s14, s15
 801189e:	ee67 7a80 	vmul.f32	s15, s15, s0
 80118a2:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80118a6:	ee20 0a27 	vmul.f32	s0, s0, s15
 80118aa:	4770      	bx	lr
 80118ac:	5f3759df 	.word	0x5f3759df

080118b0 <nema_f2fx>:
 80118b0:	eddf 7a06 	vldr	s15, [pc, #24]	@ 80118cc <nema_f2fx+0x1c>
 80118b4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80118b8:	ee20 0a27 	vmul.f32	s0, s0, s15
 80118bc:	ee30 0a07 	vadd.f32	s0, s0, s14
 80118c0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80118c4:	ee17 0a90 	vmov	r0, s15
 80118c8:	4770      	bx	lr
 80118ca:	bf00      	nop
 80118cc:	47800000 	.word	0x47800000

080118d0 <nema_mat3x3_load_identity>:
 80118d0:	2300      	movs	r3, #0
 80118d2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80118d6:	61c3      	str	r3, [r0, #28]
 80118d8:	6202      	str	r2, [r0, #32]
 80118da:	6102      	str	r2, [r0, #16]
 80118dc:	6002      	str	r2, [r0, #0]
 80118de:	6183      	str	r3, [r0, #24]
 80118e0:	6143      	str	r3, [r0, #20]
 80118e2:	60c3      	str	r3, [r0, #12]
 80118e4:	6083      	str	r3, [r0, #8]
 80118e6:	6043      	str	r3, [r0, #4]
 80118e8:	4770      	bx	lr
 80118ea:	bf00      	nop

080118ec <nema_mat3x3_copy>:
 80118ec:	680b      	ldr	r3, [r1, #0]
 80118ee:	6003      	str	r3, [r0, #0]
 80118f0:	684b      	ldr	r3, [r1, #4]
 80118f2:	6043      	str	r3, [r0, #4]
 80118f4:	688b      	ldr	r3, [r1, #8]
 80118f6:	6083      	str	r3, [r0, #8]
 80118f8:	68cb      	ldr	r3, [r1, #12]
 80118fa:	60c3      	str	r3, [r0, #12]
 80118fc:	690b      	ldr	r3, [r1, #16]
 80118fe:	6103      	str	r3, [r0, #16]
 8011900:	694b      	ldr	r3, [r1, #20]
 8011902:	6143      	str	r3, [r0, #20]
 8011904:	698b      	ldr	r3, [r1, #24]
 8011906:	6183      	str	r3, [r0, #24]
 8011908:	69cb      	ldr	r3, [r1, #28]
 801190a:	61c3      	str	r3, [r0, #28]
 801190c:	6a0b      	ldr	r3, [r1, #32]
 801190e:	6203      	str	r3, [r0, #32]
 8011910:	4770      	bx	lr
 8011912:	bf00      	nop

08011914 <nema_mat3x3_translate>:
 8011914:	edd0 6a06 	vldr	s13, [r0, #24]
 8011918:	ed90 7a07 	vldr	s14, [r0, #28]
 801191c:	edd0 7a08 	vldr	s15, [r0, #32]
 8011920:	ee26 3a80 	vmul.f32	s6, s13, s0
 8011924:	ee67 3a00 	vmul.f32	s7, s14, s0
 8011928:	ee66 6aa0 	vmul.f32	s13, s13, s1
 801192c:	ed90 4a00 	vldr	s8, [r0]
 8011930:	edd0 4a03 	vldr	s9, [r0, #12]
 8011934:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011938:	ed90 5a01 	vldr	s10, [r0, #4]
 801193c:	edd0 5a04 	vldr	s11, [r0, #16]
 8011940:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011944:	ed90 6a02 	vldr	s12, [r0, #8]
 8011948:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801194c:	edd0 0a05 	vldr	s1, [r0, #20]
 8011950:	ee34 4a03 	vadd.f32	s8, s8, s6
 8011954:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011958:	ee35 5a23 	vadd.f32	s10, s10, s7
 801195c:	ee35 7a87 	vadd.f32	s14, s11, s14
 8011960:	ee36 0a00 	vadd.f32	s0, s12, s0
 8011964:	ee70 7aa7 	vadd.f32	s15, s1, s15
 8011968:	ed80 4a00 	vstr	s8, [r0]
 801196c:	edc0 6a03 	vstr	s13, [r0, #12]
 8011970:	ed80 5a01 	vstr	s10, [r0, #4]
 8011974:	ed80 7a04 	vstr	s14, [r0, #16]
 8011978:	ed80 0a02 	vstr	s0, [r0, #8]
 801197c:	edc0 7a05 	vstr	s15, [r0, #20]
 8011980:	4770      	bx	lr
 8011982:	bf00      	nop

08011984 <nema_mat3x3_mul>:
 8011984:	edd1 4a01 	vldr	s9, [r1, #4]
 8011988:	ed91 0a04 	vldr	s0, [r1, #16]
 801198c:	edd1 0a05 	vldr	s1, [r1, #20]
 8011990:	ed2d 8b0c 	vpush	{d8-d13}
 8011994:	ed91 6a00 	vldr	s12, [r1]
 8011998:	ed91 4a03 	vldr	s8, [r1, #12]
 801199c:	ed91 aa02 	vldr	s20, [r1, #8]
 80119a0:	edd0 3a03 	vldr	s7, [r0, #12]
 80119a4:	ed90 8a04 	vldr	s16, [r0, #16]
 80119a8:	ed90 9a00 	vldr	s18, [r0]
 80119ac:	edd0 8a01 	vldr	s17, [r0, #4]
 80119b0:	edd0 9a06 	vldr	s19, [r0, #24]
 80119b4:	ed90 1a07 	vldr	s2, [r0, #28]
 80119b8:	edd1 aa06 	vldr	s21, [r1, #24]
 80119bc:	edd1 6a07 	vldr	s13, [r1, #28]
 80119c0:	ed91 7a08 	vldr	s14, [r1, #32]
 80119c4:	ed90 5a02 	vldr	s10, [r0, #8]
 80119c8:	edd0 5a05 	vldr	s11, [r0, #20]
 80119cc:	ee69 da06 	vmul.f32	s27, s18, s12
 80119d0:	ee29 da24 	vmul.f32	s26, s18, s9
 80119d4:	ee66 ca23 	vmul.f32	s25, s12, s7
 80119d8:	ee24 caa3 	vmul.f32	s24, s9, s7
 80119dc:	ee68 1a84 	vmul.f32	s3, s17, s8
 80119e0:	ee29 9a0a 	vmul.f32	s18, s18, s20
 80119e4:	ee28 2a80 	vmul.f32	s4, s17, s0
 80119e8:	ee26 6a29 	vmul.f32	s12, s12, s19
 80119ec:	ee64 2a08 	vmul.f32	s5, s8, s16
 80119f0:	ee6a ba23 	vmul.f32	s23, s20, s7
 80119f4:	ee24 baa9 	vmul.f32	s22, s9, s19
 80119f8:	ee20 3a08 	vmul.f32	s6, s0, s16
 80119fc:	ee60 3a88 	vmul.f32	s7, s1, s16
 8011a00:	ee60 4a01 	vmul.f32	s9, s0, s2
 8011a04:	ee68 8aa0 	vmul.f32	s17, s17, s1
 8011a08:	ee24 4a01 	vmul.f32	s8, s8, s2
 8011a0c:	ee6a 7a29 	vmul.f32	s15, s20, s19
 8011a10:	ee20 1a81 	vmul.f32	s2, s1, s2
 8011a14:	edd0 0a08 	vldr	s1, [r0, #32]
 8011a18:	ee25 0a2a 	vmul.f32	s0, s10, s21
 8011a1c:	ee79 8a28 	vadd.f32	s17, s18, s17
 8011a20:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 8011a24:	ee25 9a26 	vmul.f32	s18, s10, s13
 8011a28:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 8011a2c:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8011a30:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 8011a34:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8011a38:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 8011a3c:	ee36 4a04 	vadd.f32	s8, s12, s8
 8011a40:	ee7b 4a24 	vadd.f32	s9, s22, s9
 8011a44:	ee77 7a81 	vadd.f32	s15, s15, s2
 8011a48:	ee25 5a07 	vmul.f32	s10, s10, s14
 8011a4c:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8011a50:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 8011a54:	ee67 5a25 	vmul.f32	s11, s14, s11
 8011a58:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8011a5c:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011a60:	ee32 2a09 	vadd.f32	s4, s4, s18
 8011a64:	ee38 5a85 	vadd.f32	s10, s17, s10
 8011a68:	ee72 2a88 	vadd.f32	s5, s5, s16
 8011a6c:	ee71 1a80 	vadd.f32	s3, s3, s0
 8011a70:	ee33 3a01 	vadd.f32	s6, s6, s2
 8011a74:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8011a78:	ee34 6a06 	vadd.f32	s12, s8, s12
 8011a7c:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011a80:	ee77 7a87 	vadd.f32	s15, s15, s14
 8011a84:	edc0 1a00 	vstr	s3, [r0]
 8011a88:	ed80 2a01 	vstr	s4, [r0, #4]
 8011a8c:	ed80 5a02 	vstr	s10, [r0, #8]
 8011a90:	edc0 2a03 	vstr	s5, [r0, #12]
 8011a94:	ed80 3a04 	vstr	s6, [r0, #16]
 8011a98:	edc0 5a05 	vstr	s11, [r0, #20]
 8011a9c:	ed80 6a06 	vstr	s12, [r0, #24]
 8011aa0:	edc0 6a07 	vstr	s13, [r0, #28]
 8011aa4:	edc0 7a08 	vstr	s15, [r0, #32]
 8011aa8:	ecbd 8b0c 	vpop	{d8-d13}
 8011aac:	4770      	bx	lr
 8011aae:	bf00      	nop

08011ab0 <nema_mat3x3_adj>:
 8011ab0:	edd0 3a03 	vldr	s7, [r0, #12]
 8011ab4:	edd0 4a04 	vldr	s9, [r0, #16]
 8011ab8:	ed90 6a08 	vldr	s12, [r0, #32]
 8011abc:	ed90 5a07 	vldr	s10, [r0, #28]
 8011ac0:	ed90 4a05 	vldr	s8, [r0, #20]
 8011ac4:	edd0 7a00 	vldr	s15, [r0]
 8011ac8:	edd0 6a02 	vldr	s13, [r0, #8]
 8011acc:	edd0 5a01 	vldr	s11, [r0, #4]
 8011ad0:	ed90 7a06 	vldr	s14, [r0, #24]
 8011ad4:	ed2d 8b04 	vpush	{d8-d9}
 8011ad8:	ee24 1a86 	vmul.f32	s2, s9, s12
 8011adc:	ee25 9a04 	vmul.f32	s18, s10, s8
 8011ae0:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011ae4:	ee24 8aa6 	vmul.f32	s16, s9, s13
 8011ae8:	ee65 1a26 	vmul.f32	s3, s10, s13
 8011aec:	ee24 2a25 	vmul.f32	s4, s8, s11
 8011af0:	ee64 2a07 	vmul.f32	s5, s8, s14
 8011af4:	ee66 0a87 	vmul.f32	s1, s13, s14
 8011af8:	ee25 3a23 	vmul.f32	s6, s10, s7
 8011afc:	ee24 4a27 	vmul.f32	s8, s8, s15
 8011b00:	ee26 0a23 	vmul.f32	s0, s12, s7
 8011b04:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8011b08:	ee26 6a27 	vmul.f32	s12, s12, s15
 8011b0c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011b10:	ee64 7aa7 	vmul.f32	s15, s9, s15
 8011b14:	ee64 4a87 	vmul.f32	s9, s9, s14
 8011b18:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011b1c:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011b20:	ee31 1a49 	vsub.f32	s2, s2, s18
 8011b24:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8011b28:	ee32 2a48 	vsub.f32	s4, s4, s16
 8011b2c:	ecbd 8b04 	vpop	{d8-d9}
 8011b30:	ee72 3ac0 	vsub.f32	s7, s5, s0
 8011b34:	ee36 6a60 	vsub.f32	s12, s12, s1
 8011b38:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8011b3c:	ee73 4a64 	vsub.f32	s9, s6, s9
 8011b40:	ee37 7a45 	vsub.f32	s14, s14, s10
 8011b44:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8011b48:	ed80 1a00 	vstr	s2, [r0]
 8011b4c:	edc0 1a01 	vstr	s3, [r0, #4]
 8011b50:	ed80 2a02 	vstr	s4, [r0, #8]
 8011b54:	edc0 3a03 	vstr	s7, [r0, #12]
 8011b58:	ed80 6a04 	vstr	s12, [r0, #16]
 8011b5c:	edc0 6a05 	vstr	s13, [r0, #20]
 8011b60:	edc0 4a06 	vstr	s9, [r0, #24]
 8011b64:	ed80 7a07 	vstr	s14, [r0, #28]
 8011b68:	edc0 7a08 	vstr	s15, [r0, #32]
 8011b6c:	4770      	bx	lr
 8011b6e:	bf00      	nop

08011b70 <nema_mat3x3_invert>:
 8011b70:	ed90 6a08 	vldr	s12, [r0, #32]
 8011b74:	edd0 2a04 	vldr	s5, [r0, #16]
 8011b78:	ed90 3a05 	vldr	s6, [r0, #20]
 8011b7c:	ed90 2a07 	vldr	s4, [r0, #28]
 8011b80:	edd0 4a03 	vldr	s9, [r0, #12]
 8011b84:	edd0 6a06 	vldr	s13, [r0, #24]
 8011b88:	ee63 7a02 	vmul.f32	s15, s6, s4
 8011b8c:	ee66 3a22 	vmul.f32	s7, s12, s5
 8011b90:	ee26 0a24 	vmul.f32	s0, s12, s9
 8011b94:	ee63 1a26 	vmul.f32	s3, s6, s13
 8011b98:	ee73 3ae7 	vsub.f32	s7, s7, s15
 8011b9c:	ee22 7aa6 	vmul.f32	s14, s5, s13
 8011ba0:	edd0 7a00 	vldr	s15, [r0]
 8011ba4:	ee30 1a61 	vsub.f32	s2, s0, s3
 8011ba8:	edd0 5a01 	vldr	s11, [r0, #4]
 8011bac:	ee22 4a24 	vmul.f32	s8, s4, s9
 8011bb0:	ee21 1a25 	vmul.f32	s2, s2, s11
 8011bb4:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011bb8:	ee27 5aa3 	vmul.f32	s10, s15, s7
 8011bbc:	ed90 7a02 	vldr	s14, [r0, #8]
 8011bc0:	ee35 5a41 	vsub.f32	s10, s10, s2
 8011bc4:	ee27 1a04 	vmul.f32	s2, s14, s8
 8011bc8:	ee35 5a01 	vadd.f32	s10, s10, s2
 8011bcc:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8011bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011bd4:	4603      	mov	r3, r0
 8011bd6:	d45d      	bmi.n	8011c94 <nema_mat3x3_invert+0x124>
 8011bd8:	ed9f 1a35 	vldr	s2, [pc, #212]	@ 8011cb0 <nema_mat3x3_invert+0x140>
 8011bdc:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011be0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011be4:	bf94      	ite	ls
 8011be6:	2001      	movls	r0, #1
 8011be8:	2000      	movhi	r0, #0
 8011bea:	2800      	cmp	r0, #0
 8011bec:	d15c      	bne.n	8011ca8 <nema_mat3x3_invert+0x138>
 8011bee:	ed2d 8b04 	vpush	{d8-d9}
 8011bf2:	ee62 0a07 	vmul.f32	s1, s4, s14
 8011bf6:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011bfa:	ee26 8a87 	vmul.f32	s16, s13, s14
 8011bfe:	ee23 1a25 	vmul.f32	s2, s6, s11
 8011c02:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8011c06:	ee27 2a82 	vmul.f32	s4, s15, s4
 8011c0a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8011c0e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011c12:	ee27 3a83 	vmul.f32	s6, s15, s6
 8011c16:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8011c1a:	ee62 2a87 	vmul.f32	s5, s5, s14
 8011c1e:	ee24 7a87 	vmul.f32	s14, s9, s14
 8011c22:	ee65 4aa4 	vmul.f32	s9, s11, s9
 8011c26:	ee36 6a48 	vsub.f32	s12, s12, s16
 8011c2a:	eec9 5a05 	vdiv.f32	s11, s18, s10
 8011c2e:	ee71 1ac0 	vsub.f32	s3, s3, s0
 8011c32:	ee30 5ae8 	vsub.f32	s10, s1, s17
 8011c36:	ee76 6ac2 	vsub.f32	s13, s13, s4
 8011c3a:	ee71 2a62 	vsub.f32	s5, s2, s5
 8011c3e:	ee37 7a43 	vsub.f32	s14, s14, s6
 8011c42:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8011c46:	ee63 3aa5 	vmul.f32	s7, s7, s11
 8011c4a:	ee61 1aa5 	vmul.f32	s3, s3, s11
 8011c4e:	ee24 4a25 	vmul.f32	s8, s8, s11
 8011c52:	ee25 5a25 	vmul.f32	s10, s10, s11
 8011c56:	ee26 6a25 	vmul.f32	s12, s12, s11
 8011c5a:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8011c5e:	ee62 2aa5 	vmul.f32	s5, s5, s11
 8011c62:	ee27 7a25 	vmul.f32	s14, s14, s11
 8011c66:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011c6a:	edc3 3a00 	vstr	s7, [r3]
 8011c6e:	edc3 1a03 	vstr	s3, [r3, #12]
 8011c72:	ed83 4a06 	vstr	s8, [r3, #24]
 8011c76:	ed83 5a01 	vstr	s10, [r3, #4]
 8011c7a:	ed83 6a04 	vstr	s12, [r3, #16]
 8011c7e:	edc3 6a07 	vstr	s13, [r3, #28]
 8011c82:	edc3 2a02 	vstr	s5, [r3, #8]
 8011c86:	ed83 7a05 	vstr	s14, [r3, #20]
 8011c8a:	edc3 7a08 	vstr	s15, [r3, #32]
 8011c8e:	ecbd 8b04 	vpop	{d8-d9}
 8011c92:	4770      	bx	lr
 8011c94:	ed9f 1a07 	vldr	s2, [pc, #28]	@ 8011cb4 <nema_mat3x3_invert+0x144>
 8011c98:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ca0:	bfac      	ite	ge
 8011ca2:	2001      	movge	r0, #1
 8011ca4:	2000      	movlt	r0, #0
 8011ca6:	e7a0      	b.n	8011bea <nema_mat3x3_invert+0x7a>
 8011ca8:	f04f 30ff 	mov.w	r0, #4294967295
 8011cac:	4770      	bx	lr
 8011cae:	bf00      	nop
 8011cb0:	3727c5ac 	.word	0x3727c5ac
 8011cb4:	b727c5ac 	.word	0xb727c5ac

08011cb8 <nema_mat3x3_quad_to_rect>:
 8011cb8:	ee70 6a41 	vsub.f32	s13, s0, s2
 8011cbc:	ee76 6a82 	vadd.f32	s13, s13, s4
 8011cc0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8011cc4:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8011cc8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8011ccc:	ee36 6a22 	vadd.f32	s12, s12, s5
 8011cd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cd4:	ed2d 8b06 	vpush	{d8-d10}
 8011cd8:	ee36 6a63 	vsub.f32	s12, s12, s7
 8011cdc:	ee09 0a10 	vmov	s18, r0
 8011ce0:	ee08 1a90 	vmov	s17, r1
 8011ce4:	f100 812e 	bmi.w	8011f44 <nema_mat3x3_quad_to_rect+0x28c>
 8011ce8:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8011f7c <nema_mat3x3_quad_to_rect+0x2c4>
 8011cec:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011cf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cf4:	d80d      	bhi.n	8011d12 <nema_mat3x3_quad_to_rect+0x5a>
 8011cf6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cfe:	f100 80f7 	bmi.w	8011ef0 <nema_mat3x3_quad_to_rect+0x238>
 8011d02:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 8011f7c <nema_mat3x3_quad_to_rect+0x2c4>
 8011d06:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011d0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d0e:	f240 80f7 	bls.w	8011f00 <nema_mat3x3_quad_to_rect+0x248>
 8011d12:	ee31 7a42 	vsub.f32	s14, s2, s4
 8011d16:	ee73 7ae2 	vsub.f32	s15, s7, s5
 8011d1a:	ee33 2a42 	vsub.f32	s4, s6, s4
 8011d1e:	ee71 2ae2 	vsub.f32	s5, s3, s5
 8011d22:	ee67 5a27 	vmul.f32	s11, s14, s15
 8011d26:	ee22 5a22 	vmul.f32	s10, s4, s5
 8011d2a:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011d2e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011d32:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8011d36:	ee26 7a07 	vmul.f32	s14, s12, s14
 8011d3a:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8011d3e:	ee26 6a02 	vmul.f32	s12, s12, s4
 8011d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d46:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8011d4a:	ee77 6a66 	vsub.f32	s13, s14, s13
 8011d4e:	f100 80c5 	bmi.w	8011edc <nema_mat3x3_quad_to_rect+0x224>
 8011d52:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 8011f7c <nema_mat3x3_quad_to_rect+0x2c4>
 8011d56:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011d5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d5e:	bf94      	ite	ls
 8011d60:	2301      	movls	r3, #1
 8011d62:	2300      	movhi	r3, #0
 8011d64:	2b00      	cmp	r3, #0
 8011d66:	f040 8106 	bne.w	8011f76 <nema_mat3x3_quad_to_rect+0x2be>
 8011d6a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011d6e:	ee87 6a25 	vdiv.f32	s12, s14, s11
 8011d72:	ee67 7a86 	vmul.f32	s15, s15, s12
 8011d76:	ee66 6a86 	vmul.f32	s13, s13, s12
 8011d7a:	ee21 5a27 	vmul.f32	s10, s2, s15
 8011d7e:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8011d82:	ee63 2aa6 	vmul.f32	s5, s7, s13
 8011d86:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011d8a:	ee23 6a26 	vmul.f32	s12, s6, s13
 8011d8e:	ee33 2a40 	vsub.f32	s4, s6, s0
 8011d92:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011d96:	ee73 3ae0 	vsub.f32	s7, s7, s1
 8011d9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d9e:	ee32 2a06 	vadd.f32	s4, s4, s12
 8011da2:	ee71 1aa5 	vadd.f32	s3, s3, s11
 8011da6:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8011daa:	ed82 0a02 	vstr	s0, [r2, #8]
 8011dae:	edc2 0a05 	vstr	s1, [r2, #20]
 8011db2:	edc2 7a06 	vstr	s15, [r2, #24]
 8011db6:	edc2 6a07 	vstr	s13, [r2, #28]
 8011dba:	ed82 7a08 	vstr	s14, [r2, #32]
 8011dbe:	ed82 1a00 	vstr	s2, [r2]
 8011dc2:	ed82 2a01 	vstr	s4, [r2, #4]
 8011dc6:	edc2 1a03 	vstr	s3, [r2, #12]
 8011dca:	edc2 2a04 	vstr	s5, [r2, #16]
 8011dce:	ee20 4aa6 	vmul.f32	s8, s1, s13
 8011dd2:	ee60 5aa7 	vmul.f32	s11, s1, s15
 8011dd6:	ee32 3ac4 	vsub.f32	s6, s5, s8
 8011dda:	ee31 7ae5 	vsub.f32	s14, s3, s11
 8011dde:	ee21 8aa6 	vmul.f32	s16, s3, s13
 8011de2:	ee22 6aa7 	vmul.f32	s12, s5, s15
 8011de6:	ee27 7a02 	vmul.f32	s14, s14, s4
 8011dea:	ee23 4a01 	vmul.f32	s8, s6, s2
 8011dee:	ee38 8a46 	vsub.f32	s16, s16, s12
 8011df2:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011df6:	ee20 7a08 	vmul.f32	s14, s0, s16
 8011dfa:	ee34 4a07 	vadd.f32	s8, s8, s14
 8011dfe:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8011e02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e06:	f100 80ac 	bmi.w	8011f62 <nema_mat3x3_quad_to_rect+0x2aa>
 8011e0a:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 8011f7c <nema_mat3x3_quad_to_rect+0x2c4>
 8011e0e:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e16:	bf94      	ite	ls
 8011e18:	2001      	movls	r0, #1
 8011e1a:	2000      	movhi	r0, #0
 8011e1c:	2800      	cmp	r0, #0
 8011e1e:	f040 80aa 	bne.w	8011f76 <nema_mat3x3_quad_to_rect+0x2be>
 8011e22:	ee20 5a82 	vmul.f32	s10, s1, s4
 8011e26:	ee60 4a26 	vmul.f32	s9, s0, s13
 8011e2a:	ee20 6a27 	vmul.f32	s12, s0, s15
 8011e2e:	ee60 9a22 	vmul.f32	s19, s0, s5
 8011e32:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 8011e36:	ee60 0a81 	vmul.f32	s1, s1, s2
 8011e3a:	ee20 7a21 	vmul.f32	s14, s0, s3
 8011e3e:	eeca 3a04 	vdiv.f32	s7, s20, s8
 8011e42:	ee74 4ac2 	vsub.f32	s9, s9, s4
 8011e46:	ee61 6a26 	vmul.f32	s13, s2, s13
 8011e4a:	ee67 7a82 	vmul.f32	s15, s15, s4
 8011e4e:	ee35 5a69 	vsub.f32	s10, s10, s19
 8011e52:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8011e56:	ee31 6a46 	vsub.f32	s12, s2, s12
 8011e5a:	ee62 2a81 	vmul.f32	s5, s5, s2
 8011e5e:	ee37 7a60 	vsub.f32	s14, s14, s1
 8011e62:	ee21 2a82 	vmul.f32	s4, s3, s4
 8011e66:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8011e6a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8011e6e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011e72:	ee23 4a23 	vmul.f32	s8, s6, s7
 8011e76:	ee65 6a23 	vmul.f32	s13, s10, s7
 8011e7a:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011e7e:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8011e82:	ee26 6a23 	vmul.f32	s12, s12, s7
 8011e86:	ee27 7a23 	vmul.f32	s14, s14, s7
 8011e8a:	ee72 2ac2 	vsub.f32	s5, s5, s4
 8011e8e:	ee24 4a09 	vmul.f32	s8, s8, s18
 8011e92:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8011e96:	ee28 8a23 	vmul.f32	s16, s16, s7
 8011e9a:	ee24 5a89 	vmul.f32	s10, s9, s18
 8011e9e:	ee26 6a28 	vmul.f32	s12, s12, s17
 8011ea2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8011ea6:	ee66 6a89 	vmul.f32	s13, s13, s18
 8011eaa:	ee27 7a28 	vmul.f32	s14, s14, s17
 8011eae:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8011eb2:	ed82 4a00 	vstr	s8, [r2]
 8011eb6:	edc2 5a03 	vstr	s11, [r2, #12]
 8011eba:	ed82 8a06 	vstr	s16, [r2, #24]
 8011ebe:	ed82 5a01 	vstr	s10, [r2, #4]
 8011ec2:	ed82 6a04 	vstr	s12, [r2, #16]
 8011ec6:	edc2 7a07 	vstr	s15, [r2, #28]
 8011eca:	edc2 6a02 	vstr	s13, [r2, #8]
 8011ece:	ed82 7a05 	vstr	s14, [r2, #20]
 8011ed2:	edc2 2a08 	vstr	s5, [r2, #32]
 8011ed6:	ecbd 8b06 	vpop	{d8-d10}
 8011eda:	4770      	bx	lr
 8011edc:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8011f80 <nema_mat3x3_quad_to_rect+0x2c8>
 8011ee0:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ee8:	bfac      	ite	ge
 8011eea:	2301      	movge	r3, #1
 8011eec:	2300      	movlt	r3, #0
 8011eee:	e739      	b.n	8011d64 <nema_mat3x3_quad_to_rect+0xac>
 8011ef0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011f80 <nema_mat3x3_quad_to_rect+0x2c8>
 8011ef4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011ef8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011efc:	f6ff af09 	blt.w	8011d12 <nema_mat3x3_quad_to_rect+0x5a>
 8011f00:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8011f84 <nema_mat3x3_quad_to_rect+0x2cc>
 8011f04:	ee32 2a41 	vsub.f32	s4, s4, s2
 8011f08:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8011f0c:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011f10:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011f14:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8011f18:	eef0 7a47 	vmov.f32	s15, s14
 8011f1c:	ed82 2a01 	vstr	s4, [r2, #4]
 8011f20:	ed82 1a00 	vstr	s2, [r2]
 8011f24:	edc2 2a04 	vstr	s5, [r2, #16]
 8011f28:	edc2 1a03 	vstr	s3, [r2, #12]
 8011f2c:	ed82 0a02 	vstr	s0, [r2, #8]
 8011f30:	edc2 0a05 	vstr	s1, [r2, #20]
 8011f34:	ed82 7a06 	vstr	s14, [r2, #24]
 8011f38:	ed82 7a07 	vstr	s14, [r2, #28]
 8011f3c:	eef0 6a47 	vmov.f32	s13, s14
 8011f40:	6213      	str	r3, [r2, #32]
 8011f42:	e744      	b.n	8011dce <nema_mat3x3_quad_to_rect+0x116>
 8011f44:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8011f80 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f48:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f50:	f6ff aedf 	blt.w	8011d12 <nema_mat3x3_quad_to_rect+0x5a>
 8011f54:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011f58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f5c:	f57f aed1 	bpl.w	8011d02 <nema_mat3x3_quad_to_rect+0x4a>
 8011f60:	e7c6      	b.n	8011ef0 <nema_mat3x3_quad_to_rect+0x238>
 8011f62:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8011f80 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f66:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f6e:	bfac      	ite	ge
 8011f70:	2001      	movge	r0, #1
 8011f72:	2000      	movlt	r0, #0
 8011f74:	e752      	b.n	8011e1c <nema_mat3x3_quad_to_rect+0x164>
 8011f76:	f04f 30ff 	mov.w	r0, #4294967295
 8011f7a:	e7ac      	b.n	8011ed6 <nema_mat3x3_quad_to_rect+0x21e>
 8011f7c:	3727c5ac 	.word	0x3727c5ac
 8011f80:	b727c5ac 	.word	0xb727c5ac
 8011f84:	00000000 	.word	0x00000000

08011f88 <nema_readHwConfig>:
 8011f88:	b510      	push	{r4, lr}
 8011f8a:	4c05      	ldr	r4, [pc, #20]	@ (8011fa0 <nema_readHwConfig+0x18>)
 8011f8c:	6820      	ldr	r0, [r4, #0]
 8011f8e:	b100      	cbz	r0, 8011f92 <nema_readHwConfig+0xa>
 8011f90:	bd10      	pop	{r4, pc}
 8011f92:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8011f96:	f7f0 feb3 	bl	8002d00 <nema_reg_read>
 8011f9a:	6020      	str	r0, [r4, #0]
 8011f9c:	bd10      	pop	{r4, pc}
 8011f9e:	bf00      	nop
 8011fa0:	20082f64 	.word	0x20082f64

08011fa4 <nema_readHwConfigH>:
 8011fa4:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8011fa8:	f7f0 beaa 	b.w	8002d00 <nema_reg_read>

08011fac <nema_enable_tiling>:
 8011fac:	2800      	cmp	r0, #0
 8011fae:	bf14      	ite	ne
 8011fb0:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8011fb4:	2000      	moveq	r0, #0
 8011fb6:	b410      	push	{r4}
 8011fb8:	4a05      	ldr	r2, [pc, #20]	@ (8011fd0 <nema_enable_tiling+0x24>)
 8011fba:	6951      	ldr	r1, [r2, #20]
 8011fbc:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8011fc0:	4323      	orrs	r3, r4
 8011fc2:	430b      	orrs	r3, r1
 8011fc4:	4303      	orrs	r3, r0
 8011fc6:	6050      	str	r0, [r2, #4]
 8011fc8:	6113      	str	r3, [r2, #16]
 8011fca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011fce:	4770      	bx	lr
 8011fd0:	20000064 	.word	0x20000064

08011fd4 <nema_enable_tiling_2x2>:
 8011fd4:	2800      	cmp	r0, #0
 8011fd6:	bf14      	ite	ne
 8011fd8:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 8011fdc:	2000      	moveq	r0, #0
 8011fde:	b410      	push	{r4}
 8011fe0:	4a05      	ldr	r2, [pc, #20]	@ (8011ff8 <nema_enable_tiling_2x2+0x24>)
 8011fe2:	6951      	ldr	r1, [r2, #20]
 8011fe4:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8011fe8:	4323      	orrs	r3, r4
 8011fea:	430b      	orrs	r3, r1
 8011fec:	4303      	orrs	r3, r0
 8011fee:	6050      	str	r0, [r2, #4]
 8011ff0:	6113      	str	r3, [r2, #16]
 8011ff2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011ff6:	4770      	bx	lr
 8011ff8:	20000064 	.word	0x20000064

08011ffc <nema_enable_aa>:
 8011ffc:	2800      	cmp	r0, #0
 8011ffe:	b410      	push	{r4}
 8012000:	bf19      	ittee	ne
 8012002:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 8012006:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 801200a:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 801200e:	2000      	moveq	r0, #0
 8012010:	2900      	cmp	r1, #0
 8012012:	bf08      	it	eq
 8012014:	4604      	moveq	r4, r0
 8012016:	b10a      	cbz	r2, 801201c <nema_enable_aa+0x20>
 8012018:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 801201c:	b10b      	cbz	r3, 8012022 <nema_enable_aa+0x26>
 801201e:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 8012022:	4a06      	ldr	r2, [pc, #24]	@ (801203c <nema_enable_aa+0x40>)
 8012024:	6853      	ldr	r3, [r2, #4]
 8012026:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 801202a:	4303      	orrs	r3, r0
 801202c:	430b      	orrs	r3, r1
 801202e:	4323      	orrs	r3, r4
 8012030:	6950      	ldr	r0, [r2, #20]
 8012032:	e9c2 3404 	strd	r3, r4, [r2, #16]
 8012036:	f85d 4b04 	ldr.w	r4, [sp], #4
 801203a:	4770      	bx	lr
 801203c:	20000064 	.word	0x20000064

08012040 <nema_enable_aa_flags>:
 8012040:	b410      	push	{r4}
 8012042:	4a07      	ldr	r2, [pc, #28]	@ (8012060 <nema_enable_aa_flags+0x20>)
 8012044:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 8012048:	6853      	ldr	r3, [r2, #4]
 801204a:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 801204e:	4323      	orrs	r3, r4
 8012050:	4303      	orrs	r3, r0
 8012052:	430b      	orrs	r3, r1
 8012054:	6950      	ldr	r0, [r2, #20]
 8012056:	e9c2 3104 	strd	r3, r1, [r2, #16]
 801205a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801205e:	4770      	bx	lr
 8012060:	20000064 	.word	0x20000064

08012064 <nema_matmul_bypass>:
 8012064:	b920      	cbnz	r0, 8012070 <nema_matmul_bypass+0xc>
 8012066:	4601      	mov	r1, r0
 8012068:	f44f 708c 	mov.w	r0, #280	@ 0x118
 801206c:	f00b be96 	b.w	801dd9c <nema_cl_add_cmd>
 8012070:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 8012074:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012078:	f00b be90 	b.w	801dd9c <nema_cl_add_cmd>

0801207c <nema_set_matrix>:
 801207c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012080:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 80121e8 <nema_set_matrix+0x16c>
 8012084:	edd0 7a06 	vldr	s15, [r0, #24]
 8012088:	eef4 7ac7 	vcmpe.f32	s15, s14
 801208c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012090:	4604      	mov	r4, r0
 8012092:	d506      	bpl.n	80120a2 <nema_set_matrix+0x26>
 8012094:	eddf 6a55 	vldr	s13, [pc, #340]	@ 80121ec <nema_set_matrix+0x170>
 8012098:	eef4 7ae6 	vcmpe.f32	s15, s13
 801209c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120a0:	dc47      	bgt.n	8012132 <nema_set_matrix+0xb6>
 80120a2:	2009      	movs	r0, #9
 80120a4:	f00b fe1e 	bl	801dce4 <nema_cl_get_space>
 80120a8:	2800      	cmp	r0, #0
 80120aa:	d040      	beq.n	801212e <nema_set_matrix+0xb2>
 80120ac:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 80120b0:	6003      	str	r3, [r0, #0]
 80120b2:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80120b6:	6962      	ldr	r2, [r4, #20]
 80120b8:	6083      	str	r3, [r0, #8]
 80120ba:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 80120be:	6042      	str	r2, [r0, #4]
 80120c0:	68a2      	ldr	r2, [r4, #8]
 80120c2:	6103      	str	r3, [r0, #16]
 80120c4:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 80120c8:	60c2      	str	r2, [r0, #12]
 80120ca:	69a2      	ldr	r2, [r4, #24]
 80120cc:	6183      	str	r3, [r0, #24]
 80120ce:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 80120d2:	6142      	str	r2, [r0, #20]
 80120d4:	69e2      	ldr	r2, [r4, #28]
 80120d6:	6203      	str	r3, [r0, #32]
 80120d8:	61c2      	str	r2, [r0, #28]
 80120da:	6a23      	ldr	r3, [r4, #32]
 80120dc:	2544      	movs	r5, #68	@ 0x44
 80120de:	6243      	str	r3, [r0, #36]	@ 0x24
 80120e0:	2640      	movs	r6, #64	@ 0x40
 80120e2:	233c      	movs	r3, #60	@ 0x3c
 80120e4:	2738      	movs	r7, #56	@ 0x38
 80120e6:	2234      	movs	r2, #52	@ 0x34
 80120e8:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 80120ec:	212c      	movs	r1, #44	@ 0x2c
 80120ee:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80120f2:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 80120f6:	f840 800e 	str.w	r8, [r0, lr]
 80120fa:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 80120fe:	f8d4 8000 	ldr.w	r8, [r4]
 8012102:	4401      	add	r1, r0
 8012104:	f8c1 8000 	str.w	r8, [r1]
 8012108:	f840 e00c 	str.w	lr, [r0, ip]
 801210c:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 8012110:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8012114:	4402      	add	r2, r0
 8012116:	f8c2 c000 	str.w	ip, [r2]
 801211a:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 801211e:	51c1      	str	r1, [r0, r7]
 8012120:	68e1      	ldr	r1, [r4, #12]
 8012122:	4403      	add	r3, r0
 8012124:	6019      	str	r1, [r3, #0]
 8012126:	5182      	str	r2, [r0, r6]
 8012128:	6923      	ldr	r3, [r4, #16]
 801212a:	4428      	add	r0, r5
 801212c:	6003      	str	r3, [r0, #0]
 801212e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012132:	ed90 6a07 	vldr	s12, [r0, #28]
 8012136:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801213a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801213e:	d5b0      	bpl.n	80120a2 <nema_set_matrix+0x26>
 8012140:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8012144:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012148:	ddab      	ble.n	80120a2 <nema_set_matrix+0x26>
 801214a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801214e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8012152:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801215a:	d43f      	bmi.n	80121dc <nema_set_matrix+0x160>
 801215c:	edd4 7a08 	vldr	s15, [r4, #32]
 8012160:	ed94 5a00 	vldr	s10, [r4]
 8012164:	edd4 5a01 	vldr	s11, [r4, #4]
 8012168:	ed94 6a02 	vldr	s12, [r4, #8]
 801216c:	edd4 6a03 	vldr	s13, [r4, #12]
 8012170:	ed94 7a04 	vldr	s14, [r4, #16]
 8012174:	ed94 4a05 	vldr	s8, [r4, #20]
 8012178:	eec5 4a27 	vdiv.f32	s9, s10, s15
 801217c:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 8012180:	eec6 5a27 	vdiv.f32	s11, s12, s15
 8012184:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 8012188:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801218c:	ee84 7a27 	vdiv.f32	s14, s8, s15
 8012190:	edc4 4a00 	vstr	s9, [r4]
 8012194:	ed84 5a01 	vstr	s10, [r4, #4]
 8012198:	edc4 5a02 	vstr	s11, [r4, #8]
 801219c:	ed84 6a03 	vstr	s12, [r4, #12]
 80121a0:	edc4 6a04 	vstr	s13, [r4, #16]
 80121a4:	ed84 7a05 	vstr	s14, [r4, #20]
 80121a8:	2006      	movs	r0, #6
 80121aa:	f00b fd9b 	bl	801dce4 <nema_cl_get_space>
 80121ae:	2800      	cmp	r0, #0
 80121b0:	d0bd      	beq.n	801212e <nema_set_matrix+0xb2>
 80121b2:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 80121b6:	6003      	str	r3, [r0, #0]
 80121b8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80121bc:	6962      	ldr	r2, [r4, #20]
 80121be:	6083      	str	r3, [r0, #8]
 80121c0:	6042      	str	r2, [r0, #4]
 80121c2:	68a3      	ldr	r3, [r4, #8]
 80121c4:	252c      	movs	r5, #44	@ 0x2c
 80121c6:	60c3      	str	r3, [r0, #12]
 80121c8:	2628      	movs	r6, #40	@ 0x28
 80121ca:	2324      	movs	r3, #36	@ 0x24
 80121cc:	2720      	movs	r7, #32
 80121ce:	221c      	movs	r2, #28
 80121d0:	f04f 0c18 	mov.w	ip, #24
 80121d4:	2114      	movs	r1, #20
 80121d6:	f04f 0e10 	mov.w	lr, #16
 80121da:	e78a      	b.n	80120f2 <nema_set_matrix+0x76>
 80121dc:	eef4 7ae6 	vcmpe.f32	s15, s13
 80121e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121e4:	dce0      	bgt.n	80121a8 <nema_set_matrix+0x12c>
 80121e6:	e7b9      	b.n	801215c <nema_set_matrix+0xe0>
 80121e8:	33d6bf95 	.word	0x33d6bf95
 80121ec:	b3d6bf95 	.word	0xb3d6bf95

080121f0 <nema_set_matrix_translate>:
 80121f0:	b508      	push	{r3, lr}
 80121f2:	2002      	movs	r0, #2
 80121f4:	ed2d 8b02 	vpush	{d8}
 80121f8:	eeb0 8a40 	vmov.f32	s16, s0
 80121fc:	eef0 8a60 	vmov.f32	s17, s1
 8012200:	f00b fd70 	bl	801dce4 <nema_cl_get_space>
 8012204:	b1c8      	cbz	r0, 801223a <nema_set_matrix_translate+0x4a>
 8012206:	eddf 7a13 	vldr	s15, [pc, #76]	@ 8012254 <nema_set_matrix_translate+0x64>
 801220a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801220e:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8012212:	eef1 6a68 	vneg.f32	s13, s17
 8012216:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801221a:	eeb1 7a48 	vneg.f32	s14, s16
 801221e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012222:	6002      	str	r2, [r0, #0]
 8012224:	edc0 6a01 	vstr	s13, [r0, #4]
 8012228:	6083      	str	r3, [r0, #8]
 801222a:	ed80 7a03 	vstr	s14, [r0, #12]
 801222e:	dc07      	bgt.n	8012240 <nema_set_matrix_translate+0x50>
 8012230:	eef4 8ae7 	vcmpe.f32	s17, s15
 8012234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012238:	dc02      	bgt.n	8012240 <nema_set_matrix_translate+0x50>
 801223a:	ecbd 8b02 	vpop	{d8}
 801223e:	bd08      	pop	{r3, pc}
 8012240:	ecbd 8b02 	vpop	{d8}
 8012244:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8012248:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801224c:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012250:	f00b bda4 	b.w	801dd9c <nema_cl_add_cmd>
 8012254:	45000000 	.word	0x45000000

08012258 <nema_load_frag_shader>:
 8012258:	b570      	push	{r4, r5, r6, lr}
 801225a:	460e      	mov	r6, r1
 801225c:	4604      	mov	r4, r0
 801225e:	4611      	mov	r1, r2
 8012260:	20c4      	movs	r0, #196	@ 0xc4
 8012262:	f00b fd9b 	bl	801dd9c <nema_cl_add_cmd>
 8012266:	b186      	cbz	r6, 801228a <nema_load_frag_shader+0x32>
 8012268:	2500      	movs	r5, #0
 801226a:	3408      	adds	r4, #8
 801226c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8012270:	20c8      	movs	r0, #200	@ 0xc8
 8012272:	f00b fd93 	bl	801dd9c <nema_cl_add_cmd>
 8012276:	3501      	adds	r5, #1
 8012278:	f854 1c04 	ldr.w	r1, [r4, #-4]
 801227c:	20cc      	movs	r0, #204	@ 0xcc
 801227e:	f00b fd8d 	bl	801dd9c <nema_cl_add_cmd>
 8012282:	42ae      	cmp	r6, r5
 8012284:	f104 0408 	add.w	r4, r4, #8
 8012288:	d1f0      	bne.n	801226c <nema_load_frag_shader+0x14>
 801228a:	bd70      	pop	{r4, r5, r6, pc}

0801228c <nema_set_frag_ptr>:
 801228c:	4601      	mov	r1, r0
 801228e:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8012292:	f00b bd83 	b.w	801dd9c <nema_cl_add_cmd>
 8012296:	bf00      	nop

08012298 <nema_set_rop_blend_mode>:
 8012298:	4601      	mov	r1, r0
 801229a:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 801229e:	f00b bd7d 	b.w	801dd9c <nema_cl_add_cmd>
 80122a2:	bf00      	nop

080122a4 <nema_set_rop_const_color>:
 80122a4:	4601      	mov	r1, r0
 80122a6:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 80122aa:	f00b bd77 	b.w	801dd9c <nema_cl_add_cmd>
 80122ae:	bf00      	nop

080122b0 <nema_set_depth_ctrl>:
 80122b0:	4601      	mov	r1, r0
 80122b2:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 80122b6:	f00b bd71 	b.w	801dd9c <nema_cl_add_cmd>
 80122ba:	bf00      	nop

080122bc <nema_set_gradient_fx>:
 80122bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122c0:	4607      	mov	r7, r0
 80122c2:	200c      	movs	r0, #12
 80122c4:	460e      	mov	r6, r1
 80122c6:	4615      	mov	r5, r2
 80122c8:	461c      	mov	r4, r3
 80122ca:	f00b fd0b 	bl	801dce4 <nema_cl_get_space>
 80122ce:	2800      	cmp	r0, #0
 80122d0:	d03d      	beq.n	801234e <nema_set_gradient_fx+0x92>
 80122d2:	f44f 71d4 	mov.w	r1, #424	@ 0x1a8
 80122d6:	6301      	str	r1, [r0, #48]	@ 0x30
 80122d8:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
 80122dc:	6381      	str	r1, [r0, #56]	@ 0x38
 80122de:	f44f 71d8 	mov.w	r1, #432	@ 0x1b0
 80122e2:	f44f 7be0 	mov.w	fp, #448	@ 0x1c0
 80122e6:	f44f 7ae2 	mov.w	sl, #452	@ 0x1c4
 80122ea:	f44f 79e4 	mov.w	r9, #456	@ 0x1c8
 80122ee:	f44f 78e6 	mov.w	r8, #460	@ 0x1cc
 80122f2:	f44f 7ed0 	mov.w	lr, #416	@ 0x1a0
 80122f6:	f44f 7cd2 	mov.w	ip, #420	@ 0x1a4
 80122fa:	f44f 72dc 	mov.w	r2, #440	@ 0x1b8
 80122fe:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 8012302:	6401      	str	r1, [r0, #64]	@ 0x40
 8012304:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 8012308:	61c4      	str	r4, [r0, #28]
 801230a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801230c:	6047      	str	r7, [r0, #4]
 801230e:	6244      	str	r4, [r0, #36]	@ 0x24
 8012310:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8012312:	60c6      	str	r6, [r0, #12]
 8012314:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8012316:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8012318:	6145      	str	r5, [r0, #20]
 801231a:	6344      	str	r4, [r0, #52]	@ 0x34
 801231c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801231e:	f8c0 b000 	str.w	fp, [r0]
 8012322:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8012324:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8012326:	f8c0 a008 	str.w	sl, [r0, #8]
 801232a:	6444      	str	r4, [r0, #68]	@ 0x44
 801232c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801232e:	f8c0 9010 	str.w	r9, [r0, #16]
 8012332:	64c4      	str	r4, [r0, #76]	@ 0x4c
 8012334:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8012336:	f8c0 8018 	str.w	r8, [r0, #24]
 801233a:	6544      	str	r4, [r0, #84]	@ 0x54
 801233c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801233e:	f8c0 e020 	str.w	lr, [r0, #32]
 8012342:	65c4      	str	r4, [r0, #92]	@ 0x5c
 8012344:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012348:	6481      	str	r1, [r0, #72]	@ 0x48
 801234a:	6502      	str	r2, [r0, #80]	@ 0x50
 801234c:	6583      	str	r3, [r0, #88]	@ 0x58
 801234e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012352:	bf00      	nop

08012354 <nema_set_raster_color>:
 8012354:	4601      	mov	r1, r0
 8012356:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 801235a:	f00b bd1f 	b.w	801dd9c <nema_cl_add_cmd>
 801235e:	bf00      	nop

08012360 <nema_raster_triangle_fx>:
 8012360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012364:	4607      	mov	r7, r0
 8012366:	2007      	movs	r0, #7
 8012368:	460e      	mov	r6, r1
 801236a:	4615      	mov	r5, r2
 801236c:	461c      	mov	r4, r3
 801236e:	f00b fcb9 	bl	801dce4 <nema_cl_get_space>
 8012372:	b350      	cbz	r0, 80123ca <nema_raster_triangle_fx+0x6a>
 8012374:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012378:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801237c:	f44f 7890 	mov.w	r8, #288	@ 0x120
 8012380:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 8012384:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 8012388:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 801238c:	6103      	str	r3, [r0, #16]
 801238e:	4b10      	ldr	r3, [pc, #64]	@ (80123d0 <nema_raster_triangle_fx+0x70>)
 8012390:	6047      	str	r7, [r0, #4]
 8012392:	60c6      	str	r6, [r0, #12]
 8012394:	f8c0 8000 	str.w	r8, [r0]
 8012398:	6082      	str	r2, [r0, #8]
 801239a:	691a      	ldr	r2, [r3, #16]
 801239c:	4b0d      	ldr	r3, [pc, #52]	@ (80123d4 <nema_raster_triangle_fx+0x74>)
 801239e:	61c4      	str	r4, [r0, #28]
 80123a0:	9c06      	ldr	r4, [sp, #24]
 80123a2:	6303      	str	r3, [r0, #48]	@ 0x30
 80123a4:	01d3      	lsls	r3, r2, #7
 80123a6:	6244      	str	r4, [r0, #36]	@ 0x24
 80123a8:	bf48      	it	mi
 80123aa:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 80123ae:	9c07      	ldr	r4, [sp, #28]
 80123b0:	bf58      	it	pl
 80123b2:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 80123b6:	f042 0204 	orr.w	r2, r2, #4
 80123ba:	6145      	str	r5, [r0, #20]
 80123bc:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80123be:	f8c0 e018 	str.w	lr, [r0, #24]
 80123c2:	f8c0 c020 	str.w	ip, [r0, #32]
 80123c6:	6281      	str	r1, [r0, #40]	@ 0x28
 80123c8:	6342      	str	r2, [r0, #52]	@ 0x34
 80123ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123ce:	bf00      	nop
 80123d0:	20000064 	.word	0x20000064
 80123d4:	ff000100 	.word	0xff000100

080123d8 <nema_raster_rect>:
 80123d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123da:	1e17      	subs	r7, r2, #0
 80123dc:	dd20      	ble.n	8012420 <nema_raster_rect+0x48>
 80123de:	2b00      	cmp	r3, #0
 80123e0:	dd1e      	ble.n	8012420 <nema_raster_rect+0x48>
 80123e2:	4604      	mov	r4, r0
 80123e4:	2003      	movs	r0, #3
 80123e6:	461d      	mov	r5, r3
 80123e8:	460e      	mov	r6, r1
 80123ea:	f00b fc7b 	bl	801dce4 <nema_cl_get_space>
 80123ee:	b1b8      	cbz	r0, 8012420 <nema_raster_rect+0x48>
 80123f0:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 80123f4:	f44f 7184 	mov.w	r1, #264	@ 0x108
 80123f8:	193a      	adds	r2, r7, r4
 80123fa:	b292      	uxth	r2, r2
 80123fc:	19ab      	adds	r3, r5, r6
 80123fe:	b2a4      	uxth	r4, r4
 8012400:	4d08      	ldr	r5, [pc, #32]	@ (8012424 <nema_raster_rect+0x4c>)
 8012402:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8012406:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 801240a:	4a07      	ldr	r2, [pc, #28]	@ (8012428 <nema_raster_rect+0x50>)
 801240c:	6044      	str	r4, [r0, #4]
 801240e:	60c3      	str	r3, [r0, #12]
 8012410:	f8c0 c000 	str.w	ip, [r0]
 8012414:	6081      	str	r1, [r0, #8]
 8012416:	6105      	str	r5, [r0, #16]
 8012418:	6913      	ldr	r3, [r2, #16]
 801241a:	f043 0302 	orr.w	r3, r3, #2
 801241e:	6143      	str	r3, [r0, #20]
 8012420:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012422:	bf00      	nop
 8012424:	ff000100 	.word	0xff000100
 8012428:	20000064 	.word	0x20000064

0801242c <nema_raster_quad_fx>:
 801242c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012430:	4607      	mov	r7, r0
 8012432:	2009      	movs	r0, #9
 8012434:	460e      	mov	r6, r1
 8012436:	4615      	mov	r5, r2
 8012438:	461c      	mov	r4, r3
 801243a:	f00b fc53 	bl	801dce4 <nema_cl_get_space>
 801243e:	2800      	cmp	r0, #0
 8012440:	d02f      	beq.n	80124a2 <nema_raster_quad_fx+0x76>
 8012442:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012446:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801244a:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 801244e:	f44f 799a 	mov.w	r9, #308	@ 0x134
 8012452:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8012456:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 801245a:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 801245e:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 8012462:	6103      	str	r3, [r0, #16]
 8012464:	4b10      	ldr	r3, [pc, #64]	@ (80124a8 <nema_raster_quad_fx+0x7c>)
 8012466:	6047      	str	r7, [r0, #4]
 8012468:	60c6      	str	r6, [r0, #12]
 801246a:	f8c0 a000 	str.w	sl, [r0]
 801246e:	6082      	str	r2, [r0, #8]
 8012470:	691a      	ldr	r2, [r3, #16]
 8012472:	9b08      	ldr	r3, [sp, #32]
 8012474:	f042 0205 	orr.w	r2, r2, #5
 8012478:	6243      	str	r3, [r0, #36]	@ 0x24
 801247a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801247c:	6145      	str	r5, [r0, #20]
 801247e:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8012480:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012482:	61c4      	str	r4, [r0, #28]
 8012484:	6343      	str	r3, [r0, #52]	@ 0x34
 8012486:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012488:	6442      	str	r2, [r0, #68]	@ 0x44
 801248a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801248c:	4b07      	ldr	r3, [pc, #28]	@ (80124ac <nema_raster_quad_fx+0x80>)
 801248e:	f8c0 9018 	str.w	r9, [r0, #24]
 8012492:	f8c0 8020 	str.w	r8, [r0, #32]
 8012496:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 801249a:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 801249e:	6381      	str	r1, [r0, #56]	@ 0x38
 80124a0:	6403      	str	r3, [r0, #64]	@ 0x40
 80124a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80124a6:	bf00      	nop
 80124a8:	20000064 	.word	0x20000064
 80124ac:	ff000100 	.word	0xff000100

080124b0 <nema_set_interrupt_ctrl>:
 80124b0:	4601      	mov	r1, r0
 80124b2:	20f8      	movs	r0, #248	@ 0xf8
 80124b4:	f00b bc72 	b.w	801dd9c <nema_cl_add_cmd>

080124b8 <flush_lines_>:
 80124b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124bc:	ed2d 8b06 	vpush	{d8-d10}
 80124c0:	4fbc      	ldr	r7, [pc, #752]	@ (80127b4 <flush_lines_+0x2fc>)
 80124c2:	b083      	sub	sp, #12
 80124c4:	683b      	ldr	r3, [r7, #0]
 80124c6:	4680      	mov	r8, r0
 80124c8:	7f5e      	ldrb	r6, [r3, #29]
 80124ca:	9101      	str	r1, [sp, #4]
 80124cc:	f016 0610 	ands.w	r6, r6, #16
 80124d0:	f040 8167 	bne.w	80127a2 <flush_lines_+0x2ea>
 80124d4:	4cb8      	ldr	r4, [pc, #736]	@ (80127b8 <flush_lines_+0x300>)
 80124d6:	f1b8 0f01 	cmp.w	r8, #1
 80124da:	edd4 7a08 	vldr	s15, [r4, #32]
 80124de:	4db7      	ldr	r5, [pc, #732]	@ (80127bc <flush_lines_+0x304>)
 80124e0:	f000 80f1 	beq.w	80126c6 <flush_lines_+0x20e>
 80124e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80124e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124ec:	dd61      	ble.n	80125b2 <flush_lines_+0xfa>
 80124ee:	683b      	ldr	r3, [r7, #0]
 80124f0:	7f5b      	ldrb	r3, [r3, #29]
 80124f2:	f013 0310 	ands.w	r3, r3, #16
 80124f6:	d109      	bne.n	801250c <flush_lines_+0x54>
 80124f8:	f1b8 0f01 	cmp.w	r8, #1
 80124fc:	f000 81d1 	beq.w	80128a2 <flush_lines_+0x3ea>
 8012500:	2201      	movs	r2, #1
 8012502:	4611      	mov	r1, r2
 8012504:	4610      	mov	r0, r2
 8012506:	f7ff fd79 	bl	8011ffc <nema_enable_aa>
 801250a:	4606      	mov	r6, r0
 801250c:	2009      	movs	r0, #9
 801250e:	f8d4 b000 	ldr.w	fp, [r4]
 8012512:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8012516:	ed94 aa01 	vldr	s20, [r4, #4]
 801251a:	edd4 9a05 	vldr	s19, [r4, #20]
 801251e:	ed94 9a02 	vldr	s18, [r4, #8]
 8012522:	edd4 8a06 	vldr	s17, [r4, #24]
 8012526:	ed94 8a03 	vldr	s16, [r4, #12]
 801252a:	f8d4 901c 	ldr.w	r9, [r4, #28]
 801252e:	f00b fbd9 	bl	801dce4 <nema_cl_get_space>
 8012532:	b3b8      	cbz	r0, 80125a4 <flush_lines_+0xec>
 8012534:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012538:	f8c0 b004 	str.w	fp, [r0, #4]
 801253c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012540:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012544:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012548:	6003      	str	r3, [r0, #0]
 801254a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801254e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012552:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012556:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801255a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801255e:	ed80 aa05 	vstr	s20, [r0, #20]
 8012562:	edc0 9a07 	vstr	s19, [r0, #28]
 8012566:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801256a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801256e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012572:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012576:	f8df 9248 	ldr.w	r9, [pc, #584]	@ 80127c0 <flush_lines_+0x308>
 801257a:	f8c0 a010 	str.w	sl, [r0, #16]
 801257e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012582:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012586:	f8df a23c 	ldr.w	sl, [pc, #572]	@ 80127c4 <flush_lines_+0x30c>
 801258a:	f049 0905 	orr.w	r9, r9, #5
 801258e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012592:	f8c0 e018 	str.w	lr, [r0, #24]
 8012596:	f8c0 c020 	str.w	ip, [r0, #32]
 801259a:	6281      	str	r1, [r0, #40]	@ 0x28
 801259c:	6302      	str	r2, [r0, #48]	@ 0x30
 801259e:	6383      	str	r3, [r0, #56]	@ 0x38
 80125a0:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80125a4:	2200      	movs	r2, #0
 80125a6:	683b      	ldr	r3, [r7, #0]
 80125a8:	6222      	str	r2, [r4, #32]
 80125aa:	7f5b      	ldrb	r3, [r3, #29]
 80125ac:	06d8      	lsls	r0, r3, #27
 80125ae:	f140 8086 	bpl.w	80126be <flush_lines_+0x206>
 80125b2:	edd5 7a08 	vldr	s15, [r5, #32]
 80125b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80125ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125be:	dd1b      	ble.n	80125f8 <flush_lines_+0x140>
 80125c0:	9b01      	ldr	r3, [sp, #4]
 80125c2:	0619      	lsls	r1, r3, #24
 80125c4:	d418      	bmi.n	80125f8 <flush_lines_+0x140>
 80125c6:	683b      	ldr	r3, [r7, #0]
 80125c8:	7f59      	ldrb	r1, [r3, #29]
 80125ca:	f011 0110 	ands.w	r1, r1, #16
 80125ce:	f040 8103 	bne.w	80127d8 <flush_lines_+0x320>
 80125d2:	f1b8 0f01 	cmp.w	r8, #1
 80125d6:	f000 80f9 	beq.w	80127cc <flush_lines_+0x314>
 80125da:	f8df 81ec 	ldr.w	r8, [pc, #492]	@ 80127c8 <flush_lines_+0x310>
 80125de:	f8d8 3000 	ldr.w	r3, [r8]
 80125e2:	2b01      	cmp	r3, #1
 80125e4:	bf13      	iteet	ne
 80125e6:	2301      	movne	r3, #1
 80125e8:	461a      	moveq	r2, r3
 80125ea:	4619      	moveq	r1, r3
 80125ec:	461a      	movne	r2, r3
 80125ee:	4618      	mov	r0, r3
 80125f0:	f7ff fd04 	bl	8011ffc <nema_enable_aa>
 80125f4:	4606      	mov	r6, r0
 80125f6:	e0f1      	b.n	80127dc <flush_lines_+0x324>
 80125f8:	f8df 81cc 	ldr.w	r8, [pc, #460]	@ 80127c8 <flush_lines_+0x310>
 80125fc:	f8d8 3000 	ldr.w	r3, [r8]
 8012600:	2b02      	cmp	r3, #2
 8012602:	d00a      	beq.n	801261a <flush_lines_+0x162>
 8012604:	4630      	mov	r0, r6
 8012606:	f7ff fd1b 	bl	8012040 <nema_enable_aa_flags>
 801260a:	2300      	movs	r3, #0
 801260c:	f8c8 3000 	str.w	r3, [r8]
 8012610:	b003      	add	sp, #12
 8012612:	ecbd 8b06 	vpop	{d8-d10}
 8012616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801261a:	683b      	ldr	r3, [r7, #0]
 801261c:	7f5b      	ldrb	r3, [r3, #29]
 801261e:	f013 0310 	ands.w	r3, r3, #16
 8012622:	f000 8133 	beq.w	801288c <flush_lines_+0x3d4>
 8012626:	2009      	movs	r0, #9
 8012628:	f8d5 a004 	ldr.w	sl, [r5, #4]
 801262c:	edd5 9a05 	vldr	s19, [r5, #20]
 8012630:	f8d4 9000 	ldr.w	r9, [r4]
 8012634:	ed94 9a04 	vldr	s18, [r4, #16]
 8012638:	edd5 8a02 	vldr	s17, [r5, #8]
 801263c:	ed95 8a06 	vldr	s16, [r5, #24]
 8012640:	68e5      	ldr	r5, [r4, #12]
 8012642:	69e4      	ldr	r4, [r4, #28]
 8012644:	f00b fb4e 	bl	801dce4 <nema_cl_get_space>
 8012648:	b388      	cbz	r0, 80126ae <flush_lines_+0x1f6>
 801264a:	f8c0 a004 	str.w	sl, [r0, #4]
 801264e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012652:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8012656:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801265a:	edc0 9a03 	vstr	s19, [r0, #12]
 801265e:	f8c0 9014 	str.w	r9, [r0, #20]
 8012662:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012666:	f44f 794d 	mov.w	r9, #820	@ 0x334
 801266a:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 801266e:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012672:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012676:	ed80 9a07 	vstr	s18, [r0, #28]
 801267a:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 801267e:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8012682:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8012684:	4c4e      	ldr	r4, [pc, #312]	@ (80127c0 <flush_lines_+0x308>)
 8012686:	f8c0 b000 	str.w	fp, [r0]
 801268a:	f8c0 a008 	str.w	sl, [r0, #8]
 801268e:	6103      	str	r3, [r0, #16]
 8012690:	6923      	ldr	r3, [r4, #16]
 8012692:	4c4c      	ldr	r4, [pc, #304]	@ (80127c4 <flush_lines_+0x30c>)
 8012694:	f043 0305 	orr.w	r3, r3, #5
 8012698:	6345      	str	r5, [r0, #52]	@ 0x34
 801269a:	6443      	str	r3, [r0, #68]	@ 0x44
 801269c:	f8c0 9018 	str.w	r9, [r0, #24]
 80126a0:	f8c0 e020 	str.w	lr, [r0, #32]
 80126a4:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 80126a8:	6301      	str	r1, [r0, #48]	@ 0x30
 80126aa:	6382      	str	r2, [r0, #56]	@ 0x38
 80126ac:	6404      	str	r4, [r0, #64]	@ 0x40
 80126ae:	683b      	ldr	r3, [r7, #0]
 80126b0:	7f5b      	ldrb	r3, [r3, #29]
 80126b2:	06db      	lsls	r3, r3, #27
 80126b4:	d4a6      	bmi.n	8012604 <flush_lines_+0x14c>
 80126b6:	4630      	mov	r0, r6
 80126b8:	f7ff fcc2 	bl	8012040 <nema_enable_aa_flags>
 80126bc:	e7a2      	b.n	8012604 <flush_lines_+0x14c>
 80126be:	4630      	mov	r0, r6
 80126c0:	f7ff fcbe 	bl	8012040 <nema_enable_aa_flags>
 80126c4:	e775      	b.n	80125b2 <flush_lines_+0xfa>
 80126c6:	ed95 7a08 	vldr	s14, [r5, #32]
 80126ca:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80126ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126d2:	f77f af07 	ble.w	80124e4 <flush_lines_+0x2c>
 80126d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80126da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126de:	f77f af6f 	ble.w	80125c0 <flush_lines_+0x108>
 80126e2:	683b      	ldr	r3, [r7, #0]
 80126e4:	7f5b      	ldrb	r3, [r3, #29]
 80126e6:	f013 0310 	ands.w	r3, r3, #16
 80126ea:	f000 80e7 	beq.w	80128bc <flush_lines_+0x404>
 80126ee:	2009      	movs	r0, #9
 80126f0:	f8d4 b004 	ldr.w	fp, [r4, #4]
 80126f4:	f8d4 a014 	ldr.w	sl, [r4, #20]
 80126f8:	ed95 aa00 	vldr	s20, [r5]
 80126fc:	edd5 9a04 	vldr	s19, [r5, #16]
 8012700:	ed94 9a02 	vldr	s18, [r4, #8]
 8012704:	edd4 8a06 	vldr	s17, [r4, #24]
 8012708:	ed95 8a03 	vldr	s16, [r5, #12]
 801270c:	f8d5 901c 	ldr.w	r9, [r5, #28]
 8012710:	f00b fae8 	bl	801dce4 <nema_cl_get_space>
 8012714:	b3b8      	cbz	r0, 8012786 <flush_lines_+0x2ce>
 8012716:	f44f 7348 	mov.w	r3, #800	@ 0x320
 801271a:	f8c0 b004 	str.w	fp, [r0, #4]
 801271e:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012722:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012726:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 801272a:	6003      	str	r3, [r0, #0]
 801272c:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8012730:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012734:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012738:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801273c:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8012740:	ed80 aa05 	vstr	s20, [r0, #20]
 8012744:	edc0 9a07 	vstr	s19, [r0, #28]
 8012748:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801274c:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012750:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012754:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012758:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 80127c0 <flush_lines_+0x308>
 801275c:	f8c0 a010 	str.w	sl, [r0, #16]
 8012760:	f8c0 b008 	str.w	fp, [r0, #8]
 8012764:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012768:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80127c4 <flush_lines_+0x30c>
 801276c:	f049 0905 	orr.w	r9, r9, #5
 8012770:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012774:	f8c0 e018 	str.w	lr, [r0, #24]
 8012778:	f8c0 c020 	str.w	ip, [r0, #32]
 801277c:	6281      	str	r1, [r0, #40]	@ 0x28
 801277e:	6302      	str	r2, [r0, #48]	@ 0x30
 8012780:	6383      	str	r3, [r0, #56]	@ 0x38
 8012782:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012786:	683b      	ldr	r3, [r7, #0]
 8012788:	7f5b      	ldrb	r3, [r3, #29]
 801278a:	06db      	lsls	r3, r3, #27
 801278c:	f140 8090 	bpl.w	80128b0 <flush_lines_+0x3f8>
 8012790:	edd4 7a08 	vldr	s15, [r4, #32]
 8012794:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801279c:	f73f aeb6 	bgt.w	801250c <flush_lines_+0x54>
 80127a0:	e707      	b.n	80125b2 <flush_lines_+0xfa>
 80127a2:	2300      	movs	r3, #0
 80127a4:	461a      	mov	r2, r3
 80127a6:	4619      	mov	r1, r3
 80127a8:	4618      	mov	r0, r3
 80127aa:	f7ff fc27 	bl	8011ffc <nema_enable_aa>
 80127ae:	4606      	mov	r6, r0
 80127b0:	e690      	b.n	80124d4 <flush_lines_+0x1c>
 80127b2:	bf00      	nop
 80127b4:	20082f68 	.word	0x20082f68
 80127b8:	20082fb8 	.word	0x20082fb8
 80127bc:	20082f80 	.word	0x20082f80
 80127c0:	20000064 	.word	0x20000064
 80127c4:	ff000100 	.word	0xff000100
 80127c8:	20082fe4 	.word	0x20082fe4
 80127cc:	460b      	mov	r3, r1
 80127ce:	4642      	mov	r2, r8
 80127d0:	4640      	mov	r0, r8
 80127d2:	f7ff fc13 	bl	8011ffc <nema_enable_aa>
 80127d6:	4606      	mov	r6, r0
 80127d8:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 80128cc <flush_lines_+0x414>
 80127dc:	2009      	movs	r0, #9
 80127de:	f8d5 b000 	ldr.w	fp, [r5]
 80127e2:	f8d5 a010 	ldr.w	sl, [r5, #16]
 80127e6:	ed95 aa01 	vldr	s20, [r5, #4]
 80127ea:	edd5 9a05 	vldr	s19, [r5, #20]
 80127ee:	ed95 9a02 	vldr	s18, [r5, #8]
 80127f2:	edd5 8a06 	vldr	s17, [r5, #24]
 80127f6:	ed95 8a03 	vldr	s16, [r5, #12]
 80127fa:	f8d5 901c 	ldr.w	r9, [r5, #28]
 80127fe:	f00b fa71 	bl	801dce4 <nema_cl_get_space>
 8012802:	b3b8      	cbz	r0, 8012874 <flush_lines_+0x3bc>
 8012804:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012808:	f8c0 b004 	str.w	fp, [r0, #4]
 801280c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012810:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012814:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012818:	6003      	str	r3, [r0, #0]
 801281a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801281e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012822:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012826:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801282a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801282e:	ed80 aa05 	vstr	s20, [r0, #20]
 8012832:	edc0 9a07 	vstr	s19, [r0, #28]
 8012836:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801283a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801283e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012842:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012846:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 80128d0 <flush_lines_+0x418>
 801284a:	f8c0 a010 	str.w	sl, [r0, #16]
 801284e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012852:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012856:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 80128d4 <flush_lines_+0x41c>
 801285a:	f049 0905 	orr.w	r9, r9, #5
 801285e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012862:	f8c0 e018 	str.w	lr, [r0, #24]
 8012866:	f8c0 c020 	str.w	ip, [r0, #32]
 801286a:	6281      	str	r1, [r0, #40]	@ 0x28
 801286c:	6302      	str	r2, [r0, #48]	@ 0x30
 801286e:	6383      	str	r3, [r0, #56]	@ 0x38
 8012870:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012874:	2200      	movs	r2, #0
 8012876:	683b      	ldr	r3, [r7, #0]
 8012878:	622a      	str	r2, [r5, #32]
 801287a:	7f5b      	ldrb	r3, [r3, #29]
 801287c:	06da      	lsls	r2, r3, #27
 801287e:	d50c      	bpl.n	801289a <flush_lines_+0x3e2>
 8012880:	f8d8 3000 	ldr.w	r3, [r8]
 8012884:	2b02      	cmp	r3, #2
 8012886:	f47f aebd 	bne.w	8012604 <flush_lines_+0x14c>
 801288a:	e6cc      	b.n	8012626 <flush_lines_+0x16e>
 801288c:	2201      	movs	r2, #1
 801288e:	4619      	mov	r1, r3
 8012890:	4610      	mov	r0, r2
 8012892:	f7ff fbb3 	bl	8011ffc <nema_enable_aa>
 8012896:	4606      	mov	r6, r0
 8012898:	e6c5      	b.n	8012626 <flush_lines_+0x16e>
 801289a:	4630      	mov	r0, r6
 801289c:	f7ff fbd0 	bl	8012040 <nema_enable_aa_flags>
 80128a0:	e6ac      	b.n	80125fc <flush_lines_+0x144>
 80128a2:	4619      	mov	r1, r3
 80128a4:	4642      	mov	r2, r8
 80128a6:	4640      	mov	r0, r8
 80128a8:	f7ff fba8 	bl	8011ffc <nema_enable_aa>
 80128ac:	4606      	mov	r6, r0
 80128ae:	e62d      	b.n	801250c <flush_lines_+0x54>
 80128b0:	4630      	mov	r0, r6
 80128b2:	f7ff fbc5 	bl	8012040 <nema_enable_aa_flags>
 80128b6:	edd4 7a08 	vldr	s15, [r4, #32]
 80128ba:	e613      	b.n	80124e4 <flush_lines_+0x2c>
 80128bc:	4619      	mov	r1, r3
 80128be:	4642      	mov	r2, r8
 80128c0:	4640      	mov	r0, r8
 80128c2:	f7ff fb9b 	bl	8011ffc <nema_enable_aa>
 80128c6:	4606      	mov	r6, r0
 80128c8:	e711      	b.n	80126ee <flush_lines_+0x236>
 80128ca:	bf00      	nop
 80128cc:	20082fe4 	.word	0x20082fe4
 80128d0:	20000064 	.word	0x20000064
 80128d4:	ff000100 	.word	0xff000100

080128d8 <raster_stroked_line_>:
 80128d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128dc:	ed2d 8b10 	vpush	{d8-d15}
 80128e0:	ee31 9a40 	vsub.f32	s18, s2, s0
 80128e4:	ee71 8ae0 	vsub.f32	s17, s3, s1
 80128e8:	ee69 7a09 	vmul.f32	s15, s18, s18
 80128ec:	ee68 6aa8 	vmul.f32	s13, s17, s17
 80128f0:	ed9f 7ac0 	vldr	s14, [pc, #768]	@ 8012bf4 <raster_stroked_line_+0x31c>
 80128f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80128f8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80128fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012900:	b085      	sub	sp, #20
 8012902:	d804      	bhi.n	801290e <raster_stroked_line_+0x36>
 8012904:	b005      	add	sp, #20
 8012906:	ecbd 8b10 	vpop	{d8-d15}
 801290a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801290e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012916:	eeb0 8a40 	vmov.f32	s16, s0
 801291a:	eeb1 bae7 	vsqrt.f32	s22, s15
 801291e:	f100 8206 	bmi.w	8012d2e <raster_stroked_line_+0x456>
 8012922:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012926:	4ab4      	ldr	r2, [pc, #720]	@ (8012bf8 <raster_stroked_line_+0x320>)
 8012928:	4bb4      	ldr	r3, [pc, #720]	@ (8012bfc <raster_stroked_line_+0x324>)
 801292a:	eec7 6a8b 	vdiv.f32	s13, s15, s22
 801292e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012932:	edd2 7a00 	vldr	s15, [r2]
 8012936:	ed93 aa00 	vldr	s20, [r3]
 801293a:	ee29 9a26 	vmul.f32	s18, s18, s13
 801293e:	ee68 8aa6 	vmul.f32	s17, s17, s13
 8012942:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012946:	ee2a aa07 	vmul.f32	s20, s20, s14
 801294a:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801294e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8012952:	4aab      	ldr	r2, [pc, #684]	@ (8012c00 <raster_stroked_line_+0x328>)
 8012954:	4bab      	ldr	r3, [pc, #684]	@ (8012c04 <raster_stroked_line_+0x32c>)
 8012956:	6812      	ldr	r2, [r2, #0]
 8012958:	ee78 ba67 	vsub.f32	s23, s16, s15
 801295c:	ee3a ca20 	vadd.f32	s24, s20, s1
 8012960:	ee70 9aca 	vsub.f32	s19, s1, s20
 8012964:	ee3a da21 	vadd.f32	s26, s20, s3
 8012968:	ee37 8a88 	vadd.f32	s16, s15, s16
 801296c:	ee71 ca67 	vsub.f32	s25, s2, s15
 8012970:	ee77 aa81 	vadd.f32	s21, s15, s2
 8012974:	ee31 aaca 	vsub.f32	s20, s3, s20
 8012978:	681b      	ldr	r3, [r3, #0]
 801297a:	2a00      	cmp	r2, #0
 801297c:	f000 8150 	beq.w	8012c20 <raster_stroked_line_+0x348>
 8012980:	7f5b      	ldrb	r3, [r3, #29]
 8012982:	f013 0310 	ands.w	r3, r3, #16
 8012986:	d13b      	bne.n	8012a00 <raster_stroked_line_+0x128>
 8012988:	2201      	movs	r2, #1
 801298a:	4619      	mov	r1, r3
 801298c:	4610      	mov	r0, r2
 801298e:	f7ff fb35 	bl	8011ffc <nema_enable_aa>
 8012992:	4607      	mov	r7, r0
 8012994:	4c9c      	ldr	r4, [pc, #624]	@ (8012c08 <raster_stroked_line_+0x330>)
 8012996:	edd4 7a08 	vldr	s15, [r4, #32]
 801299a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801299e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129a2:	dc35      	bgt.n	8012a10 <raster_stroked_line_+0x138>
 80129a4:	4d99      	ldr	r5, [pc, #612]	@ (8012c0c <raster_stroked_line_+0x334>)
 80129a6:	4e9a      	ldr	r6, [pc, #616]	@ (8012c10 <raster_stroked_line_+0x338>)
 80129a8:	edd5 7a08 	vldr	s15, [r5, #32]
 80129ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80129b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129b4:	6833      	ldr	r3, [r6, #0]
 80129b6:	f340 80f6 	ble.w	8012ba6 <raster_stroked_line_+0x2ce>
 80129ba:	2b01      	cmp	r3, #1
 80129bc:	f000 8095 	beq.w	8012aea <raster_stroked_line_+0x212>
 80129c0:	3301      	adds	r3, #1
 80129c2:	6033      	str	r3, [r6, #0]
 80129c4:	4638      	mov	r0, r7
 80129c6:	edc4 ba00 	vstr	s23, [r4]
 80129ca:	ed84 ca04 	vstr	s24, [r4, #16]
 80129ce:	edc4 ca01 	vstr	s25, [r4, #4]
 80129d2:	ed84 da05 	vstr	s26, [r4, #20]
 80129d6:	edc4 aa02 	vstr	s21, [r4, #8]
 80129da:	ed84 aa06 	vstr	s20, [r4, #24]
 80129de:	ed84 8a03 	vstr	s16, [r4, #12]
 80129e2:	edc4 9a07 	vstr	s19, [r4, #28]
 80129e6:	ed84 ba08 	vstr	s22, [r4, #32]
 80129ea:	ed84 9a09 	vstr	s18, [r4, #36]	@ 0x24
 80129ee:	edc4 8a0a 	vstr	s17, [r4, #40]	@ 0x28
 80129f2:	b005      	add	sp, #20
 80129f4:	ecbd 8b10 	vpop	{d8-d15}
 80129f8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129fc:	f7ff bb20 	b.w	8012040 <nema_enable_aa_flags>
 8012a00:	2300      	movs	r3, #0
 8012a02:	461a      	mov	r2, r3
 8012a04:	4619      	mov	r1, r3
 8012a06:	4618      	mov	r0, r3
 8012a08:	f7ff faf8 	bl	8011ffc <nema_enable_aa>
 8012a0c:	4607      	mov	r7, r0
 8012a0e:	e7c1      	b.n	8012994 <raster_stroked_line_+0xbc>
 8012a10:	2009      	movs	r0, #9
 8012a12:	ed94 ea00 	vldr	s28, [r4]
 8012a16:	edd4 da04 	vldr	s27, [r4, #16]
 8012a1a:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8012a1e:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8012a22:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8012a26:	f8d4 8018 	ldr.w	r8, [r4, #24]
 8012a2a:	68e6      	ldr	r6, [r4, #12]
 8012a2c:	69e5      	ldr	r5, [r4, #28]
 8012a2e:	f00b f959 	bl	801dce4 <nema_cl_get_space>
 8012a32:	b380      	cbz	r0, 8012a96 <raster_stroked_line_+0x1be>
 8012a34:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012a38:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012a3c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012a40:	ed80 ea01 	vstr	s28, [r0, #4]
 8012a44:	edc0 da03 	vstr	s27, [r0, #12]
 8012a48:	f44f 714d 	mov.w	r1, #820	@ 0x334
 8012a4c:	f44f 7250 	mov.w	r2, #832	@ 0x340
 8012a50:	f8c0 9024 	str.w	r9, [r0, #36]	@ 0x24
 8012a54:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8012a58:	f44f 7951 	mov.w	r9, #836	@ 0x344
 8012a5c:	f44f 7854 	mov.w	r8, #848	@ 0x350
 8012a60:	6346      	str	r6, [r0, #52]	@ 0x34
 8012a62:	f44f 7655 	mov.w	r6, #852	@ 0x354
 8012a66:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8012a68:	4d6a      	ldr	r5, [pc, #424]	@ (8012c14 <raster_stroked_line_+0x33c>)
 8012a6a:	6003      	str	r3, [r0, #0]
 8012a6c:	f8c0 c008 	str.w	ip, [r0, #8]
 8012a70:	f8c0 e010 	str.w	lr, [r0, #16]
 8012a74:	692b      	ldr	r3, [r5, #16]
 8012a76:	4d68      	ldr	r5, [pc, #416]	@ (8012c18 <raster_stroked_line_+0x340>)
 8012a78:	f043 0305 	orr.w	r3, r3, #5
 8012a7c:	f8c0 b014 	str.w	fp, [r0, #20]
 8012a80:	f8c0 a01c 	str.w	sl, [r0, #28]
 8012a84:	6443      	str	r3, [r0, #68]	@ 0x44
 8012a86:	6181      	str	r1, [r0, #24]
 8012a88:	6202      	str	r2, [r0, #32]
 8012a8a:	f8c0 9028 	str.w	r9, [r0, #40]	@ 0x28
 8012a8e:	f8c0 8030 	str.w	r8, [r0, #48]	@ 0x30
 8012a92:	6386      	str	r6, [r0, #56]	@ 0x38
 8012a94:	6405      	str	r5, [r0, #64]	@ 0x40
 8012a96:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8012a9a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012a9e:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012aa2:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012aa6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012aaa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ab2:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 8012c1c <raster_stroked_line_+0x344>
 8012ab6:	bf48      	it	mi
 8012ab8:	eef1 7a67 	vnegmi.f32	s15, s15
 8012abc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ac4:	edd4 da01 	vldr	s27, [r4, #4]
 8012ac8:	edd4 ea05 	vldr	s29, [r4, #20]
 8012acc:	ed94 ea02 	vldr	s28, [r4, #8]
 8012ad0:	ed94 fa06 	vldr	s30, [r4, #24]
 8012ad4:	f200 80ee 	bhi.w	8012cb4 <raster_stroked_line_+0x3dc>
 8012ad8:	eef0 9a4f 	vmov.f32	s19, s30
 8012adc:	eeb0 ca6e 	vmov.f32	s24, s29
 8012ae0:	eeb0 8a4e 	vmov.f32	s16, s28
 8012ae4:	eef0 ba6d 	vmov.f32	s23, s27
 8012ae8:	e75c      	b.n	80129a4 <raster_stroked_line_+0xcc>
 8012aea:	edd5 7a09 	vldr	s15, [r5, #36]	@ 0x24
 8012aee:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012af2:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012af6:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012afa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012afe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b06:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8012c1c <raster_stroked_line_+0x344>
 8012b0a:	bf48      	it	mi
 8012b0c:	eef1 7a67 	vnegmi.f32	s15, s15
 8012b10:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012b14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b18:	edd5 da01 	vldr	s27, [r5, #4]
 8012b1c:	edd5 ea05 	vldr	s29, [r5, #20]
 8012b20:	ed95 ea02 	vldr	s28, [r5, #8]
 8012b24:	ed95 fa06 	vldr	s30, [r5, #24]
 8012b28:	f240 80bb 	bls.w	8012ca2 <raster_stroked_line_+0x3ca>
 8012b2c:	2009      	movs	r0, #9
 8012b2e:	f00b f8d9 	bl	801dce4 <nema_cl_get_space>
 8012b32:	2800      	cmp	r0, #0
 8012b34:	f000 80f7 	beq.w	8012d26 <raster_stroked_line_+0x44e>
 8012b38:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012b3c:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8012b40:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8012b44:	edc0 da01 	vstr	s27, [r0, #4]
 8012b48:	edc0 ea03 	vstr	s29, [r0, #12]
 8012b4c:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8012b50:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8012b54:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012b58:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8012b5c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012b60:	edc0 ba05 	vstr	s23, [r0, #20]
 8012b64:	ed80 ca07 	vstr	s24, [r0, #28]
 8012b68:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012b6c:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012b70:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012b74:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012b78:	edd5 7a08 	vldr	s15, [r5, #32]
 8012b7c:	6103      	str	r3, [r0, #16]
 8012b7e:	4b25      	ldr	r3, [pc, #148]	@ (8012c14 <raster_stroked_line_+0x33c>)
 8012b80:	f8c0 a000 	str.w	sl, [r0]
 8012b84:	f8c0 9008 	str.w	r9, [r0, #8]
 8012b88:	691b      	ldr	r3, [r3, #16]
 8012b8a:	6302      	str	r2, [r0, #48]	@ 0x30
 8012b8c:	f043 0305 	orr.w	r3, r3, #5
 8012b90:	4a21      	ldr	r2, [pc, #132]	@ (8012c18 <raster_stroked_line_+0x340>)
 8012b92:	6443      	str	r3, [r0, #68]	@ 0x44
 8012b94:	6833      	ldr	r3, [r6, #0]
 8012b96:	f8c0 8018 	str.w	r8, [r0, #24]
 8012b9a:	f8c0 e020 	str.w	lr, [r0, #32]
 8012b9e:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012ba2:	6381      	str	r1, [r0, #56]	@ 0x38
 8012ba4:	6402      	str	r2, [r0, #64]	@ 0x40
 8012ba6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bae:	f103 0301 	add.w	r3, r3, #1
 8012bb2:	6033      	str	r3, [r6, #0]
 8012bb4:	f47f af06 	bne.w	80129c4 <raster_stroked_line_+0xec>
 8012bb8:	4638      	mov	r0, r7
 8012bba:	edc5 ba00 	vstr	s23, [r5]
 8012bbe:	ed85 ca04 	vstr	s24, [r5, #16]
 8012bc2:	edc5 ca01 	vstr	s25, [r5, #4]
 8012bc6:	ed85 da05 	vstr	s26, [r5, #20]
 8012bca:	edc5 aa02 	vstr	s21, [r5, #8]
 8012bce:	ed85 aa06 	vstr	s20, [r5, #24]
 8012bd2:	ed85 8a03 	vstr	s16, [r5, #12]
 8012bd6:	edc5 9a07 	vstr	s19, [r5, #28]
 8012bda:	ed85 ba08 	vstr	s22, [r5, #32]
 8012bde:	ed85 9a09 	vstr	s18, [r5, #36]	@ 0x24
 8012be2:	edc5 8a0a 	vstr	s17, [r5, #40]	@ 0x28
 8012be6:	b005      	add	sp, #20
 8012be8:	ecbd 8b10 	vpop	{d8-d15}
 8012bec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bf0:	f7ff ba26 	b.w	8012040 <nema_enable_aa_flags>
 8012bf4:	3727c5ac 	.word	0x3727c5ac
 8012bf8:	20000138 	.word	0x20000138
 8012bfc:	2000013c 	.word	0x2000013c
 8012c00:	20082f70 	.word	0x20082f70
 8012c04:	20082f68 	.word	0x20082f68
 8012c08:	20082fb8 	.word	0x20082fb8
 8012c0c:	20082f80 	.word	0x20082f80
 8012c10:	20082fe4 	.word	0x20082fe4
 8012c14:	20000064 	.word	0x20000064
 8012c18:	ff000100 	.word	0xff000100
 8012c1c:	3d4ccccd 	.word	0x3d4ccccd
 8012c20:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8012c22:	f7ff fa0d 	bl	8012040 <nema_enable_aa_flags>
 8012c26:	4604      	mov	r4, r0
 8012c28:	2009      	movs	r0, #9
 8012c2a:	f00b f85b 	bl	801dce4 <nema_cl_get_space>
 8012c2e:	b380      	cbz	r0, 8012c92 <raster_stroked_line_+0x3ba>
 8012c30:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012c34:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8012c38:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012c3c:	edc0 ba01 	vstr	s23, [r0, #4]
 8012c40:	ed80 ca03 	vstr	s24, [r0, #12]
 8012c44:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8012c48:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012c4c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012c50:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012c54:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012c58:	edc0 ca05 	vstr	s25, [r0, #20]
 8012c5c:	ed80 da07 	vstr	s26, [r0, #28]
 8012c60:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8012c64:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8012c68:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012c6c:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012c70:	6103      	str	r3, [r0, #16]
 8012c72:	4b37      	ldr	r3, [pc, #220]	@ (8012d50 <raster_stroked_line_+0x478>)
 8012c74:	f8c0 e000 	str.w	lr, [r0]
 8012c78:	f8c0 c008 	str.w	ip, [r0, #8]
 8012c7c:	691b      	ldr	r3, [r3, #16]
 8012c7e:	6187      	str	r7, [r0, #24]
 8012c80:	f043 0305 	orr.w	r3, r3, #5
 8012c84:	6443      	str	r3, [r0, #68]	@ 0x44
 8012c86:	4b33      	ldr	r3, [pc, #204]	@ (8012d54 <raster_stroked_line_+0x47c>)
 8012c88:	6206      	str	r6, [r0, #32]
 8012c8a:	6285      	str	r5, [r0, #40]	@ 0x28
 8012c8c:	6301      	str	r1, [r0, #48]	@ 0x30
 8012c8e:	6382      	str	r2, [r0, #56]	@ 0x38
 8012c90:	6403      	str	r3, [r0, #64]	@ 0x40
 8012c92:	4620      	mov	r0, r4
 8012c94:	b005      	add	sp, #20
 8012c96:	ecbd 8b10 	vpop	{d8-d15}
 8012c9a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c9e:	f7ff b9cf 	b.w	8012040 <nema_enable_aa_flags>
 8012ca2:	eef0 9a4f 	vmov.f32	s19, s30
 8012ca6:	eeb0 ca6e 	vmov.f32	s24, s29
 8012caa:	eeb0 8a4e 	vmov.f32	s16, s28
 8012cae:	eef0 ba6d 	vmov.f32	s23, s27
 8012cb2:	e685      	b.n	80129c0 <raster_stroked_line_+0xe8>
 8012cb4:	2009      	movs	r0, #9
 8012cb6:	f00b f815 	bl	801dce4 <nema_cl_get_space>
 8012cba:	2800      	cmp	r0, #0
 8012cbc:	f43f ae72 	beq.w	80129a4 <raster_stroked_line_+0xcc>
 8012cc0:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012cc4:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8012cc8:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8012ccc:	edc0 da01 	vstr	s27, [r0, #4]
 8012cd0:	edc0 ea03 	vstr	s29, [r0, #12]
 8012cd4:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8012cd8:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012cdc:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012ce0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012ce4:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012ce8:	6103      	str	r3, [r0, #16]
 8012cea:	4b19      	ldr	r3, [pc, #100]	@ (8012d50 <raster_stroked_line_+0x478>)
 8012cec:	f8c0 8000 	str.w	r8, [r0]
 8012cf0:	f8c0 e008 	str.w	lr, [r0, #8]
 8012cf4:	691b      	ldr	r3, [r3, #16]
 8012cf6:	edc0 ba05 	vstr	s23, [r0, #20]
 8012cfa:	f043 0305 	orr.w	r3, r3, #5
 8012cfe:	6443      	str	r3, [r0, #68]	@ 0x44
 8012d00:	4b14      	ldr	r3, [pc, #80]	@ (8012d54 <raster_stroked_line_+0x47c>)
 8012d02:	ed80 ca07 	vstr	s24, [r0, #28]
 8012d06:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012d0a:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012d0e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012d12:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012d16:	f8c0 c018 	str.w	ip, [r0, #24]
 8012d1a:	6206      	str	r6, [r0, #32]
 8012d1c:	6285      	str	r5, [r0, #40]	@ 0x28
 8012d1e:	6301      	str	r1, [r0, #48]	@ 0x30
 8012d20:	6382      	str	r2, [r0, #56]	@ 0x38
 8012d22:	6403      	str	r3, [r0, #64]	@ 0x40
 8012d24:	e63e      	b.n	80129a4 <raster_stroked_line_+0xcc>
 8012d26:	6833      	ldr	r3, [r6, #0]
 8012d28:	edd5 7a08 	vldr	s15, [r5, #32]
 8012d2c:	e73b      	b.n	8012ba6 <raster_stroked_line_+0x2ce>
 8012d2e:	eeb0 0a67 	vmov.f32	s0, s15
 8012d32:	edcd 1a03 	vstr	s3, [sp, #12]
 8012d36:	ed8d 1a02 	vstr	s2, [sp, #8]
 8012d3a:	edcd 0a01 	vstr	s1, [sp, #4]
 8012d3e:	f01e fa57 	bl	80311f0 <sqrtf>
 8012d42:	eddd 1a03 	vldr	s3, [sp, #12]
 8012d46:	ed9d 1a02 	vldr	s2, [sp, #8]
 8012d4a:	eddd 0a01 	vldr	s1, [sp, #4]
 8012d4e:	e5e8      	b.n	8012922 <raster_stroked_line_+0x4a>
 8012d50:	20000064 	.word	0x20000064
 8012d54:	ff000100 	.word	0xff000100

08012d58 <render_arc.isra.6>:
 8012d58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012d5c:	ed2d 8b10 	vpush	{d8-d15}
 8012d60:	eddf 8aa8 	vldr	s17, [pc, #672]	@ 8013004 <render_arc.isra.6+0x2ac>
 8012d64:	ee20 aa28 	vmul.f32	s20, s0, s17
 8012d68:	ee60 8aa8 	vmul.f32	s17, s1, s17
 8012d6c:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 8012d70:	ee78 8aca 	vsub.f32	s17, s17, s20
 8012d74:	ee28 0a80 	vmul.f32	s0, s17, s0
 8012d78:	4604      	mov	r4, r0
 8012d7a:	460d      	mov	r5, r1
 8012d7c:	eef0 ca41 	vmov.f32	s25, s2
 8012d80:	eeb0 da61 	vmov.f32	s26, s3
 8012d84:	eef0 da42 	vmov.f32	s27, s4
 8012d88:	eeb0 ea62 	vmov.f32	s28, s5
 8012d8c:	ed9f 8a9e 	vldr	s16, [pc, #632]	@ 8013008 <render_arc.isra.6+0x2b0>
 8012d90:	f01e fbb2 	bl	80314f8 <tanf>
 8012d94:	ee20 8a08 	vmul.f32	s16, s0, s16
 8012d98:	eeb0 0a68 	vmov.f32	s0, s17
 8012d9c:	f01e fb1a 	bl	80313d4 <cosf>
 8012da0:	eef0 9a40 	vmov.f32	s19, s0
 8012da4:	eeb0 0a68 	vmov.f32	s0, s17
 8012da8:	f01e fb60 	bl	803146c <sinf>
 8012dac:	eddf 7a97 	vldr	s15, [pc, #604]	@ 801300c <render_arc.isra.6+0x2b4>
 8012db0:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8012db4:	ee87 9a27 	vdiv.f32	s18, s14, s15
 8012db8:	ed9f 7a95 	vldr	s14, [pc, #596]	@ 8013010 <render_arc.isra.6+0x2b8>
 8012dbc:	eeb0 ca40 	vmov.f32	s24, s0
 8012dc0:	ee68 8a00 	vmul.f32	s17, s16, s0
 8012dc4:	eeb0 0a4a 	vmov.f32	s0, s20
 8012dc8:	ee29 9a07 	vmul.f32	s18, s18, s14
 8012dcc:	f01e fb02 	bl	80313d4 <cosf>
 8012dd0:	eeb0 ba40 	vmov.f32	s22, s0
 8012dd4:	eeb0 0a4a 	vmov.f32	s0, s20
 8012dd8:	f01e fb48 	bl	803146c <sinf>
 8012ddc:	eef0 aa40 	vmov.f32	s21, s0
 8012de0:	eeb0 0a49 	vmov.f32	s0, s18
 8012de4:	f01e faf6 	bl	80313d4 <cosf>
 8012de8:	ee68 ea29 	vmul.f32	s29, s16, s19
 8012dec:	eeb0 aa40 	vmov.f32	s20, s0
 8012df0:	eeb0 0a49 	vmov.f32	s0, s18
 8012df4:	f01e fb3a 	bl	803146c <sinf>
 8012df8:	07ea      	lsls	r2, r5, #31
 8012dfa:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8012dfe:	ee7c ea6e 	vsub.f32	s29, s24, s29
 8012e02:	f140 80c1 	bpl.w	8012f88 <render_arc.isra.6+0x230>
 8012e06:	edd4 ba03 	vldr	s23, [r4, #12]
 8012e0a:	ed94 9a04 	vldr	s18, [r4, #16]
 8012e0e:	ee28 7a8b 	vmul.f32	s14, s17, s22
 8012e12:	ee68 6a2a 	vmul.f32	s13, s16, s21
 8012e16:	ee68 7aaa 	vmul.f32	s15, s17, s21
 8012e1a:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8012e1e:	ee6e 8aaa 	vmul.f32	s17, s29, s21
 8012e22:	ee6e ea8b 	vmul.f32	s29, s29, s22
 8012e26:	eddf 2a7b 	vldr	s5, [pc, #492]	@ 8013014 <render_arc.isra.6+0x2bc>
 8012e2a:	ee7b 6a66 	vsub.f32	s13, s22, s13
 8012e2e:	ee77 8a68 	vsub.f32	s17, s14, s17
 8012e32:	ee77 7aae 	vadd.f32	s15, s15, s29
 8012e36:	ee38 8a2a 	vadd.f32	s16, s16, s21
 8012e3a:	ee36 7aa2 	vadd.f32	s14, s13, s5
 8012e3e:	ee38 8a22 	vadd.f32	s16, s16, s5
 8012e42:	ee78 8aa2 	vadd.f32	s17, s17, s5
 8012e46:	ee77 7aa2 	vadd.f32	s15, s15, s5
 8012e4a:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012e4e:	ee28 8a0e 	vmul.f32	s16, s16, s28
 8012e52:	ee68 8aad 	vmul.f32	s17, s17, s27
 8012e56:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012e5a:	ee2a fa07 	vmul.f32	s30, s20, s14
 8012e5e:	ee20 6a08 	vmul.f32	s12, s0, s16
 8012e62:	ee6a ea28 	vmul.f32	s29, s20, s17
 8012e66:	ee60 6a27 	vmul.f32	s13, s0, s15
 8012e6a:	ee60 8a28 	vmul.f32	s17, s0, s17
 8012e6e:	ee20 7a07 	vmul.f32	s14, s0, s14
 8012e72:	ee2a 8a08 	vmul.f32	s16, s20, s16
 8012e76:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012e7a:	ee3f fa46 	vsub.f32	s30, s30, s12
 8012e7e:	ee37 8a08 	vadd.f32	s16, s14, s16
 8012e82:	ee7e eae6 	vsub.f32	s29, s29, s13
 8012e86:	ee78 7aa7 	vadd.f32	s15, s17, s15
 8012e8a:	07ab      	lsls	r3, r5, #30
 8012e8c:	ee3f fa2c 	vadd.f32	s30, s30, s25
 8012e90:	ee38 8a0d 	vadd.f32	s16, s16, s26
 8012e94:	ee7e eaac 	vadd.f32	s29, s29, s25
 8012e98:	ee77 8a8d 	vadd.f32	s17, s15, s26
 8012e9c:	f100 809a 	bmi.w	8012fd4 <render_arc.isra.6+0x27c>
 8012ea0:	ee29 2a8b 	vmul.f32	s4, s19, s22
 8012ea4:	ee69 9aaa 	vmul.f32	s19, s19, s21
 8012ea8:	ee2c ba0b 	vmul.f32	s22, s24, s22
 8012eac:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8012eb0:	ee39 ba8b 	vadd.f32	s22, s19, s22
 8012eb4:	ee72 aa6a 	vsub.f32	s21, s4, s21
 8012eb8:	ee7a aaa2 	vadd.f32	s21, s21, s5
 8012ebc:	ee7b 2a22 	vadd.f32	s5, s22, s5
 8012ec0:	ee6a daad 	vmul.f32	s27, s21, s27
 8012ec4:	ee22 ea8e 	vmul.f32	s28, s5, s28
 8012ec8:	ee2a 1a2d 	vmul.f32	s2, s20, s27
 8012ecc:	ee60 da2d 	vmul.f32	s27, s0, s27
 8012ed0:	ee20 0a0e 	vmul.f32	s0, s0, s28
 8012ed4:	ee2a ea0e 	vmul.f32	s28, s20, s28
 8012ed8:	ee31 0a40 	vsub.f32	s0, s2, s0
 8012edc:	ee3d ea8e 	vadd.f32	s28, s27, s28
 8012ee0:	4b4d      	ldr	r3, [pc, #308]	@ (8013018 <render_arc.isra.6+0x2c0>)
 8012ee2:	ee70 ca2c 	vadd.f32	s25, s0, s25
 8012ee6:	681b      	ldr	r3, [r3, #0]
 8012ee8:	ee3e da0d 	vadd.f32	s26, s28, s26
 8012eec:	7f1a      	ldrb	r2, [r3, #28]
 8012eee:	2a00      	cmp	r2, #0
 8012ef0:	d179      	bne.n	8012fe6 <render_arc.isra.6+0x28e>
 8012ef2:	4a4a      	ldr	r2, [pc, #296]	@ (801301c <render_arc.isra.6+0x2c4>)
 8012ef4:	6814      	ldr	r4, [r2, #0]
 8012ef6:	2c01      	cmp	r4, #1
 8012ef8:	f000 8098 	beq.w	801302c <render_arc.isra.6+0x2d4>
 8012efc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8012efe:	2509      	movs	r5, #9
 8012f00:	2a00      	cmp	r2, #0
 8012f02:	d164      	bne.n	8012fce <render_arc.isra.6+0x276>
 8012f04:	4946      	ldr	r1, [pc, #280]	@ (8013020 <render_arc.isra.6+0x2c8>)
 8012f06:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8012f08:	780b      	ldrb	r3, [r1, #0]
 8012f0a:	4014      	ands	r4, r2
 8012f0c:	2b01      	cmp	r3, #1
 8012f0e:	d103      	bne.n	8012f18 <render_arc.isra.6+0x1c0>
 8012f10:	684b      	ldr	r3, [r1, #4]
 8012f12:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8012f16:	431c      	orrs	r4, r3
 8012f18:	2009      	movs	r0, #9
 8012f1a:	f00a fee3 	bl	801dce4 <nema_cl_get_space>
 8012f1e:	b378      	cbz	r0, 8012f80 <render_arc.isra.6+0x228>
 8012f20:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8012f24:	f44f 7948 	mov.w	r9, #800	@ 0x320
 8012f28:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8012f2c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012f30:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012f34:	f44f 7751 	mov.w	r7, #836	@ 0x344
 8012f38:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8012f3c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012f40:	edc0 ba01 	vstr	s23, [r0, #4]
 8012f44:	ed80 9a03 	vstr	s18, [r0, #12]
 8012f48:	ed80 fa05 	vstr	s30, [r0, #20]
 8012f4c:	ed80 8a07 	vstr	s16, [r0, #28]
 8012f50:	edc0 ea09 	vstr	s29, [r0, #36]	@ 0x24
 8012f54:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012f58:	edc0 ca0d 	vstr	s25, [r0, #52]	@ 0x34
 8012f5c:	ed80 da0f 	vstr	s26, [r0, #60]	@ 0x3c
 8012f60:	6183      	str	r3, [r0, #24]
 8012f62:	4b30      	ldr	r3, [pc, #192]	@ (8013024 <render_arc.isra.6+0x2cc>)
 8012f64:	432c      	orrs	r4, r5
 8012f66:	6444      	str	r4, [r0, #68]	@ 0x44
 8012f68:	f8c0 9000 	str.w	r9, [r0]
 8012f6c:	f8c0 8008 	str.w	r8, [r0, #8]
 8012f70:	f8c0 e010 	str.w	lr, [r0, #16]
 8012f74:	f8c0 c020 	str.w	ip, [r0, #32]
 8012f78:	6287      	str	r7, [r0, #40]	@ 0x28
 8012f7a:	6306      	str	r6, [r0, #48]	@ 0x30
 8012f7c:	6381      	str	r1, [r0, #56]	@ 0x38
 8012f7e:	6403      	str	r3, [r0, #64]	@ 0x40
 8012f80:	ecbd 8b10 	vpop	{d8-d15}
 8012f84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012f88:	ed9f 9a22 	vldr	s18, [pc, #136]	@ 8013014 <render_arc.isra.6+0x2bc>
 8012f8c:	ee2a 7a89 	vmul.f32	s14, s21, s18
 8012f90:	ee6b 7a09 	vmul.f32	s15, s22, s18
 8012f94:	ee3b 7a47 	vsub.f32	s14, s22, s14
 8012f98:	ee77 7aaa 	vadd.f32	s15, s15, s21
 8012f9c:	ee37 7a09 	vadd.f32	s14, s14, s18
 8012fa0:	ee77 7a89 	vadd.f32	s15, s15, s18
 8012fa4:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012fa8:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012fac:	ee6a ba07 	vmul.f32	s23, s20, s14
 8012fb0:	ee20 9a07 	vmul.f32	s18, s0, s14
 8012fb4:	ee20 7a27 	vmul.f32	s14, s0, s15
 8012fb8:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012fbc:	ee7b bac7 	vsub.f32	s23, s23, s14
 8012fc0:	ee39 9a27 	vadd.f32	s18, s18, s15
 8012fc4:	ee7b baac 	vadd.f32	s23, s23, s25
 8012fc8:	ee39 9a0d 	vadd.f32	s18, s18, s26
 8012fcc:	e71f      	b.n	8012e0e <render_arc.isra.6+0xb6>
 8012fce:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8012fd2:	e797      	b.n	8012f04 <render_arc.isra.6+0x1ac>
 8012fd4:	4b10      	ldr	r3, [pc, #64]	@ (8013018 <render_arc.isra.6+0x2c0>)
 8012fd6:	edd4 ca05 	vldr	s25, [r4, #20]
 8012fda:	681b      	ldr	r3, [r3, #0]
 8012fdc:	ed94 da06 	vldr	s26, [r4, #24]
 8012fe0:	7f1a      	ldrb	r2, [r3, #28]
 8012fe2:	2a00      	cmp	r2, #0
 8012fe4:	d085      	beq.n	8012ef2 <render_arc.isra.6+0x19a>
 8012fe6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8012fe8:	b90a      	cbnz	r2, 8012fee <render_arc.isra.6+0x296>
 8012fea:	2507      	movs	r5, #7
 8012fec:	e78a      	b.n	8012f04 <render_arc.isra.6+0x1ac>
 8012fee:	4a0e      	ldr	r2, [pc, #56]	@ (8013028 <render_arc.isra.6+0x2d0>)
 8012ff0:	2507      	movs	r5, #7
 8012ff2:	6812      	ldr	r2, [r2, #0]
 8012ff4:	2a00      	cmp	r2, #0
 8012ff6:	bf0c      	ite	eq
 8012ff8:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8012ffc:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013000:	e780      	b.n	8012f04 <render_arc.isra.6+0x1ac>
 8013002:	bf00      	nop
 8013004:	3c8efa35 	.word	0x3c8efa35
 8013008:	3faaaaab 	.word	0x3faaaaab
 801300c:	43340000 	.word	0x43340000
 8013010:	40490fdb 	.word	0x40490fdb
 8013014:	00000000 	.word	0x00000000
 8013018:	20082f68 	.word	0x20082f68
 801301c:	20082f70 	.word	0x20082f70
 8013020:	20000064 	.word	0x20000064
 8013024:	ff000100 	.word	0xff000100
 8013028:	20082f6c 	.word	0x20082f6c
 801302c:	4626      	mov	r6, r4
 801302e:	eef6 9a00 	vmov.f32	s19, #96	@ 0x3f000000  0.5
 8013032:	4d57      	ldr	r5, [pc, #348]	@ (8013190 <render_arc.isra.6+0x438>)
 8013034:	4f57      	ldr	r7, [pc, #348]	@ (8013194 <render_arc.isra.6+0x43c>)
 8013036:	ee7b 4a8f 	vadd.f32	s9, s23, s30
 801303a:	ee7f 7a2e 	vadd.f32	s15, s30, s29
 801303e:	ee3e 5aac 	vadd.f32	s10, s29, s25
 8013042:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013046:	ee64 4aa9 	vmul.f32	s9, s9, s19
 801304a:	ee25 5a29 	vmul.f32	s10, s10, s19
 801304e:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8013052:	ee37 6a85 	vadd.f32	s12, s15, s10
 8013056:	ee39 4a08 	vadd.f32	s8, s18, s16
 801305a:	ee78 7a28 	vadd.f32	s15, s16, s17
 801305e:	ee78 5a8d 	vadd.f32	s11, s17, s26
 8013062:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013066:	ee24 4a29 	vmul.f32	s8, s8, s19
 801306a:	ee65 5aa9 	vmul.f32	s11, s11, s19
 801306e:	ee34 3a27 	vadd.f32	s6, s8, s15
 8013072:	ee63 3aa9 	vmul.f32	s7, s7, s19
 8013076:	ee26 6a29 	vmul.f32	s12, s12, s19
 801307a:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801307e:	ee33 aa86 	vadd.f32	s20, s7, s12
 8013082:	ee3b 7aac 	vadd.f32	s14, s23, s25
 8013086:	ee23 3a29 	vmul.f32	s6, s6, s19
 801308a:	ee67 7aa9 	vmul.f32	s15, s15, s19
 801308e:	ee2a aa29 	vmul.f32	s20, s20, s19
 8013092:	ee27 7a29 	vmul.f32	s14, s14, s19
 8013096:	ee73 aa27 	vadd.f32	s21, s6, s15
 801309a:	ee79 6a0d 	vadd.f32	s13, s18, s26
 801309e:	ee37 7a4a 	vsub.f32	s14, s14, s20
 80130a2:	ee6a aaa9 	vmul.f32	s21, s21, s19
 80130a6:	ee66 6aa9 	vmul.f32	s13, s13, s19
 80130aa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80130ae:	ee76 6aea 	vsub.f32	s13, s13, s21
 80130b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130b6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80130ba:	bf48      	it	mi
 80130bc:	eeb1 7a47 	vnegmi.f32	s14, s14
 80130c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130c4:	bf48      	it	mi
 80130c6:	eef1 6a66 	vnegmi.f32	s13, s13
 80130ca:	b94e      	cbnz	r6, 80130e0 <render_arc.isra.6+0x388>
 80130cc:	eeb4 7ae9 	vcmpe.f32	s14, s19
 80130d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130d4:	d504      	bpl.n	80130e0 <render_arc.isra.6+0x388>
 80130d6:	eef4 6ae9 	vcmpe.f32	s13, s19
 80130da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130de:	d423      	bmi.n	8013128 <render_arc.isra.6+0x3d0>
 80130e0:	682a      	ldr	r2, [r5, #0]
 80130e2:	2a09      	cmp	r2, #9
 80130e4:	dc20      	bgt.n	8013128 <render_arc.isra.6+0x3d0>
 80130e6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80130ea:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 80130ee:	3201      	adds	r2, #1
 80130f0:	edc3 ca04 	vstr	s25, [r3, #16]
 80130f4:	ed83 da05 	vstr	s26, [r3, #20]
 80130f8:	3401      	adds	r4, #1
 80130fa:	eef0 8a43 	vmov.f32	s17, s6
 80130fe:	eef0 ea63 	vmov.f32	s29, s7
 8013102:	eeb0 8a44 	vmov.f32	s16, s8
 8013106:	eeb0 fa64 	vmov.f32	s30, s9
 801310a:	ed83 6a00 	vstr	s12, [r3]
 801310e:	edc3 7a01 	vstr	s15, [r3, #4]
 8013112:	ed83 5a02 	vstr	s10, [r3, #8]
 8013116:	edc3 5a03 	vstr	s11, [r3, #12]
 801311a:	602a      	str	r2, [r5, #0]
 801311c:	eeb0 da6a 	vmov.f32	s26, s21
 8013120:	eef0 ca4a 	vmov.f32	s25, s20
 8013124:	2600      	movs	r6, #0
 8013126:	e786      	b.n	8013036 <render_arc.isra.6+0x2de>
 8013128:	eef0 1a6a 	vmov.f32	s3, s21
 801312c:	eeb0 1a4a 	vmov.f32	s2, s20
 8013130:	eef0 0a49 	vmov.f32	s1, s18
 8013134:	eeb0 0a6b 	vmov.f32	s0, s23
 8013138:	f7ff fbce 	bl	80128d8 <raster_stroked_line_>
 801313c:	eef0 1a4d 	vmov.f32	s3, s26
 8013140:	eeb0 1a6c 	vmov.f32	s2, s25
 8013144:	eef0 0a6a 	vmov.f32	s1, s21
 8013148:	eeb0 0a4a 	vmov.f32	s0, s20
 801314c:	f7ff fbc4 	bl	80128d8 <raster_stroked_line_>
 8013150:	682b      	ldr	r3, [r5, #0]
 8013152:	3c01      	subs	r4, #1
 8013154:	b1ab      	cbz	r3, 8013182 <render_arc.isra.6+0x42a>
 8013156:	3b01      	subs	r3, #1
 8013158:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801315c:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8013160:	eeb0 9a4d 	vmov.f32	s18, s26
 8013164:	eef0 ba6c 	vmov.f32	s23, s25
 8013168:	ed92 fa00 	vldr	s30, [r2]
 801316c:	ed92 8a01 	vldr	s16, [r2, #4]
 8013170:	edd2 ea02 	vldr	s29, [r2, #8]
 8013174:	edd2 8a03 	vldr	s17, [r2, #12]
 8013178:	ed92 da05 	vldr	s26, [r2, #20]
 801317c:	edd2 ca04 	vldr	s25, [r2, #16]
 8013180:	602b      	str	r3, [r5, #0]
 8013182:	2c00      	cmp	r4, #0
 8013184:	f47f af57 	bne.w	8013036 <render_arc.isra.6+0x2de>
 8013188:	ecbd 8b10 	vpop	{d8-d15}
 801318c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013190:	20083104 	.word	0x20083104
 8013194:	20083014 	.word	0x20083014

08013198 <fill_arc.isra.7>:
 8013198:	b570      	push	{r4, r5, r6, lr}
 801319a:	ed2d 8b10 	vpush	{d8-d15}
 801319e:	ed90 8a07 	vldr	s16, [r0, #28]
 80131a2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80131a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131aa:	b082      	sub	sp, #8
 80131ac:	4604      	mov	r4, r0
 80131ae:	d42a      	bmi.n	8013206 <fill_arc.isra.7+0x6e>
 80131b0:	eddf 7adf 	vldr	s15, [pc, #892]	@ 8013530 <fill_arc.isra.7+0x398>
 80131b4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80131b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131bc:	d92a      	bls.n	8013214 <fill_arc.isra.7+0x7c>
 80131be:	edd4 9a08 	vldr	s19, [r4, #32]
 80131c2:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 80131c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131ca:	d47a      	bmi.n	80132c2 <fill_arc.isra.7+0x12a>
 80131cc:	eddf 7ad8 	vldr	s15, [pc, #864]	@ 8013530 <fill_arc.isra.7+0x398>
 80131d0:	eef4 9ae7 	vcmpe.f32	s19, s15
 80131d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131d8:	d91c      	bls.n	8013214 <fill_arc.isra.7+0x7c>
 80131da:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80131de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131e2:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 80131e6:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 80131ea:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80131ee:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 80131f2:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80131f6:	f100 81b5 	bmi.w	8013564 <fill_arc.isra.7+0x3cc>
 80131fa:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 80131fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013202:	d577      	bpl.n	80132f4 <fill_arc.isra.7+0x15c>
 8013204:	e074      	b.n	80132f0 <fill_arc.isra.7+0x158>
 8013206:	eddf 7acb 	vldr	s15, [pc, #812]	@ 8013534 <fill_arc.isra.7+0x39c>
 801320a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801320e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013212:	dbd4      	blt.n	80131be <fill_arc.isra.7+0x26>
 8013214:	4bc8      	ldr	r3, [pc, #800]	@ (8013538 <fill_arc.isra.7+0x3a0>)
 8013216:	edd4 9a03 	vldr	s19, [r4, #12]
 801321a:	681a      	ldr	r2, [r3, #0]
 801321c:	ed94 9a04 	vldr	s18, [r4, #16]
 8013220:	7f15      	ldrb	r5, [r2, #28]
 8013222:	edd4 8a05 	vldr	s17, [r4, #20]
 8013226:	ed94 8a06 	vldr	s16, [r4, #24]
 801322a:	2d00      	cmp	r5, #0
 801322c:	d035      	beq.n	801329a <fill_arc.isra.7+0x102>
 801322e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013230:	b13b      	cbz	r3, 8013242 <fill_arc.isra.7+0xaa>
 8013232:	4bc2      	ldr	r3, [pc, #776]	@ (801353c <fill_arc.isra.7+0x3a4>)
 8013234:	681b      	ldr	r3, [r3, #0]
 8013236:	2b00      	cmp	r3, #0
 8013238:	bf14      	ite	ne
 801323a:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 801323e:	f04f 63f0 	moveq.w	r3, #125829120	@ 0x7800000
 8013242:	49bf      	ldr	r1, [pc, #764]	@ (8013540 <fill_arc.isra.7+0x3a8>)
 8013244:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 8013246:	780a      	ldrb	r2, [r1, #0]
 8013248:	401c      	ands	r4, r3
 801324a:	2a01      	cmp	r2, #1
 801324c:	d103      	bne.n	8013256 <fill_arc.isra.7+0xbe>
 801324e:	684b      	ldr	r3, [r1, #4]
 8013250:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013254:	431c      	orrs	r4, r3
 8013256:	2005      	movs	r0, #5
 8013258:	f00a fd44 	bl	801dce4 <nema_cl_get_space>
 801325c:	b1c0      	cbz	r0, 8013290 <fill_arc.isra.7+0xf8>
 801325e:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8013262:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8013266:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801326a:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801326e:	f044 040b 	orr.w	r4, r4, #11
 8013272:	edc0 9a01 	vstr	s19, [r0, #4]
 8013276:	ed80 9a03 	vstr	s18, [r0, #12]
 801327a:	edc0 8a05 	vstr	s17, [r0, #20]
 801327e:	ed80 8a07 	vstr	s16, [r0, #28]
 8013282:	4bb0      	ldr	r3, [pc, #704]	@ (8013544 <fill_arc.isra.7+0x3ac>)
 8013284:	6244      	str	r4, [r0, #36]	@ 0x24
 8013286:	6006      	str	r6, [r0, #0]
 8013288:	6085      	str	r5, [r0, #8]
 801328a:	6101      	str	r1, [r0, #16]
 801328c:	6182      	str	r2, [r0, #24]
 801328e:	6203      	str	r3, [r0, #32]
 8013290:	2000      	movs	r0, #0
 8013292:	b002      	add	sp, #8
 8013294:	ecbd 8b10 	vpop	{d8-d15}
 8013298:	bd70      	pop	{r4, r5, r6, pc}
 801329a:	4bab      	ldr	r3, [pc, #684]	@ (8013548 <fill_arc.isra.7+0x3b0>)
 801329c:	681b      	ldr	r3, [r3, #0]
 801329e:	2b00      	cmp	r3, #0
 80132a0:	f000 8115 	beq.w	80134ce <fill_arc.isra.7+0x336>
 80132a4:	eef0 1a48 	vmov.f32	s3, s16
 80132a8:	eeb0 1a68 	vmov.f32	s2, s17
 80132ac:	eef0 0a49 	vmov.f32	s1, s18
 80132b0:	eeb0 0a69 	vmov.f32	s0, s19
 80132b4:	f7ff fb10 	bl	80128d8 <raster_stroked_line_>
 80132b8:	4628      	mov	r0, r5
 80132ba:	b002      	add	sp, #8
 80132bc:	ecbd 8b10 	vpop	{d8-d15}
 80132c0:	bd70      	pop	{r4, r5, r6, pc}
 80132c2:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 8013534 <fill_arc.isra.7+0x39c>
 80132c6:	eef4 9ae7 	vcmpe.f32	s19, s15
 80132ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80132ce:	daa1      	bge.n	8013214 <fill_arc.isra.7+0x7c>
 80132d0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80132d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80132d8:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 80132dc:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 80132e0:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80132e4:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 80132e8:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80132ec:	f100 813a 	bmi.w	8013564 <fill_arc.isra.7+0x3cc>
 80132f0:	eef1 9a69 	vneg.f32	s19, s19
 80132f4:	eddf 7a95 	vldr	s15, [pc, #596]	@ 801354c <fill_arc.isra.7+0x3b4>
 80132f8:	ee6a aaa7 	vmul.f32	s21, s21, s15
 80132fc:	eeb0 0a6a 	vmov.f32	s0, s21
 8013300:	f01e f868 	bl	80313d4 <cosf>
 8013304:	eeb0 ca40 	vmov.f32	s24, s0
 8013308:	eeb0 0a6a 	vmov.f32	s0, s21
 801330c:	f01e f8ae 	bl	803146c <sinf>
 8013310:	ee6c aa28 	vmul.f32	s21, s24, s17
 8013314:	ee20 7a0a 	vmul.f32	s14, s0, s20
 8013318:	ee60 7a09 	vmul.f32	s15, s0, s18
 801331c:	ee6c 6a2b 	vmul.f32	s13, s24, s23
 8013320:	ee68 8ac0 	vnmul.f32	s17, s17, s0
 8013324:	ee6b bac0 	vnmul.f32	s23, s23, s0
 8013328:	ee2c aa0a 	vmul.f32	s20, s24, s20
 801332c:	ee2c 9a09 	vmul.f32	s18, s24, s18
 8013330:	ee76 fa87 	vadd.f32	s31, s13, s14
 8013334:	ee3b aa8a 	vadd.f32	s20, s23, s20
 8013338:	ee7a aaa7 	vadd.f32	s21, s21, s15
 801333c:	ee78 8a89 	vadd.f32	s17, s17, s18
 8013340:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013344:	ee8a ea88 	vdiv.f32	s28, s21, s16
 8013348:	eeca ca29 	vdiv.f32	s25, s20, s19
 801334c:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013350:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013354:	ee7c eaed 	vsub.f32	s29, s25, s27
 8013358:	eeb0 ba40 	vmov.f32	s22, s0
 801335c:	ee6b 7aab 	vmul.f32	s15, s23, s23
 8013360:	ee2e 0aae 	vmul.f32	s0, s29, s29
 8013364:	ee77 7a80 	vadd.f32	s15, s15, s0
 8013368:	eef5 7a40 	vcmp.f32	s15, #0.0
 801336c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8013370:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 8013374:	ee7c 6aad 	vadd.f32	s13, s25, s27
 8013378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801337c:	ee26 fa07 	vmul.f32	s30, s12, s14
 8013380:	ee26 7a87 	vmul.f32	s14, s13, s14
 8013384:	f000 8117 	beq.w	80135b6 <fill_arc.isra.7+0x41e>
 8013388:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801338c:	eef5 5a00 	vmov.f32	s11, #80	@ 0x3e800000  0.250
 8013390:	ee86 0aa7 	vdiv.f32	s0, s13, s15
 8013394:	ee30 0a65 	vsub.f32	s0, s0, s11
 8013398:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801339c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133a0:	78e5      	ldrb	r5, [r4, #3]
 80133a2:	f100 814f 	bmi.w	8013644 <fill_arc.isra.7+0x4ac>
 80133a6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80133aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133ae:	eef1 8ac0 	vsqrt.f32	s17, s0
 80133b2:	f100 8174 	bmi.w	801369e <fill_arc.isra.7+0x506>
 80133b6:	ee68 baab 	vmul.f32	s23, s17, s23
 80133ba:	ee68 eaae 	vmul.f32	s29, s17, s29
 80133be:	ee77 aa6b 	vsub.f32	s21, s14, s23
 80133c2:	ee3f aa2e 	vadd.f32	s20, s30, s29
 80133c6:	ee3c 0aea 	vsub.f32	s0, s25, s21
 80133ca:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 80133ce:	ed8d 7a01 	vstr	s14, [sp, #4]
 80133d2:	f01d feeb 	bl	80311ac <atan2f>
 80133d6:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 80133da:	eeb0 9a40 	vmov.f32	s18, s0
 80133de:	ee3d 0aea 	vsub.f32	s0, s27, s21
 80133e2:	f01d fee3 	bl	80311ac <atan2f>
 80133e6:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8013558 <fill_arc.isra.7+0x3c0>
 80133ea:	ee60 8a27 	vmul.f32	s17, s0, s15
 80133ee:	ee29 9a27 	vmul.f32	s18, s18, s15
 80133f2:	ee78 7ac9 	vsub.f32	s15, s17, s18
 80133f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80133fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133fe:	bf48      	it	mi
 8013400:	eddf 6a53 	vldrmi	s13, [pc, #332]	@ 8013550 <fill_arc.isra.7+0x3b8>
 8013404:	eddf 5a53 	vldr	s11, [pc, #332]	@ 8013554 <fill_arc.isra.7+0x3bc>
 8013408:	bf48      	it	mi
 801340a:	ee77 7aa6 	vaddmi.f32	s15, s15, s13
 801340e:	eef4 7ae5 	vcmpe.f32	s15, s11
 8013412:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013416:	f005 0640 	and.w	r6, r5, #64	@ 0x40
 801341a:	f3c5 1380 	ubfx	r3, r5, #6, #1
 801341e:	ed9d 7a01 	vldr	s14, [sp, #4]
 8013422:	f3c5 1540 	ubfx	r5, r5, #5, #1
 8013426:	f140 80ab 	bpl.w	8013580 <fill_arc.isra.7+0x3e8>
 801342a:	429d      	cmp	r5, r3
 801342c:	f000 8130 	beq.w	8013690 <fill_arc.isra.7+0x4f8>
 8013430:	ee28 aa0a 	vmul.f32	s20, s16, s20
 8013434:	ee69 aaaa 	vmul.f32	s21, s19, s21
 8013438:	ee6c 7a0a 	vmul.f32	s15, s24, s20
 801343c:	ee2b aa0a 	vmul.f32	s20, s22, s20
 8013440:	ee2b ba2a 	vmul.f32	s22, s22, s21
 8013444:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8013448:	ee37 bacb 	vsub.f32	s22, s15, s22
 801344c:	ee7a aa2a 	vadd.f32	s21, s20, s21
 8013450:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013454:	2e00      	cmp	r6, #0
 8013456:	f000 8088 	beq.w	801356a <fill_arc.isra.7+0x3d2>
 801345a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801345e:	dd03      	ble.n	8013468 <fill_arc.isra.7+0x2d0>
 8013460:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 8013550 <fill_arc.isra.7+0x3b8>
 8013464:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8013468:	2e00      	cmp	r6, #0
 801346a:	f040 80ab 	bne.w	80135c4 <fill_arc.isra.7+0x42c>
 801346e:	eef4 8ac9 	vcmpe.f32	s17, s18
 8013472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013476:	f77f af0b 	ble.w	8013290 <fill_arc.isra.7+0xf8>
 801347a:	2101      	movs	r1, #1
 801347c:	eddf ba37 	vldr	s23, [pc, #220]	@ 801355c <fill_arc.isra.7+0x3c4>
 8013480:	e01a      	b.n	80134b8 <fill_arc.isra.7+0x320>
 8013482:	eef0 0a49 	vmov.f32	s1, s18
 8013486:	d801      	bhi.n	801348c <fill_arc.isra.7+0x2f4>
 8013488:	3102      	adds	r1, #2
 801348a:	b2c9      	uxtb	r1, r1
 801348c:	eeb0 0a68 	vmov.f32	s0, s17
 8013490:	eef0 2a69 	vmov.f32	s5, s19
 8013494:	eeb0 2a48 	vmov.f32	s4, s16
 8013498:	eef0 1a6a 	vmov.f32	s3, s21
 801349c:	eeb0 1a4b 	vmov.f32	s2, s22
 80134a0:	4620      	mov	r0, r4
 80134a2:	f7ff fc59 	bl	8012d58 <render_arc.isra.6>
 80134a6:	eeb4 aac9 	vcmpe.f32	s20, s18
 80134aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134ae:	f77f aeef 	ble.w	8013290 <fill_arc.isra.7+0xf8>
 80134b2:	eef0 8a4a 	vmov.f32	s17, s20
 80134b6:	2100      	movs	r1, #0
 80134b8:	ee38 aaeb 	vsub.f32	s20, s17, s23
 80134bc:	eeb4 aac9 	vcmpe.f32	s20, s18
 80134c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134c4:	dddd      	ble.n	8013482 <fill_arc.isra.7+0x2ea>
 80134c6:	d822      	bhi.n	801350e <fill_arc.isra.7+0x376>
 80134c8:	eef0 0a4a 	vmov.f32	s1, s20
 80134cc:	e7dc      	b.n	8013488 <fill_arc.isra.7+0x2f0>
 80134ce:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80134d0:	491b      	ldr	r1, [pc, #108]	@ (8013540 <fill_arc.isra.7+0x3a8>)
 80134d2:	2b00      	cmp	r3, #0
 80134d4:	bf18      	it	ne
 80134d6:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 80134da:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 80134dc:	780a      	ldrb	r2, [r1, #0]
 80134de:	401c      	ands	r4, r3
 80134e0:	2a01      	cmp	r2, #1
 80134e2:	d103      	bne.n	80134ec <fill_arc.isra.7+0x354>
 80134e4:	684b      	ldr	r3, [r1, #4]
 80134e6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80134ea:	431c      	orrs	r4, r3
 80134ec:	2005      	movs	r0, #5
 80134ee:	f00a fbf9 	bl	801dce4 <nema_cl_get_space>
 80134f2:	2800      	cmp	r0, #0
 80134f4:	f43f aecc 	beq.w	8013290 <fill_arc.isra.7+0xf8>
 80134f8:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80134fc:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8013500:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013504:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8013508:	f044 040a 	orr.w	r4, r4, #10
 801350c:	e6b1      	b.n	8013272 <fill_arc.isra.7+0xda>
 801350e:	eeb0 0a68 	vmov.f32	s0, s17
 8013512:	eef0 2a69 	vmov.f32	s5, s19
 8013516:	eeb0 2a48 	vmov.f32	s4, s16
 801351a:	eef0 1a6a 	vmov.f32	s3, s21
 801351e:	eeb0 1a4b 	vmov.f32	s2, s22
 8013522:	eef0 0a4a 	vmov.f32	s1, s20
 8013526:	4620      	mov	r0, r4
 8013528:	f7ff fc16 	bl	8012d58 <render_arc.isra.6>
 801352c:	e7c1      	b.n	80134b2 <fill_arc.isra.7+0x31a>
 801352e:	bf00      	nop
 8013530:	3727c5ac 	.word	0x3727c5ac
 8013534:	b727c5ac 	.word	0xb727c5ac
 8013538:	20082f68 	.word	0x20082f68
 801353c:	20082f6c 	.word	0x20082f6c
 8013540:	20000064 	.word	0x20000064
 8013544:	ff000100 	.word	0xff000100
 8013548:	20082f70 	.word	0x20082f70
 801354c:	3c8efa35 	.word	0x3c8efa35
 8013550:	43b40000 	.word	0x43b40000
 8013554:	43340000 	.word	0x43340000
 8013558:	42652ee1 	.word	0x42652ee1
 801355c:	42b40000 	.word	0x42b40000
 8013560:	00000000 	.word	0x00000000
 8013564:	eeb1 8a48 	vneg.f32	s16, s16
 8013568:	e647      	b.n	80131fa <fill_arc.isra.7+0x62>
 801356a:	eef0 7a49 	vmov.f32	s15, s18
 801356e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013572:	eeb0 9a68 	vmov.f32	s18, s17
 8013576:	eef0 8a67 	vmov.f32	s17, s15
 801357a:	f53f af71 	bmi.w	8013460 <fill_arc.isra.7+0x2c8>
 801357e:	e776      	b.n	801346e <fill_arc.isra.7+0x2d6>
 8013580:	db02      	blt.n	8013588 <fill_arc.isra.7+0x3f0>
 8013582:	429d      	cmp	r5, r3
 8013584:	f43f af54 	beq.w	8013430 <fill_arc.isra.7+0x298>
 8013588:	ee77 aa2b 	vadd.f32	s21, s14, s23
 801358c:	ee3f aa6e 	vsub.f32	s20, s30, s29
 8013590:	ee3c 0aea 	vsub.f32	s0, s25, s21
 8013594:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 8013598:	f01d fe08 	bl	80311ac <atan2f>
 801359c:	ed5f 8a12 	vldr	s17, [pc, #-72]	@ 8013558 <fill_arc.isra.7+0x3c0>
 80135a0:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 80135a4:	ee20 9a28 	vmul.f32	s18, s0, s17
 80135a8:	ee3d 0aea 	vsub.f32	s0, s27, s21
 80135ac:	f01d fdfe 	bl	80311ac <atan2f>
 80135b0:	ee60 8a28 	vmul.f32	s17, s0, s17
 80135b4:	e73c      	b.n	8013430 <fill_arc.isra.7+0x298>
 80135b6:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80135ba:	f009 fa3b 	bl	801ca34 <nema_vg_set_error>
 80135be:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80135c2:	e666      	b.n	8013292 <fill_arc.isra.7+0xfa>
 80135c4:	eeb4 9ae8 	vcmpe.f32	s18, s17
 80135c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135cc:	f57f ae60 	bpl.w	8013290 <fill_arc.isra.7+0xf8>
 80135d0:	2101      	movs	r1, #1
 80135d2:	ed5f ba1e 	vldr	s23, [pc, #-120]	@ 801355c <fill_arc.isra.7+0x3c4>
 80135d6:	e01a      	b.n	801360e <fill_arc.isra.7+0x476>
 80135d8:	eef0 0a68 	vmov.f32	s1, s17
 80135dc:	db01      	blt.n	80135e2 <fill_arc.isra.7+0x44a>
 80135de:	3102      	adds	r1, #2
 80135e0:	b2c9      	uxtb	r1, r1
 80135e2:	eeb0 0a49 	vmov.f32	s0, s18
 80135e6:	eef0 2a69 	vmov.f32	s5, s19
 80135ea:	eeb0 2a48 	vmov.f32	s4, s16
 80135ee:	eef0 1a6a 	vmov.f32	s3, s21
 80135f2:	eeb0 1a4b 	vmov.f32	s2, s22
 80135f6:	4620      	mov	r0, r4
 80135f8:	f7ff fbae 	bl	8012d58 <render_arc.isra.6>
 80135fc:	eeb4 aae8 	vcmpe.f32	s20, s17
 8013600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013604:	f57f ae44 	bpl.w	8013290 <fill_arc.isra.7+0xf8>
 8013608:	eeb0 9a4a 	vmov.f32	s18, s20
 801360c:	2100      	movs	r1, #0
 801360e:	ee39 aa2b 	vadd.f32	s20, s18, s23
 8013612:	eeb4 aae8 	vcmpe.f32	s20, s17
 8013616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801361a:	d5dd      	bpl.n	80135d8 <fill_arc.isra.7+0x440>
 801361c:	db02      	blt.n	8013624 <fill_arc.isra.7+0x48c>
 801361e:	eef0 0a4a 	vmov.f32	s1, s20
 8013622:	e7dc      	b.n	80135de <fill_arc.isra.7+0x446>
 8013624:	eeb0 0a49 	vmov.f32	s0, s18
 8013628:	eef0 2a69 	vmov.f32	s5, s19
 801362c:	eeb0 2a48 	vmov.f32	s4, s16
 8013630:	eef0 1a6a 	vmov.f32	s3, s21
 8013634:	eeb0 1a4b 	vmov.f32	s2, s22
 8013638:	eef0 0a4a 	vmov.f32	s1, s20
 801363c:	4620      	mov	r0, r4
 801363e:	f7ff fb8b 	bl	8012d58 <render_arc.isra.6>
 8013642:	e7e1      	b.n	8013608 <fill_arc.isra.7+0x470>
 8013644:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013648:	eef5 7a40 	vcmp.f32	s15, #0.0
 801364c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013650:	eeb1 9ae7 	vsqrt.f32	s18, s15
 8013654:	d42a      	bmi.n	80136ac <fill_arc.isra.7+0x514>
 8013656:	ee28 8a09 	vmul.f32	s16, s16, s18
 801365a:	ee69 9a89 	vmul.f32	s19, s19, s18
 801365e:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013662:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013666:	ee8a ea88 	vdiv.f32	s28, s21, s16
 801366a:	eeca ca29 	vdiv.f32	s25, s20, s19
 801366e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013672:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 8013676:	ee3c 7aad 	vadd.f32	s14, s25, s27
 801367a:	ee26 fa27 	vmul.f32	s30, s12, s15
 801367e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8013682:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013686:	ee7c eaed 	vsub.f32	s29, s25, s27
 801368a:	ed5f 8a4b 	vldr	s17, [pc, #-300]	@ 8013560 <fill_arc.isra.7+0x3c8>
 801368e:	e692      	b.n	80133b6 <fill_arc.isra.7+0x21e>
 8013690:	eef4 7ae5 	vcmpe.f32	s15, s11
 8013694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013698:	f6bf aeca 	bge.w	8013430 <fill_arc.isra.7+0x298>
 801369c:	e774      	b.n	8013588 <fill_arc.isra.7+0x3f0>
 801369e:	ed8d 7a01 	vstr	s14, [sp, #4]
 80136a2:	f01d fda5 	bl	80311f0 <sqrtf>
 80136a6:	ed9d 7a01 	vldr	s14, [sp, #4]
 80136aa:	e684      	b.n	80133b6 <fill_arc.isra.7+0x21e>
 80136ac:	eeb0 0a67 	vmov.f32	s0, s15
 80136b0:	f01d fd9e 	bl	80311f0 <sqrtf>
 80136b4:	e7cf      	b.n	8013656 <fill_arc.isra.7+0x4be>
 80136b6:	bf00      	nop

080136b8 <stroke_thin_path>:
 80136b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136bc:	ed2d 8b0c 	vpush	{d8-d13}
 80136c0:	4682      	mov	sl, r0
 80136c2:	b097      	sub	sp, #92	@ 0x5c
 80136c4:	2248      	movs	r2, #72	@ 0x48
 80136c6:	a804      	add	r0, sp, #16
 80136c8:	2100      	movs	r1, #0
 80136ca:	2400      	movs	r4, #0
 80136cc:	f01f f8fb 	bl	80328c6 <memset>
 80136d0:	2201      	movs	r2, #1
 80136d2:	f8da 3000 	ldr.w	r3, [sl]
 80136d6:	f88d 2010 	strb.w	r2, [sp, #16]
 80136da:	42a3      	cmp	r3, r4
 80136dc:	f88d 2012 	strb.w	r2, [sp, #18]
 80136e0:	f8df b344 	ldr.w	fp, [pc, #836]	@ 8013a28 <stroke_thin_path+0x370>
 80136e4:	ed9f 8aca 	vldr	s16, [pc, #808]	@ 8013a10 <stroke_thin_path+0x358>
 80136e8:	f240 8092 	bls.w	8013810 <stroke_thin_path+0x158>
 80136ec:	f8da 2008 	ldr.w	r2, [sl, #8]
 80136f0:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80136f4:	5d15      	ldrb	r5, [r2, r4]
 80136f6:	af07      	add	r7, sp, #28
 80136f8:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 80136fc:	f005 0210 	and.w	r2, r5, #16
 8013700:	2e01      	cmp	r6, #1
 8013702:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013706:	f104 0901 	add.w	r9, r4, #1
 801370a:	9200      	str	r2, [sp, #0]
 801370c:	e887 0003 	stmia.w	r7, {r0, r1}
 8013710:	f000 809d 	beq.w	801384e <stroke_thin_path+0x196>
 8013714:	066a      	lsls	r2, r5, #25
 8013716:	f000 8082 	beq.w	801381e <stroke_thin_path+0x166>
 801371a:	9905      	ldr	r1, [sp, #20]
 801371c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8013720:	b911      	cbnz	r1, 8013728 <stroke_thin_path+0x70>
 8013722:	2301      	movs	r3, #1
 8013724:	f88d 3010 	strb.w	r3, [sp, #16]
 8013728:	2200      	movs	r2, #0
 801372a:	f8da 300c 	ldr.w	r3, [sl, #12]
 801372e:	0088      	lsls	r0, r1, #2
 8013730:	181c      	adds	r4, r3, r0
 8013732:	9001      	str	r0, [sp, #4]
 8013734:	2e06      	cmp	r6, #6
 8013736:	f101 0001 	add.w	r0, r1, #1
 801373a:	f88d 2012 	strb.w	r2, [sp, #18]
 801373e:	46a6      	mov	lr, r4
 8013740:	4602      	mov	r2, r0
 8013742:	f000 81ca 	beq.w	8013ada <stroke_thin_path+0x422>
 8013746:	2e05      	cmp	r6, #5
 8013748:	f000 8295 	beq.w	8013c76 <stroke_thin_path+0x5be>
 801374c:	2e07      	cmp	r6, #7
 801374e:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8013752:	f000 8315 	beq.w	8013d80 <stroke_thin_path+0x6c8>
 8013756:	2e08      	cmp	r6, #8
 8013758:	f000 83be 	beq.w	8013ed8 <stroke_thin_path+0x820>
 801375c:	f005 0c0f 	and.w	ip, r5, #15
 8013760:	f1bc 0f09 	cmp.w	ip, #9
 8013764:	f000 84f7 	beq.w	8014156 <stroke_thin_path+0xa9e>
 8013768:	2e04      	cmp	r6, #4
 801376a:	f040 8205 	bne.w	8013b78 <stroke_thin_path+0x4c0>
 801376e:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013772:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013776:	9b00      	ldr	r3, [sp, #0]
 8013778:	9005      	str	r0, [sp, #20]
 801377a:	edde 7a00 	vldr	s15, [lr]
 801377e:	2b00      	cmp	r3, #0
 8013780:	f000 8266 	beq.w	8013c50 <stroke_thin_path+0x598>
 8013784:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8013788:	ee77 7a27 	vadd.f32	s15, s14, s15
 801378c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013790:	f8db 3000 	ldr.w	r3, [fp]
 8013794:	7f1b      	ldrb	r3, [r3, #28]
 8013796:	2b00      	cmp	r3, #0
 8013798:	f000 8148 	beq.w	8013a2c <stroke_thin_path+0x374>
 801379c:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 80137a0:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80137a4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80137a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137ac:	d109      	bne.n	80137c2 <stroke_thin_path+0x10a>
 80137ae:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80137b2:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80137b6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80137ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137be:	f000 828e 	beq.w	8013cde <stroke_thin_path+0x626>
 80137c2:	2301      	movs	r3, #1
 80137c4:	f88d 3011 	strb.w	r3, [sp, #17]
 80137c8:	f89d 3012 	ldrb.w	r3, [sp, #18]
 80137cc:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80137d0:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80137d4:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 80137d8:	b9a3      	cbnz	r3, 8013804 <stroke_thin_path+0x14c>
 80137da:	062b      	lsls	r3, r5, #24
 80137dc:	d412      	bmi.n	8013804 <stroke_thin_path+0x14c>
 80137de:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 80137e2:	2b05      	cmp	r3, #5
 80137e4:	d072      	beq.n	80138cc <stroke_thin_path+0x214>
 80137e6:	2e06      	cmp	r6, #6
 80137e8:	f000 8126 	beq.w	8013a38 <stroke_thin_path+0x380>
 80137ec:	2e08      	cmp	r6, #8
 80137ee:	f000 8123 	beq.w	8013a38 <stroke_thin_path+0x380>
 80137f2:	f005 050f 	and.w	r5, r5, #15
 80137f6:	2d09      	cmp	r5, #9
 80137f8:	f000 8440 	beq.w	801407c <stroke_thin_path+0x9c4>
 80137fc:	3e0a      	subs	r6, #10
 80137fe:	2e01      	cmp	r6, #1
 8013800:	f200 834c 	bhi.w	8013e9c <stroke_thin_path+0x7e4>
 8013804:	464c      	mov	r4, r9
 8013806:	f8da 3000 	ldr.w	r3, [sl]
 801380a:	42a3      	cmp	r3, r4
 801380c:	f63f af6e 	bhi.w	80136ec <stroke_thin_path+0x34>
 8013810:	2500      	movs	r5, #0
 8013812:	4628      	mov	r0, r5
 8013814:	b017      	add	sp, #92	@ 0x5c
 8013816:	ecbd 8b0c 	vpop	{d8-d13}
 801381a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801381e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013822:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013826:	2b01      	cmp	r3, #1
 8013828:	bf04      	itt	eq
 801382a:	ee18 2a10 	vmoveq	r2, s16
 801382e:	ee18 1a10 	vmoveq	r1, s16
 8013832:	f04f 0300 	mov.w	r3, #0
 8013836:	bf1c      	itt	ne
 8013838:	9913      	ldrne	r1, [sp, #76]	@ 0x4c
 801383a:	9a14      	ldrne	r2, [sp, #80]	@ 0x50
 801383c:	9109      	str	r1, [sp, #36]	@ 0x24
 801383e:	920a      	str	r2, [sp, #40]	@ 0x28
 8013840:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013842:	9210      	str	r2, [sp, #64]	@ 0x40
 8013844:	f88d 3012 	strb.w	r3, [sp, #18]
 8013848:	f88d 3011 	strb.w	r3, [sp, #17]
 801384c:	e7c5      	b.n	80137da <stroke_thin_path+0x122>
 801384e:	f89d 1011 	ldrb.w	r1, [sp, #17]
 8013852:	9a05      	ldr	r2, [sp, #20]
 8013854:	2901      	cmp	r1, #1
 8013856:	f000 808d 	beq.w	8013974 <stroke_thin_path+0x2bc>
 801385a:	2401      	movs	r4, #1
 801385c:	2600      	movs	r6, #0
 801385e:	0090      	lsls	r0, r2, #2
 8013860:	f8da 100c 	ldr.w	r1, [sl, #12]
 8013864:	1d07      	adds	r7, r0, #4
 8013866:	440f      	add	r7, r1
 8013868:	f88d 4012 	strb.w	r4, [sp, #18]
 801386c:	4401      	add	r1, r0
 801386e:	1910      	adds	r0, r2, r4
 8013870:	9c00      	ldr	r4, [sp, #0]
 8013872:	9206      	str	r2, [sp, #24]
 8013874:	f88d 6010 	strb.w	r6, [sp, #16]
 8013878:	3202      	adds	r2, #2
 801387a:	9005      	str	r0, [sp, #20]
 801387c:	b1e4      	cbz	r4, 80138b8 <stroke_thin_path+0x200>
 801387e:	edd1 7a00 	vldr	s15, [r1]
 8013882:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013886:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801388a:	9205      	str	r2, [sp, #20]
 801388c:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013890:	edd7 7a00 	vldr	s15, [r7]
 8013894:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8013898:	ee77 7a27 	vadd.f32	s15, s14, s15
 801389c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 80138a0:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80138a4:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80138a8:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80138ac:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80138b0:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 80138b4:	464c      	mov	r4, r9
 80138b6:	e7a8      	b.n	801380a <stroke_thin_path+0x152>
 80138b8:	edd1 6a00 	vldr	s13, [r1]
 80138bc:	9205      	str	r2, [sp, #20]
 80138be:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 80138c2:	edd7 7a00 	vldr	s15, [r7]
 80138c6:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 80138ca:	e7e9      	b.n	80138a0 <stroke_thin_path+0x1e8>
 80138cc:	f8db 3000 	ldr.w	r3, [fp]
 80138d0:	eddd aa0b 	vldr	s21, [sp, #44]	@ 0x2c
 80138d4:	7f1a      	ldrb	r2, [r3, #28]
 80138d6:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 80138da:	ed9d ca07 	vldr	s24, [sp, #28]
 80138de:	eddd ba08 	vldr	s23, [sp, #32]
 80138e2:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80138e6:	ed9d 9a0a 	vldr	s18, [sp, #40]	@ 0x28
 80138ea:	2a00      	cmp	r2, #0
 80138ec:	f040 81df 	bne.w	8013cae <stroke_thin_path+0x5f6>
 80138f0:	4a48      	ldr	r2, [pc, #288]	@ (8013a14 <stroke_thin_path+0x35c>)
 80138f2:	6816      	ldr	r6, [r2, #0]
 80138f4:	2e01      	cmp	r6, #1
 80138f6:	f000 8319 	beq.w	8013f2c <stroke_thin_path+0x874>
 80138fa:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80138fc:	2508      	movs	r5, #8
 80138fe:	b10a      	cbz	r2, 8013904 <stroke_thin_path+0x24c>
 8013900:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013904:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013906:	4b44      	ldr	r3, [pc, #272]	@ (8013a18 <stroke_thin_path+0x360>)
 8013908:	4014      	ands	r4, r2
 801390a:	7819      	ldrb	r1, [r3, #0]
 801390c:	2901      	cmp	r1, #1
 801390e:	d103      	bne.n	8013918 <stroke_thin_path+0x260>
 8013910:	685b      	ldr	r3, [r3, #4]
 8013912:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013916:	431c      	orrs	r4, r3
 8013918:	2007      	movs	r0, #7
 801391a:	f00a f9e3 	bl	801dce4 <nema_cl_get_space>
 801391e:	2800      	cmp	r0, #0
 8013920:	f43f af70 	beq.w	8013804 <stroke_thin_path+0x14c>
 8013924:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8013928:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801392c:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013930:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013934:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013938:	f44f 7251 	mov.w	r2, #836	@ 0x344
 801393c:	ed80 ca01 	vstr	s24, [r0, #4]
 8013940:	edc0 ba03 	vstr	s23, [r0, #12]
 8013944:	edc0 aa05 	vstr	s21, [r0, #20]
 8013948:	ed80 aa07 	vstr	s20, [r0, #28]
 801394c:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8013950:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8013954:	4b31      	ldr	r3, [pc, #196]	@ (8013a1c <stroke_thin_path+0x364>)
 8013956:	432c      	orrs	r4, r5
 8013958:	6344      	str	r4, [r0, #52]	@ 0x34
 801395a:	f8c0 e000 	str.w	lr, [r0]
 801395e:	f8c0 c008 	str.w	ip, [r0, #8]
 8013962:	6107      	str	r7, [r0, #16]
 8013964:	6186      	str	r6, [r0, #24]
 8013966:	6201      	str	r1, [r0, #32]
 8013968:	6282      	str	r2, [r0, #40]	@ 0x28
 801396a:	6303      	str	r3, [r0, #48]	@ 0x30
 801396c:	f8da 3000 	ldr.w	r3, [sl]
 8013970:	464c      	mov	r4, r9
 8013972:	e74a      	b.n	801380a <stroke_thin_path+0x152>
 8013974:	2a00      	cmp	r2, #0
 8013976:	f43f af70 	beq.w	801385a <stroke_thin_path+0x1a2>
 801397a:	f8db 1000 	ldr.w	r1, [fp]
 801397e:	7f09      	ldrb	r1, [r1, #28]
 8013980:	2900      	cmp	r1, #0
 8013982:	f43f af6a 	beq.w	801385a <stroke_thin_path+0x1a2>
 8013986:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801398a:	2b00      	cmp	r3, #0
 801398c:	f040 83c0 	bne.w	8014110 <stroke_thin_path+0xa58>
 8013990:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8013994:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8013996:	4a22      	ldr	r2, [pc, #136]	@ (8013a20 <stroke_thin_path+0x368>)
 8013998:	4b22      	ldr	r3, [pc, #136]	@ (8013a24 <stroke_thin_path+0x36c>)
 801399a:	2007      	movs	r0, #7
 801399c:	6816      	ldr	r6, [r2, #0]
 801399e:	681c      	ldr	r4, [r3, #0]
 80139a0:	f00a f9a0 	bl	801dce4 <nema_cl_get_space>
 80139a4:	2800      	cmp	r0, #0
 80139a6:	d02e      	beq.n	8013a06 <stroke_thin_path+0x34e>
 80139a8:	4a1b      	ldr	r2, [pc, #108]	@ (8013a18 <stroke_thin_path+0x360>)
 80139aa:	f8db 3000 	ldr.w	r3, [fp]
 80139ae:	7811      	ldrb	r1, [r2, #0]
 80139b0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80139b2:	2901      	cmp	r1, #1
 80139b4:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 80139b8:	d104      	bne.n	80139c4 <stroke_thin_path+0x30c>
 80139ba:	4b17      	ldr	r3, [pc, #92]	@ (8013a18 <stroke_thin_path+0x360>)
 80139bc:	685b      	ldr	r3, [r3, #4]
 80139be:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80139c2:	431a      	orrs	r2, r3
 80139c4:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80139c8:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80139cc:	6003      	str	r3, [r0, #0]
 80139ce:	9b07      	ldr	r3, [sp, #28]
 80139d0:	6081      	str	r1, [r0, #8]
 80139d2:	6043      	str	r3, [r0, #4]
 80139d4:	9b08      	ldr	r3, [sp, #32]
 80139d6:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80139da:	61c7      	str	r7, [r0, #28]
 80139dc:	60c3      	str	r3, [r0, #12]
 80139de:	f44f 774d 	mov.w	r7, #820	@ 0x334
 80139e2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80139e6:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80139ea:	f042 0204 	orr.w	r2, r2, #4
 80139ee:	6342      	str	r2, [r0, #52]	@ 0x34
 80139f0:	4a0a      	ldr	r2, [pc, #40]	@ (8013a1c <stroke_thin_path+0x364>)
 80139f2:	f8c0 8014 	str.w	r8, [r0, #20]
 80139f6:	6246      	str	r6, [r0, #36]	@ 0x24
 80139f8:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80139fa:	f8c0 c010 	str.w	ip, [r0, #16]
 80139fe:	6187      	str	r7, [r0, #24]
 8013a00:	6201      	str	r1, [r0, #32]
 8013a02:	6283      	str	r3, [r0, #40]	@ 0x28
 8013a04:	6302      	str	r2, [r0, #48]	@ 0x30
 8013a06:	9a05      	ldr	r2, [sp, #20]
 8013a08:	f8da 3000 	ldr.w	r3, [sl]
 8013a0c:	e725      	b.n	801385a <stroke_thin_path+0x1a2>
 8013a0e:	bf00      	nop
 8013a10:	00000000 	.word	0x00000000
 8013a14:	20082f70 	.word	0x20082f70
 8013a18:	20000064 	.word	0x20000064
 8013a1c:	ff000100 	.word	0xff000100
 8013a20:	20082f74 	.word	0x20082f74
 8013a24:	20082f78 	.word	0x20082f78
 8013a28:	20082f68 	.word	0x20082f68
 8013a2c:	2201      	movs	r2, #1
 8013a2e:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013a32:	f88d 2011 	strb.w	r2, [sp, #17]
 8013a36:	e6c9      	b.n	80137cc <stroke_thin_path+0x114>
 8013a38:	f8db 3000 	ldr.w	r3, [fp]
 8013a3c:	7f1a      	ldrb	r2, [r3, #28]
 8013a3e:	2a00      	cmp	r2, #0
 8013a40:	f040 8244 	bne.w	8013ecc <stroke_thin_path+0x814>
 8013a44:	4aa9      	ldr	r2, [pc, #676]	@ (8013cec <stroke_thin_path+0x634>)
 8013a46:	6814      	ldr	r4, [r2, #0]
 8013a48:	2c01      	cmp	r4, #1
 8013a4a:	f000 83e7 	beq.w	801421c <stroke_thin_path+0xb64>
 8013a4e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013a50:	2509      	movs	r5, #9
 8013a52:	2a00      	cmp	r2, #0
 8013a54:	f040 8140 	bne.w	8013cd8 <stroke_thin_path+0x620>
 8013a58:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013a5a:	4ba5      	ldr	r3, [pc, #660]	@ (8013cf0 <stroke_thin_path+0x638>)
 8013a5c:	4014      	ands	r4, r2
 8013a5e:	7819      	ldrb	r1, [r3, #0]
 8013a60:	2901      	cmp	r1, #1
 8013a62:	d103      	bne.n	8013a6c <stroke_thin_path+0x3b4>
 8013a64:	685b      	ldr	r3, [r3, #4]
 8013a66:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013a6a:	431c      	orrs	r4, r3
 8013a6c:	2009      	movs	r0, #9
 8013a6e:	f00a f939 	bl	801dce4 <nema_cl_get_space>
 8013a72:	2800      	cmp	r0, #0
 8013a74:	f43f aec6 	beq.w	8013804 <stroke_thin_path+0x14c>
 8013a78:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013a7c:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8013a80:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013a84:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013a88:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013a8c:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8013a90:	6002      	str	r2, [r0, #0]
 8013a92:	9a07      	ldr	r2, [sp, #28]
 8013a94:	f8c0 c008 	str.w	ip, [r0, #8]
 8013a98:	6042      	str	r2, [r0, #4]
 8013a9a:	9a08      	ldr	r2, [sp, #32]
 8013a9c:	6107      	str	r7, [r0, #16]
 8013a9e:	60c2      	str	r2, [r0, #12]
 8013aa0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013aa2:	6186      	str	r6, [r0, #24]
 8013aa4:	6142      	str	r2, [r0, #20]
 8013aa6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013aa8:	6201      	str	r1, [r0, #32]
 8013aaa:	61c2      	str	r2, [r0, #28]
 8013aac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013aae:	6283      	str	r3, [r0, #40]	@ 0x28
 8013ab0:	6242      	str	r2, [r0, #36]	@ 0x24
 8013ab2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013ab4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013ab6:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8013ab8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013aba:	6341      	str	r1, [r0, #52]	@ 0x34
 8013abc:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8013abe:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8013ac2:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8013ac6:	4b8b      	ldr	r3, [pc, #556]	@ (8013cf4 <stroke_thin_path+0x63c>)
 8013ac8:	432c      	orrs	r4, r5
 8013aca:	6444      	str	r4, [r0, #68]	@ 0x44
 8013acc:	6301      	str	r1, [r0, #48]	@ 0x30
 8013ace:	6382      	str	r2, [r0, #56]	@ 0x38
 8013ad0:	6403      	str	r3, [r0, #64]	@ 0x40
 8013ad2:	f8da 3000 	ldr.w	r3, [sl]
 8013ad6:	464c      	mov	r4, r9
 8013ad8:	e697      	b.n	801380a <stroke_thin_path+0x152>
 8013ada:	9005      	str	r0, [sp, #20]
 8013adc:	ed94 6a00 	vldr	s12, [r4]
 8013ae0:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013ae4:	1c8a      	adds	r2, r1, #2
 8013ae6:	9205      	str	r2, [sp, #20]
 8013ae8:	edd4 6a01 	vldr	s13, [r4, #4]
 8013aec:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013af0:	1cca      	adds	r2, r1, #3
 8013af2:	9205      	str	r2, [sp, #20]
 8013af4:	ed94 7a02 	vldr	s14, [r4, #8]
 8013af8:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013afc:	3104      	adds	r1, #4
 8013afe:	9105      	str	r1, [sp, #20]
 8013b00:	edd4 7a03 	vldr	s15, [r4, #12]
 8013b04:	9a00      	ldr	r2, [sp, #0]
 8013b06:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b0a:	b19a      	cbz	r2, 8013b34 <stroke_thin_path+0x47c>
 8013b0c:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013b10:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013b14:	ee36 6a05 	vadd.f32	s12, s12, s10
 8013b18:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013b1c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b20:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013b24:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013b28:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013b2c:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013b30:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b34:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8013b38:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013b3c:	008a      	lsls	r2, r1, #2
 8013b3e:	1c48      	adds	r0, r1, #1
 8013b40:	9201      	str	r2, [sp, #4]
 8013b42:	9c01      	ldr	r4, [sp, #4]
 8013b44:	9005      	str	r0, [sp, #20]
 8013b46:	1d22      	adds	r2, r4, #4
 8013b48:	441a      	add	r2, r3
 8013b4a:	4423      	add	r3, r4
 8013b4c:	9c00      	ldr	r4, [sp, #0]
 8013b4e:	3102      	adds	r1, #2
 8013b50:	edd3 6a00 	vldr	s13, [r3]
 8013b54:	2c00      	cmp	r4, #0
 8013b56:	d076      	beq.n	8013c46 <stroke_thin_path+0x58e>
 8013b58:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013b5c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8013b60:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013b64:	9105      	str	r1, [sp, #20]
 8013b66:	ed92 7a00 	vldr	s14, [r2]
 8013b6a:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013b6e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013b72:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013b76:	e60b      	b.n	8013790 <stroke_thin_path+0xd8>
 8013b78:	2e03      	cmp	r6, #3
 8013b7a:	d06c      	beq.n	8013c56 <stroke_thin_path+0x59e>
 8013b7c:	2e0a      	cmp	r6, #10
 8013b7e:	f040 841d 	bne.w	80143bc <stroke_thin_path+0xd04>
 8013b82:	9005      	str	r0, [sp, #20]
 8013b84:	edde 7a00 	vldr	s15, [lr]
 8013b88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013b8c:	ee17 1a90 	vmov	r1, s15
 8013b90:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8013b94:	1049      	asrs	r1, r1, #1
 8013b96:	2900      	cmp	r1, #0
 8013b98:	9101      	str	r1, [sp, #4]
 8013b9a:	f340 8112 	ble.w	8013dc2 <stroke_thin_path+0x70a>
 8013b9e:	f8cd 9008 	str.w	r9, [sp, #8]
 8013ba2:	2400      	movs	r4, #0
 8013ba4:	46a9      	mov	r9, r5
 8013ba6:	9603      	str	r6, [sp, #12]
 8013ba8:	e039      	b.n	8013c1e <stroke_thin_path+0x566>
 8013baa:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8013bae:	ee78 8a81 	vadd.f32	s17, s17, s2
 8013bb2:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013bb6:	9205      	str	r2, [sp, #20]
 8013bb8:	ed91 9a00 	vldr	s18, [r1]
 8013bbc:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8013bc0:	ee39 9a21 	vadd.f32	s18, s18, s3
 8013bc4:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013bc8:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013bcc:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013bd0:	f8db 3000 	ldr.w	r3, [fp]
 8013bd4:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 8013bd8:	7f1a      	ldrb	r2, [r3, #28]
 8013bda:	2a00      	cmp	r2, #0
 8013bdc:	f040 808e 	bne.w	8013cfc <stroke_thin_path+0x644>
 8013be0:	4a42      	ldr	r2, [pc, #264]	@ (8013cec <stroke_thin_path+0x634>)
 8013be2:	eddd 9a07 	vldr	s19, [sp, #28]
 8013be6:	6812      	ldr	r2, [r2, #0]
 8013be8:	ed9d aa08 	vldr	s20, [sp, #32]
 8013bec:	2a00      	cmp	r2, #0
 8013bee:	f000 82e5 	beq.w	80141bc <stroke_thin_path+0xb04>
 8013bf2:	eef0 1a49 	vmov.f32	s3, s18
 8013bf6:	eeb0 1a68 	vmov.f32	s2, s17
 8013bfa:	eef0 0a4a 	vmov.f32	s1, s20
 8013bfe:	eeb0 0a69 	vmov.f32	s0, s19
 8013c02:	f7fe fe69 	bl	80128d8 <raster_stroked_line_>
 8013c06:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013c0a:	9b01      	ldr	r3, [sp, #4]
 8013c0c:	3401      	adds	r4, #1
 8013c0e:	429c      	cmp	r4, r3
 8013c10:	e887 0003 	stmia.w	r7, {r0, r1}
 8013c14:	f000 80d2 	beq.w	8013dbc <stroke_thin_path+0x704>
 8013c18:	f8da 300c 	ldr.w	r3, [sl, #12]
 8013c1c:	9a05      	ldr	r2, [sp, #20]
 8013c1e:	0090      	lsls	r0, r2, #2
 8013c20:	1d01      	adds	r1, r0, #4
 8013c22:	4419      	add	r1, r3
 8013c24:	9d00      	ldr	r5, [sp, #0]
 8013c26:	4403      	add	r3, r0
 8013c28:	1c50      	adds	r0, r2, #1
 8013c2a:	9005      	str	r0, [sp, #20]
 8013c2c:	3202      	adds	r2, #2
 8013c2e:	edd3 8a00 	vldr	s17, [r3]
 8013c32:	2d00      	cmp	r5, #0
 8013c34:	d1b9      	bne.n	8013baa <stroke_thin_path+0x4f2>
 8013c36:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013c3a:	9205      	str	r2, [sp, #20]
 8013c3c:	ed91 9a00 	vldr	s18, [r1]
 8013c40:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013c44:	e7c0      	b.n	8013bc8 <stroke_thin_path+0x510>
 8013c46:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c4a:	9105      	str	r1, [sp, #20]
 8013c4c:	edd2 7a00 	vldr	s15, [r2]
 8013c50:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013c54:	e59c      	b.n	8013790 <stroke_thin_path+0xd8>
 8013c56:	9b00      	ldr	r3, [sp, #0]
 8013c58:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013c5c:	9005      	str	r0, [sp, #20]
 8013c5e:	b353      	cbz	r3, 8013cb6 <stroke_thin_path+0x5fe>
 8013c60:	ed9e 7a00 	vldr	s14, [lr]
 8013c64:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013c68:	ee76 6a87 	vadd.f32	s13, s13, s14
 8013c6c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013c70:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c74:	e58c      	b.n	8013790 <stroke_thin_path+0xd8>
 8013c76:	9005      	str	r0, [sp, #20]
 8013c78:	ed94 7a00 	vldr	s14, [r4]
 8013c7c:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013c80:	3102      	adds	r1, #2
 8013c82:	9105      	str	r1, [sp, #20]
 8013c84:	edd4 7a01 	vldr	s15, [r4, #4]
 8013c88:	9a00      	ldr	r2, [sp, #0]
 8013c8a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013c8e:	2a00      	cmp	r2, #0
 8013c90:	f43f af50 	beq.w	8013b34 <stroke_thin_path+0x47c>
 8013c94:	ed9d 6a0f 	vldr	s12, [sp, #60]	@ 0x3c
 8013c98:	eddd 6a10 	vldr	s13, [sp, #64]	@ 0x40
 8013c9c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013ca0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ca4:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013ca8:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013cac:	e742      	b.n	8013b34 <stroke_thin_path+0x47c>
 8013cae:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013cb0:	b942      	cbnz	r2, 8013cc4 <stroke_thin_path+0x60c>
 8013cb2:	2506      	movs	r5, #6
 8013cb4:	e626      	b.n	8013904 <stroke_thin_path+0x24c>
 8013cb6:	edde 6a00 	vldr	s13, [lr]
 8013cba:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013cbe:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013cc2:	e565      	b.n	8013790 <stroke_thin_path+0xd8>
 8013cc4:	4a0c      	ldr	r2, [pc, #48]	@ (8013cf8 <stroke_thin_path+0x640>)
 8013cc6:	2506      	movs	r5, #6
 8013cc8:	6812      	ldr	r2, [r2, #0]
 8013cca:	2a00      	cmp	r2, #0
 8013ccc:	bf14      	ite	ne
 8013cce:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013cd2:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8013cd6:	e615      	b.n	8013904 <stroke_thin_path+0x24c>
 8013cd8:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013cdc:	e6bc      	b.n	8013a58 <stroke_thin_path+0x3a0>
 8013cde:	2300      	movs	r3, #0
 8013ce0:	f88d 3011 	strb.w	r3, [sp, #17]
 8013ce4:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013ce8:	e570      	b.n	80137cc <stroke_thin_path+0x114>
 8013cea:	bf00      	nop
 8013cec:	20082f70 	.word	0x20082f70
 8013cf0:	20000064 	.word	0x20000064
 8013cf4:	ff000100 	.word	0xff000100
 8013cf8:	20082f6c 	.word	0x20082f6c
 8013cfc:	4aba      	ldr	r2, [pc, #744]	@ (8013fe8 <stroke_thin_path+0x930>)
 8013cfe:	4bbb      	ldr	r3, [pc, #748]	@ (8013fec <stroke_thin_path+0x934>)
 8013d00:	2007      	movs	r0, #7
 8013d02:	6816      	ldr	r6, [r2, #0]
 8013d04:	681d      	ldr	r5, [r3, #0]
 8013d06:	f009 ffed 	bl	801dce4 <nema_cl_get_space>
 8013d0a:	2800      	cmp	r0, #0
 8013d0c:	f43f af7b 	beq.w	8013c06 <stroke_thin_path+0x54e>
 8013d10:	4ab7      	ldr	r2, [pc, #732]	@ (8013ff0 <stroke_thin_path+0x938>)
 8013d12:	f8db 3000 	ldr.w	r3, [fp]
 8013d16:	7812      	ldrb	r2, [r2, #0]
 8013d18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013d1a:	2a01      	cmp	r2, #1
 8013d1c:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8013d20:	d104      	bne.n	8013d2c <stroke_thin_path+0x674>
 8013d22:	4ab3      	ldr	r2, [pc, #716]	@ (8013ff0 <stroke_thin_path+0x938>)
 8013d24:	6852      	ldr	r2, [r2, #4]
 8013d26:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8013d2a:	4313      	orrs	r3, r2
 8013d2c:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013d30:	6002      	str	r2, [r0, #0]
 8013d32:	eddd 7a07 	vldr	s15, [sp, #28]
 8013d36:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8013d3a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8013d3e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013d42:	6082      	str	r2, [r0, #8]
 8013d44:	edc0 7a01 	vstr	s15, [r0, #4]
 8013d48:	f8c0 e018 	str.w	lr, [r0, #24]
 8013d4c:	f8dd e020 	ldr.w	lr, [sp, #32]
 8013d50:	f8c0 c010 	str.w	ip, [r0, #16]
 8013d54:	f8c0 e00c 	str.w	lr, [r0, #12]
 8013d58:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8013d5c:	f043 0304 	orr.w	r3, r3, #4
 8013d60:	f8c0 c014 	str.w	ip, [r0, #20]
 8013d64:	6343      	str	r3, [r0, #52]	@ 0x34
 8013d66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013d68:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013d6c:	61c3      	str	r3, [r0, #28]
 8013d6e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013d72:	4aa0      	ldr	r2, [pc, #640]	@ (8013ff4 <stroke_thin_path+0x93c>)
 8013d74:	6246      	str	r6, [r0, #36]	@ 0x24
 8013d76:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8013d78:	6302      	str	r2, [r0, #48]	@ 0x30
 8013d7a:	6201      	str	r1, [r0, #32]
 8013d7c:	6283      	str	r3, [r0, #40]	@ 0x28
 8013d7e:	e742      	b.n	8013c06 <stroke_thin_path+0x54e>
 8013d80:	f1ac 0c05 	sub.w	ip, ip, #5
 8013d84:	f1bc 0f03 	cmp.w	ip, #3
 8013d88:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013d8c:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013d90:	d80b      	bhi.n	8013daa <stroke_thin_path+0x6f2>
 8013d92:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8013d96:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013d9a:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 8013d9e:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8013da2:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013da6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013daa:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013dae:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8013db2:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013db6:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013dba:	e6c2      	b.n	8013b42 <stroke_thin_path+0x48a>
 8013dbc:	464d      	mov	r5, r9
 8013dbe:	e9dd 9602 	ldrd	r9, r6, [sp, #8]
 8013dc2:	eddd 8a13 	vldr	s17, [sp, #76]	@ 0x4c
 8013dc6:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013dca:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8013dce:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013dd6:	ed9d 9a14 	vldr	s18, [sp, #80]	@ 0x50
 8013dda:	d108      	bne.n	8013dee <stroke_thin_path+0x736>
 8013ddc:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013de0:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8013de4:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013de8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013dec:	d050      	beq.n	8013e90 <stroke_thin_path+0x7d8>
 8013dee:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013df2:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013df6:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013dfa:	f8db 3000 	ldr.w	r3, [fp]
 8013dfe:	e887 0003 	stmia.w	r7, {r0, r1}
 8013e02:	7f1a      	ldrb	r2, [r3, #28]
 8013e04:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013e08:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013e0c:	2a00      	cmp	r2, #0
 8013e0e:	f000 818e 	beq.w	801412e <stroke_thin_path+0xa76>
 8013e12:	4a75      	ldr	r2, [pc, #468]	@ (8013fe8 <stroke_thin_path+0x930>)
 8013e14:	4b75      	ldr	r3, [pc, #468]	@ (8013fec <stroke_thin_path+0x934>)
 8013e16:	2007      	movs	r0, #7
 8013e18:	6817      	ldr	r7, [r2, #0]
 8013e1a:	681c      	ldr	r4, [r3, #0]
 8013e1c:	f009 ff62 	bl	801dce4 <nema_cl_get_space>
 8013e20:	2800      	cmp	r0, #0
 8013e22:	d035      	beq.n	8013e90 <stroke_thin_path+0x7d8>
 8013e24:	4a72      	ldr	r2, [pc, #456]	@ (8013ff0 <stroke_thin_path+0x938>)
 8013e26:	f8db 3000 	ldr.w	r3, [fp]
 8013e2a:	7811      	ldrb	r1, [r2, #0]
 8013e2c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013e2e:	2901      	cmp	r1, #1
 8013e30:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013e34:	d104      	bne.n	8013e40 <stroke_thin_path+0x788>
 8013e36:	4b6e      	ldr	r3, [pc, #440]	@ (8013ff0 <stroke_thin_path+0x938>)
 8013e38:	685b      	ldr	r3, [r3, #4]
 8013e3a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013e3e:	431a      	orrs	r2, r3
 8013e40:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8013e44:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8013e48:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8013e4c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013e50:	f8c0 8000 	str.w	r8, [r0]
 8013e54:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8013e58:	f8c0 e008 	str.w	lr, [r0, #8]
 8013e5c:	f8c0 8004 	str.w	r8, [r0, #4]
 8013e60:	f8c0 c018 	str.w	ip, [r0, #24]
 8013e64:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013e68:	6101      	str	r1, [r0, #16]
 8013e6a:	f8c0 c00c 	str.w	ip, [r0, #12]
 8013e6e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013e70:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013e74:	6141      	str	r1, [r0, #20]
 8013e76:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8013e78:	f042 0204 	orr.w	r2, r2, #4
 8013e7c:	61c1      	str	r1, [r0, #28]
 8013e7e:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013e82:	6342      	str	r2, [r0, #52]	@ 0x34
 8013e84:	4a5b      	ldr	r2, [pc, #364]	@ (8013ff4 <stroke_thin_path+0x93c>)
 8013e86:	6247      	str	r7, [r0, #36]	@ 0x24
 8013e88:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013e8a:	6201      	str	r1, [r0, #32]
 8013e8c:	6283      	str	r3, [r0, #40]	@ 0x28
 8013e8e:	6302      	str	r2, [r0, #48]	@ 0x30
 8013e90:	2300      	movs	r3, #0
 8013e92:	f88d 3011 	strb.w	r3, [sp, #17]
 8013e96:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013e9a:	e49d      	b.n	80137d8 <stroke_thin_path+0x120>
 8013e9c:	4b56      	ldr	r3, [pc, #344]	@ (8013ff8 <stroke_thin_path+0x940>)
 8013e9e:	eddd 8a07 	vldr	s17, [sp, #28]
 8013ea2:	681b      	ldr	r3, [r3, #0]
 8013ea4:	ed9d 9a08 	vldr	s18, [sp, #32]
 8013ea8:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013eac:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8013eb0:	2b00      	cmp	r3, #0
 8013eb2:	f000 80fb 	beq.w	80140ac <stroke_thin_path+0x9f4>
 8013eb6:	eef0 1a4a 	vmov.f32	s3, s20
 8013eba:	eeb0 1a69 	vmov.f32	s2, s19
 8013ebe:	eef0 0a49 	vmov.f32	s1, s18
 8013ec2:	eeb0 0a68 	vmov.f32	s0, s17
 8013ec6:	f7fe fd07 	bl	80128d8 <raster_stroked_line_>
 8013eca:	e49b      	b.n	8013804 <stroke_thin_path+0x14c>
 8013ecc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013ece:	2a00      	cmp	r2, #0
 8013ed0:	f040 8123 	bne.w	801411a <stroke_thin_path+0xa62>
 8013ed4:	2507      	movs	r5, #7
 8013ed6:	e5bf      	b.n	8013a58 <stroke_thin_path+0x3a0>
 8013ed8:	f1ac 0c05 	sub.w	ip, ip, #5
 8013edc:	f1bc 0f03 	cmp.w	ip, #3
 8013ee0:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013ee4:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013ee8:	f240 80d3 	bls.w	8014092 <stroke_thin_path+0x9da>
 8013eec:	eeb0 7a65 	vmov.f32	s14, s11
 8013ef0:	eef0 7a45 	vmov.f32	s15, s10
 8013ef4:	ed8d 7a0c 	vstr	s14, [sp, #48]	@ 0x30
 8013ef8:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8013efc:	9005      	str	r0, [sp, #20]
 8013efe:	ed94 7a00 	vldr	s14, [r4]
 8013f02:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013f06:	3102      	adds	r1, #2
 8013f08:	9105      	str	r1, [sp, #20]
 8013f0a:	edd4 7a01 	vldr	s15, [r4, #4]
 8013f0e:	9a00      	ldr	r2, [sp, #0]
 8013f10:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013f14:	2a00      	cmp	r2, #0
 8013f16:	f43f ae0d 	beq.w	8013b34 <stroke_thin_path+0x47c>
 8013f1a:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013f1e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013f22:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013f26:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013f2a:	e603      	b.n	8013b34 <stroke_thin_path+0x47c>
 8013f2c:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8013f30:	4c32      	ldr	r4, [pc, #200]	@ (8013ffc <stroke_thin_path+0x944>)
 8013f32:	4d33      	ldr	r5, [pc, #204]	@ (8014000 <stroke_thin_path+0x948>)
 8013f34:	7821      	ldrb	r1, [r4, #0]
 8013f36:	ee39 7acc 	vsub.f32	s14, s19, s24
 8013f3a:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8013f3e:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8013f42:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8013f46:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 8013f4a:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8013f4e:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8013f52:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8013f56:	ee26 6a07 	vmul.f32	s12, s12, s14
 8013f5a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8013f5e:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8013f62:	ee24 4a28 	vmul.f32	s8, s8, s17
 8013f66:	ee25 5a28 	vmul.f32	s10, s10, s17
 8013f6a:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8013f6e:	ee35 ba84 	vadd.f32	s22, s11, s8
 8013f72:	ee75 ca24 	vadd.f32	s25, s10, s9
 8013f76:	ee27 7a07 	vmul.f32	s14, s14, s14
 8013f7a:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013f7e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8013f82:	ee2b ba28 	vmul.f32	s22, s22, s17
 8013f86:	ee6c caa8 	vmul.f32	s25, s25, s17
 8013f8a:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8013f8e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013f92:	2900      	cmp	r1, #0
 8013f94:	d038      	beq.n	8014008 <stroke_thin_path+0x950>
 8013f96:	eef4 6ae7 	vcmpe.f32	s13, s15
 8013f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f9e:	bfcc      	ite	gt
 8013fa0:	2301      	movgt	r3, #1
 8013fa2:	2300      	movle	r3, #0
 8013fa4:	2b00      	cmp	r3, #0
 8013fa6:	d03a      	beq.n	801401e <stroke_thin_path+0x966>
 8013fa8:	682b      	ldr	r3, [r5, #0]
 8013faa:	2b09      	cmp	r3, #9
 8013fac:	dc12      	bgt.n	8013fd4 <stroke_thin_path+0x91c>
 8013fae:	4815      	ldr	r0, [pc, #84]	@ (8014004 <stroke_thin_path+0x94c>)
 8013fb0:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8013fb4:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8013fb8:	ed82 ba00 	vstr	s22, [r2]
 8013fbc:	edc2 ca01 	vstr	s25, [r2, #4]
 8013fc0:	ed82 4a02 	vstr	s8, [r2, #8]
 8013fc4:	edc2 4a03 	vstr	s9, [r2, #12]
 8013fc8:	edc2 9a04 	vstr	s19, [r2, #16]
 8013fcc:	ed82 9a05 	vstr	s18, [r2, #20]
 8013fd0:	3301      	adds	r3, #1
 8013fd2:	602b      	str	r3, [r5, #0]
 8013fd4:	3601      	adds	r6, #1
 8013fd6:	eeb0 9a6c 	vmov.f32	s18, s25
 8013fda:	eef0 9a4b 	vmov.f32	s19, s22
 8013fde:	eeb0 aa45 	vmov.f32	s20, s10
 8013fe2:	eef0 aa65 	vmov.f32	s21, s11
 8013fe6:	e7a6      	b.n	8013f36 <stroke_thin_path+0x87e>
 8013fe8:	20082f74 	.word	0x20082f74
 8013fec:	20082f78 	.word	0x20082f78
 8013ff0:	20000064 	.word	0x20000064
 8013ff4:	ff000100 	.word	0xff000100
 8013ff8:	20082f70 	.word	0x20082f70
 8013ffc:	20082f7c 	.word	0x20082f7c
 8014000:	20083104 	.word	0x20083104
 8014004:	20083014 	.word	0x20083014
 8014008:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801400c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8014010:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014014:	bf4c      	ite	mi
 8014016:	2301      	movmi	r3, #1
 8014018:	2300      	movpl	r3, #0
 801401a:	2b00      	cmp	r3, #0
 801401c:	d1c4      	bne.n	8013fa8 <stroke_thin_path+0x8f0>
 801401e:	eef0 1a6c 	vmov.f32	s3, s25
 8014022:	eeb0 1a4b 	vmov.f32	s2, s22
 8014026:	eef0 0a6b 	vmov.f32	s1, s23
 801402a:	eeb0 0a4c 	vmov.f32	s0, s24
 801402e:	f7fe fc53 	bl	80128d8 <raster_stroked_line_>
 8014032:	eef0 1a49 	vmov.f32	s3, s18
 8014036:	eeb0 1a69 	vmov.f32	s2, s19
 801403a:	eef0 0a6c 	vmov.f32	s1, s25
 801403e:	eeb0 0a4b 	vmov.f32	s0, s22
 8014042:	f7fe fc49 	bl	80128d8 <raster_stroked_line_>
 8014046:	682b      	ldr	r3, [r5, #0]
 8014048:	3e01      	subs	r6, #1
 801404a:	b193      	cbz	r3, 8014072 <stroke_thin_path+0x9ba>
 801404c:	3b01      	subs	r3, #1
 801404e:	49d4      	ldr	r1, [pc, #848]	@ (80143a0 <stroke_thin_path+0xce8>)
 8014050:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8014054:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8014058:	ed92 ca00 	vldr	s24, [r2]
 801405c:	edd2 ba01 	vldr	s23, [r2, #4]
 8014060:	edd2 aa02 	vldr	s21, [r2, #8]
 8014064:	ed92 aa03 	vldr	s20, [r2, #12]
 8014068:	edd2 9a04 	vldr	s19, [r2, #16]
 801406c:	ed92 9a05 	vldr	s18, [r2, #20]
 8014070:	602b      	str	r3, [r5, #0]
 8014072:	2e00      	cmp	r6, #0
 8014074:	f43f abc6 	beq.w	8013804 <stroke_thin_path+0x14c>
 8014078:	7821      	ldrb	r1, [r4, #0]
 801407a:	e75c      	b.n	8013f36 <stroke_thin_path+0x87e>
 801407c:	a804      	add	r0, sp, #16
 801407e:	f7ff f88b 	bl	8013198 <fill_arc.isra.7>
 8014082:	4605      	mov	r5, r0
 8014084:	2800      	cmp	r0, #0
 8014086:	f43f abbd 	beq.w	8013804 <stroke_thin_path+0x14c>
 801408a:	f008 fcd3 	bl	801ca34 <nema_vg_set_error>
 801408e:	f7ff bbc0 	b.w	8013812 <stroke_thin_path+0x15a>
 8014092:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 8014096:	ee75 7a05 	vadd.f32	s15, s10, s10
 801409a:	ee35 6aa5 	vadd.f32	s12, s11, s11
 801409e:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 80140a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80140a6:	ee36 7a66 	vsub.f32	s14, s12, s13
 80140aa:	e723      	b.n	8013ef4 <stroke_thin_path+0x83c>
 80140ac:	4bbd      	ldr	r3, [pc, #756]	@ (80143a4 <stroke_thin_path+0xcec>)
 80140ae:	f8db 2000 	ldr.w	r2, [fp]
 80140b2:	7819      	ldrb	r1, [r3, #0]
 80140b4:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 80140b8:	2b00      	cmp	r3, #0
 80140ba:	bf18      	it	ne
 80140bc:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 80140c0:	2901      	cmp	r1, #1
 80140c2:	ea04 0403 	and.w	r4, r4, r3
 80140c6:	d073      	beq.n	80141b0 <stroke_thin_path+0xaf8>
 80140c8:	2005      	movs	r0, #5
 80140ca:	f009 fe0b 	bl	801dce4 <nema_cl_get_space>
 80140ce:	2800      	cmp	r0, #0
 80140d0:	f43f ab98 	beq.w	8013804 <stroke_thin_path+0x14c>
 80140d4:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80140d8:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80140dc:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80140e0:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80140e4:	edc0 8a01 	vstr	s17, [r0, #4]
 80140e8:	ed80 9a03 	vstr	s18, [r0, #12]
 80140ec:	edc0 9a05 	vstr	s19, [r0, #20]
 80140f0:	ed80 aa07 	vstr	s20, [r0, #28]
 80140f4:	4bac      	ldr	r3, [pc, #688]	@ (80143a8 <stroke_thin_path+0xcf0>)
 80140f6:	f044 040a 	orr.w	r4, r4, #10
 80140fa:	6244      	str	r4, [r0, #36]	@ 0x24
 80140fc:	6006      	str	r6, [r0, #0]
 80140fe:	6085      	str	r5, [r0, #8]
 8014100:	6101      	str	r1, [r0, #16]
 8014102:	6182      	str	r2, [r0, #24]
 8014104:	6203      	str	r3, [r0, #32]
 8014106:	f8da 3000 	ldr.w	r3, [sl]
 801410a:	464c      	mov	r4, r9
 801410c:	f7ff bb7d 	b.w	801380a <stroke_thin_path+0x152>
 8014110:	ee18 7a10 	vmov	r7, s16
 8014114:	ee18 8a10 	vmov	r8, s16
 8014118:	e43d      	b.n	8013996 <stroke_thin_path+0x2de>
 801411a:	4aa4      	ldr	r2, [pc, #656]	@ (80143ac <stroke_thin_path+0xcf4>)
 801411c:	2507      	movs	r5, #7
 801411e:	6812      	ldr	r2, [r2, #0]
 8014120:	2a00      	cmp	r2, #0
 8014122:	bf14      	ite	ne
 8014124:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014128:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 801412c:	e494      	b.n	8013a58 <stroke_thin_path+0x3a0>
 801412e:	4aa0      	ldr	r2, [pc, #640]	@ (80143b0 <stroke_thin_path+0xcf8>)
 8014130:	eddd 9a07 	vldr	s19, [sp, #28]
 8014134:	6812      	ldr	r2, [r2, #0]
 8014136:	ed9d aa08 	vldr	s20, [sp, #32]
 801413a:	2a00      	cmp	r2, #0
 801413c:	f000 81a2 	beq.w	8014484 <stroke_thin_path+0xdcc>
 8014140:	eef0 1a49 	vmov.f32	s3, s18
 8014144:	eeb0 1a68 	vmov.f32	s2, s17
 8014148:	eef0 0a4a 	vmov.f32	s1, s20
 801414c:	eeb0 0a69 	vmov.f32	s0, s19
 8014150:	f7fe fbc2 	bl	80128d8 <raster_stroked_line_>
 8014154:	e69c      	b.n	8013e90 <stroke_thin_path+0x7d8>
 8014156:	9005      	str	r0, [sp, #20]
 8014158:	6822      	ldr	r2, [r4, #0]
 801415a:	1c8b      	adds	r3, r1, #2
 801415c:	9305      	str	r3, [sp, #20]
 801415e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014160:	6863      	ldr	r3, [r4, #4]
 8014162:	3103      	adds	r1, #3
 8014164:	930c      	str	r3, [sp, #48]	@ 0x30
 8014166:	9105      	str	r1, [sp, #20]
 8014168:	4b92      	ldr	r3, [pc, #584]	@ (80143b4 <stroke_thin_path+0xcfc>)
 801416a:	68a2      	ldr	r2, [r4, #8]
 801416c:	edd3 0a00 	vldr	s1, [r3]
 8014170:	ed93 0a03 	vldr	s0, [r3, #12]
 8014174:	920d      	str	r2, [sp, #52]	@ 0x34
 8014176:	f01d f819 	bl	80311ac <atan2f>
 801417a:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 801417e:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8014182:	ee77 7a80 	vadd.f32	s15, s15, s0
 8014186:	9905      	ldr	r1, [sp, #20]
 8014188:	f8da 300c 	ldr.w	r3, [sl, #12]
 801418c:	f8dd c03c 	ldr.w	ip, [sp, #60]	@ 0x3c
 8014190:	008c      	lsls	r4, r1, #2
 8014192:	1c48      	adds	r0, r1, #1
 8014194:	4602      	mov	r2, r0
 8014196:	9401      	str	r4, [sp, #4]
 8014198:	f88d 5013 	strb.w	r5, [sp, #19]
 801419c:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 80141a0:	eb03 0e04 	add.w	lr, r3, r4
 80141a4:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 80141a8:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 80141ac:	f7ff badc 	b.w	8013768 <stroke_thin_path+0xb0>
 80141b0:	4b7c      	ldr	r3, [pc, #496]	@ (80143a4 <stroke_thin_path+0xcec>)
 80141b2:	685b      	ldr	r3, [r3, #4]
 80141b4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80141b8:	431c      	orrs	r4, r3
 80141ba:	e785      	b.n	80140c8 <stroke_thin_path+0xa10>
 80141bc:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80141c0:	2d00      	cmp	r5, #0
 80141c2:	bf18      	it	ne
 80141c4:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80141c8:	4b76      	ldr	r3, [pc, #472]	@ (80143a4 <stroke_thin_path+0xcec>)
 80141ca:	4015      	ands	r5, r2
 80141cc:	781b      	ldrb	r3, [r3, #0]
 80141ce:	2b01      	cmp	r3, #1
 80141d0:	d104      	bne.n	80141dc <stroke_thin_path+0xb24>
 80141d2:	4b74      	ldr	r3, [pc, #464]	@ (80143a4 <stroke_thin_path+0xcec>)
 80141d4:	685b      	ldr	r3, [r3, #4]
 80141d6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80141da:	431d      	orrs	r5, r3
 80141dc:	2005      	movs	r0, #5
 80141de:	f009 fd81 	bl	801dce4 <nema_cl_get_space>
 80141e2:	2800      	cmp	r0, #0
 80141e4:	f43f ad0f 	beq.w	8013c06 <stroke_thin_path+0x54e>
 80141e8:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80141ec:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80141f0:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80141f4:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80141f8:	f045 050a 	orr.w	r5, r5, #10
 80141fc:	6245      	str	r5, [r0, #36]	@ 0x24
 80141fe:	4d6a      	ldr	r5, [pc, #424]	@ (80143a8 <stroke_thin_path+0xcf0>)
 8014200:	edc0 9a01 	vstr	s19, [r0, #4]
 8014204:	ed80 aa03 	vstr	s20, [r0, #12]
 8014208:	edc0 8a05 	vstr	s17, [r0, #20]
 801420c:	ed80 9a07 	vstr	s18, [r0, #28]
 8014210:	6205      	str	r5, [r0, #32]
 8014212:	6006      	str	r6, [r0, #0]
 8014214:	6081      	str	r1, [r0, #8]
 8014216:	6102      	str	r2, [r0, #16]
 8014218:	6183      	str	r3, [r0, #24]
 801421a:	e4f4      	b.n	8013c06 <stroke_thin_path+0x54e>
 801421c:	4626      	mov	r6, r4
 801421e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8014222:	eddd da07 	vldr	s27, [sp, #28]
 8014226:	ed9d da08 	vldr	s26, [sp, #32]
 801422a:	eddd ca0b 	vldr	s25, [sp, #44]	@ 0x2c
 801422e:	ed9d ca0c 	vldr	s24, [sp, #48]	@ 0x30
 8014232:	eddd ba0d 	vldr	s23, [sp, #52]	@ 0x34
 8014236:	ed9d ba0e 	vldr	s22, [sp, #56]	@ 0x38
 801423a:	eddd aa09 	vldr	s21, [sp, #36]	@ 0x24
 801423e:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8014242:	4d5d      	ldr	r5, [pc, #372]	@ (80143b8 <stroke_thin_path+0xd00>)
 8014244:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8014248:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801424c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 8014250:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014254:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8014258:	ee25 5a28 	vmul.f32	s10, s10, s17
 801425c:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8014260:	ee37 6a85 	vadd.f32	s12, s15, s10
 8014264:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 8014268:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 801426c:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 8014270:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014274:	ee24 4a28 	vmul.f32	s8, s8, s17
 8014278:	ee65 5aa8 	vmul.f32	s11, s11, s17
 801427c:	ee34 3a27 	vadd.f32	s6, s8, s15
 8014280:	ee63 3aa8 	vmul.f32	s7, s7, s17
 8014284:	ee26 6a28 	vmul.f32	s12, s12, s17
 8014288:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801428c:	ee33 9a86 	vadd.f32	s18, s7, s12
 8014290:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8014294:	ee23 3a28 	vmul.f32	s6, s6, s17
 8014298:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801429c:	ee29 9a28 	vmul.f32	s18, s18, s17
 80142a0:	ee27 7a28 	vmul.f32	s14, s14, s17
 80142a4:	ee73 9a27 	vadd.f32	s19, s6, s15
 80142a8:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 80142ac:	ee37 7a49 	vsub.f32	s14, s14, s18
 80142b0:	ee69 9aa8 	vmul.f32	s19, s19, s17
 80142b4:	ee66 6aa8 	vmul.f32	s13, s13, s17
 80142b8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80142bc:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80142c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142c4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80142c8:	bf48      	it	mi
 80142ca:	eeb1 7a47 	vnegmi.f32	s14, s14
 80142ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142d2:	bf48      	it	mi
 80142d4:	eef1 6a66 	vnegmi.f32	s13, s13
 80142d8:	b94e      	cbnz	r6, 80142ee <stroke_thin_path+0xc36>
 80142da:	eeb4 7ae8 	vcmpe.f32	s14, s17
 80142de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142e2:	d504      	bpl.n	80142ee <stroke_thin_path+0xc36>
 80142e4:	eef4 6ae8 	vcmpe.f32	s13, s17
 80142e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142ec:	d424      	bmi.n	8014338 <stroke_thin_path+0xc80>
 80142ee:	682a      	ldr	r2, [r5, #0]
 80142f0:	2a09      	cmp	r2, #9
 80142f2:	dc21      	bgt.n	8014338 <stroke_thin_path+0xc80>
 80142f4:	492a      	ldr	r1, [pc, #168]	@ (80143a0 <stroke_thin_path+0xce8>)
 80142f6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80142fa:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80142fe:	3201      	adds	r2, #1
 8014300:	edc3 aa04 	vstr	s21, [r3, #16]
 8014304:	ed83 aa05 	vstr	s20, [r3, #20]
 8014308:	3401      	adds	r4, #1
 801430a:	eeb0 ba43 	vmov.f32	s22, s6
 801430e:	eef0 ba63 	vmov.f32	s23, s7
 8014312:	eeb0 ca44 	vmov.f32	s24, s8
 8014316:	eef0 ca64 	vmov.f32	s25, s9
 801431a:	ed83 6a00 	vstr	s12, [r3]
 801431e:	edc3 7a01 	vstr	s15, [r3, #4]
 8014322:	ed83 5a02 	vstr	s10, [r3, #8]
 8014326:	edc3 5a03 	vstr	s11, [r3, #12]
 801432a:	602a      	str	r2, [r5, #0]
 801432c:	eeb0 aa69 	vmov.f32	s20, s19
 8014330:	eef0 aa49 	vmov.f32	s21, s18
 8014334:	2600      	movs	r6, #0
 8014336:	e785      	b.n	8014244 <stroke_thin_path+0xb8c>
 8014338:	eef0 1a69 	vmov.f32	s3, s19
 801433c:	eeb0 1a49 	vmov.f32	s2, s18
 8014340:	eef0 0a4d 	vmov.f32	s1, s26
 8014344:	eeb0 0a6d 	vmov.f32	s0, s27
 8014348:	f7fe fac6 	bl	80128d8 <raster_stroked_line_>
 801434c:	eef0 1a4a 	vmov.f32	s3, s20
 8014350:	eeb0 1a6a 	vmov.f32	s2, s21
 8014354:	eef0 0a69 	vmov.f32	s1, s19
 8014358:	eeb0 0a49 	vmov.f32	s0, s18
 801435c:	f7fe fabc 	bl	80128d8 <raster_stroked_line_>
 8014360:	682a      	ldr	r2, [r5, #0]
 8014362:	3c01      	subs	r4, #1
 8014364:	b1b2      	cbz	r2, 8014394 <stroke_thin_path+0xcdc>
 8014366:	3a01      	subs	r2, #1
 8014368:	490d      	ldr	r1, [pc, #52]	@ (80143a0 <stroke_thin_path+0xce8>)
 801436a:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801436e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8014372:	eeb0 da4a 	vmov.f32	s26, s20
 8014376:	eef0 da6a 	vmov.f32	s27, s21
 801437a:	edd3 ca00 	vldr	s25, [r3]
 801437e:	ed93 ca01 	vldr	s24, [r3, #4]
 8014382:	edd3 ba02 	vldr	s23, [r3, #8]
 8014386:	ed93 ba03 	vldr	s22, [r3, #12]
 801438a:	ed93 aa05 	vldr	s20, [r3, #20]
 801438e:	edd3 aa04 	vldr	s21, [r3, #16]
 8014392:	602a      	str	r2, [r5, #0]
 8014394:	2c00      	cmp	r4, #0
 8014396:	f47f af55 	bne.w	8014244 <stroke_thin_path+0xb8c>
 801439a:	f7ff ba33 	b.w	8013804 <stroke_thin_path+0x14c>
 801439e:	bf00      	nop
 80143a0:	20083014 	.word	0x20083014
 80143a4:	20000064 	.word	0x20000064
 80143a8:	ff000100 	.word	0xff000100
 80143ac:	20082f6c 	.word	0x20082f6c
 80143b0:	20082f70 	.word	0x20082f70
 80143b4:	20082fec 	.word	0x20082fec
 80143b8:	20083104 	.word	0x20083104
 80143bc:	2e0b      	cmp	r6, #11
 80143be:	f47f abc0 	bne.w	8013b42 <stroke_thin_path+0x48a>
 80143c2:	9005      	str	r0, [sp, #20]
 80143c4:	edde 7a00 	vldr	s15, [lr]
 80143c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80143cc:	ee17 1a90 	vmov	r1, s15
 80143d0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80143d4:	104c      	asrs	r4, r1, #1
 80143d6:	2c00      	cmp	r4, #0
 80143d8:	f340 80d4 	ble.w	8014584 <stroke_thin_path+0xecc>
 80143dc:	2100      	movs	r1, #0
 80143de:	f8cd 9008 	str.w	r9, [sp, #8]
 80143e2:	9603      	str	r6, [sp, #12]
 80143e4:	46a9      	mov	r9, r5
 80143e6:	4656      	mov	r6, sl
 80143e8:	46a2      	mov	sl, r4
 80143ea:	460c      	mov	r4, r1
 80143ec:	e036      	b.n	801445c <stroke_thin_path+0xda4>
 80143ee:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 80143f2:	ee78 8a81 	vadd.f32	s17, s17, s2
 80143f6:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 80143fa:	9205      	str	r2, [sp, #20]
 80143fc:	ed91 9a00 	vldr	s18, [r1]
 8014400:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8014404:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014408:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 801440c:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8014410:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8014414:	f8db 3000 	ldr.w	r3, [fp]
 8014418:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 801441c:	7f1a      	ldrb	r2, [r3, #28]
 801441e:	2a00      	cmp	r2, #0
 8014420:	d161      	bne.n	80144e6 <stroke_thin_path+0xe2e>
 8014422:	4a82      	ldr	r2, [pc, #520]	@ (801462c <stroke_thin_path+0xf74>)
 8014424:	eddd 9a07 	vldr	s19, [sp, #28]
 8014428:	6812      	ldr	r2, [r2, #0]
 801442a:	ed9d aa08 	vldr	s20, [sp, #32]
 801442e:	2a00      	cmp	r2, #0
 8014430:	f000 80ca 	beq.w	80145c8 <stroke_thin_path+0xf10>
 8014434:	eef0 1a49 	vmov.f32	s3, s18
 8014438:	eeb0 1a68 	vmov.f32	s2, s17
 801443c:	eef0 0a4a 	vmov.f32	s1, s20
 8014440:	eeb0 0a69 	vmov.f32	s0, s19
 8014444:	f7fe fa48 	bl	80128d8 <raster_stroked_line_>
 8014448:	e898 0003 	ldmia.w	r8, {r0, r1}
 801444c:	3401      	adds	r4, #1
 801444e:	4554      	cmp	r4, sl
 8014450:	e887 0003 	stmia.w	r7, {r0, r1}
 8014454:	f000 8091 	beq.w	801457a <stroke_thin_path+0xec2>
 8014458:	68f3      	ldr	r3, [r6, #12]
 801445a:	9a05      	ldr	r2, [sp, #20]
 801445c:	0090      	lsls	r0, r2, #2
 801445e:	1d01      	adds	r1, r0, #4
 8014460:	4419      	add	r1, r3
 8014462:	9d00      	ldr	r5, [sp, #0]
 8014464:	4403      	add	r3, r0
 8014466:	1c50      	adds	r0, r2, #1
 8014468:	9005      	str	r0, [sp, #20]
 801446a:	3202      	adds	r2, #2
 801446c:	edd3 8a00 	vldr	s17, [r3]
 8014470:	2d00      	cmp	r5, #0
 8014472:	d1bc      	bne.n	80143ee <stroke_thin_path+0xd36>
 8014474:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8014478:	9205      	str	r2, [sp, #20]
 801447a:	ed91 9a00 	vldr	s18, [r1]
 801447e:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8014482:	e7c3      	b.n	801440c <stroke_thin_path+0xd54>
 8014484:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 8014488:	2a00      	cmp	r2, #0
 801448a:	bf18      	it	ne
 801448c:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 8014490:	4b67      	ldr	r3, [pc, #412]	@ (8014630 <stroke_thin_path+0xf78>)
 8014492:	4014      	ands	r4, r2
 8014494:	781b      	ldrb	r3, [r3, #0]
 8014496:	2b01      	cmp	r3, #1
 8014498:	d104      	bne.n	80144a4 <stroke_thin_path+0xdec>
 801449a:	4b65      	ldr	r3, [pc, #404]	@ (8014630 <stroke_thin_path+0xf78>)
 801449c:	685b      	ldr	r3, [r3, #4]
 801449e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80144a2:	431c      	orrs	r4, r3
 80144a4:	2005      	movs	r0, #5
 80144a6:	f009 fc1d 	bl	801dce4 <nema_cl_get_space>
 80144aa:	2800      	cmp	r0, #0
 80144ac:	f43f acf0 	beq.w	8013e90 <stroke_thin_path+0x7d8>
 80144b0:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80144b4:	f44f 7749 	mov.w	r7, #804	@ 0x324
 80144b8:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80144bc:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80144c0:	4b5c      	ldr	r3, [pc, #368]	@ (8014634 <stroke_thin_path+0xf7c>)
 80144c2:	f044 040a 	orr.w	r4, r4, #10
 80144c6:	6244      	str	r4, [r0, #36]	@ 0x24
 80144c8:	edc0 9a01 	vstr	s19, [r0, #4]
 80144cc:	ed80 aa03 	vstr	s20, [r0, #12]
 80144d0:	edc0 8a05 	vstr	s17, [r0, #20]
 80144d4:	ed80 9a07 	vstr	s18, [r0, #28]
 80144d8:	f8c0 c000 	str.w	ip, [r0]
 80144dc:	6087      	str	r7, [r0, #8]
 80144de:	6101      	str	r1, [r0, #16]
 80144e0:	6182      	str	r2, [r0, #24]
 80144e2:	6203      	str	r3, [r0, #32]
 80144e4:	e4d4      	b.n	8013e90 <stroke_thin_path+0x7d8>
 80144e6:	4a54      	ldr	r2, [pc, #336]	@ (8014638 <stroke_thin_path+0xf80>)
 80144e8:	4b54      	ldr	r3, [pc, #336]	@ (801463c <stroke_thin_path+0xf84>)
 80144ea:	6812      	ldr	r2, [r2, #0]
 80144ec:	2007      	movs	r0, #7
 80144ee:	9201      	str	r2, [sp, #4]
 80144f0:	681d      	ldr	r5, [r3, #0]
 80144f2:	f009 fbf7 	bl	801dce4 <nema_cl_get_space>
 80144f6:	2800      	cmp	r0, #0
 80144f8:	d0a6      	beq.n	8014448 <stroke_thin_path+0xd90>
 80144fa:	4a4d      	ldr	r2, [pc, #308]	@ (8014630 <stroke_thin_path+0xf78>)
 80144fc:	f8db 3000 	ldr.w	r3, [fp]
 8014500:	7812      	ldrb	r2, [r2, #0]
 8014502:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014504:	2a01      	cmp	r2, #1
 8014506:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801450a:	d104      	bne.n	8014516 <stroke_thin_path+0xe5e>
 801450c:	4a48      	ldr	r2, [pc, #288]	@ (8014630 <stroke_thin_path+0xf78>)
 801450e:	6852      	ldr	r2, [r2, #4]
 8014510:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8014514:	4313      	orrs	r3, r2
 8014516:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801451a:	6002      	str	r2, [r0, #0]
 801451c:	eddd 7a07 	vldr	s15, [sp, #28]
 8014520:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8014524:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8014528:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801452c:	6082      	str	r2, [r0, #8]
 801452e:	edc0 7a01 	vstr	s15, [r0, #4]
 8014532:	f8c0 e018 	str.w	lr, [r0, #24]
 8014536:	f8dd e020 	ldr.w	lr, [sp, #32]
 801453a:	f8c0 c010 	str.w	ip, [r0, #16]
 801453e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8014542:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8014546:	f043 0304 	orr.w	r3, r3, #4
 801454a:	6343      	str	r3, [r0, #52]	@ 0x34
 801454c:	9b01      	ldr	r3, [sp, #4]
 801454e:	f8c0 c014 	str.w	ip, [r0, #20]
 8014552:	6243      	str	r3, [r0, #36]	@ 0x24
 8014554:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014556:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801455a:	61c3      	str	r3, [r0, #28]
 801455c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8014560:	4a34      	ldr	r2, [pc, #208]	@ (8014634 <stroke_thin_path+0xf7c>)
 8014562:	3401      	adds	r4, #1
 8014564:	4554      	cmp	r4, sl
 8014566:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8014568:	6302      	str	r2, [r0, #48]	@ 0x30
 801456a:	6201      	str	r1, [r0, #32]
 801456c:	6283      	str	r3, [r0, #40]	@ 0x28
 801456e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014572:	e887 0003 	stmia.w	r7, {r0, r1}
 8014576:	f47f af6f 	bne.w	8014458 <stroke_thin_path+0xda0>
 801457a:	464d      	mov	r5, r9
 801457c:	46b2      	mov	sl, r6
 801457e:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8014582:	9e03      	ldr	r6, [sp, #12]
 8014584:	f8db 3000 	ldr.w	r3, [fp]
 8014588:	7f1b      	ldrb	r3, [r3, #28]
 801458a:	b1b3      	cbz	r3, 80145ba <stroke_thin_path+0xf02>
 801458c:	ed9d 7a0f 	vldr	s14, [sp, #60]	@ 0x3c
 8014590:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014594:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014598:	eef5 7a40 	vcmp.f32	s15, #0.0
 801459c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145a0:	d10b      	bne.n	80145ba <stroke_thin_path+0xf02>
 80145a2:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80145a6:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80145aa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80145ae:	eef5 7a40 	vcmp.f32	s15, #0.0
 80145b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145b6:	f43f ac6b 	beq.w	8013e90 <stroke_thin_path+0x7d8>
 80145ba:	2301      	movs	r3, #1
 80145bc:	f88d 3011 	strb.w	r3, [sp, #17]
 80145c0:	f89d 3012 	ldrb.w	r3, [sp, #18]
 80145c4:	f7ff b908 	b.w	80137d8 <stroke_thin_path+0x120>
 80145c8:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80145cc:	2d00      	cmp	r5, #0
 80145ce:	bf18      	it	ne
 80145d0:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80145d4:	4b16      	ldr	r3, [pc, #88]	@ (8014630 <stroke_thin_path+0xf78>)
 80145d6:	4015      	ands	r5, r2
 80145d8:	781b      	ldrb	r3, [r3, #0]
 80145da:	2b01      	cmp	r3, #1
 80145dc:	d104      	bne.n	80145e8 <stroke_thin_path+0xf30>
 80145de:	4b14      	ldr	r3, [pc, #80]	@ (8014630 <stroke_thin_path+0xf78>)
 80145e0:	685b      	ldr	r3, [r3, #4]
 80145e2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80145e6:	431d      	orrs	r5, r3
 80145e8:	2005      	movs	r0, #5
 80145ea:	f009 fb7b 	bl	801dce4 <nema_cl_get_space>
 80145ee:	2800      	cmp	r0, #0
 80145f0:	f43f af2a 	beq.w	8014448 <stroke_thin_path+0xd90>
 80145f4:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80145f8:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80145fc:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8014600:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8014604:	f045 050a 	orr.w	r5, r5, #10
 8014608:	6245      	str	r5, [r0, #36]	@ 0x24
 801460a:	4d0a      	ldr	r5, [pc, #40]	@ (8014634 <stroke_thin_path+0xf7c>)
 801460c:	edc0 9a01 	vstr	s19, [r0, #4]
 8014610:	ed80 aa03 	vstr	s20, [r0, #12]
 8014614:	edc0 8a05 	vstr	s17, [r0, #20]
 8014618:	ed80 9a07 	vstr	s18, [r0, #28]
 801461c:	6205      	str	r5, [r0, #32]
 801461e:	f8c0 c000 	str.w	ip, [r0]
 8014622:	6081      	str	r1, [r0, #8]
 8014624:	6102      	str	r2, [r0, #16]
 8014626:	6183      	str	r3, [r0, #24]
 8014628:	e70e      	b.n	8014448 <stroke_thin_path+0xd90>
 801462a:	bf00      	nop
 801462c:	20082f70 	.word	0x20082f70
 8014630:	20000064 	.word	0x20000064
 8014634:	ff000100 	.word	0xff000100
 8014638:	20082f74 	.word	0x20082f74
 801463c:	20082f78 	.word	0x20082f78

08014640 <stroke_path>:
 8014640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014644:	ed2d 8b0c 	vpush	{d8-d13}
 8014648:	4682      	mov	sl, r0
 801464a:	b09b      	sub	sp, #108	@ 0x6c
 801464c:	2246      	movs	r2, #70	@ 0x46
 801464e:	2100      	movs	r1, #0
 8014650:	f10d 0022 	add.w	r0, sp, #34	@ 0x22
 8014654:	f01e f937 	bl	80328c6 <memset>
 8014658:	46d1      	mov	r9, sl
 801465a:	2301      	movs	r3, #1
 801465c:	2500      	movs	r5, #0
 801465e:	f240 1201 	movw	r2, #257	@ 0x101
 8014662:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 8014666:	f8d9 3000 	ldr.w	r3, [r9]
 801466a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801466e:	42ab      	cmp	r3, r5
 8014670:	f8df b1cc 	ldr.w	fp, [pc, #460]	@ 8014840 <stroke_path+0x200>
 8014674:	ed9f 8a70 	vldr	s16, [pc, #448]	@ 8014838 <stroke_path+0x1f8>
 8014678:	f240 809c 	bls.w	80147b4 <stroke_path+0x174>
 801467c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8014680:	af0d      	add	r7, sp, #52	@ 0x34
 8014682:	5d5c      	ldrb	r4, [r3, r5]
 8014684:	ae0b      	add	r6, sp, #44	@ 0x2c
 8014686:	f004 0a6f 	and.w	sl, r4, #111	@ 0x6f
 801468a:	1c6b      	adds	r3, r5, #1
 801468c:	f1ba 0f01 	cmp.w	sl, #1
 8014690:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014694:	9301      	str	r3, [sp, #4]
 8014696:	f004 0810 	and.w	r8, r4, #16
 801469a:	e886 0003 	stmia.w	r6, {r0, r1}
 801469e:	f000 80d1 	beq.w	8014844 <stroke_path+0x204>
 80146a2:	0662      	lsls	r2, r4, #25
 80146a4:	f000 8095 	beq.w	80147d2 <stroke_path+0x192>
 80146a8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80146aa:	f89d e064 	ldrb.w	lr, [sp, #100]	@ 0x64
 80146ae:	b911      	cbnz	r1, 80146b6 <stroke_path+0x76>
 80146b0:	2301      	movs	r3, #1
 80146b2:	f88d 3020 	strb.w	r3, [sp, #32]
 80146b6:	2200      	movs	r2, #0
 80146b8:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80146bc:	0088      	lsls	r0, r1, #2
 80146be:	181d      	adds	r5, r3, r0
 80146c0:	9002      	str	r0, [sp, #8]
 80146c2:	f1ba 0f06 	cmp.w	sl, #6
 80146c6:	f101 0001 	add.w	r0, r1, #1
 80146ca:	f88d 2022 	strb.w	r2, [sp, #34]	@ 0x22
 80146ce:	46ac      	mov	ip, r5
 80146d0:	4602      	mov	r2, r0
 80146d2:	f000 8337 	beq.w	8014d44 <stroke_path+0x704>
 80146d6:	f1ba 0f05 	cmp.w	sl, #5
 80146da:	f000 840c 	beq.w	8014ef6 <stroke_path+0x8b6>
 80146de:	f1ba 0f07 	cmp.w	sl, #7
 80146e2:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 80146e6:	f000 8565 	beq.w	80151b4 <stroke_path+0xb74>
 80146ea:	f1ba 0f08 	cmp.w	sl, #8
 80146ee:	f000 861f 	beq.w	8015330 <stroke_path+0xcf0>
 80146f2:	f004 0e0f 	and.w	lr, r4, #15
 80146f6:	f1be 0f09 	cmp.w	lr, #9
 80146fa:	f000 8669 	beq.w	80153d0 <stroke_path+0xd90>
 80146fe:	f1ba 0f04 	cmp.w	sl, #4
 8014702:	f040 8370 	bne.w	8014de6 <stroke_path+0x7a6>
 8014706:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801470a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801470e:	9009      	str	r0, [sp, #36]	@ 0x24
 8014710:	eddc 7a00 	vldr	s15, [ip]
 8014714:	f1b8 0f00 	cmp.w	r8, #0
 8014718:	f000 83ea 	beq.w	8014ef0 <stroke_path+0x8b0>
 801471c:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8014720:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014724:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014728:	4d44      	ldr	r5, [pc, #272]	@ (801483c <stroke_path+0x1fc>)
 801472a:	682b      	ldr	r3, [r5, #0]
 801472c:	7f1b      	ldrb	r3, [r3, #28]
 801472e:	2b00      	cmp	r3, #0
 8014730:	f000 82fe 	beq.w	8014d30 <stroke_path+0x6f0>
 8014734:	ed9d 7a17 	vldr	s14, [sp, #92]	@ 0x5c
 8014738:	ee36 7ac7 	vsub.f32	s14, s13, s14
 801473c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014744:	d109      	bne.n	801475a <stroke_path+0x11a>
 8014746:	ed9d 7a18 	vldr	s14, [sp, #96]	@ 0x60
 801474a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 801474e:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014756:	f000 8427 	beq.w	8014fa8 <stroke_path+0x968>
 801475a:	2301      	movs	r3, #1
 801475c:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014760:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014764:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8014768:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801476c:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014770:	2b00      	cmp	r3, #0
 8014772:	d146      	bne.n	8014802 <stroke_path+0x1c2>
 8014774:	0623      	lsls	r3, r4, #24
 8014776:	d444      	bmi.n	8014802 <stroke_path+0x1c2>
 8014778:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801477c:	2b05      	cmp	r3, #5
 801477e:	f000 81dd 	beq.w	8014b3c <stroke_path+0x4fc>
 8014782:	f1ba 0f06 	cmp.w	sl, #6
 8014786:	f000 8283 	beq.w	8014c90 <stroke_path+0x650>
 801478a:	f1ba 0f08 	cmp.w	sl, #8
 801478e:	f000 827f 	beq.w	8014c90 <stroke_path+0x650>
 8014792:	f004 040f 	and.w	r4, r4, #15
 8014796:	2c09      	cmp	r4, #9
 8014798:	f000 85bf 	beq.w	801531a <stroke_path+0xcda>
 801479c:	f1aa 0a0a 	sub.w	sl, sl, #10
 80147a0:	f1ba 0f01 	cmp.w	sl, #1
 80147a4:	f200 83d5 	bhi.w	8014f52 <stroke_path+0x912>
 80147a8:	9d01      	ldr	r5, [sp, #4]
 80147aa:	f8d9 3000 	ldr.w	r3, [r9]
 80147ae:	42ab      	cmp	r3, r5
 80147b0:	f63f af64 	bhi.w	801467c <stroke_path+0x3c>
 80147b4:	f89d 0021 	ldrb.w	r0, [sp, #33]	@ 0x21
 80147b8:	2100      	movs	r1, #0
 80147ba:	fab0 f080 	clz	r0, r0
 80147be:	0940      	lsrs	r0, r0, #5
 80147c0:	f7fd fe7a 	bl	80124b8 <flush_lines_>
 80147c4:	2400      	movs	r4, #0
 80147c6:	4620      	mov	r0, r4
 80147c8:	b01b      	add	sp, #108	@ 0x6c
 80147ca:	ecbd 8b0c 	vpop	{d8-d13}
 80147ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147d2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80147d6:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 80147da:	2b01      	cmp	r3, #1
 80147dc:	f04f 0300 	mov.w	r3, #0
 80147e0:	bf07      	ittee	eq
 80147e2:	ee18 2a10 	vmoveq	r2, s16
 80147e6:	ee18 1a10 	vmoveq	r1, s16
 80147ea:	9917      	ldrne	r1, [sp, #92]	@ 0x5c
 80147ec:	9a18      	ldrne	r2, [sp, #96]	@ 0x60
 80147ee:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 80147f2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80147f6:	0623      	lsls	r3, r4, #24
 80147f8:	920e      	str	r2, [sp, #56]	@ 0x38
 80147fa:	910d      	str	r1, [sp, #52]	@ 0x34
 80147fc:	9113      	str	r1, [sp, #76]	@ 0x4c
 80147fe:	9214      	str	r2, [sp, #80]	@ 0x50
 8014800:	d5ba      	bpl.n	8014778 <stroke_path+0x138>
 8014802:	4d0e      	ldr	r5, [pc, #56]	@ (801483c <stroke_path+0x1fc>)
 8014804:	682b      	ldr	r3, [r5, #0]
 8014806:	7f5e      	ldrb	r6, [r3, #29]
 8014808:	f016 0610 	ands.w	r6, r6, #16
 801480c:	d055      	beq.n	80148ba <stroke_path+0x27a>
 801480e:	2300      	movs	r3, #0
 8014810:	461a      	mov	r2, r3
 8014812:	4619      	mov	r1, r3
 8014814:	4618      	mov	r0, r3
 8014816:	f7fd fbf1 	bl	8011ffc <nema_enable_aa>
 801481a:	eddb 7a08 	vldr	s15, [fp, #32]
 801481e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014822:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014826:	4606      	mov	r6, r0
 8014828:	f340 80a6 	ble.w	8014978 <stroke_path+0x338>
 801482c:	682b      	ldr	r3, [r5, #0]
 801482e:	7f5b      	ldrb	r3, [r3, #29]
 8014830:	06df      	lsls	r7, r3, #27
 8014832:	d450      	bmi.n	80148d6 <stroke_path+0x296>
 8014834:	e048      	b.n	80148c8 <stroke_path+0x288>
 8014836:	bf00      	nop
 8014838:	00000000 	.word	0x00000000
 801483c:	20082f68 	.word	0x20082f68
 8014840:	20082fb8 	.word	0x20082fb8
 8014844:	f89d 2021 	ldrb.w	r2, [sp, #33]	@ 0x21
 8014848:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801484a:	2a01      	cmp	r2, #1
 801484c:	4db6      	ldr	r5, [pc, #728]	@ (8014b28 <stroke_path+0x4e8>)
 801484e:	f000 81d4 	beq.w	8014bfa <stroke_path+0x5ba>
 8014852:	2001      	movs	r0, #1
 8014854:	2600      	movs	r6, #0
 8014856:	0099      	lsls	r1, r3, #2
 8014858:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801485c:	1d0f      	adds	r7, r1, #4
 801485e:	4417      	add	r7, r2
 8014860:	440a      	add	r2, r1
 8014862:	1819      	adds	r1, r3, r0
 8014864:	930a      	str	r3, [sp, #40]	@ 0x28
 8014866:	f88d 6020 	strb.w	r6, [sp, #32]
 801486a:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 801486e:	3302      	adds	r3, #2
 8014870:	9109      	str	r1, [sp, #36]	@ 0x24
 8014872:	f1b8 0f00 	cmp.w	r8, #0
 8014876:	f000 81b2 	beq.w	8014bde <stroke_path+0x59e>
 801487a:	edd2 7a00 	vldr	s15, [r2]
 801487e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014882:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014886:	9309      	str	r3, [sp, #36]	@ 0x24
 8014888:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801488c:	edd7 7a00 	vldr	s15, [r7]
 8014890:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8014894:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014898:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801489c:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 80148a0:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 80148a4:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80148a8:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80148ac:	682b      	ldr	r3, [r5, #0]
 80148ae:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 80148b2:	7f5e      	ldrb	r6, [r3, #29]
 80148b4:	f016 0610 	ands.w	r6, r6, #16
 80148b8:	d1a9      	bne.n	801480e <stroke_path+0x1ce>
 80148ba:	eddb 7a08 	vldr	s15, [fp, #32]
 80148be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80148c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80148c6:	dd57      	ble.n	8014978 <stroke_path+0x338>
 80148c8:	2201      	movs	r2, #1
 80148ca:	2300      	movs	r3, #0
 80148cc:	4611      	mov	r1, r2
 80148ce:	4610      	mov	r0, r2
 80148d0:	f7fd fb94 	bl	8011ffc <nema_enable_aa>
 80148d4:	4606      	mov	r6, r0
 80148d6:	2009      	movs	r0, #9
 80148d8:	ed9b ba00 	vldr	s22, [fp]
 80148dc:	f8db 8010 	ldr.w	r8, [fp, #16]
 80148e0:	eddb aa01 	vldr	s21, [fp, #4]
 80148e4:	f8db 7014 	ldr.w	r7, [fp, #20]
 80148e8:	ed9b aa02 	vldr	s20, [fp, #8]
 80148ec:	eddb 9a06 	vldr	s19, [fp, #24]
 80148f0:	ed9b 9a03 	vldr	s18, [fp, #12]
 80148f4:	eddb 8a07 	vldr	s17, [fp, #28]
 80148f8:	f009 f9f4 	bl	801dce4 <nema_cl_get_space>
 80148fc:	b3a8      	cbz	r0, 801496a <stroke_path+0x32a>
 80148fe:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014902:	f8c0 800c 	str.w	r8, [r0, #12]
 8014906:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 801490a:	f44f 784c 	mov.w	r8, #816	@ 0x330
 801490e:	ed80 ba01 	vstr	s22, [r0, #4]
 8014912:	6083      	str	r3, [r0, #8]
 8014914:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014918:	61c7      	str	r7, [r0, #28]
 801491a:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801491e:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014922:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014926:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801492a:	edc0 aa05 	vstr	s21, [r0, #20]
 801492e:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014932:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014936:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 801493a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801493e:	f8df e1f4 	ldr.w	lr, [pc, #500]	@ 8014b34 <stroke_path+0x4f4>
 8014942:	f8c0 8010 	str.w	r8, [r0, #16]
 8014946:	f8c0 a000 	str.w	sl, [r0]
 801494a:	f8de e010 	ldr.w	lr, [lr, #16]
 801494e:	f8df 81e8 	ldr.w	r8, [pc, #488]	@ 8014b38 <stroke_path+0x4f8>
 8014952:	f04e 0e05 	orr.w	lr, lr, #5
 8014956:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 801495a:	f8c0 c018 	str.w	ip, [r0, #24]
 801495e:	6207      	str	r7, [r0, #32]
 8014960:	6281      	str	r1, [r0, #40]	@ 0x28
 8014962:	6302      	str	r2, [r0, #48]	@ 0x30
 8014964:	6383      	str	r3, [r0, #56]	@ 0x38
 8014966:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 801496a:	682b      	ldr	r3, [r5, #0]
 801496c:	ed8b 8a08 	vstr	s16, [fp, #32]
 8014970:	7f5b      	ldrb	r3, [r3, #29]
 8014972:	06d8      	lsls	r0, r3, #27
 8014974:	f140 813d 	bpl.w	8014bf2 <stroke_path+0x5b2>
 8014978:	4b6c      	ldr	r3, [pc, #432]	@ (8014b2c <stroke_path+0x4ec>)
 801497a:	edd3 7a08 	vldr	s15, [r3, #32]
 801497e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014986:	dd6d      	ble.n	8014a64 <stroke_path+0x424>
 8014988:	0621      	lsls	r1, r4, #24
 801498a:	d46b      	bmi.n	8014a64 <stroke_path+0x424>
 801498c:	682b      	ldr	r3, [r5, #0]
 801498e:	4c68      	ldr	r4, [pc, #416]	@ (8014b30 <stroke_path+0x4f0>)
 8014990:	7f59      	ldrb	r1, [r3, #29]
 8014992:	f011 0110 	ands.w	r1, r1, #16
 8014996:	d10a      	bne.n	80149ae <stroke_path+0x36e>
 8014998:	6823      	ldr	r3, [r4, #0]
 801499a:	2b01      	cmp	r3, #1
 801499c:	bf13      	iteet	ne
 801499e:	2301      	movne	r3, #1
 80149a0:	461a      	moveq	r2, r3
 80149a2:	4619      	moveq	r1, r3
 80149a4:	461a      	movne	r2, r3
 80149a6:	4618      	mov	r0, r3
 80149a8:	f7fd fb28 	bl	8011ffc <nema_enable_aa>
 80149ac:	4606      	mov	r6, r0
 80149ae:	4b5f      	ldr	r3, [pc, #380]	@ (8014b2c <stroke_path+0x4ec>)
 80149b0:	2009      	movs	r0, #9
 80149b2:	ed93 ba00 	vldr	s22, [r3]
 80149b6:	f8d3 8010 	ldr.w	r8, [r3, #16]
 80149ba:	edd3 aa01 	vldr	s21, [r3, #4]
 80149be:	695f      	ldr	r7, [r3, #20]
 80149c0:	ed93 aa02 	vldr	s20, [r3, #8]
 80149c4:	edd3 9a06 	vldr	s19, [r3, #24]
 80149c8:	ed93 9a03 	vldr	s18, [r3, #12]
 80149cc:	edd3 8a07 	vldr	s17, [r3, #28]
 80149d0:	f009 f988 	bl	801dce4 <nema_cl_get_space>
 80149d4:	b3a8      	cbz	r0, 8014a42 <stroke_path+0x402>
 80149d6:	f44f 7349 	mov.w	r3, #804	@ 0x324
 80149da:	f8c0 800c 	str.w	r8, [r0, #12]
 80149de:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 80149e2:	f44f 784c 	mov.w	r8, #816	@ 0x330
 80149e6:	ed80 ba01 	vstr	s22, [r0, #4]
 80149ea:	6083      	str	r3, [r0, #8]
 80149ec:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 80149f0:	61c7      	str	r7, [r0, #28]
 80149f2:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80149f6:	f44f 7750 	mov.w	r7, #832	@ 0x340
 80149fa:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80149fe:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014a02:	edc0 aa05 	vstr	s21, [r0, #20]
 8014a06:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014a0a:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014a0e:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014a12:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014a16:	f8df e11c 	ldr.w	lr, [pc, #284]	@ 8014b34 <stroke_path+0x4f4>
 8014a1a:	f8c0 8010 	str.w	r8, [r0, #16]
 8014a1e:	f8c0 a000 	str.w	sl, [r0]
 8014a22:	f8de e010 	ldr.w	lr, [lr, #16]
 8014a26:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 8014b38 <stroke_path+0x4f8>
 8014a2a:	f04e 0e05 	orr.w	lr, lr, #5
 8014a2e:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014a32:	f8c0 c018 	str.w	ip, [r0, #24]
 8014a36:	6207      	str	r7, [r0, #32]
 8014a38:	6281      	str	r1, [r0, #40]	@ 0x28
 8014a3a:	6302      	str	r2, [r0, #48]	@ 0x30
 8014a3c:	6383      	str	r3, [r0, #56]	@ 0x38
 8014a3e:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014a42:	682b      	ldr	r3, [r5, #0]
 8014a44:	4a39      	ldr	r2, [pc, #228]	@ (8014b2c <stroke_path+0x4ec>)
 8014a46:	7f5b      	ldrb	r3, [r3, #29]
 8014a48:	ed82 8a08 	vstr	s16, [r2, #32]
 8014a4c:	06da      	lsls	r2, r3, #27
 8014a4e:	f140 8175 	bpl.w	8014d3c <stroke_path+0x6fc>
 8014a52:	6823      	ldr	r3, [r4, #0]
 8014a54:	2b02      	cmp	r3, #2
 8014a56:	d014      	beq.n	8014a82 <stroke_path+0x442>
 8014a58:	4630      	mov	r0, r6
 8014a5a:	f7fd faf1 	bl	8012040 <nema_enable_aa_flags>
 8014a5e:	2300      	movs	r3, #0
 8014a60:	6023      	str	r3, [r4, #0]
 8014a62:	e6a1      	b.n	80147a8 <stroke_path+0x168>
 8014a64:	4c32      	ldr	r4, [pc, #200]	@ (8014b30 <stroke_path+0x4f0>)
 8014a66:	6823      	ldr	r3, [r4, #0]
 8014a68:	2b02      	cmp	r3, #2
 8014a6a:	d1f5      	bne.n	8014a58 <stroke_path+0x418>
 8014a6c:	682b      	ldr	r3, [r5, #0]
 8014a6e:	7f5b      	ldrb	r3, [r3, #29]
 8014a70:	f013 0310 	ands.w	r3, r3, #16
 8014a74:	d105      	bne.n	8014a82 <stroke_path+0x442>
 8014a76:	2201      	movs	r2, #1
 8014a78:	4619      	mov	r1, r3
 8014a7a:	4610      	mov	r0, r2
 8014a7c:	f7fd fabe 	bl	8011ffc <nema_enable_aa>
 8014a80:	4606      	mov	r6, r0
 8014a82:	4b2a      	ldr	r3, [pc, #168]	@ (8014b2c <stroke_path+0x4ec>)
 8014a84:	2009      	movs	r0, #9
 8014a86:	ed93 ba01 	vldr	s22, [r3, #4]
 8014a8a:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8014a8e:	eddb aa00 	vldr	s21, [fp]
 8014a92:	f8db 7010 	ldr.w	r7, [fp, #16]
 8014a96:	ed93 aa02 	vldr	s20, [r3, #8]
 8014a9a:	edd3 9a06 	vldr	s19, [r3, #24]
 8014a9e:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014aa2:	eddb 8a07 	vldr	s17, [fp, #28]
 8014aa6:	f009 f91d 	bl	801dce4 <nema_cl_get_space>
 8014aaa:	b3a8      	cbz	r0, 8014b18 <stroke_path+0x4d8>
 8014aac:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014ab0:	f8c0 800c 	str.w	r8, [r0, #12]
 8014ab4:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014ab8:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014abc:	ed80 ba01 	vstr	s22, [r0, #4]
 8014ac0:	6083      	str	r3, [r0, #8]
 8014ac2:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014ac6:	61c7      	str	r7, [r0, #28]
 8014ac8:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014acc:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014ad0:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014ad4:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014ad8:	edc0 aa05 	vstr	s21, [r0, #20]
 8014adc:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014ae0:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014ae4:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014ae8:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014aec:	f8df e044 	ldr.w	lr, [pc, #68]	@ 8014b34 <stroke_path+0x4f4>
 8014af0:	f8c0 8010 	str.w	r8, [r0, #16]
 8014af4:	f8c0 a000 	str.w	sl, [r0]
 8014af8:	f8de e010 	ldr.w	lr, [lr, #16]
 8014afc:	f8df 8038 	ldr.w	r8, [pc, #56]	@ 8014b38 <stroke_path+0x4f8>
 8014b00:	f04e 0e05 	orr.w	lr, lr, #5
 8014b04:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014b08:	f8c0 c018 	str.w	ip, [r0, #24]
 8014b0c:	6207      	str	r7, [r0, #32]
 8014b0e:	6281      	str	r1, [r0, #40]	@ 0x28
 8014b10:	6302      	str	r2, [r0, #48]	@ 0x30
 8014b12:	6383      	str	r3, [r0, #56]	@ 0x38
 8014b14:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014b18:	682b      	ldr	r3, [r5, #0]
 8014b1a:	7f5b      	ldrb	r3, [r3, #29]
 8014b1c:	06db      	lsls	r3, r3, #27
 8014b1e:	d49b      	bmi.n	8014a58 <stroke_path+0x418>
 8014b20:	4630      	mov	r0, r6
 8014b22:	f7fd fa8d 	bl	8012040 <nema_enable_aa_flags>
 8014b26:	e797      	b.n	8014a58 <stroke_path+0x418>
 8014b28:	20082f68 	.word	0x20082f68
 8014b2c:	20082f80 	.word	0x20082f80
 8014b30:	20082fe4 	.word	0x20082fe4
 8014b34:	20000064 	.word	0x20000064
 8014b38:	ff000100 	.word	0xff000100
 8014b3c:	4dba      	ldr	r5, [pc, #744]	@ (8014e28 <stroke_path+0x7e8>)
 8014b3e:	eddd aa0f 	vldr	s21, [sp, #60]	@ 0x3c
 8014b42:	682b      	ldr	r3, [r5, #0]
 8014b44:	ed9d aa10 	vldr	s20, [sp, #64]	@ 0x40
 8014b48:	7f1a      	ldrb	r2, [r3, #28]
 8014b4a:	ed9d ca0b 	vldr	s24, [sp, #44]	@ 0x2c
 8014b4e:	eddd ba0c 	vldr	s23, [sp, #48]	@ 0x30
 8014b52:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014b56:	ed9d 9a0e 	vldr	s18, [sp, #56]	@ 0x38
 8014b5a:	2a00      	cmp	r2, #0
 8014b5c:	f040 81be 	bne.w	8014edc <stroke_path+0x89c>
 8014b60:	4ab2      	ldr	r2, [pc, #712]	@ (8014e2c <stroke_path+0x7ec>)
 8014b62:	6816      	ldr	r6, [r2, #0]
 8014b64:	2e01      	cmp	r6, #1
 8014b66:	f000 8342 	beq.w	80151ee <stroke_path+0xbae>
 8014b6a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014b6c:	2508      	movs	r5, #8
 8014b6e:	b10a      	cbz	r2, 8014b74 <stroke_path+0x534>
 8014b70:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014b74:	49ae      	ldr	r1, [pc, #696]	@ (8014e30 <stroke_path+0x7f0>)
 8014b76:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014b78:	7808      	ldrb	r0, [r1, #0]
 8014b7a:	4014      	ands	r4, r2
 8014b7c:	2801      	cmp	r0, #1
 8014b7e:	d103      	bne.n	8014b88 <stroke_path+0x548>
 8014b80:	684b      	ldr	r3, [r1, #4]
 8014b82:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014b86:	431c      	orrs	r4, r3
 8014b88:	2007      	movs	r0, #7
 8014b8a:	f009 f8ab 	bl	801dce4 <nema_cl_get_space>
 8014b8e:	2800      	cmp	r0, #0
 8014b90:	f43f ae0a 	beq.w	80147a8 <stroke_path+0x168>
 8014b94:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8014b98:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8014b9c:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8014ba0:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8014ba4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014ba8:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8014bac:	4ba1      	ldr	r3, [pc, #644]	@ (8014e34 <stroke_path+0x7f4>)
 8014bae:	432c      	orrs	r4, r5
 8014bb0:	6344      	str	r4, [r0, #52]	@ 0x34
 8014bb2:	ed80 ca01 	vstr	s24, [r0, #4]
 8014bb6:	edc0 ba03 	vstr	s23, [r0, #12]
 8014bba:	edc0 aa05 	vstr	s21, [r0, #20]
 8014bbe:	ed80 aa07 	vstr	s20, [r0, #28]
 8014bc2:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8014bc6:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8014bca:	f8c0 e000 	str.w	lr, [r0]
 8014bce:	f8c0 c008 	str.w	ip, [r0, #8]
 8014bd2:	6107      	str	r7, [r0, #16]
 8014bd4:	6186      	str	r6, [r0, #24]
 8014bd6:	6201      	str	r1, [r0, #32]
 8014bd8:	6282      	str	r2, [r0, #40]	@ 0x28
 8014bda:	6303      	str	r3, [r0, #48]	@ 0x30
 8014bdc:	e5e4      	b.n	80147a8 <stroke_path+0x168>
 8014bde:	edd2 6a00 	vldr	s13, [r2]
 8014be2:	9309      	str	r3, [sp, #36]	@ 0x24
 8014be4:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014be8:	edd7 7a00 	vldr	s15, [r7]
 8014bec:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014bf0:	e654      	b.n	801489c <stroke_path+0x25c>
 8014bf2:	4630      	mov	r0, r6
 8014bf4:	f7fd fa24 	bl	8012040 <nema_enable_aa_flags>
 8014bf8:	e6be      	b.n	8014978 <stroke_path+0x338>
 8014bfa:	2b00      	cmp	r3, #0
 8014bfc:	f43f ae29 	beq.w	8014852 <stroke_path+0x212>
 8014c00:	682a      	ldr	r2, [r5, #0]
 8014c02:	7f12      	ldrb	r2, [r2, #28]
 8014c04:	2a00      	cmp	r2, #0
 8014c06:	f43f ae24 	beq.w	8014852 <stroke_path+0x212>
 8014c0a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014c0e:	2b00      	cmp	r3, #0
 8014c10:	f040 83c5 	bne.w	801539e <stroke_path+0xd5e>
 8014c14:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8014c18:	f8dd a060 	ldr.w	sl, [sp, #96]	@ 0x60
 8014c1c:	4a86      	ldr	r2, [pc, #536]	@ (8014e38 <stroke_path+0x7f8>)
 8014c1e:	4b87      	ldr	r3, [pc, #540]	@ (8014e3c <stroke_path+0x7fc>)
 8014c20:	2007      	movs	r0, #7
 8014c22:	edcd 8a06 	vstr	s17, [sp, #24]
 8014c26:	f8cd a01c 	str.w	sl, [sp, #28]
 8014c2a:	6817      	ldr	r7, [r2, #0]
 8014c2c:	681e      	ldr	r6, [r3, #0]
 8014c2e:	f009 f859 	bl	801dce4 <nema_cl_get_space>
 8014c32:	b358      	cbz	r0, 8014c8c <stroke_path+0x64c>
 8014c34:	4a7e      	ldr	r2, [pc, #504]	@ (8014e30 <stroke_path+0x7f0>)
 8014c36:	682b      	ldr	r3, [r5, #0]
 8014c38:	7811      	ldrb	r1, [r2, #0]
 8014c3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014c3c:	2901      	cmp	r1, #1
 8014c3e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8014c42:	f000 83f2 	beq.w	801542a <stroke_path+0xdea>
 8014c46:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8014c4a:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014c4e:	6002      	str	r2, [r0, #0]
 8014c50:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014c52:	6081      	str	r1, [r0, #8]
 8014c54:	6042      	str	r2, [r0, #4]
 8014c56:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014c58:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014c5c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014c60:	60c2      	str	r2, [r0, #12]
 8014c62:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8014c66:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8014c6a:	edc0 8a05 	vstr	s17, [r0, #20]
 8014c6e:	f043 0304 	orr.w	r3, r3, #4
 8014c72:	6343      	str	r3, [r0, #52]	@ 0x34
 8014c74:	4b6f      	ldr	r3, [pc, #444]	@ (8014e34 <stroke_path+0x7f4>)
 8014c76:	f8c0 a01c 	str.w	sl, [r0, #28]
 8014c7a:	6247      	str	r7, [r0, #36]	@ 0x24
 8014c7c:	62c6      	str	r6, [r0, #44]	@ 0x2c
 8014c7e:	f8c0 e010 	str.w	lr, [r0, #16]
 8014c82:	f8c0 c018 	str.w	ip, [r0, #24]
 8014c86:	6201      	str	r1, [r0, #32]
 8014c88:	6282      	str	r2, [r0, #40]	@ 0x28
 8014c8a:	6303      	str	r3, [r0, #48]	@ 0x30
 8014c8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014c8e:	e5e0      	b.n	8014852 <stroke_path+0x212>
 8014c90:	4d65      	ldr	r5, [pc, #404]	@ (8014e28 <stroke_path+0x7e8>)
 8014c92:	682b      	ldr	r3, [r5, #0]
 8014c94:	7f1a      	ldrb	r2, [r3, #28]
 8014c96:	2a00      	cmp	r2, #0
 8014c98:	f040 8201 	bne.w	801509e <stroke_path+0xa5e>
 8014c9c:	4a63      	ldr	r2, [pc, #396]	@ (8014e2c <stroke_path+0x7ec>)
 8014c9e:	6814      	ldr	r4, [r2, #0]
 8014ca0:	2c01      	cmp	r4, #1
 8014ca2:	f000 840b 	beq.w	80154bc <stroke_path+0xe7c>
 8014ca6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014ca8:	2509      	movs	r5, #9
 8014caa:	2a00      	cmp	r2, #0
 8014cac:	f040 8171 	bne.w	8014f92 <stroke_path+0x952>
 8014cb0:	495f      	ldr	r1, [pc, #380]	@ (8014e30 <stroke_path+0x7f0>)
 8014cb2:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014cb4:	7808      	ldrb	r0, [r1, #0]
 8014cb6:	4014      	ands	r4, r2
 8014cb8:	2801      	cmp	r0, #1
 8014cba:	d103      	bne.n	8014cc4 <stroke_path+0x684>
 8014cbc:	684b      	ldr	r3, [r1, #4]
 8014cbe:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014cc2:	431c      	orrs	r4, r3
 8014cc4:	2009      	movs	r0, #9
 8014cc6:	f009 f80d 	bl	801dce4 <nema_cl_get_space>
 8014cca:	2800      	cmp	r0, #0
 8014ccc:	f43f ad6c 	beq.w	80147a8 <stroke_path+0x168>
 8014cd0:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8014cd4:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8014cd8:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014cdc:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014ce0:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8014ce4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014ce8:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8014cec:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8014cf0:	6007      	str	r7, [r0, #0]
 8014cf2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8014cf4:	f8c0 8008 	str.w	r8, [r0, #8]
 8014cf8:	6047      	str	r7, [r0, #4]
 8014cfa:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014cfc:	f8c0 e010 	str.w	lr, [r0, #16]
 8014d00:	60c7      	str	r7, [r0, #12]
 8014d02:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014d04:	f8c0 c018 	str.w	ip, [r0, #24]
 8014d08:	6147      	str	r7, [r0, #20]
 8014d0a:	6283      	str	r3, [r0, #40]	@ 0x28
 8014d0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d0e:	6201      	str	r1, [r0, #32]
 8014d10:	61c3      	str	r3, [r0, #28]
 8014d12:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014d14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014d16:	6241      	str	r1, [r0, #36]	@ 0x24
 8014d18:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014d1a:	6343      	str	r3, [r0, #52]	@ 0x34
 8014d1c:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8014d1e:	4b45      	ldr	r3, [pc, #276]	@ (8014e34 <stroke_path+0x7f4>)
 8014d20:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014d22:	432c      	orrs	r4, r5
 8014d24:	6444      	str	r4, [r0, #68]	@ 0x44
 8014d26:	6306      	str	r6, [r0, #48]	@ 0x30
 8014d28:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8014d2a:	6382      	str	r2, [r0, #56]	@ 0x38
 8014d2c:	6403      	str	r3, [r0, #64]	@ 0x40
 8014d2e:	e53b      	b.n	80147a8 <stroke_path+0x168>
 8014d30:	2201      	movs	r2, #1
 8014d32:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014d36:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8014d3a:	e513      	b.n	8014764 <stroke_path+0x124>
 8014d3c:	4630      	mov	r0, r6
 8014d3e:	f7fd f97f 	bl	8012040 <nema_enable_aa_flags>
 8014d42:	e690      	b.n	8014a66 <stroke_path+0x426>
 8014d44:	9009      	str	r0, [sp, #36]	@ 0x24
 8014d46:	ed95 6a00 	vldr	s12, [r5]
 8014d4a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d4e:	1c8a      	adds	r2, r1, #2
 8014d50:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d52:	edd5 6a01 	vldr	s13, [r5, #4]
 8014d56:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014d5a:	1cca      	adds	r2, r1, #3
 8014d5c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d5e:	ed95 7a02 	vldr	s14, [r5, #8]
 8014d62:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014d66:	3104      	adds	r1, #4
 8014d68:	9109      	str	r1, [sp, #36]	@ 0x24
 8014d6a:	edd5 7a03 	vldr	s15, [r5, #12]
 8014d6e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014d72:	f1b8 0f00 	cmp.w	r8, #0
 8014d76:	d013      	beq.n	8014da0 <stroke_path+0x760>
 8014d78:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 8014d7c:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 8014d80:	ee36 6a05 	vadd.f32	s12, s12, s10
 8014d84:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014d88:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014d8c:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8014d90:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d94:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014d98:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014d9c:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014da0:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 8014da4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8014da8:	008a      	lsls	r2, r1, #2
 8014daa:	1c48      	adds	r0, r1, #1
 8014dac:	9202      	str	r2, [sp, #8]
 8014dae:	9d02      	ldr	r5, [sp, #8]
 8014db0:	9009      	str	r0, [sp, #36]	@ 0x24
 8014db2:	1d2a      	adds	r2, r5, #4
 8014db4:	441a      	add	r2, r3
 8014db6:	442b      	add	r3, r5
 8014db8:	3102      	adds	r1, #2
 8014dba:	edd3 6a00 	vldr	s13, [r3]
 8014dbe:	f1b8 0f00 	cmp.w	r8, #0
 8014dc2:	f000 8090 	beq.w	8014ee6 <stroke_path+0x8a6>
 8014dc6:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014dca:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014dce:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014dd2:	9109      	str	r1, [sp, #36]	@ 0x24
 8014dd4:	ed92 7a00 	vldr	s14, [r2]
 8014dd8:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014ddc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014de0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014de4:	e4a0      	b.n	8014728 <stroke_path+0xe8>
 8014de6:	f1ba 0f03 	cmp.w	sl, #3
 8014dea:	f000 80a0 	beq.w	8014f2e <stroke_path+0x8ee>
 8014dee:	f1ba 0f0a 	cmp.w	sl, #10
 8014df2:	f040 8424 	bne.w	801563e <stroke_path+0xffe>
 8014df6:	9009      	str	r0, [sp, #36]	@ 0x24
 8014df8:	eddc 7a00 	vldr	s15, [ip]
 8014dfc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014e00:	ee17 1a90 	vmov	r1, s15
 8014e04:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014e08:	1049      	asrs	r1, r1, #1
 8014e0a:	2900      	cmp	r1, #0
 8014e0c:	9102      	str	r1, [sp, #8]
 8014e0e:	f340 8158 	ble.w	80150c2 <stroke_path+0xa82>
 8014e12:	2100      	movs	r1, #0
 8014e14:	4d04      	ldr	r5, [pc, #16]	@ (8014e28 <stroke_path+0x7e8>)
 8014e16:	f8cd a014 	str.w	sl, [sp, #20]
 8014e1a:	f8cd 800c 	str.w	r8, [sp, #12]
 8014e1e:	46aa      	mov	sl, r5
 8014e20:	46c8      	mov	r8, r9
 8014e22:	46a1      	mov	r9, r4
 8014e24:	460c      	mov	r4, r1
 8014e26:	e045      	b.n	8014eb4 <stroke_path+0x874>
 8014e28:	20082f68 	.word	0x20082f68
 8014e2c:	20082f70 	.word	0x20082f70
 8014e30:	20000064 	.word	0x20000064
 8014e34:	ff000100 	.word	0xff000100
 8014e38:	20082f74 	.word	0x20082f74
 8014e3c:	20082f78 	.word	0x20082f78
 8014e40:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 8014e44:	ee78 8a81 	vadd.f32	s17, s17, s2
 8014e48:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014e4c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014e4e:	ed91 9a00 	vldr	s18, [r1]
 8014e52:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 8014e56:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014e5a:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014e5e:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8014e62:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 8014e66:	f8da 3000 	ldr.w	r3, [sl]
 8014e6a:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 8014e6e:	7f1a      	ldrb	r2, [r3, #28]
 8014e70:	2a00      	cmp	r2, #0
 8014e72:	f040 80d0 	bne.w	8015016 <stroke_path+0x9d6>
 8014e76:	4ac8      	ldr	r2, [pc, #800]	@ (8015198 <stroke_path+0xb58>)
 8014e78:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8014e7c:	6812      	ldr	r2, [r2, #0]
 8014e7e:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8014e82:	2a00      	cmp	r2, #0
 8014e84:	f000 82db 	beq.w	801543e <stroke_path+0xdfe>
 8014e88:	eef0 1a49 	vmov.f32	s3, s18
 8014e8c:	eeb0 1a68 	vmov.f32	s2, s17
 8014e90:	eef0 0a4a 	vmov.f32	s1, s20
 8014e94:	eeb0 0a69 	vmov.f32	s0, s19
 8014e98:	f7fd fd1e 	bl	80128d8 <raster_stroked_line_>
 8014e9c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014ea0:	9b02      	ldr	r3, [sp, #8]
 8014ea2:	3401      	adds	r4, #1
 8014ea4:	429c      	cmp	r4, r3
 8014ea6:	e886 0003 	stmia.w	r6, {r0, r1}
 8014eaa:	f000 8106 	beq.w	80150ba <stroke_path+0xa7a>
 8014eae:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8014eb2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014eb4:	0090      	lsls	r0, r2, #2
 8014eb6:	1d01      	adds	r1, r0, #4
 8014eb8:	4419      	add	r1, r3
 8014eba:	9d03      	ldr	r5, [sp, #12]
 8014ebc:	4403      	add	r3, r0
 8014ebe:	1c50      	adds	r0, r2, #1
 8014ec0:	9009      	str	r0, [sp, #36]	@ 0x24
 8014ec2:	3202      	adds	r2, #2
 8014ec4:	edd3 8a00 	vldr	s17, [r3]
 8014ec8:	2d00      	cmp	r5, #0
 8014eca:	d1b9      	bne.n	8014e40 <stroke_path+0x800>
 8014ecc:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014ed0:	9209      	str	r2, [sp, #36]	@ 0x24
 8014ed2:	ed91 9a00 	vldr	s18, [r1]
 8014ed6:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014eda:	e7c0      	b.n	8014e5e <stroke_path+0x81e>
 8014edc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014ede:	2a00      	cmp	r2, #0
 8014ee0:	d14d      	bne.n	8014f7e <stroke_path+0x93e>
 8014ee2:	2506      	movs	r5, #6
 8014ee4:	e646      	b.n	8014b74 <stroke_path+0x534>
 8014ee6:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014eea:	9109      	str	r1, [sp, #36]	@ 0x24
 8014eec:	edd2 7a00 	vldr	s15, [r2]
 8014ef0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014ef4:	e418      	b.n	8014728 <stroke_path+0xe8>
 8014ef6:	9009      	str	r0, [sp, #36]	@ 0x24
 8014ef8:	ed95 7a00 	vldr	s14, [r5]
 8014efc:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014f00:	3102      	adds	r1, #2
 8014f02:	9109      	str	r1, [sp, #36]	@ 0x24
 8014f04:	edd5 7a01 	vldr	s15, [r5, #4]
 8014f08:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014f0c:	f1b8 0f00 	cmp.w	r8, #0
 8014f10:	f43f af46 	beq.w	8014da0 <stroke_path+0x760>
 8014f14:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 8014f18:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8014f1c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014f20:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014f24:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014f28:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014f2c:	e738      	b.n	8014da0 <stroke_path+0x760>
 8014f2e:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014f32:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f34:	f1b8 0f00 	cmp.w	r8, #0
 8014f38:	d02e      	beq.n	8014f98 <stroke_path+0x958>
 8014f3a:	ed9c 7a00 	vldr	s14, [ip]
 8014f3e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014f42:	ee76 6a87 	vadd.f32	s13, s13, s14
 8014f46:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f4a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f4e:	f7ff bbeb 	b.w	8014728 <stroke_path+0xe8>
 8014f52:	4b91      	ldr	r3, [pc, #580]	@ (8015198 <stroke_path+0xb58>)
 8014f54:	eddd 8a0b 	vldr	s17, [sp, #44]	@ 0x2c
 8014f58:	681b      	ldr	r3, [r3, #0]
 8014f5a:	ed9d 9a0c 	vldr	s18, [sp, #48]	@ 0x30
 8014f5e:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014f62:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8014f66:	b333      	cbz	r3, 8014fb6 <stroke_path+0x976>
 8014f68:	eef0 1a4a 	vmov.f32	s3, s20
 8014f6c:	eeb0 1a69 	vmov.f32	s2, s19
 8014f70:	eef0 0a49 	vmov.f32	s1, s18
 8014f74:	eeb0 0a68 	vmov.f32	s0, s17
 8014f78:	f7fd fcae 	bl	80128d8 <raster_stroked_line_>
 8014f7c:	e414      	b.n	80147a8 <stroke_path+0x168>
 8014f7e:	4a87      	ldr	r2, [pc, #540]	@ (801519c <stroke_path+0xb5c>)
 8014f80:	2506      	movs	r5, #6
 8014f82:	6812      	ldr	r2, [r2, #0]
 8014f84:	2a00      	cmp	r2, #0
 8014f86:	bf14      	ite	ne
 8014f88:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014f8c:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8014f90:	e5f0      	b.n	8014b74 <stroke_path+0x534>
 8014f92:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014f96:	e68b      	b.n	8014cb0 <stroke_path+0x670>
 8014f98:	eddc 6a00 	vldr	s13, [ip]
 8014f9c:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014fa0:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014fa4:	f7ff bbc0 	b.w	8014728 <stroke_path+0xe8>
 8014fa8:	2300      	movs	r3, #0
 8014faa:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014fae:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014fb2:	f7ff bbd7 	b.w	8014764 <stroke_path+0x124>
 8014fb6:	4d7a      	ldr	r5, [pc, #488]	@ (80151a0 <stroke_path+0xb60>)
 8014fb8:	497a      	ldr	r1, [pc, #488]	@ (80151a4 <stroke_path+0xb64>)
 8014fba:	682a      	ldr	r2, [r5, #0]
 8014fbc:	7808      	ldrb	r0, [r1, #0]
 8014fbe:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8014fc2:	2b00      	cmp	r3, #0
 8014fc4:	bf18      	it	ne
 8014fc6:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 8014fca:	2801      	cmp	r0, #1
 8014fcc:	ea04 0403 	and.w	r4, r4, r3
 8014fd0:	f000 8230 	beq.w	8015434 <stroke_path+0xdf4>
 8014fd4:	2005      	movs	r0, #5
 8014fd6:	f008 fe85 	bl	801dce4 <nema_cl_get_space>
 8014fda:	2800      	cmp	r0, #0
 8014fdc:	f43f abe4 	beq.w	80147a8 <stroke_path+0x168>
 8014fe0:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8014fe4:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8014fe8:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8014fec:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014ff0:	4b6d      	ldr	r3, [pc, #436]	@ (80151a8 <stroke_path+0xb68>)
 8014ff2:	f044 040a 	orr.w	r4, r4, #10
 8014ff6:	6244      	str	r4, [r0, #36]	@ 0x24
 8014ff8:	edc0 8a01 	vstr	s17, [r0, #4]
 8014ffc:	ed80 9a03 	vstr	s18, [r0, #12]
 8015000:	edc0 9a05 	vstr	s19, [r0, #20]
 8015004:	ed80 aa07 	vstr	s20, [r0, #28]
 8015008:	6006      	str	r6, [r0, #0]
 801500a:	6085      	str	r5, [r0, #8]
 801500c:	6101      	str	r1, [r0, #16]
 801500e:	6182      	str	r2, [r0, #24]
 8015010:	6203      	str	r3, [r0, #32]
 8015012:	f7ff bbc9 	b.w	80147a8 <stroke_path+0x168>
 8015016:	4a65      	ldr	r2, [pc, #404]	@ (80151ac <stroke_path+0xb6c>)
 8015018:	4b65      	ldr	r3, [pc, #404]	@ (80151b0 <stroke_path+0xb70>)
 801501a:	6812      	ldr	r2, [r2, #0]
 801501c:	2007      	movs	r0, #7
 801501e:	9204      	str	r2, [sp, #16]
 8015020:	681d      	ldr	r5, [r3, #0]
 8015022:	f008 fe5f 	bl	801dce4 <nema_cl_get_space>
 8015026:	2800      	cmp	r0, #0
 8015028:	f43f af38 	beq.w	8014e9c <stroke_path+0x85c>
 801502c:	4a5d      	ldr	r2, [pc, #372]	@ (80151a4 <stroke_path+0xb64>)
 801502e:	f8da 3000 	ldr.w	r3, [sl]
 8015032:	7812      	ldrb	r2, [r2, #0]
 8015034:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015036:	2a01      	cmp	r2, #1
 8015038:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801503c:	d104      	bne.n	8015048 <stroke_path+0xa08>
 801503e:	4a59      	ldr	r2, [pc, #356]	@ (80151a4 <stroke_path+0xb64>)
 8015040:	6852      	ldr	r2, [r2, #4]
 8015042:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015046:	4313      	orrs	r3, r2
 8015048:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801504c:	6002      	str	r2, [r0, #0]
 801504e:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 8015052:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8015056:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801505a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801505e:	6082      	str	r2, [r0, #8]
 8015060:	edc0 7a01 	vstr	s15, [r0, #4]
 8015064:	f8c0 e018 	str.w	lr, [r0, #24]
 8015068:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 801506c:	f8c0 c010 	str.w	ip, [r0, #16]
 8015070:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015074:	f043 0304 	orr.w	r3, r3, #4
 8015078:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 801507c:	6343      	str	r3, [r0, #52]	@ 0x34
 801507e:	9b04      	ldr	r3, [sp, #16]
 8015080:	f8c0 c014 	str.w	ip, [r0, #20]
 8015084:	6243      	str	r3, [r0, #36]	@ 0x24
 8015086:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015088:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801508c:	61c3      	str	r3, [r0, #28]
 801508e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015092:	4a45      	ldr	r2, [pc, #276]	@ (80151a8 <stroke_path+0xb68>)
 8015094:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015096:	6302      	str	r2, [r0, #48]	@ 0x30
 8015098:	6201      	str	r1, [r0, #32]
 801509a:	6283      	str	r3, [r0, #40]	@ 0x28
 801509c:	e6fe      	b.n	8014e9c <stroke_path+0x85c>
 801509e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80150a0:	2a00      	cmp	r2, #0
 80150a2:	f000 817a 	beq.w	801539a <stroke_path+0xd5a>
 80150a6:	4a3d      	ldr	r2, [pc, #244]	@ (801519c <stroke_path+0xb5c>)
 80150a8:	2507      	movs	r5, #7
 80150aa:	6812      	ldr	r2, [r2, #0]
 80150ac:	2a00      	cmp	r2, #0
 80150ae:	bf14      	ite	ne
 80150b0:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 80150b4:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 80150b8:	e5fa      	b.n	8014cb0 <stroke_path+0x670>
 80150ba:	464c      	mov	r4, r9
 80150bc:	46c1      	mov	r9, r8
 80150be:	f8dd a014 	ldr.w	sl, [sp, #20]
 80150c2:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 80150c6:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 80150ca:	ee77 7ae8 	vsub.f32	s15, s15, s17
 80150ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80150d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80150d6:	ed9d 9a18 	vldr	s18, [sp, #96]	@ 0x60
 80150da:	d108      	bne.n	80150ee <stroke_path+0xaae>
 80150dc:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80150e0:	ee77 7ac9 	vsub.f32	s15, s15, s18
 80150e4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80150e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80150ec:	d04c      	beq.n	8015188 <stroke_path+0xb48>
 80150ee:	e897 0003 	ldmia.w	r7, {r0, r1}
 80150f2:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 80150f6:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 80150fa:	4d29      	ldr	r5, [pc, #164]	@ (80151a0 <stroke_path+0xb60>)
 80150fc:	e886 0003 	stmia.w	r6, {r0, r1}
 8015100:	682b      	ldr	r3, [r5, #0]
 8015102:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015106:	7f1a      	ldrb	r2, [r3, #28]
 8015108:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 801510c:	2a00      	cmp	r2, #0
 801510e:	f000 814b 	beq.w	80153a8 <stroke_path+0xd68>
 8015112:	4a26      	ldr	r2, [pc, #152]	@ (80151ac <stroke_path+0xb6c>)
 8015114:	4b26      	ldr	r3, [pc, #152]	@ (80151b0 <stroke_path+0xb70>)
 8015116:	2007      	movs	r0, #7
 8015118:	6817      	ldr	r7, [r2, #0]
 801511a:	681e      	ldr	r6, [r3, #0]
 801511c:	f008 fde2 	bl	801dce4 <nema_cl_get_space>
 8015120:	2800      	cmp	r0, #0
 8015122:	d031      	beq.n	8015188 <stroke_path+0xb48>
 8015124:	4a1f      	ldr	r2, [pc, #124]	@ (80151a4 <stroke_path+0xb64>)
 8015126:	682b      	ldr	r3, [r5, #0]
 8015128:	7811      	ldrb	r1, [r2, #0]
 801512a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801512c:	2901      	cmp	r1, #1
 801512e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015132:	d103      	bne.n	801513c <stroke_path+0xafc>
 8015134:	6852      	ldr	r2, [r2, #4]
 8015136:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 801513a:	4313      	orrs	r3, r2
 801513c:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015140:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015144:	f44f 754d 	mov.w	r5, #820	@ 0x334
 8015148:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801514c:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8015150:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015154:	f8c0 e000 	str.w	lr, [r0]
 8015158:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 801515c:	f8c0 c008 	str.w	ip, [r0, #8]
 8015160:	f8c0 e004 	str.w	lr, [r0, #4]
 8015164:	6185      	str	r5, [r0, #24]
 8015166:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015168:	6101      	str	r1, [r0, #16]
 801516a:	60c5      	str	r5, [r0, #12]
 801516c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801516e:	f043 0304 	orr.w	r3, r3, #4
 8015172:	6141      	str	r1, [r0, #20]
 8015174:	6343      	str	r3, [r0, #52]	@ 0x34
 8015176:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015178:	4b0b      	ldr	r3, [pc, #44]	@ (80151a8 <stroke_path+0xb68>)
 801517a:	6247      	str	r7, [r0, #36]	@ 0x24
 801517c:	62c6      	str	r6, [r0, #44]	@ 0x2c
 801517e:	61c1      	str	r1, [r0, #28]
 8015180:	f8c0 8020 	str.w	r8, [r0, #32]
 8015184:	6282      	str	r2, [r0, #40]	@ 0x28
 8015186:	6303      	str	r3, [r0, #48]	@ 0x30
 8015188:	2300      	movs	r3, #0
 801518a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801518e:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015192:	f7ff baed 	b.w	8014770 <stroke_path+0x130>
 8015196:	bf00      	nop
 8015198:	20082f70 	.word	0x20082f70
 801519c:	20082f6c 	.word	0x20082f6c
 80151a0:	20082f68 	.word	0x20082f68
 80151a4:	20000064 	.word	0x20000064
 80151a8:	ff000100 	.word	0xff000100
 80151ac:	20082f74 	.word	0x20082f74
 80151b0:	20082f78 	.word	0x20082f78
 80151b4:	f1ae 0705 	sub.w	r7, lr, #5
 80151b8:	2f03      	cmp	r7, #3
 80151ba:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 80151be:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80151c2:	d80b      	bhi.n	80151dc <stroke_path+0xb9c>
 80151c4:	ee76 6aa6 	vadd.f32	s13, s13, s13
 80151c8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80151cc:	ed9d 6a15 	vldr	s12, [sp, #84]	@ 0x54
 80151d0:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 80151d4:	ee76 6ac6 	vsub.f32	s13, s13, s12
 80151d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80151dc:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80151e0:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80151e4:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 80151e8:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 80151ec:	e5df      	b.n	8014dae <stroke_path+0x76e>
 80151ee:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80151f2:	4cab      	ldr	r4, [pc, #684]	@ (80154a0 <stroke_path+0xe60>)
 80151f4:	4dab      	ldr	r5, [pc, #684]	@ (80154a4 <stroke_path+0xe64>)
 80151f6:	7821      	ldrb	r1, [r4, #0]
 80151f8:	ee39 7acc 	vsub.f32	s14, s19, s24
 80151fc:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8015200:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8015204:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8015208:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 801520c:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8015210:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8015214:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8015218:	ee26 6a07 	vmul.f32	s12, s12, s14
 801521c:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8015220:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8015224:	ee24 4a28 	vmul.f32	s8, s8, s17
 8015228:	ee25 5a28 	vmul.f32	s10, s10, s17
 801522c:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8015230:	ee35 ba84 	vadd.f32	s22, s11, s8
 8015234:	ee75 ca24 	vadd.f32	s25, s10, s9
 8015238:	ee27 7a07 	vmul.f32	s14, s14, s14
 801523c:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015240:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8015244:	ee2b ba28 	vmul.f32	s22, s22, s17
 8015248:	ee6c caa8 	vmul.f32	s25, s25, s17
 801524c:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8015250:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015254:	b339      	cbz	r1, 80152a6 <stroke_path+0xc66>
 8015256:	eef4 6ae7 	vcmpe.f32	s13, s15
 801525a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801525e:	bfcc      	ite	gt
 8015260:	2301      	movgt	r3, #1
 8015262:	2300      	movle	r3, #0
 8015264:	b353      	cbz	r3, 80152bc <stroke_path+0xc7c>
 8015266:	682b      	ldr	r3, [r5, #0]
 8015268:	2b09      	cmp	r3, #9
 801526a:	dc12      	bgt.n	8015292 <stroke_path+0xc52>
 801526c:	488e      	ldr	r0, [pc, #568]	@ (80154a8 <stroke_path+0xe68>)
 801526e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8015272:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8015276:	ed82 ba00 	vstr	s22, [r2]
 801527a:	edc2 ca01 	vstr	s25, [r2, #4]
 801527e:	ed82 4a02 	vstr	s8, [r2, #8]
 8015282:	edc2 4a03 	vstr	s9, [r2, #12]
 8015286:	edc2 9a04 	vstr	s19, [r2, #16]
 801528a:	ed82 9a05 	vstr	s18, [r2, #20]
 801528e:	3301      	adds	r3, #1
 8015290:	602b      	str	r3, [r5, #0]
 8015292:	3601      	adds	r6, #1
 8015294:	eeb0 9a6c 	vmov.f32	s18, s25
 8015298:	eef0 9a4b 	vmov.f32	s19, s22
 801529c:	eeb0 aa45 	vmov.f32	s20, s10
 80152a0:	eef0 aa65 	vmov.f32	s21, s11
 80152a4:	e7a8      	b.n	80151f8 <stroke_path+0xbb8>
 80152a6:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80152aa:	eef4 7ae6 	vcmpe.f32	s15, s13
 80152ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152b2:	bf4c      	ite	mi
 80152b4:	2301      	movmi	r3, #1
 80152b6:	2300      	movpl	r3, #0
 80152b8:	2b00      	cmp	r3, #0
 80152ba:	d1d4      	bne.n	8015266 <stroke_path+0xc26>
 80152bc:	eef0 1a6c 	vmov.f32	s3, s25
 80152c0:	eeb0 1a4b 	vmov.f32	s2, s22
 80152c4:	eef0 0a6b 	vmov.f32	s1, s23
 80152c8:	eeb0 0a4c 	vmov.f32	s0, s24
 80152cc:	f7fd fb04 	bl	80128d8 <raster_stroked_line_>
 80152d0:	eef0 1a49 	vmov.f32	s3, s18
 80152d4:	eeb0 1a69 	vmov.f32	s2, s19
 80152d8:	eef0 0a6c 	vmov.f32	s1, s25
 80152dc:	eeb0 0a4b 	vmov.f32	s0, s22
 80152e0:	f7fd fafa 	bl	80128d8 <raster_stroked_line_>
 80152e4:	682b      	ldr	r3, [r5, #0]
 80152e6:	3e01      	subs	r6, #1
 80152e8:	b193      	cbz	r3, 8015310 <stroke_path+0xcd0>
 80152ea:	3b01      	subs	r3, #1
 80152ec:	496e      	ldr	r1, [pc, #440]	@ (80154a8 <stroke_path+0xe68>)
 80152ee:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80152f2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80152f6:	ed92 ca00 	vldr	s24, [r2]
 80152fa:	edd2 ba01 	vldr	s23, [r2, #4]
 80152fe:	edd2 aa02 	vldr	s21, [r2, #8]
 8015302:	ed92 aa03 	vldr	s20, [r2, #12]
 8015306:	edd2 9a04 	vldr	s19, [r2, #16]
 801530a:	ed92 9a05 	vldr	s18, [r2, #20]
 801530e:	602b      	str	r3, [r5, #0]
 8015310:	2e00      	cmp	r6, #0
 8015312:	f43f aa49 	beq.w	80147a8 <stroke_path+0x168>
 8015316:	7821      	ldrb	r1, [r4, #0]
 8015318:	e76e      	b.n	80151f8 <stroke_path+0xbb8>
 801531a:	a808      	add	r0, sp, #32
 801531c:	f7fd ff3c 	bl	8013198 <fill_arc.isra.7>
 8015320:	4604      	mov	r4, r0
 8015322:	2800      	cmp	r0, #0
 8015324:	f43f aa40 	beq.w	80147a8 <stroke_path+0x168>
 8015328:	f007 fb84 	bl	801ca34 <nema_vg_set_error>
 801532c:	f7ff ba4b 	b.w	80147c6 <stroke_path+0x186>
 8015330:	f1ae 0705 	sub.w	r7, lr, #5
 8015334:	2f03      	cmp	r7, #3
 8015336:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 801533a:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 801533e:	d91f      	bls.n	8015380 <stroke_path+0xd40>
 8015340:	eeb0 7a65 	vmov.f32	s14, s11
 8015344:	eef0 7a45 	vmov.f32	s15, s10
 8015348:	ed8d 7a10 	vstr	s14, [sp, #64]	@ 0x40
 801534c:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8015350:	9009      	str	r0, [sp, #36]	@ 0x24
 8015352:	ed95 7a00 	vldr	s14, [r5]
 8015356:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801535a:	3102      	adds	r1, #2
 801535c:	9109      	str	r1, [sp, #36]	@ 0x24
 801535e:	edd5 7a01 	vldr	s15, [r5, #4]
 8015362:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015366:	f1b8 0f00 	cmp.w	r8, #0
 801536a:	f43f ad19 	beq.w	8014da0 <stroke_path+0x760>
 801536e:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015372:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015376:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801537a:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801537e:	e50f      	b.n	8014da0 <stroke_path+0x760>
 8015380:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015384:	ee75 7a05 	vadd.f32	s15, s10, s10
 8015388:	ee35 6aa5 	vadd.f32	s12, s11, s11
 801538c:	eddd 6a16 	vldr	s13, [sp, #88]	@ 0x58
 8015390:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015394:	ee36 7a66 	vsub.f32	s14, s12, s13
 8015398:	e7d6      	b.n	8015348 <stroke_path+0xd08>
 801539a:	2507      	movs	r5, #7
 801539c:	e488      	b.n	8014cb0 <stroke_path+0x670>
 801539e:	ee18 aa10 	vmov	sl, s16
 80153a2:	eef0 8a48 	vmov.f32	s17, s16
 80153a6:	e439      	b.n	8014c1c <stroke_path+0x5dc>
 80153a8:	4a40      	ldr	r2, [pc, #256]	@ (80154ac <stroke_path+0xe6c>)
 80153aa:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 80153ae:	6812      	ldr	r2, [r2, #0]
 80153b0:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 80153b4:	2a00      	cmp	r2, #0
 80153b6:	f000 81ac 	beq.w	8015712 <stroke_path+0x10d2>
 80153ba:	eef0 1a49 	vmov.f32	s3, s18
 80153be:	eeb0 1a68 	vmov.f32	s2, s17
 80153c2:	eef0 0a4a 	vmov.f32	s1, s20
 80153c6:	eeb0 0a69 	vmov.f32	s0, s19
 80153ca:	f7fd fa85 	bl	80128d8 <raster_stroked_line_>
 80153ce:	e6db      	b.n	8015188 <stroke_path+0xb48>
 80153d0:	9009      	str	r0, [sp, #36]	@ 0x24
 80153d2:	682a      	ldr	r2, [r5, #0]
 80153d4:	1c8b      	adds	r3, r1, #2
 80153d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80153d8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80153da:	686b      	ldr	r3, [r5, #4]
 80153dc:	3103      	adds	r1, #3
 80153de:	9310      	str	r3, [sp, #64]	@ 0x40
 80153e0:	9109      	str	r1, [sp, #36]	@ 0x24
 80153e2:	4b33      	ldr	r3, [pc, #204]	@ (80154b0 <stroke_path+0xe70>)
 80153e4:	68aa      	ldr	r2, [r5, #8]
 80153e6:	edd3 0a00 	vldr	s1, [r3]
 80153ea:	ed93 0a03 	vldr	s0, [r3, #12]
 80153ee:	9211      	str	r2, [sp, #68]	@ 0x44
 80153f0:	f01b fedc 	bl	80311ac <atan2f>
 80153f4:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 80153f8:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80153fc:	ee77 7a80 	vadd.f32	s15, s15, s0
 8015400:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015402:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8015406:	f8dd e04c 	ldr.w	lr, [sp, #76]	@ 0x4c
 801540a:	008d      	lsls	r5, r1, #2
 801540c:	1c48      	adds	r0, r1, #1
 801540e:	4602      	mov	r2, r0
 8015410:	9502      	str	r5, [sp, #8]
 8015412:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8015416:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801541a:	eb03 0c05 	add.w	ip, r3, r5
 801541e:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 8015422:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8015426:	f7ff b96a 	b.w	80146fe <stroke_path+0xbe>
 801542a:	6852      	ldr	r2, [r2, #4]
 801542c:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015430:	4313      	orrs	r3, r2
 8015432:	e408      	b.n	8014c46 <stroke_path+0x606>
 8015434:	684b      	ldr	r3, [r1, #4]
 8015436:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801543a:	431c      	orrs	r4, r3
 801543c:	e5ca      	b.n	8014fd4 <stroke_path+0x994>
 801543e:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015442:	2d00      	cmp	r5, #0
 8015444:	bf18      	it	ne
 8015446:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801544a:	4b1a      	ldr	r3, [pc, #104]	@ (80154b4 <stroke_path+0xe74>)
 801544c:	4015      	ands	r5, r2
 801544e:	781b      	ldrb	r3, [r3, #0]
 8015450:	2b01      	cmp	r3, #1
 8015452:	d104      	bne.n	801545e <stroke_path+0xe1e>
 8015454:	4b17      	ldr	r3, [pc, #92]	@ (80154b4 <stroke_path+0xe74>)
 8015456:	685b      	ldr	r3, [r3, #4]
 8015458:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801545c:	431d      	orrs	r5, r3
 801545e:	2005      	movs	r0, #5
 8015460:	f008 fc40 	bl	801dce4 <nema_cl_get_space>
 8015464:	2800      	cmp	r0, #0
 8015466:	f43f ad19 	beq.w	8014e9c <stroke_path+0x85c>
 801546a:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 801546e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015472:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015476:	f44f 734d 	mov.w	r3, #820	@ 0x334
 801547a:	f045 050a 	orr.w	r5, r5, #10
 801547e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015480:	4d0d      	ldr	r5, [pc, #52]	@ (80154b8 <stroke_path+0xe78>)
 8015482:	edc0 9a01 	vstr	s19, [r0, #4]
 8015486:	ed80 aa03 	vstr	s20, [r0, #12]
 801548a:	edc0 8a05 	vstr	s17, [r0, #20]
 801548e:	ed80 9a07 	vstr	s18, [r0, #28]
 8015492:	6205      	str	r5, [r0, #32]
 8015494:	f8c0 c000 	str.w	ip, [r0]
 8015498:	6081      	str	r1, [r0, #8]
 801549a:	6102      	str	r2, [r0, #16]
 801549c:	6183      	str	r3, [r0, #24]
 801549e:	e4fd      	b.n	8014e9c <stroke_path+0x85c>
 80154a0:	20082f7c 	.word	0x20082f7c
 80154a4:	20083104 	.word	0x20083104
 80154a8:	20083014 	.word	0x20083014
 80154ac:	20082f70 	.word	0x20082f70
 80154b0:	20082fec 	.word	0x20082fec
 80154b4:	20000064 	.word	0x20000064
 80154b8:	ff000100 	.word	0xff000100
 80154bc:	4626      	mov	r6, r4
 80154be:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80154c2:	eddd da0b 	vldr	s27, [sp, #44]	@ 0x2c
 80154c6:	ed9d da0c 	vldr	s26, [sp, #48]	@ 0x30
 80154ca:	eddd ca0f 	vldr	s25, [sp, #60]	@ 0x3c
 80154ce:	ed9d ca10 	vldr	s24, [sp, #64]	@ 0x40
 80154d2:	eddd ba11 	vldr	s23, [sp, #68]	@ 0x44
 80154d6:	ed9d ba12 	vldr	s22, [sp, #72]	@ 0x48
 80154da:	eddd aa0d 	vldr	s21, [sp, #52]	@ 0x34
 80154de:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 80154e2:	4dc5      	ldr	r5, [pc, #788]	@ (80157f8 <stroke_path+0x11b8>)
 80154e4:	ee7d 4aac 	vadd.f32	s9, s27, s25
 80154e8:	ee7c 7aab 	vadd.f32	s15, s25, s23
 80154ec:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 80154f0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80154f4:	ee64 4aa8 	vmul.f32	s9, s9, s17
 80154f8:	ee25 5a28 	vmul.f32	s10, s10, s17
 80154fc:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8015500:	ee37 6a85 	vadd.f32	s12, s15, s10
 8015504:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 8015508:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 801550c:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 8015510:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8015514:	ee24 4a28 	vmul.f32	s8, s8, s17
 8015518:	ee65 5aa8 	vmul.f32	s11, s11, s17
 801551c:	ee34 3a27 	vadd.f32	s6, s8, s15
 8015520:	ee63 3aa8 	vmul.f32	s7, s7, s17
 8015524:	ee26 6a28 	vmul.f32	s12, s12, s17
 8015528:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801552c:	ee33 9a86 	vadd.f32	s18, s7, s12
 8015530:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8015534:	ee23 3a28 	vmul.f32	s6, s6, s17
 8015538:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801553c:	ee29 9a28 	vmul.f32	s18, s18, s17
 8015540:	ee27 7a28 	vmul.f32	s14, s14, s17
 8015544:	ee73 9a27 	vadd.f32	s19, s6, s15
 8015548:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801554c:	ee37 7a49 	vsub.f32	s14, s14, s18
 8015550:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8015554:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8015558:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801555c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8015560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015564:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8015568:	bf48      	it	mi
 801556a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801556e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015572:	bf48      	it	mi
 8015574:	eef1 6a66 	vnegmi.f32	s13, s13
 8015578:	b94e      	cbnz	r6, 801558e <stroke_path+0xf4e>
 801557a:	eeb4 7ae8 	vcmpe.f32	s14, s17
 801557e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015582:	d504      	bpl.n	801558e <stroke_path+0xf4e>
 8015584:	eef4 6ae8 	vcmpe.f32	s13, s17
 8015588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801558c:	d424      	bmi.n	80155d8 <stroke_path+0xf98>
 801558e:	682a      	ldr	r2, [r5, #0]
 8015590:	2a09      	cmp	r2, #9
 8015592:	dc21      	bgt.n	80155d8 <stroke_path+0xf98>
 8015594:	4999      	ldr	r1, [pc, #612]	@ (80157fc <stroke_path+0x11bc>)
 8015596:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801559a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801559e:	3201      	adds	r2, #1
 80155a0:	edc3 aa04 	vstr	s21, [r3, #16]
 80155a4:	ed83 aa05 	vstr	s20, [r3, #20]
 80155a8:	3401      	adds	r4, #1
 80155aa:	eeb0 ba43 	vmov.f32	s22, s6
 80155ae:	eef0 ba63 	vmov.f32	s23, s7
 80155b2:	eeb0 ca44 	vmov.f32	s24, s8
 80155b6:	eef0 ca64 	vmov.f32	s25, s9
 80155ba:	ed83 6a00 	vstr	s12, [r3]
 80155be:	edc3 7a01 	vstr	s15, [r3, #4]
 80155c2:	ed83 5a02 	vstr	s10, [r3, #8]
 80155c6:	edc3 5a03 	vstr	s11, [r3, #12]
 80155ca:	602a      	str	r2, [r5, #0]
 80155cc:	eeb0 aa69 	vmov.f32	s20, s19
 80155d0:	eef0 aa49 	vmov.f32	s21, s18
 80155d4:	2600      	movs	r6, #0
 80155d6:	e785      	b.n	80154e4 <stroke_path+0xea4>
 80155d8:	eef0 1a69 	vmov.f32	s3, s19
 80155dc:	eeb0 1a49 	vmov.f32	s2, s18
 80155e0:	eef0 0a4d 	vmov.f32	s1, s26
 80155e4:	eeb0 0a6d 	vmov.f32	s0, s27
 80155e8:	f7fd f976 	bl	80128d8 <raster_stroked_line_>
 80155ec:	eef0 1a4a 	vmov.f32	s3, s20
 80155f0:	eeb0 1a6a 	vmov.f32	s2, s21
 80155f4:	eef0 0a69 	vmov.f32	s1, s19
 80155f8:	eeb0 0a49 	vmov.f32	s0, s18
 80155fc:	f7fd f96c 	bl	80128d8 <raster_stroked_line_>
 8015600:	682a      	ldr	r2, [r5, #0]
 8015602:	3c01      	subs	r4, #1
 8015604:	b1b2      	cbz	r2, 8015634 <stroke_path+0xff4>
 8015606:	3a01      	subs	r2, #1
 8015608:	497c      	ldr	r1, [pc, #496]	@ (80157fc <stroke_path+0x11bc>)
 801560a:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801560e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8015612:	eeb0 da4a 	vmov.f32	s26, s20
 8015616:	eef0 da6a 	vmov.f32	s27, s21
 801561a:	edd3 ca00 	vldr	s25, [r3]
 801561e:	ed93 ca01 	vldr	s24, [r3, #4]
 8015622:	edd3 ba02 	vldr	s23, [r3, #8]
 8015626:	ed93 ba03 	vldr	s22, [r3, #12]
 801562a:	ed93 aa05 	vldr	s20, [r3, #20]
 801562e:	edd3 aa04 	vldr	s21, [r3, #16]
 8015632:	602a      	str	r2, [r5, #0]
 8015634:	2c00      	cmp	r4, #0
 8015636:	f47f af55 	bne.w	80154e4 <stroke_path+0xea4>
 801563a:	f7ff b8b5 	b.w	80147a8 <stroke_path+0x168>
 801563e:	f1ba 0f0b 	cmp.w	sl, #11
 8015642:	f47f abb4 	bne.w	8014dae <stroke_path+0x76e>
 8015646:	9009      	str	r0, [sp, #36]	@ 0x24
 8015648:	eddc 7a00 	vldr	s15, [ip]
 801564c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015650:	ee17 1a90 	vmov	r1, s15
 8015654:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015658:	1049      	asrs	r1, r1, #1
 801565a:	2900      	cmp	r1, #0
 801565c:	9102      	str	r1, [sp, #8]
 801565e:	f340 8132 	ble.w	80158c6 <stroke_path+0x1286>
 8015662:	2100      	movs	r1, #0
 8015664:	4d66      	ldr	r5, [pc, #408]	@ (8015800 <stroke_path+0x11c0>)
 8015666:	f8cd a014 	str.w	sl, [sp, #20]
 801566a:	f8cd 800c 	str.w	r8, [sp, #12]
 801566e:	46aa      	mov	sl, r5
 8015670:	46c8      	mov	r8, r9
 8015672:	46a1      	mov	r9, r4
 8015674:	460c      	mov	r4, r1
 8015676:	e038      	b.n	80156ea <stroke_path+0x10aa>
 8015678:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801567c:	ee78 8a81 	vadd.f32	s17, s17, s2
 8015680:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015684:	9209      	str	r2, [sp, #36]	@ 0x24
 8015686:	ed91 9a00 	vldr	s18, [r1]
 801568a:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801568e:	ee39 9a21 	vadd.f32	s18, s18, s3
 8015692:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8015696:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 801569a:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 801569e:	f8da 3000 	ldr.w	r3, [sl]
 80156a2:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 80156a6:	7f1a      	ldrb	r2, [r3, #28]
 80156a8:	2a00      	cmp	r2, #0
 80156aa:	d161      	bne.n	8015770 <stroke_path+0x1130>
 80156ac:	4a55      	ldr	r2, [pc, #340]	@ (8015804 <stroke_path+0x11c4>)
 80156ae:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 80156b2:	6812      	ldr	r2, [r2, #0]
 80156b4:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 80156b8:	2a00      	cmp	r2, #0
 80156ba:	f000 80d3 	beq.w	8015864 <stroke_path+0x1224>
 80156be:	eef0 1a49 	vmov.f32	s3, s18
 80156c2:	eeb0 1a68 	vmov.f32	s2, s17
 80156c6:	eef0 0a4a 	vmov.f32	s1, s20
 80156ca:	eeb0 0a69 	vmov.f32	s0, s19
 80156ce:	f7fd f903 	bl	80128d8 <raster_stroked_line_>
 80156d2:	e897 0003 	ldmia.w	r7, {r0, r1}
 80156d6:	9b02      	ldr	r3, [sp, #8]
 80156d8:	3401      	adds	r4, #1
 80156da:	429c      	cmp	r4, r3
 80156dc:	e886 0003 	stmia.w	r6, {r0, r1}
 80156e0:	f000 809a 	beq.w	8015818 <stroke_path+0x11d8>
 80156e4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80156e8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80156ea:	0090      	lsls	r0, r2, #2
 80156ec:	1d01      	adds	r1, r0, #4
 80156ee:	4419      	add	r1, r3
 80156f0:	9d03      	ldr	r5, [sp, #12]
 80156f2:	4403      	add	r3, r0
 80156f4:	1c50      	adds	r0, r2, #1
 80156f6:	9009      	str	r0, [sp, #36]	@ 0x24
 80156f8:	3202      	adds	r2, #2
 80156fa:	edd3 8a00 	vldr	s17, [r3]
 80156fe:	2d00      	cmp	r5, #0
 8015700:	d1ba      	bne.n	8015678 <stroke_path+0x1038>
 8015702:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015706:	9209      	str	r2, [sp, #36]	@ 0x24
 8015708:	ed91 9a00 	vldr	s18, [r1]
 801570c:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8015710:	e7c1      	b.n	8015696 <stroke_path+0x1056>
 8015712:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8015714:	493c      	ldr	r1, [pc, #240]	@ (8015808 <stroke_path+0x11c8>)
 8015716:	2a00      	cmp	r2, #0
 8015718:	bf18      	it	ne
 801571a:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 801571e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8015720:	780b      	ldrb	r3, [r1, #0]
 8015722:	4015      	ands	r5, r2
 8015724:	2b01      	cmp	r3, #1
 8015726:	d103      	bne.n	8015730 <stroke_path+0x10f0>
 8015728:	684b      	ldr	r3, [r1, #4]
 801572a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801572e:	431d      	orrs	r5, r3
 8015730:	2005      	movs	r0, #5
 8015732:	f008 fad7 	bl	801dce4 <nema_cl_get_space>
 8015736:	2800      	cmp	r0, #0
 8015738:	f43f ad26 	beq.w	8015188 <stroke_path+0xb48>
 801573c:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8015740:	f44f 7649 	mov.w	r6, #804	@ 0x324
 8015744:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8015748:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801574c:	4b2f      	ldr	r3, [pc, #188]	@ (801580c <stroke_path+0x11cc>)
 801574e:	f045 050a 	orr.w	r5, r5, #10
 8015752:	6245      	str	r5, [r0, #36]	@ 0x24
 8015754:	edc0 9a01 	vstr	s19, [r0, #4]
 8015758:	ed80 aa03 	vstr	s20, [r0, #12]
 801575c:	edc0 8a05 	vstr	s17, [r0, #20]
 8015760:	ed80 9a07 	vstr	s18, [r0, #28]
 8015764:	6007      	str	r7, [r0, #0]
 8015766:	6086      	str	r6, [r0, #8]
 8015768:	6101      	str	r1, [r0, #16]
 801576a:	6182      	str	r2, [r0, #24]
 801576c:	6203      	str	r3, [r0, #32]
 801576e:	e50b      	b.n	8015188 <stroke_path+0xb48>
 8015770:	4a27      	ldr	r2, [pc, #156]	@ (8015810 <stroke_path+0x11d0>)
 8015772:	4b28      	ldr	r3, [pc, #160]	@ (8015814 <stroke_path+0x11d4>)
 8015774:	6812      	ldr	r2, [r2, #0]
 8015776:	2007      	movs	r0, #7
 8015778:	9204      	str	r2, [sp, #16]
 801577a:	681d      	ldr	r5, [r3, #0]
 801577c:	f008 fab2 	bl	801dce4 <nema_cl_get_space>
 8015780:	2800      	cmp	r0, #0
 8015782:	d0a6      	beq.n	80156d2 <stroke_path+0x1092>
 8015784:	4a20      	ldr	r2, [pc, #128]	@ (8015808 <stroke_path+0x11c8>)
 8015786:	f8da 3000 	ldr.w	r3, [sl]
 801578a:	7812      	ldrb	r2, [r2, #0]
 801578c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801578e:	2a01      	cmp	r2, #1
 8015790:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015794:	d104      	bne.n	80157a0 <stroke_path+0x1160>
 8015796:	4a1c      	ldr	r2, [pc, #112]	@ (8015808 <stroke_path+0x11c8>)
 8015798:	6852      	ldr	r2, [r2, #4]
 801579a:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 801579e:	4313      	orrs	r3, r2
 80157a0:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80157a4:	6002      	str	r2, [r0, #0]
 80157a6:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 80157aa:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80157ae:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80157b2:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80157b6:	6082      	str	r2, [r0, #8]
 80157b8:	edc0 7a01 	vstr	s15, [r0, #4]
 80157bc:	f8c0 e018 	str.w	lr, [r0, #24]
 80157c0:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 80157c4:	f8c0 c010 	str.w	ip, [r0, #16]
 80157c8:	f8c0 e00c 	str.w	lr, [r0, #12]
 80157cc:	f043 0304 	orr.w	r3, r3, #4
 80157d0:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 80157d4:	6343      	str	r3, [r0, #52]	@ 0x34
 80157d6:	9b04      	ldr	r3, [sp, #16]
 80157d8:	f8c0 c014 	str.w	ip, [r0, #20]
 80157dc:	6243      	str	r3, [r0, #36]	@ 0x24
 80157de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80157e0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80157e4:	61c3      	str	r3, [r0, #28]
 80157e6:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80157ea:	4a08      	ldr	r2, [pc, #32]	@ (801580c <stroke_path+0x11cc>)
 80157ec:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80157ee:	6302      	str	r2, [r0, #48]	@ 0x30
 80157f0:	6201      	str	r1, [r0, #32]
 80157f2:	6283      	str	r3, [r0, #40]	@ 0x28
 80157f4:	e76d      	b.n	80156d2 <stroke_path+0x1092>
 80157f6:	bf00      	nop
 80157f8:	20083104 	.word	0x20083104
 80157fc:	20083014 	.word	0x20083014
 8015800:	20082f68 	.word	0x20082f68
 8015804:	20082f70 	.word	0x20082f70
 8015808:	20000064 	.word	0x20000064
 801580c:	ff000100 	.word	0xff000100
 8015810:	20082f74 	.word	0x20082f74
 8015814:	20082f78 	.word	0x20082f78
 8015818:	464c      	mov	r4, r9
 801581a:	46c1      	mov	r9, r8
 801581c:	4655      	mov	r5, sl
 801581e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015822:	682b      	ldr	r3, [r5, #0]
 8015824:	7f1b      	ldrb	r3, [r3, #28]
 8015826:	b1b3      	cbz	r3, 8015856 <stroke_path+0x1216>
 8015828:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801582c:	eddd 7a17 	vldr	s15, [sp, #92]	@ 0x5c
 8015830:	ee77 7a67 	vsub.f32	s15, s14, s15
 8015834:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801583c:	d10b      	bne.n	8015856 <stroke_path+0x1216>
 801583e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8015842:	eddd 7a18 	vldr	s15, [sp, #96]	@ 0x60
 8015846:	ee77 7a67 	vsub.f32	s15, s14, s15
 801584a:	eef5 7a40 	vcmp.f32	s15, #0.0
 801584e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015852:	f43f ac99 	beq.w	8015188 <stroke_path+0xb48>
 8015856:	2301      	movs	r3, #1
 8015858:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801585c:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015860:	f7fe bf86 	b.w	8014770 <stroke_path+0x130>
 8015864:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015868:	2d00      	cmp	r5, #0
 801586a:	bf18      	it	ne
 801586c:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8015870:	4b16      	ldr	r3, [pc, #88]	@ (80158cc <stroke_path+0x128c>)
 8015872:	4015      	ands	r5, r2
 8015874:	781b      	ldrb	r3, [r3, #0]
 8015876:	2b01      	cmp	r3, #1
 8015878:	d104      	bne.n	8015884 <stroke_path+0x1244>
 801587a:	4b14      	ldr	r3, [pc, #80]	@ (80158cc <stroke_path+0x128c>)
 801587c:	685b      	ldr	r3, [r3, #4]
 801587e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015882:	431d      	orrs	r5, r3
 8015884:	2005      	movs	r0, #5
 8015886:	f008 fa2d 	bl	801dce4 <nema_cl_get_space>
 801588a:	2800      	cmp	r0, #0
 801588c:	f43f af21 	beq.w	80156d2 <stroke_path+0x1092>
 8015890:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015894:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015898:	f44f 724c 	mov.w	r2, #816	@ 0x330
 801589c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80158a0:	f045 050a 	orr.w	r5, r5, #10
 80158a4:	6245      	str	r5, [r0, #36]	@ 0x24
 80158a6:	4d0a      	ldr	r5, [pc, #40]	@ (80158d0 <stroke_path+0x1290>)
 80158a8:	edc0 9a01 	vstr	s19, [r0, #4]
 80158ac:	ed80 aa03 	vstr	s20, [r0, #12]
 80158b0:	edc0 8a05 	vstr	s17, [r0, #20]
 80158b4:	ed80 9a07 	vstr	s18, [r0, #28]
 80158b8:	6205      	str	r5, [r0, #32]
 80158ba:	f8c0 c000 	str.w	ip, [r0]
 80158be:	6081      	str	r1, [r0, #8]
 80158c0:	6102      	str	r2, [r0, #16]
 80158c2:	6183      	str	r3, [r0, #24]
 80158c4:	e705      	b.n	80156d2 <stroke_path+0x1092>
 80158c6:	4d03      	ldr	r5, [pc, #12]	@ (80158d4 <stroke_path+0x1294>)
 80158c8:	e7ab      	b.n	8015822 <stroke_path+0x11e2>
 80158ca:	bf00      	nop
 80158cc:	20000064 	.word	0x20000064
 80158d0:	ff000100 	.word	0xff000100
 80158d4:	20082f68 	.word	0x20082f68

080158d8 <fill_path_even_odd>:
 80158d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158dc:	ed2d 8b06 	vpush	{d8-d10}
 80158e0:	edd0 6a17 	vldr	s13, [r0, #92]	@ 0x5c
 80158e4:	edd0 7a15 	vldr	s15, [r0, #84]	@ 0x54
 80158e8:	ed90 7a14 	vldr	s14, [r0, #80]	@ 0x50
 80158ec:	ed90 6a16 	vldr	s12, [r0, #88]	@ 0x58
 80158f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80158f4:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80158f8:	ee37 7a06 	vadd.f32	s14, s14, s12
 80158fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015900:	ee27 7a26 	vmul.f32	s14, s14, s13
 8015904:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015908:	ee17 4a90 	vmov	r4, s15
 801590c:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8015910:	ee17 5a90 	vmov	r5, s15
 8015914:	4b93      	ldr	r3, [pc, #588]	@ (8015b64 <fill_path_even_odd+0x28c>)
 8015916:	0424      	lsls	r4, r4, #16
 8015918:	601c      	str	r4, [r3, #0]
 801591a:	4b93      	ldr	r3, [pc, #588]	@ (8015b68 <fill_path_even_odd+0x290>)
 801591c:	b099      	sub	sp, #100	@ 0x64
 801591e:	4682      	mov	sl, r0
 8015920:	042d      	lsls	r5, r5, #16
 8015922:	2002      	movs	r0, #2
 8015924:	601d      	str	r5, [r3, #0]
 8015926:	f008 f9dd 	bl	801dce4 <nema_cl_get_space>
 801592a:	b138      	cbz	r0, 801593c <fill_path_even_odd+0x64>
 801592c:	f44f 7286 	mov.w	r2, #268	@ 0x10c
 8015930:	f44f 7394 	mov.w	r3, #296	@ 0x128
 8015934:	6045      	str	r5, [r0, #4]
 8015936:	60c4      	str	r4, [r0, #12]
 8015938:	6002      	str	r2, [r0, #0]
 801593a:	6083      	str	r3, [r0, #8]
 801593c:	2246      	movs	r2, #70	@ 0x46
 801593e:	2100      	movs	r1, #0
 8015940:	f10d 001a 	add.w	r0, sp, #26
 8015944:	f01c ffbf 	bl	80328c6 <memset>
 8015948:	f240 1201 	movw	r2, #257	@ 0x101
 801594c:	2400      	movs	r4, #0
 801594e:	2301      	movs	r3, #1
 8015950:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015954:	f8da 2000 	ldr.w	r2, [sl]
 8015958:	f88d 301a 	strb.w	r3, [sp, #26]
 801595c:	42a2      	cmp	r2, r4
 801595e:	f8df b218 	ldr.w	fp, [pc, #536]	@ 8015b78 <fill_path_even_odd+0x2a0>
 8015962:	ed9f 9a82 	vldr	s18, [pc, #520]	@ 8015b6c <fill_path_even_odd+0x294>
 8015966:	f240 80f1 	bls.w	8015b4c <fill_path_even_odd+0x274>
 801596a:	f8da 3008 	ldr.w	r3, [sl, #8]
 801596e:	f10d 082c 	add.w	r8, sp, #44	@ 0x2c
 8015972:	5d1d      	ldrb	r5, [r3, r4]
 8015974:	af09      	add	r7, sp, #36	@ 0x24
 8015976:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 801597a:	f005 0310 	and.w	r3, r5, #16
 801597e:	2e01      	cmp	r6, #1
 8015980:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015984:	f104 0901 	add.w	r9, r4, #1
 8015988:	9301      	str	r3, [sp, #4]
 801598a:	e887 0003 	stmia.w	r7, {r0, r1}
 801598e:	f000 815f 	beq.w	8015c50 <fill_path_even_odd+0x378>
 8015992:	0669      	lsls	r1, r5, #25
 8015994:	f000 80f2 	beq.w	8015b7c <fill_path_even_odd+0x2a4>
 8015998:	9907      	ldr	r1, [sp, #28]
 801599a:	f89d c05c 	ldrb.w	ip, [sp, #92]	@ 0x5c
 801599e:	b911      	cbnz	r1, 80159a6 <fill_path_even_odd+0xce>
 80159a0:	2301      	movs	r3, #1
 80159a2:	f88d 3018 	strb.w	r3, [sp, #24]
 80159a6:	2200      	movs	r2, #0
 80159a8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80159ac:	0088      	lsls	r0, r1, #2
 80159ae:	181c      	adds	r4, r3, r0
 80159b0:	9003      	str	r0, [sp, #12]
 80159b2:	2e06      	cmp	r6, #6
 80159b4:	f101 0001 	add.w	r0, r1, #1
 80159b8:	46a6      	mov	lr, r4
 80159ba:	f88d 201a 	strb.w	r2, [sp, #26]
 80159be:	9004      	str	r0, [sp, #16]
 80159c0:	f000 8232 	beq.w	8015e28 <fill_path_even_odd+0x550>
 80159c4:	2e05      	cmp	r6, #5
 80159c6:	f000 837d 	beq.w	80160c4 <fill_path_even_odd+0x7ec>
 80159ca:	2e07      	cmp	r6, #7
 80159cc:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 80159d0:	f000 841e 	beq.w	8016210 <fill_path_even_odd+0x938>
 80159d4:	2e08      	cmp	r6, #8
 80159d6:	f000 828c 	beq.w	8015ef2 <fill_path_even_odd+0x61a>
 80159da:	f005 020f 	and.w	r2, r5, #15
 80159de:	2a09      	cmp	r2, #9
 80159e0:	9202      	str	r2, [sp, #8]
 80159e2:	f000 84cf 	beq.w	8016384 <fill_path_even_odd+0xaac>
 80159e6:	2e04      	cmp	r6, #4
 80159e8:	f040 82ac 	bne.w	8015f44 <fill_path_even_odd+0x66c>
 80159ec:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 80159f0:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80159f4:	9b01      	ldr	r3, [sp, #4]
 80159f6:	9007      	str	r0, [sp, #28]
 80159f8:	edde 7a00 	vldr	s15, [lr]
 80159fc:	2b00      	cmp	r3, #0
 80159fe:	f000 834c 	beq.w	801609a <fill_path_even_odd+0x7c2>
 8015a02:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015a06:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015a0a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015a0e:	f8db 3000 	ldr.w	r3, [fp]
 8015a12:	7f1b      	ldrb	r3, [r3, #28]
 8015a14:	2b00      	cmp	r3, #0
 8015a16:	f000 8249 	beq.w	8015eac <fill_path_even_odd+0x5d4>
 8015a1a:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015a1e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8015a22:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a2a:	d109      	bne.n	8015a40 <fill_path_even_odd+0x168>
 8015a2c:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015a30:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8015a34:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a3c:	f000 840e 	beq.w	801625c <fill_path_even_odd+0x984>
 8015a40:	2301      	movs	r3, #1
 8015a42:	f88d 3019 	strb.w	r3, [sp, #25]
 8015a46:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015a4a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015a4e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015a52:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015a56:	2b00      	cmp	r3, #0
 8015a58:	f040 80f6 	bne.w	8015c48 <fill_path_even_odd+0x370>
 8015a5c:	2e06      	cmp	r6, #6
 8015a5e:	f040 80a7 	bne.w	8015bb0 <fill_path_even_odd+0x2d8>
 8015a62:	f8db 2000 	ldr.w	r2, [fp]
 8015a66:	4b42      	ldr	r3, [pc, #264]	@ (8015b70 <fill_path_even_odd+0x298>)
 8015a68:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015a6a:	4a3f      	ldr	r2, [pc, #252]	@ (8015b68 <fill_path_even_odd+0x290>)
 8015a6c:	781b      	ldrb	r3, [r3, #0]
 8015a6e:	2c00      	cmp	r4, #0
 8015a70:	6816      	ldr	r6, [r2, #0]
 8015a72:	4a3c      	ldr	r2, [pc, #240]	@ (8015b64 <fill_path_even_odd+0x28c>)
 8015a74:	bf18      	it	ne
 8015a76:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015a7a:	2b01      	cmp	r3, #1
 8015a7c:	6815      	ldr	r5, [r2, #0]
 8015a7e:	d104      	bne.n	8015a8a <fill_path_even_odd+0x1b2>
 8015a80:	4b3b      	ldr	r3, [pc, #236]	@ (8015b70 <fill_path_even_odd+0x298>)
 8015a82:	685b      	ldr	r3, [r3, #4]
 8015a84:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015a88:	431c      	orrs	r4, r3
 8015a8a:	2010      	movs	r0, #16
 8015a8c:	f008 f92a 	bl	801dce4 <nema_cl_get_space>
 8015a90:	2800      	cmp	r0, #0
 8015a92:	f000 80d9 	beq.w	8015c48 <fill_path_even_odd+0x370>
 8015a96:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015a9a:	6001      	str	r1, [r0, #0]
 8015a9c:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8015aa0:	f44f 784b 	mov.w	r8, #812	@ 0x32c
 8015aa4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015aa8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015aac:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015ab0:	f8c0 8008 	str.w	r8, [r0, #8]
 8015ab4:	edc0 7a01 	vstr	s15, [r0, #4]
 8015ab8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8015abc:	f8c0 e010 	str.w	lr, [r0, #16]
 8015ac0:	f8c0 800c 	str.w	r8, [r0, #12]
 8015ac4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8015ac8:	f8c0 c018 	str.w	ip, [r0, #24]
 8015acc:	f8c0 e014 	str.w	lr, [r0, #20]
 8015ad0:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015ad4:	6202      	str	r2, [r0, #32]
 8015ad6:	f8c0 e01c 	str.w	lr, [r0, #28]
 8015ada:	6482      	str	r2, [r0, #72]	@ 0x48
 8015adc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015ade:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015ae2:	64c2      	str	r2, [r0, #76]	@ 0x4c
 8015ae4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015ae6:	f44f 77a0 	mov.w	r7, #320	@ 0x140
 8015aea:	6542      	str	r2, [r0, #84]	@ 0x54
 8015aec:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015af0:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8015af4:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8015af8:	6346      	str	r6, [r0, #52]	@ 0x34
 8015afa:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
 8015afe:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8015b00:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015b02:	6283      	str	r3, [r0, #40]	@ 0x28
 8015b04:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015b06:	6503      	str	r3, [r0, #80]	@ 0x50
 8015b08:	4b1a      	ldr	r3, [pc, #104]	@ (8015b74 <fill_path_even_odd+0x29c>)
 8015b0a:	6382      	str	r2, [r0, #56]	@ 0x38
 8015b0c:	f044 0204 	orr.w	r2, r4, #4
 8015b10:	6307      	str	r7, [r0, #48]	@ 0x30
 8015b12:	6581      	str	r1, [r0, #88]	@ 0x58
 8015b14:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015b18:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015b1a:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8015b1e:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015b20:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8015b24:	f44f 7651 	mov.w	r6, #836	@ 0x344
 8015b28:	f044 0407 	orr.w	r4, r4, #7
 8015b2c:	e9c0 341e 	strd	r3, r4, [r0, #120]	@ 0x78
 8015b30:	464c      	mov	r4, r9
 8015b32:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8015b34:	f8c0 c06c 	str.w	ip, [r0, #108]	@ 0x6c
 8015b38:	6745      	str	r5, [r0, #116]	@ 0x74
 8015b3a:	6647      	str	r7, [r0, #100]	@ 0x64
 8015b3c:	6606      	str	r6, [r0, #96]	@ 0x60
 8015b3e:	6681      	str	r1, [r0, #104]	@ 0x68
 8015b40:	6702      	str	r2, [r0, #112]	@ 0x70
 8015b42:	f8da 2000 	ldr.w	r2, [sl]
 8015b46:	42a2      	cmp	r2, r4
 8015b48:	f63f af0f 	bhi.w	801596a <fill_path_even_odd+0x92>
 8015b4c:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8015b50:	2b01      	cmp	r3, #1
 8015b52:	f000 8395 	beq.w	8016280 <fill_path_even_odd+0x9a8>
 8015b56:	2500      	movs	r5, #0
 8015b58:	4628      	mov	r0, r5
 8015b5a:	b019      	add	sp, #100	@ 0x64
 8015b5c:	ecbd 8b06 	vpop	{d8-d10}
 8015b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b64:	20082f78 	.word	0x20082f78
 8015b68:	20082f74 	.word	0x20082f74
 8015b6c:	00000000 	.word	0x00000000
 8015b70:	20000064 	.word	0x20000064
 8015b74:	ff000100 	.word	0xff000100
 8015b78:	20082f68 	.word	0x20082f68
 8015b7c:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015b80:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015b84:	2b01      	cmp	r3, #1
 8015b86:	bf04      	itt	eq
 8015b88:	ee19 2a10 	vmoveq	r2, s18
 8015b8c:	ee19 1a10 	vmoveq	r1, s18
 8015b90:	f04f 0300 	mov.w	r3, #0
 8015b94:	bf1c      	itt	ne
 8015b96:	9915      	ldrne	r1, [sp, #84]	@ 0x54
 8015b98:	9a16      	ldrne	r2, [sp, #88]	@ 0x58
 8015b9a:	2e06      	cmp	r6, #6
 8015b9c:	920c      	str	r2, [sp, #48]	@ 0x30
 8015b9e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015ba0:	9111      	str	r1, [sp, #68]	@ 0x44
 8015ba2:	9212      	str	r2, [sp, #72]	@ 0x48
 8015ba4:	f88d 301a 	strb.w	r3, [sp, #26]
 8015ba8:	f88d 3019 	strb.w	r3, [sp, #25]
 8015bac:	f43f af59 	beq.w	8015a62 <fill_path_even_odd+0x18a>
 8015bb0:	2e08      	cmp	r6, #8
 8015bb2:	f43f af56 	beq.w	8015a62 <fill_path_even_odd+0x18a>
 8015bb6:	2e02      	cmp	r6, #2
 8015bb8:	d00e      	beq.n	8015bd8 <fill_path_even_odd+0x300>
 8015bba:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8015bbe:	2b05      	cmp	r3, #5
 8015bc0:	f000 80d0 	beq.w	8015d64 <fill_path_even_odd+0x48c>
 8015bc4:	f005 030f 	and.w	r3, r5, #15
 8015bc8:	9302      	str	r3, [sp, #8]
 8015bca:	9b02      	ldr	r3, [sp, #8]
 8015bcc:	2b09      	cmp	r3, #9
 8015bce:	f000 8295 	beq.w	80160fc <fill_path_even_odd+0x824>
 8015bd2:	3e0a      	subs	r6, #10
 8015bd4:	2e01      	cmp	r6, #1
 8015bd6:	d937      	bls.n	8015c48 <fill_path_even_odd+0x370>
 8015bd8:	4bb7      	ldr	r3, [pc, #732]	@ (8015eb8 <fill_path_even_odd+0x5e0>)
 8015bda:	2007      	movs	r0, #7
 8015bdc:	681d      	ldr	r5, [r3, #0]
 8015bde:	4bb7      	ldr	r3, [pc, #732]	@ (8015ebc <fill_path_even_odd+0x5e4>)
 8015be0:	681c      	ldr	r4, [r3, #0]
 8015be2:	f008 f87f 	bl	801dce4 <nema_cl_get_space>
 8015be6:	2800      	cmp	r0, #0
 8015be8:	d02e      	beq.n	8015c48 <fill_path_even_odd+0x370>
 8015bea:	4ab5      	ldr	r2, [pc, #724]	@ (8015ec0 <fill_path_even_odd+0x5e8>)
 8015bec:	f8db 3000 	ldr.w	r3, [fp]
 8015bf0:	7812      	ldrb	r2, [r2, #0]
 8015bf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015bf4:	2a01      	cmp	r2, #1
 8015bf6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015bfa:	d104      	bne.n	8015c06 <fill_path_even_odd+0x32e>
 8015bfc:	4ab0      	ldr	r2, [pc, #704]	@ (8015ec0 <fill_path_even_odd+0x5e8>)
 8015bfe:	6852      	ldr	r2, [r2, #4]
 8015c00:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015c04:	4313      	orrs	r3, r2
 8015c06:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8015c0a:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8015c0e:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015c12:	f44f 764c 	mov.w	r6, #816	@ 0x330
 8015c16:	6001      	str	r1, [r0, #0]
 8015c18:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015c1a:	6087      	str	r7, [r0, #8]
 8015c1c:	6041      	str	r1, [r0, #4]
 8015c1e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8015c20:	6106      	str	r6, [r0, #16]
 8015c22:	60c1      	str	r1, [r0, #12]
 8015c24:	6182      	str	r2, [r0, #24]
 8015c26:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015c28:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015c2c:	6142      	str	r2, [r0, #20]
 8015c2e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015c30:	f043 0304 	orr.w	r3, r3, #4
 8015c34:	61c2      	str	r2, [r0, #28]
 8015c36:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015c3a:	6343      	str	r3, [r0, #52]	@ 0x34
 8015c3c:	4ba1      	ldr	r3, [pc, #644]	@ (8015ec4 <fill_path_even_odd+0x5ec>)
 8015c3e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015c40:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015c42:	6201      	str	r1, [r0, #32]
 8015c44:	6282      	str	r2, [r0, #40]	@ 0x28
 8015c46:	6303      	str	r3, [r0, #48]	@ 0x30
 8015c48:	f8da 2000 	ldr.w	r2, [sl]
 8015c4c:	464c      	mov	r4, r9
 8015c4e:	e77a      	b.n	8015b46 <fill_path_even_odd+0x26e>
 8015c50:	f89d 1019 	ldrb.w	r1, [sp, #25]
 8015c54:	9b07      	ldr	r3, [sp, #28]
 8015c56:	2901      	cmp	r1, #1
 8015c58:	d038      	beq.n	8015ccc <fill_path_even_odd+0x3f4>
 8015c5a:	2401      	movs	r4, #1
 8015c5c:	2600      	movs	r6, #0
 8015c5e:	0098      	lsls	r0, r3, #2
 8015c60:	f8da 100c 	ldr.w	r1, [sl, #12]
 8015c64:	1d07      	adds	r7, r0, #4
 8015c66:	440f      	add	r7, r1
 8015c68:	f88d 401a 	strb.w	r4, [sp, #26]
 8015c6c:	4401      	add	r1, r0
 8015c6e:	1918      	adds	r0, r3, r4
 8015c70:	9c01      	ldr	r4, [sp, #4]
 8015c72:	9308      	str	r3, [sp, #32]
 8015c74:	f88d 6018 	strb.w	r6, [sp, #24]
 8015c78:	3302      	adds	r3, #2
 8015c7a:	9007      	str	r0, [sp, #28]
 8015c7c:	b1e4      	cbz	r4, 8015cb8 <fill_path_even_odd+0x3e0>
 8015c7e:	edd1 7a00 	vldr	s15, [r1]
 8015c82:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015c86:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015c8a:	9307      	str	r3, [sp, #28]
 8015c8c:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015c90:	edd7 7a00 	vldr	s15, [r7]
 8015c94:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015c98:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015c9c:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015ca0:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015ca4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8015ca8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015cac:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015cb0:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015cb4:	464c      	mov	r4, r9
 8015cb6:	e746      	b.n	8015b46 <fill_path_even_odd+0x26e>
 8015cb8:	edd1 6a00 	vldr	s13, [r1]
 8015cbc:	9307      	str	r3, [sp, #28]
 8015cbe:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015cc2:	edd7 7a00 	vldr	s15, [r7]
 8015cc6:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015cca:	e7e9      	b.n	8015ca0 <fill_path_even_odd+0x3c8>
 8015ccc:	2b00      	cmp	r3, #0
 8015cce:	d0c4      	beq.n	8015c5a <fill_path_even_odd+0x382>
 8015cd0:	f8db 1000 	ldr.w	r1, [fp]
 8015cd4:	7f09      	ldrb	r1, [r1, #28]
 8015cd6:	2900      	cmp	r1, #0
 8015cd8:	d0bf      	beq.n	8015c5a <fill_path_even_odd+0x382>
 8015cda:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015cde:	2b00      	cmp	r3, #0
 8015ce0:	f000 830c 	beq.w	80162fc <fill_path_even_odd+0xa24>
 8015ce4:	ee19 7a10 	vmov	r7, s18
 8015ce8:	ee19 8a10 	vmov	r8, s18
 8015cec:	4b72      	ldr	r3, [pc, #456]	@ (8015eb8 <fill_path_even_odd+0x5e0>)
 8015cee:	2007      	movs	r0, #7
 8015cf0:	681e      	ldr	r6, [r3, #0]
 8015cf2:	4b72      	ldr	r3, [pc, #456]	@ (8015ebc <fill_path_even_odd+0x5e4>)
 8015cf4:	681c      	ldr	r4, [r3, #0]
 8015cf6:	f007 fff5 	bl	801dce4 <nema_cl_get_space>
 8015cfa:	2800      	cmp	r0, #0
 8015cfc:	d02e      	beq.n	8015d5c <fill_path_even_odd+0x484>
 8015cfe:	4a70      	ldr	r2, [pc, #448]	@ (8015ec0 <fill_path_even_odd+0x5e8>)
 8015d00:	f8db 3000 	ldr.w	r3, [fp]
 8015d04:	7811      	ldrb	r1, [r2, #0]
 8015d06:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8015d08:	2901      	cmp	r1, #1
 8015d0a:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8015d0e:	d104      	bne.n	8015d1a <fill_path_even_odd+0x442>
 8015d10:	4b6b      	ldr	r3, [pc, #428]	@ (8015ec0 <fill_path_even_odd+0x5e8>)
 8015d12:	685b      	ldr	r3, [r3, #4]
 8015d14:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015d18:	431a      	orrs	r2, r3
 8015d1a:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8015d1e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015d22:	6003      	str	r3, [r0, #0]
 8015d24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015d26:	6081      	str	r1, [r0, #8]
 8015d28:	6043      	str	r3, [r0, #4]
 8015d2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015d2c:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015d30:	61c7      	str	r7, [r0, #28]
 8015d32:	60c3      	str	r3, [r0, #12]
 8015d34:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8015d38:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015d3c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015d40:	f042 0204 	orr.w	r2, r2, #4
 8015d44:	6342      	str	r2, [r0, #52]	@ 0x34
 8015d46:	4a5f      	ldr	r2, [pc, #380]	@ (8015ec4 <fill_path_even_odd+0x5ec>)
 8015d48:	f8c0 8014 	str.w	r8, [r0, #20]
 8015d4c:	6246      	str	r6, [r0, #36]	@ 0x24
 8015d4e:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015d50:	f8c0 c010 	str.w	ip, [r0, #16]
 8015d54:	6187      	str	r7, [r0, #24]
 8015d56:	6201      	str	r1, [r0, #32]
 8015d58:	6283      	str	r3, [r0, #40]	@ 0x28
 8015d5a:	6302      	str	r2, [r0, #48]	@ 0x30
 8015d5c:	9b07      	ldr	r3, [sp, #28]
 8015d5e:	f8da 2000 	ldr.w	r2, [sl]
 8015d62:	e77a      	b.n	8015c5a <fill_path_even_odd+0x382>
 8015d64:	f8db 2000 	ldr.w	r2, [fp]
 8015d68:	4b55      	ldr	r3, [pc, #340]	@ (8015ec0 <fill_path_even_odd+0x5e8>)
 8015d6a:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015d6c:	4a52      	ldr	r2, [pc, #328]	@ (8015eb8 <fill_path_even_odd+0x5e0>)
 8015d6e:	781b      	ldrb	r3, [r3, #0]
 8015d70:	2c00      	cmp	r4, #0
 8015d72:	6816      	ldr	r6, [r2, #0]
 8015d74:	4a51      	ldr	r2, [pc, #324]	@ (8015ebc <fill_path_even_odd+0x5e4>)
 8015d76:	bf18      	it	ne
 8015d78:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015d7c:	2b01      	cmp	r3, #1
 8015d7e:	6815      	ldr	r5, [r2, #0]
 8015d80:	d104      	bne.n	8015d8c <fill_path_even_odd+0x4b4>
 8015d82:	4b4f      	ldr	r3, [pc, #316]	@ (8015ec0 <fill_path_even_odd+0x5e8>)
 8015d84:	685b      	ldr	r3, [r3, #4]
 8015d86:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015d8a:	431c      	orrs	r4, r3
 8015d8c:	200e      	movs	r0, #14
 8015d8e:	f007 ffa9 	bl	801dce4 <nema_cl_get_space>
 8015d92:	2800      	cmp	r0, #0
 8015d94:	f43f af58 	beq.w	8015c48 <fill_path_even_odd+0x370>
 8015d98:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015d9c:	6283      	str	r3, [r0, #40]	@ 0x28
 8015d9e:	6503      	str	r3, [r0, #80]	@ 0x50
 8015da0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8015da4:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015da8:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8015dac:	f44f 7e4b 	mov.w	lr, #812	@ 0x32c
 8015db0:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015db4:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015db8:	6303      	str	r3, [r0, #48]	@ 0x30
 8015dba:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015dbe:	6001      	str	r1, [r0, #0]
 8015dc0:	f8c0 8018 	str.w	r8, [r0, #24]
 8015dc4:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8015dc8:	f8c0 e008 	str.w	lr, [r0, #8]
 8015dcc:	f8c0 8004 	str.w	r8, [r0, #4]
 8015dd0:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015dd4:	f8c0 c010 	str.w	ip, [r0, #16]
 8015dd8:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015ddc:	6346      	str	r6, [r0, #52]	@ 0x34
 8015dde:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015de0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8015de2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8015de4:	6146      	str	r6, [r0, #20]
 8015de6:	61c5      	str	r5, [r0, #28]
 8015de8:	6202      	str	r2, [r0, #32]
 8015dea:	6482      	str	r2, [r0, #72]	@ 0x48
 8015dec:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015dee:	6383      	str	r3, [r0, #56]	@ 0x38
 8015df0:	4b34      	ldr	r3, [pc, #208]	@ (8015ec4 <fill_path_even_odd+0x5ec>)
 8015df2:	6542      	str	r2, [r0, #84]	@ 0x54
 8015df4:	f044 0204 	orr.w	r2, r4, #4
 8015df8:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015dfc:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8015e00:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8015e04:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8015e06:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015e08:	6246      	str	r6, [r0, #36]	@ 0x24
 8015e0a:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015e0c:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8015e0e:	f044 0406 	orr.w	r4, r4, #6
 8015e12:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015e14:	64c6      	str	r6, [r0, #76]	@ 0x4c
 8015e16:	6587      	str	r7, [r0, #88]	@ 0x58
 8015e18:	6602      	str	r2, [r0, #96]	@ 0x60
 8015e1a:	e9c0 341a 	strd	r3, r4, [r0, #104]	@ 0x68
 8015e1e:	6645      	str	r5, [r0, #100]	@ 0x64
 8015e20:	f8da 2000 	ldr.w	r2, [sl]
 8015e24:	464c      	mov	r4, r9
 8015e26:	e68e      	b.n	8015b46 <fill_path_even_odd+0x26e>
 8015e28:	9007      	str	r0, [sp, #28]
 8015e2a:	ed94 6a00 	vldr	s12, [r4]
 8015e2e:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015e32:	1c8a      	adds	r2, r1, #2
 8015e34:	9207      	str	r2, [sp, #28]
 8015e36:	edd4 6a01 	vldr	s13, [r4, #4]
 8015e3a:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015e3e:	1cca      	adds	r2, r1, #3
 8015e40:	9207      	str	r2, [sp, #28]
 8015e42:	ed94 7a02 	vldr	s14, [r4, #8]
 8015e46:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015e4a:	3104      	adds	r1, #4
 8015e4c:	9107      	str	r1, [sp, #28]
 8015e4e:	edd4 7a03 	vldr	s15, [r4, #12]
 8015e52:	9a01      	ldr	r2, [sp, #4]
 8015e54:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015e58:	2a00      	cmp	r2, #0
 8015e5a:	d135      	bne.n	8015ec8 <fill_path_even_odd+0x5f0>
 8015e5c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 8015e60:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8015e64:	008a      	lsls	r2, r1, #2
 8015e66:	1c48      	adds	r0, r1, #1
 8015e68:	9203      	str	r2, [sp, #12]
 8015e6a:	9c03      	ldr	r4, [sp, #12]
 8015e6c:	9007      	str	r0, [sp, #28]
 8015e6e:	1d22      	adds	r2, r4, #4
 8015e70:	441a      	add	r2, r3
 8015e72:	4423      	add	r3, r4
 8015e74:	9c01      	ldr	r4, [sp, #4]
 8015e76:	3102      	adds	r1, #2
 8015e78:	edd3 6a00 	vldr	s13, [r3]
 8015e7c:	2c00      	cmp	r4, #0
 8015e7e:	f000 8107 	beq.w	8016090 <fill_path_even_odd+0x7b8>
 8015e82:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8015e86:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015e8a:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015e8e:	9107      	str	r1, [sp, #28]
 8015e90:	ed92 7a00 	vldr	s14, [r2]
 8015e94:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8015e98:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015e9c:	f8db 3000 	ldr.w	r3, [fp]
 8015ea0:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015ea4:	7f1b      	ldrb	r3, [r3, #28]
 8015ea6:	2b00      	cmp	r3, #0
 8015ea8:	f47f adb7 	bne.w	8015a1a <fill_path_even_odd+0x142>
 8015eac:	2201      	movs	r2, #1
 8015eae:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015eb2:	f88d 2019 	strb.w	r2, [sp, #25]
 8015eb6:	e5c8      	b.n	8015a4a <fill_path_even_odd+0x172>
 8015eb8:	20082f74 	.word	0x20082f74
 8015ebc:	20082f78 	.word	0x20082f78
 8015ec0:	20000064 	.word	0x20000064
 8015ec4:	ff000100 	.word	0xff000100
 8015ec8:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015ecc:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015ed0:	ee36 6a05 	vadd.f32	s12, s12, s10
 8015ed4:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015ed8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015edc:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015ee0:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015ee4:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015ee8:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015eec:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015ef0:	e7b4      	b.n	8015e5c <fill_path_even_odd+0x584>
 8015ef2:	f1ac 0c05 	sub.w	ip, ip, #5
 8015ef6:	f1bc 0f03 	cmp.w	ip, #3
 8015efa:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015efe:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015f02:	f240 822f 	bls.w	8016364 <fill_path_even_odd+0xa8c>
 8015f06:	eeb0 7a65 	vmov.f32	s14, s11
 8015f0a:	eef0 7a45 	vmov.f32	s15, s10
 8015f0e:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8015f12:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8015f16:	9007      	str	r0, [sp, #28]
 8015f18:	ed94 7a00 	vldr	s14, [r4]
 8015f1c:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f20:	3102      	adds	r1, #2
 8015f22:	9107      	str	r1, [sp, #28]
 8015f24:	edd4 7a01 	vldr	s15, [r4, #4]
 8015f28:	9a01      	ldr	r2, [sp, #4]
 8015f2a:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f2e:	2a00      	cmp	r2, #0
 8015f30:	d094      	beq.n	8015e5c <fill_path_even_odd+0x584>
 8015f32:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015f36:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015f3a:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f3e:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f42:	e78b      	b.n	8015e5c <fill_path_even_odd+0x584>
 8015f44:	2e03      	cmp	r6, #3
 8015f46:	f000 80ab 	beq.w	80160a0 <fill_path_even_odd+0x7c8>
 8015f4a:	2e0a      	cmp	r6, #10
 8015f4c:	f040 8259 	bne.w	8016402 <fill_path_even_odd+0xb2a>
 8015f50:	9007      	str	r0, [sp, #28]
 8015f52:	edde 7a00 	vldr	s15, [lr]
 8015f56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015f5a:	ee17 1a90 	vmov	r1, s15
 8015f5e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015f62:	104a      	asrs	r2, r1, #1
 8015f64:	2a00      	cmp	r2, #0
 8015f66:	9203      	str	r2, [sp, #12]
 8015f68:	f340 80e2 	ble.w	8016130 <fill_path_even_odd+0x858>
 8015f6c:	9a04      	ldr	r2, [sp, #16]
 8015f6e:	2400      	movs	r4, #0
 8015f70:	f8cd 9010 	str.w	r9, [sp, #16]
 8015f74:	46a9      	mov	r9, r5
 8015f76:	9605      	str	r6, [sp, #20]
 8015f78:	0091      	lsls	r1, r2, #2
 8015f7a:	1d08      	adds	r0, r1, #4
 8015f7c:	4418      	add	r0, r3
 8015f7e:	9d01      	ldr	r5, [sp, #4]
 8015f80:	440b      	add	r3, r1
 8015f82:	1c51      	adds	r1, r2, #1
 8015f84:	9107      	str	r1, [sp, #28]
 8015f86:	3202      	adds	r2, #2
 8015f88:	ed93 8a00 	vldr	s16, [r3]
 8015f8c:	b365      	cbz	r5, 8015fe8 <fill_path_even_odd+0x710>
 8015f8e:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 8015f92:	ee38 8a01 	vadd.f32	s16, s16, s2
 8015f96:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8015f9a:	9207      	str	r2, [sp, #28]
 8015f9c:	edd0 8a00 	vldr	s17, [r0]
 8015fa0:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 8015fa4:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8015fa8:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8015fac:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8015fb0:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 8015fb4:	f8db 3000 	ldr.w	r3, [fp]
 8015fb8:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 8015fbc:	7f1a      	ldrb	r2, [r3, #28]
 8015fbe:	b9da      	cbnz	r2, 8015ff8 <fill_path_even_odd+0x720>
 8015fc0:	4aaa      	ldr	r2, [pc, #680]	@ (801626c <fill_path_even_odd+0x994>)
 8015fc2:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8015fc6:	6812      	ldr	r2, [r2, #0]
 8015fc8:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8015fcc:	2a00      	cmp	r2, #0
 8015fce:	f000 8199 	beq.w	8016304 <fill_path_even_odd+0xa2c>
 8015fd2:	eef0 1a68 	vmov.f32	s3, s17
 8015fd6:	eeb0 1a48 	vmov.f32	s2, s16
 8015fda:	eef0 0a4a 	vmov.f32	s1, s20
 8015fde:	eeb0 0a69 	vmov.f32	s0, s19
 8015fe2:	f7fc fc79 	bl	80128d8 <raster_stroked_line_>
 8015fe6:	e047      	b.n	8016078 <fill_path_even_odd+0x7a0>
 8015fe8:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8015fec:	9207      	str	r2, [sp, #28]
 8015fee:	edd0 8a00 	vldr	s17, [r0]
 8015ff2:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8015ff6:	e7d9      	b.n	8015fac <fill_path_even_odd+0x6d4>
 8015ff8:	4b9d      	ldr	r3, [pc, #628]	@ (8016270 <fill_path_even_odd+0x998>)
 8015ffa:	2007      	movs	r0, #7
 8015ffc:	681e      	ldr	r6, [r3, #0]
 8015ffe:	4b9d      	ldr	r3, [pc, #628]	@ (8016274 <fill_path_even_odd+0x99c>)
 8016000:	681d      	ldr	r5, [r3, #0]
 8016002:	f007 fe6f 	bl	801dce4 <nema_cl_get_space>
 8016006:	2800      	cmp	r0, #0
 8016008:	d036      	beq.n	8016078 <fill_path_even_odd+0x7a0>
 801600a:	4a9b      	ldr	r2, [pc, #620]	@ (8016278 <fill_path_even_odd+0x9a0>)
 801600c:	f8db 3000 	ldr.w	r3, [fp]
 8016010:	7812      	ldrb	r2, [r2, #0]
 8016012:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016014:	2a01      	cmp	r2, #1
 8016016:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801601a:	d104      	bne.n	8016026 <fill_path_even_odd+0x74e>
 801601c:	4a96      	ldr	r2, [pc, #600]	@ (8016278 <fill_path_even_odd+0x9a0>)
 801601e:	6852      	ldr	r2, [r2, #4]
 8016020:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016024:	4313      	orrs	r3, r2
 8016026:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801602a:	6002      	str	r2, [r0, #0]
 801602c:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016030:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016034:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8016038:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801603c:	6082      	str	r2, [r0, #8]
 801603e:	edc0 7a01 	vstr	s15, [r0, #4]
 8016042:	f8c0 e018 	str.w	lr, [r0, #24]
 8016046:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801604a:	f8c0 c010 	str.w	ip, [r0, #16]
 801604e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016052:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016056:	f043 0304 	orr.w	r3, r3, #4
 801605a:	f8c0 c014 	str.w	ip, [r0, #20]
 801605e:	6343      	str	r3, [r0, #52]	@ 0x34
 8016060:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016062:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8016066:	61c3      	str	r3, [r0, #28]
 8016068:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 801606c:	4a83      	ldr	r2, [pc, #524]	@ (801627c <fill_path_even_odd+0x9a4>)
 801606e:	6246      	str	r6, [r0, #36]	@ 0x24
 8016070:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8016072:	6302      	str	r2, [r0, #48]	@ 0x30
 8016074:	6201      	str	r1, [r0, #32]
 8016076:	6283      	str	r3, [r0, #40]	@ 0x28
 8016078:	9b03      	ldr	r3, [sp, #12]
 801607a:	3401      	adds	r4, #1
 801607c:	429c      	cmp	r4, r3
 801607e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016082:	e887 0003 	stmia.w	r7, {r0, r1}
 8016086:	d051      	beq.n	801612c <fill_path_even_odd+0x854>
 8016088:	f8da 300c 	ldr.w	r3, [sl, #12]
 801608c:	9a07      	ldr	r2, [sp, #28]
 801608e:	e773      	b.n	8015f78 <fill_path_even_odd+0x6a0>
 8016090:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016094:	9107      	str	r1, [sp, #28]
 8016096:	edd2 7a00 	vldr	s15, [r2]
 801609a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801609e:	e4b6      	b.n	8015a0e <fill_path_even_odd+0x136>
 80160a0:	9b01      	ldr	r3, [sp, #4]
 80160a2:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 80160a6:	9007      	str	r0, [sp, #28]
 80160a8:	2b00      	cmp	r3, #0
 80160aa:	f000 80cf 	beq.w	801624c <fill_path_even_odd+0x974>
 80160ae:	ed9e 7a00 	vldr	s14, [lr]
 80160b2:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 80160b6:	ee76 6a87 	vadd.f32	s13, s13, s14
 80160ba:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 80160be:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80160c2:	e4a4      	b.n	8015a0e <fill_path_even_odd+0x136>
 80160c4:	9007      	str	r0, [sp, #28]
 80160c6:	ed94 7a00 	vldr	s14, [r4]
 80160ca:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 80160ce:	3102      	adds	r1, #2
 80160d0:	9107      	str	r1, [sp, #28]
 80160d2:	edd4 7a01 	vldr	s15, [r4, #4]
 80160d6:	9a01      	ldr	r2, [sp, #4]
 80160d8:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80160dc:	2a00      	cmp	r2, #0
 80160de:	f43f aebd 	beq.w	8015e5c <fill_path_even_odd+0x584>
 80160e2:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 80160e6:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 80160ea:	ee37 7a06 	vadd.f32	s14, s14, s12
 80160ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80160f2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 80160f6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80160fa:	e6af      	b.n	8015e5c <fill_path_even_odd+0x584>
 80160fc:	2002      	movs	r0, #2
 80160fe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8016100:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8016102:	f007 fdef 	bl	801dce4 <nema_cl_get_space>
 8016106:	b138      	cbz	r0, 8016118 <fill_path_even_odd+0x840>
 8016108:	f44f 724a 	mov.w	r2, #808	@ 0x328
 801610c:	f44f 734b 	mov.w	r3, #812	@ 0x32c
 8016110:	6045      	str	r5, [r0, #4]
 8016112:	60c4      	str	r4, [r0, #12]
 8016114:	6002      	str	r2, [r0, #0]
 8016116:	6083      	str	r3, [r0, #8]
 8016118:	a806      	add	r0, sp, #24
 801611a:	f7fd f83d 	bl	8013198 <fill_arc.isra.7>
 801611e:	4605      	mov	r5, r0
 8016120:	2800      	cmp	r0, #0
 8016122:	f43f ad59 	beq.w	8015bd8 <fill_path_even_odd+0x300>
 8016126:	f006 fc85 	bl	801ca34 <nema_vg_set_error>
 801612a:	e515      	b.n	8015b58 <fill_path_even_odd+0x280>
 801612c:	e9dd 9604 	ldrd	r9, r6, [sp, #16]
 8016130:	ed9d 8a15 	vldr	s16, [sp, #84]	@ 0x54
 8016134:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8016138:	ee77 7ac8 	vsub.f32	s15, s15, s16
 801613c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016140:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016144:	eddd 8a16 	vldr	s17, [sp, #88]	@ 0x58
 8016148:	d111      	bne.n	801616e <fill_path_even_odd+0x896>
 801614a:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801614e:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8016152:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801615a:	d108      	bne.n	801616e <fill_path_even_odd+0x896>
 801615c:	2300      	movs	r3, #0
 801615e:	f88d 3019 	strb.w	r3, [sp, #25]
 8016162:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016166:	2b00      	cmp	r3, #0
 8016168:	f43f ad2f 	beq.w	8015bca <fill_path_even_odd+0x2f2>
 801616c:	e56c      	b.n	8015c48 <fill_path_even_odd+0x370>
 801616e:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016172:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016176:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801617a:	f8db 3000 	ldr.w	r3, [fp]
 801617e:	e887 0003 	stmia.w	r7, {r0, r1}
 8016182:	7f1a      	ldrb	r2, [r3, #28]
 8016184:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016188:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 801618c:	2a00      	cmp	r2, #0
 801618e:	f000 8124 	beq.w	80163da <fill_path_even_odd+0xb02>
 8016192:	4b37      	ldr	r3, [pc, #220]	@ (8016270 <fill_path_even_odd+0x998>)
 8016194:	2007      	movs	r0, #7
 8016196:	681c      	ldr	r4, [r3, #0]
 8016198:	4b36      	ldr	r3, [pc, #216]	@ (8016274 <fill_path_even_odd+0x99c>)
 801619a:	f8d3 8000 	ldr.w	r8, [r3]
 801619e:	f007 fda1 	bl	801dce4 <nema_cl_get_space>
 80161a2:	2800      	cmp	r0, #0
 80161a4:	d0da      	beq.n	801615c <fill_path_even_odd+0x884>
 80161a6:	4a34      	ldr	r2, [pc, #208]	@ (8016278 <fill_path_even_odd+0x9a0>)
 80161a8:	f8db 3000 	ldr.w	r3, [fp]
 80161ac:	7812      	ldrb	r2, [r2, #0]
 80161ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80161b0:	2a01      	cmp	r2, #1
 80161b2:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80161b6:	d104      	bne.n	80161c2 <fill_path_even_odd+0x8ea>
 80161b8:	4a2f      	ldr	r2, [pc, #188]	@ (8016278 <fill_path_even_odd+0x9a0>)
 80161ba:	6852      	ldr	r2, [r2, #4]
 80161bc:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80161c0:	4313      	orrs	r3, r2
 80161c2:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 80161c6:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 80161ca:	f44f 774d 	mov.w	r7, #820	@ 0x334
 80161ce:	f44f 754c 	mov.w	r5, #816	@ 0x330
 80161d2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80161d6:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 80161da:	f8c0 e000 	str.w	lr, [r0]
 80161de:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80161e2:	f8c0 c008 	str.w	ip, [r0, #8]
 80161e6:	f8c0 e004 	str.w	lr, [r0, #4]
 80161ea:	6187      	str	r7, [r0, #24]
 80161ec:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80161ee:	6105      	str	r5, [r0, #16]
 80161f0:	60c7      	str	r7, [r0, #12]
 80161f2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80161f4:	f043 0304 	orr.w	r3, r3, #4
 80161f8:	6145      	str	r5, [r0, #20]
 80161fa:	6343      	str	r3, [r0, #52]	@ 0x34
 80161fc:	6244      	str	r4, [r0, #36]	@ 0x24
 80161fe:	4b1f      	ldr	r3, [pc, #124]	@ (801627c <fill_path_even_odd+0x9a4>)
 8016200:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8016202:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8016206:	61c4      	str	r4, [r0, #28]
 8016208:	6201      	str	r1, [r0, #32]
 801620a:	6282      	str	r2, [r0, #40]	@ 0x28
 801620c:	6303      	str	r3, [r0, #48]	@ 0x30
 801620e:	e7a5      	b.n	801615c <fill_path_even_odd+0x884>
 8016210:	f1ac 0c05 	sub.w	ip, ip, #5
 8016214:	f1bc 0f03 	cmp.w	ip, #3
 8016218:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 801621c:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8016220:	d80b      	bhi.n	801623a <fill_path_even_odd+0x962>
 8016222:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8016226:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801622a:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 801622e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8016232:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8016236:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801623a:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801623e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8016242:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8016246:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801624a:	e60e      	b.n	8015e6a <fill_path_even_odd+0x592>
 801624c:	edde 6a00 	vldr	s13, [lr]
 8016250:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8016254:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016258:	f7ff bbd9 	b.w	8015a0e <fill_path_even_odd+0x136>
 801625c:	2300      	movs	r3, #0
 801625e:	f88d 3019 	strb.w	r3, [sp, #25]
 8016262:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016266:	f7ff bbf0 	b.w	8015a4a <fill_path_even_odd+0x172>
 801626a:	bf00      	nop
 801626c:	20082f70 	.word	0x20082f70
 8016270:	20082f74 	.word	0x20082f74
 8016274:	20082f78 	.word	0x20082f78
 8016278:	20000064 	.word	0x20000064
 801627c:	ff000100 	.word	0xff000100
 8016280:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8016284:	2b00      	cmp	r3, #0
 8016286:	d17a      	bne.n	801637e <fill_path_even_odd+0xaa6>
 8016288:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 801628a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801628c:	4b8f      	ldr	r3, [pc, #572]	@ (80164cc <fill_path_even_odd+0xbf4>)
 801628e:	2007      	movs	r0, #7
 8016290:	681e      	ldr	r6, [r3, #0]
 8016292:	4b8f      	ldr	r3, [pc, #572]	@ (80164d0 <fill_path_even_odd+0xbf8>)
 8016294:	681d      	ldr	r5, [r3, #0]
 8016296:	f007 fd25 	bl	801dce4 <nema_cl_get_space>
 801629a:	2800      	cmp	r0, #0
 801629c:	f43f ac5b 	beq.w	8015b56 <fill_path_even_odd+0x27e>
 80162a0:	4b8c      	ldr	r3, [pc, #560]	@ (80164d4 <fill_path_even_odd+0xbfc>)
 80162a2:	4a8d      	ldr	r2, [pc, #564]	@ (80164d8 <fill_path_even_odd+0xc00>)
 80162a4:	681b      	ldr	r3, [r3, #0]
 80162a6:	7811      	ldrb	r1, [r2, #0]
 80162a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80162aa:	2901      	cmp	r1, #1
 80162ac:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80162b0:	d103      	bne.n	80162ba <fill_path_even_odd+0x9e2>
 80162b2:	6852      	ldr	r2, [r2, #4]
 80162b4:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80162b8:	4313      	orrs	r3, r2
 80162ba:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80162be:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80162c2:	6002      	str	r2, [r0, #0]
 80162c4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80162c6:	6081      	str	r1, [r0, #8]
 80162c8:	6042      	str	r2, [r0, #4]
 80162ca:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80162cc:	61c4      	str	r4, [r0, #28]
 80162ce:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80162d2:	60c2      	str	r2, [r0, #12]
 80162d4:	f44f 744d 	mov.w	r4, #820	@ 0x334
 80162d8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80162dc:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 80162e0:	f043 0304 	orr.w	r3, r3, #4
 80162e4:	6343      	str	r3, [r0, #52]	@ 0x34
 80162e6:	4b7d      	ldr	r3, [pc, #500]	@ (80164dc <fill_path_even_odd+0xc04>)
 80162e8:	6147      	str	r7, [r0, #20]
 80162ea:	6246      	str	r6, [r0, #36]	@ 0x24
 80162ec:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80162ee:	f8c0 c010 	str.w	ip, [r0, #16]
 80162f2:	6184      	str	r4, [r0, #24]
 80162f4:	6201      	str	r1, [r0, #32]
 80162f6:	6282      	str	r2, [r0, #40]	@ 0x28
 80162f8:	6303      	str	r3, [r0, #48]	@ 0x30
 80162fa:	e42c      	b.n	8015b56 <fill_path_even_odd+0x27e>
 80162fc:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 8016300:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 8016302:	e4f3      	b.n	8015cec <fill_path_even_odd+0x414>
 8016304:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016308:	2d00      	cmp	r5, #0
 801630a:	bf18      	it	ne
 801630c:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8016310:	4b71      	ldr	r3, [pc, #452]	@ (80164d8 <fill_path_even_odd+0xc00>)
 8016312:	4015      	ands	r5, r2
 8016314:	781b      	ldrb	r3, [r3, #0]
 8016316:	2b01      	cmp	r3, #1
 8016318:	d104      	bne.n	8016324 <fill_path_even_odd+0xa4c>
 801631a:	4b6f      	ldr	r3, [pc, #444]	@ (80164d8 <fill_path_even_odd+0xc00>)
 801631c:	685b      	ldr	r3, [r3, #4]
 801631e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8016322:	431d      	orrs	r5, r3
 8016324:	2005      	movs	r0, #5
 8016326:	f007 fcdd 	bl	801dce4 <nema_cl_get_space>
 801632a:	2800      	cmp	r0, #0
 801632c:	f43f aea4 	beq.w	8016078 <fill_path_even_odd+0x7a0>
 8016330:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8016334:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016338:	f44f 724c 	mov.w	r2, #816	@ 0x330
 801633c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8016340:	f045 050a 	orr.w	r5, r5, #10
 8016344:	6245      	str	r5, [r0, #36]	@ 0x24
 8016346:	4d65      	ldr	r5, [pc, #404]	@ (80164dc <fill_path_even_odd+0xc04>)
 8016348:	edc0 9a01 	vstr	s19, [r0, #4]
 801634c:	ed80 aa03 	vstr	s20, [r0, #12]
 8016350:	ed80 8a05 	vstr	s16, [r0, #20]
 8016354:	edc0 8a07 	vstr	s17, [r0, #28]
 8016358:	6205      	str	r5, [r0, #32]
 801635a:	6006      	str	r6, [r0, #0]
 801635c:	6081      	str	r1, [r0, #8]
 801635e:	6102      	str	r2, [r0, #16]
 8016360:	6183      	str	r3, [r0, #24]
 8016362:	e689      	b.n	8016078 <fill_path_even_odd+0x7a0>
 8016364:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 8016368:	ee75 7a05 	vadd.f32	s15, s10, s10
 801636c:	ee35 6aa5 	vadd.f32	s12, s11, s11
 8016370:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8016374:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016378:	ee36 7a66 	vsub.f32	s14, s12, s13
 801637c:	e5c7      	b.n	8015f0e <fill_path_even_odd+0x636>
 801637e:	2400      	movs	r4, #0
 8016380:	4627      	mov	r7, r4
 8016382:	e783      	b.n	801628c <fill_path_even_odd+0x9b4>
 8016384:	9007      	str	r0, [sp, #28]
 8016386:	6822      	ldr	r2, [r4, #0]
 8016388:	1c8b      	adds	r3, r1, #2
 801638a:	9307      	str	r3, [sp, #28]
 801638c:	920d      	str	r2, [sp, #52]	@ 0x34
 801638e:	6863      	ldr	r3, [r4, #4]
 8016390:	3103      	adds	r1, #3
 8016392:	930e      	str	r3, [sp, #56]	@ 0x38
 8016394:	9107      	str	r1, [sp, #28]
 8016396:	4b52      	ldr	r3, [pc, #328]	@ (80164e0 <fill_path_even_odd+0xc08>)
 8016398:	68a2      	ldr	r2, [r4, #8]
 801639a:	edd3 0a00 	vldr	s1, [r3]
 801639e:	ed93 0a03 	vldr	s0, [r3, #12]
 80163a2:	920f      	str	r2, [sp, #60]	@ 0x3c
 80163a4:	f01a ff02 	bl	80311ac <atan2f>
 80163a8:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 80163ac:	ee77 7a80 	vadd.f32	s15, s15, s0
 80163b0:	9907      	ldr	r1, [sp, #28]
 80163b2:	f8da 300c 	ldr.w	r3, [sl, #12]
 80163b6:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80163ba:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80163bc:	008a      	lsls	r2, r1, #2
 80163be:	1c48      	adds	r0, r1, #1
 80163c0:	9004      	str	r0, [sp, #16]
 80163c2:	9203      	str	r2, [sp, #12]
 80163c4:	f88d 501b 	strb.w	r5, [sp, #27]
 80163c8:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 80163cc:	eb03 0e02 	add.w	lr, r3, r2
 80163d0:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
 80163d4:	9414      	str	r4, [sp, #80]	@ 0x50
 80163d6:	f7ff bb06 	b.w	80159e6 <fill_path_even_odd+0x10e>
 80163da:	4a42      	ldr	r2, [pc, #264]	@ (80164e4 <fill_path_even_odd+0xc0c>)
 80163dc:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80163e0:	6812      	ldr	r2, [r2, #0]
 80163e2:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 80163e6:	2a00      	cmp	r2, #0
 80163e8:	f000 811b 	beq.w	8016622 <fill_path_even_odd+0xd4a>
 80163ec:	eef0 1a68 	vmov.f32	s3, s17
 80163f0:	eeb0 1a48 	vmov.f32	s2, s16
 80163f4:	eef0 0a4a 	vmov.f32	s1, s20
 80163f8:	eeb0 0a69 	vmov.f32	s0, s19
 80163fc:	f7fc fa6c 	bl	80128d8 <raster_stroked_line_>
 8016400:	e6ac      	b.n	801615c <fill_path_even_odd+0x884>
 8016402:	2e0b      	cmp	r6, #11
 8016404:	f47f ad31 	bne.w	8015e6a <fill_path_even_odd+0x592>
 8016408:	9007      	str	r0, [sp, #28]
 801640a:	edde 7a00 	vldr	s15, [lr]
 801640e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016412:	ee17 1a90 	vmov	r1, s15
 8016416:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801641a:	104c      	asrs	r4, r1, #1
 801641c:	2c00      	cmp	r4, #0
 801641e:	f340 80b0 	ble.w	8016582 <fill_path_even_odd+0xcaa>
 8016422:	2100      	movs	r1, #0
 8016424:	9a04      	ldr	r2, [sp, #16]
 8016426:	9605      	str	r6, [sp, #20]
 8016428:	f8cd 9010 	str.w	r9, [sp, #16]
 801642c:	4656      	mov	r6, sl
 801642e:	46a9      	mov	r9, r5
 8016430:	46a2      	mov	sl, r4
 8016432:	460c      	mov	r4, r1
 8016434:	e035      	b.n	80164a2 <fill_path_even_odd+0xbca>
 8016436:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 801643a:	ee38 8a01 	vadd.f32	s16, s16, s2
 801643e:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016442:	9207      	str	r2, [sp, #28]
 8016444:	edd1 8a00 	vldr	s17, [r1]
 8016448:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 801644c:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8016450:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016454:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016458:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801645c:	f8db 3000 	ldr.w	r3, [fp]
 8016460:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 8016464:	7f1a      	ldrb	r2, [r3, #28]
 8016466:	2a00      	cmp	r2, #0
 8016468:	d13e      	bne.n	80164e8 <fill_path_even_odd+0xc10>
 801646a:	4a1e      	ldr	r2, [pc, #120]	@ (80164e4 <fill_path_even_odd+0xc0c>)
 801646c:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016470:	6812      	ldr	r2, [r2, #0]
 8016472:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8016476:	2a00      	cmp	r2, #0
 8016478:	f000 80a2 	beq.w	80165c0 <fill_path_even_odd+0xce8>
 801647c:	eef0 1a68 	vmov.f32	s3, s17
 8016480:	eeb0 1a48 	vmov.f32	s2, s16
 8016484:	eef0 0a4a 	vmov.f32	s1, s20
 8016488:	eeb0 0a69 	vmov.f32	s0, s19
 801648c:	f7fc fa24 	bl	80128d8 <raster_stroked_line_>
 8016490:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016494:	3401      	adds	r4, #1
 8016496:	4554      	cmp	r4, sl
 8016498:	e887 0003 	stmia.w	r7, {r0, r1}
 801649c:	d06d      	beq.n	801657a <fill_path_even_odd+0xca2>
 801649e:	68f3      	ldr	r3, [r6, #12]
 80164a0:	9a07      	ldr	r2, [sp, #28]
 80164a2:	0090      	lsls	r0, r2, #2
 80164a4:	1d01      	adds	r1, r0, #4
 80164a6:	4419      	add	r1, r3
 80164a8:	9d01      	ldr	r5, [sp, #4]
 80164aa:	4403      	add	r3, r0
 80164ac:	1c50      	adds	r0, r2, #1
 80164ae:	9007      	str	r0, [sp, #28]
 80164b0:	3202      	adds	r2, #2
 80164b2:	ed93 8a00 	vldr	s16, [r3]
 80164b6:	2d00      	cmp	r5, #0
 80164b8:	d1bd      	bne.n	8016436 <fill_path_even_odd+0xb5e>
 80164ba:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 80164be:	9207      	str	r2, [sp, #28]
 80164c0:	edd1 8a00 	vldr	s17, [r1]
 80164c4:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 80164c8:	e7c4      	b.n	8016454 <fill_path_even_odd+0xb7c>
 80164ca:	bf00      	nop
 80164cc:	20082f74 	.word	0x20082f74
 80164d0:	20082f78 	.word	0x20082f78
 80164d4:	20082f68 	.word	0x20082f68
 80164d8:	20000064 	.word	0x20000064
 80164dc:	ff000100 	.word	0xff000100
 80164e0:	20082fec 	.word	0x20082fec
 80164e4:	20082f70 	.word	0x20082f70
 80164e8:	4b66      	ldr	r3, [pc, #408]	@ (8016684 <fill_path_even_odd+0xdac>)
 80164ea:	2007      	movs	r0, #7
 80164ec:	681b      	ldr	r3, [r3, #0]
 80164ee:	9303      	str	r3, [sp, #12]
 80164f0:	4b65      	ldr	r3, [pc, #404]	@ (8016688 <fill_path_even_odd+0xdb0>)
 80164f2:	681d      	ldr	r5, [r3, #0]
 80164f4:	f007 fbf6 	bl	801dce4 <nema_cl_get_space>
 80164f8:	2800      	cmp	r0, #0
 80164fa:	d0c9      	beq.n	8016490 <fill_path_even_odd+0xbb8>
 80164fc:	4a63      	ldr	r2, [pc, #396]	@ (801668c <fill_path_even_odd+0xdb4>)
 80164fe:	f8db 3000 	ldr.w	r3, [fp]
 8016502:	7812      	ldrb	r2, [r2, #0]
 8016504:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016506:	2a01      	cmp	r2, #1
 8016508:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801650c:	d104      	bne.n	8016518 <fill_path_even_odd+0xc40>
 801650e:	4a5f      	ldr	r2, [pc, #380]	@ (801668c <fill_path_even_odd+0xdb4>)
 8016510:	6852      	ldr	r2, [r2, #4]
 8016512:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016516:	4313      	orrs	r3, r2
 8016518:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801651c:	6002      	str	r2, [r0, #0]
 801651e:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016522:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016526:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801652a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801652e:	6082      	str	r2, [r0, #8]
 8016530:	edc0 7a01 	vstr	s15, [r0, #4]
 8016534:	f8c0 e018 	str.w	lr, [r0, #24]
 8016538:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801653c:	f8c0 c010 	str.w	ip, [r0, #16]
 8016540:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016544:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016548:	f043 0304 	orr.w	r3, r3, #4
 801654c:	6343      	str	r3, [r0, #52]	@ 0x34
 801654e:	9b03      	ldr	r3, [sp, #12]
 8016550:	f8c0 c014 	str.w	ip, [r0, #20]
 8016554:	6243      	str	r3, [r0, #36]	@ 0x24
 8016556:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016558:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801655c:	61c3      	str	r3, [r0, #28]
 801655e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8016562:	4a4b      	ldr	r2, [pc, #300]	@ (8016690 <fill_path_even_odd+0xdb8>)
 8016564:	3401      	adds	r4, #1
 8016566:	4554      	cmp	r4, sl
 8016568:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801656a:	6302      	str	r2, [r0, #48]	@ 0x30
 801656c:	6201      	str	r1, [r0, #32]
 801656e:	6283      	str	r3, [r0, #40]	@ 0x28
 8016570:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016574:	e887 0003 	stmia.w	r7, {r0, r1}
 8016578:	d191      	bne.n	801649e <fill_path_even_odd+0xbc6>
 801657a:	46b2      	mov	sl, r6
 801657c:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8016580:	9e05      	ldr	r6, [sp, #20]
 8016582:	f8db 3000 	ldr.w	r3, [fp]
 8016586:	7f1b      	ldrb	r3, [r3, #28]
 8016588:	b1b3      	cbz	r3, 80165b8 <fill_path_even_odd+0xce0>
 801658a:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801658e:	eddd 7a15 	vldr	s15, [sp, #84]	@ 0x54
 8016592:	ee77 7a67 	vsub.f32	s15, s14, s15
 8016596:	eef5 7a40 	vcmp.f32	s15, #0.0
 801659a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801659e:	d10b      	bne.n	80165b8 <fill_path_even_odd+0xce0>
 80165a0:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 80165a4:	eddd 7a16 	vldr	s15, [sp, #88]	@ 0x58
 80165a8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80165ac:	eef5 7a40 	vcmp.f32	s15, #0.0
 80165b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165b4:	f43f add2 	beq.w	801615c <fill_path_even_odd+0x884>
 80165b8:	2301      	movs	r3, #1
 80165ba:	f88d 3019 	strb.w	r3, [sp, #25]
 80165be:	e5d0      	b.n	8016162 <fill_path_even_odd+0x88a>
 80165c0:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80165c4:	2d00      	cmp	r5, #0
 80165c6:	bf18      	it	ne
 80165c8:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80165cc:	4b2f      	ldr	r3, [pc, #188]	@ (801668c <fill_path_even_odd+0xdb4>)
 80165ce:	4015      	ands	r5, r2
 80165d0:	781b      	ldrb	r3, [r3, #0]
 80165d2:	2b01      	cmp	r3, #1
 80165d4:	d104      	bne.n	80165e0 <fill_path_even_odd+0xd08>
 80165d6:	4b2d      	ldr	r3, [pc, #180]	@ (801668c <fill_path_even_odd+0xdb4>)
 80165d8:	685b      	ldr	r3, [r3, #4]
 80165da:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80165de:	431d      	orrs	r5, r3
 80165e0:	2005      	movs	r0, #5
 80165e2:	f007 fb7f 	bl	801dce4 <nema_cl_get_space>
 80165e6:	2800      	cmp	r0, #0
 80165e8:	f43f af52 	beq.w	8016490 <fill_path_even_odd+0xbb8>
 80165ec:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80165f0:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80165f4:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80165f8:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80165fc:	f045 050a 	orr.w	r5, r5, #10
 8016600:	6245      	str	r5, [r0, #36]	@ 0x24
 8016602:	4d23      	ldr	r5, [pc, #140]	@ (8016690 <fill_path_even_odd+0xdb8>)
 8016604:	edc0 9a01 	vstr	s19, [r0, #4]
 8016608:	ed80 aa03 	vstr	s20, [r0, #12]
 801660c:	ed80 8a05 	vstr	s16, [r0, #20]
 8016610:	edc0 8a07 	vstr	s17, [r0, #28]
 8016614:	6205      	str	r5, [r0, #32]
 8016616:	f8c0 c000 	str.w	ip, [r0]
 801661a:	6081      	str	r1, [r0, #8]
 801661c:	6102      	str	r2, [r0, #16]
 801661e:	6183      	str	r3, [r0, #24]
 8016620:	e736      	b.n	8016490 <fill_path_even_odd+0xbb8>
 8016622:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 8016626:	2a00      	cmp	r2, #0
 8016628:	bf18      	it	ne
 801662a:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 801662e:	4b17      	ldr	r3, [pc, #92]	@ (801668c <fill_path_even_odd+0xdb4>)
 8016630:	4014      	ands	r4, r2
 8016632:	781b      	ldrb	r3, [r3, #0]
 8016634:	2b01      	cmp	r3, #1
 8016636:	d01f      	beq.n	8016678 <fill_path_even_odd+0xda0>
 8016638:	2005      	movs	r0, #5
 801663a:	f007 fb53 	bl	801dce4 <nema_cl_get_space>
 801663e:	2800      	cmp	r0, #0
 8016640:	f43f ad8c 	beq.w	801615c <fill_path_even_odd+0x884>
 8016644:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8016648:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801664c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8016650:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8016654:	4b0e      	ldr	r3, [pc, #56]	@ (8016690 <fill_path_even_odd+0xdb8>)
 8016656:	f044 040a 	orr.w	r4, r4, #10
 801665a:	6244      	str	r4, [r0, #36]	@ 0x24
 801665c:	edc0 9a01 	vstr	s19, [r0, #4]
 8016660:	ed80 aa03 	vstr	s20, [r0, #12]
 8016664:	ed80 8a05 	vstr	s16, [r0, #20]
 8016668:	edc0 8a07 	vstr	s17, [r0, #28]
 801666c:	6007      	str	r7, [r0, #0]
 801666e:	6085      	str	r5, [r0, #8]
 8016670:	6101      	str	r1, [r0, #16]
 8016672:	6182      	str	r2, [r0, #24]
 8016674:	6203      	str	r3, [r0, #32]
 8016676:	e571      	b.n	801615c <fill_path_even_odd+0x884>
 8016678:	4b04      	ldr	r3, [pc, #16]	@ (801668c <fill_path_even_odd+0xdb4>)
 801667a:	685b      	ldr	r3, [r3, #4]
 801667c:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8016680:	431c      	orrs	r4, r3
 8016682:	e7d9      	b.n	8016638 <fill_path_even_odd+0xd60>
 8016684:	20082f74 	.word	0x20082f74
 8016688:	20082f78 	.word	0x20082f78
 801668c:	20000064 	.word	0x20000064
 8016690:	ff000100 	.word	0xff000100

08016694 <draw_with_stencil>:
 8016694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016698:	ed2d 8b10 	vpush	{d8-d15}
 801669c:	f8df 9380 	ldr.w	r9, [pc, #896]	@ 8016a20 <draw_with_stencil+0x38c>
 80166a0:	4604      	mov	r4, r0
 80166a2:	f8d9 0000 	ldr.w	r0, [r9]
 80166a6:	b0ad      	sub	sp, #180	@ 0xb4
 80166a8:	6883      	ldr	r3, [r0, #8]
 80166aa:	9104      	str	r1, [sp, #16]
 80166ac:	2b00      	cmp	r3, #0
 80166ae:	f000 87cf 	beq.w	8017650 <draw_with_stencil+0xfbc>
 80166b2:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 80166b6:	f04f 0800 	mov.w	r8, #0
 80166ba:	2508      	movs	r5, #8
 80166bc:	4fd6      	ldr	r7, [pc, #856]	@ (8016a18 <draw_with_stencil+0x384>)
 80166be:	68c1      	ldr	r1, [r0, #12]
 80166c0:	e9cd 2801 	strd	r2, r8, [sp, #4]
 80166c4:	2003      	movs	r0, #3
 80166c6:	9500      	str	r5, [sp, #0]
 80166c8:	f7fa fa2c 	bl	8010b24 <nema_bind_tex>
 80166cc:	683a      	ldr	r2, [r7, #0]
 80166ce:	f8d9 3000 	ldr.w	r3, [r9]
 80166d2:	7f12      	ldrb	r2, [r2, #28]
 80166d4:	4628      	mov	r0, r5
 80166d6:	4542      	cmp	r2, r8
 80166d8:	691a      	ldr	r2, [r3, #16]
 80166da:	695e      	ldr	r6, [r3, #20]
 80166dc:	bf0c      	ite	eq
 80166de:	46c2      	moveq	sl, r8
 80166e0:	f04f 3a80 	movne.w	sl, #2155905152	@ 0x80808080
 80166e4:	9205      	str	r2, [sp, #20]
 80166e6:	f007 fafd 	bl	801dce4 <nema_cl_get_space>
 80166ea:	4603      	mov	r3, r0
 80166ec:	2800      	cmp	r0, #0
 80166ee:	f000 85ba 	beq.w	8017266 <draw_with_stencil+0xbd2>
 80166f2:	9a05      	ldr	r2, [sp, #20]
 80166f4:	0436      	lsls	r6, r6, #16
 80166f6:	3203      	adds	r2, #3
 80166f8:	0892      	lsrs	r2, r2, #2
 80166fa:	f8c0 a024 	str.w	sl, [r0, #36]	@ 0x24
 80166fe:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8016702:	ea4f 0a82 	mov.w	sl, r2, lsl #2
 8016706:	4640      	mov	r0, r8
 8016708:	fa1f f882 	uxth.w	r8, r2
 801670c:	4332      	orrs	r2, r6
 801670e:	60da      	str	r2, [r3, #12]
 8016710:	2501      	movs	r5, #1
 8016712:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 8016716:	e9c3 2504 	strd	r2, r5, [r3, #16]
 801671a:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 801671e:	619a      	str	r2, [r3, #24]
 8016720:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8016724:	621a      	str	r2, [r3, #32]
 8016726:	f44f 7288 	mov.w	r2, #272	@ 0x110
 801672a:	629a      	str	r2, [r3, #40]	@ 0x28
 801672c:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8016730:	f04f 0e34 	mov.w	lr, #52	@ 0x34
 8016734:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 8016738:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 801673c:	f44f 7b8c 	mov.w	fp, #280	@ 0x118
 8016740:	631a      	str	r2, [r3, #48]	@ 0x30
 8016742:	fa1f fa8a 	uxth.w	sl, sl
 8016746:	4ab5      	ldr	r2, [pc, #724]	@ (8016a1c <draw_with_stencil+0x388>)
 8016748:	ea48 0806 	orr.w	r8, r8, r6
 801674c:	f04a 7a80 	orr.w	sl, sl, #16777216	@ 0x1000000
 8016750:	f8c3 8034 	str.w	r8, [r3, #52]	@ 0x34
 8016754:	f8c3 a004 	str.w	sl, [r3, #4]
 8016758:	f8c3 e000 	str.w	lr, [r3]
 801675c:	f8c3 c008 	str.w	ip, [r3, #8]
 8016760:	f8c3 b038 	str.w	fp, [r3, #56]	@ 0x38
 8016764:	63d9      	str	r1, [r3, #60]	@ 0x3c
 8016766:	61da      	str	r2, [r3, #28]
 8016768:	f7fb fc6a 	bl	8012040 <nema_enable_aa_flags>
 801676c:	f8d9 3000 	ldr.w	r3, [r9]
 8016770:	4680      	mov	r8, r0
 8016772:	edd3 7a06 	vldr	s15, [r3, #24]
 8016776:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801677a:	edd3 6a07 	vldr	s13, [r3, #28]
 801677e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8016782:	ed93 6a08 	vldr	s12, [r3, #32]
 8016786:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 801678a:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 801678e:	ed8d 7a1f 	vstr	s14, [sp, #124]	@ 0x7c
 8016792:	ed93 5a0a 	vldr	s10, [r3, #40]	@ 0x28
 8016796:	ed8d 5a20 	vstr	s10, [sp, #128]	@ 0x80
 801679a:	ed93 4a0b 	vldr	s8, [r3, #44]	@ 0x2c
 801679e:	ed8d 4a21 	vstr	s8, [sp, #132]	@ 0x84
 80167a2:	edd3 5a0c 	vldr	s11, [r3, #48]	@ 0x30
 80167a6:	eef4 7ac6 	vcmpe.f32	s15, s12
 80167aa:	edcd 5a22 	vstr	s11, [sp, #136]	@ 0x88
 80167ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167b2:	edd3 4a0d 	vldr	s9, [r3, #52]	@ 0x34
 80167b6:	edcd 4a23 	vstr	s9, [sp, #140]	@ 0x8c
 80167ba:	dd7a      	ble.n	80168b2 <draw_with_stencil+0x21e>
 80167bc:	aa1e      	add	r2, sp, #120	@ 0x78
 80167be:	ed92 7a00 	vldr	s14, [r2]
 80167c2:	eeb4 5ac7 	vcmpe.f32	s10, s14
 80167c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167ca:	d432      	bmi.n	8016832 <draw_with_stencil+0x19e>
 80167cc:	ee77 7a45 	vsub.f32	s15, s14, s10
 80167d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80167d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167d8:	f100 85f9 	bmi.w	80173ce <draw_with_stencil+0xd3a>
 80167dc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80167e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167e4:	f100 85d4 	bmi.w	8017390 <draw_with_stencil+0xcfc>
 80167e8:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80167ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167f0:	eeb0 6a47 	vmov.f32	s12, s14
 80167f4:	f100 85d4 	bmi.w	80173a0 <draw_with_stencil+0xd0c>
 80167f8:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80167fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016800:	f340 85d6 	ble.w	80173b0 <draw_with_stencil+0xd1c>
 8016804:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016808:	ed9f 6a86 	vldr	s12, [pc, #536]	@ 8016a24 <draw_with_stencil+0x390>
 801680c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016810:	bf54      	ite	pl
 8016812:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 8016816:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801681a:	eef4 7ac7 	vcmpe.f32	s15, s14
 801681e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016822:	d808      	bhi.n	8016836 <draw_with_stencil+0x1a2>
 8016824:	edd2 7a01 	vldr	s15, [r2, #4]
 8016828:	eeb4 4ae7 	vcmpe.f32	s8, s15
 801682c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016830:	d501      	bpl.n	8016836 <draw_with_stencil+0x1a2>
 8016832:	2502      	movs	r5, #2
 8016834:	aa20      	add	r2, sp, #128	@ 0x80
 8016836:	edd2 7a00 	vldr	s15, [r2]
 801683a:	eef4 5ae7 	vcmpe.f32	s11, s15
 801683e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016842:	d46a      	bmi.n	801691a <draw_with_stencil+0x286>
 8016844:	ee37 7ae5 	vsub.f32	s14, s15, s11
 8016848:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801684c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016850:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016854:	bf48      	it	mi
 8016856:	eeb1 7a47 	vnegmi.f32	s14, s14
 801685a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801685e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016862:	bf4c      	ite	mi
 8016864:	eeb1 6a67 	vnegmi.f32	s12, s15
 8016868:	eeb0 6a67 	vmovpl.f32	s12, s15
 801686c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016870:	f100 8553 	bmi.w	801731a <draw_with_stencil+0xc86>
 8016874:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801687c:	f340 8555 	ble.w	801732a <draw_with_stencil+0xc96>
 8016880:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016884:	ed9f 6a67 	vldr	s12, [pc, #412]	@ 8016a24 <draw_with_stencil+0x390>
 8016888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801688c:	bf4c      	ite	mi
 801688e:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 8016892:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 8016896:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801689a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801689e:	d83d      	bhi.n	801691c <draw_with_stencil+0x288>
 80168a0:	edd2 7a01 	vldr	s15, [r2, #4]
 80168a4:	eef4 4a67 	vcmp.f32	s9, s15
 80168a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ac:	bf48      	it	mi
 80168ae:	2503      	movmi	r5, #3
 80168b0:	e034      	b.n	801691c <draw_with_stencil+0x288>
 80168b2:	ee77 3ac6 	vsub.f32	s7, s15, s12
 80168b6:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 80168ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168be:	f100 857d 	bmi.w	80173bc <draw_with_stencil+0xd28>
 80168c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ca:	f100 8589 	bmi.w	80173e0 <draw_with_stencil+0xd4c>
 80168ce:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80168d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168d6:	eeb0 3a67 	vmov.f32	s6, s15
 80168da:	f100 8589 	bmi.w	80173f0 <draw_with_stencil+0xd5c>
 80168de:	eeb4 6ac3 	vcmpe.f32	s12, s6
 80168e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168e6:	f340 858b 	ble.w	8017400 <draw_with_stencil+0xd6c>
 80168ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168f2:	ed9f 6a4c 	vldr	s12, [pc, #304]	@ 8016a24 <draw_with_stencil+0x390>
 80168f6:	f101 8089 	bmi.w	8017a0c <draw_with_stencil+0x1378>
 80168fa:	ee66 7a27 	vmul.f32	s15, s12, s15
 80168fe:	eef4 3ae7 	vcmpe.f32	s7, s15
 8016902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016906:	f200 865b 	bhi.w	80175c0 <draw_with_stencil+0xf2c>
 801690a:	eef4 6ac7 	vcmpe.f32	s13, s14
 801690e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016912:	f340 8655 	ble.w	80175c0 <draw_with_stencil+0xf2c>
 8016916:	2501      	movs	r5, #1
 8016918:	e750      	b.n	80167bc <draw_with_stencil+0x128>
 801691a:	2503      	movs	r5, #3
 801691c:	1cea      	adds	r2, r5, #3
 801691e:	1c69      	adds	r1, r5, #1
 8016920:	a82c      	add	r0, sp, #176	@ 0xb0
 8016922:	f002 0203 	and.w	r2, r2, #3
 8016926:	f001 0103 	and.w	r1, r1, #3
 801692a:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801692e:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
 8016932:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016936:	ed55 4a10 	vldr	s9, [r5, #-64]	@ 0xffffffc0
 801693a:	ed15 5a0f 	vldr	s10, [r5, #-60]	@ 0xffffffc4
 801693e:	ed52 7a10 	vldr	s15, [r2, #-64]	@ 0xffffffc0
 8016942:	ed51 5a0f 	vldr	s11, [r1, #-60]	@ 0xffffffc4
 8016946:	ed11 7a10 	vldr	s14, [r1, #-64]	@ 0xffffffc0
 801694a:	ed12 6a0f 	vldr	s12, [r2, #-60]	@ 0xffffffc4
 801694e:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8016952:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016956:	ee37 7a64 	vsub.f32	s14, s14, s9
 801695a:	ee36 6a45 	vsub.f32	s12, s12, s10
 801695e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8016962:	ee27 7a06 	vmul.f32	s14, s14, s12
 8016966:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801696a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801696e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016972:	dd19      	ble.n	80169a8 <draw_with_stencil+0x314>
 8016974:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 8016978:	aa1c      	add	r2, sp, #112	@ 0x70
 801697a:	c903      	ldmia	r1, {r0, r1}
 801697c:	e882 0003 	stmia.w	r2, {r0, r1}
 8016980:	f103 0128 	add.w	r1, r3, #40	@ 0x28
 8016984:	aa1e      	add	r2, sp, #120	@ 0x78
 8016986:	c903      	ldmia	r1, {r0, r1}
 8016988:	e882 0003 	stmia.w	r2, {r0, r1}
 801698c:	f103 0120 	add.w	r1, r3, #32
 8016990:	aa20      	add	r2, sp, #128	@ 0x80
 8016992:	c903      	ldmia	r1, {r0, r1}
 8016994:	e882 0003 	stmia.w	r2, {r0, r1}
 8016998:	3318      	adds	r3, #24
 801699a:	aa22      	add	r2, sp, #136	@ 0x88
 801699c:	e893 0003 	ldmia.w	r3, {r0, r1}
 80169a0:	e882 0003 	stmia.w	r2, {r0, r1}
 80169a4:	eddd 6a1d 	vldr	s13, [sp, #116]	@ 0x74
 80169a8:	eddd 7a1f 	vldr	s15, [sp, #124]	@ 0x7c
 80169ac:	eef4 7ae6 	vcmpe.f32	s15, s13
 80169b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169b4:	d438      	bmi.n	8016a28 <draw_with_stencil+0x394>
 80169b6:	ee36 6ae7 	vsub.f32	s12, s13, s15
 80169ba:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80169be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169c2:	f100 84dc 	bmi.w	801737e <draw_with_stencil+0xcea>
 80169c6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80169ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169ce:	f100 84c0 	bmi.w	8017352 <draw_with_stencil+0xcbe>
 80169d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80169d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169da:	eef0 5a66 	vmov.f32	s11, s13
 80169de:	f100 84c0 	bmi.w	8017362 <draw_with_stencil+0xcce>
 80169e2:	eef4 7ae5 	vcmpe.f32	s15, s11
 80169e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169ea:	f300 86ae 	bgt.w	801774a <draw_with_stencil+0x10b6>
 80169ee:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8016a24 <draw_with_stencil+0x390>
 80169f2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80169f6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80169fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169fe:	db08      	blt.n	8016a12 <draw_with_stencil+0x37e>
 8016a00:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016a04:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 8016a08:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a10:	d40a      	bmi.n	8016a28 <draw_with_stencil+0x394>
 8016a12:	2300      	movs	r3, #0
 8016a14:	ad1c      	add	r5, sp, #112	@ 0x70
 8016a16:	e009      	b.n	8016a2c <draw_with_stencil+0x398>
 8016a18:	20082f68 	.word	0x20082f68
 8016a1c:	1c1f0015 	.word	0x1c1f0015
 8016a20:	20083010 	.word	0x20083010
 8016a24:	3727c5ac 	.word	0x3727c5ac
 8016a28:	2301      	movs	r3, #1
 8016a2a:	ad1e      	add	r5, sp, #120	@ 0x78
 8016a2c:	ed95 6a01 	vldr	s12, [r5, #4]
 8016a30:	ed9d 7a21 	vldr	s14, [sp, #132]	@ 0x84
 8016a34:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a3c:	dc2d      	bgt.n	8016a9a <draw_with_stencil+0x406>
 8016a3e:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016a42:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a4a:	f100 8432 	bmi.w	80172b2 <draw_with_stencil+0xc1e>
 8016a4e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016a52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a56:	f100 8567 	bmi.w	8017528 <draw_with_stencil+0xe94>
 8016a5a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016a5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a62:	eeb0 5a46 	vmov.f32	s10, s12
 8016a66:	f100 8567 	bmi.w	8017538 <draw_with_stencil+0xea4>
 8016a6a:	eeb4 7ac5 	vcmpe.f32	s14, s10
 8016a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a72:	f300 8650 	bgt.w	8017716 <draw_with_stencil+0x1082>
 8016a76:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 8016a24 <draw_with_stencil+0x390>
 8016a7a:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016a7e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a86:	db0a      	blt.n	8016a9e <draw_with_stencil+0x40a>
 8016a88:	edd5 5a00 	vldr	s11, [r5]
 8016a8c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016a90:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016a94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a98:	d501      	bpl.n	8016a9e <draw_with_stencil+0x40a>
 8016a9a:	2302      	movs	r3, #2
 8016a9c:	ad20      	add	r5, sp, #128	@ 0x80
 8016a9e:	ed95 6a01 	vldr	s12, [r5, #4]
 8016aa2:	ed9d 8a23 	vldr	s16, [sp, #140]	@ 0x8c
 8016aa6:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aae:	d42f      	bmi.n	8016b10 <draw_with_stencil+0x47c>
 8016ab0:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016ab4:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016ab8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016abc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016ac0:	bf48      	it	mi
 8016ac2:	eef1 5a65 	vnegmi.f32	s11, s11
 8016ac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aca:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016ace:	bf4c      	ite	mi
 8016ad0:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016ad4:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016ad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016adc:	f100 842b 	bmi.w	8017336 <draw_with_stencil+0xca2>
 8016ae0:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016ae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ae8:	f300 8656 	bgt.w	8017798 <draw_with_stencil+0x1104>
 8016aec:	ed1f 6a33 	vldr	s12, [pc, #-204]	@ 8016a24 <draw_with_stencil+0x390>
 8016af0:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016af4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016afc:	d80a      	bhi.n	8016b14 <draw_with_stencil+0x480>
 8016afe:	edd5 5a00 	vldr	s11, [r5]
 8016b02:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016b06:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b0e:	d501      	bpl.n	8016b14 <draw_with_stencil+0x480>
 8016b10:	2303      	movs	r3, #3
 8016b12:	ad22      	add	r5, sp, #136	@ 0x88
 8016b14:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b1c:	f100 816c 	bmi.w	8016df8 <draw_with_stencil+0x764>
 8016b20:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016b24:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b2c:	f100 853f 	bmi.w	80175ae <draw_with_stencil+0xf1a>
 8016b30:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b38:	f100 8523 	bmi.w	8017582 <draw_with_stencil+0xeee>
 8016b3c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b44:	eeb0 5a66 	vmov.f32	s10, s13
 8016b48:	f100 8523 	bmi.w	8017592 <draw_with_stencil+0xefe>
 8016b4c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8016b50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b54:	f100 8606 	bmi.w	8017764 <draw_with_stencil+0x10d0>
 8016b58:	ed1f 6a4e 	vldr	s12, [pc, #-312]	@ 8016a24 <draw_with_stencil+0x390>
 8016b5c:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016b60:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b68:	d809      	bhi.n	8016b7e <draw_with_stencil+0x4ea>
 8016b6a:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016b6e:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016b72:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b7a:	f100 813d 	bmi.w	8016df8 <draw_with_stencil+0x764>
 8016b7e:	eef0 8a66 	vmov.f32	s17, s13
 8016b82:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b8a:	f10d 0e70 	add.w	lr, sp, #112	@ 0x70
 8016b8e:	f340 813d 	ble.w	8016e0c <draw_with_stencil+0x778>
 8016b92:	eef0 8a47 	vmov.f32	s17, s14
 8016b96:	f10d 0e80 	add.w	lr, sp, #128	@ 0x80
 8016b9a:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8016b9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ba2:	d42f      	bmi.n	8016c04 <draw_with_stencil+0x570>
 8016ba4:	ee78 5ac8 	vsub.f32	s11, s17, s16
 8016ba8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016bac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bb0:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016bb4:	bf48      	it	mi
 8016bb6:	eef1 5a65 	vnegmi.f32	s11, s11
 8016bba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bbe:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016bc2:	bf4c      	ite	mi
 8016bc4:	eeb1 5a68 	vnegmi.f32	s10, s17
 8016bc8:	eeb0 5a68 	vmovpl.f32	s10, s17
 8016bcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bd0:	f100 838d 	bmi.w	80172ee <draw_with_stencil+0xc5a>
 8016bd4:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016bd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bdc:	f300 85cf 	bgt.w	801777e <draw_with_stencil+0x10ea>
 8016be0:	ed1f 6a70 	vldr	s12, [pc, #-448]	@ 8016a24 <draw_with_stencil+0x390>
 8016be4:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016be8:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bf0:	d80c      	bhi.n	8016c0c <draw_with_stencil+0x578>
 8016bf2:	edde 5a00 	vldr	s11, [lr]
 8016bf6:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016bfa:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c02:	dd03      	ble.n	8016c0c <draw_with_stencil+0x578>
 8016c04:	eef0 8a48 	vmov.f32	s17, s16
 8016c08:	f10d 0e88 	add.w	lr, sp, #136	@ 0x88
 8016c0c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016c10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c14:	f300 812b 	bgt.w	8016e6e <draw_with_stencil+0x7da>
 8016c18:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016c1c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016c20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c24:	f100 8477 	bmi.w	8017516 <draw_with_stencil+0xe82>
 8016c28:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016c2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c30:	f100 845b 	bmi.w	80174ea <draw_with_stencil+0xe56>
 8016c34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c3c:	eeb0 5a66 	vmov.f32	s10, s13
 8016c40:	f100 845b 	bmi.w	80174fa <draw_with_stencil+0xe66>
 8016c44:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016c48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c4c:	f300 8522 	bgt.w	8017694 <draw_with_stencil+0x1000>
 8016c50:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8016a24 <draw_with_stencil+0x390>
 8016c54:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016c58:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016c5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c60:	db09      	blt.n	8016c76 <draw_with_stencil+0x5e2>
 8016c62:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016c66:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016c6a:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016c6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c72:	f300 80fc 	bgt.w	8016e6e <draw_with_stencil+0x7da>
 8016c76:	a91c      	add	r1, sp, #112	@ 0x70
 8016c78:	ed91 6a01 	vldr	s12, [r1, #4]
 8016c7c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016c80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c84:	f04f 0000 	mov.w	r0, #0
 8016c88:	f340 80fc 	ble.w	8016e84 <draw_with_stencil+0x7f0>
 8016c8c:	2002      	movs	r0, #2
 8016c8e:	a920      	add	r1, sp, #128	@ 0x80
 8016c90:	ed91 6a01 	vldr	s12, [r1, #4]
 8016c94:	eeb4 6ac8 	vcmpe.f32	s12, s16
 8016c98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c9c:	d42f      	bmi.n	8016cfe <draw_with_stencil+0x66a>
 8016c9e:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016ca2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016caa:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016cae:	bf48      	it	mi
 8016cb0:	eef1 5a65 	vnegmi.f32	s11, s11
 8016cb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cb8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016cbc:	bf4c      	ite	mi
 8016cbe:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016cc2:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016cc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cca:	f100 8443 	bmi.w	8017554 <draw_with_stencil+0xec0>
 8016cce:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cd6:	f300 8504 	bgt.w	80176e2 <draw_with_stencil+0x104e>
 8016cda:	ed1f 6aae 	vldr	s12, [pc, #-696]	@ 8016a24 <draw_with_stencil+0x390>
 8016cde:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016ce2:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cea:	d80a      	bhi.n	8016d02 <draw_with_stencil+0x66e>
 8016cec:	edd1 5a00 	vldr	s11, [r1]
 8016cf0:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016cf4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016cf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cfc:	d501      	bpl.n	8016d02 <draw_with_stencil+0x66e>
 8016cfe:	2003      	movs	r0, #3
 8016d00:	a922      	add	r1, sp, #136	@ 0x88
 8016d02:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016d06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d0a:	f300 80ef 	bgt.w	8016eec <draw_with_stencil+0x858>
 8016d0e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016d12:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d1a:	f100 83a6 	bmi.w	801746a <draw_with_stencil+0xdd6>
 8016d1e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d26:	f100 838b 	bmi.w	8017440 <draw_with_stencil+0xdac>
 8016d2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d32:	eeb0 5a66 	vmov.f32	s10, s13
 8016d36:	f100 838b 	bmi.w	8017450 <draw_with_stencil+0xdbc>
 8016d3a:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016d3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d42:	f300 84db 	bgt.w	80176fc <draw_with_stencil+0x1068>
 8016d46:	ed1f 6ac9 	vldr	s12, [pc, #-804]	@ 8016a24 <draw_with_stencil+0x390>
 8016d4a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016d4e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016d52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d56:	db09      	blt.n	8016d6c <draw_with_stencil+0x6d8>
 8016d58:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016d5c:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016d60:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d68:	f100 80c0 	bmi.w	8016eec <draw_with_stencil+0x858>
 8016d6c:	eef0 7a66 	vmov.f32	s15, s13
 8016d70:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016d74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d78:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 8016d7c:	f340 80be 	ble.w	8016efc <draw_with_stencil+0x868>
 8016d80:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016d84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d88:	f10d 0c80 	add.w	ip, sp, #128	@ 0x80
 8016d8c:	f300 80ed 	bgt.w	8016f6a <draw_with_stencil+0x8d6>
 8016d90:	ee77 6a48 	vsub.f32	s13, s14, s16
 8016d94:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016d98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d9c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016da0:	bf48      	it	mi
 8016da2:	eef1 6a66 	vnegmi.f32	s13, s13
 8016da6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016daa:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016dae:	bf4c      	ite	mi
 8016db0:	eeb1 6a47 	vnegmi.f32	s12, s14
 8016db4:	eeb0 6a47 	vmovpl.f32	s12, s14
 8016db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dbc:	f100 8373 	bmi.w	80174a6 <draw_with_stencil+0xe12>
 8016dc0:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016dc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dc8:	f300 847e 	bgt.w	80176c8 <draw_with_stencil+0x1034>
 8016dcc:	ed5f 7aeb 	vldr	s15, [pc, #-940]	@ 8016a24 <draw_with_stencil+0x390>
 8016dd0:	ee68 7a27 	vmul.f32	s15, s16, s15
 8016dd4:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ddc:	d809      	bhi.n	8016df2 <draw_with_stencil+0x75e>
 8016dde:	eddc 6a00 	vldr	s13, [ip]
 8016de2:	eddd 7a22 	vldr	s15, [sp, #136]	@ 0x88
 8016de6:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dee:	f300 80bc 	bgt.w	8016f6a <draw_with_stencil+0x8d6>
 8016df2:	eeb0 8a47 	vmov.f32	s16, s14
 8016df6:	e0ba      	b.n	8016f6e <draw_with_stencil+0x8da>
 8016df8:	eef0 8a67 	vmov.f32	s17, s15
 8016dfc:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016e00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e04:	f10d 0e78 	add.w	lr, sp, #120	@ 0x78
 8016e08:	f73f aec3 	bgt.w	8016b92 <draw_with_stencil+0x4fe>
 8016e0c:	ee78 5ac7 	vsub.f32	s11, s17, s14
 8016e10:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e18:	f100 8276 	bmi.w	8017308 <draw_with_stencil+0xc74>
 8016e1c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e24:	f100 824e 	bmi.w	80172c4 <draw_with_stencil+0xc30>
 8016e28:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016e2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e30:	eeb0 5a68 	vmov.f32	s10, s17
 8016e34:	f100 824e 	bmi.w	80172d4 <draw_with_stencil+0xc40>
 8016e38:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016e3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e40:	f100 8435 	bmi.w	80176ae <draw_with_stencil+0x101a>
 8016e44:	ed9f 6a28 	vldr	s12, [pc, #160]	@ 8016ee8 <draw_with_stencil+0x854>
 8016e48:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016e4c:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e54:	f63f aea1 	bhi.w	8016b9a <draw_with_stencil+0x506>
 8016e58:	edde 5a00 	vldr	s11, [lr]
 8016e5c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016e60:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e68:	f73f ae93 	bgt.w	8016b92 <draw_with_stencil+0x4fe>
 8016e6c:	e695      	b.n	8016b9a <draw_with_stencil+0x506>
 8016e6e:	a91e      	add	r1, sp, #120	@ 0x78
 8016e70:	ed91 6a01 	vldr	s12, [r1, #4]
 8016e74:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016e78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e7c:	f04f 0001 	mov.w	r0, #1
 8016e80:	f73f af04 	bgt.w	8016c8c <draw_with_stencil+0x5f8>
 8016e84:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016e88:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e90:	f100 836e 	bmi.w	8017570 <draw_with_stencil+0xedc>
 8016e94:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e9c:	f100 8310 	bmi.w	80174c0 <draw_with_stencil+0xe2c>
 8016ea0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ea8:	eeb0 5a46 	vmov.f32	s10, s12
 8016eac:	f100 8310 	bmi.w	80174d0 <draw_with_stencil+0xe3c>
 8016eb0:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016eb8:	f100 843a 	bmi.w	8017730 <draw_with_stencil+0x109c>
 8016ebc:	ed9f 6a0a 	vldr	s12, [pc, #40]	@ 8016ee8 <draw_with_stencil+0x854>
 8016ec0:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016ec4:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016ec8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ecc:	f6ff aee0 	blt.w	8016c90 <draw_with_stencil+0x5fc>
 8016ed0:	ed91 6a00 	vldr	s12, [r1]
 8016ed4:	eddd 5a20 	vldr	s11, [sp, #128]	@ 0x80
 8016ed8:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016edc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ee0:	f73f aed4 	bgt.w	8016c8c <draw_with_stencil+0x5f8>
 8016ee4:	e6d4      	b.n	8016c90 <draw_with_stencil+0x5fc>
 8016ee6:	bf00      	nop
 8016ee8:	3727c5ac 	.word	0x3727c5ac
 8016eec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016ef0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ef4:	f10d 0c78 	add.w	ip, sp, #120	@ 0x78
 8016ef8:	f73f af42 	bgt.w	8016d80 <draw_with_stencil+0x6ec>
 8016efc:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8016f00:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f08:	f100 827e 	bmi.w	8017408 <draw_with_stencil+0xd74>
 8016f0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f14:	f100 82b2 	bmi.w	801747c <draw_with_stencil+0xde8>
 8016f18:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016f1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f20:	eef0 5a67 	vmov.f32	s11, s15
 8016f24:	f100 82b2 	bmi.w	801748c <draw_with_stencil+0xdf8>
 8016f28:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8016f2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f30:	f300 843f 	bgt.w	80177b2 <draw_with_stencil+0x111e>
 8016f34:	ed5f 6a14 	vldr	s13, [pc, #-80]	@ 8016ee8 <draw_with_stencil+0x854>
 8016f38:	ee67 6a26 	vmul.f32	s13, s14, s13
 8016f3c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8016f40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f44:	db09      	blt.n	8016f5a <draw_with_stencil+0x8c6>
 8016f46:	eddc 6a00 	vldr	s13, [ip]
 8016f4a:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016f4e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8016f52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f56:	f53f af13 	bmi.w	8016d80 <draw_with_stencil+0x6ec>
 8016f5a:	eeb0 7a67 	vmov.f32	s14, s15
 8016f5e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016f62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f66:	f77f af13 	ble.w	8016d90 <draw_with_stencil+0x6fc>
 8016f6a:	f10d 0c88 	add.w	ip, sp, #136	@ 0x88
 8016f6e:	1c5a      	adds	r2, r3, #1
 8016f70:	f002 0203 	and.w	r2, r2, #3
 8016f74:	f10d 0ab0 	add.w	sl, sp, #176	@ 0xb0
 8016f78:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8016f7c:	4575      	cmp	r5, lr
 8016f7e:	ed52 fa10 	vldr	s31, [r2, #-64]	@ 0xffffffc0
 8016f82:	ed52 da0f 	vldr	s27, [r2, #-60]	@ 0xffffffc4
 8016f86:	ed9e ba00 	vldr	s22, [lr]
 8016f8a:	f000 8349 	beq.w	8017620 <draw_with_stencil+0xf8c>
 8016f8e:	1c9a      	adds	r2, r3, #2
 8016f90:	f002 0203 	and.w	r2, r2, #3
 8016f94:	ab2c      	add	r3, sp, #176	@ 0xb0
 8016f96:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8016f9a:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8016f9e:	ed12 aa10 	vldr	s20, [r2, #-64]	@ 0xffffffc0
 8016fa2:	ed95 9a00 	vldr	s18, [r5]
 8016fa6:	ee3a aa67 	vsub.f32	s20, s20, s15
 8016faa:	ee39 9a27 	vadd.f32	s18, s18, s15
 8016fae:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8016fb2:	ed12 da0f 	vldr	s26, [r2, #-60]	@ 0xffffffc4
 8016fb6:	ee2a aa27 	vmul.f32	s20, s20, s15
 8016fba:	ee29 9a27 	vmul.f32	s18, s18, s15
 8016fbe:	ed95 ea01 	vldr	s28, [r5, #4]
 8016fc2:	1cc3      	adds	r3, r0, #3
 8016fc4:	f003 0303 	and.w	r3, r3, #3
 8016fc8:	aa2c      	add	r2, sp, #176	@ 0xb0
 8016fca:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8016fce:	4561      	cmp	r1, ip
 8016fd0:	ed13 ca10 	vldr	s24, [r3, #-64]	@ 0xffffffc0
 8016fd4:	ed53 ca0f 	vldr	s25, [r3, #-60]	@ 0xffffffc4
 8016fd8:	eddc ba00 	vldr	s23, [ip]
 8016fdc:	f000 8342 	beq.w	8017664 <draw_with_stencil+0xfd0>
 8016fe0:	1c83      	adds	r3, r0, #2
 8016fe2:	f003 0303 	and.w	r3, r3, #3
 8016fe6:	aa2c      	add	r2, sp, #176	@ 0xb0
 8016fe8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8016fec:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8016ff0:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8016ff4:	edd1 9a00 	vldr	s19, [r1]
 8016ff8:	ee7a aae7 	vsub.f32	s21, s21, s15
 8016ffc:	ee79 9aa7 	vadd.f32	s19, s19, s15
 8017000:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017004:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 8017008:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801700c:	ee69 9aa7 	vmul.f32	s19, s19, s15
 8017010:	ed91 fa01 	vldr	s30, [r1, #4]
 8017014:	2009      	movs	r0, #9
 8017016:	f006 fe65 	bl	801dce4 <nema_cl_get_space>
 801701a:	2800      	cmp	r0, #0
 801701c:	d040      	beq.n	80170a0 <draw_with_stencil+0xa0c>
 801701e:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8017022:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017026:	ee7f fa87 	vadd.f32	s31, s31, s14
 801702a:	ee3b ba47 	vsub.f32	s22, s22, s14
 801702e:	ee6f faa7 	vmul.f32	s31, s31, s15
 8017032:	ee2b ba27 	vmul.f32	s22, s22, s15
 8017036:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 801703a:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801703e:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 8017042:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017046:	ed80 9a01 	vstr	s18, [r0, #4]
 801704a:	ed80 ea03 	vstr	s28, [r0, #12]
 801704e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017052:	f44f 7550 	mov.w	r5, #832	@ 0x340
 8017056:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801705a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801705e:	edc0 da07 	vstr	s27, [r0, #28]
 8017062:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8017066:	ed80 da0b 	vstr	s26, [r0, #44]	@ 0x2c
 801706a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801706e:	edc0 fa05 	vstr	s31, [r0, #20]
 8017072:	ed80 ba0d 	vstr	s22, [r0, #52]	@ 0x34
 8017076:	f8c0 e010 	str.w	lr, [r0, #16]
 801707a:	f8df e3b8 	ldr.w	lr, [pc, #952]	@ 8017434 <draw_with_stencil+0xda0>
 801707e:	f8c0 b000 	str.w	fp, [r0]
 8017082:	f8c0 a008 	str.w	sl, [r0, #8]
 8017086:	f8c0 c018 	str.w	ip, [r0, #24]
 801708a:	f8de c010 	ldr.w	ip, [lr, #16]
 801708e:	6281      	str	r1, [r0, #40]	@ 0x28
 8017090:	49e2      	ldr	r1, [pc, #904]	@ (801741c <draw_with_stencil+0xd88>)
 8017092:	6205      	str	r5, [r0, #32]
 8017094:	f04c 0505 	orr.w	r5, ip, #5
 8017098:	6445      	str	r5, [r0, #68]	@ 0x44
 801709a:	6302      	str	r2, [r0, #48]	@ 0x30
 801709c:	6383      	str	r3, [r0, #56]	@ 0x38
 801709e:	6401      	str	r1, [r0, #64]	@ 0x40
 80170a0:	2009      	movs	r0, #9
 80170a2:	f006 fe1f 	bl	801dce4 <nema_cl_get_space>
 80170a6:	2800      	cmp	r0, #0
 80170a8:	d040      	beq.n	801712c <draw_with_stencil+0xa98>
 80170aa:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 80170ae:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 80170b2:	ee7b bac7 	vsub.f32	s23, s23, s14
 80170b6:	ee3c ca07 	vadd.f32	s24, s24, s14
 80170ba:	ee6b baa7 	vmul.f32	s23, s23, s15
 80170be:	ee2c ca27 	vmul.f32	s24, s24, s15
 80170c2:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 80170c6:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 80170ca:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 80170ce:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 80170d2:	edc0 9a01 	vstr	s19, [r0, #4]
 80170d6:	ed80 fa03 	vstr	s30, [r0, #12]
 80170da:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80170de:	f44f 7550 	mov.w	r5, #832	@ 0x340
 80170e2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80170e6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80170ea:	ed80 8a07 	vstr	s16, [r0, #28]
 80170ee:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 80170f2:	edc0 ea0b 	vstr	s29, [r0, #44]	@ 0x2c
 80170f6:	edc0 ca0f 	vstr	s25, [r0, #60]	@ 0x3c
 80170fa:	edc0 ba05 	vstr	s23, [r0, #20]
 80170fe:	ed80 ca0d 	vstr	s24, [r0, #52]	@ 0x34
 8017102:	f8c0 e010 	str.w	lr, [r0, #16]
 8017106:	f8df e32c 	ldr.w	lr, [pc, #812]	@ 8017434 <draw_with_stencil+0xda0>
 801710a:	f8c0 b000 	str.w	fp, [r0]
 801710e:	f8c0 a008 	str.w	sl, [r0, #8]
 8017112:	f8c0 c018 	str.w	ip, [r0, #24]
 8017116:	f8de c010 	ldr.w	ip, [lr, #16]
 801711a:	6281      	str	r1, [r0, #40]	@ 0x28
 801711c:	49bf      	ldr	r1, [pc, #764]	@ (801741c <draw_with_stencil+0xd88>)
 801711e:	6205      	str	r5, [r0, #32]
 8017120:	f04c 0505 	orr.w	r5, ip, #5
 8017124:	6445      	str	r5, [r0, #68]	@ 0x44
 8017126:	6302      	str	r2, [r0, #48]	@ 0x30
 8017128:	6383      	str	r3, [r0, #56]	@ 0x38
 801712a:	6401      	str	r1, [r0, #64]	@ 0x40
 801712c:	4640      	mov	r0, r8
 801712e:	f7fa ff87 	bl	8012040 <nema_enable_aa_flags>
 8017132:	f7f9 fe13 	bl	8010d5c <nema_set_clip_pop>
 8017136:	9d05      	ldr	r5, [sp, #20]
 8017138:	2034      	movs	r0, #52	@ 0x34
 801713a:	b2a9      	uxth	r1, r5
 801713c:	f041 6110 	orr.w	r1, r1, #150994944	@ 0x9000000
 8017140:	f006 fe2c 	bl	801dd9c <nema_cl_add_cmd>
 8017144:	4629      	mov	r1, r5
 8017146:	f8df a2f0 	ldr.w	sl, [pc, #752]	@ 8017438 <draw_with_stencil+0xda4>
 801714a:	4331      	orrs	r1, r6
 801714c:	2038      	movs	r0, #56	@ 0x38
 801714e:	f006 fe25 	bl	801dd9c <nema_cl_add_cmd>
 8017152:	4db3      	ldr	r5, [pc, #716]	@ (8017420 <draw_with_stencil+0xd8c>)
 8017154:	f89a 3000 	ldrb.w	r3, [sl]
 8017158:	702b      	strb	r3, [r5, #0]
 801715a:	2b00      	cmp	r3, #0
 801715c:	f040 8234 	bne.w	80175c8 <draw_with_stencil+0xf34>
 8017160:	4bb0      	ldr	r3, [pc, #704]	@ (8017424 <draw_with_stencil+0xd90>)
 8017162:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8017428 <draw_with_stencil+0xd94>
 8017166:	edd3 6a00 	vldr	s13, [r3]
 801716a:	eef4 6ac7 	vcmpe.f32	s13, s14
 801716e:	4aaf      	ldr	r2, [pc, #700]	@ (801742c <draw_with_stencil+0xd98>)
 8017170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017174:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8017178:	edd2 7a00 	vldr	s15, [r2]
 801717c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8017180:	bfc8      	it	gt
 8017182:	eeb7 6a00 	vmovgt.f32	s12, #112	@ 0x3f800000  1.0
 8017186:	4baa      	ldr	r3, [pc, #680]	@ (8017430 <draw_with_stencil+0xd9c>)
 8017188:	bfc8      	it	gt
 801718a:	ee86 7a26 	vdivgt.f32	s14, s12, s13
 801718e:	ed9f 6aa6 	vldr	s12, [pc, #664]	@ 8017428 <draw_with_stencil+0xd94>
 8017192:	edd3 6a00 	vldr	s13, [r3]
 8017196:	eef4 6ac6 	vcmpe.f32	s13, s12
 801719a:	bfd8      	it	le
 801719c:	eeb7 7a00 	vmovle.f32	s14, #112	@ 0x3f800000  1.0
 80171a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171a4:	bfca      	itet	gt
 80171a6:	eef7 5a00 	vmovgt.f32	s11, #112	@ 0x3f800000  1.0
 80171aa:	eeb7 6a00 	vmovle.f32	s12, #112	@ 0x3f800000  1.0
 80171ae:	ee85 6aa6 	vdivgt.f32	s12, s11, s13
 80171b2:	ee37 7a87 	vadd.f32	s14, s15, s14
 80171b6:	ed94 2a08 	vldr	s4, [r4, #32]
 80171ba:	ee77 7a86 	vadd.f32	s15, s15, s12
 80171be:	edd4 2a09 	vldr	s5, [r4, #36]	@ 0x24
 80171c2:	ed94 6a04 	vldr	s12, [r4, #16]
 80171c6:	edd4 6a05 	vldr	s13, [r4, #20]
 80171ca:	ee37 3a07 	vadd.f32	s6, s14, s14
 80171ce:	ee77 3aa7 	vadd.f32	s7, s15, s15
 80171d2:	ee36 5a02 	vadd.f32	s10, s12, s4
 80171d6:	ee76 5aa2 	vadd.f32	s11, s13, s5
 80171da:	ed94 4a06 	vldr	s8, [r4, #24]
 80171de:	edd4 4a07 	vldr	s9, [r4, #28]
 80171e2:	ee36 6a47 	vsub.f32	s12, s12, s14
 80171e6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80171ea:	ee35 5a07 	vadd.f32	s10, s10, s14
 80171ee:	ee75 5aa7 	vadd.f32	s11, s11, s15
 80171f2:	ee33 3a02 	vadd.f32	s6, s6, s4
 80171f6:	ee73 3aa2 	vadd.f32	s7, s7, s5
 80171fa:	ee34 7a07 	vadd.f32	s14, s8, s14
 80171fe:	ee74 7aa7 	vadd.f32	s15, s9, s15
 8017202:	ed84 3a12 	vstr	s6, [r4, #72]	@ 0x48
 8017206:	edc4 3a13 	vstr	s7, [r4, #76]	@ 0x4c
 801720a:	ed84 5a0c 	vstr	s10, [r4, #48]	@ 0x30
 801720e:	ed84 5a0e 	vstr	s10, [r4, #56]	@ 0x38
 8017212:	ed84 6a0a 	vstr	s12, [r4, #40]	@ 0x28
 8017216:	ed84 6a10 	vstr	s12, [r4, #64]	@ 0x40
 801721a:	ed84 6a14 	vstr	s12, [r4, #80]	@ 0x50
 801721e:	ed84 7a16 	vstr	s14, [r4, #88]	@ 0x58
 8017222:	edc4 5a0f 	vstr	s11, [r4, #60]	@ 0x3c
 8017226:	edc4 5a11 	vstr	s11, [r4, #68]	@ 0x44
 801722a:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 801722e:	edc4 6a0d 	vstr	s13, [r4, #52]	@ 0x34
 8017232:	edc4 6a15 	vstr	s13, [r4, #84]	@ 0x54
 8017236:	edc4 7a17 	vstr	s15, [r4, #92]	@ 0x5c
 801723a:	683b      	ldr	r3, [r7, #0]
 801723c:	7f1b      	ldrb	r3, [r3, #28]
 801723e:	2b01      	cmp	r3, #1
 8017240:	f000 82ec 	beq.w	801781c <draw_with_stencil+0x1188>
 8017244:	f0c0 82c2 	bcc.w	80177cc <draw_with_stencil+0x1138>
 8017248:	2b02      	cmp	r3, #2
 801724a:	d018      	beq.n	801727e <draw_with_stencil+0xbea>
 801724c:	2004      	movs	r0, #4
 801724e:	f005 fbf1 	bl	801ca34 <nema_vg_set_error>
 8017252:	2604      	movs	r6, #4
 8017254:	4630      	mov	r0, r6
 8017256:	f005 fbed 	bl	801ca34 <nema_vg_set_error>
 801725a:	4630      	mov	r0, r6
 801725c:	b02d      	add	sp, #180	@ 0xb4
 801725e:	ecbd 8b10 	vpop	{d8-d15}
 8017262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017266:	f44f 7000 	mov.w	r0, #512	@ 0x200
 801726a:	f005 fbe3 	bl	801ca34 <nema_vg_set_error>
 801726e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8017272:	4630      	mov	r0, r6
 8017274:	b02d      	add	sp, #180	@ 0xb4
 8017276:	ecbd 8b10 	vpop	{d8-d15}
 801727a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801727e:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017282:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017286:	f006 fd89 	bl	801dd9c <nema_cl_add_cmd>
 801728a:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 801728e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017292:	f006 fd83 	bl	801dd9c <nema_cl_add_cmd>
 8017296:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 801729a:	f7fa fffd 	bl	8012298 <nema_set_rop_blend_mode>
 801729e:	4620      	mov	r0, r4
 80172a0:	f7fe fb1a 	bl	80158d8 <fill_path_even_odd>
 80172a4:	4606      	mov	r6, r0
 80172a6:	2800      	cmp	r0, #0
 80172a8:	f000 83bb 	beq.w	8017a22 <draw_with_stencil+0x138e>
 80172ac:	f005 fbc2 	bl	801ca34 <nema_vg_set_error>
 80172b0:	e7d0      	b.n	8017254 <draw_with_stencil+0xbc0>
 80172b2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80172b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172ba:	eef1 5a65 	vneg.f32	s11, s11
 80172be:	f57f abcc 	bpl.w	8016a5a <draw_with_stencil+0x3c6>
 80172c2:	e131      	b.n	8017528 <draw_with_stencil+0xe94>
 80172c4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80172c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172cc:	eeb1 5a68 	vneg.f32	s10, s17
 80172d0:	f57f adb2 	bpl.w	8016e38 <draw_with_stencil+0x7a4>
 80172d4:	eeb1 6a47 	vneg.f32	s12, s14
 80172d8:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80172dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172e0:	f300 81e5 	bgt.w	80176ae <draw_with_stencil+0x101a>
 80172e4:	ed9f 5a55 	vldr	s10, [pc, #340]	@ 801743c <draw_with_stencil+0xda8>
 80172e8:	ee26 6a05 	vmul.f32	s12, s12, s10
 80172ec:	e5ae      	b.n	8016e4c <draw_with_stencil+0x7b8>
 80172ee:	eeb1 6a48 	vneg.f32	s12, s16
 80172f2:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80172f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172fa:	f300 8240 	bgt.w	801777e <draw_with_stencil+0x10ea>
 80172fe:	ed9f 5a4f 	vldr	s10, [pc, #316]	@ 801743c <draw_with_stencil+0xda8>
 8017302:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017306:	e46f      	b.n	8016be8 <draw_with_stencil+0x554>
 8017308:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801730c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017310:	eef1 5a65 	vneg.f32	s11, s11
 8017314:	f57f ad88 	bpl.w	8016e28 <draw_with_stencil+0x794>
 8017318:	e7d4      	b.n	80172c4 <draw_with_stencil+0xc30>
 801731a:	eef1 5a65 	vneg.f32	s11, s11
 801731e:	eef4 5ac6 	vcmpe.f32	s11, s12
 8017322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017326:	f73f aaab 	bgt.w	8016880 <draw_with_stencil+0x1ec>
 801732a:	eddf 7a44 	vldr	s15, [pc, #272]	@ 801743c <draw_with_stencil+0xda8>
 801732e:	ee65 7aa7 	vmul.f32	s15, s11, s15
 8017332:	f7ff bab0 	b.w	8016896 <draw_with_stencil+0x202>
 8017336:	eef1 4a48 	vneg.f32	s9, s16
 801733a:	eef4 4ac5 	vcmpe.f32	s9, s10
 801733e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017342:	f300 8229 	bgt.w	8017798 <draw_with_stencil+0x1104>
 8017346:	ed9f 6a3d 	vldr	s12, [pc, #244]	@ 801743c <draw_with_stencil+0xda8>
 801734a:	ee24 6a86 	vmul.f32	s12, s9, s12
 801734e:	f7ff bbd1 	b.w	8016af4 <draw_with_stencil+0x460>
 8017352:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017356:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801735a:	eef1 5a66 	vneg.f32	s11, s13
 801735e:	f57f ab40 	bpl.w	80169e2 <draw_with_stencil+0x34e>
 8017362:	eeb1 7a67 	vneg.f32	s14, s15
 8017366:	eef4 5ac7 	vcmpe.f32	s11, s14
 801736a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801736e:	f100 81ec 	bmi.w	801774a <draw_with_stencil+0x10b6>
 8017372:	eddf 5a32 	vldr	s11, [pc, #200]	@ 801743c <draw_with_stencil+0xda8>
 8017376:	ee27 7a25 	vmul.f32	s14, s14, s11
 801737a:	f7ff bb3c 	b.w	80169f6 <draw_with_stencil+0x362>
 801737e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017386:	eeb1 6a46 	vneg.f32	s12, s12
 801738a:	f57f ab22 	bpl.w	80169d2 <draw_with_stencil+0x33e>
 801738e:	e7e0      	b.n	8017352 <draw_with_stencil+0xcbe>
 8017390:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8017394:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017398:	eeb1 6a47 	vneg.f32	s12, s14
 801739c:	f57f aa2c 	bpl.w	80167f8 <draw_with_stencil+0x164>
 80173a0:	eeb1 5a45 	vneg.f32	s10, s10
 80173a4:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80173a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173ac:	f53f aa2a 	bmi.w	8016804 <draw_with_stencil+0x170>
 80173b0:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 801743c <draw_with_stencil+0xda8>
 80173b4:	ee25 7a07 	vmul.f32	s14, s10, s14
 80173b8:	f7ff ba2f 	b.w	801681a <draw_with_stencil+0x186>
 80173bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80173c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173c4:	eef1 3a63 	vneg.f32	s7, s7
 80173c8:	f57f aa81 	bpl.w	80168ce <draw_with_stencil+0x23a>
 80173cc:	e008      	b.n	80173e0 <draw_with_stencil+0xd4c>
 80173ce:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80173d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173d6:	eef1 7a67 	vneg.f32	s15, s15
 80173da:	f57f aa05 	bpl.w	80167e8 <draw_with_stencil+0x154>
 80173de:	e7d7      	b.n	8017390 <draw_with_stencil+0xcfc>
 80173e0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80173e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173e8:	eeb1 3a67 	vneg.f32	s6, s15
 80173ec:	f57f aa77 	bpl.w	80168de <draw_with_stencil+0x24a>
 80173f0:	eeb1 6a46 	vneg.f32	s12, s12
 80173f4:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80173f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173fc:	f53f aa75 	bmi.w	80168ea <draw_with_stencil+0x256>
 8017400:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801743c <draw_with_stencil+0xda8>
 8017404:	f7ff ba79 	b.w	80168fa <draw_with_stencil+0x266>
 8017408:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801740c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017410:	eeb1 6a46 	vneg.f32	s12, s12
 8017414:	f57f ad80 	bpl.w	8016f18 <draw_with_stencil+0x884>
 8017418:	e030      	b.n	801747c <draw_with_stencil+0xde8>
 801741a:	bf00      	nop
 801741c:	ff000100 	.word	0xff000100
 8017420:	20082fb4 	.word	0x20082fb4
 8017424:	20082fac 	.word	0x20082fac
 8017428:	3a83126f 	.word	0x3a83126f
 801742c:	20000134 	.word	0x20000134
 8017430:	20082fb0 	.word	0x20082fb0
 8017434:	20000064 	.word	0x20000064
 8017438:	20082fb5 	.word	0x20082fb5
 801743c:	3727c5ac 	.word	0x3727c5ac
 8017440:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017448:	eeb1 5a66 	vneg.f32	s10, s13
 801744c:	f57f ac75 	bpl.w	8016d3a <draw_with_stencil+0x6a6>
 8017450:	eeb1 6a67 	vneg.f32	s12, s15
 8017454:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801745c:	f300 814e 	bgt.w	80176fc <draw_with_stencil+0x1068>
 8017460:	ed1f 5a0a 	vldr	s10, [pc, #-40]	@ 801743c <draw_with_stencil+0xda8>
 8017464:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017468:	e471      	b.n	8016d4e <draw_with_stencil+0x6ba>
 801746a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801746e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017472:	eef1 5a65 	vneg.f32	s11, s11
 8017476:	f57f ac58 	bpl.w	8016d2a <draw_with_stencil+0x696>
 801747a:	e7e1      	b.n	8017440 <draw_with_stencil+0xdac>
 801747c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017484:	eef1 5a67 	vneg.f32	s11, s15
 8017488:	f57f ad4e 	bpl.w	8016f28 <draw_with_stencil+0x894>
 801748c:	eef1 6a47 	vneg.f32	s13, s14
 8017490:	eef4 6ae5 	vcmpe.f32	s13, s11
 8017494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017498:	f300 818b 	bgt.w	80177b2 <draw_with_stencil+0x111e>
 801749c:	ed5f 5a19 	vldr	s11, [pc, #-100]	@ 801743c <draw_with_stencil+0xda8>
 80174a0:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80174a4:	e54a      	b.n	8016f3c <draw_with_stencil+0x8a8>
 80174a6:	eef1 7a48 	vneg.f32	s15, s16
 80174aa:	eef4 7ac6 	vcmpe.f32	s15, s12
 80174ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174b2:	f300 8109 	bgt.w	80176c8 <draw_with_stencil+0x1034>
 80174b6:	ed1f 6a1f 	vldr	s12, [pc, #-124]	@ 801743c <draw_with_stencil+0xda8>
 80174ba:	ee67 7a86 	vmul.f32	s15, s15, s12
 80174be:	e489      	b.n	8016dd4 <draw_with_stencil+0x740>
 80174c0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80174c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174c8:	eeb1 5a46 	vneg.f32	s10, s12
 80174cc:	f57f acf0 	bpl.w	8016eb0 <draw_with_stencil+0x81c>
 80174d0:	eef1 4a47 	vneg.f32	s9, s14
 80174d4:	eef4 4ac5 	vcmpe.f32	s9, s10
 80174d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174dc:	f300 8128 	bgt.w	8017730 <draw_with_stencil+0x109c>
 80174e0:	ed1f 6a2a 	vldr	s12, [pc, #-168]	@ 801743c <draw_with_stencil+0xda8>
 80174e4:	ee24 6a86 	vmul.f32	s12, s9, s12
 80174e8:	e4ec      	b.n	8016ec4 <draw_with_stencil+0x830>
 80174ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80174ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174f2:	eeb1 5a66 	vneg.f32	s10, s13
 80174f6:	f57f aba5 	bpl.w	8016c44 <draw_with_stencil+0x5b0>
 80174fa:	eeb1 6a67 	vneg.f32	s12, s15
 80174fe:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017506:	f300 80c5 	bgt.w	8017694 <draw_with_stencil+0x1000>
 801750a:	ed1f 5a34 	vldr	s10, [pc, #-208]	@ 801743c <draw_with_stencil+0xda8>
 801750e:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017512:	f7ff bba1 	b.w	8016c58 <draw_with_stencil+0x5c4>
 8017516:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801751a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801751e:	eef1 5a65 	vneg.f32	s11, s11
 8017522:	f57f ab87 	bpl.w	8016c34 <draw_with_stencil+0x5a0>
 8017526:	e7e0      	b.n	80174ea <draw_with_stencil+0xe56>
 8017528:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801752c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017530:	eeb1 5a46 	vneg.f32	s10, s12
 8017534:	f57f aa99 	bpl.w	8016a6a <draw_with_stencil+0x3d6>
 8017538:	eef1 4a47 	vneg.f32	s9, s14
 801753c:	eeb4 5ae4 	vcmpe.f32	s10, s9
 8017540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017544:	f100 80e7 	bmi.w	8017716 <draw_with_stencil+0x1082>
 8017548:	ed1f 6a44 	vldr	s12, [pc, #-272]	@ 801743c <draw_with_stencil+0xda8>
 801754c:	ee24 6a86 	vmul.f32	s12, s9, s12
 8017550:	f7ff ba95 	b.w	8016a7e <draw_with_stencil+0x3ea>
 8017554:	eef1 4a48 	vneg.f32	s9, s16
 8017558:	eef4 4ac5 	vcmpe.f32	s9, s10
 801755c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017560:	f300 80bf 	bgt.w	80176e2 <draw_with_stencil+0x104e>
 8017564:	ed1f 6a4b 	vldr	s12, [pc, #-300]	@ 801743c <draw_with_stencil+0xda8>
 8017568:	ee24 6a86 	vmul.f32	s12, s9, s12
 801756c:	f7ff bbb9 	b.w	8016ce2 <draw_with_stencil+0x64e>
 8017570:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017578:	eef1 5a65 	vneg.f32	s11, s11
 801757c:	f57f ac90 	bpl.w	8016ea0 <draw_with_stencil+0x80c>
 8017580:	e79e      	b.n	80174c0 <draw_with_stencil+0xe2c>
 8017582:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801758a:	eeb1 5a66 	vneg.f32	s10, s13
 801758e:	f57f aadd 	bpl.w	8016b4c <draw_with_stencil+0x4b8>
 8017592:	eeb1 6a67 	vneg.f32	s12, s15
 8017596:	eeb4 5ac6 	vcmpe.f32	s10, s12
 801759a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801759e:	f100 80e1 	bmi.w	8017764 <draw_with_stencil+0x10d0>
 80175a2:	ed1f 5a5a 	vldr	s10, [pc, #-360]	@ 801743c <draw_with_stencil+0xda8>
 80175a6:	ee26 6a05 	vmul.f32	s12, s12, s10
 80175aa:	f7ff bad9 	b.w	8016b60 <draw_with_stencil+0x4cc>
 80175ae:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80175b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175b6:	eef1 5a65 	vneg.f32	s11, s11
 80175ba:	f57f aabf 	bpl.w	8016b3c <draw_with_stencil+0x4a8>
 80175be:	e7e0      	b.n	8017582 <draw_with_stencil+0xeee>
 80175c0:	2500      	movs	r5, #0
 80175c2:	aa1c      	add	r2, sp, #112	@ 0x70
 80175c4:	f7ff b8fb 	b.w	80167be <draw_with_stencil+0x12a>
 80175c8:	2007      	movs	r0, #7
 80175ca:	f006 fb8b 	bl	801dce4 <nema_cl_get_space>
 80175ce:	b318      	cbz	r0, 8017618 <draw_with_stencil+0xf84>
 80175d0:	f44f 725d 	mov.w	r2, #884	@ 0x374
 80175d4:	6002      	str	r2, [r0, #0]
 80175d6:	f44f 725a 	mov.w	r2, #872	@ 0x368
 80175da:	4b8c      	ldr	r3, [pc, #560]	@ (801780c <draw_with_stencil+0x1178>)
 80175dc:	6959      	ldr	r1, [r3, #20]
 80175de:	6082      	str	r2, [r0, #8]
 80175e0:	f44f 7258 	mov.w	r2, #864	@ 0x360
 80175e4:	6041      	str	r1, [r0, #4]
 80175e6:	6899      	ldr	r1, [r3, #8]
 80175e8:	6102      	str	r2, [r0, #16]
 80175ea:	f44f 7259 	mov.w	r2, #868	@ 0x364
 80175ee:	60c1      	str	r1, [r0, #12]
 80175f0:	6819      	ldr	r1, [r3, #0]
 80175f2:	6182      	str	r2, [r0, #24]
 80175f4:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 80175f8:	6141      	str	r1, [r0, #20]
 80175fa:	6859      	ldr	r1, [r3, #4]
 80175fc:	6202      	str	r2, [r0, #32]
 80175fe:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8017602:	61c1      	str	r1, [r0, #28]
 8017604:	68d9      	ldr	r1, [r3, #12]
 8017606:	6282      	str	r2, [r0, #40]	@ 0x28
 8017608:	6241      	str	r1, [r0, #36]	@ 0x24
 801760a:	6919      	ldr	r1, [r3, #16]
 801760c:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8017610:	2300      	movs	r3, #0
 8017612:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8017616:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8017618:	2300      	movs	r3, #0
 801761a:	f88a 3000 	strb.w	r3, [sl]
 801761e:	e59f      	b.n	8017160 <draw_with_stencil+0xacc>
 8017620:	3303      	adds	r3, #3
 8017622:	f003 0303 	and.w	r3, r3, #3
 8017626:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801762a:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 801762e:	ed13 aa10 	vldr	s20, [r3, #-64]	@ 0xffffffc0
 8017632:	eeb5 9a00 	vmov.f32	s18, #80	@ 0x3e800000  0.250
 8017636:	ee3a aa67 	vsub.f32	s20, s20, s15
 801763a:	ee7b 7a27 	vadd.f32	s15, s22, s15
 801763e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8017642:	ed13 da0f 	vldr	s26, [r3, #-60]	@ 0xffffffc4
 8017646:	ee27 9a89 	vmul.f32	s18, s15, s18
 801764a:	eeb0 ea68 	vmov.f32	s28, s17
 801764e:	e4b8      	b.n	8016fc2 <draw_with_stencil+0x92e>
 8017650:	2602      	movs	r6, #2
 8017652:	2002      	movs	r0, #2
 8017654:	f005 f9ee 	bl	801ca34 <nema_vg_set_error>
 8017658:	4630      	mov	r0, r6
 801765a:	b02d      	add	sp, #180	@ 0xb4
 801765c:	ecbd 8b10 	vpop	{d8-d15}
 8017660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017664:	1c43      	adds	r3, r0, #1
 8017666:	f003 0303 	and.w	r3, r3, #3
 801766a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801766e:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8017672:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8017676:	eef5 9a00 	vmov.f32	s19, #80	@ 0x3e800000  0.250
 801767a:	ee7a aae7 	vsub.f32	s21, s21, s15
 801767e:	ee7b 7aa7 	vadd.f32	s15, s23, s15
 8017682:	ee6a aaa9 	vmul.f32	s21, s21, s19
 8017686:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 801768a:	ee67 9aa9 	vmul.f32	s19, s15, s19
 801768e:	eeb0 fa48 	vmov.f32	s30, s16
 8017692:	e4bf      	b.n	8017014 <draw_with_stencil+0x980>
 8017694:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017698:	ed9f 6a5d 	vldr	s12, [pc, #372]	@ 8017810 <draw_with_stencil+0x117c>
 801769c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176a0:	bf54      	ite	pl
 80176a2:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80176a6:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80176aa:	f7ff bad5 	b.w	8016c58 <draw_with_stencil+0x5c4>
 80176ae:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80176b2:	ed9f 6a57 	vldr	s12, [pc, #348]	@ 8017810 <draw_with_stencil+0x117c>
 80176b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176ba:	bf54      	ite	pl
 80176bc:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 80176c0:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 80176c4:	f7ff bbc2 	b.w	8016e4c <draw_with_stencil+0x7b8>
 80176c8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80176cc:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8017810 <draw_with_stencil+0x117c>
 80176d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176d4:	bf4c      	ite	mi
 80176d6:	ee67 7a67 	vnmulmi.f32	s15, s14, s15
 80176da:	ee67 7a27 	vmulpl.f32	s15, s14, s15
 80176de:	f7ff bb79 	b.w	8016dd4 <draw_with_stencil+0x740>
 80176e2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80176e6:	ed9f 5a4a 	vldr	s10, [pc, #296]	@ 8017810 <draw_with_stencil+0x117c>
 80176ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176ee:	bf4c      	ite	mi
 80176f0:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80176f4:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80176f8:	f7ff baf3 	b.w	8016ce2 <draw_with_stencil+0x64e>
 80176fc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017700:	ed9f 6a43 	vldr	s12, [pc, #268]	@ 8017810 <draw_with_stencil+0x117c>
 8017704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017708:	bf54      	ite	pl
 801770a:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 801770e:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8017712:	f7ff bb1c 	b.w	8016d4e <draw_with_stencil+0x6ba>
 8017716:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801771a:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8017810 <draw_with_stencil+0x117c>
 801771e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017722:	bf54      	ite	pl
 8017724:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017728:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 801772c:	f7ff b9a7 	b.w	8016a7e <draw_with_stencil+0x3ea>
 8017730:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017734:	ed9f 5a36 	vldr	s10, [pc, #216]	@ 8017810 <draw_with_stencil+0x117c>
 8017738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801773c:	bf54      	ite	pl
 801773e:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017742:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017746:	f7ff bbbd 	b.w	8016ec4 <draw_with_stencil+0x830>
 801774a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801774e:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8017810 <draw_with_stencil+0x117c>
 8017752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017756:	bf54      	ite	pl
 8017758:	ee26 7a87 	vmulpl.f32	s14, s13, s14
 801775c:	ee26 7ac7 	vnmulmi.f32	s14, s13, s14
 8017760:	f7ff b949 	b.w	80169f6 <draw_with_stencil+0x362>
 8017764:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017768:	ed9f 6a29 	vldr	s12, [pc, #164]	@ 8017810 <draw_with_stencil+0x117c>
 801776c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017770:	bf54      	ite	pl
 8017772:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8017776:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 801777a:	f7ff b9f1 	b.w	8016b60 <draw_with_stencil+0x4cc>
 801777e:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017782:	ed9f 6a23 	vldr	s12, [pc, #140]	@ 8017810 <draw_with_stencil+0x117c>
 8017786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801778a:	bf4c      	ite	mi
 801778c:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017790:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017794:	f7ff ba28 	b.w	8016be8 <draw_with_stencil+0x554>
 8017798:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801779c:	ed9f 5a1c 	vldr	s10, [pc, #112]	@ 8017810 <draw_with_stencil+0x117c>
 80177a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177a4:	bf4c      	ite	mi
 80177a6:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80177aa:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80177ae:	f7ff b9a1 	b.w	8016af4 <draw_with_stencil+0x460>
 80177b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80177b6:	eddf 6a16 	vldr	s13, [pc, #88]	@ 8017810 <draw_with_stencil+0x117c>
 80177ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177be:	bf54      	ite	pl
 80177c0:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 80177c4:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 80177c8:	f7ff bbb8 	b.w	8016f3c <draw_with_stencil+0x8a8>
 80177cc:	f04f 33ff 	mov.w	r3, #4294967295
 80177d0:	2103      	movs	r1, #3
 80177d2:	461a      	mov	r2, r3
 80177d4:	480f      	ldr	r0, [pc, #60]	@ (8017814 <draw_with_stencil+0x1180>)
 80177d6:	f006 fc03 	bl	801dfe0 <nema_set_blend>
 80177da:	f04f 30ff 	mov.w	r0, #4294967295
 80177de:	f7fa fdb9 	bl	8012354 <nema_set_raster_color>
 80177e2:	4b0d      	ldr	r3, [pc, #52]	@ (8017818 <draw_with_stencil+0x1184>)
 80177e4:	4620      	mov	r0, r4
 80177e6:	681b      	ldr	r3, [r3, #0]
 80177e8:	2b00      	cmp	r3, #0
 80177ea:	f000 8113 	beq.w	8017a14 <draw_with_stencil+0x1380>
 80177ee:	f7fc ff27 	bl	8014640 <stroke_path>
 80177f2:	4606      	mov	r6, r0
 80177f4:	2800      	cmp	r0, #0
 80177f6:	f47f ad59 	bne.w	80172ac <draw_with_stencil+0xc18>
 80177fa:	f8d9 3000 	ldr.w	r3, [r9]
 80177fe:	2034      	movs	r0, #52	@ 0x34
 8017800:	8a19      	ldrh	r1, [r3, #16]
 8017802:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017806:	f006 fac9 	bl	801dd9c <nema_cl_add_cmd>
 801780a:	e026      	b.n	801785a <draw_with_stencil+0x11c6>
 801780c:	20082fec 	.word	0x20082fec
 8017810:	3727c5ac 	.word	0x3727c5ac
 8017814:	01000001 	.word	0x01000001
 8017818:	20082f70 	.word	0x20082f70
 801781c:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017820:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017824:	f006 faba 	bl	801dd9c <nema_cl_add_cmd>
 8017828:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 801782c:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017830:	f006 fab4 	bl	801dd9c <nema_cl_add_cmd>
 8017834:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 8017838:	f7fa fd2e 	bl	8012298 <nema_set_rop_blend_mode>
 801783c:	4620      	mov	r0, r4
 801783e:	f7fe f84b 	bl	80158d8 <fill_path_even_odd>
 8017842:	4606      	mov	r6, r0
 8017844:	2800      	cmp	r0, #0
 8017846:	f47f ad31 	bne.w	80172ac <draw_with_stencil+0xc18>
 801784a:	f8d9 3000 	ldr.w	r3, [r9]
 801784e:	2034      	movs	r0, #52	@ 0x34
 8017850:	8a19      	ldrh	r1, [r3, #16]
 8017852:	f041 5138 	orr.w	r1, r1, #771751936	@ 0x2e000000
 8017856:	f006 faa1 	bl	801dd9c <nema_cl_add_cmd>
 801785a:	683b      	ldr	r3, [r7, #0]
 801785c:	f893 6048 	ldrb.w	r6, [r3, #72]	@ 0x48
 8017860:	2e01      	cmp	r6, #1
 8017862:	f000 8258 	beq.w	8017d16 <draw_with_stencil+0x1682>
 8017866:	9b04      	ldr	r3, [sp, #16]
 8017868:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 801786c:	2b00      	cmp	r3, #0
 801786e:	f040 8218 	bne.w	8017ca2 <draw_with_stencil+0x160e>
 8017872:	683a      	ldr	r2, [r7, #0]
 8017874:	7fd3      	ldrb	r3, [r2, #31]
 8017876:	f003 0307 	and.w	r3, r3, #7
 801787a:	2b03      	cmp	r3, #3
 801787c:	f000 8244 	beq.w	8017d08 <draw_with_stencil+0x1674>
 8017880:	2b04      	cmp	r3, #4
 8017882:	f000 8322 	beq.w	8017eca <draw_with_stencil+0x1836>
 8017886:	9b04      	ldr	r3, [sp, #16]
 8017888:	6a56      	ldr	r6, [r2, #36]	@ 0x24
 801788a:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 801788e:	b2b2      	uxth	r2, r6
 8017890:	f240 5101 	movw	r1, #1281	@ 0x501
 8017894:	2b00      	cmp	r3, #0
 8017896:	f000 80cd 	beq.w	8017a34 <draw_with_stencil+0x13a0>
 801789a:	428a      	cmp	r2, r1
 801789c:	f000 8483 	beq.w	80181a6 <draw_with_stencil+0x1b12>
 80178a0:	2b02      	cmp	r3, #2
 80178a2:	f006 020f 	and.w	r2, r6, #15
 80178a6:	f3c6 2c03 	ubfx	ip, r6, #8, #4
 80178aa:	f000 8317 	beq.w	8017edc <draw_with_stencil+0x1848>
 80178ae:	2000      	movs	r0, #0
 80178b0:	2103      	movs	r1, #3
 80178b2:	2702      	movs	r7, #2
 80178b4:	2301      	movs	r3, #1
 80178b6:	901d      	str	r0, [sp, #116]	@ 0x74
 80178b8:	48bb      	ldr	r0, [pc, #748]	@ (8017ba8 <draw_with_stencil+0x1514>)
 80178ba:	901c      	str	r0, [sp, #112]	@ 0x70
 80178bc:	0170      	lsls	r0, r6, #5
 80178be:	d508      	bpl.n	80178d2 <draw_with_stencil+0x123e>
 80178c0:	2600      	movs	r6, #0
 80178c2:	a82c      	add	r0, sp, #176	@ 0xb0
 80178c4:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 80178c8:	463b      	mov	r3, r7
 80178ca:	460f      	mov	r7, r1
 80178cc:	49b7      	ldr	r1, [pc, #732]	@ (8017bac <draw_with_stencil+0x1518>)
 80178ce:	e940 6110 	strd	r6, r1, [r0, #-64]	@ 0x40
 80178d2:	1f91      	subs	r1, r2, #6
 80178d4:	2903      	cmp	r1, #3
 80178d6:	f200 821c 	bhi.w	8017d12 <draw_with_stencil+0x167e>
 80178da:	2100      	movs	r1, #0
 80178dc:	ae2c      	add	r6, sp, #176	@ 0xb0
 80178de:	48b4      	ldr	r0, [pc, #720]	@ (8017bb0 <draw_with_stencil+0x151c>)
 80178e0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80178e4:	4eb3      	ldr	r6, [pc, #716]	@ (8017bb4 <draw_with_stencil+0x1520>)
 80178e6:	e943 0110 	strd	r0, r1, [r3, #-64]	@ 0x40
 80178ea:	463b      	mov	r3, r7
 80178ec:	3701      	adds	r7, #1
 80178ee:	48b2      	ldr	r0, [pc, #712]	@ (8017bb8 <draw_with_stencil+0x1524>)
 80178f0:	49b2      	ldr	r1, [pc, #712]	@ (8017bbc <draw_with_stencil+0x1528>)
 80178f2:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80178f6:	4311      	orrs	r1, r2
 80178f8:	aa2c      	add	r2, sp, #176	@ 0xb0
 80178fa:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 80178fe:	e942 6110 	strd	r6, r1, [r2, #-64]	@ 0x40
 8017902:	f1bc 0f00 	cmp.w	ip, #0
 8017906:	d00a      	beq.n	801791e <draw_with_stencil+0x128a>
 8017908:	2600      	movs	r6, #0
 801790a:	f850 002c 	ldr.w	r0, [r0, ip, lsl #2]
 801790e:	4aac      	ldr	r2, [pc, #688]	@ (8017bc0 <draw_with_stencil+0x152c>)
 8017910:	a92c      	add	r1, sp, #176	@ 0xb0
 8017912:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8017916:	4302      	orrs	r2, r0
 8017918:	e941 6210 	strd	r6, r2, [r1, #-64]	@ 0x40
 801791c:	1c9f      	adds	r7, r3, #2
 801791e:	4ba5      	ldr	r3, [pc, #660]	@ (8017bb4 <draw_with_stencil+0x1520>)
 8017920:	49a8      	ldr	r1, [pc, #672]	@ (8017bc4 <draw_with_stencil+0x1530>)
 8017922:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017924:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 8017928:	f842 3c40 	str.w	r3, [r2, #-64]
 801792c:	f842 1c3c 	str.w	r1, [r2, #-60]
 8017930:	a82c      	add	r0, sp, #176	@ 0xb0
 8017932:	49a5      	ldr	r1, [pc, #660]	@ (8017bc8 <draw_with_stencil+0x1534>)
 8017934:	4aa5      	ldr	r2, [pc, #660]	@ (8017bcc <draw_with_stencil+0x1538>)
 8017936:	1c7b      	adds	r3, r7, #1
 8017938:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801793c:	2001      	movs	r0, #1
 801793e:	f843 1c40 	str.w	r1, [r3, #-64]
 8017942:	f843 2c3c 	str.w	r2, [r3, #-60]
 8017946:	f7fa fca7 	bl	8012298 <nema_set_rop_blend_mode>
 801794a:	a81c      	add	r0, sp, #112	@ 0x70
 801794c:	1cb9      	adds	r1, r7, #2
 801794e:	2200      	movs	r2, #0
 8017950:	f7fa fc82 	bl	8012258 <nema_load_frag_shader>
 8017954:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017958:	f7fa fc98 	bl	801228c <nema_set_frag_ptr>
 801795c:	9b04      	ldr	r3, [sp, #16]
 801795e:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8017962:	2b04      	cmp	r3, #4
 8017964:	f000 80a5 	beq.w	8017ab2 <draw_with_stencil+0x141e>
 8017968:	2009      	movs	r0, #9
 801796a:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 801796e:	f8d4 802c 	ldr.w	r8, [r4, #44]	@ 0x2c
 8017972:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 8017976:	edd4 8a0d 	vldr	s17, [r4, #52]	@ 0x34
 801797a:	ed94 8a0e 	vldr	s16, [r4, #56]	@ 0x38
 801797e:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8017980:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 8017982:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017984:	f006 f9ae 	bl	801dce4 <nema_cl_get_space>
 8017988:	b380      	cbz	r0, 80179ec <draw_with_stencil+0x1358>
 801798a:	f44f 734c 	mov.w	r3, #816	@ 0x330
 801798e:	f8c0 9004 	str.w	r9, [r0, #4]
 8017992:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017996:	f44f 7949 	mov.w	r9, #804	@ 0x324
 801799a:	f8c0 800c 	str.w	r8, [r0, #12]
 801799e:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 80179a2:	f44f 784d 	mov.w	r8, #820	@ 0x334
 80179a6:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 80179aa:	f44f 7154 	mov.w	r1, #848	@ 0x350
 80179ae:	f44f 7255 	mov.w	r2, #852	@ 0x354
 80179b2:	ed80 9a05 	vstr	s18, [r0, #20]
 80179b6:	edc0 8a07 	vstr	s17, [r0, #28]
 80179ba:	ed80 8a09 	vstr	s16, [r0, #36]	@ 0x24
 80179be:	6103      	str	r3, [r0, #16]
 80179c0:	4b83      	ldr	r3, [pc, #524]	@ (8017bd0 <draw_with_stencil+0x153c>)
 80179c2:	f8c0 b000 	str.w	fp, [r0]
 80179c6:	f8c0 9008 	str.w	r9, [r0, #8]
 80179ca:	691b      	ldr	r3, [r3, #16]
 80179cc:	62c7      	str	r7, [r0, #44]	@ 0x2c
 80179ce:	4f81      	ldr	r7, [pc, #516]	@ (8017bd4 <draw_with_stencil+0x1540>)
 80179d0:	f043 0305 	orr.w	r3, r3, #5
 80179d4:	6346      	str	r6, [r0, #52]	@ 0x34
 80179d6:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80179d8:	6443      	str	r3, [r0, #68]	@ 0x44
 80179da:	f8c0 8018 	str.w	r8, [r0, #24]
 80179de:	f8c0 e020 	str.w	lr, [r0, #32]
 80179e2:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 80179e6:	6301      	str	r1, [r0, #48]	@ 0x30
 80179e8:	6382      	str	r2, [r0, #56]	@ 0x38
 80179ea:	6407      	str	r7, [r0, #64]	@ 0x40
 80179ec:	782e      	ldrb	r6, [r5, #0]
 80179ee:	2e00      	cmp	r6, #0
 80179f0:	f43f ac3f 	beq.w	8017272 <draw_with_stencil+0xbde>
 80179f4:	2101      	movs	r1, #1
 80179f6:	f44f 7062 	mov.w	r0, #904	@ 0x388
 80179fa:	f006 f9cf 	bl	801dd9c <nema_cl_add_cmd>
 80179fe:	2300      	movs	r3, #0
 8017a00:	782a      	ldrb	r2, [r5, #0]
 8017a02:	461e      	mov	r6, r3
 8017a04:	702b      	strb	r3, [r5, #0]
 8017a06:	f88a 2000 	strb.w	r2, [sl]
 8017a0a:	e432      	b.n	8017272 <draw_with_stencil+0xbde>
 8017a0c:	ee67 7ac6 	vnmul.f32	s15, s15, s12
 8017a10:	f7fe bf75 	b.w	80168fe <draw_with_stencil+0x26a>
 8017a14:	f7fb fe50 	bl	80136b8 <stroke_thin_path>
 8017a18:	4606      	mov	r6, r0
 8017a1a:	2800      	cmp	r0, #0
 8017a1c:	f43f aeed 	beq.w	80177fa <draw_with_stencil+0x1166>
 8017a20:	e444      	b.n	80172ac <draw_with_stencil+0xc18>
 8017a22:	f8d9 3000 	ldr.w	r3, [r9]
 8017a26:	2034      	movs	r0, #52	@ 0x34
 8017a28:	8a19      	ldrh	r1, [r3, #16]
 8017a2a:	f041 513c 	orr.w	r1, r1, #788529152	@ 0x2f000000
 8017a2e:	f006 f9b5 	bl	801dd9c <nema_cl_add_cmd>
 8017a32:	e712      	b.n	801785a <draw_with_stencil+0x11c6>
 8017a34:	428a      	cmp	r2, r1
 8017a36:	f000 8232 	beq.w	8017e9e <draw_with_stencil+0x180a>
 8017a3a:	495f      	ldr	r1, [pc, #380]	@ (8017bb8 <draw_with_stencil+0x1524>)
 8017a3c:	f006 020f 	and.w	r2, r6, #15
 8017a40:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017a44:	4a5d      	ldr	r2, [pc, #372]	@ (8017bbc <draw_with_stencil+0x1528>)
 8017a46:	4f64      	ldr	r7, [pc, #400]	@ (8017bd8 <draw_with_stencil+0x1544>)
 8017a48:	4302      	orrs	r2, r0
 8017a4a:	4864      	ldr	r0, [pc, #400]	@ (8017bdc <draw_with_stencil+0x1548>)
 8017a4c:	f3c6 2603 	ubfx	r6, r6, #8, #4
 8017a50:	e9cd 321e 	strd	r3, r2, [sp, #120]	@ 0x78
 8017a54:	e9cd 701c 	strd	r7, r0, [sp, #112]	@ 0x70
 8017a58:	2e00      	cmp	r6, #0
 8017a5a:	f000 823b 	beq.w	8017ed4 <draw_with_stencil+0x1840>
 8017a5e:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8017a62:	4a57      	ldr	r2, [pc, #348]	@ (8017bc0 <draw_with_stencil+0x152c>)
 8017a64:	9320      	str	r3, [sp, #128]	@ 0x80
 8017a66:	430a      	orrs	r2, r1
 8017a68:	9221      	str	r2, [sp, #132]	@ 0x84
 8017a6a:	2605      	movs	r6, #5
 8017a6c:	2304      	movs	r3, #4
 8017a6e:	2203      	movs	r2, #3
 8017a70:	af2c      	add	r7, sp, #176	@ 0xb0
 8017a72:	4950      	ldr	r1, [pc, #320]	@ (8017bb4 <draw_with_stencil+0x1520>)
 8017a74:	4853      	ldr	r0, [pc, #332]	@ (8017bc4 <draw_with_stencil+0x1530>)
 8017a76:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8017a7a:	f842 1c40 	str.w	r1, [r2, #-64]
 8017a7e:	f842 0c3c 	str.w	r0, [r2, #-60]
 8017a82:	4951      	ldr	r1, [pc, #324]	@ (8017bc8 <draw_with_stencil+0x1534>)
 8017a84:	4a51      	ldr	r2, [pc, #324]	@ (8017bcc <draw_with_stencil+0x1538>)
 8017a86:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 8017a8a:	2001      	movs	r0, #1
 8017a8c:	e943 1210 	strd	r1, r2, [r3, #-64]	@ 0x40
 8017a90:	f7fa fc02 	bl	8012298 <nema_set_rop_blend_mode>
 8017a94:	4631      	mov	r1, r6
 8017a96:	2200      	movs	r2, #0
 8017a98:	a81c      	add	r0, sp, #112	@ 0x70
 8017a9a:	f7fa fbdd 	bl	8012258 <nema_load_frag_shader>
 8017a9e:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017aa2:	f7fa fbf3 	bl	801228c <nema_set_frag_ptr>
 8017aa6:	4b4e      	ldr	r3, [pc, #312]	@ (8017be0 <draw_with_stencil+0x154c>)
 8017aa8:	2002      	movs	r0, #2
 8017aaa:	6819      	ldr	r1, [r3, #0]
 8017aac:	f7f9 f8f4 	bl	8010c98 <nema_set_const_reg>
 8017ab0:	e754      	b.n	801795c <draw_with_stencil+0x12c8>
 8017ab2:	f7f9 f931 	bl	8010d18 <nema_supports_clip2>
 8017ab6:	9b04      	ldr	r3, [sp, #16]
 8017ab8:	9a04      	ldr	r2, [sp, #16]
 8017aba:	edd3 9a32 	vldr	s19, [r3, #200]	@ 0xc8
 8017abe:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8017ac2:	f8d9 3000 	ldr.w	r3, [r9]
 8017ac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017aca:	edd3 7a04 	vldr	s15, [r3, #16]
 8017ace:	bf48      	it	mi
 8017ad0:	eddf 9a44 	vldrmi	s19, [pc, #272]	@ 8017be4 <draw_with_stencil+0x1550>
 8017ad4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017ad8:	ed92 9a33 	vldr	s18, [r2, #204]	@ 0xcc
 8017adc:	eeb4 7a69 	vcmp.f32	s14, s19
 8017ae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ae4:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017ae8:	bf48      	it	mi
 8017aea:	eef0 9a47 	vmovmi.f32	s19, s14
 8017aee:	edd3 7a05 	vldr	s15, [r3, #20]
 8017af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017af6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017afa:	bf48      	it	mi
 8017afc:	ed9f 9a39 	vldrmi	s18, [pc, #228]	@ 8017be4 <draw_with_stencil+0x1550>
 8017b00:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8017b04:	eef4 7a49 	vcmp.f32	s15, s18
 8017b08:	ee37 7a69 	vsub.f32	s14, s14, s19
 8017b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b10:	ee77 8a08 	vadd.f32	s17, s14, s16
 8017b14:	bf48      	it	mi
 8017b16:	eeb0 9a67 	vmovmi.f32	s18, s15
 8017b1a:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b1e:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8017b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b26:	4606      	mov	r6, r0
 8017b28:	ee37 8a88 	vadd.f32	s16, s15, s16
 8017b2c:	dd05      	ble.n	8017b3a <draw_with_stencil+0x14a6>
 8017b2e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b36:	f300 82c8 	bgt.w	80180ca <draw_with_stencil+0x1a36>
 8017b3a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b3e:	ee79 8aa7 	vadd.f32	s17, s19, s15
 8017b42:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b4a:	f340 81d7 	ble.w	8017efc <draw_with_stencil+0x1868>
 8017b4e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b56:	f300 8255 	bgt.w	8018004 <draw_with_stencil+0x1970>
 8017b5a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b5e:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017b62:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017b66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b6a:	f300 81d9 	bgt.w	8017f20 <draw_with_stencil+0x188c>
 8017b6e:	f8d9 3000 	ldr.w	r3, [r9]
 8017b72:	ed93 8a04 	vldr	s16, [r3, #16]
 8017b76:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017b7a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b7e:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017b82:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017b86:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b8e:	dd04      	ble.n	8017b9a <draw_with_stencil+0x1506>
 8017b90:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b98:	dc26      	bgt.n	8017be8 <draw_with_stencil+0x1554>
 8017b9a:	2e00      	cmp	r6, #0
 8017b9c:	f040 815f 	bne.w	8017e5e <draw_with_stencil+0x17ca>
 8017ba0:	f7f9 f8dc 	bl	8010d5c <nema_set_clip_pop>
 8017ba4:	e722      	b.n	80179ec <draw_with_stencil+0x1358>
 8017ba6:	bf00      	nop
 8017ba8:	0a18108b 	.word	0x0a18108b
 8017bac:	01016204 	.word	0x01016204
 8017bb0:	18001001 	.word	0x18001001
 8017bb4:	18001000 	.word	0x18001000
 8017bb8:	08035ce0 	.word	0x08035ce0
 8017bbc:	0a882206 	.word	0x0a882206
 8017bc0:	0a581606 	.word	0x0a581606
 8017bc4:	0a912406 	.word	0x0a912406
 8017bc8:	10000002 	.word	0x10000002
 8017bcc:	8a5b1686 	.word	0x8a5b1686
 8017bd0:	20000064 	.word	0x20000064
 8017bd4:	ff000100 	.word	0xff000100
 8017bd8:	1a181001 	.word	0x1a181001
 8017bdc:	050481a9 	.word	0x050481a9
 8017be0:	20082fe8 	.word	0x20082fe8
 8017be4:	00000000 	.word	0x00000000
 8017be8:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017bec:	edcd 7a05 	vstr	s15, [sp, #20]
 8017bf0:	9804      	ldr	r0, [sp, #16]
 8017bf2:	30a4      	adds	r0, #164	@ 0xa4
 8017bf4:	f7fa fa42 	bl	801207c <nema_set_matrix>
 8017bf8:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8017bfc:	eefd 9ae9 	vcvt.s32.f32	s19, s19
 8017c00:	9b05      	ldr	r3, [sp, #20]
 8017c02:	ee18 2a10 	vmov	r2, s16
 8017c06:	2e00      	cmp	r6, #0
 8017c08:	f040 8110 	bne.w	8017e2c <draw_with_stencil+0x1798>
 8017c0c:	ee19 0a90 	vmov	r0, s19
 8017c10:	4631      	mov	r1, r6
 8017c12:	f7f9 f88b 	bl	8010d2c <nema_set_clip_temp>
 8017c16:	2009      	movs	r0, #9
 8017c18:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017c1c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017c20:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017c24:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017c28:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017c2c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017c30:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017c32:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017c34:	f006 f856 	bl	801dce4 <nema_cl_get_space>
 8017c38:	2800      	cmp	r0, #0
 8017c3a:	d0b1      	beq.n	8017ba0 <draw_with_stencil+0x150c>
 8017c3c:	f8c0 9004 	str.w	r9, [r0, #4]
 8017c40:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017c44:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017c48:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8017c4c:	edc0 9a03 	vstr	s19, [r0, #12]
 8017c50:	f8c0 8014 	str.w	r8, [r0, #20]
 8017c54:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017c58:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017c5c:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8017c60:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8017c64:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017c68:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017c6a:	4ca6      	ldr	r4, [pc, #664]	@ (8017f04 <draw_with_stencil+0x1870>)
 8017c6c:	f8c0 b000 	str.w	fp, [r0]
 8017c70:	f8c0 9008 	str.w	r9, [r0, #8]
 8017c74:	6103      	str	r3, [r0, #16]
 8017c76:	6923      	ldr	r3, [r4, #16]
 8017c78:	4ca3      	ldr	r4, [pc, #652]	@ (8017f08 <draw_with_stencil+0x1874>)
 8017c7a:	f043 0305 	orr.w	r3, r3, #5
 8017c7e:	ed80 9a07 	vstr	s18, [r0, #28]
 8017c82:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 8017c86:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8017c8a:	6347      	str	r7, [r0, #52]	@ 0x34
 8017c8c:	6443      	str	r3, [r0, #68]	@ 0x44
 8017c8e:	f8c0 8018 	str.w	r8, [r0, #24]
 8017c92:	f8c0 e020 	str.w	lr, [r0, #32]
 8017c96:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017c9a:	6301      	str	r1, [r0, #48]	@ 0x30
 8017c9c:	6382      	str	r2, [r0, #56]	@ 0x38
 8017c9e:	6404      	str	r4, [r0, #64]	@ 0x40
 8017ca0:	e77b      	b.n	8017b9a <draw_with_stencil+0x1506>
 8017ca2:	9e04      	ldr	r6, [sp, #16]
 8017ca4:	4630      	mov	r0, r6
 8017ca6:	f005 fb1d 	bl	801d2e4 <bind_tex1_according_paint>
 8017caa:	f896 30dd 	ldrb.w	r3, [r6, #221]	@ 0xdd
 8017cae:	2b02      	cmp	r3, #2
 8017cb0:	d017      	beq.n	8017ce2 <draw_with_stencil+0x164e>
 8017cb2:	2b03      	cmp	r3, #3
 8017cb4:	d002      	beq.n	8017cbc <draw_with_stencil+0x1628>
 8017cb6:	2b01      	cmp	r3, #1
 8017cb8:	f47f addb 	bne.w	8017872 <draw_with_stencil+0x11de>
 8017cbc:	9904      	ldr	r1, [sp, #16]
 8017cbe:	683a      	ldr	r2, [r7, #0]
 8017cc0:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017cc4:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017cc6:	07d8      	lsls	r0, r3, #31
 8017cc8:	f140 80d1 	bpl.w	8017e6e <draw_with_stencil+0x17da>
 8017ccc:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017cd0:	4313      	orrs	r3, r2
 8017cd2:	07db      	lsls	r3, r3, #31
 8017cd4:	f100 82bb 	bmi.w	801824e <draw_with_stencil+0x1bba>
 8017cd8:	f101 0038 	add.w	r0, r1, #56	@ 0x38
 8017cdc:	f7fa f9ce 	bl	801207c <nema_set_matrix>
 8017ce0:	e5c7      	b.n	8017872 <draw_with_stencil+0x11de>
 8017ce2:	9904      	ldr	r1, [sp, #16]
 8017ce4:	683a      	ldr	r2, [r7, #0]
 8017ce6:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017cea:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017cec:	07d8      	lsls	r0, r3, #31
 8017cee:	f140 80c6 	bpl.w	8017e7e <draw_with_stencil+0x17ea>
 8017cf2:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017cf6:	4313      	orrs	r3, r2
 8017cf8:	07db      	lsls	r3, r3, #31
 8017cfa:	f100 82bf 	bmi.w	801827c <draw_with_stencil+0x1be8>
 8017cfe:	f101 0008 	add.w	r0, r1, #8
 8017d02:	f7fa f9bb 	bl	801207c <nema_set_matrix>
 8017d06:	e5b4      	b.n	8017872 <draw_with_stencil+0x11de>
 8017d08:	2001      	movs	r0, #1
 8017d0a:	f7fa f94f 	bl	8011fac <nema_enable_tiling>
 8017d0e:	683a      	ldr	r2, [r7, #0]
 8017d10:	e5b9      	b.n	8017886 <draw_with_stencil+0x11f2>
 8017d12:	4e7e      	ldr	r6, [pc, #504]	@ (8017f0c <draw_with_stencil+0x1878>)
 8017d14:	e5eb      	b.n	80178ee <draw_with_stencil+0x125a>
 8017d16:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017d18:	2b00      	cmp	r3, #0
 8017d1a:	f000 82c0 	beq.w	801829e <draw_with_stencil+0x1c0a>
 8017d1e:	f04f 0808 	mov.w	r8, #8
 8017d22:	2000      	movs	r0, #0
 8017d24:	f7f8 ffb4 	bl	8010c90 <nema_set_tex_color>
 8017d28:	683b      	ldr	r3, [r7, #0]
 8017d2a:	2002      	movs	r0, #2
 8017d2c:	f8d3 c03c 	ldr.w	ip, [r3, #60]	@ 0x3c
 8017d30:	f8bc 3012 	ldrh.w	r3, [ip, #18]
 8017d34:	f8bc e010 	ldrh.w	lr, [ip, #16]
 8017d38:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8017d3c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017d40:	f8dc 2014 	ldr.w	r2, [ip, #20]
 8017d44:	9201      	str	r2, [sp, #4]
 8017d46:	f89c c01c 	ldrb.w	ip, [ip, #28]
 8017d4a:	4672      	mov	r2, lr
 8017d4c:	f8cd c000 	str.w	ip, [sp]
 8017d50:	f7f8 fee8 	bl	8010b24 <nema_bind_tex>
 8017d54:	683b      	ldr	r3, [r7, #0]
 8017d56:	7f1b      	ldrb	r3, [r3, #28]
 8017d58:	3b01      	subs	r3, #1
 8017d5a:	2b01      	cmp	r3, #1
 8017d5c:	f240 82ab 	bls.w	80182b6 <draw_with_stencil+0x1c22>
 8017d60:	f04f 33ff 	mov.w	r3, #4294967295
 8017d64:	2202      	movs	r2, #2
 8017d66:	2103      	movs	r1, #3
 8017d68:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8017d6c:	f006 f938 	bl	801dfe0 <nema_set_blend>
 8017d70:	f04f 0800 	mov.w	r8, #0
 8017d74:	683b      	ldr	r3, [r7, #0]
 8017d76:	edd3 0a11 	vldr	s1, [r3, #68]	@ 0x44
 8017d7a:	ed93 0a10 	vldr	s0, [r3, #64]	@ 0x40
 8017d7e:	f7fa fa37 	bl	80121f0 <nema_set_matrix_translate>
 8017d82:	2009      	movs	r0, #9
 8017d84:	ed94 aa0a 	vldr	s20, [r4, #40]	@ 0x28
 8017d88:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8017d8c:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
 8017d90:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 8017d92:	edd4 9a0e 	vldr	s19, [r4, #56]	@ 0x38
 8017d96:	ed94 9a0f 	vldr	s18, [r4, #60]	@ 0x3c
 8017d9a:	edd4 8a10 	vldr	s17, [r4, #64]	@ 0x40
 8017d9e:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 8017da2:	f005 ff9f 	bl	801dce4 <nema_cl_get_space>
 8017da6:	b3a0      	cbz	r0, 8017e12 <draw_with_stencil+0x177e>
 8017da8:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8017dac:	6003      	str	r3, [r0, #0]
 8017dae:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017db2:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017db6:	ed80 aa01 	vstr	s20, [r0, #4]
 8017dba:	edc0 aa03 	vstr	s21, [r0, #12]
 8017dbe:	6103      	str	r3, [r0, #16]
 8017dc0:	f8c0 b014 	str.w	fp, [r0, #20]
 8017dc4:	61c6      	str	r6, [r0, #28]
 8017dc6:	f44f 7b4d 	mov.w	fp, #820	@ 0x334
 8017dca:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8017dce:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017dd2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017dd6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017dda:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8017dde:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8017de2:	edc0 8a0d 	vstr	s17, [r0, #52]	@ 0x34
 8017de6:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8017dea:	f8df c118 	ldr.w	ip, [pc, #280]	@ 8017f04 <draw_with_stencil+0x1870>
 8017dee:	f8c0 e008 	str.w	lr, [r0, #8]
 8017df2:	f8dc c010 	ldr.w	ip, [ip, #16]
 8017df6:	f8df e110 	ldr.w	lr, [pc, #272]	@ 8017f08 <draw_with_stencil+0x1874>
 8017dfa:	f04c 0c05 	orr.w	ip, ip, #5
 8017dfe:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8017e02:	f8c0 b018 	str.w	fp, [r0, #24]
 8017e06:	6206      	str	r6, [r0, #32]
 8017e08:	6281      	str	r1, [r0, #40]	@ 0x28
 8017e0a:	6302      	str	r2, [r0, #48]	@ 0x30
 8017e0c:	6383      	str	r3, [r0, #56]	@ 0x38
 8017e0e:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8017e12:	f1b8 0f00 	cmp.w	r8, #0
 8017e16:	f43f ad26 	beq.w	8017866 <draw_with_stencil+0x11d2>
 8017e1a:	f8d9 3000 	ldr.w	r3, [r9]
 8017e1e:	2034      	movs	r0, #52	@ 0x34
 8017e20:	8a19      	ldrh	r1, [r3, #16]
 8017e22:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017e26:	f005 ffb9 	bl	801dd9c <nema_cl_add_cmd>
 8017e2a:	e51c      	b.n	8017866 <draw_with_stencil+0x11d2>
 8017e2c:	ee19 0a90 	vmov	r0, s19
 8017e30:	2100      	movs	r1, #0
 8017e32:	f7f8 ff59 	bl	8010ce8 <nema_set_clip2>
 8017e36:	2009      	movs	r0, #9
 8017e38:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017e3c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017e40:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017e44:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017e48:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017e4c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017e50:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017e52:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017e54:	f005 ff46 	bl	801dce4 <nema_cl_get_space>
 8017e58:	2800      	cmp	r0, #0
 8017e5a:	f47f aeef 	bne.w	8017c3c <draw_with_stencil+0x15a8>
 8017e5e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017e62:	2100      	movs	r1, #0
 8017e64:	461a      	mov	r2, r3
 8017e66:	4608      	mov	r0, r1
 8017e68:	f7f8 ff3e 	bl	8010ce8 <nema_set_clip2>
 8017e6c:	e5be      	b.n	80179ec <draw_with_stencil+0x1358>
 8017e6e:	07d6      	lsls	r6, r2, #31
 8017e70:	f101 0138 	add.w	r1, r1, #56	@ 0x38
 8017e74:	d407      	bmi.n	8017e86 <draw_with_stencil+0x17f2>
 8017e76:	4608      	mov	r0, r1
 8017e78:	f7fa f900 	bl	801207c <nema_set_matrix>
 8017e7c:	e4f9      	b.n	8017872 <draw_with_stencil+0x11de>
 8017e7e:	07d6      	lsls	r6, r2, #31
 8017e80:	f101 0108 	add.w	r1, r1, #8
 8017e84:	d5f7      	bpl.n	8017e76 <draw_with_stencil+0x17e2>
 8017e86:	a81c      	add	r0, sp, #112	@ 0x70
 8017e88:	f7f9 fd30 	bl	80118ec <nema_mat3x3_copy>
 8017e8c:	6839      	ldr	r1, [r7, #0]
 8017e8e:	a81c      	add	r0, sp, #112	@ 0x70
 8017e90:	3170      	adds	r1, #112	@ 0x70
 8017e92:	f7f9 fd77 	bl	8011984 <nema_mat3x3_mul>
 8017e96:	a81c      	add	r0, sp, #112	@ 0x70
 8017e98:	f7fa f8f0 	bl	801207c <nema_set_matrix>
 8017e9c:	e4e9      	b.n	8017872 <draw_with_stencil+0x11de>
 8017e9e:	2003      	movs	r0, #3
 8017ea0:	f005 ff20 	bl	801dce4 <nema_cl_get_space>
 8017ea4:	2800      	cmp	r0, #0
 8017ea6:	f000 825e 	beq.w	8018366 <draw_with_stencil+0x1cd2>
 8017eaa:	f44f 77e8 	mov.w	r7, #464	@ 0x1d0
 8017eae:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8017eb2:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8017eb6:	4b16      	ldr	r3, [pc, #88]	@ (8017f10 <draw_with_stencil+0x187c>)
 8017eb8:	6046      	str	r6, [r0, #4]
 8017eba:	681b      	ldr	r3, [r3, #0]
 8017ebc:	6007      	str	r7, [r0, #0]
 8017ebe:	6143      	str	r3, [r0, #20]
 8017ec0:	4b14      	ldr	r3, [pc, #80]	@ (8017f14 <draw_with_stencil+0x1880>)
 8017ec2:	6081      	str	r1, [r0, #8]
 8017ec4:	e9c0 3203 	strd	r3, r2, [r0, #12]
 8017ec8:	e548      	b.n	801795c <draw_with_stencil+0x12c8>
 8017eca:	2001      	movs	r0, #1
 8017ecc:	f7fa f882 	bl	8011fd4 <nema_enable_tiling_2x2>
 8017ed0:	683a      	ldr	r2, [r7, #0]
 8017ed2:	e4d8      	b.n	8017886 <draw_with_stencil+0x11f2>
 8017ed4:	2604      	movs	r6, #4
 8017ed6:	2303      	movs	r3, #3
 8017ed8:	2202      	movs	r2, #2
 8017eda:	e5c9      	b.n	8017a70 <draw_with_stencil+0x13dc>
 8017edc:	9904      	ldr	r1, [sp, #16]
 8017ede:	f891 102c 	ldrb.w	r1, [r1, #44]	@ 0x2c
 8017ee2:	2901      	cmp	r1, #1
 8017ee4:	f47f ace3 	bne.w	80178ae <draw_with_stencil+0x121a>
 8017ee8:	2100      	movs	r1, #0
 8017eea:	4f0b      	ldr	r7, [pc, #44]	@ (8017f18 <draw_with_stencil+0x1884>)
 8017eec:	480b      	ldr	r0, [pc, #44]	@ (8017f1c <draw_with_stencil+0x1888>)
 8017eee:	911d      	str	r1, [sp, #116]	@ 0x74
 8017ef0:	911f      	str	r1, [sp, #124]	@ 0x7c
 8017ef2:	971c      	str	r7, [sp, #112]	@ 0x70
 8017ef4:	901e      	str	r0, [sp, #120]	@ 0x78
 8017ef6:	2104      	movs	r1, #4
 8017ef8:	2703      	movs	r7, #3
 8017efa:	e4df      	b.n	80178bc <draw_with_stencil+0x1228>
 8017efc:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017f00:	e637      	b.n	8017b72 <draw_with_stencil+0x14de>
 8017f02:	bf00      	nop
 8017f04:	20000064 	.word	0x20000064
 8017f08:	ff000100 	.word	0xff000100
 8017f0c:	18001001 	.word	0x18001001
 8017f10:	20082fe8 	.word	0x20082fe8
 8017f14:	941fdc13 	.word	0x941fdc13
 8017f18:	0a18108b 	.word	0x0a18108b
 8017f1c:	0800110b 	.word	0x0800110b
 8017f20:	9b04      	ldr	r3, [sp, #16]
 8017f22:	f103 0080 	add.w	r0, r3, #128	@ 0x80
 8017f26:	f7fa f8a9 	bl	801207c <nema_set_matrix>
 8017f2a:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017f2e:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8017f32:	edcd 7a05 	vstr	s15, [sp, #20]
 8017f36:	2e00      	cmp	r6, #0
 8017f38:	f040 81d2 	bne.w	80182e0 <draw_with_stencil+0x1c4c>
 8017f3c:	ee17 3a90 	vmov	r3, s15
 8017f40:	ee18 2a90 	vmov	r2, s17
 8017f44:	4631      	mov	r1, r6
 8017f46:	4630      	mov	r0, r6
 8017f48:	f7f8 fef0 	bl	8010d2c <nema_set_clip_temp>
 8017f4c:	2009      	movs	r0, #9
 8017f4e:	ed94 ba0a 	vldr	s22, [r4, #40]	@ 0x28
 8017f52:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8017f54:	edd4 aa0c 	vldr	s21, [r4, #48]	@ 0x30
 8017f58:	ed94 aa0d 	vldr	s20, [r4, #52]	@ 0x34
 8017f5c:	ed94 9a0e 	vldr	s18, [r4, #56]	@ 0x38
 8017f60:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8017f64:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 8017f68:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8017f6c:	f005 feba 	bl	801dce4 <nema_cl_get_space>
 8017f70:	b3a8      	cbz	r0, 8017fde <draw_with_stencil+0x194a>
 8017f72:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8017f76:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8017f7a:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017f7e:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8017f82:	ed80 ba01 	vstr	s22, [r0, #4]
 8017f86:	60c7      	str	r7, [r0, #12]
 8017f88:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017f8c:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8017f90:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017f94:	6201      	str	r1, [r0, #32]
 8017f96:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017f9a:	edc0 aa05 	vstr	s21, [r0, #20]
 8017f9e:	ed80 aa07 	vstr	s20, [r0, #28]
 8017fa2:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8017fa6:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8017faa:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8017fae:	f8c0 c010 	str.w	ip, [r0, #16]
 8017fb2:	f8df c40c 	ldr.w	ip, [pc, #1036]	@ 80183c0 <draw_with_stencil+0x1d2c>
 8017fb6:	f8c0 e008 	str.w	lr, [r0, #8]
 8017fba:	f8c0 8000 	str.w	r8, [r0]
 8017fbe:	f8dc c010 	ldr.w	ip, [ip, #16]
 8017fc2:	f8df e400 	ldr.w	lr, [pc, #1024]	@ 80183c4 <draw_with_stencil+0x1d30>
 8017fc6:	f04c 0c05 	orr.w	ip, ip, #5
 8017fca:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 8017fce:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8017fd2:	6187      	str	r7, [r0, #24]
 8017fd4:	6281      	str	r1, [r0, #40]	@ 0x28
 8017fd6:	6302      	str	r2, [r0, #48]	@ 0x30
 8017fd8:	6383      	str	r3, [r0, #56]	@ 0x38
 8017fda:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8017fde:	f8d9 3000 	ldr.w	r3, [r9]
 8017fe2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017fe6:	ed93 8a04 	vldr	s16, [r3, #16]
 8017fea:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017fee:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017ff2:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017ff6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017ffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ffe:	f73f adf7 	bgt.w	8017bf0 <draw_with_stencil+0x155c>
 8018002:	e5ca      	b.n	8017b9a <draw_with_stencil+0x1506>
 8018004:	9b04      	ldr	r3, [sp, #16]
 8018006:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
 801800a:	f7fa f837 	bl	801207c <nema_set_matrix>
 801800e:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8018012:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8018016:	eebc 7ae8 	vcvt.u32.f32	s14, s17
 801801a:	ee18 3a10 	vmov	r3, s16
 801801e:	ee17 2a10 	vmov	r2, s14
 8018022:	ee17 1a90 	vmov	r1, s15
 8018026:	2e00      	cmp	r6, #0
 8018028:	f040 8163 	bne.w	80182f2 <draw_with_stencil+0x1c5e>
 801802c:	4630      	mov	r0, r6
 801802e:	f7f8 fe7d 	bl	8010d2c <nema_set_clip_temp>
 8018032:	2009      	movs	r0, #9
 8018034:	ed94 ca0a 	vldr	s24, [r4, #40]	@ 0x28
 8018038:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801803a:	edd4 ba0c 	vldr	s23, [r4, #48]	@ 0x30
 801803e:	ed94 ba0d 	vldr	s22, [r4, #52]	@ 0x34
 8018042:	edd4 aa0e 	vldr	s21, [r4, #56]	@ 0x38
 8018046:	ed94 aa0f 	vldr	s20, [r4, #60]	@ 0x3c
 801804a:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 801804e:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8018052:	f005 fe47 	bl	801dce4 <nema_cl_get_space>
 8018056:	2800      	cmp	r0, #0
 8018058:	f43f ad7f 	beq.w	8017b5a <draw_with_stencil+0x14c6>
 801805c:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8018060:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8018064:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8018068:	f44f 7848 	mov.w	r8, #800	@ 0x320
 801806c:	ed80 ca01 	vstr	s24, [r0, #4]
 8018070:	60c7      	str	r7, [r0, #12]
 8018072:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8018076:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801807a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801807e:	6201      	str	r1, [r0, #32]
 8018080:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8018084:	f8c0 c010 	str.w	ip, [r0, #16]
 8018088:	f8df c334 	ldr.w	ip, [pc, #820]	@ 80183c0 <draw_with_stencil+0x1d2c>
 801808c:	f8c0 e008 	str.w	lr, [r0, #8]
 8018090:	f8c0 8000 	str.w	r8, [r0]
 8018094:	f8dc c010 	ldr.w	ip, [ip, #16]
 8018098:	f8df e328 	ldr.w	lr, [pc, #808]	@ 80183c4 <draw_with_stencil+0x1d30>
 801809c:	f04c 0c05 	orr.w	ip, ip, #5
 80180a0:	edc0 ba05 	vstr	s23, [r0, #20]
 80180a4:	ed80 ba07 	vstr	s22, [r0, #28]
 80180a8:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 80180ac:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 80180b0:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 80180b4:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 80180b8:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 80180bc:	6187      	str	r7, [r0, #24]
 80180be:	6281      	str	r1, [r0, #40]	@ 0x28
 80180c0:	6302      	str	r2, [r0, #48]	@ 0x30
 80180c2:	6383      	str	r3, [r0, #56]	@ 0x38
 80180c4:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 80180c8:	e547      	b.n	8017b5a <draw_with_stencil+0x14c6>
 80180ca:	9b04      	ldr	r3, [sp, #16]
 80180cc:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 80180d0:	f7f9 ffd4 	bl	801207c <nema_set_matrix>
 80180d4:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 80180d8:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 80180dc:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 80180e0:	eebd 7ac9 	vcvt.s32.f32	s14, s18
 80180e4:	ee18 3a10 	vmov	r3, s16
 80180e8:	ee18 2a90 	vmov	r2, s17
 80180ec:	ee17 1a10 	vmov	r1, s14
 80180f0:	ee17 0a90 	vmov	r0, s15
 80180f4:	2e00      	cmp	r6, #0
 80180f6:	f040 8100 	bne.w	80182fa <draw_with_stencil+0x1c66>
 80180fa:	f7f8 fe17 	bl	8010d2c <nema_set_clip_temp>
 80180fe:	2009      	movs	r0, #9
 8018100:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 8018104:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8018108:	ed94 ba0c 	vldr	s22, [r4, #48]	@ 0x30
 801810c:	f8d4 8034 	ldr.w	r8, [r4, #52]	@ 0x34
 8018110:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 8018114:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8018118:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 801811a:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 801811e:	f005 fde1 	bl	801dce4 <nema_cl_get_space>
 8018122:	2800      	cmp	r0, #0
 8018124:	f000 811c 	beq.w	8018360 <draw_with_stencil+0x1ccc>
 8018128:	f44f 7148 	mov.w	r1, #800	@ 0x320
 801812c:	f8c0 b004 	str.w	fp, [r0, #4]
 8018130:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8018134:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8018138:	edc0 aa03 	vstr	s21, [r0, #12]
 801813c:	4ba0      	ldr	r3, [pc, #640]	@ (80183c0 <draw_with_stencil+0x1d2c>)
 801813e:	6001      	str	r1, [r0, #0]
 8018140:	f8c0 b008 	str.w	fp, [r0, #8]
 8018144:	6102      	str	r2, [r0, #16]
 8018146:	691a      	ldr	r2, [r3, #16]
 8018148:	f8c0 801c 	str.w	r8, [r0, #28]
 801814c:	f042 0205 	orr.w	r2, r2, #5
 8018150:	f44f 7850 	mov.w	r8, #832	@ 0x340
 8018154:	f44f 7e51 	mov.w	lr, #836	@ 0x344
 8018158:	f44f 7c54 	mov.w	ip, #848	@ 0x350
 801815c:	6347      	str	r7, [r0, #52]	@ 0x34
 801815e:	6442      	str	r2, [r0, #68]	@ 0x44
 8018160:	f44f 7755 	mov.w	r7, #852	@ 0x354
 8018164:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8018168:	ed80 ba05 	vstr	s22, [r0, #20]
 801816c:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8018170:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8018174:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8018178:	4992      	ldr	r1, [pc, #584]	@ (80183c4 <draw_with_stencil+0x1d30>)
 801817a:	f8d9 3000 	ldr.w	r3, [r9]
 801817e:	6182      	str	r2, [r0, #24]
 8018180:	f8c0 8020 	str.w	r8, [r0, #32]
 8018184:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 8018188:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 801818c:	6387      	str	r7, [r0, #56]	@ 0x38
 801818e:	6401      	str	r1, [r0, #64]	@ 0x40
 8018190:	ed93 7a05 	vldr	s14, [r3, #20]
 8018194:	eeb8 8ac7 	vcvt.f32.s32	s16, s14
 8018198:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801819c:	ee38 8a49 	vsub.f32	s16, s16, s18
 80181a0:	ee38 8a27 	vadd.f32	s16, s16, s15
 80181a4:	e4c9      	b.n	8017b3a <draw_with_stencil+0x14a6>
 80181a6:	4f88      	ldr	r7, [pc, #544]	@ (80183c8 <draw_with_stencil+0x1d34>)
 80181a8:	4631      	mov	r1, r6
 80181aa:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 80181ae:	f10d 081c 	add.w	r8, sp, #28
 80181b2:	f005 fdf3 	bl	801dd9c <nema_cl_add_cmd>
 80181b6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80181b8:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 80181bc:	e9d7 0100 	ldrd	r0, r1, [r7]
 80181c0:	f107 0e08 	add.w	lr, r7, #8
 80181c4:	f10d 0b34 	add.w	fp, sp, #52	@ 0x34
 80181c8:	e888 0003 	stmia.w	r8, {r0, r1}
 80181cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80181d0:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
 80181d4:	e89e 0003 	ldmia.w	lr, {r0, r1}
 80181d8:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 80181dc:	f107 0e20 	add.w	lr, r7, #32
 80181e0:	9705      	str	r7, [sp, #20]
 80181e2:	e88b 0003 	stmia.w	fp, {r0, r1}
 80181e6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80181ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80181ee:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
 80181f2:	9f04      	ldr	r7, [sp, #16]
 80181f4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80181f8:	ed97 7a36 	vldr	s14, [r7, #216]	@ 0xd8
 80181fc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8018200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018204:	9f05      	ldr	r7, [sp, #20]
 8018206:	f10d 084c 	add.w	r8, sp, #76	@ 0x4c
 801820a:	f107 0740 	add.w	r7, r7, #64	@ 0x40
 801820e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8018212:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018214:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 8018218:	e897 0003 	ldmia.w	r7, {r0, r1}
 801821c:	e888 0003 	stmia.w	r8, {r0, r1}
 8018220:	db6e      	blt.n	8018300 <draw_with_stencil+0x1c6c>
 8018222:	9f04      	ldr	r7, [sp, #16]
 8018224:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 8018228:	2b02      	cmp	r3, #2
 801822a:	f000 80a4 	beq.w	8018376 <draw_with_stencil+0x1ce2>
 801822e:	2008      	movs	r0, #8
 8018230:	2102      	movs	r1, #2
 8018232:	4f66      	ldr	r7, [pc, #408]	@ (80183cc <draw_with_stencil+0x1d38>)
 8018234:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 8018238:	f040 808c 	bne.w	8018354 <draw_with_stencil+0x1cc0>
 801823c:	ab0d      	add	r3, sp, #52	@ 0x34
 801823e:	4418      	add	r0, r3
 8018240:	f7fa f80a 	bl	8012258 <nema_load_frag_shader>
 8018244:	4638      	mov	r0, r7
 8018246:	f7fa f821 	bl	801228c <nema_set_frag_ptr>
 801824a:	f7ff bb87 	b.w	801795c <draw_with_stencil+0x12c8>
 801824e:	a813      	add	r0, sp, #76	@ 0x4c
 8018250:	495f      	ldr	r1, [pc, #380]	@ (80183d0 <draw_with_stencil+0x1d3c>)
 8018252:	f7f9 fb4b 	bl	80118ec <nema_mat3x3_copy>
 8018256:	a813      	add	r0, sp, #76	@ 0x4c
 8018258:	f7f9 fc8a 	bl	8011b70 <nema_mat3x3_invert>
 801825c:	b9d8      	cbnz	r0, 8018296 <draw_with_stencil+0x1c02>
 801825e:	9b04      	ldr	r3, [sp, #16]
 8018260:	a81c      	add	r0, sp, #112	@ 0x70
 8018262:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8018266:	f7f9 fb41 	bl	80118ec <nema_mat3x3_copy>
 801826a:	a81c      	add	r0, sp, #112	@ 0x70
 801826c:	a913      	add	r1, sp, #76	@ 0x4c
 801826e:	f7f9 fb89 	bl	8011984 <nema_mat3x3_mul>
 8018272:	a81c      	add	r0, sp, #112	@ 0x70
 8018274:	f7f9 ff02 	bl	801207c <nema_set_matrix>
 8018278:	f7ff bafb 	b.w	8017872 <draw_with_stencil+0x11de>
 801827c:	a813      	add	r0, sp, #76	@ 0x4c
 801827e:	4954      	ldr	r1, [pc, #336]	@ (80183d0 <draw_with_stencil+0x1d3c>)
 8018280:	f7f9 fb34 	bl	80118ec <nema_mat3x3_copy>
 8018284:	a813      	add	r0, sp, #76	@ 0x4c
 8018286:	f7f9 fc73 	bl	8011b70 <nema_mat3x3_invert>
 801828a:	b920      	cbnz	r0, 8018296 <draw_with_stencil+0x1c02>
 801828c:	9b04      	ldr	r3, [sp, #16]
 801828e:	a81c      	add	r0, sp, #112	@ 0x70
 8018290:	f103 0108 	add.w	r1, r3, #8
 8018294:	e7e7      	b.n	8018266 <draw_with_stencil+0x1bd2>
 8018296:	f44f 2680 	mov.w	r6, #262144	@ 0x40000
 801829a:	f7fe bfdb 	b.w	8017254 <draw_with_stencil+0xbc0>
 801829e:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80182a2:	f004 fbc7 	bl	801ca34 <nema_vg_set_error>
 80182a6:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80182aa:	f004 fbc3 	bl	801ca34 <nema_vg_set_error>
 80182ae:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 80182b2:	f7fe bfde 	b.w	8017272 <draw_with_stencil+0xbde>
 80182b6:	2000      	movs	r0, #0
 80182b8:	f8d9 1000 	ldr.w	r1, [r9]
 80182bc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 80182c0:	68c9      	ldr	r1, [r1, #12]
 80182c2:	e9cd 8200 	strd	r8, r2, [sp]
 80182c6:	9002      	str	r0, [sp, #8]
 80182c8:	4630      	mov	r0, r6
 80182ca:	f7f8 fc2b 	bl	8010b24 <nema_bind_tex>
 80182ce:	2303      	movs	r3, #3
 80182d0:	2202      	movs	r2, #2
 80182d2:	4631      	mov	r1, r6
 80182d4:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80182d8:	46b0      	mov	r8, r6
 80182da:	f005 fe81 	bl	801dfe0 <nema_set_blend>
 80182de:	e549      	b.n	8017d74 <draw_with_stencil+0x16e0>
 80182e0:	2100      	movs	r1, #0
 80182e2:	ee17 3a90 	vmov	r3, s15
 80182e6:	4608      	mov	r0, r1
 80182e8:	ee18 2a90 	vmov	r2, s17
 80182ec:	f7f8 fcfc 	bl	8010ce8 <nema_set_clip2>
 80182f0:	e62c      	b.n	8017f4c <draw_with_stencil+0x18b8>
 80182f2:	2000      	movs	r0, #0
 80182f4:	f7f8 fcf8 	bl	8010ce8 <nema_set_clip2>
 80182f8:	e69b      	b.n	8018032 <draw_with_stencil+0x199e>
 80182fa:	f7f8 fcf5 	bl	8010ce8 <nema_set_clip2>
 80182fe:	e6fe      	b.n	80180fe <draw_with_stencil+0x1a6a>
 8018300:	9b04      	ldr	r3, [sp, #16]
 8018302:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8018306:	2b02      	cmp	r3, #2
 8018308:	d049      	beq.n	801839e <draw_with_stencil+0x1d0a>
 801830a:	2103      	movs	r1, #3
 801830c:	2008      	movs	r0, #8
 801830e:	2302      	movs	r3, #2
 8018310:	4f2e      	ldr	r7, [pc, #184]	@ (80183cc <draw_with_stencil+0x1d38>)
 8018312:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 80183dc <draw_with_stencil+0x1d48>
 8018316:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 801831a:	d139      	bne.n	8018390 <draw_with_stencil+0x1cfc>
 801831c:	4619      	mov	r1, r3
 801831e:	ab13      	add	r3, sp, #76	@ 0x4c
 8018320:	4418      	add	r0, r3
 8018322:	f7f9 ff99 	bl	8012258 <nema_load_frag_shader>
 8018326:	4638      	mov	r0, r7
 8018328:	f7f9 ffb0 	bl	801228c <nema_set_frag_ptr>
 801832c:	9b04      	ldr	r3, [sp, #16]
 801832e:	eddf 6a29 	vldr	s13, [pc, #164]	@ 80183d4 <draw_with_stencil+0x1d40>
 8018332:	edd3 7a36 	vldr	s15, [r3, #216]	@ 0xd8
 8018336:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801833a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801833e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018342:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018346:	ee17 0a90 	vmov	r0, s15
 801834a:	0600      	lsls	r0, r0, #24
 801834c:	f006 fa0e 	bl	801e76c <nema_set_const_color>
 8018350:	f7ff bb04 	b.w	801795c <draw_with_stencil+0x12c8>
 8018354:	ab07      	add	r3, sp, #28
 8018356:	4418      	add	r0, r3
 8018358:	2200      	movs	r2, #0
 801835a:	f7f9 ff7d 	bl	8012258 <nema_load_frag_shader>
 801835e:	e771      	b.n	8018244 <draw_with_stencil+0x1bb0>
 8018360:	f8d9 3000 	ldr.w	r3, [r9]
 8018364:	e714      	b.n	8018190 <draw_with_stencil+0x1afc>
 8018366:	f44f 7000 	mov.w	r0, #512	@ 0x200
 801836a:	f004 fb63 	bl	801ca34 <nema_vg_set_error>
 801836e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8018372:	f7fe bf6f 	b.w	8017254 <draw_with_stencil+0xbc0>
 8018376:	f897 202c 	ldrb.w	r2, [r7, #44]	@ 0x2c
 801837a:	4b17      	ldr	r3, [pc, #92]	@ (80183d8 <draw_with_stencil+0x1d44>)
 801837c:	2a01      	cmp	r2, #1
 801837e:	4f13      	ldr	r7, [pc, #76]	@ (80183cc <draw_with_stencil+0x1d38>)
 8018380:	bf13      	iteet	ne
 8018382:	2008      	movne	r0, #8
 8018384:	461f      	moveq	r7, r3
 8018386:	2000      	moveq	r0, #0
 8018388:	2102      	movne	r1, #2
 801838a:	bf08      	it	eq
 801838c:	2103      	moveq	r1, #3
 801838e:	e751      	b.n	8018234 <draw_with_stencil+0x1ba0>
 8018390:	ab1c      	add	r3, sp, #112	@ 0x70
 8018392:	4418      	add	r0, r3
 8018394:	2200      	movs	r2, #0
 8018396:	4667      	mov	r7, ip
 8018398:	f7f9 ff5e 	bl	8012258 <nema_load_frag_shader>
 801839c:	e7c3      	b.n	8018326 <draw_with_stencil+0x1c92>
 801839e:	9a04      	ldr	r2, [sp, #16]
 80183a0:	f892 202c 	ldrb.w	r2, [r2, #44]	@ 0x2c
 80183a4:	2a01      	cmp	r2, #1
 80183a6:	d005      	beq.n	80183b4 <draw_with_stencil+0x1d20>
 80183a8:	2103      	movs	r1, #3
 80183aa:	2008      	movs	r0, #8
 80183ac:	4f07      	ldr	r7, [pc, #28]	@ (80183cc <draw_with_stencil+0x1d38>)
 80183ae:	f8df c02c 	ldr.w	ip, [pc, #44]	@ 80183dc <draw_with_stencil+0x1d48>
 80183b2:	e7b0      	b.n	8018316 <draw_with_stencil+0x1c82>
 80183b4:	4f08      	ldr	r7, [pc, #32]	@ (80183d8 <draw_with_stencil+0x1d44>)
 80183b6:	2104      	movs	r1, #4
 80183b8:	46bc      	mov	ip, r7
 80183ba:	2000      	movs	r0, #0
 80183bc:	2303      	movs	r3, #3
 80183be:	e7aa      	b.n	8018316 <draw_with_stencil+0x1c82>
 80183c0:	20000064 	.word	0x20000064
 80183c4:	ff000100 	.word	0xff000100
 80183c8:	08033598 	.word	0x08033598
 80183cc:	941e8000 	.word	0x941e8000
 80183d0:	20082fec 	.word	0x20082fec
 80183d4:	437f0000 	.word	0x437f0000
 80183d8:	941da000 	.word	0x941da000
 80183dc:	941f8000 	.word	0x941f8000

080183e0 <nema_vg_draw_path>:
 80183e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e4:	ed2d 8b04 	vpush	{d8-d9}
 80183e8:	b087      	sub	sp, #28
 80183ea:	4604      	mov	r4, r0
 80183ec:	460d      	mov	r5, r1
 80183ee:	f005 fc05 	bl	801dbfc <nema_cl_get_bound>
 80183f2:	2800      	cmp	r0, #0
 80183f4:	f000 82e9 	beq.w	80189ca <nema_vg_draw_path+0x5ea>
 80183f8:	2c00      	cmp	r4, #0
 80183fa:	f000 80ca 	beq.w	8018592 <nema_vg_draw_path+0x1b2>
 80183fe:	2d00      	cmp	r5, #0
 8018400:	f000 80c7 	beq.w	8018592 <nema_vg_draw_path+0x1b2>
 8018404:	4f76      	ldr	r7, [pc, #472]	@ (80185e0 <nema_vg_draw_path+0x200>)
 8018406:	683b      	ldr	r3, [r7, #0]
 8018408:	2b00      	cmp	r3, #0
 801840a:	f000 80c2 	beq.w	8018592 <nema_vg_draw_path+0x1b2>
 801840e:	6862      	ldr	r2, [r4, #4]
 8018410:	2a00      	cmp	r2, #0
 8018412:	f000 80cc 	beq.w	80185ae <nema_vg_draw_path+0x1ce>
 8018416:	edd4 7a08 	vldr	s15, [r4, #32]
 801841a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801841e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018422:	f100 829a 	bmi.w	801895a <nema_vg_draw_path+0x57a>
 8018426:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 801842a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801842e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018432:	f100 8292 	bmi.w	801895a <nema_vg_draw_path+0x57a>
 8018436:	edd5 7a35 	vldr	s15, [r5, #212]	@ 0xd4
 801843a:	f8df 81b8 	ldr.w	r8, [pc, #440]	@ 80185f4 <nema_vg_draw_path+0x214>
 801843e:	7f1a      	ldrb	r2, [r3, #28]
 8018440:	edc8 7a00 	vstr	s15, [r8]
 8018444:	b95a      	cbnz	r2, 801845e <nema_vg_draw_path+0x7e>
 8018446:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801844a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801844e:	d806      	bhi.n	801845e <nema_vg_draw_path+0x7e>
 8018450:	2400      	movs	r4, #0
 8018452:	4620      	mov	r0, r4
 8018454:	b007      	add	sp, #28
 8018456:	ecbd 8b04 	vpop	{d8-d9}
 801845a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801845e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8018460:	f8d4 6084 	ldr.w	r6, [r4, #132]	@ 0x84
 8018464:	7f5a      	ldrb	r2, [r3, #29]
 8018466:	430e      	orrs	r6, r1
 8018468:	f8df 918c 	ldr.w	r9, [pc, #396]	@ 80185f8 <nema_vg_draw_path+0x218>
 801846c:	7f99      	ldrb	r1, [r3, #30]
 801846e:	485d      	ldr	r0, [pc, #372]	@ (80185e4 <nema_vg_draw_path+0x204>)
 8018470:	f006 0601 	and.w	r6, r6, #1
 8018474:	f002 0301 	and.w	r3, r2, #1
 8018478:	f889 6000 	strb.w	r6, [r9]
 801847c:	7003      	strb	r3, [r0, #0]
 801847e:	b111      	cbz	r1, 8018486 <nema_vg_draw_path+0xa6>
 8018480:	2300      	movs	r3, #0
 8018482:	f889 3000 	strb.w	r3, [r9]
 8018486:	4858      	ldr	r0, [pc, #352]	@ (80185e8 <nema_vg_draw_path+0x208>)
 8018488:	f7f9 fa22 	bl	80118d0 <nema_mat3x3_load_identity>
 801848c:	f899 3000 	ldrb.w	r3, [r9]
 8018490:	2b00      	cmp	r3, #0
 8018492:	f000 8088 	beq.w	80185a6 <nema_vg_draw_path+0x1c6>
 8018496:	6839      	ldr	r1, [r7, #0]
 8018498:	6b0b      	ldr	r3, [r1, #48]	@ 0x30
 801849a:	07db      	lsls	r3, r3, #31
 801849c:	f100 8091 	bmi.w	80185c2 <nema_vg_draw_path+0x1e2>
 80184a0:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80184a4:	07d9      	lsls	r1, r3, #31
 80184a6:	f100 8411 	bmi.w	8018ccc <nema_vg_draw_path+0x8ec>
 80184aa:	edd5 7a36 	vldr	s15, [r5, #216]	@ 0xd8
 80184ae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80184b2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80184b6:	ed98 8a00 	vldr	s16, [r8]
 80184ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184be:	4b4b      	ldr	r3, [pc, #300]	@ (80185ec <nema_vg_draw_path+0x20c>)
 80184c0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80184c2:	ed83 8a00 	vstr	s16, [r3]
 80184c6:	f8df b134 	ldr.w	fp, [pc, #308]	@ 80185fc <nema_vg_draw_path+0x21c>
 80184ca:	4b49      	ldr	r3, [pc, #292]	@ (80185f0 <nema_vg_draw_path+0x210>)
 80184cc:	f8cb 0000 	str.w	r0, [fp]
 80184d0:	ed83 8a00 	vstr	s16, [r3]
 80184d4:	f100 824d 	bmi.w	8018972 <nema_vg_draw_path+0x592>
 80184d8:	683b      	ldr	r3, [r7, #0]
 80184da:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 80184de:	f01a 6f80 	tst.w	sl, #67108864	@ 0x4000000
 80184e2:	d022      	beq.n	801852a <nema_vg_draw_path+0x14a>
 80184e4:	0e01      	lsrs	r1, r0, #24
 80184e6:	f3c0 4e07 	ubfx	lr, r0, #16, #8
 80184ea:	b2c2      	uxtb	r2, r0
 80184ec:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 80184f0:	fb01 f202 	mul.w	r2, r1, r2
 80184f4:	fb01 fc0c 	mul.w	ip, r1, ip
 80184f8:	fb01 f10e 	mul.w	r1, r1, lr
 80184fc:	f8df e100 	ldr.w	lr, [pc, #256]	@ 8018600 <nema_vg_draw_path+0x220>
 8018500:	9101      	str	r1, [sp, #4]
 8018502:	fbae 1202 	umull	r1, r2, lr, r2
 8018506:	fbae 1c0c 	umull	r1, ip, lr, ip
 801850a:	9901      	ldr	r1, [sp, #4]
 801850c:	f000 407f 	and.w	r0, r0, #4278190080	@ 0xff000000
 8018510:	fbae e101 	umull	lr, r1, lr, r1
 8018514:	ea40 10d2 	orr.w	r0, r0, r2, lsr #7
 8018518:	ea4f 1cdc 	mov.w	ip, ip, lsr #7
 801851c:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
 8018520:	09c9      	lsrs	r1, r1, #7
 8018522:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8018526:	f8cb 0000 	str.w	r0, [fp]
 801852a:	f893 c01c 	ldrb.w	ip, [r3, #28]
 801852e:	f899 1000 	ldrb.w	r1, [r9]
 8018532:	f1bc 0f00 	cmp.w	ip, #0
 8018536:	f040 81fe 	bne.w	8018936 <nema_vg_draw_path+0x556>
 801853a:	2900      	cmp	r1, #0
 801853c:	f040 82d6 	bne.w	8018aec <nema_vg_draw_path+0x70c>
 8018540:	2e00      	cmp	r6, #0
 8018542:	f040 833b 	bne.w	8018bbc <nema_vg_draw_path+0x7dc>
 8018546:	eeb0 7a48 	vmov.f32	s14, s16
 801854a:	eef0 7a48 	vmov.f32	s15, s16
 801854e:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8018552:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801855a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801855e:	bf48      	it	mi
 8018560:	eeb1 6a46 	vnegmi.f32	s12, s12
 8018564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018568:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801856c:	bf4c      	ite	mi
 801856e:	eef1 5a67 	vnegmi.f32	s11, s15
 8018572:	eef0 5a67 	vmovpl.f32	s11, s15
 8018576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801857a:	f100 83d5 	bmi.w	8018d28 <nema_vg_draw_path+0x948>
 801857e:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8018582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018586:	dc3f      	bgt.n	8018608 <nema_vg_draw_path+0x228>
 8018588:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8018604 <nema_vg_draw_path+0x224>
 801858c:	ee67 6a26 	vmul.f32	s13, s14, s13
 8018590:	e045      	b.n	801861e <nema_vg_draw_path+0x23e>
 8018592:	2001      	movs	r0, #1
 8018594:	f004 fa4e 	bl	801ca34 <nema_vg_set_error>
 8018598:	2401      	movs	r4, #1
 801859a:	4620      	mov	r0, r4
 801859c:	b007      	add	sp, #28
 801859e:	ecbd 8b04 	vpop	{d8-d9}
 80185a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185a6:	2e00      	cmp	r6, #0
 80185a8:	f43f af7f 	beq.w	80184aa <nema_vg_draw_path+0xca>
 80185ac:	e773      	b.n	8018496 <nema_vg_draw_path+0xb6>
 80185ae:	2410      	movs	r4, #16
 80185b0:	2010      	movs	r0, #16
 80185b2:	f004 fa3f 	bl	801ca34 <nema_vg_set_error>
 80185b6:	4620      	mov	r0, r4
 80185b8:	b007      	add	sp, #28
 80185ba:	ecbd 8b04 	vpop	{d8-d9}
 80185be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185c2:	4809      	ldr	r0, [pc, #36]	@ (80185e8 <nema_vg_draw_path+0x208>)
 80185c4:	314c      	adds	r1, #76	@ 0x4c
 80185c6:	f7f9 f991 	bl	80118ec <nema_mat3x3_copy>
 80185ca:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80185ce:	07d8      	lsls	r0, r3, #31
 80185d0:	f57f af6b 	bpl.w	80184aa <nema_vg_draw_path+0xca>
 80185d4:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 80185d8:	4803      	ldr	r0, [pc, #12]	@ (80185e8 <nema_vg_draw_path+0x208>)
 80185da:	f7f9 f9d3 	bl	8011984 <nema_mat3x3_mul>
 80185de:	e764      	b.n	80184aa <nema_vg_draw_path+0xca>
 80185e0:	20082f68 	.word	0x20082f68
 80185e4:	20082f7c 	.word	0x20082f7c
 80185e8:	20082fec 	.word	0x20082fec
 80185ec:	20000138 	.word	0x20000138
 80185f0:	2000013c 	.word	0x2000013c
 80185f4:	20000134 	.word	0x20000134
 80185f8:	20082fb5 	.word	0x20082fb5
 80185fc:	20082fe8 	.word	0x20082fe8
 8018600:	80808081 	.word	0x80808081
 8018604:	3727c5ac 	.word	0x3727c5ac
 8018608:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801860c:	ed5f 6a03 	vldr	s13, [pc, #-12]	@ 8018604 <nema_vg_draw_path+0x224>
 8018610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018614:	bf4c      	ite	mi
 8018616:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 801861a:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 801861e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018626:	d807      	bhi.n	8018638 <nema_vg_draw_path+0x258>
 8018628:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801862c:	eef4 7ae5 	vcmpe.f32	s15, s11
 8018630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018634:	f100 82d1 	bmi.w	8018bda <nema_vg_draw_path+0x7fa>
 8018638:	2900      	cmp	r1, #0
 801863a:	f000 8182 	beq.w	8018942 <nema_vg_draw_path+0x562>
 801863e:	f1bc 0f00 	cmp.w	ip, #0
 8018642:	f040 828e 	bne.w	8018b62 <nema_vg_draw_path+0x782>
 8018646:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801864a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801864e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018652:	f340 8342 	ble.w	8018cda <nema_vg_draw_path+0x8fa>
 8018656:	2201      	movs	r2, #1
 8018658:	f04f 0c00 	mov.w	ip, #0
 801865c:	4edd      	ldr	r6, [pc, #884]	@ (80189d4 <nema_vg_draw_path+0x5f4>)
 801865e:	48de      	ldr	r0, [pc, #888]	@ (80189d8 <nema_vg_draw_path+0x5f8>)
 8018660:	6032      	str	r2, [r6, #0]
 8018662:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018666:	f8c0 c000 	str.w	ip, [r0]
 801866a:	2a00      	cmp	r2, #0
 801866c:	f000 838c 	beq.w	8018d88 <nema_vg_draw_path+0x9a8>
 8018670:	ed98 6a00 	vldr	s12, [r8]
 8018674:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018678:	f04f 0800 	mov.w	r8, #0
 801867c:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018680:	f04f 0c00 	mov.w	ip, #0
 8018684:	48d5      	ldr	r0, [pc, #852]	@ (80189dc <nema_vg_draw_path+0x5fc>)
 8018686:	4ad6      	ldr	r2, [pc, #856]	@ (80189e0 <nema_vg_draw_path+0x600>)
 8018688:	f8c0 c000 	str.w	ip, [r0]
 801868c:	f8c2 c000 	str.w	ip, [r2]
 8018690:	2900      	cmp	r1, #0
 8018692:	f040 81d4 	bne.w	8018a3e <nema_vg_draw_path+0x65e>
 8018696:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801869a:	eef1 5a00 	vmov.f32	s11, #16	@ 0x40800000  4.0
 801869e:	edd4 3a04 	vldr	s7, [r4, #16]
 80186a2:	ee75 5a86 	vadd.f32	s11, s11, s12
 80186a6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80186aa:	4ace      	ldr	r2, [pc, #824]	@ (80189e4 <nema_vg_draw_path+0x604>)
 80186ac:	ee36 6a86 	vadd.f32	s12, s13, s12
 80186b0:	6812      	ldr	r2, [r2, #0]
 80186b2:	edc2 3a06 	vstr	s7, [r2, #24]
 80186b6:	edd4 2a05 	vldr	s5, [r4, #20]
 80186ba:	ee72 2ac6 	vsub.f32	s5, s5, s12
 80186be:	edc2 2a07 	vstr	s5, [r2, #28]
 80186c2:	ed94 7a08 	vldr	s14, [r4, #32]
 80186c6:	edd4 7a04 	vldr	s15, [r4, #16]
 80186ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 80186ce:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80186d2:	edc2 7a08 	vstr	s15, [r2, #32]
 80186d6:	ed94 2a05 	vldr	s4, [r4, #20]
 80186da:	ee32 2a46 	vsub.f32	s4, s4, s12
 80186de:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 80186e2:	edd4 6a08 	vldr	s13, [r4, #32]
 80186e6:	ed94 7a04 	vldr	s14, [r4, #16]
 80186ea:	ee37 7a26 	vadd.f32	s14, s14, s13
 80186ee:	ee37 7a25 	vadd.f32	s14, s14, s11
 80186f2:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 80186f6:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 80186fa:	edd4 6a05 	vldr	s13, [r4, #20]
 80186fe:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018702:	ee36 3a86 	vadd.f32	s6, s13, s12
 8018706:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 801870a:	edd4 6a04 	vldr	s13, [r4, #16]
 801870e:	ee76 5ae5 	vsub.f32	s11, s13, s11
 8018712:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 8018716:	edd4 6a05 	vldr	s13, [r4, #20]
 801871a:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 801871e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018722:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018726:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 801872a:	2900      	cmp	r1, #0
 801872c:	d05e      	beq.n	80187ec <nema_vg_draw_path+0x40c>
 801872e:	49ae      	ldr	r1, [pc, #696]	@ (80189e8 <nema_vg_draw_path+0x608>)
 8018730:	ed91 6a00 	vldr	s12, [r1]
 8018734:	edd1 4a01 	vldr	s9, [r1, #4]
 8018738:	ee63 0a86 	vmul.f32	s1, s7, s12
 801873c:	ee22 5aa4 	vmul.f32	s10, s5, s9
 8018740:	ed91 0a02 	vldr	s0, [r1, #8]
 8018744:	ee70 0a85 	vadd.f32	s1, s1, s10
 8018748:	ee70 0a80 	vadd.f32	s1, s1, s0
 801874c:	edc2 0a06 	vstr	s1, [r2, #24]
 8018750:	ed91 4a04 	vldr	s8, [r1, #16]
 8018754:	ed91 5a03 	vldr	s10, [r1, #12]
 8018758:	ee62 8a24 	vmul.f32	s17, s4, s9
 801875c:	ee63 3a85 	vmul.f32	s7, s7, s10
 8018760:	ee27 1a85 	vmul.f32	s2, s15, s10
 8018764:	ee67 1a05 	vmul.f32	s3, s14, s10
 8018768:	ee23 8a04 	vmul.f32	s16, s6, s8
 801876c:	ee62 2a84 	vmul.f32	s5, s5, s8
 8018770:	ee23 3a24 	vmul.f32	s6, s6, s9
 8018774:	ee67 7a86 	vmul.f32	s15, s15, s12
 8018778:	ee22 9a04 	vmul.f32	s18, s4, s8
 801877c:	ee25 5a85 	vmul.f32	s10, s11, s10
 8018780:	ee27 7a06 	vmul.f32	s14, s14, s12
 8018784:	ee65 5a86 	vmul.f32	s11, s11, s12
 8018788:	ee26 4a84 	vmul.f32	s8, s13, s8
 801878c:	ee66 4aa4 	vmul.f32	s9, s13, s9
 8018790:	ed91 6a05 	vldr	s12, [r1, #20]
 8018794:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8018798:	ee71 6a88 	vadd.f32	s13, s3, s16
 801879c:	ee37 7a03 	vadd.f32	s14, s14, s6
 80187a0:	ee31 2a09 	vadd.f32	s4, s2, s18
 80187a4:	ee77 7aa8 	vadd.f32	s15, s15, s17
 80187a8:	ee35 5a04 	vadd.f32	s10, s10, s8
 80187ac:	ee75 5aa4 	vadd.f32	s11, s11, s9
 80187b0:	ee36 3a86 	vadd.f32	s6, s13, s12
 80187b4:	ee72 2a86 	vadd.f32	s5, s5, s12
 80187b8:	ee32 2a06 	vadd.f32	s4, s4, s12
 80187bc:	ee77 7a80 	vadd.f32	s15, s15, s0
 80187c0:	ee37 7a00 	vadd.f32	s14, s14, s0
 80187c4:	ee75 6a06 	vadd.f32	s13, s10, s12
 80187c8:	ee75 5a80 	vadd.f32	s11, s11, s0
 80187cc:	eef0 3a60 	vmov.f32	s7, s1
 80187d0:	edc2 2a07 	vstr	s5, [r2, #28]
 80187d4:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 80187d8:	edc2 7a08 	vstr	s15, [r2, #32]
 80187dc:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 80187e0:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 80187e4:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 80187e8:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 80187ec:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 80187f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187f4:	f240 8167 	bls.w	8018ac6 <nema_vg_draw_path+0x6e6>
 80187f8:	eef5 2ac0 	vcmpe.f32	s5, #0.0
 80187fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018800:	f240 81c6 	bls.w	8018b90 <nema_vg_draw_path+0x7b0>
 8018804:	ed92 6a04 	vldr	s12, [r2, #16]
 8018808:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801880c:	eeb4 6ae3 	vcmpe.f32	s12, s7
 8018810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018814:	d80f      	bhi.n	8018836 <nema_vg_draw_path+0x456>
 8018816:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801881a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801881e:	d80a      	bhi.n	8018836 <nema_vg_draw_path+0x456>
 8018820:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018828:	d805      	bhi.n	8018836 <nema_vg_draw_path+0x456>
 801882a:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801882e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018832:	f67f ae0d 	bls.w	8018450 <nema_vg_draw_path+0x70>
 8018836:	ed92 6a05 	vldr	s12, [r2, #20]
 801883a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801883e:	eeb4 6ae2 	vcmpe.f32	s12, s5
 8018842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018846:	d80f      	bhi.n	8018868 <nema_vg_draw_path+0x488>
 8018848:	eeb4 6ac2 	vcmpe.f32	s12, s4
 801884c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018850:	d80a      	bhi.n	8018868 <nema_vg_draw_path+0x488>
 8018852:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8018856:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801885a:	d805      	bhi.n	8018868 <nema_vg_draw_path+0x488>
 801885c:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018864:	f67f adf4 	bls.w	8018450 <nema_vg_draw_path+0x70>
 8018868:	7f9a      	ldrb	r2, [r3, #30]
 801886a:	2a00      	cmp	r2, #0
 801886c:	f040 809b 	bne.w	80189a6 <nema_vg_draw_path+0x5c6>
 8018870:	ed9f 6a5e 	vldr	s12, [pc, #376]	@ 80189ec <nema_vg_draw_path+0x60c>
 8018874:	eef4 3ac6 	vcmpe.f32	s7, s12
 8018878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801887c:	dc4c      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 801887e:	eef4 2ac6 	vcmpe.f32	s5, s12
 8018882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018886:	dc47      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 8018888:	eef4 7ac6 	vcmpe.f32	s15, s12
 801888c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018890:	dc42      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 8018892:	eeb4 2ac6 	vcmpe.f32	s4, s12
 8018896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801889a:	dc3d      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 801889c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80188a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188a4:	dc38      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 80188a6:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80188aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188ae:	dc33      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 80188b0:	eef4 5ac6 	vcmpe.f32	s11, s12
 80188b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188b8:	dc2e      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 80188ba:	eef4 6ac6 	vcmpe.f32	s13, s12
 80188be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188c2:	dc29      	bgt.n	8018918 <nema_vg_draw_path+0x538>
 80188c4:	ed9f 6a4a 	vldr	s12, [pc, #296]	@ 80189f0 <nema_vg_draw_path+0x610>
 80188c8:	eef4 3ac6 	vcmpe.f32	s7, s12
 80188cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188d0:	d422      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 80188d2:	eef4 2ac6 	vcmpe.f32	s5, s12
 80188d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188da:	d41d      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 80188dc:	eef4 7ac6 	vcmpe.f32	s15, s12
 80188e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188e4:	d418      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 80188e6:	eeb4 2ac6 	vcmpe.f32	s4, s12
 80188ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188ee:	d413      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 80188f0:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80188f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188f8:	d40e      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 80188fa:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80188fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018902:	d409      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 8018904:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801890c:	d404      	bmi.n	8018918 <nema_vg_draw_path+0x538>
 801890e:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018916:	d546      	bpl.n	80189a6 <nema_vg_draw_path+0x5c6>
 8018918:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801891a:	0759      	lsls	r1, r3, #29
 801891c:	f140 82a9 	bpl.w	8018e72 <nema_vg_draw_path+0xa92>
 8018920:	4620      	mov	r0, r4
 8018922:	4629      	mov	r1, r5
 8018924:	f003 fe86 	bl	801c634 <draw_clipped_path>
 8018928:	4604      	mov	r4, r0
 801892a:	2800      	cmp	r0, #0
 801892c:	f43f ae35 	beq.w	801859a <nema_vg_draw_path+0x1ba>
 8018930:	f004 f880 	bl	801ca34 <nema_vg_set_error>
 8018934:	e631      	b.n	801859a <nema_vg_draw_path+0x1ba>
 8018936:	2900      	cmp	r1, #0
 8018938:	d162      	bne.n	8018a00 <nema_vg_draw_path+0x620>
 801893a:	eeb0 7a48 	vmov.f32	s14, s16
 801893e:	eef0 7a48 	vmov.f32	s15, s16
 8018942:	2e00      	cmp	r6, #0
 8018944:	f43f ae7b 	beq.w	801863e <nema_vg_draw_path+0x25e>
 8018948:	4a2a      	ldr	r2, [pc, #168]	@ (80189f4 <nema_vg_draw_path+0x614>)
 801894a:	ed88 8a00 	vstr	s16, [r8]
 801894e:	edc2 7a00 	vstr	s15, [r2]
 8018952:	4a29      	ldr	r2, [pc, #164]	@ (80189f8 <nema_vg_draw_path+0x618>)
 8018954:	ed82 7a00 	vstr	s14, [r2]
 8018958:	e671      	b.n	801863e <nema_vg_draw_path+0x25e>
 801895a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801895e:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8018962:	f004 f867 	bl	801ca34 <nema_vg_set_error>
 8018966:	4620      	mov	r0, r4
 8018968:	b007      	add	sp, #28
 801896a:	ecbd 8b04 	vpop	{d8-d9}
 801896e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018972:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018976:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801897a:	f67f ad69 	bls.w	8018450 <nema_vg_draw_path+0x70>
 801897e:	0e03      	lsrs	r3, r0, #24
 8018980:	ee07 3a10 	vmov	s14, r3
 8018984:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018988:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 801898c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8018990:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8018994:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018998:	ee17 3a90 	vmov	r3, s15
 801899c:	f363 601f 	bfi	r0, r3, #24, #8
 80189a0:	f8cb 0000 	str.w	r0, [fp]
 80189a4:	e598      	b.n	80184d8 <nema_vg_draw_path+0xf8>
 80189a6:	f1b8 0f00 	cmp.w	r8, #0
 80189aa:	f040 8206 	bne.w	8018dba <nema_vg_draw_path+0x9da>
 80189ae:	4b13      	ldr	r3, [pc, #76]	@ (80189fc <nema_vg_draw_path+0x61c>)
 80189b0:	781a      	ldrb	r2, [r3, #0]
 80189b2:	2a01      	cmp	r2, #1
 80189b4:	f000 81c5 	beq.w	8018d42 <nema_vg_draw_path+0x962>
 80189b8:	4620      	mov	r0, r4
 80189ba:	4629      	mov	r1, r5
 80189bc:	f7fd fe6a 	bl	8016694 <draw_with_stencil>
 80189c0:	4604      	mov	r4, r0
 80189c2:	2800      	cmp	r0, #0
 80189c4:	f43f ade9 	beq.w	801859a <nema_vg_draw_path+0x1ba>
 80189c8:	e7b2      	b.n	8018930 <nema_vg_draw_path+0x550>
 80189ca:	2040      	movs	r0, #64	@ 0x40
 80189cc:	f004 f832 	bl	801ca34 <nema_vg_set_error>
 80189d0:	2440      	movs	r4, #64	@ 0x40
 80189d2:	e5e2      	b.n	801859a <nema_vg_draw_path+0x1ba>
 80189d4:	20082f70 	.word	0x20082f70
 80189d8:	20082f6c 	.word	0x20082f6c
 80189dc:	20082fac 	.word	0x20082fac
 80189e0:	20082fb0 	.word	0x20082fb0
 80189e4:	20083010 	.word	0x20083010
 80189e8:	20082fec 	.word	0x20082fec
 80189ec:	44bfe000 	.word	0x44bfe000
 80189f0:	c3ff8000 	.word	0xc3ff8000
 80189f4:	20000138 	.word	0x20000138
 80189f8:	2000013c 	.word	0x2000013c
 80189fc:	20000064 	.word	0x20000064
 8018a00:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018a04:	f04f 0c00 	mov.w	ip, #0
 8018a08:	48d6      	ldr	r0, [pc, #856]	@ (8018d64 <nema_vg_draw_path+0x984>)
 8018a0a:	4ed7      	ldr	r6, [pc, #860]	@ (8018d68 <nema_vg_draw_path+0x988>)
 8018a0c:	6002      	str	r2, [r0, #0]
 8018a0e:	6032      	str	r2, [r6, #0]
 8018a10:	f8c8 2000 	str.w	r2, [r8]
 8018a14:	7f5a      	ldrb	r2, [r3, #29]
 8018a16:	48d5      	ldr	r0, [pc, #852]	@ (8018d6c <nema_vg_draw_path+0x98c>)
 8018a18:	4ed5      	ldr	r6, [pc, #852]	@ (8018d70 <nema_vg_draw_path+0x990>)
 8018a1a:	0792      	lsls	r2, r2, #30
 8018a1c:	f8c0 c000 	str.w	ip, [r0]
 8018a20:	f8c6 c000 	str.w	ip, [r6]
 8018a24:	f57f ae24 	bpl.w	8018670 <nema_vg_draw_path+0x290>
 8018a28:	f04f 0e00 	mov.w	lr, #0
 8018a2c:	46e0      	mov	r8, ip
 8018a2e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018a32:	48d0      	ldr	r0, [pc, #832]	@ (8018d74 <nema_vg_draw_path+0x994>)
 8018a34:	4ad0      	ldr	r2, [pc, #832]	@ (8018d78 <nema_vg_draw_path+0x998>)
 8018a36:	f8c0 e000 	str.w	lr, [r0]
 8018a3a:	f8c2 e000 	str.w	lr, [r2]
 8018a3e:	f8df a340 	ldr.w	sl, [pc, #832]	@ 8018d80 <nema_vg_draw_path+0x9a0>
 8018a42:	ed9a 0a00 	vldr	s0, [sl]
 8018a46:	edda 7a01 	vldr	s15, [sl, #4]
 8018a4a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018a4e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018a52:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018a56:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018a5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a5e:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018a62:	f100 8254 	bmi.w	8018f0e <nema_vg_draw_path+0xb2e>
 8018a66:	ed9a 0a03 	vldr	s0, [sl, #12]
 8018a6a:	edda 7a04 	vldr	s15, [sl, #16]
 8018a6e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018a72:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018a76:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018a7a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a82:	eeb1 8ac0 	vsqrt.f32	s16, s0
 8018a86:	f100 8233 	bmi.w	8018ef0 <nema_vg_draw_path+0xb10>
 8018a8a:	eddf 7abc 	vldr	s15, [pc, #752]	@ 8018d7c <nema_vg_draw_path+0x99c>
 8018a8e:	eef4 8ae7 	vcmpe.f32	s17, s15
 8018a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a96:	bfc4      	itt	gt
 8018a98:	eef1 7a00 	vmovgt.f32	s15, #16	@ 0x40800000  4.0
 8018a9c:	eec7 5aa8 	vdivgt.f32	s11, s15, s17
 8018aa0:	eddf 7ab6 	vldr	s15, [pc, #728]	@ 8018d7c <nema_vg_draw_path+0x99c>
 8018aa4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8018aa8:	bfd8      	it	le
 8018aaa:	eef1 5a00 	vmovle.f32	s11, #16	@ 0x40800000  4.0
 8018aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ab2:	edc0 8a00 	vstr	s17, [r0]
 8018ab6:	ed82 8a00 	vstr	s16, [r2]
 8018aba:	dd7c      	ble.n	8018bb6 <nema_vg_draw_path+0x7d6>
 8018abc:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8018ac0:	eec7 6a88 	vdiv.f32	s13, s15, s16
 8018ac4:	e5eb      	b.n	801869e <nema_vg_draw_path+0x2be>
 8018ac6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018aca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ace:	f63f ae93 	bhi.w	80187f8 <nema_vg_draw_path+0x418>
 8018ad2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018ad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ada:	f63f ae8d 	bhi.w	80187f8 <nema_vg_draw_path+0x418>
 8018ade:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ae6:	f63f ae87 	bhi.w	80187f8 <nema_vg_draw_path+0x418>
 8018aea:	e4b1      	b.n	8018450 <nema_vg_draw_path+0x70>
 8018aec:	f8df a290 	ldr.w	sl, [pc, #656]	@ 8018d80 <nema_vg_draw_path+0x9a0>
 8018af0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018af2:	ed9a 0a00 	vldr	s0, [sl]
 8018af6:	edda 7a01 	vldr	s15, [sl, #4]
 8018afa:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018afe:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018b02:	0792      	lsls	r2, r2, #30
 8018b04:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018b08:	f100 80ad 	bmi.w	8018c66 <nema_vg_draw_path+0x886>
 8018b0c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b14:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018b18:	f100 8211 	bmi.w	8018f3e <nema_vg_draw_path+0xb5e>
 8018b1c:	edda 7a03 	vldr	s15, [sl, #12]
 8018b20:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018b24:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018b28:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018b2c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018b30:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b38:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018b3c:	f100 81f6 	bmi.w	8018f2c <nema_vg_draw_path+0xb4c>
 8018b40:	ee68 7a28 	vmul.f32	s15, s16, s17
 8018b44:	ee28 7a09 	vmul.f32	s14, s16, s18
 8018b48:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b50:	f340 8163 	ble.w	8018e1a <nema_vg_draw_path+0xa3a>
 8018b54:	eeb0 8a67 	vmov.f32	s16, s15
 8018b58:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018b5c:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018b60:	e4f5      	b.n	801854e <nema_vg_draw_path+0x16e>
 8018b62:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018b66:	2000      	movs	r0, #0
 8018b68:	4e7e      	ldr	r6, [pc, #504]	@ (8018d64 <nema_vg_draw_path+0x984>)
 8018b6a:	f8c8 2000 	str.w	r2, [r8]
 8018b6e:	6032      	str	r2, [r6, #0]
 8018b70:	4e7d      	ldr	r6, [pc, #500]	@ (8018d68 <nema_vg_draw_path+0x988>)
 8018b72:	f8df c1f8 	ldr.w	ip, [pc, #504]	@ 8018d6c <nema_vg_draw_path+0x98c>
 8018b76:	6032      	str	r2, [r6, #0]
 8018b78:	7f5a      	ldrb	r2, [r3, #29]
 8018b7a:	4e7d      	ldr	r6, [pc, #500]	@ (8018d70 <nema_vg_draw_path+0x990>)
 8018b7c:	0792      	lsls	r2, r2, #30
 8018b7e:	f8cc 0000 	str.w	r0, [ip]
 8018b82:	6030      	str	r0, [r6, #0]
 8018b84:	f57f ad74 	bpl.w	8018670 <nema_vg_draw_path+0x290>
 8018b88:	4680      	mov	r8, r0
 8018b8a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018b8e:	e577      	b.n	8018680 <nema_vg_draw_path+0x2a0>
 8018b90:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b98:	f63f ae34 	bhi.w	8018804 <nema_vg_draw_path+0x424>
 8018b9c:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8018ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ba4:	f63f ae2e 	bhi.w	8018804 <nema_vg_draw_path+0x424>
 8018ba8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8018bac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bb0:	f63f ae28 	bhi.w	8018804 <nema_vg_draw_path+0x424>
 8018bb4:	e44c      	b.n	8018450 <nema_vg_draw_path+0x70>
 8018bb6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018bba:	e570      	b.n	801869e <nema_vg_draw_path+0x2be>
 8018bbc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018bbe:	0792      	lsls	r2, r2, #30
 8018bc0:	f53f acc1 	bmi.w	8018546 <nema_vg_draw_path+0x166>
 8018bc4:	f8df a1b8 	ldr.w	sl, [pc, #440]	@ 8018d80 <nema_vg_draw_path+0x9a0>
 8018bc8:	ed9a 0a01 	vldr	s0, [sl, #4]
 8018bcc:	edda 7a00 	vldr	s15, [sl]
 8018bd0:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018bd4:	ee07 0aa7 	vmla.f32	s0, s15, s15
 8018bd8:	e798      	b.n	8018b0c <nema_vg_draw_path+0x72c>
 8018bda:	b2c2      	uxtb	r2, r0
 8018bdc:	ee05 2a10 	vmov	s10, r2
 8018be0:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8018be4:	ee06 2a10 	vmov	s12, r2
 8018be8:	0e02      	lsrs	r2, r0, #24
 8018bea:	ee06 2a90 	vmov	s13, r2
 8018bee:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018bf2:	ee07 2a10 	vmov	s14, r2
 8018bf6:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018bfa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018bfe:	ee25 5a27 	vmul.f32	s10, s10, s15
 8018c02:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018c06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c0a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8018c0e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8018c12:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018c16:	eef0 7a65 	vmov.f32	s15, s11
 8018c1a:	eefc 5ac5 	vcvt.u32.f32	s11, s10
 8018c1e:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8018c22:	edcd 5a01 	vstr	s11, [sp, #4]
 8018c26:	eebc 6ac6 	vcvt.u32.f32	s12, s12
 8018c2a:	ee16 ea90 	vmov	lr, s13
 8018c2e:	eefc 6ac7 	vcvt.u32.f32	s13, s14
 8018c32:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8018c36:	ee16 0a10 	vmov	r0, s12
 8018c3a:	ea42 6e0e 	orr.w	lr, r2, lr, lsl #24
 8018c3e:	ee16 2a90 	vmov	r2, s13
 8018c42:	0200      	lsls	r0, r0, #8
 8018c44:	b280      	uxth	r0, r0
 8018c46:	0412      	lsls	r2, r2, #16
 8018c48:	ea4e 0000 	orr.w	r0, lr, r0
 8018c4c:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8018c50:	4302      	orrs	r2, r0
 8018c52:	eeb0 7a67 	vmov.f32	s14, s15
 8018c56:	eeb0 8a67 	vmov.f32	s16, s15
 8018c5a:	f8cb 2000 	str.w	r2, [fp]
 8018c5e:	2900      	cmp	r1, #0
 8018c60:	f47f aced 	bne.w	801863e <nema_vg_draw_path+0x25e>
 8018c64:	e66d      	b.n	8018942 <nema_vg_draw_path+0x562>
 8018c66:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018c6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c6e:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018c72:	f100 8176 	bmi.w	8018f62 <nema_vg_draw_path+0xb82>
 8018c76:	edda 7a03 	vldr	s15, [sl, #12]
 8018c7a:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018c7e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018c82:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018c86:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018c8a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c92:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018c96:	f100 815b 	bmi.w	8018f50 <nema_vg_draw_path+0xb70>
 8018c9a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018c9e:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8018ca2:	eec6 7aa8 	vdiv.f32	s15, s13, s17
 8018ca6:	ee27 7a08 	vmul.f32	s14, s14, s16
 8018caa:	ee67 7a88 	vmul.f32	s15, s15, s16
 8018cae:	4a2d      	ldr	r2, [pc, #180]	@ (8018d64 <nema_vg_draw_path+0x984>)
 8018cb0:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018cb4:	ed82 7a00 	vstr	s14, [r2]
 8018cb8:	4a2b      	ldr	r2, [pc, #172]	@ (8018d68 <nema_vg_draw_path+0x988>)
 8018cba:	eeb0 7a48 	vmov.f32	s14, s16
 8018cbe:	edc2 7a00 	vstr	s15, [r2]
 8018cc2:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018cc6:	eef0 7a48 	vmov.f32	s15, s16
 8018cca:	e440      	b.n	801854e <nema_vg_draw_path+0x16e>
 8018ccc:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018cd0:	482b      	ldr	r0, [pc, #172]	@ (8018d80 <nema_vg_draw_path+0x9a0>)
 8018cd2:	f7f8 fe0b 	bl	80118ec <nema_mat3x3_copy>
 8018cd6:	f7ff bbe8 	b.w	80184aa <nema_vg_draw_path+0xca>
 8018cda:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8018cde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ce2:	f73f acb8 	bgt.w	8018656 <nema_vg_draw_path+0x276>
 8018ce6:	4a1f      	ldr	r2, [pc, #124]	@ (8018d64 <nema_vg_draw_path+0x984>)
 8018ce8:	4e21      	ldr	r6, [pc, #132]	@ (8018d70 <nema_vg_draw_path+0x990>)
 8018cea:	edc2 6a00 	vstr	s13, [r2]
 8018cee:	4a1e      	ldr	r2, [pc, #120]	@ (8018d68 <nema_vg_draw_path+0x988>)
 8018cf0:	481e      	ldr	r0, [pc, #120]	@ (8018d6c <nema_vg_draw_path+0x98c>)
 8018cf2:	edc2 6a00 	vstr	s13, [r2]
 8018cf6:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018cfa:	edc8 6a00 	vstr	s13, [r8]
 8018cfe:	f8c6 c000 	str.w	ip, [r6]
 8018d02:	f8c0 c000 	str.w	ip, [r0]
 8018d06:	2a00      	cmp	r2, #0
 8018d08:	f47f acb2 	bne.w	8018670 <nema_vg_draw_path+0x290>
 8018d0c:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 8018d10:	2a01      	cmp	r2, #1
 8018d12:	d049      	beq.n	8018da8 <nema_vg_draw_path+0x9c8>
 8018d14:	2201      	movs	r2, #1
 8018d16:	ed98 6a00 	vldr	s12, [r8]
 8018d1a:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018d1e:	6002      	str	r2, [r0, #0]
 8018d20:	4690      	mov	r8, r2
 8018d22:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018d26:	e4ab      	b.n	8018680 <nema_vg_draw_path+0x2a0>
 8018d28:	eef1 6a47 	vneg.f32	s13, s14
 8018d2c:	eef4 5ae6 	vcmpe.f32	s11, s13
 8018d30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d34:	f53f ac68 	bmi.w	8018608 <nema_vg_draw_path+0x228>
 8018d38:	eddf 5a12 	vldr	s11, [pc, #72]	@ 8018d84 <nema_vg_draw_path+0x9a4>
 8018d3c:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8018d40:	e46d      	b.n	801861e <nema_vg_draw_path+0x23e>
 8018d42:	685b      	ldr	r3, [r3, #4]
 8018d44:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8018d48:	f000 80c7 	beq.w	8018eda <nema_vg_draw_path+0xafa>
 8018d4c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8018d50:	f47f ae32 	bne.w	80189b8 <nema_vg_draw_path+0x5d8>
 8018d54:	2000      	movs	r0, #0
 8018d56:	f7f9 f93d 	bl	8011fd4 <nema_enable_tiling_2x2>
 8018d5a:	2204      	movs	r2, #4
 8018d5c:	683b      	ldr	r3, [r7, #0]
 8018d5e:	77da      	strb	r2, [r3, #31]
 8018d60:	e62a      	b.n	80189b8 <nema_vg_draw_path+0x5d8>
 8018d62:	bf00      	nop
 8018d64:	20000138 	.word	0x20000138
 8018d68:	2000013c 	.word	0x2000013c
 8018d6c:	20082f6c 	.word	0x20082f6c
 8018d70:	20082f70 	.word	0x20082f70
 8018d74:	20082fac 	.word	0x20082fac
 8018d78:	20082fb0 	.word	0x20082fb0
 8018d7c:	3a83126f 	.word	0x3a83126f
 8018d80:	20082fec 	.word	0x20082fec
 8018d84:	3727c5ac 	.word	0x3727c5ac
 8018d88:	f1ba 0f01 	cmp.w	sl, #1
 8018d8c:	d0be      	beq.n	8018d0c <nema_vg_draw_path+0x92c>
 8018d8e:	f240 5201 	movw	r2, #1281	@ 0x501
 8018d92:	fa1f fa8a 	uxth.w	sl, sl
 8018d96:	4592      	cmp	sl, r2
 8018d98:	d106      	bne.n	8018da8 <nema_vg_draw_path+0x9c8>
 8018d9a:	f8db 2000 	ldr.w	r2, [fp]
 8018d9e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8018da2:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8018da6:	d0b1      	beq.n	8018d0c <nema_vg_draw_path+0x92c>
 8018da8:	ed98 6a00 	vldr	s12, [r8]
 8018dac:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8018db0:	f04f 0800 	mov.w	r8, #0
 8018db4:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018db8:	e462      	b.n	8018680 <nema_vg_draw_path+0x2a0>
 8018dba:	f240 5201 	movw	r2, #1281	@ 0x501
 8018dbe:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8018dc0:	b283      	uxth	r3, r0
 8018dc2:	4293      	cmp	r3, r2
 8018dc4:	d03a      	beq.n	8018e3c <nema_vg_draw_path+0xa5c>
 8018dc6:	f04f 33ff 	mov.w	r3, #4294967295
 8018dca:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 8018dce:	461a      	mov	r2, r3
 8018dd0:	2100      	movs	r1, #0
 8018dd2:	f005 f905 	bl	801dfe0 <nema_set_blend>
 8018dd6:	f8db 0000 	ldr.w	r0, [fp]
 8018dda:	f7f9 fabb 	bl	8012354 <nema_set_raster_color>
 8018dde:	f899 3000 	ldrb.w	r3, [r9]
 8018de2:	4d64      	ldr	r5, [pc, #400]	@ (8018f74 <nema_vg_draw_path+0xb94>)
 8018de4:	702b      	strb	r3, [r5, #0]
 8018de6:	2b00      	cmp	r3, #0
 8018de8:	d14b      	bne.n	8018e82 <nema_vg_draw_path+0xaa2>
 8018dea:	6833      	ldr	r3, [r6, #0]
 8018dec:	4620      	mov	r0, r4
 8018dee:	b9e3      	cbnz	r3, 8018e2a <nema_vg_draw_path+0xa4a>
 8018df0:	f7fa fc62 	bl	80136b8 <stroke_thin_path>
 8018df4:	4604      	mov	r4, r0
 8018df6:	b9e8      	cbnz	r0, 8018e34 <nema_vg_draw_path+0xa54>
 8018df8:	782b      	ldrb	r3, [r5, #0]
 8018dfa:	2b00      	cmp	r3, #0
 8018dfc:	f43f ab28 	beq.w	8018450 <nema_vg_draw_path+0x70>
 8018e00:	2101      	movs	r1, #1
 8018e02:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8018e06:	f004 ffc9 	bl	801dd9c <nema_cl_add_cmd>
 8018e0a:	2300      	movs	r3, #0
 8018e0c:	782a      	ldrb	r2, [r5, #0]
 8018e0e:	461c      	mov	r4, r3
 8018e10:	702b      	strb	r3, [r5, #0]
 8018e12:	f889 2000 	strb.w	r2, [r9]
 8018e16:	f7ff bbc0 	b.w	801859a <nema_vg_draw_path+0x1ba>
 8018e1a:	eeb0 8a47 	vmov.f32	s16, s14
 8018e1e:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018e22:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018e26:	f7ff bb92 	b.w	801854e <nema_vg_draw_path+0x16e>
 8018e2a:	f7fb fc09 	bl	8014640 <stroke_path>
 8018e2e:	4604      	mov	r4, r0
 8018e30:	2800      	cmp	r0, #0
 8018e32:	d0e1      	beq.n	8018df8 <nema_vg_draw_path+0xa18>
 8018e34:	f003 fdfe 	bl	801ca34 <nema_vg_set_error>
 8018e38:	4620      	mov	r0, r4
 8018e3a:	e579      	b.n	8018930 <nema_vg_draw_path+0x550>
 8018e3c:	2004      	movs	r0, #4
 8018e3e:	f004 ff51 	bl	801dce4 <nema_cl_get_space>
 8018e42:	2800      	cmp	r0, #0
 8018e44:	d050      	beq.n	8018ee8 <nema_vg_draw_path+0xb08>
 8018e46:	f44f 7ce8 	mov.w	ip, #464	@ 0x1d0
 8018e4a:	f44f 778e 	mov.w	r7, #284	@ 0x11c
 8018e4e:	f44f 7596 	mov.w	r5, #300	@ 0x12c
 8018e52:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8018e56:	f04f 4210 	mov.w	r2, #2415919104	@ 0x90000000
 8018e5a:	f8db 3000 	ldr.w	r3, [fp]
 8018e5e:	e9c0 c800 	strd	ip, r8, [r0]
 8018e62:	6143      	str	r3, [r0, #20]
 8018e64:	4b44      	ldr	r3, [pc, #272]	@ (8018f78 <nema_vg_draw_path+0xb98>)
 8018e66:	6087      	str	r7, [r0, #8]
 8018e68:	6105      	str	r5, [r0, #16]
 8018e6a:	e9c0 1206 	strd	r1, r2, [r0, #24]
 8018e6e:	60c3      	str	r3, [r0, #12]
 8018e70:	e7b5      	b.n	8018dde <nema_vg_draw_path+0x9fe>
 8018e72:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8018e76:	f003 fddd 	bl	801ca34 <nema_vg_set_error>
 8018e7a:	f44f 4480 	mov.w	r4, #16384	@ 0x4000
 8018e7e:	f7ff bb8c 	b.w	801859a <nema_vg_draw_path+0x1ba>
 8018e82:	2007      	movs	r0, #7
 8018e84:	f004 ff2e 	bl	801dce4 <nema_cl_get_space>
 8018e88:	b318      	cbz	r0, 8018ed2 <nema_vg_draw_path+0xaf2>
 8018e8a:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8018e8e:	6002      	str	r2, [r0, #0]
 8018e90:	f44f 725a 	mov.w	r2, #872	@ 0x368
 8018e94:	4b39      	ldr	r3, [pc, #228]	@ (8018f7c <nema_vg_draw_path+0xb9c>)
 8018e96:	6959      	ldr	r1, [r3, #20]
 8018e98:	6082      	str	r2, [r0, #8]
 8018e9a:	f44f 7258 	mov.w	r2, #864	@ 0x360
 8018e9e:	6041      	str	r1, [r0, #4]
 8018ea0:	6899      	ldr	r1, [r3, #8]
 8018ea2:	6102      	str	r2, [r0, #16]
 8018ea4:	f44f 7259 	mov.w	r2, #868	@ 0x364
 8018ea8:	60c1      	str	r1, [r0, #12]
 8018eaa:	6819      	ldr	r1, [r3, #0]
 8018eac:	6182      	str	r2, [r0, #24]
 8018eae:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8018eb2:	6141      	str	r1, [r0, #20]
 8018eb4:	6859      	ldr	r1, [r3, #4]
 8018eb6:	6202      	str	r2, [r0, #32]
 8018eb8:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8018ebc:	61c1      	str	r1, [r0, #28]
 8018ebe:	68d9      	ldr	r1, [r3, #12]
 8018ec0:	6282      	str	r2, [r0, #40]	@ 0x28
 8018ec2:	6241      	str	r1, [r0, #36]	@ 0x24
 8018ec4:	6919      	ldr	r1, [r3, #16]
 8018ec6:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8018eca:	2300      	movs	r3, #0
 8018ecc:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8018ed0:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8018ed2:	2300      	movs	r3, #0
 8018ed4:	f889 3000 	strb.w	r3, [r9]
 8018ed8:	e787      	b.n	8018dea <nema_vg_draw_path+0xa0a>
 8018eda:	2000      	movs	r0, #0
 8018edc:	f7f9 f866 	bl	8011fac <nema_enable_tiling>
 8018ee0:	2203      	movs	r2, #3
 8018ee2:	683b      	ldr	r3, [r7, #0]
 8018ee4:	77da      	strb	r2, [r3, #31]
 8018ee6:	e567      	b.n	80189b8 <nema_vg_draw_path+0x5d8>
 8018ee8:	f44f 7400 	mov.w	r4, #512	@ 0x200
 8018eec:	4620      	mov	r0, r4
 8018eee:	e51f      	b.n	8018930 <nema_vg_draw_path+0x550>
 8018ef0:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018ef4:	9103      	str	r1, [sp, #12]
 8018ef6:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018efa:	9301      	str	r3, [sp, #4]
 8018efc:	f018 f978 	bl	80311f0 <sqrtf>
 8018f00:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018f04:	9903      	ldr	r1, [sp, #12]
 8018f06:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018f0a:	9b01      	ldr	r3, [sp, #4]
 8018f0c:	e5bd      	b.n	8018a8a <nema_vg_draw_path+0x6aa>
 8018f0e:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018f12:	9103      	str	r1, [sp, #12]
 8018f14:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018f18:	9301      	str	r3, [sp, #4]
 8018f1a:	f018 f969 	bl	80311f0 <sqrtf>
 8018f1e:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018f22:	9903      	ldr	r1, [sp, #12]
 8018f24:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018f28:	9b01      	ldr	r3, [sp, #4]
 8018f2a:	e59c      	b.n	8018a66 <nema_vg_draw_path+0x686>
 8018f2c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f30:	9001      	str	r0, [sp, #4]
 8018f32:	f018 f95d 	bl	80311f0 <sqrtf>
 8018f36:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f3a:	9801      	ldr	r0, [sp, #4]
 8018f3c:	e600      	b.n	8018b40 <nema_vg_draw_path+0x760>
 8018f3e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f42:	9001      	str	r0, [sp, #4]
 8018f44:	f018 f954 	bl	80311f0 <sqrtf>
 8018f48:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f4c:	9801      	ldr	r0, [sp, #4]
 8018f4e:	e5e5      	b.n	8018b1c <nema_vg_draw_path+0x73c>
 8018f50:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f54:	9001      	str	r0, [sp, #4]
 8018f56:	f018 f94b 	bl	80311f0 <sqrtf>
 8018f5a:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f5e:	9801      	ldr	r0, [sp, #4]
 8018f60:	e69b      	b.n	8018c9a <nema_vg_draw_path+0x8ba>
 8018f62:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f66:	9001      	str	r0, [sp, #4]
 8018f68:	f018 f942 	bl	80311f0 <sqrtf>
 8018f6c:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f70:	9801      	ldr	r0, [sp, #4]
 8018f72:	e680      	b.n	8018c76 <nema_vg_draw_path+0x896>
 8018f74:	20082fb4 	.word	0x20082fb4
 8018f78:	941fb414 	.word	0x941fb414
 8018f7c:	20082fec 	.word	0x20082fec

08018f80 <nema_vg_init_stencil_pool>:
 8018f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f82:	460f      	mov	r7, r1
 8018f84:	4606      	mov	r6, r0
 8018f86:	b091      	sub	sp, #68	@ 0x44
 8018f88:	ac04      	add	r4, sp, #16
 8018f8a:	4613      	mov	r3, r2
 8018f8c:	4601      	mov	r1, r0
 8018f8e:	463a      	mov	r2, r7
 8018f90:	4620      	mov	r0, r4
 8018f92:	f003 fcc1 	bl	801c918 <stencil_buffer_create>
 8018f96:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8018f9a:	ad0c      	add	r5, sp, #48	@ 0x30
 8018f9c:	ac08      	add	r4, sp, #32
 8018f9e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8018fa2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8018fa6:	f003 fc67 	bl	801c878 <context_reset>
 8018faa:	2216      	movs	r2, #22
 8018fac:	2101      	movs	r1, #1
 8018fae:	4821      	ldr	r0, [pc, #132]	@ (8019034 <nema_vg_init_stencil_pool+0xb4>)
 8018fb0:	f7f9 f952 	bl	8012258 <nema_load_frag_shader>
 8018fb4:	2217      	movs	r2, #23
 8018fb6:	2101      	movs	r1, #1
 8018fb8:	481f      	ldr	r0, [pc, #124]	@ (8019038 <nema_vg_init_stencil_pool+0xb8>)
 8018fba:	f7f9 f94d 	bl	8012258 <nema_load_frag_shader>
 8018fbe:	2101      	movs	r1, #1
 8018fc0:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8018fc4:	f004 feea 	bl	801dd9c <nema_cl_add_cmd>
 8018fc8:	2215      	movs	r2, #21
 8018fca:	2101      	movs	r1, #1
 8018fcc:	481b      	ldr	r0, [pc, #108]	@ (801903c <nema_vg_init_stencil_pool+0xbc>)
 8018fce:	f7f9 f943 	bl	8012258 <nema_load_frag_shader>
 8018fd2:	2214      	movs	r2, #20
 8018fd4:	2101      	movs	r1, #1
 8018fd6:	481a      	ldr	r0, [pc, #104]	@ (8019040 <nema_vg_init_stencil_pool+0xc0>)
 8018fd8:	f7f9 f93e 	bl	8012258 <nema_load_frag_shader>
 8018fdc:	4c19      	ldr	r4, [pc, #100]	@ (8019044 <nema_vg_init_stencil_pool+0xc4>)
 8018fde:	4b1a      	ldr	r3, [pc, #104]	@ (8019048 <nema_vg_init_stencil_pool+0xc8>)
 8018fe0:	a802      	add	r0, sp, #8
 8018fe2:	2213      	movs	r2, #19
 8018fe4:	2101      	movs	r1, #1
 8018fe6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018fea:	f7f9 f935 	bl	8012258 <nema_load_frag_shader>
 8018fee:	ab10      	add	r3, sp, #64	@ 0x40
 8018ff0:	e913 0003 	ldmdb	r3, {r0, r1}
 8018ff4:	e895 000c 	ldmia.w	r5, {r2, r3}
 8018ff8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018ffc:	4639      	mov	r1, r7
 8018ffe:	4630      	mov	r0, r6
 8019000:	f003 fc9e 	bl	801c940 <stencil_buffer_set>
 8019004:	f003 fcd8 	bl	801c9b8 <lut_buffer_create>
 8019008:	f004 fad4 	bl	801d5b4 <tsvg_init>
 801900c:	4639      	mov	r1, r7
 801900e:	4630      	mov	r0, r6
 8019010:	f004 fac6 	bl	801d5a0 <set_tsvg_text_max_size>
 8019014:	f003 fc7c 	bl	801c910 <nema_vg_get_context>
 8019018:	4c0c      	ldr	r4, [pc, #48]	@ (801904c <nema_vg_init_stencil_pool+0xcc>)
 801901a:	6020      	str	r0, [r4, #0]
 801901c:	f003 fcc6 	bl	801c9ac <nema_vg_get_stencil>
 8019020:	6822      	ldr	r2, [r4, #0]
 8019022:	490b      	ldr	r1, [pc, #44]	@ (8019050 <nema_vg_init_stencil_pool+0xd0>)
 8019024:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8019026:	6008      	str	r0, [r1, #0]
 8019028:	f043 0320 	orr.w	r3, r3, #32
 801902c:	6313      	str	r3, [r2, #48]	@ 0x30
 801902e:	b011      	add	sp, #68	@ 0x44
 8019030:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019032:	bf00      	nop
 8019034:	08035d20 	.word	0x08035d20
 8019038:	08035d38 	.word	0x08035d38
 801903c:	08035d30 	.word	0x08035d30
 8019040:	08035d28 	.word	0x08035d28
 8019044:	0a980002 	.word	0x0a980002
 8019048:	8081a046 	.word	0x8081a046
 801904c:	20082f68 	.word	0x20082f68
 8019050:	20083010 	.word	0x20083010

08019054 <points_coincide>:
 8019054:	edd0 7a00 	vldr	s15, [r0]
 8019058:	ed91 7a00 	vldr	s14, [r1]
 801905c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8019060:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019068:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801906c:	bf48      	it	mi
 801906e:	eef1 6a66 	vnegmi.f32	s13, s13
 8019072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019076:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801907a:	bf4c      	ite	mi
 801907c:	eeb1 6a67 	vnegmi.f32	s12, s15
 8019080:	eeb0 6a67 	vmovpl.f32	s12, s15
 8019084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019088:	d439      	bmi.n	80190fe <points_coincide+0xaa>
 801908a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801908e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019092:	dc3b      	bgt.n	801910c <points_coincide+0xb8>
 8019094:	eddf 7a2e 	vldr	s15, [pc, #184]	@ 8019150 <points_coincide+0xfc>
 8019098:	ee67 7a27 	vmul.f32	s15, s14, s15
 801909c:	eef4 6ae7 	vcmpe.f32	s13, s15
 80190a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190a4:	d840      	bhi.n	8019128 <points_coincide+0xd4>
 80190a6:	edd0 7a01 	vldr	s15, [r0, #4]
 80190aa:	ed91 7a01 	vldr	s14, [r1, #4]
 80190ae:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80190b2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80190b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190be:	bf48      	it	mi
 80190c0:	eef1 6a66 	vnegmi.f32	s13, s13
 80190c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190c8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80190cc:	bf4c      	ite	mi
 80190ce:	eeb1 6a67 	vnegmi.f32	s12, s15
 80190d2:	eeb0 6a67 	vmovpl.f32	s12, s15
 80190d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190da:	d427      	bmi.n	801912c <points_coincide+0xd8>
 80190dc:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80190e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190e4:	dc29      	bgt.n	801913a <points_coincide+0xe6>
 80190e6:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8019150 <points_coincide+0xfc>
 80190ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 80190ee:	eef4 6ae7 	vcmpe.f32	s13, s15
 80190f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190f6:	bf94      	ite	ls
 80190f8:	2001      	movls	r0, #1
 80190fa:	2000      	movhi	r0, #0
 80190fc:	4770      	bx	lr
 80190fe:	eeb1 7a47 	vneg.f32	s14, s14
 8019102:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019106:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801910a:	d5c3      	bpl.n	8019094 <points_coincide+0x40>
 801910c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019114:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8019150 <points_coincide+0xfc>
 8019118:	d5be      	bpl.n	8019098 <points_coincide+0x44>
 801911a:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801911e:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019126:	d9be      	bls.n	80190a6 <points_coincide+0x52>
 8019128:	2000      	movs	r0, #0
 801912a:	4770      	bx	lr
 801912c:	eeb1 7a47 	vneg.f32	s14, s14
 8019130:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019138:	d5d5      	bpl.n	80190e6 <points_coincide+0x92>
 801913a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801913e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019142:	ed9f 7a03 	vldr	s14, [pc, #12]	@ 8019150 <points_coincide+0xfc>
 8019146:	d5d0      	bpl.n	80190ea <points_coincide+0x96>
 8019148:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801914c:	e7cf      	b.n	80190ee <points_coincide+0x9a>
 801914e:	bf00      	nop
 8019150:	3727c5ac 	.word	0x3727c5ac

08019154 <add_last_point>:
 8019154:	b4f0      	push	{r4, r5, r6, r7}
 8019156:	4b2b      	ldr	r3, [pc, #172]	@ (8019204 <add_last_point+0xb0>)
 8019158:	b082      	sub	sp, #8
 801915a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801915c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8019160:	d022      	beq.n	80191a8 <add_last_point+0x54>
 8019162:	f240 11ff 	movw	r1, #511	@ 0x1ff
 8019166:	428a      	cmp	r2, r1
 8019168:	d029      	beq.n	80191be <add_last_point+0x6a>
 801916a:	4c27      	ldr	r4, [pc, #156]	@ (8019208 <add_last_point+0xb4>)
 801916c:	695a      	ldr	r2, [r3, #20]
 801916e:	6919      	ldr	r1, [r3, #16]
 8019170:	6826      	ldr	r6, [r4, #0]
 8019172:	1c57      	adds	r7, r2, #1
 8019174:	1c8d      	adds	r5, r1, #2
 8019176:	bb46      	cbnz	r6, 80191ca <add_last_point+0x76>
 8019178:	681e      	ldr	r6, [r3, #0]
 801917a:	4296      	cmp	r6, r2
 801917c:	d936      	bls.n	80191ec <add_last_point+0x98>
 801917e:	685e      	ldr	r6, [r3, #4]
 8019180:	f040 0002 	orr.w	r0, r0, #2
 8019184:	615f      	str	r7, [r3, #20]
 8019186:	689f      	ldr	r7, [r3, #8]
 8019188:	54b0      	strb	r0, [r6, r2]
 801918a:	1c4a      	adds	r2, r1, #1
 801918c:	42ba      	cmp	r2, r7
 801918e:	d224      	bcs.n	80191da <add_last_point+0x86>
 8019190:	2000      	movs	r0, #0
 8019192:	68da      	ldr	r2, [r3, #12]
 8019194:	611d      	str	r5, [r3, #16]
 8019196:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 801919a:	ed81 0a00 	vstr	s0, [r1]
 801919e:	edc1 0a01 	vstr	s1, [r1, #4]
 80191a2:	b002      	add	sp, #8
 80191a4:	bcf0      	pop	{r4, r5, r6, r7}
 80191a6:	4770      	bx	lr
 80191a8:	4917      	ldr	r1, [pc, #92]	@ (8019208 <add_last_point+0xb4>)
 80191aa:	695a      	ldr	r2, [r3, #20]
 80191ac:	680d      	ldr	r5, [r1, #0]
 80191ae:	1c54      	adds	r4, r2, #1
 80191b0:	b98d      	cbnz	r5, 80191d6 <add_last_point+0x82>
 80191b2:	681d      	ldr	r5, [r3, #0]
 80191b4:	4295      	cmp	r5, r2
 80191b6:	d91f      	bls.n	80191f8 <add_last_point+0xa4>
 80191b8:	6859      	ldr	r1, [r3, #4]
 80191ba:	615c      	str	r4, [r3, #20]
 80191bc:	5488      	strb	r0, [r1, r2]
 80191be:	2200      	movs	r2, #0
 80191c0:	2000      	movs	r0, #0
 80191c2:	625a      	str	r2, [r3, #36]	@ 0x24
 80191c4:	b002      	add	sp, #8
 80191c6:	bcf0      	pop	{r4, r5, r6, r7}
 80191c8:	4770      	bx	lr
 80191ca:	615f      	str	r7, [r3, #20]
 80191cc:	2000      	movs	r0, #0
 80191ce:	611d      	str	r5, [r3, #16]
 80191d0:	b002      	add	sp, #8
 80191d2:	bcf0      	pop	{r4, r5, r6, r7}
 80191d4:	4770      	bx	lr
 80191d6:	615c      	str	r4, [r3, #20]
 80191d8:	e7f1      	b.n	80191be <add_last_point+0x6a>
 80191da:	2102      	movs	r1, #2
 80191dc:	2201      	movs	r2, #1
 80191de:	2000      	movs	r0, #0
 80191e0:	611d      	str	r5, [r3, #16]
 80191e2:	6299      	str	r1, [r3, #40]	@ 0x28
 80191e4:	6022      	str	r2, [r4, #0]
 80191e6:	b002      	add	sp, #8
 80191e8:	bcf0      	pop	{r4, r5, r6, r7}
 80191ea:	4770      	bx	lr
 80191ec:	2102      	movs	r1, #2
 80191ee:	2201      	movs	r2, #1
 80191f0:	615f      	str	r7, [r3, #20]
 80191f2:	6299      	str	r1, [r3, #40]	@ 0x28
 80191f4:	6022      	str	r2, [r4, #0]
 80191f6:	e7e9      	b.n	80191cc <add_last_point+0x78>
 80191f8:	2002      	movs	r0, #2
 80191fa:	2201      	movs	r2, #1
 80191fc:	615c      	str	r4, [r3, #20]
 80191fe:	6298      	str	r0, [r3, #40]	@ 0x28
 8019200:	600a      	str	r2, [r1, #0]
 8019202:	e7dc      	b.n	80191be <add_last_point+0x6a>
 8019204:	20083110 	.word	0x20083110
 8019208:	20083108 	.word	0x20083108

0801920c <calc_move_geometry>:
 801920c:	b4f0      	push	{r4, r5, r6, r7}
 801920e:	4b2b      	ldr	r3, [pc, #172]	@ (80192bc <calc_move_geometry+0xb0>)
 8019210:	482b      	ldr	r0, [pc, #172]	@ (80192c0 <calc_move_geometry+0xb4>)
 8019212:	ed93 7a00 	vldr	s14, [r3]
 8019216:	eeb4 0a47 	vcmp.f32	s0, s14
 801921a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801921e:	4b29      	ldr	r3, [pc, #164]	@ (80192c4 <calc_move_geometry+0xb8>)
 8019220:	bf48      	it	mi
 8019222:	eeb0 0a47 	vmovmi.f32	s0, s14
 8019226:	edd3 7a00 	vldr	s15, [r3]
 801922a:	eef4 7a40 	vcmp.f32	s15, s0
 801922e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019232:	eef4 0a47 	vcmp.f32	s1, s14
 8019236:	bf48      	it	mi
 8019238:	eeb0 0a67 	vmovmi.f32	s0, s15
 801923c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019240:	bf48      	it	mi
 8019242:	eef0 0a47 	vmovmi.f32	s1, s14
 8019246:	eef4 7a60 	vcmp.f32	s15, s1
 801924a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801924e:	4b1e      	ldr	r3, [pc, #120]	@ (80192c8 <calc_move_geometry+0xbc>)
 8019250:	6806      	ldr	r6, [r0, #0]
 8019252:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 8019256:	b082      	sub	sp, #8
 8019258:	bf48      	it	mi
 801925a:	eef0 0a67 	vmovmi.f32	s1, s15
 801925e:	1c55      	adds	r5, r2, #1
 8019260:	1c8c      	adds	r4, r1, #2
 8019262:	b9b6      	cbnz	r6, 8019292 <calc_move_geometry+0x86>
 8019264:	681e      	ldr	r6, [r3, #0]
 8019266:	4296      	cmp	r6, r2
 8019268:	d921      	bls.n	80192ae <calc_move_geometry+0xa2>
 801926a:	2601      	movs	r6, #1
 801926c:	685f      	ldr	r7, [r3, #4]
 801926e:	615d      	str	r5, [r3, #20]
 8019270:	689d      	ldr	r5, [r3, #8]
 8019272:	54be      	strb	r6, [r7, r2]
 8019274:	198a      	adds	r2, r1, r6
 8019276:	42aa      	cmp	r2, r5
 8019278:	d211      	bcs.n	801929e <calc_move_geometry+0x92>
 801927a:	2000      	movs	r0, #0
 801927c:	68da      	ldr	r2, [r3, #12]
 801927e:	611c      	str	r4, [r3, #16]
 8019280:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019284:	ed81 0a00 	vstr	s0, [r1]
 8019288:	edc1 0a01 	vstr	s1, [r1, #4]
 801928c:	b002      	add	sp, #8
 801928e:	bcf0      	pop	{r4, r5, r6, r7}
 8019290:	4770      	bx	lr
 8019292:	615d      	str	r5, [r3, #20]
 8019294:	2000      	movs	r0, #0
 8019296:	611c      	str	r4, [r3, #16]
 8019298:	b002      	add	sp, #8
 801929a:	bcf0      	pop	{r4, r5, r6, r7}
 801929c:	4770      	bx	lr
 801929e:	2202      	movs	r2, #2
 80192a0:	6006      	str	r6, [r0, #0]
 80192a2:	2000      	movs	r0, #0
 80192a4:	611c      	str	r4, [r3, #16]
 80192a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80192a8:	b002      	add	sp, #8
 80192aa:	bcf0      	pop	{r4, r5, r6, r7}
 80192ac:	4770      	bx	lr
 80192ae:	2102      	movs	r1, #2
 80192b0:	2201      	movs	r2, #1
 80192b2:	615d      	str	r5, [r3, #20]
 80192b4:	6299      	str	r1, [r3, #40]	@ 0x28
 80192b6:	6002      	str	r2, [r0, #0]
 80192b8:	e7ec      	b.n	8019294 <calc_move_geometry+0x88>
 80192ba:	bf00      	nop
 80192bc:	20000144 	.word	0x20000144
 80192c0:	20083108 	.word	0x20083108
 80192c4:	20000140 	.word	0x20000140
 80192c8:	20083110 	.word	0x20083110

080192cc <calc_line_geometry>:
 80192cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80192d0:	ed2d 8b08 	vpush	{d8-d11}
 80192d4:	4b6e      	ldr	r3, [pc, #440]	@ (8019490 <calc_line_geometry+0x1c4>)
 80192d6:	b097      	sub	sp, #92	@ 0x5c
 80192d8:	ed93 5a00 	vldr	s10, [r3]
 80192dc:	eeb4 5ac0 	vcmpe.f32	s10, s0
 80192e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192e4:	4b6b      	ldr	r3, [pc, #428]	@ (8019494 <calc_line_geometry+0x1c8>)
 80192e6:	ed8d 0a02 	vstr	s0, [sp, #8]
 80192ea:	edcd 0a03 	vstr	s1, [sp, #12]
 80192ee:	ed8d 1a00 	vstr	s2, [sp]
 80192f2:	edcd 1a01 	vstr	s3, [sp, #4]
 80192f6:	edd3 5a00 	vldr	s11, [r3]
 80192fa:	d405      	bmi.n	8019308 <calc_line_geometry+0x3c>
 80192fc:	eeb4 5ae0 	vcmpe.f32	s10, s1
 8019300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019304:	f140 824a 	bpl.w	801979c <calc_line_geometry+0x4d0>
 8019308:	eeb4 5ac1 	vcmpe.f32	s10, s2
 801930c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019310:	f100 80ca 	bmi.w	80194a8 <calc_line_geometry+0x1dc>
 8019314:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801931c:	f100 80c4 	bmi.w	80194a8 <calc_line_geometry+0x1dc>
 8019320:	2201      	movs	r2, #1
 8019322:	eeb4 1ae5 	vcmpe.f32	s2, s11
 8019326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801932a:	f100 824f 	bmi.w	80197cc <calc_line_geometry+0x500>
 801932e:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019336:	f100 8249 	bmi.w	80197cc <calc_line_geometry+0x500>
 801933a:	2400      	movs	r4, #0
 801933c:	ab12      	add	r3, sp, #72	@ 0x48
 801933e:	9412      	str	r4, [sp, #72]	@ 0x48
 8019340:	e9c3 4401 	strd	r4, r4, [r3, #4]
 8019344:	60dc      	str	r4, [r3, #12]
 8019346:	2a00      	cmp	r2, #0
 8019348:	f000 83de 	beq.w	8019b08 <calc_line_geometry+0x83c>
 801934c:	ee31 3ae0 	vsub.f32	s6, s3, s1
 8019350:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019354:	ee71 2a40 	vsub.f32	s5, s2, s0
 8019358:	ee30 8ae5 	vsub.f32	s16, s1, s11
 801935c:	ee35 2a65 	vsub.f32	s4, s10, s11
 8019360:	eef1 4a43 	vneg.f32	s9, s6
 8019364:	ee75 5ae5 	vsub.f32	s11, s11, s11
 8019368:	ee24 baa9 	vmul.f32	s22, s9, s19
 801936c:	ee62 8a88 	vmul.f32	s17, s5, s16
 8019370:	ee62 ba43 	vnmul.f32	s23, s4, s6
 8019374:	ee62 3aa5 	vmul.f32	s7, s5, s11
 8019378:	ee7b aa28 	vadd.f32	s21, s22, s17
 801937c:	ee73 3aab 	vadd.f32	s7, s7, s23
 8019380:	eeca 7aa3 	vdiv.f32	s15, s21, s7
 8019384:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801938c:	aa02      	add	r2, sp, #8
 801938e:	ad0a      	add	r5, sp, #40	@ 0x28
 8019390:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019394:	ed8d 1a0c 	vstr	s2, [sp, #48]	@ 0x30
 8019398:	edcd 1a0d 	vstr	s3, [sp, #52]	@ 0x34
 801939c:	e885 0003 	stmia.w	r5, {r0, r1}
 80193a0:	db07      	blt.n	80193b2 <calc_line_geometry+0xe6>
 80193a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80193a6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80193aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ae:	f240 85c9 	bls.w	8019f44 <calc_line_geometry+0xc78>
 80193b2:	ed9f 4a3b 	vldr	s8, [pc, #236]	@ 80194a0 <calc_line_geometry+0x1d4>
 80193b6:	4622      	mov	r2, r4
 80193b8:	eeb0 aa44 	vmov.f32	s20, s8
 80193bc:	ee35 9a45 	vsub.f32	s18, s10, s10
 80193c0:	ee70 7ac5 	vsub.f32	s15, s1, s10
 80193c4:	ee62 6a89 	vmul.f32	s13, s5, s18
 80193c8:	ee62 3aa7 	vmul.f32	s7, s5, s15
 80193cc:	ee76 6aab 	vadd.f32	s13, s13, s23
 80193d0:	ee73 3a8b 	vadd.f32	s7, s7, s22
 80193d4:	ee83 7aa6 	vdiv.f32	s14, s7, s13
 80193d8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80193dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193e0:	db07      	blt.n	80193f2 <calc_line_geometry+0x126>
 80193e2:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80193e6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80193ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ee:	f240 8574 	bls.w	8019eda <calc_line_geometry+0xc0e>
 80193f2:	ee62 3a82 	vmul.f32	s7, s5, s4
 80193f6:	ee25 4ac3 	vnmul.f32	s8, s11, s6
 80193fa:	ee34 4a23 	vadd.f32	s8, s8, s7
 80193fe:	eeca 7a84 	vdiv.f32	s15, s21, s8
 8019402:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801940a:	db07      	blt.n	801941c <calc_line_geometry+0x150>
 801940c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019410:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019418:	f240 8527 	bls.w	8019e6a <calc_line_geometry+0xb9e>
 801941c:	ee30 5a45 	vsub.f32	s10, s0, s10
 8019420:	ee69 6a43 	vnmul.f32	s13, s18, s6
 8019424:	ee64 4a85 	vmul.f32	s9, s9, s10
 8019428:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801942c:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019430:	eec4 7aa6 	vdiv.f32	s15, s9, s13
 8019434:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019438:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801943c:	db07      	blt.n	801944e <calc_line_geometry+0x182>
 801943e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019442:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801944a:	f240 84e4 	bls.w	8019e16 <calc_line_geometry+0xb4a>
 801944e:	4d12      	ldr	r5, [pc, #72]	@ (8019498 <calc_line_geometry+0x1cc>)
 8019450:	4b12      	ldr	r3, [pc, #72]	@ (801949c <calc_line_geometry+0x1d0>)
 8019452:	6828      	ldr	r0, [r5, #0]
 8019454:	e9d3 4204 	ldrd	r4, r2, [r3, #16]
 8019458:	1c51      	adds	r1, r2, #1
 801945a:	1ca6      	adds	r6, r4, #2
 801945c:	2800      	cmp	r0, #0
 801945e:	f040 8435 	bne.w	8019ccc <calc_line_geometry+0xa00>
 8019462:	6818      	ldr	r0, [r3, #0]
 8019464:	4290      	cmp	r0, r2
 8019466:	f240 848f 	bls.w	8019d88 <calc_line_geometry+0xabc>
 801946a:	2082      	movs	r0, #130	@ 0x82
 801946c:	685f      	ldr	r7, [r3, #4]
 801946e:	6159      	str	r1, [r3, #20]
 8019470:	54b8      	strb	r0, [r7, r2]
 8019472:	689a      	ldr	r2, [r3, #8]
 8019474:	1c61      	adds	r1, r4, #1
 8019476:	4291      	cmp	r1, r2
 8019478:	f080 8480 	bcs.w	8019d7c <calc_line_geometry+0xab0>
 801947c:	68da      	ldr	r2, [r3, #12]
 801947e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019480:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019482:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8019486:	611e      	str	r6, [r3, #16]
 8019488:	6010      	str	r0, [r2, #0]
 801948a:	6051      	str	r1, [r2, #4]
 801948c:	f000 bc20 	b.w	8019cd0 <calc_line_geometry+0xa04>
 8019490:	20000140 	.word	0x20000140
 8019494:	20000144 	.word	0x20000144
 8019498:	20083108 	.word	0x20083108
 801949c:	20083110 	.word	0x20083110
 80194a0:	00000000 	.word	0x00000000
 80194a4:	3727c5ac 	.word	0x3727c5ac
 80194a8:	ee35 2a65 	vsub.f32	s4, s10, s11
 80194ac:	2200      	movs	r2, #0
 80194ae:	eef1 3a42 	vneg.f32	s7, s4
 80194b2:	ee35 3ae5 	vsub.f32	s6, s11, s11
 80194b6:	ab12      	add	r3, sp, #72	@ 0x48
 80194b8:	e9c3 2201 	strd	r2, r2, [r3, #4]
 80194bc:	9212      	str	r2, [sp, #72]	@ 0x48
 80194be:	60da      	str	r2, [r3, #12]
 80194c0:	ee70 2ae1 	vsub.f32	s5, s1, s3
 80194c4:	ee70 4a41 	vsub.f32	s9, s0, s2
 80194c8:	ee31 aa65 	vsub.f32	s20, s2, s11
 80194cc:	eeb1 4a62 	vneg.f32	s8, s5
 80194d0:	ee71 8ae5 	vsub.f32	s17, s3, s11
 80194d4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80194d8:	ee64 ba0a 	vmul.f32	s23, s8, s20
 80194dc:	ee64 9aa8 	vmul.f32	s19, s9, s17
 80194e0:	ee64 7a83 	vmul.f32	s15, s9, s6
 80194e4:	ee3b baa9 	vadd.f32	s22, s23, s19
 80194e8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80194ec:	ee8b 7a27 	vdiv.f32	s14, s22, s15
 80194f0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80194f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194f8:	aa02      	add	r2, sp, #8
 80194fa:	ac10      	add	r4, sp, #64	@ 0x40
 80194fc:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019500:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 8019504:	edcd 1a0f 	vstr	s3, [sp, #60]	@ 0x3c
 8019508:	e884 0003 	stmia.w	r4, {r0, r1}
 801950c:	db07      	blt.n	801951e <calc_line_geometry+0x252>
 801950e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019512:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8019516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801951a:	f240 824f 	bls.w	80199bc <calc_line_geometry+0x6f0>
 801951e:	ed1f 8a20 	vldr	s16, [pc, #-128]	@ 80194a0 <calc_line_geometry+0x1d4>
 8019522:	2200      	movs	r2, #0
 8019524:	eef0 aa48 	vmov.f32	s21, s16
 8019528:	ee35 9a45 	vsub.f32	s18, s10, s10
 801952c:	ee71 6ac5 	vsub.f32	s13, s3, s10
 8019530:	ee64 7a89 	vmul.f32	s15, s9, s18
 8019534:	ee24 7aa6 	vmul.f32	s14, s9, s13
 8019538:	ee77 3aa3 	vadd.f32	s7, s15, s7
 801953c:	ee77 7a2b 	vadd.f32	s15, s14, s23
 8019540:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 8019544:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801954c:	db07      	blt.n	801955e <calc_line_geometry+0x292>
 801954e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019552:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801955a:	f240 825d 	bls.w	8019a18 <calc_line_geometry+0x74c>
 801955e:	ee64 3a82 	vmul.f32	s7, s9, s4
 8019562:	ee23 7a62 	vnmul.f32	s14, s6, s5
 8019566:	ee37 7a23 	vadd.f32	s14, s14, s7
 801956a:	eecb 7a07 	vdiv.f32	s15, s22, s14
 801956e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019576:	db07      	blt.n	8019588 <calc_line_geometry+0x2bc>
 8019578:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801957c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019584:	f240 81e3 	bls.w	801994e <calc_line_geometry+0x682>
 8019588:	ee31 7a45 	vsub.f32	s14, s2, s10
 801958c:	ee69 7a62 	vnmul.f32	s15, s18, s5
 8019590:	ee24 4a07 	vmul.f32	s8, s8, s14
 8019594:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019598:	ee34 4a29 	vadd.f32	s8, s8, s19
 801959c:	eec4 6a27 	vdiv.f32	s13, s8, s15
 80195a0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80195a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195a8:	db07      	blt.n	80195ba <calc_line_geometry+0x2ee>
 80195aa:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80195ae:	eef4 6ac6 	vcmpe.f32	s13, s12
 80195b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195b6:	f240 826b 	bls.w	8019a90 <calc_line_geometry+0x7c4>
 80195ba:	eeb4 0ae5 	vcmpe.f32	s0, s11
 80195be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195c2:	bf54      	ite	pl
 80195c4:	eef0 7a40 	vmovpl.f32	s15, s0
 80195c8:	eef0 7a65 	vmovmi.f32	s15, s11
 80195cc:	eeb4 5a67 	vcmp.f32	s10, s15
 80195d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195d4:	eef4 0ae5 	vcmpe.f32	s1, s11
 80195d8:	bf48      	it	mi
 80195da:	eef0 7a45 	vmovmi.f32	s15, s10
 80195de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195e2:	bf54      	ite	pl
 80195e4:	eef0 6a60 	vmovpl.f32	s13, s1
 80195e8:	eef0 6a65 	vmovmi.f32	s13, s11
 80195ec:	eeb4 5a66 	vcmp.f32	s10, s13
 80195f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195f4:	eeb4 1ae5 	vcmpe.f32	s2, s11
 80195f8:	bf48      	it	mi
 80195fa:	eef0 6a45 	vmovmi.f32	s13, s10
 80195fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019602:	bf54      	ite	pl
 8019604:	eeb0 7a41 	vmovpl.f32	s14, s2
 8019608:	eeb0 7a65 	vmovmi.f32	s14, s11
 801960c:	eeb4 5a47 	vcmp.f32	s10, s14
 8019610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019614:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019618:	bf48      	it	mi
 801961a:	eeb0 7a45 	vmovmi.f32	s14, s10
 801961e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019622:	bf58      	it	pl
 8019624:	eef0 5a61 	vmovpl.f32	s11, s3
 8019628:	eeb4 5a65 	vcmp.f32	s10, s11
 801962c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019630:	bf48      	it	mi
 8019632:	eef0 5a45 	vmovmi.f32	s11, s10
 8019636:	2a02      	cmp	r2, #2
 8019638:	f000 8178 	beq.w	801992c <calc_line_geometry+0x660>
 801963c:	ee37 5ac7 	vsub.f32	s10, s15, s14
 8019640:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019648:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801964c:	bf48      	it	mi
 801964e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019656:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801965a:	bf4c      	ite	mi
 801965c:	eef1 4a67 	vnegmi.f32	s9, s15
 8019660:	eef0 4a67 	vmovpl.f32	s9, s15
 8019664:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019668:	f100 8261 	bmi.w	8019b2e <calc_line_geometry+0x862>
 801966c:	eef4 4ac7 	vcmpe.f32	s9, s14
 8019670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019674:	f140 8243 	bpl.w	8019afe <calc_line_geometry+0x832>
 8019678:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801967c:	ed1f 6a77 	vldr	s12, [pc, #-476]	@ 80194a4 <calc_line_geometry+0x1d8>
 8019680:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019684:	bf4c      	ite	mi
 8019686:	ee27 6ac6 	vnmulmi.f32	s12, s15, s12
 801968a:	ee27 6a86 	vmulpl.f32	s12, s15, s12
 801968e:	eeb4 5ac6 	vcmpe.f32	s10, s12
 8019692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019696:	d96e      	bls.n	8019776 <calc_line_geometry+0x4aa>
 8019698:	ee36 5ae5 	vsub.f32	s10, s13, s11
 801969c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80196a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80196a8:	bf48      	it	mi
 80196aa:	eeb1 5a45 	vnegmi.f32	s10, s10
 80196ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196b2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80196b6:	bf4c      	ite	mi
 80196b8:	eef1 4a66 	vnegmi.f32	s9, s13
 80196bc:	eef0 4a66 	vmovpl.f32	s9, s13
 80196c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196c4:	f100 82ee 	bmi.w	8019ca4 <calc_line_geometry+0x9d8>
 80196c8:	eef4 4ae5 	vcmpe.f32	s9, s11
 80196cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196d0:	f100 82f0 	bmi.w	8019cb4 <calc_line_geometry+0x9e8>
 80196d4:	ed1f 6a8d 	vldr	s12, [pc, #-564]	@ 80194a4 <calc_line_geometry+0x1d8>
 80196d8:	ee25 6a86 	vmul.f32	s12, s11, s12
 80196dc:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80196e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196e4:	d947      	bls.n	8019776 <calc_line_geometry+0x4aa>
 80196e6:	ee71 1ae0 	vsub.f32	s3, s3, s1
 80196ea:	ee31 1a40 	vsub.f32	s2, s2, s0
 80196ee:	ee37 6ac0 	vsub.f32	s12, s15, s0
 80196f2:	ee35 5ae0 	vsub.f32	s10, s11, s1
 80196f6:	ee37 0a40 	vsub.f32	s0, s14, s0
 80196fa:	ee76 0ae0 	vsub.f32	s1, s13, s1
 80196fe:	ee26 6a21 	vmul.f32	s12, s12, s3
 8019702:	ee25 5a01 	vmul.f32	s10, s10, s2
 8019706:	ee60 1a21 	vmul.f32	s3, s0, s3
 801970a:	ee20 1a81 	vmul.f32	s2, s1, s2
 801970e:	4bdc      	ldr	r3, [pc, #880]	@ (8019a80 <calc_line_geometry+0x7b4>)
 8019710:	48dc      	ldr	r0, [pc, #880]	@ (8019a84 <calc_line_geometry+0x7b8>)
 8019712:	6959      	ldr	r1, [r3, #20]
 8019714:	6802      	ldr	r2, [r0, #0]
 8019716:	ee36 6a45 	vsub.f32	s12, s12, s10
 801971a:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801971e:	1c4c      	adds	r4, r1, #1
 8019720:	2a00      	cmp	r2, #0
 8019722:	f000 8322 	beq.w	8019d6a <calc_line_geometry+0xa9e>
 8019726:	615c      	str	r4, [r3, #20]
 8019728:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801972c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019730:	eef5 1ac0 	vcmpe.f32	s3, #0.0
 8019734:	bf48      	it	mi
 8019736:	eeb1 6a46 	vnegmi.f32	s12, s12
 801973a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801973e:	bf48      	it	mi
 8019740:	eef1 1a61 	vnegmi.f32	s3, s3
 8019744:	eeb4 6ae1 	vcmpe.f32	s12, s3
 8019748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801974c:	6919      	ldr	r1, [r3, #16]
 801974e:	f101 0502 	add.w	r5, r1, #2
 8019752:	f140 8350 	bpl.w	8019df6 <calc_line_geometry+0xb2a>
 8019756:	2a00      	cmp	r2, #0
 8019758:	f040 834b 	bne.w	8019df2 <calc_line_geometry+0xb26>
 801975c:	689a      	ldr	r2, [r3, #8]
 801975e:	1c4c      	adds	r4, r1, #1
 8019760:	4294      	cmp	r4, r2
 8019762:	f080 8516 	bcs.w	801a192 <calc_line_geometry+0xec6>
 8019766:	68da      	ldr	r2, [r3, #12]
 8019768:	611d      	str	r5, [r3, #16]
 801976a:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 801976e:	edc1 7a00 	vstr	s15, [r1]
 8019772:	edc1 5a01 	vstr	s11, [r1, #4]
 8019776:	eeb0 0a47 	vmov.f32	s0, s14
 801977a:	eef0 0a65 	vmov.f32	s1, s11
 801977e:	2080      	movs	r0, #128	@ 0x80
 8019780:	f7ff fce8 	bl	8019154 <add_last_point>
 8019784:	4604      	mov	r4, r0
 8019786:	2800      	cmp	r0, #0
 8019788:	f000 81c9 	beq.w	8019b1e <calc_line_geometry+0x852>
 801978c:	f003 f952 	bl	801ca34 <nema_vg_set_error>
 8019790:	4620      	mov	r0, r4
 8019792:	b017      	add	sp, #92	@ 0x5c
 8019794:	ecbd 8b08 	vpop	{d8-d11}
 8019798:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801979c:	eeb4 0ae5 	vcmpe.f32	s0, s11
 80197a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197a4:	f53f adb0 	bmi.w	8019308 <calc_line_geometry+0x3c>
 80197a8:	eef4 0ae5 	vcmpe.f32	s1, s11
 80197ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197b0:	eeb4 5ac1 	vcmpe.f32	s10, s2
 80197b4:	bf4c      	ite	mi
 80197b6:	2201      	movmi	r2, #1
 80197b8:	2200      	movpl	r2, #0
 80197ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197be:	d405      	bmi.n	80197cc <calc_line_geometry+0x500>
 80197c0:	eeb4 5ae1 	vcmpe.f32	s10, s3
 80197c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197c8:	f57f adab 	bpl.w	8019322 <calc_line_geometry+0x56>
 80197cc:	2100      	movs	r1, #0
 80197ce:	ee35 2a65 	vsub.f32	s4, s10, s11
 80197d2:	ab12      	add	r3, sp, #72	@ 0x48
 80197d4:	9112      	str	r1, [sp, #72]	@ 0x48
 80197d6:	e9c3 1101 	strd	r1, r1, [r3, #4]
 80197da:	60d9      	str	r1, [r3, #12]
 80197dc:	eef1 3a42 	vneg.f32	s7, s4
 80197e0:	ee35 3ae5 	vsub.f32	s6, s11, s11
 80197e4:	2a00      	cmp	r2, #0
 80197e6:	f47f ae6b 	bne.w	80194c0 <calc_line_geometry+0x1f4>
 80197ea:	ee71 2ae0 	vsub.f32	s5, s3, s1
 80197ee:	ee31 4a40 	vsub.f32	s8, s2, s0
 80197f2:	ee70 9a65 	vsub.f32	s19, s0, s11
 80197f6:	eef1 4a62 	vneg.f32	s9, s5
 80197fa:	ee30 8ae5 	vsub.f32	s16, s1, s11
 80197fe:	ee62 3aa3 	vmul.f32	s7, s5, s7
 8019802:	ee64 baa9 	vmul.f32	s23, s9, s19
 8019806:	ee64 8a08 	vmul.f32	s17, s8, s16
 801980a:	ee24 7a03 	vmul.f32	s14, s8, s6
 801980e:	ee3b baa8 	vadd.f32	s22, s23, s17
 8019812:	ee37 7a23 	vadd.f32	s14, s14, s7
 8019816:	eecb 7a07 	vdiv.f32	s15, s22, s14
 801981a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801981e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019822:	a902      	add	r1, sp, #8
 8019824:	ac06      	add	r4, sp, #24
 8019826:	c903      	ldmia	r1, {r0, r1}
 8019828:	ed8d 1a08 	vstr	s2, [sp, #32]
 801982c:	edcd 1a09 	vstr	s3, [sp, #36]	@ 0x24
 8019830:	e884 0003 	stmia.w	r4, {r0, r1}
 8019834:	db07      	blt.n	8019846 <calc_line_geometry+0x57a>
 8019836:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801983a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801983e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019842:	f240 8444 	bls.w	801a0ce <calc_line_geometry+0xe02>
 8019846:	ed9f 9a90 	vldr	s18, [pc, #576]	@ 8019a88 <calc_line_geometry+0x7bc>
 801984a:	eef0 aa49 	vmov.f32	s21, s18
 801984e:	ee35 aa45 	vsub.f32	s20, s10, s10
 8019852:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019856:	ee24 7a0a 	vmul.f32	s14, s8, s20
 801985a:	ee64 6a27 	vmul.f32	s13, s8, s15
 801985e:	ee77 3a23 	vadd.f32	s7, s14, s7
 8019862:	ee36 7aab 	vadd.f32	s14, s13, s23
 8019866:	eec7 6a23 	vdiv.f32	s13, s14, s7
 801986a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801986e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019872:	db07      	blt.n	8019884 <calc_line_geometry+0x5b8>
 8019874:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019878:	eef4 6ac6 	vcmpe.f32	s13, s12
 801987c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019880:	f240 83f0 	bls.w	801a064 <calc_line_geometry+0xd98>
 8019884:	ee24 9a02 	vmul.f32	s18, s8, s4
 8019888:	ee63 6a62 	vnmul.f32	s13, s6, s5
 801988c:	ee76 6a89 	vadd.f32	s13, s13, s18
 8019890:	eecb 7a26 	vdiv.f32	s15, s22, s13
 8019894:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801989c:	db07      	blt.n	80198ae <calc_line_geometry+0x5e2>
 801989e:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 80198a2:	eef4 7ae3 	vcmpe.f32	s15, s7
 80198a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198aa:	f240 83a4 	bls.w	8019ff6 <calc_line_geometry+0xd2a>
 80198ae:	ee70 7a45 	vsub.f32	s15, s0, s10
 80198b2:	ee2a 7a62 	vnmul.f32	s14, s20, s5
 80198b6:	ee64 4aa7 	vmul.f32	s9, s9, s15
 80198ba:	ee37 7a09 	vadd.f32	s14, s14, s18
 80198be:	ee74 4aa8 	vadd.f32	s9, s9, s17
 80198c2:	eec4 6a87 	vdiv.f32	s13, s9, s14
 80198c6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80198ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198ce:	db07      	blt.n	80198e0 <calc_line_geometry+0x614>
 80198d0:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80198d4:	eef4 6ac6 	vcmpe.f32	s13, s12
 80198d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198dc:	f240 8362 	bls.w	8019fa4 <calc_line_geometry+0xcd8>
 80198e0:	f240 10ff 	movw	r0, #511	@ 0x1ff
 80198e4:	4b66      	ldr	r3, [pc, #408]	@ (8019a80 <calc_line_geometry+0x7b4>)
 80198e6:	4e67      	ldr	r6, [pc, #412]	@ (8019a84 <calc_line_geometry+0x7b8>)
 80198e8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80198ea:	6834      	ldr	r4, [r6, #0]
 80198ec:	e9d3 5104 	ldrd	r5, r1, [r3, #16]
 80198f0:	4282      	cmp	r2, r0
 80198f2:	bf0c      	ite	eq
 80198f4:	2282      	moveq	r2, #130	@ 0x82
 80198f6:	2202      	movne	r2, #2
 80198f8:	1caf      	adds	r7, r5, #2
 80198fa:	1c48      	adds	r0, r1, #1
 80198fc:	2c00      	cmp	r4, #0
 80198fe:	f040 8201 	bne.w	8019d04 <calc_line_geometry+0xa38>
 8019902:	681c      	ldr	r4, [r3, #0]
 8019904:	428c      	cmp	r4, r1
 8019906:	f240 825f 	bls.w	8019dc8 <calc_line_geometry+0xafc>
 801990a:	685c      	ldr	r4, [r3, #4]
 801990c:	6158      	str	r0, [r3, #20]
 801990e:	6898      	ldr	r0, [r3, #8]
 8019910:	5462      	strb	r2, [r4, r1]
 8019912:	1c69      	adds	r1, r5, #1
 8019914:	4281      	cmp	r1, r0
 8019916:	f080 8251 	bcs.w	8019dbc <calc_line_geometry+0xaf0>
 801991a:	68da      	ldr	r2, [r3, #12]
 801991c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801991e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019920:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 8019924:	611f      	str	r7, [r3, #16]
 8019926:	6010      	str	r0, [r2, #0]
 8019928:	6051      	str	r1, [r2, #4]
 801992a:	e1ed      	b.n	8019d08 <calc_line_geometry+0xa3c>
 801992c:	4b54      	ldr	r3, [pc, #336]	@ (8019a80 <calc_line_geometry+0x7b4>)
 801992e:	4855      	ldr	r0, [pc, #340]	@ (8019a84 <calc_line_geometry+0x7b8>)
 8019930:	695d      	ldr	r5, [r3, #20]
 8019932:	6801      	ldr	r1, [r0, #0]
 8019934:	1c6e      	adds	r6, r5, #1
 8019936:	2900      	cmp	r1, #0
 8019938:	f040 8106 	bne.w	8019b48 <calc_line_geometry+0x87c>
 801993c:	681c      	ldr	r4, [r3, #0]
 801993e:	42ac      	cmp	r4, r5
 8019940:	f240 820e 	bls.w	8019d60 <calc_line_geometry+0xa94>
 8019944:	2482      	movs	r4, #130	@ 0x82
 8019946:	685a      	ldr	r2, [r3, #4]
 8019948:	615e      	str	r6, [r3, #20]
 801994a:	5554      	strb	r4, [r2, r5]
 801994c:	e0fd      	b.n	8019b4a <calc_line_geometry+0x87e>
 801994e:	ee28 3a83 	vmul.f32	s6, s17, s6
 8019952:	ee2a aa02 	vmul.f32	s20, s20, s4
 8019956:	ee33 aa4a 	vsub.f32	s20, s6, s20
 801995a:	eeca 7a07 	vdiv.f32	s15, s20, s14
 801995e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019966:	f6ff ae0f 	blt.w	8019588 <calc_line_geometry+0x2bc>
 801996a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801996e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019972:	f63f ae09 	bhi.w	8019588 <calc_line_geometry+0x2bc>
 8019976:	2a02      	cmp	r2, #2
 8019978:	f43f ae06 	beq.w	8019588 <calc_line_geometry+0x2bc>
 801997c:	ee24 7aa7 	vmul.f32	s14, s9, s15
 8019980:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019984:	2a01      	cmp	r2, #1
 8019986:	ee37 7a01 	vadd.f32	s14, s14, s2
 801998a:	ee77 7aa1 	vadd.f32	s15, s15, s3
 801998e:	f000 846b 	beq.w	801a268 <calc_line_geometry+0xf9c>
 8019992:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019996:	4619      	mov	r1, r3
 8019998:	a80e      	add	r0, sp, #56	@ 0x38
 801999a:	ed85 7a00 	vstr	s14, [r5]
 801999e:	edc5 7a01 	vstr	s15, [r5, #4]
 80199a2:	f7ff fb57 	bl	8019054 <points_coincide>
 80199a6:	2800      	cmp	r0, #0
 80199a8:	f47f adee 	bne.w	8019588 <calc_line_geometry+0x2bc>
 80199ac:	4620      	mov	r0, r4
 80199ae:	f7ff fb51 	bl	8019054 <points_coincide>
 80199b2:	2800      	cmp	r0, #0
 80199b4:	f47f ade8 	bne.w	8019588 <calc_line_geometry+0x2bc>
 80199b8:	3201      	adds	r2, #1
 80199ba:	e5e5      	b.n	8019588 <calc_line_geometry+0x2bc>
 80199bc:	ee28 7a82 	vmul.f32	s14, s17, s4
 80199c0:	ee2a 6a03 	vmul.f32	s12, s20, s6
 80199c4:	ee37 7a46 	vsub.f32	s14, s14, s12
 80199c8:	ee87 8a27 	vdiv.f32	s16, s14, s15
 80199cc:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80199d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199d4:	f6ff ada3 	blt.w	801951e <calc_line_geometry+0x252>
 80199d8:	eeb4 8ae6 	vcmpe.f32	s16, s13
 80199dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199e0:	f63f ad9d 	bhi.w	801951e <calc_line_geometry+0x252>
 80199e4:	ee64 aa88 	vmul.f32	s21, s9, s16
 80199e8:	ee22 8a88 	vmul.f32	s16, s5, s16
 80199ec:	ee7a aa81 	vadd.f32	s21, s21, s2
 80199f0:	ee38 8a21 	vadd.f32	s16, s16, s3
 80199f4:	4619      	mov	r1, r3
 80199f6:	a80e      	add	r0, sp, #56	@ 0x38
 80199f8:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 80199fc:	ed8d 8a13 	vstr	s16, [sp, #76]	@ 0x4c
 8019a00:	f7ff fb28 	bl	8019054 <points_coincide>
 8019a04:	2800      	cmp	r0, #0
 8019a06:	f040 8090 	bne.w	8019b2a <calc_line_geometry+0x85e>
 8019a0a:	4620      	mov	r0, r4
 8019a0c:	f7ff fb22 	bl	8019054 <points_coincide>
 8019a10:	fab0 f280 	clz	r2, r0
 8019a14:	0952      	lsrs	r2, r2, #5
 8019a16:	e587      	b.n	8019528 <calc_line_geometry+0x25c>
 8019a18:	ee2a 7a09 	vmul.f32	s14, s20, s18
 8019a1c:	ee62 6a26 	vmul.f32	s13, s4, s13
 8019a20:	ee76 6ac7 	vsub.f32	s13, s13, s14
 8019a24:	ee86 7aa3 	vdiv.f32	s14, s13, s7
 8019a28:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a30:	f6ff ad95 	blt.w	801955e <calc_line_geometry+0x292>
 8019a34:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a3c:	f63f ad8f 	bhi.w	801955e <calc_line_geometry+0x292>
 8019a40:	ee62 7a87 	vmul.f32	s15, s5, s14
 8019a44:	ee64 6a87 	vmul.f32	s13, s9, s14
 8019a48:	2a01      	cmp	r2, #1
 8019a4a:	ee36 7a81 	vadd.f32	s14, s13, s2
 8019a4e:	ee77 7aa1 	vadd.f32	s15, s15, s3
 8019a52:	f000 845f 	beq.w	801a314 <calc_line_geometry+0x1048>
 8019a56:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019a5a:	4619      	mov	r1, r3
 8019a5c:	a80e      	add	r0, sp, #56	@ 0x38
 8019a5e:	ed85 7a00 	vstr	s14, [r5]
 8019a62:	edc5 7a01 	vstr	s15, [r5, #4]
 8019a66:	f7ff faf5 	bl	8019054 <points_coincide>
 8019a6a:	2800      	cmp	r0, #0
 8019a6c:	f47f ad77 	bne.w	801955e <calc_line_geometry+0x292>
 8019a70:	4620      	mov	r0, r4
 8019a72:	f7ff faef 	bl	8019054 <points_coincide>
 8019a76:	2800      	cmp	r0, #0
 8019a78:	f47f ad71 	bne.w	801955e <calc_line_geometry+0x292>
 8019a7c:	3201      	adds	r2, #1
 8019a7e:	e56e      	b.n	801955e <calc_line_geometry+0x292>
 8019a80:	20083110 	.word	0x20083110
 8019a84:	20083108 	.word	0x20083108
 8019a88:	00000000 	.word	0x00000000
 8019a8c:	3727c5ac 	.word	0x3727c5ac
 8019a90:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019a94:	ee68 8a89 	vmul.f32	s17, s17, s18
 8019a98:	ee38 2ac2 	vsub.f32	s4, s17, s4
 8019a9c:	ee82 7a27 	vdiv.f32	s14, s4, s15
 8019aa0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019aa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019aa8:	f6ff ad87 	blt.w	80195ba <calc_line_geometry+0x2ee>
 8019aac:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ab4:	f63f ad81 	bhi.w	80195ba <calc_line_geometry+0x2ee>
 8019ab8:	2a02      	cmp	r2, #2
 8019aba:	f43f ad7e 	beq.w	80195ba <calc_line_geometry+0x2ee>
 8019abe:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019ac2:	ee22 7a87 	vmul.f32	s14, s5, s14
 8019ac6:	2a01      	cmp	r2, #1
 8019ac8:	ee77 7a81 	vadd.f32	s15, s15, s2
 8019acc:	ee37 7a21 	vadd.f32	s14, s14, s3
 8019ad0:	f000 8374 	beq.w	801a1bc <calc_line_geometry+0xef0>
 8019ad4:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019ad8:	4619      	mov	r1, r3
 8019ada:	a80e      	add	r0, sp, #56	@ 0x38
 8019adc:	edc5 7a00 	vstr	s15, [r5]
 8019ae0:	ed85 7a01 	vstr	s14, [r5, #4]
 8019ae4:	f7ff fab6 	bl	8019054 <points_coincide>
 8019ae8:	2800      	cmp	r0, #0
 8019aea:	f47f ad66 	bne.w	80195ba <calc_line_geometry+0x2ee>
 8019aee:	4620      	mov	r0, r4
 8019af0:	f7ff fab0 	bl	8019054 <points_coincide>
 8019af4:	2800      	cmp	r0, #0
 8019af6:	f47f ad60 	bne.w	80195ba <calc_line_geometry+0x2ee>
 8019afa:	3201      	adds	r2, #1
 8019afc:	e55d      	b.n	80195ba <calc_line_geometry+0x2ee>
 8019afe:	ed1f 6a1d 	vldr	s12, [pc, #-116]	@ 8019a8c <calc_line_geometry+0x7c0>
 8019b02:	ee27 6a06 	vmul.f32	s12, s14, s12
 8019b06:	e5c2      	b.n	801968e <calc_line_geometry+0x3c2>
 8019b08:	4610      	mov	r0, r2
 8019b0a:	ed9d 0a00 	vldr	s0, [sp]
 8019b0e:	eddd 0a01 	vldr	s1, [sp, #4]
 8019b12:	f7ff fb1f 	bl	8019154 <add_last_point>
 8019b16:	4604      	mov	r4, r0
 8019b18:	2800      	cmp	r0, #0
 8019b1a:	f47f ae37 	bne.w	801978c <calc_line_geometry+0x4c0>
 8019b1e:	4620      	mov	r0, r4
 8019b20:	b017      	add	sp, #92	@ 0x5c
 8019b22:	ecbd 8b08 	vpop	{d8-d11}
 8019b26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019b2a:	2200      	movs	r2, #0
 8019b2c:	e4fc      	b.n	8019528 <calc_line_geometry+0x25c>
 8019b2e:	eeb1 6a47 	vneg.f32	s12, s14
 8019b32:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019b36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b3a:	f53f ad9d 	bmi.w	8019678 <calc_line_geometry+0x3ac>
 8019b3e:	ed5f 4a2d 	vldr	s9, [pc, #-180]	@ 8019a8c <calc_line_geometry+0x7c0>
 8019b42:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019b46:	e5a2      	b.n	801968e <calc_line_geometry+0x3c2>
 8019b48:	615e      	str	r6, [r3, #20]
 8019b4a:	ed9d 6a12 	vldr	s12, [sp, #72]	@ 0x48
 8019b4e:	ee37 5ac6 	vsub.f32	s10, s15, s12
 8019b52:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8019b56:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019b5a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8019b5c:	4294      	cmp	r4, r2
 8019b5e:	bf0c      	ite	eq
 8019b60:	2482      	moveq	r4, #130	@ 0x82
 8019b62:	2402      	movne	r4, #2
 8019b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019b6c:	bf48      	it	mi
 8019b6e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b76:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8019b7a:	bf4c      	ite	mi
 8019b7c:	eef1 4a67 	vnegmi.f32	s9, s15
 8019b80:	eef0 4a67 	vmovpl.f32	s9, s15
 8019b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b88:	d478      	bmi.n	8019c7c <calc_line_geometry+0x9b0>
 8019b8a:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8019b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b92:	dc7b      	bgt.n	8019c8c <calc_line_geometry+0x9c0>
 8019b94:	ed5f 7a43 	vldr	s15, [pc, #-268]	@ 8019a8c <calc_line_geometry+0x7c0>
 8019b98:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019b9c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8019ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ba4:	691a      	ldr	r2, [r3, #16]
 8019ba6:	f102 0e02 	add.w	lr, r2, #2
 8019baa:	d93f      	bls.n	8019c2c <calc_line_geometry+0x960>
 8019bac:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8019bb0:	ee36 5ae7 	vsub.f32	s10, s13, s15
 8019bb4:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019bb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bbc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019bc0:	bf48      	it	mi
 8019bc2:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019bce:	bf4c      	ite	mi
 8019bd0:	eef1 4a66 	vnegmi.f32	s9, s13
 8019bd4:	eef0 4a66 	vmovpl.f32	s9, s13
 8019bd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bdc:	f100 82a6 	bmi.w	801a12c <calc_line_geometry+0xe60>
 8019be0:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019be8:	f340 80fe 	ble.w	8019de8 <calc_line_geometry+0xb1c>
 8019bec:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019bf0:	ed5f 4a5a 	vldr	s9, [pc, #-360]	@ 8019a8c <calc_line_geometry+0x7c0>
 8019bf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bf8:	bf4c      	ite	mi
 8019bfa:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 8019bfe:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 8019c02:	eeb4 5ae6 	vcmpe.f32	s10, s13
 8019c06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c0a:	d90f      	bls.n	8019c2c <calc_line_geometry+0x960>
 8019c0c:	3502      	adds	r5, #2
 8019c0e:	1d17      	adds	r7, r2, #4
 8019c10:	b949      	cbnz	r1, 8019c26 <calc_line_geometry+0x95a>
 8019c12:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8019c16:	1c51      	adds	r1, r2, #1
 8019c18:	4541      	cmp	r1, r8
 8019c1a:	f0c0 8294 	bcc.w	801a146 <calc_line_geometry+0xe7a>
 8019c1e:	2102      	movs	r1, #2
 8019c20:	2201      	movs	r2, #1
 8019c22:	6299      	str	r1, [r3, #40]	@ 0x28
 8019c24:	6002      	str	r2, [r0, #0]
 8019c26:	615d      	str	r5, [r3, #20]
 8019c28:	611f      	str	r7, [r3, #16]
 8019c2a:	e5a4      	b.n	8019776 <calc_line_geometry+0x4aa>
 8019c2c:	2900      	cmp	r1, #0
 8019c2e:	d160      	bne.n	8019cf2 <calc_line_geometry+0xa26>
 8019c30:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8019c34:	1c51      	adds	r1, r2, #1
 8019c36:	4561      	cmp	r1, ip
 8019c38:	f080 80b2 	bcs.w	8019da0 <calc_line_geometry+0xad4>
 8019c3c:	68df      	ldr	r7, [r3, #12]
 8019c3e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019c40:	eb07 0882 	add.w	r8, r7, r2, lsl #2
 8019c44:	1caf      	adds	r7, r5, #2
 8019c46:	681d      	ldr	r5, [r3, #0]
 8019c48:	f8c8 1004 	str.w	r1, [r8, #4]
 8019c4c:	42b5      	cmp	r5, r6
 8019c4e:	f8c3 e010 	str.w	lr, [r3, #16]
 8019c52:	ed88 6a00 	vstr	s12, [r8]
 8019c56:	f102 0104 	add.w	r1, r2, #4
 8019c5a:	f240 809b 	bls.w	8019d94 <calc_line_geometry+0xac8>
 8019c5e:	1cd5      	adds	r5, r2, #3
 8019c60:	685a      	ldr	r2, [r3, #4]
 8019c62:	45ac      	cmp	ip, r5
 8019c64:	615f      	str	r7, [r3, #20]
 8019c66:	5594      	strb	r4, [r2, r6]
 8019c68:	f240 80a2 	bls.w	8019db0 <calc_line_geometry+0xae4>
 8019c6c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019c6e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019c70:	6119      	str	r1, [r3, #16]
 8019c72:	f8c8 0008 	str.w	r0, [r8, #8]
 8019c76:	f8c8 200c 	str.w	r2, [r8, #12]
 8019c7a:	e57c      	b.n	8019776 <calc_line_geometry+0x4aa>
 8019c7c:	eeb1 4a46 	vneg.f32	s8, s12
 8019c80:	eef4 4ac4 	vcmpe.f32	s9, s8
 8019c84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c88:	f140 80a4 	bpl.w	8019dd4 <calc_line_geometry+0xb08>
 8019c8c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019c90:	ed5f 4a82 	vldr	s9, [pc, #-520]	@ 8019a8c <calc_line_geometry+0x7c0>
 8019c94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c98:	bf4c      	ite	mi
 8019c9a:	ee67 7ae4 	vnmulmi.f32	s15, s15, s9
 8019c9e:	ee67 7aa4 	vmulpl.f32	s15, s15, s9
 8019ca2:	e77b      	b.n	8019b9c <calc_line_geometry+0x8d0>
 8019ca4:	eeb1 6a65 	vneg.f32	s12, s11
 8019ca8:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cb0:	f140 8095 	bpl.w	8019dde <calc_line_geometry+0xb12>
 8019cb4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019cb8:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8019a8c <calc_line_geometry+0x7c0>
 8019cbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cc0:	bf4c      	ite	mi
 8019cc2:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8019cc6:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8019cca:	e507      	b.n	80196dc <calc_line_geometry+0x410>
 8019ccc:	6159      	str	r1, [r3, #20]
 8019cce:	611e      	str	r6, [r3, #16]
 8019cd0:	eeb0 0a41 	vmov.f32	s0, s2
 8019cd4:	eef0 0a61 	vmov.f32	s1, s3
 8019cd8:	2000      	movs	r0, #0
 8019cda:	f7ff fa3b 	bl	8019154 <add_last_point>
 8019cde:	4604      	mov	r4, r0
 8019ce0:	2800      	cmp	r0, #0
 8019ce2:	f47f ad53 	bne.w	801978c <calc_line_geometry+0x4c0>
 8019ce6:	4620      	mov	r0, r4
 8019ce8:	b017      	add	sp, #92	@ 0x5c
 8019cea:	ecbd 8b08 	vpop	{d8-d11}
 8019cee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019cf2:	4671      	mov	r1, lr
 8019cf4:	f8c3 e010 	str.w	lr, [r3, #16]
 8019cf8:	695a      	ldr	r2, [r3, #20]
 8019cfa:	3102      	adds	r1, #2
 8019cfc:	3201      	adds	r2, #1
 8019cfe:	615a      	str	r2, [r3, #20]
 8019d00:	6119      	str	r1, [r3, #16]
 8019d02:	e538      	b.n	8019776 <calc_line_geometry+0x4aa>
 8019d04:	6158      	str	r0, [r3, #20]
 8019d06:	611f      	str	r7, [r3, #16]
 8019d08:	eeb4 1a65 	vcmp.f32	s2, s11
 8019d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d10:	bf48      	it	mi
 8019d12:	eeb0 1a65 	vmovmi.f32	s2, s11
 8019d16:	eeb4 5a41 	vcmp.f32	s10, s2
 8019d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d1e:	eef4 1a65 	vcmp.f32	s3, s11
 8019d22:	bf48      	it	mi
 8019d24:	eeb0 1a45 	vmovmi.f32	s2, s10
 8019d28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d2c:	bf48      	it	mi
 8019d2e:	eef0 1a65 	vmovmi.f32	s3, s11
 8019d32:	eeb4 5a61 	vcmp.f32	s10, s3
 8019d36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d3a:	bf48      	it	mi
 8019d3c:	eef0 1a45 	vmovmi.f32	s3, s10
 8019d40:	eeb0 0a41 	vmov.f32	s0, s2
 8019d44:	eef0 0a61 	vmov.f32	s1, s3
 8019d48:	2080      	movs	r0, #128	@ 0x80
 8019d4a:	ed8d 1a10 	vstr	s2, [sp, #64]	@ 0x40
 8019d4e:	edcd 1a11 	vstr	s3, [sp, #68]	@ 0x44
 8019d52:	f7ff f9ff 	bl	8019154 <add_last_point>
 8019d56:	4604      	mov	r4, r0
 8019d58:	2800      	cmp	r0, #0
 8019d5a:	f43f aee0 	beq.w	8019b1e <calc_line_geometry+0x852>
 8019d5e:	e515      	b.n	801978c <calc_line_geometry+0x4c0>
 8019d60:	2101      	movs	r1, #1
 8019d62:	629a      	str	r2, [r3, #40]	@ 0x28
 8019d64:	615e      	str	r6, [r3, #20]
 8019d66:	6001      	str	r1, [r0, #0]
 8019d68:	e6ef      	b.n	8019b4a <calc_line_geometry+0x87e>
 8019d6a:	681d      	ldr	r5, [r3, #0]
 8019d6c:	428d      	cmp	r5, r1
 8019d6e:	f240 8217 	bls.w	801a1a0 <calc_line_geometry+0xed4>
 8019d72:	2682      	movs	r6, #130	@ 0x82
 8019d74:	685d      	ldr	r5, [r3, #4]
 8019d76:	615c      	str	r4, [r3, #20]
 8019d78:	546e      	strb	r6, [r5, r1]
 8019d7a:	e4d5      	b.n	8019728 <calc_line_geometry+0x45c>
 8019d7c:	2102      	movs	r1, #2
 8019d7e:	2201      	movs	r2, #1
 8019d80:	611e      	str	r6, [r3, #16]
 8019d82:	6299      	str	r1, [r3, #40]	@ 0x28
 8019d84:	602a      	str	r2, [r5, #0]
 8019d86:	e7a3      	b.n	8019cd0 <calc_line_geometry+0xa04>
 8019d88:	2002      	movs	r0, #2
 8019d8a:	2201      	movs	r2, #1
 8019d8c:	6159      	str	r1, [r3, #20]
 8019d8e:	6298      	str	r0, [r3, #40]	@ 0x28
 8019d90:	602a      	str	r2, [r5, #0]
 8019d92:	e79c      	b.n	8019cce <calc_line_geometry+0xa02>
 8019d94:	2402      	movs	r4, #2
 8019d96:	2201      	movs	r2, #1
 8019d98:	615f      	str	r7, [r3, #20]
 8019d9a:	629c      	str	r4, [r3, #40]	@ 0x28
 8019d9c:	6002      	str	r2, [r0, #0]
 8019d9e:	e7af      	b.n	8019d00 <calc_line_geometry+0xa34>
 8019da0:	2102      	movs	r1, #2
 8019da2:	2201      	movs	r2, #1
 8019da4:	6299      	str	r1, [r3, #40]	@ 0x28
 8019da6:	f8c3 e010 	str.w	lr, [r3, #16]
 8019daa:	6002      	str	r2, [r0, #0]
 8019dac:	4671      	mov	r1, lr
 8019dae:	e7a3      	b.n	8019cf8 <calc_line_geometry+0xa2c>
 8019db0:	2402      	movs	r4, #2
 8019db2:	2201      	movs	r2, #1
 8019db4:	6119      	str	r1, [r3, #16]
 8019db6:	629c      	str	r4, [r3, #40]	@ 0x28
 8019db8:	6002      	str	r2, [r0, #0]
 8019dba:	e4dc      	b.n	8019776 <calc_line_geometry+0x4aa>
 8019dbc:	2102      	movs	r1, #2
 8019dbe:	2201      	movs	r2, #1
 8019dc0:	611f      	str	r7, [r3, #16]
 8019dc2:	6299      	str	r1, [r3, #40]	@ 0x28
 8019dc4:	6032      	str	r2, [r6, #0]
 8019dc6:	e79f      	b.n	8019d08 <calc_line_geometry+0xa3c>
 8019dc8:	2102      	movs	r1, #2
 8019dca:	2201      	movs	r2, #1
 8019dcc:	6158      	str	r0, [r3, #20]
 8019dce:	6299      	str	r1, [r3, #40]	@ 0x28
 8019dd0:	6032      	str	r2, [r6, #0]
 8019dd2:	e798      	b.n	8019d06 <calc_line_geometry+0xa3a>
 8019dd4:	eddf 7ae7 	vldr	s15, [pc, #924]	@ 801a174 <calc_line_geometry+0xea8>
 8019dd8:	ee64 7a27 	vmul.f32	s15, s8, s15
 8019ddc:	e6de      	b.n	8019b9c <calc_line_geometry+0x8d0>
 8019dde:	eddf 4ae5 	vldr	s9, [pc, #916]	@ 801a174 <calc_line_geometry+0xea8>
 8019de2:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019de6:	e479      	b.n	80196dc <calc_line_geometry+0x410>
 8019de8:	eddf 6ae2 	vldr	s13, [pc, #904]	@ 801a174 <calc_line_geometry+0xea8>
 8019dec:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8019df0:	e707      	b.n	8019c02 <calc_line_geometry+0x936>
 8019df2:	611d      	str	r5, [r3, #16]
 8019df4:	e4bf      	b.n	8019776 <calc_line_geometry+0x4aa>
 8019df6:	2a00      	cmp	r2, #0
 8019df8:	d1fb      	bne.n	8019df2 <calc_line_geometry+0xb26>
 8019dfa:	689a      	ldr	r2, [r3, #8]
 8019dfc:	1c4c      	adds	r4, r1, #1
 8019dfe:	4294      	cmp	r4, r2
 8019e00:	f080 81c7 	bcs.w	801a192 <calc_line_geometry+0xec6>
 8019e04:	68da      	ldr	r2, [r3, #12]
 8019e06:	611d      	str	r5, [r3, #16]
 8019e08:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019e0c:	ed81 7a00 	vstr	s14, [r1]
 8019e10:	edc1 6a01 	vstr	s13, [r1, #4]
 8019e14:	e4af      	b.n	8019776 <calc_line_geometry+0x4aa>
 8019e16:	ee28 6a09 	vmul.f32	s12, s16, s18
 8019e1a:	ee22 5a05 	vmul.f32	s10, s4, s10
 8019e1e:	ee36 5a45 	vsub.f32	s10, s12, s10
 8019e22:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8019e26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e2e:	f6ff ab0e 	blt.w	801944e <calc_line_geometry+0x182>
 8019e32:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019e36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e3a:	f63f ab08 	bhi.w	801944e <calc_line_geometry+0x182>
 8019e3e:	2a02      	cmp	r2, #2
 8019e40:	f43f ab05 	beq.w	801944e <calc_line_geometry+0x182>
 8019e44:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019e48:	2a01      	cmp	r2, #1
 8019e4a:	ee37 0a00 	vadd.f32	s0, s14, s0
 8019e4e:	f000 82f9 	beq.w	801a444 <calc_line_geometry+0x1178>
 8019e52:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019e56:	ee77 0aa0 	vadd.f32	s1, s15, s1
 8019e5a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8019e5e:	ed83 0a00 	vstr	s0, [r3]
 8019e62:	edc3 0a01 	vstr	s1, [r3, #4]
 8019e66:	f7ff baf2 	b.w	801944e <calc_line_geometry+0x182>
 8019e6a:	ee62 7a29 	vmul.f32	s15, s4, s19
 8019e6e:	ee25 6a88 	vmul.f32	s12, s11, s16
 8019e72:	ee36 6a67 	vsub.f32	s12, s12, s15
 8019e76:	eec6 7a04 	vdiv.f32	s15, s12, s8
 8019e7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e82:	f6ff aacb 	blt.w	801941c <calc_line_geometry+0x150>
 8019e86:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019e8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e8e:	f63f aac5 	bhi.w	801941c <calc_line_geometry+0x150>
 8019e92:	2a02      	cmp	r2, #2
 8019e94:	f43f aac2 	beq.w	801941c <calc_line_geometry+0x150>
 8019e98:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019e9c:	2a01      	cmp	r2, #1
 8019e9e:	ee37 7a00 	vadd.f32	s14, s14, s0
 8019ea2:	f000 8329 	beq.w	801a4f8 <calc_line_geometry+0x122c>
 8019ea6:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019eaa:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019eae:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019eb2:	4628      	mov	r0, r5
 8019eb4:	4619      	mov	r1, r3
 8019eb6:	edc4 7a01 	vstr	s15, [r4, #4]
 8019eba:	ed84 7a00 	vstr	s14, [r4]
 8019ebe:	f7ff f8c9 	bl	8019054 <points_coincide>
 8019ec2:	2800      	cmp	r0, #0
 8019ec4:	f47f aaaa 	bne.w	801941c <calc_line_geometry+0x150>
 8019ec8:	a80c      	add	r0, sp, #48	@ 0x30
 8019eca:	f7ff f8c3 	bl	8019054 <points_coincide>
 8019ece:	2800      	cmp	r0, #0
 8019ed0:	f47f aaa4 	bne.w	801941c <calc_line_geometry+0x150>
 8019ed4:	3201      	adds	r2, #1
 8019ed6:	f7ff baa1 	b.w	801941c <calc_line_geometry+0x150>
 8019eda:	ee29 7a89 	vmul.f32	s14, s19, s18
 8019ede:	ee62 7a27 	vmul.f32	s15, s4, s15
 8019ee2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019ee6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019eea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019eee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ef2:	f6ff aa7e 	blt.w	80193f2 <calc_line_geometry+0x126>
 8019ef6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019efa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019efe:	f63f aa78 	bhi.w	80193f2 <calc_line_geometry+0x126>
 8019f02:	ee62 6a87 	vmul.f32	s13, s5, s14
 8019f06:	2a01      	cmp	r2, #1
 8019f08:	ee76 6a80 	vadd.f32	s13, s13, s0
 8019f0c:	f000 834e 	beq.w	801a5ac <calc_line_geometry+0x12e0>
 8019f10:	ee63 7a07 	vmul.f32	s15, s6, s14
 8019f14:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019f18:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019f1c:	4619      	mov	r1, r3
 8019f1e:	4628      	mov	r0, r5
 8019f20:	edc4 7a01 	vstr	s15, [r4, #4]
 8019f24:	edc4 6a00 	vstr	s13, [r4]
 8019f28:	f7ff f894 	bl	8019054 <points_coincide>
 8019f2c:	2800      	cmp	r0, #0
 8019f2e:	f47f aa60 	bne.w	80193f2 <calc_line_geometry+0x126>
 8019f32:	a80c      	add	r0, sp, #48	@ 0x30
 8019f34:	f7ff f88e 	bl	8019054 <points_coincide>
 8019f38:	2800      	cmp	r0, #0
 8019f3a:	f47f aa5a 	bne.w	80193f2 <calc_line_geometry+0x126>
 8019f3e:	3201      	adds	r2, #1
 8019f40:	f7ff ba57 	b.w	80193f2 <calc_line_geometry+0x126>
 8019f44:	ee62 7a08 	vmul.f32	s15, s4, s16
 8019f48:	ee65 6aa9 	vmul.f32	s13, s11, s19
 8019f4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8019f50:	ee87 4aa3 	vdiv.f32	s8, s15, s7
 8019f54:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8019f58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f5c:	f6ff aa29 	blt.w	80193b2 <calc_line_geometry+0xe6>
 8019f60:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8019f64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f68:	f63f aa23 	bhi.w	80193b2 <calc_line_geometry+0xe6>
 8019f6c:	ee22 aa84 	vmul.f32	s20, s5, s8
 8019f70:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019f74:	ee3a aa00 	vadd.f32	s20, s20, s0
 8019f78:	ee34 4a20 	vadd.f32	s8, s8, s1
 8019f7c:	4619      	mov	r1, r3
 8019f7e:	4628      	mov	r0, r5
 8019f80:	ed8d aa12 	vstr	s20, [sp, #72]	@ 0x48
 8019f84:	ed8d 4a13 	vstr	s8, [sp, #76]	@ 0x4c
 8019f88:	f7ff f864 	bl	8019054 <points_coincide>
 8019f8c:	b938      	cbnz	r0, 8019f9e <calc_line_geometry+0xcd2>
 8019f8e:	a80c      	add	r0, sp, #48	@ 0x30
 8019f90:	f7ff f860 	bl	8019054 <points_coincide>
 8019f94:	fab0 f280 	clz	r2, r0
 8019f98:	0952      	lsrs	r2, r2, #5
 8019f9a:	f7ff ba0f 	b.w	80193bc <calc_line_geometry+0xf0>
 8019f9e:	4622      	mov	r2, r4
 8019fa0:	f7ff ba0c 	b.w	80193bc <calc_line_geometry+0xf0>
 8019fa4:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8019fa8:	ee27 2a82 	vmul.f32	s4, s15, s4
 8019fac:	ee38 2a42 	vsub.f32	s4, s16, s4
 8019fb0:	eec2 6a07 	vdiv.f32	s13, s4, s14
 8019fb4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019fb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fbc:	f6ff ac90 	blt.w	80198e0 <calc_line_geometry+0x614>
 8019fc0:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fc8:	f63f ac8a 	bhi.w	80198e0 <calc_line_geometry+0x614>
 8019fcc:	2a02      	cmp	r2, #2
 8019fce:	f43f ac87 	beq.w	80198e0 <calc_line_geometry+0x614>
 8019fd2:	ee64 7a26 	vmul.f32	s15, s8, s13
 8019fd6:	2a01      	cmp	r2, #1
 8019fd8:	ee37 0a80 	vadd.f32	s0, s15, s0
 8019fdc:	f000 833c 	beq.w	801a658 <calc_line_geometry+0x138c>
 8019fe0:	ee62 7aa6 	vmul.f32	s15, s5, s13
 8019fe4:	ee77 0aa0 	vadd.f32	s1, s15, s1
 8019fe8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8019fec:	ed83 0a00 	vstr	s0, [r3]
 8019ff0:	edc3 0a01 	vstr	s1, [r3, #4]
 8019ff4:	e474      	b.n	80198e0 <calc_line_geometry+0x614>
 8019ff6:	ee28 3a03 	vmul.f32	s6, s16, s6
 8019ffa:	ee69 7a82 	vmul.f32	s15, s19, s4
 8019ffe:	ee73 7a67 	vsub.f32	s15, s6, s15
 801a002:	ee87 6aa6 	vdiv.f32	s12, s15, s13
 801a006:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a00a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a00e:	f6ff ac4e 	blt.w	80198ae <calc_line_geometry+0x5e2>
 801a012:	eeb4 6ae3 	vcmpe.f32	s12, s7
 801a016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a01a:	f63f ac48 	bhi.w	80198ae <calc_line_geometry+0x5e2>
 801a01e:	2a02      	cmp	r2, #2
 801a020:	f43f ac45 	beq.w	80198ae <calc_line_geometry+0x5e2>
 801a024:	ee64 3a06 	vmul.f32	s7, s8, s12
 801a028:	2a01      	cmp	r2, #1
 801a02a:	ee73 3a80 	vadd.f32	s7, s7, s0
 801a02e:	f000 8373 	beq.w	801a718 <calc_line_geometry+0x144c>
 801a032:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a036:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a03a:	4620      	mov	r0, r4
 801a03c:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a040:	4619      	mov	r1, r3
 801a042:	edc4 7a01 	vstr	s15, [r4, #4]
 801a046:	edc4 3a00 	vstr	s7, [r4]
 801a04a:	f7ff f803 	bl	8019054 <points_coincide>
 801a04e:	2800      	cmp	r0, #0
 801a050:	f47f ac2d 	bne.w	80198ae <calc_line_geometry+0x5e2>
 801a054:	a808      	add	r0, sp, #32
 801a056:	f7fe fffd 	bl	8019054 <points_coincide>
 801a05a:	2800      	cmp	r0, #0
 801a05c:	f47f ac27 	bne.w	80198ae <calc_line_geometry+0x5e2>
 801a060:	3201      	adds	r2, #1
 801a062:	e424      	b.n	80198ae <calc_line_geometry+0x5e2>
 801a064:	ee29 7a8a 	vmul.f32	s14, s19, s20
 801a068:	ee67 7a82 	vmul.f32	s15, s15, s4
 801a06c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a070:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 801a074:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a07c:	f6ff ac02 	blt.w	8019884 <calc_line_geometry+0x5b8>
 801a080:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a088:	f63f abfc 	bhi.w	8019884 <calc_line_geometry+0x5b8>
 801a08c:	ee64 6a07 	vmul.f32	s13, s8, s14
 801a090:	2a01      	cmp	r2, #1
 801a092:	ee76 6a80 	vadd.f32	s13, s13, s0
 801a096:	f000 83b7 	beq.w	801a808 <calc_line_geometry+0x153c>
 801a09a:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a09e:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a0a2:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 801a0a6:	4619      	mov	r1, r3
 801a0a8:	4620      	mov	r0, r4
 801a0aa:	edc5 7a01 	vstr	s15, [r5, #4]
 801a0ae:	edc5 6a00 	vstr	s13, [r5]
 801a0b2:	f7fe ffcf 	bl	8019054 <points_coincide>
 801a0b6:	2800      	cmp	r0, #0
 801a0b8:	f47f abe4 	bne.w	8019884 <calc_line_geometry+0x5b8>
 801a0bc:	a808      	add	r0, sp, #32
 801a0be:	f7fe ffc9 	bl	8019054 <points_coincide>
 801a0c2:	2800      	cmp	r0, #0
 801a0c4:	f47f abde 	bne.w	8019884 <calc_line_geometry+0x5b8>
 801a0c8:	3201      	adds	r2, #1
 801a0ca:	f7ff bbdb 	b.w	8019884 <calc_line_geometry+0x5b8>
 801a0ce:	ee68 7a02 	vmul.f32	s15, s16, s4
 801a0d2:	ee29 6a83 	vmul.f32	s12, s19, s6
 801a0d6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801a0da:	ee87 9a87 	vdiv.f32	s18, s15, s14
 801a0de:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a0e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0e6:	f6ff abae 	blt.w	8019846 <calc_line_geometry+0x57a>
 801a0ea:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801a0ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0f2:	f63f aba8 	bhi.w	8019846 <calc_line_geometry+0x57a>
 801a0f6:	ee64 aa09 	vmul.f32	s21, s8, s18
 801a0fa:	ee22 9a89 	vmul.f32	s18, s5, s18
 801a0fe:	ee7a aa80 	vadd.f32	s21, s21, s0
 801a102:	ee39 9a20 	vadd.f32	s18, s18, s1
 801a106:	4619      	mov	r1, r3
 801a108:	4620      	mov	r0, r4
 801a10a:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 801a10e:	ed8d 9a13 	vstr	s18, [sp, #76]	@ 0x4c
 801a112:	f7fe ff9f 	bl	8019054 <points_coincide>
 801a116:	2800      	cmp	r0, #0
 801a118:	f47f ab99 	bne.w	801984e <calc_line_geometry+0x582>
 801a11c:	a808      	add	r0, sp, #32
 801a11e:	f7fe ff99 	bl	8019054 <points_coincide>
 801a122:	fab0 f280 	clz	r2, r0
 801a126:	0952      	lsrs	r2, r2, #5
 801a128:	f7ff bb91 	b.w	801984e <calc_line_geometry+0x582>
 801a12c:	eeb1 4a67 	vneg.f32	s8, s15
 801a130:	eef4 4ac4 	vcmpe.f32	s9, s8
 801a134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a138:	f53f ad58 	bmi.w	8019bec <calc_line_geometry+0x920>
 801a13c:	eddf 6a0d 	vldr	s13, [pc, #52]	@ 801a174 <calc_line_geometry+0xea8>
 801a140:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a144:	e55d      	b.n	8019c02 <calc_line_geometry+0x936>
 801a146:	68d9      	ldr	r1, [r3, #12]
 801a148:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801a14c:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 801a150:	6819      	ldr	r1, [r3, #0]
 801a152:	f8c3 e010 	str.w	lr, [r3, #16]
 801a156:	f8dd e054 	ldr.w	lr, [sp, #84]	@ 0x54
 801a15a:	42b1      	cmp	r1, r6
 801a15c:	f8c9 c000 	str.w	ip, [r9]
 801a160:	f8c9 e004 	str.w	lr, [r9, #4]
 801a164:	d808      	bhi.n	801a178 <calc_line_geometry+0xeac>
 801a166:	2102      	movs	r1, #2
 801a168:	2201      	movs	r2, #1
 801a16a:	615d      	str	r5, [r3, #20]
 801a16c:	6299      	str	r1, [r3, #40]	@ 0x28
 801a16e:	6002      	str	r2, [r0, #0]
 801a170:	e55a      	b.n	8019c28 <calc_line_geometry+0x95c>
 801a172:	bf00      	nop
 801a174:	3727c5ac 	.word	0x3727c5ac
 801a178:	3203      	adds	r2, #3
 801a17a:	6859      	ldr	r1, [r3, #4]
 801a17c:	4590      	cmp	r8, r2
 801a17e:	615d      	str	r5, [r3, #20]
 801a180:	558c      	strb	r4, [r1, r6]
 801a182:	d914      	bls.n	801a1ae <calc_line_geometry+0xee2>
 801a184:	ed89 6a02 	vstr	s12, [r9, #8]
 801a188:	611f      	str	r7, [r3, #16]
 801a18a:	edc9 7a03 	vstr	s15, [r9, #12]
 801a18e:	f7ff baf2 	b.w	8019776 <calc_line_geometry+0x4aa>
 801a192:	2102      	movs	r1, #2
 801a194:	2201      	movs	r2, #1
 801a196:	611d      	str	r5, [r3, #16]
 801a198:	6299      	str	r1, [r3, #40]	@ 0x28
 801a19a:	6002      	str	r2, [r0, #0]
 801a19c:	f7ff baeb 	b.w	8019776 <calc_line_geometry+0x4aa>
 801a1a0:	2102      	movs	r1, #2
 801a1a2:	2201      	movs	r2, #1
 801a1a4:	615c      	str	r4, [r3, #20]
 801a1a6:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1a8:	6002      	str	r2, [r0, #0]
 801a1aa:	f7ff babd 	b.w	8019728 <calc_line_geometry+0x45c>
 801a1ae:	2102      	movs	r1, #2
 801a1b0:	2201      	movs	r2, #1
 801a1b2:	611f      	str	r7, [r3, #16]
 801a1b4:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1b6:	6002      	str	r2, [r0, #0]
 801a1b8:	f7ff badd 	b.w	8019776 <calc_line_geometry+0x4aa>
 801a1bc:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a1c0:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a1c4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a1c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a1d0:	bf48      	it	mi
 801a1d2:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a1d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a1de:	bf4c      	ite	mi
 801a1e0:	eef1 4a66 	vnegmi.f32	s9, s13
 801a1e4:	eef0 4a66 	vmovpl.f32	s9, s13
 801a1e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1ec:	f100 8112 	bmi.w	801a414 <calc_line_geometry+0x1148>
 801a1f0:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1f8:	f300 80dc 	bgt.w	801a3b4 <calc_line_geometry+0x10e8>
 801a1fc:	ed5f 6a23 	vldr	s13, [pc, #-140]	@ 801a174 <calc_line_geometry+0xea8>
 801a200:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a204:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a20c:	f63f ac62 	bhi.w	8019ad4 <calc_line_geometry+0x808>
 801a210:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a214:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a218:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a21c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a220:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a224:	bf48      	it	mi
 801a226:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a22a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a22e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a232:	bf4c      	ite	mi
 801a234:	eef1 4a66 	vnegmi.f32	s9, s13
 801a238:	eef0 4a66 	vmovpl.f32	s9, s13
 801a23c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a240:	f100 834a 	bmi.w	801a8d8 <calc_line_geometry+0x160c>
 801a244:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801a248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a24c:	f300 82d0 	bgt.w	801a7f0 <calc_line_geometry+0x1524>
 801a250:	ed5f 6a38 	vldr	s13, [pc, #-224]	@ 801a174 <calc_line_geometry+0xea8>
 801a254:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a258:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a25c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a260:	f63f ac38 	bhi.w	8019ad4 <calc_line_geometry+0x808>
 801a264:	f7ff b9a9 	b.w	80195ba <calc_line_geometry+0x2ee>
 801a268:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a26c:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a270:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a278:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a27c:	bf48      	it	mi
 801a27e:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a286:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a28a:	bf4c      	ite	mi
 801a28c:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a290:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a294:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a298:	f100 80c8 	bmi.w	801a42c <calc_line_geometry+0x1160>
 801a29c:	eeb4 7ac3 	vcmpe.f32	s14, s6
 801a2a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2a4:	f300 8092 	bgt.w	801a3cc <calc_line_geometry+0x1100>
 801a2a8:	ed5f 6a4e 	vldr	s13, [pc, #-312]	@ 801a174 <calc_line_geometry+0xea8>
 801a2ac:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a2b0:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a2b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2b8:	f63f ab6b 	bhi.w	8019992 <calc_line_geometry+0x6c6>
 801a2bc:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a2c0:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a2c4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a2c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a2d0:	bf48      	it	mi
 801a2d2:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a2d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a2de:	bf4c      	ite	mi
 801a2e0:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a2e4:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a2e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2ec:	f100 8312 	bmi.w	801a914 <calc_line_geometry+0x1648>
 801a2f0:	eef4 7ac3 	vcmpe.f32	s15, s6
 801a2f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2f8:	f300 82e2 	bgt.w	801a8c0 <calc_line_geometry+0x15f4>
 801a2fc:	ed5f 6a63 	vldr	s13, [pc, #-396]	@ 801a174 <calc_line_geometry+0xea8>
 801a300:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a304:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a30c:	f63f ab41 	bhi.w	8019992 <calc_line_geometry+0x6c6>
 801a310:	f7ff b93a 	b.w	8019588 <calc_line_geometry+0x2bc>
 801a314:	ee7a 6ac7 	vsub.f32	s13, s21, s14
 801a318:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a31c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a320:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a324:	bf48      	it	mi
 801a326:	eef1 6a66 	vnegmi.f32	s13, s13
 801a32a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a32e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a332:	bf4c      	ite	mi
 801a334:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a338:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a33c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a340:	d45c      	bmi.n	801a3fc <calc_line_geometry+0x1130>
 801a342:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a34a:	dc4b      	bgt.n	801a3e4 <calc_line_geometry+0x1118>
 801a34c:	ed5f aa77 	vldr	s21, [pc, #-476]	@ 801a174 <calc_line_geometry+0xea8>
 801a350:	ee67 aa2a 	vmul.f32	s21, s14, s21
 801a354:	eef4 6aea 	vcmpe.f32	s13, s21
 801a358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a35c:	f63f ab7b 	bhi.w	8019a56 <calc_line_geometry+0x78a>
 801a360:	ee78 6a67 	vsub.f32	s13, s16, s15
 801a364:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a368:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a36c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a370:	bf48      	it	mi
 801a372:	eef1 6a66 	vnegmi.f32	s13, s13
 801a376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a37a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a37e:	bf4c      	ite	mi
 801a380:	eeb1 6a48 	vnegmi.f32	s12, s16
 801a384:	eeb0 6a48 	vmovpl.f32	s12, s16
 801a388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a38c:	f100 82b0 	bmi.w	801a8f0 <calc_line_geometry+0x1624>
 801a390:	eef4 7ac6 	vcmpe.f32	s15, s12
 801a394:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a398:	f300 821e 	bgt.w	801a7d8 <calc_line_geometry+0x150c>
 801a39c:	ed1f 8a8b 	vldr	s16, [pc, #-556]	@ 801a174 <calc_line_geometry+0xea8>
 801a3a0:	ee27 8a88 	vmul.f32	s16, s15, s16
 801a3a4:	eef4 6ac8 	vcmpe.f32	s13, s16
 801a3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3ac:	f63f ab53 	bhi.w	8019a56 <calc_line_geometry+0x78a>
 801a3b0:	f7ff b8d5 	b.w	801955e <calc_line_geometry+0x292>
 801a3b4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a3b8:	ed5f 4a92 	vldr	s9, [pc, #-584]	@ 801a174 <calc_line_geometry+0xea8>
 801a3bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3c0:	bf4c      	ite	mi
 801a3c2:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a3c6:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a3ca:	e71b      	b.n	801a204 <calc_line_geometry+0xf38>
 801a3cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a3d0:	ed1f 3a98 	vldr	s6, [pc, #-608]	@ 801a174 <calc_line_geometry+0xea8>
 801a3d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3d8:	bf4c      	ite	mi
 801a3da:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a3de:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a3e2:	e765      	b.n	801a2b0 <calc_line_geometry+0xfe4>
 801a3e4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a3e8:	ed1f 6a9e 	vldr	s12, [pc, #-632]	@ 801a174 <calc_line_geometry+0xea8>
 801a3ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3f0:	bf4c      	ite	mi
 801a3f2:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a3f6:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a3fa:	e7ab      	b.n	801a354 <calc_line_geometry+0x1088>
 801a3fc:	eef1 3a47 	vneg.f32	s7, s14
 801a400:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a408:	dcec      	bgt.n	801a3e4 <calc_line_geometry+0x1118>
 801a40a:	ed5f aaa6 	vldr	s21, [pc, #-664]	@ 801a174 <calc_line_geometry+0xea8>
 801a40e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a412:	e79f      	b.n	801a354 <calc_line_geometry+0x1088>
 801a414:	eeb1 4a67 	vneg.f32	s8, s15
 801a418:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a41c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a420:	dcc8      	bgt.n	801a3b4 <calc_line_geometry+0x10e8>
 801a422:	ed5f 6aac 	vldr	s13, [pc, #-688]	@ 801a174 <calc_line_geometry+0xea8>
 801a426:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a42a:	e6eb      	b.n	801a204 <calc_line_geometry+0xf38>
 801a42c:	eeb1 8a47 	vneg.f32	s16, s14
 801a430:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a438:	dcc8      	bgt.n	801a3cc <calc_line_geometry+0x1100>
 801a43a:	ed5f 6ab2 	vldr	s13, [pc, #-712]	@ 801a174 <calc_line_geometry+0xea8>
 801a43e:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a442:	e735      	b.n	801a2b0 <calc_line_geometry+0xfe4>
 801a444:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 801a448:	ee77 6a40 	vsub.f32	s13, s14, s0
 801a44c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a454:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a458:	bf48      	it	mi
 801a45a:	eef1 6a66 	vnegmi.f32	s13, s13
 801a45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a462:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a466:	bf4c      	ite	mi
 801a468:	eeb1 6a47 	vnegmi.f32	s12, s14
 801a46c:	eeb0 6a47 	vmovpl.f32	s12, s14
 801a470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a474:	f100 82ba 	bmi.w	801a9ec <calc_line_geometry+0x1720>
 801a478:	eeb4 0ac6 	vcmpe.f32	s0, s12
 801a47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a480:	f300 826c 	bgt.w	801a95c <calc_line_geometry+0x1690>
 801a484:	ed1f 7ac5 	vldr	s14, [pc, #-788]	@ 801a174 <calc_line_geometry+0xea8>
 801a488:	ee20 7a07 	vmul.f32	s14, s0, s14
 801a48c:	eef4 6ac7 	vcmpe.f32	s13, s14
 801a490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a494:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a498:	f63f acdd 	bhi.w	8019e56 <calc_line_geometry+0xb8a>
 801a49c:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a4a0:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a4a4:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a4a8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a4ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4b0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a4b4:	bf48      	it	mi
 801a4b6:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a4ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4be:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a4c2:	bf4c      	ite	mi
 801a4c4:	eef1 5a47 	vnegmi.f32	s11, s14
 801a4c8:	eef0 5a47 	vmovpl.f32	s11, s14
 801a4cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4d0:	f100 82e3 	bmi.w	801aa9a <calc_line_geometry+0x17ce>
 801a4d4:	eef4 6ae5 	vcmpe.f32	s13, s11
 801a4d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4dc:	f300 82e5 	bgt.w	801aaaa <calc_line_geometry+0x17de>
 801a4e0:	ed1f 7adc 	vldr	s14, [pc, #-880]	@ 801a174 <calc_line_geometry+0xea8>
 801a4e4:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a4e8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a4ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4f0:	f63f acb1 	bhi.w	8019e56 <calc_line_geometry+0xb8a>
 801a4f4:	f7fe bfab 	b.w	801944e <calc_line_geometry+0x182>
 801a4f8:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a4fc:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a500:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a508:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a50c:	bf48      	it	mi
 801a50e:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a516:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a51a:	bf4c      	ite	mi
 801a51c:	eef1 5a66 	vnegmi.f32	s11, s13
 801a520:	eef0 5a66 	vmovpl.f32	s11, s13
 801a524:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a528:	f100 8254 	bmi.w	801a9d4 <calc_line_geometry+0x1708>
 801a52c:	eeb4 7ae5 	vcmpe.f32	s14, s11
 801a530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a534:	f300 8206 	bgt.w	801a944 <calc_line_geometry+0x1678>
 801a538:	eddf 6af4 	vldr	s13, [pc, #976]	@ 801a90c <calc_line_geometry+0x1640>
 801a53c:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a540:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a548:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a54c:	f63f acad 	bhi.w	8019eaa <calc_line_geometry+0xbde>
 801a550:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a554:	ee37 6aa0 	vadd.f32	s12, s15, s1
 801a558:	ee76 5ac6 	vsub.f32	s11, s13, s12
 801a55c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a564:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a568:	bf48      	it	mi
 801a56a:	eef1 5a65 	vnegmi.f32	s11, s11
 801a56e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a572:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a576:	bf4c      	ite	mi
 801a578:	eeb1 4a66 	vnegmi.f32	s8, s13
 801a57c:	eeb0 4a66 	vmovpl.f32	s8, s13
 801a580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a584:	f100 8276 	bmi.w	801aa74 <calc_line_geometry+0x17a8>
 801a588:	eeb4 4ac6 	vcmpe.f32	s8, s12
 801a58c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a590:	f100 8278 	bmi.w	801aa84 <calc_line_geometry+0x17b8>
 801a594:	eddf 6add 	vldr	s13, [pc, #884]	@ 801a90c <calc_line_geometry+0x1640>
 801a598:	ee66 6a26 	vmul.f32	s13, s12, s13
 801a59c:	eef4 5ae6 	vcmpe.f32	s11, s13
 801a5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5a4:	f63f ac81 	bhi.w	8019eaa <calc_line_geometry+0xbde>
 801a5a8:	f7fe bf38 	b.w	801941c <calc_line_geometry+0x150>
 801a5ac:	ee7a 7a66 	vsub.f32	s15, s20, s13
 801a5b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a5b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5b8:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a5bc:	bf48      	it	mi
 801a5be:	eef1 7a67 	vnegmi.f32	s15, s15
 801a5c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5c6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a5ca:	bf4c      	ite	mi
 801a5cc:	eeb1 6a4a 	vnegmi.f32	s12, s20
 801a5d0:	eeb0 6a4a 	vmovpl.f32	s12, s20
 801a5d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5d8:	f100 822c 	bmi.w	801aa34 <calc_line_geometry+0x1768>
 801a5dc:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a5e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5e4:	f300 81a2 	bgt.w	801a92c <calc_line_geometry+0x1660>
 801a5e8:	ed9f aac8 	vldr	s20, [pc, #800]	@ 801a90c <calc_line_geometry+0x1640>
 801a5ec:	ee26 aa8a 	vmul.f32	s20, s13, s20
 801a5f0:	eef4 7aca 	vcmpe.f32	s15, s20
 801a5f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5f8:	ee63 7a07 	vmul.f32	s15, s6, s14
 801a5fc:	f63f ac8a 	bhi.w	8019f14 <calc_line_geometry+0xc48>
 801a600:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a604:	ee34 6a47 	vsub.f32	s12, s8, s14
 801a608:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a60c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a610:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801a614:	bf48      	it	mi
 801a616:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a61a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a61e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a622:	bf4c      	ite	mi
 801a624:	eef1 3a44 	vnegmi.f32	s7, s8
 801a628:	eef0 3a44 	vmovpl.f32	s7, s8
 801a62c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a630:	f100 820d 	bmi.w	801aa4e <calc_line_geometry+0x1782>
 801a634:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801a638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a63c:	f300 820f 	bgt.w	801aa5e <calc_line_geometry+0x1792>
 801a640:	ed9f 4ab2 	vldr	s8, [pc, #712]	@ 801a90c <calc_line_geometry+0x1640>
 801a644:	ee27 4a04 	vmul.f32	s8, s14, s8
 801a648:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801a64c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a650:	f63f ac60 	bhi.w	8019f14 <calc_line_geometry+0xc48>
 801a654:	f7fe becd 	b.w	80193f2 <calc_line_geometry+0x126>
 801a658:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a65c:	ee37 7ac0 	vsub.f32	s14, s15, s0
 801a660:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a664:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a668:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a66c:	bf48      	it	mi
 801a66e:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a676:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a67a:	bf4c      	ite	mi
 801a67c:	eeb1 6a67 	vnegmi.f32	s12, s15
 801a680:	eeb0 6a67 	vmovpl.f32	s12, s15
 801a684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a688:	f100 81bc 	bmi.w	801aa04 <calc_line_geometry+0x1738>
 801a68c:	eeb4 6ac0 	vcmpe.f32	s12, s0
 801a690:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a694:	f100 816e 	bmi.w	801a974 <calc_line_geometry+0x16a8>
 801a698:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 801a90c <calc_line_geometry+0x1640>
 801a69c:	ee60 7a27 	vmul.f32	s15, s0, s15
 801a6a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a6a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6a8:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a6ac:	f63f ac9a 	bhi.w	8019fe4 <calc_line_geometry+0xd18>
 801a6b0:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a6b4:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a6b8:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a6bc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a6c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6c4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a6c8:	bf48      	it	mi
 801a6ca:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a6ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6d2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a6d6:	bf4c      	ite	mi
 801a6d8:	eef1 4a47 	vnegmi.f32	s9, s14
 801a6dc:	eef0 4a47 	vmovpl.f32	s9, s14
 801a6e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6e4:	f100 81f7 	bmi.w	801aad6 <calc_line_geometry+0x180a>
 801a6e8:	eef4 4ae6 	vcmpe.f32	s9, s13
 801a6ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6f0:	f140 81f9 	bpl.w	801aae6 <calc_line_geometry+0x181a>
 801a6f4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a6f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6fc:	eddf 6a83 	vldr	s13, [pc, #524]	@ 801a90c <calc_line_geometry+0x1640>
 801a700:	f100 8202 	bmi.w	801ab08 <calc_line_geometry+0x183c>
 801a704:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a708:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a70c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a710:	f63f ac68 	bhi.w	8019fe4 <calc_line_geometry+0xd18>
 801a714:	f7ff b8e4 	b.w	80198e0 <calc_line_geometry+0x614>
 801a718:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a71c:	ee37 7ae3 	vsub.f32	s14, s15, s7
 801a720:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a728:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a72c:	bf48      	it	mi
 801a72e:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a736:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801a73a:	bf4c      	ite	mi
 801a73c:	eef1 6a67 	vnegmi.f32	s13, s15
 801a740:	eef0 6a67 	vmovpl.f32	s13, s15
 801a744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a748:	f100 8168 	bmi.w	801aa1c <calc_line_geometry+0x1750>
 801a74c:	eef4 6ae3 	vcmpe.f32	s13, s7
 801a750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a754:	f100 811a 	bmi.w	801a98c <calc_line_geometry+0x16c0>
 801a758:	eddf 7a6c 	vldr	s15, [pc, #432]	@ 801a90c <calc_line_geometry+0x1640>
 801a75c:	ee63 7aa7 	vmul.f32	s15, s7, s15
 801a760:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a768:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a76c:	f63f ac63 	bhi.w	801a036 <calc_line_geometry+0xd6a>
 801a770:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a774:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a778:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a77c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a784:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a788:	bf48      	it	mi
 801a78a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a78e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a792:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a796:	bf4c      	ite	mi
 801a798:	eeb1 3a47 	vnegmi.f32	s6, s14
 801a79c:	eeb0 3a47 	vmovpl.f32	s6, s14
 801a7a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7a4:	f100 818c 	bmi.w	801aac0 <calc_line_geometry+0x17f4>
 801a7a8:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801a7ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7b0:	f140 818e 	bpl.w	801aad0 <calc_line_geometry+0x1804>
 801a7b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a7b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7bc:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801a90c <calc_line_geometry+0x1640>
 801a7c0:	f100 81a5 	bmi.w	801ab0e <calc_line_geometry+0x1842>
 801a7c4:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a7c8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a7cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7d0:	f63f ac31 	bhi.w	801a036 <calc_line_geometry+0xd6a>
 801a7d4:	f7ff b86b 	b.w	80198ae <calc_line_geometry+0x5e2>
 801a7d8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a7dc:	ed9f 6a4b 	vldr	s12, [pc, #300]	@ 801a90c <calc_line_geometry+0x1640>
 801a7e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7e4:	bf4c      	ite	mi
 801a7e6:	ee28 8a46 	vnmulmi.f32	s16, s16, s12
 801a7ea:	ee28 8a06 	vmulpl.f32	s16, s16, s12
 801a7ee:	e5d9      	b.n	801a3a4 <calc_line_geometry+0x10d8>
 801a7f0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a7f4:	eddf 4a45 	vldr	s9, [pc, #276]	@ 801a90c <calc_line_geometry+0x1640>
 801a7f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7fc:	bf4c      	ite	mi
 801a7fe:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a802:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a806:	e527      	b.n	801a258 <calc_line_geometry+0xf8c>
 801a808:	ee7a 7ae6 	vsub.f32	s15, s21, s13
 801a80c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a814:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a818:	bf48      	it	mi
 801a81a:	eef1 7a67 	vnegmi.f32	s15, s15
 801a81e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a822:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a826:	bf4c      	ite	mi
 801a828:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a82c:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a834:	f100 80c2 	bmi.w	801a9bc <calc_line_geometry+0x16f0>
 801a838:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a83c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a840:	f100 80b0 	bmi.w	801a9a4 <calc_line_geometry+0x16d8>
 801a844:	eddf aa31 	vldr	s21, [pc, #196]	@ 801a90c <calc_line_geometry+0x1640>
 801a848:	ee66 aaaa 	vmul.f32	s21, s13, s21
 801a84c:	eef4 7aea 	vcmpe.f32	s15, s21
 801a850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a854:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a858:	f63f ac21 	bhi.w	801a09e <calc_line_geometry+0xdd2>
 801a85c:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a860:	ee39 6a47 	vsub.f32	s12, s18, s14
 801a864:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a86c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a870:	bf48      	it	mi
 801a872:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a87a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a87e:	bf4c      	ite	mi
 801a880:	eef1 3a49 	vnegmi.f32	s7, s18
 801a884:	eef0 3a49 	vmovpl.f32	s7, s18
 801a888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a88c:	f100 812e 	bmi.w	801aaec <calc_line_geometry+0x1820>
 801a890:	eef4 3ac7 	vcmpe.f32	s7, s14
 801a894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a898:	f140 8130 	bpl.w	801aafc <calc_line_geometry+0x1830>
 801a89c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a8a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8a4:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 801a90c <calc_line_geometry+0x1640>
 801a8a8:	f100 812b 	bmi.w	801ab02 <calc_line_geometry+0x1836>
 801a8ac:	ee27 9a09 	vmul.f32	s18, s14, s18
 801a8b0:	eeb4 6ac9 	vcmpe.f32	s12, s18
 801a8b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8b8:	f63f abf1 	bhi.w	801a09e <calc_line_geometry+0xdd2>
 801a8bc:	f7fe bfe2 	b.w	8019884 <calc_line_geometry+0x5b8>
 801a8c0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a8c4:	ed9f 3a11 	vldr	s6, [pc, #68]	@ 801a90c <calc_line_geometry+0x1640>
 801a8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8cc:	bf4c      	ite	mi
 801a8ce:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a8d2:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a8d6:	e515      	b.n	801a304 <calc_line_geometry+0x1038>
 801a8d8:	eeb1 4a47 	vneg.f32	s8, s14
 801a8dc:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a8e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8e4:	dc84      	bgt.n	801a7f0 <calc_line_geometry+0x1524>
 801a8e6:	eddf 6a09 	vldr	s13, [pc, #36]	@ 801a90c <calc_line_geometry+0x1640>
 801a8ea:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a8ee:	e4b3      	b.n	801a258 <calc_line_geometry+0xf8c>
 801a8f0:	eef1 3a67 	vneg.f32	s7, s15
 801a8f4:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a8f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8fc:	f73f af6c 	bgt.w	801a7d8 <calc_line_geometry+0x150c>
 801a900:	ed9f 8a02 	vldr	s16, [pc, #8]	@ 801a90c <calc_line_geometry+0x1640>
 801a904:	ee23 8a88 	vmul.f32	s16, s7, s16
 801a908:	e54c      	b.n	801a3a4 <calc_line_geometry+0x10d8>
 801a90a:	bf00      	nop
 801a90c:	3727c5ac 	.word	0x3727c5ac
 801a910:	3727c5ac 	.word	0x3727c5ac
 801a914:	eeb1 8a67 	vneg.f32	s16, s15
 801a918:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a91c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a920:	dcce      	bgt.n	801a8c0 <calc_line_geometry+0x15f4>
 801a922:	ed5f 6a05 	vldr	s13, [pc, #-20]	@ 801a910 <calc_line_geometry+0x1644>
 801a926:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a92a:	e4eb      	b.n	801a304 <calc_line_geometry+0x1038>
 801a92c:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a930:	ed1f 6a09 	vldr	s12, [pc, #-36]	@ 801a910 <calc_line_geometry+0x1644>
 801a934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a938:	bf4c      	ite	mi
 801a93a:	ee2a aa46 	vnmulmi.f32	s20, s20, s12
 801a93e:	ee2a aa06 	vmulpl.f32	s20, s20, s12
 801a942:	e655      	b.n	801a5f0 <calc_line_geometry+0x1324>
 801a944:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a948:	ed5f 5a0f 	vldr	s11, [pc, #-60]	@ 801a910 <calc_line_geometry+0x1644>
 801a94c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a950:	bf4c      	ite	mi
 801a952:	ee66 6ae5 	vnmulmi.f32	s13, s13, s11
 801a956:	ee66 6aa5 	vmulpl.f32	s13, s13, s11
 801a95a:	e5f1      	b.n	801a540 <calc_line_geometry+0x1274>
 801a95c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a960:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 801a910 <calc_line_geometry+0x1644>
 801a964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a968:	bf4c      	ite	mi
 801a96a:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801a96e:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 801a972:	e58b      	b.n	801a48c <calc_line_geometry+0x11c0>
 801a974:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a978:	ed1f 6a1b 	vldr	s12, [pc, #-108]	@ 801a910 <calc_line_geometry+0x1644>
 801a97c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a980:	bf4c      	ite	mi
 801a982:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 801a986:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 801a98a:	e689      	b.n	801a6a0 <calc_line_geometry+0x13d4>
 801a98c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a990:	ed5f 6a21 	vldr	s13, [pc, #-132]	@ 801a910 <calc_line_geometry+0x1644>
 801a994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a998:	bf4c      	ite	mi
 801a99a:	ee67 7ae6 	vnmulmi.f32	s15, s15, s13
 801a99e:	ee67 7aa6 	vmulpl.f32	s15, s15, s13
 801a9a2:	e6dd      	b.n	801a760 <calc_line_geometry+0x1494>
 801a9a4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a9a8:	ed1f 6a27 	vldr	s12, [pc, #-156]	@ 801a910 <calc_line_geometry+0x1644>
 801a9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9b0:	bf4c      	ite	mi
 801a9b2:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a9b6:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a9ba:	e747      	b.n	801a84c <calc_line_geometry+0x1580>
 801a9bc:	eef1 3a66 	vneg.f32	s7, s13
 801a9c0:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9c8:	dcec      	bgt.n	801a9a4 <calc_line_geometry+0x16d8>
 801a9ca:	ed5f aa2f 	vldr	s21, [pc, #-188]	@ 801a910 <calc_line_geometry+0x1644>
 801a9ce:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a9d2:	e73b      	b.n	801a84c <calc_line_geometry+0x1580>
 801a9d4:	eeb1 4a47 	vneg.f32	s8, s14
 801a9d8:	eeb4 4ae5 	vcmpe.f32	s8, s11
 801a9dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9e0:	dcb0      	bgt.n	801a944 <calc_line_geometry+0x1678>
 801a9e2:	ed5f 6a35 	vldr	s13, [pc, #-212]	@ 801a910 <calc_line_geometry+0x1644>
 801a9e6:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a9ea:	e5a9      	b.n	801a540 <calc_line_geometry+0x1274>
 801a9ec:	eef1 5a40 	vneg.f32	s11, s0
 801a9f0:	eef4 5ac6 	vcmpe.f32	s11, s12
 801a9f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9f8:	dcb0      	bgt.n	801a95c <calc_line_geometry+0x1690>
 801a9fa:	ed1f 7a3b 	vldr	s14, [pc, #-236]	@ 801a910 <calc_line_geometry+0x1644>
 801a9fe:	ee25 7a87 	vmul.f32	s14, s11, s14
 801aa02:	e543      	b.n	801a48c <calc_line_geometry+0x11c0>
 801aa04:	eef1 4a40 	vneg.f32	s9, s0
 801aa08:	eef4 4ac6 	vcmpe.f32	s9, s12
 801aa0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa10:	dcb0      	bgt.n	801a974 <calc_line_geometry+0x16a8>
 801aa12:	ed5f 7a41 	vldr	s15, [pc, #-260]	@ 801a910 <calc_line_geometry+0x1644>
 801aa16:	ee64 7aa7 	vmul.f32	s15, s9, s15
 801aa1a:	e641      	b.n	801a6a0 <calc_line_geometry+0x13d4>
 801aa1c:	eeb1 3a63 	vneg.f32	s6, s7
 801aa20:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801aa24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa28:	dcb0      	bgt.n	801a98c <calc_line_geometry+0x16c0>
 801aa2a:	ed5f 7a47 	vldr	s15, [pc, #-284]	@ 801a910 <calc_line_geometry+0x1644>
 801aa2e:	ee63 7a27 	vmul.f32	s15, s6, s15
 801aa32:	e695      	b.n	801a760 <calc_line_geometry+0x1494>
 801aa34:	eef1 3a66 	vneg.f32	s7, s13
 801aa38:	eef4 3ac6 	vcmpe.f32	s7, s12
 801aa3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa40:	f73f af74 	bgt.w	801a92c <calc_line_geometry+0x1660>
 801aa44:	ed1f aa4e 	vldr	s20, [pc, #-312]	@ 801a910 <calc_line_geometry+0x1644>
 801aa48:	ee23 aa8a 	vmul.f32	s20, s7, s20
 801aa4c:	e5d0      	b.n	801a5f0 <calc_line_geometry+0x1324>
 801aa4e:	eeb1 7a47 	vneg.f32	s14, s14
 801aa52:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801aa56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa5a:	f77f adf1 	ble.w	801a640 <calc_line_geometry+0x1374>
 801aa5e:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801aa62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa66:	ed1f 7a56 	vldr	s14, [pc, #-344]	@ 801a910 <calc_line_geometry+0x1644>
 801aa6a:	f57f adeb 	bpl.w	801a644 <calc_line_geometry+0x1378>
 801aa6e:	ee24 4a47 	vnmul.f32	s8, s8, s14
 801aa72:	e5e9      	b.n	801a648 <calc_line_geometry+0x137c>
 801aa74:	eeb1 6a46 	vneg.f32	s12, s12
 801aa78:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801aa7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa80:	f77f ad88 	ble.w	801a594 <calc_line_geometry+0x12c8>
 801aa84:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aa88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa8c:	ed1f 6a60 	vldr	s12, [pc, #-384]	@ 801a910 <calc_line_geometry+0x1644>
 801aa90:	f57f ad82 	bpl.w	801a598 <calc_line_geometry+0x12cc>
 801aa94:	ee66 6ac6 	vnmul.f32	s13, s13, s12
 801aa98:	e580      	b.n	801a59c <calc_line_geometry+0x12d0>
 801aa9a:	eef1 6a66 	vneg.f32	s13, s13
 801aa9e:	eef4 6ae5 	vcmpe.f32	s13, s11
 801aaa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaa6:	f77f ad1b 	ble.w	801a4e0 <calc_line_geometry+0x1214>
 801aaaa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801aaae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aab2:	ed5f 6a69 	vldr	s13, [pc, #-420]	@ 801a910 <calc_line_geometry+0x1644>
 801aab6:	f57f ad15 	bpl.w	801a4e4 <calc_line_geometry+0x1218>
 801aaba:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801aabe:	e513      	b.n	801a4e8 <calc_line_geometry+0x121c>
 801aac0:	eef1 6a66 	vneg.f32	s13, s13
 801aac4:	eef4 6ac3 	vcmpe.f32	s13, s6
 801aac8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aacc:	f73f ae72 	bgt.w	801a7b4 <calc_line_geometry+0x14e8>
 801aad0:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 801a910 <calc_line_geometry+0x1644>
 801aad4:	e676      	b.n	801a7c4 <calc_line_geometry+0x14f8>
 801aad6:	eef1 6a66 	vneg.f32	s13, s13
 801aada:	eef4 6ae4 	vcmpe.f32	s13, s9
 801aade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aae2:	f73f ae07 	bgt.w	801a6f4 <calc_line_geometry+0x1428>
 801aae6:	ed1f 7a76 	vldr	s14, [pc, #-472]	@ 801a910 <calc_line_geometry+0x1644>
 801aaea:	e60b      	b.n	801a704 <calc_line_geometry+0x1438>
 801aaec:	eeb1 7a47 	vneg.f32	s14, s14
 801aaf0:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801aaf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaf8:	f73f aed0 	bgt.w	801a89c <calc_line_geometry+0x15d0>
 801aafc:	ed1f 9a7c 	vldr	s18, [pc, #-496]	@ 801a910 <calc_line_geometry+0x1644>
 801ab00:	e6d4      	b.n	801a8ac <calc_line_geometry+0x15e0>
 801ab02:	ee29 9a47 	vnmul.f32	s18, s18, s14
 801ab06:	e6d3      	b.n	801a8b0 <calc_line_geometry+0x15e4>
 801ab08:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab0c:	e5fc      	b.n	801a708 <calc_line_geometry+0x143c>
 801ab0e:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab12:	e659      	b.n	801a7c8 <calc_line_geometry+0x14fc>

0801ab14 <cubic_decasteljau>:
 801ab14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab18:	ed2d 8b0a 	vpush	{d8-d12}
 801ab1c:	4fd5      	ldr	r7, [pc, #852]	@ (801ae74 <cubic_decasteljau+0x360>)
 801ab1e:	4bd6      	ldr	r3, [pc, #856]	@ (801ae78 <cubic_decasteljau+0x364>)
 801ab20:	eeb0 8a40 	vmov.f32	s16, s0
 801ab24:	eef0 8a60 	vmov.f32	s17, s1
 801ab28:	eef0 ba43 	vmov.f32	s23, s6
 801ab2c:	eeb0 ca63 	vmov.f32	s24, s7
 801ab30:	eeb0 aa41 	vmov.f32	s20, s2
 801ab34:	eeb0 9a61 	vmov.f32	s18, s3
 801ab38:	eef0 aa42 	vmov.f32	s21, s4
 801ab3c:	eef0 9a62 	vmov.f32	s19, s5
 801ab40:	edd7 6a00 	vldr	s13, [r7]
 801ab44:	ed93 6a00 	vldr	s12, [r3]
 801ab48:	2401      	movs	r4, #1
 801ab4a:	ed9f bacc 	vldr	s22, [pc, #816]	@ 801ae7c <cubic_decasteljau+0x368>
 801ab4e:	4dcc      	ldr	r5, [pc, #816]	@ (801ae80 <cubic_decasteljau+0x36c>)
 801ab50:	f8df a334 	ldr.w	sl, [pc, #820]	@ 801ae88 <cubic_decasteljau+0x374>
 801ab54:	b089      	sub	sp, #36	@ 0x24
 801ab56:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801ab5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab5e:	dc14      	bgt.n	801ab8a <cubic_decasteljau+0x76>
 801ab60:	eef4 8ae6 	vcmpe.f32	s17, s13
 801ab64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab68:	dc0f      	bgt.n	801ab8a <cubic_decasteljau+0x76>
 801ab6a:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801ab6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab72:	d40a      	bmi.n	801ab8a <cubic_decasteljau+0x76>
 801ab74:	eef4 8ac6 	vcmpe.f32	s17, s12
 801ab78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab7c:	d405      	bmi.n	801ab8a <cubic_decasteljau+0x76>
 801ab7e:	eeb4 aae6 	vcmpe.f32	s20, s13
 801ab82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab86:	f340 8129 	ble.w	801addc <cubic_decasteljau+0x2c8>
 801ab8a:	2300      	movs	r3, #0
 801ab8c:	ee76 7a0b 	vadd.f32	s15, s12, s22
 801ab90:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801ab94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab98:	ee36 7acb 	vsub.f32	s14, s13, s22
 801ab9c:	d50f      	bpl.n	801abbe <cubic_decasteljau+0xaa>
 801ab9e:	eeb4 aae7 	vcmpe.f32	s20, s15
 801aba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aba6:	d50a      	bpl.n	801abbe <cubic_decasteljau+0xaa>
 801aba8:	eef4 aae7 	vcmpe.f32	s21, s15
 801abac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abb0:	d505      	bpl.n	801abbe <cubic_decasteljau+0xaa>
 801abb2:	eef4 bae7 	vcmpe.f32	s23, s15
 801abb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abba:	f100 80a7 	bmi.w	801ad0c <cubic_decasteljau+0x1f8>
 801abbe:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801abc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abc6:	dd0f      	ble.n	801abe8 <cubic_decasteljau+0xd4>
 801abc8:	eeb4 aac7 	vcmpe.f32	s20, s14
 801abcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abd0:	dd0a      	ble.n	801abe8 <cubic_decasteljau+0xd4>
 801abd2:	eef4 aac7 	vcmpe.f32	s21, s14
 801abd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abda:	dd05      	ble.n	801abe8 <cubic_decasteljau+0xd4>
 801abdc:	eef4 bac7 	vcmpe.f32	s23, s14
 801abe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abe4:	f300 8092 	bgt.w	801ad0c <cubic_decasteljau+0x1f8>
 801abe8:	eef4 8ae7 	vcmpe.f32	s17, s15
 801abec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abf0:	d50e      	bpl.n	801ac10 <cubic_decasteljau+0xfc>
 801abf2:	eeb4 9ae7 	vcmpe.f32	s18, s15
 801abf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abfa:	d509      	bpl.n	801ac10 <cubic_decasteljau+0xfc>
 801abfc:	eef4 9ae7 	vcmpe.f32	s19, s15
 801ac00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac04:	d504      	bpl.n	801ac10 <cubic_decasteljau+0xfc>
 801ac06:	eeb4 cae7 	vcmpe.f32	s24, s15
 801ac0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac0e:	d47d      	bmi.n	801ad0c <cubic_decasteljau+0x1f8>
 801ac10:	eef4 8ac7 	vcmpe.f32	s17, s14
 801ac14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac18:	dd0e      	ble.n	801ac38 <cubic_decasteljau+0x124>
 801ac1a:	eeb4 9ac7 	vcmpe.f32	s18, s14
 801ac1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac22:	dd09      	ble.n	801ac38 <cubic_decasteljau+0x124>
 801ac24:	eef4 9ac7 	vcmpe.f32	s19, s14
 801ac28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac2c:	dd04      	ble.n	801ac38 <cubic_decasteljau+0x124>
 801ac2e:	eeb4 cac7 	vcmpe.f32	s24, s14
 801ac32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac36:	dc69      	bgt.n	801ad0c <cubic_decasteljau+0x1f8>
 801ac38:	682a      	ldr	r2, [r5, #0]
 801ac3a:	2b00      	cmp	r3, #0
 801ac3c:	d077      	beq.n	801ad2e <cubic_decasteljau+0x21a>
 801ac3e:	f8df e24c 	ldr.w	lr, [pc, #588]	@ 801ae8c <cubic_decasteljau+0x378>
 801ac42:	4b90      	ldr	r3, [pc, #576]	@ (801ae84 <cubic_decasteljau+0x370>)
 801ac44:	f8de 6000 	ldr.w	r6, [lr]
 801ac48:	e9d3 1004 	ldrd	r1, r0, [r3, #16]
 801ac4c:	3c01      	subs	r4, #1
 801ac4e:	f100 0901 	add.w	r9, r0, #1
 801ac52:	f101 0806 	add.w	r8, r1, #6
 801ac56:	2e00      	cmp	r6, #0
 801ac58:	d155      	bne.n	801ad06 <cubic_decasteljau+0x1f2>
 801ac5a:	681e      	ldr	r6, [r3, #0]
 801ac5c:	4286      	cmp	r6, r0
 801ac5e:	d828      	bhi.n	801acb2 <cubic_decasteljau+0x19e>
 801ac60:	2002      	movs	r0, #2
 801ac62:	2101      	movs	r1, #1
 801ac64:	f8c3 9014 	str.w	r9, [r3, #20]
 801ac68:	6298      	str	r0, [r3, #40]	@ 0x28
 801ac6a:	f8ce 1000 	str.w	r1, [lr]
 801ac6e:	f8c3 8010 	str.w	r8, [r3, #16]
 801ac72:	b1aa      	cbz	r2, 801aca0 <cubic_decasteljau+0x18c>
 801ac74:	3a01      	subs	r2, #1
 801ac76:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801ac7a:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801ac7e:	eef0 8a4c 	vmov.f32	s17, s24
 801ac82:	eeb0 8a6b 	vmov.f32	s16, s23
 801ac86:	ed93 aa00 	vldr	s20, [r3]
 801ac8a:	ed93 9a01 	vldr	s18, [r3, #4]
 801ac8e:	edd3 aa02 	vldr	s21, [r3, #8]
 801ac92:	edd3 9a03 	vldr	s19, [r3, #12]
 801ac96:	ed93 ca05 	vldr	s24, [r3, #20]
 801ac9a:	edd3 ba04 	vldr	s23, [r3, #16]
 801ac9e:	602a      	str	r2, [r5, #0]
 801aca0:	2c00      	cmp	r4, #0
 801aca2:	f000 8094 	beq.w	801adce <cubic_decasteljau+0x2ba>
 801aca6:	4b74      	ldr	r3, [pc, #464]	@ (801ae78 <cubic_decasteljau+0x364>)
 801aca8:	edd7 6a00 	vldr	s13, [r7]
 801acac:	ed93 6a00 	vldr	s12, [r3]
 801acb0:	e751      	b.n	801ab56 <cubic_decasteljau+0x42>
 801acb2:	f04f 0b06 	mov.w	fp, #6
 801acb6:	f8c3 9014 	str.w	r9, [r3, #20]
 801acba:	e9d3 6901 	ldrd	r6, r9, [r3, #4]
 801acbe:	f806 b000 	strb.w	fp, [r6, r0]
 801acc2:	1c48      	adds	r0, r1, #1
 801acc4:	4548      	cmp	r0, r9
 801acc6:	d218      	bcs.n	801acfa <cubic_decasteljau+0x1e6>
 801acc8:	68d8      	ldr	r0, [r3, #12]
 801acca:	f101 0c03 	add.w	ip, r1, #3
 801acce:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801acd2:	45e1      	cmp	r9, ip
 801acd4:	ed80 aa00 	vstr	s20, [r0]
 801acd8:	ed80 9a01 	vstr	s18, [r0, #4]
 801acdc:	d90d      	bls.n	801acfa <cubic_decasteljau+0x1e6>
 801acde:	3105      	adds	r1, #5
 801ace0:	4589      	cmp	r9, r1
 801ace2:	edc0 aa02 	vstr	s21, [r0, #8]
 801ace6:	edc0 9a03 	vstr	s19, [r0, #12]
 801acea:	d968      	bls.n	801adbe <cubic_decasteljau+0x2aa>
 801acec:	edc0 ba04 	vstr	s23, [r0, #16]
 801acf0:	f8c3 8010 	str.w	r8, [r3, #16]
 801acf4:	ed80 ca05 	vstr	s24, [r0, #20]
 801acf8:	e7bb      	b.n	801ac72 <cubic_decasteljau+0x15e>
 801acfa:	2002      	movs	r0, #2
 801acfc:	2101      	movs	r1, #1
 801acfe:	6298      	str	r0, [r3, #40]	@ 0x28
 801ad00:	f8ce 1000 	str.w	r1, [lr]
 801ad04:	e7b3      	b.n	801ac6e <cubic_decasteljau+0x15a>
 801ad06:	f8c3 9014 	str.w	r9, [r3, #20]
 801ad0a:	e7b0      	b.n	801ac6e <cubic_decasteljau+0x15a>
 801ad0c:	eeb0 1a6b 	vmov.f32	s2, s23
 801ad10:	eef0 1a4c 	vmov.f32	s3, s24
 801ad14:	eeb0 0a48 	vmov.f32	s0, s16
 801ad18:	eef0 0a68 	vmov.f32	s1, s17
 801ad1c:	f7fe fad6 	bl	80192cc <calc_line_geometry>
 801ad20:	3c01      	subs	r4, #1
 801ad22:	4680      	mov	r8, r0
 801ad24:	2800      	cmp	r0, #0
 801ad26:	f040 809d 	bne.w	801ae64 <cubic_decasteljau+0x350>
 801ad2a:	682a      	ldr	r2, [r5, #0]
 801ad2c:	e7a1      	b.n	801ac72 <cubic_decasteljau+0x15e>
 801ad2e:	2a09      	cmp	r2, #9
 801ad30:	dc85      	bgt.n	801ac3e <cubic_decasteljau+0x12a>
 801ad32:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ad36:	ee3a 7a8a 	vadd.f32	s14, s21, s20
 801ad3a:	ee39 5a8c 	vadd.f32	s10, s19, s24
 801ad3e:	ee7a aaab 	vadd.f32	s21, s21, s23
 801ad42:	ee78 5a0a 	vadd.f32	s11, s16, s20
 801ad46:	ee79 9a29 	vadd.f32	s19, s18, s19
 801ad4a:	ee39 9a28 	vadd.f32	s18, s18, s17
 801ad4e:	ee2a 2aa7 	vmul.f32	s4, s21, s15
 801ad52:	ee25 aaa7 	vmul.f32	s20, s11, s15
 801ad56:	ee27 7a27 	vmul.f32	s14, s14, s15
 801ad5a:	ee25 5a27 	vmul.f32	s10, s10, s15
 801ad5e:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801ad62:	ee29 9a27 	vmul.f32	s18, s18, s15
 801ad66:	ee7a aa07 	vadd.f32	s21, s20, s14
 801ad6a:	ee79 5a85 	vadd.f32	s11, s19, s10
 801ad6e:	ee37 7a02 	vadd.f32	s14, s14, s4
 801ad72:	ee79 9a29 	vadd.f32	s19, s18, s19
 801ad76:	ee27 7a27 	vmul.f32	s14, s14, s15
 801ad7a:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801ad7e:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801ad82:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801ad86:	ee3a 4a87 	vadd.f32	s8, s21, s14
 801ad8a:	ee79 4aa5 	vadd.f32	s9, s19, s11
 801ad8e:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801ad92:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801ad96:	3201      	adds	r2, #1
 801ad98:	edc3 ba04 	vstr	s23, [r3, #16]
 801ad9c:	ed83 ca05 	vstr	s24, [r3, #20]
 801ada0:	3401      	adds	r4, #1
 801ada2:	ed83 2a02 	vstr	s4, [r3, #8]
 801ada6:	ed83 7a00 	vstr	s14, [r3]
 801adaa:	ee64 ba27 	vmul.f32	s23, s8, s15
 801adae:	ed83 5a03 	vstr	s10, [r3, #12]
 801adb2:	edc3 5a01 	vstr	s11, [r3, #4]
 801adb6:	ee24 caa7 	vmul.f32	s24, s9, s15
 801adba:	602a      	str	r2, [r5, #0]
 801adbc:	e6cb      	b.n	801ab56 <cubic_decasteljau+0x42>
 801adbe:	2002      	movs	r0, #2
 801adc0:	2101      	movs	r1, #1
 801adc2:	f8c3 8010 	str.w	r8, [r3, #16]
 801adc6:	6298      	str	r0, [r3, #40]	@ 0x28
 801adc8:	f8ce 1000 	str.w	r1, [lr]
 801adcc:	e751      	b.n	801ac72 <cubic_decasteljau+0x15e>
 801adce:	46a0      	mov	r8, r4
 801add0:	4640      	mov	r0, r8
 801add2:	b009      	add	sp, #36	@ 0x24
 801add4:	ecbd 8b0a 	vpop	{d8-d12}
 801add8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801addc:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801ade0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ade4:	f73f aed1 	bgt.w	801ab8a <cubic_decasteljau+0x76>
 801ade8:	eeb4 aac6 	vcmpe.f32	s20, s12
 801adec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adf0:	f53f aecb 	bmi.w	801ab8a <cubic_decasteljau+0x76>
 801adf4:	eeb4 9ac6 	vcmpe.f32	s18, s12
 801adf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adfc:	f53f aec5 	bmi.w	801ab8a <cubic_decasteljau+0x76>
 801ae00:	eef4 aae6 	vcmpe.f32	s21, s13
 801ae04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae08:	f73f aebf 	bgt.w	801ab8a <cubic_decasteljau+0x76>
 801ae0c:	eef4 9ae6 	vcmpe.f32	s19, s13
 801ae10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae14:	f73f aeb9 	bgt.w	801ab8a <cubic_decasteljau+0x76>
 801ae18:	eef4 aac6 	vcmpe.f32	s21, s12
 801ae1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae20:	f53f aeb3 	bmi.w	801ab8a <cubic_decasteljau+0x76>
 801ae24:	eef4 9ac6 	vcmpe.f32	s19, s12
 801ae28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae2c:	f53f aead 	bmi.w	801ab8a <cubic_decasteljau+0x76>
 801ae30:	eef4 bae6 	vcmpe.f32	s23, s13
 801ae34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae38:	f73f aea7 	bgt.w	801ab8a <cubic_decasteljau+0x76>
 801ae3c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801ae40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae44:	f73f aea1 	bgt.w	801ab8a <cubic_decasteljau+0x76>
 801ae48:	eef4 bac6 	vcmpe.f32	s23, s12
 801ae4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae50:	f53f ae9b 	bmi.w	801ab8a <cubic_decasteljau+0x76>
 801ae54:	eeb4 cac6 	vcmpe.f32	s24, s12
 801ae58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae5c:	bf54      	ite	pl
 801ae5e:	2301      	movpl	r3, #1
 801ae60:	2300      	movmi	r3, #0
 801ae62:	e693      	b.n	801ab8c <cubic_decasteljau+0x78>
 801ae64:	f001 fde6 	bl	801ca34 <nema_vg_set_error>
 801ae68:	4640      	mov	r0, r8
 801ae6a:	b009      	add	sp, #36	@ 0x24
 801ae6c:	ecbd 8b0a 	vpop	{d8-d12}
 801ae70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae74:	20000140 	.word	0x20000140
 801ae78:	20000144 	.word	0x20000144
 801ae7c:	42480000 	.word	0x42480000
 801ae80:	20083254 	.word	0x20083254
 801ae84:	20083110 	.word	0x20083110
 801ae88:	20083164 	.word	0x20083164
 801ae8c:	20083108 	.word	0x20083108

0801ae90 <arc_to_cubic>:
 801ae90:	b530      	push	{r4, r5, lr}
 801ae92:	ed2d 8b0e 	vpush	{d8-d14}
 801ae96:	eddf 8ab7 	vldr	s17, [pc, #732]	@ 801b174 <arc_to_cubic+0x2e4>
 801ae9a:	ee60 9a28 	vmul.f32	s19, s0, s17
 801ae9e:	ee60 8aa8 	vmul.f32	s17, s1, s17
 801aea2:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 801aea6:	ee78 8ae9 	vsub.f32	s17, s17, s19
 801aeaa:	b093      	sub	sp, #76	@ 0x4c
 801aeac:	ee28 0a80 	vmul.f32	s0, s17, s0
 801aeb0:	4604      	mov	r4, r0
 801aeb2:	460d      	mov	r5, r1
 801aeb4:	eef0 ba41 	vmov.f32	s23, s2
 801aeb8:	eeb0 ca61 	vmov.f32	s24, s3
 801aebc:	eef0 ca42 	vmov.f32	s25, s4
 801aec0:	eeb0 da62 	vmov.f32	s26, s5
 801aec4:	ed9f 8aac 	vldr	s16, [pc, #688]	@ 801b178 <arc_to_cubic+0x2e8>
 801aec8:	f016 fb16 	bl	80314f8 <tanf>
 801aecc:	ee20 8a08 	vmul.f32	s16, s0, s16
 801aed0:	eeb0 0a68 	vmov.f32	s0, s17
 801aed4:	f016 fa7e 	bl	80313d4 <cosf>
 801aed8:	eeb0 9a40 	vmov.f32	s18, s0
 801aedc:	eeb0 0a68 	vmov.f32	s0, s17
 801aee0:	f016 fac4 	bl	803146c <sinf>
 801aee4:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 801aee8:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801b17c <arc_to_cubic+0x2ec>
 801aeec:	ee87 ea27 	vdiv.f32	s28, s14, s15
 801aef0:	eddf 7aa3 	vldr	s15, [pc, #652]	@ 801b180 <arc_to_cubic+0x2f0>
 801aef4:	eeb0 ba40 	vmov.f32	s22, s0
 801aef8:	ee68 8a00 	vmul.f32	s17, s16, s0
 801aefc:	eeb0 0a69 	vmov.f32	s0, s19
 801af00:	ee2e ea27 	vmul.f32	s28, s28, s15
 801af04:	f016 fa66 	bl	80313d4 <cosf>
 801af08:	eef0 aa40 	vmov.f32	s21, s0
 801af0c:	eeb0 0a69 	vmov.f32	s0, s19
 801af10:	f016 faac 	bl	803146c <sinf>
 801af14:	eeb0 aa40 	vmov.f32	s20, s0
 801af18:	eeb0 0a4e 	vmov.f32	s0, s28
 801af1c:	f016 fa5a 	bl	80313d4 <cosf>
 801af20:	ee68 da09 	vmul.f32	s27, s16, s18
 801af24:	eef0 9a40 	vmov.f32	s19, s0
 801af28:	eeb0 0a4e 	vmov.f32	s0, s28
 801af2c:	f016 fa9e 	bl	803146c <sinf>
 801af30:	4b94      	ldr	r3, [pc, #592]	@ (801b184 <arc_to_cubic+0x2f4>)
 801af32:	07e9      	lsls	r1, r5, #31
 801af34:	ee78 8a89 	vadd.f32	s17, s17, s18
 801af38:	ee7b da6d 	vsub.f32	s27, s22, s27
 801af3c:	781b      	ldrb	r3, [r3, #0]
 801af3e:	f140 80a8 	bpl.w	801b092 <arc_to_cubic+0x202>
 801af42:	ed94 7a03 	vldr	s14, [r4, #12]
 801af46:	edd4 0a04 	vldr	s1, [r4, #16]
 801af4a:	ee6d 6a8a 	vmul.f32	s13, s27, s20
 801af4e:	ee68 1a0a 	vmul.f32	s3, s16, s20
 801af52:	ee68 7aaa 	vmul.f32	s15, s17, s21
 801af56:	ee28 8a2a 	vmul.f32	s16, s16, s21
 801af5a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801af5e:	ee6d daaa 	vmul.f32	s27, s27, s21
 801af62:	eddf 2a89 	vldr	s5, [pc, #548]	@ 801b188 <arc_to_cubic+0x2f8>
 801af66:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801af6a:	ee7a 1ae1 	vsub.f32	s3, s21, s3
 801af6e:	ee38 8a0a 	vadd.f32	s16, s16, s20
 801af72:	ee78 8aad 	vadd.f32	s17, s17, s27
 801af76:	ee71 1aa2 	vadd.f32	s3, s3, s5
 801af7a:	ee38 8a22 	vadd.f32	s16, s16, s5
 801af7e:	ee77 7aa2 	vadd.f32	s15, s15, s5
 801af82:	ee78 8aa2 	vadd.f32	s17, s17, s5
 801af86:	ee61 1aac 	vmul.f32	s3, s3, s25
 801af8a:	ee28 8a0d 	vmul.f32	s16, s16, s26
 801af8e:	ee67 7aac 	vmul.f32	s15, s15, s25
 801af92:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801af96:	ee29 1aa1 	vmul.f32	s2, s19, s3
 801af9a:	ee20 6a08 	vmul.f32	s12, s0, s16
 801af9e:	ee29 2aa7 	vmul.f32	s4, s19, s15
 801afa2:	ee60 6a28 	vmul.f32	s13, s0, s17
 801afa6:	ee60 1a21 	vmul.f32	s3, s0, s3
 801afaa:	ee29 8a88 	vmul.f32	s16, s19, s16
 801afae:	ee60 7a27 	vmul.f32	s15, s0, s15
 801afb2:	ee69 8aa8 	vmul.f32	s17, s19, s17
 801afb6:	ee31 1a46 	vsub.f32	s2, s2, s12
 801afba:	ee31 8a88 	vadd.f32	s16, s3, s16
 801afbe:	ee32 2a66 	vsub.f32	s4, s4, s13
 801afc2:	ee77 8aa8 	vadd.f32	s17, s15, s17
 801afc6:	07aa      	lsls	r2, r5, #30
 801afc8:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801afcc:	ee38 8a0c 	vadd.f32	s16, s16, s24
 801afd0:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801afd4:	ee78 8a8c 	vadd.f32	s17, s17, s24
 801afd8:	d517      	bpl.n	801b00a <arc_to_cubic+0x17a>
 801afda:	ed94 3a05 	vldr	s6, [r4, #20]
 801afde:	edd4 3a06 	vldr	s7, [r4, #24]
 801afe2:	2b00      	cmp	r3, #0
 801afe4:	f040 8098 	bne.w	801b118 <arc_to_cubic+0x288>
 801afe8:	eef0 2a68 	vmov.f32	s5, s17
 801afec:	eef0 1a48 	vmov.f32	s3, s16
 801aff0:	eeb0 0a47 	vmov.f32	s0, s14
 801aff4:	f7ff fd8e 	bl	801ab14 <cubic_decasteljau>
 801aff8:	4604      	mov	r4, r0
 801affa:	b108      	cbz	r0, 801b000 <arc_to_cubic+0x170>
 801affc:	f001 fd1a 	bl	801ca34 <nema_vg_set_error>
 801b000:	4620      	mov	r0, r4
 801b002:	b013      	add	sp, #76	@ 0x4c
 801b004:	ecbd 8b0e 	vpop	{d8-d14}
 801b008:	bd30      	pop	{r4, r5, pc}
 801b00a:	ee69 6a2a 	vmul.f32	s13, s18, s21
 801b00e:	ee29 9a0a 	vmul.f32	s18, s18, s20
 801b012:	ee6b aa2a 	vmul.f32	s21, s22, s21
 801b016:	ee2b aa0a 	vmul.f32	s20, s22, s20
 801b01a:	ee79 aa2a 	vadd.f32	s21, s18, s21
 801b01e:	ee36 aaca 	vsub.f32	s20, s13, s20
 801b022:	ee3a aa22 	vadd.f32	s20, s20, s5
 801b026:	ee7a 2aa2 	vadd.f32	s5, s21, s5
 801b02a:	ee6a ca2c 	vmul.f32	s25, s20, s25
 801b02e:	ee22 da8d 	vmul.f32	s26, s5, s26
 801b032:	ee29 3aac 	vmul.f32	s6, s19, s25
 801b036:	ee69 3a8d 	vmul.f32	s7, s19, s26
 801b03a:	ee60 ca2c 	vmul.f32	s25, s0, s25
 801b03e:	ee20 0a0d 	vmul.f32	s0, s0, s26
 801b042:	ee7c 3aa3 	vadd.f32	s7, s25, s7
 801b046:	ee33 0a40 	vsub.f32	s0, s6, s0
 801b04a:	ee73 3a8c 	vadd.f32	s7, s7, s24
 801b04e:	ee30 3a2b 	vadd.f32	s6, s0, s23
 801b052:	2b00      	cmp	r3, #0
 801b054:	d0c8      	beq.n	801afe8 <arc_to_cubic+0x158>
 801b056:	4b4d      	ldr	r3, [pc, #308]	@ (801b18c <arc_to_cubic+0x2fc>)
 801b058:	ed93 6a00 	vldr	s12, [r3]
 801b05c:	edd3 5a01 	vldr	s11, [r3, #4]
 801b060:	edd3 6a03 	vldr	s13, [r3, #12]
 801b064:	edd3 2a04 	vldr	s5, [r3, #16]
 801b068:	ee23 5aa5 	vmul.f32	s10, s7, s11
 801b06c:	ee63 ba26 	vmul.f32	s23, s6, s13
 801b070:	ee23 0a06 	vmul.f32	s0, s6, s12
 801b074:	ee63 3aa2 	vmul.f32	s7, s7, s5
 801b078:	ee30 3a05 	vadd.f32	s6, s0, s10
 801b07c:	ed93 4a02 	vldr	s8, [r3, #8]
 801b080:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 801b084:	edd3 4a05 	vldr	s9, [r3, #20]
 801b088:	ee33 3a04 	vadd.f32	s6, s6, s8
 801b08c:	ee73 3aa4 	vadd.f32	s7, s7, s9
 801b090:	e04f      	b.n	801b132 <arc_to_cubic+0x2a2>
 801b092:	eddf 0a3d 	vldr	s1, [pc, #244]	@ 801b188 <arc_to_cubic+0x2f8>
 801b096:	ee6a 7a20 	vmul.f32	s15, s20, s1
 801b09a:	ee6a 6aa0 	vmul.f32	s13, s21, s1
 801b09e:	ee7a 7ae7 	vsub.f32	s15, s21, s15
 801b0a2:	ee76 6a8a 	vadd.f32	s13, s13, s20
 801b0a6:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801b0aa:	ee76 6aa0 	vadd.f32	s13, s13, s1
 801b0ae:	ee67 7aac 	vmul.f32	s15, s15, s25
 801b0b2:	ee66 6a8d 	vmul.f32	s13, s13, s26
 801b0b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b0ba:	ee60 0a27 	vmul.f32	s1, s0, s15
 801b0be:	ee60 7a26 	vmul.f32	s15, s0, s13
 801b0c2:	ee69 6aa6 	vmul.f32	s13, s19, s13
 801b0c6:	ee37 7a67 	vsub.f32	s14, s14, s15
 801b0ca:	ee70 0aa6 	vadd.f32	s1, s1, s13
 801b0ce:	ee37 7a2b 	vadd.f32	s14, s14, s23
 801b0d2:	ee70 0a8c 	vadd.f32	s1, s1, s24
 801b0d6:	2b00      	cmp	r3, #0
 801b0d8:	f43f af37 	beq.w	801af4a <arc_to_cubic+0xba>
 801b0dc:	4a2b      	ldr	r2, [pc, #172]	@ (801b18c <arc_to_cubic+0x2fc>)
 801b0de:	edd2 6a00 	vldr	s13, [r2]
 801b0e2:	edd2 5a01 	vldr	s11, [r2, #4]
 801b0e6:	edd2 7a03 	vldr	s15, [r2, #12]
 801b0ea:	ed92 6a04 	vldr	s12, [r2, #16]
 801b0ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 801b0f2:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b0f6:	ee60 5aa5 	vmul.f32	s11, s1, s11
 801b0fa:	ee60 0a86 	vmul.f32	s1, s1, s12
 801b0fe:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801b102:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801b106:	ed92 7a02 	vldr	s14, [r2, #8]
 801b10a:	edd2 7a05 	vldr	s15, [r2, #20]
 801b10e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b112:	ee70 0aa7 	vadd.f32	s1, s1, s15
 801b116:	e718      	b.n	801af4a <arc_to_cubic+0xba>
 801b118:	4b1c      	ldr	r3, [pc, #112]	@ (801b18c <arc_to_cubic+0x2fc>)
 801b11a:	ed93 6a00 	vldr	s12, [r3]
 801b11e:	edd3 5a01 	vldr	s11, [r3, #4]
 801b122:	ed93 4a02 	vldr	s8, [r3, #8]
 801b126:	edd3 6a03 	vldr	s13, [r3, #12]
 801b12a:	edd3 2a04 	vldr	s5, [r3, #16]
 801b12e:	edd3 4a05 	vldr	s9, [r3, #20]
 801b132:	ee21 5a06 	vmul.f32	s10, s2, s12
 801b136:	ee65 1a88 	vmul.f32	s3, s11, s16
 801b13a:	ee21 1a26 	vmul.f32	s2, s2, s13
 801b13e:	ee22 6a06 	vmul.f32	s12, s4, s12
 801b142:	ee62 6a26 	vmul.f32	s13, s4, s13
 801b146:	ee68 7aa2 	vmul.f32	s15, s17, s5
 801b14a:	ee25 2aa8 	vmul.f32	s4, s11, s17
 801b14e:	ee28 8a22 	vmul.f32	s16, s16, s5
 801b152:	ee75 5a21 	vadd.f32	s11, s10, s3
 801b156:	ee31 8a08 	vadd.f32	s16, s2, s16
 801b15a:	ee36 2a02 	vadd.f32	s4, s12, s4
 801b15e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b162:	ee35 1a84 	vadd.f32	s2, s11, s8
 801b166:	ee38 8a24 	vadd.f32	s16, s16, s9
 801b16a:	ee32 2a04 	vadd.f32	s4, s4, s8
 801b16e:	ee77 8aa4 	vadd.f32	s17, s15, s9
 801b172:	e739      	b.n	801afe8 <arc_to_cubic+0x158>
 801b174:	3c8efa35 	.word	0x3c8efa35
 801b178:	3faaaaab 	.word	0x3faaaaab
 801b17c:	43340000 	.word	0x43340000
 801b180:	40490fdb 	.word	0x40490fdb
 801b184:	2008313c 	.word	0x2008313c
 801b188:	00000000 	.word	0x00000000
 801b18c:	20083140 	.word	0x20083140

0801b190 <calc_new_geometry>:
 801b190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b194:	ed2d 8b10 	vpush	{d8-d15}
 801b198:	b0a1      	sub	sp, #132	@ 0x84
 801b19a:	4682      	mov	sl, r0
 801b19c:	2248      	movs	r2, #72	@ 0x48
 801b19e:	a80e      	add	r0, sp, #56	@ 0x38
 801b1a0:	2100      	movs	r1, #0
 801b1a2:	f017 fb90 	bl	80328c6 <memset>
 801b1a6:	2201      	movs	r2, #1
 801b1a8:	2300      	movs	r3, #0
 801b1aa:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b1ae:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
 801b1b2:	f8da 2000 	ldr.w	r2, [sl]
 801b1b6:	ed9f ba80 	vldr	s22, [pc, #512]	@ 801b3b8 <calc_new_geometry+0x228>
 801b1ba:	429a      	cmp	r2, r3
 801b1bc:	ed9f aa7f 	vldr	s20, [pc, #508]	@ 801b3bc <calc_new_geometry+0x22c>
 801b1c0:	eddf aa7f 	vldr	s21, [pc, #508]	@ 801b3c0 <calc_new_geometry+0x230>
 801b1c4:	eddf 9a7f 	vldr	s19, [pc, #508]	@ 801b3c4 <calc_new_geometry+0x234>
 801b1c8:	ed9f 9a7f 	vldr	s18, [pc, #508]	@ 801b3c8 <calc_new_geometry+0x238>
 801b1cc:	f240 80e7 	bls.w	801b39e <calc_new_geometry+0x20e>
 801b1d0:	2200      	movs	r2, #0
 801b1d2:	f8da 1008 	ldr.w	r1, [sl, #8]
 801b1d6:	f8df b1f8 	ldr.w	fp, [pc, #504]	@ 801b3d0 <calc_new_geometry+0x240>
 801b1da:	5ccc      	ldrb	r4, [r1, r3]
 801b1dc:	af13      	add	r7, sp, #76	@ 0x4c
 801b1de:	f004 066f 	and.w	r6, r4, #111	@ 0x6f
 801b1e2:	ad11      	add	r5, sp, #68	@ 0x44
 801b1e4:	3301      	adds	r3, #1
 801b1e6:	2e01      	cmp	r6, #1
 801b1e8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b1ec:	9301      	str	r3, [sp, #4]
 801b1ee:	f004 0910 	and.w	r9, r4, #16
 801b1f2:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
 801b1f6:	e885 0003 	stmia.w	r5, {r0, r1}
 801b1fa:	f000 8244 	beq.w	801b686 <calc_new_geometry+0x4f6>
 801b1fe:	0663      	lsls	r3, r4, #25
 801b200:	f000 8229 	beq.w	801b656 <calc_new_geometry+0x4c6>
 801b204:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b206:	f89d e07c 	ldrb.w	lr, [sp, #124]	@ 0x7c
 801b20a:	bb63      	cbnz	r3, 801b266 <calc_new_geometry+0xd6>
 801b20c:	2201      	movs	r2, #1
 801b20e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b3d4 <calc_new_geometry+0x244>
 801b212:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b216:	f898 2000 	ldrb.w	r2, [r8]
 801b21a:	b322      	cbz	r2, 801b266 <calc_new_geometry+0xd6>
 801b21c:	4a6b      	ldr	r2, [pc, #428]	@ (801b3cc <calc_new_geometry+0x23c>)
 801b21e:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801b222:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801b226:	ed92 6a03 	vldr	s12, [r2, #12]
 801b22a:	edd2 6a04 	vldr	s13, [r2, #16]
 801b22e:	ed92 5a00 	vldr	s10, [r2]
 801b232:	edd2 5a01 	vldr	s11, [r2, #4]
 801b236:	ee27 5a05 	vmul.f32	s10, s14, s10
 801b23a:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801b23e:	ee27 7a06 	vmul.f32	s14, s14, s12
 801b242:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b246:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b24a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b24e:	edd2 6a02 	vldr	s13, [r2, #8]
 801b252:	edd2 7a05 	vldr	s15, [r2, #20]
 801b256:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b25a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b25e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b262:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801b266:	f04f 0800 	mov.w	r8, #0
 801b26a:	f8da 200c 	ldr.w	r2, [sl, #12]
 801b26e:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b272:	eb02 010c 	add.w	r1, r2, ip
 801b276:	1c58      	adds	r0, r3, #1
 801b278:	2e06      	cmp	r6, #6
 801b27a:	f88d 803a 	strb.w	r8, [sp, #58]	@ 0x3a
 801b27e:	9103      	str	r1, [sp, #12]
 801b280:	4680      	mov	r8, r0
 801b282:	f000 833c 	beq.w	801b8fe <calc_new_geometry+0x76e>
 801b286:	2e05      	cmp	r6, #5
 801b288:	f000 84a7 	beq.w	801bbda <calc_new_geometry+0xa4a>
 801b28c:	2e07      	cmp	r6, #7
 801b28e:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 801b292:	f000 84f2 	beq.w	801bc7a <calc_new_geometry+0xaea>
 801b296:	2e08      	cmp	r6, #8
 801b298:	f000 8727 	beq.w	801c0ea <calc_new_geometry+0xf5a>
 801b29c:	f004 000f 	and.w	r0, r4, #15
 801b2a0:	2809      	cmp	r0, #9
 801b2a2:	9002      	str	r0, [sp, #8]
 801b2a4:	f000 86d7 	beq.w	801c056 <calc_new_geometry+0xec6>
 801b2a8:	2e04      	cmp	r6, #4
 801b2aa:	f040 83bc 	bne.w	801ba26 <calc_new_geometry+0x896>
 801b2ae:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b2b2:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b2b6:	9b03      	ldr	r3, [sp, #12]
 801b2b8:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801b2bc:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b2c0:	ed93 7a00 	vldr	s14, [r3]
 801b2c4:	f1b9 0f00 	cmp.w	r9, #0
 801b2c8:	f000 84d1 	beq.w	801bc6e <calc_new_geometry+0xade>
 801b2cc:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b2d0:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b2d4:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b2d8:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 801b3d4 <calc_new_geometry+0x244>
 801b2dc:	f898 3000 	ldrb.w	r3, [r8]
 801b2e0:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b2e4:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b2e8:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801b2ec:	b303      	cbz	r3, 801b330 <calc_new_geometry+0x1a0>
 801b2ee:	4b37      	ldr	r3, [pc, #220]	@ (801b3cc <calc_new_geometry+0x23c>)
 801b2f0:	ed93 6a03 	vldr	s12, [r3, #12]
 801b2f4:	edd3 6a04 	vldr	s13, [r3, #16]
 801b2f8:	ed93 5a00 	vldr	s10, [r3]
 801b2fc:	edd3 5a01 	vldr	s11, [r3, #4]
 801b300:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b304:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b308:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b30c:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b310:	ee75 5a25 	vadd.f32	s11, s10, s11
 801b314:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b318:	ed93 6a02 	vldr	s12, [r3, #8]
 801b31c:	edd3 6a05 	vldr	s13, [r3, #20]
 801b320:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b324:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b328:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801b32c:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b330:	2a01      	cmp	r2, #1
 801b332:	f000 826c 	beq.w	801b80e <calc_new_geometry+0x67e>
 801b336:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801b33a:	2b05      	cmp	r3, #5
 801b33c:	d04c      	beq.n	801b3d8 <calc_new_geometry+0x248>
 801b33e:	2e06      	cmp	r6, #6
 801b340:	f000 81d7 	beq.w	801b6f2 <calc_new_geometry+0x562>
 801b344:	2e08      	cmp	r6, #8
 801b346:	f000 81d4 	beq.w	801b6f2 <calc_new_geometry+0x562>
 801b34a:	f004 030f 	and.w	r3, r4, #15
 801b34e:	9302      	str	r3, [sp, #8]
 801b350:	9b02      	ldr	r3, [sp, #8]
 801b352:	2b09      	cmp	r3, #9
 801b354:	f000 83fd 	beq.w	801bb52 <calc_new_geometry+0x9c2>
 801b358:	f1a6 030a 	sub.w	r3, r6, #10
 801b35c:	2b01      	cmp	r3, #1
 801b35e:	d918      	bls.n	801b392 <calc_new_geometry+0x202>
 801b360:	1eb3      	subs	r3, r6, #2
 801b362:	2b02      	cmp	r3, #2
 801b364:	f240 82bc 	bls.w	801b8e0 <calc_new_geometry+0x750>
 801b368:	2e01      	cmp	r6, #1
 801b36a:	f000 86f4 	beq.w	801c156 <calc_new_geometry+0xfc6>
 801b36e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801b372:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b376:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b37a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b37e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b382:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b386:	f7fd ffa1 	bl	80192cc <calc_line_geometry>
 801b38a:	4601      	mov	r1, r0
 801b38c:	2800      	cmp	r0, #0
 801b38e:	f040 81c6 	bne.w	801b71e <calc_new_geometry+0x58e>
 801b392:	9b01      	ldr	r3, [sp, #4]
 801b394:	f8da 2000 	ldr.w	r2, [sl]
 801b398:	429a      	cmp	r2, r3
 801b39a:	f63f af19 	bhi.w	801b1d0 <calc_new_geometry+0x40>
 801b39e:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
 801b3a2:	2b01      	cmp	r3, #1
 801b3a4:	f000 8720 	beq.w	801c1e8 <calc_new_geometry+0x1058>
 801b3a8:	2100      	movs	r1, #0
 801b3aa:	4608      	mov	r0, r1
 801b3ac:	b021      	add	sp, #132	@ 0x84
 801b3ae:	ecbd 8b10 	vpop	{d8-d15}
 801b3b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3b6:	bf00      	nop
 801b3b8:	3c8efa35 	.word	0x3c8efa35
 801b3bc:	42652ee1 	.word	0x42652ee1
 801b3c0:	43340000 	.word	0x43340000
 801b3c4:	42b40000 	.word	0x42b40000
 801b3c8:	00000000 	.word	0x00000000
 801b3cc:	20083140 	.word	0x20083140
 801b3d0:	20083110 	.word	0x20083110
 801b3d4:	2008313c 	.word	0x2008313c
 801b3d8:	f8df 836c 	ldr.w	r8, [pc, #876]	@ 801b748 <calc_new_geometry+0x5b8>
 801b3dc:	4ed5      	ldr	r6, [pc, #852]	@ (801b734 <calc_new_geometry+0x5a4>)
 801b3de:	edd8 6a00 	vldr	s13, [r8]
 801b3e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b3e6:	ed96 6a00 	vldr	s12, [r6]
 801b3ea:	ed9d 8a11 	vldr	s16, [sp, #68]	@ 0x44
 801b3ee:	eddd 8a12 	vldr	s17, [sp, #72]	@ 0x48
 801b3f2:	eddd ba15 	vldr	s23, [sp, #84]	@ 0x54
 801b3f6:	ed9d ca16 	vldr	s24, [sp, #88]	@ 0x58
 801b3fa:	eddd ca13 	vldr	s25, [sp, #76]	@ 0x4c
 801b3fe:	ed9d da14 	vldr	s26, [sp, #80]	@ 0x50
 801b402:	2401      	movs	r4, #1
 801b404:	eddf dacc 	vldr	s27, [pc, #816]	@ 801b738 <calc_new_geometry+0x5a8>
 801b408:	aa0a      	add	r2, sp, #40	@ 0x28
 801b40a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b40c:	e882 0003 	stmia.w	r2, {r0, r1}
 801b410:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b414:	e883 0003 	stmia.w	r3, {r0, r1}
 801b418:	4dc8      	ldr	r5, [pc, #800]	@ (801b73c <calc_new_geometry+0x5ac>)
 801b41a:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801b41e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b422:	dc23      	bgt.n	801b46c <calc_new_geometry+0x2dc>
 801b424:	eef4 8ae6 	vcmpe.f32	s17, s13
 801b428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b42c:	dc1e      	bgt.n	801b46c <calc_new_geometry+0x2dc>
 801b42e:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801b432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b436:	d419      	bmi.n	801b46c <calc_new_geometry+0x2dc>
 801b438:	eef4 8ac6 	vcmpe.f32	s17, s12
 801b43c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b440:	d414      	bmi.n	801b46c <calc_new_geometry+0x2dc>
 801b442:	eef4 bae6 	vcmpe.f32	s23, s13
 801b446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b44a:	dc0f      	bgt.n	801b46c <calc_new_geometry+0x2dc>
 801b44c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801b450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b454:	dc0a      	bgt.n	801b46c <calc_new_geometry+0x2dc>
 801b456:	eef4 bac6 	vcmpe.f32	s23, s12
 801b45a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b45e:	d405      	bmi.n	801b46c <calc_new_geometry+0x2dc>
 801b460:	eeb4 cac6 	vcmpe.f32	s24, s12
 801b464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b468:	f140 845c 	bpl.w	801bd24 <calc_new_geometry+0xb94>
 801b46c:	2200      	movs	r2, #0
 801b46e:	ee76 7a2d 	vadd.f32	s15, s12, s27
 801b472:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801b476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b47a:	ee36 7aed 	vsub.f32	s14, s13, s27
 801b47e:	d509      	bpl.n	801b494 <calc_new_geometry+0x304>
 801b480:	eef4 bae7 	vcmpe.f32	s23, s15
 801b484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b488:	d504      	bpl.n	801b494 <calc_new_geometry+0x304>
 801b48a:	eef4 cae7 	vcmpe.f32	s25, s15
 801b48e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b492:	d463      	bmi.n	801b55c <calc_new_geometry+0x3cc>
 801b494:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801b498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b49c:	dd09      	ble.n	801b4b2 <calc_new_geometry+0x322>
 801b49e:	eef4 bac7 	vcmpe.f32	s23, s14
 801b4a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4a6:	dd04      	ble.n	801b4b2 <calc_new_geometry+0x322>
 801b4a8:	eef4 cac7 	vcmpe.f32	s25, s14
 801b4ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4b0:	dc54      	bgt.n	801b55c <calc_new_geometry+0x3cc>
 801b4b2:	eef4 8ae7 	vcmpe.f32	s17, s15
 801b4b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ba:	d509      	bpl.n	801b4d0 <calc_new_geometry+0x340>
 801b4bc:	eeb4 cae7 	vcmpe.f32	s24, s15
 801b4c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4c4:	d504      	bpl.n	801b4d0 <calc_new_geometry+0x340>
 801b4c6:	eeb4 dae7 	vcmpe.f32	s26, s15
 801b4ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ce:	d445      	bmi.n	801b55c <calc_new_geometry+0x3cc>
 801b4d0:	eef4 8ac7 	vcmpe.f32	s17, s14
 801b4d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4d8:	dd09      	ble.n	801b4ee <calc_new_geometry+0x35e>
 801b4da:	eeb4 cac7 	vcmpe.f32	s24, s14
 801b4de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4e2:	dd04      	ble.n	801b4ee <calc_new_geometry+0x35e>
 801b4e4:	eeb4 dac7 	vcmpe.f32	s26, s14
 801b4e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ec:	dc36      	bgt.n	801b55c <calc_new_geometry+0x3cc>
 801b4ee:	682b      	ldr	r3, [r5, #0]
 801b4f0:	2a00      	cmp	r2, #0
 801b4f2:	d073      	beq.n	801b5dc <calc_new_geometry+0x44c>
 801b4f4:	e9db 2104 	ldrd	r2, r1, [fp, #16]
 801b4f8:	4891      	ldr	r0, [pc, #580]	@ (801b740 <calc_new_geometry+0x5b0>)
 801b4fa:	3c01      	subs	r4, #1
 801b4fc:	6807      	ldr	r7, [r0, #0]
 801b4fe:	f101 0c01 	add.w	ip, r1, #1
 801b502:	f102 0904 	add.w	r9, r2, #4
 801b506:	2f00      	cmp	r7, #0
 801b508:	d152      	bne.n	801b5b0 <calc_new_geometry+0x420>
 801b50a:	f8db 7000 	ldr.w	r7, [fp]
 801b50e:	428f      	cmp	r7, r1
 801b510:	d83d      	bhi.n	801b58e <calc_new_geometry+0x3fe>
 801b512:	2102      	movs	r1, #2
 801b514:	2201      	movs	r2, #1
 801b516:	f8cb c014 	str.w	ip, [fp, #20]
 801b51a:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b51e:	6002      	str	r2, [r0, #0]
 801b520:	f8cb 9010 	str.w	r9, [fp, #16]
 801b524:	b193      	cbz	r3, 801b54c <calc_new_geometry+0x3bc>
 801b526:	3b01      	subs	r3, #1
 801b528:	4986      	ldr	r1, [pc, #536]	@ (801b744 <calc_new_geometry+0x5b4>)
 801b52a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b52e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b532:	ed92 8a00 	vldr	s16, [r2]
 801b536:	edd2 8a01 	vldr	s17, [r2, #4]
 801b53a:	edd2 ba02 	vldr	s23, [r2, #8]
 801b53e:	ed92 ca03 	vldr	s24, [r2, #12]
 801b542:	edd2 ca04 	vldr	s25, [r2, #16]
 801b546:	ed92 da05 	vldr	s26, [r2, #20]
 801b54a:	602b      	str	r3, [r5, #0]
 801b54c:	2c00      	cmp	r4, #0
 801b54e:	f43f af20 	beq.w	801b392 <calc_new_geometry+0x202>
 801b552:	edd8 6a00 	vldr	s13, [r8]
 801b556:	ed96 6a00 	vldr	s12, [r6]
 801b55a:	e75e      	b.n	801b41a <calc_new_geometry+0x28a>
 801b55c:	eeb0 1a6c 	vmov.f32	s2, s25
 801b560:	eef0 1a4d 	vmov.f32	s3, s26
 801b564:	eeb0 0a48 	vmov.f32	s0, s16
 801b568:	eef0 0a68 	vmov.f32	s1, s17
 801b56c:	ed8d 8a0a 	vstr	s16, [sp, #40]	@ 0x28
 801b570:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 801b574:	edcd ca0c 	vstr	s25, [sp, #48]	@ 0x30
 801b578:	ed8d da0d 	vstr	s26, [sp, #52]	@ 0x34
 801b57c:	f7fd fea6 	bl	80192cc <calc_line_geometry>
 801b580:	4601      	mov	r1, r0
 801b582:	2800      	cmp	r0, #0
 801b584:	f040 819e 	bne.w	801b8c4 <calc_new_geometry+0x734>
 801b588:	3c01      	subs	r4, #1
 801b58a:	682b      	ldr	r3, [r5, #0]
 801b58c:	e7ca      	b.n	801b524 <calc_new_geometry+0x394>
 801b58e:	f04f 0e05 	mov.w	lr, #5
 801b592:	f8cb c014 	str.w	ip, [fp, #20]
 801b596:	e9db 7c01 	ldrd	r7, ip, [fp, #4]
 801b59a:	f807 e001 	strb.w	lr, [r7, r1]
 801b59e:	1c51      	adds	r1, r2, #1
 801b5a0:	4561      	cmp	r1, ip
 801b5a2:	d308      	bcc.n	801b5b6 <calc_new_geometry+0x426>
 801b5a4:	2102      	movs	r1, #2
 801b5a6:	2201      	movs	r2, #1
 801b5a8:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b5ac:	6002      	str	r2, [r0, #0]
 801b5ae:	e7b7      	b.n	801b520 <calc_new_geometry+0x390>
 801b5b0:	f8cb c014 	str.w	ip, [fp, #20]
 801b5b4:	e7b4      	b.n	801b520 <calc_new_geometry+0x390>
 801b5b6:	f8db 100c 	ldr.w	r1, [fp, #12]
 801b5ba:	f102 0e03 	add.w	lr, r2, #3
 801b5be:	45f4      	cmp	ip, lr
 801b5c0:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801b5c4:	edc2 ba00 	vstr	s23, [r2]
 801b5c8:	ed82 ca01 	vstr	s24, [r2, #4]
 801b5cc:	d93b      	bls.n	801b646 <calc_new_geometry+0x4b6>
 801b5ce:	edc2 ca02 	vstr	s25, [r2, #8]
 801b5d2:	f8cb 9010 	str.w	r9, [fp, #16]
 801b5d6:	ed82 da03 	vstr	s26, [r2, #12]
 801b5da:	e7a3      	b.n	801b524 <calc_new_geometry+0x394>
 801b5dc:	2b09      	cmp	r3, #9
 801b5de:	dc89      	bgt.n	801b4f4 <calc_new_geometry+0x364>
 801b5e0:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801b5e4:	ee7b 7aac 	vadd.f32	s15, s23, s25
 801b5e8:	ee3c 5a0d 	vadd.f32	s10, s24, s26
 801b5ec:	ee38 7a2b 	vadd.f32	s14, s16, s23
 801b5f0:	ee38 ca8c 	vadd.f32	s24, s17, s24
 801b5f4:	ee67 ba25 	vmul.f32	s23, s14, s11
 801b5f8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801b5fc:	ee25 5a25 	vmul.f32	s10, s10, s11
 801b600:	ee2c ca25 	vmul.f32	s24, s24, s11
 801b604:	ee7b 4aa7 	vadd.f32	s9, s23, s15
 801b608:	ee3c 7a05 	vadd.f32	s14, s24, s10
 801b60c:	ee64 4aa5 	vmul.f32	s9, s9, s11
 801b610:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b614:	494b      	ldr	r1, [pc, #300]	@ (801b744 <calc_new_geometry+0x5b4>)
 801b616:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b61a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b61e:	3301      	adds	r3, #1
 801b620:	edc2 ca04 	vstr	s25, [r2, #16]
 801b624:	ed82 da05 	vstr	s26, [r2, #20]
 801b628:	3401      	adds	r4, #1
 801b62a:	edc2 7a02 	vstr	s15, [r2, #8]
 801b62e:	edc2 4a00 	vstr	s9, [r2]
 801b632:	eef0 ca64 	vmov.f32	s25, s9
 801b636:	ed82 5a03 	vstr	s10, [r2, #12]
 801b63a:	edc2 5a01 	vstr	s11, [r2, #4]
 801b63e:	eeb0 da65 	vmov.f32	s26, s11
 801b642:	602b      	str	r3, [r5, #0]
 801b644:	e6e9      	b.n	801b41a <calc_new_geometry+0x28a>
 801b646:	2102      	movs	r1, #2
 801b648:	2201      	movs	r2, #1
 801b64a:	f8cb 9010 	str.w	r9, [fp, #16]
 801b64e:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b652:	6002      	str	r2, [r0, #0]
 801b654:	e766      	b.n	801b524 <calc_new_geometry+0x394>
 801b656:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b65a:	2300      	movs	r3, #0
 801b65c:	2a01      	cmp	r2, #1
 801b65e:	bf19      	ittee	ne
 801b660:	eddd 7a1d 	vldrne	s15, [sp, #116]	@ 0x74
 801b664:	ed9d 7a1e 	vldrne	s14, [sp, #120]	@ 0x78
 801b668:	eeb0 7a49 	vmoveq.f32	s14, s18
 801b66c:	eef0 7a49 	vmoveq.f32	s15, s18
 801b670:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b674:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b678:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801b67c:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b680:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 801b74c <calc_new_geometry+0x5bc>
 801b684:	e62a      	b.n	801b2dc <calc_new_geometry+0x14c>
 801b686:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
 801b68a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b68c:	2a01      	cmp	r2, #1
 801b68e:	f000 80d3 	beq.w	801b838 <calc_new_geometry+0x6a8>
 801b692:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 801b74c <calc_new_geometry+0x5bc>
 801b696:	f04f 0c01 	mov.w	ip, #1
 801b69a:	f04f 0e00 	mov.w	lr, #0
 801b69e:	009a      	lsls	r2, r3, #2
 801b6a0:	f8da 000c 	ldr.w	r0, [sl, #12]
 801b6a4:	1d11      	adds	r1, r2, #4
 801b6a6:	4401      	add	r1, r0
 801b6a8:	4402      	add	r2, r0
 801b6aa:	eb03 000c 	add.w	r0, r3, ip
 801b6ae:	9310      	str	r3, [sp, #64]	@ 0x40
 801b6b0:	f88d e038 	strb.w	lr, [sp, #56]	@ 0x38
 801b6b4:	f88d c03a 	strb.w	ip, [sp, #58]	@ 0x3a
 801b6b8:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b6ba:	3302      	adds	r3, #2
 801b6bc:	edd2 7a00 	vldr	s15, [r2]
 801b6c0:	f1b9 0f00 	cmp.w	r9, #0
 801b6c4:	f000 80b0 	beq.w	801b828 <calc_new_geometry+0x698>
 801b6c8:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801b6cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b6d0:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b6d4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b6d6:	ed91 7a00 	vldr	s14, [r1]
 801b6da:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b6de:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b6e2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b6e6:	edcd 7a1d 	vstr	s15, [sp, #116]	@ 0x74
 801b6ea:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 801b6ee:	2200      	movs	r2, #0
 801b6f0:	e5f4      	b.n	801b2dc <calc_new_geometry+0x14c>
 801b6f2:	ed9d 3a13 	vldr	s6, [sp, #76]	@ 0x4c
 801b6f6:	eddd 3a14 	vldr	s7, [sp, #80]	@ 0x50
 801b6fa:	ed9d 2a17 	vldr	s4, [sp, #92]	@ 0x5c
 801b6fe:	eddd 2a18 	vldr	s5, [sp, #96]	@ 0x60
 801b702:	ed9d 1a15 	vldr	s2, [sp, #84]	@ 0x54
 801b706:	eddd 1a16 	vldr	s3, [sp, #88]	@ 0x58
 801b70a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b70e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b712:	f7ff f9ff 	bl	801ab14 <cubic_decasteljau>
 801b716:	4601      	mov	r1, r0
 801b718:	2800      	cmp	r0, #0
 801b71a:	f43f ae3a 	beq.w	801b392 <calc_new_geometry+0x202>
 801b71e:	9101      	str	r1, [sp, #4]
 801b720:	f001 f988 	bl	801ca34 <nema_vg_set_error>
 801b724:	9901      	ldr	r1, [sp, #4]
 801b726:	4608      	mov	r0, r1
 801b728:	b021      	add	sp, #132	@ 0x84
 801b72a:	ecbd 8b10 	vpop	{d8-d15}
 801b72e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b732:	bf00      	nop
 801b734:	20000144 	.word	0x20000144
 801b738:	42480000 	.word	0x42480000
 801b73c:	20083254 	.word	0x20083254
 801b740:	20083108 	.word	0x20083108
 801b744:	20083164 	.word	0x20083164
 801b748:	20000140 	.word	0x20000140
 801b74c:	2008313c 	.word	0x2008313c
 801b750:	9e05      	ldr	r6, [sp, #20]
 801b752:	eddd 7a1d 	vldr	s15, [sp, #116]	@ 0x74
 801b756:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801b75a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801b75e:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b766:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 801b76a:	d108      	bne.n	801b77e <calc_new_geometry+0x5ee>
 801b76c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b770:	ee76 6ac7 	vsub.f32	s13, s13, s14
 801b774:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b77c:	d03f      	beq.n	801b7fe <calc_new_geometry+0x66e>
 801b77e:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b782:	f8df 82ec 	ldr.w	r8, [pc, #748]	@ 801ba70 <calc_new_geometry+0x8e0>
 801b786:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b78a:	f898 3000 	ldrb.w	r3, [r8]
 801b78e:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b792:	e885 0003 	stmia.w	r5, {r0, r1}
 801b796:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b79a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b79e:	b303      	cbz	r3, 801b7e2 <calc_new_geometry+0x652>
 801b7a0:	4bb2      	ldr	r3, [pc, #712]	@ (801ba6c <calc_new_geometry+0x8dc>)
 801b7a2:	ed93 6a03 	vldr	s12, [r3, #12]
 801b7a6:	edd3 6a04 	vldr	s13, [r3, #16]
 801b7aa:	ed93 5a00 	vldr	s10, [r3]
 801b7ae:	edd3 5a01 	vldr	s11, [r3, #4]
 801b7b2:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b7b6:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b7ba:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b7be:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b7c2:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b7c6:	ee37 7a87 	vadd.f32	s14, s15, s14
 801b7ca:	edd3 6a02 	vldr	s13, [r3, #8]
 801b7ce:	edd3 7a05 	vldr	s15, [r3, #20]
 801b7d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b7d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b7da:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801b7de:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b7e2:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b7e6:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b7ea:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b7ee:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b7f2:	f7fd fd6b 	bl	80192cc <calc_line_geometry>
 801b7f6:	4601      	mov	r1, r0
 801b7f8:	2800      	cmp	r0, #0
 801b7fa:	f040 8425 	bne.w	801c048 <calc_new_geometry+0xeb8>
 801b7fe:	2300      	movs	r3, #0
 801b800:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b804:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b808:	2b01      	cmp	r3, #1
 801b80a:	f47f ada1 	bne.w	801b350 <calc_new_geometry+0x1c0>
 801b80e:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b812:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b816:	f7fd fcf9 	bl	801920c <calc_move_geometry>
 801b81a:	4601      	mov	r1, r0
 801b81c:	2800      	cmp	r0, #0
 801b81e:	f47f af7e 	bne.w	801b71e <calc_new_geometry+0x58e>
 801b822:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801b826:	e586      	b.n	801b336 <calc_new_geometry+0x1a6>
 801b828:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b82c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b82e:	ed91 7a00 	vldr	s14, [r1]
 801b832:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b836:	e756      	b.n	801b6e6 <calc_new_geometry+0x556>
 801b838:	2b00      	cmp	r3, #0
 801b83a:	f43f af2a 	beq.w	801b692 <calc_new_geometry+0x502>
 801b83e:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b842:	2b00      	cmp	r3, #0
 801b844:	f000 8269 	beq.w	801bd1a <calc_new_geometry+0xb8a>
 801b848:	eef0 7a49 	vmov.f32	s15, s18
 801b84c:	eeb0 7a49 	vmov.f32	s14, s18
 801b850:	f8df 821c 	ldr.w	r8, [pc, #540]	@ 801ba70 <calc_new_geometry+0x8e0>
 801b854:	f898 3000 	ldrb.w	r3, [r8]
 801b858:	b1e3      	cbz	r3, 801b894 <calc_new_geometry+0x704>
 801b85a:	4b84      	ldr	r3, [pc, #528]	@ (801ba6c <calc_new_geometry+0x8dc>)
 801b85c:	edd3 5a00 	vldr	s11, [r3]
 801b860:	ed93 6a01 	vldr	s12, [r3, #4]
 801b864:	edd3 6a03 	vldr	s13, [r3, #12]
 801b868:	ed93 5a04 	vldr	s10, [r3, #16]
 801b86c:	ee27 6a86 	vmul.f32	s12, s15, s12
 801b870:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b874:	ee67 7a85 	vmul.f32	s15, s15, s10
 801b878:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b87c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801b880:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b884:	edd3 7a05 	vldr	s15, [r3, #20]
 801b888:	ed93 6a02 	vldr	s12, [r3, #8]
 801b88c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b890:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b894:	f240 13ff 	movw	r3, #511	@ 0x1ff
 801b898:	eeb0 1a47 	vmov.f32	s2, s14
 801b89c:	eef0 1a67 	vmov.f32	s3, s15
 801b8a0:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801b8a4:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801b8a8:	ed8d 7a08 	vstr	s14, [sp, #32]
 801b8ac:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801b8b0:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b8b4:	f7fd fd0a 	bl	80192cc <calc_line_geometry>
 801b8b8:	4601      	mov	r1, r0
 801b8ba:	2800      	cmp	r0, #0
 801b8bc:	f040 83c4 	bne.w	801c048 <calc_new_geometry+0xeb8>
 801b8c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b8c2:	e6e8      	b.n	801b696 <calc_new_geometry+0x506>
 801b8c4:	9101      	str	r1, [sp, #4]
 801b8c6:	f001 f8b5 	bl	801ca34 <nema_vg_set_error>
 801b8ca:	9901      	ldr	r1, [sp, #4]
 801b8cc:	4608      	mov	r0, r1
 801b8ce:	f001 f8b1 	bl	801ca34 <nema_vg_set_error>
 801b8d2:	9901      	ldr	r1, [sp, #4]
 801b8d4:	4608      	mov	r0, r1
 801b8d6:	b021      	add	sp, #132	@ 0x84
 801b8d8:	ecbd 8b10 	vpop	{d8-d15}
 801b8dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8e0:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b8e4:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b8e8:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b8ec:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b8f0:	f7fd fcec 	bl	80192cc <calc_line_geometry>
 801b8f4:	4601      	mov	r1, r0
 801b8f6:	2800      	cmp	r0, #0
 801b8f8:	f43f ad4b 	beq.w	801b392 <calc_new_geometry+0x202>
 801b8fc:	e70f      	b.n	801b71e <calc_new_geometry+0x58e>
 801b8fe:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b900:	ed91 5a00 	vldr	s10, [r1]
 801b904:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b908:	1c98      	adds	r0, r3, #2
 801b90a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b90c:	edd1 5a01 	vldr	s11, [r1, #4]
 801b910:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b914:	1cd8      	adds	r0, r3, #3
 801b916:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b918:	ed91 7a02 	vldr	s14, [r1, #8]
 801b91c:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b920:	3304      	adds	r3, #4
 801b922:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b924:	edd1 7a03 	vldr	s15, [r1, #12]
 801b928:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b92c:	f1b9 0f00 	cmp.w	r9, #0
 801b930:	d013      	beq.n	801b95a <calc_new_geometry+0x7ca>
 801b932:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801b936:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b93a:	ee35 5a06 	vadd.f32	s10, s10, s12
 801b93e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b942:	ee75 5aa6 	vadd.f32	s11, s11, s13
 801b946:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b94a:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b94e:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b952:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b956:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b95a:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 801ba70 <calc_new_geometry+0x8e0>
 801b95e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801b962:	f898 1000 	ldrb.w	r1, [r8]
 801b966:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801b96a:	2900      	cmp	r1, #0
 801b96c:	d057      	beq.n	801ba1e <calc_new_geometry+0x88e>
 801b96e:	493f      	ldr	r1, [pc, #252]	@ (801ba6c <calc_new_geometry+0x8dc>)
 801b970:	1c58      	adds	r0, r3, #1
 801b972:	ed91 6a03 	vldr	s12, [r1, #12]
 801b976:	edd1 6a04 	vldr	s13, [r1, #16]
 801b97a:	ed91 4a00 	vldr	s8, [r1]
 801b97e:	edd1 4a01 	vldr	s9, [r1, #4]
 801b982:	ee24 3a05 	vmul.f32	s6, s8, s10
 801b986:	ee65 3aa4 	vmul.f32	s7, s11, s9
 801b98a:	ee24 4a07 	vmul.f32	s8, s8, s14
 801b98e:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801b992:	ee26 5a05 	vmul.f32	s10, s12, s10
 801b996:	ee66 7aa7 	vmul.f32	s15, s13, s15
 801b99a:	ee26 7a07 	vmul.f32	s14, s12, s14
 801b99e:	ee65 5aa6 	vmul.f32	s11, s11, s13
 801b9a2:	ed91 6a02 	vldr	s12, [r1, #8]
 801b9a6:	ee75 6a25 	vadd.f32	s13, s10, s11
 801b9aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b9ae:	ee73 3a23 	vadd.f32	s7, s6, s7
 801b9b2:	edd1 7a05 	vldr	s15, [r1, #20]
 801b9b6:	ee74 4a24 	vadd.f32	s9, s8, s9
 801b9ba:	ee73 5a86 	vadd.f32	s11, s7, s12
 801b9be:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801b9c2:	ee34 6a86 	vadd.f32	s12, s9, s12
 801b9c6:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b9ca:	edcd 5a15 	vstr	s11, [sp, #84]	@ 0x54
 801b9ce:	ed8d 6a17 	vstr	s12, [sp, #92]	@ 0x5c
 801b9d2:	edcd 6a16 	vstr	s13, [sp, #88]	@ 0x58
 801b9d6:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b9da:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b9de:	f10c 0104 	add.w	r1, ip, #4
 801b9e2:	4411      	add	r1, r2
 801b9e4:	3302      	adds	r3, #2
 801b9e6:	4462      	add	r2, ip
 801b9e8:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b9ea:	f1b9 0f00 	cmp.w	r9, #0
 801b9ee:	f000 8187 	beq.w	801bd00 <calc_new_geometry+0xb70>
 801b9f2:	ed92 7a00 	vldr	s14, [r2]
 801b9f6:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b9fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b9fe:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801ba02:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ba04:	edd1 6a00 	vldr	s13, [r1]
 801ba08:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801ba0c:	ee36 7a87 	vadd.f32	s14, s13, s14
 801ba10:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801ba14:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801ba18:	e460      	b.n	801b2dc <calc_new_geometry+0x14c>
 801ba1a:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 801ba70 <calc_new_geometry+0x8e0>
 801ba1e:	1c58      	adds	r0, r3, #1
 801ba20:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801ba24:	e7db      	b.n	801b9de <calc_new_geometry+0x84e>
 801ba26:	2e03      	cmp	r6, #3
 801ba28:	f000 80be 	beq.w	801bba8 <calc_new_geometry+0xa18>
 801ba2c:	2e0a      	cmp	r6, #10
 801ba2e:	f040 8478 	bne.w	801c322 <calc_new_geometry+0x1192>
 801ba32:	9b03      	ldr	r3, [sp, #12]
 801ba34:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801ba38:	edd3 7a00 	vldr	s15, [r3]
 801ba3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ba40:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801ba44:	ee17 8a90 	vmov	r8, s15
 801ba48:	2b01      	cmp	r3, #1
 801ba4a:	f000 839a 	beq.w	801c182 <calc_new_geometry+0xff2>
 801ba4e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801ba52:	ea4f 0368 	mov.w	r3, r8, asr #1
 801ba56:	2b00      	cmp	r3, #0
 801ba58:	9304      	str	r3, [sp, #16]
 801ba5a:	f77f ae7a 	ble.w	801b752 <calc_new_geometry+0x5c2>
 801ba5e:	2200      	movs	r2, #0
 801ba60:	9605      	str	r6, [sp, #20]
 801ba62:	f8df 800c 	ldr.w	r8, [pc, #12]	@ 801ba70 <calc_new_geometry+0x8e0>
 801ba66:	4b01      	ldr	r3, [pc, #4]	@ (801ba6c <calc_new_geometry+0x8dc>)
 801ba68:	4616      	mov	r6, r2
 801ba6a:	e056      	b.n	801bb1a <calc_new_geometry+0x98a>
 801ba6c:	20083140 	.word	0x20083140
 801ba70:	2008313c 	.word	0x2008313c
 801ba74:	3727c5ac 	.word	0x3727c5ac
 801ba78:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801ba7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801ba80:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801ba84:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ba86:	eddc 6a00 	vldr	s13, [ip]
 801ba8a:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801ba8e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801ba92:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801ba96:	f898 1000 	ldrb.w	r1, [r8]
 801ba9a:	3601      	adds	r6, #1
 801ba9c:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801baa0:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801baa4:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801baa8:	b1f9      	cbz	r1, 801baea <calc_new_geometry+0x95a>
 801baaa:	ed93 6a03 	vldr	s12, [r3, #12]
 801baae:	edd3 6a04 	vldr	s13, [r3, #16]
 801bab2:	ed93 5a00 	vldr	s10, [r3]
 801bab6:	edd3 5a01 	vldr	s11, [r3, #4]
 801baba:	ee27 5a05 	vmul.f32	s10, s14, s10
 801babe:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bac2:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bac6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801baca:	ee75 5a25 	vadd.f32	s11, s10, s11
 801bace:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bad2:	ed93 6a02 	vldr	s12, [r3, #8]
 801bad6:	edd3 6a05 	vldr	s13, [r3, #20]
 801bada:	ee35 7a86 	vadd.f32	s14, s11, s12
 801bade:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bae2:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bae6:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801baea:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801baee:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801baf2:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801baf6:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bafa:	9303      	str	r3, [sp, #12]
 801bafc:	f7fd fbe6 	bl	80192cc <calc_line_geometry>
 801bb00:	9b03      	ldr	r3, [sp, #12]
 801bb02:	4601      	mov	r1, r0
 801bb04:	2800      	cmp	r0, #0
 801bb06:	f040 829f 	bne.w	801c048 <calc_new_geometry+0xeb8>
 801bb0a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801bb0e:	9a04      	ldr	r2, [sp, #16]
 801bb10:	e885 0003 	stmia.w	r5, {r0, r1}
 801bb14:	4296      	cmp	r6, r2
 801bb16:	f43f ae1b 	beq.w	801b750 <calc_new_geometry+0x5c0>
 801bb1a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bb1c:	f8da 200c 	ldr.w	r2, [sl, #12]
 801bb20:	0088      	lsls	r0, r1, #2
 801bb22:	f100 0c04 	add.w	ip, r0, #4
 801bb26:	4494      	add	ip, r2
 801bb28:	4410      	add	r0, r2
 801bb2a:	1c4a      	adds	r2, r1, #1
 801bb2c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bb2e:	3102      	adds	r1, #2
 801bb30:	ed90 7a00 	vldr	s14, [r0]
 801bb34:	f1b9 0f00 	cmp.w	r9, #0
 801bb38:	d19e      	bne.n	801ba78 <calc_new_geometry+0x8e8>
 801bb3a:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bb3e:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bb40:	eddc 7a00 	vldr	s15, [ip]
 801bb44:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bb48:	e7a5      	b.n	801ba96 <calc_new_geometry+0x906>
 801bb4a:	9b02      	ldr	r3, [sp, #8]
 801bb4c:	2b09      	cmp	r3, #9
 801bb4e:	f47f ac20 	bne.w	801b392 <calc_new_geometry+0x202>
 801bb52:	ed9d 8a1b 	vldr	s16, [sp, #108]	@ 0x6c
 801bb56:	eddd ba19 	vldr	s23, [sp, #100]	@ 0x64
 801bb5a:	ee78 6a6b 	vsub.f32	s13, s16, s23
 801bb5e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bb62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb66:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bb6a:	bf48      	it	mi
 801bb6c:	eef1 6a66 	vnegmi.f32	s13, s13
 801bb70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb74:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801bb78:	bf4c      	ite	mi
 801bb7a:	eeb1 7a48 	vnegmi.f32	s14, s16
 801bb7e:	eeb0 7a48 	vmovpl.f32	s14, s16
 801bb82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb86:	eddd 8a1c 	vldr	s17, [sp, #112]	@ 0x70
 801bb8a:	ed9d ca1a 	vldr	s24, [sp, #104]	@ 0x68
 801bb8e:	f100 80e4 	bmi.w	801bd5a <calc_new_geometry+0xbca>
 801bb92:	eef4 bac7 	vcmpe.f32	s23, s14
 801bb96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb9a:	f300 80e6 	bgt.w	801bd6a <calc_new_geometry+0xbda>
 801bb9e:	ed5f 7a4b 	vldr	s15, [pc, #-300]	@ 801ba74 <calc_new_geometry+0x8e4>
 801bba2:	ee6b 7aa7 	vmul.f32	s15, s23, s15
 801bba6:	e0eb      	b.n	801bd80 <calc_new_geometry+0xbf0>
 801bba8:	9b03      	ldr	r3, [sp, #12]
 801bbaa:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801bbae:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801bbb2:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bbb6:	edd3 7a00 	vldr	s15, [r3]
 801bbba:	f1b9 0f00 	cmp.w	r9, #0
 801bbbe:	f000 8097 	beq.w	801bcf0 <calc_new_geometry+0xb60>
 801bbc2:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801bbc6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bbca:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bbce:	f8df 841c 	ldr.w	r8, [pc, #1052]	@ 801bfec <calc_new_geometry+0xe5c>
 801bbd2:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bbd6:	f7ff bb81 	b.w	801b2dc <calc_new_geometry+0x14c>
 801bbda:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bbdc:	ed91 7a00 	vldr	s14, [r1]
 801bbe0:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bbe4:	3302      	adds	r3, #2
 801bbe6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bbe8:	edd1 7a01 	vldr	s15, [r1, #4]
 801bbec:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bbf0:	f1b9 0f00 	cmp.w	r9, #0
 801bbf4:	d00b      	beq.n	801bc0e <calc_new_geometry+0xa7e>
 801bbf6:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801bbfa:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801bbfe:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bc02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bc06:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc0a:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc0e:	f8df 83dc 	ldr.w	r8, [pc, #988]	@ 801bfec <calc_new_geometry+0xe5c>
 801bc12:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bc16:	f898 1000 	ldrb.w	r1, [r8]
 801bc1a:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bc1e:	2900      	cmp	r1, #0
 801bc20:	f43f aefd 	beq.w	801ba1e <calc_new_geometry+0x88e>
 801bc24:	49ef      	ldr	r1, [pc, #956]	@ (801bfe4 <calc_new_geometry+0xe54>)
 801bc26:	1c58      	adds	r0, r3, #1
 801bc28:	ed91 6a03 	vldr	s12, [r1, #12]
 801bc2c:	edd1 6a04 	vldr	s13, [r1, #16]
 801bc30:	ed91 5a00 	vldr	s10, [r1]
 801bc34:	edd1 5a01 	vldr	s11, [r1, #4]
 801bc38:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bc3c:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bc40:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bc44:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bc48:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bc4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bc50:	edd1 6a02 	vldr	s13, [r1, #8]
 801bc54:	edd1 7a05 	vldr	s15, [r1, #20]
 801bc58:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bc5c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bc60:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bc64:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc68:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bc6c:	e6b7      	b.n	801b9de <calc_new_geometry+0x84e>
 801bc6e:	f8df 837c 	ldr.w	r8, [pc, #892]	@ 801bfec <calc_new_geometry+0xe5c>
 801bc72:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bc76:	f7ff bb31 	b.w	801b2dc <calc_new_geometry+0x14c>
 801bc7a:	f1ae 0e05 	sub.w	lr, lr, #5
 801bc7e:	f1be 0f03 	cmp.w	lr, #3
 801bc82:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801bc86:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bc8a:	f240 8206 	bls.w	801c09a <calc_new_geometry+0xf0a>
 801bc8e:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 801bfec <calc_new_geometry+0xe5c>
 801bc92:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc96:	f898 1000 	ldrb.w	r1, [r8]
 801bc9a:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc9e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bca2:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bca6:	2900      	cmp	r1, #0
 801bca8:	f43f ae99 	beq.w	801b9de <calc_new_geometry+0x84e>
 801bcac:	49cd      	ldr	r1, [pc, #820]	@ (801bfe4 <calc_new_geometry+0xe54>)
 801bcae:	ed91 6a03 	vldr	s12, [r1, #12]
 801bcb2:	edd1 6a04 	vldr	s13, [r1, #16]
 801bcb6:	ed91 5a00 	vldr	s10, [r1]
 801bcba:	edd1 5a01 	vldr	s11, [r1, #4]
 801bcbe:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bcc2:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bcc6:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bcca:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bcce:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bcd2:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bcd6:	edd1 6a02 	vldr	s13, [r1, #8]
 801bcda:	edd1 7a05 	vldr	s15, [r1, #20]
 801bcde:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bce2:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bce6:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bcea:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bcee:	e676      	b.n	801b9de <calc_new_geometry+0x84e>
 801bcf0:	f8df 82f8 	ldr.w	r8, [pc, #760]	@ 801bfec <calc_new_geometry+0xe5c>
 801bcf4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bcf8:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bcfc:	f7ff baee 	b.w	801b2dc <calc_new_geometry+0x14c>
 801bd00:	edd2 7a00 	vldr	s15, [r2]
 801bd04:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bd08:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd0a:	ed91 7a00 	vldr	s14, [r1]
 801bd0e:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bd12:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bd16:	f7ff bae1 	b.w	801b2dc <calc_new_geometry+0x14c>
 801bd1a:	ed9d 7a1d 	vldr	s14, [sp, #116]	@ 0x74
 801bd1e:	eddd 7a1e 	vldr	s15, [sp, #120]	@ 0x78
 801bd22:	e595      	b.n	801b850 <calc_new_geometry+0x6c0>
 801bd24:	eef4 cae6 	vcmpe.f32	s25, s13
 801bd28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd2c:	f73f ab9e 	bgt.w	801b46c <calc_new_geometry+0x2dc>
 801bd30:	eeb4 dae6 	vcmpe.f32	s26, s13
 801bd34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd38:	f73f ab98 	bgt.w	801b46c <calc_new_geometry+0x2dc>
 801bd3c:	eef4 cac6 	vcmpe.f32	s25, s12
 801bd40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd44:	f53f ab92 	bmi.w	801b46c <calc_new_geometry+0x2dc>
 801bd48:	eeb4 dac6 	vcmpe.f32	s26, s12
 801bd4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd50:	bf54      	ite	pl
 801bd52:	2201      	movpl	r2, #1
 801bd54:	2200      	movmi	r2, #0
 801bd56:	f7ff bb8a 	b.w	801b46e <calc_new_geometry+0x2de>
 801bd5a:	eef1 7a6b 	vneg.f32	s15, s23
 801bd5e:	eef4 7ac7 	vcmpe.f32	s15, s14
 801bd62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd66:	f340 8202 	ble.w	801c16e <calc_new_geometry+0xfde>
 801bd6a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bd6e:	eddf 7aa0 	vldr	s15, [pc, #640]	@ 801bff0 <calc_new_geometry+0xe60>
 801bd72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd76:	bf4c      	ite	mi
 801bd78:	ee68 7a67 	vnmulmi.f32	s15, s16, s15
 801bd7c:	ee68 7a27 	vmulpl.f32	s15, s16, s15
 801bd80:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bd84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd88:	d82e      	bhi.n	801bde8 <calc_new_geometry+0xc58>
 801bd8a:	ee78 6acc 	vsub.f32	s13, s17, s24
 801bd8e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bd92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd96:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801bd9a:	bf48      	it	mi
 801bd9c:	eef1 6a66 	vnegmi.f32	s13, s13
 801bda0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bda4:	eeb5 cac0 	vcmpe.f32	s24, #0.0
 801bda8:	bf4c      	ite	mi
 801bdaa:	eeb1 7a68 	vnegmi.f32	s14, s17
 801bdae:	eeb0 7a68 	vmovpl.f32	s14, s17
 801bdb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdb6:	f100 81f1 	bmi.w	801c19c <calc_new_geometry+0x100c>
 801bdba:	eeb4 cac7 	vcmpe.f32	s24, s14
 801bdbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdc2:	f340 81d9 	ble.w	801c178 <calc_new_geometry+0xfe8>
 801bdc6:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801bdca:	eddf 7a89 	vldr	s15, [pc, #548]	@ 801bff0 <calc_new_geometry+0xe60>
 801bdce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdd2:	bf4c      	ite	mi
 801bdd4:	ee68 7ae7 	vnmulmi.f32	s15, s17, s15
 801bdd8:	ee68 7aa7 	vmulpl.f32	s15, s17, s15
 801bddc:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bde0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bde4:	f67f aad5 	bls.w	801b392 <calc_new_geometry+0x202>
 801bde8:	eddd ca15 	vldr	s25, [sp, #84]	@ 0x54
 801bdec:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801bdf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdf4:	f100 815e 	bmi.w	801c0b4 <calc_new_geometry+0xf24>
 801bdf8:	eddf 7a7d 	vldr	s15, [pc, #500]	@ 801bff0 <calc_new_geometry+0xe60>
 801bdfc:	eef4 cae7 	vcmpe.f32	s25, s15
 801be00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be04:	f240 815e 	bls.w	801c0c4 <calc_new_geometry+0xf34>
 801be08:	eddd da16 	vldr	s27, [sp, #88]	@ 0x58
 801be0c:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be14:	f100 81cf 	bmi.w	801c1b6 <calc_new_geometry+0x1026>
 801be18:	eddf 7a75 	vldr	s15, [pc, #468]	@ 801bff0 <calc_new_geometry+0xe60>
 801be1c:	eef4 dae7 	vcmpe.f32	s27, s15
 801be20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be24:	f240 814e 	bls.w	801c0c4 <calc_new_geometry+0xf34>
 801be28:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801be2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be30:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801be34:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801be38:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801be3c:	f100 81d1 	bmi.w	801c1e2 <calc_new_geometry+0x1052>
 801be40:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be48:	f100 81c8 	bmi.w	801c1dc <calc_new_geometry+0x104c>
 801be4c:	ed9d ea17 	vldr	s28, [sp, #92]	@ 0x5c
 801be50:	ee2e ea0b 	vmul.f32	s28, s28, s22
 801be54:	eeb0 0a4e 	vmov.f32	s0, s28
 801be58:	f015 fabc 	bl	80313d4 <cosf>
 801be5c:	eeb0 da40 	vmov.f32	s26, s0
 801be60:	eeb0 0a4e 	vmov.f32	s0, s28
 801be64:	f015 fb02 	bl	803146c <sinf>
 801be68:	ee28 5a0d 	vmul.f32	s10, s16, s26
 801be6c:	ee68 5a80 	vmul.f32	s11, s17, s0
 801be70:	ee2b 7ac0 	vnmul.f32	s14, s23, s0
 801be74:	ee6c 6a00 	vmul.f32	s13, s24, s0
 801be78:	ee6c 7a0d 	vmul.f32	s15, s24, s26
 801be7c:	ee28 8a40 	vnmul.f32	s16, s16, s0
 801be80:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801be84:	ee2b 6a8d 	vmul.f32	s12, s23, s26
 801be88:	ee35 ca25 	vadd.f32	s24, s10, s11
 801be8c:	ee38 fa28 	vadd.f32	s30, s16, s17
 801be90:	ee76 ba26 	vadd.f32	s23, s12, s13
 801be94:	ee37 8a27 	vadd.f32	s16, s14, s15
 801be98:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801be9c:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801bea0:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801bea4:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801bea8:	ee76 8a65 	vsub.f32	s17, s12, s11
 801beac:	ee76 eac5 	vsub.f32	s29, s13, s10
 801beb0:	ee28 7aa8 	vmul.f32	s14, s17, s17
 801beb4:	ee6e 7aae 	vmul.f32	s15, s29, s29
 801beb8:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bebc:	eef5 7a40 	vcmp.f32	s15, #0.0
 801bec0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801bec4:	ee76 4a25 	vadd.f32	s9, s12, s11
 801bec8:	ee76 fa85 	vadd.f32	s31, s13, s10
 801becc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bed0:	eeb0 ea40 	vmov.f32	s28, s0
 801bed4:	ee64 4a87 	vmul.f32	s9, s9, s14
 801bed8:	ee6f fa87 	vmul.f32	s31, s31, s14
 801bedc:	f000 821c 	beq.w	801c318 <calc_new_geometry+0x1188>
 801bee0:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 801bee4:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 801bee8:	ee84 0a27 	vdiv.f32	s0, s8, s15
 801beec:	ee30 0a47 	vsub.f32	s0, s0, s14
 801bef0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bef8:	f100 82c7 	bmi.w	801c48a <calc_new_geometry+0x12fa>
 801befc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801bf00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf04:	eeb1 8ac0 	vsqrt.f32	s16, s0
 801bf08:	f100 82e8 	bmi.w	801c4dc <calc_new_geometry+0x134c>
 801bf0c:	ee28 fa28 	vmul.f32	s30, s16, s17
 801bf10:	ee68 ea2e 	vmul.f32	s29, s16, s29
 801bf14:	ee3f cacf 	vsub.f32	s24, s31, s30
 801bf18:	ee7e baa4 	vadd.f32	s23, s29, s9
 801bf1c:	ee36 0acc 	vsub.f32	s0, s13, s24
 801bf20:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801bf24:	edcd 4a06 	vstr	s9, [sp, #24]
 801bf28:	edcd 6a05 	vstr	s13, [sp, #20]
 801bf2c:	ed8d 6a04 	vstr	s12, [sp, #16]
 801bf30:	ed8d 5a07 	vstr	s10, [sp, #28]
 801bf34:	edcd 5a02 	vstr	s11, [sp, #8]
 801bf38:	f015 f938 	bl	80311ac <atan2f>
 801bf3c:	eddd 5a02 	vldr	s11, [sp, #8]
 801bf40:	ed9d 5a07 	vldr	s10, [sp, #28]
 801bf44:	eeb0 8a40 	vmov.f32	s16, s0
 801bf48:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801bf4c:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801bf50:	edcd 5a03 	vstr	s11, [sp, #12]
 801bf54:	ed8d 5a02 	vstr	s10, [sp, #8]
 801bf58:	f015 f928 	bl	80311ac <atan2f>
 801bf5c:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801bf60:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801bf64:	ee78 7ac8 	vsub.f32	s15, s17, s16
 801bf68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bf6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf70:	bf44      	itt	mi
 801bf72:	ed9f 7a1d 	vldrmi	s14, [pc, #116]	@ 801bfe8 <calc_new_geometry+0xe58>
 801bf76:	ee77 7a87 	vaddmi.f32	s15, s15, s14
 801bf7a:	eef4 7aea 	vcmpe.f32	s15, s21
 801bf7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf82:	ed9d 5a02 	vldr	s10, [sp, #8]
 801bf86:	eddd 5a03 	vldr	s11, [sp, #12]
 801bf8a:	ed9d 6a04 	vldr	s12, [sp, #16]
 801bf8e:	eddd 6a05 	vldr	s13, [sp, #20]
 801bf92:	eddd 4a06 	vldr	s9, [sp, #24]
 801bf96:	f140 819e 	bpl.w	801c2d6 <calc_new_geometry+0x1146>
 801bf9a:	42a5      	cmp	r5, r4
 801bf9c:	f000 8252 	beq.w	801c444 <calc_new_geometry+0x12b4>
 801bfa0:	ee6c 7a2d 	vmul.f32	s15, s24, s27
 801bfa4:	ee6b baac 	vmul.f32	s23, s23, s25
 801bfa8:	ee2d 7a2b 	vmul.f32	s14, s26, s23
 801bfac:	ee6e ba2b 	vmul.f32	s23, s28, s23
 801bfb0:	ee2e ea27 	vmul.f32	s28, s28, s15
 801bfb4:	ee6d 7a27 	vmul.f32	s15, s26, s15
 801bfb8:	ee37 ea4e 	vsub.f32	s28, s14, s28
 801bfbc:	ee3b caa7 	vadd.f32	s24, s23, s15
 801bfc0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801bfc4:	2d00      	cmp	r5, #0
 801bfc6:	f000 8148 	beq.w	801c25a <calc_new_geometry+0x10ca>
 801bfca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfce:	f300 8236 	bgt.w	801c43e <calc_new_geometry+0x12ae>
 801bfd2:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801bfd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfda:	bf48      	it	mi
 801bfdc:	2101      	movmi	r1, #1
 801bfde:	d415      	bmi.n	801c00c <calc_new_geometry+0xe7c>
 801bfe0:	f7ff b9d7 	b.w	801b392 <calc_new_geometry+0x202>
 801bfe4:	20083140 	.word	0x20083140
 801bfe8:	43b40000 	.word	0x43b40000
 801bfec:	2008313c 	.word	0x2008313c
 801bff0:	3727c5ac 	.word	0x3727c5ac
 801bff4:	b727c5ac 	.word	0xb727c5ac
 801bff8:	00000000 	.word	0x00000000
 801bffc:	eef4 bae8 	vcmpe.f32	s23, s17
 801c000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c004:	eeb0 8a6b 	vmov.f32	s16, s23
 801c008:	f57f a9c3 	bpl.w	801b392 <calc_new_geometry+0x202>
 801c00c:	ee78 ba29 	vadd.f32	s23, s16, s19
 801c010:	eef4 bae8 	vcmpe.f32	s23, s17
 801c014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c018:	bfa4      	itt	ge
 801c01a:	3102      	addge	r1, #2
 801c01c:	b2c9      	uxtbge	r1, r1
 801c01e:	eeb0 0a48 	vmov.f32	s0, s16
 801c022:	eef0 2a6d 	vmov.f32	s5, s27
 801c026:	eeb0 2a6c 	vmov.f32	s4, s25
 801c02a:	eef0 1a4c 	vmov.f32	s3, s24
 801c02e:	eeb0 1a4e 	vmov.f32	s2, s28
 801c032:	a80e      	add	r0, sp, #56	@ 0x38
 801c034:	bf54      	ite	pl
 801c036:	eef0 0a68 	vmovpl.f32	s1, s17
 801c03a:	eef0 0a6b 	vmovmi.f32	s1, s23
 801c03e:	f7fe ff27 	bl	801ae90 <arc_to_cubic>
 801c042:	4601      	mov	r1, r0
 801c044:	2800      	cmp	r0, #0
 801c046:	d0d9      	beq.n	801bffc <calc_new_geometry+0xe6c>
 801c048:	9101      	str	r1, [sp, #4]
 801c04a:	f000 fcf3 	bl	801ca34 <nema_vg_set_error>
 801c04e:	9901      	ldr	r1, [sp, #4]
 801c050:	4608      	mov	r0, r1
 801c052:	f7ff bb64 	b.w	801b71e <calc_new_geometry+0x58e>
 801c056:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c05a:	f8d1 e000 	ldr.w	lr, [r1]
 801c05e:	1c98      	adds	r0, r3, #2
 801c060:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c062:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801c066:	f8d1 e004 	ldr.w	lr, [r1, #4]
 801c06a:	1cd8      	adds	r0, r3, #3
 801c06c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c06e:	f8cd e058 	str.w	lr, [sp, #88]	@ 0x58
 801c072:	f10c 0c0c 	add.w	ip, ip, #12
 801c076:	f8d1 e008 	ldr.w	lr, [r1, #8]
 801c07a:	eb02 010c 	add.w	r1, r2, ip
 801c07e:	f103 0804 	add.w	r8, r3, #4
 801c082:	9103      	str	r1, [sp, #12]
 801c084:	4603      	mov	r3, r0
 801c086:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801c088:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c08a:	f8cd e05c 	str.w	lr, [sp, #92]	@ 0x5c
 801c08e:	f88d 403b 	strb.w	r4, [sp, #59]	@ 0x3b
 801c092:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c094:	911c      	str	r1, [sp, #112]	@ 0x70
 801c096:	f7ff b907 	b.w	801b2a8 <calc_new_geometry+0x118>
 801c09a:	ee37 7a07 	vadd.f32	s14, s14, s14
 801c09e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801c0a2:	ed9d 6a1b 	vldr	s12, [sp, #108]	@ 0x6c
 801c0a6:	eddd 6a1c 	vldr	s13, [sp, #112]	@ 0x70
 801c0aa:	ee37 7a46 	vsub.f32	s14, s14, s12
 801c0ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c0b2:	e5ec      	b.n	801bc8e <calc_new_geometry+0xafe>
 801c0b4:	ed5f 7a31 	vldr	s15, [pc, #-196]	@ 801bff4 <calc_new_geometry+0xe64>
 801c0b8:	eef4 cae7 	vcmpe.f32	s25, s15
 801c0bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0c0:	f6ff aea2 	blt.w	801be08 <calc_new_geometry+0xc78>
 801c0c4:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c0c8:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c0cc:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c0d0:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c0d4:	f7fd f8fa 	bl	80192cc <calc_line_geometry>
 801c0d8:	4601      	mov	r1, r0
 801c0da:	2800      	cmp	r0, #0
 801c0dc:	f43f a959 	beq.w	801b392 <calc_new_geometry+0x202>
 801c0e0:	9101      	str	r1, [sp, #4]
 801c0e2:	f000 fca7 	bl	801ca34 <nema_vg_set_error>
 801c0e6:	9901      	ldr	r1, [sp, #4]
 801c0e8:	e7b2      	b.n	801c050 <calc_new_geometry+0xec0>
 801c0ea:	f1ae 0e05 	sub.w	lr, lr, #5
 801c0ee:	f1be 0f03 	cmp.w	lr, #3
 801c0f2:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801c0f6:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801c0fa:	d91f      	bls.n	801c13c <calc_new_geometry+0xfac>
 801c0fc:	eef0 5a66 	vmov.f32	s11, s13
 801c100:	eeb0 5a46 	vmov.f32	s10, s12
 801c104:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801c108:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801c10c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c10e:	ed91 7a00 	vldr	s14, [r1]
 801c112:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c116:	3302      	adds	r3, #2
 801c118:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c11a:	edd1 7a01 	vldr	s15, [r1, #4]
 801c11e:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c122:	f1b9 0f00 	cmp.w	r9, #0
 801c126:	f43f ac18 	beq.w	801b95a <calc_new_geometry+0x7ca>
 801c12a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801c12e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c132:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c136:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c13a:	e40e      	b.n	801b95a <calc_new_geometry+0x7ca>
 801c13c:	ee36 5a06 	vadd.f32	s10, s12, s12
 801c140:	ee76 5aa6 	vadd.f32	s11, s13, s13
 801c144:	ed9d 7a1b 	vldr	s14, [sp, #108]	@ 0x6c
 801c148:	eddd 7a1c 	vldr	s15, [sp, #112]	@ 0x70
 801c14c:	ee35 5a47 	vsub.f32	s10, s10, s14
 801c150:	ee75 5ae7 	vsub.f32	s11, s11, s15
 801c154:	e7d6      	b.n	801c104 <calc_new_geometry+0xf74>
 801c156:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c15a:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c15e:	f7fd f855 	bl	801920c <calc_move_geometry>
 801c162:	4601      	mov	r1, r0
 801c164:	2800      	cmp	r0, #0
 801c166:	f43f a914 	beq.w	801b392 <calc_new_geometry+0x202>
 801c16a:	f7ff bad8 	b.w	801b71e <calc_new_geometry+0x58e>
 801c16e:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 801bff0 <calc_new_geometry+0xe60>
 801c172:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c176:	e603      	b.n	801bd80 <calc_new_geometry+0xbf0>
 801c178:	ed5f 7a63 	vldr	s15, [pc, #-396]	@ 801bff0 <calc_new_geometry+0xe60>
 801c17c:	ee6c 7a27 	vmul.f32	s15, s24, s15
 801c180:	e62c      	b.n	801bddc <calc_new_geometry+0xc4c>
 801c182:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c186:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c18a:	f7fd f83f 	bl	801920c <calc_move_geometry>
 801c18e:	4601      	mov	r1, r0
 801c190:	2800      	cmp	r0, #0
 801c192:	f47f af59 	bne.w	801c048 <calc_new_geometry+0xeb8>
 801c196:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c19a:	e458      	b.n	801ba4e <calc_new_geometry+0x8be>
 801c19c:	eef1 7a4c 	vneg.f32	s15, s24
 801c1a0:	eef4 7ac7 	vcmpe.f32	s15, s14
 801c1a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1a8:	f73f ae0d 	bgt.w	801bdc6 <calc_new_geometry+0xc36>
 801c1ac:	ed1f 7a70 	vldr	s14, [pc, #-448]	@ 801bff0 <calc_new_geometry+0xe60>
 801c1b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c1b4:	e612      	b.n	801bddc <calc_new_geometry+0xc4c>
 801c1b6:	ed5f 7a71 	vldr	s15, [pc, #-452]	@ 801bff4 <calc_new_geometry+0xe64>
 801c1ba:	eef4 dae7 	vcmpe.f32	s27, s15
 801c1be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1c2:	f6bf af7f 	bge.w	801c0c4 <calc_new_geometry+0xf34>
 801c1c6:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c1ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1ce:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801c1d2:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801c1d6:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801c1da:	d402      	bmi.n	801c1e2 <calc_new_geometry+0x1052>
 801c1dc:	eef1 da6d 	vneg.f32	s27, s27
 801c1e0:	e634      	b.n	801be4c <calc_new_geometry+0xcbc>
 801c1e2:	eef1 ca6c 	vneg.f32	s25, s25
 801c1e6:	e62b      	b.n	801be40 <calc_new_geometry+0xcb0>
 801c1e8:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c1ec:	2b00      	cmp	r3, #0
 801c1ee:	f000 8121 	beq.w	801c434 <calc_new_geometry+0x12a4>
 801c1f2:	ed5f 1a7f 	vldr	s3, [pc, #-508]	@ 801bff8 <calc_new_geometry+0xe68>
 801c1f6:	eeb0 1a61 	vmov.f32	s2, s3
 801c1fa:	4bc4      	ldr	r3, [pc, #784]	@ (801c50c <calc_new_geometry+0x137c>)
 801c1fc:	781b      	ldrb	r3, [r3, #0]
 801c1fe:	b1e3      	cbz	r3, 801c23a <calc_new_geometry+0x10aa>
 801c200:	4bc3      	ldr	r3, [pc, #780]	@ (801c510 <calc_new_geometry+0x1380>)
 801c202:	edd3 6a04 	vldr	s13, [r3, #16]
 801c206:	edd3 7a00 	vldr	s15, [r3]
 801c20a:	ed93 7a01 	vldr	s14, [r3, #4]
 801c20e:	ed93 6a03 	vldr	s12, [r3, #12]
 801c212:	ee21 7a87 	vmul.f32	s14, s3, s14
 801c216:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c21a:	ee61 1aa6 	vmul.f32	s3, s3, s13
 801c21e:	ee21 1a06 	vmul.f32	s2, s2, s12
 801c222:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c226:	ee71 1a21 	vadd.f32	s3, s2, s3
 801c22a:	edd3 6a02 	vldr	s13, [r3, #8]
 801c22e:	ed93 7a05 	vldr	s14, [r3, #20]
 801c232:	ee37 1aa6 	vadd.f32	s2, s15, s13
 801c236:	ee71 1a87 	vadd.f32	s3, s3, s14
 801c23a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 801c23e:	4bb5      	ldr	r3, [pc, #724]	@ (801c514 <calc_new_geometry+0x1384>)
 801c240:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c244:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c248:	625a      	str	r2, [r3, #36]	@ 0x24
 801c24a:	f7fd f83f 	bl	80192cc <calc_line_geometry>
 801c24e:	4601      	mov	r1, r0
 801c250:	2800      	cmp	r0, #0
 801c252:	f43f aa68 	beq.w	801b726 <calc_new_geometry+0x596>
 801c256:	f7ff ba62 	b.w	801b71e <calc_new_geometry+0x58e>
 801c25a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c25e:	eef0 ba68 	vmov.f32	s23, s17
 801c262:	d50b      	bpl.n	801c27c <calc_new_geometry+0x10ec>
 801c264:	eef0 8a48 	vmov.f32	s17, s16
 801c268:	ed9f 8aab 	vldr	s16, [pc, #684]	@ 801c518 <calc_new_geometry+0x1388>
 801c26c:	ee38 8a88 	vadd.f32	s16, s17, s16
 801c270:	b125      	cbz	r5, 801c27c <calc_new_geometry+0x10ec>
 801c272:	eef0 8a48 	vmov.f32	s17, s16
 801c276:	eeb0 8a6b 	vmov.f32	s16, s23
 801c27a:	e6aa      	b.n	801bfd2 <calc_new_geometry+0xe42>
 801c27c:	eeb4 8aeb 	vcmpe.f32	s16, s23
 801c280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c284:	bfc8      	it	gt
 801c286:	2101      	movgt	r1, #1
 801c288:	dc09      	bgt.n	801c29e <calc_new_geometry+0x110e>
 801c28a:	f7ff b882 	b.w	801b392 <calc_new_geometry+0x202>
 801c28e:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c296:	eeb0 8a68 	vmov.f32	s16, s17
 801c29a:	f77f a87a 	ble.w	801b392 <calc_new_geometry+0x202>
 801c29e:	ee78 8a69 	vsub.f32	s17, s16, s19
 801c2a2:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2aa:	bf9c      	itt	ls
 801c2ac:	3102      	addls	r1, #2
 801c2ae:	b2c9      	uxtbls	r1, r1
 801c2b0:	eeb0 0a48 	vmov.f32	s0, s16
 801c2b4:	eef0 2a6d 	vmov.f32	s5, s27
 801c2b8:	eeb0 2a6c 	vmov.f32	s4, s25
 801c2bc:	eef0 1a4c 	vmov.f32	s3, s24
 801c2c0:	eeb0 1a4e 	vmov.f32	s2, s28
 801c2c4:	a80e      	add	r0, sp, #56	@ 0x38
 801c2c6:	fe78 0aab 	vselgt.f32	s1, s17, s23
 801c2ca:	f7fe fde1 	bl	801ae90 <arc_to_cubic>
 801c2ce:	4601      	mov	r1, r0
 801c2d0:	2800      	cmp	r0, #0
 801c2d2:	d0dc      	beq.n	801c28e <calc_new_geometry+0x10fe>
 801c2d4:	e6b8      	b.n	801c048 <calc_new_geometry+0xeb8>
 801c2d6:	db02      	blt.n	801c2de <calc_new_geometry+0x114e>
 801c2d8:	42a5      	cmp	r5, r4
 801c2da:	f43f ae61 	beq.w	801bfa0 <calc_new_geometry+0xe10>
 801c2de:	ee74 baee 	vsub.f32	s23, s9, s29
 801c2e2:	ee3f ca2f 	vadd.f32	s24, s30, s31
 801c2e6:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801c2ea:	ee36 0acc 	vsub.f32	s0, s13, s24
 801c2ee:	ed8d 5a03 	vstr	s10, [sp, #12]
 801c2f2:	edcd 5a02 	vstr	s11, [sp, #8]
 801c2f6:	f014 ff59 	bl	80311ac <atan2f>
 801c2fa:	eddd 5a02 	vldr	s11, [sp, #8]
 801c2fe:	ed9d 5a03 	vldr	s10, [sp, #12]
 801c302:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801c306:	ee20 8a0a 	vmul.f32	s16, s0, s20
 801c30a:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801c30e:	f014 ff4d 	bl	80311ac <atan2f>
 801c312:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801c316:	e643      	b.n	801bfa0 <calc_new_geometry+0xe10>
 801c318:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801c31c:	4608      	mov	r0, r1
 801c31e:	f7ff b9fe 	b.w	801b71e <calc_new_geometry+0x58e>
 801c322:	2e0b      	cmp	r6, #11
 801c324:	f47f ab79 	bne.w	801ba1a <calc_new_geometry+0x88a>
 801c328:	9b03      	ldr	r3, [sp, #12]
 801c32a:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c32e:	edd3 7a00 	vldr	s15, [r3]
 801c332:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c336:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c33a:	ee17 8a90 	vmov	r8, s15
 801c33e:	2b01      	cmp	r3, #1
 801c340:	f000 808c 	beq.w	801c45c <calc_new_geometry+0x12cc>
 801c344:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c348:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c34c:	2b00      	cmp	r3, #0
 801c34e:	9304      	str	r3, [sp, #16]
 801c350:	f77e affe 	ble.w	801b350 <calc_new_geometry+0x1c0>
 801c354:	2100      	movs	r1, #0
 801c356:	9605      	str	r6, [sp, #20]
 801c358:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 801c50c <calc_new_geometry+0x137c>
 801c35c:	464e      	mov	r6, r9
 801c35e:	4b6c      	ldr	r3, [pc, #432]	@ (801c510 <calc_new_geometry+0x1380>)
 801c360:	4689      	mov	r9, r1
 801c362:	e052      	b.n	801c40a <calc_new_geometry+0x127a>
 801c364:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801c368:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c36c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c370:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c372:	eddc 6a00 	vldr	s13, [ip]
 801c376:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801c37a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801c37e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c382:	f898 1000 	ldrb.w	r1, [r8]
 801c386:	f109 0901 	add.w	r9, r9, #1
 801c38a:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801c38e:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801c392:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801c396:	b1f9      	cbz	r1, 801c3d8 <calc_new_geometry+0x1248>
 801c398:	ed93 6a03 	vldr	s12, [r3, #12]
 801c39c:	edd3 6a04 	vldr	s13, [r3, #16]
 801c3a0:	ed93 5a00 	vldr	s10, [r3]
 801c3a4:	edd3 5a01 	vldr	s11, [r3, #4]
 801c3a8:	ee27 5a05 	vmul.f32	s10, s14, s10
 801c3ac:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801c3b0:	ee27 7a06 	vmul.f32	s14, s14, s12
 801c3b4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c3b8:	ee35 6a25 	vadd.f32	s12, s10, s11
 801c3bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c3c0:	edd3 6a02 	vldr	s13, [r3, #8]
 801c3c4:	edd3 7a05 	vldr	s15, [r3, #20]
 801c3c8:	ee76 6a26 	vadd.f32	s13, s12, s13
 801c3cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 801c3d0:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801c3d4:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c3d8:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c3dc:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c3e0:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c3e4:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c3e8:	9303      	str	r3, [sp, #12]
 801c3ea:	f7fc ff6f 	bl	80192cc <calc_line_geometry>
 801c3ee:	9b03      	ldr	r3, [sp, #12]
 801c3f0:	4601      	mov	r1, r0
 801c3f2:	2800      	cmp	r0, #0
 801c3f4:	f47f ae28 	bne.w	801c048 <calc_new_geometry+0xeb8>
 801c3f8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c3fc:	9a04      	ldr	r2, [sp, #16]
 801c3fe:	e885 0003 	stmia.w	r5, {r0, r1}
 801c402:	4591      	cmp	r9, r2
 801c404:	d025      	beq.n	801c452 <calc_new_geometry+0x12c2>
 801c406:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c40a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c40c:	0088      	lsls	r0, r1, #2
 801c40e:	f100 0c04 	add.w	ip, r0, #4
 801c412:	4494      	add	ip, r2
 801c414:	4410      	add	r0, r2
 801c416:	1c4a      	adds	r2, r1, #1
 801c418:	920f      	str	r2, [sp, #60]	@ 0x3c
 801c41a:	3102      	adds	r1, #2
 801c41c:	ed90 7a00 	vldr	s14, [r0]
 801c420:	2e00      	cmp	r6, #0
 801c422:	d19f      	bne.n	801c364 <calc_new_geometry+0x11d4>
 801c424:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c428:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c42a:	eddc 7a00 	vldr	s15, [ip]
 801c42e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c432:	e7a6      	b.n	801c382 <calc_new_geometry+0x11f2>
 801c434:	ed9d 1a1d 	vldr	s2, [sp, #116]	@ 0x74
 801c438:	eddd 1a1e 	vldr	s3, [sp, #120]	@ 0x78
 801c43c:	e6dd      	b.n	801c1fa <calc_new_geometry+0x106a>
 801c43e:	eef0 ba48 	vmov.f32	s23, s16
 801c442:	e711      	b.n	801c268 <calc_new_geometry+0x10d8>
 801c444:	eef4 7aea 	vcmpe.f32	s15, s21
 801c448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c44c:	f6bf ada8 	bge.w	801bfa0 <calc_new_geometry+0xe10>
 801c450:	e745      	b.n	801c2de <calc_new_geometry+0x114e>
 801c452:	9e05      	ldr	r6, [sp, #20]
 801c454:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c458:	f7ff b9d6 	b.w	801b808 <calc_new_geometry+0x678>
 801c45c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c460:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c464:	f7fc fed2 	bl	801920c <calc_move_geometry>
 801c468:	4601      	mov	r1, r0
 801c46a:	2800      	cmp	r0, #0
 801c46c:	f47f adec 	bne.w	801c048 <calc_new_geometry+0xeb8>
 801c470:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c474:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c478:	2b00      	cmp	r3, #0
 801c47a:	9304      	str	r3, [sp, #16]
 801c47c:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c480:	f77f ab63 	ble.w	801bb4a <calc_new_geometry+0x9ba>
 801c484:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c488:	e764      	b.n	801c354 <calc_new_geometry+0x11c4>
 801c48a:	ee27 0a87 	vmul.f32	s0, s15, s14
 801c48e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801c492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c496:	eef1 8ac0 	vsqrt.f32	s17, s0
 801c49a:	d41c      	bmi.n	801c4d6 <calc_new_geometry+0x1346>
 801c49c:	ee6c caa8 	vmul.f32	s25, s25, s17
 801c4a0:	ee6d daa8 	vmul.f32	s27, s27, s17
 801c4a4:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801c4a8:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801c4ac:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801c4b0:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801c4b4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c4b8:	ee76 4a25 	vadd.f32	s9, s12, s11
 801c4bc:	ee36 7a85 	vadd.f32	s14, s13, s10
 801c4c0:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801c4c4:	ee67 fa27 	vmul.f32	s31, s14, s15
 801c4c8:	ee76 8a65 	vsub.f32	s17, s12, s11
 801c4cc:	ee76 eac5 	vsub.f32	s29, s13, s10
 801c4d0:	eeb0 8a49 	vmov.f32	s16, s18
 801c4d4:	e51a      	b.n	801bf0c <calc_new_geometry+0xd7c>
 801c4d6:	f014 fe8b 	bl	80311f0 <sqrtf>
 801c4da:	e7df      	b.n	801c49c <calc_new_geometry+0x130c>
 801c4dc:	edcd 4a06 	vstr	s9, [sp, #24]
 801c4e0:	ed8d 5a05 	vstr	s10, [sp, #20]
 801c4e4:	edcd 5a04 	vstr	s11, [sp, #16]
 801c4e8:	ed8d 6a03 	vstr	s12, [sp, #12]
 801c4ec:	edcd 6a02 	vstr	s13, [sp, #8]
 801c4f0:	f014 fe7e 	bl	80311f0 <sqrtf>
 801c4f4:	eddd 4a06 	vldr	s9, [sp, #24]
 801c4f8:	ed9d 5a05 	vldr	s10, [sp, #20]
 801c4fc:	eddd 5a04 	vldr	s11, [sp, #16]
 801c500:	ed9d 6a03 	vldr	s12, [sp, #12]
 801c504:	eddd 6a02 	vldr	s13, [sp, #8]
 801c508:	e500      	b.n	801bf0c <calc_new_geometry+0xd7c>
 801c50a:	bf00      	nop
 801c50c:	2008313c 	.word	0x2008313c
 801c510:	20083140 	.word	0x20083140
 801c514:	20083110 	.word	0x20083110
 801c518:	43b40000 	.word	0x43b40000

0801c51c <calc_clipped_path>:
 801c51c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c520:	2600      	movs	r6, #0
 801c522:	4c3b      	ldr	r4, [pc, #236]	@ (801c610 <calc_clipped_path+0xf4>)
 801c524:	4605      	mov	r5, r0
 801c526:	6026      	str	r6, [r4, #0]
 801c528:	4617      	mov	r7, r2
 801c52a:	e9dd 6808 	ldrd	r6, r8, [sp, #32]
 801c52e:	469a      	mov	sl, r3
 801c530:	2b00      	cmp	r3, #0
 801c532:	d04f      	beq.n	801c5d4 <calc_clipped_path+0xb8>
 801c534:	f1b8 0f00 	cmp.w	r8, #0
 801c538:	bf14      	ite	ne
 801c53a:	f04f 0900 	movne.w	r9, #0
 801c53e:	f04f 0902 	moveq.w	r9, #2
 801c542:	edd1 7a35 	vldr	s15, [r1, #212]	@ 0xd4
 801c546:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c54a:	eddf 6a32 	vldr	s13, [pc, #200]	@ 801c614 <calc_clipped_path+0xf8>
 801c54e:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c552:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 801c618 <calc_clipped_path+0xfc>
 801c556:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c55a:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c55e:	4a2f      	ldr	r2, [pc, #188]	@ (801c61c <calc_clipped_path+0x100>)
 801c560:	4b2f      	ldr	r3, [pc, #188]	@ (801c620 <calc_clipped_path+0x104>)
 801c562:	edc2 6a00 	vstr	s13, [r2]
 801c566:	edc3 7a00 	vstr	s15, [r3]
 801c56a:	f000 f9d1 	bl	801c910 <nema_vg_get_context>
 801c56e:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c572:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801c574:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 801c630 <calc_clipped_path+0x114>
 801c578:	ea41 0203 	orr.w	r2, r1, r3
 801c57c:	4c29      	ldr	r4, [pc, #164]	@ (801c624 <calc_clipped_path+0x108>)
 801c57e:	f002 0201 	and.w	r2, r2, #1
 801c582:	f8cc 0000 	str.w	r0, [ip]
 801c586:	7022      	strb	r2, [r4, #0]
 801c588:	b132      	cbz	r2, 801c598 <calc_clipped_path+0x7c>
 801c58a:	07dc      	lsls	r4, r3, #31
 801c58c:	d42b      	bmi.n	801c5e6 <calc_clipped_path+0xca>
 801c58e:	07cb      	lsls	r3, r1, #31
 801c590:	d438      	bmi.n	801c604 <calc_clipped_path+0xe8>
 801c592:	4825      	ldr	r0, [pc, #148]	@ (801c628 <calc_clipped_path+0x10c>)
 801c594:	f7f5 f99c 	bl	80118d0 <nema_mat3x3_load_identity>
 801c598:	2200      	movs	r2, #0
 801c59a:	2100      	movs	r1, #0
 801c59c:	4c23      	ldr	r4, [pc, #140]	@ (801c62c <calc_clipped_path+0x110>)
 801c59e:	683b      	ldr	r3, [r7, #0]
 801c5a0:	e9c4 2204 	strd	r2, r2, [r4, #16]
 801c5a4:	f884 2020 	strb.w	r2, [r4, #32]
 801c5a8:	6262      	str	r2, [r4, #36]	@ 0x24
 801c5aa:	6832      	ldr	r2, [r6, #0]
 801c5ac:	4628      	mov	r0, r5
 801c5ae:	f8c4 a004 	str.w	sl, [r4, #4]
 801c5b2:	f8c4 800c 	str.w	r8, [r4, #12]
 801c5b6:	6023      	str	r3, [r4, #0]
 801c5b8:	60a2      	str	r2, [r4, #8]
 801c5ba:	61a1      	str	r1, [r4, #24]
 801c5bc:	61e1      	str	r1, [r4, #28]
 801c5be:	f7fe fde7 	bl	801b190 <calc_new_geometry>
 801c5c2:	4605      	mov	r5, r0
 801c5c4:	b948      	cbnz	r0, 801c5da <calc_clipped_path+0xbe>
 801c5c6:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c5ca:	603a      	str	r2, [r7, #0]
 801c5cc:	6033      	str	r3, [r6, #0]
 801c5ce:	4648      	mov	r0, r9
 801c5d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5d4:	f04f 0902 	mov.w	r9, #2
 801c5d8:	e7b3      	b.n	801c542 <calc_clipped_path+0x26>
 801c5da:	46a9      	mov	r9, r5
 801c5dc:	f000 fa2a 	bl	801ca34 <nema_vg_set_error>
 801c5e0:	4648      	mov	r0, r9
 801c5e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5e6:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c5ea:	480f      	ldr	r0, [pc, #60]	@ (801c628 <calc_clipped_path+0x10c>)
 801c5ec:	f7f5 f97e 	bl	80118ec <nema_mat3x3_copy>
 801c5f0:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c5f4:	07da      	lsls	r2, r3, #31
 801c5f6:	d5cf      	bpl.n	801c598 <calc_clipped_path+0x7c>
 801c5f8:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c5fc:	480a      	ldr	r0, [pc, #40]	@ (801c628 <calc_clipped_path+0x10c>)
 801c5fe:	f7f5 f9c1 	bl	8011984 <nema_mat3x3_mul>
 801c602:	e7c9      	b.n	801c598 <calc_clipped_path+0x7c>
 801c604:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c608:	4807      	ldr	r0, [pc, #28]	@ (801c628 <calc_clipped_path+0x10c>)
 801c60a:	f7f5 f96f 	bl	80118ec <nema_mat3x3_copy>
 801c60e:	e7c3      	b.n	801c598 <calc_clipped_path+0x7c>
 801c610:	20083108 	.word	0x20083108
 801c614:	43fd8000 	.word	0x43fd8000
 801c618:	44bf6000 	.word	0x44bf6000
 801c61c:	20000144 	.word	0x20000144
 801c620:	20000140 	.word	0x20000140
 801c624:	2008313c 	.word	0x2008313c
 801c628:	20083140 	.word	0x20083140
 801c62c:	20083110 	.word	0x20083110
 801c630:	2008310c 	.word	0x2008310c

0801c634 <draw_clipped_path>:
 801c634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c638:	b0b2      	sub	sp, #200	@ 0xc8
 801c63a:	460e      	mov	r6, r1
 801c63c:	4605      	mov	r5, r0
 801c63e:	f000 f967 	bl	801c910 <nema_vg_get_context>
 801c642:	4f84      	ldr	r7, [pc, #528]	@ (801c854 <draw_clipped_path+0x220>)
 801c644:	6842      	ldr	r2, [r0, #4]
 801c646:	e9d0 130d 	ldrd	r1, r3, [r0, #52]	@ 0x34
 801c64a:	089b      	lsrs	r3, r3, #2
 801c64c:	9307      	str	r3, [sp, #28]
 801c64e:	9106      	str	r1, [sp, #24]
 801c650:	6038      	str	r0, [r7, #0]
 801c652:	2a00      	cmp	r2, #0
 801c654:	d056      	beq.n	801c704 <draw_clipped_path+0xd0>
 801c656:	6881      	ldr	r1, [r0, #8]
 801c658:	2900      	cmp	r1, #0
 801c65a:	d053      	beq.n	801c704 <draw_clipped_path+0xd0>
 801c65c:	6889      	ldr	r1, [r1, #8]
 801c65e:	6893      	ldr	r3, [r2, #8]
 801c660:	aa07      	add	r2, sp, #28
 801c662:	e9cd 2100 	strd	r2, r1, [sp]
 801c666:	4628      	mov	r0, r5
 801c668:	aa06      	add	r2, sp, #24
 801c66a:	4631      	mov	r1, r6
 801c66c:	f7ff ff56 	bl	801c51c <calc_clipped_path>
 801c670:	4b79      	ldr	r3, [pc, #484]	@ (801c858 <draw_clipped_path+0x224>)
 801c672:	4680      	mov	r8, r0
 801c674:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c676:	683c      	ldr	r4, [r7, #0]
 801c678:	2b02      	cmp	r3, #2
 801c67a:	d002      	beq.n	801c682 <draw_clipped_path+0x4e>
 801c67c:	2800      	cmp	r0, #0
 801c67e:	f000 80b4 	beq.w	801c7ea <draw_clipped_path+0x1b6>
 801c682:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c684:	06db      	lsls	r3, r3, #27
 801c686:	f140 8087 	bpl.w	801c798 <draw_clipped_path+0x164>
 801c68a:	e9dd 2a06 	ldrd	r2, sl, [sp, #24]
 801c68e:	ac02      	add	r4, sp, #8
 801c690:	4620      	mov	r0, r4
 801c692:	2100      	movs	r1, #0
 801c694:	f10d 0920 	add.w	r9, sp, #32
 801c698:	f7e6 fbde 	bl	8002e58 <nema_buffer_create_pool>
 801c69c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c6a0:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 801c6a4:	4648      	mov	r0, r9
 801c6a6:	f7e6 fbf9 	bl	8002e9c <nema_buffer_map>
 801c6aa:	f10d 0830 	add.w	r8, sp, #48	@ 0x30
 801c6ae:	ea4f 028a 	mov.w	r2, sl, lsl #2
 801c6b2:	4620      	mov	r0, r4
 801c6b4:	2100      	movs	r1, #0
 801c6b6:	f7e6 fbcf 	bl	8002e58 <nema_buffer_create_pool>
 801c6ba:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c6be:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
 801c6c2:	4640      	mov	r0, r8
 801c6c4:	f7e6 fbea 	bl	8002e9c <nema_buffer_map>
 801c6c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c6ca:	2b00      	cmp	r3, #0
 801c6cc:	d076      	beq.n	801c7bc <draw_clipped_path+0x188>
 801c6ce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c6d0:	2a00      	cmp	r2, #0
 801c6d2:	d070      	beq.n	801c7b6 <draw_clipped_path+0x182>
 801c6d4:	a907      	add	r1, sp, #28
 801c6d6:	e9cd 1200 	strd	r1, r2, [sp]
 801c6da:	4628      	mov	r0, r5
 801c6dc:	aa06      	add	r2, sp, #24
 801c6de:	4631      	mov	r1, r6
 801c6e0:	f7ff ff1c 	bl	801c51c <calc_clipped_path>
 801c6e4:	4604      	mov	r4, r0
 801c6e6:	2800      	cmp	r0, #0
 801c6e8:	f000 809a 	beq.w	801c820 <draw_clipped_path+0x1ec>
 801c6ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c6ee:	b113      	cbz	r3, 801c6f6 <draw_clipped_path+0xc2>
 801c6f0:	4648      	mov	r0, r9
 801c6f2:	f7e6 fbd5 	bl	8002ea0 <nema_buffer_destroy>
 801c6f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c6f8:	2b00      	cmp	r3, #0
 801c6fa:	d04e      	beq.n	801c79a <draw_clipped_path+0x166>
 801c6fc:	4640      	mov	r0, r8
 801c6fe:	f7e6 fbcf 	bl	8002ea0 <nema_buffer_destroy>
 801c702:	e04a      	b.n	801c79a <draw_clipped_path+0x166>
 801c704:	edd6 7a35 	vldr	s15, [r6, #212]	@ 0xd4
 801c708:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c70c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801c85c <draw_clipped_path+0x228>
 801c710:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c714:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 801c860 <draw_clipped_path+0x22c>
 801c718:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c71c:	2201      	movs	r2, #1
 801c71e:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c722:	4950      	ldr	r1, [pc, #320]	@ (801c864 <draw_clipped_path+0x230>)
 801c724:	4b50      	ldr	r3, [pc, #320]	@ (801c868 <draw_clipped_path+0x234>)
 801c726:	4851      	ldr	r0, [pc, #324]	@ (801c86c <draw_clipped_path+0x238>)
 801c728:	601a      	str	r2, [r3, #0]
 801c72a:	edc1 7a00 	vstr	s15, [r1]
 801c72e:	edc0 6a00 	vstr	s13, [r0]
 801c732:	f000 f8ed 	bl	801c910 <nema_vg_get_context>
 801c736:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c73a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 801c73c:	4c4c      	ldr	r4, [pc, #304]	@ (801c870 <draw_clipped_path+0x23c>)
 801c73e:	ea41 0302 	orr.w	r3, r1, r2
 801c742:	f003 0301 	and.w	r3, r3, #1
 801c746:	6038      	str	r0, [r7, #0]
 801c748:	7023      	strb	r3, [r4, #0]
 801c74a:	b133      	cbz	r3, 801c75a <draw_clipped_path+0x126>
 801c74c:	07d4      	lsls	r4, r2, #31
 801c74e:	d43d      	bmi.n	801c7cc <draw_clipped_path+0x198>
 801c750:	07ca      	lsls	r2, r1, #31
 801c752:	d42a      	bmi.n	801c7aa <draw_clipped_path+0x176>
 801c754:	4847      	ldr	r0, [pc, #284]	@ (801c874 <draw_clipped_path+0x240>)
 801c756:	f7f5 f8bb 	bl	80118d0 <nema_mat3x3_load_identity>
 801c75a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c75e:	2300      	movs	r3, #0
 801c760:	2200      	movs	r2, #0
 801c762:	4c3d      	ldr	r4, [pc, #244]	@ (801c858 <draw_clipped_path+0x224>)
 801c764:	9306      	str	r3, [sp, #24]
 801c766:	6020      	str	r0, [r4, #0]
 801c768:	4628      	mov	r0, r5
 801c76a:	6063      	str	r3, [r4, #4]
 801c76c:	e9c4 3303 	strd	r3, r3, [r4, #12]
 801c770:	6163      	str	r3, [r4, #20]
 801c772:	f884 3020 	strb.w	r3, [r4, #32]
 801c776:	6263      	str	r3, [r4, #36]	@ 0x24
 801c778:	60a1      	str	r1, [r4, #8]
 801c77a:	9307      	str	r3, [sp, #28]
 801c77c:	61a2      	str	r2, [r4, #24]
 801c77e:	61e2      	str	r2, [r4, #28]
 801c780:	f7fe fd06 	bl	801b190 <calc_new_geometry>
 801c784:	b968      	cbnz	r0, 801c7a2 <draw_clipped_path+0x16e>
 801c786:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c78a:	683c      	ldr	r4, [r7, #0]
 801c78c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801c790:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c792:	06db      	lsls	r3, r3, #27
 801c794:	f53f af79 	bmi.w	801c68a <draw_clipped_path+0x56>
 801c798:	2402      	movs	r4, #2
 801c79a:	4620      	mov	r0, r4
 801c79c:	b032      	add	sp, #200	@ 0xc8
 801c79e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c7a2:	f000 f947 	bl	801ca34 <nema_vg_set_error>
 801c7a6:	683c      	ldr	r4, [r7, #0]
 801c7a8:	e76b      	b.n	801c682 <draw_clipped_path+0x4e>
 801c7aa:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c7ae:	4831      	ldr	r0, [pc, #196]	@ (801c874 <draw_clipped_path+0x240>)
 801c7b0:	f7f5 f89c 	bl	80118ec <nema_mat3x3_copy>
 801c7b4:	e7d1      	b.n	801c75a <draw_clipped_path+0x126>
 801c7b6:	4648      	mov	r0, r9
 801c7b8:	f7e6 fb72 	bl	8002ea0 <nema_buffer_destroy>
 801c7bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c7be:	2b00      	cmp	r3, #0
 801c7c0:	d0ea      	beq.n	801c798 <draw_clipped_path+0x164>
 801c7c2:	4640      	mov	r0, r8
 801c7c4:	f7e6 fb6c 	bl	8002ea0 <nema_buffer_destroy>
 801c7c8:	2402      	movs	r4, #2
 801c7ca:	e7e6      	b.n	801c79a <draw_clipped_path+0x166>
 801c7cc:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c7d0:	4828      	ldr	r0, [pc, #160]	@ (801c874 <draw_clipped_path+0x240>)
 801c7d2:	f7f5 f88b 	bl	80118ec <nema_mat3x3_copy>
 801c7d6:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c7da:	07d9      	lsls	r1, r3, #31
 801c7dc:	d5bd      	bpl.n	801c75a <draw_clipped_path+0x126>
 801c7de:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c7e2:	4824      	ldr	r0, [pc, #144]	@ (801c874 <draw_clipped_path+0x240>)
 801c7e4:	f7f5 f8ce 	bl	8011984 <nema_mat3x3_mul>
 801c7e8:	e7b7      	b.n	801c75a <draw_clipped_path+0x126>
 801c7ea:	4629      	mov	r1, r5
 801c7ec:	2288      	movs	r2, #136	@ 0x88
 801c7ee:	a810      	add	r0, sp, #64	@ 0x40
 801c7f0:	f016 f94b 	bl	8032a8a <memcpy>
 801c7f4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801c7f8:	6898      	ldr	r0, [r3, #8]
 801c7fa:	6892      	ldr	r2, [r2, #8]
 801c7fc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801c800:	9000      	str	r0, [sp, #0]
 801c802:	a810      	add	r0, sp, #64	@ 0x40
 801c804:	f000 fe54 	bl	801d4b0 <nema_vg_path_set_shape>
 801c808:	2201      	movs	r2, #1
 801c80a:	683b      	ldr	r3, [r7, #0]
 801c80c:	a810      	add	r0, sp, #64	@ 0x40
 801c80e:	779a      	strb	r2, [r3, #30]
 801c810:	4631      	mov	r1, r6
 801c812:	f7fb fde5 	bl	80183e0 <nema_vg_draw_path>
 801c816:	683b      	ldr	r3, [r7, #0]
 801c818:	4604      	mov	r4, r0
 801c81a:	f883 801e 	strb.w	r8, [r3, #30]
 801c81e:	e7bc      	b.n	801c79a <draw_clipped_path+0x166>
 801c820:	4629      	mov	r1, r5
 801c822:	2288      	movs	r2, #136	@ 0x88
 801c824:	a810      	add	r0, sp, #64	@ 0x40
 801c826:	f016 f930 	bl	8032a8a <memcpy>
 801c82a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c82c:	9b07      	ldr	r3, [sp, #28]
 801c82e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c830:	9906      	ldr	r1, [sp, #24]
 801c832:	a810      	add	r0, sp, #64	@ 0x40
 801c834:	9400      	str	r4, [sp, #0]
 801c836:	f000 fe3b 	bl	801d4b0 <nema_vg_path_set_shape>
 801c83a:	2201      	movs	r2, #1
 801c83c:	683b      	ldr	r3, [r7, #0]
 801c83e:	a810      	add	r0, sp, #64	@ 0x40
 801c840:	779a      	strb	r2, [r3, #30]
 801c842:	4631      	mov	r1, r6
 801c844:	f7fb fdcc 	bl	80183e0 <nema_vg_draw_path>
 801c848:	2200      	movs	r2, #0
 801c84a:	683b      	ldr	r3, [r7, #0]
 801c84c:	4604      	mov	r4, r0
 801c84e:	779a      	strb	r2, [r3, #30]
 801c850:	e74c      	b.n	801c6ec <draw_clipped_path+0xb8>
 801c852:	bf00      	nop
 801c854:	2008310c 	.word	0x2008310c
 801c858:	20083110 	.word	0x20083110
 801c85c:	43fd8000 	.word	0x43fd8000
 801c860:	44bf6000 	.word	0x44bf6000
 801c864:	20000140 	.word	0x20000140
 801c868:	20083108 	.word	0x20083108
 801c86c:	20000144 	.word	0x20000144
 801c870:	2008313c 	.word	0x2008313c
 801c874:	20083140 	.word	0x20083140

0801c878 <context_reset>:
 801c878:	b570      	push	{r4, r5, r6, lr}
 801c87a:	4c23      	ldr	r4, [pc, #140]	@ (801c908 <context_reset+0x90>)
 801c87c:	6820      	ldr	r0, [r4, #0]
 801c87e:	b110      	cbz	r0, 801c886 <context_reset+0xe>
 801c880:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c882:	069b      	lsls	r3, r3, #26
 801c884:	d43a      	bmi.n	801c8fc <context_reset+0x84>
 801c886:	2300      	movs	r3, #0
 801c888:	6962      	ldr	r2, [r4, #20]
 801c88a:	e9c4 3300 	strd	r3, r3, [r4]
 801c88e:	60a3      	str	r3, [r4, #8]
 801c890:	b112      	cbz	r2, 801c898 <context_reset+0x20>
 801c892:	481e      	ldr	r0, [pc, #120]	@ (801c90c <context_reset+0x94>)
 801c894:	f7e6 fb04 	bl	8002ea0 <nema_buffer_destroy>
 801c898:	2300      	movs	r3, #0
 801c89a:	2200      	movs	r2, #0
 801c89c:	2602      	movs	r6, #2
 801c89e:	f240 5501 	movw	r5, #1281	@ 0x501
 801c8a2:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
 801c8a6:	f04f 61f0 	mov.w	r1, #125829120	@ 0x7800000
 801c8aa:	e9c4 2203 	strd	r2, r2, [r4, #12]
 801c8ae:	e9c4 2205 	strd	r2, r2, [r4, #20]
 801c8b2:	6222      	str	r2, [r4, #32]
 801c8b4:	e9c4 220c 	strd	r2, r2, [r4, #48]	@ 0x30
 801c8b8:	e9c4 220e 	strd	r2, r2, [r4, #56]	@ 0x38
 801c8bc:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
 801c8c0:	61e6      	str	r6, [r4, #28]
 801c8c2:	e9c4 5009 	strd	r5, r0, [r4, #36]	@ 0x24
 801c8c6:	62e1      	str	r1, [r4, #44]	@ 0x2c
 801c8c8:	6423      	str	r3, [r4, #64]	@ 0x40
 801c8ca:	6463      	str	r3, [r4, #68]	@ 0x44
 801c8cc:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801c8ce:	6723      	str	r3, [r4, #112]	@ 0x70
 801c8d0:	6523      	str	r3, [r4, #80]	@ 0x50
 801c8d2:	6763      	str	r3, [r4, #116]	@ 0x74
 801c8d4:	6563      	str	r3, [r4, #84]	@ 0x54
 801c8d6:	67a3      	str	r3, [r4, #120]	@ 0x78
 801c8d8:	65a3      	str	r3, [r4, #88]	@ 0x58
 801c8da:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801c8dc:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801c8de:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801c8e2:	6623      	str	r3, [r4, #96]	@ 0x60
 801c8e4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801c8e8:	6663      	str	r3, [r4, #100]	@ 0x64
 801c8ea:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801c8ee:	66a3      	str	r3, [r4, #104]	@ 0x68
 801c8f0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801c8f4:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801c8f6:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801c8fa:	bd70      	pop	{r4, r5, r6, pc}
 801c8fc:	6883      	ldr	r3, [r0, #8]
 801c8fe:	2b00      	cmp	r3, #0
 801c900:	d0c1      	beq.n	801c886 <context_reset+0xe>
 801c902:	f7e6 facd 	bl	8002ea0 <nema_buffer_destroy>
 801c906:	e7be      	b.n	801c886 <context_reset+0xe>
 801c908:	20000148 	.word	0x20000148
 801c90c:	20000154 	.word	0x20000154

0801c910 <nema_vg_get_context>:
 801c910:	4800      	ldr	r0, [pc, #0]	@ (801c914 <nema_vg_get_context+0x4>)
 801c912:	4770      	bx	lr
 801c914:	20000148 	.word	0x20000148

0801c918 <stencil_buffer_create>:
 801c918:	b538      	push	{r3, r4, r5, lr}
 801c91a:	4605      	mov	r5, r0
 801c91c:	1cc8      	adds	r0, r1, #3
 801c91e:	bf48      	it	mi
 801c920:	1d88      	addmi	r0, r1, #6
 801c922:	1cd4      	adds	r4, r2, #3
 801c924:	bf48      	it	mi
 801c926:	1d94      	addmi	r4, r2, #6
 801c928:	1080      	asrs	r0, r0, #2
 801c92a:	0080      	lsls	r0, r0, #2
 801c92c:	f024 0203 	bic.w	r2, r4, #3
 801c930:	fb02 f200 	mul.w	r2, r2, r0
 801c934:	4619      	mov	r1, r3
 801c936:	4628      	mov	r0, r5
 801c938:	f7e6 fa8e 	bl	8002e58 <nema_buffer_create_pool>
 801c93c:	4628      	mov	r0, r5
 801c93e:	bd38      	pop	{r3, r4, r5, pc}

0801c940 <stencil_buffer_set>:
 801c940:	b082      	sub	sp, #8
 801c942:	b470      	push	{r4, r5, r6}
 801c944:	4606      	mov	r6, r0
 801c946:	460d      	mov	r5, r1
 801c948:	a803      	add	r0, sp, #12
 801c94a:	e880 000c 	stmia.w	r0, {r2, r3}
 801c94e:	4c15      	ldr	r4, [pc, #84]	@ (801c9a4 <stencil_buffer_set+0x64>)
 801c950:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801c952:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801c956:	1cf3      	adds	r3, r6, #3
 801c958:	bf48      	it	mi
 801c95a:	1db3      	addmi	r3, r6, #6
 801c95c:	1cea      	adds	r2, r5, #3
 801c95e:	bf48      	it	mi
 801c960:	1daa      	addmi	r2, r5, #6
 801c962:	f022 0203 	bic.w	r2, r2, #3
 801c966:	ee07 2a90 	vmov	s15, r2
 801c96a:	f023 0303 	bic.w	r3, r3, #3
 801c96e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c972:	ee07 3a90 	vmov	s15, r3
 801c976:	2100      	movs	r1, #0
 801c978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c97c:	61a1      	str	r1, [r4, #24]
 801c97e:	61e1      	str	r1, [r4, #28]
 801c980:	6261      	str	r1, [r4, #36]	@ 0x24
 801c982:	6321      	str	r1, [r4, #48]	@ 0x30
 801c984:	4908      	ldr	r1, [pc, #32]	@ (801c9a8 <stencil_buffer_set+0x68>)
 801c986:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 801c98a:	600c      	str	r4, [r1, #0]
 801c98c:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 801c990:	edc4 7a08 	vstr	s15, [r4, #32]
 801c994:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 801c998:	e9c4 3204 	strd	r3, r2, [r4, #16]
 801c99c:	bc70      	pop	{r4, r5, r6}
 801c99e:	b002      	add	sp, #8
 801c9a0:	4770      	bx	lr
 801c9a2:	bf00      	nop
 801c9a4:	20083258 	.word	0x20083258
 801c9a8:	20000148 	.word	0x20000148

0801c9ac <nema_vg_get_stencil>:
 801c9ac:	4b01      	ldr	r3, [pc, #4]	@ (801c9b4 <nema_vg_get_stencil+0x8>)
 801c9ae:	6818      	ldr	r0, [r3, #0]
 801c9b0:	4770      	bx	lr
 801c9b2:	bf00      	nop
 801c9b4:	20000148 	.word	0x20000148

0801c9b8 <lut_buffer_create>:
 801c9b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c9ba:	4d1a      	ldr	r5, [pc, #104]	@ (801ca24 <lut_buffer_create+0x6c>)
 801c9bc:	b085      	sub	sp, #20
 801c9be:	69ac      	ldr	r4, [r5, #24]
 801c9c0:	b10c      	cbz	r4, 801c9c6 <lut_buffer_create+0xe>
 801c9c2:	b005      	add	sp, #20
 801c9c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c9c6:	466e      	mov	r6, sp
 801c9c8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801c9cc:	4630      	mov	r0, r6
 801c9ce:	4621      	mov	r1, r4
 801c9d0:	f7e6 fa42 	bl	8002e58 <nema_buffer_create_pool>
 801c9d4:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 801c9d8:	f105 060c 	add.w	r6, r5, #12
 801c9dc:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801c9e0:	4627      	mov	r7, r4
 801c9e2:	4623      	mov	r3, r4
 801c9e4:	696d      	ldr	r5, [r5, #20]
 801c9e6:	26ff      	movs	r6, #255	@ 0xff
 801c9e8:	e008      	b.n	801c9fc <lut_buffer_create+0x44>
 801c9ea:	2880      	cmp	r0, #128	@ 0x80
 801c9ec:	f1c4 0100 	rsb	r1, r4, #0
 801c9f0:	d016      	beq.n	801ca20 <lut_buffer_create+0x68>
 801c9f2:	bfcc      	ite	gt
 801c9f4:	b2e1      	uxtbgt	r1, r4
 801c9f6:	b2c9      	uxtble	r1, r1
 801c9f8:	54a9      	strb	r1, [r5, r2]
 801c9fa:	3410      	adds	r4, #16
 801c9fc:	ea44 1213 	orr.w	r2, r4, r3, lsr #4
 801ca00:	3301      	adds	r3, #1
 801ca02:	f1a3 0172 	sub.w	r1, r3, #114	@ 0x72
 801ca06:	291e      	cmp	r1, #30
 801ca08:	f103 30ff 	add.w	r0, r3, #4294967295
 801ca0c:	b2d2      	uxtb	r2, r2
 801ca0e:	d9ec      	bls.n	801c9ea <lut_buffer_create+0x32>
 801ca10:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801ca14:	54ae      	strb	r6, [r5, r2]
 801ca16:	d1f0      	bne.n	801c9fa <lut_buffer_create+0x42>
 801ca18:	f885 60ff 	strb.w	r6, [r5, #255]	@ 0xff
 801ca1c:	b005      	add	sp, #20
 801ca1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca20:	54af      	strb	r7, [r5, r2]
 801ca22:	e7ea      	b.n	801c9fa <lut_buffer_create+0x42>
 801ca24:	20000148 	.word	0x20000148

0801ca28 <nema_vg_set_fill_rule>:
 801ca28:	4b01      	ldr	r3, [pc, #4]	@ (801ca30 <nema_vg_set_fill_rule+0x8>)
 801ca2a:	7718      	strb	r0, [r3, #28]
 801ca2c:	4770      	bx	lr
 801ca2e:	bf00      	nop
 801ca30:	20000148 	.word	0x20000148

0801ca34 <nema_vg_set_error>:
 801ca34:	4a02      	ldr	r2, [pc, #8]	@ (801ca40 <nema_vg_set_error+0xc>)
 801ca36:	6a13      	ldr	r3, [r2, #32]
 801ca38:	4318      	orrs	r0, r3
 801ca3a:	6210      	str	r0, [r2, #32]
 801ca3c:	4770      	bx	lr
 801ca3e:	bf00      	nop
 801ca40:	20000148 	.word	0x20000148

0801ca44 <nema_vg_set_blend>:
 801ca44:	4b01      	ldr	r3, [pc, #4]	@ (801ca4c <nema_vg_set_blend+0x8>)
 801ca46:	6258      	str	r0, [r3, #36]	@ 0x24
 801ca48:	4770      	bx	lr
 801ca4a:	bf00      	nop
 801ca4c:	20000148 	.word	0x20000148

0801ca50 <nema_vg_set_quality>:
 801ca50:	06c2      	lsls	r2, r0, #27
 801ca52:	bf4d      	iteet	mi
 801ca54:	2200      	movmi	r2, #0
 801ca56:	f04f 62f0 	movpl.w	r2, #125829120	@ 0x7800000
 801ca5a:	f04f 7100 	movpl.w	r1, #33554432	@ 0x2000000
 801ca5e:	4611      	movmi	r1, r2
 801ca60:	4b02      	ldr	r3, [pc, #8]	@ (801ca6c <nema_vg_set_quality+0x1c>)
 801ca62:	7758      	strb	r0, [r3, #29]
 801ca64:	e9c3 120a 	strd	r1, r2, [r3, #40]	@ 0x28
 801ca68:	4770      	bx	lr
 801ca6a:	bf00      	nop
 801ca6c:	20000148 	.word	0x20000148

0801ca70 <nema_vg_set_global_matrix>:
 801ca70:	2800      	cmp	r0, #0
 801ca72:	d034      	beq.n	801cade <nema_vg_set_global_matrix+0x6e>
 801ca74:	b510      	push	{r4, lr}
 801ca76:	4c1e      	ldr	r4, [pc, #120]	@ (801caf0 <nema_vg_set_global_matrix+0x80>)
 801ca78:	6803      	ldr	r3, [r0, #0]
 801ca7a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801ca7c:	6803      	ldr	r3, [r0, #0]
 801ca7e:	6723      	str	r3, [r4, #112]	@ 0x70
 801ca80:	6843      	ldr	r3, [r0, #4]
 801ca82:	6523      	str	r3, [r4, #80]	@ 0x50
 801ca84:	6843      	ldr	r3, [r0, #4]
 801ca86:	6763      	str	r3, [r4, #116]	@ 0x74
 801ca88:	6883      	ldr	r3, [r0, #8]
 801ca8a:	6563      	str	r3, [r4, #84]	@ 0x54
 801ca8c:	6883      	ldr	r3, [r0, #8]
 801ca8e:	67a3      	str	r3, [r4, #120]	@ 0x78
 801ca90:	68c3      	ldr	r3, [r0, #12]
 801ca92:	65a3      	str	r3, [r4, #88]	@ 0x58
 801ca94:	68c3      	ldr	r3, [r0, #12]
 801ca96:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801ca98:	6903      	ldr	r3, [r0, #16]
 801ca9a:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801ca9c:	6903      	ldr	r3, [r0, #16]
 801ca9e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801caa2:	6943      	ldr	r3, [r0, #20]
 801caa4:	6623      	str	r3, [r4, #96]	@ 0x60
 801caa6:	6943      	ldr	r3, [r0, #20]
 801caa8:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801caac:	6983      	ldr	r3, [r0, #24]
 801caae:	6663      	str	r3, [r4, #100]	@ 0x64
 801cab0:	6983      	ldr	r3, [r0, #24]
 801cab2:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801cab6:	69c3      	ldr	r3, [r0, #28]
 801cab8:	66a3      	str	r3, [r4, #104]	@ 0x68
 801caba:	69c3      	ldr	r3, [r0, #28]
 801cabc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801cac0:	6a03      	ldr	r3, [r0, #32]
 801cac2:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801cac4:	6a03      	ldr	r3, [r0, #32]
 801cac6:	f104 0070 	add.w	r0, r4, #112	@ 0x70
 801caca:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801cace:	f7f5 f84f 	bl	8011b70 <nema_mat3x3_invert>
 801cad2:	b950      	cbnz	r0, 801caea <nema_vg_set_global_matrix+0x7a>
 801cad4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cad6:	f043 0301 	orr.w	r3, r3, #1
 801cada:	6323      	str	r3, [r4, #48]	@ 0x30
 801cadc:	bd10      	pop	{r4, pc}
 801cade:	4a04      	ldr	r2, [pc, #16]	@ (801caf0 <nema_vg_set_global_matrix+0x80>)
 801cae0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cae2:	f023 0301 	bic.w	r3, r3, #1
 801cae6:	6313      	str	r3, [r2, #48]	@ 0x30
 801cae8:	4770      	bx	lr
 801caea:	f44f 2080 	mov.w	r0, #262144	@ 0x40000
 801caee:	bd10      	pop	{r4, pc}
 801caf0:	20000148 	.word	0x20000148

0801caf4 <nema_vg_handle_large_coords>:
 801caf4:	4a08      	ldr	r2, [pc, #32]	@ (801cb18 <nema_vg_handle_large_coords+0x24>)
 801caf6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801caf8:	b130      	cbz	r0, 801cb08 <nema_vg_handle_large_coords+0x14>
 801cafa:	f043 0304 	orr.w	r3, r3, #4
 801cafe:	b939      	cbnz	r1, 801cb10 <nema_vg_handle_large_coords+0x1c>
 801cb00:	f023 0310 	bic.w	r3, r3, #16
 801cb04:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb06:	4770      	bx	lr
 801cb08:	f023 0304 	bic.w	r3, r3, #4
 801cb0c:	2900      	cmp	r1, #0
 801cb0e:	d0f7      	beq.n	801cb00 <nema_vg_handle_large_coords+0xc>
 801cb10:	f043 0310 	orr.w	r3, r3, #16
 801cb14:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb16:	4770      	bx	lr
 801cb18:	20000148 	.word	0x20000148

0801cb1c <nema_vg_paint_create>:
 801cb1c:	b538      	push	{r3, r4, r5, lr}
 801cb1e:	20e0      	movs	r0, #224	@ 0xe0
 801cb20:	f7e6 f918 	bl	8002d54 <nema_host_malloc>
 801cb24:	4604      	mov	r4, r0
 801cb26:	b1e8      	cbz	r0, 801cb64 <nema_vg_paint_create+0x48>
 801cb28:	2500      	movs	r5, #0
 801cb2a:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801cb2e:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 801cb32:	f8c0 30d4 	str.w	r3, [r0, #212]	@ 0xd4
 801cb36:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
 801cb3a:	f880 502c 	strb.w	r5, [r0, #44]	@ 0x2c
 801cb3e:	f880 50dd 	strb.w	r5, [r0, #221]	@ 0xdd
 801cb42:	f880 50d0 	strb.w	r5, [r0, #208]	@ 0xd0
 801cb46:	e9c0 250c 	strd	r2, r5, [r0, #48]	@ 0x30
 801cb4a:	e9c0 5500 	strd	r5, r5, [r0]
 801cb4e:	3038      	adds	r0, #56	@ 0x38
 801cb50:	f7f4 febe 	bl	80118d0 <nema_mat3x3_load_identity>
 801cb54:	f104 0008 	add.w	r0, r4, #8
 801cb58:	f7f4 feba 	bl	80118d0 <nema_mat3x3_load_identity>
 801cb5c:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
 801cb60:	4620      	mov	r0, r4
 801cb62:	bd38      	pop	{r3, r4, r5, pc}
 801cb64:	2001      	movs	r0, #1
 801cb66:	f7ff ff65 	bl	801ca34 <nema_vg_set_error>
 801cb6a:	4620      	mov	r0, r4
 801cb6c:	bd38      	pop	{r3, r4, r5, pc}
 801cb6e:	bf00      	nop

0801cb70 <nema_vg_paint_set_type>:
 801cb70:	b138      	cbz	r0, 801cb82 <nema_vg_paint_set_type+0x12>
 801cb72:	2904      	cmp	r1, #4
 801cb74:	d802      	bhi.n	801cb7c <nema_vg_paint_set_type+0xc>
 801cb76:	f880 10dd 	strb.w	r1, [r0, #221]	@ 0xdd
 801cb7a:	4770      	bx	lr
 801cb7c:	2008      	movs	r0, #8
 801cb7e:	f7ff bf59 	b.w	801ca34 <nema_vg_set_error>
 801cb82:	2001      	movs	r0, #1
 801cb84:	f7ff bf56 	b.w	801ca34 <nema_vg_set_error>

0801cb88 <nema_vg_paint_lock_tran_to_path>:
 801cb88:	b160      	cbz	r0, 801cba4 <nema_vg_paint_lock_tran_to_path+0x1c>
 801cb8a:	f890 30dc 	ldrb.w	r3, [r0, #220]	@ 0xdc
 801cb8e:	b121      	cbz	r1, 801cb9a <nema_vg_paint_lock_tran_to_path+0x12>
 801cb90:	f043 0301 	orr.w	r3, r3, #1
 801cb94:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cb98:	4770      	bx	lr
 801cb9a:	f023 0301 	bic.w	r3, r3, #1
 801cb9e:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cba2:	4770      	bx	lr
 801cba4:	2001      	movs	r0, #1
 801cba6:	f7ff bf45 	b.w	801ca34 <nema_vg_set_error>
 801cbaa:	bf00      	nop

0801cbac <nema_vg_grad_create>:
 801cbac:	b530      	push	{r4, r5, lr}
 801cbae:	2010      	movs	r0, #16
 801cbb0:	b085      	sub	sp, #20
 801cbb2:	f7e6 f8cf 	bl	8002d54 <nema_host_malloc>
 801cbb6:	466d      	mov	r5, sp
 801cbb8:	4604      	mov	r4, r0
 801cbba:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cbbe:	4628      	mov	r0, r5
 801cbc0:	2100      	movs	r1, #0
 801cbc2:	f7e6 f949 	bl	8002e58 <nema_buffer_create_pool>
 801cbc6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801cbca:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cbce:	4620      	mov	r0, r4
 801cbd0:	b005      	add	sp, #20
 801cbd2:	bd30      	pop	{r4, r5, pc}

0801cbd4 <nema_vg_grad_destroy>:
 801cbd4:	b140      	cbz	r0, 801cbe8 <nema_vg_grad_destroy+0x14>
 801cbd6:	b510      	push	{r4, lr}
 801cbd8:	4604      	mov	r4, r0
 801cbda:	f7e6 f961 	bl	8002ea0 <nema_buffer_destroy>
 801cbde:	4620      	mov	r0, r4
 801cbe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cbe4:	f7e6 b8b4 	b.w	8002d50 <nema_host_free>
 801cbe8:	4770      	bx	lr
 801cbea:	bf00      	nop

0801cbec <nema_vg_grad_set>:
 801cbec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf0:	ed2d 8b10 	vpush	{d8-d15}
 801cbf4:	291f      	cmp	r1, #31
 801cbf6:	b091      	sub	sp, #68	@ 0x44
 801cbf8:	4680      	mov	r8, r0
 801cbfa:	4615      	mov	r5, r2
 801cbfc:	9304      	str	r3, [sp, #16]
 801cbfe:	f300 8293 	bgt.w	801d128 <nema_vg_grad_set+0x53c>
 801cc02:	460f      	mov	r7, r1
 801cc04:	2100      	movs	r1, #0
 801cc06:	2601      	movs	r6, #1
 801cc08:	460c      	mov	r4, r1
 801cc0a:	4608      	mov	r0, r1
 801cc0c:	4633      	mov	r3, r6
 801cc0e:	2240      	movs	r2, #64	@ 0x40
 801cc10:	f7f4 f88c 	bl	8010d2c <nema_set_clip_temp>
 801cc14:	f8d8 100c 	ldr.w	r1, [r8, #12]
 801cc18:	4633      	mov	r3, r6
 801cc1a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801cc1e:	4630      	mov	r0, r6
 801cc20:	2240      	movs	r2, #64	@ 0x40
 801cc22:	9600      	str	r6, [sp, #0]
 801cc24:	f7f3 ff7e 	bl	8010b24 <nema_bind_tex>
 801cc28:	f04f 33ff 	mov.w	r3, #4294967295
 801cc2c:	4631      	mov	r1, r6
 801cc2e:	461a      	mov	r2, r3
 801cc30:	4630      	mov	r0, r6
 801cc32:	f001 f9d5 	bl	801dfe0 <nema_set_blend>
 801cc36:	4630      	mov	r0, r6
 801cc38:	f7f4 f8ae 	bl	8010d98 <nema_enable_gradient>
 801cc3c:	ed9f 6a80 	vldr	s12, [pc, #512]	@ 801ce40 <nema_vg_grad_set+0x254>
 801cc40:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cc44:	4622      	mov	r2, r4
 801cc46:	4620      	mov	r0, r4
 801cc48:	eb05 0487 	add.w	r4, r5, r7, lsl #2
 801cc4c:	b912      	cbnz	r2, 801cc54 <nema_vg_grad_set+0x68>
 801cc4e:	2801      	cmp	r0, #1
 801cc50:	f340 80c3 	ble.w	801cdda <nema_vg_grad_set+0x1ee>
 801cc54:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801cc58:	3201      	adds	r2, #1
 801cc5a:	4297      	cmp	r7, r2
 801cc5c:	ed93 7a00 	vldr	s14, [r3]
 801cc60:	f340 80c0 	ble.w	801cde4 <nema_vg_grad_set+0x1f8>
 801cc64:	0093      	lsls	r3, r2, #2
 801cc66:	18e9      	adds	r1, r5, r3
 801cc68:	edd1 7a00 	vldr	s15, [r1]
 801cc6c:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cc70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc74:	f100 80bc 	bmi.w	801cdf0 <nema_vg_grad_set+0x204>
 801cc78:	3304      	adds	r3, #4
 801cc7a:	442b      	add	r3, r5
 801cc7c:	4601      	mov	r1, r0
 801cc7e:	e00d      	b.n	801cc9c <nema_vg_grad_set+0xb0>
 801cc80:	42a3      	cmp	r3, r4
 801cc82:	f102 0201 	add.w	r2, r2, #1
 801cc86:	d022      	beq.n	801ccce <nema_vg_grad_set+0xe2>
 801cc88:	ecb3 7a01 	vldmia	r3!, {s14}
 801cc8c:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cc90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc94:	f300 80ac 	bgt.w	801cdf0 <nema_vg_grad_set+0x204>
 801cc98:	eef0 7a47 	vmov.f32	s15, s14
 801cc9c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cca0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cca4:	dbec      	blt.n	801cc80 <nema_vg_grad_set+0x94>
 801cca6:	eef4 7ae6 	vcmpe.f32	s15, s13
 801ccaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccae:	d8e7      	bhi.n	801cc80 <nema_vg_grad_set+0x94>
 801ccb0:	2900      	cmp	r1, #0
 801ccb2:	f040 8082 	bne.w	801cdba <nema_vg_grad_set+0x1ce>
 801ccb6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ccba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccbe:	f300 8239 	bgt.w	801d134 <nema_vg_grad_set+0x548>
 801ccc2:	42a3      	cmp	r3, r4
 801ccc4:	f04f 0101 	mov.w	r1, #1
 801ccc8:	f102 0201 	add.w	r2, r2, #1
 801cccc:	d1dc      	bne.n	801cc88 <nema_vg_grad_set+0x9c>
 801ccce:	2900      	cmp	r1, #0
 801ccd0:	f340 808c 	ble.w	801cdec <nema_vg_grad_set+0x200>
 801ccd4:	eddf ca5e 	vldr	s25, [pc, #376]	@ 801ce50 <nema_vg_grad_set+0x264>
 801ccd8:	2600      	movs	r6, #0
 801ccda:	f04f 0b01 	mov.w	fp, #1
 801ccde:	eeb0 da6c 	vmov.f32	s26, s25
 801cce2:	eef0 da6c 	vmov.f32	s27, s25
 801cce6:	eeb0 ea6c 	vmov.f32	s28, s25
 801ccea:	eeb0 aa6c 	vmov.f32	s20, s25
 801ccee:	eef0 8a6c 	vmov.f32	s17, s25
 801ccf2:	eeb0 9a6c 	vmov.f32	s18, s25
 801ccf6:	eef0 9a6c 	vmov.f32	s19, s25
 801ccfa:	46b1      	mov	r9, r6
 801ccfc:	46b0      	mov	r8, r6
 801ccfe:	46da      	mov	sl, fp
 801cd00:	eddf aa4f 	vldr	s21, [pc, #316]	@ 801ce40 <nema_vg_grad_set+0x254>
 801cd04:	eef7 ba00 	vmov.f32	s23, #112	@ 0x3f800000  1.0
 801cd08:	ed9f ca4e 	vldr	s24, [pc, #312]	@ 801ce44 <nema_vg_grad_set+0x258>
 801cd0c:	ed9f 8a50 	vldr	s16, [pc, #320]	@ 801ce50 <nema_vg_grad_set+0x264>
 801cd10:	f8cd b014 	str.w	fp, [sp, #20]
 801cd14:	b91e      	cbnz	r6, 801cd1e <nema_vg_grad_set+0x132>
 801cd16:	f1b8 0f01 	cmp.w	r8, #1
 801cd1a:	f340 8201 	ble.w	801d120 <nema_vg_grad_set+0x534>
 801cd1e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cd22:	ed93 7a00 	vldr	s14, [r3]
 801cd26:	1c72      	adds	r2, r6, #1
 801cd28:	4297      	cmp	r7, r2
 801cd2a:	f340 817d 	ble.w	801d028 <nema_vg_grad_set+0x43c>
 801cd2e:	0093      	lsls	r3, r2, #2
 801cd30:	18e9      	adds	r1, r5, r3
 801cd32:	edd1 7a00 	vldr	s15, [r1]
 801cd36:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801cd3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd3e:	f300 812d 	bgt.w	801cf9c <nema_vg_grad_set+0x3b0>
 801cd42:	3304      	adds	r3, #4
 801cd44:	442b      	add	r3, r5
 801cd46:	4641      	mov	r1, r8
 801cd48:	e00c      	b.n	801cd64 <nema_vg_grad_set+0x178>
 801cd4a:	429c      	cmp	r4, r3
 801cd4c:	f102 0201 	add.w	r2, r2, #1
 801cd50:	d01f      	beq.n	801cd92 <nema_vg_grad_set+0x1a6>
 801cd52:	ecb3 7a01 	vldmia	r3!, {s14}
 801cd56:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cd5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd5e:	dc7b      	bgt.n	801ce58 <nema_vg_grad_set+0x26c>
 801cd60:	eef0 7a47 	vmov.f32	s15, s14
 801cd64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cd68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd6c:	dbed      	blt.n	801cd4a <nema_vg_grad_set+0x15e>
 801cd6e:	eef4 7aeb 	vcmpe.f32	s15, s23
 801cd72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd76:	d8e8      	bhi.n	801cd4a <nema_vg_grad_set+0x15e>
 801cd78:	bb39      	cbnz	r1, 801cdca <nema_vg_grad_set+0x1de>
 801cd7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cd7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd82:	f300 819c 	bgt.w	801d0be <nema_vg_grad_set+0x4d2>
 801cd86:	429c      	cmp	r4, r3
 801cd88:	f04f 0101 	mov.w	r1, #1
 801cd8c:	f102 0201 	add.w	r2, r2, #1
 801cd90:	d1df      	bne.n	801cd52 <nema_vg_grad_set+0x166>
 801cd92:	9b05      	ldr	r3, [sp, #20]
 801cd94:	2b00      	cmp	r3, #0
 801cd96:	f000 818d 	beq.w	801d0b4 <nema_vg_grad_set+0x4c8>
 801cd9a:	2900      	cmp	r1, #0
 801cd9c:	f340 81cc 	ble.w	801d138 <nema_vg_grad_set+0x54c>
 801cda0:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cda4:	edd3 6a00 	vldr	s13, [r3]
 801cda8:	eef4 6aeb 	vcmpe.f32	s13, s23
 801cdac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdb0:	f100 814a 	bmi.w	801d048 <nema_vg_grad_set+0x45c>
 801cdb4:	f8dd b014 	ldr.w	fp, [sp, #20]
 801cdb8:	e052      	b.n	801ce60 <nema_vg_grad_set+0x274>
 801cdba:	3101      	adds	r1, #1
 801cdbc:	2901      	cmp	r1, #1
 801cdbe:	f77f af5f 	ble.w	801cc80 <nema_vg_grad_set+0x94>
 801cdc2:	4281      	cmp	r1, r0
 801cdc4:	d086      	beq.n	801ccd4 <nema_vg_grad_set+0xe8>
 801cdc6:	4608      	mov	r0, r1
 801cdc8:	e740      	b.n	801cc4c <nema_vg_grad_set+0x60>
 801cdca:	3101      	adds	r1, #1
 801cdcc:	2901      	cmp	r1, #1
 801cdce:	ddbc      	ble.n	801cd4a <nema_vg_grad_set+0x15e>
 801cdd0:	46b1      	mov	r9, r6
 801cdd2:	f04f 0b00 	mov.w	fp, #0
 801cdd6:	4616      	mov	r6, r2
 801cdd8:	e042      	b.n	801ce60 <nema_vg_grad_set+0x274>
 801cdda:	4297      	cmp	r7, r2
 801cddc:	eeb0 7a46 	vmov.f32	s14, s12
 801cde0:	f73f af40 	bgt.w	801cc64 <nema_vg_grad_set+0x78>
 801cde4:	4601      	mov	r1, r0
 801cde6:	2900      	cmp	r1, #0
 801cde8:	f73f af74 	bgt.w	801ccd4 <nema_vg_grad_set+0xe8>
 801cdec:	f47f af72 	bne.w	801ccd4 <nema_vg_grad_set+0xe8>
 801cdf0:	4b15      	ldr	r3, [pc, #84]	@ (801ce48 <nema_vg_grad_set+0x25c>)
 801cdf2:	ac0c      	add	r4, sp, #48	@ 0x30
 801cdf4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801cdf6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cdfa:	2100      	movs	r1, #0
 801cdfc:	2500      	movs	r5, #0
 801cdfe:	ab08      	add	r3, sp, #32
 801ce00:	4e12      	ldr	r6, [pc, #72]	@ (801ce4c <nema_vg_grad_set+0x260>)
 801ce02:	4608      	mov	r0, r1
 801ce04:	9300      	str	r3, [sp, #0]
 801ce06:	2240      	movs	r2, #64	@ 0x40
 801ce08:	2301      	movs	r3, #1
 801ce0a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801ce0e:	9508      	str	r5, [sp, #32]
 801ce10:	9509      	str	r5, [sp, #36]	@ 0x24
 801ce12:	950a      	str	r5, [sp, #40]	@ 0x28
 801ce14:	960b      	str	r6, [sp, #44]	@ 0x2c
 801ce16:	f7f4 fc5f 	bl	80116d8 <nema_interpolate_rect_colors>
 801ce1a:	f04f 33ff 	mov.w	r3, #4294967295
 801ce1e:	2100      	movs	r1, #0
 801ce20:	9300      	str	r3, [sp, #0]
 801ce22:	4608      	mov	r0, r1
 801ce24:	2301      	movs	r3, #1
 801ce26:	2240      	movs	r2, #64	@ 0x40
 801ce28:	f7f4 fa6c 	bl	8011304 <nema_fill_rect>
 801ce2c:	2000      	movs	r0, #0
 801ce2e:	f7f3 ffb3 	bl	8010d98 <nema_enable_gradient>
 801ce32:	f7f3 ff93 	bl	8010d5c <nema_set_clip_pop>
 801ce36:	b011      	add	sp, #68	@ 0x44
 801ce38:	ecbd 8b10 	vpop	{d8-d15}
 801ce3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce40:	c77fff00 	.word	0xc77fff00
 801ce44:	427c0000 	.word	0x427c0000
 801ce48:	08033608 	.word	0x08033608
 801ce4c:	437f0000 	.word	0x437f0000
 801ce50:	00000000 	.word	0x00000000
 801ce54:	427e0000 	.word	0x427e0000
 801ce58:	2300      	movs	r3, #0
 801ce5a:	f04f 0b01 	mov.w	fp, #1
 801ce5e:	9305      	str	r3, [sp, #20]
 801ce60:	4588      	cmp	r8, r1
 801ce62:	f000 809b 	beq.w	801cf9c <nema_vg_grad_set+0x3b0>
 801ce66:	eb05 0389 	add.w	r3, r5, r9, lsl #2
 801ce6a:	edd3 6a00 	vldr	s13, [r3]
 801ce6e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ce72:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801ce76:	ee37 7a27 	vadd.f32	s14, s14, s15
 801ce7a:	eef0 7a66 	vmov.f32	s15, s13
 801ce7e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801ce82:	9b04      	ldr	r3, [sp, #16]
 801ce84:	45b1      	cmp	r9, r6
 801ce86:	eb03 1309 	add.w	r3, r3, r9, lsl #4
 801ce8a:	ee17 0a90 	vmov	r0, s15
 801ce8e:	edd3 2a00 	vldr	s5, [r3]
 801ce92:	edd3 3a01 	vldr	s7, [r3, #4]
 801ce96:	ed93 6a03 	vldr	s12, [r3, #12]
 801ce9a:	edd3 4a02 	vldr	s9, [r3, #8]
 801ce9e:	f000 80f1 	beq.w	801d084 <nema_vg_grad_set+0x498>
 801cea2:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801cea6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ceaa:	4688      	mov	r8, r1
 801ceac:	ee77 5a67 	vsub.f32	s11, s14, s15
 801ceb0:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801ceb4:	ed93 5a00 	vldr	s10, [r3]
 801ceb8:	ee65 6a0c 	vmul.f32	s13, s10, s24
 801cebc:	eebe 5acd 	vcvt.s32.f32	s10, s10, #6
 801cec0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801cec4:	9b04      	ldr	r3, [sp, #16]
 801cec6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801ceca:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801cece:	ed93 ea00 	vldr	s28, [r3]
 801ced2:	edd3 da01 	vldr	s27, [r3, #4]
 801ced6:	ed93 da02 	vldr	s26, [r3, #8]
 801ceda:	edd3 ca03 	vldr	s25, [r3, #12]
 801cede:	ee15 3a10 	vmov	r3, s10
 801cee2:	1a1a      	subs	r2, r3, r0
 801cee4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801cee8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801ceec:	eef4 5ac7 	vcmpe.f32	s11, s14
 801cef0:	ee3e 3a62 	vsub.f32	s6, s28, s5
 801cef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cef8:	ee3d 4ae3 	vsub.f32	s8, s27, s7
 801cefc:	ee3d 5a64 	vsub.f32	s10, s26, s9
 801cf00:	ee7c 6ac6 	vsub.f32	s13, s25, s12
 801cf04:	ee83 2a27 	vdiv.f32	s4, s6, s15
 801cf08:	ee84 3a27 	vdiv.f32	s6, s8, s15
 801cf0c:	ee85 4a27 	vdiv.f32	s8, s10, s15
 801cf10:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 801cf14:	bfca      	itet	gt
 801cf16:	eef7 7a08 	vmovgt.f32	s15, #120	@ 0x3fc00000  1.5
 801cf1a:	ee77 7a65 	vsuble.f32	s15, s14, s11
 801cf1e:	ee77 7ae5 	vsubgt.f32	s15, s15, s11
 801cf22:	ee62 fa27 	vmul.f32	s31, s4, s15
 801cf26:	ee23 7a27 	vmul.f32	s14, s6, s15
 801cf2a:	ee24 fa27 	vmul.f32	s30, s8, s15
 801cf2e:	ee65 7a27 	vmul.f32	s15, s10, s15
 801cf32:	ee37 ba23 	vadd.f32	s22, s14, s7
 801cf36:	ee77 ea86 	vadd.f32	s29, s15, s12
 801cf3a:	ee7f faa2 	vadd.f32	s31, s31, s5
 801cf3e:	ee3f fa24 	vadd.f32	s30, s30, s9
 801cf42:	ed5f 4a3d 	vldr	s9, [pc, #-244]	@ 801ce50 <nema_vg_grad_set+0x264>
 801cf46:	eeb0 0a6f 	vmov.f32	s0, s31
 801cf4a:	eef0 0a4b 	vmov.f32	s1, s22
 801cf4e:	eef0 1a6e 	vmov.f32	s3, s29
 801cf52:	eeb0 1a4f 	vmov.f32	s2, s30
 801cf56:	eef0 3a64 	vmov.f32	s7, s9
 801cf5a:	eef0 2a64 	vmov.f32	s5, s9
 801cf5e:	eef0 5a48 	vmov.f32	s11, s16
 801cf62:	e9cd 2006 	strd	r2, r0, [sp, #24]
 801cf66:	f7f4 f961 	bl	801122c <nema_set_gradient>
 801cf6a:	e9dd 2006 	ldrd	r2, r0, [sp, #24]
 801cf6e:	f04f 33ff 	mov.w	r3, #4294967295
 801cf72:	2100      	movs	r1, #0
 801cf74:	9300      	str	r3, [sp, #0]
 801cf76:	2301      	movs	r3, #1
 801cf78:	f7f4 f9c4 	bl	8011304 <nema_fill_rect>
 801cf7c:	f1ba 0f01 	cmp.w	sl, #1
 801cf80:	d107      	bne.n	801cf92 <nema_vg_grad_set+0x3a6>
 801cf82:	eeb0 aa6e 	vmov.f32	s20, s29
 801cf86:	eef0 8a4f 	vmov.f32	s17, s30
 801cf8a:	eeb0 9a4b 	vmov.f32	s18, s22
 801cf8e:	eef0 9a6f 	vmov.f32	s19, s31
 801cf92:	f1bb 0f01 	cmp.w	fp, #1
 801cf96:	46da      	mov	sl, fp
 801cf98:	f47f aebc 	bne.w	801cd14 <nema_vg_grad_set+0x128>
 801cf9c:	2000      	movs	r0, #0
 801cf9e:	f7f3 fefb 	bl	8010d98 <nema_enable_gradient>
 801cfa2:	eefc 7aca 	vcvt.u32.f32	s15, s20
 801cfa6:	edcd 7a04 	vstr	s15, [sp, #16]
 801cfaa:	eefc 7ae8 	vcvt.u32.f32	s15, s17
 801cfae:	edcd 7a05 	vstr	s15, [sp, #20]
 801cfb2:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 801cfb6:	edcd 7a06 	vstr	s15, [sp, #24]
 801cfba:	eefc 7ae9 	vcvt.u32.f32	s15, s19
 801cfbe:	edcd 7a07 	vstr	s15, [sp, #28]
 801cfc2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801cfc6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801cfca:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801cfce:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801cfd2:	f7f3 ff47 	bl	8010e64 <nema_rgba>
 801cfd6:	2301      	movs	r3, #1
 801cfd8:	2100      	movs	r1, #0
 801cfda:	9000      	str	r0, [sp, #0]
 801cfdc:	461a      	mov	r2, r3
 801cfde:	4608      	mov	r0, r1
 801cfe0:	f7f4 f990 	bl	8011304 <nema_fill_rect>
 801cfe4:	eefc 7aec 	vcvt.u32.f32	s15, s25
 801cfe8:	edcd 7a04 	vstr	s15, [sp, #16]
 801cfec:	eefc 7acd 	vcvt.u32.f32	s15, s26
 801cff0:	edcd 7a05 	vstr	s15, [sp, #20]
 801cff4:	eefc 7aed 	vcvt.u32.f32	s15, s27
 801cff8:	edcd 7a06 	vstr	s15, [sp, #24]
 801cffc:	eefc 7ace 	vcvt.u32.f32	s15, s28
 801d000:	edcd 7a07 	vstr	s15, [sp, #28]
 801d004:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d008:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d00c:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d010:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d014:	f7f3 ff26 	bl	8010e64 <nema_rgba>
 801d018:	2301      	movs	r3, #1
 801d01a:	9000      	str	r0, [sp, #0]
 801d01c:	461a      	mov	r2, r3
 801d01e:	2100      	movs	r1, #0
 801d020:	203f      	movs	r0, #63	@ 0x3f
 801d022:	f7f4 f96f 	bl	8011304 <nema_fill_rect>
 801d026:	e701      	b.n	801ce2c <nema_vg_grad_set+0x240>
 801d028:	9b05      	ldr	r3, [sp, #20]
 801d02a:	2b00      	cmp	r3, #0
 801d02c:	d0b6      	beq.n	801cf9c <nema_vg_grad_set+0x3b0>
 801d02e:	f1b8 0f00 	cmp.w	r8, #0
 801d032:	ddb3      	ble.n	801cf9c <nema_vg_grad_set+0x3b0>
 801d034:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d038:	edd3 6a00 	vldr	s13, [r3]
 801d03c:	eef4 6aeb 	vcmpe.f32	s13, s23
 801d040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d044:	d5aa      	bpl.n	801cf9c <nema_vg_grad_set+0x3b0>
 801d046:	4641      	mov	r1, r8
 801d048:	3101      	adds	r1, #1
 801d04a:	4541      	cmp	r1, r8
 801d04c:	d0a6      	beq.n	801cf9c <nema_vg_grad_set+0x3b0>
 801d04e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d052:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801d056:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d05a:	eef0 7a66 	vmov.f32	s15, s13
 801d05e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801d062:	9b04      	ldr	r3, [sp, #16]
 801d064:	f04f 0b01 	mov.w	fp, #1
 801d068:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801d06c:	ed93 6a03 	vldr	s12, [r3, #12]
 801d070:	edd3 2a00 	vldr	s5, [r3]
 801d074:	edd3 3a01 	vldr	s7, [r3, #4]
 801d078:	edd3 4a02 	vldr	s9, [r3, #8]
 801d07c:	ee17 0a90 	vmov	r0, s15
 801d080:	f8cd b014 	str.w	fp, [sp, #20]
 801d084:	2902      	cmp	r1, #2
 801d086:	d037      	beq.n	801d0f8 <nema_vg_grad_set+0x50c>
 801d088:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d08c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d090:	4688      	mov	r8, r1
 801d092:	ee77 5a67 	vsub.f32	s11, s14, s15
 801d096:	dd10      	ble.n	801d0ba <nema_vg_grad_set+0x4ce>
 801d098:	f1c0 0240 	rsb	r2, r0, #64	@ 0x40
 801d09c:	46b1      	mov	r9, r6
 801d09e:	eef0 ca46 	vmov.f32	s25, s12
 801d0a2:	eeb0 da64 	vmov.f32	s26, s9
 801d0a6:	eef0 da63 	vmov.f32	s27, s7
 801d0aa:	eeb0 ea62 	vmov.f32	s28, s5
 801d0ae:	ed5f 7a97 	vldr	s15, [pc, #-604]	@ 801ce54 <nema_vg_grad_set+0x268>
 801d0b2:	e717      	b.n	801cee4 <nema_vg_grad_set+0x2f8>
 801d0b4:	f04f 0b01 	mov.w	fp, #1
 801d0b8:	e6d2      	b.n	801ce60 <nema_vg_grad_set+0x274>
 801d0ba:	46b1      	mov	r9, r6
 801d0bc:	e6f8      	b.n	801ceb0 <nema_vg_grad_set+0x2c4>
 801d0be:	f1b8 0f02 	cmp.w	r8, #2
 801d0c2:	f43f af6b 	beq.w	801cf9c <nema_vg_grad_set+0x3b0>
 801d0c6:	ee67 6a8c 	vmul.f32	s13, s15, s24
 801d0ca:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d0ce:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d0d2:	eef0 6a67 	vmov.f32	s13, s15
 801d0d6:	eefe 6acd 	vcvt.s32.f32	s13, s13, #6
 801d0da:	9b04      	ldr	r3, [sp, #16]
 801d0dc:	468b      	mov	fp, r1
 801d0de:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 801d0e2:	4616      	mov	r6, r2
 801d0e4:	edd3 3a01 	vldr	s7, [r3, #4]
 801d0e8:	edd3 2a00 	vldr	s5, [r3]
 801d0ec:	ed93 6a03 	vldr	s12, [r3, #12]
 801d0f0:	edd3 4a02 	vldr	s9, [r3, #8]
 801d0f4:	ee16 0a90 	vmov	r0, s13
 801d0f8:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801d0fc:	4602      	mov	r2, r0
 801d0fe:	eef0 7a47 	vmov.f32	s15, s14
 801d102:	46b1      	mov	r9, r6
 801d104:	eeb0 7a65 	vmov.f32	s14, s11
 801d108:	eef0 ca46 	vmov.f32	s25, s12
 801d10c:	eeb0 da64 	vmov.f32	s26, s9
 801d110:	eef0 da63 	vmov.f32	s27, s7
 801d114:	eeb0 ea62 	vmov.f32	s28, s5
 801d118:	2000      	movs	r0, #0
 801d11a:	f04f 0802 	mov.w	r8, #2
 801d11e:	e6e1      	b.n	801cee4 <nema_vg_grad_set+0x2f8>
 801d120:	4632      	mov	r2, r6
 801d122:	eeb0 7a6a 	vmov.f32	s14, s21
 801d126:	e5ff      	b.n	801cd28 <nema_vg_grad_set+0x13c>
 801d128:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 801d12c:	f7ff fc82 	bl	801ca34 <nema_vg_set_error>
 801d130:	2720      	movs	r7, #32
 801d132:	e567      	b.n	801cc04 <nema_vg_grad_set+0x18>
 801d134:	2102      	movs	r1, #2
 801d136:	e644      	b.n	801cdc2 <nema_vg_grad_set+0x1d6>
 801d138:	469b      	mov	fp, r3
 801d13a:	e691      	b.n	801ce60 <nema_vg_grad_set+0x274>

0801d13c <nema_vg_paint_set_grad_linear>:
 801d13c:	2800      	cmp	r0, #0
 801d13e:	d065      	beq.n	801d20c <nema_vg_paint_set_grad_linear+0xd0>
 801d140:	b510      	push	{r4, lr}
 801d142:	ed2d 8b06 	vpush	{d8-d10}
 801d146:	ee31 8ae0 	vsub.f32	s16, s3, s1
 801d14a:	ee71 8a40 	vsub.f32	s17, s2, s0
 801d14e:	ee68 7a08 	vmul.f32	s15, s16, s16
 801d152:	eeb0 9a40 	vmov.f32	s18, s0
 801d156:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801d15a:	f002 030c 	and.w	r3, r2, #12
 801d15e:	2b08      	cmp	r3, #8
 801d160:	bf08      	it	eq
 801d162:	f002 0201 	andeq.w	r2, r2, #1
 801d166:	f002 020f 	and.w	r2, r2, #15
 801d16a:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d16e:	6341      	str	r1, [r0, #52]	@ 0x34
 801d170:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d174:	eef0 9a60 	vmov.f32	s19, s1
 801d178:	4604      	mov	r4, r0
 801d17a:	f7f4 fb7f 	bl	801187c <nema_sqrt>
 801d17e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801d182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d186:	f04f 0300 	mov.w	r3, #0
 801d18a:	d10e      	bne.n	801d1aa <nema_vg_paint_set_grad_linear+0x6e>
 801d18c:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d190:	4920      	ldr	r1, [pc, #128]	@ (801d214 <nema_vg_paint_set_grad_linear+0xd8>)
 801d192:	63a3      	str	r3, [r4, #56]	@ 0x38
 801d194:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801d196:	6463      	str	r3, [r4, #68]	@ 0x44
 801d198:	64a3      	str	r3, [r4, #72]	@ 0x48
 801d19a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801d19c:	6523      	str	r3, [r4, #80]	@ 0x50
 801d19e:	6563      	str	r3, [r4, #84]	@ 0x54
 801d1a0:	6421      	str	r1, [r4, #64]	@ 0x40
 801d1a2:	65a2      	str	r2, [r4, #88]	@ 0x58
 801d1a4:	ecbd 8b06 	vpop	{d8-d10}
 801d1a8:	bd10      	pop	{r4, pc}
 801d1aa:	ee88 aa80 	vdiv.f32	s20, s17, s0
 801d1ae:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 801d218 <nema_vg_paint_set_grad_linear+0xdc>
 801d1b2:	eec8 8a00 	vdiv.f32	s17, s16, s0
 801d1b6:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 801d1ba:	ee87 8a80 	vdiv.f32	s16, s15, s0
 801d1be:	f7f4 fb87 	bl	80118d0 <nema_mat3x3_load_identity>
 801d1c2:	ee29 7aa8 	vmul.f32	s14, s19, s17
 801d1c6:	ee69 7a4a 	vnmul.f32	s15, s18, s20
 801d1ca:	ee69 9a8a 	vmul.f32	s19, s19, s20
 801d1ce:	ee29 9a28 	vmul.f32	s18, s18, s17
 801d1d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d1d6:	ee39 9a69 	vsub.f32	s18, s18, s19
 801d1da:	ee28 aa0a 	vmul.f32	s20, s16, s20
 801d1de:	ee28 7a28 	vmul.f32	s14, s16, s17
 801d1e2:	ee67 7a88 	vmul.f32	s15, s15, s16
 801d1e6:	ee29 9a08 	vmul.f32	s18, s18, s16
 801d1ea:	ee68 8ac8 	vnmul.f32	s17, s17, s16
 801d1ee:	edc4 7a10 	vstr	s15, [r4, #64]	@ 0x40
 801d1f2:	ed84 9a13 	vstr	s18, [r4, #76]	@ 0x4c
 801d1f6:	ed84 aa0e 	vstr	s20, [r4, #56]	@ 0x38
 801d1fa:	ed84 aa12 	vstr	s20, [r4, #72]	@ 0x48
 801d1fe:	ed84 7a0f 	vstr	s14, [r4, #60]	@ 0x3c
 801d202:	edc4 8a11 	vstr	s17, [r4, #68]	@ 0x44
 801d206:	ecbd 8b06 	vpop	{d8-d10}
 801d20a:	bd10      	pop	{r4, pc}
 801d20c:	2001      	movs	r0, #1
 801d20e:	f7ff bc11 	b.w	801ca34 <nema_vg_set_error>
 801d212:	bf00      	nop
 801d214:	427e0000 	.word	0x427e0000
 801d218:	42800000 	.word	0x42800000

0801d21c <nema_vg_paint_set_grad_radial>:
 801d21c:	2800      	cmp	r0, #0
 801d21e:	d03f      	beq.n	801d2a0 <nema_vg_paint_set_grad_radial+0x84>
 801d220:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801d224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d228:	6341      	str	r1, [r0, #52]	@ 0x34
 801d22a:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d22e:	d421      	bmi.n	801d274 <nema_vg_paint_set_grad_radial+0x58>
 801d230:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 801d2a8 <nema_vg_paint_set_grad_radial+0x8c>
 801d234:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d23c:	d922      	bls.n	801d284 <nema_vg_paint_set_grad_radial+0x68>
 801d23e:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 801d2ac <nema_vg_paint_set_grad_radial+0x90>
 801d242:	eec7 7a01 	vdiv.f32	s15, s14, s2
 801d246:	2300      	movs	r3, #0
 801d248:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d24c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801d250:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d254:	eef1 7a67 	vneg.f32	s15, s15
 801d258:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 801d25c:	edc0 0a13 	vstr	s1, [r0, #76]	@ 0x4c
 801d260:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801d264:	edc0 7a12 	vstr	s15, [r0, #72]	@ 0x48
 801d268:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d26a:	6443      	str	r3, [r0, #68]	@ 0x44
 801d26c:	6503      	str	r3, [r0, #80]	@ 0x50
 801d26e:	6543      	str	r3, [r0, #84]	@ 0x54
 801d270:	6582      	str	r2, [r0, #88]	@ 0x58
 801d272:	4770      	bx	lr
 801d274:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801d2b0 <nema_vg_paint_set_grad_radial+0x94>
 801d278:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d27c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d280:	da00      	bge.n	801d284 <nema_vg_paint_set_grad_radial+0x68>
 801d282:	dbdc      	blt.n	801d23e <nema_vg_paint_set_grad_radial+0x22>
 801d284:	2300      	movs	r3, #0
 801d286:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d28a:	490a      	ldr	r1, [pc, #40]	@ (801d2b4 <nema_vg_paint_set_grad_radial+0x98>)
 801d28c:	6383      	str	r3, [r0, #56]	@ 0x38
 801d28e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d290:	6443      	str	r3, [r0, #68]	@ 0x44
 801d292:	6483      	str	r3, [r0, #72]	@ 0x48
 801d294:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801d296:	6503      	str	r3, [r0, #80]	@ 0x50
 801d298:	6543      	str	r3, [r0, #84]	@ 0x54
 801d29a:	6401      	str	r1, [r0, #64]	@ 0x40
 801d29c:	6582      	str	r2, [r0, #88]	@ 0x58
 801d29e:	4770      	bx	lr
 801d2a0:	2001      	movs	r0, #1
 801d2a2:	f7ff bbc7 	b.w	801ca34 <nema_vg_set_error>
 801d2a6:	bf00      	nop
 801d2a8:	3727c5ac 	.word	0x3727c5ac
 801d2ac:	42800000 	.word	0x42800000
 801d2b0:	b727c5ac 	.word	0xb727c5ac
 801d2b4:	427e0000 	.word	0x427e0000

0801d2b8 <nema_vg_paint_set_paint_color>:
 801d2b8:	b108      	cbz	r0, 801d2be <nema_vg_paint_set_paint_color+0x6>
 801d2ba:	6301      	str	r1, [r0, #48]	@ 0x30
 801d2bc:	4770      	bx	lr
 801d2be:	2001      	movs	r0, #1
 801d2c0:	f7ff bbb8 	b.w	801ca34 <nema_vg_set_error>

0801d2c4 <nema_vg_paint_set_opacity>:
 801d2c4:	b110      	cbz	r0, 801d2cc <nema_vg_paint_set_opacity+0x8>
 801d2c6:	ed80 0a36 	vstr	s0, [r0, #216]	@ 0xd8
 801d2ca:	4770      	bx	lr
 801d2cc:	2001      	movs	r0, #1
 801d2ce:	f7ff bbb1 	b.w	801ca34 <nema_vg_set_error>
 801d2d2:	bf00      	nop

0801d2d4 <nema_vg_paint_set_stroke_width>:
 801d2d4:	b110      	cbz	r0, 801d2dc <nema_vg_paint_set_stroke_width+0x8>
 801d2d6:	ed80 0a35 	vstr	s0, [r0, #212]	@ 0xd4
 801d2da:	4770      	bx	lr
 801d2dc:	2001      	movs	r0, #1
 801d2de:	f7ff bba9 	b.w	801ca34 <nema_vg_set_error>
 801d2e2:	bf00      	nop

0801d2e4 <bind_tex1_according_paint>:
 801d2e4:	b570      	push	{r4, r5, r6, lr}
 801d2e6:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
 801d2ea:	b084      	sub	sp, #16
 801d2ec:	3b01      	subs	r3, #1
 801d2ee:	4604      	mov	r4, r0
 801d2f0:	2b03      	cmp	r3, #3
 801d2f2:	d81b      	bhi.n	801d32c <bind_tex1_according_paint+0x48>
 801d2f4:	e8df f003 	tbb	[pc, r3]
 801d2f8:	281c0228 	.word	0x281c0228
 801d2fc:	6805      	ldr	r5, [r0, #0]
 801d2fe:	2d00      	cmp	r5, #0
 801d300:	d050      	beq.n	801d3a4 <bind_tex1_according_paint+0xc0>
 801d302:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801d306:	2b00      	cmp	r3, #0
 801d308:	d03f      	beq.n	801d38a <bind_tex1_according_paint+0xa6>
 801d30a:	6844      	ldr	r4, [r0, #4]
 801d30c:	2c00      	cmp	r4, #0
 801d30e:	d049      	beq.n	801d3a4 <bind_tex1_according_paint+0xc0>
 801d310:	7f26      	ldrb	r6, [r4, #28]
 801d312:	7f2b      	ldrb	r3, [r5, #28]
 801d314:	8a6a      	ldrh	r2, [r5, #18]
 801d316:	8a29      	ldrh	r1, [r5, #16]
 801d318:	68e8      	ldr	r0, [r5, #12]
 801d31a:	9603      	str	r6, [sp, #12]
 801d31c:	68e4      	ldr	r4, [r4, #12]
 801d31e:	9402      	str	r4, [sp, #8]
 801d320:	7f6c      	ldrb	r4, [r5, #29]
 801d322:	9401      	str	r4, [sp, #4]
 801d324:	696c      	ldr	r4, [r5, #20]
 801d326:	9400      	str	r4, [sp, #0]
 801d328:	f7f3 ff1e 	bl	8011168 <nema_bind_lut_tex>
 801d32c:	b004      	add	sp, #16
 801d32e:	bd70      	pop	{r4, r5, r6, pc}
 801d330:	f7f4 fe38 	bl	8011fa4 <nema_readHwConfigH>
 801d334:	f410 7580 	ands.w	r5, r0, #256	@ 0x100
 801d338:	d116      	bne.n	801d368 <bind_tex1_according_paint+0x84>
 801d33a:	2020      	movs	r0, #32
 801d33c:	f7ff fb7a 	bl	801ca34 <nema_vg_set_error>
 801d340:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
 801d344:	b004      	add	sp, #16
 801d346:	bd70      	pop	{r4, r5, r6, pc}
 801d348:	2301      	movs	r3, #1
 801d34a:	2000      	movs	r0, #0
 801d34c:	f894 20d0 	ldrb.w	r2, [r4, #208]	@ 0xd0
 801d350:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d352:	431a      	orrs	r2, r3
 801d354:	68c9      	ldr	r1, [r1, #12]
 801d356:	e9cd 0201 	strd	r0, r2, [sp, #4]
 801d35a:	9300      	str	r3, [sp, #0]
 801d35c:	4618      	mov	r0, r3
 801d35e:	2240      	movs	r2, #64	@ 0x40
 801d360:	f7f3 fbe0 	bl	8010b24 <nema_bind_tex>
 801d364:	b004      	add	sp, #16
 801d366:	bd70      	pop	{r4, r5, r6, pc}
 801d368:	2201      	movs	r2, #1
 801d36a:	2004      	movs	r0, #4
 801d36c:	f894 30d0 	ldrb.w	r3, [r4, #208]	@ 0xd0
 801d370:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d372:	f043 0381 	orr.w	r3, r3, #129	@ 0x81
 801d376:	68c9      	ldr	r1, [r1, #12]
 801d378:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801d37c:	9200      	str	r2, [sp, #0]
 801d37e:	4610      	mov	r0, r2
 801d380:	2340      	movs	r3, #64	@ 0x40
 801d382:	f7f3 fbcf 	bl	8010b24 <nema_bind_tex>
 801d386:	b004      	add	sp, #16
 801d388:	bd70      	pop	{r4, r5, r6, pc}
 801d38a:	7f68      	ldrb	r0, [r5, #29]
 801d38c:	8a6b      	ldrh	r3, [r5, #18]
 801d38e:	8a2a      	ldrh	r2, [r5, #16]
 801d390:	68e9      	ldr	r1, [r5, #12]
 801d392:	9002      	str	r0, [sp, #8]
 801d394:	6968      	ldr	r0, [r5, #20]
 801d396:	9001      	str	r0, [sp, #4]
 801d398:	7f28      	ldrb	r0, [r5, #28]
 801d39a:	9000      	str	r0, [sp, #0]
 801d39c:	2001      	movs	r0, #1
 801d39e:	f7f3 fbc1 	bl	8010b24 <nema_bind_tex>
 801d3a2:	e7c3      	b.n	801d32c <bind_tex1_according_paint+0x48>
 801d3a4:	2002      	movs	r0, #2
 801d3a6:	b004      	add	sp, #16
 801d3a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d3ac:	f7ff bb42 	b.w	801ca34 <nema_vg_set_error>

0801d3b0 <nema_vg_path_clear>:
 801d3b0:	b118      	cbz	r0, 801d3ba <nema_vg_path_clear+0xa>
 801d3b2:	2300      	movs	r3, #0
 801d3b4:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d3b8:	4770      	bx	lr
 801d3ba:	2001      	movs	r0, #1
 801d3bc:	f7ff bb3a 	b.w	801ca34 <nema_vg_set_error>

0801d3c0 <nema_vg_path_create>:
 801d3c0:	b508      	push	{r3, lr}
 801d3c2:	2088      	movs	r0, #136	@ 0x88
 801d3c4:	f7e5 fcc6 	bl	8002d54 <nema_host_malloc>
 801d3c8:	2200      	movs	r2, #0
 801d3ca:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801d3ce:	bd08      	pop	{r3, pc}

0801d3d0 <nema_vg_path_set_shape_and_bbox>:
 801d3d0:	b430      	push	{r4, r5}
 801d3d2:	e9dd 5402 	ldrd	r5, r4, [sp, #8]
 801d3d6:	2800      	cmp	r0, #0
 801d3d8:	d065      	beq.n	801d4a6 <nema_vg_path_set_shape_and_bbox+0xd6>
 801d3da:	e9c0 1300 	strd	r1, r3, [r0]
 801d3de:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d3e2:	edd4 7a00 	vldr	s15, [r4]
 801d3e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801d3ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d3ee:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d3f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d3f6:	ee17 2a10 	vmov	r2, s14
 801d3fa:	bf4c      	ite	mi
 801d3fc:	2301      	movmi	r3, #1
 801d3fe:	2300      	movpl	r3, #0
 801d400:	1ad3      	subs	r3, r2, r3
 801d402:	ee07 3a10 	vmov	s14, r3
 801d406:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d40a:	edc0 6a04 	vstr	s13, [r0, #16]
 801d40e:	ed94 7a01 	vldr	s14, [r4, #4]
 801d412:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d416:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801d41a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801d41e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d422:	ee17 2a90 	vmov	r2, s15
 801d426:	bf4c      	ite	mi
 801d428:	2301      	movmi	r3, #1
 801d42a:	2300      	movpl	r3, #0
 801d42c:	1ad3      	subs	r3, r2, r3
 801d42e:	ee07 3a90 	vmov	s15, r3
 801d432:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d436:	edc0 7a05 	vstr	s15, [r0, #20]
 801d43a:	ed94 6a02 	vldr	s12, [r4, #8]
 801d43e:	eebd 7ac6 	vcvt.s32.f32	s14, s12
 801d442:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801d446:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801d44a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d44e:	ee17 2a10 	vmov	r2, s14
 801d452:	bfcc      	ite	gt
 801d454:	2301      	movgt	r3, #1
 801d456:	2300      	movle	r3, #0
 801d458:	4413      	add	r3, r2
 801d45a:	ee07 3a10 	vmov	s14, r3
 801d45e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801d462:	ed80 7a06 	vstr	s14, [r0, #24]
 801d466:	edd4 5a03 	vldr	s11, [r4, #12]
 801d46a:	eebd 6ae5 	vcvt.s32.f32	s12, s11
 801d46e:	eeb8 5ac6 	vcvt.f32.s32	s10, s12
 801d472:	eef4 5ac5 	vcmpe.f32	s11, s10
 801d476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d47a:	ee16 2a10 	vmov	r2, s12
 801d47e:	bfcc      	ite	gt
 801d480:	2301      	movgt	r3, #1
 801d482:	2300      	movle	r3, #0
 801d484:	4413      	add	r3, r2
 801d486:	ee06 3a10 	vmov	s12, r3
 801d48a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801d48e:	ee37 7a66 	vsub.f32	s14, s14, s13
 801d492:	ee76 7a67 	vsub.f32	s15, s12, s15
 801d496:	ed80 7a08 	vstr	s14, [r0, #32]
 801d49a:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801d49e:	ed80 6a07 	vstr	s12, [r0, #28]
 801d4a2:	bc30      	pop	{r4, r5}
 801d4a4:	4770      	bx	lr
 801d4a6:	2001      	movs	r0, #1
 801d4a8:	bc30      	pop	{r4, r5}
 801d4aa:	f7ff bac3 	b.w	801ca34 <nema_vg_set_error>
 801d4ae:	bf00      	nop

0801d4b0 <nema_vg_path_set_shape>:
 801d4b0:	b430      	push	{r4, r5}
 801d4b2:	9d02      	ldr	r5, [sp, #8]
 801d4b4:	b130      	cbz	r0, 801d4c4 <nema_vg_path_set_shape+0x14>
 801d4b6:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d4ba:	e9c0 1300 	strd	r1, r3, [r0]
 801d4be:	bc30      	pop	{r4, r5}
 801d4c0:	f001 b966 	b.w	801e790 <calculate_aabb_per_shape>
 801d4c4:	2001      	movs	r0, #1
 801d4c6:	bc30      	pop	{r4, r5}
 801d4c8:	f7ff bab4 	b.w	801ca34 <nema_vg_set_error>

0801d4cc <nema_vg_path_set_matrix>:
 801d4cc:	2800      	cmp	r0, #0
 801d4ce:	d063      	beq.n	801d598 <nema_vg_path_set_matrix+0xcc>
 801d4d0:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 801d4d4:	2900      	cmp	r1, #0
 801d4d6:	d055      	beq.n	801d584 <nema_vg_path_set_matrix+0xb8>
 801d4d8:	edd1 7a00 	vldr	s15, [r1]
 801d4dc:	edc0 7a18 	vstr	s15, [r0, #96]	@ 0x60
 801d4e0:	edd1 3a01 	vldr	s7, [r1, #4]
 801d4e4:	edc0 3a19 	vstr	s7, [r0, #100]	@ 0x64
 801d4e8:	ed91 7a02 	vldr	s14, [r1, #8]
 801d4ec:	ed80 7a1a 	vstr	s14, [r0, #104]	@ 0x68
 801d4f0:	edd1 6a03 	vldr	s13, [r1, #12]
 801d4f4:	edc0 6a1b 	vstr	s13, [r0, #108]	@ 0x6c
 801d4f8:	ed91 4a04 	vldr	s8, [r1, #16]
 801d4fc:	ed80 4a1c 	vstr	s8, [r0, #112]	@ 0x70
 801d500:	ed91 5a05 	vldr	s10, [r1, #20]
 801d504:	ed80 5a1d 	vstr	s10, [r0, #116]	@ 0x74
 801d508:	ed91 6a06 	vldr	s12, [r1, #24]
 801d50c:	ed80 6a1e 	vstr	s12, [r0, #120]	@ 0x78
 801d510:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 801d514:	edd1 5a07 	vldr	s11, [r1, #28]
 801d518:	eef4 7a64 	vcmp.f32	s15, s9
 801d51c:	edc0 5a1f 	vstr	s11, [r0, #124]	@ 0x7c
 801d520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d524:	6a0a      	ldr	r2, [r1, #32]
 801d526:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 801d52a:	d130      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d52c:	eef5 3a40 	vcmp.f32	s7, #0.0
 801d530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d534:	d12b      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d536:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801d53a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d53e:	d126      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d540:	eef5 6a40 	vcmp.f32	s13, #0.0
 801d544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d548:	d121      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d54a:	eeb4 4a64 	vcmp.f32	s8, s9
 801d54e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d552:	d11c      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d554:	eeb5 5a40 	vcmp.f32	s10, #0.0
 801d558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d55c:	d117      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d55e:	eeb5 6a40 	vcmp.f32	s12, #0.0
 801d562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d566:	d112      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d568:	eef5 5a40 	vcmp.f32	s11, #0.0
 801d56c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d570:	d10d      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d572:	ed90 7a20 	vldr	s14, [r0, #128]	@ 0x80
 801d576:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d57a:	eeb4 7a67 	vcmp.f32	s14, s15
 801d57e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d582:	d104      	bne.n	801d58e <nema_vg_path_set_matrix+0xc2>
 801d584:	f023 0301 	bic.w	r3, r3, #1
 801d588:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d58c:	4770      	bx	lr
 801d58e:	f043 0301 	orr.w	r3, r3, #1
 801d592:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d596:	4770      	bx	lr
 801d598:	2001      	movs	r0, #1
 801d59a:	f7ff ba4b 	b.w	801ca34 <nema_vg_set_error>
 801d59e:	bf00      	nop

0801d5a0 <set_tsvg_text_max_size>:
 801d5a0:	4a02      	ldr	r2, [pc, #8]	@ (801d5ac <set_tsvg_text_max_size+0xc>)
 801d5a2:	4b03      	ldr	r3, [pc, #12]	@ (801d5b0 <set_tsvg_text_max_size+0x10>)
 801d5a4:	6010      	str	r0, [r2, #0]
 801d5a6:	6019      	str	r1, [r3, #0]
 801d5a8:	4770      	bx	lr
 801d5aa:	bf00      	nop
 801d5ac:	200001dc 	.word	0x200001dc
 801d5b0:	200001e0 	.word	0x200001e0

0801d5b4 <tsvg_init>:
 801d5b4:	b508      	push	{r3, lr}
 801d5b6:	f7ff fab1 	bl	801cb1c <nema_vg_paint_create>
 801d5ba:	4b05      	ldr	r3, [pc, #20]	@ (801d5d0 <tsvg_init+0x1c>)
 801d5bc:	6018      	str	r0, [r3, #0]
 801d5be:	f7ff feff 	bl	801d3c0 <nema_vg_path_create>
 801d5c2:	4b04      	ldr	r3, [pc, #16]	@ (801d5d4 <tsvg_init+0x20>)
 801d5c4:	6018      	str	r0, [r3, #0]
 801d5c6:	f7ff faf1 	bl	801cbac <nema_vg_grad_create>
 801d5ca:	4b03      	ldr	r3, [pc, #12]	@ (801d5d8 <tsvg_init+0x24>)
 801d5cc:	6018      	str	r0, [r3, #0]
 801d5ce:	bd08      	pop	{r3, pc}
 801d5d0:	20083294 	.word	0x20083294
 801d5d4:	20083298 	.word	0x20083298
 801d5d8:	20083290 	.word	0x20083290

0801d5dc <tsi_malloc_init_pool_aligned>:
 801d5dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d5e0:	2807      	cmp	r0, #7
 801d5e2:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 801d5e6:	d845      	bhi.n	801d674 <tsi_malloc_init_pool_aligned+0x98>
 801d5e8:	2f0f      	cmp	r7, #15
 801d5ea:	dd36      	ble.n	801d65a <tsi_malloc_init_pool_aligned+0x7e>
 801d5ec:	07bc      	lsls	r4, r7, #30
 801d5ee:	463e      	mov	r6, r7
 801d5f0:	d043      	beq.n	801d67a <tsi_malloc_init_pool_aligned+0x9e>
 801d5f2:	f027 0703 	bic.w	r7, r7, #3
 801d5f6:	3704      	adds	r7, #4
 801d5f8:	f107 0c0b 	add.w	ip, r7, #11
 801d5fc:	fb9c fcf7 	sdiv	ip, ip, r7
 801d600:	463e      	mov	r6, r7
 801d602:	fb07 fc0c 	mul.w	ip, r7, ip
 801d606:	fbb1 f4f6 	udiv	r4, r1, r6
 801d60a:	fb06 1514 	mls	r5, r6, r4, r1
 801d60e:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 801d690 <tsi_malloc_init_pool_aligned+0xb4>
 801d612:	f8c8 c000 	str.w	ip, [r8]
 801d616:	b32d      	cbz	r5, 801d664 <tsi_malloc_init_pool_aligned+0x88>
 801d618:	fb04 6406 	mla	r4, r4, r6, r6
 801d61c:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801d620:	4819      	ldr	r0, [pc, #100]	@ (801d688 <tsi_malloc_init_pool_aligned+0xac>)
 801d622:	00ed      	lsls	r5, r5, #3
 801d624:	1946      	adds	r6, r0, r5
 801d626:	5142      	str	r2, [r0, r5]
 801d628:	18ca      	adds	r2, r1, r3
 801d62a:	60f4      	str	r4, [r6, #12]
 801d62c:	6071      	str	r1, [r6, #4]
 801d62e:	e9c6 3704 	strd	r3, r7, [r6, #16]
 801d632:	60b2      	str	r2, [r6, #8]
 801d634:	f1be 0f00 	cmp.w	lr, #0
 801d638:	d016      	beq.n	801d668 <tsi_malloc_init_pool_aligned+0x8c>
 801d63a:	b1c4      	cbz	r4, 801d66e <tsi_malloc_init_pool_aligned+0x92>
 801d63c:	2200      	movs	r2, #0
 801d63e:	4610      	mov	r0, r2
 801d640:	4d12      	ldr	r5, [pc, #72]	@ (801d68c <tsi_malloc_init_pool_aligned+0xb0>)
 801d642:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 801d646:	eb0c 0104 	add.w	r1, ip, r4
 801d64a:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 801d64e:	f84c 3004 	str.w	r3, [ip, r4]
 801d652:	e9c1 5201 	strd	r5, r2, [r1, #4]
 801d656:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d65a:	f04f 0c10 	mov.w	ip, #16
 801d65e:	4666      	mov	r6, ip
 801d660:	4667      	mov	r7, ip
 801d662:	e7d0      	b.n	801d606 <tsi_malloc_init_pool_aligned+0x2a>
 801d664:	460c      	mov	r4, r1
 801d666:	e7d9      	b.n	801d61c <tsi_malloc_init_pool_aligned+0x40>
 801d668:	4670      	mov	r0, lr
 801d66a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d66e:	4620      	mov	r0, r4
 801d670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d674:	f04f 30ff 	mov.w	r0, #4294967295
 801d678:	e7ed      	b.n	801d656 <tsi_malloc_init_pool_aligned+0x7a>
 801d67a:	f107 0c0b 	add.w	ip, r7, #11
 801d67e:	fb9c fcf7 	sdiv	ip, ip, r7
 801d682:	fb07 fc0c 	mul.w	ip, r7, ip
 801d686:	e7be      	b.n	801d606 <tsi_malloc_init_pool_aligned+0x2a>
 801d688:	2008329c 	.word	0x2008329c
 801d68c:	000f1fa1 	.word	0x000f1fa1
 801d690:	200001e4 	.word	0x200001e4

0801d694 <tsi_malloc_pool>:
 801d694:	2807      	cmp	r0, #7
 801d696:	d850      	bhi.n	801d73a <tsi_malloc_pool+0xa6>
 801d698:	b4f0      	push	{r4, r5, r6, r7}
 801d69a:	4b29      	ldr	r3, [pc, #164]	@ (801d740 <tsi_malloc_pool+0xac>)
 801d69c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d6a0:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 801d6a4:	68c4      	ldr	r4, [r0, #12]
 801d6a6:	2c00      	cmp	r4, #0
 801d6a8:	d03e      	beq.n	801d728 <tsi_malloc_pool+0x94>
 801d6aa:	6947      	ldr	r7, [r0, #20]
 801d6ac:	4b25      	ldr	r3, [pc, #148]	@ (801d744 <tsi_malloc_pool+0xb0>)
 801d6ae:	f107 000b 	add.w	r0, r7, #11
 801d6b2:	fb90 f0f7 	sdiv	r0, r0, r7
 801d6b6:	fb07 f000 	mul.w	r0, r7, r0
 801d6ba:	1e7d      	subs	r5, r7, #1
 801d6bc:	4281      	cmp	r1, r0
 801d6be:	bfac      	ite	ge
 801d6c0:	186d      	addge	r5, r5, r1
 801d6c2:	182d      	addlt	r5, r5, r0
 801d6c4:	fb95 f5f7 	sdiv	r5, r5, r7
 801d6c8:	fb07 f505 	mul.w	r5, r7, r5
 801d6cc:	6821      	ldr	r1, [r4, #0]
 801d6ce:	6018      	str	r0, [r3, #0]
 801d6d0:	428d      	cmp	r5, r1
 801d6d2:	dd2f      	ble.n	801d734 <tsi_malloc_pool+0xa0>
 801d6d4:	68a3      	ldr	r3, [r4, #8]
 801d6d6:	b33b      	cbz	r3, 801d728 <tsi_malloc_pool+0x94>
 801d6d8:	4626      	mov	r6, r4
 801d6da:	e002      	b.n	801d6e2 <tsi_malloc_pool+0x4e>
 801d6dc:	6893      	ldr	r3, [r2, #8]
 801d6de:	4616      	mov	r6, r2
 801d6e0:	b313      	cbz	r3, 801d728 <tsi_malloc_pool+0x94>
 801d6e2:	58e1      	ldr	r1, [r4, r3]
 801d6e4:	18e2      	adds	r2, r4, r3
 801d6e6:	42a9      	cmp	r1, r5
 801d6e8:	dbf8      	blt.n	801d6dc <tsi_malloc_pool+0x48>
 801d6ea:	1943      	adds	r3, r0, r5
 801d6ec:	428b      	cmp	r3, r1
 801d6ee:	da1e      	bge.n	801d72e <tsi_malloc_pool+0x9a>
 801d6f0:	1ac9      	subs	r1, r1, r3
 801d6f2:	f8df c058 	ldr.w	ip, [pc, #88]	@ 801d74c <tsi_malloc_pool+0xb8>
 801d6f6:	5099      	str	r1, [r3, r2]
 801d6f8:	4413      	add	r3, r2
 801d6fa:	f8c3 c004 	str.w	ip, [r3, #4]
 801d6fe:	6891      	ldr	r1, [r2, #8]
 801d700:	2f00      	cmp	r7, #0
 801d702:	6099      	str	r1, [r3, #8]
 801d704:	dd08      	ble.n	801d718 <tsi_malloc_pool+0x84>
 801d706:	fbb3 f1f7 	udiv	r1, r3, r7
 801d70a:	fb07 3c11 	mls	ip, r7, r1, r3
 801d70e:	f1bc 0f00 	cmp.w	ip, #0
 801d712:	d001      	beq.n	801d718 <tsi_malloc_pool+0x84>
 801d714:	fb01 7307 	mla	r3, r1, r7, r7
 801d718:	1b1b      	subs	r3, r3, r4
 801d71a:	60b3      	str	r3, [r6, #8]
 801d71c:	6015      	str	r5, [r2, #0]
 801d71e:	4b0a      	ldr	r3, [pc, #40]	@ (801d748 <tsi_malloc_pool+0xb4>)
 801d720:	4410      	add	r0, r2
 801d722:	6053      	str	r3, [r2, #4]
 801d724:	bcf0      	pop	{r4, r5, r6, r7}
 801d726:	4770      	bx	lr
 801d728:	2000      	movs	r0, #0
 801d72a:	bcf0      	pop	{r4, r5, r6, r7}
 801d72c:	4770      	bx	lr
 801d72e:	6893      	ldr	r3, [r2, #8]
 801d730:	60b3      	str	r3, [r6, #8]
 801d732:	e7f4      	b.n	801d71e <tsi_malloc_pool+0x8a>
 801d734:	4626      	mov	r6, r4
 801d736:	4622      	mov	r2, r4
 801d738:	e7d7      	b.n	801d6ea <tsi_malloc_pool+0x56>
 801d73a:	2000      	movs	r0, #0
 801d73c:	4770      	bx	lr
 801d73e:	bf00      	nop
 801d740:	2008329c 	.word	0x2008329c
 801d744:	200001e4 	.word	0x200001e4
 801d748:	000f1fa2 	.word	0x000f1fa2
 801d74c:	000f1fa1 	.word	0x000f1fa1

0801d750 <tsi_free>:
 801d750:	2800      	cmp	r0, #0
 801d752:	d044      	beq.n	801d7de <tsi_free+0x8e>
 801d754:	4b6f      	ldr	r3, [pc, #444]	@ (801d914 <tsi_free+0x1c4>)
 801d756:	68da      	ldr	r2, [r3, #12]
 801d758:	b12a      	cbz	r2, 801d766 <tsi_free+0x16>
 801d75a:	6859      	ldr	r1, [r3, #4]
 801d75c:	4288      	cmp	r0, r1
 801d75e:	d302      	bcc.n	801d766 <tsi_free+0x16>
 801d760:	6899      	ldr	r1, [r3, #8]
 801d762:	4288      	cmp	r0, r1
 801d764:	d342      	bcc.n	801d7ec <tsi_free+0x9c>
 801d766:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801d768:	b12a      	cbz	r2, 801d776 <tsi_free+0x26>
 801d76a:	69d9      	ldr	r1, [r3, #28]
 801d76c:	4288      	cmp	r0, r1
 801d76e:	d302      	bcc.n	801d776 <tsi_free+0x26>
 801d770:	6a19      	ldr	r1, [r3, #32]
 801d772:	4288      	cmp	r0, r1
 801d774:	d352      	bcc.n	801d81c <tsi_free+0xcc>
 801d776:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801d778:	b12a      	cbz	r2, 801d786 <tsi_free+0x36>
 801d77a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 801d77c:	4288      	cmp	r0, r1
 801d77e:	d302      	bcc.n	801d786 <tsi_free+0x36>
 801d780:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 801d782:	4288      	cmp	r0, r1
 801d784:	d34c      	bcc.n	801d820 <tsi_free+0xd0>
 801d786:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 801d788:	b12a      	cbz	r2, 801d796 <tsi_free+0x46>
 801d78a:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 801d78c:	4281      	cmp	r1, r0
 801d78e:	d802      	bhi.n	801d796 <tsi_free+0x46>
 801d790:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 801d792:	4281      	cmp	r1, r0
 801d794:	d846      	bhi.n	801d824 <tsi_free+0xd4>
 801d796:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 801d798:	b12a      	cbz	r2, 801d7a6 <tsi_free+0x56>
 801d79a:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 801d79c:	4288      	cmp	r0, r1
 801d79e:	d302      	bcc.n	801d7a6 <tsi_free+0x56>
 801d7a0:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 801d7a2:	4281      	cmp	r1, r0
 801d7a4:	d840      	bhi.n	801d828 <tsi_free+0xd8>
 801d7a6:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 801d7aa:	b132      	cbz	r2, 801d7ba <tsi_free+0x6a>
 801d7ac:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 801d7ae:	4281      	cmp	r1, r0
 801d7b0:	d803      	bhi.n	801d7ba <tsi_free+0x6a>
 801d7b2:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 801d7b6:	4288      	cmp	r0, r1
 801d7b8:	d338      	bcc.n	801d82c <tsi_free+0xdc>
 801d7ba:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 801d7be:	b13a      	cbz	r2, 801d7d0 <tsi_free+0x80>
 801d7c0:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 801d7c4:	4288      	cmp	r0, r1
 801d7c6:	d303      	bcc.n	801d7d0 <tsi_free+0x80>
 801d7c8:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 801d7cc:	4288      	cmp	r0, r1
 801d7ce:	d32f      	bcc.n	801d830 <tsi_free+0xe0>
 801d7d0:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 801d7d4:	b11a      	cbz	r2, 801d7de <tsi_free+0x8e>
 801d7d6:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 801d7da:	4281      	cmp	r1, r0
 801d7dc:	d900      	bls.n	801d7e0 <tsi_free+0x90>
 801d7de:	4770      	bx	lr
 801d7e0:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 801d7e4:	4281      	cmp	r1, r0
 801d7e6:	d9fa      	bls.n	801d7de <tsi_free+0x8e>
 801d7e8:	2107      	movs	r1, #7
 801d7ea:	e000      	b.n	801d7ee <tsi_free+0x9e>
 801d7ec:	2100      	movs	r1, #0
 801d7ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d7f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d7f6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 801d7fa:	695e      	ldr	r6, [r3, #20]
 801d7fc:	4b46      	ldr	r3, [pc, #280]	@ (801d918 <tsi_free+0x1c8>)
 801d7fe:	f106 010b 	add.w	r1, r6, #11
 801d802:	fb91 f1f6 	sdiv	r1, r1, r6
 801d806:	fb06 f101 	mul.w	r1, r6, r1
 801d80a:	1a45      	subs	r5, r0, r1
 801d80c:	686c      	ldr	r4, [r5, #4]
 801d80e:	4f43      	ldr	r7, [pc, #268]	@ (801d91c <tsi_free+0x1cc>)
 801d810:	429c      	cmp	r4, r3
 801d812:	6039      	str	r1, [r7, #0]
 801d814:	46a8      	mov	r8, r5
 801d816:	d00d      	beq.n	801d834 <tsi_free+0xe4>
 801d818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d81c:	2101      	movs	r1, #1
 801d81e:	e7e6      	b.n	801d7ee <tsi_free+0x9e>
 801d820:	2102      	movs	r1, #2
 801d822:	e7e4      	b.n	801d7ee <tsi_free+0x9e>
 801d824:	2103      	movs	r1, #3
 801d826:	e7e2      	b.n	801d7ee <tsi_free+0x9e>
 801d828:	2104      	movs	r1, #4
 801d82a:	e7e0      	b.n	801d7ee <tsi_free+0x9e>
 801d82c:	2105      	movs	r1, #5
 801d82e:	e7de      	b.n	801d7ee <tsi_free+0x9e>
 801d830:	2106      	movs	r1, #6
 801d832:	e7dc      	b.n	801d7ee <tsi_free+0x9e>
 801d834:	4b3a      	ldr	r3, [pc, #232]	@ (801d920 <tsi_free+0x1d0>)
 801d836:	606b      	str	r3, [r5, #4]
 801d838:	6894      	ldr	r4, [r2, #8]
 801d83a:	18a3      	adds	r3, r4, r2
 801d83c:	429d      	cmp	r5, r3
 801d83e:	d95e      	bls.n	801d8fe <tsi_free+0x1ae>
 801d840:	b90c      	cbnz	r4, 801d846 <tsi_free+0xf6>
 801d842:	e05c      	b.n	801d8fe <tsi_free+0x1ae>
 801d844:	b12c      	cbz	r4, 801d852 <tsi_free+0x102>
 801d846:	689c      	ldr	r4, [r3, #8]
 801d848:	469c      	mov	ip, r3
 801d84a:	469e      	mov	lr, r3
 801d84c:	1913      	adds	r3, r2, r4
 801d84e:	429d      	cmp	r5, r3
 801d850:	d8f8      	bhi.n	801d844 <tsi_free+0xf4>
 801d852:	682f      	ldr	r7, [r5, #0]
 801d854:	4594      	cmp	ip, r2
 801d856:	4438      	add	r0, r7
 801d858:	d04d      	beq.n	801d8f6 <tsi_free+0x1a6>
 801d85a:	f8dc 7000 	ldr.w	r7, [ip]
 801d85e:	eb01 040c 	add.w	r4, r1, ip
 801d862:	443c      	add	r4, r7
 801d864:	1b64      	subs	r4, r4, r5
 801d866:	fab4 f484 	clz	r4, r4
 801d86a:	0964      	lsrs	r4, r4, #5
 801d86c:	2e00      	cmp	r6, #0
 801d86e:	dd32      	ble.n	801d8d6 <tsi_free+0x186>
 801d870:	fbb5 f7f6 	udiv	r7, r5, r6
 801d874:	fb06 5c17 	mls	ip, r6, r7, r5
 801d878:	f1bc 0f00 	cmp.w	ip, #0
 801d87c:	d001      	beq.n	801d882 <tsi_free+0x132>
 801d87e:	fb07 6506 	mla	r5, r7, r6, r6
 801d882:	fbb3 f7f6 	udiv	r7, r3, r6
 801d886:	fb06 3c17 	mls	ip, r6, r7, r3
 801d88a:	1aad      	subs	r5, r5, r2
 801d88c:	f8ce 5008 	str.w	r5, [lr, #8]
 801d890:	f1bc 0f00 	cmp.w	ip, #0
 801d894:	d01d      	beq.n	801d8d2 <tsi_free+0x182>
 801d896:	fb07 6606 	mla	r6, r7, r6, r6
 801d89a:	1ab2      	subs	r2, r6, r2
 801d89c:	f8c8 2008 	str.w	r2, [r8, #8]
 801d8a0:	b154      	cbz	r4, 801d8b8 <tsi_free+0x168>
 801d8a2:	f8d8 5000 	ldr.w	r5, [r8]
 801d8a6:	46f0      	mov	r8, lr
 801d8a8:	f8de 4000 	ldr.w	r4, [lr]
 801d8ac:	440d      	add	r5, r1
 801d8ae:	442c      	add	r4, r5
 801d8b0:	f8ce 4000 	str.w	r4, [lr]
 801d8b4:	f8ce 2008 	str.w	r2, [lr, #8]
 801d8b8:	4283      	cmp	r3, r0
 801d8ba:	d1ad      	bne.n	801d818 <tsi_free+0xc8>
 801d8bc:	6818      	ldr	r0, [r3, #0]
 801d8be:	f8d8 2000 	ldr.w	r2, [r8]
 801d8c2:	4401      	add	r1, r0
 801d8c4:	440a      	add	r2, r1
 801d8c6:	f8c8 2000 	str.w	r2, [r8]
 801d8ca:	689b      	ldr	r3, [r3, #8]
 801d8cc:	f8c8 3008 	str.w	r3, [r8, #8]
 801d8d0:	e7a2      	b.n	801d818 <tsi_free+0xc8>
 801d8d2:	461e      	mov	r6, r3
 801d8d4:	e7e1      	b.n	801d89a <tsi_free+0x14a>
 801d8d6:	1aae      	subs	r6, r5, r2
 801d8d8:	1a9a      	subs	r2, r3, r2
 801d8da:	f8ce 6008 	str.w	r6, [lr, #8]
 801d8de:	60aa      	str	r2, [r5, #8]
 801d8e0:	2c00      	cmp	r4, #0
 801d8e2:	d0e9      	beq.n	801d8b8 <tsi_free+0x168>
 801d8e4:	682d      	ldr	r5, [r5, #0]
 801d8e6:	f8de 4000 	ldr.w	r4, [lr]
 801d8ea:	440d      	add	r5, r1
 801d8ec:	442c      	add	r4, r5
 801d8ee:	f8ce 4000 	str.w	r4, [lr]
 801d8f2:	46f0      	mov	r8, lr
 801d8f4:	e7de      	b.n	801d8b4 <tsi_free+0x164>
 801d8f6:	2e00      	cmp	r6, #0
 801d8f8:	dd06      	ble.n	801d908 <tsi_free+0x1b8>
 801d8fa:	2400      	movs	r4, #0
 801d8fc:	e7b8      	b.n	801d870 <tsi_free+0x120>
 801d8fe:	682c      	ldr	r4, [r5, #0]
 801d900:	4696      	mov	lr, r2
 801d902:	4420      	add	r0, r4
 801d904:	2400      	movs	r4, #0
 801d906:	e7b1      	b.n	801d86c <tsi_free+0x11c>
 801d908:	eba5 020c 	sub.w	r2, r5, ip
 801d90c:	f8cc 2008 	str.w	r2, [ip, #8]
 801d910:	60ac      	str	r4, [r5, #8]
 801d912:	e7d1      	b.n	801d8b8 <tsi_free+0x168>
 801d914:	2008329c 	.word	0x2008329c
 801d918:	000f1fa2 	.word	0x000f1fa2
 801d91c:	200001e4 	.word	0x200001e4
 801d920:	000f1fa1 	.word	0x000f1fa1

0801d924 <nema_cl_create_sized>:
 801d924:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d926:	b093      	sub	sp, #76	@ 0x4c
 801d928:	466d      	mov	r5, sp
 801d92a:	4606      	mov	r6, r0
 801d92c:	460a      	mov	r2, r1
 801d92e:	4628      	mov	r0, r5
 801d930:	2100      	movs	r1, #0
 801d932:	f7e5 fa91 	bl	8002e58 <nema_buffer_create_pool>
 801d936:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801d93a:	2500      	movs	r5, #0
 801d93c:	ac04      	add	r4, sp, #16
 801d93e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d942:	4620      	mov	r0, r4
 801d944:	f7e5 faaa 	bl	8002e9c <nema_buffer_map>
 801d948:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801d94c:	ac08      	add	r4, sp, #32
 801d94e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d952:	2110      	movs	r1, #16
 801d954:	f04f 32ff 	mov.w	r2, #4294967295
 801d958:	9b04      	ldr	r3, [sp, #16]
 801d95a:	950d      	str	r5, [sp, #52]	@ 0x34
 801d95c:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 801d960:	42ab      	cmp	r3, r5
 801d962:	4635      	mov	r5, r6
 801d964:	bfb8      	it	lt
 801d966:	3307      	addlt	r3, #7
 801d968:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 801d96c:	10db      	asrs	r3, r3, #3
 801d96e:	005b      	lsls	r3, r3, #1
 801d970:	930c      	str	r3, [sp, #48]	@ 0x30
 801d972:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d974:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d976:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d978:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d97a:	e894 0003 	ldmia.w	r4, {r0, r1}
 801d97e:	2700      	movs	r7, #0
 801d980:	e885 0003 	stmia.w	r5, {r0, r1}
 801d984:	4630      	mov	r0, r6
 801d986:	61b7      	str	r7, [r6, #24]
 801d988:	b013      	add	sp, #76	@ 0x4c
 801d98a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d98c <nema_extend_bound_cl>:
 801d98c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d98e:	4d6e      	ldr	r5, [pc, #440]	@ (801db48 <nema_extend_bound_cl+0x1bc>)
 801d990:	b09f      	sub	sp, #124	@ 0x7c
 801d992:	682b      	ldr	r3, [r5, #0]
 801d994:	2b00      	cmp	r3, #0
 801d996:	f000 80c1 	beq.w	801db1c <nema_extend_bound_cl+0x190>
 801d99a:	4606      	mov	r6, r0
 801d99c:	6998      	ldr	r0, [r3, #24]
 801d99e:	0784      	lsls	r4, r0, #30
 801d9a0:	f140 80b6 	bpl.w	801db10 <nema_extend_bound_cl+0x184>
 801d9a4:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 801d9a8:	0680      	lsls	r0, r0, #26
 801d9aa:	d44e      	bmi.n	801da4a <nema_extend_bound_cl+0xbe>
 801d9ac:	1a89      	subs	r1, r1, r2
 801d9ae:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801d9b2:	1049      	asrs	r1, r1, #1
 801d9b4:	2902      	cmp	r1, #2
 801d9b6:	dd13      	ble.n	801d9e0 <nema_extend_bound_cl+0x54>
 801d9b8:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 801d9bc:	2700      	movs	r7, #0
 801d9be:	1e94      	subs	r4, r2, #2
 801d9c0:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d9c4:	1c91      	adds	r1, r2, #2
 801d9c6:	0092      	lsls	r2, r2, #2
 801d9c8:	6898      	ldr	r0, [r3, #8]
 801d9ca:	f840 c002 	str.w	ip, [r0, r2]
 801d9ce:	6898      	ldr	r0, [r3, #8]
 801d9d0:	4410      	add	r0, r2
 801d9d2:	6047      	str	r7, [r0, #4]
 801d9d4:	6159      	str	r1, [r3, #20]
 801d9d6:	3102      	adds	r1, #2
 801d9d8:	428c      	cmp	r4, r1
 801d9da:	f102 0208 	add.w	r2, r2, #8
 801d9de:	d1f3      	bne.n	801d9c8 <nema_extend_bound_cl+0x3c>
 801d9e0:	6a1c      	ldr	r4, [r3, #32]
 801d9e2:	2c00      	cmp	r4, #0
 801d9e4:	d050      	beq.n	801da88 <nema_extend_bound_cl+0xfc>
 801d9e6:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 801d9ea:	26f0      	movs	r6, #240	@ 0xf0
 801d9ec:	27f4      	movs	r7, #244	@ 0xf4
 801d9ee:	6898      	ldr	r0, [r3, #8]
 801d9f0:	f041 0104 	orr.w	r1, r1, #4
 801d9f4:	6199      	str	r1, [r3, #24]
 801d9f6:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 801d9fa:	6899      	ldr	r1, [r3, #8]
 801d9fc:	68e6      	ldr	r6, [r4, #12]
 801d9fe:	0090      	lsls	r0, r2, #2
 801da00:	4401      	add	r1, r0
 801da02:	604e      	str	r6, [r1, #4]
 801da04:	6899      	ldr	r1, [r3, #8]
 801da06:	1c96      	adds	r6, r2, #2
 801da08:	4401      	add	r1, r0
 801da0a:	615e      	str	r6, [r3, #20]
 801da0c:	608f      	str	r7, [r1, #8]
 801da0e:	6899      	ldr	r1, [r3, #8]
 801da10:	6926      	ldr	r6, [r4, #16]
 801da12:	4401      	add	r1, r0
 801da14:	1d17      	adds	r7, r2, #4
 801da16:	60ce      	str	r6, [r1, #12]
 801da18:	621c      	str	r4, [r3, #32]
 801da1a:	615f      	str	r7, [r3, #20]
 801da1c:	68e1      	ldr	r1, [r4, #12]
 801da1e:	f011 0107 	ands.w	r1, r1, #7
 801da22:	d120      	bne.n	801da66 <nema_extend_bound_cl+0xda>
 801da24:	691e      	ldr	r6, [r3, #16]
 801da26:	3205      	adds	r2, #5
 801da28:	42b2      	cmp	r2, r6
 801da2a:	db23      	blt.n	801da74 <nema_extend_bound_cl+0xe8>
 801da2c:	699a      	ldr	r2, [r3, #24]
 801da2e:	f022 0220 	bic.w	r2, r2, #32
 801da32:	619a      	str	r2, [r3, #24]
 801da34:	69a3      	ldr	r3, [r4, #24]
 801da36:	075a      	lsls	r2, r3, #29
 801da38:	d503      	bpl.n	801da42 <nema_extend_bound_cl+0xb6>
 801da3a:	6a24      	ldr	r4, [r4, #32]
 801da3c:	69a3      	ldr	r3, [r4, #24]
 801da3e:	075b      	lsls	r3, r3, #29
 801da40:	d4fb      	bmi.n	801da3a <nema_extend_bound_cl+0xae>
 801da42:	2000      	movs	r0, #0
 801da44:	602c      	str	r4, [r5, #0]
 801da46:	b01f      	add	sp, #124	@ 0x7c
 801da48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da4a:	2900      	cmp	r1, #0
 801da4c:	bfb8      	it	lt
 801da4e:	3103      	addlt	r1, #3
 801da50:	1089      	asrs	r1, r1, #2
 801da52:	0049      	lsls	r1, r1, #1
 801da54:	4291      	cmp	r1, r2
 801da56:	bfcc      	ite	gt
 801da58:	4610      	movgt	r0, r2
 801da5a:	1a50      	suble	r0, r2, r1
 801da5c:	1a09      	subs	r1, r1, r0
 801da5e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801da62:	1049      	asrs	r1, r1, #1
 801da64:	e7a6      	b.n	801d9b4 <nema_extend_bound_cl+0x28>
 801da66:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801da6a:	f7f3 f853 	bl	8010b14 <nema_set_error>
 801da6e:	2000      	movs	r0, #0
 801da70:	b01f      	add	sp, #124	@ 0x7c
 801da72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da74:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 801da78:	689a      	ldr	r2, [r3, #8]
 801da7a:	4410      	add	r0, r2
 801da7c:	e9c0 6104 	strd	r6, r1, [r0, #16]
 801da80:	699a      	ldr	r2, [r3, #24]
 801da82:	f022 0208 	bic.w	r2, r2, #8
 801da86:	e7d2      	b.n	801da2e <nema_extend_bound_cl+0xa2>
 801da88:	2028      	movs	r0, #40	@ 0x28
 801da8a:	f7e5 f963 	bl	8002d54 <nema_host_malloc>
 801da8e:	4604      	mov	r4, r0
 801da90:	2800      	cmp	r0, #0
 801da92:	d052      	beq.n	801db3a <nema_extend_bound_cl+0x1ae>
 801da94:	1cb1      	adds	r1, r6, #2
 801da96:	00c9      	lsls	r1, r1, #3
 801da98:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801da9c:	dd1a      	ble.n	801dad4 <nema_extend_bound_cl+0x148>
 801da9e:	466e      	mov	r6, sp
 801daa0:	4627      	mov	r7, r4
 801daa2:	4668      	mov	r0, sp
 801daa4:	f7ff ff3e 	bl	801d924 <nema_cl_create_sized>
 801daa8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daaa:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801daac:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daae:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801dab0:	e896 0003 	ldmia.w	r6, {r0, r1}
 801dab4:	e887 0003 	stmia.w	r7, {r0, r1}
 801dab8:	68a3      	ldr	r3, [r4, #8]
 801daba:	2b00      	cmp	r3, #0
 801dabc:	d034      	beq.n	801db28 <nema_extend_bound_cl+0x19c>
 801dabe:	682b      	ldr	r3, [r5, #0]
 801dac0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801dac2:	2a00      	cmp	r2, #0
 801dac4:	bf08      	it	eq
 801dac6:	461a      	moveq	r2, r3
 801dac8:	6262      	str	r2, [r4, #36]	@ 0x24
 801daca:	699a      	ldr	r2, [r3, #24]
 801dacc:	f022 020c 	bic.w	r2, r2, #12
 801dad0:	61a2      	str	r2, [r4, #24]
 801dad2:	e788      	b.n	801d9e6 <nema_extend_bound_cl+0x5a>
 801dad4:	a80a      	add	r0, sp, #40	@ 0x28
 801dad6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 801dada:	f7ff ff23 	bl	801d924 <nema_cl_create_sized>
 801dade:	2302      	movs	r3, #2
 801dae0:	46a4      	mov	ip, r4
 801dae2:	9310      	str	r3, [sp, #64]	@ 0x40
 801dae4:	ae0a      	add	r6, sp, #40	@ 0x28
 801dae6:	af14      	add	r7, sp, #80	@ 0x50
 801dae8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daea:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801daec:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daee:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801daf0:	e896 0003 	ldmia.w	r6, {r0, r1}
 801daf4:	ae14      	add	r6, sp, #80	@ 0x50
 801daf6:	e887 0003 	stmia.w	r7, {r0, r1}
 801dafa:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dafc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801db00:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db02:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801db06:	e897 0003 	ldmia.w	r7, {r0, r1}
 801db0a:	e88c 0003 	stmia.w	ip, {r0, r1}
 801db0e:	e7d3      	b.n	801dab8 <nema_extend_bound_cl+0x12c>
 801db10:	2008      	movs	r0, #8
 801db12:	f7f2 ffff 	bl	8010b14 <nema_set_error>
 801db16:	f04f 30ff 	mov.w	r0, #4294967295
 801db1a:	e7a9      	b.n	801da70 <nema_extend_bound_cl+0xe4>
 801db1c:	2080      	movs	r0, #128	@ 0x80
 801db1e:	f7f2 fff9 	bl	8010b14 <nema_set_error>
 801db22:	f04f 30ff 	mov.w	r0, #4294967295
 801db26:	e7a3      	b.n	801da70 <nema_extend_bound_cl+0xe4>
 801db28:	2010      	movs	r0, #16
 801db2a:	f7f2 fff3 	bl	8010b14 <nema_set_error>
 801db2e:	4620      	mov	r0, r4
 801db30:	f7e5 f90e 	bl	8002d50 <nema_host_free>
 801db34:	f04f 30ff 	mov.w	r0, #4294967295
 801db38:	e79a      	b.n	801da70 <nema_extend_bound_cl+0xe4>
 801db3a:	2010      	movs	r0, #16
 801db3c:	f7f2 ffea 	bl	8010b14 <nema_set_error>
 801db40:	f04f 30ff 	mov.w	r0, #4294967295
 801db44:	e794      	b.n	801da70 <nema_extend_bound_cl+0xe4>
 801db46:	bf00      	nop
 801db48:	2008335c 	.word	0x2008335c

0801db4c <nema_cl_bind_circular>:
 801db4c:	b358      	cbz	r0, 801dba6 <nema_cl_bind_circular+0x5a>
 801db4e:	68c3      	ldr	r3, [r0, #12]
 801db50:	f013 0207 	ands.w	r2, r3, #7
 801db54:	d117      	bne.n	801db86 <nema_cl_bind_circular+0x3a>
 801db56:	b4f0      	push	{r4, r5, r6, r7}
 801db58:	4c15      	ldr	r4, [pc, #84]	@ (801dbb0 <nema_cl_bind_circular+0x64>)
 801db5a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801db5c:	6821      	ldr	r1, [r4, #0]
 801db5e:	2b00      	cmp	r3, #0
 801db60:	bf08      	it	eq
 801db62:	4603      	moveq	r3, r0
 801db64:	b141      	cbz	r1, 801db78 <nema_cl_bind_circular+0x2c>
 801db66:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 801db6a:	1c46      	adds	r6, r0, #1
 801db6c:	42ae      	cmp	r6, r5
 801db6e:	db0e      	blt.n	801db8e <nema_cl_bind_circular+0x42>
 801db70:	698a      	ldr	r2, [r1, #24]
 801db72:	f022 0220 	bic.w	r2, r2, #32
 801db76:	618a      	str	r2, [r1, #24]
 801db78:	699a      	ldr	r2, [r3, #24]
 801db7a:	6023      	str	r3, [r4, #0]
 801db7c:	f042 0220 	orr.w	r2, r2, #32
 801db80:	619a      	str	r2, [r3, #24]
 801db82:	bcf0      	pop	{r4, r5, r6, r7}
 801db84:	4770      	bx	lr
 801db86:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801db8a:	f7f2 bfc3 	b.w	8010b14 <nema_set_error>
 801db8e:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 801db92:	688d      	ldr	r5, [r1, #8]
 801db94:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801db98:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 801db9c:	6072      	str	r2, [r6, #4]
 801db9e:	698a      	ldr	r2, [r1, #24]
 801dba0:	f022 0208 	bic.w	r2, r2, #8
 801dba4:	e7e5      	b.n	801db72 <nema_cl_bind_circular+0x26>
 801dba6:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dbaa:	f7f2 bfb3 	b.w	8010b14 <nema_set_error>
 801dbae:	bf00      	nop
 801dbb0:	2008335c 	.word	0x2008335c

0801dbb4 <nema_cl_unbind>:
 801dbb4:	4910      	ldr	r1, [pc, #64]	@ (801dbf8 <nema_cl_unbind+0x44>)
 801dbb6:	680b      	ldr	r3, [r1, #0]
 801dbb8:	b1d3      	cbz	r3, 801dbf0 <nema_cl_unbind+0x3c>
 801dbba:	b430      	push	{r4, r5}
 801dbbc:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 801dbc0:	1c54      	adds	r4, r2, #1
 801dbc2:	4284      	cmp	r4, r0
 801dbc4:	db07      	blt.n	801dbd6 <nema_cl_unbind+0x22>
 801dbc6:	699a      	ldr	r2, [r3, #24]
 801dbc8:	f022 0220 	bic.w	r2, r2, #32
 801dbcc:	619a      	str	r2, [r3, #24]
 801dbce:	2300      	movs	r3, #0
 801dbd0:	600b      	str	r3, [r1, #0]
 801dbd2:	bc30      	pop	{r4, r5}
 801dbd4:	4770      	bx	lr
 801dbd6:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 801dbda:	2400      	movs	r4, #0
 801dbdc:	6898      	ldr	r0, [r3, #8]
 801dbde:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 801dbe2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801dbe6:	6054      	str	r4, [r2, #4]
 801dbe8:	699a      	ldr	r2, [r3, #24]
 801dbea:	f022 0208 	bic.w	r2, r2, #8
 801dbee:	e7eb      	b.n	801dbc8 <nema_cl_unbind+0x14>
 801dbf0:	2300      	movs	r3, #0
 801dbf2:	600b      	str	r3, [r1, #0]
 801dbf4:	4770      	bx	lr
 801dbf6:	bf00      	nop
 801dbf8:	2008335c 	.word	0x2008335c

0801dbfc <nema_cl_get_bound>:
 801dbfc:	4b01      	ldr	r3, [pc, #4]	@ (801dc04 <nema_cl_get_bound+0x8>)
 801dbfe:	6818      	ldr	r0, [r3, #0]
 801dc00:	4770      	bx	lr
 801dc02:	bf00      	nop
 801dc04:	2008335c 	.word	0x2008335c

0801dc08 <nema_cl_submit_no_irq>:
 801dc08:	2800      	cmp	r0, #0
 801dc0a:	d052      	beq.n	801dcb2 <nema_cl_submit_no_irq+0xaa>
 801dc0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dc0e:	6944      	ldr	r4, [r0, #20]
 801dc10:	b1f4      	cbz	r4, 801dc50 <nema_cl_submit_no_irq+0x48>
 801dc12:	6983      	ldr	r3, [r0, #24]
 801dc14:	4605      	mov	r5, r0
 801dc16:	069a      	lsls	r2, r3, #26
 801dc18:	d51b      	bpl.n	801dc52 <nema_cl_submit_no_irq+0x4a>
 801dc1a:	6902      	ldr	r2, [r0, #16]
 801dc1c:	2a00      	cmp	r2, #0
 801dc1e:	bfb8      	it	lt
 801dc20:	3203      	addlt	r2, #3
 801dc22:	1092      	asrs	r2, r2, #2
 801dc24:	0056      	lsls	r6, r2, #1
 801dc26:	42b4      	cmp	r4, r6
 801dc28:	da3d      	bge.n	801dca6 <nema_cl_submit_no_irq+0x9e>
 801dc2a:	68c7      	ldr	r7, [r0, #12]
 801dc2c:	071b      	lsls	r3, r3, #28
 801dc2e:	d549      	bpl.n	801dcc4 <nema_cl_submit_no_irq+0xbc>
 801dc30:	69e8      	ldr	r0, [r5, #28]
 801dc32:	2800      	cmp	r0, #0
 801dc34:	da41      	bge.n	801dcba <nema_cl_submit_no_irq+0xb2>
 801dc36:	f04f 33ff 	mov.w	r3, #4294967295
 801dc3a:	61eb      	str	r3, [r5, #28]
 801dc3c:	4621      	mov	r1, r4
 801dc3e:	4638      	mov	r0, r7
 801dc40:	f7f2 fd54 	bl	80106ec <nema_rb_submit_cmdlist2>
 801dc44:	696b      	ldr	r3, [r5, #20]
 801dc46:	61e8      	str	r0, [r5, #28]
 801dc48:	42b3      	cmp	r3, r6
 801dc4a:	bfa8      	it	ge
 801dc4c:	2600      	movge	r6, #0
 801dc4e:	616e      	str	r6, [r5, #20]
 801dc50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dc52:	4604      	mov	r4, r0
 801dc54:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801dc58:	e012      	b.n	801dc80 <nema_cl_submit_no_irq+0x78>
 801dc5a:	6923      	ldr	r3, [r4, #16]
 801dc5c:	6949      	ldr	r1, [r1, #20]
 801dc5e:	4433      	add	r3, r6
 801dc60:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801dc64:	69a3      	ldr	r3, [r4, #24]
 801dc66:	4620      	mov	r0, r4
 801dc68:	f023 0308 	bic.w	r3, r3, #8
 801dc6c:	61a3      	str	r3, [r4, #24]
 801dc6e:	f7e5 f927 	bl	8002ec0 <nema_buffer_flush>
 801dc72:	69a3      	ldr	r3, [r4, #24]
 801dc74:	f043 0308 	orr.w	r3, r3, #8
 801dc78:	61a3      	str	r3, [r4, #24]
 801dc7a:	6a24      	ldr	r4, [r4, #32]
 801dc7c:	b134      	cbz	r4, 801dc8c <nema_cl_submit_no_irq+0x84>
 801dc7e:	69a3      	ldr	r3, [r4, #24]
 801dc80:	0758      	lsls	r0, r3, #29
 801dc82:	68a2      	ldr	r2, [r4, #8]
 801dc84:	6a21      	ldr	r1, [r4, #32]
 801dc86:	d4e8      	bmi.n	801dc5a <nema_cl_submit_no_irq+0x52>
 801dc88:	071b      	lsls	r3, r3, #28
 801dc8a:	d523      	bpl.n	801dcd4 <nema_cl_submit_no_irq+0xcc>
 801dc8c:	2000      	movs	r0, #0
 801dc8e:	f7e5 f918 	bl	8002ec2 <nema_mutex_lock>
 801dc92:	6969      	ldr	r1, [r5, #20]
 801dc94:	4628      	mov	r0, r5
 801dc96:	f7f2 fdad 	bl	80107f4 <nema_rb_submit_cmdlist>
 801dc9a:	61e8      	str	r0, [r5, #28]
 801dc9c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801dca0:	2000      	movs	r0, #0
 801dca2:	f7e5 b910 	b.w	8002ec6 <nema_mutex_unlock>
 801dca6:	d0d3      	beq.n	801dc50 <nema_cl_submit_no_irq+0x48>
 801dca8:	68c7      	ldr	r7, [r0, #12]
 801dcaa:	1ba4      	subs	r4, r4, r6
 801dcac:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
 801dcb0:	e7bc      	b.n	801dc2c <nema_cl_submit_no_irq+0x24>
 801dcb2:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dcb6:	f7f2 bf2d 	b.w	8010b14 <nema_set_error>
 801dcba:	f7e5 f83b 	bl	8002d34 <nema_wait_irq_cl>
 801dcbe:	2800      	cmp	r0, #0
 801dcc0:	dab9      	bge.n	801dc36 <nema_cl_submit_no_irq+0x2e>
 801dcc2:	e7bb      	b.n	801dc3c <nema_cl_submit_no_irq+0x34>
 801dcc4:	4628      	mov	r0, r5
 801dcc6:	f7e5 f8fb 	bl	8002ec0 <nema_buffer_flush>
 801dcca:	69ab      	ldr	r3, [r5, #24]
 801dccc:	f043 0308 	orr.w	r3, r3, #8
 801dcd0:	61ab      	str	r3, [r5, #24]
 801dcd2:	e7ad      	b.n	801dc30 <nema_cl_submit_no_irq+0x28>
 801dcd4:	4620      	mov	r0, r4
 801dcd6:	f7e5 f8f3 	bl	8002ec0 <nema_buffer_flush>
 801dcda:	69a3      	ldr	r3, [r4, #24]
 801dcdc:	f043 0308 	orr.w	r3, r3, #8
 801dce0:	61a3      	str	r3, [r4, #24]
 801dce2:	e7d3      	b.n	801dc8c <nema_cl_submit_no_irq+0x84>

0801dce4 <nema_cl_get_space>:
 801dce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dce6:	4e2c      	ldr	r6, [pc, #176]	@ (801dd98 <nema_cl_get_space+0xb4>)
 801dce8:	6834      	ldr	r4, [r6, #0]
 801dcea:	2c00      	cmp	r4, #0
 801dcec:	d04d      	beq.n	801dd8a <nema_cl_get_space+0xa6>
 801dcee:	69a7      	ldr	r7, [r4, #24]
 801dcf0:	4605      	mov	r5, r0
 801dcf2:	f027 0108 	bic.w	r1, r7, #8
 801dcf6:	f017 0720 	ands.w	r7, r7, #32
 801dcfa:	61a1      	str	r1, [r4, #24]
 801dcfc:	6923      	ldr	r3, [r4, #16]
 801dcfe:	6961      	ldr	r1, [r4, #20]
 801dd00:	d016      	beq.n	801dd30 <nema_cl_get_space+0x4c>
 801dd02:	2b00      	cmp	r3, #0
 801dd04:	bfb8      	it	lt
 801dd06:	3303      	addlt	r3, #3
 801dd08:	109b      	asrs	r3, r3, #2
 801dd0a:	005b      	lsls	r3, r3, #1
 801dd0c:	4299      	cmp	r1, r3
 801dd0e:	bfb4      	ite	lt
 801dd10:	460a      	movlt	r2, r1
 801dd12:	1aca      	subge	r2, r1, r3
 801dd14:	1a9a      	subs	r2, r3, r2
 801dd16:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 801dd1a:	3001      	adds	r0, #1
 801dd1c:	ebb0 0f62 	cmp.w	r0, r2, asr #1
 801dd20:	da1a      	bge.n	801dd58 <nema_cl_get_space+0x74>
 801dd22:	68a0      	ldr	r0, [r4, #8]
 801dd24:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dd28:	6165      	str	r5, [r4, #20]
 801dd2a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dd2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd30:	1a5b      	subs	r3, r3, r1
 801dd32:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801dd36:	105b      	asrs	r3, r3, #1
 801dd38:	3b01      	subs	r3, #1
 801dd3a:	4283      	cmp	r3, r0
 801dd3c:	dcf1      	bgt.n	801dd22 <nema_cl_get_space+0x3e>
 801dd3e:	f7ff fe25 	bl	801d98c <nema_extend_bound_cl>
 801dd42:	2800      	cmp	r0, #0
 801dd44:	db26      	blt.n	801dd94 <nema_cl_get_space+0xb0>
 801dd46:	6834      	ldr	r4, [r6, #0]
 801dd48:	6961      	ldr	r1, [r4, #20]
 801dd4a:	68a0      	ldr	r0, [r4, #8]
 801dd4c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dd50:	6165      	str	r5, [r4, #20]
 801dd52:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dd56:	e7ea      	b.n	801dd2e <nema_cl_get_space+0x4a>
 801dd58:	2900      	cmp	r1, #0
 801dd5a:	d0e2      	beq.n	801dd22 <nema_cl_get_space+0x3e>
 801dd5c:	4299      	cmp	r1, r3
 801dd5e:	d0e0      	beq.n	801dd22 <nema_cl_get_space+0x3e>
 801dd60:	4620      	mov	r0, r4
 801dd62:	f7ff ff51 	bl	801dc08 <nema_cl_submit_no_irq>
 801dd66:	69e0      	ldr	r0, [r4, #28]
 801dd68:	f7f2 fe10 	bl	801098c <nema_rb_submit_cl_id>
 801dd6c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801dd70:	69e0      	ldr	r0, [r4, #28]
 801dd72:	4298      	cmp	r0, r3
 801dd74:	d1e7      	bne.n	801dd46 <nema_cl_get_space+0x62>
 801dd76:	f7e4 ffdd 	bl	8002d34 <nema_wait_irq_cl>
 801dd7a:	2800      	cmp	r0, #0
 801dd7c:	dbe3      	blt.n	801dd46 <nema_cl_get_space+0x62>
 801dd7e:	f04f 33ff 	mov.w	r3, #4294967295
 801dd82:	61e3      	str	r3, [r4, #28]
 801dd84:	6834      	ldr	r4, [r6, #0]
 801dd86:	6961      	ldr	r1, [r4, #20]
 801dd88:	e7cb      	b.n	801dd22 <nema_cl_get_space+0x3e>
 801dd8a:	2080      	movs	r0, #128	@ 0x80
 801dd8c:	f7f2 fec2 	bl	8010b14 <nema_set_error>
 801dd90:	4620      	mov	r0, r4
 801dd92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd94:	4638      	mov	r0, r7
 801dd96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd98:	2008335c 	.word	0x2008335c

0801dd9c <nema_cl_add_cmd>:
 801dd9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dda0:	4e2e      	ldr	r6, [pc, #184]	@ (801de5c <nema_cl_add_cmd+0xc0>)
 801dda2:	4680      	mov	r8, r0
 801dda4:	6834      	ldr	r4, [r6, #0]
 801dda6:	460f      	mov	r7, r1
 801dda8:	b35c      	cbz	r4, 801de02 <nema_cl_add_cmd+0x66>
 801ddaa:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 801ddae:	f025 0308 	bic.w	r3, r5, #8
 801ddb2:	f015 0020 	ands.w	r0, r5, #32
 801ddb6:	61a3      	str	r3, [r4, #24]
 801ddb8:	6923      	ldr	r3, [r4, #16]
 801ddba:	d016      	beq.n	801ddea <nema_cl_add_cmd+0x4e>
 801ddbc:	2b00      	cmp	r3, #0
 801ddbe:	bfb8      	it	lt
 801ddc0:	3303      	addlt	r3, #3
 801ddc2:	109b      	asrs	r3, r3, #2
 801ddc4:	005b      	lsls	r3, r3, #1
 801ddc6:	429a      	cmp	r2, r3
 801ddc8:	bfb4      	ite	lt
 801ddca:	4611      	movlt	r1, r2
 801ddcc:	1ad1      	subge	r1, r2, r3
 801ddce:	1a59      	subs	r1, r3, r1
 801ddd0:	2903      	cmp	r1, #3
 801ddd2:	dd2a      	ble.n	801de2a <nema_cl_add_cmd+0x8e>
 801ddd4:	1c51      	adds	r1, r2, #1
 801ddd6:	68a0      	ldr	r0, [r4, #8]
 801ddd8:	1c93      	adds	r3, r2, #2
 801ddda:	f840 8022 	str.w	r8, [r0, r2, lsl #2]
 801ddde:	68a2      	ldr	r2, [r4, #8]
 801dde0:	f842 7021 	str.w	r7, [r2, r1, lsl #2]
 801dde4:	6163      	str	r3, [r4, #20]
 801dde6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ddea:	07a9      	lsls	r1, r5, #30
 801ddec:	d515      	bpl.n	801de1a <nema_cl_add_cmd+0x7e>
 801ddee:	1d11      	adds	r1, r2, #4
 801ddf0:	4299      	cmp	r1, r3
 801ddf2:	dbef      	blt.n	801ddd4 <nema_cl_add_cmd+0x38>
 801ddf4:	f7ff fdca 	bl	801d98c <nema_extend_bound_cl>
 801ddf8:	2800      	cmp	r0, #0
 801ddfa:	dbf4      	blt.n	801dde6 <nema_cl_add_cmd+0x4a>
 801ddfc:	6834      	ldr	r4, [r6, #0]
 801ddfe:	6962      	ldr	r2, [r4, #20]
 801de00:	e7e8      	b.n	801ddd4 <nema_cl_add_cmd+0x38>
 801de02:	4620      	mov	r0, r4
 801de04:	f7e5 f85d 	bl	8002ec2 <nema_mutex_lock>
 801de08:	4640      	mov	r0, r8
 801de0a:	4639      	mov	r1, r7
 801de0c:	f7f2 fcf6 	bl	80107fc <nema_rb_inline_cmd>
 801de10:	4620      	mov	r0, r4
 801de12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de16:	f7e5 b856 	b.w	8002ec6 <nema_mutex_unlock>
 801de1a:	1c51      	adds	r1, r2, #1
 801de1c:	4299      	cmp	r1, r3
 801de1e:	dbda      	blt.n	801ddd6 <nema_cl_add_cmd+0x3a>
 801de20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de24:	2008      	movs	r0, #8
 801de26:	f7f2 be75 	b.w	8010b14 <nema_set_error>
 801de2a:	b1a2      	cbz	r2, 801de56 <nema_cl_add_cmd+0xba>
 801de2c:	429a      	cmp	r2, r3
 801de2e:	d0d1      	beq.n	801ddd4 <nema_cl_add_cmd+0x38>
 801de30:	4620      	mov	r0, r4
 801de32:	f7ff fee9 	bl	801dc08 <nema_cl_submit_no_irq>
 801de36:	69e0      	ldr	r0, [r4, #28]
 801de38:	f7f2 fda8 	bl	801098c <nema_rb_submit_cl_id>
 801de3c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801de40:	69e0      	ldr	r0, [r4, #28]
 801de42:	4298      	cmp	r0, r3
 801de44:	d1da      	bne.n	801ddfc <nema_cl_add_cmd+0x60>
 801de46:	f7e4 ff75 	bl	8002d34 <nema_wait_irq_cl>
 801de4a:	2800      	cmp	r0, #0
 801de4c:	bfa4      	itt	ge
 801de4e:	f04f 33ff 	movge.w	r3, #4294967295
 801de52:	61e3      	strge	r3, [r4, #28]
 801de54:	e7d2      	b.n	801ddfc <nema_cl_add_cmd+0x60>
 801de56:	2101      	movs	r1, #1
 801de58:	e7bd      	b.n	801ddd6 <nema_cl_add_cmd+0x3a>
 801de5a:	bf00      	nop
 801de5c:	2008335c 	.word	0x2008335c

0801de60 <nema_cl_submit>:
 801de60:	2800      	cmp	r0, #0
 801de62:	d066      	beq.n	801df32 <nema_cl_submit+0xd2>
 801de64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801de66:	6944      	ldr	r4, [r0, #20]
 801de68:	2c00      	cmp	r4, #0
 801de6a:	d061      	beq.n	801df30 <nema_cl_submit+0xd0>
 801de6c:	6983      	ldr	r3, [r0, #24]
 801de6e:	4605      	mov	r5, r0
 801de70:	069a      	lsls	r2, r3, #26
 801de72:	d51f      	bpl.n	801deb4 <nema_cl_submit+0x54>
 801de74:	6902      	ldr	r2, [r0, #16]
 801de76:	2a00      	cmp	r2, #0
 801de78:	bfb8      	it	lt
 801de7a:	3203      	addlt	r2, #3
 801de7c:	1092      	asrs	r2, r2, #2
 801de7e:	0056      	lsls	r6, r2, #1
 801de80:	42b4      	cmp	r4, r6
 801de82:	d055      	beq.n	801df30 <nema_cl_submit+0xd0>
 801de84:	68c7      	ldr	r7, [r0, #12]
 801de86:	bfa4      	itt	ge
 801de88:	1ba4      	subge	r4, r4, r6
 801de8a:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 801de8e:	071b      	lsls	r3, r3, #28
 801de90:	d553      	bpl.n	801df3a <nema_cl_submit+0xda>
 801de92:	69e8      	ldr	r0, [r5, #28]
 801de94:	2800      	cmp	r0, #0
 801de96:	da57      	bge.n	801df48 <nema_cl_submit+0xe8>
 801de98:	f04f 33ff 	mov.w	r3, #4294967295
 801de9c:	61eb      	str	r3, [r5, #28]
 801de9e:	4621      	mov	r1, r4
 801dea0:	4638      	mov	r0, r7
 801dea2:	f7f2 fc23 	bl	80106ec <nema_rb_submit_cmdlist2>
 801dea6:	696b      	ldr	r3, [r5, #20]
 801dea8:	61e8      	str	r0, [r5, #28]
 801deaa:	429e      	cmp	r6, r3
 801deac:	bfd8      	it	le
 801deae:	2600      	movle	r6, #0
 801deb0:	616e      	str	r6, [r5, #20]
 801deb2:	e02f      	b.n	801df14 <nema_cl_submit+0xb4>
 801deb4:	4604      	mov	r4, r0
 801deb6:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801deba:	e012      	b.n	801dee2 <nema_cl_submit+0x82>
 801debc:	6923      	ldr	r3, [r4, #16]
 801debe:	6949      	ldr	r1, [r1, #20]
 801dec0:	4433      	add	r3, r6
 801dec2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801dec6:	69a3      	ldr	r3, [r4, #24]
 801dec8:	4620      	mov	r0, r4
 801deca:	f023 0308 	bic.w	r3, r3, #8
 801dece:	61a3      	str	r3, [r4, #24]
 801ded0:	f7e4 fff6 	bl	8002ec0 <nema_buffer_flush>
 801ded4:	69a3      	ldr	r3, [r4, #24]
 801ded6:	f043 0308 	orr.w	r3, r3, #8
 801deda:	61a3      	str	r3, [r4, #24]
 801dedc:	6a24      	ldr	r4, [r4, #32]
 801dede:	b16c      	cbz	r4, 801defc <nema_cl_submit+0x9c>
 801dee0:	69a3      	ldr	r3, [r4, #24]
 801dee2:	0758      	lsls	r0, r3, #29
 801dee4:	68a2      	ldr	r2, [r4, #8]
 801dee6:	6a21      	ldr	r1, [r4, #32]
 801dee8:	d4e8      	bmi.n	801debc <nema_cl_submit+0x5c>
 801deea:	071b      	lsls	r3, r3, #28
 801deec:	d406      	bmi.n	801defc <nema_cl_submit+0x9c>
 801deee:	4620      	mov	r0, r4
 801def0:	f7e4 ffe6 	bl	8002ec0 <nema_buffer_flush>
 801def4:	69a3      	ldr	r3, [r4, #24]
 801def6:	f043 0308 	orr.w	r3, r3, #8
 801defa:	61a3      	str	r3, [r4, #24]
 801defc:	2000      	movs	r0, #0
 801defe:	f7e4 ffe0 	bl	8002ec2 <nema_mutex_lock>
 801df02:	6969      	ldr	r1, [r5, #20]
 801df04:	4628      	mov	r0, r5
 801df06:	f7f2 fc75 	bl	80107f4 <nema_rb_submit_cmdlist>
 801df0a:	61e8      	str	r0, [r5, #28]
 801df0c:	2000      	movs	r0, #0
 801df0e:	f7e4 ffda 	bl	8002ec6 <nema_mutex_unlock>
 801df12:	69e8      	ldr	r0, [r5, #28]
 801df14:	f7f2 fd3a 	bl	801098c <nema_rb_submit_cl_id>
 801df18:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801df1c:	69e8      	ldr	r0, [r5, #28]
 801df1e:	4298      	cmp	r0, r3
 801df20:	d106      	bne.n	801df30 <nema_cl_submit+0xd0>
 801df22:	f7e4 ff07 	bl	8002d34 <nema_wait_irq_cl>
 801df26:	2800      	cmp	r0, #0
 801df28:	db02      	blt.n	801df30 <nema_cl_submit+0xd0>
 801df2a:	f04f 33ff 	mov.w	r3, #4294967295
 801df2e:	61eb      	str	r3, [r5, #28]
 801df30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801df32:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df36:	f7f2 bded 	b.w	8010b14 <nema_set_error>
 801df3a:	f7e4 ffc1 	bl	8002ec0 <nema_buffer_flush>
 801df3e:	69ab      	ldr	r3, [r5, #24]
 801df40:	f043 0308 	orr.w	r3, r3, #8
 801df44:	61ab      	str	r3, [r5, #24]
 801df46:	e7a4      	b.n	801de92 <nema_cl_submit+0x32>
 801df48:	f7e4 fef4 	bl	8002d34 <nema_wait_irq_cl>
 801df4c:	2800      	cmp	r0, #0
 801df4e:	daa3      	bge.n	801de98 <nema_cl_submit+0x38>
 801df50:	e7a5      	b.n	801de9e <nema_cl_submit+0x3e>
 801df52:	bf00      	nop

0801df54 <nema_cl_wait>:
 801df54:	b510      	push	{r4, lr}
 801df56:	b170      	cbz	r0, 801df76 <nema_cl_wait+0x22>
 801df58:	4604      	mov	r4, r0
 801df5a:	69c0      	ldr	r0, [r0, #28]
 801df5c:	2800      	cmp	r0, #0
 801df5e:	da04      	bge.n	801df6a <nema_cl_wait+0x16>
 801df60:	f04f 33ff 	mov.w	r3, #4294967295
 801df64:	61e3      	str	r3, [r4, #28]
 801df66:	2000      	movs	r0, #0
 801df68:	bd10      	pop	{r4, pc}
 801df6a:	f7e4 fee3 	bl	8002d34 <nema_wait_irq_cl>
 801df6e:	2800      	cmp	r0, #0
 801df70:	daf6      	bge.n	801df60 <nema_cl_wait+0xc>
 801df72:	2000      	movs	r0, #0
 801df74:	bd10      	pop	{r4, pc}
 801df76:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df7a:	f7f2 fdcb 	bl	8010b14 <nema_set_error>
 801df7e:	f04f 30ff 	mov.w	r0, #4294967295
 801df82:	bd10      	pop	{r4, pc}

0801df84 <nema_blender_init>:
 801df84:	b530      	push	{r4, r5, lr}
 801df86:	b085      	sub	sp, #20
 801df88:	466d      	mov	r5, sp
 801df8a:	2418      	movs	r4, #24
 801df8c:	4b11      	ldr	r3, [pc, #68]	@ (801dfd4 <nema_blender_init+0x50>)
 801df8e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801df90:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 801df94:	2101      	movs	r1, #1
 801df96:	4622      	mov	r2, r4
 801df98:	4628      	mov	r0, r5
 801df9a:	440c      	add	r4, r1
 801df9c:	f7f4 f95c 	bl	8012258 <nema_load_frag_shader>
 801dfa0:	2c1f      	cmp	r4, #31
 801dfa2:	d1f7      	bne.n	801df94 <nema_blender_init+0x10>
 801dfa4:	4622      	mov	r2, r4
 801dfa6:	2101      	movs	r1, #1
 801dfa8:	a802      	add	r0, sp, #8
 801dfaa:	f7f4 f955 	bl	8012258 <nema_load_frag_shader>
 801dfae:	f7f3 ffeb 	bl	8011f88 <nema_readHwConfig>
 801dfb2:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 801dfb6:	2800      	cmp	r0, #0
 801dfb8:	bf14      	ite	ne
 801dfba:	2201      	movne	r2, #1
 801dfbc:	2200      	moveq	r2, #0
 801dfbe:	4b06      	ldr	r3, [pc, #24]	@ (801dfd8 <nema_blender_init+0x54>)
 801dfc0:	701a      	strb	r2, [r3, #0]
 801dfc2:	d005      	beq.n	801dfd0 <nema_blender_init+0x4c>
 801dfc4:	2200      	movs	r2, #0
 801dfc6:	4b05      	ldr	r3, [pc, #20]	@ (801dfdc <nema_blender_init+0x58>)
 801dfc8:	2001      	movs	r0, #1
 801dfca:	601a      	str	r2, [r3, #0]
 801dfcc:	f7f4 f964 	bl	8012298 <nema_set_rop_blend_mode>
 801dfd0:	b005      	add	sp, #20
 801dfd2:	bd30      	pop	{r4, r5, pc}
 801dfd4:	08033618 	.word	0x08033618
 801dfd8:	20083361 	.word	0x20083361
 801dfdc:	200001e8 	.word	0x200001e8

0801dfe0 <nema_set_blend>:
 801dfe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfe4:	4ca5      	ldr	r4, [pc, #660]	@ (801e27c <nema_set_blend+0x29c>)
 801dfe6:	4683      	mov	fp, r0
 801dfe8:	7820      	ldrb	r0, [r4, #0]
 801dfea:	b0a7      	sub	sp, #156	@ 0x9c
 801dfec:	9102      	str	r1, [sp, #8]
 801dfee:	9200      	str	r2, [sp, #0]
 801dff0:	2800      	cmp	r0, #0
 801dff2:	f040 8233 	bne.w	801e45c <nema_set_blend+0x47c>
 801dff6:	469a      	mov	sl, r3
 801dff8:	465c      	mov	r4, fp
 801dffa:	ea4f 535b 	mov.w	r3, fp, lsr #21
 801dffe:	055b      	lsls	r3, r3, #21
 801e000:	930e      	str	r3, [sp, #56]	@ 0x38
 801e002:	f40b 0300 	and.w	r3, fp, #8388608	@ 0x800000
 801e006:	930c      	str	r3, [sp, #48]	@ 0x30
 801e008:	f40b 0380 	and.w	r3, fp, #4194304	@ 0x400000
 801e00c:	f00b 010f 	and.w	r1, fp, #15
 801e010:	930d      	str	r3, [sp, #52]	@ 0x34
 801e012:	f40b 1300 	and.w	r3, fp, #2097152	@ 0x200000
 801e016:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e018:	9101      	str	r1, [sp, #4]
 801e01a:	b2d2      	uxtb	r2, r2
 801e01c:	fa5f f38a 	uxtb.w	r3, sl
 801e020:	f3cb 2903 	ubfx	r9, fp, #8, #4
 801e024:	f00b 7100 	and.w	r1, fp, #33554432	@ 0x2000000
 801e028:	f3cb 6840 	ubfx	r8, fp, #25, #1
 801e02c:	9d02      	ldr	r5, [sp, #8]
 801e02e:	b2e8      	uxtb	r0, r5
 801e030:	2804      	cmp	r0, #4
 801e032:	4628      	mov	r0, r5
 801e034:	bf28      	it	cs
 801e036:	2000      	movcs	r0, #0
 801e038:	2a04      	cmp	r2, #4
 801e03a:	9a00      	ldr	r2, [sp, #0]
 801e03c:	bf28      	it	cs
 801e03e:	f04f 32ff 	movcs.w	r2, #4294967295
 801e042:	2b04      	cmp	r3, #4
 801e044:	9002      	str	r0, [sp, #8]
 801e046:	9200      	str	r2, [sp, #0]
 801e048:	bf28      	it	cs
 801e04a:	4682      	movcs	sl, r0
 801e04c:	4602      	mov	r2, r0
 801e04e:	bf34      	ite	cc
 801e050:	4650      	movcc	r0, sl
 801e052:	2002      	movcs	r0, #2
 801e054:	4b8a      	ldr	r3, [pc, #552]	@ (801e280 <nema_set_blend+0x2a0>)
 801e056:	9010      	str	r0, [sp, #64]	@ 0x40
 801e058:	781b      	ldrb	r3, [r3, #0]
 801e05a:	b14b      	cbz	r3, 801e070 <nema_set_blend+0x90>
 801e05c:	f01b 7380 	ands.w	r3, fp, #16777216	@ 0x1000000
 801e060:	9303      	str	r3, [sp, #12]
 801e062:	d102      	bne.n	801e06a <nema_set_blend+0x8a>
 801e064:	4552      	cmp	r2, sl
 801e066:	f000 830c 	beq.w	801e682 <nema_set_blend+0x6a2>
 801e06a:	2001      	movs	r0, #1
 801e06c:	f7f4 f914 	bl	8012298 <nema_set_rop_blend_mode>
 801e070:	2c00      	cmp	r4, #0
 801e072:	bfac      	ite	ge
 801e074:	4642      	movge	r2, r8
 801e076:	2201      	movlt	r2, #1
 801e078:	4b82      	ldr	r3, [pc, #520]	@ (801e284 <nema_set_blend+0x2a4>)
 801e07a:	f1bb 0f01 	cmp.w	fp, #1
 801e07e:	789b      	ldrb	r3, [r3, #2]
 801e080:	9207      	str	r2, [sp, #28]
 801e082:	9305      	str	r3, [sp, #20]
 801e084:	f000 80e0 	beq.w	801e248 <nema_set_blend+0x268>
 801e088:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e08c:	9315      	str	r3, [sp, #84]	@ 0x54
 801e08e:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e092:	9306      	str	r3, [sp, #24]
 801e094:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e098:	9309      	str	r3, [sp, #36]	@ 0x24
 801e09a:	9b01      	ldr	r3, [sp, #4]
 801e09c:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e0a0:	2b05      	cmp	r3, #5
 801e0a2:	f240 80df 	bls.w	801e264 <nema_set_blend+0x284>
 801e0a6:	2301      	movs	r3, #1
 801e0a8:	930a      	str	r3, [sp, #40]	@ 0x28
 801e0aa:	9304      	str	r3, [sp, #16]
 801e0ac:	2303      	movs	r3, #3
 801e0ae:	4976      	ldr	r1, [pc, #472]	@ (801e288 <nema_set_blend+0x2a8>)
 801e0b0:	9303      	str	r3, [sp, #12]
 801e0b2:	9108      	str	r1, [sp, #32]
 801e0b4:	4d75      	ldr	r5, [pc, #468]	@ (801e28c <nema_set_blend+0x2ac>)
 801e0b6:	2a00      	cmp	r2, #0
 801e0b8:	4b75      	ldr	r3, [pc, #468]	@ (801e290 <nema_set_blend+0x2b0>)
 801e0ba:	bf18      	it	ne
 801e0bc:	462b      	movne	r3, r5
 801e0be:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 801e0c2:	f105 0502 	add.w	r5, r5, #2
 801e0c6:	9312      	str	r3, [sp, #72]	@ 0x48
 801e0c8:	4b72      	ldr	r3, [pc, #456]	@ (801e294 <nema_set_blend+0x2b4>)
 801e0ca:	bf08      	it	eq
 801e0cc:	462b      	moveq	r3, r5
 801e0ce:	f8df e20c 	ldr.w	lr, [pc, #524]	@ 801e2dc <nema_set_blend+0x2fc>
 801e0d2:	f8df c20c 	ldr.w	ip, [pc, #524]	@ 801e2e0 <nema_set_blend+0x300>
 801e0d6:	9311      	str	r3, [sp, #68]	@ 0x44
 801e0d8:	bf14      	ite	ne
 801e0da:	4673      	movne	r3, lr
 801e0dc:	4663      	moveq	r3, ip
 801e0de:	4f6e      	ldr	r7, [pc, #440]	@ (801e298 <nema_set_blend+0x2b8>)
 801e0e0:	9314      	str	r3, [sp, #80]	@ 0x50
 801e0e2:	4b6e      	ldr	r3, [pc, #440]	@ (801e29c <nema_set_blend+0x2bc>)
 801e0e4:	bf18      	it	ne
 801e0e6:	463b      	movne	r3, r7
 801e0e8:	f5a5 25c8 	sub.w	r5, r5, #409600	@ 0x64000
 801e0ec:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e0ee:	4b6c      	ldr	r3, [pc, #432]	@ (801e2a0 <nema_set_blend+0x2c0>)
 801e0f0:	f1a5 0542 	sub.w	r5, r5, #66	@ 0x42
 801e0f4:	496b      	ldr	r1, [pc, #428]	@ (801e2a4 <nema_set_blend+0x2c4>)
 801e0f6:	bf18      	it	ne
 801e0f8:	4619      	movne	r1, r3
 801e0fa:	f1a3 033e 	sub.w	r3, r3, #62	@ 0x3e
 801e0fe:	bf18      	it	ne
 801e100:	462b      	movne	r3, r5
 801e102:	4e69      	ldr	r6, [pc, #420]	@ (801e2a8 <nema_set_blend+0x2c8>)
 801e104:	4f69      	ldr	r7, [pc, #420]	@ (801e2ac <nema_set_blend+0x2cc>)
 801e106:	461d      	mov	r5, r3
 801e108:	4b69      	ldr	r3, [pc, #420]	@ (801e2b0 <nema_set_blend+0x2d0>)
 801e10a:	486a      	ldr	r0, [pc, #424]	@ (801e2b4 <nema_set_blend+0x2d4>)
 801e10c:	bf18      	it	ne
 801e10e:	4630      	movne	r0, r6
 801e110:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 801e114:	f8df c1cc 	ldr.w	ip, [pc, #460]	@ 801e2e4 <nema_set_blend+0x304>
 801e118:	f506 3650 	add.w	r6, r6, #212992	@ 0x34000
 801e11c:	bf04      	itt	eq
 801e11e:	46bc      	moveq	ip, r7
 801e120:	461e      	moveq	r6, r3
 801e122:	f107 4700 	add.w	r7, r7, #2147483648	@ 0x80000000
 801e126:	f1a3 0340 	sub.w	r3, r3, #64	@ 0x40
 801e12a:	f1a7 0742 	sub.w	r7, r7, #66	@ 0x42
 801e12e:	bf08      	it	eq
 801e130:	461f      	moveq	r7, r3
 801e132:	4c61      	ldr	r4, [pc, #388]	@ (801e2b8 <nema_set_blend+0x2d8>)
 801e134:	f8df e1b0 	ldr.w	lr, [pc, #432]	@ 801e2e8 <nema_set_blend+0x308>
 801e138:	4a60      	ldr	r2, [pc, #384]	@ (801e2bc <nema_set_blend+0x2dc>)
 801e13a:	bf18      	it	ne
 801e13c:	4622      	movne	r2, r4
 801e13e:	f504 3450 	add.w	r4, r4, #212992	@ 0x34000
 801e142:	bf08      	it	eq
 801e144:	4674      	moveq	r4, lr
 801e146:	f8dd e018 	ldr.w	lr, [sp, #24]
 801e14a:	f1b8 0f00 	cmp.w	r8, #0
 801e14e:	f040 8109 	bne.w	801e364 <nema_set_blend+0x384>
 801e152:	9b07      	ldr	r3, [sp, #28]
 801e154:	2b00      	cmp	r3, #0
 801e156:	bf0c      	ite	eq
 801e158:	2300      	moveq	r3, #0
 801e15a:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 801e15e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e160:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e162:	2b00      	cmp	r3, #0
 801e164:	f040 8105 	bne.w	801e372 <nema_set_blend+0x392>
 801e168:	f01b 6f80 	tst.w	fp, #67108864	@ 0x4000000
 801e16c:	f000 81b4 	beq.w	801e4d8 <nema_set_blend+0x4f8>
 801e170:	4684      	mov	ip, r0
 801e172:	460e      	mov	r6, r1
 801e174:	4614      	mov	r4, r2
 801e176:	462f      	mov	r7, r5
 801e178:	f04f 0804 	mov.w	r8, #4
 801e17c:	2200      	movs	r2, #0
 801e17e:	4850      	ldr	r0, [pc, #320]	@ (801e2c0 <nema_set_blend+0x2e0>)
 801e180:	f00b 53c0 	and.w	r3, fp, #402653184	@ 0x18000000
 801e184:	4293      	cmp	r3, r2
 801e186:	f850 302a 	ldr.w	r3, [r0, sl, lsl #2]
 801e18a:	bf18      	it	ne
 801e18c:	463e      	movne	r6, r7
 801e18e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e190:	9b05      	ldr	r3, [sp, #20]
 801e192:	bf16      	itet	ne
 801e194:	46a4      	movne	ip, r4
 801e196:	270e      	moveq	r7, #14
 801e198:	270c      	movne	r7, #12
 801e19a:	9216      	str	r2, [sp, #88]	@ 0x58
 801e19c:	2b00      	cmp	r3, #0
 801e19e:	f000 80eb 	beq.w	801e378 <nema_set_blend+0x398>
 801e1a2:	4b48      	ldr	r3, [pc, #288]	@ (801e2c4 <nema_set_blend+0x2e4>)
 801e1a4:	4948      	ldr	r1, [pc, #288]	@ (801e2c8 <nema_set_blend+0x2e8>)
 801e1a6:	9800      	ldr	r0, [sp, #0]
 801e1a8:	e9cd 1316 	strd	r1, r3, [sp, #88]	@ 0x58
 801e1ac:	1c43      	adds	r3, r0, #1
 801e1ae:	f000 8257 	beq.w	801e660 <nema_set_blend+0x680>
 801e1b2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801e1b6:	4b45      	ldr	r3, [pc, #276]	@ (801e2cc <nema_set_blend+0x2ec>)
 801e1b8:	9204      	str	r2, [sp, #16]
 801e1ba:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e1be:	e9cd 3118 	strd	r3, r1, [sp, #96]	@ 0x60
 801e1c2:	2203      	movs	r2, #3
 801e1c4:	2102      	movs	r1, #2
 801e1c6:	4c42      	ldr	r4, [pc, #264]	@ (801e2d0 <nema_set_blend+0x2f0>)
 801e1c8:	f1b9 0f01 	cmp.w	r9, #1
 801e1cc:	f240 8110 	bls.w	801e3f0 <nema_set_blend+0x410>
 801e1d0:	9b01      	ldr	r3, [sp, #4]
 801e1d2:	2b05      	cmp	r3, #5
 801e1d4:	d803      	bhi.n	801e1de <nema_set_blend+0x1fe>
 801e1d6:	f01b 5f70 	tst.w	fp, #1006632960	@ 0x3c000000
 801e1da:	f000 8087 	beq.w	801e2ec <nema_set_blend+0x30c>
 801e1de:	9b03      	ldr	r3, [sp, #12]
 801e1e0:	b933      	cbnz	r3, 801e1f0 <nema_set_blend+0x210>
 801e1e2:	f1b9 0f00 	cmp.w	r9, #0
 801e1e6:	d103      	bne.n	801e1f0 <nema_set_blend+0x210>
 801e1e8:	9b07      	ldr	r3, [sp, #28]
 801e1ea:	2b00      	cmp	r3, #0
 801e1ec:	f000 81ca 	beq.w	801e584 <nema_set_blend+0x5a4>
 801e1f0:	f1b8 0f1d 	cmp.w	r8, #29
 801e1f4:	f000 8150 	beq.w	801e498 <nema_set_blend+0x4b8>
 801e1f8:	4b36      	ldr	r3, [pc, #216]	@ (801e2d4 <nema_set_blend+0x2f4>)
 801e1fa:	a826      	add	r0, sp, #152	@ 0x98
 801e1fc:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e200:	ea43 13ca 	orr.w	r3, r3, sl, lsl #7
 801e204:	9803      	ldr	r0, [sp, #12]
 801e206:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e20a:	4303      	orrs	r3, r0
 801e20c:	e941 3c10 	strd	r3, ip, [r1, #-64]	@ 0x40
 801e210:	1c55      	adds	r5, r2, #1
 801e212:	f1b9 0f00 	cmp.w	r9, #0
 801e216:	f040 8150 	bne.w	801e4ba <nema_set_blend+0x4da>
 801e21a:	46ce      	mov	lr, r9
 801e21c:	4b2d      	ldr	r3, [pc, #180]	@ (801e2d4 <nema_set_blend+0x2f4>)
 801e21e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e222:	f8cd 9018 	str.w	r9, [sp, #24]
 801e226:	9308      	str	r3, [sp, #32]
 801e228:	9b07      	ldr	r3, [sp, #28]
 801e22a:	2b00      	cmp	r3, #0
 801e22c:	d163      	bne.n	801e2f6 <nema_set_blend+0x316>
 801e22e:	4b2a      	ldr	r3, [pc, #168]	@ (801e2d8 <nema_set_blend+0x2f8>)
 801e230:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e234:	9308      	str	r3, [sp, #32]
 801e236:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 801e23a:	9f01      	ldr	r7, [sp, #4]
 801e23c:	e061      	b.n	801e302 <nema_set_blend+0x322>
 801e23e:	f04f 0900 	mov.w	r9, #0
 801e242:	46c8      	mov	r8, r9
 801e244:	f8cd 901c 	str.w	r9, [sp, #28]
 801e248:	2b00      	cmp	r3, #0
 801e24a:	f000 8153 	beq.w	801e4f4 <nema_set_blend+0x514>
 801e24e:	9b01      	ldr	r3, [sp, #4]
 801e250:	2b05      	cmp	r3, #5
 801e252:	f200 8169 	bhi.w	801e528 <nema_set_blend+0x548>
 801e256:	2300      	movs	r3, #0
 801e258:	f04f 0b01 	mov.w	fp, #1
 801e25c:	461a      	mov	r2, r3
 801e25e:	9306      	str	r3, [sp, #24]
 801e260:	9309      	str	r3, [sp, #36]	@ 0x24
 801e262:	9315      	str	r3, [sp, #84]	@ 0x54
 801e264:	9b07      	ldr	r3, [sp, #28]
 801e266:	2b00      	cmp	r3, #0
 801e268:	f000 8200 	beq.w	801e66c <nema_set_blend+0x68c>
 801e26c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e26e:	4b06      	ldr	r3, [pc, #24]	@ (801e288 <nema_set_blend+0x2a8>)
 801e270:	2001      	movs	r0, #1
 801e272:	9308      	str	r3, [sp, #32]
 801e274:	2303      	movs	r3, #3
 801e276:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801e27a:	e71b      	b.n	801e0b4 <nema_set_blend+0xd4>
 801e27c:	20083360 	.word	0x20083360
 801e280:	20083361 	.word	0x20083361
 801e284:	20000064 	.word	0x20000064
 801e288:	080c0003 	.word	0x080c0003
 801e28c:	000761c5 	.word	0x000761c5
 801e290:	000761c7 	.word	0x000761c7
 801e294:	800761c5 	.word	0x800761c5
 801e298:	80076185 	.word	0x80076185
 801e29c:	80076187 	.word	0x80076187
 801e2a0:	800121c5 	.word	0x800121c5
 801e2a4:	800121c7 	.word	0x800121c7
 801e2a8:	000121c5 	.word	0x000121c5
 801e2ac:	000461c7 	.word	0x000461c7
 801e2b0:	800461c7 	.word	0x800461c7
 801e2b4:	000121c7 	.word	0x000121c7
 801e2b8:	00012185 	.word	0x00012185
 801e2bc:	00012187 	.word	0x00012187
 801e2c0:	08035d40 	.word	0x08035d40
 801e2c4:	02009408 	.word	0x02009408
 801e2c8:	00f40182 	.word	0x00f40182
 801e2cc:	000c100b 	.word	0x000c100b
 801e2d0:	1000fc00 	.word	0x1000fc00
 801e2d4:	080c0000 	.word	0x080c0000
 801e2d8:	080c0002 	.word	0x080c0002
 801e2dc:	00076185 	.word	0x00076185
 801e2e0:	00076187 	.word	0x00076187
 801e2e4:	000461c5 	.word	0x000461c5
 801e2e8:	00046187 	.word	0x00046187
 801e2ec:	4615      	mov	r5, r2
 801e2ee:	460a      	mov	r2, r1
 801e2f0:	f1b9 0f00 	cmp.w	r9, #0
 801e2f4:	d098      	beq.n	801e228 <nema_set_blend+0x248>
 801e2f6:	9b06      	ldr	r3, [sp, #24]
 801e2f8:	2b00      	cmp	r3, #0
 801e2fa:	f000 8202 	beq.w	801e702 <nema_set_blend+0x722>
 801e2fe:	2600      	movs	r6, #0
 801e300:	9f01      	ldr	r7, [sp, #4]
 801e302:	48c1      	ldr	r0, [pc, #772]	@ (801e608 <nema_set_blend+0x628>)
 801e304:	49c1      	ldr	r1, [pc, #772]	@ (801e60c <nema_set_blend+0x62c>)
 801e306:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 801e30a:	f851 7027 	ldr.w	r7, [r1, r7, lsl #2]
 801e30e:	015b      	lsls	r3, r3, #5
 801e310:	ea43 3387 	orr.w	r3, r3, r7, lsl #14
 801e314:	9f08      	ldr	r7, [sp, #32]
 801e316:	ea47 5e0e 	orr.w	lr, r7, lr, lsl #20
 801e31a:	4fbd      	ldr	r7, [pc, #756]	@ (801e610 <nema_set_blend+0x630>)
 801e31c:	ea4e 1eca 	orr.w	lr, lr, sl, lsl #7
 801e320:	431f      	orrs	r7, r3
 801e322:	ab26      	add	r3, sp, #152	@ 0x98
 801e324:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801e328:	4337      	orrs	r7, r6
 801e32a:	e942 e710 	strd	lr, r7, [r2, #-64]	@ 0x40
 801e32e:	2e00      	cmp	r6, #0
 801e330:	f000 813f 	beq.w	801e5b2 <nema_set_blend+0x5d2>
 801e334:	9804      	ldr	r0, [sp, #16]
 801e336:	f7f3 fe95 	bl	8012064 <nema_matmul_bypass>
 801e33a:	4629      	mov	r1, r5
 801e33c:	2200      	movs	r2, #0
 801e33e:	a816      	add	r0, sp, #88	@ 0x58
 801e340:	f7f3 ff8a 	bl	8012258 <nema_load_frag_shader>
 801e344:	4bb3      	ldr	r3, [pc, #716]	@ (801e614 <nema_set_blend+0x634>)
 801e346:	f1c5 0520 	rsb	r5, r5, #32
 801e34a:	6818      	ldr	r0, [r3, #0]
 801e34c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e34e:	ea43 0800 	orr.w	r8, r3, r0
 801e352:	ea48 0005 	orr.w	r0, r8, r5
 801e356:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
 801e35a:	f7f3 ff97 	bl	801228c <nema_set_frag_ptr>
 801e35e:	b027      	add	sp, #156	@ 0x9c
 801e360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e364:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 801e368:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e36a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e36c:	2b00      	cmp	r3, #0
 801e36e:	f43f aefb 	beq.w	801e168 <nema_set_blend+0x188>
 801e372:	f04f 0811 	mov.w	r8, #17
 801e376:	e701      	b.n	801e17c <nema_set_blend+0x19c>
 801e378:	9b00      	ldr	r3, [sp, #0]
 801e37a:	1c5a      	adds	r2, r3, #1
 801e37c:	f000 8136 	beq.w	801e5ec <nema_set_blend+0x60c>
 801e380:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801e384:	9a05      	ldr	r2, [sp, #20]
 801e386:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801e38a:	9204      	str	r2, [sp, #16]
 801e38c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e38e:	2a00      	cmp	r2, #0
 801e390:	f000 80a9 	beq.w	801e4e6 <nema_set_blend+0x506>
 801e394:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e398:	499f      	ldr	r1, [pc, #636]	@ (801e618 <nema_set_blend+0x638>)
 801e39a:	4aa0      	ldr	r2, [pc, #640]	@ (801e61c <nema_set_blend+0x63c>)
 801e39c:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 801e3a0:	9219      	str	r2, [sp, #100]	@ 0x64
 801e3a2:	2204      	movs	r2, #4
 801e3a4:	9116      	str	r1, [sp, #88]	@ 0x58
 801e3a6:	9205      	str	r2, [sp, #20]
 801e3a8:	2102      	movs	r1, #2
 801e3aa:	2203      	movs	r2, #3
 801e3ac:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 801e3b0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e3b2:	2c00      	cmp	r4, #0
 801e3b4:	d04f      	beq.n	801e456 <nema_set_blend+0x476>
 801e3b6:	9c00      	ldr	r4, [sp, #0]
 801e3b8:	f1b4 3fff 	cmp.w	r4, #4294967295
 801e3bc:	d04b      	beq.n	801e456 <nema_set_blend+0x476>
 801e3be:	f241 050b 	movw	r5, #4107	@ 0x100b
 801e3c2:	2300      	movs	r3, #0
 801e3c4:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 801e3c8:	a826      	add	r0, sp, #152	@ 0x98
 801e3ca:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 801e3ce:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e3d0:	f044 5480 	orr.w	r4, r4, #268435456	@ 0x10000000
 801e3d4:	ea45 11c1 	orr.w	r1, r5, r1, lsl #7
 801e3d8:	f1b9 0f01 	cmp.w	r9, #1
 801e3dc:	f840 1c40 	str.w	r1, [r0, #-64]
 801e3e0:	f444 4420 	orr.w	r4, r4, #40960	@ 0xa000
 801e3e4:	4611      	mov	r1, r2
 801e3e6:	f840 3c3c 	str.w	r3, [r0, #-60]
 801e3ea:	9a05      	ldr	r2, [sp, #20]
 801e3ec:	f63f aef0 	bhi.w	801e1d0 <nema_set_blend+0x1f0>
 801e3f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e3f2:	2b00      	cmp	r3, #0
 801e3f4:	f47f aeec 	bne.w	801e1d0 <nema_set_blend+0x1f0>
 801e3f8:	9b00      	ldr	r3, [sp, #0]
 801e3fa:	3301      	adds	r3, #1
 801e3fc:	f47f aee8 	bne.w	801e1d0 <nema_set_blend+0x1f0>
 801e400:	9b02      	ldr	r3, [sp, #8]
 801e402:	4553      	cmp	r3, sl
 801e404:	f47f aee4 	bne.w	801e1d0 <nema_set_blend+0x1f0>
 801e408:	f1b9 0f00 	cmp.w	r9, #0
 801e40c:	bf15      	itete	ne
 801e40e:	f44f 6600 	movne.w	r6, #2048	@ 0x800
 801e412:	f44f 5600 	moveq.w	r6, #8192	@ 0x2000
 801e416:	f44f 1500 	movne.w	r5, #2097152	@ 0x200000
 801e41a:	f44f 0500 	moveq.w	r5, #8388608	@ 0x800000
 801e41e:	9f01      	ldr	r7, [sp, #4]
 801e420:	f8df c1e4 	ldr.w	ip, [pc, #484]	@ 801e608 <nema_set_blend+0x628>
 801e424:	4879      	ldr	r0, [pc, #484]	@ (801e60c <nema_set_blend+0x62c>)
 801e426:	f85c 3027 	ldr.w	r3, [ip, r7, lsl #2]
 801e42a:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 801e42e:	015b      	lsls	r3, r3, #5
 801e430:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801e434:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 801e438:	f043 0306 	orr.w	r3, r3, #6
 801e43c:	4333      	orrs	r3, r6
 801e43e:	432b      	orrs	r3, r5
 801e440:	4877      	ldr	r0, [pc, #476]	@ (801e620 <nema_set_blend+0x640>)
 801e442:	9d02      	ldr	r5, [sp, #8]
 801e444:	ae26      	add	r6, sp, #152	@ 0x98
 801e446:	ea40 10c5 	orr.w	r0, r0, r5, lsl #7
 801e44a:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 801e44e:	4615      	mov	r5, r2
 801e450:	e941 0310 	strd	r0, r3, [r1, #-64]	@ 0x40
 801e454:	e76e      	b.n	801e334 <nema_set_blend+0x354>
 801e456:	f043 5480 	orr.w	r4, r3, #268435456	@ 0x10000000
 801e45a:	e6b5      	b.n	801e1c8 <nema_set_blend+0x1e8>
 801e45c:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 801e460:	f7f3 ff78 	bl	8012354 <nema_set_raster_color>
 801e464:	2000      	movs	r0, #0
 801e466:	f7f2 fc97 	bl	8010d98 <nema_enable_gradient>
 801e46a:	f04f 0800 	mov.w	r8, #0
 801e46e:	f04f 0901 	mov.w	r9, #1
 801e472:	23ff      	movs	r3, #255	@ 0xff
 801e474:	f240 1401 	movw	r4, #257	@ 0x101
 801e478:	f04f 3aff 	mov.w	sl, #4294967295
 801e47c:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e480:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801e484:	e9cd 880c 	strd	r8, r8, [sp, #48]	@ 0x30
 801e488:	4641      	mov	r1, r8
 801e48a:	f8cd 9004 	str.w	r9, [sp, #4]
 801e48e:	461a      	mov	r2, r3
 801e490:	46a3      	mov	fp, r4
 801e492:	f8cd a000 	str.w	sl, [sp]
 801e496:	e5c9      	b.n	801e02c <nema_set_blend+0x4c>
 801e498:	2f0e      	cmp	r7, #14
 801e49a:	f47f aead 	bne.w	801e1f8 <nema_set_blend+0x218>
 801e49e:	9b03      	ldr	r3, [sp, #12]
 801e4a0:	2b00      	cmp	r3, #0
 801e4a2:	f47f aea9 	bne.w	801e1f8 <nema_set_blend+0x218>
 801e4a6:	9b06      	ldr	r3, [sp, #24]
 801e4a8:	2b00      	cmp	r3, #0
 801e4aa:	f47f aea5 	bne.w	801e1f8 <nema_set_blend+0x218>
 801e4ae:	4615      	mov	r5, r2
 801e4b0:	460a      	mov	r2, r1
 801e4b2:	f1b9 0f00 	cmp.w	r9, #0
 801e4b6:	f43f aeb0 	beq.w	801e21a <nema_set_blend+0x23a>
 801e4ba:	f04f 0e00 	mov.w	lr, #0
 801e4be:	4b59      	ldr	r3, [pc, #356]	@ (801e624 <nema_set_blend+0x644>)
 801e4c0:	9308      	str	r3, [sp, #32]
 801e4c2:	9b01      	ldr	r3, [sp, #4]
 801e4c4:	2b00      	cmp	r3, #0
 801e4c6:	f000 8123 	beq.w	801e710 <nema_set_blend+0x730>
 801e4ca:	2b01      	cmp	r3, #1
 801e4cc:	f04f 0600 	mov.w	r6, #0
 801e4d0:	f000 8137 	beq.w	801e742 <nema_set_blend+0x762>
 801e4d4:	461f      	mov	r7, r3
 801e4d6:	e714      	b.n	801e302 <nema_set_blend+0x322>
 801e4d8:	e9dd 6c11 	ldrd	r6, ip, [sp, #68]	@ 0x44
 801e4dc:	e9dd 7413 	ldrd	r7, r4, [sp, #76]	@ 0x4c
 801e4e0:	f04f 081d 	mov.w	r8, #29
 801e4e4:	e64a      	b.n	801e17c <nema_set_blend+0x19c>
 801e4e6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e4e8:	2a00      	cmp	r2, #0
 801e4ea:	d046      	beq.n	801e57a <nema_set_blend+0x59a>
 801e4ec:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e4f0:	494d      	ldr	r1, [pc, #308]	@ (801e628 <nema_set_blend+0x648>)
 801e4f2:	e752      	b.n	801e39a <nema_set_blend+0x3ba>
 801e4f4:	9b02      	ldr	r3, [sp, #8]
 801e4f6:	2b00      	cmp	r3, #0
 801e4f8:	f47f aea9 	bne.w	801e24e <nema_set_blend+0x26e>
 801e4fc:	9b00      	ldr	r3, [sp, #0]
 801e4fe:	3301      	adds	r3, #1
 801e500:	f000 8114 	beq.w	801e72c <nema_set_blend+0x74c>
 801e504:	9802      	ldr	r0, [sp, #8]
 801e506:	f7f3 fdad 	bl	8012064 <nema_matmul_bypass>
 801e50a:	4b42      	ldr	r3, [pc, #264]	@ (801e614 <nema_set_blend+0x634>)
 801e50c:	4947      	ldr	r1, [pc, #284]	@ (801e62c <nema_set_blend+0x64c>)
 801e50e:	9800      	ldr	r0, [sp, #0]
 801e510:	681a      	ldr	r2, [r3, #0]
 801e512:	4b47      	ldr	r3, [pc, #284]	@ (801e630 <nema_set_blend+0x650>)
 801e514:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801e518:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e51c:	4318      	orrs	r0, r3
 801e51e:	f7f3 feb5 	bl	801228c <nema_set_frag_ptr>
 801e522:	b027      	add	sp, #156	@ 0x9c
 801e524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e528:	2301      	movs	r3, #1
 801e52a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e52c:	9304      	str	r3, [sp, #16]
 801e52e:	469b      	mov	fp, r3
 801e530:	2303      	movs	r3, #3
 801e532:	f04f 0e00 	mov.w	lr, #0
 801e536:	9303      	str	r3, [sp, #12]
 801e538:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 801e53c:	f503 2340 	add.w	r3, r3, #786432	@ 0xc0000
 801e540:	9308      	str	r3, [sp, #32]
 801e542:	4b3c      	ldr	r3, [pc, #240]	@ (801e634 <nema_set_blend+0x654>)
 801e544:	f8cd e018 	str.w	lr, [sp, #24]
 801e548:	9312      	str	r3, [sp, #72]	@ 0x48
 801e54a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e54e:	9311      	str	r3, [sp, #68]	@ 0x44
 801e550:	4b39      	ldr	r3, [pc, #228]	@ (801e638 <nema_set_blend+0x658>)
 801e552:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 801e556:	9314      	str	r3, [sp, #80]	@ 0x50
 801e558:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e55c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e55e:	f5a3 23c8 	sub.w	r3, r3, #409600	@ 0x64000
 801e562:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801e566:	4835      	ldr	r0, [pc, #212]	@ (801e63c <nema_set_blend+0x65c>)
 801e568:	4935      	ldr	r1, [pc, #212]	@ (801e640 <nema_set_blend+0x660>)
 801e56a:	4a36      	ldr	r2, [pc, #216]	@ (801e644 <nema_set_blend+0x664>)
 801e56c:	461d      	mov	r5, r3
 801e56e:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 801e65c <nema_set_blend+0x67c>
 801e572:	4e35      	ldr	r6, [pc, #212]	@ (801e648 <nema_set_blend+0x668>)
 801e574:	4c35      	ldr	r4, [pc, #212]	@ (801e64c <nema_set_blend+0x66c>)
 801e576:	4f36      	ldr	r7, [pc, #216]	@ (801e650 <nema_set_blend+0x670>)
 801e578:	e5e7      	b.n	801e14a <nema_set_blend+0x16a>
 801e57a:	4611      	mov	r1, r2
 801e57c:	2202      	movs	r2, #2
 801e57e:	9205      	str	r2, [sp, #20]
 801e580:	2201      	movs	r2, #1
 801e582:	e715      	b.n	801e3b0 <nema_set_blend+0x3d0>
 801e584:	9b01      	ldr	r3, [sp, #4]
 801e586:	2b01      	cmp	r3, #1
 801e588:	f47f ae32 	bne.w	801e1f0 <nema_set_blend+0x210>
 801e58c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e58e:	2b00      	cmp	r3, #0
 801e590:	f47f ae2e 	bne.w	801e1f0 <nema_set_blend+0x210>
 801e594:	a826      	add	r0, sp, #152	@ 0x98
 801e596:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e59a:	4b21      	ldr	r3, [pc, #132]	@ (801e620 <nema_set_blend+0x640>)
 801e59c:	9802      	ldr	r0, [sp, #8]
 801e59e:	f841 6c3c 	str.w	r6, [r1, #-60]
 801e5a2:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e5a6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e5aa:	4615      	mov	r5, r2
 801e5ac:	f841 3c40 	str.w	r3, [r1, #-64]
 801e5b0:	e6c0      	b.n	801e334 <nema_set_blend+0x354>
 801e5b2:	f44f 0680 	mov.w	r6, #4194304	@ 0x400000
 801e5b6:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 801e5ba:	462a      	mov	r2, r5
 801e5bc:	3501      	adds	r5, #1
 801e5be:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 801e5c2:	f851 1029 	ldr.w	r1, [r1, r9, lsl #2]
 801e5c6:	0140      	lsls	r0, r0, #5
 801e5c8:	4b22      	ldr	r3, [pc, #136]	@ (801e654 <nema_set_blend+0x674>)
 801e5ca:	ea40 3081 	orr.w	r0, r0, r1, lsl #14
 801e5ce:	4303      	orrs	r3, r0
 801e5d0:	4921      	ldr	r1, [pc, #132]	@ (801e658 <nema_set_blend+0x678>)
 801e5d2:	9802      	ldr	r0, [sp, #8]
 801e5d4:	433b      	orrs	r3, r7
 801e5d6:	ea41 11c0 	orr.w	r1, r1, r0, lsl #7
 801e5da:	a826      	add	r0, sp, #152	@ 0x98
 801e5dc:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801e5e0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e5e2:	4333      	orrs	r3, r6
 801e5e4:	4301      	orrs	r1, r0
 801e5e6:	e942 1310 	strd	r1, r3, [r2, #-64]	@ 0x40
 801e5ea:	e6a3      	b.n	801e334 <nema_set_blend+0x354>
 801e5ec:	9b04      	ldr	r3, [sp, #16]
 801e5ee:	2b00      	cmp	r3, #0
 801e5f0:	f000 8082 	beq.w	801e6f8 <nema_set_blend+0x718>
 801e5f4:	9a05      	ldr	r2, [sp, #20]
 801e5f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5f8:	9203      	str	r2, [sp, #12]
 801e5fa:	920a      	str	r2, [sp, #40]	@ 0x28
 801e5fc:	4a09      	ldr	r2, [pc, #36]	@ (801e624 <nema_set_blend+0x644>)
 801e5fe:	f443 4330 	orr.w	r3, r3, #45056	@ 0xb000
 801e602:	9208      	str	r2, [sp, #32]
 801e604:	e6c2      	b.n	801e38c <nema_set_blend+0x3ac>
 801e606:	bf00      	nop
 801e608:	08035d50 	.word	0x08035d50
 801e60c:	08035d80 	.word	0x08035d80
 801e610:	0a002007 	.word	0x0a002007
 801e614:	200001e8 	.word	0x200001e8
 801e618:	100c118b 	.word	0x100c118b
 801e61c:	0081a042 	.word	0x0081a042
 801e620:	080c0002 	.word	0x080c0002
 801e624:	080c0000 	.word	0x080c0000
 801e628:	100c1183 	.word	0x100c1183
 801e62c:	08035d40 	.word	0x08035d40
 801e630:	141f801f 	.word	0x141f801f
 801e634:	000761c7 	.word	0x000761c7
 801e638:	00076187 	.word	0x00076187
 801e63c:	000121c7 	.word	0x000121c7
 801e640:	800121c7 	.word	0x800121c7
 801e644:	00012187 	.word	0x00012187
 801e648:	800461c7 	.word	0x800461c7
 801e64c:	00046187 	.word	0x00046187
 801e650:	80046187 	.word	0x80046187
 801e654:	80080206 	.word	0x80080206
 801e658:	004e0002 	.word	0x004e0002
 801e65c:	000461c7 	.word	0x000461c7
 801e660:	2301      	movs	r3, #1
 801e662:	2202      	movs	r2, #2
 801e664:	9304      	str	r3, [sp, #16]
 801e666:	4619      	mov	r1, r3
 801e668:	4c38      	ldr	r4, [pc, #224]	@ (801e74c <nema_set_blend+0x76c>)
 801e66a:	e5ad      	b.n	801e1c8 <nema_set_blend+0x1e8>
 801e66c:	f1b9 0f00 	cmp.w	r9, #0
 801e670:	d055      	beq.n	801e71e <nema_set_blend+0x73e>
 801e672:	2301      	movs	r3, #1
 801e674:	2103      	movs	r1, #3
 801e676:	930a      	str	r3, [sp, #40]	@ 0x28
 801e678:	e9cd 1303 	strd	r1, r3, [sp, #12]
 801e67c:	4b34      	ldr	r3, [pc, #208]	@ (801e750 <nema_set_blend+0x770>)
 801e67e:	9308      	str	r3, [sp, #32]
 801e680:	e518      	b.n	801e0b4 <nema_set_blend+0xd4>
 801e682:	2c00      	cmp	r4, #0
 801e684:	bfbd      	ittte	lt
 801e686:	f02b 4b00 	biclt.w	fp, fp, #2147483648	@ 0x80000000
 801e68a:	f04f 4202 	movlt.w	r2, #2181038080	@ 0x82000000
 801e68e:	f04f 4300 	movlt.w	r3, #2147483648	@ 0x80000000
 801e692:	f04f 7200 	movge.w	r2, #33554432	@ 0x2000000
 801e696:	b111      	cbz	r1, 801e69e <nema_set_blend+0x6be>
 801e698:	4613      	mov	r3, r2
 801e69a:	f02b 7b00 	bic.w	fp, fp, #33554432	@ 0x2000000
 801e69e:	9a01      	ldr	r2, [sp, #4]
 801e6a0:	ea42 2009 	orr.w	r0, r2, r9, lsl #8
 801e6a4:	4318      	orrs	r0, r3
 801e6a6:	f7f3 fdf7 	bl	8012298 <nema_set_rop_blend_mode>
 801e6aa:	ea4f 505b 	mov.w	r0, fp, lsr #21
 801e6ae:	4b29      	ldr	r3, [pc, #164]	@ (801e754 <nema_set_blend+0x774>)
 801e6b0:	0540      	lsls	r0, r0, #21
 801e6b2:	f040 0201 	orr.w	r2, r0, #1
 801e6b6:	789b      	ldrb	r3, [r3, #2]
 801e6b8:	2a01      	cmp	r2, #1
 801e6ba:	9201      	str	r2, [sp, #4]
 801e6bc:	9305      	str	r3, [sp, #20]
 801e6be:	f43f adbe 	beq.w	801e23e <nema_set_blend+0x25e>
 801e6c2:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e6c6:	9315      	str	r3, [sp, #84]	@ 0x54
 801e6c8:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e6cc:	9306      	str	r3, [sp, #24]
 801e6ce:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e6d2:	9309      	str	r3, [sp, #36]	@ 0x24
 801e6d4:	2301      	movs	r3, #1
 801e6d6:	f04f 0900 	mov.w	r9, #0
 801e6da:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e6de:	f8dd b004 	ldr.w	fp, [sp, #4]
 801e6e2:	9301      	str	r3, [sp, #4]
 801e6e4:	4b1c      	ldr	r3, [pc, #112]	@ (801e758 <nema_set_blend+0x778>)
 801e6e6:	46c8      	mov	r8, r9
 801e6e8:	f8cd 901c 	str.w	r9, [sp, #28]
 801e6ec:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e6f0:	f8cd 9010 	str.w	r9, [sp, #16]
 801e6f4:	9308      	str	r3, [sp, #32]
 801e6f6:	e4dd      	b.n	801e0b4 <nema_set_blend+0xd4>
 801e6f8:	2201      	movs	r2, #1
 801e6fa:	9b05      	ldr	r3, [sp, #20]
 801e6fc:	9204      	str	r2, [sp, #16]
 801e6fe:	930a      	str	r3, [sp, #40]	@ 0x28
 801e700:	e644      	b.n	801e38c <nema_set_blend+0x3ac>
 801e702:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e704:	2b00      	cmp	r3, #0
 801e706:	f43f aedc 	beq.w	801e4c2 <nema_set_blend+0x4e2>
 801e70a:	9e06      	ldr	r6, [sp, #24]
 801e70c:	9f01      	ldr	r7, [sp, #4]
 801e70e:	e5f8      	b.n	801e302 <nema_set_blend+0x322>
 801e710:	f44f 0600 	mov.w	r6, #8388608	@ 0x800000
 801e714:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 801e718:	4910      	ldr	r1, [pc, #64]	@ (801e75c <nema_set_blend+0x77c>)
 801e71a:	4811      	ldr	r0, [pc, #68]	@ (801e760 <nema_set_blend+0x780>)
 801e71c:	e74f      	b.n	801e5be <nema_set_blend+0x5de>
 801e71e:	4b0e      	ldr	r3, [pc, #56]	@ (801e758 <nema_set_blend+0x778>)
 801e720:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e724:	9308      	str	r3, [sp, #32]
 801e726:	e9cd 9903 	strd	r9, r9, [sp, #12]
 801e72a:	e4c3      	b.n	801e0b4 <nema_set_blend+0xd4>
 801e72c:	2001      	movs	r0, #1
 801e72e:	f7f3 fc99 	bl	8012064 <nema_matmul_bypass>
 801e732:	4a0c      	ldr	r2, [pc, #48]	@ (801e764 <nema_set_blend+0x784>)
 801e734:	4b0c      	ldr	r3, [pc, #48]	@ (801e768 <nema_set_blend+0x788>)
 801e736:	6810      	ldr	r0, [r2, #0]
 801e738:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 801e73c:	f7f3 fda6 	bl	801228c <nema_set_frag_ptr>
 801e740:	e6ef      	b.n	801e522 <nema_set_blend+0x542>
 801e742:	4637      	mov	r7, r6
 801e744:	4905      	ldr	r1, [pc, #20]	@ (801e75c <nema_set_blend+0x77c>)
 801e746:	4806      	ldr	r0, [pc, #24]	@ (801e760 <nema_set_blend+0x780>)
 801e748:	e739      	b.n	801e5be <nema_set_blend+0x5de>
 801e74a:	bf00      	nop
 801e74c:	1000fc00 	.word	0x1000fc00
 801e750:	080c0003 	.word	0x080c0003
 801e754:	20000064 	.word	0x20000064
 801e758:	080c0000 	.word	0x080c0000
 801e75c:	08035d80 	.word	0x08035d80
 801e760:	08035d50 	.word	0x08035d50
 801e764:	200001e8 	.word	0x200001e8
 801e768:	141f001f 	.word	0x141f001f

0801e76c <nema_set_const_color>:
 801e76c:	b510      	push	{r4, lr}
 801e76e:	4604      	mov	r4, r0
 801e770:	2001      	movs	r0, #1
 801e772:	4621      	mov	r1, r4
 801e774:	f7f2 fa90 	bl	8010c98 <nema_set_const_reg>
 801e778:	4b04      	ldr	r3, [pc, #16]	@ (801e78c <nema_set_const_color+0x20>)
 801e77a:	781b      	ldrb	r3, [r3, #0]
 801e77c:	b903      	cbnz	r3, 801e780 <nema_set_const_color+0x14>
 801e77e:	bd10      	pop	{r4, pc}
 801e780:	4620      	mov	r0, r4
 801e782:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e786:	f7f3 bd8d 	b.w	80122a4 <nema_set_rop_const_color>
 801e78a:	bf00      	nop
 801e78c:	20083361 	.word	0x20083361

0801e790 <calculate_aabb_per_shape>:
 801e790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e794:	ed2d 8b10 	vpush	{d8-d15}
 801e798:	2300      	movs	r3, #0
 801e79a:	eddf 7af0 	vldr	s15, [pc, #960]	@ 801eb5c <calculate_aabb_per_shape+0x3cc>
 801e79e:	ed9f 7af0 	vldr	s14, [pc, #960]	@ 801eb60 <calculate_aabb_per_shape+0x3d0>
 801e7a2:	f8d0 8000 	ldr.w	r8, [r0]
 801e7a6:	b091      	sub	sp, #68	@ 0x44
 801e7a8:	4604      	mov	r4, r0
 801e7aa:	edc0 7a04 	vstr	s15, [r0, #16]
 801e7ae:	edc0 7a05 	vstr	s15, [r0, #20]
 801e7b2:	ed80 7a06 	vstr	s14, [r0, #24]
 801e7b6:	ed80 7a07 	vstr	s14, [r0, #28]
 801e7ba:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801e7bc:	6283      	str	r3, [r0, #40]	@ 0x28
 801e7be:	6343      	str	r3, [r0, #52]	@ 0x34
 801e7c0:	6303      	str	r3, [r0, #48]	@ 0x30
 801e7c2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801e7c4:	6383      	str	r3, [r0, #56]	@ 0x38
 801e7c6:	6443      	str	r3, [r0, #68]	@ 0x44
 801e7c8:	6403      	str	r3, [r0, #64]	@ 0x40
 801e7ca:	6483      	str	r3, [r0, #72]	@ 0x48
 801e7cc:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801e7ce:	6503      	str	r3, [r0, #80]	@ 0x50
 801e7d0:	6543      	str	r3, [r0, #84]	@ 0x54
 801e7d2:	6583      	str	r3, [r0, #88]	@ 0x58
 801e7d4:	65c3      	str	r3, [r0, #92]	@ 0x5c
 801e7d6:	f1b8 0f00 	cmp.w	r8, #0
 801e7da:	f000 86c7 	beq.w	801f56c <calculate_aabb_per_shape+0xddc>
 801e7de:	6882      	ldr	r2, [r0, #8]
 801e7e0:	7811      	ldrb	r1, [r2, #0]
 801e7e2:	f021 0190 	bic.w	r1, r1, #144	@ 0x90
 801e7e6:	2901      	cmp	r1, #1
 801e7e8:	d003      	beq.n	801e7f2 <calculate_aabb_per_shape+0x62>
 801e7ea:	6103      	str	r3, [r0, #16]
 801e7ec:	6143      	str	r3, [r0, #20]
 801e7ee:	6183      	str	r3, [r0, #24]
 801e7f0:	61c3      	str	r3, [r0, #28]
 801e7f2:	ed9f dadc 	vldr	s26, [pc, #880]	@ 801eb64 <calculate_aabb_per_shape+0x3d4>
 801e7f6:	f04f 0c00 	mov.w	ip, #0
 801e7fa:	eeb0 6a4d 	vmov.f32	s12, s26
 801e7fe:	4667      	mov	r7, ip
 801e800:	46e1      	mov	r9, ip
 801e802:	4666      	mov	r6, ip
 801e804:	eef0 5a4d 	vmov.f32	s11, s26
 801e808:	eef0 4a4d 	vmov.f32	s9, s26
 801e80c:	eef0 6a4d 	vmov.f32	s13, s26
 801e810:	eeb0 ea4d 	vmov.f32	s28, s26
 801e814:	eeb0 9a4d 	vmov.f32	s18, s26
 801e818:	eef0 8a4d 	vmov.f32	s17, s26
 801e81c:	eeb0 fa4d 	vmov.f32	s30, s26
 801e820:	eddf ead1 	vldr	s29, [pc, #836]	@ 801eb68 <calculate_aabb_per_shape+0x3d8>
 801e824:	eddf dad1 	vldr	s27, [pc, #836]	@ 801eb6c <calculate_aabb_per_shape+0x3dc>
 801e828:	eddf fad1 	vldr	s31, [pc, #836]	@ 801eb70 <calculate_aabb_per_shape+0x3e0>
 801e82c:	eef0 ca4d 	vmov.f32	s25, s26
 801e830:	eeb0 5a4d 	vmov.f32	s10, s26
 801e834:	4640      	mov	r0, r8
 801e836:	f8cd c000 	str.w	ip, [sp]
 801e83a:	5d95      	ldrb	r5, [r2, r6]
 801e83c:	4432      	add	r2, r6
 801e83e:	f005 036f 	and.w	r3, r5, #111	@ 0x6f
 801e842:	2b01      	cmp	r3, #1
 801e844:	f005 0810 	and.w	r8, r5, #16
 801e848:	f000 853e 	beq.w	801f2c8 <calculate_aabb_per_shape+0xb38>
 801e84c:	f015 0f7f 	tst.w	r5, #127	@ 0x7f
 801e850:	f000 83bf 	beq.w	801efd2 <calculate_aabb_per_shape+0x842>
 801e854:	68e1      	ldr	r1, [r4, #12]
 801e856:	2f00      	cmp	r7, #0
 801e858:	eb01 0e87 	add.w	lr, r1, r7, lsl #2
 801e85c:	bf08      	it	eq
 801e85e:	f04f 0901 	moveq.w	r9, #1
 801e862:	2b06      	cmp	r3, #6
 801e864:	edde 7a00 	vldr	s15, [lr]
 801e868:	f107 0b01 	add.w	fp, r7, #1
 801e86c:	f000 8782 	beq.w	801f774 <calculate_aabb_per_shape+0xfe4>
 801e870:	2b05      	cmp	r3, #5
 801e872:	f001 8034 	beq.w	801f8de <calculate_aabb_per_shape+0x114e>
 801e876:	2b07      	cmp	r3, #7
 801e878:	f00c 0a6f 	and.w	sl, ip, #111	@ 0x6f
 801e87c:	f000 86ae 	beq.w	801f5dc <calculate_aabb_per_shape+0xe4c>
 801e880:	2b08      	cmp	r3, #8
 801e882:	f001 806c 	beq.w	801f95e <calculate_aabb_per_shape+0x11ce>
 801e886:	f005 0a0f 	and.w	sl, r5, #15
 801e88a:	f1ba 0f09 	cmp.w	sl, #9
 801e88e:	f001 8047 	beq.w	801f920 <calculate_aabb_per_shape+0x1190>
 801e892:	46ba      	mov	sl, r7
 801e894:	465f      	mov	r7, fp
 801e896:	2b04      	cmp	r3, #4
 801e898:	f041 8501 	bne.w	802029e <calculate_aabb_per_shape+0x1b0e>
 801e89c:	f1b8 0f00 	cmp.w	r8, #0
 801e8a0:	f001 8059 	beq.w	801f956 <calculate_aabb_per_shape+0x11c6>
 801e8a4:	ee77 7a89 	vadd.f32	s15, s15, s18
 801e8a8:	eeb0 7a68 	vmov.f32	s14, s17
 801e8ac:	462a      	mov	r2, r5
 801e8ae:	2b06      	cmp	r3, #6
 801e8b0:	f000 839b 	beq.w	801efea <calculate_aabb_per_shape+0x85a>
 801e8b4:	2b08      	cmp	r3, #8
 801e8b6:	f000 8398 	beq.w	801efea <calculate_aabb_per_shape+0x85a>
 801e8ba:	2b01      	cmp	r3, #1
 801e8bc:	f000 847f 	beq.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801e8c0:	2b02      	cmp	r3, #2
 801e8c2:	f000 847c 	beq.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801e8c6:	2b04      	cmp	r3, #4
 801e8c8:	f000 8479 	beq.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801e8cc:	2b03      	cmp	r3, #3
 801e8ce:	f000 8476 	beq.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801e8d2:	f002 036d 	and.w	r3, r2, #109	@ 0x6d
 801e8d6:	2b05      	cmp	r3, #5
 801e8d8:	f000 8690 	beq.w	801f5fc <calculate_aabb_per_shape+0xe6c>
 801e8dc:	f002 020f 	and.w	r2, r2, #15
 801e8e0:	2a09      	cmp	r2, #9
 801e8e2:	f040 8459 	bne.w	801f198 <calculate_aabb_per_shape+0xa08>
 801e8e6:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e8ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8ee:	f100 845e 	bmi.w	801f1ae <calculate_aabb_per_shape+0xa1e>
 801e8f2:	ed9f 3aa0 	vldr	s6, [pc, #640]	@ 801eb74 <calculate_aabb_per_shape+0x3e4>
 801e8f6:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801e8fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8fe:	f240 845e 	bls.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801e902:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e90a:	f101 8078 	bmi.w	801f9fe <calculate_aabb_per_shape+0x126e>
 801e90e:	ed9f 3a99 	vldr	s6, [pc, #612]	@ 801eb74 <calculate_aabb_per_shape+0x3e4>
 801e912:	eef4 6ac3 	vcmpe.f32	s13, s6
 801e916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e91a:	f240 8450 	bls.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801e91e:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e926:	f101 80bb 	bmi.w	801faa0 <calculate_aabb_per_shape+0x1310>
 801e92a:	eeb0 8a45 	vmov.f32	s16, s10
 801e92e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e936:	f101 8071 	bmi.w	801fa1c <calculate_aabb_per_shape+0x128c>
 801e93a:	eeb0 9a66 	vmov.f32	s18, s13
 801e93e:	edcd 7a03 	vstr	s15, [sp, #12]
 801e942:	eddf 7a8d 	vldr	s15, [pc, #564]	@ 801eb78 <calculate_aabb_per_shape+0x3e8>
 801e946:	ee24 aaa7 	vmul.f32	s20, s9, s15
 801e94a:	eeb0 0a4a 	vmov.f32	s0, s20
 801e94e:	9009      	str	r0, [sp, #36]	@ 0x24
 801e950:	edcd 6a08 	vstr	s13, [sp, #32]
 801e954:	ed8d 6a04 	vstr	s12, [sp, #16]
 801e958:	edcd 5a07 	vstr	s11, [sp, #28]
 801e95c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801e960:	ed8d 7a02 	vstr	s14, [sp, #8]
 801e964:	edcd 4a05 	vstr	s9, [sp, #20]
 801e968:	f012 fd34 	bl	80313d4 <cosf>
 801e96c:	eef0 8a40 	vmov.f32	s17, s0
 801e970:	ed8d 0a01 	vstr	s0, [sp, #4]
 801e974:	eeb0 0a4a 	vmov.f32	s0, s20
 801e978:	f012 fd78 	bl	803146c <sinf>
 801e97c:	eef0 6a68 	vmov.f32	s13, s17
 801e980:	eeb0 ca40 	vmov.f32	s24, s0
 801e984:	ed9d 6a04 	vldr	s12, [sp, #16]
 801e988:	ed9d 7a02 	vldr	s14, [sp, #8]
 801e98c:	eddd 7a03 	vldr	s15, [sp, #12]
 801e990:	ee6d 9a28 	vmul.f32	s19, s26, s17
 801e994:	ee26 3aa7 	vmul.f32	s6, s13, s15
 801e998:	ee60 1a06 	vmul.f32	s3, s0, s12
 801e99c:	ee68 8a87 	vmul.f32	s17, s17, s14
 801e9a0:	ee26 1a86 	vmul.f32	s2, s13, s12
 801e9a4:	ee27 2a4c 	vnmul.f32	s4, s14, s24
 801e9a8:	ee20 0a27 	vmul.f32	s0, s0, s15
 801e9ac:	ee6d 0a4c 	vnmul.f32	s1, s26, s24
 801e9b0:	ee32 5a03 	vadd.f32	s10, s4, s6
 801e9b4:	ee78 6a80 	vadd.f32	s13, s17, s0
 801e9b8:	ee70 5a81 	vadd.f32	s11, s1, s2
 801e9bc:	ee79 1aa1 	vadd.f32	s3, s19, s3
 801e9c0:	eec6 ba88 	vdiv.f32	s23, s13, s16
 801e9c4:	eec5 2a89 	vdiv.f32	s5, s11, s18
 801e9c8:	ee85 ba09 	vdiv.f32	s22, s10, s18
 801e9cc:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801e9d0:	ee32 4acb 	vsub.f32	s8, s5, s22
 801e9d4:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801e9d8:	ee24 3a04 	vmul.f32	s6, s8, s8
 801e9dc:	ee2a 2aaa 	vmul.f32	s4, s21, s21
 801e9e0:	ee32 3a03 	vadd.f32	s6, s4, s6
 801e9e4:	eeb5 3a40 	vcmp.f32	s6, #0.0
 801e9e8:	eeb6 2a00 	vmov.f32	s4, #96	@ 0x3f000000  0.5
 801e9ec:	ee73 8aab 	vadd.f32	s17, s7, s23
 801e9f0:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801e9f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e9f8:	edcd 6a03 	vstr	s13, [sp, #12]
 801e9fc:	edcd 5a02 	vstr	s11, [sp, #8]
 801ea00:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ea04:	ee68 8a82 	vmul.f32	s17, s17, s4
 801ea08:	ee69 9a82 	vmul.f32	s19, s19, s4
 801ea0c:	eddd 4a05 	vldr	s9, [sp, #20]
 801ea10:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ea14:	eddd 5a07 	vldr	s11, [sp, #28]
 801ea18:	eddd 6a08 	vldr	s13, [sp, #32]
 801ea1c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801ea1e:	f000 83bb 	beq.w	801f198 <calculate_aabb_per_shape+0xa08>
 801ea22:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801ea26:	eeb5 1a00 	vmov.f32	s2, #80	@ 0x3e800000  0.250
 801ea2a:	ee80 2a83 	vdiv.f32	s4, s1, s6
 801ea2e:	ee32 0a41 	vsub.f32	s0, s4, s2
 801ea32:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ea36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea3a:	f101 8159 	bmi.w	801fcf0 <calculate_aabb_per_shape+0x1560>
 801ea3e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ea42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea46:	eef1 1ac0 	vsqrt.f32	s3, s0
 801ea4a:	f101 83f8 	bmi.w	802023e <calculate_aabb_per_shape+0x1aae>
 801ea4e:	ee21 2aaa 	vmul.f32	s4, s3, s21
 801ea52:	ee61 1a84 	vmul.f32	s3, s3, s8
 801ea56:	ee79 aac2 	vsub.f32	s21, s19, s4
 801ea5a:	ee31 4aa8 	vadd.f32	s8, s3, s17
 801ea5e:	ee32 0aea 	vsub.f32	s0, s5, s21
 801ea62:	ee73 0ac4 	vsub.f32	s1, s7, s8
 801ea66:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ea6a:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ea6e:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ea72:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ea76:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ea7a:	edcd 7a07 	vstr	s15, [sp, #28]
 801ea7e:	ed8d 7a06 	vstr	s14, [sp, #24]
 801ea82:	ed8d 2a05 	vstr	s4, [sp, #20]
 801ea86:	edcd 1a04 	vstr	s3, [sp, #16]
 801ea8a:	ed8d 4a02 	vstr	s8, [sp, #8]
 801ea8e:	f012 fb8d 	bl	80311ac <atan2f>
 801ea92:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ea96:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ea9a:	ee7b 0ac4 	vsub.f32	s1, s23, s8
 801ea9e:	ee3b 0a6a 	vsub.f32	s0, s22, s21
 801eaa2:	f012 fb83 	bl	80311ac <atan2f>
 801eaa6:	eddf 7a35 	vldr	s15, [pc, #212]	@ 801eb7c <calculate_aabb_per_shape+0x3ec>
 801eaaa:	eddd 3a03 	vldr	s7, [sp, #12]
 801eaae:	ee20 3a27 	vmul.f32	s6, s0, s15
 801eab2:	ee63 3aa7 	vmul.f32	s7, s7, s15
 801eab6:	ee33 3a63 	vsub.f32	s6, s6, s7
 801eaba:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801eabe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eac2:	bf44      	itt	mi
 801eac4:	ed9f 1a2e 	vldrmi	s2, [pc, #184]	@ 801eb80 <calculate_aabb_per_shape+0x3f0>
 801eac8:	ee33 3a01 	vaddmi.f32	s6, s6, s2
 801eacc:	ed9f 1a2d 	vldr	s2, [pc, #180]	@ 801eb84 <calculate_aabb_per_shape+0x3f4>
 801ead0:	eeb4 3ac1 	vcmpe.f32	s6, s2
 801ead4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ead8:	9b00      	ldr	r3, [sp, #0]
 801eada:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eade:	f003 0840 	and.w	r8, r3, #64	@ 0x40
 801eae2:	f3c3 1280 	ubfx	r2, r3, #6, #1
 801eae6:	eddd 1a04 	vldr	s3, [sp, #16]
 801eaea:	ed9d 2a05 	vldr	s4, [sp, #20]
 801eaee:	ed9d 7a06 	vldr	s14, [sp, #24]
 801eaf2:	eddd 7a07 	vldr	s15, [sp, #28]
 801eaf6:	ed9d 5a08 	vldr	s10, [sp, #32]
 801eafa:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801eafe:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801eb02:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801eb06:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801eb0a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 801eb0e:	f141 80e5 	bpl.w	801fcdc <calculate_aabb_per_shape+0x154c>
 801eb12:	429a      	cmp	r2, r3
 801eb14:	f001 8346 	beq.w	80201a4 <calculate_aabb_per_shape+0x1a14>
 801eb18:	ee24 4a08 	vmul.f32	s8, s8, s16
 801eb1c:	ee6a aa89 	vmul.f32	s21, s21, s18
 801eb20:	eddd 3a01 	vldr	s7, [sp, #4]
 801eb24:	eef5 4a40 	vcmp.f32	s9, #0.0
 801eb28:	ee63 9a84 	vmul.f32	s19, s7, s8
 801eb2c:	ee2c 3a2a 	vmul.f32	s6, s24, s21
 801eb30:	ee2c 4a04 	vmul.f32	s8, s24, s8
 801eb34:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801eb38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb3c:	ee79 9ac3 	vsub.f32	s19, s19, s6
 801eb40:	ee74 8a2a 	vadd.f32	s17, s8, s21
 801eb44:	f000 87b0 	beq.w	801faa8 <calculate_aabb_per_shape+0x1318>
 801eb48:	ed9f 3a0e 	vldr	s6, [pc, #56]	@ 801eb84 <calculate_aabb_per_shape+0x3f4>
 801eb4c:	eef4 4a43 	vcmp.f32	s9, s6
 801eb50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb54:	f000 87a8 	beq.w	801faa8 <calculate_aabb_per_shape+0x1318>
 801eb58:	e01c      	b.n	801eb94 <calculate_aabb_per_shape+0x404>
 801eb5a:	bf00      	nop
 801eb5c:	477fff00 	.word	0x477fff00
 801eb60:	c77fff00 	.word	0xc77fff00
 801eb64:	00000000 	.word	0x00000000
 801eb68:	b3d6bf95 	.word	0xb3d6bf95
 801eb6c:	33d6bf95 	.word	0x33d6bf95
 801eb70:	3f7ffffe 	.word	0x3f7ffffe
 801eb74:	3727c5ac 	.word	0x3727c5ac
 801eb78:	3c8efa35 	.word	0x3c8efa35
 801eb7c:	42652ee1 	.word	0x42652ee1
 801eb80:	43b40000 	.word	0x43b40000
 801eb84:	43340000 	.word	0x43340000
 801eb88:	42b40000 	.word	0x42b40000
 801eb8c:	43870000 	.word	0x43870000
 801eb90:	40c90fdb 	.word	0x40c90fdb
 801eb94:	ed1f 3a04 	vldr	s6, [pc, #-16]	@ 801eb88 <calculate_aabb_per_shape+0x3f8>
 801eb98:	eef4 4a43 	vcmp.f32	s9, s6
 801eb9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eba0:	d007      	beq.n	801ebb2 <calculate_aabb_per_shape+0x422>
 801eba2:	ed1f 3a06 	vldr	s6, [pc, #-24]	@ 801eb8c <calculate_aabb_per_shape+0x3fc>
 801eba6:	eef4 4a43 	vcmp.f32	s9, s6
 801ebaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebae:	f041 80d3 	bne.w	801fd58 <calculate_aabb_per_shape+0x15c8>
 801ebb2:	ee29 aa09 	vmul.f32	s20, s18, s18
 801ebb6:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801ebba:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801ebbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebc2:	ee79 bac9 	vsub.f32	s23, s19, s18
 801ebc6:	eef1 aaca 	vsqrt.f32	s21, s20
 801ebca:	eeb1 ba49 	vneg.f32	s22, s18
 801ebce:	edcd 6a08 	vstr	s13, [sp, #32]
 801ebd2:	edcd 4a07 	vstr	s9, [sp, #28]
 801ebd6:	ed8d 6a06 	vstr	s12, [sp, #24]
 801ebda:	edcd 5a05 	vstr	s11, [sp, #20]
 801ebde:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ebe2:	edcd 7a03 	vstr	s15, [sp, #12]
 801ebe6:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ebea:	f101 866c 	bmi.w	80208c6 <calculate_aabb_per_shape+0x2136>
 801ebee:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801ebf2:	f012 faaf 	bl	8031154 <acosf>
 801ebf6:	ed5f 0a1a 	vldr	s1, [pc, #-104]	@ 801eb90 <calculate_aabb_per_shape+0x400>
 801ebfa:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801ebfe:	f012 fad7 	bl	80311b0 <fmodf>
 801ec02:	ee39 aa89 	vadd.f32	s20, s19, s18
 801ec06:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ec0a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ec0e:	eddd 7a03 	vldr	s15, [sp, #12]
 801ec12:	ed9d 5a04 	vldr	s10, [sp, #16]
 801ec16:	eddd 5a05 	vldr	s11, [sp, #20]
 801ec1a:	ed9d 6a06 	vldr	s12, [sp, #24]
 801ec1e:	eddd 4a07 	vldr	s9, [sp, #28]
 801ec22:	eddd 6a08 	vldr	s13, [sp, #32]
 801ec26:	ee89 0a2a 	vdiv.f32	s0, s18, s21
 801ec2a:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801ec2e:	edcd 4a08 	vstr	s9, [sp, #32]
 801ec32:	ed8d 6a07 	vstr	s12, [sp, #28]
 801ec36:	edcd 5a06 	vstr	s11, [sp, #24]
 801ec3a:	ed8d 5a05 	vstr	s10, [sp, #20]
 801ec3e:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec42:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ec46:	ed1f ca2e 	vldr	s24, [pc, #-184]	@ 801eb90 <calculate_aabb_per_shape+0x400>
 801ec4a:	f012 fa83 	bl	8031154 <acosf>
 801ec4e:	eef0 0a4c 	vmov.f32	s1, s24
 801ec52:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801ec56:	f012 faab 	bl	80311b0 <fmodf>
 801ec5a:	ee28 2a08 	vmul.f32	s4, s16, s16
 801ec5e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ec62:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801ec66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec6a:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801ec6e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ec72:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801ec76:	bf54      	ite	pl
 801ec78:	eef0 aa61 	vmovpl.f32	s21, s3
 801ec7c:	eef0 aa43 	vmovmi.f32	s21, s6
 801ec80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec84:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ec88:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801ec8c:	ee38 bac8 	vsub.f32	s22, s17, s16
 801ec90:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ec94:	eddd 7a03 	vldr	s15, [sp, #12]
 801ec98:	ed9d 5a05 	vldr	s10, [sp, #20]
 801ec9c:	eddd 5a06 	vldr	s11, [sp, #24]
 801eca0:	ed9d 6a07 	vldr	s12, [sp, #28]
 801eca4:	eddd 4a08 	vldr	s9, [sp, #32]
 801eca8:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801ecac:	f101 859e 	bmi.w	80207ec <calculate_aabb_per_shape+0x205c>
 801ecb0:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 801ecb4:	eeb0 0a49 	vmov.f32	s0, s18
 801ecb8:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ecbc:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ecc0:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ecc4:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ecc8:	ed8d 5a08 	vstr	s10, [sp, #32]
 801eccc:	edcd 1a07 	vstr	s3, [sp, #28]
 801ecd0:	ed8d 3a06 	vstr	s6, [sp, #24]
 801ecd4:	edcd 7a05 	vstr	s15, [sp, #20]
 801ecd8:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ecdc:	f012 fa3a 	bl	8031154 <acosf>
 801ece0:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801ece4:	eef0 0a4c 	vmov.f32	s1, s24
 801ece8:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801ecec:	f012 fa60 	bl	80311b0 <fmodf>
 801ecf0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ecf4:	ed9d 3a06 	vldr	s6, [sp, #24]
 801ecf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecfc:	eddd 1a07 	vldr	s3, [sp, #28]
 801ed00:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ed04:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ed08:	eddd 7a05 	vldr	s15, [sp, #20]
 801ed0c:	ed9d 5a08 	vldr	s10, [sp, #32]
 801ed10:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801ed14:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801ed18:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801ed1c:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801ed20:	ee78 aa88 	vadd.f32	s21, s17, s16
 801ed24:	fe33 8a21 	vselgt.f32	s16, s6, s3
 801ed28:	eeb0 0a49 	vmov.f32	s0, s18
 801ed2c:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ed30:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ed34:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ed38:	edcd 5a07 	vstr	s11, [sp, #28]
 801ed3c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ed40:	edcd 7a05 	vstr	s15, [sp, #20]
 801ed44:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ed48:	f012 fa04 	bl	8031154 <acosf>
 801ed4c:	ee20 0a08 	vmul.f32	s0, s0, s16
 801ed50:	ed5f 0a71 	vldr	s1, [pc, #-452]	@ 801eb90 <calculate_aabb_per_shape+0x400>
 801ed54:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ed58:	f012 fa2a 	bl	80311b0 <fmodf>
 801ed5c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ed60:	eeb0 8a40 	vmov.f32	s16, s0
 801ed64:	eddd 7a05 	vldr	s15, [sp, #20]
 801ed68:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ed6c:	eddd 5a07 	vldr	s11, [sp, #28]
 801ed70:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ed74:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ed78:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ed7c:	ee36 3a68 	vsub.f32	s6, s12, s17
 801ed80:	ee3d ca69 	vsub.f32	s24, s26, s19
 801ed84:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ed88:	ee2c 2a0c 	vmul.f32	s4, s24, s24
 801ed8c:	ee23 3a03 	vmul.f32	s6, s6, s6
 801ed90:	ee32 0a03 	vadd.f32	s0, s4, s6
 801ed94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed98:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 801ed9c:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 801eda0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801eda4:	fe39 9a02 	vselgt.f32	s18, s18, s4
 801eda8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801edac:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801edb0:	f101 845c 	bmi.w	802066c <calculate_aabb_per_shape+0x1edc>
 801edb4:	ee8c 0a02 	vdiv.f32	s0, s24, s4
 801edb8:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801edbc:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801edc0:	ed8d 6a08 	vstr	s12, [sp, #32]
 801edc4:	edcd 5a07 	vstr	s11, [sp, #28]
 801edc8:	ed8d 5a06 	vstr	s10, [sp, #24]
 801edcc:	edcd 7a05 	vstr	s15, [sp, #20]
 801edd0:	ed8d 7a01 	vstr	s14, [sp, #4]
 801edd4:	f012 f9be 	bl	8031154 <acosf>
 801edd8:	ed5f 0a93 	vldr	s1, [pc, #-588]	@ 801eb90 <calculate_aabb_per_shape+0x400>
 801eddc:	ee20 0a09 	vmul.f32	s0, s0, s18
 801ede0:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ede4:	f012 f9e4 	bl	80311b0 <fmodf>
 801ede8:	ed9d 7a01 	vldr	s14, [sp, #4]
 801edec:	eddd 7a05 	vldr	s15, [sp, #20]
 801edf0:	ee77 9a69 	vsub.f32	s19, s14, s19
 801edf4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801edf8:	eeb0 9a40 	vmov.f32	s18, s0
 801edfc:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801ee00:	ee29 0aa9 	vmul.f32	s0, s19, s19
 801ee04:	ee68 8aa8 	vmul.f32	s17, s17, s17
 801ee08:	ee30 0a28 	vadd.f32	s0, s0, s17
 801ee0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee10:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 801ee14:	eebf 3a00 	vmov.f32	s6, #240	@ 0xbf800000 -1.0
 801ee18:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ee1c:	fe72 8a03 	vselgt.f32	s17, s4, s6
 801ee20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee24:	eeb1 cac0 	vsqrt.f32	s24, s0
 801ee28:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ee2c:	eddd 5a07 	vldr	s11, [sp, #28]
 801ee30:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ee34:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ee38:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ee3c:	f101 8404 	bmi.w	8020648 <calculate_aabb_per_shape+0x1eb8>
 801ee40:	ee89 0a8c 	vdiv.f32	s0, s19, s24
 801ee44:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ee48:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ee4c:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ee50:	edcd 5a07 	vstr	s11, [sp, #28]
 801ee54:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ee58:	edcd 7a05 	vstr	s15, [sp, #20]
 801ee5c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ee60:	f012 f978 	bl	8031154 <acosf>
 801ee64:	ed5f 0ab6 	vldr	s1, [pc, #-728]	@ 801eb90 <calculate_aabb_per_shape+0x400>
 801ee68:	ee20 0a28 	vmul.f32	s0, s0, s17
 801ee6c:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ee70:	f012 f99e 	bl	80311b0 <fmodf>
 801ee74:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ee78:	eddd 7a05 	vldr	s15, [sp, #20]
 801ee7c:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ee80:	eddd 5a07 	vldr	s11, [sp, #28]
 801ee84:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ee88:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ee8c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ee90:	f1b8 0f00 	cmp.w	r8, #0
 801ee94:	d105      	bne.n	801eea2 <calculate_aabb_per_shape+0x712>
 801ee96:	eeb0 3a49 	vmov.f32	s6, s18
 801ee9a:	eeb0 9a40 	vmov.f32	s18, s0
 801ee9e:	eeb0 0a43 	vmov.f32	s0, s6
 801eea2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801eea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eeaa:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eeae:	f340 86cc 	ble.w	801fc4a <calculate_aabb_per_shape+0x14ba>
 801eeb2:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801eeb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eeba:	dc0d      	bgt.n	801eed8 <calculate_aabb_per_shape+0x748>
 801eebc:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801eec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eec4:	d408      	bmi.n	801eed8 <calculate_aabb_per_shape+0x748>
 801eec6:	eeb4 dac7 	vcmpe.f32	s26, s14
 801eeca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eece:	bf54      	ite	pl
 801eed0:	eef0 ba47 	vmovpl.f32	s23, s14
 801eed4:	eef0 ba4d 	vmovmi.f32	s23, s26
 801eed8:	ed9d 4a04 	vldr	s8, [sp, #16]
 801eedc:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801eee0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eee4:	dc0a      	bgt.n	801eefc <calculate_aabb_per_shape+0x76c>
 801eee6:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801eeea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eeee:	d405      	bmi.n	801eefc <calculate_aabb_per_shape+0x76c>
 801eef0:	eeb4 dac7 	vcmpe.f32	s26, s14
 801eef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eef8:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801eefc:	ed9d 4a03 	vldr	s8, [sp, #12]
 801ef00:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ef04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef08:	dc0d      	bgt.n	801ef26 <calculate_aabb_per_shape+0x796>
 801ef0a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef12:	d408      	bmi.n	801ef26 <calculate_aabb_per_shape+0x796>
 801ef14:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef1c:	bf54      	ite	pl
 801ef1e:	eeb0 ba67 	vmovpl.f32	s22, s15
 801ef22:	eeb0 ba46 	vmovmi.f32	s22, s12
 801ef26:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801ef2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef2e:	dc0a      	bgt.n	801ef46 <calculate_aabb_per_shape+0x7b6>
 801ef30:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801ef34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef38:	d405      	bmi.n	801ef46 <calculate_aabb_per_shape+0x7b6>
 801ef3a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef42:	fe76 aa27 	vselgt.f32	s21, s12, s15
 801ef46:	ed94 1a04 	vldr	s2, [r4, #16]
 801ef4a:	edd4 1a05 	vldr	s3, [r4, #20]
 801ef4e:	eeb4 1a6b 	vcmp.f32	s2, s23
 801ef52:	ed94 2a06 	vldr	s4, [r4, #24]
 801ef56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef5a:	eef4 1a4b 	vcmp.f32	s3, s22
 801ef5e:	fe3b 1a81 	vselgt.f32	s2, s23, s2
 801ef62:	ed94 3a07 	vldr	s6, [r4, #28]
 801ef66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef6a:	eeb4 2a6b 	vcmp.f32	s4, s23
 801ef6e:	fe7b 1a21 	vselgt.f32	s3, s22, s3
 801ef72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef76:	eeb4 3a4b 	vcmp.f32	s6, s22
 801ef7a:	bf48      	it	mi
 801ef7c:	eeb0 2a6b 	vmovmi.f32	s4, s23
 801ef80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef84:	eeb4 1a4a 	vcmp.f32	s2, s20
 801ef88:	bf48      	it	mi
 801ef8a:	eeb0 3a4b 	vmovmi.f32	s6, s22
 801ef8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef92:	eef4 aa61 	vcmp.f32	s21, s3
 801ef96:	fe3a 1a01 	vselgt.f32	s2, s20, s2
 801ef9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef9e:	eeb4 2a4a 	vcmp.f32	s4, s20
 801efa2:	bf48      	it	mi
 801efa4:	eef0 1a6a 	vmovmi.f32	s3, s21
 801efa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efac:	eef4 aa43 	vcmp.f32	s21, s6
 801efb0:	bf48      	it	mi
 801efb2:	eeb0 2a4a 	vmovmi.f32	s4, s20
 801efb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efba:	fe3a 3a83 	vselgt.f32	s6, s21, s6
 801efbe:	ed84 1a04 	vstr	s2, [r4, #16]
 801efc2:	edc4 1a05 	vstr	s3, [r4, #20]
 801efc6:	ed84 2a06 	vstr	s4, [r4, #24]
 801efca:	ed84 3a07 	vstr	s6, [r4, #28]
 801efce:	6820      	ldr	r0, [r4, #0]
 801efd0:	e0e2      	b.n	801f198 <calculate_aabb_per_shape+0xa08>
 801efd2:	f1b9 0f01 	cmp.w	r9, #1
 801efd6:	bf0d      	iteet	eq
 801efd8:	eddf 7ac7 	vldreq	s15, [pc, #796]	@ 801f2f8 <calculate_aabb_per_shape+0xb68>
 801efdc:	eef0 7a6c 	vmovne.f32	s15, s25
 801efe0:	eeb0 7a4e 	vmovne.f32	s14, s28
 801efe4:	eeb0 7a67 	vmoveq.f32	s14, s15
 801efe8:	e460      	b.n	801e8ac <calculate_aabb_per_shape+0x11c>
 801efea:	edd4 9a04 	vldr	s19, [r4, #16]
 801efee:	edd4 aa05 	vldr	s21, [r4, #20]
 801eff2:	eef4 9ac7 	vcmpe.f32	s19, s14
 801eff6:	ed94 aa06 	vldr	s20, [r4, #24]
 801effa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801effe:	eef4 aae7 	vcmpe.f32	s21, s15
 801f002:	bf58      	it	pl
 801f004:	eef0 9a47 	vmovpl.f32	s19, s14
 801f008:	ed94 ba07 	vldr	s22, [r4, #28]
 801f00c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f010:	eeb4 aac7 	vcmpe.f32	s20, s14
 801f014:	bf58      	it	pl
 801f016:	eef0 aa67 	vmovpl.f32	s21, s15
 801f01a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f01e:	eeb4 bae7 	vcmpe.f32	s22, s15
 801f022:	fe3a aa07 	vselgt.f32	s20, s20, s14
 801f026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f02a:	eef4 9ac5 	vcmpe.f32	s19, s10
 801f02e:	fe3b ba27 	vselgt.f32	s22, s22, s15
 801f032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f036:	ed8d fa0e 	vstr	s30, [sp, #56]	@ 0x38
 801f03a:	ed8d fa0f 	vstr	s30, [sp, #60]	@ 0x3c
 801f03e:	edc4 9a04 	vstr	s19, [r4, #16]
 801f042:	edc4 aa05 	vstr	s21, [r4, #20]
 801f046:	ed84 aa06 	vstr	s20, [r4, #24]
 801f04a:	ed84 ba07 	vstr	s22, [r4, #28]
 801f04e:	d80a      	bhi.n	801f066 <calculate_aabb_per_shape+0x8d6>
 801f050:	eeb4 aac5 	vcmpe.f32	s20, s10
 801f054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f058:	db05      	blt.n	801f066 <calculate_aabb_per_shape+0x8d6>
 801f05a:	eef4 aae6 	vcmpe.f32	s21, s13
 801f05e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f062:	f240 829c 	bls.w	801f59e <calculate_aabb_per_shape+0xe0e>
 801f066:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f06a:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f06e:	ee25 2a03 	vmul.f32	s4, s10, s6
 801f072:	ee28 8a88 	vmul.f32	s16, s17, s16
 801f076:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f07a:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f07e:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f082:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f086:	ee67 1a02 	vmul.f32	s3, s14, s4
 801f08a:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f08e:	eef2 ba08 	vmov.f32	s23, #40	@ 0x41400000  12.0
 801f092:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f096:	ee25 1a2b 	vmul.f32	s2, s10, s23
 801f09a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f09e:	ee68 ba83 	vmul.f32	s23, s17, s6
 801f0a2:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f0a6:	ee7b bac1 	vsub.f32	s23, s23, s2
 801f0aa:	ee25 3a02 	vmul.f32	s6, s10, s4
 801f0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0b2:	ee28 2a82 	vmul.f32	s4, s17, s4
 801f0b6:	ee7b baa1 	vadd.f32	s23, s23, s3
 801f0ba:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f0be:	f100 8235 	bmi.w	801f52c <calculate_aabb_per_shape+0xd9c>
 801f0c2:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f0c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0ca:	bf4c      	ite	mi
 801f0cc:	2301      	movmi	r3, #1
 801f0ce:	2300      	movpl	r3, #0
 801f0d0:	2b00      	cmp	r3, #0
 801f0d2:	f040 8117 	bne.w	801f304 <calculate_aabb_per_shape+0xb74>
 801f0d6:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f0da:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f0de:	ee2b 0aab 	vmul.f32	s0, s23, s23
 801f0e2:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f0e6:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f0ea:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f0ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0f2:	f300 836a 	bgt.w	801f7ca <calculate_aabb_per_shape+0x103a>
 801f0f6:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f0fa:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f0fe:	ee26 2a83 	vmul.f32	s4, s13, s6
 801f102:	ee29 8a08 	vmul.f32	s16, s18, s16
 801f106:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f10a:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f10e:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f112:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f116:	ee67 1a82 	vmul.f32	s3, s15, s4
 801f11a:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f11e:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f122:	eeb2 1a08 	vmov.f32	s2, #40	@ 0x41400000  12.0
 801f126:	ee69 8a03 	vmul.f32	s17, s18, s6
 801f12a:	ee26 1a81 	vmul.f32	s2, s13, s2
 801f12e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f132:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f136:	ee78 8ac1 	vsub.f32	s17, s17, s2
 801f13a:	ee26 3a82 	vmul.f32	s6, s13, s4
 801f13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f142:	ee29 2a02 	vmul.f32	s4, s18, s4
 801f146:	ee78 8aa1 	vadd.f32	s17, s17, s3
 801f14a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f14e:	f100 81f5 	bmi.w	801f53c <calculate_aabb_per_shape+0xdac>
 801f152:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f15a:	bf4c      	ite	mi
 801f15c:	2301      	movmi	r3, #1
 801f15e:	2300      	movpl	r3, #0
 801f160:	2b00      	cmp	r3, #0
 801f162:	f040 815a 	bne.w	801f41a <calculate_aabb_per_shape+0xc8a>
 801f166:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f16a:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f16e:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801f172:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f176:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f17a:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f17e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f182:	f300 8367 	bgt.w	801f854 <calculate_aabb_per_shape+0x10c4>
 801f186:	edc4 9a04 	vstr	s19, [r4, #16]
 801f18a:	edc4 aa05 	vstr	s21, [r4, #20]
 801f18e:	ed84 aa06 	vstr	s20, [r4, #24]
 801f192:	ed84 ba07 	vstr	s22, [r4, #28]
 801f196:	6820      	ldr	r0, [r4, #0]
 801f198:	3601      	adds	r6, #1
 801f19a:	42b0      	cmp	r0, r6
 801f19c:	d93c      	bls.n	801f218 <calculate_aabb_per_shape+0xa88>
 801f19e:	46ac      	mov	ip, r5
 801f1a0:	eeb0 9a67 	vmov.f32	s18, s15
 801f1a4:	eef0 8a47 	vmov.f32	s17, s14
 801f1a8:	68a2      	ldr	r2, [r4, #8]
 801f1aa:	f7ff bb46 	b.w	801e83a <calculate_aabb_per_shape+0xaa>
 801f1ae:	ed9f 3a53 	vldr	s6, [pc, #332]	@ 801f2fc <calculate_aabb_per_shape+0xb6c>
 801f1b2:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801f1b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1ba:	f6ff aba2 	blt.w	801e902 <calculate_aabb_per_shape+0x172>
 801f1be:	ed94 1a04 	vldr	s2, [r4, #16]
 801f1c2:	edd4 1a05 	vldr	s3, [r4, #20]
 801f1c6:	eeb4 1a47 	vcmp.f32	s2, s14
 801f1ca:	ed94 2a06 	vldr	s4, [r4, #24]
 801f1ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1d2:	eef4 1a67 	vcmp.f32	s3, s15
 801f1d6:	ed94 3a07 	vldr	s6, [r4, #28]
 801f1da:	fe37 1a01 	vselgt.f32	s2, s14, s2
 801f1de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1e2:	eeb4 2a47 	vcmp.f32	s4, s14
 801f1e6:	fe77 1aa1 	vselgt.f32	s3, s15, s3
 801f1ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1ee:	eeb4 3a67 	vcmp.f32	s6, s15
 801f1f2:	bf48      	it	mi
 801f1f4:	eeb0 2a47 	vmovmi.f32	s4, s14
 801f1f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1fc:	bf48      	it	mi
 801f1fe:	eeb0 3a67 	vmovmi.f32	s6, s15
 801f202:	3601      	adds	r6, #1
 801f204:	42b0      	cmp	r0, r6
 801f206:	ed84 1a04 	vstr	s2, [r4, #16]
 801f20a:	edc4 1a05 	vstr	s3, [r4, #20]
 801f20e:	ed84 2a06 	vstr	s4, [r4, #24]
 801f212:	ed84 3a07 	vstr	s6, [r4, #28]
 801f216:	d8c2      	bhi.n	801f19e <calculate_aabb_per_shape+0xa0e>
 801f218:	ed94 6a04 	vldr	s12, [r4, #16]
 801f21c:	eefd 6ac6 	vcvt.s32.f32	s13, s12
 801f220:	ed94 7a05 	vldr	s14, [r4, #20]
 801f224:	eef8 5ae6 	vcvt.f32.s32	s11, s13
 801f228:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801f22c:	ed94 5a06 	vldr	s10, [r4, #24]
 801f230:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801f234:	eef8 4ae7 	vcvt.f32.s32	s9, s15
 801f238:	eebd 6ac5 	vcvt.s32.f32	s12, s10
 801f23c:	edd4 5a07 	vldr	s11, [r4, #28]
 801f240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f244:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801f248:	eeb8 4ac6 	vcvt.f32.s32	s8, s12
 801f24c:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 801f250:	bf4c      	ite	mi
 801f252:	2001      	movmi	r0, #1
 801f254:	2000      	movpl	r0, #0
 801f256:	ee16 5a90 	vmov	r5, s13
 801f25a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f25e:	eef8 4ac7 	vcvt.f32.s32	s9, s14
 801f262:	eeb4 5ac4 	vcmpe.f32	s10, s8
 801f266:	eba5 0000 	sub.w	r0, r5, r0
 801f26a:	bf4c      	ite	mi
 801f26c:	2101      	movmi	r1, #1
 801f26e:	2100      	movpl	r1, #0
 801f270:	ee06 0a90 	vmov	s13, r0
 801f274:	ee17 0a90 	vmov	r0, s15
 801f278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f27c:	eef4 5ae4 	vcmpe.f32	s11, s9
 801f280:	eba0 0101 	sub.w	r1, r0, r1
 801f284:	bfcc      	ite	gt
 801f286:	2201      	movgt	r2, #1
 801f288:	2200      	movle	r2, #0
 801f28a:	ee07 1a90 	vmov	s15, r1
 801f28e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f292:	ee16 1a10 	vmov	r1, s12
 801f296:	bfc8      	it	gt
 801f298:	2301      	movgt	r3, #1
 801f29a:	440a      	add	r2, r1
 801f29c:	bfd8      	it	le
 801f29e:	2300      	movle	r3, #0
 801f2a0:	ee17 1a10 	vmov	r1, s14
 801f2a4:	4419      	add	r1, r3
 801f2a6:	ee07 1a10 	vmov	s14, r1
 801f2aa:	ee06 2a10 	vmov	s12, r2
 801f2ae:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801f2b2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801f2b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801f2ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801f2be:	ee36 5a66 	vsub.f32	s10, s12, s13
 801f2c2:	ee77 5a67 	vsub.f32	s11, s14, s15
 801f2c6:	e159      	b.n	801f57c <calculate_aabb_per_shape+0xdec>
 801f2c8:	68e2      	ldr	r2, [r4, #12]
 801f2ca:	00b9      	lsls	r1, r7, #2
 801f2cc:	440a      	add	r2, r1
 801f2ce:	3702      	adds	r7, #2
 801f2d0:	ed92 7a00 	vldr	s14, [r2]
 801f2d4:	edd2 7a01 	vldr	s15, [r2, #4]
 801f2d8:	f1b8 0f00 	cmp.w	r8, #0
 801f2dc:	d003      	beq.n	801f2e6 <calculate_aabb_per_shape+0xb56>
 801f2de:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f2e2:	ee77 7a89 	vadd.f32	s15, s15, s18
 801f2e6:	eef0 ca67 	vmov.f32	s25, s15
 801f2ea:	eeb0 ea47 	vmov.f32	s28, s14
 801f2ee:	f04f 0900 	mov.w	r9, #0
 801f2f2:	f7ff badb 	b.w	801e8ac <calculate_aabb_per_shape+0x11c>
 801f2f6:	bf00      	nop
 801f2f8:	00000000 	.word	0x00000000
 801f2fc:	b727c5ac 	.word	0xb727c5ac
 801f300:	c7ffff00 	.word	0xc7ffff00
 801f304:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801f308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f30c:	f100 8126 	bmi.w	801f55c <calculate_aabb_per_shape+0xdcc>
 801f310:	eef4 baed 	vcmpe.f32	s23, s27
 801f314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f318:	bfcc      	ite	gt
 801f31a:	2301      	movgt	r3, #1
 801f31c:	2300      	movle	r3, #0
 801f31e:	2b00      	cmp	r3, #0
 801f320:	f43f aee9 	beq.w	801f0f6 <calculate_aabb_per_shape+0x966>
 801f324:	eeb1 3a43 	vneg.f32	s6, s6
 801f328:	eec3 1a2b 	vdiv.f32	s3, s6, s23
 801f32c:	eef4 1aed 	vcmpe.f32	s3, s27
 801f330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f334:	f77f aedf 	ble.w	801f0f6 <calculate_aabb_per_shape+0x966>
 801f338:	eef4 1aef 	vcmpe.f32	s3, s31
 801f33c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f340:	f57f aed9 	bpl.w	801f0f6 <calculate_aabb_per_shape+0x966>
 801f344:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f348:	2301      	movs	r3, #1
 801f34a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801f34e:	eeb0 1a08 	vmov.f32	s2, #8	@ 0x40400000  3.0
 801f352:	ee30 0ae1 	vsub.f32	s0, s1, s3
 801f356:	ee20 2a01 	vmul.f32	s4, s0, s2
 801f35a:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f35e:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f362:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f366:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f36a:	ee28 8a21 	vmul.f32	s16, s16, s3
 801f36e:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f372:	ee28 8a05 	vmul.f32	s16, s16, s10
 801f376:	ee23 3a28 	vmul.f32	s6, s6, s17
 801f37a:	ee21 0aa1 	vmul.f32	s0, s3, s3
 801f37e:	ee22 2a24 	vmul.f32	s4, s4, s9
 801f382:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f386:	ee60 1a21 	vmul.f32	s3, s0, s3
 801f38a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f38e:	ee61 1a87 	vmul.f32	s3, s3, s14
 801f392:	ee33 3a21 	vadd.f32	s6, s6, s3
 801f396:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f39a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f39e:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f3a2:	bf58      	it	pl
 801f3a4:	eef0 9a43 	vmovpl.f32	s19, s6
 801f3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3ac:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f3b0:	2b02      	cmp	r3, #2
 801f3b2:	f47f aea0 	bne.w	801f0f6 <calculate_aabb_per_shape+0x966>
 801f3b6:	ed9d 2a0f 	vldr	s4, [sp, #60]	@ 0x3c
 801f3ba:	ee70 0ac2 	vsub.f32	s1, s1, s4
 801f3be:	ee20 1a81 	vmul.f32	s2, s1, s2
 801f3c2:	ee20 3aa0 	vmul.f32	s6, s1, s1
 801f3c6:	ee60 1a81 	vmul.f32	s3, s1, s2
 801f3ca:	ee23 3a20 	vmul.f32	s6, s6, s1
 801f3ce:	ee61 1a82 	vmul.f32	s3, s3, s4
 801f3d2:	ee22 1a01 	vmul.f32	s2, s4, s2
 801f3d6:	ee61 0a85 	vmul.f32	s1, s3, s10
 801f3da:	ee21 1a02 	vmul.f32	s2, s2, s4
 801f3de:	ee63 8a28 	vmul.f32	s17, s6, s17
 801f3e2:	ee62 1a02 	vmul.f32	s3, s4, s4
 801f3e6:	ee21 1a24 	vmul.f32	s2, s2, s9
 801f3ea:	ee38 3aa0 	vadd.f32	s6, s17, s1
 801f3ee:	ee21 2a82 	vmul.f32	s4, s3, s4
 801f3f2:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f3f6:	ee22 2a07 	vmul.f32	s4, s4, s14
 801f3fa:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f3fe:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f406:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f40a:	bf58      	it	pl
 801f40c:	eef0 9a43 	vmovpl.f32	s19, s6
 801f410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f414:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f418:	e66d      	b.n	801f0f6 <calculate_aabb_per_shape+0x966>
 801f41a:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801f41e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f422:	f100 8093 	bmi.w	801f54c <calculate_aabb_per_shape+0xdbc>
 801f426:	eef4 8aed 	vcmpe.f32	s17, s27
 801f42a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f42e:	bfcc      	ite	gt
 801f430:	2301      	movgt	r3, #1
 801f432:	2300      	movle	r3, #0
 801f434:	2b00      	cmp	r3, #0
 801f436:	f43f aea6 	beq.w	801f186 <calculate_aabb_per_shape+0x9f6>
 801f43a:	eeb1 3a43 	vneg.f32	s6, s6
 801f43e:	ee83 1a28 	vdiv.f32	s2, s6, s17
 801f442:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f44a:	f77f ae9c 	ble.w	801f186 <calculate_aabb_per_shape+0x9f6>
 801f44e:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f452:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f456:	f57f ae96 	bpl.w	801f186 <calculate_aabb_per_shape+0x9f6>
 801f45a:	2301      	movs	r3, #1
 801f45c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f460:	eef0 0a08 	vmov.f32	s1, #8	@ 0x40400000  3.0
 801f464:	ee31 0ac1 	vsub.f32	s0, s3, s2
 801f468:	ee20 2a20 	vmul.f32	s4, s0, s1
 801f46c:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f470:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f474:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f478:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f47c:	ee28 8a01 	vmul.f32	s16, s16, s2
 801f480:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f484:	ee28 8a26 	vmul.f32	s16, s16, s13
 801f488:	ee23 3a09 	vmul.f32	s6, s6, s18
 801f48c:	ee21 0a01 	vmul.f32	s0, s2, s2
 801f490:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f494:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f498:	ee20 1a01 	vmul.f32	s2, s0, s2
 801f49c:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f4a0:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f4a4:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f4a8:	eef4 aac3 	vcmpe.f32	s21, s6
 801f4ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4b0:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f4b4:	bf58      	it	pl
 801f4b6:	eef0 aa43 	vmovpl.f32	s21, s6
 801f4ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4be:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f4c2:	2b02      	cmp	r3, #2
 801f4c4:	f47f ae5f 	bne.w	801f186 <calculate_aabb_per_shape+0x9f6>
 801f4c8:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 801f4cc:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801f4d0:	ee21 2aa0 	vmul.f32	s4, s3, s1
 801f4d4:	ee21 3aa1 	vmul.f32	s6, s3, s3
 801f4d8:	ee61 0a82 	vmul.f32	s1, s3, s4
 801f4dc:	ee23 3a21 	vmul.f32	s6, s6, s3
 801f4e0:	ee21 2a02 	vmul.f32	s4, s2, s4
 801f4e4:	ee60 0a81 	vmul.f32	s1, s1, s2
 801f4e8:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f4ec:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801f4f0:	ee23 9a09 	vmul.f32	s18, s6, s18
 801f4f4:	ee61 1a01 	vmul.f32	s3, s2, s2
 801f4f8:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f4fc:	ee39 3a20 	vadd.f32	s6, s18, s1
 801f500:	ee21 1a81 	vmul.f32	s2, s3, s2
 801f504:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f508:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f50c:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f510:	eef4 aac3 	vcmpe.f32	s21, s6
 801f514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f518:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f51c:	bf58      	it	pl
 801f51e:	eef0 aa43 	vmovpl.f32	s21, s6
 801f522:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f526:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f52a:	e62c      	b.n	801f186 <calculate_aabb_per_shape+0x9f6>
 801f52c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f534:	bfcc      	ite	gt
 801f536:	2301      	movgt	r3, #1
 801f538:	2300      	movle	r3, #0
 801f53a:	e5c9      	b.n	801f0d0 <calculate_aabb_per_shape+0x940>
 801f53c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f544:	bfcc      	ite	gt
 801f546:	2301      	movgt	r3, #1
 801f548:	2300      	movle	r3, #0
 801f54a:	e609      	b.n	801f160 <calculate_aabb_per_shape+0x9d0>
 801f54c:	eef4 8aee 	vcmpe.f32	s17, s29
 801f550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f554:	bf4c      	ite	mi
 801f556:	2301      	movmi	r3, #1
 801f558:	2300      	movpl	r3, #0
 801f55a:	e76b      	b.n	801f434 <calculate_aabb_per_shape+0xca4>
 801f55c:	eef4 baee 	vcmpe.f32	s23, s29
 801f560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f564:	bf4c      	ite	mi
 801f566:	2301      	movmi	r3, #1
 801f568:	2300      	movpl	r3, #0
 801f56a:	e6d8      	b.n	801f31e <calculate_aabb_per_shape+0xb8e>
 801f56c:	ed5f 5a9c 	vldr	s11, [pc, #-624]	@ 801f300 <calculate_aabb_per_shape+0xb70>
 801f570:	eeb0 6a47 	vmov.f32	s12, s14
 801f574:	eef0 6a67 	vmov.f32	s13, s15
 801f578:	eeb0 5a65 	vmov.f32	s10, s11
 801f57c:	edc4 6a04 	vstr	s13, [r4, #16]
 801f580:	edc4 7a05 	vstr	s15, [r4, #20]
 801f584:	ed84 6a06 	vstr	s12, [r4, #24]
 801f588:	ed84 7a07 	vstr	s14, [r4, #28]
 801f58c:	ed84 5a08 	vstr	s10, [r4, #32]
 801f590:	edc4 5a09 	vstr	s11, [r4, #36]	@ 0x24
 801f594:	b011      	add	sp, #68	@ 0x44
 801f596:	ecbd 8b10 	vpop	{d8-d15}
 801f59a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f59e:	eeb4 bae6 	vcmpe.f32	s22, s13
 801f5a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5a6:	f6ff ad5e 	blt.w	801f066 <calculate_aabb_per_shape+0x8d6>
 801f5aa:	eef4 9ae4 	vcmpe.f32	s19, s9
 801f5ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5b2:	f63f ad58 	bhi.w	801f066 <calculate_aabb_per_shape+0x8d6>
 801f5b6:	eeb4 aae4 	vcmpe.f32	s20, s9
 801f5ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5be:	f6ff ad52 	blt.w	801f066 <calculate_aabb_per_shape+0x8d6>
 801f5c2:	eef4 aae5 	vcmpe.f32	s21, s11
 801f5c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5ca:	f63f ad4c 	bhi.w	801f066 <calculate_aabb_per_shape+0x8d6>
 801f5ce:	eeb4 bae5 	vcmpe.f32	s22, s11
 801f5d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5d6:	f6ff ad46 	blt.w	801f066 <calculate_aabb_per_shape+0x8d6>
 801f5da:	e5dd      	b.n	801f198 <calculate_aabb_per_shape+0xa08>
 801f5dc:	f1aa 0a05 	sub.w	sl, sl, #5
 801f5e0:	f1ba 0f03 	cmp.w	sl, #3
 801f5e4:	f240 81ae 	bls.w	801f944 <calculate_aabb_per_shape+0x11b4>
 801f5e8:	eef0 6a49 	vmov.f32	s13, s18
 801f5ec:	eeb0 5a68 	vmov.f32	s10, s17
 801f5f0:	46ba      	mov	sl, r7
 801f5f2:	eeb0 6a66 	vmov.f32	s12, s13
 801f5f6:	eeb0 da45 	vmov.f32	s26, s10
 801f5fa:	e17d      	b.n	801f8f8 <calculate_aabb_per_shape+0x1168>
 801f5fc:	ed94 2a04 	vldr	s4, [r4, #16]
 801f600:	edd4 0a05 	vldr	s1, [r4, #20]
 801f604:	eeb4 2ac7 	vcmpe.f32	s4, s14
 801f608:	ed94 1a06 	vldr	s2, [r4, #24]
 801f60c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f610:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f614:	bf58      	it	pl
 801f616:	eeb0 2a47 	vmovpl.f32	s4, s14
 801f61a:	ed94 0a07 	vldr	s0, [r4, #28]
 801f61e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f622:	eeb4 1ac7 	vcmpe.f32	s2, s14
 801f626:	bf58      	it	pl
 801f628:	eef0 0a67 	vmovpl.f32	s1, s15
 801f62c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f630:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f634:	fe31 1a07 	vselgt.f32	s2, s2, s14
 801f638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f63c:	eeb4 2ac5 	vcmpe.f32	s4, s10
 801f640:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801f644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f648:	ed84 2a04 	vstr	s4, [r4, #16]
 801f64c:	edc4 0a05 	vstr	s1, [r4, #20]
 801f650:	ed84 1a06 	vstr	s2, [r4, #24]
 801f654:	ed84 0a07 	vstr	s0, [r4, #28]
 801f658:	d80f      	bhi.n	801f67a <calculate_aabb_per_shape+0xeea>
 801f65a:	eeb4 1ac5 	vcmpe.f32	s2, s10
 801f65e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f662:	db0a      	blt.n	801f67a <calculate_aabb_per_shape+0xeea>
 801f664:	eef4 0ae6 	vcmpe.f32	s1, s13
 801f668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f66c:	d805      	bhi.n	801f67a <calculate_aabb_per_shape+0xeea>
 801f66e:	eeb4 0ae6 	vcmpe.f32	s0, s13
 801f672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f676:	f6bf ad8f 	bge.w	801f198 <calculate_aabb_per_shape+0xa08>
 801f67a:	ee35 8a05 	vadd.f32	s16, s10, s10
 801f67e:	ee78 1aa8 	vadd.f32	s3, s17, s17
 801f682:	ee37 3a07 	vadd.f32	s6, s14, s14
 801f686:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f68a:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f68e:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f692:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f696:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f69a:	f100 8139 	bmi.w	801f910 <calculate_aabb_per_shape+0x1180>
 801f69e:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f6a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6a6:	bfcc      	ite	gt
 801f6a8:	2301      	movgt	r3, #1
 801f6aa:	2300      	movle	r3, #0
 801f6ac:	b173      	cbz	r3, 801f6cc <calculate_aabb_per_shape+0xf3c>
 801f6ae:	eef1 1a61 	vneg.f32	s3, s3
 801f6b2:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f6b6:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f6ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6be:	dd05      	ble.n	801f6cc <calculate_aabb_per_shape+0xf3c>
 801f6c0:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f6c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6c8:	f100 8175 	bmi.w	801f9b6 <calculate_aabb_per_shape+0x1226>
 801f6cc:	ee36 8aa6 	vadd.f32	s16, s13, s13
 801f6d0:	ee79 1a09 	vadd.f32	s3, s18, s18
 801f6d4:	ee37 3aa7 	vadd.f32	s6, s15, s15
 801f6d8:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f6dc:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f6e0:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f6e4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f6e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6ec:	f100 815b 	bmi.w	801f9a6 <calculate_aabb_per_shape+0x1216>
 801f6f0:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6f8:	bfcc      	ite	gt
 801f6fa:	2301      	movgt	r3, #1
 801f6fc:	2300      	movle	r3, #0
 801f6fe:	b383      	cbz	r3, 801f762 <calculate_aabb_per_shape+0xfd2>
 801f700:	eef1 1a61 	vneg.f32	s3, s3
 801f704:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f708:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f70c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f710:	dd27      	ble.n	801f762 <calculate_aabb_per_shape+0xfd2>
 801f712:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f71a:	d522      	bpl.n	801f762 <calculate_aabb_per_shape+0xfd2>
 801f71c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f720:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f724:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f728:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f72c:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f730:	ee61 1a89 	vmul.f32	s3, s3, s18
 801f734:	ee23 3a26 	vmul.f32	s6, s6, s13
 801f738:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f73c:	ee73 1a21 	vadd.f32	s3, s6, s3
 801f740:	ee28 3a27 	vmul.f32	s6, s16, s15
 801f744:	ee31 3a83 	vadd.f32	s6, s3, s6
 801f748:	eef4 0ac3 	vcmpe.f32	s1, s6
 801f74c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f750:	eeb4 0ac3 	vcmpe.f32	s0, s6
 801f754:	bf58      	it	pl
 801f756:	eef0 0a43 	vmovpl.f32	s1, s6
 801f75a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f75e:	fe30 0a03 	vselgt.f32	s0, s0, s6
 801f762:	ed84 2a04 	vstr	s4, [r4, #16]
 801f766:	edc4 0a05 	vstr	s1, [r4, #20]
 801f76a:	ed84 1a06 	vstr	s2, [r4, #24]
 801f76e:	ed84 0a07 	vstr	s0, [r4, #28]
 801f772:	e511      	b.n	801f198 <calculate_aabb_per_shape+0xa08>
 801f774:	f107 0a04 	add.w	sl, r7, #4
 801f778:	edde 6a01 	vldr	s13, [lr, #4]
 801f77c:	ed9e da02 	vldr	s26, [lr, #8]
 801f780:	edde 5a03 	vldr	s11, [lr, #12]
 801f784:	f1b8 0f00 	cmp.w	r8, #0
 801f788:	d007      	beq.n	801f79a <calculate_aabb_per_shape+0x100a>
 801f78a:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f78e:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f792:	ee3d da28 	vadd.f32	s26, s26, s17
 801f796:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f79a:	eef0 4a4d 	vmov.f32	s9, s26
 801f79e:	eeb0 6a65 	vmov.f32	s12, s11
 801f7a2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801f7a6:	f10a 0702 	add.w	r7, sl, #2
 801f7aa:	ed91 7a00 	vldr	s14, [r1]
 801f7ae:	ed91 3a01 	vldr	s6, [r1, #4]
 801f7b2:	eeb0 5a67 	vmov.f32	s10, s15
 801f7b6:	f1b8 0f00 	cmp.w	r8, #0
 801f7ba:	f000 80a5 	beq.w	801f908 <calculate_aabb_per_shape+0x1178>
 801f7be:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f7c2:	ee79 7a03 	vadd.f32	s15, s18, s6
 801f7c6:	f7ff b871 	b.w	801e8ac <calculate_aabb_per_shape+0x11c>
 801f7ca:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f7ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7d2:	eeb1 cac0 	vsqrt.f32	s24, s0
 801f7d6:	f100 8144 	bmi.w	801fa62 <calculate_aabb_per_shape+0x12d2>
 801f7da:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f7de:	eeb1 3a6b 	vneg.f32	s6, s23
 801f7e2:	ee7c ba6b 	vsub.f32	s23, s24, s23
 801f7e6:	eecb 1a88 	vdiv.f32	s3, s23, s16
 801f7ea:	eef4 1aed 	vcmpe.f32	s3, s27
 801f7ee:	ee33 3a4c 	vsub.f32	s6, s6, s24
 801f7f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7f6:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f7fa:	dd15      	ble.n	801f828 <calculate_aabb_per_shape+0x1098>
 801f7fc:	eef4 1aef 	vcmpe.f32	s3, s31
 801f800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f804:	d510      	bpl.n	801f828 <calculate_aabb_per_shape+0x1098>
 801f806:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f80a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f80e:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f812:	f77f ad99 	ble.w	801f348 <calculate_aabb_per_shape+0xbb8>
 801f816:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f81a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f81e:	f57f ad93 	bpl.w	801f348 <calculate_aabb_per_shape+0xbb8>
 801f822:	2302      	movs	r3, #2
 801f824:	2201      	movs	r2, #1
 801f826:	e00d      	b.n	801f844 <calculate_aabb_per_shape+0x10b4>
 801f828:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f82c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f830:	f77f ac61 	ble.w	801f0f6 <calculate_aabb_per_shape+0x966>
 801f834:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f83c:	f57f ac5b 	bpl.w	801f0f6 <calculate_aabb_per_shape+0x966>
 801f840:	2301      	movs	r3, #1
 801f842:	2200      	movs	r2, #0
 801f844:	a910      	add	r1, sp, #64	@ 0x40
 801f846:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f84a:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f84e:	eddd 1a0e 	vldr	s3, [sp, #56]	@ 0x38
 801f852:	e57a      	b.n	801f34a <calculate_aabb_per_shape+0xbba>
 801f854:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f85c:	eef1 bac0 	vsqrt.f32	s23, s0
 801f860:	f100 80e0 	bmi.w	801fa24 <calculate_aabb_per_shape+0x1294>
 801f864:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f868:	eeb1 3a68 	vneg.f32	s6, s17
 801f86c:	ee7b 8ae8 	vsub.f32	s17, s23, s17
 801f870:	ee88 1a88 	vdiv.f32	s2, s17, s16
 801f874:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f878:	ee33 3a6b 	vsub.f32	s6, s6, s23
 801f87c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f880:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f884:	dd15      	ble.n	801f8b2 <calculate_aabb_per_shape+0x1122>
 801f886:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f88a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f88e:	d510      	bpl.n	801f8b2 <calculate_aabb_per_shape+0x1122>
 801f890:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f898:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 801f89c:	f77f addd 	ble.w	801f45a <calculate_aabb_per_shape+0xcca>
 801f8a0:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f8a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8a8:	f57f add7 	bpl.w	801f45a <calculate_aabb_per_shape+0xcca>
 801f8ac:	2302      	movs	r3, #2
 801f8ae:	2201      	movs	r2, #1
 801f8b0:	e00d      	b.n	801f8ce <calculate_aabb_per_shape+0x113e>
 801f8b2:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f8b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8ba:	f77f ac64 	ble.w	801f186 <calculate_aabb_per_shape+0x9f6>
 801f8be:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f8c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8c6:	f57f ac5e 	bpl.w	801f186 <calculate_aabb_per_shape+0x9f6>
 801f8ca:	2301      	movs	r3, #1
 801f8cc:	2200      	movs	r2, #0
 801f8ce:	a910      	add	r1, sp, #64	@ 0x40
 801f8d0:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f8d4:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f8d8:	ed9d 1a0e 	vldr	s2, [sp, #56]	@ 0x38
 801f8dc:	e5be      	b.n	801f45c <calculate_aabb_per_shape+0xccc>
 801f8de:	f107 0a02 	add.w	sl, r7, #2
 801f8e2:	edde 6a01 	vldr	s13, [lr, #4]
 801f8e6:	f1b8 0f00 	cmp.w	r8, #0
 801f8ea:	d108      	bne.n	801f8fe <calculate_aabb_per_shape+0x116e>
 801f8ec:	eeb0 da67 	vmov.f32	s26, s15
 801f8f0:	eeb0 6a66 	vmov.f32	s12, s13
 801f8f4:	eeb0 5a67 	vmov.f32	s10, s15
 801f8f8:	eef0 7a45 	vmov.f32	s15, s10
 801f8fc:	e751      	b.n	801f7a2 <calculate_aabb_per_shape+0x1012>
 801f8fe:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f902:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f906:	e7f1      	b.n	801f8ec <calculate_aabb_per_shape+0x115c>
 801f908:	eef0 7a43 	vmov.f32	s15, s6
 801f90c:	f7fe bfce 	b.w	801e8ac <calculate_aabb_per_shape+0x11c>
 801f910:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f914:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f918:	bf4c      	ite	mi
 801f91a:	2301      	movmi	r3, #1
 801f91c:	2300      	movpl	r3, #0
 801f91e:	e6c5      	b.n	801f6ac <calculate_aabb_per_shape+0xf1c>
 801f920:	eeb0 5a67 	vmov.f32	s10, s15
 801f924:	f107 0a03 	add.w	sl, r7, #3
 801f928:	edde 6a01 	vldr	s13, [lr, #4]
 801f92c:	3704      	adds	r7, #4
 801f92e:	edde 4a02 	vldr	s9, [lr, #8]
 801f932:	eeb0 6a49 	vmov.f32	s12, s18
 801f936:	eeb0 da68 	vmov.f32	s26, s17
 801f93a:	edde 7a03 	vldr	s15, [lr, #12]
 801f93e:	9500      	str	r5, [sp, #0]
 801f940:	f7fe bfa9 	b.w	801e896 <calculate_aabb_per_shape+0x106>
 801f944:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f948:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f94c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f950:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f954:	e64c      	b.n	801f5f0 <calculate_aabb_per_shape+0xe60>
 801f956:	eeb0 7a68 	vmov.f32	s14, s17
 801f95a:	f7fe bfa7 	b.w	801e8ac <calculate_aabb_per_shape+0x11c>
 801f95e:	f1aa 0a05 	sub.w	sl, sl, #5
 801f962:	f1ba 0f03 	cmp.w	sl, #3
 801f966:	d915      	bls.n	801f994 <calculate_aabb_per_shape+0x1204>
 801f968:	eef0 6a49 	vmov.f32	s13, s18
 801f96c:	eeb0 5a68 	vmov.f32	s10, s17
 801f970:	f107 0a02 	add.w	sl, r7, #2
 801f974:	edde 5a01 	vldr	s11, [lr, #4]
 801f978:	f1b8 0f00 	cmp.w	r8, #0
 801f97c:	d003      	beq.n	801f986 <calculate_aabb_per_shape+0x11f6>
 801f97e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f982:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f986:	eeb0 da67 	vmov.f32	s26, s15
 801f98a:	eeb0 6a65 	vmov.f32	s12, s11
 801f98e:	eef0 4a67 	vmov.f32	s9, s15
 801f992:	e7b1      	b.n	801f8f8 <calculate_aabb_per_shape+0x1168>
 801f994:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f998:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f99c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f9a0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f9a4:	e7e4      	b.n	801f970 <calculate_aabb_per_shape+0x11e0>
 801f9a6:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f9aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9ae:	bf4c      	ite	mi
 801f9b0:	2301      	movmi	r3, #1
 801f9b2:	2300      	movpl	r3, #0
 801f9b4:	e6a3      	b.n	801f6fe <calculate_aabb_per_shape+0xf6e>
 801f9b6:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f9ba:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f9be:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f9c2:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f9c6:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f9ca:	ee61 1aa8 	vmul.f32	s3, s3, s17
 801f9ce:	ee23 3a05 	vmul.f32	s6, s6, s10
 801f9d2:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f9d6:	ee73 1a21 	vadd.f32	s3, s6, s3
 801f9da:	ee28 3a07 	vmul.f32	s6, s16, s14
 801f9de:	ee31 3a83 	vadd.f32	s6, s3, s6
 801f9e2:	eeb4 2ac3 	vcmpe.f32	s4, s6
 801f9e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9ea:	eeb4 1ac3 	vcmpe.f32	s2, s6
 801f9ee:	bf58      	it	pl
 801f9f0:	eeb0 2a43 	vmovpl.f32	s4, s6
 801f9f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9f8:	fe31 1a03 	vselgt.f32	s2, s2, s6
 801f9fc:	e666      	b.n	801f6cc <calculate_aabb_per_shape+0xf3c>
 801f9fe:	ed9f 3ad3 	vldr	s6, [pc, #844]	@ 801fd4c <calculate_aabb_per_shape+0x15bc>
 801fa02:	eef4 6ac3 	vcmpe.f32	s13, s6
 801fa06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa0a:	f6bf abd8 	bge.w	801f1be <calculate_aabb_per_shape+0xa2e>
 801fa0e:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801fa12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa16:	d443      	bmi.n	801faa0 <calculate_aabb_per_shape+0x1310>
 801fa18:	eeb0 8a45 	vmov.f32	s16, s10
 801fa1c:	eeb1 9a66 	vneg.f32	s18, s13
 801fa20:	f7fe bf8d 	b.w	801e93e <calculate_aabb_per_shape+0x1ae>
 801fa24:	edcd 6a07 	vstr	s13, [sp, #28]
 801fa28:	edcd 4a06 	vstr	s9, [sp, #24]
 801fa2c:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fa30:	edcd 5a04 	vstr	s11, [sp, #16]
 801fa34:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fa38:	edcd 7a02 	vstr	s15, [sp, #8]
 801fa3c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fa40:	f011 fbd6 	bl	80311f0 <sqrtf>
 801fa44:	eddd 6a07 	vldr	s13, [sp, #28]
 801fa48:	eddd 4a06 	vldr	s9, [sp, #24]
 801fa4c:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fa50:	eddd 5a04 	vldr	s11, [sp, #16]
 801fa54:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fa58:	eddd 7a02 	vldr	s15, [sp, #8]
 801fa5c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fa60:	e700      	b.n	801f864 <calculate_aabb_per_shape+0x10d4>
 801fa62:	edcd 6a07 	vstr	s13, [sp, #28]
 801fa66:	edcd 4a06 	vstr	s9, [sp, #24]
 801fa6a:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fa6e:	edcd 5a04 	vstr	s11, [sp, #16]
 801fa72:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fa76:	edcd 7a02 	vstr	s15, [sp, #8]
 801fa7a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fa7e:	f011 fbb7 	bl	80311f0 <sqrtf>
 801fa82:	eddd 6a07 	vldr	s13, [sp, #28]
 801fa86:	eddd 4a06 	vldr	s9, [sp, #24]
 801fa8a:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fa8e:	eddd 5a04 	vldr	s11, [sp, #16]
 801fa92:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fa96:	eddd 7a02 	vldr	s15, [sp, #8]
 801fa9a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fa9e:	e69c      	b.n	801f7da <calculate_aabb_per_shape+0x104a>
 801faa0:	eeb1 8a45 	vneg.f32	s16, s10
 801faa4:	f7fe bf43 	b.w	801e92e <calculate_aabb_per_shape+0x19e>
 801faa8:	ee28 aa08 	vmul.f32	s20, s16, s16
 801faac:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801fab0:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801fab4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fab8:	ee79 bac8 	vsub.f32	s23, s19, s16
 801fabc:	eef1 aaca 	vsqrt.f32	s21, s20
 801fac0:	eeb1 ba48 	vneg.f32	s22, s16
 801fac4:	edcd 6a08 	vstr	s13, [sp, #32]
 801fac8:	edcd 4a07 	vstr	s9, [sp, #28]
 801facc:	ed8d 6a06 	vstr	s12, [sp, #24]
 801fad0:	edcd 5a05 	vstr	s11, [sp, #20]
 801fad4:	ed8d 5a04 	vstr	s10, [sp, #16]
 801fad8:	edcd 7a03 	vstr	s15, [sp, #12]
 801fadc:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fae0:	f100 8655 	bmi.w	802078e <calculate_aabb_per_shape+0x1ffe>
 801fae4:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801fae8:	f011 fb34 	bl	8031154 <acosf>
 801faec:	eddf 0a99 	vldr	s1, [pc, #612]	@ 801fd54 <calculate_aabb_per_shape+0x15c4>
 801faf0:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801faf4:	f011 fb5c 	bl	80311b0 <fmodf>
 801faf8:	ee39 aa88 	vadd.f32	s20, s19, s16
 801fafc:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fb00:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fb04:	eddd 7a03 	vldr	s15, [sp, #12]
 801fb08:	ed9d 5a04 	vldr	s10, [sp, #16]
 801fb0c:	eddd 5a05 	vldr	s11, [sp, #20]
 801fb10:	ed9d 6a06 	vldr	s12, [sp, #24]
 801fb14:	eddd 4a07 	vldr	s9, [sp, #28]
 801fb18:	eddd 6a08 	vldr	s13, [sp, #32]
 801fb1c:	ee88 0a2a 	vdiv.f32	s0, s16, s21
 801fb20:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801fb24:	edcd 4a08 	vstr	s9, [sp, #32]
 801fb28:	ed8d 6a07 	vstr	s12, [sp, #28]
 801fb2c:	edcd 5a06 	vstr	s11, [sp, #24]
 801fb30:	ed8d 5a05 	vstr	s10, [sp, #20]
 801fb34:	edcd 7a03 	vstr	s15, [sp, #12]
 801fb38:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fb3c:	ed9f ca85 	vldr	s24, [pc, #532]	@ 801fd54 <calculate_aabb_per_shape+0x15c4>
 801fb40:	f011 fb08 	bl	8031154 <acosf>
 801fb44:	eef0 0a4c 	vmov.f32	s1, s24
 801fb48:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801fb4c:	f011 fb30 	bl	80311b0 <fmodf>
 801fb50:	ee29 2a09 	vmul.f32	s4, s18, s18
 801fb54:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fb58:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801fb5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb60:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801fb64:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fb68:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801fb6c:	bf54      	ite	pl
 801fb6e:	eef0 aa61 	vmovpl.f32	s21, s3
 801fb72:	eef0 aa43 	vmovmi.f32	s21, s6
 801fb76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb7a:	ed8d 0a04 	vstr	s0, [sp, #16]
 801fb7e:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801fb82:	ee38 bac9 	vsub.f32	s22, s17, s18
 801fb86:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fb8a:	eddd 7a03 	vldr	s15, [sp, #12]
 801fb8e:	ed9d 5a05 	vldr	s10, [sp, #20]
 801fb92:	eddd 5a06 	vldr	s11, [sp, #24]
 801fb96:	ed9d 6a07 	vldr	s12, [sp, #28]
 801fb9a:	eddd 4a08 	vldr	s9, [sp, #32]
 801fb9e:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801fba2:	f100 8587 	bmi.w	80206b4 <calculate_aabb_per_shape+0x1f24>
 801fba6:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 801fbaa:	eeb0 0a48 	vmov.f32	s0, s16
 801fbae:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801fbb2:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801fbb6:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801fbba:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801fbbe:	ed8d 5a08 	vstr	s10, [sp, #32]
 801fbc2:	edcd 1a07 	vstr	s3, [sp, #28]
 801fbc6:	ed8d 3a06 	vstr	s6, [sp, #24]
 801fbca:	edcd 7a05 	vstr	s15, [sp, #20]
 801fbce:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fbd2:	f011 fabf 	bl	8031154 <acosf>
 801fbd6:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801fbda:	eef0 0a4c 	vmov.f32	s1, s24
 801fbde:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801fbe2:	f011 fae5 	bl	80311b0 <fmodf>
 801fbe6:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fbea:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fbee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbf2:	eddd 1a07 	vldr	s3, [sp, #28]
 801fbf6:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fbfa:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fbfe:	eddd 7a05 	vldr	s15, [sp, #20]
 801fc02:	ed9d 5a08 	vldr	s10, [sp, #32]
 801fc06:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801fc0a:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801fc0e:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801fc12:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801fc16:	ee78 aa89 	vadd.f32	s21, s17, s18
 801fc1a:	fe33 9a21 	vselgt.f32	s18, s6, s3
 801fc1e:	eeb0 0a48 	vmov.f32	s0, s16
 801fc22:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fc26:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801fc2a:	ed8d 6a08 	vstr	s12, [sp, #32]
 801fc2e:	edcd 5a07 	vstr	s11, [sp, #28]
 801fc32:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fc36:	edcd 7a05 	vstr	s15, [sp, #20]
 801fc3a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fc3e:	f011 fa89 	bl	8031154 <acosf>
 801fc42:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fc46:	f7ff b883 	b.w	801ed50 <calculate_aabb_per_shape+0x5c0>
 801fc4a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc52:	dc39      	bgt.n	801fcc8 <calculate_aabb_per_shape+0x1538>
 801fc54:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc5c:	d434      	bmi.n	801fcc8 <calculate_aabb_per_shape+0x1538>
 801fc5e:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fc62:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc6a:	dc04      	bgt.n	801fc76 <calculate_aabb_per_shape+0x14e6>
 801fc6c:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc74:	d505      	bpl.n	801fc82 <calculate_aabb_per_shape+0x14f2>
 801fc76:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fc7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc7e:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801fc82:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fc86:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc8e:	dc04      	bgt.n	801fc9a <calculate_aabb_per_shape+0x150a>
 801fc90:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc98:	d508      	bpl.n	801fcac <calculate_aabb_per_shape+0x151c>
 801fc9a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801fc9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fca2:	bf54      	ite	pl
 801fca4:	eeb0 ba67 	vmovpl.f32	s22, s15
 801fca8:	eeb0 ba46 	vmovmi.f32	s22, s12
 801fcac:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801fcb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcb4:	f73f a941 	bgt.w	801ef3a <calculate_aabb_per_shape+0x7aa>
 801fcb8:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801fcbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcc0:	f53f a93b 	bmi.w	801ef3a <calculate_aabb_per_shape+0x7aa>
 801fcc4:	f7ff b93f 	b.w	801ef46 <calculate_aabb_per_shape+0x7b6>
 801fcc8:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcd0:	bf54      	ite	pl
 801fcd2:	eef0 ba47 	vmovpl.f32	s23, s14
 801fcd6:	eef0 ba4d 	vmovmi.f32	s23, s26
 801fcda:	e7c0      	b.n	801fc5e <calculate_aabb_per_shape+0x14ce>
 801fcdc:	db02      	blt.n	801fce4 <calculate_aabb_per_shape+0x1554>
 801fcde:	429a      	cmp	r2, r3
 801fce0:	f43e af1a 	beq.w	801eb18 <calculate_aabb_per_shape+0x388>
 801fce4:	ee38 4ae1 	vsub.f32	s8, s17, s3
 801fce8:	ee72 aa29 	vadd.f32	s21, s4, s19
 801fcec:	f7fe bf14 	b.w	801eb18 <calculate_aabb_per_shape+0x388>
 801fcf0:	ee23 0a01 	vmul.f32	s0, s6, s2
 801fcf4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fcf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcfc:	eef1 8ac0 	vsqrt.f32	s17, s0
 801fd00:	f100 83c5 	bmi.w	802048e <calculate_aabb_per_shape+0x1cfe>
 801fd04:	ee28 8a28 	vmul.f32	s16, s16, s17
 801fd08:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fd0c:	ee29 9a28 	vmul.f32	s18, s18, s17
 801fd10:	eec4 ba08 	vdiv.f32	s23, s8, s16
 801fd14:	ed9d 4a02 	vldr	s8, [sp, #8]
 801fd18:	eec4 2a09 	vdiv.f32	s5, s8, s18
 801fd1c:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fd20:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801fd24:	ee84 ba09 	vdiv.f32	s22, s8, s18
 801fd28:	eeb6 3a00 	vmov.f32	s6, #96	@ 0x3f000000  0.5
 801fd2c:	ee73 8aab 	vadd.f32	s17, s7, s23
 801fd30:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801fd34:	ee68 8a83 	vmul.f32	s17, s17, s6
 801fd38:	ee69 9a83 	vmul.f32	s19, s19, s6
 801fd3c:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801fd40:	ee32 4acb 	vsub.f32	s8, s5, s22
 801fd44:	eef0 1a4f 	vmov.f32	s3, s30
 801fd48:	f7fe be81 	b.w	801ea4e <calculate_aabb_per_shape+0x2be>
 801fd4c:	b727c5ac 	.word	0xb727c5ac
 801fd50:	40490fdb 	.word	0x40490fdb
 801fd54:	40c90fdb 	.word	0x40c90fdb
 801fd58:	eeb0 0a4a 	vmov.f32	s0, s20
 801fd5c:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801fd60:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801fd64:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801fd68:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801fd6c:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801fd70:	ed8d 7a07 	vstr	s14, [sp, #28]
 801fd74:	edcd 7a08 	vstr	s15, [sp, #32]
 801fd78:	f011 fbbe 	bl	80314f8 <tanf>
 801fd7c:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fd80:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fd84:	ee80 0a08 	vdiv.f32	s0, s0, s16
 801fd88:	f011 fa50 	bl	803122c <atanf>
 801fd8c:	ed5f ba10 	vldr	s23, [pc, #-64]	@ 801fd50 <calculate_aabb_per_shape+0x15c0>
 801fd90:	eef0 aa40 	vmov.f32	s21, s0
 801fd94:	ee7b bac0 	vsub.f32	s23, s23, s0
 801fd98:	f011 fb1c 	bl	80313d4 <cosf>
 801fd9c:	ee20 aa08 	vmul.f32	s20, s0, s16
 801fda0:	eeb1 0a6a 	vneg.f32	s0, s21
 801fda4:	f011 fb62 	bl	803146c <sinf>
 801fda8:	eddd 7a01 	vldr	s15, [sp, #4]
 801fdac:	ee20 ba09 	vmul.f32	s22, s0, s18
 801fdb0:	ee27 aa8a 	vmul.f32	s20, s15, s20
 801fdb4:	ee2c 3a0b 	vmul.f32	s6, s24, s22
 801fdb8:	ee3a aa29 	vadd.f32	s20, s20, s19
 801fdbc:	eeb0 0a6b 	vmov.f32	s0, s23
 801fdc0:	ee3a aa43 	vsub.f32	s20, s20, s6
 801fdc4:	f011 fb06 	bl	80313d4 <cosf>
 801fdc8:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fdcc:	eeb0 0a6b 	vmov.f32	s0, s23
 801fdd0:	f011 fb4c 	bl	803146c <sinf>
 801fdd4:	ed9d 7a02 	vldr	s14, [sp, #8]
 801fdd8:	eddd 7a01 	vldr	s15, [sp, #4]
 801fddc:	ee27 4a08 	vmul.f32	s8, s14, s16
 801fde0:	ee20 2a09 	vmul.f32	s4, s0, s18
 801fde4:	ee67 ba84 	vmul.f32	s23, s15, s8
 801fde8:	ee6c 1a02 	vmul.f32	s3, s24, s4
 801fdec:	ee7b baa9 	vadd.f32	s23, s23, s19
 801fdf0:	ee7b bae1 	vsub.f32	s23, s23, s3
 801fdf4:	ed8d 0a06 	vstr	s0, [sp, #24]
 801fdf8:	eeb0 0a6a 	vmov.f32	s0, s21
 801fdfc:	ed8d 4a05 	vstr	s8, [sp, #20]
 801fe00:	ed8d 2a04 	vstr	s4, [sp, #16]
 801fe04:	f011 fae6 	bl	80313d4 <cosf>
 801fe08:	eeb4 aaeb 	vcmpe.f32	s20, s23
 801fe0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe10:	eef0 aa40 	vmov.f32	s21, s0
 801fe14:	ed9d 2a04 	vldr	s4, [sp, #16]
 801fe18:	ed9d 4a05 	vldr	s8, [sp, #20]
 801fe1c:	ed9d 7a07 	vldr	s14, [sp, #28]
 801fe20:	eddd 7a08 	vldr	s15, [sp, #32]
 801fe24:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 801fe28:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 801fe2c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 801fe30:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 801fe34:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 801fe38:	dc0f      	bgt.n	801fe5a <calculate_aabb_per_shape+0x16ca>
 801fe3a:	eef0 1a6b 	vmov.f32	s3, s23
 801fe3e:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fe42:	eeb0 2a4b 	vmov.f32	s4, s22
 801fe46:	eef0 ba4a 	vmov.f32	s23, s20
 801fe4a:	ee20 4a08 	vmul.f32	s8, s0, s16
 801fe4e:	eddd aa02 	vldr	s21, [sp, #8]
 801fe52:	eeb0 aa61 	vmov.f32	s20, s3
 801fe56:	ee23 ba09 	vmul.f32	s22, s6, s18
 801fe5a:	ee2c 3a04 	vmul.f32	s6, s24, s8
 801fe5e:	ed9d 4a01 	vldr	s8, [sp, #4]
 801fe62:	ee33 3a28 	vadd.f32	s6, s6, s17
 801fe66:	ee24 2a02 	vmul.f32	s4, s8, s4
 801fe6a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801fe6e:	ee3b 4ae9 	vsub.f32	s8, s23, s19
 801fe72:	ee33 3a68 	vsub.f32	s6, s6, s17
 801fe76:	ee24 2a04 	vmul.f32	s4, s8, s8
 801fe7a:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801fe7e:	ee23 3a03 	vmul.f32	s6, s6, s6
 801fe82:	ee32 0a03 	vadd.f32	s0, s4, s6
 801fe86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe8a:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 801fe8e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fe92:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fe96:	fe73 3aa1 	vselgt.f32	s7, s7, s3
 801fe9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe9e:	edcd 3a02 	vstr	s7, [sp, #8]
 801fea2:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801fea6:	f100 81a3 	bmi.w	80201f0 <calculate_aabb_per_shape+0x1a60>
 801feaa:	ee84 0a02 	vdiv.f32	s0, s8, s4
 801feae:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801feb2:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801feb6:	ed8d 6a08 	vstr	s12, [sp, #32]
 801feba:	edcd 5a07 	vstr	s11, [sp, #28]
 801febe:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fec2:	ed8d 7a04 	vstr	s14, [sp, #16]
 801fec6:	edcd 7a05 	vstr	s15, [sp, #20]
 801feca:	f011 f943 	bl	8031154 <acosf>
 801fece:	eddd 7a02 	vldr	s15, [sp, #8]
 801fed2:	ed5f 0a60 	vldr	s1, [pc, #-384]	@ 801fd54 <calculate_aabb_per_shape+0x15c4>
 801fed6:	ee20 0a27 	vmul.f32	s0, s0, s15
 801feda:	ee30 0a20 	vadd.f32	s0, s0, s1
 801fede:	f011 f967 	bl	80311b0 <fmodf>
 801fee2:	ee28 3a2a 	vmul.f32	s6, s16, s21
 801fee6:	eddd 7a01 	vldr	s15, [sp, #4]
 801feea:	ee2c 3a03 	vmul.f32	s6, s24, s6
 801feee:	ee27 ba8b 	vmul.f32	s22, s15, s22
 801fef2:	ee33 3a28 	vadd.f32	s6, s6, s17
 801fef6:	ee33 3a0b 	vadd.f32	s6, s6, s22
 801fefa:	ee3a 4a69 	vsub.f32	s8, s20, s19
 801fefe:	ee33 3a68 	vsub.f32	s6, s6, s17
 801ff02:	ee24 2a04 	vmul.f32	s4, s8, s8
 801ff06:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ff0a:	ee23 3a03 	vmul.f32	s6, s6, s6
 801ff0e:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ff12:	ee32 0a03 	vadd.f32	s0, s4, s6
 801ff16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff1a:	eeb7 ba00 	vmov.f32	s22, #112	@ 0x3f800000  1.0
 801ff1e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ff22:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ff26:	fe3b ba21 	vselgt.f32	s22, s22, s3
 801ff2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff2e:	eef1 aac0 	vsqrt.f32	s21, s0
 801ff32:	ed9d 7a04 	vldr	s14, [sp, #16]
 801ff36:	eddd 7a05 	vldr	s15, [sp, #20]
 801ff3a:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ff3e:	eddd 5a07 	vldr	s11, [sp, #28]
 801ff42:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ff46:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ff4a:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ff4e:	f100 8130 	bmi.w	80201b2 <calculate_aabb_per_shape+0x1a22>
 801ff52:	ee84 0a2a 	vdiv.f32	s0, s8, s21
 801ff56:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801ff5a:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801ff5e:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801ff62:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801ff66:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801ff6a:	ed8d 7a07 	vstr	s14, [sp, #28]
 801ff6e:	edcd 7a08 	vstr	s15, [sp, #32]
 801ff72:	f011 f8ef 	bl	8031154 <acosf>
 801ff76:	ed5f 0a89 	vldr	s1, [pc, #-548]	@ 801fd54 <calculate_aabb_per_shape+0x15c4>
 801ff7a:	ee20 0a0b 	vmul.f32	s0, s0, s22
 801ff7e:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ff82:	f011 f915 	bl	80311b0 <fmodf>
 801ff86:	eddd 7a03 	vldr	s15, [sp, #12]
 801ff8a:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ff8e:	ee27 0a88 	vmul.f32	s0, s15, s16
 801ff92:	ee89 0a00 	vdiv.f32	s0, s18, s0
 801ff96:	f011 f949 	bl	803122c <atanf>
 801ff9a:	ed1f ba93 	vldr	s22, [pc, #-588]	@ 801fd50 <calculate_aabb_per_shape+0x15c0>
 801ff9e:	eef0 aa40 	vmov.f32	s21, s0
 801ffa2:	ee30 ba0b 	vadd.f32	s22, s0, s22
 801ffa6:	f011 fa15 	bl	80313d4 <cosf>
 801ffaa:	ee60 7a08 	vmul.f32	s15, s0, s16
 801ffae:	eeb0 0a6a 	vmov.f32	s0, s21
 801ffb2:	edcd 7a05 	vstr	s15, [sp, #20]
 801ffb6:	f011 fa59 	bl	803146c <sinf>
 801ffba:	eddd 7a05 	vldr	s15, [sp, #20]
 801ffbe:	ee20 7a09 	vmul.f32	s14, s0, s18
 801ffc2:	ee6c aa27 	vmul.f32	s21, s24, s15
 801ffc6:	eddd 6a01 	vldr	s13, [sp, #4]
 801ffca:	ee7a aaa8 	vadd.f32	s21, s21, s17
 801ffce:	ee26 3a87 	vmul.f32	s6, s13, s14
 801ffd2:	eeb0 0a4b 	vmov.f32	s0, s22
 801ffd6:	ee7a aa83 	vadd.f32	s21, s21, s6
 801ffda:	ed8d 7a06 	vstr	s14, [sp, #24]
 801ffde:	f011 f9f9 	bl	80313d4 <cosf>
 801ffe2:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ffe6:	eeb0 0a4b 	vmov.f32	s0, s22
 801ffea:	f011 fa3f 	bl	803146c <sinf>
 801ffee:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fff2:	ee24 3a08 	vmul.f32	s6, s8, s16
 801fff6:	eddd 6a01 	vldr	s13, [sp, #4]
 801fffa:	ee20 2a09 	vmul.f32	s4, s0, s18
 801fffe:	ee2c ba03 	vmul.f32	s22, s24, s6
 8020002:	ee66 1a82 	vmul.f32	s3, s13, s4
 8020006:	ee3b ba28 	vadd.f32	s22, s22, s17
 802000a:	ee3b ba21 	vadd.f32	s22, s22, s3
 802000e:	eef4 aacb 	vcmpe.f32	s21, s22
 8020012:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020016:	ed9d 7a07 	vldr	s14, [sp, #28]
 802001a:	eddd 7a08 	vldr	s15, [sp, #32]
 802001e:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020022:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020026:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802002a:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 802002e:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020032:	dc11      	bgt.n	8020058 <calculate_aabb_per_shape+0x18c8>
 8020034:	ee24 4a08 	vmul.f32	s8, s8, s16
 8020038:	eef0 1a4b 	vmov.f32	s3, s22
 802003c:	ed9d 3a05 	vldr	s6, [sp, #20]
 8020040:	ed8d 4a05 	vstr	s8, [sp, #20]
 8020044:	ee20 4a09 	vmul.f32	s8, s0, s18
 8020048:	ed9d 2a06 	vldr	s4, [sp, #24]
 802004c:	eeb0 ba6a 	vmov.f32	s22, s21
 8020050:	ed8d 4a06 	vstr	s8, [sp, #24]
 8020054:	eef0 aa61 	vmov.f32	s21, s3
 8020058:	ed9d 4a01 	vldr	s8, [sp, #4]
 802005c:	ee24 9a03 	vmul.f32	s18, s8, s6
 8020060:	ee2c 2a02 	vmul.f32	s4, s24, s4
 8020064:	ee39 9a29 	vadd.f32	s18, s18, s19
 8020068:	ee39 9a42 	vsub.f32	s18, s18, s4
 802006c:	ee3b 3a68 	vsub.f32	s6, s22, s17
 8020070:	ee39 9a69 	vsub.f32	s18, s18, s19
 8020074:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8020078:	ee29 2a09 	vmul.f32	s4, s18, s18
 802007c:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020080:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020088:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 802008c:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 8020090:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020094:	fe38 8a02 	vselgt.f32	s16, s16, s4
 8020098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802009c:	eeb1 4ac0 	vsqrt.f32	s8, s0
 80200a0:	f100 8460 	bmi.w	8020964 <calculate_aabb_per_shape+0x21d4>
 80200a4:	ee89 0a04 	vdiv.f32	s0, s18, s8
 80200a8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80200ac:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80200b0:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80200b4:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 80200b8:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 80200bc:	edcd 7a08 	vstr	s15, [sp, #32]
 80200c0:	ed8d 7a07 	vstr	s14, [sp, #28]
 80200c4:	f011 f846 	bl	8031154 <acosf>
 80200c8:	ed5f 0ade 	vldr	s1, [pc, #-888]	@ 801fd54 <calculate_aabb_per_shape+0x15c4>
 80200cc:	ee20 0a08 	vmul.f32	s0, s0, s16
 80200d0:	ee30 0a20 	vadd.f32	s0, s0, s1
 80200d4:	f011 f86c 	bl	80311b0 <fmodf>
 80200d8:	eddd 7a01 	vldr	s15, [sp, #4]
 80200dc:	ed9d 7a05 	vldr	s14, [sp, #20]
 80200e0:	ee27 9a87 	vmul.f32	s18, s15, s14
 80200e4:	eddd 7a06 	vldr	s15, [sp, #24]
 80200e8:	ee39 9a29 	vadd.f32	s18, s18, s19
 80200ec:	ee2c ca27 	vmul.f32	s24, s24, s15
 80200f0:	ee39 9a4c 	vsub.f32	s18, s18, s24
 80200f4:	ee3a 3ae8 	vsub.f32	s6, s21, s17
 80200f8:	ee39 9a69 	vsub.f32	s18, s18, s19
 80200fc:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8020100:	ee29 2a09 	vmul.f32	s4, s18, s18
 8020104:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020108:	ed8d 0a03 	vstr	s0, [sp, #12]
 802010c:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020114:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 8020118:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 802011c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020120:	fe38 8a02 	vselgt.f32	s16, s16, s4
 8020124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020128:	eeb1 cac0 	vsqrt.f32	s24, s0
 802012c:	ed9d 7a07 	vldr	s14, [sp, #28]
 8020130:	eddd 7a08 	vldr	s15, [sp, #32]
 8020134:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020138:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 802013c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020140:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020144:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020148:	f100 83ec 	bmi.w	8020924 <calculate_aabb_per_shape+0x2194>
 802014c:	ee89 0a0c 	vdiv.f32	s0, s18, s24
 8020150:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020154:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020158:	ed8d 6a08 	vstr	s12, [sp, #32]
 802015c:	edcd 5a07 	vstr	s11, [sp, #28]
 8020160:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020164:	edcd 7a05 	vstr	s15, [sp, #20]
 8020168:	ed8d 7a01 	vstr	s14, [sp, #4]
 802016c:	f010 fff2 	bl	8031154 <acosf>
 8020170:	eddf 0ad8 	vldr	s1, [pc, #864]	@ 80204d4 <calculate_aabb_per_shape+0x1d44>
 8020174:	ee20 0a08 	vmul.f32	s0, s0, s16
 8020178:	ee30 0a20 	vadd.f32	s0, s0, s1
 802017c:	f011 f818 	bl	80311b0 <fmodf>
 8020180:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020184:	eeb0 8a40 	vmov.f32	s16, s0
 8020188:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802018c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020190:	eddd 5a07 	vldr	s11, [sp, #28]
 8020194:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020198:	eddd 7a05 	vldr	s15, [sp, #20]
 802019c:	ed9d 7a01 	vldr	s14, [sp, #4]
 80201a0:	f7fe bdec 	b.w	801ed7c <calculate_aabb_per_shape+0x5ec>
 80201a4:	eeb4 3ac1 	vcmpe.f32	s6, s2
 80201a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80201ac:	f6be acb4 	bge.w	801eb18 <calculate_aabb_per_shape+0x388>
 80201b0:	e598      	b.n	801fce4 <calculate_aabb_per_shape+0x1554>
 80201b2:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80201b6:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 80201ba:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 80201be:	edcd 5a08 	vstr	s11, [sp, #32]
 80201c2:	ed8d 5a07 	vstr	s10, [sp, #28]
 80201c6:	ed8d 4a06 	vstr	s8, [sp, #24]
 80201ca:	f011 f811 	bl	80311f0 <sqrtf>
 80201ce:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 80201d2:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 80201d6:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 80201da:	eddd 5a08 	vldr	s11, [sp, #32]
 80201de:	ed9d 5a07 	vldr	s10, [sp, #28]
 80201e2:	ed9d 4a06 	vldr	s8, [sp, #24]
 80201e6:	eddd 7a05 	vldr	s15, [sp, #20]
 80201ea:	ed9d 7a04 	vldr	s14, [sp, #16]
 80201ee:	e6b0      	b.n	801ff52 <calculate_aabb_per_shape+0x17c2>
 80201f0:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 80201f4:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 80201f8:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 80201fc:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 8020200:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020204:	ed8d 2a07 	vstr	s4, [sp, #28]
 8020208:	ed8d 4a06 	vstr	s8, [sp, #24]
 802020c:	edcd 7a05 	vstr	s15, [sp, #20]
 8020210:	ed8d 7a04 	vstr	s14, [sp, #16]
 8020214:	f010 ffec 	bl	80311f0 <sqrtf>
 8020218:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 802021c:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 8020220:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 8020224:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020228:	ed9d 5a08 	vldr	s10, [sp, #32]
 802022c:	ed9d 2a07 	vldr	s4, [sp, #28]
 8020230:	ed9d 4a06 	vldr	s8, [sp, #24]
 8020234:	eddd 7a05 	vldr	s15, [sp, #20]
 8020238:	ed9d 7a04 	vldr	s14, [sp, #16]
 802023c:	e635      	b.n	801feaa <calculate_aabb_per_shape+0x171a>
 802023e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020242:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020246:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802024a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802024e:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020252:	edcd 1a07 	vstr	s3, [sp, #28]
 8020256:	ed8d 4a06 	vstr	s8, [sp, #24]
 802025a:	edcd 2a05 	vstr	s5, [sp, #20]
 802025e:	edcd 3a04 	vstr	s7, [sp, #16]
 8020262:	edcd 7a03 	vstr	s15, [sp, #12]
 8020266:	ed8d 7a02 	vstr	s14, [sp, #8]
 802026a:	f010 ffc1 	bl	80311f0 <sqrtf>
 802026e:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 8020272:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 8020276:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 802027a:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 802027e:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020282:	eddd 1a07 	vldr	s3, [sp, #28]
 8020286:	ed9d 4a06 	vldr	s8, [sp, #24]
 802028a:	eddd 2a05 	vldr	s5, [sp, #20]
 802028e:	eddd 3a04 	vldr	s7, [sp, #16]
 8020292:	eddd 7a03 	vldr	s15, [sp, #12]
 8020296:	ed9d 7a02 	vldr	s14, [sp, #8]
 802029a:	f7fe bbd8 	b.w	801ea4e <calculate_aabb_per_shape+0x2be>
 802029e:	2b03      	cmp	r3, #3
 80202a0:	eeb0 7a67 	vmov.f32	s14, s15
 80202a4:	f000 80d7 	beq.w	8020456 <calculate_aabb_per_shape+0x1cc6>
 80202a8:	2b0a      	cmp	r3, #10
 80202aa:	f040 8115 	bne.w	80204d8 <calculate_aabb_per_shape+0x1d48>
 80202ae:	ed94 2a04 	vldr	s4, [r4, #16]
 80202b2:	ed94 3a05 	vldr	s6, [r4, #20]
 80202b6:	eeb4 2a68 	vcmp.f32	s4, s17
 80202ba:	ed94 7a06 	vldr	s14, [r4, #24]
 80202be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202c2:	eeb4 3a49 	vcmp.f32	s6, s18
 80202c6:	edd4 1a07 	vldr	s3, [r4, #28]
 80202ca:	fe38 2a82 	vselgt.f32	s4, s17, s4
 80202ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202d2:	eeb4 7a68 	vcmp.f32	s14, s17
 80202d6:	fe39 3a03 	vselgt.f32	s6, s18, s6
 80202da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202de:	eef4 1a49 	vcmp.f32	s3, s18
 80202e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80202e6:	bf48      	it	mi
 80202e8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80202ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202f0:	ee17 3a90 	vmov	r3, s15
 80202f4:	bf48      	it	mi
 80202f6:	eef0 1a49 	vmovmi.f32	s3, s18
 80202fa:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80202fe:	105b      	asrs	r3, r3, #1
 8020300:	2b00      	cmp	r3, #0
 8020302:	ed84 2a04 	vstr	s4, [r4, #16]
 8020306:	ed84 3a05 	vstr	s6, [r4, #20]
 802030a:	ed84 7a06 	vstr	s14, [r4, #24]
 802030e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020312:	f340 80ba 	ble.w	802048a <calculate_aabb_per_shape+0x1cfa>
 8020316:	005b      	lsls	r3, r3, #1
 8020318:	eb03 0c07 	add.w	ip, r3, r7
 802031c:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 8020320:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020324:	f1b8 0f00 	cmp.w	r8, #0
 8020328:	d167      	bne.n	80203fa <calculate_aabb_per_shape+0x1c6a>
 802032a:	edd1 8a00 	vldr	s17, [r1]
 802032e:	ed91 9a01 	vldr	s18, [r1, #4]
 8020332:	eeb4 2a68 	vcmp.f32	s4, s17
 8020336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802033a:	eeb4 3a49 	vcmp.f32	s6, s18
 802033e:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020342:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020346:	eeb4 7a68 	vcmp.f32	s14, s17
 802034a:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802034e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020352:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020356:	bf48      	it	mi
 8020358:	eeb0 7a68 	vmovmi.f32	s14, s17
 802035c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020360:	ed84 2a04 	vstr	s4, [r4, #16]
 8020364:	ed84 3a05 	vstr	s6, [r4, #20]
 8020368:	ed84 7a06 	vstr	s14, [r4, #24]
 802036c:	f101 0108 	add.w	r1, r1, #8
 8020370:	dc7a      	bgt.n	8020468 <calculate_aabb_per_shape+0x1cd8>
 8020372:	4561      	cmp	r1, ip
 8020374:	edc4 1a07 	vstr	s3, [r4, #28]
 8020378:	d1d7      	bne.n	802032a <calculate_aabb_per_shape+0x1b9a>
 802037a:	441f      	add	r7, r3
 802037c:	ee78 7ace 	vsub.f32	s15, s17, s28
 8020380:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020388:	d106      	bne.n	8020398 <calculate_aabb_per_shape+0x1c08>
 802038a:	ee79 7a6c 	vsub.f32	s15, s18, s25
 802038e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020396:	d073      	beq.n	8020480 <calculate_aabb_per_shape+0x1cf0>
 8020398:	eeb4 ea42 	vcmp.f32	s28, s4
 802039c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203a0:	eef4 ca43 	vcmp.f32	s25, s6
 80203a4:	bf48      	it	mi
 80203a6:	eeb0 2a4e 	vmovmi.f32	s4, s28
 80203aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203ae:	eeb4 ea47 	vcmp.f32	s28, s14
 80203b2:	bf48      	it	mi
 80203b4:	eeb0 3a6c 	vmovmi.f32	s6, s25
 80203b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203bc:	eef4 ca61 	vcmp.f32	s25, s3
 80203c0:	fe3e 7a07 	vselgt.f32	s14, s28, s14
 80203c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203c8:	fe7c 1aa1 	vselgt.f32	s3, s25, s3
 80203cc:	ed84 7a06 	vstr	s14, [r4, #24]
 80203d0:	ed84 2a04 	vstr	s4, [r4, #16]
 80203d4:	ed84 3a05 	vstr	s6, [r4, #20]
 80203d8:	edc4 1a07 	vstr	s3, [r4, #28]
 80203dc:	eef0 7a6c 	vmov.f32	s15, s25
 80203e0:	eeb0 7a4e 	vmov.f32	s14, s28
 80203e4:	7812      	ldrb	r2, [r2, #0]
 80203e6:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 80203ea:	f7fe ba60 	b.w	801e8ae <calculate_aabb_per_shape+0x11e>
 80203ee:	4561      	cmp	r1, ip
 80203f0:	ed84 9a07 	vstr	s18, [r4, #28]
 80203f4:	eef0 1a49 	vmov.f32	s3, s18
 80203f8:	d0bf      	beq.n	802037a <calculate_aabb_per_shape+0x1bea>
 80203fa:	edd1 7a00 	vldr	s15, [r1]
 80203fe:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8020402:	edd1 7a01 	vldr	s15, [r1, #4]
 8020406:	eef4 8a42 	vcmp.f32	s17, s4
 802040a:	ee39 9a27 	vadd.f32	s18, s18, s15
 802040e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020412:	eeb4 9a43 	vcmp.f32	s18, s6
 8020416:	bf48      	it	mi
 8020418:	eeb0 2a68 	vmovmi.f32	s4, s17
 802041c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020420:	eef4 8a47 	vcmp.f32	s17, s14
 8020424:	bf48      	it	mi
 8020426:	eeb0 3a49 	vmovmi.f32	s6, s18
 802042a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802042e:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020432:	fe38 7a87 	vselgt.f32	s14, s17, s14
 8020436:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802043a:	ed84 2a04 	vstr	s4, [r4, #16]
 802043e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020442:	ed84 7a06 	vstr	s14, [r4, #24]
 8020446:	f101 0108 	add.w	r1, r1, #8
 802044a:	dcd0      	bgt.n	80203ee <calculate_aabb_per_shape+0x1c5e>
 802044c:	4561      	cmp	r1, ip
 802044e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020452:	d1d2      	bne.n	80203fa <calculate_aabb_per_shape+0x1c6a>
 8020454:	e791      	b.n	802037a <calculate_aabb_per_shape+0x1bea>
 8020456:	f1b8 0f00 	cmp.w	r8, #0
 802045a:	d00d      	beq.n	8020478 <calculate_aabb_per_shape+0x1ce8>
 802045c:	ee37 7aa8 	vadd.f32	s14, s15, s17
 8020460:	eef0 7a49 	vmov.f32	s15, s18
 8020464:	f7fe ba22 	b.w	801e8ac <calculate_aabb_per_shape+0x11c>
 8020468:	4561      	cmp	r1, ip
 802046a:	ed84 9a07 	vstr	s18, [r4, #28]
 802046e:	eef0 1a49 	vmov.f32	s3, s18
 8020472:	f47f af5a 	bne.w	802032a <calculate_aabb_per_shape+0x1b9a>
 8020476:	e780      	b.n	802037a <calculate_aabb_per_shape+0x1bea>
 8020478:	eef0 7a49 	vmov.f32	s15, s18
 802047c:	f7fe ba16 	b.w	801e8ac <calculate_aabb_per_shape+0x11c>
 8020480:	eef0 7a49 	vmov.f32	s15, s18
 8020484:	eeb0 7a68 	vmov.f32	s14, s17
 8020488:	e7ac      	b.n	80203e4 <calculate_aabb_per_shape+0x1c54>
 802048a:	4665      	mov	r5, ip
 802048c:	e776      	b.n	802037c <calculate_aabb_per_shape+0x1bec>
 802048e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020492:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020496:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802049a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802049e:	ed8d 5a08 	vstr	s10, [sp, #32]
 80204a2:	edcd 1a07 	vstr	s3, [sp, #28]
 80204a6:	edcd 7a06 	vstr	s15, [sp, #24]
 80204aa:	ed8d 7a05 	vstr	s14, [sp, #20]
 80204ae:	f010 fe9f 	bl	80311f0 <sqrtf>
 80204b2:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 80204b6:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 80204ba:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 80204be:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 80204c2:	ed9d 5a08 	vldr	s10, [sp, #32]
 80204c6:	eddd 1a07 	vldr	s3, [sp, #28]
 80204ca:	eddd 7a06 	vldr	s15, [sp, #24]
 80204ce:	ed9d 7a05 	vldr	s14, [sp, #20]
 80204d2:	e417      	b.n	801fd04 <calculate_aabb_per_shape+0x1574>
 80204d4:	40c90fdb 	.word	0x40c90fdb
 80204d8:	2b0b      	cmp	r3, #11
 80204da:	f47f aa0d 	bne.w	801f8f8 <calculate_aabb_per_shape+0x1168>
 80204de:	ed94 7a04 	vldr	s14, [r4, #16]
 80204e2:	ed94 3a05 	vldr	s6, [r4, #20]
 80204e6:	eeb4 7a68 	vcmp.f32	s14, s17
 80204ea:	ed94 2a06 	vldr	s4, [r4, #24]
 80204ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204f2:	eeb4 3a49 	vcmp.f32	s6, s18
 80204f6:	edd4 1a07 	vldr	s3, [r4, #28]
 80204fa:	fe38 7a87 	vselgt.f32	s14, s17, s14
 80204fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020502:	eeb4 2a68 	vcmp.f32	s4, s17
 8020506:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802050a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802050e:	eef4 1a49 	vcmp.f32	s3, s18
 8020512:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020516:	bf48      	it	mi
 8020518:	eeb0 2a68 	vmovmi.f32	s4, s17
 802051c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020520:	ee17 3a90 	vmov	r3, s15
 8020524:	bf48      	it	mi
 8020526:	eef0 1a49 	vmovmi.f32	s3, s18
 802052a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802052e:	105b      	asrs	r3, r3, #1
 8020530:	2b00      	cmp	r3, #0
 8020532:	ed84 7a04 	vstr	s14, [r4, #16]
 8020536:	ed84 3a05 	vstr	s6, [r4, #20]
 802053a:	ed84 2a06 	vstr	s4, [r4, #24]
 802053e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020542:	dd77      	ble.n	8020634 <calculate_aabb_per_shape+0x1ea4>
 8020544:	005b      	lsls	r3, r3, #1
 8020546:	eb03 0c07 	add.w	ip, r3, r7
 802054a:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 802054e:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020552:	f1b8 0f00 	cmp.w	r8, #0
 8020556:	d138      	bne.n	80205ca <calculate_aabb_per_shape+0x1e3a>
 8020558:	edd1 8a00 	vldr	s17, [r1]
 802055c:	ed91 9a01 	vldr	s18, [r1, #4]
 8020560:	eef4 8a47 	vcmp.f32	s17, s14
 8020564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020568:	eeb4 9a43 	vcmp.f32	s18, s6
 802056c:	bf48      	it	mi
 802056e:	eeb0 7a68 	vmovmi.f32	s14, s17
 8020572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020576:	eef4 8a42 	vcmp.f32	s17, s4
 802057a:	bf48      	it	mi
 802057c:	eeb0 3a49 	vmovmi.f32	s6, s18
 8020580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020584:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020588:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802058c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020590:	ed84 7a04 	vstr	s14, [r4, #16]
 8020594:	ed84 3a05 	vstr	s6, [r4, #20]
 8020598:	ed84 2a06 	vstr	s4, [r4, #24]
 802059c:	f101 0108 	add.w	r1, r1, #8
 80205a0:	dc41      	bgt.n	8020626 <calculate_aabb_per_shape+0x1e96>
 80205a2:	458c      	cmp	ip, r1
 80205a4:	edc4 1a07 	vstr	s3, [r4, #28]
 80205a8:	d1d6      	bne.n	8020558 <calculate_aabb_per_shape+0x1dc8>
 80205aa:	7812      	ldrb	r2, [r2, #0]
 80205ac:	441f      	add	r7, r3
 80205ae:	eef0 7a49 	vmov.f32	s15, s18
 80205b2:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 80205b6:	eeb0 7a68 	vmov.f32	s14, s17
 80205ba:	f7fe b978 	b.w	801e8ae <calculate_aabb_per_shape+0x11e>
 80205be:	4561      	cmp	r1, ip
 80205c0:	ed84 9a07 	vstr	s18, [r4, #28]
 80205c4:	d0f1      	beq.n	80205aa <calculate_aabb_per_shape+0x1e1a>
 80205c6:	eef0 1a49 	vmov.f32	s3, s18
 80205ca:	edd1 7a00 	vldr	s15, [r1]
 80205ce:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80205d2:	edd1 7a01 	vldr	s15, [r1, #4]
 80205d6:	eef4 8a47 	vcmp.f32	s17, s14
 80205da:	ee39 9a27 	vadd.f32	s18, s18, s15
 80205de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205e2:	eeb4 9a43 	vcmp.f32	s18, s6
 80205e6:	bf48      	it	mi
 80205e8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80205ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205f0:	eef4 8a42 	vcmp.f32	s17, s4
 80205f4:	bf48      	it	mi
 80205f6:	eeb0 3a49 	vmovmi.f32	s6, s18
 80205fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205fe:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020602:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802060a:	ed84 7a04 	vstr	s14, [r4, #16]
 802060e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020612:	ed84 2a06 	vstr	s4, [r4, #24]
 8020616:	f101 0108 	add.w	r1, r1, #8
 802061a:	dcd0      	bgt.n	80205be <calculate_aabb_per_shape+0x1e2e>
 802061c:	4561      	cmp	r1, ip
 802061e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020622:	d1d2      	bne.n	80205ca <calculate_aabb_per_shape+0x1e3a>
 8020624:	e7c1      	b.n	80205aa <calculate_aabb_per_shape+0x1e1a>
 8020626:	4561      	cmp	r1, ip
 8020628:	ed84 9a07 	vstr	s18, [r4, #28]
 802062c:	d0bd      	beq.n	80205aa <calculate_aabb_per_shape+0x1e1a>
 802062e:	eef0 1a49 	vmov.f32	s3, s18
 8020632:	e791      	b.n	8020558 <calculate_aabb_per_shape+0x1dc8>
 8020634:	7812      	ldrb	r2, [r2, #0]
 8020636:	4665      	mov	r5, ip
 8020638:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 802063c:	eef0 7a49 	vmov.f32	s15, s18
 8020640:	eeb0 7a68 	vmov.f32	s14, s17
 8020644:	f7fe b933 	b.w	801e8ae <calculate_aabb_per_shape+0x11e>
 8020648:	f010 fdd2 	bl	80311f0 <sqrtf>
 802064c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020650:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020654:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020658:	eddd 5a07 	vldr	s11, [sp, #28]
 802065c:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020660:	eddd 7a05 	vldr	s15, [sp, #20]
 8020664:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020668:	f7fe bbea 	b.w	801ee40 <calculate_aabb_per_shape+0x6b0>
 802066c:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8020670:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 8020674:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 8020678:	edcd 5a08 	vstr	s11, [sp, #32]
 802067c:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020680:	ed8d 2a06 	vstr	s4, [sp, #24]
 8020684:	edcd 7a05 	vstr	s15, [sp, #20]
 8020688:	ed8d 7a01 	vstr	s14, [sp, #4]
 802068c:	f010 fdb0 	bl	80311f0 <sqrtf>
 8020690:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 8020694:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 8020698:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 802069c:	eddd 5a08 	vldr	s11, [sp, #32]
 80206a0:	ed9d 5a07 	vldr	s10, [sp, #28]
 80206a4:	ed9d 2a06 	vldr	s4, [sp, #24]
 80206a8:	eddd 7a05 	vldr	s15, [sp, #20]
 80206ac:	ed9d 7a01 	vldr	s14, [sp, #4]
 80206b0:	f7fe bb80 	b.w	801edb4 <calculate_aabb_per_shape+0x624>
 80206b4:	eeb0 0a42 	vmov.f32	s0, s4
 80206b8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80206bc:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80206c0:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80206c4:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 80206c8:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 80206cc:	edcd 1a08 	vstr	s3, [sp, #32]
 80206d0:	ed8d 3a07 	vstr	s6, [sp, #28]
 80206d4:	ed8d 7a05 	vstr	s14, [sp, #20]
 80206d8:	ed8d 2a01 	vstr	s4, [sp, #4]
 80206dc:	edcd 7a06 	vstr	s15, [sp, #24]
 80206e0:	ed8d 4a03 	vstr	s8, [sp, #12]
 80206e4:	f010 fd84 	bl	80311f0 <sqrtf>
 80206e8:	ed9d 4a03 	vldr	s8, [sp, #12]
 80206ec:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 80206f0:	eeb0 0a48 	vmov.f32	s0, s16
 80206f4:	f010 fd2e 	bl	8031154 <acosf>
 80206f8:	eef0 7a4c 	vmov.f32	s15, s24
 80206fc:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020700:	eef0 0a4c 	vmov.f32	s1, s24
 8020704:	eeb0 0a67 	vmov.f32	s0, s15
 8020708:	f010 fd52 	bl	80311b0 <fmodf>
 802070c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8020710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020714:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020718:	ee78 aa89 	vadd.f32	s21, s17, s18
 802071c:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020720:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020724:	eddd 7a06 	vldr	s15, [sp, #24]
 8020728:	ed9d 3a07 	vldr	s6, [sp, #28]
 802072c:	eddd 1a08 	vldr	s3, [sp, #32]
 8020730:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020734:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020738:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802073c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020740:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020744:	dd49      	ble.n	80207da <calculate_aabb_per_shape+0x204a>
 8020746:	eeb0 9a43 	vmov.f32	s18, s6
 802074a:	eeb0 0a42 	vmov.f32	s0, s4
 802074e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020752:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020756:	ed8d 6a08 	vstr	s12, [sp, #32]
 802075a:	edcd 5a07 	vstr	s11, [sp, #28]
 802075e:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020762:	edcd 7a05 	vstr	s15, [sp, #20]
 8020766:	ed8d 7a01 	vstr	s14, [sp, #4]
 802076a:	f010 fd41 	bl	80311f0 <sqrtf>
 802076e:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020772:	eddd 7a05 	vldr	s15, [sp, #20]
 8020776:	ed9d 5a06 	vldr	s10, [sp, #24]
 802077a:	eddd 5a07 	vldr	s11, [sp, #28]
 802077e:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020782:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020786:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 802078a:	f7ff ba48 	b.w	801fc1e <calculate_aabb_per_shape+0x148e>
 802078e:	eeb0 0a4a 	vmov.f32	s0, s20
 8020792:	f010 fd2d 	bl	80311f0 <sqrtf>
 8020796:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 802079a:	f010 fcdb 	bl	8031154 <acosf>
 802079e:	ed5f 0ab3 	vldr	s1, [pc, #-716]	@ 80204d4 <calculate_aabb_per_shape+0x1d44>
 80207a2:	ee30 0ac0 	vsub.f32	s0, s1, s0
 80207a6:	f010 fd03 	bl	80311b0 <fmodf>
 80207aa:	ed8d 0a02 	vstr	s0, [sp, #8]
 80207ae:	eeb0 0a4a 	vmov.f32	s0, s20
 80207b2:	f010 fd1d 	bl	80311f0 <sqrtf>
 80207b6:	ee39 aa88 	vadd.f32	s20, s19, s16
 80207ba:	eddd 6a08 	vldr	s13, [sp, #32]
 80207be:	eddd 4a07 	vldr	s9, [sp, #28]
 80207c2:	ed9d 6a06 	vldr	s12, [sp, #24]
 80207c6:	eddd 5a05 	vldr	s11, [sp, #20]
 80207ca:	ed9d 5a04 	vldr	s10, [sp, #16]
 80207ce:	eddd 7a03 	vldr	s15, [sp, #12]
 80207d2:	ed9d 7a01 	vldr	s14, [sp, #4]
 80207d6:	f7ff b9a1 	b.w	801fb1c <calculate_aabb_per_shape+0x138c>
 80207da:	eeb5 2a40 	vcmp.f32	s4, #0.0
 80207de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207e2:	eeb0 9a61 	vmov.f32	s18, s3
 80207e6:	d4b0      	bmi.n	802074a <calculate_aabb_per_shape+0x1fba>
 80207e8:	f7ff ba19 	b.w	801fc1e <calculate_aabb_per_shape+0x148e>
 80207ec:	eeb0 0a42 	vmov.f32	s0, s4
 80207f0:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80207f4:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80207f8:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80207fc:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020800:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020804:	edcd 1a08 	vstr	s3, [sp, #32]
 8020808:	ed8d 3a07 	vstr	s6, [sp, #28]
 802080c:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020810:	ed8d 2a01 	vstr	s4, [sp, #4]
 8020814:	edcd 7a06 	vstr	s15, [sp, #24]
 8020818:	ed8d 4a03 	vstr	s8, [sp, #12]
 802081c:	f010 fce8 	bl	80311f0 <sqrtf>
 8020820:	ed9d 4a03 	vldr	s8, [sp, #12]
 8020824:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 8020828:	eeb0 0a49 	vmov.f32	s0, s18
 802082c:	f010 fc92 	bl	8031154 <acosf>
 8020830:	eef0 7a4c 	vmov.f32	s15, s24
 8020834:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020838:	eef0 0a4c 	vmov.f32	s1, s24
 802083c:	eeb0 0a67 	vmov.f32	s0, s15
 8020840:	f010 fcb6 	bl	80311b0 <fmodf>
 8020844:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8020848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802084c:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020850:	ee78 aa88 	vadd.f32	s21, s17, s16
 8020854:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020858:	ed9d 7a05 	vldr	s14, [sp, #20]
 802085c:	eddd 7a06 	vldr	s15, [sp, #24]
 8020860:	ed9d 3a07 	vldr	s6, [sp, #28]
 8020864:	eddd 1a08 	vldr	s3, [sp, #32]
 8020868:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 802086c:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020870:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020874:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020878:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 802087c:	dd49      	ble.n	8020912 <calculate_aabb_per_shape+0x2182>
 802087e:	eeb0 8a43 	vmov.f32	s16, s6
 8020882:	eeb0 0a42 	vmov.f32	s0, s4
 8020886:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 802088a:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 802088e:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020892:	edcd 5a07 	vstr	s11, [sp, #28]
 8020896:	ed8d 5a06 	vstr	s10, [sp, #24]
 802089a:	edcd 7a05 	vstr	s15, [sp, #20]
 802089e:	ed8d 7a01 	vstr	s14, [sp, #4]
 80208a2:	f010 fca5 	bl	80311f0 <sqrtf>
 80208a6:	ed9d 7a01 	vldr	s14, [sp, #4]
 80208aa:	eddd 7a05 	vldr	s15, [sp, #20]
 80208ae:	ed9d 5a06 	vldr	s10, [sp, #24]
 80208b2:	eddd 5a07 	vldr	s11, [sp, #28]
 80208b6:	ed9d 6a08 	vldr	s12, [sp, #32]
 80208ba:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80208be:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 80208c2:	f7fe ba31 	b.w	801ed28 <calculate_aabb_per_shape+0x598>
 80208c6:	eeb0 0a4a 	vmov.f32	s0, s20
 80208ca:	f010 fc91 	bl	80311f0 <sqrtf>
 80208ce:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 80208d2:	f010 fc3f 	bl	8031154 <acosf>
 80208d6:	eddf 0a35 	vldr	s1, [pc, #212]	@ 80209ac <calculate_aabb_per_shape+0x221c>
 80208da:	ee30 0ac0 	vsub.f32	s0, s1, s0
 80208de:	f010 fc67 	bl	80311b0 <fmodf>
 80208e2:	ed8d 0a02 	vstr	s0, [sp, #8]
 80208e6:	eeb0 0a4a 	vmov.f32	s0, s20
 80208ea:	f010 fc81 	bl	80311f0 <sqrtf>
 80208ee:	ee39 aa89 	vadd.f32	s20, s19, s18
 80208f2:	eddd 6a08 	vldr	s13, [sp, #32]
 80208f6:	eddd 4a07 	vldr	s9, [sp, #28]
 80208fa:	ed9d 6a06 	vldr	s12, [sp, #24]
 80208fe:	eddd 5a05 	vldr	s11, [sp, #20]
 8020902:	ed9d 5a04 	vldr	s10, [sp, #16]
 8020906:	eddd 7a03 	vldr	s15, [sp, #12]
 802090a:	ed9d 7a01 	vldr	s14, [sp, #4]
 802090e:	f7fe b98a 	b.w	801ec26 <calculate_aabb_per_shape+0x496>
 8020912:	eeb5 2a40 	vcmp.f32	s4, #0.0
 8020916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802091a:	eeb0 8a61 	vmov.f32	s16, s3
 802091e:	f57e aa03 	bpl.w	801ed28 <calculate_aabb_per_shape+0x598>
 8020922:	e7ae      	b.n	8020882 <calculate_aabb_per_shape+0x20f2>
 8020924:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020928:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 802092c:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020930:	edcd 5a07 	vstr	s11, [sp, #28]
 8020934:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020938:	edcd 7a05 	vstr	s15, [sp, #20]
 802093c:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020940:	f010 fc56 	bl	80311f0 <sqrtf>
 8020944:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020948:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802094c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020950:	eddd 5a07 	vldr	s11, [sp, #28]
 8020954:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020958:	eddd 7a05 	vldr	s15, [sp, #20]
 802095c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020960:	f7ff bbf4 	b.w	802014c <calculate_aabb_per_shape+0x19bc>
 8020964:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020968:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 802096c:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020970:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020974:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020978:	ed8d 4a08 	vstr	s8, [sp, #32]
 802097c:	edcd 7a07 	vstr	s15, [sp, #28]
 8020980:	ed8d 7a03 	vstr	s14, [sp, #12]
 8020984:	f010 fc34 	bl	80311f0 <sqrtf>
 8020988:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 802098c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020990:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020994:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020998:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 802099c:	ed9d 4a08 	vldr	s8, [sp, #32]
 80209a0:	eddd 7a07 	vldr	s15, [sp, #28]
 80209a4:	ed9d 7a03 	vldr	s14, [sp, #12]
 80209a8:	f7ff bb7c 	b.w	80200a4 <calculate_aabb_per_shape+0x1914>
 80209ac:	40c90fdb 	.word	0x40c90fdb

080209b0 <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 80209b0:	f7ea bb86 	b.w	800b0c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

080209b4 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 80209b4:	2200      	movs	r2, #0
 80209b6:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 80209ba:	f7ea ba85 	b.w	800aec8 <_ZN8touchgfx3HAL10beginFrameEv>
 80209be:	bf00      	nop

080209c0 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 80209c0:	b538      	push	{r3, r4, r5, lr}
 80209c2:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 80209c6:	4604      	mov	r4, r0
 80209c8:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 80209cc:	b12b      	cbz	r3, 80209da <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 80209ce:	2300      	movs	r3, #0
 80209d0:	4628      	mov	r0, r5
 80209d2:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 80209d6:	f7fd fa43 	bl	801de60 <nema_cl_submit>
 80209da:	4628      	mov	r0, r5
 80209dc:	f7fd faba 	bl	801df54 <nema_cl_wait>
 80209e0:	4620      	mov	r0, r4
 80209e2:	f7eb f827 	bl	800ba34 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 80209e6:	2300      	movs	r3, #0
 80209e8:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 80209ec:	bd38      	pop	{r3, r4, r5, pc}
 80209ee:	bf00      	nop

080209f0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>:
 80209f0:	b508      	push	{r3, lr}
 80209f2:	4a03      	ldr	r2, [pc, #12]	@ (8020a00 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x10>)
 80209f4:	4b03      	ldr	r3, [pc, #12]	@ (8020a04 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x14>)
 80209f6:	2118      	movs	r1, #24
 80209f8:	4803      	ldr	r0, [pc, #12]	@ (8020a08 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x18>)
 80209fa:	f011 fd5d 	bl	80324b8 <__assert_func>
 80209fe:	bf00      	nop
 8020a00:	08035f04 	.word	0x08035f04
 8020a04:	08035db0 	.word	0x08035db0
 8020a08:	08035e08 	.word	0x08035e08

08020a0c <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 8020a0c:	b538      	push	{r3, r4, r5, lr}
 8020a0e:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020a12:	4604      	mov	r4, r0
 8020a14:	b97b      	cbnz	r3, 8020a36 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 8020a16:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 8020a1a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 8020a1e:	b113      	cbz	r3, 8020a26 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 8020a20:	4628      	mov	r0, r5
 8020a22:	f7fd fa1d 	bl	801de60 <nema_cl_submit>
 8020a26:	4628      	mov	r0, r5
 8020a28:	f7fd fa94 	bl	801df54 <nema_cl_wait>
 8020a2c:	4620      	mov	r0, r4
 8020a2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020a32:	f7ea ba55 	b.w	800aee0 <_ZN8touchgfx3HAL8endFrameEv>
 8020a36:	6840      	ldr	r0, [r0, #4]
 8020a38:	4906      	ldr	r1, [pc, #24]	@ (8020a54 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 8020a3a:	6803      	ldr	r3, [r0, #0]
 8020a3c:	689a      	ldr	r2, [r3, #8]
 8020a3e:	428a      	cmp	r2, r1
 8020a40:	d105      	bne.n	8020a4e <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 8020a42:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020a44:	4798      	blx	r3
 8020a46:	2300      	movs	r3, #0
 8020a48:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020a4c:	e7e3      	b.n	8020a16 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 8020a4e:	4790      	blx	r2
 8020a50:	e7f9      	b.n	8020a46 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 8020a52:	bf00      	nop
 8020a54:	0800204d 	.word	0x0800204d

08020a58 <_ZN8touchgfx8HALGPU2D10initializeEv>:
 8020a58:	b570      	push	{r4, r5, r6, lr}
 8020a5a:	4606      	mov	r6, r0
 8020a5c:	b08a      	sub	sp, #40	@ 0x28
 8020a5e:	466c      	mov	r4, sp
 8020a60:	f7ea fa4b 	bl	800aefa <_ZN8touchgfx3HAL10initializeEv>
 8020a64:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020a68:	4668      	mov	r0, sp
 8020a6a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8020a6e:	f7fc ff59 	bl	801d924 <nema_cl_create_sized>
 8020a72:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020a74:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020a76:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020a78:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020a7a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020a7e:	e885 0003 	stmia.w	r5, {r0, r1}
 8020a82:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020a86:	b10b      	cbz	r3, 8020a8c <_ZN8touchgfx8HALGPU2D10initializeEv+0x34>
 8020a88:	b00a      	add	sp, #40	@ 0x28
 8020a8a:	bd70      	pop	{r4, r5, r6, pc}
 8020a8c:	f7ff ffb0 	bl	80209f0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020a90 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 8020a90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020a92:	f04f 0c01 	mov.w	ip, #1
 8020a96:	2500      	movs	r5, #0
 8020a98:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 8020a9c:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8020aa0:	60c3      	str	r3, [r0, #12]
 8020aa2:	42b7      	cmp	r7, r6
 8020aa4:	bf2c      	ite	cs
 8020aa6:	f04f 0e00 	movcs.w	lr, #0
 8020aaa:	f04f 0e01 	movcc.w	lr, #1
 8020aae:	4b23      	ldr	r3, [pc, #140]	@ (8020b3c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 8020ab0:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8020ab4:	6683      	str	r3, [r0, #104]	@ 0x68
 8020ab6:	4b22      	ldr	r3, [pc, #136]	@ (8020b40 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 8020ab8:	6105      	str	r5, [r0, #16]
 8020aba:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8020abe:	61c5      	str	r5, [r0, #28]
 8020ac0:	6205      	str	r5, [r0, #32]
 8020ac2:	8485      	strh	r5, [r0, #36]	@ 0x24
 8020ac4:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 8020ac8:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 8020acc:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8020ace:	8605      	strh	r5, [r0, #48]	@ 0x30
 8020ad0:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 8020ad4:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 8020ad8:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 8020adc:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 8020ae0:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 8020ae4:	64c5      	str	r5, [r0, #76]	@ 0x4c
 8020ae6:	6505      	str	r5, [r0, #80]	@ 0x50
 8020ae8:	6545      	str	r5, [r0, #84]	@ 0x54
 8020aea:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 8020aee:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 8020af2:	6645      	str	r5, [r0, #100]	@ 0x64
 8020af4:	66c5      	str	r5, [r0, #108]	@ 0x6c
 8020af6:	4a13      	ldr	r2, [pc, #76]	@ (8020b44 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 8020af8:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 8020afc:	6018      	str	r0, [r3, #0]
 8020afe:	4b12      	ldr	r3, [pc, #72]	@ (8020b48 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 8020b00:	8017      	strh	r7, [r2, #0]
 8020b02:	801f      	strh	r7, [r3, #0]
 8020b04:	4a11      	ldr	r2, [pc, #68]	@ (8020b4c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 8020b06:	4b12      	ldr	r3, [pc, #72]	@ (8020b50 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 8020b08:	8016      	strh	r6, [r2, #0]
 8020b0a:	801e      	strh	r6, [r3, #0]
 8020b0c:	4911      	ldr	r1, [pc, #68]	@ (8020b54 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 8020b0e:	4a12      	ldr	r2, [pc, #72]	@ (8020b58 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 8020b10:	4b12      	ldr	r3, [pc, #72]	@ (8020b5c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 8020b12:	700d      	strb	r5, [r1, #0]
 8020b14:	6002      	str	r2, [r0, #0]
 8020b16:	6018      	str	r0, [r3, #0]
 8020b18:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 8020b1c:	6745      	str	r5, [r0, #116]	@ 0x74
 8020b1e:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 8020b22:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 8020b26:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 8020b2a:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 8020b2e:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 8020b32:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 8020b36:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 8020b3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b3c:	01000001 	.word	0x01000001
 8020b40:	20082ec4 	.word	0x20082ec4
 8020b44:	20082eb8 	.word	0x20082eb8
 8020b48:	20082ebe 	.word	0x20082ebe
 8020b4c:	20082eba 	.word	0x20082eba
 8020b50:	20082ec0 	.word	0x20082ec0
 8020b54:	20082ebc 	.word	0x20082ebc
 8020b58:	08035e34 	.word	0x08035e34
 8020b5c:	20083364 	.word	0x20083364

08020b60 <_ZN8touchgfx8HALGPU2D10initializeEi>:
 8020b60:	b570      	push	{r4, r5, r6, lr}
 8020b62:	460c      	mov	r4, r1
 8020b64:	b08a      	sub	sp, #40	@ 0x28
 8020b66:	4606      	mov	r6, r0
 8020b68:	f7ea f9c7 	bl	800aefa <_ZN8touchgfx3HAL10initializeEv>
 8020b6c:	4621      	mov	r1, r4
 8020b6e:	466c      	mov	r4, sp
 8020b70:	4668      	mov	r0, sp
 8020b72:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020b76:	f7fc fed5 	bl	801d924 <nema_cl_create_sized>
 8020b7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020b7c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020b7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020b80:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020b82:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020b86:	e885 0003 	stmia.w	r5, {r0, r1}
 8020b8a:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020b8e:	b10b      	cbz	r3, 8020b94 <_ZN8touchgfx8HALGPU2D10initializeEi+0x34>
 8020b90:	b00a      	add	sp, #40	@ 0x28
 8020b92:	bd70      	pop	{r4, r5, r6, pc}
 8020b94:	f7ff ff2c 	bl	80209f0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 8020b98:	b510      	push	{r4, lr}
 8020b9a:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020b9e:	4604      	mov	r4, r0
 8020ba0:	b94b      	cbnz	r3, 8020bb6 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 8020ba2:	4620      	mov	r0, r4
 8020ba4:	2101      	movs	r1, #1
 8020ba6:	f7ea ff33 	bl	800ba10 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8020baa:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 8020bae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020bb2:	f7fc bfcb 	b.w	801db4c <nema_cl_bind_circular>
 8020bb6:	6840      	ldr	r0, [r0, #4]
 8020bb8:	4906      	ldr	r1, [pc, #24]	@ (8020bd4 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 8020bba:	6803      	ldr	r3, [r0, #0]
 8020bbc:	689a      	ldr	r2, [r3, #8]
 8020bbe:	428a      	cmp	r2, r1
 8020bc0:	d105      	bne.n	8020bce <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 8020bc2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020bc4:	4798      	blx	r3
 8020bc6:	2300      	movs	r3, #0
 8020bc8:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020bcc:	e7e9      	b.n	8020ba2 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 8020bce:	4790      	blx	r2
 8020bd0:	e7f9      	b.n	8020bc6 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 8020bd2:	bf00      	nop
 8020bd4:	0800204d 	.word	0x0800204d

08020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 8020bd8:	4603      	mov	r3, r0
 8020bda:	2200      	movs	r2, #0
 8020bdc:	307c      	adds	r0, #124	@ 0x7c
 8020bde:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8020be2:	f7fd b93d 	b.w	801de60 <nema_cl_submit>
 8020be6:	bf00      	nop

08020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8020be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bec:	b091      	sub	sp, #68	@ 0x44
 8020bee:	4604      	mov	r4, r0
 8020bf0:	461d      	mov	r5, r3
 8020bf2:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 8020bf6:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 8020bfa:	930d      	str	r3, [sp, #52]	@ 0x34
 8020bfc:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 8020c00:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8020c04:	307c      	adds	r0, #124	@ 0x7c
 8020c06:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8020c0a:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 8020c0e:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 8020c12:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 8020c16:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 8020c1a:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 8020c1e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020c20:	920c      	str	r2, [sp, #48]	@ 0x30
 8020c22:	f7fd f997 	bl	801df54 <nema_cl_wait>
 8020c26:	f04f 0e01 	mov.w	lr, #1
 8020c2a:	2000      	movs	r0, #0
 8020c2c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020c2e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020c30:	9208      	str	r2, [sp, #32]
 8020c32:	f8d4 c000 	ldr.w	ip, [r4]
 8020c36:	9307      	str	r3, [sp, #28]
 8020c38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020c3a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8020c3e:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 8020c42:	e9cd b305 	strd	fp, r3, [sp, #20]
 8020c46:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8020c4a:	9600      	str	r6, [sp, #0]
 8020c4c:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 8020c50:	9009      	str	r0, [sp, #36]	@ 0x24
 8020c52:	462b      	mov	r3, r5
 8020c54:	4620      	mov	r0, r4
 8020c56:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 8020c5a:	47a0      	blx	r4
 8020c5c:	b011      	add	sp, #68	@ 0x44
 8020c5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c62:	bf00      	nop

08020c64 <_ZN8touchgfx8LCDGPU2DD1Ev>:
 8020c64:	4770      	bx	lr
 8020c66:	bf00      	nop

08020c68 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 8020c68:	7b03      	ldrb	r3, [r0, #12]
 8020c6a:	2b02      	cmp	r3, #2
 8020c6c:	d004      	beq.n	8020c78 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 8020c6e:	2b01      	cmp	r3, #1
 8020c70:	bf0c      	ite	eq
 8020c72:	2018      	moveq	r0, #24
 8020c74:	2010      	movne	r0, #16
 8020c76:	4770      	bx	lr
 8020c78:	2020      	movs	r0, #32
 8020c7a:	4770      	bx	lr

08020c7c <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 8020c7c:	7b00      	ldrb	r0, [r0, #12]
 8020c7e:	4770      	bx	lr

08020c80 <_ZN8touchgfx8LCDGPU2D4initEv>:
 8020c80:	4770      	bx	lr
 8020c82:	bf00      	nop

08020c84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c88:	b087      	sub	sp, #28
 8020c8a:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8020c8e:	9102      	str	r1, [sp, #8]
 8020c90:	ea6f 0c05 	mvn.w	ip, r5
 8020c94:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020c98:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020c9a:	9203      	str	r2, [sp, #12]
 8020c9c:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 8020ca0:	6860      	ldr	r0, [r4, #4]
 8020ca2:	fa5f fc8c 	uxtb.w	ip, ip
 8020ca6:	fb00 2e01 	mla	lr, r0, r1, r2
 8020caa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020cac:	6820      	ldr	r0, [r4, #0]
 8020cae:	e9d2 2400 	ldrd	r2, r4, [r2]
 8020cb2:	3404      	adds	r4, #4
 8020cb4:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8020cb8:	fa1f fb85 	uxth.w	fp, r5
 8020cbc:	9405      	str	r4, [sp, #20]
 8020cbe:	9200      	str	r2, [sp, #0]
 8020cc0:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020cc4:	9c02      	ldr	r4, [sp, #8]
 8020cc6:	2c00      	cmp	r4, #0
 8020cc8:	dc03      	bgt.n	8020cd2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020cca:	9c03      	ldr	r4, [sp, #12]
 8020ccc:	2c00      	cmp	r4, #0
 8020cce:	f340 80c2 	ble.w	8020e56 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020cd2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020cd4:	2b00      	cmp	r3, #0
 8020cd6:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 8020cda:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020cde:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020ce2:	fa0f f48e 	sxth.w	r4, lr
 8020ce6:	fa0f f88a 	sxth.w	r8, sl
 8020cea:	f340 80b7 	ble.w	8020e5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020cee:	1415      	asrs	r5, r2, #16
 8020cf0:	d406      	bmi.n	8020d00 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020cf2:	42a5      	cmp	r5, r4
 8020cf4:	da04      	bge.n	8020d00 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020cf6:	ea5f 4921 	movs.w	r9, r1, asr #16
 8020cfa:	d401      	bmi.n	8020d00 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020cfc:	45c1      	cmp	r9, r8
 8020cfe:	db3e      	blt.n	8020d7e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8020d00:	3b01      	subs	r3, #1
 8020d02:	4432      	add	r2, r6
 8020d04:	4439      	add	r1, r7
 8020d06:	f100 0002 	add.w	r0, r0, #2
 8020d0a:	d1f0      	bne.n	8020cee <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020d0c:	9b02      	ldr	r3, [sp, #8]
 8020d0e:	2b00      	cmp	r3, #0
 8020d10:	f340 80a1 	ble.w	8020e56 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020d14:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020d18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d20:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d28:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020d2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d30:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020d34:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020d38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d3c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d40:	ee16 2a90 	vmov	r2, s13
 8020d44:	3b01      	subs	r3, #1
 8020d46:	9302      	str	r3, [sp, #8]
 8020d48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020d4a:	9c03      	ldr	r4, [sp, #12]
 8020d4c:	fb92 f6f3 	sdiv	r6, r2, r3
 8020d50:	ee17 2a10 	vmov	r2, s14
 8020d54:	eeb0 7a43 	vmov.f32	s14, s6
 8020d58:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d5c:	ee17 1a10 	vmov	r1, s14
 8020d60:	eeb0 7a62 	vmov.f32	s14, s5
 8020d64:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d68:	fb92 f7f3 	sdiv	r7, r2, r3
 8020d6c:	eeb0 3a67 	vmov.f32	s6, s15
 8020d70:	ee17 2a10 	vmov	r2, s14
 8020d74:	eef0 2a46 	vmov.f32	s5, s12
 8020d78:	bf08      	it	eq
 8020d7a:	4623      	moveq	r3, r4
 8020d7c:	e7a2      	b.n	8020cc4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020d7e:	9501      	str	r5, [sp, #4]
 8020d80:	1e5d      	subs	r5, r3, #1
 8020d82:	fb05 2906 	mla	r9, r5, r6, r2
 8020d86:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020d8a:	9504      	str	r5, [sp, #16]
 8020d8c:	d570      	bpl.n	8020e70 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8020d8e:	4680      	mov	r8, r0
 8020d90:	9d01      	ldr	r5, [sp, #4]
 8020d92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020d96:	4654      	mov	r4, sl
 8020d98:	4673      	mov	r3, lr
 8020d9a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020d9e:	e002      	b.n	8020da6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8020da0:	1415      	asrs	r5, r2, #16
 8020da2:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 8020da6:	2d00      	cmp	r5, #0
 8020da8:	4432      	add	r2, r6
 8020daa:	db4b      	blt.n	8020e44 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020dac:	429d      	cmp	r5, r3
 8020dae:	da49      	bge.n	8020e44 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020db0:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020db4:	d446      	bmi.n	8020e44 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020db6:	45a6      	cmp	lr, r4
 8020db8:	da44      	bge.n	8020e44 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020dba:	9c00      	ldr	r4, [sp, #0]
 8020dbc:	b21b      	sxth	r3, r3
 8020dbe:	fb0e 4303 	mla	r3, lr, r3, r4
 8020dc2:	5d5b      	ldrb	r3, [r3, r5]
 8020dc4:	9d05      	ldr	r5, [sp, #20]
 8020dc6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020dca:	441d      	add	r5, r3
 8020dcc:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020dd0:	786d      	ldrb	r5, [r5, #1]
 8020dd2:	f8b8 4000 	ldrh.w	r4, [r8]
 8020dd6:	fb15 f50b 	smulbb	r5, r5, fp
 8020dda:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020dde:	fa5f fe8e 	uxtb.w	lr, lr
 8020de2:	9501      	str	r5, [sp, #4]
 8020de4:	fb1e fe0c 	smulbb	lr, lr, ip
 8020de8:	9d05      	ldr	r5, [sp, #20]
 8020dea:	fb1a fa0b 	smulbb	sl, sl, fp
 8020dee:	5ced      	ldrb	r5, [r5, r3]
 8020df0:	1223      	asrs	r3, r4, #8
 8020df2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020df6:	fb05 ee0b 	mla	lr, r5, fp, lr
 8020dfa:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020dfe:	9d01      	ldr	r5, [sp, #4]
 8020e00:	10e4      	asrs	r4, r4, #3
 8020e02:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020e06:	fb04 540c 	mla	r4, r4, ip, r5
 8020e0a:	fa1f fe8e 	uxth.w	lr, lr
 8020e0e:	fa1f fa8a 	uxth.w	sl, sl
 8020e12:	f10e 0301 	add.w	r3, lr, #1
 8020e16:	f10a 0501 	add.w	r5, sl, #1
 8020e1a:	9301      	str	r3, [sp, #4]
 8020e1c:	b2a4      	uxth	r4, r4
 8020e1e:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 8020e22:	9d01      	ldr	r5, [sp, #4]
 8020e24:	1c63      	adds	r3, r4, #1
 8020e26:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020e2a:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8020e2e:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 8020e32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020e36:	0964      	lsrs	r4, r4, #5
 8020e38:	432b      	orrs	r3, r5
 8020e3a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020e3e:	4323      	orrs	r3, r4
 8020e40:	f8a8 3000 	strh.w	r3, [r8]
 8020e44:	f108 0802 	add.w	r8, r8, #2
 8020e48:	4580      	cmp	r8, r0
 8020e4a:	4439      	add	r1, r7
 8020e4c:	d1a8      	bne.n	8020da0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020e4e:	9b02      	ldr	r3, [sp, #8]
 8020e50:	2b00      	cmp	r3, #0
 8020e52:	f73f af5f 	bgt.w	8020d14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020e56:	b007      	add	sp, #28
 8020e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e5c:	f43f af56 	beq.w	8020d0c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e60:	1e5d      	subs	r5, r3, #1
 8020e62:	fb05 2906 	mla	r9, r5, r6, r2
 8020e66:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020e6a:	9504      	str	r5, [sp, #16]
 8020e6c:	f53f af4e 	bmi.w	8020d0c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e70:	454c      	cmp	r4, r9
 8020e72:	dd5b      	ble.n	8020f2c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e74:	9d04      	ldr	r5, [sp, #16]
 8020e76:	fb05 1507 	mla	r5, r5, r7, r1
 8020e7a:	142d      	asrs	r5, r5, #16
 8020e7c:	d456      	bmi.n	8020f2c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e7e:	4545      	cmp	r5, r8
 8020e80:	da54      	bge.n	8020f2c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e82:	2b00      	cmp	r3, #0
 8020e84:	f77f af42 	ble.w	8020d0c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e88:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020e8c:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8020e90:	9301      	str	r3, [sp, #4]
 8020e92:	e002      	b.n	8020e9a <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020e94:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020e96:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8020e9a:	9d00      	ldr	r5, [sp, #0]
 8020e9c:	140b      	asrs	r3, r1, #16
 8020e9e:	fb04 5303 	mla	r3, r4, r3, r5
 8020ea2:	1414      	asrs	r4, r2, #16
 8020ea4:	5d1b      	ldrb	r3, [r3, r4]
 8020ea6:	8804      	ldrh	r4, [r0, #0]
 8020ea8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020eac:	eb08 0503 	add.w	r5, r8, r3
 8020eb0:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020eb4:	f895 9001 	ldrb.w	r9, [r5, #1]
 8020eb8:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020ebc:	fa5f fe8e 	uxtb.w	lr, lr
 8020ec0:	fb1e fe0c 	smulbb	lr, lr, ip
 8020ec4:	fb19 f90b 	smulbb	r9, r9, fp
 8020ec8:	fb1a fa0b 	smulbb	sl, sl, fp
 8020ecc:	f818 5003 	ldrb.w	r5, [r8, r3]
 8020ed0:	1223      	asrs	r3, r4, #8
 8020ed2:	10e4      	asrs	r4, r4, #3
 8020ed4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020ed8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020edc:	fb05 e50b 	mla	r5, r5, fp, lr
 8020ee0:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020ee4:	fb04 940c 	mla	r4, r4, ip, r9
 8020ee8:	b2ad      	uxth	r5, r5
 8020eea:	fa1f fa8a 	uxth.w	sl, sl
 8020eee:	b2a4      	uxth	r4, r4
 8020ef0:	f10a 0301 	add.w	r3, sl, #1
 8020ef4:	f105 0e01 	add.w	lr, r5, #1
 8020ef8:	f104 0901 	add.w	r9, r4, #1
 8020efc:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8020f00:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8020f04:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 8020f08:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020f0c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020f10:	0964      	lsrs	r4, r4, #5
 8020f12:	ea43 030e 	orr.w	r3, r3, lr
 8020f16:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020f1a:	4323      	orrs	r3, r4
 8020f1c:	f820 3b02 	strh.w	r3, [r0], #2
 8020f20:	9b01      	ldr	r3, [sp, #4]
 8020f22:	4439      	add	r1, r7
 8020f24:	4298      	cmp	r0, r3
 8020f26:	4432      	add	r2, r6
 8020f28:	d1b4      	bne.n	8020e94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8020f2a:	e6ef      	b.n	8020d0c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f2c:	2b00      	cmp	r3, #0
 8020f2e:	f77f aeed 	ble.w	8020d0c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f32:	1414      	asrs	r4, r2, #16
 8020f34:	4680      	mov	r8, r0
 8020f36:	9401      	str	r4, [sp, #4]
 8020f38:	4625      	mov	r5, r4
 8020f3a:	e72a      	b.n	8020d92 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

08020f3c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f40:	4689      	mov	r9, r1
 8020f42:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8020f46:	46ca      	mov	sl, r9
 8020f48:	b087      	sub	sp, #28
 8020f4a:	9203      	str	r2, [sp, #12]
 8020f4c:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8020f50:	6854      	ldr	r4, [r2, #4]
 8020f52:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 8020f56:	fb04 1000 	mla	r0, r4, r0, r1
 8020f5a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020f5e:	6815      	ldr	r5, [r2, #0]
 8020f60:	e9dc 2400 	ldrd	r2, r4, [ip]
 8020f64:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8020f68:	f104 0b04 	add.w	fp, r4, #4
 8020f6c:	9205      	str	r2, [sp, #20]
 8020f6e:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020f72:	f1ba 0f00 	cmp.w	sl, #0
 8020f76:	dc03      	bgt.n	8020f80 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8020f78:	9c03      	ldr	r4, [sp, #12]
 8020f7a:	2c00      	cmp	r4, #0
 8020f7c:	f340 8095 	ble.w	80210aa <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8020f80:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8020f84:	2b00      	cmp	r3, #0
 8020f86:	fa0f f588 	sxth.w	r5, r8
 8020f8a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020f8e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020f92:	fa0f f48e 	sxth.w	r4, lr
 8020f96:	9502      	str	r5, [sp, #8]
 8020f98:	f340 808a 	ble.w	80210b0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8020f9c:	46f1      	mov	r9, lr
 8020f9e:	9401      	str	r4, [sp, #4]
 8020fa0:	1415      	asrs	r5, r2, #16
 8020fa2:	d408      	bmi.n	8020fb6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fa4:	9c01      	ldr	r4, [sp, #4]
 8020fa6:	42a5      	cmp	r5, r4
 8020fa8:	da05      	bge.n	8020fb6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020faa:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020fae:	d402      	bmi.n	8020fb6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fb0:	9c02      	ldr	r4, [sp, #8]
 8020fb2:	45a6      	cmp	lr, r4
 8020fb4:	db3b      	blt.n	802102e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 8020fb6:	3b01      	subs	r3, #1
 8020fb8:	4432      	add	r2, r6
 8020fba:	4439      	add	r1, r7
 8020fbc:	f100 0002 	add.w	r0, r0, #2
 8020fc0:	d1ee      	bne.n	8020fa0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8020fc2:	f1ba 0f00 	cmp.w	sl, #0
 8020fc6:	dd70      	ble.n	80210aa <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8020fc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020fcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020fd0:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8020fd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020fd8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020fdc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020fe0:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020fe4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020fe8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020ff0:	ee16 2a90 	vmov	r2, s13
 8020ff4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020ff6:	9c03      	ldr	r4, [sp, #12]
 8020ff8:	fb92 f6f3 	sdiv	r6, r2, r3
 8020ffc:	ee17 2a10 	vmov	r2, s14
 8021000:	eeb0 7a43 	vmov.f32	s14, s6
 8021004:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021008:	ee17 1a10 	vmov	r1, s14
 802100c:	eeb0 7a62 	vmov.f32	s14, s5
 8021010:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021014:	f1ba 0a01 	subs.w	sl, sl, #1
 8021018:	fb92 f7f3 	sdiv	r7, r2, r3
 802101c:	eeb0 3a67 	vmov.f32	s6, s15
 8021020:	ee17 2a10 	vmov	r2, s14
 8021024:	eef0 2a46 	vmov.f32	s5, s12
 8021028:	bf08      	it	eq
 802102a:	4623      	moveq	r3, r4
 802102c:	e7a1      	b.n	8020f72 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 802102e:	9c01      	ldr	r4, [sp, #4]
 8021030:	9501      	str	r5, [sp, #4]
 8021032:	1e5d      	subs	r5, r3, #1
 8021034:	46ce      	mov	lr, r9
 8021036:	fb05 2906 	mla	r9, r5, r6, r2
 802103a:	ea5f 4929 	movs.w	r9, r9, asr #16
 802103e:	9504      	str	r5, [sp, #16]
 8021040:	d53e      	bpl.n	80210c0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021042:	4604      	mov	r4, r0
 8021044:	9d01      	ldr	r5, [sp, #4]
 8021046:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802104a:	4673      	mov	r3, lr
 802104c:	46b6      	mov	lr, r6
 802104e:	4646      	mov	r6, r8
 8021050:	e002      	b.n	8021058 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021052:	1415      	asrs	r5, r2, #16
 8021054:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021058:	2d00      	cmp	r5, #0
 802105a:	4472      	add	r2, lr
 802105c:	db1e      	blt.n	802109c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802105e:	429d      	cmp	r5, r3
 8021060:	da1c      	bge.n	802109c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8021062:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021066:	d419      	bmi.n	802109c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8021068:	45b0      	cmp	r8, r6
 802106a:	da17      	bge.n	802109c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802106c:	9e05      	ldr	r6, [sp, #20]
 802106e:	b21b      	sxth	r3, r3
 8021070:	fb08 6303 	mla	r3, r8, r3, r6
 8021074:	5d5e      	ldrb	r6, [r3, r5]
 8021076:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802107a:	eb0b 0306 	add.w	r3, fp, r6
 802107e:	785d      	ldrb	r5, [r3, #1]
 8021080:	789b      	ldrb	r3, [r3, #2]
 8021082:	00ed      	lsls	r5, r5, #3
 8021084:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 8021088:	4d2d      	ldr	r5, [pc, #180]	@ (8021140 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 802108a:	f81b 6006 	ldrb.w	r6, [fp, r6]
 802108e:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8021092:	ea43 0308 	orr.w	r3, r3, r8
 8021096:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 802109a:	8023      	strh	r3, [r4, #0]
 802109c:	3402      	adds	r4, #2
 802109e:	4284      	cmp	r4, r0
 80210a0:	4439      	add	r1, r7
 80210a2:	d1d6      	bne.n	8021052 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80210a4:	f1ba 0f00 	cmp.w	sl, #0
 80210a8:	dc8e      	bgt.n	8020fc8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80210aa:	b007      	add	sp, #28
 80210ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210b0:	d087      	beq.n	8020fc2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80210b2:	1e5d      	subs	r5, r3, #1
 80210b4:	fb05 2906 	mla	r9, r5, r6, r2
 80210b8:	ea5f 4929 	movs.w	r9, r9, asr #16
 80210bc:	9504      	str	r5, [sp, #16]
 80210be:	d480      	bmi.n	8020fc2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80210c0:	454c      	cmp	r4, r9
 80210c2:	dd35      	ble.n	8021130 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80210c4:	9d04      	ldr	r5, [sp, #16]
 80210c6:	fb05 1507 	mla	r5, r5, r7, r1
 80210ca:	ea5f 4925 	movs.w	r9, r5, asr #16
 80210ce:	d42f      	bmi.n	8021130 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80210d0:	9d02      	ldr	r5, [sp, #8]
 80210d2:	45a9      	cmp	r9, r5
 80210d4:	da2c      	bge.n	8021130 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80210d6:	2b00      	cmp	r3, #0
 80210d8:	f77f af73 	ble.w	8020fc2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80210dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80210e0:	9d05      	ldr	r5, [sp, #20]
 80210e2:	4699      	mov	r9, r3
 80210e4:	46a6      	mov	lr, r4
 80210e6:	e001      	b.n	80210ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 80210e8:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80210ec:	140c      	asrs	r4, r1, #16
 80210ee:	fb0e 5404 	mla	r4, lr, r4, r5
 80210f2:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80210f6:	f814 e00e 	ldrb.w	lr, [r4, lr]
 80210fa:	4b11      	ldr	r3, [pc, #68]	@ (8021140 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 80210fc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8021100:	eb0b 040e 	add.w	r4, fp, lr
 8021104:	f894 8001 	ldrb.w	r8, [r4, #1]
 8021108:	78a4      	ldrb	r4, [r4, #2]
 802110a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 802110e:	f81b e00e 	ldrb.w	lr, [fp, lr]
 8021112:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021116:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 802111a:	ea44 0408 	orr.w	r4, r4, r8
 802111e:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 8021122:	f820 4b02 	strh.w	r4, [r0], #2
 8021126:	4548      	cmp	r0, r9
 8021128:	4439      	add	r1, r7
 802112a:	4432      	add	r2, r6
 802112c:	d1dc      	bne.n	80210e8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802112e:	e748      	b.n	8020fc2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021130:	2b00      	cmp	r3, #0
 8021132:	f77f af46 	ble.w	8020fc2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021136:	1415      	asrs	r5, r2, #16
 8021138:	4604      	mov	r4, r0
 802113a:	9501      	str	r5, [sp, #4]
 802113c:	e783      	b.n	8021046 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 802113e:	bf00      	nop
 8021140:	fffff800 	.word	0xfffff800

08021144 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021144:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802114c:	b087      	sub	sp, #28
 802114e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021152:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8021156:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 802115a:	6854      	ldr	r4, [r2, #4]
 802115c:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8021160:	fb04 1100 	mla	r1, r4, r0, r1
 8021164:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 8021168:	6810      	ldr	r0, [r2, #0]
 802116a:	e9db 2400 	ldrd	r2, r4, [fp]
 802116e:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 8021172:	1d21      	adds	r1, r4, #4
 8021174:	9505      	str	r5, [sp, #20]
 8021176:	9102      	str	r1, [sp, #8]
 8021178:	9201      	str	r2, [sp, #4]
 802117a:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 802117e:	9903      	ldr	r1, [sp, #12]
 8021180:	2900      	cmp	r1, #0
 8021182:	dc03      	bgt.n	802118c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021184:	9904      	ldr	r1, [sp, #16]
 8021186:	2900      	cmp	r1, #0
 8021188:	f340 80b6 	ble.w	80212f8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802118c:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 8021190:	2b00      	cmp	r3, #0
 8021192:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 8021196:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802119a:	b221      	sxth	r1, r4
 802119c:	b235      	sxth	r5, r6
 802119e:	f340 80ae 	ble.w	80212fe <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80211a2:	1438      	asrs	r0, r7, #16
 80211a4:	d406      	bmi.n	80211b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211a6:	4288      	cmp	r0, r1
 80211a8:	da04      	bge.n	80211b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211aa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80211ae:	d401      	bmi.n	80211b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211b0:	45ac      	cmp	ip, r5
 80211b2:	db3c      	blt.n	802122e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80211b4:	3b01      	subs	r3, #1
 80211b6:	444f      	add	r7, r9
 80211b8:	4452      	add	r2, sl
 80211ba:	f10e 0e02 	add.w	lr, lr, #2
 80211be:	d1f0      	bne.n	80211a2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80211c0:	9b03      	ldr	r3, [sp, #12]
 80211c2:	2b00      	cmp	r3, #0
 80211c4:	f340 8098 	ble.w	80212f8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80211c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80211cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80211d0:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80211d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80211d8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80211dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80211e0:	ee76 6a62 	vsub.f32	s13, s12, s5
 80211e4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80211e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80211f0:	ee16 2a90 	vmov	r2, s13
 80211f4:	3b01      	subs	r3, #1
 80211f6:	9303      	str	r3, [sp, #12]
 80211f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80211fa:	9904      	ldr	r1, [sp, #16]
 80211fc:	fb92 f9f3 	sdiv	r9, r2, r3
 8021200:	ee17 2a10 	vmov	r2, s14
 8021204:	eeb0 7a43 	vmov.f32	s14, s6
 8021208:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802120c:	fb92 faf3 	sdiv	sl, r2, r3
 8021210:	ee17 2a10 	vmov	r2, s14
 8021214:	eeb0 7a62 	vmov.f32	s14, s5
 8021218:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802121c:	eeb0 3a67 	vmov.f32	s6, s15
 8021220:	ee17 7a10 	vmov	r7, s14
 8021224:	eef0 2a46 	vmov.f32	s5, s12
 8021228:	bf08      	it	eq
 802122a:	460b      	moveq	r3, r1
 802122c:	e7a7      	b.n	802117e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802122e:	f103 38ff 	add.w	r8, r3, #4294967295
 8021232:	fb08 7c09 	mla	ip, r8, r9, r7
 8021236:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802123a:	d56a      	bpl.n	8021312 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 802123c:	4675      	mov	r5, lr
 802123e:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021242:	e002      	b.n	802124a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021244:	1438      	asrs	r0, r7, #16
 8021246:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 802124a:	2800      	cmp	r0, #0
 802124c:	444f      	add	r7, r9
 802124e:	db4b      	blt.n	80212e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021250:	42a0      	cmp	r0, r4
 8021252:	da49      	bge.n	80212e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021254:	1413      	asrs	r3, r2, #16
 8021256:	d447      	bmi.n	80212e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021258:	42b3      	cmp	r3, r6
 802125a:	b224      	sxth	r4, r4
 802125c:	da44      	bge.n	80212e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802125e:	9901      	ldr	r1, [sp, #4]
 8021260:	fb03 1404 	mla	r4, r3, r4, r1
 8021264:	9902      	ldr	r1, [sp, #8]
 8021266:	5c23      	ldrb	r3, [r4, r0]
 8021268:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 802126c:	0e0b      	lsrs	r3, r1, #24
 802126e:	d03b      	beq.n	80212e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021270:	9805      	ldr	r0, [sp, #20]
 8021272:	f3c1 4807 	ubfx	r8, r1, #16, #8
 8021276:	fb00 f003 	mul.w	r0, r0, r3
 802127a:	1c43      	adds	r3, r0, #1
 802127c:	eb03 2320 	add.w	r3, r3, r0, asr #8
 8021280:	121b      	asrs	r3, r3, #8
 8021282:	43d8      	mvns	r0, r3
 8021284:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 8021288:	b29b      	uxth	r3, r3
 802128a:	b2c9      	uxtb	r1, r1
 802128c:	882e      	ldrh	r6, [r5, #0]
 802128e:	fb1c fc03 	smulbb	ip, ip, r3
 8021292:	fb18 f803 	smulbb	r8, r8, r3
 8021296:	fb11 f303 	smulbb	r3, r1, r3
 802129a:	10f4      	asrs	r4, r6, #3
 802129c:	1231      	asrs	r1, r6, #8
 802129e:	00f6      	lsls	r6, r6, #3
 80212a0:	b2c0      	uxtb	r0, r0
 80212a2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80212a6:	b2f6      	uxtb	r6, r6
 80212a8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80212ac:	fb01 8800 	mla	r8, r1, r0, r8
 80212b0:	fb04 c400 	mla	r4, r4, r0, ip
 80212b4:	fb06 3100 	mla	r1, r6, r0, r3
 80212b8:	fa1f fc88 	uxth.w	ip, r8
 80212bc:	b289      	uxth	r1, r1
 80212be:	b2a4      	uxth	r4, r4
 80212c0:	1c4e      	adds	r6, r1, #1
 80212c2:	1c60      	adds	r0, r4, #1
 80212c4:	f10c 0301 	add.w	r3, ip, #1
 80212c8:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 80212cc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80212d0:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 80212d4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80212d8:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 80212dc:	0949      	lsrs	r1, r1, #5
 80212de:	4303      	orrs	r3, r0
 80212e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80212e4:	430b      	orrs	r3, r1
 80212e6:	802b      	strh	r3, [r5, #0]
 80212e8:	3502      	adds	r5, #2
 80212ea:	4575      	cmp	r5, lr
 80212ec:	4452      	add	r2, sl
 80212ee:	d1a9      	bne.n	8021244 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80212f0:	9b03      	ldr	r3, [sp, #12]
 80212f2:	2b00      	cmp	r3, #0
 80212f4:	f73f af68 	bgt.w	80211c8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80212f8:	b007      	add	sp, #28
 80212fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212fe:	f43f af5f 	beq.w	80211c0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021302:	f103 38ff 	add.w	r8, r3, #4294967295
 8021306:	fb08 7c09 	mla	ip, r8, r9, r7
 802130a:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802130e:	f53f af57 	bmi.w	80211c0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021312:	4561      	cmp	r1, ip
 8021314:	dd5c      	ble.n	80213d0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021316:	fb08 280a 	mla	r8, r8, sl, r2
 802131a:	ea5f 4828 	movs.w	r8, r8, asr #16
 802131e:	d457      	bmi.n	80213d0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021320:	45a8      	cmp	r8, r5
 8021322:	da55      	bge.n	80213d0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021324:	2b00      	cmp	r3, #0
 8021326:	f77f af4b 	ble.w	80211c0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802132a:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 802132e:	e001      	b.n	8021334 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021330:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 8021334:	9801      	ldr	r0, [sp, #4]
 8021336:	1413      	asrs	r3, r2, #16
 8021338:	fb01 0303 	mla	r3, r1, r3, r0
 802133c:	1439      	asrs	r1, r7, #16
 802133e:	5c5b      	ldrb	r3, [r3, r1]
 8021340:	9902      	ldr	r1, [sp, #8]
 8021342:	444f      	add	r7, r9
 8021344:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8021348:	4452      	add	r2, sl
 802134a:	0e18      	lsrs	r0, r3, #24
 802134c:	d03b      	beq.n	80213c6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802134e:	9905      	ldr	r1, [sp, #20]
 8021350:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8021354:	fb01 f100 	mul.w	r1, r1, r0
 8021358:	1c48      	adds	r0, r1, #1
 802135a:	eb00 2021 	add.w	r0, r0, r1, asr #8
 802135e:	1200      	asrs	r0, r0, #8
 8021360:	43c1      	mvns	r1, r0
 8021362:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021366:	b280      	uxth	r0, r0
 8021368:	b2db      	uxtb	r3, r3
 802136a:	f8be 5000 	ldrh.w	r5, [lr]
 802136e:	fb16 f600 	smulbb	r6, r6, r0
 8021372:	fb1c fc00 	smulbb	ip, ip, r0
 8021376:	fb13 f300 	smulbb	r3, r3, r0
 802137a:	122c      	asrs	r4, r5, #8
 802137c:	10e8      	asrs	r0, r5, #3
 802137e:	00ed      	lsls	r5, r5, #3
 8021380:	b2c9      	uxtb	r1, r1
 8021382:	b2ed      	uxtb	r5, r5
 8021384:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021388:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802138c:	fb00 6001 	mla	r0, r0, r1, r6
 8021390:	fb05 3301 	mla	r3, r5, r1, r3
 8021394:	fb04 c401 	mla	r4, r4, r1, ip
 8021398:	b280      	uxth	r0, r0
 802139a:	b2a4      	uxth	r4, r4
 802139c:	b29b      	uxth	r3, r3
 802139e:	1c65      	adds	r5, r4, #1
 80213a0:	1c5e      	adds	r6, r3, #1
 80213a2:	1c41      	adds	r1, r0, #1
 80213a4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80213a8:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80213ac:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80213b0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80213b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213b8:	0949      	lsrs	r1, r1, #5
 80213ba:	431c      	orrs	r4, r3
 80213bc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80213c0:	430c      	orrs	r4, r1
 80213c2:	f8ae 4000 	strh.w	r4, [lr]
 80213c6:	f10e 0e02 	add.w	lr, lr, #2
 80213ca:	45c6      	cmp	lr, r8
 80213cc:	d1b0      	bne.n	8021330 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80213ce:	e6f7      	b.n	80211c0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80213d0:	2b00      	cmp	r3, #0
 80213d2:	f77f aef5 	ble.w	80211c0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80213d6:	4675      	mov	r5, lr
 80213d8:	1438      	asrs	r0, r7, #16
 80213da:	e730      	b.n	802123e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

080213dc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80213dc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80213e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213e4:	b085      	sub	sp, #20
 80213e6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80213ea:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 80213ee:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 80213f2:	6854      	ldr	r4, [r2, #4]
 80213f4:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 80213f8:	fb04 1000 	mla	r0, r4, r0, r1
 80213fc:	6814      	ldr	r4, [r2, #0]
 80213fe:	e9db 2500 	ldrd	r2, r5, [fp]
 8021402:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 8021406:	1d28      	adds	r0, r5, #4
 8021408:	9001      	str	r0, [sp, #4]
 802140a:	9200      	str	r2, [sp, #0]
 802140c:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 8021410:	9802      	ldr	r0, [sp, #8]
 8021412:	2800      	cmp	r0, #0
 8021414:	dc03      	bgt.n	802141e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021416:	9803      	ldr	r0, [sp, #12]
 8021418:	2800      	cmp	r0, #0
 802141a:	f340 80b8 	ble.w	802158e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802141e:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 8021422:	2b00      	cmp	r3, #0
 8021424:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021428:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802142c:	b228      	sxth	r0, r5
 802142e:	b237      	sxth	r7, r6
 8021430:	f340 80b0 	ble.w	8021594 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021434:	140c      	asrs	r4, r1, #16
 8021436:	d406      	bmi.n	8021446 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021438:	4284      	cmp	r4, r0
 802143a:	da04      	bge.n	8021446 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802143c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8021440:	d401      	bmi.n	8021446 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021442:	45bc      	cmp	ip, r7
 8021444:	db3c      	blt.n	80214c0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 8021446:	3b01      	subs	r3, #1
 8021448:	4449      	add	r1, r9
 802144a:	4452      	add	r2, sl
 802144c:	f10e 0e02 	add.w	lr, lr, #2
 8021450:	d1f0      	bne.n	8021434 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021452:	9b02      	ldr	r3, [sp, #8]
 8021454:	2b00      	cmp	r3, #0
 8021456:	f340 809a 	ble.w	802158e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802145a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802145e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021462:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021466:	ee31 1a05 	vadd.f32	s2, s2, s10
 802146a:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802146e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021472:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021476:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802147a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802147e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021482:	ee16 2a90 	vmov	r2, s13
 8021486:	3b01      	subs	r3, #1
 8021488:	9302      	str	r3, [sp, #8]
 802148a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802148c:	9803      	ldr	r0, [sp, #12]
 802148e:	fb92 f9f3 	sdiv	r9, r2, r3
 8021492:	ee17 2a10 	vmov	r2, s14
 8021496:	eeb0 7a43 	vmov.f32	s14, s6
 802149a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802149e:	fb92 faf3 	sdiv	sl, r2, r3
 80214a2:	ee17 2a10 	vmov	r2, s14
 80214a6:	eeb0 7a62 	vmov.f32	s14, s5
 80214aa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214ae:	eeb0 3a67 	vmov.f32	s6, s15
 80214b2:	ee17 1a10 	vmov	r1, s14
 80214b6:	eef0 2a46 	vmov.f32	s5, s12
 80214ba:	bf08      	it	eq
 80214bc:	4603      	moveq	r3, r0
 80214be:	e7a7      	b.n	8021410 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80214c0:	f103 38ff 	add.w	r8, r3, #4294967295
 80214c4:	fb08 1c09 	mla	ip, r8, r9, r1
 80214c8:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80214cc:	d56c      	bpl.n	80215a8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 80214ce:	4677      	mov	r7, lr
 80214d0:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 80214d4:	e002      	b.n	80214dc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80214d6:	140c      	asrs	r4, r1, #16
 80214d8:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 80214dc:	2c00      	cmp	r4, #0
 80214de:	db4d      	blt.n	802157c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214e0:	42ac      	cmp	r4, r5
 80214e2:	da4b      	bge.n	802157c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214e4:	1413      	asrs	r3, r2, #16
 80214e6:	d449      	bmi.n	802157c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214e8:	42b3      	cmp	r3, r6
 80214ea:	b22d      	sxth	r5, r5
 80214ec:	da46      	bge.n	802157c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214ee:	9800      	ldr	r0, [sp, #0]
 80214f0:	fb03 0505 	mla	r5, r3, r5, r0
 80214f4:	9801      	ldr	r0, [sp, #4]
 80214f6:	5d2b      	ldrb	r3, [r5, r4]
 80214f8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80214fc:	0e18      	lsrs	r0, r3, #24
 80214fe:	28ff      	cmp	r0, #255	@ 0xff
 8021500:	f000 80c0 	beq.w	8021684 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021504:	b2c4      	uxtb	r4, r0
 8021506:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802150a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802150e:	b2a5      	uxth	r5, r4
 8021510:	b2db      	uxtb	r3, r3
 8021512:	b398      	cbz	r0, 802157c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021514:	43e4      	mvns	r4, r4
 8021516:	f8b7 8000 	ldrh.w	r8, [r7]
 802151a:	fb16 f605 	smulbb	r6, r6, r5
 802151e:	fb1c fc05 	smulbb	ip, ip, r5
 8021522:	fb13 f505 	smulbb	r5, r3, r5
 8021526:	ea4f 2028 	mov.w	r0, r8, asr #8
 802152a:	b2e3      	uxtb	r3, r4
 802152c:	ea4f 04e8 	mov.w	r4, r8, asr #3
 8021530:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8021534:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021538:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802153c:	fa5f f888 	uxtb.w	r8, r8
 8021540:	fb04 6403 	mla	r4, r4, r3, r6
 8021544:	fb00 cc03 	mla	ip, r0, r3, ip
 8021548:	fb08 5303 	mla	r3, r8, r3, r5
 802154c:	fa1f fc8c 	uxth.w	ip, ip
 8021550:	b298      	uxth	r0, r3
 8021552:	b2a5      	uxth	r5, r4
 8021554:	f10c 0301 	add.w	r3, ip, #1
 8021558:	1c44      	adds	r4, r0, #1
 802155a:	1c6e      	adds	r6, r5, #1
 802155c:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8021560:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021564:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 8021568:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802156c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8021570:	0940      	lsrs	r0, r0, #5
 8021572:	4323      	orrs	r3, r4
 8021574:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021578:	4303      	orrs	r3, r0
 802157a:	803b      	strh	r3, [r7, #0]
 802157c:	3702      	adds	r7, #2
 802157e:	4577      	cmp	r7, lr
 8021580:	4449      	add	r1, r9
 8021582:	4452      	add	r2, sl
 8021584:	d1a7      	bne.n	80214d6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8021586:	9b02      	ldr	r3, [sp, #8]
 8021588:	2b00      	cmp	r3, #0
 802158a:	f73f af66 	bgt.w	802145a <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 802158e:	b005      	add	sp, #20
 8021590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021594:	f43f af5d 	beq.w	8021452 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021598:	f103 38ff 	add.w	r8, r3, #4294967295
 802159c:	fb08 1c09 	mla	ip, r8, r9, r1
 80215a0:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80215a4:	f53f af55 	bmi.w	8021452 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80215a8:	4560      	cmp	r0, ip
 80215aa:	dd65      	ble.n	8021678 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215ac:	fb08 280a 	mla	r8, r8, sl, r2
 80215b0:	ea5f 4828 	movs.w	r8, r8, asr #16
 80215b4:	d460      	bmi.n	8021678 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215b6:	45b8      	cmp	r8, r7
 80215b8:	da5e      	bge.n	8021678 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215ba:	2b00      	cmp	r3, #0
 80215bc:	f77f af49 	ble.w	8021452 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80215c0:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 80215c4:	e03f      	b.n	8021646 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80215c6:	b2f0      	uxtb	r0, r6
 80215c8:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 80215cc:	f3c3 2707 	ubfx	r7, r3, #8, #8
 80215d0:	b284      	uxth	r4, r0
 80215d2:	b2db      	uxtb	r3, r3
 80215d4:	b376      	cbz	r6, 8021634 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80215d6:	43c0      	mvns	r0, r0
 80215d8:	f8be 6000 	ldrh.w	r6, [lr]
 80215dc:	fb17 f704 	smulbb	r7, r7, r4
 80215e0:	fb1c fc04 	smulbb	ip, ip, r4
 80215e4:	fb13 f304 	smulbb	r3, r3, r4
 80215e8:	1235      	asrs	r5, r6, #8
 80215ea:	10f4      	asrs	r4, r6, #3
 80215ec:	00f6      	lsls	r6, r6, #3
 80215ee:	b2c0      	uxtb	r0, r0
 80215f0:	b2f6      	uxtb	r6, r6
 80215f2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80215f6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80215fa:	fb04 7400 	mla	r4, r4, r0, r7
 80215fe:	fb06 3300 	mla	r3, r6, r0, r3
 8021602:	fb05 c500 	mla	r5, r5, r0, ip
 8021606:	b2a4      	uxth	r4, r4
 8021608:	b2ad      	uxth	r5, r5
 802160a:	b29b      	uxth	r3, r3
 802160c:	1c6e      	adds	r6, r5, #1
 802160e:	1c5f      	adds	r7, r3, #1
 8021610:	1c60      	adds	r0, r4, #1
 8021612:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8021616:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802161a:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802161e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021622:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021626:	0940      	lsrs	r0, r0, #5
 8021628:	432b      	orrs	r3, r5
 802162a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802162e:	4303      	orrs	r3, r0
 8021630:	f8ae 3000 	strh.w	r3, [lr]
 8021634:	f10e 0e02 	add.w	lr, lr, #2
 8021638:	45c6      	cmp	lr, r8
 802163a:	4449      	add	r1, r9
 802163c:	4452      	add	r2, sl
 802163e:	f43f af08 	beq.w	8021452 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021642:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 8021646:	9c00      	ldr	r4, [sp, #0]
 8021648:	1413      	asrs	r3, r2, #16
 802164a:	fb00 4303 	mla	r3, r0, r3, r4
 802164e:	1408      	asrs	r0, r1, #16
 8021650:	5c1b      	ldrb	r3, [r3, r0]
 8021652:	9801      	ldr	r0, [sp, #4]
 8021654:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8021658:	0e1e      	lsrs	r6, r3, #24
 802165a:	2eff      	cmp	r6, #255	@ 0xff
 802165c:	d1b3      	bne.n	80215c6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802165e:	0958      	lsrs	r0, r3, #5
 8021660:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 8021664:	480d      	ldr	r0, [pc, #52]	@ (802169c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 8021666:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 802166a:	4320      	orrs	r0, r4
 802166c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021670:	4303      	orrs	r3, r0
 8021672:	f8ae 3000 	strh.w	r3, [lr]
 8021676:	e7dd      	b.n	8021634 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8021678:	2b00      	cmp	r3, #0
 802167a:	f77f aeea 	ble.w	8021452 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802167e:	4677      	mov	r7, lr
 8021680:	140c      	asrs	r4, r1, #16
 8021682:	e725      	b.n	80214d0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 8021684:	0958      	lsrs	r0, r3, #5
 8021686:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 802168a:	4804      	ldr	r0, [pc, #16]	@ (802169c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 802168c:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 8021690:	4320      	orrs	r0, r4
 8021692:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021696:	4303      	orrs	r3, r0
 8021698:	803b      	strh	r3, [r7, #0]
 802169a:	e76f      	b.n	802157c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 802169c:	fffff800 	.word	0xfffff800

080216a0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80216a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216a4:	b089      	sub	sp, #36	@ 0x24
 80216a6:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 80216aa:	9104      	str	r1, [sp, #16]
 80216ac:	ea6f 0c05 	mvn.w	ip, r5
 80216b0:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 80216b4:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 80216b8:	6860      	ldr	r0, [r4, #4]
 80216ba:	9205      	str	r2, [sp, #20]
 80216bc:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 80216c0:	fb00 1102 	mla	r1, r0, r2, r1
 80216c4:	6824      	ldr	r4, [r4, #0]
 80216c6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80216ca:	4421      	add	r1, r4
 80216cc:	f8db 4004 	ldr.w	r4, [fp, #4]
 80216d0:	f8db 2000 	ldr.w	r2, [fp]
 80216d4:	3404      	adds	r4, #4
 80216d6:	fa5f fc8c 	uxtb.w	ip, ip
 80216da:	fa1f f985 	uxth.w	r9, r5
 80216de:	9407      	str	r4, [sp, #28]
 80216e0:	9202      	str	r2, [sp, #8]
 80216e2:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 80216e6:	9c04      	ldr	r4, [sp, #16]
 80216e8:	2c00      	cmp	r4, #0
 80216ea:	dc03      	bgt.n	80216f4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80216ec:	9c05      	ldr	r4, [sp, #20]
 80216ee:	2c00      	cmp	r4, #0
 80216f0:	f340 80b1 	ble.w	8021856 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80216f4:	e9db e802 	ldrd	lr, r8, [fp, #8]
 80216f8:	2b00      	cmp	r3, #0
 80216fa:	fa0f f588 	sxth.w	r5, r8
 80216fe:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021702:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 8021706:	fa0f f48e 	sxth.w	r4, lr
 802170a:	9503      	str	r5, [sp, #12]
 802170c:	f340 80a6 	ble.w	802185c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021710:	46f2      	mov	sl, lr
 8021712:	9401      	str	r4, [sp, #4]
 8021714:	1415      	asrs	r5, r2, #16
 8021716:	d408      	bmi.n	802172a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021718:	9c01      	ldr	r4, [sp, #4]
 802171a:	42a5      	cmp	r5, r4
 802171c:	da05      	bge.n	802172a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802171e:	ea5f 4e20 	movs.w	lr, r0, asr #16
 8021722:	d402      	bmi.n	802172a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021724:	9c03      	ldr	r4, [sp, #12]
 8021726:	45a6      	cmp	lr, r4
 8021728:	db3e      	blt.n	80217a8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 802172a:	3b01      	subs	r3, #1
 802172c:	4432      	add	r2, r6
 802172e:	4438      	add	r0, r7
 8021730:	f101 0103 	add.w	r1, r1, #3
 8021734:	d1ee      	bne.n	8021714 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021736:	9b04      	ldr	r3, [sp, #16]
 8021738:	2b00      	cmp	r3, #0
 802173a:	f340 808c 	ble.w	8021856 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802173e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021742:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021746:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802174a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802174e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021752:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021756:	ee61 7a27 	vmul.f32	s15, s2, s15
 802175a:	ee76 6a62 	vsub.f32	s13, s12, s5
 802175e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021762:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021766:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802176a:	ee16 2a90 	vmov	r2, s13
 802176e:	3b01      	subs	r3, #1
 8021770:	9304      	str	r3, [sp, #16]
 8021772:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021774:	9c05      	ldr	r4, [sp, #20]
 8021776:	fb92 f6f3 	sdiv	r6, r2, r3
 802177a:	ee17 2a10 	vmov	r2, s14
 802177e:	eeb0 7a43 	vmov.f32	s14, s6
 8021782:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021786:	ee17 0a10 	vmov	r0, s14
 802178a:	eeb0 7a62 	vmov.f32	s14, s5
 802178e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021792:	fb92 f7f3 	sdiv	r7, r2, r3
 8021796:	eeb0 3a67 	vmov.f32	s6, s15
 802179a:	ee17 2a10 	vmov	r2, s14
 802179e:	eef0 2a46 	vmov.f32	s5, s12
 80217a2:	bf08      	it	eq
 80217a4:	4623      	moveq	r3, r4
 80217a6:	e79e      	b.n	80216e6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80217a8:	9506      	str	r5, [sp, #24]
 80217aa:	1e5d      	subs	r5, r3, #1
 80217ac:	46d6      	mov	lr, sl
 80217ae:	fb05 2a06 	mla	sl, r5, r6, r2
 80217b2:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 80217b6:	9c01      	ldr	r4, [sp, #4]
 80217b8:	9501      	str	r5, [sp, #4]
 80217ba:	d559      	bpl.n	8021870 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80217bc:	460c      	mov	r4, r1
 80217be:	9d06      	ldr	r5, [sp, #24]
 80217c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80217c4:	4419      	add	r1, r3
 80217c6:	4673      	mov	r3, lr
 80217c8:	46b6      	mov	lr, r6
 80217ca:	4646      	mov	r6, r8
 80217cc:	e002      	b.n	80217d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80217ce:	1415      	asrs	r5, r2, #16
 80217d0:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 80217d4:	2d00      	cmp	r5, #0
 80217d6:	4472      	add	r2, lr
 80217d8:	db35      	blt.n	8021846 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217da:	429d      	cmp	r5, r3
 80217dc:	da33      	bge.n	8021846 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217de:	ea5f 4820 	movs.w	r8, r0, asr #16
 80217e2:	d430      	bmi.n	8021846 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217e4:	45b0      	cmp	r8, r6
 80217e6:	b21b      	sxth	r3, r3
 80217e8:	da2d      	bge.n	8021846 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217ea:	9e02      	ldr	r6, [sp, #8]
 80217ec:	fb08 6303 	mla	r3, r8, r3, r6
 80217f0:	7826      	ldrb	r6, [r4, #0]
 80217f2:	5d5b      	ldrb	r3, [r3, r5]
 80217f4:	fb16 f80c 	smulbb	r8, r6, ip
 80217f8:	9d07      	ldr	r5, [sp, #28]
 80217fa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80217fe:	5cee      	ldrb	r6, [r5, r3]
 8021800:	442b      	add	r3, r5
 8021802:	fb06 8609 	mla	r6, r6, r9, r8
 8021806:	b2b6      	uxth	r6, r6
 8021808:	7865      	ldrb	r5, [r4, #1]
 802180a:	f106 0801 	add.w	r8, r6, #1
 802180e:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 8021812:	1236      	asrs	r6, r6, #8
 8021814:	fb15 f80c 	smulbb	r8, r5, ip
 8021818:	7026      	strb	r6, [r4, #0]
 802181a:	785d      	ldrb	r5, [r3, #1]
 802181c:	78a6      	ldrb	r6, [r4, #2]
 802181e:	fb05 8509 	mla	r5, r5, r9, r8
 8021822:	b2ad      	uxth	r5, r5
 8021824:	f105 0801 	add.w	r8, r5, #1
 8021828:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 802182c:	122d      	asrs	r5, r5, #8
 802182e:	fb16 f60c 	smulbb	r6, r6, ip
 8021832:	7065      	strb	r5, [r4, #1]
 8021834:	789b      	ldrb	r3, [r3, #2]
 8021836:	fb03 6309 	mla	r3, r3, r9, r6
 802183a:	b29b      	uxth	r3, r3
 802183c:	1c5d      	adds	r5, r3, #1
 802183e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8021842:	121b      	asrs	r3, r3, #8
 8021844:	70a3      	strb	r3, [r4, #2]
 8021846:	3403      	adds	r4, #3
 8021848:	428c      	cmp	r4, r1
 802184a:	4438      	add	r0, r7
 802184c:	d1bf      	bne.n	80217ce <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802184e:	9b04      	ldr	r3, [sp, #16]
 8021850:	2b00      	cmp	r3, #0
 8021852:	f73f af74 	bgt.w	802173e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021856:	b009      	add	sp, #36	@ 0x24
 8021858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802185c:	f43f af6b 	beq.w	8021736 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021860:	1e5d      	subs	r5, r3, #1
 8021862:	fb05 2a06 	mla	sl, r5, r6, r2
 8021866:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 802186a:	9501      	str	r5, [sp, #4]
 802186c:	f53f af63 	bmi.w	8021736 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021870:	4554      	cmp	r4, sl
 8021872:	dd54      	ble.n	802191e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021874:	9d01      	ldr	r5, [sp, #4]
 8021876:	fb05 0507 	mla	r5, r5, r7, r0
 802187a:	ea5f 4a25 	movs.w	sl, r5, asr #16
 802187e:	d44e      	bmi.n	802191e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021880:	9d03      	ldr	r5, [sp, #12]
 8021882:	45aa      	cmp	sl, r5
 8021884:	da4b      	bge.n	802191e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021886:	2b00      	cmp	r3, #0
 8021888:	f77f af55 	ble.w	8021736 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802188c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021890:	eb01 0e03 	add.w	lr, r1, r3
 8021894:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8021898:	3103      	adds	r1, #3
 802189a:	e002      	b.n	80218a2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 802189c:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 80218a0:	3103      	adds	r1, #3
 80218a2:	9d02      	ldr	r5, [sp, #8]
 80218a4:	1403      	asrs	r3, r0, #16
 80218a6:	fb04 5303 	mla	r3, r4, r3, r5
 80218aa:	1415      	asrs	r5, r2, #16
 80218ac:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 80218b0:	5d5b      	ldrb	r3, [r3, r5]
 80218b2:	fb14 f40c 	smulbb	r4, r4, ip
 80218b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80218ba:	f818 5003 	ldrb.w	r5, [r8, r3]
 80218be:	4443      	add	r3, r8
 80218c0:	fb05 4509 	mla	r5, r5, r9, r4
 80218c4:	b2ad      	uxth	r5, r5
 80218c6:	f105 0a01 	add.w	sl, r5, #1
 80218ca:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 80218ce:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80218d2:	122d      	asrs	r5, r5, #8
 80218d4:	fb14 f40c 	smulbb	r4, r4, ip
 80218d8:	f801 5c03 	strb.w	r5, [r1, #-3]
 80218dc:	785d      	ldrb	r5, [r3, #1]
 80218de:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 80218e2:	fb05 4409 	mla	r4, r5, r9, r4
 80218e6:	b2a4      	uxth	r4, r4
 80218e8:	1c65      	adds	r5, r4, #1
 80218ea:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80218ee:	1224      	asrs	r4, r4, #8
 80218f0:	fb1a fa0c 	smulbb	sl, sl, ip
 80218f4:	f801 4c02 	strb.w	r4, [r1, #-2]
 80218f8:	789b      	ldrb	r3, [r3, #2]
 80218fa:	458e      	cmp	lr, r1
 80218fc:	fb03 aa09 	mla	sl, r3, r9, sl
 8021900:	fa1f fa8a 	uxth.w	sl, sl
 8021904:	f10a 0301 	add.w	r3, sl, #1
 8021908:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 802190c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021910:	4438      	add	r0, r7
 8021912:	4432      	add	r2, r6
 8021914:	f801 ac01 	strb.w	sl, [r1, #-1]
 8021918:	d1c0      	bne.n	802189c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802191a:	4671      	mov	r1, lr
 802191c:	e70b      	b.n	8021736 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802191e:	2b00      	cmp	r3, #0
 8021920:	f77f af09 	ble.w	8021736 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021924:	1415      	asrs	r5, r2, #16
 8021926:	460c      	mov	r4, r1
 8021928:	9506      	str	r5, [sp, #24]
 802192a:	e749      	b.n	80217c0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

0802192c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802192c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021930:	4689      	mov	r9, r1
 8021932:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021936:	46c8      	mov	r8, r9
 8021938:	b087      	sub	sp, #28
 802193a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 802193e:	684c      	ldr	r4, [r1, #4]
 8021940:	9203      	str	r2, [sp, #12]
 8021942:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021946:	fb04 0202 	mla	r2, r4, r2, r0
 802194a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802194e:	680d      	ldr	r5, [r1, #0]
 8021950:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021954:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021958:	f8dc 2000 	ldr.w	r2, [ip]
 802195c:	4428      	add	r0, r5
 802195e:	f104 0b04 	add.w	fp, r4, #4
 8021962:	9205      	str	r2, [sp, #20]
 8021964:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021968:	f1b8 0f00 	cmp.w	r8, #0
 802196c:	dc03      	bgt.n	8021976 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802196e:	9c03      	ldr	r4, [sp, #12]
 8021970:	2c00      	cmp	r4, #0
 8021972:	f340 808d 	ble.w	8021a90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021976:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 802197a:	2b00      	cmp	r3, #0
 802197c:	fa0f f58a 	sxth.w	r5, sl
 8021980:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021984:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021988:	fa0f f48e 	sxth.w	r4, lr
 802198c:	9502      	str	r5, [sp, #8]
 802198e:	f340 8082 	ble.w	8021a96 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8021992:	46f1      	mov	r9, lr
 8021994:	9401      	str	r4, [sp, #4]
 8021996:	1415      	asrs	r5, r2, #16
 8021998:	d408      	bmi.n	80219ac <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802199a:	9c01      	ldr	r4, [sp, #4]
 802199c:	42a5      	cmp	r5, r4
 802199e:	da05      	bge.n	80219ac <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219a0:	ea5f 4e21 	movs.w	lr, r1, asr #16
 80219a4:	d402      	bmi.n	80219ac <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219a6:	9c02      	ldr	r4, [sp, #8]
 80219a8:	45a6      	cmp	lr, r4
 80219aa:	db3b      	blt.n	8021a24 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 80219ac:	3b01      	subs	r3, #1
 80219ae:	4432      	add	r2, r6
 80219b0:	4439      	add	r1, r7
 80219b2:	f100 0003 	add.w	r0, r0, #3
 80219b6:	d1ee      	bne.n	8021996 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80219b8:	f1b8 0f00 	cmp.w	r8, #0
 80219bc:	dd68      	ble.n	8021a90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80219be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80219c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80219c6:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80219ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80219ce:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80219d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80219d6:	ee76 6a62 	vsub.f32	s13, s12, s5
 80219da:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80219de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80219e2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80219e6:	ee16 2a90 	vmov	r2, s13
 80219ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80219ec:	9c03      	ldr	r4, [sp, #12]
 80219ee:	fb92 f6f3 	sdiv	r6, r2, r3
 80219f2:	ee17 2a10 	vmov	r2, s14
 80219f6:	eeb0 7a43 	vmov.f32	s14, s6
 80219fa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80219fe:	ee17 1a10 	vmov	r1, s14
 8021a02:	eeb0 7a62 	vmov.f32	s14, s5
 8021a06:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a0a:	f1b8 0801 	subs.w	r8, r8, #1
 8021a0e:	fb92 f7f3 	sdiv	r7, r2, r3
 8021a12:	eeb0 3a67 	vmov.f32	s6, s15
 8021a16:	ee17 2a10 	vmov	r2, s14
 8021a1a:	eef0 2a46 	vmov.f32	s5, s12
 8021a1e:	bf08      	it	eq
 8021a20:	4623      	moveq	r3, r4
 8021a22:	e7a1      	b.n	8021968 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021a24:	9c01      	ldr	r4, [sp, #4]
 8021a26:	9501      	str	r5, [sp, #4]
 8021a28:	1e5d      	subs	r5, r3, #1
 8021a2a:	46ce      	mov	lr, r9
 8021a2c:	fb06 2905 	mla	r9, r6, r5, r2
 8021a30:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021a34:	9504      	str	r5, [sp, #16]
 8021a36:	d536      	bpl.n	8021aa6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8021a38:	4604      	mov	r4, r0
 8021a3a:	9d01      	ldr	r5, [sp, #4]
 8021a3c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a40:	4418      	add	r0, r3
 8021a42:	4673      	mov	r3, lr
 8021a44:	46b6      	mov	lr, r6
 8021a46:	4656      	mov	r6, sl
 8021a48:	e002      	b.n	8021a50 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021a4a:	1415      	asrs	r5, r2, #16
 8021a4c:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021a50:	2d00      	cmp	r5, #0
 8021a52:	4472      	add	r2, lr
 8021a54:	db15      	blt.n	8021a82 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a56:	429d      	cmp	r5, r3
 8021a58:	da13      	bge.n	8021a82 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a5a:	ea5f 4921 	movs.w	r9, r1, asr #16
 8021a5e:	d410      	bmi.n	8021a82 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a60:	45b1      	cmp	r9, r6
 8021a62:	da0e      	bge.n	8021a82 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a64:	9e05      	ldr	r6, [sp, #20]
 8021a66:	b21b      	sxth	r3, r3
 8021a68:	fb09 6303 	mla	r3, r9, r3, r6
 8021a6c:	5d5b      	ldrb	r3, [r3, r5]
 8021a6e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a72:	f81b 5003 	ldrb.w	r5, [fp, r3]
 8021a76:	445b      	add	r3, fp
 8021a78:	7025      	strb	r5, [r4, #0]
 8021a7a:	785d      	ldrb	r5, [r3, #1]
 8021a7c:	7065      	strb	r5, [r4, #1]
 8021a7e:	789b      	ldrb	r3, [r3, #2]
 8021a80:	70a3      	strb	r3, [r4, #2]
 8021a82:	3403      	adds	r4, #3
 8021a84:	4284      	cmp	r4, r0
 8021a86:	4439      	add	r1, r7
 8021a88:	d1df      	bne.n	8021a4a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8021a8a:	f1b8 0f00 	cmp.w	r8, #0
 8021a8e:	dc96      	bgt.n	80219be <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021a90:	b007      	add	sp, #28
 8021a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a96:	d08f      	beq.n	80219b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021a98:	1e5d      	subs	r5, r3, #1
 8021a9a:	fb06 2905 	mla	r9, r6, r5, r2
 8021a9e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021aa2:	9504      	str	r5, [sp, #16]
 8021aa4:	d488      	bmi.n	80219b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021aa6:	45a1      	cmp	r9, r4
 8021aa8:	da2d      	bge.n	8021b06 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021aaa:	9d04      	ldr	r5, [sp, #16]
 8021aac:	fb07 1505 	mla	r5, r7, r5, r1
 8021ab0:	ea5f 4925 	movs.w	r9, r5, asr #16
 8021ab4:	d427      	bmi.n	8021b06 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021ab6:	9d02      	ldr	r5, [sp, #8]
 8021ab8:	454d      	cmp	r5, r9
 8021aba:	dd24      	ble.n	8021b06 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021abc:	2b00      	cmp	r3, #0
 8021abe:	f77f af7b 	ble.w	80219b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ac2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ac6:	18c5      	adds	r5, r0, r3
 8021ac8:	f8dd e014 	ldr.w	lr, [sp, #20]
 8021acc:	3003      	adds	r0, #3
 8021ace:	e002      	b.n	8021ad6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8021ad0:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021ad4:	3003      	adds	r0, #3
 8021ad6:	140b      	asrs	r3, r1, #16
 8021ad8:	fb04 e303 	mla	r3, r4, r3, lr
 8021adc:	1414      	asrs	r4, r2, #16
 8021ade:	5d1b      	ldrb	r3, [r3, r4]
 8021ae0:	4285      	cmp	r5, r0
 8021ae2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ae6:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8021aea:	445b      	add	r3, fp
 8021aec:	f800 4c03 	strb.w	r4, [r0, #-3]
 8021af0:	785c      	ldrb	r4, [r3, #1]
 8021af2:	4439      	add	r1, r7
 8021af4:	f800 4c02 	strb.w	r4, [r0, #-2]
 8021af8:	789b      	ldrb	r3, [r3, #2]
 8021afa:	4432      	add	r2, r6
 8021afc:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021b00:	d1e6      	bne.n	8021ad0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021b02:	4628      	mov	r0, r5
 8021b04:	e758      	b.n	80219b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b06:	2b00      	cmp	r3, #0
 8021b08:	f77f af56 	ble.w	80219b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b0c:	1415      	asrs	r5, r2, #16
 8021b0e:	4604      	mov	r4, r0
 8021b10:	9501      	str	r5, [sp, #4]
 8021b12:	e793      	b.n	8021a3c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

08021b14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b18:	b087      	sub	sp, #28
 8021b1a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8021b1e:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021b22:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021b26:	684c      	ldr	r4, [r1, #4]
 8021b28:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021b2c:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8021b30:	fb04 0202 	mla	r2, r4, r2, r0
 8021b34:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 8021b38:	f8dc 2000 	ldr.w	r2, [ip]
 8021b3c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021b40:	9201      	str	r2, [sp, #4]
 8021b42:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021b46:	6808      	ldr	r0, [r1, #0]
 8021b48:	9204      	str	r2, [sp, #16]
 8021b4a:	1d22      	adds	r2, r4, #4
 8021b4c:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 8021b50:	9205      	str	r2, [sp, #20]
 8021b52:	4672      	mov	r2, lr
 8021b54:	4428      	add	r0, r5
 8021b56:	9c02      	ldr	r4, [sp, #8]
 8021b58:	2c00      	cmp	r4, #0
 8021b5a:	dc03      	bgt.n	8021b64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8021b5c:	9c03      	ldr	r4, [sp, #12]
 8021b5e:	2c00      	cmp	r4, #0
 8021b60:	f340 80ba 	ble.w	8021cd8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021b64:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8021b68:	2b00      	cmp	r3, #0
 8021b6a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021b6e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021b72:	fa0f f48e 	sxth.w	r4, lr
 8021b76:	fa0f f988 	sxth.w	r9, r8
 8021b7a:	f340 80b0 	ble.w	8021cde <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021b7e:	1415      	asrs	r5, r2, #16
 8021b80:	d406      	bmi.n	8021b90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021b82:	42a5      	cmp	r5, r4
 8021b84:	da04      	bge.n	8021b90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021b86:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8021b8a:	d401      	bmi.n	8021b90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021b8c:	45ca      	cmp	sl, r9
 8021b8e:	db3c      	blt.n	8021c0a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 8021b90:	3b01      	subs	r3, #1
 8021b92:	4432      	add	r2, r6
 8021b94:	4439      	add	r1, r7
 8021b96:	f100 0003 	add.w	r0, r0, #3
 8021b9a:	d1f0      	bne.n	8021b7e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021b9c:	9b02      	ldr	r3, [sp, #8]
 8021b9e:	2b00      	cmp	r3, #0
 8021ba0:	f340 809a 	ble.w	8021cd8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021ba4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ba8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021bac:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021bb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021bb4:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021bb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021bbc:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021bc0:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021bc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021bc8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021bcc:	ee16 2a90 	vmov	r2, s13
 8021bd0:	3b01      	subs	r3, #1
 8021bd2:	9302      	str	r3, [sp, #8]
 8021bd4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021bd6:	9c03      	ldr	r4, [sp, #12]
 8021bd8:	fb92 f6f3 	sdiv	r6, r2, r3
 8021bdc:	ee17 2a10 	vmov	r2, s14
 8021be0:	eeb0 7a43 	vmov.f32	s14, s6
 8021be4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021be8:	ee17 1a10 	vmov	r1, s14
 8021bec:	eeb0 7a62 	vmov.f32	s14, s5
 8021bf0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021bf4:	fb92 f7f3 	sdiv	r7, r2, r3
 8021bf8:	eeb0 3a67 	vmov.f32	s6, s15
 8021bfc:	ee17 2a10 	vmov	r2, s14
 8021c00:	eef0 2a46 	vmov.f32	s5, s12
 8021c04:	bf08      	it	eq
 8021c06:	4623      	moveq	r3, r4
 8021c08:	e7a5      	b.n	8021b56 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021c0a:	f103 3bff 	add.w	fp, r3, #4294967295
 8021c0e:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021c12:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021c16:	d56c      	bpl.n	8021cf2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8021c18:	4604      	mov	r4, r0
 8021c1a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021c1e:	4418      	add	r0, r3
 8021c20:	4673      	mov	r3, lr
 8021c22:	46b6      	mov	lr, r6
 8021c24:	4646      	mov	r6, r8
 8021c26:	e002      	b.n	8021c2e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021c28:	1415      	asrs	r5, r2, #16
 8021c2a:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021c2e:	2d00      	cmp	r5, #0
 8021c30:	4472      	add	r2, lr
 8021c32:	db49      	blt.n	8021cc8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c34:	429d      	cmp	r5, r3
 8021c36:	da47      	bge.n	8021cc8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c38:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021c3c:	d444      	bmi.n	8021cc8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c3e:	45b0      	cmp	r8, r6
 8021c40:	b21b      	sxth	r3, r3
 8021c42:	da41      	bge.n	8021cc8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c44:	9e01      	ldr	r6, [sp, #4]
 8021c46:	fb08 6303 	mla	r3, r8, r3, r6
 8021c4a:	5d5b      	ldrb	r3, [r3, r5]
 8021c4c:	9d05      	ldr	r5, [sp, #20]
 8021c4e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021c52:	0e1d      	lsrs	r5, r3, #24
 8021c54:	d038      	beq.n	8021cc8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c56:	9e04      	ldr	r6, [sp, #16]
 8021c58:	fa5f f983 	uxtb.w	r9, r3
 8021c5c:	fb06 f605 	mul.w	r6, r6, r5
 8021c60:	1c75      	adds	r5, r6, #1
 8021c62:	eb05 2526 	add.w	r5, r5, r6, asr #8
 8021c66:	122d      	asrs	r5, r5, #8
 8021c68:	43ee      	mvns	r6, r5
 8021c6a:	b2ad      	uxth	r5, r5
 8021c6c:	fb19 f905 	smulbb	r9, r9, r5
 8021c70:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8021c74:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021c78:	f894 a000 	ldrb.w	sl, [r4]
 8021c7c:	fb18 f805 	smulbb	r8, r8, r5
 8021c80:	fb13 f305 	smulbb	r3, r3, r5
 8021c84:	b2f5      	uxtb	r5, r6
 8021c86:	fb0a 9605 	mla	r6, sl, r5, r9
 8021c8a:	f894 b001 	ldrb.w	fp, [r4, #1]
 8021c8e:	f894 9002 	ldrb.w	r9, [r4, #2]
 8021c92:	fb0b 8805 	mla	r8, fp, r5, r8
 8021c96:	fb09 3305 	mla	r3, r9, r5, r3
 8021c9a:	fa1f fa86 	uxth.w	sl, r6
 8021c9e:	fa1f f888 	uxth.w	r8, r8
 8021ca2:	b29b      	uxth	r3, r3
 8021ca4:	f10a 0601 	add.w	r6, sl, #1
 8021ca8:	f108 0501 	add.w	r5, r8, #1
 8021cac:	f103 0901 	add.w	r9, r3, #1
 8021cb0:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 8021cb4:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8021cb8:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 8021cbc:	1236      	asrs	r6, r6, #8
 8021cbe:	122d      	asrs	r5, r5, #8
 8021cc0:	121b      	asrs	r3, r3, #8
 8021cc2:	7026      	strb	r6, [r4, #0]
 8021cc4:	7065      	strb	r5, [r4, #1]
 8021cc6:	70a3      	strb	r3, [r4, #2]
 8021cc8:	3403      	adds	r4, #3
 8021cca:	4284      	cmp	r4, r0
 8021ccc:	4439      	add	r1, r7
 8021cce:	d1ab      	bne.n	8021c28 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8021cd0:	9b02      	ldr	r3, [sp, #8]
 8021cd2:	2b00      	cmp	r3, #0
 8021cd4:	f73f af66 	bgt.w	8021ba4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021cd8:	b007      	add	sp, #28
 8021cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cde:	f43f af5d 	beq.w	8021b9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021ce2:	f103 3bff 	add.w	fp, r3, #4294967295
 8021ce6:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021cea:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021cee:	f53f af55 	bmi.w	8021b9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021cf2:	4554      	cmp	r4, sl
 8021cf4:	dd64      	ble.n	8021dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021cf6:	fb0b 1b07 	mla	fp, fp, r7, r1
 8021cfa:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8021cfe:	d45f      	bmi.n	8021dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d00:	45cb      	cmp	fp, r9
 8021d02:	da5d      	bge.n	8021dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d04:	2b00      	cmp	r3, #0
 8021d06:	f77f af49 	ble.w	8021b9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d0a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021d0e:	eb00 0e03 	add.w	lr, r0, r3
 8021d12:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8021d16:	3003      	adds	r0, #3
 8021d18:	e002      	b.n	8021d20 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021d1a:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021d1e:	3003      	adds	r0, #3
 8021d20:	9d01      	ldr	r5, [sp, #4]
 8021d22:	140b      	asrs	r3, r1, #16
 8021d24:	fb04 5303 	mla	r3, r4, r3, r5
 8021d28:	1414      	asrs	r4, r2, #16
 8021d2a:	5d1b      	ldrb	r3, [r3, r4]
 8021d2c:	4432      	add	r2, r6
 8021d2e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021d32:	4439      	add	r1, r7
 8021d34:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 8021d38:	d03e      	beq.n	8021db8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021d3a:	9c04      	ldr	r4, [sp, #16]
 8021d3c:	fa5f f983 	uxtb.w	r9, r3
 8021d40:	fb04 f40a 	mul.w	r4, r4, sl
 8021d44:	f104 0a01 	add.w	sl, r4, #1
 8021d48:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 8021d4c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021d50:	ea6f 040a 	mvn.w	r4, sl
 8021d54:	fa1f fa8a 	uxth.w	sl, sl
 8021d58:	fb19 f90a 	smulbb	r9, r9, sl
 8021d5c:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8021d60:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021d64:	fb15 fb0a 	smulbb	fp, r5, sl
 8021d68:	fb13 f30a 	smulbb	r3, r3, sl
 8021d6c:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 8021d70:	b2e4      	uxtb	r4, r4
 8021d72:	fb0a 9904 	mla	r9, sl, r4, r9
 8021d76:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 8021d7a:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 8021d7e:	fb05 b504 	mla	r5, r5, r4, fp
 8021d82:	fb0a 3304 	mla	r3, sl, r4, r3
 8021d86:	fa1f f989 	uxth.w	r9, r9
 8021d8a:	b2ad      	uxth	r5, r5
 8021d8c:	b29b      	uxth	r3, r3
 8021d8e:	f109 0b01 	add.w	fp, r9, #1
 8021d92:	f105 0a01 	add.w	sl, r5, #1
 8021d96:	1c5c      	adds	r4, r3, #1
 8021d98:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8021d9c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021da0:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8021da4:	ea4f 2929 	mov.w	r9, r9, asr #8
 8021da8:	122d      	asrs	r5, r5, #8
 8021daa:	121b      	asrs	r3, r3, #8
 8021dac:	f800 9c03 	strb.w	r9, [r0, #-3]
 8021db0:	f800 5c02 	strb.w	r5, [r0, #-2]
 8021db4:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021db8:	4586      	cmp	lr, r0
 8021dba:	d1ae      	bne.n	8021d1a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021dbc:	4670      	mov	r0, lr
 8021dbe:	e6ed      	b.n	8021b9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021dc0:	2b00      	cmp	r3, #0
 8021dc2:	f77f aeeb 	ble.w	8021b9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021dc6:	4604      	mov	r4, r0
 8021dc8:	1415      	asrs	r5, r2, #16
 8021dca:	e726      	b.n	8021c1a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

08021dcc <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021dcc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dd4:	b087      	sub	sp, #28
 8021dd6:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021dda:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021dde:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 8021de2:	684c      	ldr	r4, [r1, #4]
 8021de4:	680d      	ldr	r5, [r1, #0]
 8021de6:	fb04 0202 	mla	r2, r4, r2, r0
 8021dea:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 8021dee:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021df2:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021df6:	3404      	adds	r4, #4
 8021df8:	f8db 2000 	ldr.w	r2, [fp]
 8021dfc:	4428      	add	r0, r5
 8021dfe:	9402      	str	r4, [sp, #8]
 8021e00:	9201      	str	r2, [sp, #4]
 8021e02:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021e06:	9c03      	ldr	r4, [sp, #12]
 8021e08:	2c00      	cmp	r4, #0
 8021e0a:	dc03      	bgt.n	8021e14 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021e0c:	9c04      	ldr	r4, [sp, #16]
 8021e0e:	2c00      	cmp	r4, #0
 8021e10:	f340 80b7 	ble.w	8021f82 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021e14:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021e18:	2b00      	cmp	r3, #0
 8021e1a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021e1e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021e22:	b234      	sxth	r4, r6
 8021e24:	fa0f fc87 	sxth.w	ip, r7
 8021e28:	f340 80ae 	ble.w	8021f88 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021e2c:	1415      	asrs	r5, r2, #16
 8021e2e:	d406      	bmi.n	8021e3e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e30:	42a5      	cmp	r5, r4
 8021e32:	da04      	bge.n	8021e3e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e34:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021e38:	d401      	bmi.n	8021e3e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e3a:	45e6      	cmp	lr, ip
 8021e3c:	db3c      	blt.n	8021eb8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 8021e3e:	3b01      	subs	r3, #1
 8021e40:	4442      	add	r2, r8
 8021e42:	4449      	add	r1, r9
 8021e44:	f100 0003 	add.w	r0, r0, #3
 8021e48:	d1f0      	bne.n	8021e2c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8021e4a:	9b03      	ldr	r3, [sp, #12]
 8021e4c:	2b00      	cmp	r3, #0
 8021e4e:	f340 8098 	ble.w	8021f82 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021e52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e5a:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021e5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e62:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021e66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e6a:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021e6e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021e72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e76:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021e7a:	ee16 2a90 	vmov	r2, s13
 8021e7e:	3b01      	subs	r3, #1
 8021e80:	9303      	str	r3, [sp, #12]
 8021e82:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021e84:	9c04      	ldr	r4, [sp, #16]
 8021e86:	fb92 f8f3 	sdiv	r8, r2, r3
 8021e8a:	ee17 2a10 	vmov	r2, s14
 8021e8e:	eeb0 7a43 	vmov.f32	s14, s6
 8021e92:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021e96:	ee17 1a10 	vmov	r1, s14
 8021e9a:	eeb0 7a62 	vmov.f32	s14, s5
 8021e9e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ea2:	fb92 f9f3 	sdiv	r9, r2, r3
 8021ea6:	eeb0 3a67 	vmov.f32	s6, s15
 8021eaa:	ee17 2a10 	vmov	r2, s14
 8021eae:	eef0 2a46 	vmov.f32	s5, s12
 8021eb2:	bf08      	it	eq
 8021eb4:	4623      	moveq	r3, r4
 8021eb6:	e7a6      	b.n	8021e06 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021eb8:	f103 3aff 	add.w	sl, r3, #4294967295
 8021ebc:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021ec0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021ec4:	d56a      	bpl.n	8021f9c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021ec6:	4604      	mov	r4, r0
 8021ec8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ecc:	4418      	add	r0, r3
 8021ece:	e002      	b.n	8021ed6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 8021ed0:	1415      	asrs	r5, r2, #16
 8021ed2:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021ed6:	2d00      	cmp	r5, #0
 8021ed8:	db4a      	blt.n	8021f70 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021eda:	42b5      	cmp	r5, r6
 8021edc:	da48      	bge.n	8021f70 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021ede:	140b      	asrs	r3, r1, #16
 8021ee0:	d446      	bmi.n	8021f70 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021ee2:	42bb      	cmp	r3, r7
 8021ee4:	b236      	sxth	r6, r6
 8021ee6:	da43      	bge.n	8021f70 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021ee8:	9f01      	ldr	r7, [sp, #4]
 8021eea:	fb03 7606 	mla	r6, r3, r6, r7
 8021eee:	5d73      	ldrb	r3, [r6, r5]
 8021ef0:	9d02      	ldr	r5, [sp, #8]
 8021ef2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021ef6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021efa:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021efe:	f000 80be 	beq.w	802207e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8021f02:	b2df      	uxtb	r7, r3
 8021f04:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021f08:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8021f0c:	fa5f f38c 	uxtb.w	r3, ip
 8021f10:	b29d      	uxth	r5, r3
 8021f12:	f1bc 0f00 	cmp.w	ip, #0
 8021f16:	d02b      	beq.n	8021f70 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f18:	43db      	mvns	r3, r3
 8021f1a:	b2db      	uxtb	r3, r3
 8021f1c:	9305      	str	r3, [sp, #20]
 8021f1e:	f894 e001 	ldrb.w	lr, [r4, #1]
 8021f22:	fb17 f305 	smulbb	r3, r7, r5
 8021f26:	9f05      	ldr	r7, [sp, #20]
 8021f28:	f894 c002 	ldrb.w	ip, [r4, #2]
 8021f2c:	fb1e fe07 	smulbb	lr, lr, r7
 8021f30:	fb1c fc07 	smulbb	ip, ip, r7
 8021f34:	fb06 ee05 	mla	lr, r6, r5, lr
 8021f38:	7827      	ldrb	r7, [r4, #0]
 8021f3a:	9e05      	ldr	r6, [sp, #20]
 8021f3c:	fb0a c505 	mla	r5, sl, r5, ip
 8021f40:	fb07 3706 	mla	r7, r7, r6, r3
 8021f44:	b2ab      	uxth	r3, r5
 8021f46:	b2bf      	uxth	r7, r7
 8021f48:	fa1f f68e 	uxth.w	r6, lr
 8021f4c:	1c7d      	adds	r5, r7, #1
 8021f4e:	f106 0e01 	add.w	lr, r6, #1
 8021f52:	f103 0c01 	add.w	ip, r3, #1
 8021f56:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8021f5a:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 8021f5e:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 8021f62:	121b      	asrs	r3, r3, #8
 8021f64:	ea4f 272e 	mov.w	r7, lr, asr #8
 8021f68:	1235      	asrs	r5, r6, #8
 8021f6a:	7067      	strb	r7, [r4, #1]
 8021f6c:	70a5      	strb	r5, [r4, #2]
 8021f6e:	7023      	strb	r3, [r4, #0]
 8021f70:	3403      	adds	r4, #3
 8021f72:	4284      	cmp	r4, r0
 8021f74:	4442      	add	r2, r8
 8021f76:	4449      	add	r1, r9
 8021f78:	d1aa      	bne.n	8021ed0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8021f7a:	9b03      	ldr	r3, [sp, #12]
 8021f7c:	2b00      	cmp	r3, #0
 8021f7e:	f73f af68 	bgt.w	8021e52 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021f82:	b007      	add	sp, #28
 8021f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f88:	f43f af5f 	beq.w	8021e4a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021f8c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021f90:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021f94:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021f98:	f53f af57 	bmi.w	8021e4a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021f9c:	4574      	cmp	r4, lr
 8021f9e:	dd68      	ble.n	8022072 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021fa0:	fb0a 1a09 	mla	sl, sl, r9, r1
 8021fa4:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021fa8:	d463      	bmi.n	8022072 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021faa:	45e2      	cmp	sl, ip
 8021fac:	da61      	bge.n	8022072 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021fae:	2b00      	cmp	r3, #0
 8021fb0:	f77f af4b 	ble.w	8021e4a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021fb4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021fb8:	eb00 0e03 	add.w	lr, r0, r3
 8021fbc:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 8021fc0:	3003      	adds	r0, #3
 8021fc2:	e03b      	b.n	802203c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021fc4:	b2fc      	uxtb	r4, r7
 8021fc6:	fa5f fc83 	uxtb.w	ip, r3
 8021fca:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021fce:	b2a5      	uxth	r5, r4
 8021fd0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021fd4:	b357      	cbz	r7, 802202c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8021fd6:	43e4      	mvns	r4, r4
 8021fd8:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 8021fdc:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 8021fe0:	b2e4      	uxtb	r4, r4
 8021fe2:	fb1c fc05 	smulbb	ip, ip, r5
 8021fe6:	fb18 f804 	smulbb	r8, r8, r4
 8021fea:	fb1a fa04 	smulbb	sl, sl, r4
 8021fee:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 8021ff2:	fb03 8305 	mla	r3, r3, r5, r8
 8021ff6:	fb06 a605 	mla	r6, r6, r5, sl
 8021ffa:	fb07 c404 	mla	r4, r7, r4, ip
 8021ffe:	b2b6      	uxth	r6, r6
 8022000:	b2a4      	uxth	r4, r4
 8022002:	b29b      	uxth	r3, r3
 8022004:	f106 0c01 	add.w	ip, r6, #1
 8022008:	f103 0801 	add.w	r8, r3, #1
 802200c:	1c65      	adds	r5, r4, #1
 802200e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8022012:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 8022016:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 802201a:	1236      	asrs	r6, r6, #8
 802201c:	121b      	asrs	r3, r3, #8
 802201e:	122d      	asrs	r5, r5, #8
 8022020:	f800 6c02 	strb.w	r6, [r0, #-2]
 8022024:	f800 3c01 	strb.w	r3, [r0, #-1]
 8022028:	f800 5c03 	strb.w	r5, [r0, #-3]
 802202c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802202e:	4586      	cmp	lr, r0
 8022030:	441a      	add	r2, r3
 8022032:	4449      	add	r1, r9
 8022034:	d01b      	beq.n	802206e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022036:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 802203a:	3003      	adds	r0, #3
 802203c:	9d01      	ldr	r5, [sp, #4]
 802203e:	140b      	asrs	r3, r1, #16
 8022040:	fb04 5303 	mla	r3, r4, r3, r5
 8022044:	1414      	asrs	r4, r2, #16
 8022046:	5d1b      	ldrb	r3, [r3, r4]
 8022048:	9c02      	ldr	r4, [sp, #8]
 802204a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802204e:	0e1f      	lsrs	r7, r3, #24
 8022050:	2fff      	cmp	r7, #255	@ 0xff
 8022052:	d1b7      	bne.n	8021fc4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022054:	0a1d      	lsrs	r5, r3, #8
 8022056:	0c1c      	lsrs	r4, r3, #16
 8022058:	f800 3c03 	strb.w	r3, [r0, #-3]
 802205c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802205e:	4586      	cmp	lr, r0
 8022060:	f800 5c02 	strb.w	r5, [r0, #-2]
 8022064:	f800 4c01 	strb.w	r4, [r0, #-1]
 8022068:	441a      	add	r2, r3
 802206a:	4449      	add	r1, r9
 802206c:	d1e3      	bne.n	8022036 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802206e:	4670      	mov	r0, lr
 8022070:	e6eb      	b.n	8021e4a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022072:	2b00      	cmp	r3, #0
 8022074:	f77f aee9 	ble.w	8021e4a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022078:	4604      	mov	r4, r0
 802207a:	1415      	asrs	r5, r2, #16
 802207c:	e724      	b.n	8021ec8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802207e:	0a1e      	lsrs	r6, r3, #8
 8022080:	0c1d      	lsrs	r5, r3, #16
 8022082:	7023      	strb	r3, [r4, #0]
 8022084:	7066      	strb	r6, [r4, #1]
 8022086:	70a5      	strb	r5, [r4, #2]
 8022088:	e772      	b.n	8021f70 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802208a:	bf00      	nop

0802208c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802208c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022090:	b089      	sub	sp, #36	@ 0x24
 8022092:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 8022096:	9101      	str	r1, [sp, #4]
 8022098:	ea6f 0a00 	mvn.w	sl, r0
 802209c:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 80220a0:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80220a2:	9202      	str	r2, [sp, #8]
 80220a4:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 80220a8:	686c      	ldr	r4, [r5, #4]
 80220aa:	682f      	ldr	r7, [r5, #0]
 80220ac:	fb04 2401 	mla	r4, r4, r1, r2
 80220b0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80220b2:	b280      	uxth	r0, r0
 80220b4:	e9d2 2100 	ldrd	r2, r1, [r2]
 80220b8:	3104      	adds	r1, #4
 80220ba:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 80220be:	fa5f fa8a 	uxtb.w	sl, sl
 80220c2:	9007      	str	r0, [sp, #28]
 80220c4:	9105      	str	r1, [sp, #20]
 80220c6:	9200      	str	r2, [sp, #0]
 80220c8:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 80220cc:	9901      	ldr	r1, [sp, #4]
 80220ce:	2900      	cmp	r1, #0
 80220d0:	dc03      	bgt.n	80220da <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80220d2:	9902      	ldr	r1, [sp, #8]
 80220d4:	2900      	cmp	r1, #0
 80220d6:	f340 80b6 	ble.w	8022246 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80220da:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80220dc:	2b00      	cmp	r3, #0
 80220de:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80220e2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80220e6:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 80220ea:	b221      	sxth	r1, r4
 80220ec:	fa0f fc86 	sxth.w	ip, r6
 80220f0:	f340 80ac 	ble.w	802224c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80220f4:	1410      	asrs	r0, r2, #16
 80220f6:	d406      	bmi.n	8022106 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80220f8:	4288      	cmp	r0, r1
 80220fa:	da04      	bge.n	8022106 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80220fc:	ea5f 4925 	movs.w	r9, r5, asr #16
 8022100:	d401      	bmi.n	8022106 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022102:	45e1      	cmp	r9, ip
 8022104:	db3e      	blt.n	8022184 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 8022106:	3b01      	subs	r3, #1
 8022108:	4472      	add	r2, lr
 802210a:	4445      	add	r5, r8
 802210c:	f107 0704 	add.w	r7, r7, #4
 8022110:	d1f0      	bne.n	80220f4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022112:	9b01      	ldr	r3, [sp, #4]
 8022114:	2b00      	cmp	r3, #0
 8022116:	f340 8096 	ble.w	8022246 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802211a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802211e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022122:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022126:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802212a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802212e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022132:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022136:	ee76 6a62 	vsub.f32	s13, s12, s5
 802213a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802213e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022142:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022146:	ee16 2a90 	vmov	r2, s13
 802214a:	3b01      	subs	r3, #1
 802214c:	9301      	str	r3, [sp, #4]
 802214e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8022150:	9902      	ldr	r1, [sp, #8]
 8022152:	fb92 fef3 	sdiv	lr, r2, r3
 8022156:	ee17 2a10 	vmov	r2, s14
 802215a:	eeb0 7a43 	vmov.f32	s14, s6
 802215e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022162:	ee17 5a10 	vmov	r5, s14
 8022166:	eeb0 7a62 	vmov.f32	s14, s5
 802216a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802216e:	fb92 f8f3 	sdiv	r8, r2, r3
 8022172:	eeb0 3a67 	vmov.f32	s6, s15
 8022176:	ee17 2a10 	vmov	r2, s14
 802217a:	eef0 2a46 	vmov.f32	s5, s12
 802217e:	bf08      	it	eq
 8022180:	460b      	moveq	r3, r1
 8022182:	e7a3      	b.n	80220cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8022184:	f103 39ff 	add.w	r9, r3, #4294967295
 8022188:	fb09 2b0e 	mla	fp, r9, lr, r2
 802218c:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8022190:	d566      	bpl.n	8022260 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022192:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8022196:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8022198:	e002      	b.n	80221a0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 802219a:	1410      	asrs	r0, r2, #16
 802219c:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80221a0:	2800      	cmp	r0, #0
 80221a2:	f109 39ff 	add.w	r9, r9, #4294967295
 80221a6:	4472      	add	r2, lr
 80221a8:	db3f      	blt.n	802222a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221aa:	42a0      	cmp	r0, r4
 80221ac:	da3d      	bge.n	802222a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221ae:	ea5f 4c25 	movs.w	ip, r5, asr #16
 80221b2:	d43a      	bmi.n	802222a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221b4:	45b4      	cmp	ip, r6
 80221b6:	da38      	bge.n	802222a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221b8:	9e00      	ldr	r6, [sp, #0]
 80221ba:	b224      	sxth	r4, r4
 80221bc:	fb0c 6404 	mla	r4, ip, r4, r6
 80221c0:	f814 b000 	ldrb.w	fp, [r4, r0]
 80221c4:	7838      	ldrb	r0, [r7, #0]
 80221c6:	9c05      	ldr	r4, [sp, #20]
 80221c8:	fb10 f30a 	smulbb	r3, r0, sl
 80221cc:	9306      	str	r3, [sp, #24]
 80221ce:	9b07      	ldr	r3, [sp, #28]
 80221d0:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 80221d4:	4618      	mov	r0, r3
 80221d6:	eb04 060b 	add.w	r6, r4, fp
 80221da:	78b4      	ldrb	r4, [r6, #2]
 80221dc:	7876      	ldrb	r6, [r6, #1]
 80221de:	fb14 fc03 	smulbb	ip, r4, r3
 80221e2:	9c05      	ldr	r4, [sp, #20]
 80221e4:	fb16 f603 	smulbb	r6, r6, r3
 80221e8:	f814 400b 	ldrb.w	r4, [r4, fp]
 80221ec:	9b06      	ldr	r3, [sp, #24]
 80221ee:	f897 b001 	ldrb.w	fp, [r7, #1]
 80221f2:	fb04 3000 	mla	r0, r4, r0, r3
 80221f6:	78bc      	ldrb	r4, [r7, #2]
 80221f8:	fb0b 660a 	mla	r6, fp, sl, r6
 80221fc:	fb04 c40a 	mla	r4, r4, sl, ip
 8022200:	b2b6      	uxth	r6, r6
 8022202:	b280      	uxth	r0, r0
 8022204:	b2a4      	uxth	r4, r4
 8022206:	f106 0c01 	add.w	ip, r6, #1
 802220a:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 802220e:	f104 0b01 	add.w	fp, r4, #1
 8022212:	f100 0c01 	add.w	ip, r0, #1
 8022216:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 802221a:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802221e:	1236      	asrs	r6, r6, #8
 8022220:	1224      	asrs	r4, r4, #8
 8022222:	1200      	asrs	r0, r0, #8
 8022224:	707e      	strb	r6, [r7, #1]
 8022226:	70bc      	strb	r4, [r7, #2]
 8022228:	7038      	strb	r0, [r7, #0]
 802222a:	f1b9 3fff 	cmp.w	r9, #4294967295
 802222e:	f107 0704 	add.w	r7, r7, #4
 8022232:	4445      	add	r5, r8
 8022234:	d1b1      	bne.n	802219a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022236:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 802223a:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 802223e:	9b01      	ldr	r3, [sp, #4]
 8022240:	2b00      	cmp	r3, #0
 8022242:	f73f af6a 	bgt.w	802211a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022246:	b009      	add	sp, #36	@ 0x24
 8022248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802224c:	f43f af61 	beq.w	8022112 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022250:	f103 39ff 	add.w	r9, r3, #4294967295
 8022254:	fb09 2b0e 	mla	fp, r9, lr, r2
 8022258:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 802225c:	f53f af59 	bmi.w	8022112 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022260:	4559      	cmp	r1, fp
 8022262:	dd57      	ble.n	8022314 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8022264:	fb09 5008 	mla	r0, r9, r8, r5
 8022268:	1400      	asrs	r0, r0, #16
 802226a:	d453      	bmi.n	8022314 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802226c:	4560      	cmp	r0, ip
 802226e:	da51      	bge.n	8022314 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8022270:	2b00      	cmp	r3, #0
 8022272:	f77f af4e 	ble.w	8022112 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022276:	e9cd 7303 	strd	r7, r3, [sp, #12]
 802227a:	f107 0c04 	add.w	ip, r7, #4
 802227e:	f8dd b014 	ldr.w	fp, [sp, #20]
 8022282:	460b      	mov	r3, r1
 8022284:	9f07      	ldr	r7, [sp, #28]
 8022286:	e002      	b.n	802228e <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8022288:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802228a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802228e:	9800      	ldr	r0, [sp, #0]
 8022290:	1429      	asrs	r1, r5, #16
 8022292:	fb03 0301 	mla	r3, r3, r1, r0
 8022296:	1411      	asrs	r1, r2, #16
 8022298:	5c5e      	ldrb	r6, [r3, r1]
 802229a:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 802229e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80222a2:	eb0b 0006 	add.w	r0, fp, r6
 80222a6:	7881      	ldrb	r1, [r0, #2]
 80222a8:	7840      	ldrb	r0, [r0, #1]
 80222aa:	fb13 f30a 	smulbb	r3, r3, sl
 80222ae:	fb10 f007 	smulbb	r0, r0, r7
 80222b2:	fb11 f407 	smulbb	r4, r1, r7
 80222b6:	f81b 1006 	ldrb.w	r1, [fp, r6]
 80222ba:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 80222be:	fb01 3307 	mla	r3, r1, r7, r3
 80222c2:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 80222c6:	fb06 000a 	mla	r0, r6, sl, r0
 80222ca:	fb01 410a 	mla	r1, r1, sl, r4
 80222ce:	b280      	uxth	r0, r0
 80222d0:	b29b      	uxth	r3, r3
 80222d2:	b289      	uxth	r1, r1
 80222d4:	1c44      	adds	r4, r0, #1
 80222d6:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80222da:	1c4e      	adds	r6, r1, #1
 80222dc:	1c5c      	adds	r4, r3, #1
 80222de:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 80222e2:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80222e6:	f109 39ff 	add.w	r9, r9, #4294967295
 80222ea:	1200      	asrs	r0, r0, #8
 80222ec:	1209      	asrs	r1, r1, #8
 80222ee:	121b      	asrs	r3, r3, #8
 80222f0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80222f4:	f80c 0c03 	strb.w	r0, [ip, #-3]
 80222f8:	f80c 1c02 	strb.w	r1, [ip, #-2]
 80222fc:	f80c 3c04 	strb.w	r3, [ip, #-4]
 8022300:	4445      	add	r5, r8
 8022302:	4472      	add	r2, lr
 8022304:	f10c 0c04 	add.w	ip, ip, #4
 8022308:	d1be      	bne.n	8022288 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802230a:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 802230e:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 8022312:	e6fe      	b.n	8022112 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022314:	2b00      	cmp	r3, #0
 8022316:	f77f aefc 	ble.w	8022112 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802231a:	1410      	asrs	r0, r2, #16
 802231c:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8022320:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8022322:	e73d      	b.n	80221a0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

08022324 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022328:	468a      	mov	sl, r1
 802232a:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802232e:	46d1      	mov	r9, sl
 8022330:	b087      	sub	sp, #28
 8022332:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 8022336:	684d      	ldr	r5, [r1, #4]
 8022338:	9203      	str	r2, [sp, #12]
 802233a:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 802233e:	fb05 4402 	mla	r4, r5, r2, r4
 8022342:	e9de 2000 	ldrd	r2, r0, [lr]
 8022346:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802234a:	680d      	ldr	r5, [r1, #0]
 802234c:	f100 0b04 	add.w	fp, r0, #4
 8022350:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8022354:	9205      	str	r2, [sp, #20]
 8022356:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 802235a:	f1b9 0f00 	cmp.w	r9, #0
 802235e:	dc03      	bgt.n	8022368 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8022360:	9803      	ldr	r0, [sp, #12]
 8022362:	2800      	cmp	r0, #0
 8022364:	f340 8091 	ble.w	802248a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8022368:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 802236c:	2b00      	cmp	r3, #0
 802236e:	fa0f f088 	sxth.w	r0, r8
 8022372:	fa0f f48a 	sxth.w	r4, sl
 8022376:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802237a:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 802237e:	9001      	str	r0, [sp, #4]
 8022380:	9402      	str	r4, [sp, #8]
 8022382:	f340 8085 	ble.w	8022490 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8022386:	1414      	asrs	r4, r2, #16
 8022388:	d408      	bmi.n	802239c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802238a:	9801      	ldr	r0, [sp, #4]
 802238c:	4284      	cmp	r4, r0
 802238e:	da05      	bge.n	802239c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022390:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8022394:	d402      	bmi.n	802239c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022396:	9802      	ldr	r0, [sp, #8]
 8022398:	4584      	cmp	ip, r0
 802239a:	db3b      	blt.n	8022414 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 802239c:	3b01      	subs	r3, #1
 802239e:	4432      	add	r2, r6
 80223a0:	4439      	add	r1, r7
 80223a2:	f105 0504 	add.w	r5, r5, #4
 80223a6:	d1ee      	bne.n	8022386 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80223a8:	f1b9 0f00 	cmp.w	r9, #0
 80223ac:	dd6d      	ble.n	802248a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80223ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80223b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80223b6:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80223ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80223be:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80223c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80223c6:	ee76 6a62 	vsub.f32	s13, s12, s5
 80223ca:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80223ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80223d2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223d6:	ee16 2a90 	vmov	r2, s13
 80223da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80223dc:	9803      	ldr	r0, [sp, #12]
 80223de:	fb92 f6f3 	sdiv	r6, r2, r3
 80223e2:	ee17 2a10 	vmov	r2, s14
 80223e6:	eeb0 7a43 	vmov.f32	s14, s6
 80223ea:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223ee:	ee17 1a10 	vmov	r1, s14
 80223f2:	eeb0 7a62 	vmov.f32	s14, s5
 80223f6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223fa:	f1b9 0901 	subs.w	r9, r9, #1
 80223fe:	fb92 f7f3 	sdiv	r7, r2, r3
 8022402:	eeb0 3a67 	vmov.f32	s6, s15
 8022406:	ee17 2a10 	vmov	r2, s14
 802240a:	eef0 2a46 	vmov.f32	s5, s12
 802240e:	bf08      	it	eq
 8022410:	4603      	moveq	r3, r0
 8022412:	e7a2      	b.n	802235a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8022414:	f103 3cff 	add.w	ip, r3, #4294967295
 8022418:	9404      	str	r4, [sp, #16]
 802241a:	fb06 240c 	mla	r4, r6, ip, r2
 802241e:	1424      	asrs	r4, r4, #16
 8022420:	d578      	bpl.n	8022514 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022422:	9613      	str	r6, [sp, #76]	@ 0x4c
 8022424:	2000      	movs	r0, #0
 8022426:	4646      	mov	r6, r8
 8022428:	46d4      	mov	ip, sl
 802242a:	9c04      	ldr	r4, [sp, #16]
 802242c:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8022430:	e002      	b.n	8022438 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8022432:	1414      	asrs	r4, r2, #16
 8022434:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 8022438:	2c00      	cmp	r4, #0
 802243a:	4442      	add	r2, r8
 802243c:	db1c      	blt.n	8022478 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802243e:	42b4      	cmp	r4, r6
 8022440:	da1a      	bge.n	8022478 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022442:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8022446:	d417      	bmi.n	8022478 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022448:	45e2      	cmp	sl, ip
 802244a:	da15      	bge.n	8022478 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802244c:	fa0f fc86 	sxth.w	ip, r6
 8022450:	9e05      	ldr	r6, [sp, #20]
 8022452:	fb0a 6c0c 	mla	ip, sl, ip, r6
 8022456:	f81c 4004 	ldrb.w	r4, [ip, r4]
 802245a:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 802245e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8022462:	f81b c004 	ldrb.w	ip, [fp, r4]
 8022466:	445c      	add	r4, fp
 8022468:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 802246c:	f894 c001 	ldrb.w	ip, [r4, #1]
 8022470:	f886 c001 	strb.w	ip, [r6, #1]
 8022474:	78a4      	ldrb	r4, [r4, #2]
 8022476:	70b4      	strb	r4, [r6, #2]
 8022478:	3001      	adds	r0, #1
 802247a:	4283      	cmp	r3, r0
 802247c:	4439      	add	r1, r7
 802247e:	d1d8      	bne.n	8022432 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022480:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8022484:	f1b9 0f00 	cmp.w	r9, #0
 8022488:	dc91      	bgt.n	80223ae <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802248a:	b007      	add	sp, #28
 802248c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022490:	d08a      	beq.n	80223a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022492:	f103 3cff 	add.w	ip, r3, #4294967295
 8022496:	fb0c 2406 	mla	r4, ip, r6, r2
 802249a:	1424      	asrs	r4, r4, #16
 802249c:	d484      	bmi.n	80223a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802249e:	42a0      	cmp	r0, r4
 80224a0:	dd32      	ble.n	8022508 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224a2:	fb07 140c 	mla	r4, r7, ip, r1
 80224a6:	1420      	asrs	r0, r4, #16
 80224a8:	d42e      	bmi.n	8022508 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224aa:	9c02      	ldr	r4, [sp, #8]
 80224ac:	4284      	cmp	r4, r0
 80224ae:	dd2b      	ble.n	8022508 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224b0:	2b00      	cmp	r3, #0
 80224b2:	f77f af79 	ble.w	80223a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224b6:	1d2c      	adds	r4, r5, #4
 80224b8:	f8dd a014 	ldr.w	sl, [sp, #20]
 80224bc:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80224c0:	e001      	b.n	80224c6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80224c2:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 80224c6:	1408      	asrs	r0, r1, #16
 80224c8:	fb08 a000 	mla	r0, r8, r0, sl
 80224cc:	ea4f 4822 	mov.w	r8, r2, asr #16
 80224d0:	f810 0008 	ldrb.w	r0, [r0, r8]
 80224d4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80224d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80224dc:	f81b 8000 	ldrb.w	r8, [fp, r0]
 80224e0:	4458      	add	r0, fp
 80224e2:	f804 8c04 	strb.w	r8, [r4, #-4]
 80224e6:	f890 8001 	ldrb.w	r8, [r0, #1]
 80224ea:	f1bc 3fff 	cmp.w	ip, #4294967295
 80224ee:	f804 8c03 	strb.w	r8, [r4, #-3]
 80224f2:	7880      	ldrb	r0, [r0, #2]
 80224f4:	4439      	add	r1, r7
 80224f6:	f804 0c02 	strb.w	r0, [r4, #-2]
 80224fa:	4432      	add	r2, r6
 80224fc:	f104 0404 	add.w	r4, r4, #4
 8022500:	d1df      	bne.n	80224c2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022502:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8022506:	e7bd      	b.n	8022484 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8022508:	2b00      	cmp	r3, #0
 802250a:	f77f af4d 	ble.w	80223a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802250e:	1410      	asrs	r0, r2, #16
 8022510:	9004      	str	r0, [sp, #16]
 8022512:	e786      	b.n	8022422 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 8022514:	9801      	ldr	r0, [sp, #4]
 8022516:	e7c2      	b.n	802249e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

08022518 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022518:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802251c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022520:	b08b      	sub	sp, #44	@ 0x2c
 8022522:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8022526:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 802252a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802252c:	6854      	ldr	r4, [r2, #4]
 802252e:	6816      	ldr	r6, [r2, #0]
 8022530:	fb04 1000 	mla	r0, r4, r0, r1
 8022534:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 8022538:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802253a:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 802253e:	e9d2 2500 	ldrd	r2, r5, [r2]
 8022542:	3504      	adds	r5, #4
 8022544:	9703      	str	r7, [sp, #12]
 8022546:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 802254a:	9507      	str	r5, [sp, #28]
 802254c:	9206      	str	r2, [sp, #24]
 802254e:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8022552:	9d01      	ldr	r5, [sp, #4]
 8022554:	2d00      	cmp	r5, #0
 8022556:	dc03      	bgt.n	8022560 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022558:	9d02      	ldr	r5, [sp, #8]
 802255a:	2d00      	cmp	r5, #0
 802255c:	f340 80d5 	ble.w	802270a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8022560:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 8022562:	2b00      	cmp	r3, #0
 8022564:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 8022568:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802256c:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8022570:	b23d      	sxth	r5, r7
 8022572:	fa0f fe8c 	sxth.w	lr, ip
 8022576:	f340 80cb 	ble.w	8022710 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 802257a:	1416      	asrs	r6, r2, #16
 802257c:	d406      	bmi.n	802258c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802257e:	42ae      	cmp	r6, r5
 8022580:	da04      	bge.n	802258c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022582:	ea5f 4821 	movs.w	r8, r1, asr #16
 8022586:	d401      	bmi.n	802258c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022588:	45f0      	cmp	r8, lr
 802258a:	db3c      	blt.n	8022606 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 802258c:	3b01      	subs	r3, #1
 802258e:	4422      	add	r2, r4
 8022590:	4459      	add	r1, fp
 8022592:	f100 0004 	add.w	r0, r0, #4
 8022596:	d1f0      	bne.n	802257a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022598:	9b01      	ldr	r3, [sp, #4]
 802259a:	2b00      	cmp	r3, #0
 802259c:	f340 80b5 	ble.w	802270a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80225a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225a8:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80225ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225b0:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80225b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225b8:	ee76 6a62 	vsub.f32	s13, s12, s5
 80225bc:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80225c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225c4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80225c8:	ee16 2a90 	vmov	r2, s13
 80225cc:	3b01      	subs	r3, #1
 80225ce:	9301      	str	r3, [sp, #4]
 80225d0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80225d2:	9d02      	ldr	r5, [sp, #8]
 80225d4:	fb92 f4f3 	sdiv	r4, r2, r3
 80225d8:	ee17 2a10 	vmov	r2, s14
 80225dc:	eeb0 7a43 	vmov.f32	s14, s6
 80225e0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80225e4:	ee17 1a10 	vmov	r1, s14
 80225e8:	eeb0 7a62 	vmov.f32	s14, s5
 80225ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80225f0:	fb92 fbf3 	sdiv	fp, r2, r3
 80225f4:	eeb0 3a67 	vmov.f32	s6, s15
 80225f8:	ee17 2a10 	vmov	r2, s14
 80225fc:	eef0 2a46 	vmov.f32	s5, s12
 8022600:	bf08      	it	eq
 8022602:	462b      	moveq	r3, r5
 8022604:	e7a5      	b.n	8022552 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022606:	f103 38ff 	add.w	r8, r3, #4294967295
 802260a:	fb08 2904 	mla	r9, r8, r4, r2
 802260e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8022612:	f140 8087 	bpl.w	8022724 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8022616:	f1c3 0900 	rsb	r9, r3, #0
 802261a:	4698      	mov	r8, r3
 802261c:	2500      	movs	r5, #0
 802261e:	9004      	str	r0, [sp, #16]
 8022620:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022622:	e002      	b.n	802262a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8022624:	1416      	asrs	r6, r2, #16
 8022626:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 802262a:	2e00      	cmp	r6, #0
 802262c:	4422      	add	r2, r4
 802262e:	db61      	blt.n	80226f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022630:	42be      	cmp	r6, r7
 8022632:	da5f      	bge.n	80226f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022634:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8022638:	d45c      	bmi.n	80226f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802263a:	45e6      	cmp	lr, ip
 802263c:	b23f      	sxth	r7, r7
 802263e:	da59      	bge.n	80226f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022640:	9806      	ldr	r0, [sp, #24]
 8022642:	fb0e 0707 	mla	r7, lr, r7, r0
 8022646:	9807      	ldr	r0, [sp, #28]
 8022648:	5dbe      	ldrb	r6, [r7, r6]
 802264a:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 802264e:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 8022652:	9804      	ldr	r0, [sp, #16]
 8022654:	9705      	str	r7, [sp, #20]
 8022656:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 802265a:	0e37      	lsrs	r7, r6, #24
 802265c:	9008      	str	r0, [sp, #32]
 802265e:	d049      	beq.n	80226f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022660:	9803      	ldr	r0, [sp, #12]
 8022662:	fa5f fa86 	uxtb.w	sl, r6
 8022666:	fb00 f707 	mul.w	r7, r0, r7
 802266a:	9805      	ldr	r0, [sp, #20]
 802266c:	f107 0c01 	add.w	ip, r7, #1
 8022670:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 8022674:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8022678:	4686      	mov	lr, r0
 802267a:	ea6f 070c 	mvn.w	r7, ip
 802267e:	fa1f fc8c 	uxth.w	ip, ip
 8022682:	fb1a fa0c 	smulbb	sl, sl, ip
 8022686:	9804      	ldr	r0, [sp, #16]
 8022688:	b2ff      	uxtb	r7, r7
 802268a:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 802268e:	9805      	ldr	r0, [sp, #20]
 8022690:	fb0e ae07 	mla	lr, lr, r7, sl
 8022694:	fa1f fe8e 	uxth.w	lr, lr
 8022698:	f10e 0a01 	add.w	sl, lr, #1
 802269c:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 80226a0:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 80226a4:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80226a8:	fb16 f60c 	smulbb	r6, r6, ip
 80226ac:	9609      	str	r6, [sp, #36]	@ 0x24
 80226ae:	4606      	mov	r6, r0
 80226b0:	9804      	ldr	r0, [sp, #16]
 80226b2:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80226b6:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 80226ba:	fb1a fa0c 	smulbb	sl, sl, ip
 80226be:	9808      	ldr	r0, [sp, #32]
 80226c0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 80226c2:	f890 e002 	ldrb.w	lr, [r0, #2]
 80226c6:	f890 c001 	ldrb.w	ip, [r0, #1]
 80226ca:	fb0e 6607 	mla	r6, lr, r7, r6
 80226ce:	fb0c ac07 	mla	ip, ip, r7, sl
 80226d2:	b2b6      	uxth	r6, r6
 80226d4:	fa1f fe8c 	uxth.w	lr, ip
 80226d8:	1c77      	adds	r7, r6, #1
 80226da:	f10e 0c01 	add.w	ip, lr, #1
 80226de:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80226e2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80226e6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80226ea:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80226ee:	7047      	strb	r7, [r0, #1]
 80226f0:	f880 c002 	strb.w	ip, [r0, #2]
 80226f4:	3d01      	subs	r5, #1
 80226f6:	45a9      	cmp	r9, r5
 80226f8:	4459      	add	r1, fp
 80226fa:	d193      	bne.n	8022624 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80226fc:	9b01      	ldr	r3, [sp, #4]
 80226fe:	9804      	ldr	r0, [sp, #16]
 8022700:	2b00      	cmp	r3, #0
 8022702:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 8022706:	f73f af4b 	bgt.w	80225a0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802270a:	b00b      	add	sp, #44	@ 0x2c
 802270c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022710:	f43f af42 	beq.w	8022598 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022714:	f103 38ff 	add.w	r8, r3, #4294967295
 8022718:	fb08 2904 	mla	r9, r8, r4, r2
 802271c:	ea5f 4929 	movs.w	r9, r9, asr #16
 8022720:	f53f af3a 	bmi.w	8022598 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022724:	454d      	cmp	r5, r9
 8022726:	dd68      	ble.n	80227fa <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022728:	fb08 160b 	mla	r6, r8, fp, r1
 802272c:	1436      	asrs	r6, r6, #16
 802272e:	d464      	bmi.n	80227fa <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022730:	4576      	cmp	r6, lr
 8022732:	da62      	bge.n	80227fa <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022734:	2b00      	cmp	r3, #0
 8022736:	f77f af2f 	ble.w	8022598 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802273a:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 802273e:	f100 0e04 	add.w	lr, r0, #4
 8022742:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8022746:	e002      	b.n	802274e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022748:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802274a:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802274e:	140b      	asrs	r3, r1, #16
 8022750:	fb05 6303 	mla	r3, r5, r3, r6
 8022754:	1410      	asrs	r0, r2, #16
 8022756:	5c1b      	ldrb	r3, [r3, r0]
 8022758:	f108 38ff 	add.w	r8, r8, #4294967295
 802275c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8022760:	4422      	add	r2, r4
 8022762:	0e18      	lsrs	r0, r3, #24
 8022764:	4459      	add	r1, fp
 8022766:	d03e      	beq.n	80227e6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8022768:	9d03      	ldr	r5, [sp, #12]
 802276a:	fa5f fc83 	uxtb.w	ip, r3
 802276e:	fb05 f000 	mul.w	r0, r5, r0
 8022772:	f100 0901 	add.w	r9, r0, #1
 8022776:	eb09 2920 	add.w	r9, r9, r0, asr #8
 802277a:	ea4f 2929 	mov.w	r9, r9, asr #8
 802277e:	ea6f 0009 	mvn.w	r0, r9
 8022782:	fa1f f989 	uxth.w	r9, r9
 8022786:	fb1c fc09 	smulbb	ip, ip, r9
 802278a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802278e:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022792:	fb15 fa09 	smulbb	sl, r5, r9
 8022796:	fb13 f309 	smulbb	r3, r3, r9
 802279a:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 802279e:	b2c0      	uxtb	r0, r0
 80227a0:	fb09 cc00 	mla	ip, r9, r0, ip
 80227a4:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 80227a8:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 80227ac:	fb05 a500 	mla	r5, r5, r0, sl
 80227b0:	fb09 3300 	mla	r3, r9, r0, r3
 80227b4:	fa1f fc8c 	uxth.w	ip, ip
 80227b8:	b2ad      	uxth	r5, r5
 80227ba:	b29b      	uxth	r3, r3
 80227bc:	f10c 0a01 	add.w	sl, ip, #1
 80227c0:	f105 0901 	add.w	r9, r5, #1
 80227c4:	1c58      	adds	r0, r3, #1
 80227c6:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 80227ca:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80227ce:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80227d2:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80227d6:	122d      	asrs	r5, r5, #8
 80227d8:	121b      	asrs	r3, r3, #8
 80227da:	f80e cc04 	strb.w	ip, [lr, #-4]
 80227de:	f80e 5c03 	strb.w	r5, [lr, #-3]
 80227e2:	f80e 3c02 	strb.w	r3, [lr, #-2]
 80227e6:	f1b8 3fff 	cmp.w	r8, #4294967295
 80227ea:	f10e 0e04 	add.w	lr, lr, #4
 80227ee:	d1ab      	bne.n	8022748 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80227f0:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 80227f4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80227f8:	e6ce      	b.n	8022598 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80227fa:	2b00      	cmp	r3, #0
 80227fc:	f77f aecc 	ble.w	8022598 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022800:	1416      	asrs	r6, r2, #16
 8022802:	e708      	b.n	8022616 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

08022804 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022804:	4770      	bx	lr
 8022806:	bf00      	nop

08022808 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022808:	4770      	bx	lr
 802280a:	bf00      	nop

0802280c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802280c:	4770      	bx	lr
 802280e:	bf00      	nop

08022810 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022810:	4770      	bx	lr
 8022812:	bf00      	nop

08022814 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022814:	4770      	bx	lr
 8022816:	bf00      	nop

08022818 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022818:	4770      	bx	lr
 802281a:	bf00      	nop

0802281c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802281c:	4770      	bx	lr
 802281e:	bf00      	nop

08022820 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022820:	4770      	bx	lr
 8022822:	bf00      	nop

08022824 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022824:	4770      	bx	lr
 8022826:	bf00      	nop

08022828 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022828:	4770      	bx	lr
 802282a:	bf00      	nop

0802282c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802282c:	4770      	bx	lr
 802282e:	bf00      	nop

08022830 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022830:	4770      	bx	lr
 8022832:	bf00      	nop

08022834 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022834:	4770      	bx	lr
 8022836:	bf00      	nop

08022838 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022838:	4770      	bx	lr
 802283a:	bf00      	nop

0802283c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802283c:	4770      	bx	lr
 802283e:	bf00      	nop

08022840 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022840:	4770      	bx	lr
 8022842:	bf00      	nop

08022844 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022844:	4770      	bx	lr
 8022846:	bf00      	nop

08022848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022848:	4770      	bx	lr
 802284a:	bf00      	nop

0802284c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802284c:	4770      	bx	lr
 802284e:	bf00      	nop

08022850 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022850:	4770      	bx	lr
 8022852:	bf00      	nop

08022854 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022854:	4770      	bx	lr
 8022856:	bf00      	nop

08022858 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022858:	4770      	bx	lr
 802285a:	bf00      	nop

0802285c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 802285c:	b508      	push	{r3, lr}
 802285e:	4b0d      	ldr	r3, [pc, #52]	@ (8022894 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x38>)
 8022860:	881b      	ldrh	r3, [r3, #0]
 8022862:	b17b      	cbz	r3, 8022884 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x28>
 8022864:	7b02      	ldrb	r2, [r0, #12]
 8022866:	2a02      	cmp	r2, #2
 8022868:	d007      	beq.n	802287a <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1e>
 802286a:	2a01      	cmp	r2, #1
 802286c:	bf0c      	ite	eq
 802286e:	2003      	moveq	r0, #3
 8022870:	2002      	movne	r0, #2
 8022872:	fb13 f000 	smulbb	r0, r3, r0
 8022876:	b280      	uxth	r0, r0
 8022878:	bd08      	pop	{r3, pc}
 802287a:	2004      	movs	r0, #4
 802287c:	fb13 f000 	smulbb	r0, r3, r0
 8022880:	b280      	uxth	r0, r0
 8022882:	bd08      	pop	{r3, pc}
 8022884:	4b04      	ldr	r3, [pc, #16]	@ (8022898 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x3c>)
 8022886:	4a05      	ldr	r2, [pc, #20]	@ (802289c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x40>)
 8022888:	f240 110f 	movw	r1, #271	@ 0x10f
 802288c:	4804      	ldr	r0, [pc, #16]	@ (80228a0 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x44>)
 802288e:	f00f fe13 	bl	80324b8 <__assert_func>
 8022892:	bf00      	nop
 8022894:	20082ebe 	.word	0x20082ebe
 8022898:	080367b0 	.word	0x080367b0
 802289c:	08037f74 	.word	0x08037f74
 80228a0:	080367f4 	.word	0x080367f4

080228a4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 80228a4:	b530      	push	{r4, r5, lr}
 80228a6:	4b26      	ldr	r3, [pc, #152]	@ (8022940 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x9c>)
 80228a8:	b083      	sub	sp, #12
 80228aa:	681c      	ldr	r4, [r3, #0]
 80228ac:	2c00      	cmp	r4, #0
 80228ae:	d040      	beq.n	8022932 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8e>
 80228b0:	4b24      	ldr	r3, [pc, #144]	@ (8022944 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa0>)
 80228b2:	4605      	mov	r5, r0
 80228b4:	781b      	ldrb	r3, [r3, #0]
 80228b6:	b9f3      	cbnz	r3, 80228f6 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x52>
 80228b8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80228ba:	7b2a      	ldrb	r2, [r5, #12]
 80228bc:	2a01      	cmp	r2, #1
 80228be:	d025      	beq.n	802290c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x68>
 80228c0:	d30d      	bcc.n	80228de <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x3a>
 80228c2:	2a02      	cmp	r2, #2
 80228c4:	d12f      	bne.n	8022926 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x82>
 80228c6:	4920      	ldr	r1, [pc, #128]	@ (8022948 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 80228c8:	4a20      	ldr	r2, [pc, #128]	@ (802294c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 80228ca:	8809      	ldrh	r1, [r1, #0]
 80228cc:	8812      	ldrh	r2, [r2, #0]
 80228ce:	008c      	lsls	r4, r1, #2
 80228d0:	4618      	mov	r0, r3
 80228d2:	9400      	str	r4, [sp, #0]
 80228d4:	2310      	movs	r3, #16
 80228d6:	f7ee fb51 	bl	8010f7c <nema_bind_dst_tex>
 80228da:	b003      	add	sp, #12
 80228dc:	bd30      	pop	{r4, r5, pc}
 80228de:	491a      	ldr	r1, [pc, #104]	@ (8022948 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 80228e0:	4a1a      	ldr	r2, [pc, #104]	@ (802294c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 80228e2:	8809      	ldrh	r1, [r1, #0]
 80228e4:	8812      	ldrh	r2, [r2, #0]
 80228e6:	004c      	lsls	r4, r1, #1
 80228e8:	4618      	mov	r0, r3
 80228ea:	9400      	str	r4, [sp, #0]
 80228ec:	2304      	movs	r3, #4
 80228ee:	f7ee fb45 	bl	8010f7c <nema_bind_dst_tex>
 80228f2:	b003      	add	sp, #12
 80228f4:	bd30      	pop	{r4, r5, pc}
 80228f6:	6823      	ldr	r3, [r4, #0]
 80228f8:	4620      	mov	r0, r4
 80228fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80228fc:	4798      	blx	r3
 80228fe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8022900:	4283      	cmp	r3, r0
 8022902:	d1da      	bne.n	80228ba <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x16>
 8022904:	7b2a      	ldrb	r2, [r5, #12]
 8022906:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8022908:	2a01      	cmp	r2, #1
 802290a:	d1d9      	bne.n	80228c0 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x1c>
 802290c:	490e      	ldr	r1, [pc, #56]	@ (8022948 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 802290e:	4a0f      	ldr	r2, [pc, #60]	@ (802294c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022910:	8809      	ldrh	r1, [r1, #0]
 8022912:	8812      	ldrh	r2, [r2, #0]
 8022914:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8022918:	4618      	mov	r0, r3
 802291a:	9400      	str	r4, [sp, #0]
 802291c:	2339      	movs	r3, #57	@ 0x39
 802291e:	f7ee fb2d 	bl	8010f7c <nema_bind_dst_tex>
 8022922:	b003      	add	sp, #12
 8022924:	bd30      	pop	{r4, r5, pc}
 8022926:	4b0a      	ldr	r3, [pc, #40]	@ (8022950 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xac>)
 8022928:	4a0a      	ldr	r2, [pc, #40]	@ (8022954 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb0>)
 802292a:	2141      	movs	r1, #65	@ 0x41
 802292c:	480a      	ldr	r0, [pc, #40]	@ (8022958 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb4>)
 802292e:	f00f fdc3 	bl	80324b8 <__assert_func>
 8022932:	4b0a      	ldr	r3, [pc, #40]	@ (802295c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb8>)
 8022934:	4a0a      	ldr	r2, [pc, #40]	@ (8022960 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xbc>)
 8022936:	217c      	movs	r1, #124	@ 0x7c
 8022938:	480a      	ldr	r0, [pc, #40]	@ (8022964 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xc0>)
 802293a:	f00f fdbd 	bl	80324b8 <__assert_func>
 802293e:	bf00      	nop
 8022940:	20083364 	.word	0x20083364
 8022944:	20082ec2 	.word	0x20082ec2
 8022948:	20082ebe 	.word	0x20082ebe
 802294c:	20082ec0 	.word	0x20082ec0
 8022950:	08036230 	.word	0x08036230
 8022954:	08036da8 	.word	0x08036da8
 8022958:	08036278 	.word	0x08036278
 802295c:	080361d4 	.word	0x080361d4
 8022960:	08036a40 	.word	0x08036a40
 8022964:	080361fc 	.word	0x080361fc

08022968 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 8022968:	2b00      	cmp	r3, #0
 802296a:	d05b      	beq.n	8022a24 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>
 802296c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022970:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8022974:	b085      	sub	sp, #20
 8022976:	2c00      	cmp	r4, #0
 8022978:	dd51      	ble.n	8022a1e <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 802297a:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 802297e:	2c00      	cmp	r4, #0
 8022980:	dd4d      	ble.n	8022a1e <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 8022982:	4616      	mov	r6, r2
 8022984:	4605      	mov	r5, r0
 8022986:	6808      	ldr	r0, [r1, #0]
 8022988:	6849      	ldr	r1, [r1, #4]
 802298a:	461c      	mov	r4, r3
 802298c:	4f29      	ldr	r7, [pc, #164]	@ (8022a34 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xcc>)
 802298e:	ab02      	add	r3, sp, #8
 8022990:	c303      	stmia	r3!, {r0, r1}
 8022992:	a802      	add	r0, sp, #8
 8022994:	f7ea f9b4 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022998:	6838      	ldr	r0, [r7, #0]
 802299a:	f3c6 4807 	ubfx	r8, r6, #16, #8
 802299e:	f3c6 2907 	ubfx	r9, r6, #8, #8
 80229a2:	b2f6      	uxtb	r6, r6
 80229a4:	2800      	cmp	r0, #0
 80229a6:	d03e      	beq.n	8022a26 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 80229a8:	f7fe f8f6 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80229ac:	682b      	ldr	r3, [r5, #0]
 80229ae:	4628      	mov	r0, r5
 80229b0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80229b2:	4798      	blx	r3
 80229b4:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 80229b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80229bc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80229c0:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 80229c4:	f7ee f970 	bl	8010ca8 <nema_set_clip>
 80229c8:	f04f 33ff 	mov.w	r3, #4294967295
 80229cc:	2cff      	cmp	r4, #255	@ 0xff
 80229ce:	bf0c      	ite	eq
 80229d0:	2001      	moveq	r0, #1
 80229d2:	4819      	ldrne	r0, [pc, #100]	@ (8022a38 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd0>)
 80229d4:	461a      	mov	r2, r3
 80229d6:	2100      	movs	r1, #0
 80229d8:	f7fb fb02 	bl	801dfe0 <nema_set_blend>
 80229dc:	2200      	movs	r2, #0
 80229de:	4623      	mov	r3, r4
 80229e0:	4611      	mov	r1, r2
 80229e2:	4610      	mov	r0, r2
 80229e4:	f7ee fa3e 	bl	8010e64 <nema_rgba>
 80229e8:	f7fb fec0 	bl	801e76c <nema_set_const_color>
 80229ec:	4632      	mov	r2, r6
 80229ee:	4649      	mov	r1, r9
 80229f0:	4640      	mov	r0, r8
 80229f2:	23ff      	movs	r3, #255	@ 0xff
 80229f4:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 80229f8:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 80229fc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022a00:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8022a04:	f7ee fa2e 	bl	8010e64 <nema_rgba>
 8022a08:	4643      	mov	r3, r8
 8022a0a:	9000      	str	r0, [sp, #0]
 8022a0c:	4632      	mov	r2, r6
 8022a0e:	4620      	mov	r0, r4
 8022a10:	4629      	mov	r1, r5
 8022a12:	f7ee fc77 	bl	8011304 <nema_fill_rect>
 8022a16:	6838      	ldr	r0, [r7, #0]
 8022a18:	b128      	cbz	r0, 8022a26 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8022a1a:	f7fe f8dd 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022a1e:	b005      	add	sp, #20
 8022a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022a24:	4770      	bx	lr
 8022a26:	4b05      	ldr	r3, [pc, #20]	@ (8022a3c <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd4>)
 8022a28:	4a05      	ldr	r2, [pc, #20]	@ (8022a40 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd8>)
 8022a2a:	217c      	movs	r1, #124	@ 0x7c
 8022a2c:	4805      	ldr	r0, [pc, #20]	@ (8022a44 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xdc>)
 8022a2e:	f00f fd43 	bl	80324b8 <__assert_func>
 8022a32:	bf00      	nop
 8022a34:	20083364 	.word	0x20083364
 8022a38:	08000504 	.word	0x08000504
 8022a3c:	080361d4 	.word	0x080361d4
 8022a40:	08036a40 	.word	0x08036a40
 8022a44:	080361fc 	.word	0x080361fc

08022a48 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8022a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a4c:	b085      	sub	sp, #20
 8022a4e:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 8022a52:	2c00      	cmp	r4, #0
 8022a54:	d063      	beq.n	8022b1e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a56:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8022a5a:	2d00      	cmp	r5, #0
 8022a5c:	dd5f      	ble.n	8022b1e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a5e:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8022a62:	2d00      	cmp	r5, #0
 8022a64:	dd5b      	ble.n	8022b1e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a66:	460f      	mov	r7, r1
 8022a68:	4606      	mov	r6, r0
 8022a6a:	6859      	ldr	r1, [r3, #4]
 8022a6c:	6818      	ldr	r0, [r3, #0]
 8022a6e:	f8df 9124 	ldr.w	r9, [pc, #292]	@ 8022b94 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 8022a72:	ab02      	add	r3, sp, #8
 8022a74:	c303      	stmia	r3!, {r0, r1}
 8022a76:	a802      	add	r0, sp, #8
 8022a78:	4690      	mov	r8, r2
 8022a7a:	f7ea f941 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022a7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022a80:	f8d9 0000 	ldr.w	r0, [r9]
 8022a84:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8022a88:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022a8c:	b2dd      	uxtb	r5, r3
 8022a8e:	2800      	cmp	r0, #0
 8022a90:	d060      	beq.n	8022b54 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022a92:	f7fe f881 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022a96:	7b33      	ldrb	r3, [r6, #12]
 8022a98:	2b01      	cmp	r3, #1
 8022a9a:	d043      	beq.n	8022b24 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xdc>
 8022a9c:	d34e      	bcc.n	8022b3c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xf4>
 8022a9e:	2b02      	cmp	r3, #2
 8022aa0:	d15e      	bne.n	8022b60 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8022aa2:	4b33      	ldr	r3, [pc, #204]	@ (8022b70 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022aa4:	4a33      	ldr	r2, [pc, #204]	@ (8022b74 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022aa6:	8819      	ldrh	r1, [r3, #0]
 8022aa8:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8022aac:	8812      	ldrh	r2, [r2, #0]
 8022aae:	4638      	mov	r0, r7
 8022ab0:	9300      	str	r3, [sp, #0]
 8022ab2:	2310      	movs	r3, #16
 8022ab4:	f7ee fa62 	bl	8010f7c <nema_bind_dst_tex>
 8022ab8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022abc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022ac0:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022ac4:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022ac8:	f7ee f8ee 	bl	8010ca8 <nema_set_clip>
 8022acc:	f04f 33ff 	mov.w	r3, #4294967295
 8022ad0:	2100      	movs	r1, #0
 8022ad2:	461a      	mov	r2, r3
 8022ad4:	4828      	ldr	r0, [pc, #160]	@ (8022b78 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>)
 8022ad6:	f7fb fa83 	bl	801dfe0 <nema_set_blend>
 8022ada:	2200      	movs	r2, #0
 8022adc:	4623      	mov	r3, r4
 8022ade:	4611      	mov	r1, r2
 8022ae0:	4610      	mov	r0, r2
 8022ae2:	f7ee f9bf 	bl	8010e64 <nema_rgba>
 8022ae6:	f7fb fe41 	bl	801e76c <nema_set_const_color>
 8022aea:	462a      	mov	r2, r5
 8022aec:	4659      	mov	r1, fp
 8022aee:	23ff      	movs	r3, #255	@ 0xff
 8022af0:	4650      	mov	r0, sl
 8022af2:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022af6:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022afa:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022afe:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8022b02:	f7ee f9af 	bl	8010e64 <nema_rgba>
 8022b06:	463b      	mov	r3, r7
 8022b08:	9000      	str	r0, [sp, #0]
 8022b0a:	4632      	mov	r2, r6
 8022b0c:	4620      	mov	r0, r4
 8022b0e:	4629      	mov	r1, r5
 8022b10:	f7ee fbf8 	bl	8011304 <nema_fill_rect>
 8022b14:	f8d9 0000 	ldr.w	r0, [r9]
 8022b18:	b1e0      	cbz	r0, 8022b54 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022b1a:	f7fe f85d 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022b1e:	b005      	add	sp, #20
 8022b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b24:	4b12      	ldr	r3, [pc, #72]	@ (8022b70 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b26:	4a13      	ldr	r2, [pc, #76]	@ (8022b74 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b28:	8819      	ldrh	r1, [r3, #0]
 8022b2a:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8022b2e:	8812      	ldrh	r2, [r2, #0]
 8022b30:	4638      	mov	r0, r7
 8022b32:	9300      	str	r3, [sp, #0]
 8022b34:	2339      	movs	r3, #57	@ 0x39
 8022b36:	f7ee fa21 	bl	8010f7c <nema_bind_dst_tex>
 8022b3a:	e7bd      	b.n	8022ab8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b3c:	4b0c      	ldr	r3, [pc, #48]	@ (8022b70 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b3e:	4a0d      	ldr	r2, [pc, #52]	@ (8022b74 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b40:	8819      	ldrh	r1, [r3, #0]
 8022b42:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8022b46:	8812      	ldrh	r2, [r2, #0]
 8022b48:	4638      	mov	r0, r7
 8022b4a:	9300      	str	r3, [sp, #0]
 8022b4c:	2304      	movs	r3, #4
 8022b4e:	f7ee fa15 	bl	8010f7c <nema_bind_dst_tex>
 8022b52:	e7b1      	b.n	8022ab8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b54:	4b09      	ldr	r3, [pc, #36]	@ (8022b7c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>)
 8022b56:	4a0a      	ldr	r2, [pc, #40]	@ (8022b80 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x138>)
 8022b58:	217c      	movs	r1, #124	@ 0x7c
 8022b5a:	480a      	ldr	r0, [pc, #40]	@ (8022b84 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>)
 8022b5c:	f00f fcac 	bl	80324b8 <__assert_func>
 8022b60:	4b09      	ldr	r3, [pc, #36]	@ (8022b88 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x140>)
 8022b62:	4a0a      	ldr	r2, [pc, #40]	@ (8022b8c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>)
 8022b64:	f240 11a5 	movw	r1, #421	@ 0x1a5
 8022b68:	4809      	ldr	r0, [pc, #36]	@ (8022b90 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>)
 8022b6a:	f00f fca5 	bl	80324b8 <__assert_func>
 8022b6e:	bf00      	nop
 8022b70:	20082ebe 	.word	0x20082ebe
 8022b74:	20082ec0 	.word	0x20082ec0
 8022b78:	08000504 	.word	0x08000504
 8022b7c:	080361d4 	.word	0x080361d4
 8022b80:	08036a40 	.word	0x08036a40
 8022b84:	080361fc 	.word	0x080361fc
 8022b88:	08036230 	.word	0x08036230
 8022b8c:	08036afc 	.word	0x08036afc
 8022b90:	08036278 	.word	0x08036278
 8022b94:	20083364 	.word	0x20083364

08022b98 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b9c:	b091      	sub	sp, #68	@ 0x44
 8022b9e:	f89d 108c 	ldrb.w	r1, [sp, #140]	@ 0x8c
 8022ba2:	ac0a      	add	r4, sp, #40	@ 0x28
 8022ba4:	e884 000c 	stmia.w	r4, {r2, r3}
 8022ba8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8022bac:	1e4f      	subs	r7, r1, #1
 8022bae:	fa5f fc87 	uxtb.w	ip, r7
 8022bb2:	4682      	mov	sl, r0
 8022bb4:	9303      	str	r3, [sp, #12]
 8022bb6:	f89d 0090 	ldrb.w	r0, [sp, #144]	@ 0x90
 8022bba:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 8022bbe:	f1bc 0f01 	cmp.w	ip, #1
 8022bc2:	9304      	str	r3, [sp, #16]
 8022bc4:	f9bd 8068 	ldrsh.w	r8, [sp, #104]	@ 0x68
 8022bc8:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	@ 0x6c
 8022bcc:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022bce:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8022bd2:	9005      	str	r0, [sp, #20]
 8022bd4:	f89d 6094 	ldrb.w	r6, [sp, #148]	@ 0x94
 8022bd8:	d905      	bls.n	8022be6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022bda:	2904      	cmp	r1, #4
 8022bdc:	f000 80d0 	beq.w	8022d80 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8022be0:	2908      	cmp	r1, #8
 8022be2:	f040 816f 	bne.w	8022ec4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 8022be6:	7b53      	ldrb	r3, [r2, #13]
 8022be8:	7990      	ldrb	r0, [r2, #6]
 8022bea:	0159      	lsls	r1, r3, #5
 8022bec:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8022bf0:	ea50 0901 	orrs.w	r9, r0, r1
 8022bf4:	f000 80c1 	beq.w	8022d7a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022bf8:	011b      	lsls	r3, r3, #4
 8022bfa:	79d0      	ldrb	r0, [r2, #7]
 8022bfc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8022c00:	ea50 0301 	orrs.w	r3, r0, r1
 8022c04:	9306      	str	r3, [sp, #24]
 8022c06:	f000 80b8 	beq.w	8022d7a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022c0a:	f992 3009 	ldrsb.w	r3, [r2, #9]
 8022c0e:	9a03      	ldr	r2, [sp, #12]
 8022c10:	b29b      	uxth	r3, r3
 8022c12:	2a00      	cmp	r2, #0
 8022c14:	f040 80be 	bne.w	8022d94 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fc>
 8022c18:	4498      	add	r8, r3
 8022c1a:	fa0f f888 	sxth.w	r8, r8
 8022c1e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c20:	f9b3 3000 	ldrsh.w	r3, [r3]
 8022c24:	4543      	cmp	r3, r8
 8022c26:	dd06      	ble.n	8022c36 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x9e>
 8022c28:	9a03      	ldr	r2, [sp, #12]
 8022c2a:	441a      	add	r2, r3
 8022c2c:	eba2 0508 	sub.w	r5, r2, r8
 8022c30:	4698      	mov	r8, r3
 8022c32:	b2ab      	uxth	r3, r5
 8022c34:	9303      	str	r3, [sp, #12]
 8022c36:	f8df c30c 	ldr.w	ip, [pc, #780]	@ 8022f44 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8022c3a:	465a      	mov	r2, fp
 8022c3c:	f89c 5000 	ldrb.w	r5, [ip]
 8022c40:	4641      	mov	r1, r8
 8022c42:	4633      	mov	r3, r6
 8022c44:	4620      	mov	r0, r4
 8022c46:	9507      	str	r5, [sp, #28]
 8022c48:	f7e9 fece 	bl	800c9e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8022c4c:	465a      	mov	r2, fp
 8022c4e:	4641      	mov	r1, r8
 8022c50:	4633      	mov	r3, r6
 8022c52:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8022c56:	4620      	mov	r0, r4
 8022c58:	f7e9 fee3 	bl	800ca22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8022c5c:	a910      	add	r1, sp, #64	@ 0x40
 8022c5e:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 8022c62:	a80d      	add	r0, sp, #52	@ 0x34
 8022c64:	f7ea f80a 	bl	800cc7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8022c68:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022c6a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022c6e:	9308      	str	r3, [sp, #32]
 8022c70:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022c72:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022c76:	fa5f f883 	uxtb.w	r8, r3
 8022c7a:	2f07      	cmp	r7, #7
 8022c7c:	f200 811f 	bhi.w	8022ebe <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x326>
 8022c80:	e8df f017 	tbh	[pc, r7, lsl #1]
 8022c84:	009b00a1 	.word	0x009b00a1
 8022c88:	0095011d 	.word	0x0095011d
 8022c8c:	011d011d 	.word	0x011d011d
 8022c90:	0008011d 	.word	0x0008011d
 8022c94:	2708      	movs	r7, #8
 8022c96:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8022c9a:	4ca1      	ldr	r4, [pc, #644]	@ (8022f20 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8022c9c:	6820      	ldr	r0, [r4, #0]
 8022c9e:	2800      	cmp	r0, #0
 8022ca0:	f000 8137 	beq.w	8022f12 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022ca4:	f7fd ff78 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022ca8:	f8da 3000 	ldr.w	r3, [sl]
 8022cac:	4650      	mov	r0, sl
 8022cae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022cb0:	4798      	blx	r3
 8022cb2:	2e02      	cmp	r6, #2
 8022cb4:	f000 80e6 	beq.w	8022e84 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8022cb8:	2e03      	cmp	r6, #3
 8022cba:	f000 80c7 	beq.w	8022e4c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b4>
 8022cbe:	2e01      	cmp	r6, #1
 8022cc0:	f000 80a8 	beq.w	8022e14 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8022cc4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022cc6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022cca:	8819      	ldrh	r1, [r3, #0]
 8022ccc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022cd0:	440a      	add	r2, r1
 8022cd2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022cd4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022cd8:	8848      	ldrh	r0, [r1, #2]
 8022cda:	6849      	ldr	r1, [r1, #4]
 8022cdc:	4403      	add	r3, r0
 8022cde:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022ce2:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022ce4:	a80e      	add	r0, sp, #56	@ 0x38
 8022ce6:	f7ea f80b 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022cea:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022cee:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022cf2:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022cf6:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022cfa:	f7ed ffd5 	bl	8010ca8 <nema_set_clip>
 8022cfe:	2200      	movs	r2, #0
 8022d00:	9d05      	ldr	r5, [sp, #20]
 8022d02:	4611      	mov	r1, r2
 8022d04:	462b      	mov	r3, r5
 8022d06:	4610      	mov	r0, r2
 8022d08:	f7ee f8ac 	bl	8010e64 <nema_rgba>
 8022d0c:	f7fb fd2e 	bl	801e76c <nema_set_const_color>
 8022d10:	462b      	mov	r3, r5
 8022d12:	4642      	mov	r2, r8
 8022d14:	4659      	mov	r1, fp
 8022d16:	9808      	ldr	r0, [sp, #32]
 8022d18:	f7ee f8a4 	bl	8010e64 <nema_rgba>
 8022d1c:	f7ed ffb8 	bl	8010c90 <nema_set_tex_color>
 8022d20:	f04f 33ff 	mov.w	r3, #4294967295
 8022d24:	2201      	movs	r2, #1
 8022d26:	2100      	movs	r1, #0
 8022d28:	487e      	ldr	r0, [pc, #504]	@ (8022f24 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8022d2a:	f7fb f959 	bl	801dfe0 <nema_set_blend>
 8022d2e:	2200      	movs	r2, #0
 8022d30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d32:	9201      	str	r2, [sp, #4]
 8022d34:	9300      	str	r3, [sp, #0]
 8022d36:	4649      	mov	r1, r9
 8022d38:	463b      	mov	r3, r7
 8022d3a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022d3c:	9a06      	ldr	r2, [sp, #24]
 8022d3e:	f7ee f899 	bl	8010e74 <nema_bind_src_tex>
 8022d42:	9b07      	ldr	r3, [sp, #28]
 8022d44:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8022d48:	2b01      	cmp	r3, #1
 8022d4a:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	@ 0x36
 8022d4e:	d040      	beq.n	8022dd2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x23a>
 8022d50:	2e02      	cmp	r6, #2
 8022d52:	d051      	beq.n	8022df8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022d54:	2e03      	cmp	r6, #3
 8022d56:	f000 80c7 	beq.w	8022ee8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8022d5a:	2e01      	cmp	r6, #1
 8022d5c:	9b04      	ldr	r3, [sp, #16]
 8022d5e:	f000 80b8 	beq.w	8022ed2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33a>
 8022d62:	1ac9      	subs	r1, r1, r3
 8022d64:	9b03      	ldr	r3, [sp, #12]
 8022d66:	1ac0      	subs	r0, r0, r3
 8022d68:	f7ee fade 	bl	8011328 <nema_blit>
 8022d6c:	6823      	ldr	r3, [r4, #0]
 8022d6e:	2b00      	cmp	r3, #0
 8022d70:	f000 80cf 	beq.w	8022f12 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022d74:	2201      	movs	r2, #1
 8022d76:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8022d7a:	b011      	add	sp, #68	@ 0x44
 8022d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d80:	2b00      	cmp	r3, #0
 8022d82:	f47f af30 	bne.w	8022be6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022d86:	4b68      	ldr	r3, [pc, #416]	@ (8022f28 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>)
 8022d88:	4a68      	ldr	r2, [pc, #416]	@ (8022f2c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022d8a:	f240 11bb 	movw	r1, #443	@ 0x1bb
 8022d8e:	4868      	ldr	r0, [pc, #416]	@ (8022f30 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022d90:	f00f fb92 	bl	80324b8 <__assert_func>
 8022d94:	1ad5      	subs	r5, r2, r3
 8022d96:	b2ab      	uxth	r3, r5
 8022d98:	041a      	lsls	r2, r3, #16
 8022d9a:	9303      	str	r3, [sp, #12]
 8022d9c:	f57f af3f 	bpl.w	8022c1e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022da0:	eba8 0803 	sub.w	r8, r8, r3
 8022da4:	2300      	movs	r3, #0
 8022da6:	fa0f f888 	sxth.w	r8, r8
 8022daa:	9303      	str	r3, [sp, #12]
 8022dac:	e737      	b.n	8022c1e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022dae:	f109 0301 	add.w	r3, r9, #1
 8022db2:	105b      	asrs	r3, r3, #1
 8022db4:	9309      	str	r3, [sp, #36]	@ 0x24
 8022db6:	2729      	movs	r7, #41	@ 0x29
 8022db8:	e76f      	b.n	8022c9a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022dba:	f109 0303 	add.w	r3, r9, #3
 8022dbe:	109b      	asrs	r3, r3, #2
 8022dc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8022dc2:	2728      	movs	r7, #40	@ 0x28
 8022dc4:	e769      	b.n	8022c9a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022dc6:	f109 0307 	add.w	r3, r9, #7
 8022dca:	10db      	asrs	r3, r3, #3
 8022dcc:	9309      	str	r3, [sp, #36]	@ 0x24
 8022dce:	2727      	movs	r7, #39	@ 0x27
 8022dd0:	e763      	b.n	8022c9a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022dd2:	2e02      	cmp	r6, #2
 8022dd4:	f000 8093 	beq.w	8022efe <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x366>
 8022dd8:	2e03      	cmp	r6, #3
 8022dda:	d00d      	beq.n	8022df8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022ddc:	2e01      	cmp	r6, #1
 8022dde:	f000 8091 	beq.w	8022f04 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x36c>
 8022de2:	461a      	mov	r2, r3
 8022de4:	9b03      	ldr	r3, [sp, #12]
 8022de6:	4419      	add	r1, r3
 8022de8:	9b04      	ldr	r3, [sp, #16]
 8022dea:	eba1 0109 	sub.w	r1, r1, r9
 8022dee:	3101      	adds	r1, #1
 8022df0:	1ac0      	subs	r0, r0, r3
 8022df2:	f7ee fab3 	bl	801135c <nema_blit_rotate>
 8022df6:	e7b9      	b.n	8022d6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022df8:	9b04      	ldr	r3, [sp, #16]
 8022dfa:	2202      	movs	r2, #2
 8022dfc:	4419      	add	r1, r3
 8022dfe:	9b03      	ldr	r3, [sp, #12]
 8022e00:	4418      	add	r0, r3
 8022e02:	9b06      	ldr	r3, [sp, #24]
 8022e04:	eba0 0009 	sub.w	r0, r0, r9
 8022e08:	1ac9      	subs	r1, r1, r3
 8022e0a:	3101      	adds	r1, #1
 8022e0c:	3001      	adds	r0, #1
 8022e0e:	f7ee faa5 	bl	801135c <nema_blit_rotate>
 8022e12:	e7ab      	b.n	8022d6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022e14:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022e18:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022e1c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022e1e:	440b      	add	r3, r1
 8022e20:	8852      	ldrh	r2, [r2, #2]
 8022e22:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e24:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e26:	1a9b      	subs	r3, r3, r2
 8022e28:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8022e2c:	f8b0 c000 	ldrh.w	ip, [r0]
 8022e30:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8022e34:	8880      	ldrh	r0, [r0, #4]
 8022e36:	1a5b      	subs	r3, r3, r1
 8022e38:	4462      	add	r2, ip
 8022e3a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8022e3e:	f8ad 103c 	strh.w	r1, [sp, #60]	@ 0x3c
 8022e42:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8022e46:	f8ad 003e 	strh.w	r0, [sp, #62]	@ 0x3e
 8022e4a:	e74b      	b.n	8022ce4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e4c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022e50:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022e54:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022e56:	440b      	add	r3, r1
 8022e58:	8812      	ldrh	r2, [r2, #0]
 8022e5a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e5c:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e5e:	1a9b      	subs	r3, r3, r2
 8022e60:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8022e64:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 8022e68:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022e6c:	88c0      	ldrh	r0, [r0, #6]
 8022e6e:	1a5b      	subs	r3, r3, r1
 8022e70:	4462      	add	r2, ip
 8022e72:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022e76:	f8ad 103e 	strh.w	r1, [sp, #62]	@ 0x3e
 8022e7a:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022e7e:	f8ad 003c 	strh.w	r0, [sp, #60]	@ 0x3c
 8022e82:	e72f      	b.n	8022ce4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e84:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022e88:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022e8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022e90:	440a      	add	r2, r1
 8022e92:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e94:	8808      	ldrh	r0, [r1, #0]
 8022e96:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022e9a:	1a12      	subs	r2, r2, r0
 8022e9c:	440b      	add	r3, r1
 8022e9e:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022ea0:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022ea2:	8849      	ldrh	r1, [r1, #2]
 8022ea4:	8880      	ldrh	r0, [r0, #4]
 8022ea6:	1a5b      	subs	r3, r3, r1
 8022ea8:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022eaa:	1a12      	subs	r2, r2, r0
 8022eac:	88c8      	ldrh	r0, [r1, #6]
 8022eae:	6849      	ldr	r1, [r1, #4]
 8022eb0:	1a1b      	subs	r3, r3, r0
 8022eb2:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022eb6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022eba:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022ebc:	e712      	b.n	8022ce4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022ebe:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8022ec2:	e6ea      	b.n	8022c9a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022ec4:	4b1b      	ldr	r3, [pc, #108]	@ (8022f34 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8022ec6:	4a19      	ldr	r2, [pc, #100]	@ (8022f2c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022ec8:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
 8022ecc:	4818      	ldr	r0, [pc, #96]	@ (8022f30 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022ece:	f00f faf3 	bl	80324b8 <__assert_func>
 8022ed2:	4403      	add	r3, r0
 8022ed4:	4618      	mov	r0, r3
 8022ed6:	9b06      	ldr	r3, [sp, #24]
 8022ed8:	2203      	movs	r2, #3
 8022eda:	1ac0      	subs	r0, r0, r3
 8022edc:	9b03      	ldr	r3, [sp, #12]
 8022ede:	3001      	adds	r0, #1
 8022ee0:	1ac9      	subs	r1, r1, r3
 8022ee2:	f7ee fa3b 	bl	801135c <nema_blit_rotate>
 8022ee6:	e741      	b.n	8022d6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022ee8:	9b03      	ldr	r3, [sp, #12]
 8022eea:	2201      	movs	r2, #1
 8022eec:	4419      	add	r1, r3
 8022eee:	9b04      	ldr	r3, [sp, #16]
 8022ef0:	eba1 0109 	sub.w	r1, r1, r9
 8022ef4:	3101      	adds	r1, #1
 8022ef6:	1ac0      	subs	r0, r0, r3
 8022ef8:	f7ee fa30 	bl	801135c <nema_blit_rotate>
 8022efc:	e736      	b.n	8022d6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022efe:	9b04      	ldr	r3, [sp, #16]
 8022f00:	4418      	add	r0, r3
 8022f02:	e7e8      	b.n	8022ed6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8022f04:	9b04      	ldr	r3, [sp, #16]
 8022f06:	1ac9      	subs	r1, r1, r3
 8022f08:	9b03      	ldr	r3, [sp, #12]
 8022f0a:	1ac0      	subs	r0, r0, r3
 8022f0c:	f7ee fa0c 	bl	8011328 <nema_blit>
 8022f10:	e72c      	b.n	8022d6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f12:	4b09      	ldr	r3, [pc, #36]	@ (8022f38 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8022f14:	4a09      	ldr	r2, [pc, #36]	@ (8022f3c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8022f16:	217c      	movs	r1, #124	@ 0x7c
 8022f18:	4809      	ldr	r0, [pc, #36]	@ (8022f40 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8022f1a:	f00f facd 	bl	80324b8 <__assert_func>
 8022f1e:	bf00      	nop
 8022f20:	20083364 	.word	0x20083364
 8022f24:	08000504 	.word	0x08000504
 8022f28:	08036748 	.word	0x08036748
 8022f2c:	08037e7c 	.word	0x08037e7c
 8022f30:	08036278 	.word	0x08036278
 8022f34:	080366b8 	.word	0x080366b8
 8022f38:	080361d4 	.word	0x080361d4
 8022f3c:	08036a40 	.word	0x08036a40
 8022f40:	080361fc 	.word	0x080361fc
 8022f44:	20082ebc 	.word	0x20082ebc

08022f48 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8022f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f4c:	ed2d 8b08 	vpush	{d8-d11}
 8022f50:	b08b      	sub	sp, #44	@ 0x2c
 8022f52:	f89d 707c 	ldrb.w	r7, [sp, #124]	@ 0x7c
 8022f56:	e9dd 951c 	ldrd	r9, r5, [sp, #112]	@ 0x70
 8022f5a:	f8bd 8078 	ldrh.w	r8, [sp, #120]	@ 0x78
 8022f5e:	f8bd e080 	ldrh.w	lr, [sp, #128]	@ 0x80
 8022f62:	2f00      	cmp	r7, #0
 8022f64:	d067      	beq.n	8023036 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022f66:	f9b5 a004 	ldrsh.w	sl, [r5, #4]
 8022f6a:	f1ba 0f00 	cmp.w	sl, #0
 8022f6e:	dd62      	ble.n	8023036 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022f70:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8022f74:	f1ba 0f00 	cmp.w	sl, #0
 8022f78:	dd5d      	ble.n	8023036 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022f7a:	f3c8 0a87 	ubfx	sl, r8, #2, #8
 8022f7e:	f1ba 0f0b 	cmp.w	sl, #11
 8022f82:	d05d      	beq.n	8023040 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xf8>
 8022f84:	461c      	mov	r4, r3
 8022f86:	4bcd      	ldr	r3, [pc, #820]	@ (80232bc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>)
 8022f88:	4616      	mov	r6, r2
 8022f8a:	781b      	ldrb	r3, [r3, #0]
 8022f8c:	6862      	ldr	r2, [r4, #4]
 8022f8e:	2b01      	cmp	r3, #1
 8022f90:	9205      	str	r2, [sp, #20]
 8022f92:	4684      	mov	ip, r0
 8022f94:	e9d4 b202 	ldrd	fp, r2, [r4, #8]
 8022f98:	9202      	str	r2, [sp, #8]
 8022f9a:	d102      	bne.n	8022fa2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 8022f9c:	f8cd b008 	str.w	fp, [sp, #8]
 8022fa0:	4693      	mov	fp, r2
 8022fa2:	f1ba 0f0d 	cmp.w	sl, #13
 8022fa6:	d03d      	beq.n	8023024 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xdc>
 8022fa8:	4623      	mov	r3, r4
 8022faa:	4cc5      	ldr	r4, [pc, #788]	@ (80232c0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x378>)
 8022fac:	6820      	ldr	r0, [r4, #0]
 8022fae:	2800      	cmp	r0, #0
 8022fb0:	f000 8243 	beq.w	802343a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8022fb4:	681b      	ldr	r3, [r3, #0]
 8022fb6:	f8cd c010 	str.w	ip, [sp, #16]
 8022fba:	9303      	str	r3, [sp, #12]
 8022fbc:	f7fd fdec 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022fc0:	9a04      	ldr	r2, [sp, #16]
 8022fc2:	6813      	ldr	r3, [r2, #0]
 8022fc4:	4610      	mov	r0, r2
 8022fc6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022fc8:	4798      	blx	r3
 8022fca:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8022fce:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8022fd2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8022fd6:	f9b5 0000 	ldrsh.w	r0, [r5]
 8022fda:	f7ed fe65 	bl	8010ca8 <nema_set_clip>
 8022fde:	2200      	movs	r2, #0
 8022fe0:	463b      	mov	r3, r7
 8022fe2:	4611      	mov	r1, r2
 8022fe4:	4610      	mov	r0, r2
 8022fe6:	f7ed ff3d 	bl	8010e64 <nema_rgba>
 8022fea:	f7fb fbbf 	bl	801e76c <nema_set_const_color>
 8022fee:	f04f 33ff 	mov.w	r3, #4294967295
 8022ff2:	2201      	movs	r2, #1
 8022ff4:	2100      	movs	r1, #0
 8022ff6:	48b3      	ldr	r0, [pc, #716]	@ (80232c4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 8022ff8:	f7fa fff2 	bl	801dfe0 <nema_set_blend>
 8022ffc:	f1ba 0f0d 	cmp.w	sl, #13
 8023000:	f200 8221 	bhi.w	8023446 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4fe>
 8023004:	e8df f01a 	tbh	[pc, sl, lsl #1]
 8023008:	01720027 	.word	0x01720027
 802300c:	021f0170 	.word	0x021f0170
 8023010:	021f021f 	.word	0x021f021f
 8023014:	021f021f 	.word	0x021f021f
 8023018:	021f021f 	.word	0x021f021f
 802301c:	021f021f 	.word	0x021f021f
 8023020:	01570162 	.word	0x01570162
 8023024:	9b05      	ldr	r3, [sp, #20]
 8023026:	b133      	cbz	r3, 8023036 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8023028:	781b      	ldrb	r3, [r3, #0]
 802302a:	f1a3 0216 	sub.w	r2, r3, #22
 802302e:	2a01      	cmp	r2, #1
 8023030:	d9ba      	bls.n	8022fa8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023032:	2b12      	cmp	r3, #18
 8023034:	d0b8      	beq.n	8022fa8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023036:	b00b      	add	sp, #44	@ 0x2c
 8023038:	ecbd 8b08 	vpop	{d8-d11}
 802303c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023040:	e9cd 7e1f 	strd	r7, lr, [sp, #124]	@ 0x7c
 8023044:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
 8023048:	b00b      	add	sp, #44	@ 0x2c
 802304a:	ecbd 8b08 	vpop	{d8-d11}
 802304e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023052:	f7e8 bfc5 	b.w	800bfe0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8023056:	2304      	movs	r3, #4
 8023058:	f04f 31ff 	mov.w	r1, #4294967295
 802305c:	f008 0201 	and.w	r2, r8, #1
 8023060:	9201      	str	r2, [sp, #4]
 8023062:	9803      	ldr	r0, [sp, #12]
 8023064:	9a02      	ldr	r2, [sp, #8]
 8023066:	9100      	str	r1, [sp, #0]
 8023068:	4659      	mov	r1, fp
 802306a:	f7ed ff03 	bl	8010e74 <nema_bind_src_tex>
 802306e:	2001      	movs	r0, #1
 8023070:	f7ee ff9c 	bl	8011fac <nema_enable_tiling>
 8023074:	2301      	movs	r3, #1
 8023076:	461a      	mov	r2, r3
 8023078:	4619      	mov	r1, r3
 802307a:	4618      	mov	r0, r3
 802307c:	f7ee ffbe 	bl	8011ffc <nema_enable_aa>
 8023080:	edd6 7a03 	vldr	s15, [r6, #12]
 8023084:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023088:	ed96 7a04 	vldr	s14, [r6, #16]
 802308c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023090:	4607      	mov	r7, r0
 8023092:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023096:	f240 81aa 	bls.w	80233ee <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a6>
 802309a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802309e:	bf94      	ite	ls
 80230a0:	2301      	movls	r3, #1
 80230a2:	2302      	movhi	r3, #2
 80230a4:	edd6 7a08 	vldr	s15, [r6, #32]
 80230a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230ac:	2200      	movs	r2, #0
 80230ae:	ed96 7a09 	vldr	s14, [r6, #36]	@ 0x24
 80230b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230b6:	a90a      	add	r1, sp, #40	@ 0x28
 80230b8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80230bc:	f843 2c10 	str.w	r2, [r3, #-16]
 80230c0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80230c4:	f240 818d 	bls.w	80233e2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x49a>
 80230c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230cc:	bf94      	ite	ls
 80230ce:	2301      	movls	r3, #1
 80230d0:	2302      	movhi	r3, #2
 80230d2:	edd6 7a0d 	vldr	s15, [r6, #52]	@ 0x34
 80230d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230da:	2201      	movs	r2, #1
 80230dc:	ed96 7a0e 	vldr	s14, [r6, #56]	@ 0x38
 80230e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230e4:	a90a      	add	r1, sp, #40	@ 0x28
 80230e6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80230ea:	f843 2c10 	str.w	r2, [r3, #-16]
 80230ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80230f2:	f240 8188 	bls.w	8023406 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4be>
 80230f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230fa:	bf94      	ite	ls
 80230fc:	2301      	movls	r3, #1
 80230fe:	2302      	movhi	r3, #2
 8023100:	edd6 7a12 	vldr	s15, [r6, #72]	@ 0x48
 8023104:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023108:	2202      	movs	r2, #2
 802310a:	ed96 7a13 	vldr	s14, [r6, #76]	@ 0x4c
 802310e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023112:	a90a      	add	r1, sp, #40	@ 0x28
 8023114:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023118:	f843 2c10 	str.w	r2, [r3, #-16]
 802311c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023120:	f240 816b 	bls.w	80233fa <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4b2>
 8023124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023128:	bf94      	ite	ls
 802312a:	2301      	movls	r3, #1
 802312c:	2302      	movhi	r3, #2
 802312e:	2203      	movs	r2, #3
 8023130:	a90a      	add	r1, sp, #40	@ 0x28
 8023132:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023136:	f843 2c10 	str.w	r2, [r3, #-16]
 802313a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802313e:	9907      	ldr	r1, [sp, #28]
 8023140:	f340 80d6 	ble.w	80232f0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8023144:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023146:	9808      	ldr	r0, [sp, #32]
 8023148:	9a06      	ldr	r2, [sp, #24]
 802314a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 802314e:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 8023152:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8023156:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802315a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802315e:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 8023162:	eb06 080e 	add.w	r8, r6, lr
 8023166:	0089      	lsls	r1, r1, #2
 8023168:	0080      	lsls	r0, r0, #2
 802316a:	1872      	adds	r2, r6, r1
 802316c:	eb06 0a00 	add.w	sl, r6, r0
 8023170:	eb06 030c 	add.w	r3, r6, ip
 8023174:	5871      	ldr	r1, [r6, r1]
 8023176:	5830      	ldr	r0, [r6, r0]
 8023178:	f856 c00c 	ldr.w	ip, [r6, ip]
 802317c:	edd8 4a01 	vldr	s9, [r8, #4]
 8023180:	f856 800e 	ldr.w	r8, [r6, lr]
 8023184:	9e02      	ldr	r6, [sp, #8]
 8023186:	6852      	ldr	r2, [r2, #4]
 8023188:	2eff      	cmp	r6, #255	@ 0xff
 802318a:	ed9a 5a01 	vldr	s10, [sl, #4]
 802318e:	685b      	ldr	r3, [r3, #4]
 8023190:	f340 80d2 	ble.w	8023338 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f0>
 8023194:	429a      	cmp	r2, r3
 8023196:	f000 815d 	beq.w	8023454 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50c>
 802319a:	f9b9 6000 	ldrsh.w	r6, [r9]
 802319e:	ee07 ca90 	vmov	s15, ip
 80231a2:	ee08 6a90 	vmov	s17, r6
 80231a6:	f9b9 6002 	ldrsh.w	r6, [r9, #2]
 80231aa:	ee04 3a10 	vmov	s8, r3
 80231ae:	ee08 6a10 	vmov	s16, r6
 80231b2:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 80231b6:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 80231ba:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 80231be:	eef8 3ac4 	vcvt.f32.s32	s7, s8
 80231c2:	ee07 1a90 	vmov	s15, r1
 80231c6:	ee07 0a10 	vmov	s14, r0
 80231ca:	ee06 8a10 	vmov	s12, r8
 80231ce:	ee04 2a10 	vmov	s8, r2
 80231d2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80232c8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80231d6:	eef0 ba68 	vmov.f32	s23, s17
 80231da:	eeb0 ba68 	vmov.f32	s22, s17
 80231de:	eef0 aa68 	vmov.f32	s21, s17
 80231e2:	eeb0 aa48 	vmov.f32	s20, s16
 80231e6:	eef0 9a48 	vmov.f32	s19, s16
 80231ea:	eeb0 9a48 	vmov.f32	s18, s16
 80231ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80231f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80231f6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80231fa:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80231fe:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8023202:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 8023206:	f9b5 b006 	ldrsh.w	fp, [r5, #6]
 802320a:	eee5 baa6 	vfma.f32	s23, s11, s13
 802320e:	f1bb 0f00 	cmp.w	fp, #0
 8023212:	eea7 baa6 	vfma.f32	s22, s15, s13
 8023216:	eee7 aa26 	vfma.f32	s21, s14, s13
 802321a:	eee6 8a26 	vfma.f32	s17, s12, s13
 802321e:	eea3 aaa6 	vfma.f32	s20, s7, s13
 8023222:	eee4 9a26 	vfma.f32	s19, s8, s13
 8023226:	eea5 9a26 	vfma.f32	s18, s10, s13
 802322a:	eea4 8aa6 	vfma.f32	s16, s9, s13
 802322e:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 8023232:	dd38      	ble.n	80232a6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35e>
 8023234:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8023238:	f1bb 0f80 	cmp.w	fp, #128	@ 0x80
 802323c:	46da      	mov	sl, fp
 802323e:	bfa8      	it	ge
 8023240:	f04f 0a80 	movge.w	sl, #128	@ 0x80
 8023244:	2e00      	cmp	r6, #0
 8023246:	f9b5 8000 	ldrsh.w	r8, [r5]
 802324a:	dd25      	ble.n	8023298 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x350>
 802324c:	2e80      	cmp	r6, #128	@ 0x80
 802324e:	4632      	mov	r2, r6
 8023250:	4640      	mov	r0, r8
 8023252:	4653      	mov	r3, sl
 8023254:	bfa8      	it	ge
 8023256:	2280      	movge	r2, #128	@ 0x80
 8023258:	4649      	mov	r1, r9
 802325a:	f7ed fd25 	bl	8010ca8 <nema_set_clip>
 802325e:	eef0 3a48 	vmov.f32	s7, s16
 8023262:	eeb0 3a68 	vmov.f32	s6, s17
 8023266:	eef0 2a49 	vmov.f32	s5, s18
 802326a:	eeb0 2a6a 	vmov.f32	s4, s21
 802326e:	eef0 1a69 	vmov.f32	s3, s19
 8023272:	eeb0 1a4b 	vmov.f32	s2, s22
 8023276:	eef0 0a4a 	vmov.f32	s1, s20
 802327a:	eeb0 0a6b 	vmov.f32	s0, s23
 802327e:	f7ee f9cd 	bl	801161c <nema_blit_quad_fit>
 8023282:	6820      	ldr	r0, [r4, #0]
 8023284:	2800      	cmp	r0, #0
 8023286:	f000 80d8 	beq.w	802343a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 802328a:	3e80      	subs	r6, #128	@ 0x80
 802328c:	f7fd fca4 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023290:	2e00      	cmp	r6, #0
 8023292:	f108 0880 	add.w	r8, r8, #128	@ 0x80
 8023296:	dcd9      	bgt.n	802324c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>
 8023298:	f1ab 0b80 	sub.w	fp, fp, #128	@ 0x80
 802329c:	f1bb 0f00 	cmp.w	fp, #0
 80232a0:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 80232a4:	dcc6      	bgt.n	8023234 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ec>
 80232a6:	4638      	mov	r0, r7
 80232a8:	b00b      	add	sp, #44	@ 0x2c
 80232aa:	ecbd 8b08 	vpop	{d8-d11}
 80232ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232b2:	f7ee bec5 	b.w	8012040 <nema_enable_aa_flags>
 80232b6:	9b05      	ldr	r3, [sp, #20]
 80232b8:	781b      	ldrb	r3, [r3, #0]
 80232ba:	e6cd      	b.n	8023058 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232bc:	20082ebc 	.word	0x20082ebc
 80232c0:	20083364 	.word	0x20083364
 80232c4:	08000504 	.word	0x08000504
 80232c8:	3d800000 	.word	0x3d800000
 80232cc:	4a65      	ldr	r2, [pc, #404]	@ (8023464 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x51c>)
 80232ce:	23ff      	movs	r3, #255	@ 0xff
 80232d0:	6810      	ldr	r0, [r2, #0]
 80232d2:	b2c2      	uxtb	r2, r0
 80232d4:	f3c0 2107 	ubfx	r1, r0, #8, #8
 80232d8:	f3c0 4007 	ubfx	r0, r0, #16, #8
 80232dc:	f7ed fdc2 	bl	8010e64 <nema_rgba>
 80232e0:	f7ed fcd6 	bl	8010c90 <nema_set_tex_color>
 80232e4:	2329      	movs	r3, #41	@ 0x29
 80232e6:	e6b7      	b.n	8023058 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232e8:	2310      	movs	r3, #16
 80232ea:	e6b5      	b.n	8023058 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232ec:	2339      	movs	r3, #57	@ 0x39
 80232ee:	e6b3      	b.n	8023058 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232f0:	9b08      	ldr	r3, [sp, #32]
 80232f2:	9806      	ldr	r0, [sp, #24]
 80232f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80232f6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80232fa:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80232fe:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8023302:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8023306:	009b      	lsls	r3, r3, #2
 8023308:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 802330c:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 8023310:	0089      	lsls	r1, r1, #2
 8023312:	18f0      	adds	r0, r6, r3
 8023314:	1872      	adds	r2, r6, r1
 8023316:	eb06 0a0c 	add.w	sl, r6, ip
 802331a:	eb06 080e 	add.w	r8, r6, lr
 802331e:	ed90 5a01 	vldr	s10, [r0, #4]
 8023322:	edd8 4a01 	vldr	s9, [r8, #4]
 8023326:	58f0      	ldr	r0, [r6, r3]
 8023328:	6852      	ldr	r2, [r2, #4]
 802332a:	5871      	ldr	r1, [r6, r1]
 802332c:	f8da 3004 	ldr.w	r3, [sl, #4]
 8023330:	f856 c00c 	ldr.w	ip, [r6, ip]
 8023334:	f856 800e 	ldr.w	r8, [r6, lr]
 8023338:	429a      	cmp	r2, r3
 802333a:	d06a      	beq.n	8023412 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ca>
 802333c:	ee07 8a90 	vmov	s15, r8
 8023340:	f9b9 5000 	ldrsh.w	r5, [r9]
 8023344:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8023348:	ee00 5a10 	vmov	s0, r5
 802334c:	ee07 0a90 	vmov	s15, r0
 8023350:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 8023354:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8023358:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802335c:	ee00 5a90 	vmov	s1, r5
 8023360:	ee07 1a90 	vmov	s15, r1
 8023364:	eddf 6a40 	vldr	s13, [pc, #256]	@ 8023468 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x520>
 8023368:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 802336c:	ee04 2a10 	vmov	s8, r2
 8023370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023374:	eeb0 1a40 	vmov.f32	s2, s0
 8023378:	eef8 1ac4 	vcvt.f32.s32	s3, s8
 802337c:	ee05 ca90 	vmov	s11, ip
 8023380:	ee04 3a10 	vmov	s8, r3
 8023384:	eea7 1aa6 	vfma.f32	s2, s15, s13
 8023388:	eef0 7a60 	vmov.f32	s15, s1
 802338c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8023390:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 8023394:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8023398:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 802339c:	eeb0 3a40 	vmov.f32	s6, s0
 80233a0:	eeb0 2a40 	vmov.f32	s4, s0
 80233a4:	eef0 3a60 	vmov.f32	s7, s1
 80233a8:	eef0 2a60 	vmov.f32	s5, s1
 80233ac:	eee1 7aa6 	vfma.f32	s15, s3, s13
 80233b0:	eea6 3a26 	vfma.f32	s6, s12, s13
 80233b4:	eea7 2a26 	vfma.f32	s4, s14, s13
 80233b8:	eea5 0aa6 	vfma.f32	s0, s11, s13
 80233bc:	eee4 3aa6 	vfma.f32	s7, s9, s13
 80233c0:	eee5 2a26 	vfma.f32	s5, s10, s13
 80233c4:	eef0 1a67 	vmov.f32	s3, s15
 80233c8:	eee4 0a26 	vfma.f32	s1, s8, s13
 80233cc:	f7ee f926 	bl	801161c <nema_blit_quad_fit>
 80233d0:	6820      	ldr	r0, [r4, #0]
 80233d2:	b390      	cbz	r0, 802343a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 80233d4:	b00b      	add	sp, #44	@ 0x2c
 80233d6:	ecbd 8b08 	vpop	{d8-d11}
 80233da:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233de:	f7fd bbfb 	b.w	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80233e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233e6:	bf94      	ite	ls
 80233e8:	4613      	movls	r3, r2
 80233ea:	2303      	movhi	r3, #3
 80233ec:	e671      	b.n	80230d2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18a>
 80233ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233f2:	bf94      	ite	ls
 80233f4:	2300      	movls	r3, #0
 80233f6:	2303      	movhi	r3, #3
 80233f8:	e654      	b.n	80230a4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x15c>
 80233fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233fe:	bf94      	ite	ls
 8023400:	2300      	movls	r3, #0
 8023402:	2303      	movhi	r3, #3
 8023404:	e693      	b.n	802312e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e6>
 8023406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802340a:	bf94      	ite	ls
 802340c:	2300      	movls	r3, #0
 802340e:	2303      	movhi	r3, #3
 8023410:	e676      	b.n	8023100 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1b8>
 8023412:	4281      	cmp	r1, r0
 8023414:	d192      	bne.n	802333c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 8023416:	2200      	movs	r2, #0
 8023418:	ee15 6a10 	vmov	r6, s10
 802341c:	ee14 ea90 	vmov	lr, s9
 8023420:	4576      	cmp	r6, lr
 8023422:	d002      	beq.n	802342a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4e2>
 8023424:	b1da      	cbz	r2, 802345e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x516>
 8023426:	461a      	mov	r2, r3
 8023428:	e6b7      	b.n	802319a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802342a:	45c4      	cmp	ip, r8
 802342c:	d1fa      	bne.n	8023424 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4dc>
 802342e:	460d      	mov	r5, r1
 8023430:	46e0      	mov	r8, ip
 8023432:	4601      	mov	r1, r0
 8023434:	461a      	mov	r2, r3
 8023436:	4628      	mov	r0, r5
 8023438:	e780      	b.n	802333c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 802343a:	4b0c      	ldr	r3, [pc, #48]	@ (802346c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x524>)
 802343c:	4a0c      	ldr	r2, [pc, #48]	@ (8023470 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x528>)
 802343e:	217c      	movs	r1, #124	@ 0x7c
 8023440:	480c      	ldr	r0, [pc, #48]	@ (8023474 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x52c>)
 8023442:	f00f f839 	bl	80324b8 <__assert_func>
 8023446:	4b0c      	ldr	r3, [pc, #48]	@ (8023478 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x530>)
 8023448:	4a0c      	ldr	r2, [pc, #48]	@ (802347c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x534>)
 802344a:	f44f 7157 	mov.w	r1, #860	@ 0x35c
 802344e:	480c      	ldr	r0, [pc, #48]	@ (8023480 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x538>)
 8023450:	f00f f832 	bl	80324b8 <__assert_func>
 8023454:	4281      	cmp	r1, r0
 8023456:	f47f aea0 	bne.w	802319a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802345a:	2201      	movs	r2, #1
 802345c:	e7dc      	b.n	8023418 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d0>
 802345e:	461a      	mov	r2, r3
 8023460:	e76c      	b.n	802333c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 8023462:	bf00      	nop
 8023464:	20082ecc 	.word	0x20082ecc
 8023468:	3d800000 	.word	0x3d800000
 802346c:	080361d4 	.word	0x080361d4
 8023470:	08036a40 	.word	0x08036a40
 8023474:	080361fc 	.word	0x080361fc
 8023478:	080360cc 	.word	0x080360cc
 802347c:	08036bf8 	.word	0x08036bf8
 8023480:	08036278 	.word	0x08036278

08023484 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8023484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023488:	4680      	mov	r8, r0
 802348a:	460f      	mov	r7, r1
 802348c:	4614      	mov	r4, r2
 802348e:	461e      	mov	r6, r3
 8023490:	4db2      	ldr	r5, [pc, #712]	@ (802375c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 8023492:	e8d5 3f8f 	ldab	r3, [r5]
 8023496:	07da      	lsls	r2, r3, #31
 8023498:	f140 823a 	bpl.w	8023910 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 802349c:	4db0      	ldr	r5, [pc, #704]	@ (8023760 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 802349e:	e8d5 3f8f 	ldab	r3, [r5]
 80234a2:	07db      	lsls	r3, r3, #31
 80234a4:	f140 8225 	bpl.w	80238f2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 80234a8:	4dae      	ldr	r5, [pc, #696]	@ (8023764 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 80234aa:	e8d5 3f8f 	ldab	r3, [r5]
 80234ae:	07d8      	lsls	r0, r3, #31
 80234b0:	f140 8210 	bpl.w	80238d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 80234b4:	4dac      	ldr	r5, [pc, #688]	@ (8023768 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 80234b6:	e8d5 3f8f 	ldab	r3, [r5]
 80234ba:	07d9      	lsls	r1, r3, #31
 80234bc:	f140 81fb 	bpl.w	80238b6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 80234c0:	4daa      	ldr	r5, [pc, #680]	@ (802376c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 80234c2:	e8d5 3f8f 	ldab	r3, [r5]
 80234c6:	07da      	lsls	r2, r3, #31
 80234c8:	f140 81e6 	bpl.w	8023898 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 80234cc:	4da8      	ldr	r5, [pc, #672]	@ (8023770 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 80234ce:	e8d5 3f8f 	ldab	r3, [r5]
 80234d2:	07db      	lsls	r3, r3, #31
 80234d4:	f140 81d1 	bpl.w	802387a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 80234d8:	4da6      	ldr	r5, [pc, #664]	@ (8023774 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 80234da:	e8d5 3f8f 	ldab	r3, [r5]
 80234de:	07d8      	lsls	r0, r3, #31
 80234e0:	f140 81bc 	bpl.w	802385c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 80234e4:	4da4      	ldr	r5, [pc, #656]	@ (8023778 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 80234e6:	e8d5 3f8f 	ldab	r3, [r5]
 80234ea:	07d9      	lsls	r1, r3, #31
 80234ec:	f140 81a7 	bpl.w	802383e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 80234f0:	4da2      	ldr	r5, [pc, #648]	@ (802377c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 80234f2:	e8d5 3f8f 	ldab	r3, [r5]
 80234f6:	07da      	lsls	r2, r3, #31
 80234f8:	f140 8192 	bpl.w	8023820 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 80234fc:	4da0      	ldr	r5, [pc, #640]	@ (8023780 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 80234fe:	e8d5 3f8f 	ldab	r3, [r5]
 8023502:	07db      	lsls	r3, r3, #31
 8023504:	f140 811a 	bpl.w	802373c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 8023508:	4d9e      	ldr	r5, [pc, #632]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 802350a:	e8d5 3f8f 	ldab	r3, [r5]
 802350e:	07d8      	lsls	r0, r3, #31
 8023510:	f140 8105 	bpl.w	802371e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 8023514:	4d9c      	ldr	r5, [pc, #624]	@ (8023788 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 8023516:	e8d5 3f8f 	ldab	r3, [r5]
 802351a:	07d9      	lsls	r1, r3, #31
 802351c:	f140 80f0 	bpl.w	8023700 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 8023520:	4d9a      	ldr	r5, [pc, #616]	@ (802378c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 8023522:	e8d5 3f8f 	ldab	r3, [r5]
 8023526:	07da      	lsls	r2, r3, #31
 8023528:	f140 80db 	bpl.w	80236e2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 802352c:	4d98      	ldr	r5, [pc, #608]	@ (8023790 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 802352e:	e8d5 3f8f 	ldab	r3, [r5]
 8023532:	07db      	lsls	r3, r3, #31
 8023534:	f140 80c6 	bpl.w	80236c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 8023538:	4d96      	ldr	r5, [pc, #600]	@ (8023794 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 802353a:	e8d5 3f8f 	ldab	r3, [r5]
 802353e:	07d8      	lsls	r0, r3, #31
 8023540:	f140 80b1 	bpl.w	80236a6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 8023544:	4d94      	ldr	r5, [pc, #592]	@ (8023798 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 8023546:	e8d5 3f8f 	ldab	r3, [r5]
 802354a:	07d9      	lsls	r1, r3, #31
 802354c:	f140 809c 	bpl.w	8023688 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 8023550:	4d92      	ldr	r5, [pc, #584]	@ (802379c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 8023552:	e8d5 3f8f 	ldab	r3, [r5]
 8023556:	07da      	lsls	r2, r3, #31
 8023558:	f140 8087 	bpl.w	802366a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 802355c:	4d90      	ldr	r5, [pc, #576]	@ (80237a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 802355e:	e8d5 3f8f 	ldab	r3, [r5]
 8023562:	07db      	lsls	r3, r3, #31
 8023564:	d573      	bpl.n	802364e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 8023566:	4d8f      	ldr	r5, [pc, #572]	@ (80237a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 8023568:	e8d5 3f8f 	ldab	r3, [r5]
 802356c:	07d8      	lsls	r0, r3, #31
 802356e:	d560      	bpl.n	8023632 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 8023570:	4d8d      	ldr	r5, [pc, #564]	@ (80237a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 8023572:	e8d5 3f8f 	ldab	r3, [r5]
 8023576:	07d9      	lsls	r1, r3, #31
 8023578:	d54d      	bpl.n	8023616 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 802357a:	4d8c      	ldr	r5, [pc, #560]	@ (80237ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 802357c:	e8d5 3f8f 	ldab	r3, [r5]
 8023580:	07da      	lsls	r2, r3, #31
 8023582:	d53a      	bpl.n	80235fa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8023584:	4d8a      	ldr	r5, [pc, #552]	@ (80237b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 8023586:	e8d5 3f8f 	ldab	r3, [r5]
 802358a:	07db      	lsls	r3, r3, #31
 802358c:	d517      	bpl.n	80235be <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 802358e:	f898 300c 	ldrb.w	r3, [r8, #12]
 8023592:	2b01      	cmp	r3, #1
 8023594:	d024      	beq.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 8023596:	f0c0 81ca 	bcc.w	802392e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 802359a:	2b02      	cmp	r3, #2
 802359c:	d002      	beq.n	80235a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 802359e:	2000      	movs	r0, #0
 80235a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80235a4:	2eff      	cmp	r6, #255	@ 0xff
 80235a6:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 80235aa:	f000 81cb 	beq.w	8023944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 80235ae:	2c03      	cmp	r4, #3
 80235b0:	d8f5      	bhi.n	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80235b2:	e8df f014 	tbh	[pc, r4, lsl #1]
 80235b6:	01ff      	.short	0x01ff
 80235b8:	01e701ee 	.word	0x01e701ee
 80235bc:	01e0      	.short	0x01e0
 80235be:	4628      	mov	r0, r5
 80235c0:	f00d fda3 	bl	803110a <__cxa_guard_acquire>
 80235c4:	2800      	cmp	r0, #0
 80235c6:	d0e2      	beq.n	802358e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 80235c8:	4628      	mov	r0, r5
 80235ca:	f00d fdaa 	bl	8031122 <__cxa_guard_release>
 80235ce:	4a79      	ldr	r2, [pc, #484]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80235d0:	4979      	ldr	r1, [pc, #484]	@ (80237b8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 80235d2:	487a      	ldr	r0, [pc, #488]	@ (80237bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 80235d4:	f00d fd92 	bl	80310fc <__aeabi_atexit>
 80235d8:	f898 300c 	ldrb.w	r3, [r8, #12]
 80235dc:	2b01      	cmp	r3, #1
 80235de:	d1da      	bne.n	8023596 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 80235e0:	2eff      	cmp	r6, #255	@ 0xff
 80235e2:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 80235e6:	f000 81b6 	beq.w	8023956 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 80235ea:	2c03      	cmp	r4, #3
 80235ec:	d8d7      	bhi.n	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80235ee:	e8df f014 	tbh	[pc, r4, lsl #1]
 80235f2:	0233      	.short	0x0233
 80235f4:	021b0222 	.word	0x021b0222
 80235f8:	0214      	.short	0x0214
 80235fa:	4628      	mov	r0, r5
 80235fc:	f00d fd85 	bl	803110a <__cxa_guard_acquire>
 8023600:	2800      	cmp	r0, #0
 8023602:	d0bf      	beq.n	8023584 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8023604:	4628      	mov	r0, r5
 8023606:	f00d fd8c 	bl	8031122 <__cxa_guard_release>
 802360a:	4a6a      	ldr	r2, [pc, #424]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802360c:	496c      	ldr	r1, [pc, #432]	@ (80237c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 802360e:	486d      	ldr	r0, [pc, #436]	@ (80237c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 8023610:	f00d fd74 	bl	80310fc <__aeabi_atexit>
 8023614:	e7b6      	b.n	8023584 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8023616:	4628      	mov	r0, r5
 8023618:	f00d fd77 	bl	803110a <__cxa_guard_acquire>
 802361c:	2800      	cmp	r0, #0
 802361e:	d0ac      	beq.n	802357a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023620:	4628      	mov	r0, r5
 8023622:	f00d fd7e 	bl	8031122 <__cxa_guard_release>
 8023626:	4a63      	ldr	r2, [pc, #396]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023628:	4967      	ldr	r1, [pc, #412]	@ (80237c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 802362a:	4868      	ldr	r0, [pc, #416]	@ (80237cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 802362c:	f00d fd66 	bl	80310fc <__aeabi_atexit>
 8023630:	e7a3      	b.n	802357a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023632:	4628      	mov	r0, r5
 8023634:	f00d fd69 	bl	803110a <__cxa_guard_acquire>
 8023638:	2800      	cmp	r0, #0
 802363a:	d099      	beq.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802363c:	4628      	mov	r0, r5
 802363e:	f00d fd70 	bl	8031122 <__cxa_guard_release>
 8023642:	4a5c      	ldr	r2, [pc, #368]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023644:	4962      	ldr	r1, [pc, #392]	@ (80237d0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 8023646:	4863      	ldr	r0, [pc, #396]	@ (80237d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 8023648:	f00d fd58 	bl	80310fc <__aeabi_atexit>
 802364c:	e790      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802364e:	4628      	mov	r0, r5
 8023650:	f00d fd5b 	bl	803110a <__cxa_guard_acquire>
 8023654:	2800      	cmp	r0, #0
 8023656:	d086      	beq.n	8023566 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8023658:	4628      	mov	r0, r5
 802365a:	f00d fd62 	bl	8031122 <__cxa_guard_release>
 802365e:	4a55      	ldr	r2, [pc, #340]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023660:	495d      	ldr	r1, [pc, #372]	@ (80237d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 8023662:	485e      	ldr	r0, [pc, #376]	@ (80237dc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 8023664:	f00d fd4a 	bl	80310fc <__aeabi_atexit>
 8023668:	e77d      	b.n	8023566 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 802366a:	4628      	mov	r0, r5
 802366c:	f00d fd4d 	bl	803110a <__cxa_guard_acquire>
 8023670:	2800      	cmp	r0, #0
 8023672:	f43f af73 	beq.w	802355c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8023676:	4628      	mov	r0, r5
 8023678:	f00d fd53 	bl	8031122 <__cxa_guard_release>
 802367c:	4a4d      	ldr	r2, [pc, #308]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802367e:	4958      	ldr	r1, [pc, #352]	@ (80237e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 8023680:	4858      	ldr	r0, [pc, #352]	@ (80237e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 8023682:	f00d fd3b 	bl	80310fc <__aeabi_atexit>
 8023686:	e769      	b.n	802355c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8023688:	4628      	mov	r0, r5
 802368a:	f00d fd3e 	bl	803110a <__cxa_guard_acquire>
 802368e:	2800      	cmp	r0, #0
 8023690:	f43f af5e 	beq.w	8023550 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8023694:	4628      	mov	r0, r5
 8023696:	f00d fd44 	bl	8031122 <__cxa_guard_release>
 802369a:	4a46      	ldr	r2, [pc, #280]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802369c:	4952      	ldr	r1, [pc, #328]	@ (80237e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 802369e:	4853      	ldr	r0, [pc, #332]	@ (80237ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 80236a0:	f00d fd2c 	bl	80310fc <__aeabi_atexit>
 80236a4:	e754      	b.n	8023550 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 80236a6:	4628      	mov	r0, r5
 80236a8:	f00d fd2f 	bl	803110a <__cxa_guard_acquire>
 80236ac:	2800      	cmp	r0, #0
 80236ae:	f43f af49 	beq.w	8023544 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 80236b2:	4628      	mov	r0, r5
 80236b4:	f00d fd35 	bl	8031122 <__cxa_guard_release>
 80236b8:	4a3e      	ldr	r2, [pc, #248]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236ba:	494d      	ldr	r1, [pc, #308]	@ (80237f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 80236bc:	484d      	ldr	r0, [pc, #308]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 80236be:	f00d fd1d 	bl	80310fc <__aeabi_atexit>
 80236c2:	e73f      	b.n	8023544 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 80236c4:	4628      	mov	r0, r5
 80236c6:	f00d fd20 	bl	803110a <__cxa_guard_acquire>
 80236ca:	2800      	cmp	r0, #0
 80236cc:	f43f af34 	beq.w	8023538 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 80236d0:	4628      	mov	r0, r5
 80236d2:	f00d fd26 	bl	8031122 <__cxa_guard_release>
 80236d6:	4a37      	ldr	r2, [pc, #220]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236d8:	4947      	ldr	r1, [pc, #284]	@ (80237f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 80236da:	4848      	ldr	r0, [pc, #288]	@ (80237fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 80236dc:	f00d fd0e 	bl	80310fc <__aeabi_atexit>
 80236e0:	e72a      	b.n	8023538 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 80236e2:	4628      	mov	r0, r5
 80236e4:	f00d fd11 	bl	803110a <__cxa_guard_acquire>
 80236e8:	2800      	cmp	r0, #0
 80236ea:	f43f af1f 	beq.w	802352c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 80236ee:	4628      	mov	r0, r5
 80236f0:	f00d fd17 	bl	8031122 <__cxa_guard_release>
 80236f4:	4a2f      	ldr	r2, [pc, #188]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236f6:	4942      	ldr	r1, [pc, #264]	@ (8023800 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 80236f8:	4842      	ldr	r0, [pc, #264]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 80236fa:	f00d fcff 	bl	80310fc <__aeabi_atexit>
 80236fe:	e715      	b.n	802352c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 8023700:	4628      	mov	r0, r5
 8023702:	f00d fd02 	bl	803110a <__cxa_guard_acquire>
 8023706:	2800      	cmp	r0, #0
 8023708:	f43f af0a 	beq.w	8023520 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 802370c:	4628      	mov	r0, r5
 802370e:	f00d fd08 	bl	8031122 <__cxa_guard_release>
 8023712:	4a28      	ldr	r2, [pc, #160]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023714:	493c      	ldr	r1, [pc, #240]	@ (8023808 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 8023716:	483d      	ldr	r0, [pc, #244]	@ (802380c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 8023718:	f00d fcf0 	bl	80310fc <__aeabi_atexit>
 802371c:	e700      	b.n	8023520 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 802371e:	4628      	mov	r0, r5
 8023720:	f00d fcf3 	bl	803110a <__cxa_guard_acquire>
 8023724:	2800      	cmp	r0, #0
 8023726:	f43f aef5 	beq.w	8023514 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802372a:	4628      	mov	r0, r5
 802372c:	f00d fcf9 	bl	8031122 <__cxa_guard_release>
 8023730:	4a20      	ldr	r2, [pc, #128]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023732:	4937      	ldr	r1, [pc, #220]	@ (8023810 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 8023734:	4837      	ldr	r0, [pc, #220]	@ (8023814 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 8023736:	f00d fce1 	bl	80310fc <__aeabi_atexit>
 802373a:	e6eb      	b.n	8023514 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802373c:	4628      	mov	r0, r5
 802373e:	f00d fce4 	bl	803110a <__cxa_guard_acquire>
 8023742:	2800      	cmp	r0, #0
 8023744:	f43f aee0 	beq.w	8023508 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 8023748:	4628      	mov	r0, r5
 802374a:	f00d fcea 	bl	8031122 <__cxa_guard_release>
 802374e:	4a19      	ldr	r2, [pc, #100]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023750:	4931      	ldr	r1, [pc, #196]	@ (8023818 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 8023752:	4832      	ldr	r0, [pc, #200]	@ (802381c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 8023754:	f00d fcd2 	bl	80310fc <__aeabi_atexit>
 8023758:	e6d6      	b.n	8023508 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 802375a:	bf00      	nop
 802375c:	2008338c 	.word	0x2008338c
 8023760:	200833a0 	.word	0x200833a0
 8023764:	20083368 	.word	0x20083368
 8023768:	20083374 	.word	0x20083374
 802376c:	200833ac 	.word	0x200833ac
 8023770:	200833b8 	.word	0x200833b8
 8023774:	20083380 	.word	0x20083380
 8023778:	20083398 	.word	0x20083398
 802377c:	20083390 	.word	0x20083390
 8023780:	200833a4 	.word	0x200833a4
 8023784:	2008336c 	.word	0x2008336c
 8023788:	20083378 	.word	0x20083378
 802378c:	200833b0 	.word	0x200833b0
 8023790:	200833bc 	.word	0x200833bc
 8023794:	20083384 	.word	0x20083384
 8023798:	2008339c 	.word	0x2008339c
 802379c:	20083394 	.word	0x20083394
 80237a0:	200833a8 	.word	0x200833a8
 80237a4:	20083370 	.word	0x20083370
 80237a8:	2008337c 	.word	0x2008337c
 80237ac:	200833b4 	.word	0x200833b4
 80237b0:	20083388 	.word	0x20083388
 80237b4:	20000000 	.word	0x20000000
 80237b8:	08022809 	.word	0x08022809
 80237bc:	2000020c 	.word	0x2000020c
 80237c0:	08022805 	.word	0x08022805
 80237c4:	20000238 	.word	0x20000238
 80237c8:	08022815 	.word	0x08022815
 80237cc:	20000200 	.word	0x20000200
 80237d0:	08022819 	.word	0x08022819
 80237d4:	200001f4 	.word	0x200001f4
 80237d8:	0802280d 	.word	0x0802280d
 80237dc:	2000022c 	.word	0x2000022c
 80237e0:	08022811 	.word	0x08022811
 80237e4:	20000218 	.word	0x20000218
 80237e8:	08022825 	.word	0x08022825
 80237ec:	20000220 	.word	0x20000220
 80237f0:	08022829 	.word	0x08022829
 80237f4:	20000208 	.word	0x20000208
 80237f8:	0802281d 	.word	0x0802281d
 80237fc:	20000240 	.word	0x20000240
 8023800:	08022821 	.word	0x08022821
 8023804:	20000234 	.word	0x20000234
 8023808:	08022835 	.word	0x08022835
 802380c:	200001fc 	.word	0x200001fc
 8023810:	08022839 	.word	0x08022839
 8023814:	200001f0 	.word	0x200001f0
 8023818:	0802282d 	.word	0x0802282d
 802381c:	20000228 	.word	0x20000228
 8023820:	4628      	mov	r0, r5
 8023822:	f00d fc72 	bl	803110a <__cxa_guard_acquire>
 8023826:	2800      	cmp	r0, #0
 8023828:	f43f ae68 	beq.w	80234fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802382c:	4628      	mov	r0, r5
 802382e:	f00d fc78 	bl	8031122 <__cxa_guard_release>
 8023832:	4aa6      	ldr	r2, [pc, #664]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023834:	49a6      	ldr	r1, [pc, #664]	@ (8023ad0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 8023836:	48a7      	ldr	r0, [pc, #668]	@ (8023ad4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 8023838:	f00d fc60 	bl	80310fc <__aeabi_atexit>
 802383c:	e65e      	b.n	80234fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802383e:	4628      	mov	r0, r5
 8023840:	f00d fc63 	bl	803110a <__cxa_guard_acquire>
 8023844:	2800      	cmp	r0, #0
 8023846:	f43f ae53 	beq.w	80234f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802384a:	4628      	mov	r0, r5
 802384c:	f00d fc69 	bl	8031122 <__cxa_guard_release>
 8023850:	4a9e      	ldr	r2, [pc, #632]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023852:	49a1      	ldr	r1, [pc, #644]	@ (8023ad8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 8023854:	48a1      	ldr	r0, [pc, #644]	@ (8023adc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023856:	f00d fc51 	bl	80310fc <__aeabi_atexit>
 802385a:	e649      	b.n	80234f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802385c:	4628      	mov	r0, r5
 802385e:	f00d fc54 	bl	803110a <__cxa_guard_acquire>
 8023862:	2800      	cmp	r0, #0
 8023864:	f43f ae3e 	beq.w	80234e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8023868:	4628      	mov	r0, r5
 802386a:	f00d fc5a 	bl	8031122 <__cxa_guard_release>
 802386e:	4a97      	ldr	r2, [pc, #604]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023870:	499b      	ldr	r1, [pc, #620]	@ (8023ae0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 8023872:	489c      	ldr	r0, [pc, #624]	@ (8023ae4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8023874:	f00d fc42 	bl	80310fc <__aeabi_atexit>
 8023878:	e634      	b.n	80234e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 802387a:	4628      	mov	r0, r5
 802387c:	f00d fc45 	bl	803110a <__cxa_guard_acquire>
 8023880:	2800      	cmp	r0, #0
 8023882:	f43f ae29 	beq.w	80234d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8023886:	4628      	mov	r0, r5
 8023888:	f00d fc4b 	bl	8031122 <__cxa_guard_release>
 802388c:	4a8f      	ldr	r2, [pc, #572]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 802388e:	4996      	ldr	r1, [pc, #600]	@ (8023ae8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 8023890:	4896      	ldr	r0, [pc, #600]	@ (8023aec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023892:	f00d fc33 	bl	80310fc <__aeabi_atexit>
 8023896:	e61f      	b.n	80234d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8023898:	4628      	mov	r0, r5
 802389a:	f00d fc36 	bl	803110a <__cxa_guard_acquire>
 802389e:	2800      	cmp	r0, #0
 80238a0:	f43f ae14 	beq.w	80234cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 80238a4:	4628      	mov	r0, r5
 80238a6:	f00d fc3c 	bl	8031122 <__cxa_guard_release>
 80238aa:	4a88      	ldr	r2, [pc, #544]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238ac:	4990      	ldr	r1, [pc, #576]	@ (8023af0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 80238ae:	4891      	ldr	r0, [pc, #580]	@ (8023af4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 80238b0:	f00d fc24 	bl	80310fc <__aeabi_atexit>
 80238b4:	e60a      	b.n	80234cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 80238b6:	4628      	mov	r0, r5
 80238b8:	f00d fc27 	bl	803110a <__cxa_guard_acquire>
 80238bc:	2800      	cmp	r0, #0
 80238be:	f43f adff 	beq.w	80234c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 80238c2:	4628      	mov	r0, r5
 80238c4:	f00d fc2d 	bl	8031122 <__cxa_guard_release>
 80238c8:	4a80      	ldr	r2, [pc, #512]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238ca:	498b      	ldr	r1, [pc, #556]	@ (8023af8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 80238cc:	488b      	ldr	r0, [pc, #556]	@ (8023afc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 80238ce:	f00d fc15 	bl	80310fc <__aeabi_atexit>
 80238d2:	e5f5      	b.n	80234c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 80238d4:	4628      	mov	r0, r5
 80238d6:	f00d fc18 	bl	803110a <__cxa_guard_acquire>
 80238da:	2800      	cmp	r0, #0
 80238dc:	f43f adea 	beq.w	80234b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 80238e0:	4628      	mov	r0, r5
 80238e2:	f00d fc1e 	bl	8031122 <__cxa_guard_release>
 80238e6:	4a79      	ldr	r2, [pc, #484]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238e8:	4985      	ldr	r1, [pc, #532]	@ (8023b00 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 80238ea:	4886      	ldr	r0, [pc, #536]	@ (8023b04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 80238ec:	f00d fc06 	bl	80310fc <__aeabi_atexit>
 80238f0:	e5e0      	b.n	80234b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 80238f2:	4628      	mov	r0, r5
 80238f4:	f00d fc09 	bl	803110a <__cxa_guard_acquire>
 80238f8:	2800      	cmp	r0, #0
 80238fa:	f43f add5 	beq.w	80234a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80238fe:	4628      	mov	r0, r5
 8023900:	f00d fc0f 	bl	8031122 <__cxa_guard_release>
 8023904:	4a71      	ldr	r2, [pc, #452]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023906:	4980      	ldr	r1, [pc, #512]	@ (8023b08 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 8023908:	4880      	ldr	r0, [pc, #512]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 802390a:	f00d fbf7 	bl	80310fc <__aeabi_atexit>
 802390e:	e5cb      	b.n	80234a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8023910:	4628      	mov	r0, r5
 8023912:	f00d fbfa 	bl	803110a <__cxa_guard_acquire>
 8023916:	2800      	cmp	r0, #0
 8023918:	f43f adc0 	beq.w	802349c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 802391c:	4628      	mov	r0, r5
 802391e:	f00d fc00 	bl	8031122 <__cxa_guard_release>
 8023922:	4a6a      	ldr	r2, [pc, #424]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023924:	497a      	ldr	r1, [pc, #488]	@ (8023b10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 8023926:	487b      	ldr	r0, [pc, #492]	@ (8023b14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023928:	f00d fbe8 	bl	80310fc <__aeabi_atexit>
 802392c:	e5b6      	b.n	802349c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 802392e:	2eff      	cmp	r6, #255	@ 0xff
 8023930:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023934:	d018      	beq.n	8023968 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e4>
 8023936:	2c03      	cmp	r4, #3
 8023938:	f63f ae31 	bhi.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802393c:	e8df f004 	tbb	[pc, r4]
 8023940:	4b525963 	.word	0x4b525963
 8023944:	2c03      	cmp	r4, #3
 8023946:	f63f ae2a 	bhi.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802394a:	e8df f014 	tbh	[pc, r4, lsl #1]
 802394e:	012d      	.short	0x012d
 8023950:	001b011e 	.word	0x001b011e
 8023954:	0014      	.short	0x0014
 8023956:	2c03      	cmp	r4, #3
 8023958:	f63f ae21 	bhi.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802395c:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023960:	00f000ff 	.word	0x00f000ff
 8023964:	00af010e 	.word	0x00af010e
 8023968:	2c03      	cmp	r4, #3
 802396a:	f63f ae18 	bhi.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802396e:	e8df f004 	tbb	[pc, r4]
 8023972:	929c      	.short	0x929c
 8023974:	848b      	.short	0x848b
 8023976:	687b      	ldr	r3, [r7, #4]
 8023978:	4867      	ldr	r0, [pc, #412]	@ (8023b18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 802397a:	781b      	ldrb	r3, [r3, #0]
 802397c:	2b00      	cmp	r3, #0
 802397e:	bf18      	it	ne
 8023980:	2000      	movne	r0, #0
 8023982:	e60d      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023984:	687b      	ldr	r3, [r7, #4]
 8023986:	4865      	ldr	r0, [pc, #404]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 8023988:	781b      	ldrb	r3, [r3, #0]
 802398a:	2b00      	cmp	r3, #0
 802398c:	bf18      	it	ne
 802398e:	2000      	movne	r0, #0
 8023990:	e606      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023992:	687b      	ldr	r3, [r7, #4]
 8023994:	781b      	ldrb	r3, [r3, #0]
 8023996:	2b01      	cmp	r3, #1
 8023998:	f000 811b 	beq.w	8023bd2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74e>
 802399c:	f0c0 8113 	bcc.w	8023bc6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 80239a0:	2b02      	cmp	r3, #2
 80239a2:	f47f adfc 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239a6:	4b5e      	ldr	r3, [pc, #376]	@ (8023b20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 80239a8:	4a5e      	ldr	r2, [pc, #376]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 80239aa:	f241 3133 	movw	r1, #4915	@ 0x1333
 80239ae:	485e      	ldr	r0, [pc, #376]	@ (8023b28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 80239b0:	f00e fd82 	bl	80324b8 <__assert_func>
 80239b4:	687b      	ldr	r3, [r7, #4]
 80239b6:	781b      	ldrb	r3, [r3, #0]
 80239b8:	2b01      	cmp	r3, #1
 80239ba:	f000 8108 	beq.w	8023bce <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74a>
 80239be:	f0c0 8104 	bcc.w	8023bca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 80239c2:	2b02      	cmp	r3, #2
 80239c4:	f47f adeb 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239c8:	4b55      	ldr	r3, [pc, #340]	@ (8023b20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 80239ca:	4a56      	ldr	r2, [pc, #344]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 80239cc:	f241 313f 	movw	r1, #4927	@ 0x133f
 80239d0:	4855      	ldr	r0, [pc, #340]	@ (8023b28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 80239d2:	f00e fd71 	bl	80324b8 <__assert_func>
 80239d6:	687b      	ldr	r3, [r7, #4]
 80239d8:	4846      	ldr	r0, [pc, #280]	@ (8023af4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 80239da:	781b      	ldrb	r3, [r3, #0]
 80239dc:	2b00      	cmp	r3, #0
 80239de:	bf18      	it	ne
 80239e0:	2000      	movne	r0, #0
 80239e2:	e5dd      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239e4:	687b      	ldr	r3, [r7, #4]
 80239e6:	483f      	ldr	r0, [pc, #252]	@ (8023ae4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 80239e8:	781b      	ldrb	r3, [r3, #0]
 80239ea:	2b00      	cmp	r3, #0
 80239ec:	bf18      	it	ne
 80239ee:	2000      	movne	r0, #0
 80239f0:	e5d6      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239f2:	687b      	ldr	r3, [r7, #4]
 80239f4:	781b      	ldrb	r3, [r3, #0]
 80239f6:	2b00      	cmp	r3, #0
 80239f8:	f000 80ed 	beq.w	8023bd6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x752>
 80239fc:	2b01      	cmp	r3, #1
 80239fe:	4845      	ldr	r0, [pc, #276]	@ (8023b14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023a00:	bf18      	it	ne
 8023a02:	2000      	movne	r0, #0
 8023a04:	e5cc      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a06:	687b      	ldr	r3, [r7, #4]
 8023a08:	781b      	ldrb	r3, [r3, #0]
 8023a0a:	2b00      	cmp	r3, #0
 8023a0c:	f000 80e5 	beq.w	8023bda <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x756>
 8023a10:	2b01      	cmp	r3, #1
 8023a12:	483c      	ldr	r0, [pc, #240]	@ (8023b04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8023a14:	bf18      	it	ne
 8023a16:	2000      	movne	r0, #0
 8023a18:	e5c2      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a1a:	687b      	ldr	r3, [r7, #4]
 8023a1c:	4843      	ldr	r0, [pc, #268]	@ (8023b2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a8>)
 8023a1e:	781b      	ldrb	r3, [r3, #0]
 8023a20:	2b00      	cmp	r3, #0
 8023a22:	bf18      	it	ne
 8023a24:	2000      	movne	r0, #0
 8023a26:	e5bb      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a28:	687b      	ldr	r3, [r7, #4]
 8023a2a:	4841      	ldr	r0, [pc, #260]	@ (8023b30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ac>)
 8023a2c:	781b      	ldrb	r3, [r3, #0]
 8023a2e:	2b00      	cmp	r3, #0
 8023a30:	bf18      	it	ne
 8023a32:	2000      	movne	r0, #0
 8023a34:	e5b4      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a36:	687b      	ldr	r3, [r7, #4]
 8023a38:	781b      	ldrb	r3, [r3, #0]
 8023a3a:	2b01      	cmp	r3, #1
 8023a3c:	f000 80d5 	beq.w	8023bea <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x766>
 8023a40:	f0c0 80d1 	bcc.w	8023be6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x762>
 8023a44:	2b02      	cmp	r3, #2
 8023a46:	f47f adaa 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a4a:	4b3a      	ldr	r3, [pc, #232]	@ (8023b34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b0>)
 8023a4c:	4a35      	ldr	r2, [pc, #212]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a4e:	f241 21d8 	movw	r1, #4824	@ 0x12d8
 8023a52:	4835      	ldr	r0, [pc, #212]	@ (8023b28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a54:	f00e fd30 	bl	80324b8 <__assert_func>
 8023a58:	687b      	ldr	r3, [r7, #4]
 8023a5a:	781b      	ldrb	r3, [r3, #0]
 8023a5c:	2b01      	cmp	r3, #1
 8023a5e:	f000 80c0 	beq.w	8023be2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75e>
 8023a62:	f0c0 80bc 	bcc.w	8023bde <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75a>
 8023a66:	2b02      	cmp	r3, #2
 8023a68:	f47f ad99 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a6c:	4b32      	ldr	r3, [pc, #200]	@ (8023b38 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b4>)
 8023a6e:	4a2d      	ldr	r2, [pc, #180]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a70:	f241 21e4 	movw	r1, #4836	@ 0x12e4
 8023a74:	482c      	ldr	r0, [pc, #176]	@ (8023b28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a76:	f00e fd1f 	bl	80324b8 <__assert_func>
 8023a7a:	687b      	ldr	r3, [r7, #4]
 8023a7c:	481b      	ldr	r0, [pc, #108]	@ (8023aec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023a7e:	781b      	ldrb	r3, [r3, #0]
 8023a80:	2b00      	cmp	r3, #0
 8023a82:	bf18      	it	ne
 8023a84:	2000      	movne	r0, #0
 8023a86:	e58b      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a88:	687b      	ldr	r3, [r7, #4]
 8023a8a:	4814      	ldr	r0, [pc, #80]	@ (8023adc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023a8c:	781b      	ldrb	r3, [r3, #0]
 8023a8e:	2b00      	cmp	r3, #0
 8023a90:	bf18      	it	ne
 8023a92:	2000      	movne	r0, #0
 8023a94:	e584      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a96:	687b      	ldr	r3, [r7, #4]
 8023a98:	781b      	ldrb	r3, [r3, #0]
 8023a9a:	2b00      	cmp	r3, #0
 8023a9c:	f000 80af 	beq.w	8023bfe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77a>
 8023aa0:	2b01      	cmp	r3, #1
 8023aa2:	481a      	ldr	r0, [pc, #104]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8023aa4:	bf18      	it	ne
 8023aa6:	2000      	movne	r0, #0
 8023aa8:	e57a      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023aaa:	687b      	ldr	r3, [r7, #4]
 8023aac:	781b      	ldrb	r3, [r3, #0]
 8023aae:	2b00      	cmp	r3, #0
 8023ab0:	f000 80a7 	beq.w	8023c02 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77e>
 8023ab4:	2b01      	cmp	r3, #1
 8023ab6:	4811      	ldr	r0, [pc, #68]	@ (8023afc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8023ab8:	bf18      	it	ne
 8023aba:	2000      	movne	r0, #0
 8023abc:	e570      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023abe:	687b      	ldr	r3, [r7, #4]
 8023ac0:	481e      	ldr	r0, [pc, #120]	@ (8023b3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b8>)
 8023ac2:	781b      	ldrb	r3, [r3, #0]
 8023ac4:	2b00      	cmp	r3, #0
 8023ac6:	bf18      	it	ne
 8023ac8:	2000      	movne	r0, #0
 8023aca:	e569      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023acc:	20000000 	.word	0x20000000
 8023ad0:	08022831 	.word	0x08022831
 8023ad4:	20000214 	.word	0x20000214
 8023ad8:	08022845 	.word	0x08022845
 8023adc:	2000021c 	.word	0x2000021c
 8023ae0:	08022849 	.word	0x08022849
 8023ae4:	20000204 	.word	0x20000204
 8023ae8:	0802283d 	.word	0x0802283d
 8023aec:	2000023c 	.word	0x2000023c
 8023af0:	08022841 	.word	0x08022841
 8023af4:	20000230 	.word	0x20000230
 8023af8:	08022855 	.word	0x08022855
 8023afc:	200001f8 	.word	0x200001f8
 8023b00:	08022859 	.word	0x08022859
 8023b04:	200001ec 	.word	0x200001ec
 8023b08:	0802284d 	.word	0x0802284d
 8023b0c:	20000224 	.word	0x20000224
 8023b10:	08022851 	.word	0x08022851
 8023b14:	20000210 	.word	0x20000210
 8023b18:	20000238 	.word	0x20000238
 8023b1c:	2000020c 	.word	0x2000020c
 8023b20:	08036430 	.word	0x08036430
 8023b24:	080378bc 	.word	0x080378bc
 8023b28:	08036278 	.word	0x08036278
 8023b2c:	20000234 	.word	0x20000234
 8023b30:	20000208 	.word	0x20000208
 8023b34:	0803639c 	.word	0x0803639c
 8023b38:	080363e4 	.word	0x080363e4
 8023b3c:	20000240 	.word	0x20000240
 8023b40:	687b      	ldr	r3, [r7, #4]
 8023b42:	781b      	ldrb	r3, [r3, #0]
 8023b44:	2b01      	cmp	r3, #1
 8023b46:	d060      	beq.n	8023c0a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x786>
 8023b48:	d35d      	bcc.n	8023c06 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x782>
 8023b4a:	2b02      	cmp	r3, #2
 8023b4c:	f47f ad27 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b50:	4b2f      	ldr	r3, [pc, #188]	@ (8023c10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b52:	4a30      	ldr	r2, [pc, #192]	@ (8023c14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b54:	f241 3103 	movw	r1, #4867	@ 0x1303
 8023b58:	482f      	ldr	r0, [pc, #188]	@ (8023c18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b5a:	f00e fcad 	bl	80324b8 <__assert_func>
 8023b5e:	687b      	ldr	r3, [r7, #4]
 8023b60:	781b      	ldrb	r3, [r3, #0]
 8023b62:	2b01      	cmp	r3, #1
 8023b64:	d049      	beq.n	8023bfa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x776>
 8023b66:	d346      	bcc.n	8023bf6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x772>
 8023b68:	2b02      	cmp	r3, #2
 8023b6a:	f47f ad18 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b6e:	4b28      	ldr	r3, [pc, #160]	@ (8023c10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b70:	4a28      	ldr	r2, [pc, #160]	@ (8023c14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b72:	f241 310f 	movw	r1, #4879	@ 0x130f
 8023b76:	4828      	ldr	r0, [pc, #160]	@ (8023c18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b78:	f00e fc9e 	bl	80324b8 <__assert_func>
 8023b7c:	687b      	ldr	r3, [r7, #4]
 8023b7e:	4827      	ldr	r0, [pc, #156]	@ (8023c1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023b80:	781b      	ldrb	r3, [r3, #0]
 8023b82:	2b00      	cmp	r3, #0
 8023b84:	bf18      	it	ne
 8023b86:	2000      	movne	r0, #0
 8023b88:	e50a      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b8a:	687b      	ldr	r3, [r7, #4]
 8023b8c:	781b      	ldrb	r3, [r3, #0]
 8023b8e:	2b01      	cmp	r3, #1
 8023b90:	d02d      	beq.n	8023bee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76a>
 8023b92:	d318      	bcc.n	8023bc6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023b94:	2b02      	cmp	r3, #2
 8023b96:	f47f ad02 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b9a:	4b1d      	ldr	r3, [pc, #116]	@ (8023c10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b9c:	4a1d      	ldr	r2, [pc, #116]	@ (8023c14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b9e:	f44f 519b 	mov.w	r1, #4960	@ 0x1360
 8023ba2:	481d      	ldr	r0, [pc, #116]	@ (8023c18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023ba4:	f00e fc88 	bl	80324b8 <__assert_func>
 8023ba8:	687b      	ldr	r3, [r7, #4]
 8023baa:	781b      	ldrb	r3, [r3, #0]
 8023bac:	2b01      	cmp	r3, #1
 8023bae:	d020      	beq.n	8023bf2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76e>
 8023bb0:	d30b      	bcc.n	8023bca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023bb2:	2b02      	cmp	r3, #2
 8023bb4:	f47f acf3 	bne.w	802359e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bb8:	4b15      	ldr	r3, [pc, #84]	@ (8023c10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023bba:	4a16      	ldr	r2, [pc, #88]	@ (8023c14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023bbc:	f241 316c 	movw	r1, #4972	@ 0x136c
 8023bc0:	4815      	ldr	r0, [pc, #84]	@ (8023c18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023bc2:	f00e fc79 	bl	80324b8 <__assert_func>
 8023bc6:	4816      	ldr	r0, [pc, #88]	@ (8023c20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x79c>)
 8023bc8:	e4ea      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bca:	4816      	ldr	r0, [pc, #88]	@ (8023c24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a0>)
 8023bcc:	e4e8      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bce:	4816      	ldr	r0, [pc, #88]	@ (8023c28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a4>)
 8023bd0:	e4e6      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bd2:	4816      	ldr	r0, [pc, #88]	@ (8023c2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a8>)
 8023bd4:	e4e4      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bd6:	4816      	ldr	r0, [pc, #88]	@ (8023c30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7ac>)
 8023bd8:	e4e2      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bda:	4816      	ldr	r0, [pc, #88]	@ (8023c34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b0>)
 8023bdc:	e4e0      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bde:	4816      	ldr	r0, [pc, #88]	@ (8023c38 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b4>)
 8023be0:	e4de      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023be2:	4816      	ldr	r0, [pc, #88]	@ (8023c3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b8>)
 8023be4:	e4dc      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023be6:	4816      	ldr	r0, [pc, #88]	@ (8023c40 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7bc>)
 8023be8:	e4da      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bea:	4816      	ldr	r0, [pc, #88]	@ (8023c44 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c0>)
 8023bec:	e4d8      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bee:	4816      	ldr	r0, [pc, #88]	@ (8023c48 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c4>)
 8023bf0:	e4d6      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bf2:	4816      	ldr	r0, [pc, #88]	@ (8023c4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c8>)
 8023bf4:	e4d4      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bf6:	4809      	ldr	r0, [pc, #36]	@ (8023c1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023bf8:	e4d2      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bfa:	4815      	ldr	r0, [pc, #84]	@ (8023c50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7cc>)
 8023bfc:	e4d0      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bfe:	4815      	ldr	r0, [pc, #84]	@ (8023c54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d0>)
 8023c00:	e4ce      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c02:	4815      	ldr	r0, [pc, #84]	@ (8023c58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d4>)
 8023c04:	e4cc      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c06:	4815      	ldr	r0, [pc, #84]	@ (8023c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d8>)
 8023c08:	e4ca      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c0a:	4815      	ldr	r0, [pc, #84]	@ (8023c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7dc>)
 8023c0c:	e4c8      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c0e:	bf00      	nop
 8023c10:	080363e4 	.word	0x080363e4
 8023c14:	080378bc 	.word	0x080378bc
 8023c18:	08036278 	.word	0x08036278
 8023c1c:	20000220 	.word	0x20000220
 8023c20:	20000238 	.word	0x20000238
 8023c24:	2000020c 	.word	0x2000020c
 8023c28:	200001f4 	.word	0x200001f4
 8023c2c:	20000218 	.word	0x20000218
 8023c30:	20000230 	.word	0x20000230
 8023c34:	20000204 	.word	0x20000204
 8023c38:	20000208 	.word	0x20000208
 8023c3c:	200001f0 	.word	0x200001f0
 8023c40:	20000234 	.word	0x20000234
 8023c44:	20000214 	.word	0x20000214
 8023c48:	2000022c 	.word	0x2000022c
 8023c4c:	20000200 	.word	0x20000200
 8023c50:	200001fc 	.word	0x200001fc
 8023c54:	2000023c 	.word	0x2000023c
 8023c58:	2000021c 	.word	0x2000021c
 8023c5c:	20000240 	.word	0x20000240
 8023c60:	20000228 	.word	0x20000228

08023c64 <_ZN8touchgfx8LCDGPU2DD0Ev>:
 8023c64:	b510      	push	{r4, lr}
 8023c66:	4604      	mov	r4, r0
 8023c68:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8023c6c:	f00d fa4b 	bl	8031106 <_ZdlPvj>
 8023c70:	4620      	mov	r0, r4
 8023c72:	bd10      	pop	{r4, pc}

08023c74 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023c74:	b510      	push	{r4, lr}
 8023c76:	4604      	mov	r4, r0
 8023c78:	2104      	movs	r1, #4
 8023c7a:	f00d fa44 	bl	8031106 <_ZdlPvj>
 8023c7e:	4620      	mov	r0, r4
 8023c80:	bd10      	pop	{r4, pc}
 8023c82:	bf00      	nop

08023c84 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023c84:	b510      	push	{r4, lr}
 8023c86:	4604      	mov	r4, r0
 8023c88:	2104      	movs	r1, #4
 8023c8a:	f00d fa3c 	bl	8031106 <_ZdlPvj>
 8023c8e:	4620      	mov	r0, r4
 8023c90:	bd10      	pop	{r4, pc}
 8023c92:	bf00      	nop

08023c94 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023c94:	b510      	push	{r4, lr}
 8023c96:	4604      	mov	r4, r0
 8023c98:	2104      	movs	r1, #4
 8023c9a:	f00d fa34 	bl	8031106 <_ZdlPvj>
 8023c9e:	4620      	mov	r0, r4
 8023ca0:	bd10      	pop	{r4, pc}
 8023ca2:	bf00      	nop

08023ca4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023ca4:	b510      	push	{r4, lr}
 8023ca6:	4604      	mov	r4, r0
 8023ca8:	2104      	movs	r1, #4
 8023caa:	f00d fa2c 	bl	8031106 <_ZdlPvj>
 8023cae:	4620      	mov	r0, r4
 8023cb0:	bd10      	pop	{r4, pc}
 8023cb2:	bf00      	nop

08023cb4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023cb4:	b510      	push	{r4, lr}
 8023cb6:	4604      	mov	r4, r0
 8023cb8:	2104      	movs	r1, #4
 8023cba:	f00d fa24 	bl	8031106 <_ZdlPvj>
 8023cbe:	4620      	mov	r0, r4
 8023cc0:	bd10      	pop	{r4, pc}
 8023cc2:	bf00      	nop

08023cc4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023cc4:	b510      	push	{r4, lr}
 8023cc6:	4604      	mov	r4, r0
 8023cc8:	2104      	movs	r1, #4
 8023cca:	f00d fa1c 	bl	8031106 <_ZdlPvj>
 8023cce:	4620      	mov	r0, r4
 8023cd0:	bd10      	pop	{r4, pc}
 8023cd2:	bf00      	nop

08023cd4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023cd4:	b510      	push	{r4, lr}
 8023cd6:	4604      	mov	r4, r0
 8023cd8:	2104      	movs	r1, #4
 8023cda:	f00d fa14 	bl	8031106 <_ZdlPvj>
 8023cde:	4620      	mov	r0, r4
 8023ce0:	bd10      	pop	{r4, pc}
 8023ce2:	bf00      	nop

08023ce4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023ce4:	b510      	push	{r4, lr}
 8023ce6:	4604      	mov	r4, r0
 8023ce8:	2104      	movs	r1, #4
 8023cea:	f00d fa0c 	bl	8031106 <_ZdlPvj>
 8023cee:	4620      	mov	r0, r4
 8023cf0:	bd10      	pop	{r4, pc}
 8023cf2:	bf00      	nop

08023cf4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023cf4:	b510      	push	{r4, lr}
 8023cf6:	4604      	mov	r4, r0
 8023cf8:	2104      	movs	r1, #4
 8023cfa:	f00d fa04 	bl	8031106 <_ZdlPvj>
 8023cfe:	4620      	mov	r0, r4
 8023d00:	bd10      	pop	{r4, pc}
 8023d02:	bf00      	nop

08023d04 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023d04:	b510      	push	{r4, lr}
 8023d06:	4604      	mov	r4, r0
 8023d08:	2104      	movs	r1, #4
 8023d0a:	f00d f9fc 	bl	8031106 <_ZdlPvj>
 8023d0e:	4620      	mov	r0, r4
 8023d10:	bd10      	pop	{r4, pc}
 8023d12:	bf00      	nop

08023d14 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023d14:	b510      	push	{r4, lr}
 8023d16:	4604      	mov	r4, r0
 8023d18:	2104      	movs	r1, #4
 8023d1a:	f00d f9f4 	bl	8031106 <_ZdlPvj>
 8023d1e:	4620      	mov	r0, r4
 8023d20:	bd10      	pop	{r4, pc}
 8023d22:	bf00      	nop

08023d24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023d24:	b510      	push	{r4, lr}
 8023d26:	4604      	mov	r4, r0
 8023d28:	2104      	movs	r1, #4
 8023d2a:	f00d f9ec 	bl	8031106 <_ZdlPvj>
 8023d2e:	4620      	mov	r0, r4
 8023d30:	bd10      	pop	{r4, pc}
 8023d32:	bf00      	nop

08023d34 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d34:	b510      	push	{r4, lr}
 8023d36:	4604      	mov	r4, r0
 8023d38:	2104      	movs	r1, #4
 8023d3a:	f00d f9e4 	bl	8031106 <_ZdlPvj>
 8023d3e:	4620      	mov	r0, r4
 8023d40:	bd10      	pop	{r4, pc}
 8023d42:	bf00      	nop

08023d44 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d44:	b510      	push	{r4, lr}
 8023d46:	4604      	mov	r4, r0
 8023d48:	2104      	movs	r1, #4
 8023d4a:	f00d f9dc 	bl	8031106 <_ZdlPvj>
 8023d4e:	4620      	mov	r0, r4
 8023d50:	bd10      	pop	{r4, pc}
 8023d52:	bf00      	nop

08023d54 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023d54:	b510      	push	{r4, lr}
 8023d56:	4604      	mov	r4, r0
 8023d58:	2104      	movs	r1, #4
 8023d5a:	f00d f9d4 	bl	8031106 <_ZdlPvj>
 8023d5e:	4620      	mov	r0, r4
 8023d60:	bd10      	pop	{r4, pc}
 8023d62:	bf00      	nop

08023d64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023d64:	b510      	push	{r4, lr}
 8023d66:	4604      	mov	r4, r0
 8023d68:	2104      	movs	r1, #4
 8023d6a:	f00d f9cc 	bl	8031106 <_ZdlPvj>
 8023d6e:	4620      	mov	r0, r4
 8023d70:	bd10      	pop	{r4, pc}
 8023d72:	bf00      	nop

08023d74 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023d74:	b510      	push	{r4, lr}
 8023d76:	4604      	mov	r4, r0
 8023d78:	2104      	movs	r1, #4
 8023d7a:	f00d f9c4 	bl	8031106 <_ZdlPvj>
 8023d7e:	4620      	mov	r0, r4
 8023d80:	bd10      	pop	{r4, pc}
 8023d82:	bf00      	nop

08023d84 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023d84:	b510      	push	{r4, lr}
 8023d86:	4604      	mov	r4, r0
 8023d88:	2104      	movs	r1, #4
 8023d8a:	f00d f9bc 	bl	8031106 <_ZdlPvj>
 8023d8e:	4620      	mov	r0, r4
 8023d90:	bd10      	pop	{r4, pc}
 8023d92:	bf00      	nop

08023d94 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d94:	b510      	push	{r4, lr}
 8023d96:	4604      	mov	r4, r0
 8023d98:	2104      	movs	r1, #4
 8023d9a:	f00d f9b4 	bl	8031106 <_ZdlPvj>
 8023d9e:	4620      	mov	r0, r4
 8023da0:	bd10      	pop	{r4, pc}
 8023da2:	bf00      	nop

08023da4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023da4:	b510      	push	{r4, lr}
 8023da6:	4604      	mov	r4, r0
 8023da8:	2104      	movs	r1, #4
 8023daa:	f00d f9ac 	bl	8031106 <_ZdlPvj>
 8023dae:	4620      	mov	r0, r4
 8023db0:	bd10      	pop	{r4, pc}
 8023db2:	bf00      	nop

08023db4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023db4:	b510      	push	{r4, lr}
 8023db6:	4604      	mov	r4, r0
 8023db8:	2104      	movs	r1, #4
 8023dba:	f00d f9a4 	bl	8031106 <_ZdlPvj>
 8023dbe:	4620      	mov	r0, r4
 8023dc0:	bd10      	pop	{r4, pc}
 8023dc2:	bf00      	nop

08023dc4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023dc4:	b510      	push	{r4, lr}
 8023dc6:	4604      	mov	r4, r0
 8023dc8:	2104      	movs	r1, #4
 8023dca:	f00d f99c 	bl	8031106 <_ZdlPvj>
 8023dce:	4620      	mov	r0, r4
 8023dd0:	bd10      	pop	{r4, pc}
 8023dd2:	bf00      	nop

08023dd4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>:
 8023dd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023dd8:	461c      	mov	r4, r3
 8023dda:	4617      	mov	r7, r2
 8023ddc:	b086      	sub	sp, #24
 8023dde:	4606      	mov	r6, r0
 8023de0:	4688      	mov	r8, r1
 8023de2:	6818      	ldr	r0, [r3, #0]
 8023de4:	6859      	ldr	r1, [r3, #4]
 8023de6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023de8:	ad02      	add	r5, sp, #8
 8023dea:	c503      	stmia	r5!, {r0, r1}
 8023dec:	6818      	ldr	r0, [r3, #0]
 8023dee:	6859      	ldr	r1, [r3, #4]
 8023df0:	ad04      	add	r5, sp, #16
 8023df2:	c503      	stmia	r5!, {r0, r1}
 8023df4:	a802      	add	r0, sp, #8
 8023df6:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
 8023dfa:	f7e8 ff81 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023dfe:	4621      	mov	r1, r4
 8023e00:	a804      	add	r0, sp, #16
 8023e02:	f7e8 ffa5 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023e06:	2f01      	cmp	r7, #1
 8023e08:	d05c      	beq.n	8023ec4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf0>
 8023e0a:	d357      	bcc.n	8023ebc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xe8>
 8023e0c:	2f02      	cmp	r7, #2
 8023e0e:	d163      	bne.n	8023ed8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x104>
 8023e10:	f04f 0910 	mov.w	r9, #16
 8023e14:	2504      	movs	r5, #4
 8023e16:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023e1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023e1e:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8023e22:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8023e26:	fb14 2403 	smlabb	r4, r4, r3, r2
 8023e2a:	4f2e      	ldr	r7, [pc, #184]	@ (8023ee4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x110>)
 8023e2c:	440a      	add	r2, r1
 8023e2e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8023e32:	6838      	ldr	r0, [r7, #0]
 8023e34:	440b      	add	r3, r1
 8023e36:	fb05 8404 	mla	r4, r5, r4, r8
 8023e3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8023e3e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8023e42:	2800      	cmp	r0, #0
 8023e44:	d042      	beq.n	8023ecc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023e46:	f7fc fea7 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023e4a:	6833      	ldr	r3, [r6, #0]
 8023e4c:	4630      	mov	r0, r6
 8023e4e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023e50:	4798      	blx	r3
 8023e52:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8023e56:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8023e5a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023e5e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023e62:	f7ec ff21 	bl	8010ca8 <nema_set_clip>
 8023e66:	2200      	movs	r2, #0
 8023e68:	2600      	movs	r6, #0
 8023e6a:	4611      	mov	r1, r2
 8023e6c:	4653      	mov	r3, sl
 8023e6e:	4610      	mov	r0, r2
 8023e70:	f7ec fff8 	bl	8010e64 <nema_rgba>
 8023e74:	f7fa fc7a 	bl	801e76c <nema_set_const_color>
 8023e78:	f04f 33ff 	mov.w	r3, #4294967295
 8023e7c:	2201      	movs	r2, #1
 8023e7e:	2100      	movs	r1, #0
 8023e80:	4819      	ldr	r0, [pc, #100]	@ (8023ee8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x114>)
 8023e82:	f7fa f8ad 	bl	801dfe0 <nema_set_blend>
 8023e86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8023e8a:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8023e8e:	fb05 f503 	mul.w	r5, r5, r3
 8023e92:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8023e96:	464b      	mov	r3, r9
 8023e98:	4620      	mov	r0, r4
 8023e9a:	e9cd 5600 	strd	r5, r6, [sp]
 8023e9e:	f7ec ffe9 	bl	8010e74 <nema_bind_src_tex>
 8023ea2:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023ea6:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023eaa:	f7ed fa3d 	bl	8011328 <nema_blit>
 8023eae:	6838      	ldr	r0, [r7, #0]
 8023eb0:	b160      	cbz	r0, 8023ecc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023eb2:	f7fc fe91 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023eb6:	b006      	add	sp, #24
 8023eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023ebc:	f04f 0904 	mov.w	r9, #4
 8023ec0:	2502      	movs	r5, #2
 8023ec2:	e7a8      	b.n	8023e16 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023ec4:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8023ec8:	2503      	movs	r5, #3
 8023eca:	e7a4      	b.n	8023e16 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023ecc:	4b07      	ldr	r3, [pc, #28]	@ (8023eec <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x118>)
 8023ece:	4a08      	ldr	r2, [pc, #32]	@ (8023ef0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x11c>)
 8023ed0:	217c      	movs	r1, #124	@ 0x7c
 8023ed2:	4808      	ldr	r0, [pc, #32]	@ (8023ef4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x120>)
 8023ed4:	f00e faf0 	bl	80324b8 <__assert_func>
 8023ed8:	4b07      	ldr	r3, [pc, #28]	@ (8023ef8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x124>)
 8023eda:	4a08      	ldr	r2, [pc, #32]	@ (8023efc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x128>)
 8023edc:	21c9      	movs	r1, #201	@ 0xc9
 8023ede:	4808      	ldr	r0, [pc, #32]	@ (8023f00 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x12c>)
 8023ee0:	f00e faea 	bl	80324b8 <__assert_func>
 8023ee4:	20083364 	.word	0x20083364
 8023ee8:	08000504 	.word	0x08000504
 8023eec:	080361d4 	.word	0x080361d4
 8023ef0:	08036a40 	.word	0x08036a40
 8023ef4:	080361fc 	.word	0x080361fc
 8023ef8:	08036680 	.word	0x08036680
 8023efc:	08037de4 	.word	0x08037de4
 8023f00:	08036278 	.word	0x08036278

08023f04 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>:
 8023f04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023f06:	680c      	ldr	r4, [r1, #0]
 8023f08:	7805      	ldrb	r5, [r0, #0]
 8023f0a:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8023f0e:	7847      	ldrb	r7, [r0, #1]
 8023f10:	7883      	ldrb	r3, [r0, #2]
 8023f12:	d02e      	beq.n	8023f72 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19+0x6e>
 8023f14:	fb02 f60c 	mul.w	r6, r2, ip
 8023f18:	fb12 f303 	smulbb	r3, r2, r3
 8023f1c:	1c70      	adds	r0, r6, #1
 8023f1e:	fb15 f502 	smulbb	r5, r5, r2
 8023f22:	eb00 2026 	add.w	r0, r0, r6, asr #8
 8023f26:	1200      	asrs	r0, r0, #8
 8023f28:	fb12 f707 	smulbb	r7, r2, r7
 8023f2c:	ebac 0600 	sub.w	r6, ip, r0
 8023f30:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023f34:	fb06 330e 	mla	r3, r6, lr, r3
 8023f38:	fa5f fe84 	uxtb.w	lr, r4
 8023f3c:	fb06 550e 	mla	r5, r6, lr, r5
 8023f40:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023f44:	fb06 7404 	mla	r4, r6, r4, r7
 8023f48:	4462      	add	r2, ip
 8023f4a:	1a12      	subs	r2, r2, r0
 8023f4c:	b2d0      	uxtb	r0, r2
 8023f4e:	fbb3 f2f0 	udiv	r2, r3, r0
 8023f52:	fbb5 f5f0 	udiv	r5, r5, r0
 8023f56:	fbb4 f3f0 	udiv	r3, r4, r0
 8023f5a:	0412      	lsls	r2, r2, #16
 8023f5c:	b2ec      	uxtb	r4, r5
 8023f5e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8023f62:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8023f66:	021b      	lsls	r3, r3, #8
 8023f68:	4302      	orrs	r2, r0
 8023f6a:	b29b      	uxth	r3, r3
 8023f6c:	431a      	orrs	r2, r3
 8023f6e:	600a      	str	r2, [r1, #0]
 8023f70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023f72:	041b      	lsls	r3, r3, #16
 8023f74:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8023f78:	432a      	orrs	r2, r5
 8023f7a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8023f7e:	600a      	str	r2, [r1, #0]
 8023f80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023f82:	bf00      	nop

08023f84 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8023f84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023f88:	4c1e      	ldr	r4, [pc, #120]	@ (8024004 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 8023f8a:	6806      	ldr	r6, [r0, #0]
 8023f8c:	6824      	ldr	r4, [r4, #0]
 8023f8e:	4605      	mov	r5, r0
 8023f90:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8023f94:	b087      	sub	sp, #28
 8023f96:	6937      	ldr	r7, [r6, #16]
 8023f98:	4690      	mov	r8, r2
 8023f9a:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8023f9e:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8023fa2:	b170      	cbz	r0, 8023fc2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023fa4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8023fa6:	b160      	cbz	r0, 8023fc2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023fa8:	6804      	ldr	r4, [r0, #0]
 8023faa:	4a17      	ldr	r2, [pc, #92]	@ (8024008 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8023fac:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8023fae:	4294      	cmp	r4, r2
 8023fb0:	d10d      	bne.n	8023fce <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8023fb2:	4c16      	ldr	r4, [pc, #88]	@ (802400c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8023fb4:	7b02      	ldrb	r2, [r0, #12]
 8023fb6:	42a7      	cmp	r7, r4
 8023fb8:	d112      	bne.n	8023fe0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 8023fba:	b9d6      	cbnz	r6, 8023ff2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 8023fbc:	b007      	add	sp, #28
 8023fbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023fc2:	68a0      	ldr	r0, [r4, #8]
 8023fc4:	4a10      	ldr	r2, [pc, #64]	@ (8024008 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8023fc6:	6804      	ldr	r4, [r0, #0]
 8023fc8:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8023fca:	4294      	cmp	r4, r2
 8023fcc:	d0f1      	beq.n	8023fb2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 8023fce:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8023fd2:	47a0      	blx	r4
 8023fd4:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8023fd8:	4c0c      	ldr	r4, [pc, #48]	@ (802400c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8023fda:	4602      	mov	r2, r0
 8023fdc:	42a7      	cmp	r7, r4
 8023fde:	d0ec      	beq.n	8023fba <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 8023fe0:	9300      	str	r3, [sp, #0]
 8023fe2:	e9cd 6901 	strd	r6, r9, [sp, #4]
 8023fe6:	4643      	mov	r3, r8
 8023fe8:	4628      	mov	r0, r5
 8023fea:	47b8      	blx	r7
 8023fec:	b007      	add	sp, #28
 8023fee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023ff2:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 8023ff6:	4628      	mov	r0, r5
 8023ff8:	4643      	mov	r3, r8
 8023ffa:	b007      	add	sp, #28
 8023ffc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024000:	f7ff bee8 	b.w	8023dd4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8024004:	20082ec4 	.word	0x20082ec4
 8024008:	08020c7d 	.word	0x08020c7d
 802400c:	08024011 	.word	0x08024011

08024010 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8024010:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024014:	b087      	sub	sp, #28
 8024016:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 802401a:	b915      	cbnz	r5, 8024022 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 802401c:	b007      	add	sp, #28
 802401e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024022:	461c      	mov	r4, r3
 8024024:	4617      	mov	r7, r2
 8024026:	4688      	mov	r8, r1
 8024028:	4606      	mov	r6, r0
 802402a:	6859      	ldr	r1, [r3, #4]
 802402c:	6818      	ldr	r0, [r3, #0]
 802402e:	ab02      	add	r3, sp, #8
 8024030:	c303      	stmia	r3!, {r0, r1}
 8024032:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024034:	6818      	ldr	r0, [r3, #0]
 8024036:	6859      	ldr	r1, [r3, #4]
 8024038:	ab04      	add	r3, sp, #16
 802403a:	c303      	stmia	r3!, {r0, r1}
 802403c:	a802      	add	r0, sp, #8
 802403e:	f7e8 fe5f 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024042:	4621      	mov	r1, r4
 8024044:	a804      	add	r0, sp, #16
 8024046:	f7e8 fe83 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802404a:	2f01      	cmp	r7, #1
 802404c:	d05c      	beq.n	8024108 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf8>
 802404e:	d357      	bcc.n	8024100 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf0>
 8024050:	2f02      	cmp	r7, #2
 8024052:	d163      	bne.n	802411c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x10c>
 8024054:	f04f 0910 	mov.w	r9, #16
 8024058:	2404      	movs	r4, #4
 802405a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802405e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024062:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8024066:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 802406a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802406e:	4f2e      	ldr	r7, [pc, #184]	@ (8024128 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x118>)
 8024070:	fb04 8801 	mla	r8, r4, r1, r8
 8024074:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8024078:	4402      	add	r2, r0
 802407a:	6838      	ldr	r0, [r7, #0]
 802407c:	440b      	add	r3, r1
 802407e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8024082:	f8ad 3012 	strh.w	r3, [sp, #18]
 8024086:	2800      	cmp	r0, #0
 8024088:	d042      	beq.n	8024110 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 802408a:	f7fc fd85 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802408e:	6833      	ldr	r3, [r6, #0]
 8024090:	4630      	mov	r0, r6
 8024092:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8024094:	4798      	blx	r3
 8024096:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 802409a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 802409e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80240a2:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80240a6:	f7ec fdff 	bl	8010ca8 <nema_set_clip>
 80240aa:	2200      	movs	r2, #0
 80240ac:	462b      	mov	r3, r5
 80240ae:	2500      	movs	r5, #0
 80240b0:	4611      	mov	r1, r2
 80240b2:	4610      	mov	r0, r2
 80240b4:	f7ec fed6 	bl	8010e64 <nema_rgba>
 80240b8:	f7fa fb58 	bl	801e76c <nema_set_const_color>
 80240bc:	f04f 33ff 	mov.w	r3, #4294967295
 80240c0:	2201      	movs	r2, #1
 80240c2:	2100      	movs	r1, #0
 80240c4:	4819      	ldr	r0, [pc, #100]	@ (802412c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x11c>)
 80240c6:	f7f9 ff8b 	bl	801dfe0 <nema_set_blend>
 80240ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80240ce:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 80240d2:	fb04 f403 	mul.w	r4, r4, r3
 80240d6:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 80240da:	464b      	mov	r3, r9
 80240dc:	4640      	mov	r0, r8
 80240de:	e9cd 4500 	strd	r4, r5, [sp]
 80240e2:	f7ec fec7 	bl	8010e74 <nema_bind_src_tex>
 80240e6:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80240ea:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80240ee:	f7ed f91b 	bl	8011328 <nema_blit>
 80240f2:	6838      	ldr	r0, [r7, #0]
 80240f4:	b160      	cbz	r0, 8024110 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 80240f6:	f7fc fd6f 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80240fa:	b007      	add	sp, #28
 80240fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024100:	f04f 0904 	mov.w	r9, #4
 8024104:	2402      	movs	r4, #2
 8024106:	e7a8      	b.n	802405a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8024108:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802410c:	2403      	movs	r4, #3
 802410e:	e7a4      	b.n	802405a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8024110:	4b07      	ldr	r3, [pc, #28]	@ (8024130 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x120>)
 8024112:	4a08      	ldr	r2, [pc, #32]	@ (8024134 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x124>)
 8024114:	217c      	movs	r1, #124	@ 0x7c
 8024116:	4808      	ldr	r0, [pc, #32]	@ (8024138 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x128>)
 8024118:	f00e f9ce 	bl	80324b8 <__assert_func>
 802411c:	4b07      	ldr	r3, [pc, #28]	@ (802413c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12c>)
 802411e:	4a08      	ldr	r2, [pc, #32]	@ (8024140 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x130>)
 8024120:	21c9      	movs	r1, #201	@ 0xc9
 8024122:	4808      	ldr	r0, [pc, #32]	@ (8024144 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x134>)
 8024124:	f00e f9c8 	bl	80324b8 <__assert_func>
 8024128:	20083364 	.word	0x20083364
 802412c:	08000504 	.word	0x08000504
 8024130:	080361d4 	.word	0x080361d4
 8024134:	08036a40 	.word	0x08036a40
 8024138:	080361fc 	.word	0x080361fc
 802413c:	08036680 	.word	0x08036680
 8024140:	08037de4 	.word	0x08037de4
 8024144:	08036278 	.word	0x08036278

08024148 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8024148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802414c:	4682      	mov	sl, r0
 802414e:	4851      	ldr	r0, [pc, #324]	@ (8024294 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x14c>)
 8024150:	b08f      	sub	sp, #60	@ 0x3c
 8024152:	6800      	ldr	r0, [r0, #0]
 8024154:	9104      	str	r1, [sp, #16]
 8024156:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 802415a:	f9bd 0064 	ldrsh.w	r0, [sp, #100]	@ 0x64
 802415e:	2902      	cmp	r1, #2
 8024160:	9003      	str	r0, [sp, #12]
 8024162:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 8024166:	9006      	str	r0, [sp, #24]
 8024168:	f000 81cd 	beq.w	8024506 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3be>
 802416c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802416e:	2900      	cmp	r1, #0
 8024170:	f000 81c3 	beq.w	80244fa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3b2>
 8024174:	f9b3 5000 	ldrsh.w	r5, [r3]
 8024178:	8899      	ldrh	r1, [r3, #4]
 802417a:	b2ae      	uxth	r6, r5
 802417c:	4431      	add	r1, r6
 802417e:	b289      	uxth	r1, r1
 8024180:	fa0f fc81 	sxth.w	ip, r1
 8024184:	4565      	cmp	r5, ip
 8024186:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 802418a:	da28      	bge.n	80241de <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 802418c:	9803      	ldr	r0, [sp, #12]
 802418e:	1830      	adds	r0, r6, r0
 8024190:	b280      	uxth	r0, r0
 8024192:	9005      	str	r0, [sp, #20]
 8024194:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8024198:	4575      	cmp	r5, lr
 802419a:	da20      	bge.n	80241de <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 802419c:	f8b3 8006 	ldrh.w	r8, [r3, #6]
 80241a0:	b2a7      	uxth	r7, r4
 80241a2:	4638      	mov	r0, r7
 80241a4:	4447      	add	r7, r8
 80241a6:	b2bf      	uxth	r7, r7
 80241a8:	fa0f f987 	sxth.w	r9, r7
 80241ac:	454c      	cmp	r4, r9
 80241ae:	da16      	bge.n	80241de <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241b0:	4680      	mov	r8, r0
 80241b2:	9007      	str	r0, [sp, #28]
 80241b4:	9806      	ldr	r0, [sp, #24]
 80241b6:	4480      	add	r8, r0
 80241b8:	fa1f f888 	uxth.w	r8, r8
 80241bc:	fa0f fb88 	sxth.w	fp, r8
 80241c0:	455c      	cmp	r4, fp
 80241c2:	da0c      	bge.n	80241de <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241c4:	9805      	ldr	r0, [sp, #20]
 80241c6:	45d9      	cmp	r9, fp
 80241c8:	bfc8      	it	gt
 80241ca:	4647      	movgt	r7, r8
 80241cc:	45f4      	cmp	ip, lr
 80241ce:	bfc8      	it	gt
 80241d0:	4601      	movgt	r1, r0
 80241d2:	9807      	ldr	r0, [sp, #28]
 80241d4:	1b89      	subs	r1, r1, r6
 80241d6:	1a3f      	subs	r7, r7, r0
 80241d8:	b209      	sxth	r1, r1
 80241da:	b23f      	sxth	r7, r7
 80241dc:	e005      	b.n	80241ea <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xa2>
 80241de:	2700      	movs	r7, #0
 80241e0:	463c      	mov	r4, r7
 80241e2:	4639      	mov	r1, r7
 80241e4:	463e      	mov	r6, r7
 80241e6:	463d      	mov	r5, r7
 80241e8:	9707      	str	r7, [sp, #28]
 80241ea:	f9b2 b000 	ldrsh.w	fp, [r2]
 80241ee:	8890      	ldrh	r0, [r2, #4]
 80241f0:	4458      	add	r0, fp
 80241f2:	b280      	uxth	r0, r0
 80241f4:	fa0f fc80 	sxth.w	ip, r0
 80241f8:	45ac      	cmp	ip, r5
 80241fa:	dd51      	ble.n	80242a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80241fc:	4431      	add	r1, r6
 80241fe:	b289      	uxth	r1, r1
 8024200:	fa0f fe81 	sxth.w	lr, r1
 8024204:	45f3      	cmp	fp, lr
 8024206:	da4b      	bge.n	80242a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8024208:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 802420c:	88d6      	ldrh	r6, [r2, #6]
 802420e:	4446      	add	r6, r8
 8024210:	b2b6      	uxth	r6, r6
 8024212:	fa0f f986 	sxth.w	r9, r6
 8024216:	454c      	cmp	r4, r9
 8024218:	da42      	bge.n	80242a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 802421a:	9a07      	ldr	r2, [sp, #28]
 802421c:	443a      	add	r2, r7
 802421e:	b297      	uxth	r7, r2
 8024220:	b23a      	sxth	r2, r7
 8024222:	4590      	cmp	r8, r2
 8024224:	9205      	str	r2, [sp, #20]
 8024226:	da3b      	bge.n	80242a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8024228:	45ab      	cmp	fp, r5
 802422a:	bfb8      	it	lt
 802422c:	46ab      	movlt	fp, r5
 802422e:	4544      	cmp	r4, r8
 8024230:	bfb8      	it	lt
 8024232:	4644      	movlt	r4, r8
 8024234:	45f4      	cmp	ip, lr
 8024236:	bfc8      	it	gt
 8024238:	4608      	movgt	r0, r1
 802423a:	9905      	ldr	r1, [sp, #20]
 802423c:	465a      	mov	r2, fp
 802423e:	4589      	cmp	r9, r1
 8024240:	bfc8      	it	gt
 8024242:	463e      	movgt	r6, r7
 8024244:	f8df c054 	ldr.w	ip, [pc, #84]	@ 802429c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x154>
 8024248:	4f13      	ldr	r7, [pc, #76]	@ (8024298 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>)
 802424a:	fa1f f58b 	uxth.w	r5, fp
 802424e:	1b36      	subs	r6, r6, r4
 8024250:	1b41      	subs	r1, r0, r5
 8024252:	f8bc c000 	ldrh.w	ip, [ip]
 8024256:	883f      	ldrh	r7, [r7, #0]
 8024258:	fa0f fb86 	sxth.w	fp, r6
 802425c:	fa0f f981 	sxth.w	r9, r1
 8024260:	2a00      	cmp	r2, #0
 8024262:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 8024266:	f8ad 2020 	strh.w	r2, [sp, #32]
 802426a:	f8ad 4022 	strh.w	r4, [sp, #34]	@ 0x22
 802426e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8024272:	fa0f f68c 	sxth.w	r6, ip
 8024276:	b239      	sxth	r1, r7
 8024278:	f280 812b 	bge.w	80244d2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38a>
 802427c:	f04f 0e00 	mov.w	lr, #0
 8024280:	fa0f f980 	sxth.w	r9, r0
 8024284:	4675      	mov	r5, lr
 8024286:	4672      	mov	r2, lr
 8024288:	4648      	mov	r0, r9
 802428a:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 802428e:	f8ad e020 	strh.w	lr, [sp, #32]
 8024292:	e015      	b.n	80242c0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8024294:	20082ec4 	.word	0x20082ec4
 8024298:	20082eba 	.word	0x20082eba
 802429c:	20082eb8 	.word	0x20082eb8
 80242a0:	2200      	movs	r2, #0
 80242a2:	48a3      	ldr	r0, [pc, #652]	@ (8024530 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e8>)
 80242a4:	4615      	mov	r5, r2
 80242a6:	f8b0 c000 	ldrh.w	ip, [r0]
 80242aa:	4693      	mov	fp, r2
 80242ac:	4614      	mov	r4, r2
 80242ae:	4610      	mov	r0, r2
 80242b0:	4691      	mov	r9, r2
 80242b2:	49a0      	ldr	r1, [pc, #640]	@ (8024534 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ec>)
 80242b4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80242b8:	880f      	ldrh	r7, [r1, #0]
 80242ba:	fa0f f68c 	sxth.w	r6, ip
 80242be:	b239      	sxth	r1, r7
 80242c0:	1ab2      	subs	r2, r6, r2
 80242c2:	4282      	cmp	r2, r0
 80242c4:	da05      	bge.n	80242d2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x18a>
 80242c6:	ebac 0c05 	sub.w	ip, ip, r5
 80242ca:	fa0f f98c 	sxth.w	r9, ip
 80242ce:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 80242d2:	2c00      	cmp	r4, #0
 80242d4:	f2c0 80e8 	blt.w	80244a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>
 80242d8:	4622      	mov	r2, r4
 80242da:	1a89      	subs	r1, r1, r2
 80242dc:	458b      	cmp	fp, r1
 80242de:	dd04      	ble.n	80242ea <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a2>
 80242e0:	1b3f      	subs	r7, r7, r4
 80242e2:	fa0f fb87 	sxth.w	fp, r7
 80242e6:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80242ea:	f1b9 0f00 	cmp.w	r9, #0
 80242ee:	f340 80d2 	ble.w	8024496 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 80242f2:	f1bb 0f00 	cmp.w	fp, #0
 80242f6:	f340 80ce 	ble.w	8024496 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 80242fa:	2200      	movs	r2, #0
 80242fc:	8819      	ldrh	r1, [r3, #0]
 80242fe:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 8024302:	9b03      	ldr	r3, [sp, #12]
 8024304:	1a6d      	subs	r5, r5, r1
 8024306:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 802430a:	eba4 0408 	sub.w	r4, r4, r8
 802430e:	9b06      	ldr	r3, [sp, #24]
 8024310:	a90c      	add	r1, sp, #48	@ 0x30
 8024312:	a80a      	add	r0, sp, #40	@ 0x28
 8024314:	b22d      	sxth	r5, r5
 8024316:	b224      	sxth	r4, r4
 8024318:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 802431c:	920c      	str	r2, [sp, #48]	@ 0x30
 802431e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8024322:	f8ad b02e 	strh.w	fp, [sp, #46]	@ 0x2e
 8024326:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 802432a:	f8ad 402a 	strh.w	r4, [sp, #42]	@ 0x2a
 802432e:	f7e8 fd0f 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024332:	a808      	add	r0, sp, #32
 8024334:	f7e8 fce4 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024338:	a80c      	add	r0, sp, #48	@ 0x30
 802433a:	f7e8 fce1 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802433e:	4b7e      	ldr	r3, [pc, #504]	@ (8024538 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 8024340:	681b      	ldr	r3, [r3, #0]
 8024342:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024346:	2a00      	cmp	r2, #0
 8024348:	f040 80ba 	bne.w	80244c0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 802434c:	6898      	ldr	r0, [r3, #8]
 802434e:	6803      	ldr	r3, [r0, #0]
 8024350:	4a7a      	ldr	r2, [pc, #488]	@ (802453c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f4>)
 8024352:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024354:	4293      	cmp	r3, r2
 8024356:	f040 80c4 	bne.w	80244e2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39a>
 802435a:	7b00      	ldrb	r0, [r0, #12]
 802435c:	2801      	cmp	r0, #1
 802435e:	f000 80ba 	beq.w	80244d6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38e>
 8024362:	f0c0 80b2 	bcc.w	80244ca <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x382>
 8024366:	2802      	cmp	r0, #2
 8024368:	f040 80da 	bne.w	8024520 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3d8>
 802436c:	2310      	movs	r3, #16
 802436e:	2604      	movs	r6, #4
 8024370:	9305      	str	r3, [sp, #20]
 8024372:	9b04      	ldr	r3, [sp, #16]
 8024374:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024378:	681b      	ldr	r3, [r3, #0]
 802437a:	fb06 f101 	mul.w	r1, r6, r1
 802437e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024380:	4a6f      	ldr	r2, [pc, #444]	@ (8024540 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f8>)
 8024382:	9103      	str	r1, [sp, #12]
 8024384:	4293      	cmp	r3, r2
 8024386:	f040 80ae 	bne.w	80244e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39e>
 802438a:	4b6e      	ldr	r3, [pc, #440]	@ (8024544 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3fc>)
 802438c:	881f      	ldrh	r7, [r3, #0]
 802438e:	2f00      	cmp	r7, #0
 8024390:	f000 80bf 	beq.w	8024512 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ca>
 8024394:	9b04      	ldr	r3, [sp, #16]
 8024396:	7b1b      	ldrb	r3, [r3, #12]
 8024398:	2b02      	cmp	r3, #2
 802439a:	f000 80a0 	beq.w	80244de <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x396>
 802439e:	2b01      	cmp	r3, #1
 80243a0:	bf14      	ite	ne
 80243a2:	2302      	movne	r3, #2
 80243a4:	2303      	moveq	r3, #3
 80243a6:	fb17 f703 	smulbb	r7, r7, r3
 80243aa:	b2bf      	uxth	r7, r7
 80243ac:	4a62      	ldr	r2, [pc, #392]	@ (8024538 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 80243ae:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80243b2:	6810      	ldr	r0, [r2, #0]
 80243b4:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80243b8:	9a03      	ldr	r2, [sp, #12]
 80243ba:	fb02 3808 	mla	r8, r2, r8, r3
 80243be:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80243c0:	6803      	ldr	r3, [r0, #0]
 80243c2:	4442      	add	r2, r8
 80243c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80243c6:	9204      	str	r2, [sp, #16]
 80243c8:	4798      	blx	r3
 80243ca:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 80243ce:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80243d2:	fb07 f202 	mul.w	r2, r7, r2
 80243d6:	fb06 2303 	mla	r3, r6, r3, r2
 80243da:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8024574 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x42c>
 80243de:	18c3      	adds	r3, r0, r3
 80243e0:	f8d8 2000 	ldr.w	r2, [r8]
 80243e4:	9306      	str	r3, [sp, #24]
 80243e6:	2a00      	cmp	r2, #0
 80243e8:	f000 8081 	beq.w	80244ee <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80243ec:	2600      	movs	r6, #0
 80243ee:	4610      	mov	r0, r2
 80243f0:	f7fc fbd2 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80243f4:	9b03      	ldr	r3, [sp, #12]
 80243f6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80243fa:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80243fe:	9300      	str	r3, [sp, #0]
 8024400:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8024404:	f7ec fdba 	bl	8010f7c <nema_bind_dst_tex>
 8024408:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 802440c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8024410:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024414:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024418:	f7ec fc46 	bl	8010ca8 <nema_set_clip>
 802441c:	f04f 33ff 	mov.w	r3, #4294967295
 8024420:	2201      	movs	r2, #1
 8024422:	4631      	mov	r1, r6
 8024424:	f240 5004 	movw	r0, #1284	@ 0x504
 8024428:	f7f9 fdda 	bl	801dfe0 <nema_set_blend>
 802442c:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 8024430:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8024434:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 8024438:	9700      	str	r7, [sp, #0]
 802443a:	9601      	str	r6, [sp, #4]
 802443c:	f7ec fd1a 	bl	8010e74 <nema_bind_src_tex>
 8024440:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024444:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024448:	f7ec ff6e 	bl	8011328 <nema_blit>
 802444c:	f8d8 0000 	ldr.w	r0, [r8]
 8024450:	2800      	cmp	r0, #0
 8024452:	d04c      	beq.n	80244ee <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024454:	f7fc fbc0 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024458:	f8d8 0000 	ldr.w	r0, [r8]
 802445c:	2800      	cmp	r0, #0
 802445e:	d046      	beq.n	80244ee <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024460:	6803      	ldr	r3, [r0, #0]
 8024462:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024464:	4798      	blx	r3
 8024466:	f8d8 0000 	ldr.w	r0, [r8]
 802446a:	2800      	cmp	r0, #0
 802446c:	d03f      	beq.n	80244ee <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 802446e:	6803      	ldr	r3, [r0, #0]
 8024470:	4637      	mov	r7, r6
 8024472:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024474:	4798      	blx	r3
 8024476:	4650      	mov	r0, sl
 8024478:	f365 060f 	bfi	r6, r5, #0, #16
 802447c:	f369 070f 	bfi	r7, r9, #0, #16
 8024480:	f364 461f 	bfi	r6, r4, #16, #16
 8024484:	f36b 471f 	bfi	r7, fp, #16, #16
 8024488:	f8ca 6000 	str.w	r6, [sl]
 802448c:	f8ca 7004 	str.w	r7, [sl, #4]
 8024490:	b00f      	add	sp, #60	@ 0x3c
 8024492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024496:	2300      	movs	r3, #0
 8024498:	4650      	mov	r0, sl
 802449a:	f8ca 3000 	str.w	r3, [sl]
 802449e:	f8ca 3004 	str.w	r3, [sl, #4]
 80244a2:	b00f      	add	sp, #60	@ 0x3c
 80244a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244a8:	2000      	movs	r0, #0
 80244aa:	eb0b 0604 	add.w	r6, fp, r4
 80244ae:	fa0f fb86 	sxth.w	fp, r6
 80244b2:	4604      	mov	r4, r0
 80244b4:	4602      	mov	r2, r0
 80244b6:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80244ba:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80244be:	e70c      	b.n	80242da <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x192>
 80244c0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80244c2:	2800      	cmp	r0, #0
 80244c4:	f47f af43 	bne.w	802434e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x206>
 80244c8:	e740      	b.n	802434c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>
 80244ca:	2304      	movs	r3, #4
 80244cc:	2602      	movs	r6, #2
 80244ce:	9305      	str	r3, [sp, #20]
 80244d0:	e74f      	b.n	8024372 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 80244d2:	4648      	mov	r0, r9
 80244d4:	e6f4      	b.n	80242c0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 80244d6:	2339      	movs	r3, #57	@ 0x39
 80244d8:	2603      	movs	r6, #3
 80244da:	9305      	str	r3, [sp, #20]
 80244dc:	e749      	b.n	8024372 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 80244de:	2304      	movs	r3, #4
 80244e0:	e761      	b.n	80243a6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25e>
 80244e2:	4798      	blx	r3
 80244e4:	e73a      	b.n	802435c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>
 80244e6:	9804      	ldr	r0, [sp, #16]
 80244e8:	4798      	blx	r3
 80244ea:	4607      	mov	r7, r0
 80244ec:	e75e      	b.n	80243ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>
 80244ee:	4b16      	ldr	r3, [pc, #88]	@ (8024548 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x400>)
 80244f0:	4a16      	ldr	r2, [pc, #88]	@ (802454c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x404>)
 80244f2:	217c      	movs	r1, #124	@ 0x7c
 80244f4:	4816      	ldr	r0, [pc, #88]	@ (8024550 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x408>)
 80244f6:	f00d ffdf 	bl	80324b8 <__assert_func>
 80244fa:	4b16      	ldr	r3, [pc, #88]	@ (8024554 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40c>)
 80244fc:	4a16      	ldr	r2, [pc, #88]	@ (8024558 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80244fe:	21f9      	movs	r1, #249	@ 0xf9
 8024500:	4816      	ldr	r0, [pc, #88]	@ (802455c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 8024502:	f00d ffd9 	bl	80324b8 <__assert_func>
 8024506:	4b16      	ldr	r3, [pc, #88]	@ (8024560 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x418>)
 8024508:	4a13      	ldr	r2, [pc, #76]	@ (8024558 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 802450a:	21f8      	movs	r1, #248	@ 0xf8
 802450c:	4813      	ldr	r0, [pc, #76]	@ (802455c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 802450e:	f00d ffd3 	bl	80324b8 <__assert_func>
 8024512:	4b14      	ldr	r3, [pc, #80]	@ (8024564 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x41c>)
 8024514:	4a14      	ldr	r2, [pc, #80]	@ (8024568 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x420>)
 8024516:	f240 110f 	movw	r1, #271	@ 0x10f
 802451a:	4814      	ldr	r0, [pc, #80]	@ (802456c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x424>)
 802451c:	f00d ffcc 	bl	80324b8 <__assert_func>
 8024520:	4b13      	ldr	r3, [pc, #76]	@ (8024570 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x428>)
 8024522:	4a0d      	ldr	r2, [pc, #52]	@ (8024558 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 8024524:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024528:	480c      	ldr	r0, [pc, #48]	@ (802455c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 802452a:	f00d ffc5 	bl	80324b8 <__assert_func>
 802452e:	bf00      	nop
 8024530:	20082eb8 	.word	0x20082eb8
 8024534:	20082eba 	.word	0x20082eba
 8024538:	20082ec4 	.word	0x20082ec4
 802453c:	08020c7d 	.word	0x08020c7d
 8024540:	0802285d 	.word	0x0802285d
 8024544:	20082ebe 	.word	0x20082ebe
 8024548:	080361d4 	.word	0x080361d4
 802454c:	08036a40 	.word	0x08036a40
 8024550:	080361fc 	.word	0x080361fc
 8024554:	08036530 	.word	0x08036530
 8024558:	08037b18 	.word	0x08037b18
 802455c:	08036278 	.word	0x08036278
 8024560:	0803647c 	.word	0x0803647c
 8024564:	080367b0 	.word	0x080367b0
 8024568:	08037f74 	.word	0x08037f74
 802456c:	080367f4 	.word	0x080367f4
 8024570:	08036580 	.word	0x08036580
 8024574:	20083364 	.word	0x20083364

08024578 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8024578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802457c:	b085      	sub	sp, #20
 802457e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8024582:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 8024586:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 802458a:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 802458e:	2e00      	cmp	r6, #0
 8024590:	d05b      	beq.n	802464a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8024592:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 8024596:	f1be 0f00 	cmp.w	lr, #0
 802459a:	dd56      	ble.n	802464a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802459c:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80245a0:	f1be 0f00 	cmp.w	lr, #0
 80245a4:	dd51      	ble.n	802464a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245a6:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 80245aa:	f1bb 0f0b 	cmp.w	fp, #11
 80245ae:	f000 815f 	beq.w	8024870 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f8>
 80245b2:	f1bb 0f0d 	cmp.w	fp, #13
 80245b6:	4684      	mov	ip, r0
 80245b8:	4614      	mov	r4, r2
 80245ba:	461f      	mov	r7, r3
 80245bc:	d03c      	beq.n	8024638 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc0>
 80245be:	f8df a35c 	ldr.w	sl, [pc, #860]	@ 802491c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a4>
 80245c2:	f8da 0000 	ldr.w	r0, [sl]
 80245c6:	2800      	cmp	r0, #0
 80245c8:	f000 8187 	beq.w	80248da <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 80245cc:	f8cd c00c 	str.w	ip, [sp, #12]
 80245d0:	f7fc fae2 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80245d4:	9b03      	ldr	r3, [sp, #12]
 80245d6:	681a      	ldr	r2, [r3, #0]
 80245d8:	4618      	mov	r0, r3
 80245da:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 80245dc:	4798      	blx	r3
 80245de:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80245e2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80245e6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80245ea:	f9b5 0000 	ldrsh.w	r0, [r5]
 80245ee:	f7ec fb5b 	bl	8010ca8 <nema_set_clip>
 80245f2:	2200      	movs	r2, #0
 80245f4:	4633      	mov	r3, r6
 80245f6:	4611      	mov	r1, r2
 80245f8:	4610      	mov	r0, r2
 80245fa:	f7ec fc33 	bl	8010e64 <nema_rgba>
 80245fe:	f7fa f8b5 	bl	801e76c <nema_set_const_color>
 8024602:	f04f 33ff 	mov.w	r3, #4294967295
 8024606:	2201      	movs	r2, #1
 8024608:	2100      	movs	r1, #0
 802460a:	48ba      	ldr	r0, [pc, #744]	@ (80248f4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 802460c:	f7f9 fce8 	bl	801dfe0 <nema_set_blend>
 8024610:	f1bb 0f0d 	cmp.w	fp, #13
 8024614:	f200 8167 	bhi.w	80248e6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8024618:	e8df f01b 	tbh	[pc, fp, lsl #1]
 802461c:	00c100cd 	.word	0x00c100cd
 8024620:	016500d6 	.word	0x016500d6
 8024624:	01650165 	.word	0x01650165
 8024628:	01650165 	.word	0x01650165
 802462c:	01650165 	.word	0x01650165
 8024630:	01650165 	.word	0x01650165
 8024634:	001a00ac 	.word	0x001a00ac
 8024638:	685b      	ldr	r3, [r3, #4]
 802463a:	b133      	cbz	r3, 802464a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802463c:	781b      	ldrb	r3, [r3, #0]
 802463e:	f1a3 0216 	sub.w	r2, r3, #22
 8024642:	2a01      	cmp	r2, #1
 8024644:	d9bb      	bls.n	80245be <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 8024646:	2b12      	cmp	r3, #18
 8024648:	d0b9      	beq.n	80245be <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 802464a:	b005      	add	sp, #20
 802464c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024650:	f04f 36ff 	mov.w	r6, #4294967295
 8024654:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024658:	687b      	ldr	r3, [r7, #4]
 802465a:	6838      	ldr	r0, [r7, #0]
 802465c:	781b      	ldrb	r3, [r3, #0]
 802465e:	f008 0501 	and.w	r5, r8, #1
 8024662:	e9cd 6500 	strd	r6, r5, [sp]
 8024666:	f7ec fc05 	bl	8010e74 <nema_bind_src_tex>
 802466a:	2001      	movs	r0, #1
 802466c:	f7ed fc9e 	bl	8011fac <nema_enable_tiling>
 8024670:	f9b9 3000 	ldrsh.w	r3, [r9]
 8024674:	edd4 7a00 	vldr	s15, [r4]
 8024678:	ee02 3a10 	vmov	s4, r3
 802467c:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8024680:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 8024684:	ee02 3a90 	vmov	s5, r3
 8024688:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802468c:	eddf 6a9a 	vldr	s13, [pc, #616]	@ 80248f8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024690:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 8024694:	edd4 7a01 	vldr	s15, [r4, #4]
 8024698:	eeb0 0a42 	vmov.f32	s0, s4
 802469c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80246a0:	eea7 0a26 	vfma.f32	s0, s14, s13
 80246a4:	eef0 0a62 	vmov.f32	s1, s5
 80246a8:	ed94 7a03 	vldr	s14, [r4, #12]
 80246ac:	4b93      	ldr	r3, [pc, #588]	@ (80248fc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x384>)
 80246ae:	eee7 0aa6 	vfma.f32	s1, s15, s13
 80246b2:	781b      	ldrb	r3, [r3, #0]
 80246b4:	edd4 7a04 	vldr	s15, [r4, #16]
 80246b8:	2b01      	cmp	r3, #1
 80246ba:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80246be:	f000 808c 	beq.w	80247da <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x262>
 80246c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80246ca:	f240 80ea 	bls.w	80248a2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 80246ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246d2:	bf94      	ite	ls
 80246d4:	2001      	movls	r0, #1
 80246d6:	2002      	movhi	r0, #2
 80246d8:	edd4 7a05 	vldr	s15, [r4, #20]
 80246dc:	ed94 6a08 	vldr	s12, [r4, #32]
 80246e0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80246e4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80246e8:	edd4 7a06 	vldr	s15, [r4, #24]
 80246ec:	eddf 6a82 	vldr	s13, [pc, #520]	@ 80248f8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80246f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80246f4:	eeb0 1a42 	vmov.f32	s2, s4
 80246f8:	eef0 1a62 	vmov.f32	s3, s5
 80246fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024700:	eee7 1aa6 	vfma.f32	s3, s15, s13
 8024704:	eea7 1a26 	vfma.f32	s2, s14, s13
 8024708:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 802470c:	f240 80c1 	bls.w	8024892 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 8024710:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024718:	bf94      	ite	ls
 802471a:	2101      	movls	r1, #1
 802471c:	2102      	movhi	r1, #2
 802471e:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024722:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 8024726:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802472a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802472e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024732:	eddf 6a71 	vldr	s13, [pc, #452]	@ 80248f8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024736:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802473a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802473e:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024742:	eea7 2a26 	vfma.f32	s4, s14, s13
 8024746:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802474a:	f240 809a 	bls.w	8024882 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 802474e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024756:	bf94      	ite	ls
 8024758:	2201      	movls	r2, #1
 802475a:	2202      	movhi	r2, #2
 802475c:	f7ec feda 	bl	8011514 <nema_blit_tri_fit>
 8024760:	f8da 0000 	ldr.w	r0, [sl]
 8024764:	2800      	cmp	r0, #0
 8024766:	f000 80b8 	beq.w	80248da <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 802476a:	b005      	add	sp, #20
 802476c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024770:	f7fc ba32 	b.w	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024774:	4a62      	ldr	r2, [pc, #392]	@ (8024900 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 8024776:	23ff      	movs	r3, #255	@ 0xff
 8024778:	6810      	ldr	r0, [r2, #0]
 802477a:	f008 0501 	and.w	r5, r8, #1
 802477e:	b2c2      	uxtb	r2, r0
 8024780:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8024784:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8024788:	f7ec fb6c 	bl	8010e64 <nema_rgba>
 802478c:	f7ec fa80 	bl	8010c90 <nema_set_tex_color>
 8024790:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024794:	6838      	ldr	r0, [r7, #0]
 8024796:	2329      	movs	r3, #41	@ 0x29
 8024798:	f04f 36ff 	mov.w	r6, #4294967295
 802479c:	e761      	b.n	8024662 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 802479e:	2339      	movs	r3, #57	@ 0x39
 80247a0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247a4:	f04f 0c03 	mov.w	ip, #3
 80247a8:	6838      	ldr	r0, [r7, #0]
 80247aa:	f008 0501 	and.w	r5, r8, #1
 80247ae:	693e      	ldr	r6, [r7, #16]
 80247b0:	fb06 f60c 	mul.w	r6, r6, ip
 80247b4:	e755      	b.n	8024662 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 80247b6:	f008 0501 	and.w	r5, r8, #1
 80247ba:	6838      	ldr	r0, [r7, #0]
 80247bc:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247c0:	2304      	movs	r3, #4
 80247c2:	f04f 0c02 	mov.w	ip, #2
 80247c6:	e7f2      	b.n	80247ae <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 80247c8:	2310      	movs	r3, #16
 80247ca:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247ce:	f04f 0c04 	mov.w	ip, #4
 80247d2:	6838      	ldr	r0, [r7, #0]
 80247d4:	f008 0501 	and.w	r5, r8, #1
 80247d8:	e7e9      	b.n	80247ae <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 80247da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80247e2:	d974      	bls.n	80248ce <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x356>
 80247e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247e8:	bf94      	ite	ls
 80247ea:	2002      	movls	r0, #2
 80247ec:	2003      	movhi	r0, #3
 80247ee:	edd4 7a05 	vldr	s15, [r4, #20]
 80247f2:	ed94 6a08 	vldr	s12, [r4, #32]
 80247f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80247fa:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80247fe:	edd4 7a06 	vldr	s15, [r4, #24]
 8024802:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80248f8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024806:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802480a:	eeb0 1a42 	vmov.f32	s2, s4
 802480e:	eef0 1a62 	vmov.f32	s3, s5
 8024812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024816:	eee7 1aa6 	vfma.f32	s3, s15, s13
 802481a:	eea7 1a26 	vfma.f32	s2, s14, s13
 802481e:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8024822:	d94c      	bls.n	80248be <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x346>
 8024824:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024828:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802482c:	bf94      	ite	ls
 802482e:	2102      	movls	r1, #2
 8024830:	2103      	movhi	r1, #3
 8024832:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024836:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 802483a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802483e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024842:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024846:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 80248f8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 802484a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802484e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024852:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024856:	eea7 2a26 	vfma.f32	s4, s14, s13
 802485a:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802485e:	d926      	bls.n	80248ae <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8024860:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024868:	bf94      	ite	ls
 802486a:	2202      	movls	r2, #2
 802486c:	2203      	movhi	r2, #3
 802486e:	e775      	b.n	802475c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024870:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 8024874:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8024878:	b005      	add	sp, #20
 802487a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802487e:	f7e7 bcef 	b.w	800c260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8024882:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802488a:	bf94      	ite	ls
 802488c:	2200      	movls	r2, #0
 802488e:	2203      	movhi	r2, #3
 8024890:	e764      	b.n	802475c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024892:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802489a:	bf94      	ite	ls
 802489c:	2100      	movls	r1, #0
 802489e:	2103      	movhi	r1, #3
 80248a0:	e73d      	b.n	802471e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a6>
 80248a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248a6:	bf94      	ite	ls
 80248a8:	2000      	movls	r0, #0
 80248aa:	2003      	movhi	r0, #3
 80248ac:	e714      	b.n	80246d8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 80248ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248b6:	bf94      	ite	ls
 80248b8:	2201      	movls	r2, #1
 80248ba:	2200      	movhi	r2, #0
 80248bc:	e74e      	b.n	802475c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 80248be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248c6:	bf94      	ite	ls
 80248c8:	2101      	movls	r1, #1
 80248ca:	2100      	movhi	r1, #0
 80248cc:	e7b1      	b.n	8024832 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 80248ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248d2:	bf94      	ite	ls
 80248d4:	2001      	movls	r0, #1
 80248d6:	2000      	movhi	r0, #0
 80248d8:	e789      	b.n	80247ee <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x276>
 80248da:	4b0a      	ldr	r3, [pc, #40]	@ (8024904 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 80248dc:	4a0a      	ldr	r2, [pc, #40]	@ (8024908 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 80248de:	217c      	movs	r1, #124	@ 0x7c
 80248e0:	480a      	ldr	r0, [pc, #40]	@ (802490c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>)
 80248e2:	f00d fde9 	bl	80324b8 <__assert_func>
 80248e6:	4b0a      	ldr	r3, [pc, #40]	@ (8024910 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>)
 80248e8:	4a0a      	ldr	r2, [pc, #40]	@ (8024914 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39c>)
 80248ea:	f240 21e2 	movw	r1, #738	@ 0x2e2
 80248ee:	480a      	ldr	r0, [pc, #40]	@ (8024918 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a0>)
 80248f0:	f00d fde2 	bl	80324b8 <__assert_func>
 80248f4:	08000504 	.word	0x08000504
 80248f8:	3d800000 	.word	0x3d800000
 80248fc:	20082ebc 	.word	0x20082ebc
 8024900:	20082ecc 	.word	0x20082ecc
 8024904:	080361d4 	.word	0x080361d4
 8024908:	08036a40 	.word	0x08036a40
 802490c:	080361fc 	.word	0x080361fc
 8024910:	080360cc 	.word	0x080360cc
 8024914:	08036de4 	.word	0x08036de4
 8024918:	08036278 	.word	0x08036278
 802491c:	20083364 	.word	0x20083364

08024920 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8024920:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8024924:	2700      	movs	r7, #0
 8024926:	4a2b      	ldr	r2, [pc, #172]	@ (80249d4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 8024928:	4b2b      	ldr	r3, [pc, #172]	@ (80249d8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 802492a:	4d2c      	ldr	r5, [pc, #176]	@ (80249dc <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 802492c:	8812      	ldrh	r2, [r2, #0]
 802492e:	881b      	ldrh	r3, [r3, #0]
 8024930:	b088      	sub	sp, #32
 8024932:	4604      	mov	r4, r0
 8024934:	6828      	ldr	r0, [r5, #0]
 8024936:	f8ad 201c 	strh.w	r2, [sp, #28]
 802493a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802493e:	9706      	str	r7, [sp, #24]
 8024940:	6803      	ldr	r3, [r0, #0]
 8024942:	4689      	mov	r9, r1
 8024944:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024946:	4798      	blx	r3
 8024948:	6823      	ldr	r3, [r4, #0]
 802494a:	4a25      	ldr	r2, [pc, #148]	@ (80249e0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 802494c:	68de      	ldr	r6, [r3, #12]
 802494e:	4601      	mov	r1, r0
 8024950:	4296      	cmp	r6, r2
 8024952:	d134      	bne.n	80249be <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 8024954:	682a      	ldr	r2, [r5, #0]
 8024956:	691d      	ldr	r5, [r3, #16]
 8024958:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 802495c:	b9a3      	cbnz	r3, 8024988 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 802495e:	6890      	ldr	r0, [r2, #8]
 8024960:	4a20      	ldr	r2, [pc, #128]	@ (80249e4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8024962:	6803      	ldr	r3, [r0, #0]
 8024964:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024966:	4293      	cmp	r3, r2
 8024968:	d116      	bne.n	8024998 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 802496a:	4b1f      	ldr	r3, [pc, #124]	@ (80249e8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 802496c:	7b02      	ldrb	r2, [r0, #12]
 802496e:	429d      	cmp	r5, r3
 8024970:	d119      	bne.n	80249a6 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8024972:	23ff      	movs	r3, #255	@ 0xff
 8024974:	f8cd 9000 	str.w	r9, [sp]
 8024978:	9301      	str	r3, [sp, #4]
 802497a:	4620      	mov	r0, r4
 802497c:	ab06      	add	r3, sp, #24
 802497e:	f7ff fa29 	bl	8023dd4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8024982:	b008      	add	sp, #32
 8024984:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024988:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 802498a:	2800      	cmp	r0, #0
 802498c:	d0e7      	beq.n	802495e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 802498e:	6803      	ldr	r3, [r0, #0]
 8024990:	4a14      	ldr	r2, [pc, #80]	@ (80249e4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8024992:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024994:	4293      	cmp	r3, r2
 8024996:	d0e8      	beq.n	802496a <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 8024998:	9105      	str	r1, [sp, #20]
 802499a:	4798      	blx	r3
 802499c:	4b12      	ldr	r3, [pc, #72]	@ (80249e8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 802499e:	4602      	mov	r2, r0
 80249a0:	429d      	cmp	r5, r3
 80249a2:	9905      	ldr	r1, [sp, #20]
 80249a4:	d0e5      	beq.n	8024972 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 80249a6:	2600      	movs	r6, #0
 80249a8:	23ff      	movs	r3, #255	@ 0xff
 80249aa:	f8cd 9000 	str.w	r9, [sp]
 80249ae:	e9cd 3601 	strd	r3, r6, [sp, #4]
 80249b2:	4620      	mov	r0, r4
 80249b4:	ab06      	add	r3, sp, #24
 80249b6:	47a8      	blx	r5
 80249b8:	b008      	add	sp, #32
 80249ba:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80249be:	22ff      	movs	r2, #255	@ 0xff
 80249c0:	9701      	str	r7, [sp, #4]
 80249c2:	9200      	str	r2, [sp, #0]
 80249c4:	464b      	mov	r3, r9
 80249c6:	4620      	mov	r0, r4
 80249c8:	aa06      	add	r2, sp, #24
 80249ca:	47b0      	blx	r6
 80249cc:	b008      	add	sp, #32
 80249ce:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80249d2:	bf00      	nop
 80249d4:	20082ebe 	.word	0x20082ebe
 80249d8:	20082ec0 	.word	0x20082ec0
 80249dc:	20082ec4 	.word	0x20082ec4
 80249e0:	08023f85 	.word	0x08023f85
 80249e4:	08020c7d 	.word	0x08020c7d
 80249e8:	08024011 	.word	0x08024011

080249ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80249ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249f0:	4604      	mov	r4, r0
 80249f2:	4865      	ldr	r0, [pc, #404]	@ (8024b88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 80249f4:	460f      	mov	r7, r1
 80249f6:	6800      	ldr	r0, [r0, #0]
 80249f8:	b093      	sub	sp, #76	@ 0x4c
 80249fa:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 80249fe:	2902      	cmp	r1, #2
 8024a00:	f000 81f2 	beq.w	8024de8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3fc>
 8024a04:	f10d 0948 	add.w	r9, sp, #72	@ 0x48
 8024a08:	f829 3d1c 	strh.w	r3, [r9, #-28]!
 8024a0c:	4648      	mov	r0, r9
 8024a0e:	4615      	mov	r5, r2
 8024a10:	f7eb fbee 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8024a14:	6823      	ldr	r3, [r4, #0]
 8024a16:	4a5d      	ldr	r2, [pc, #372]	@ (8024b8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a0>)
 8024a18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024a1a:	4680      	mov	r8, r0
 8024a1c:	4293      	cmp	r3, r2
 8024a1e:	f040 81b5 	bne.w	8024d8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a0>
 8024a22:	7b20      	ldrb	r0, [r4, #12]
 8024a24:	4580      	cmp	r8, r0
 8024a26:	f040 81d9 	bne.w	8024ddc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3f0>
 8024a2a:	4648      	mov	r0, r9
 8024a2c:	f7eb fb5c 	bl	80100e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8024a30:	4683      	mov	fp, r0
 8024a32:	2800      	cmp	r0, #0
 8024a34:	f000 81cc 	beq.w	8024dd0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3e4>
 8024a38:	6823      	ldr	r3, [r4, #0]
 8024a3a:	4648      	mov	r0, r9
 8024a3c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8024a40:	f7eb fa98 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8024a44:	9005      	str	r0, [sp, #20]
 8024a46:	4648      	mov	r0, r9
 8024a48:	f7eb fac8 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8024a4c:	4b50      	ldr	r3, [pc, #320]	@ (8024b90 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>)
 8024a4e:	9006      	str	r0, [sp, #24]
 8024a50:	4598      	cmp	r8, r3
 8024a52:	f040 818e 	bne.w	8024d72 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x386>
 8024a56:	4b4c      	ldr	r3, [pc, #304]	@ (8024b88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024a58:	681b      	ldr	r3, [r3, #0]
 8024a5a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8024a5e:	2b02      	cmp	r3, #2
 8024a60:	f000 81c8 	beq.w	8024df4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x408>
 8024a64:	f9b5 8000 	ldrsh.w	r8, [r5]
 8024a68:	88ab      	ldrh	r3, [r5, #4]
 8024a6a:	fa1f fe88 	uxth.w	lr, r8
 8024a6e:	4473      	add	r3, lr
 8024a70:	b29b      	uxth	r3, r3
 8024a72:	b218      	sxth	r0, r3
 8024a74:	4580      	cmp	r8, r0
 8024a76:	f9b5 a002 	ldrsh.w	sl, [r5, #2]
 8024a7a:	da2a      	bge.n	8024ad2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024a7c:	9a05      	ldr	r2, [sp, #20]
 8024a7e:	eb0e 0102 	add.w	r1, lr, r2
 8024a82:	b28a      	uxth	r2, r1
 8024a84:	9207      	str	r2, [sp, #28]
 8024a86:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 8024a8a:	45e0      	cmp	r8, ip
 8024a8c:	da21      	bge.n	8024ad2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024a8e:	88ea      	ldrh	r2, [r5, #6]
 8024a90:	fa1f f68a 	uxth.w	r6, sl
 8024a94:	4432      	add	r2, r6
 8024a96:	b292      	uxth	r2, r2
 8024a98:	b211      	sxth	r1, r2
 8024a9a:	458a      	cmp	sl, r1
 8024a9c:	9108      	str	r1, [sp, #32]
 8024a9e:	da18      	bge.n	8024ad2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024aa0:	9906      	ldr	r1, [sp, #24]
 8024aa2:	eb06 0901 	add.w	r9, r6, r1
 8024aa6:	fa1f f989 	uxth.w	r9, r9
 8024aaa:	fa0f f189 	sxth.w	r1, r9
 8024aae:	458a      	cmp	sl, r1
 8024ab0:	9109      	str	r1, [sp, #36]	@ 0x24
 8024ab2:	da0e      	bge.n	8024ad2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024ab4:	9907      	ldr	r1, [sp, #28]
 8024ab6:	4560      	cmp	r0, ip
 8024ab8:	bfc8      	it	gt
 8024aba:	460b      	movgt	r3, r1
 8024abc:	e9dd 1008 	ldrd	r1, r0, [sp, #32]
 8024ac0:	4281      	cmp	r1, r0
 8024ac2:	bfc8      	it	gt
 8024ac4:	464a      	movgt	r2, r9
 8024ac6:	eba3 030e 	sub.w	r3, r3, lr
 8024aca:	1b92      	subs	r2, r2, r6
 8024acc:	b21b      	sxth	r3, r3
 8024ace:	b212      	sxth	r2, r2
 8024ad0:	e005      	b.n	8024ade <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xf2>
 8024ad2:	2200      	movs	r2, #0
 8024ad4:	4616      	mov	r6, r2
 8024ad6:	4692      	mov	sl, r2
 8024ad8:	4613      	mov	r3, r2
 8024ada:	4696      	mov	lr, r2
 8024adc:	4690      	mov	r8, r2
 8024ade:	f9b7 0000 	ldrsh.w	r0, [r7]
 8024ae2:	88b9      	ldrh	r1, [r7, #4]
 8024ae4:	4401      	add	r1, r0
 8024ae6:	b289      	uxth	r1, r1
 8024ae8:	fa0f f981 	sxth.w	r9, r1
 8024aec:	45c8      	cmp	r8, r9
 8024aee:	da55      	bge.n	8024b9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024af0:	449e      	add	lr, r3
 8024af2:	fa1f fe8e 	uxth.w	lr, lr
 8024af6:	fa0f f38e 	sxth.w	r3, lr
 8024afa:	4298      	cmp	r0, r3
 8024afc:	9307      	str	r3, [sp, #28]
 8024afe:	da4d      	bge.n	8024b9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b00:	f9b7 c002 	ldrsh.w	ip, [r7, #2]
 8024b04:	88fb      	ldrh	r3, [r7, #6]
 8024b06:	4463      	add	r3, ip
 8024b08:	b29b      	uxth	r3, r3
 8024b0a:	b21f      	sxth	r7, r3
 8024b0c:	45ba      	cmp	sl, r7
 8024b0e:	da45      	bge.n	8024b9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b10:	4416      	add	r6, r2
 8024b12:	b2b2      	uxth	r2, r6
 8024b14:	b216      	sxth	r6, r2
 8024b16:	45b4      	cmp	ip, r6
 8024b18:	9608      	str	r6, [sp, #32]
 8024b1a:	da3f      	bge.n	8024b9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b1c:	4540      	cmp	r0, r8
 8024b1e:	9e07      	ldr	r6, [sp, #28]
 8024b20:	bfb8      	it	lt
 8024b22:	4640      	movlt	r0, r8
 8024b24:	45d4      	cmp	ip, sl
 8024b26:	bfb8      	it	lt
 8024b28:	46d4      	movlt	ip, sl
 8024b2a:	45b1      	cmp	r9, r6
 8024b2c:	bfc8      	it	gt
 8024b2e:	4671      	movgt	r1, lr
 8024b30:	9e08      	ldr	r6, [sp, #32]
 8024b32:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 8024b94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a8>
 8024b36:	42b7      	cmp	r7, r6
 8024b38:	bfc8      	it	gt
 8024b3a:	4613      	movgt	r3, r2
 8024b3c:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8024b98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ac>
 8024b40:	b282      	uxth	r2, r0
 8024b42:	eba3 030c 	sub.w	r3, r3, ip
 8024b46:	1a8f      	subs	r7, r1, r2
 8024b48:	f8b8 a000 	ldrh.w	sl, [r8]
 8024b4c:	f8be 9000 	ldrh.w	r9, [lr]
 8024b50:	b21b      	sxth	r3, r3
 8024b52:	b23f      	sxth	r7, r7
 8024b54:	2800      	cmp	r0, #0
 8024b56:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024b5a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8024b5e:	f8ad c032 	strh.w	ip, [sp, #50]	@ 0x32
 8024b62:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024b66:	fa0f f88a 	sxth.w	r8, sl
 8024b6a:	fa0f fe89 	sxth.w	lr, r9
 8024b6e:	f280 8115 	bge.w	8024d9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b0>
 8024b72:	2200      	movs	r2, #0
 8024b74:	f04f 0600 	mov.w	r6, #0
 8024b78:	b20f      	sxth	r7, r1
 8024b7a:	4610      	mov	r0, r2
 8024b7c:	4639      	mov	r1, r7
 8024b7e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024b82:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8024b86:	e01b      	b.n	8024bc0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024b88:	20082ec4 	.word	0x20082ec4
 8024b8c:	08020c7d 	.word	0x08020c7d
 8024b90:	08024149 	.word	0x08024149
 8024b94:	20082eb8 	.word	0x20082eb8
 8024b98:	20082eba 	.word	0x20082eba
 8024b9c:	2300      	movs	r3, #0
 8024b9e:	489f      	ldr	r0, [pc, #636]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x430>)
 8024ba0:	499f      	ldr	r1, [pc, #636]	@ (8024e20 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x434>)
 8024ba2:	f8b0 a000 	ldrh.w	sl, [r0]
 8024ba6:	f8b1 9000 	ldrh.w	r9, [r1]
 8024baa:	461a      	mov	r2, r3
 8024bac:	469c      	mov	ip, r3
 8024bae:	4618      	mov	r0, r3
 8024bb0:	4619      	mov	r1, r3
 8024bb2:	461f      	mov	r7, r3
 8024bb4:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8024bb8:	fa0f f88a 	sxth.w	r8, sl
 8024bbc:	fa0f fe89 	sxth.w	lr, r9
 8024bc0:	eba8 0000 	sub.w	r0, r8, r0
 8024bc4:	4288      	cmp	r0, r1
 8024bc6:	da04      	bge.n	8024bd2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1e6>
 8024bc8:	ebaa 0702 	sub.w	r7, sl, r2
 8024bcc:	b23f      	sxth	r7, r7
 8024bce:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024bd2:	f1bc 0f00 	cmp.w	ip, #0
 8024bd6:	f2c0 80c2 	blt.w	8024d5e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x372>
 8024bda:	4661      	mov	r1, ip
 8024bdc:	ebae 0e01 	sub.w	lr, lr, r1
 8024be0:	4573      	cmp	r3, lr
 8024be2:	dd04      	ble.n	8024bee <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x202>
 8024be4:	eba9 030c 	sub.w	r3, r9, ip
 8024be8:	b21b      	sxth	r3, r3
 8024bea:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024bee:	2f00      	cmp	r7, #0
 8024bf0:	f340 80b1 	ble.w	8024d56 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024bf4:	2b00      	cmp	r3, #0
 8024bf6:	f340 80ae 	ble.w	8024d56 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024bfa:	f04f 0e00 	mov.w	lr, #0
 8024bfe:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8024c02:	9b05      	ldr	r3, [sp, #20]
 8024c04:	8868      	ldrh	r0, [r5, #2]
 8024c06:	8829      	ldrh	r1, [r5, #0]
 8024c08:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8024c0c:	9b06      	ldr	r3, [sp, #24]
 8024c0e:	1a52      	subs	r2, r2, r1
 8024c10:	ebac 0c00 	sub.w	ip, ip, r0
 8024c14:	a910      	add	r1, sp, #64	@ 0x40
 8024c16:	a80e      	add	r0, sp, #56	@ 0x38
 8024c18:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8024c1c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024c20:	f8ad c03a 	strh.w	ip, [sp, #58]	@ 0x3a
 8024c24:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 8024c28:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8024c2c:	f7e8 f890 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024c30:	a80c      	add	r0, sp, #48	@ 0x30
 8024c32:	f7e8 f865 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c36:	a810      	add	r0, sp, #64	@ 0x40
 8024c38:	f7e8 f862 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c3c:	4b79      	ldr	r3, [pc, #484]	@ (8024e24 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024c3e:	681b      	ldr	r3, [r3, #0]
 8024c40:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024c44:	2a00      	cmp	r2, #0
 8024c46:	f040 80a4 	bne.w	8024d92 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a6>
 8024c4a:	6898      	ldr	r0, [r3, #8]
 8024c4c:	6803      	ldr	r3, [r0, #0]
 8024c4e:	4a76      	ldr	r2, [pc, #472]	@ (8024e28 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x43c>)
 8024c50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024c52:	4293      	cmp	r3, r2
 8024c54:	f040 80b0 	bne.w	8024db8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3cc>
 8024c58:	7b00      	ldrb	r0, [r0, #12]
 8024c5a:	2801      	cmp	r0, #1
 8024c5c:	f000 80a5 	beq.w	8024daa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3be>
 8024c60:	f0c0 809e 	bcc.w	8024da0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b4>
 8024c64:	2802      	cmp	r0, #2
 8024c66:	f040 80d2 	bne.w	8024e0e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x422>
 8024c6a:	f04f 0810 	mov.w	r8, #16
 8024c6e:	f04f 0a04 	mov.w	sl, #4
 8024c72:	6823      	ldr	r3, [r4, #0]
 8024c74:	4a6d      	ldr	r2, [pc, #436]	@ (8024e2c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x440>)
 8024c76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024c78:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 8024c7c:	4293      	cmp	r3, r2
 8024c7e:	fb0a f707 	mul.w	r7, sl, r7
 8024c82:	f040 809b 	bne.w	8024dbc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d0>
 8024c86:	4b6a      	ldr	r3, [pc, #424]	@ (8024e30 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x444>)
 8024c88:	881b      	ldrh	r3, [r3, #0]
 8024c8a:	2b00      	cmp	r3, #0
 8024c8c:	f000 80b8 	beq.w	8024e00 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x414>
 8024c90:	7b22      	ldrb	r2, [r4, #12]
 8024c92:	2a02      	cmp	r2, #2
 8024c94:	f000 808e 	beq.w	8024db4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3c8>
 8024c98:	2a01      	cmp	r2, #1
 8024c9a:	bf14      	ite	ne
 8024c9c:	2402      	movne	r4, #2
 8024c9e:	2403      	moveq	r4, #3
 8024ca0:	fb13 f404 	smulbb	r4, r3, r4
 8024ca4:	b2a4      	uxth	r4, r4
 8024ca6:	4a5f      	ldr	r2, [pc, #380]	@ (8024e24 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024ca8:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8024cac:	f9bd 903a 	ldrsh.w	r9, [sp, #58]	@ 0x3a
 8024cb0:	6810      	ldr	r0, [r2, #0]
 8024cb2:	fb07 3909 	mla	r9, r7, r9, r3
 8024cb6:	6803      	ldr	r3, [r0, #0]
 8024cb8:	4e5e      	ldr	r6, [pc, #376]	@ (8024e34 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x448>)
 8024cba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024cbc:	4798      	blx	r3
 8024cbe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8024cc2:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 8024cc6:	fb04 f303 	mul.w	r3, r4, r3
 8024cca:	fb0a 3505 	mla	r5, sl, r5, r3
 8024cce:	4405      	add	r5, r0
 8024cd0:	6830      	ldr	r0, [r6, #0]
 8024cd2:	44d9      	add	r9, fp
 8024cd4:	2800      	cmp	r0, #0
 8024cd6:	d075      	beq.n	8024dc4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024cd8:	f7fb ff5e 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024cdc:	9700      	str	r7, [sp, #0]
 8024cde:	2700      	movs	r7, #0
 8024ce0:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 8024ce4:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8024ce8:	4648      	mov	r0, r9
 8024cea:	4643      	mov	r3, r8
 8024cec:	f7ec f946 	bl	8010f7c <nema_bind_dst_tex>
 8024cf0:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8024cf4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8024cf8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024cfc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024d00:	f7eb ffd2 	bl	8010ca8 <nema_set_clip>
 8024d04:	f04f 33ff 	mov.w	r3, #4294967295
 8024d08:	2201      	movs	r2, #1
 8024d0a:	2100      	movs	r1, #0
 8024d0c:	f240 5004 	movw	r0, #1284	@ 0x504
 8024d10:	f7f9 f966 	bl	801dfe0 <nema_set_blend>
 8024d14:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 8024d18:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024d1c:	4643      	mov	r3, r8
 8024d1e:	4628      	mov	r0, r5
 8024d20:	9400      	str	r4, [sp, #0]
 8024d22:	9701      	str	r7, [sp, #4]
 8024d24:	f7ec f8a6 	bl	8010e74 <nema_bind_src_tex>
 8024d28:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024d2c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024d30:	f7ec fafa 	bl	8011328 <nema_blit>
 8024d34:	6830      	ldr	r0, [r6, #0]
 8024d36:	2800      	cmp	r0, #0
 8024d38:	d044      	beq.n	8024dc4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d3a:	f7fb ff4d 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024d3e:	6830      	ldr	r0, [r6, #0]
 8024d40:	2800      	cmp	r0, #0
 8024d42:	d03f      	beq.n	8024dc4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d44:	6803      	ldr	r3, [r0, #0]
 8024d46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024d48:	4798      	blx	r3
 8024d4a:	6830      	ldr	r0, [r6, #0]
 8024d4c:	2800      	cmp	r0, #0
 8024d4e:	d039      	beq.n	8024dc4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d50:	6803      	ldr	r3, [r0, #0]
 8024d52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024d54:	4798      	blx	r3
 8024d56:	4658      	mov	r0, fp
 8024d58:	b013      	add	sp, #76	@ 0x4c
 8024d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d5e:	2000      	movs	r0, #0
 8024d60:	4463      	add	r3, ip
 8024d62:	b21b      	sxth	r3, r3
 8024d64:	4684      	mov	ip, r0
 8024d66:	4601      	mov	r1, r0
 8024d68:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024d6c:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8024d70:	e734      	b.n	8024bdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f0>
 8024d72:	9b05      	ldr	r3, [sp, #20]
 8024d74:	9002      	str	r0, [sp, #8]
 8024d76:	e9cd b300 	strd	fp, r3, [sp]
 8024d7a:	a810      	add	r0, sp, #64	@ 0x40
 8024d7c:	462b      	mov	r3, r5
 8024d7e:	463a      	mov	r2, r7
 8024d80:	4621      	mov	r1, r4
 8024d82:	47c0      	blx	r8
 8024d84:	4658      	mov	r0, fp
 8024d86:	b013      	add	sp, #76	@ 0x4c
 8024d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d8c:	4620      	mov	r0, r4
 8024d8e:	4798      	blx	r3
 8024d90:	e648      	b.n	8024a24 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x38>
 8024d92:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024d94:	2800      	cmp	r0, #0
 8024d96:	f47f af59 	bne.w	8024c4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8024d9a:	e756      	b.n	8024c4a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>
 8024d9c:	4639      	mov	r1, r7
 8024d9e:	e70f      	b.n	8024bc0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024da0:	f04f 0804 	mov.w	r8, #4
 8024da4:	f04f 0a02 	mov.w	sl, #2
 8024da8:	e763      	b.n	8024c72 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024daa:	f04f 0839 	mov.w	r8, #57	@ 0x39
 8024dae:	f04f 0a03 	mov.w	sl, #3
 8024db2:	e75e      	b.n	8024c72 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024db4:	2404      	movs	r4, #4
 8024db6:	e773      	b.n	8024ca0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2b4>
 8024db8:	4798      	blx	r3
 8024dba:	e74e      	b.n	8024c5a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26e>
 8024dbc:	4620      	mov	r0, r4
 8024dbe:	4798      	blx	r3
 8024dc0:	4604      	mov	r4, r0
 8024dc2:	e770      	b.n	8024ca6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2ba>
 8024dc4:	4b1c      	ldr	r3, [pc, #112]	@ (8024e38 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x44c>)
 8024dc6:	4a1d      	ldr	r2, [pc, #116]	@ (8024e3c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x450>)
 8024dc8:	217c      	movs	r1, #124	@ 0x7c
 8024dca:	481d      	ldr	r0, [pc, #116]	@ (8024e40 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x454>)
 8024dcc:	f00d fb74 	bl	80324b8 <__assert_func>
 8024dd0:	4b1c      	ldr	r3, [pc, #112]	@ (8024e44 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x458>)
 8024dd2:	4a1d      	ldr	r2, [pc, #116]	@ (8024e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024dd4:	21f1      	movs	r1, #241	@ 0xf1
 8024dd6:	481d      	ldr	r0, [pc, #116]	@ (8024e4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024dd8:	f00d fb6e 	bl	80324b8 <__assert_func>
 8024ddc:	4b1c      	ldr	r3, [pc, #112]	@ (8024e50 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x464>)
 8024dde:	4a1a      	ldr	r2, [pc, #104]	@ (8024e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024de0:	21ef      	movs	r1, #239	@ 0xef
 8024de2:	481a      	ldr	r0, [pc, #104]	@ (8024e4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024de4:	f00d fb68 	bl	80324b8 <__assert_func>
 8024de8:	4b1a      	ldr	r3, [pc, #104]	@ (8024e54 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024dea:	4a17      	ldr	r2, [pc, #92]	@ (8024e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024dec:	21ed      	movs	r1, #237	@ 0xed
 8024dee:	4817      	ldr	r0, [pc, #92]	@ (8024e4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024df0:	f00d fb62 	bl	80324b8 <__assert_func>
 8024df4:	4b17      	ldr	r3, [pc, #92]	@ (8024e54 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024df6:	4a18      	ldr	r2, [pc, #96]	@ (8024e58 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024df8:	21f8      	movs	r1, #248	@ 0xf8
 8024dfa:	4814      	ldr	r0, [pc, #80]	@ (8024e4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024dfc:	f00d fb5c 	bl	80324b8 <__assert_func>
 8024e00:	4b16      	ldr	r3, [pc, #88]	@ (8024e5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x470>)
 8024e02:	4a17      	ldr	r2, [pc, #92]	@ (8024e60 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x474>)
 8024e04:	f240 110f 	movw	r1, #271	@ 0x10f
 8024e08:	4816      	ldr	r0, [pc, #88]	@ (8024e64 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x478>)
 8024e0a:	f00d fb55 	bl	80324b8 <__assert_func>
 8024e0e:	4b16      	ldr	r3, [pc, #88]	@ (8024e68 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x47c>)
 8024e10:	4a11      	ldr	r2, [pc, #68]	@ (8024e58 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024e12:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024e16:	480d      	ldr	r0, [pc, #52]	@ (8024e4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e18:	f00d fb4e 	bl	80324b8 <__assert_func>
 8024e1c:	20082eb8 	.word	0x20082eb8
 8024e20:	20082eba 	.word	0x20082eba
 8024e24:	20082ec4 	.word	0x20082ec4
 8024e28:	08020c7d 	.word	0x08020c7d
 8024e2c:	0802285d 	.word	0x0802285d
 8024e30:	20082ebe 	.word	0x20082ebe
 8024e34:	20083364 	.word	0x20083364
 8024e38:	080361d4 	.word	0x080361d4
 8024e3c:	08036a40 	.word	0x08036a40
 8024e40:	080361fc 	.word	0x080361fc
 8024e44:	0803662c 	.word	0x0803662c
 8024e48:	08037bac 	.word	0x08037bac
 8024e4c:	08036278 	.word	0x08036278
 8024e50:	080365d4 	.word	0x080365d4
 8024e54:	0803647c 	.word	0x0803647c
 8024e58:	08037b18 	.word	0x08037b18
 8024e5c:	080367b0 	.word	0x080367b0
 8024e60:	08037f74 	.word	0x08037f74
 8024e64:	080367f4 	.word	0x080367f4
 8024e68:	08036580 	.word	0x08036580

08024e6c <_ZN8touchgfx8LCDGPU2DC1Ev>:
 8024e6c:	b410      	push	{r4}
 8024e6e:	240d      	movs	r4, #13
 8024e70:	2200      	movs	r2, #0
 8024e72:	4904      	ldr	r1, [pc, #16]	@ (8024e84 <_ZN8touchgfx8LCDGPU2DC1Ev+0x18>)
 8024e74:	7304      	strb	r4, [r0, #12]
 8024e76:	e9c0 1200 	strd	r1, r2, [r0]
 8024e7a:	6082      	str	r2, [r0, #8]
 8024e7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024e80:	4770      	bx	lr
 8024e82:	bf00      	nop
 8024e84:	080369e8 	.word	0x080369e8

08024e88 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8024e88:	2902      	cmp	r1, #2
 8024e8a:	d906      	bls.n	8024e9a <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x12>
 8024e8c:	b508      	push	{r3, lr}
 8024e8e:	4a04      	ldr	r2, [pc, #16]	@ (8024ea0 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x18>)
 8024e90:	4b04      	ldr	r3, [pc, #16]	@ (8024ea4 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x1c>)
 8024e92:	212b      	movs	r1, #43	@ 0x2b
 8024e94:	4804      	ldr	r0, [pc, #16]	@ (8024ea8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x20>)
 8024e96:	f00d fb0f 	bl	80324b8 <__assert_func>
 8024e9a:	7301      	strb	r1, [r0, #12]
 8024e9c:	4770      	bx	lr
 8024e9e:	bf00      	nop
 8024ea0:	08036d58 	.word	0x08036d58
 8024ea4:	0803610c 	.word	0x0803610c
 8024ea8:	08036278 	.word	0x08036278

08024eac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8024eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024eb0:	b093      	sub	sp, #76	@ 0x4c
 8024eb2:	4691      	mov	r9, r2
 8024eb4:	468a      	mov	sl, r1
 8024eb6:	8812      	ldrh	r2, [r2, #0]
 8024eb8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8024ebc:	461c      	mov	r4, r3
 8024ebe:	910a      	str	r1, [sp, #40]	@ 0x28
 8024ec0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024ec2:	2a00      	cmp	r2, #0
 8024ec4:	f040 8109 	bne.w	80250da <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 8024ec8:	6820      	ldr	r0, [r4, #0]
 8024eca:	6861      	ldr	r1, [r4, #4]
 8024ecc:	aa0e      	add	r2, sp, #56	@ 0x38
 8024ece:	c203      	stmia	r2!, {r0, r1}
 8024ed0:	6818      	ldr	r0, [r3, #0]
 8024ed2:	6859      	ldr	r1, [r3, #4]
 8024ed4:	aa10      	add	r2, sp, #64	@ 0x40
 8024ed6:	c203      	stmia	r2!, {r0, r1}
 8024ed8:	a80e      	add	r0, sp, #56	@ 0x38
 8024eda:	f7e7 ff11 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024ede:	4621      	mov	r1, r4
 8024ee0:	a810      	add	r0, sp, #64	@ 0x40
 8024ee2:	f7e7 ff35 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024ee6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8024eea:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8024eee:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8024ef2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8024ef6:	487c      	ldr	r0, [pc, #496]	@ (80250e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8024ef8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8024efc:	4422      	add	r2, r4
 8024efe:	442b      	add	r3, r5
 8024f00:	6800      	ldr	r0, [r0, #0]
 8024f02:	fb11 4105 	smlabb	r1, r1, r5, r4
 8024f06:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8024f0a:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8024f0e:	6802      	ldr	r2, [r0, #0]
 8024f10:	4d76      	ldr	r5, [pc, #472]	@ (80250ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8024f12:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8024f16:	448a      	add	sl, r1
 8024f18:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8024f1c:	42ab      	cmp	r3, r5
 8024f1e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024f20:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 8024f24:	f040 80a6 	bne.w	8025074 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 8024f28:	6841      	ldr	r1, [r0, #4]
 8024f2a:	4d71      	ldr	r5, [pc, #452]	@ (80250f0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8024f2c:	680b      	ldr	r3, [r1, #0]
 8024f2e:	699b      	ldr	r3, [r3, #24]
 8024f30:	42ab      	cmp	r3, r5
 8024f32:	f040 80c4 	bne.w	80250be <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8024f36:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8024f38:	4798      	blx	r3
 8024f3a:	4b6e      	ldr	r3, [pc, #440]	@ (80250f4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8024f3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8024f40:	881b      	ldrh	r3, [r3, #0]
 8024f42:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8024f46:	fb03 f404 	mul.w	r4, r3, r4
 8024f4a:	fb03 1202 	mla	r2, r3, r2, r1
 8024f4e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024f52:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8024f56:	4290      	cmp	r0, r2
 8024f58:	920c      	str	r2, [sp, #48]	@ 0x30
 8024f5a:	f080 8083 	bcs.w	8025064 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8024f5e:	f04f 0b04 	mov.w	fp, #4
 8024f62:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024f64:	0052      	lsls	r2, r2, #1
 8024f66:	920d      	str	r2, [sp, #52]	@ 0x34
 8024f68:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024f6a:	eb00 0802 	add.w	r8, r0, r2
 8024f6e:	4580      	cmp	r8, r0
 8024f70:	d96d      	bls.n	802504e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8024f72:	4684      	mov	ip, r0
 8024f74:	f10a 3eff 	add.w	lr, sl, #4294967295
 8024f78:	e03e      	b.n	8024ff8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8024f7a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024f7c:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8024f80:	fb02 f303 	mul.w	r3, r2, r3
 8024f84:	1c59      	adds	r1, r3, #1
 8024f86:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8024f8a:	121b      	asrs	r3, r3, #8
 8024f8c:	43da      	mvns	r2, r3
 8024f8e:	b299      	uxth	r1, r3
 8024f90:	b2f6      	uxtb	r6, r6
 8024f92:	b2eb      	uxtb	r3, r5
 8024f94:	fb17 f701 	smulbb	r7, r7, r1
 8024f98:	f8bc 5000 	ldrh.w	r5, [ip]
 8024f9c:	fb13 f301 	smulbb	r3, r3, r1
 8024fa0:	fb16 f601 	smulbb	r6, r6, r1
 8024fa4:	122c      	asrs	r4, r5, #8
 8024fa6:	10e9      	asrs	r1, r5, #3
 8024fa8:	00ed      	lsls	r5, r5, #3
 8024faa:	b2d2      	uxtb	r2, r2
 8024fac:	b2ed      	uxtb	r5, r5
 8024fae:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024fb2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024fb6:	fb04 7402 	mla	r4, r4, r2, r7
 8024fba:	fb01 6102 	mla	r1, r1, r2, r6
 8024fbe:	fb05 3202 	mla	r2, r5, r2, r3
 8024fc2:	b2a4      	uxth	r4, r4
 8024fc4:	b292      	uxth	r2, r2
 8024fc6:	b289      	uxth	r1, r1
 8024fc8:	1c55      	adds	r5, r2, #1
 8024fca:	1c67      	adds	r7, r4, #1
 8024fcc:	1c4b      	adds	r3, r1, #1
 8024fce:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 8024fd2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8024fd6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024fda:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 8024fde:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8024fe2:	095b      	lsrs	r3, r3, #5
 8024fe4:	432a      	orrs	r2, r5
 8024fe6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024fea:	431a      	orrs	r2, r3
 8024fec:	f8ac 2000 	strh.w	r2, [ip]
 8024ff0:	f10c 0c02 	add.w	ip, ip, #2
 8024ff4:	45e0      	cmp	r8, ip
 8024ff6:	d91f      	bls.n	8025038 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8024ff8:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8024ffc:	fb1b b303 	smlabb	r3, fp, r3, fp
 8025000:	f859 5003 	ldr.w	r5, [r9, r3]
 8025004:	0e2b      	lsrs	r3, r5, #24
 8025006:	d0f3      	beq.n	8024ff0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 8025008:	2bff      	cmp	r3, #255	@ 0xff
 802500a:	ea4f 2615 	mov.w	r6, r5, lsr #8
 802500e:	d1b4      	bne.n	8024f7a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8025010:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025012:	2aff      	cmp	r2, #255	@ 0xff
 8025014:	d1b1      	bne.n	8024f7a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8025016:	096b      	lsrs	r3, r5, #5
 8025018:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 802501c:	f026 0607 	bic.w	r6, r6, #7
 8025020:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025024:	431e      	orrs	r6, r3
 8025026:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802502a:	4335      	orrs	r5, r6
 802502c:	f8ac 5000 	strh.w	r5, [ip]
 8025030:	f10c 0c02 	add.w	ip, ip, #2
 8025034:	45e0      	cmp	r8, ip
 8025036:	d8df      	bhi.n	8024ff8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8025038:	43c3      	mvns	r3, r0
 802503a:	4498      	add	r8, r3
 802503c:	4b2d      	ldr	r3, [pc, #180]	@ (80250f4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 802503e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025042:	f108 0801 	add.w	r8, r8, #1
 8025046:	881b      	ldrh	r3, [r3, #0]
 8025048:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802504c:	44c2      	add	sl, r8
 802504e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025050:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8025054:	1b19      	subs	r1, r3, r4
 8025056:	1b12      	subs	r2, r2, r4
 8025058:	4492      	add	sl, r2
 802505a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802505c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8025060:	4282      	cmp	r2, r0
 8025062:	d881      	bhi.n	8024f68 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8025064:	4b20      	ldr	r3, [pc, #128]	@ (80250e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025066:	6818      	ldr	r0, [r3, #0]
 8025068:	6803      	ldr	r3, [r0, #0]
 802506a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802506c:	4798      	blx	r3
 802506e:	b013      	add	sp, #76	@ 0x4c
 8025070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025074:	4798      	blx	r3
 8025076:	4603      	mov	r3, r0
 8025078:	2b01      	cmp	r3, #1
 802507a:	d124      	bne.n	80250c6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 802507c:	4a1e      	ldr	r2, [pc, #120]	@ (80250f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 802507e:	6810      	ldr	r0, [r2, #0]
 8025080:	b328      	cbz	r0, 80250ce <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8025082:	2700      	movs	r7, #0
 8025084:	260b      	movs	r6, #11
 8025086:	4a1b      	ldr	r2, [pc, #108]	@ (80250f4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8025088:	b2a1      	uxth	r1, r4
 802508a:	8814      	ldrh	r4, [r2, #0]
 802508c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8025090:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8025094:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8025098:	9406      	str	r4, [sp, #24]
 802509a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802509c:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 80250a0:	9305      	str	r3, [sp, #20]
 80250a2:	9204      	str	r2, [sp, #16]
 80250a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80250a8:	464a      	mov	r2, r9
 80250aa:	4651      	mov	r1, sl
 80250ac:	e9cd 6707 	strd	r6, r7, [sp, #28]
 80250b0:	9503      	str	r5, [sp, #12]
 80250b2:	9400      	str	r4, [sp, #0]
 80250b4:	f7fb fd98 	bl	8020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80250b8:	b013      	add	sp, #76	@ 0x4c
 80250ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250be:	4608      	mov	r0, r1
 80250c0:	4798      	blx	r3
 80250c2:	4603      	mov	r3, r0
 80250c4:	e7d8      	b.n	8025078 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 80250c6:	4b08      	ldr	r3, [pc, #32]	@ (80250e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80250c8:	6818      	ldr	r0, [r3, #0]
 80250ca:	6802      	ldr	r2, [r0, #0]
 80250cc:	e733      	b.n	8024f36 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 80250ce:	4b0b      	ldr	r3, [pc, #44]	@ (80250fc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 80250d0:	4a0b      	ldr	r2, [pc, #44]	@ (8025100 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 80250d2:	217c      	movs	r1, #124	@ 0x7c
 80250d4:	480b      	ldr	r0, [pc, #44]	@ (8025104 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80250d6:	f00d f9ef 	bl	80324b8 <__assert_func>
 80250da:	4b0b      	ldr	r3, [pc, #44]	@ (8025108 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 80250dc:	4a0b      	ldr	r2, [pc, #44]	@ (802510c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 80250de:	f240 4182 	movw	r1, #1154	@ 0x482
 80250e2:	480b      	ldr	r0, [pc, #44]	@ (8025110 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80250e4:	f00d f9e8 	bl	80324b8 <__assert_func>
 80250e8:	20082ec4 	.word	0x20082ec4
 80250ec:	0800121d 	.word	0x0800121d
 80250f0:	0800baa5 	.word	0x0800baa5
 80250f4:	20082ebe 	.word	0x20082ebe
 80250f8:	20083364 	.word	0x20083364
 80250fc:	080361d4 	.word	0x080361d4
 8025100:	08036a40 	.word	0x08036a40
 8025104:	080361fc 	.word	0x080361fc
 8025108:	080362ec 	.word	0x080362ec
 802510c:	08037070 	.word	0x08037070
 8025110:	08036278 	.word	0x08036278

08025114 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 8025114:	b4f0      	push	{r4, r5, r6, r7}
 8025116:	7b05      	ldrb	r5, [r0, #12]
 8025118:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802511c:	3d01      	subs	r5, #1
 802511e:	2eff      	cmp	r6, #255	@ 0xff
 8025120:	fa5f fc81 	uxtb.w	ip, r1
 8025124:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025128:	b2ed      	uxtb	r5, r5
 802512a:	ea4f 4111 	mov.w	r1, r1, lsr #16
 802512e:	d041      	beq.n	80251b4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 8025130:	fb16 f603 	smulbb	r6, r6, r3
 8025134:	b2b6      	uxth	r6, r6
 8025136:	1c74      	adds	r4, r6, #1
 8025138:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 802513c:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8025140:	43e6      	mvns	r6, r4
 8025142:	b2a4      	uxth	r4, r4
 8025144:	fb1c fc04 	smulbb	ip, ip, r4
 8025148:	b2ff      	uxtb	r7, r7
 802514a:	fb17 f704 	smulbb	r7, r7, r4
 802514e:	00d0      	lsls	r0, r2, #3
 8025150:	b2c0      	uxtb	r0, r0
 8025152:	10d3      	asrs	r3, r2, #3
 8025154:	b2f6      	uxtb	r6, r6
 8025156:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802515a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802515e:	fb00 c006 	mla	r0, r0, r6, ip
 8025162:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8025166:	fb03 7306 	mla	r3, r3, r6, r7
 802516a:	b280      	uxth	r0, r0
 802516c:	b29b      	uxth	r3, r3
 802516e:	1c47      	adds	r7, r0, #1
 8025170:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8025174:	f103 0c01 	add.w	ip, r3, #1
 8025178:	2d01      	cmp	r5, #1
 802517a:	f3c0 2707 	ubfx	r7, r0, #8, #8
 802517e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025182:	d926      	bls.n	80251d2 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 8025184:	b2c9      	uxtb	r1, r1
 8025186:	fb11 f404 	smulbb	r4, r1, r4
 802518a:	1212      	asrs	r2, r2, #8
 802518c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025190:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025194:	fb02 4206 	mla	r2, r2, r6, r4
 8025198:	b292      	uxth	r2, r2
 802519a:	1c50      	adds	r0, r2, #1
 802519c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80251a0:	095b      	lsrs	r3, r3, #5
 80251a2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80251a6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80251aa:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 80251ae:	4318      	orrs	r0, r3
 80251b0:	bcf0      	pop	{r4, r5, r6, r7}
 80251b2:	4770      	bx	lr
 80251b4:	2bff      	cmp	r3, #255	@ 0xff
 80251b6:	d1bb      	bne.n	8025130 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 80251b8:	2d01      	cmp	r5, #1
 80251ba:	d910      	bls.n	80251de <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 80251bc:	4a0a      	ldr	r2, [pc, #40]	@ (80251e8 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 80251be:	00f8      	lsls	r0, r7, #3
 80251c0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80251c4:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 80251c8:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 80251cc:	4338      	orrs	r0, r7
 80251ce:	b280      	uxth	r0, r0
 80251d0:	e7ee      	b.n	80251b0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80251d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80251d6:	ea43 0007 	orr.w	r0, r3, r7
 80251da:	bcf0      	pop	{r4, r5, r6, r7}
 80251dc:	4770      	bx	lr
 80251de:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 80251e2:	b280      	uxth	r0, r0
 80251e4:	e7e4      	b.n	80251b0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80251e6:	bf00      	nop
 80251e8:	fffff800 	.word	0xfffff800

080251ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80251ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80251f0:	b093      	sub	sp, #76	@ 0x4c
 80251f2:	4614      	mov	r4, r2
 80251f4:	460d      	mov	r5, r1
 80251f6:	7812      	ldrb	r2, [r2, #0]
 80251f8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 80251fc:	461e      	mov	r6, r3
 80251fe:	9002      	str	r0, [sp, #8]
 8025200:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025202:	9109      	str	r1, [sp, #36]	@ 0x24
 8025204:	2a00      	cmp	r2, #0
 8025206:	f040 81c9 	bne.w	802559c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 802520a:	6830      	ldr	r0, [r6, #0]
 802520c:	6871      	ldr	r1, [r6, #4]
 802520e:	aa0e      	add	r2, sp, #56	@ 0x38
 8025210:	c203      	stmia	r2!, {r0, r1}
 8025212:	6818      	ldr	r0, [r3, #0]
 8025214:	6859      	ldr	r1, [r3, #4]
 8025216:	aa10      	add	r2, sp, #64	@ 0x40
 8025218:	c203      	stmia	r2!, {r0, r1}
 802521a:	a80e      	add	r0, sp, #56	@ 0x38
 802521c:	f7e7 fd70 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025220:	4631      	mov	r1, r6
 8025222:	a810      	add	r0, sp, #64	@ 0x40
 8025224:	f7e7 fd94 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025228:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 802522c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025230:	f003 0201 	and.w	r2, r3, #1
 8025234:	4617      	mov	r7, r2
 8025236:	920a      	str	r2, [sp, #40]	@ 0x28
 8025238:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802523c:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 8025240:	443b      	add	r3, r7
 8025242:	fb02 1303 	mla	r3, r2, r3, r1
 8025246:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 802524a:	4402      	add	r2, r0
 802524c:	48d0      	ldr	r0, [pc, #832]	@ (8025590 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802524e:	440e      	add	r6, r1
 8025250:	6800      	ldr	r0, [r0, #0]
 8025252:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8025256:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 802525a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802525e:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8025262:	6802      	ldr	r2, [r0, #0]
 8025264:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 8025268:	9304      	str	r3, [sp, #16]
 802526a:	f001 0301 	and.w	r3, r1, #1
 802526e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8025270:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025272:	9608      	str	r6, [sp, #32]
 8025274:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025278:	4790      	blx	r2
 802527a:	4ac6      	ldr	r2, [pc, #792]	@ (8025594 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 802527c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8025280:	8812      	ldrh	r2, [r2, #0]
 8025282:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025286:	fb05 f502 	mul.w	r5, r5, r2
 802528a:	fb02 1303 	mla	r3, r2, r3, r1
 802528e:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 8025292:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 8025296:	4598      	cmp	r8, r3
 8025298:	930c      	str	r3, [sp, #48]	@ 0x30
 802529a:	f104 0404 	add.w	r4, r4, #4
 802529e:	f080 8144 	bcs.w	802552a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 80252a2:	1e73      	subs	r3, r6, #1
 80252a4:	930d      	str	r3, [sp, #52]	@ 0x34
 80252a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80252a8:	2b00      	cmp	r3, #0
 80252aa:	f000 8164 	beq.w	8025576 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38a>
 80252ae:	9a04      	ldr	r2, [sp, #16]
 80252b0:	7813      	ldrb	r3, [r2, #0]
 80252b2:	3201      	adds	r2, #1
 80252b4:	f003 030f 	and.w	r3, r3, #15
 80252b8:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80252bc:	9203      	str	r2, [sp, #12]
 80252be:	0e0b      	lsrs	r3, r1, #24
 80252c0:	d008      	beq.n	80252d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 80252c2:	f8b8 2000 	ldrh.w	r2, [r8]
 80252c6:	9802      	ldr	r0, [sp, #8]
 80252c8:	9300      	str	r3, [sp, #0]
 80252ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80252cc:	f7ff ff22 	bl	8025114 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 80252d0:	f8a8 0000 	strh.w	r0, [r8]
 80252d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80252d6:	f108 0802 	add.w	r8, r8, #2
 80252da:	2b01      	cmp	r3, #1
 80252dc:	f340 80fd 	ble.w	80254da <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ee>
 80252e0:	3b02      	subs	r3, #2
 80252e2:	9a03      	ldr	r2, [sp, #12]
 80252e4:	9306      	str	r3, [sp, #24]
 80252e6:	085b      	lsrs	r3, r3, #1
 80252e8:	9305      	str	r3, [sp, #20]
 80252ea:	eb02 0e03 	add.w	lr, r2, r3
 80252ee:	f108 0704 	add.w	r7, r8, #4
 80252f2:	f102 3cff 	add.w	ip, r2, #4294967295
 80252f6:	f8cd 801c 	str.w	r8, [sp, #28]
 80252fa:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80252fe:	e0b2      	b.n	8025466 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27a>
 8025300:	fb05 f50a 	mul.w	r5, r5, sl
 8025304:	1c6a      	adds	r2, r5, #1
 8025306:	eb02 2525 	add.w	r5, r2, r5, asr #8
 802530a:	122d      	asrs	r5, r5, #8
 802530c:	43ee      	mvns	r6, r5
 802530e:	b2ad      	uxth	r5, r5
 8025310:	fa5f fb8b 	uxtb.w	fp, fp
 8025314:	fb13 f305 	smulbb	r3, r3, r5
 8025318:	fb1b fb05 	smulbb	fp, fp, r5
 802531c:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 8025320:	b2c0      	uxtb	r0, r0
 8025322:	ea4f 02e8 	mov.w	r2, r8, asr #3
 8025326:	b2f6      	uxtb	r6, r6
 8025328:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802532c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025330:	fb00 3306 	mla	r3, r0, r6, r3
 8025334:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025338:	fb02 bb06 	mla	fp, r2, r6, fp
 802533c:	b29b      	uxth	r3, r3
 802533e:	fa1f fb8b 	uxth.w	fp, fp
 8025342:	1c58      	adds	r0, r3, #1
 8025344:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025348:	f10b 0201 	add.w	r2, fp, #1
 802534c:	f1b9 0f01 	cmp.w	r9, #1
 8025350:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025354:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025358:	f240 8108 	bls.w	802556c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 802535c:	b2c9      	uxtb	r1, r1
 802535e:	fb11 f505 	smulbb	r5, r1, r5
 8025362:	ea4f 2828 	mov.w	r8, r8, asr #8
 8025366:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 802536a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 802536e:	fb08 5806 	mla	r8, r8, r6, r5
 8025372:	fa1f f888 	uxth.w	r8, r8
 8025376:	f108 0101 	add.w	r1, r8, #1
 802537a:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 802537e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8025382:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025386:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802538a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 802538e:	ea43 030b 	orr.w	r3, r3, fp
 8025392:	f827 3c04 	strh.w	r3, [r7, #-4]
 8025396:	f89c 2000 	ldrb.w	r2, [ip]
 802539a:	f002 020f 	and.w	r2, r2, #15
 802539e:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 80253a2:	0e1d      	lsrs	r5, r3, #24
 80253a4:	d05b      	beq.n	802545e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x272>
 80253a6:	9a02      	ldr	r2, [sp, #8]
 80253a8:	2dff      	cmp	r5, #255	@ 0xff
 80253aa:	f892 900c 	ldrb.w	r9, [r2, #12]
 80253ae:	ea4f 4113 	mov.w	r1, r3, lsr #16
 80253b2:	f109 39ff 	add.w	r9, r9, #4294967295
 80253b6:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 80253ba:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 80253be:	fa5f f989 	uxtb.w	r9, r9
 80253c2:	b2db      	uxtb	r3, r3
 80253c4:	f000 80b9 	beq.w	802553a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x34e>
 80253c8:	fb05 f50a 	mul.w	r5, r5, sl
 80253cc:	1c6a      	adds	r2, r5, #1
 80253ce:	eb02 2525 	add.w	r5, r2, r5, asr #8
 80253d2:	122d      	asrs	r5, r5, #8
 80253d4:	43ee      	mvns	r6, r5
 80253d6:	b2ad      	uxth	r5, r5
 80253d8:	fa5f fb8b 	uxtb.w	fp, fp
 80253dc:	fb13 f305 	smulbb	r3, r3, r5
 80253e0:	fb1b fb05 	smulbb	fp, fp, r5
 80253e4:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80253e8:	b2c0      	uxtb	r0, r0
 80253ea:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80253ee:	b2f6      	uxtb	r6, r6
 80253f0:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80253f4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80253f8:	fb00 3306 	mla	r3, r0, r6, r3
 80253fc:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025400:	fb02 bb06 	mla	fp, r2, r6, fp
 8025404:	b29b      	uxth	r3, r3
 8025406:	fa1f fb8b 	uxth.w	fp, fp
 802540a:	1c58      	adds	r0, r3, #1
 802540c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025410:	f10b 0201 	add.w	r2, fp, #1
 8025414:	f1b9 0f01 	cmp.w	r9, #1
 8025418:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802541c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025420:	f240 809f 	bls.w	8025562 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8025424:	b2c9      	uxtb	r1, r1
 8025426:	fb11 f505 	smulbb	r5, r1, r5
 802542a:	ea4f 2828 	mov.w	r8, r8, asr #8
 802542e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8025432:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8025436:	fb08 5806 	mla	r8, r8, r6, r5
 802543a:	fa1f f888 	uxth.w	r8, r8
 802543e:	f108 0101 	add.w	r1, r8, #1
 8025442:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025446:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 802544a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802544e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025452:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025456:	ea43 030b 	orr.w	r3, r3, fp
 802545a:	f827 3c02 	strh.w	r3, [r7, #-2]
 802545e:	45e6      	cmp	lr, ip
 8025460:	f107 0704 	add.w	r7, r7, #4
 8025464:	d02b      	beq.n	80254be <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025466:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 802546a:	0913      	lsrs	r3, r2, #4
 802546c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8025470:	0e1d      	lsrs	r5, r3, #24
 8025472:	d092      	beq.n	802539a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ae>
 8025474:	9a02      	ldr	r2, [sp, #8]
 8025476:	2dff      	cmp	r5, #255	@ 0xff
 8025478:	f892 900c 	ldrb.w	r9, [r2, #12]
 802547c:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8025480:	f109 39ff 	add.w	r9, r9, #4294967295
 8025484:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 8025488:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 802548c:	fa5f f989 	uxtb.w	r9, r9
 8025490:	b2db      	uxtb	r3, r3
 8025492:	f47f af35 	bne.w	8025300 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8025496:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802549a:	f47f af31 	bne.w	8025300 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802549e:	f1b9 0f01 	cmp.w	r9, #1
 80254a2:	d970      	bls.n	8025586 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39a>
 80254a4:	4a3c      	ldr	r2, [pc, #240]	@ (8025598 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 80254a6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80254aa:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80254ae:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80254b2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80254b6:	ea43 030b 	orr.w	r3, r3, fp
 80254ba:	b29b      	uxth	r3, r3
 80254bc:	e769      	b.n	8025392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 80254be:	9b05      	ldr	r3, [sp, #20]
 80254c0:	9903      	ldr	r1, [sp, #12]
 80254c2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80254c6:	1c5a      	adds	r2, r3, #1
 80254c8:	4411      	add	r1, r2
 80254ca:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 80254ce:	9a06      	ldr	r2, [sp, #24]
 80254d0:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 80254d4:	9103      	str	r1, [sp, #12]
 80254d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80254da:	2b01      	cmp	r3, #1
 80254dc:	d111      	bne.n	8025502 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x316>
 80254de:	9b03      	ldr	r3, [sp, #12]
 80254e0:	781b      	ldrb	r3, [r3, #0]
 80254e2:	091b      	lsrs	r3, r3, #4
 80254e4:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80254e8:	0e0b      	lsrs	r3, r1, #24
 80254ea:	d008      	beq.n	80254fe <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x312>
 80254ec:	f8b8 2000 	ldrh.w	r2, [r8]
 80254f0:	9802      	ldr	r0, [sp, #8]
 80254f2:	9300      	str	r3, [sp, #0]
 80254f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80254f6:	f7ff fe0d 	bl	8025114 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 80254fa:	f8a8 0000 	strh.w	r0, [r8]
 80254fe:	f108 0802 	add.w	r8, r8, #2
 8025502:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025504:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8025508:	4a22      	ldr	r2, [pc, #136]	@ (8025594 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 802550a:	440b      	add	r3, r1
 802550c:	8812      	ldrh	r2, [r2, #0]
 802550e:	9908      	ldr	r1, [sp, #32]
 8025510:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8025514:	1a52      	subs	r2, r2, r1
 8025516:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 802551a:	9a04      	ldr	r2, [sp, #16]
 802551c:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8025520:	9304      	str	r3, [sp, #16]
 8025522:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025524:	4543      	cmp	r3, r8
 8025526:	f63f aebe 	bhi.w	80252a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xba>
 802552a:	4b19      	ldr	r3, [pc, #100]	@ (8025590 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802552c:	6818      	ldr	r0, [r3, #0]
 802552e:	6803      	ldr	r3, [r0, #0]
 8025530:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025532:	4798      	blx	r3
 8025534:	b013      	add	sp, #76	@ 0x4c
 8025536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802553a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802553e:	f47f af43 	bne.w	80253c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1dc>
 8025542:	f1b9 0f01 	cmp.w	r9, #1
 8025546:	d91a      	bls.n	802557e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8025548:	4a13      	ldr	r2, [pc, #76]	@ (8025598 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 802554a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802554e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025552:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025556:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802555a:	ea43 030b 	orr.w	r3, r3, fp
 802555e:	b29b      	uxth	r3, r3
 8025560:	e77b      	b.n	802545a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8025562:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8025566:	ea4b 0303 	orr.w	r3, fp, r3
 802556a:	e776      	b.n	802545a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 802556c:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8025570:	ea4b 0303 	orr.w	r3, fp, r3
 8025574:	e70d      	b.n	8025392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8025576:	9b04      	ldr	r3, [sp, #16]
 8025578:	9303      	str	r3, [sp, #12]
 802557a:	9b08      	ldr	r3, [sp, #32]
 802557c:	e6ad      	b.n	80252da <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802557e:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8025582:	b29b      	uxth	r3, r3
 8025584:	e769      	b.n	802545a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8025586:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 802558a:	b29b      	uxth	r3, r3
 802558c:	e701      	b.n	8025392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802558e:	bf00      	nop
 8025590:	20082ec4 	.word	0x20082ec4
 8025594:	20082ebe 	.word	0x20082ebe
 8025598:	fffff800 	.word	0xfffff800
 802559c:	4b03      	ldr	r3, [pc, #12]	@ (80255ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c0>)
 802559e:	4a04      	ldr	r2, [pc, #16]	@ (80255b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>)
 80255a0:	f240 41f5 	movw	r1, #1269	@ 0x4f5
 80255a4:	4803      	ldr	r0, [pc, #12]	@ (80255b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c8>)
 80255a6:	f00c ff87 	bl	80324b8 <__assert_func>
 80255aa:	bf00      	nop
 80255ac:	0803636c 	.word	0x0803636c
 80255b0:	0803755c 	.word	0x0803755c
 80255b4:	08036278 	.word	0x08036278

080255b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80255b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255bc:	b08f      	sub	sp, #60	@ 0x3c
 80255be:	9206      	str	r2, [sp, #24]
 80255c0:	461c      	mov	r4, r3
 80255c2:	7812      	ldrb	r2, [r2, #0]
 80255c4:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 80255c8:	e9cd 1000 	strd	r1, r0, [sp]
 80255cc:	9305      	str	r3, [sp, #20]
 80255ce:	2a00      	cmp	r2, #0
 80255d0:	f040 81ad 	bne.w	802592e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 80255d4:	b913      	cbnz	r3, 80255dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24>
 80255d6:	b00f      	add	sp, #60	@ 0x3c
 80255d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255dc:	6820      	ldr	r0, [r4, #0]
 80255de:	6861      	ldr	r1, [r4, #4]
 80255e0:	ab0a      	add	r3, sp, #40	@ 0x28
 80255e2:	c303      	stmia	r3!, {r0, r1}
 80255e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80255e6:	6818      	ldr	r0, [r3, #0]
 80255e8:	6859      	ldr	r1, [r3, #4]
 80255ea:	ab0c      	add	r3, sp, #48	@ 0x30
 80255ec:	c303      	stmia	r3!, {r0, r1}
 80255ee:	a80a      	add	r0, sp, #40	@ 0x28
 80255f0:	f7e7 fb86 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255f4:	4621      	mov	r1, r4
 80255f6:	a80c      	add	r0, sp, #48	@ 0x30
 80255f8:	f7e7 fbaa 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80255fc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025600:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8025604:	dd71      	ble.n	80256ea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x132>
 8025606:	2201      	movs	r2, #1
 8025608:	b299      	uxth	r1, r3
 802560a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 802560e:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8025612:	fb93 f6f2 	sdiv	r6, r3, r2
 8025616:	b2b5      	uxth	r5, r6
 8025618:	fb02 3415 	mls	r4, r2, r5, r3
 802561c:	fb14 0101 	smlabb	r1, r4, r1, r0
 8025620:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8025624:	fa1f fb81 	uxth.w	fp, r1
 8025628:	4414      	add	r4, r2
 802562a:	3c01      	subs	r4, #1
 802562c:	fb94 f4f2 	sdiv	r4, r4, r2
 8025630:	b135      	cbz	r5, 8025640 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 8025632:	9a06      	ldr	r2, [sp, #24]
 8025634:	9900      	ldr	r1, [sp, #0]
 8025636:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 802563a:	ba12      	rev	r2, r2
 802563c:	4411      	add	r1, r2
 802563e:	9100      	str	r1, [sp, #0]
 8025640:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8025644:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8025648:	4402      	add	r2, r0
 802564a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802564e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8025652:	440b      	add	r3, r1
 8025654:	4616      	mov	r6, r2
 8025656:	49b9      	ldr	r1, [pc, #740]	@ (802593c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 8025658:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 802565c:	6808      	ldr	r0, [r1, #0]
 802565e:	9209      	str	r2, [sp, #36]	@ 0x24
 8025660:	6803      	ldr	r3, [r0, #0]
 8025662:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8025666:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025668:	4798      	blx	r3
 802566a:	f1bb 0f00 	cmp.w	fp, #0
 802566e:	bf0c      	ite	eq
 8025670:	4633      	moveq	r3, r6
 8025672:	2300      	movne	r3, #0
 8025674:	49b2      	ldr	r1, [pc, #712]	@ (8025940 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025676:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 802567a:	8809      	ldrh	r1, [r1, #0]
 802567c:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 8025680:	fb01 f505 	mul.w	r5, r1, r5
 8025684:	fb01 6202 	mla	r2, r1, r2, r6
 8025688:	b2a4      	uxth	r4, r4
 802568a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802568e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8025692:	00a4      	lsls	r4, r4, #2
 8025694:	1d21      	adds	r1, r4, #4
 8025696:	4290      	cmp	r0, r2
 8025698:	9202      	str	r2, [sp, #8]
 802569a:	9108      	str	r1, [sp, #32]
 802569c:	fa1f fa83 	uxth.w	sl, r3
 80256a0:	d21b      	bcs.n	80256da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x122>
 80256a2:	2300      	movs	r3, #0
 80256a4:	465e      	mov	r6, fp
 80256a6:	461d      	mov	r5, r3
 80256a8:	9303      	str	r3, [sp, #12]
 80256aa:	b965      	cbnz	r5, 80256c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 80256ac:	9900      	ldr	r1, [sp, #0]
 80256ae:	780b      	ldrb	r3, [r1, #0]
 80256b0:	099d      	lsrs	r5, r3, #6
 80256b2:	1e6a      	subs	r2, r5, #1
 80256b4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80256b8:	2a02      	cmp	r2, #2
 80256ba:	9303      	str	r3, [sp, #12]
 80256bc:	f200 80ce 	bhi.w	802585c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 80256c0:	3101      	adds	r1, #1
 80256c2:	9100      	str	r1, [sp, #0]
 80256c4:	b2ad      	uxth	r5, r5
 80256c6:	b1b6      	cbz	r6, 80256f6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 80256c8:	42b5      	cmp	r5, r6
 80256ca:	f080 80c1 	bcs.w	8025850 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80256ce:	1b75      	subs	r5, r6, r5
 80256d0:	b2ae      	uxth	r6, r5
 80256d2:	2500      	movs	r5, #0
 80256d4:	9b02      	ldr	r3, [sp, #8]
 80256d6:	4283      	cmp	r3, r0
 80256d8:	d8e7      	bhi.n	80256aa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 80256da:	4b98      	ldr	r3, [pc, #608]	@ (802593c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 80256dc:	6818      	ldr	r0, [r3, #0]
 80256de:	6803      	ldr	r3, [r0, #0]
 80256e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80256e2:	4798      	blx	r3
 80256e4:	b00f      	add	sp, #60	@ 0x3c
 80256e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256ea:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80256ee:	b299      	uxth	r1, r3
 80256f0:	fb94 f2f1 	sdiv	r2, r4, r1
 80256f4:	e789      	b.n	802560a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x52>
 80256f6:	2304      	movs	r3, #4
 80256f8:	4619      	mov	r1, r3
 80256fa:	9a08      	ldr	r2, [sp, #32]
 80256fc:	9b03      	ldr	r3, [sp, #12]
 80256fe:	4555      	cmp	r5, sl
 8025700:	fb11 2303 	smlabb	r3, r1, r3, r2
 8025704:	9a06      	ldr	r2, [sp, #24]
 8025706:	58d1      	ldr	r1, [r2, r3]
 8025708:	ea4f 6211 	mov.w	r2, r1, lsr #24
 802570c:	f0c0 8099 	bcc.w	8025842 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 8025710:	eba5 030a 	sub.w	r3, r5, sl
 8025714:	b29b      	uxth	r3, r3
 8025716:	9304      	str	r3, [sp, #16]
 8025718:	4653      	mov	r3, sl
 802571a:	9607      	str	r6, [sp, #28]
 802571c:	2a00      	cmp	r2, #0
 802571e:	f000 808d 	beq.w	802583c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>
 8025722:	2aff      	cmp	r2, #255	@ 0xff
 8025724:	ea4f 4b11 	mov.w	fp, r1, lsr #16
 8025728:	ea4f 2911 	mov.w	r9, r1, lsr #8
 802572c:	fa5f f881 	uxtb.w	r8, r1
 8025730:	d103      	bne.n	802573a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8025732:	9905      	ldr	r1, [sp, #20]
 8025734:	29ff      	cmp	r1, #255	@ 0xff
 8025736:	f000 8096 	beq.w	8025866 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 802573a:	9905      	ldr	r1, [sp, #20]
 802573c:	fa5f fb8b 	uxtb.w	fp, fp
 8025740:	fb01 f202 	mul.w	r2, r1, r2
 8025744:	1c51      	adds	r1, r2, #1
 8025746:	eb01 2222 	add.w	r2, r1, r2, asr #8
 802574a:	1212      	asrs	r2, r2, #8
 802574c:	ea6f 0c02 	mvn.w	ip, r2
 8025750:	fa5f f989 	uxtb.w	r9, r9
 8025754:	fa5f fc8c 	uxtb.w	ip, ip
 8025758:	2b00      	cmp	r3, #0
 802575a:	d04d      	beq.n	80257f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802575c:	b292      	uxth	r2, r2
 802575e:	fb1b fb02 	smulbb	fp, fp, r2
 8025762:	fb19 f902 	smulbb	r9, r9, r2
 8025766:	fb18 f802 	smulbb	r8, r8, r2
 802576a:	f103 3eff 	add.w	lr, r3, #4294967295
 802576e:	fa1f fe8e 	uxth.w	lr, lr
 8025772:	f10e 0e01 	add.w	lr, lr, #1
 8025776:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 802577a:	fa1f fb8b 	uxth.w	fp, fp
 802577e:	fa1f f989 	uxth.w	r9, r9
 8025782:	fa1f f888 	uxth.w	r8, r8
 8025786:	fa1f fc8c 	uxth.w	ip, ip
 802578a:	f830 1b02 	ldrh.w	r1, [r0], #2
 802578e:	9b01      	ldr	r3, [sp, #4]
 8025790:	00ca      	lsls	r2, r1, #3
 8025792:	7b1f      	ldrb	r7, [r3, #12]
 8025794:	b2d2      	uxtb	r2, r2
 8025796:	10cb      	asrs	r3, r1, #3
 8025798:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802579c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80257a0:	fb02 820c 	mla	r2, r2, ip, r8
 80257a4:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 80257a8:	fb03 930c 	mla	r3, r3, ip, r9
 80257ac:	b292      	uxth	r2, r2
 80257ae:	1c54      	adds	r4, r2, #1
 80257b0:	b29b      	uxth	r3, r3
 80257b2:	3f01      	subs	r7, #1
 80257b4:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 80257b8:	2f01      	cmp	r7, #1
 80257ba:	f103 0401 	add.w	r4, r3, #1
 80257be:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80257c2:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80257c6:	d92d      	bls.n	8025824 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 80257c8:	1209      	asrs	r1, r1, #8
 80257ca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80257ce:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80257d2:	fb01 b10c 	mla	r1, r1, ip, fp
 80257d6:	b289      	uxth	r1, r1
 80257d8:	1c4c      	adds	r4, r1, #1
 80257da:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80257de:	095b      	lsrs	r3, r3, #5
 80257e0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80257e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80257e8:	ea41 02d2 	orr.w	r2, r1, r2, lsr #3
 80257ec:	431a      	orrs	r2, r3
 80257ee:	4586      	cmp	lr, r0
 80257f0:	f820 2c02 	strh.w	r2, [r0, #-2]
 80257f4:	d1c9      	bne.n	802578a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 80257f6:	4670      	mov	r0, lr
 80257f8:	4555      	cmp	r5, sl
 80257fa:	d31b      	bcc.n	8025834 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 80257fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80257fe:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 8025802:	4b4f      	ldr	r3, [pc, #316]	@ (8025940 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025804:	fa1f fa82 	uxth.w	sl, r2
 8025808:	eba6 060a 	sub.w	r6, r6, sl
 802580c:	881b      	ldrh	r3, [r3, #0]
 802580e:	b2b6      	uxth	r6, r6
 8025810:	2e00      	cmp	r6, #0
 8025812:	eba3 0302 	sub.w	r3, r3, r2
 8025816:	9d04      	ldr	r5, [sp, #16]
 8025818:	bf18      	it	ne
 802581a:	f04f 0a00 	movne.w	sl, #0
 802581e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025822:	e757      	b.n	80256d4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8025824:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025828:	431a      	orrs	r2, r3
 802582a:	4586      	cmp	lr, r0
 802582c:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025830:	d1ab      	bne.n	802578a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025832:	e7e0      	b.n	80257f6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8025834:	9d04      	ldr	r5, [sp, #16]
 8025836:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802583a:	e74b      	b.n	80256d4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802583c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025840:	e7da      	b.n	80257f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025842:	ebaa 0405 	sub.w	r4, sl, r5
 8025846:	b2a4      	uxth	r4, r4
 8025848:	462b      	mov	r3, r5
 802584a:	9604      	str	r6, [sp, #16]
 802584c:	9407      	str	r4, [sp, #28]
 802584e:	e765      	b.n	802571c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x164>
 8025850:	1bad      	subs	r5, r5, r6
 8025852:	b2ad      	uxth	r5, r5
 8025854:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8025858:	2600      	movs	r6, #0
 802585a:	e73b      	b.n	80256d4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802585c:	460b      	mov	r3, r1
 802585e:	3302      	adds	r3, #2
 8025860:	784d      	ldrb	r5, [r1, #1]
 8025862:	9300      	str	r3, [sp, #0]
 8025864:	e72f      	b.n	80256c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8025866:	9a01      	ldr	r2, [sp, #4]
 8025868:	7b12      	ldrb	r2, [r2, #12]
 802586a:	3a01      	subs	r2, #1
 802586c:	2a01      	cmp	r2, #1
 802586e:	d954      	bls.n	802591a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x362>
 8025870:	4a34      	ldr	r2, [pc, #208]	@ (8025944 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38c>)
 8025872:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8025876:	ea02 2b0b 	and.w	fp, r2, fp, lsl #8
 802587a:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 802587e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8025882:	ea48 0809 	orr.w	r8, r8, r9
 8025886:	fa1f fe88 	uxth.w	lr, r8
 802588a:	2b00      	cmp	r3, #0
 802588c:	d0b4      	beq.n	80257f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802588e:	1e5a      	subs	r2, r3, #1
 8025890:	fa1f fb82 	uxth.w	fp, r2
 8025894:	f1bb 0f04 	cmp.w	fp, #4
 8025898:	f3c0 0140 	ubfx	r1, r0, #1, #1
 802589c:	d945      	bls.n	802592a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 802589e:	2900      	cmp	r1, #0
 80258a0:	d040      	beq.n	8025924 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 80258a2:	46d8      	mov	r8, fp
 80258a4:	f8a0 e000 	strh.w	lr, [r0]
 80258a8:	f100 0902 	add.w	r9, r0, #2
 80258ac:	2700      	movs	r7, #0
 80258ae:	1a5b      	subs	r3, r3, r1
 80258b0:	463a      	mov	r2, r7
 80258b2:	fa1f fc83 	uxth.w	ip, r3
 80258b6:	f36e 070f 	bfi	r7, lr, #0, #16
 80258ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80258be:	ea4f 035c 	mov.w	r3, ip, lsr #1
 80258c2:	f36e 471f 	bfi	r7, lr, #16, #16
 80258c6:	3201      	adds	r2, #1
 80258c8:	b294      	uxth	r4, r2
 80258ca:	42a3      	cmp	r3, r4
 80258cc:	f841 7b04 	str.w	r7, [r1], #4
 80258d0:	d8f9      	bhi.n	80258c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 80258d2:	f02c 0201 	bic.w	r2, ip, #1
 80258d6:	b292      	uxth	r2, r2
 80258d8:	eba8 0302 	sub.w	r3, r8, r2
 80258dc:	4562      	cmp	r2, ip
 80258de:	b29b      	uxth	r3, r3
 80258e0:	eb09 0142 	add.w	r1, r9, r2, lsl #1
 80258e4:	d014      	beq.n	8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258e6:	1e5a      	subs	r2, r3, #1
 80258e8:	b292      	uxth	r2, r2
 80258ea:	f8a1 e000 	strh.w	lr, [r1]
 80258ee:	b17a      	cbz	r2, 8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258f0:	1e9a      	subs	r2, r3, #2
 80258f2:	b292      	uxth	r2, r2
 80258f4:	f8a1 e002 	strh.w	lr, [r1, #2]
 80258f8:	b152      	cbz	r2, 8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258fa:	1eda      	subs	r2, r3, #3
 80258fc:	b292      	uxth	r2, r2
 80258fe:	f8a1 e004 	strh.w	lr, [r1, #4]
 8025902:	b12a      	cbz	r2, 8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025904:	2b04      	cmp	r3, #4
 8025906:	f8a1 e006 	strh.w	lr, [r1, #6]
 802590a:	d001      	beq.n	8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802590c:	f8a1 e008 	strh.w	lr, [r1, #8]
 8025910:	f10b 0b01 	add.w	fp, fp, #1
 8025914:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025918:	e76e      	b.n	80257f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802591a:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 802591e:	fa1f fe88 	uxth.w	lr, r8
 8025922:	e7b2      	b.n	802588a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025924:	4681      	mov	r9, r0
 8025926:	4698      	mov	r8, r3
 8025928:	e7c0      	b.n	80258ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 802592a:	4601      	mov	r1, r0
 802592c:	e7dc      	b.n	80258e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802592e:	4b06      	ldr	r3, [pc, #24]	@ (8025948 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>)
 8025930:	4a06      	ldr	r2, [pc, #24]	@ (802594c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 8025932:	f44f 61aa 	mov.w	r1, #1360	@ 0x550
 8025936:	4806      	ldr	r0, [pc, #24]	@ (8025950 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 8025938:	f00c fdbe 	bl	80324b8 <__assert_func>
 802593c:	20082ec4 	.word	0x20082ec4
 8025940:	20082ebe 	.word	0x20082ebe
 8025944:	fffff800 	.word	0xfffff800
 8025948:	0803636c 	.word	0x0803636c
 802594c:	08037968 	.word	0x08037968
 8025950:	08036278 	.word	0x08036278

08025954 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025958:	b09f      	sub	sp, #124	@ 0x7c
 802595a:	9201      	str	r2, [sp, #4]
 802595c:	461c      	mov	r4, r3
 802595e:	7812      	ldrb	r2, [r2, #0]
 8025960:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8025964:	9116      	str	r1, [sp, #88]	@ 0x58
 8025966:	9305      	str	r3, [sp, #20]
 8025968:	2a00      	cmp	r2, #0
 802596a:	f040 823c 	bne.w	8025de6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x492>
 802596e:	b913      	cbnz	r3, 8025976 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8025970:	b01f      	add	sp, #124	@ 0x7c
 8025972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025976:	6861      	ldr	r1, [r4, #4]
 8025978:	4683      	mov	fp, r0
 802597a:	6820      	ldr	r0, [r4, #0]
 802597c:	ab1a      	add	r3, sp, #104	@ 0x68
 802597e:	c303      	stmia	r3!, {r0, r1}
 8025980:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025982:	6818      	ldr	r0, [r3, #0]
 8025984:	6859      	ldr	r1, [r3, #4]
 8025986:	ab1c      	add	r3, sp, #112	@ 0x70
 8025988:	c303      	stmia	r3!, {r0, r1}
 802598a:	a81a      	add	r0, sp, #104	@ 0x68
 802598c:	f7e7 f9b8 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025990:	4621      	mov	r1, r4
 8025992:	a81c      	add	r0, sp, #112	@ 0x70
 8025994:	f7e7 f9dc 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025998:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 802599c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80259a0:	f340 8152 	ble.w	8025c48 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 80259a4:	2301      	movs	r3, #1
 80259a6:	b289      	uxth	r1, r1
 80259a8:	9318      	str	r3, [sp, #96]	@ 0x60
 80259aa:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80259ae:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 80259b2:	fb90 f4f3 	sdiv	r4, r0, r3
 80259b6:	441a      	add	r2, r3
 80259b8:	3a01      	subs	r2, #1
 80259ba:	fb92 f2f3 	sdiv	r2, r2, r3
 80259be:	b2a4      	uxth	r4, r4
 80259c0:	fb03 0314 	mls	r3, r3, r4, r0
 80259c4:	9417      	str	r4, [sp, #92]	@ 0x5c
 80259c6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80259ca:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 80259ce:	fb13 4101 	smlabb	r1, r3, r1, r4
 80259d2:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 80259d6:	4bbb      	ldr	r3, [pc, #748]	@ (8025cc4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 80259d8:	4434      	add	r4, r6
 80259da:	4405      	add	r5, r0
 80259dc:	6818      	ldr	r0, [r3, #0]
 80259de:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 80259e2:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 80259e6:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 80259ea:	6803      	ldr	r3, [r0, #0]
 80259ec:	3201      	adds	r2, #1
 80259ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80259f0:	960b      	str	r6, [sp, #44]	@ 0x2c
 80259f2:	fa1f fa81 	uxth.w	sl, r1
 80259f6:	b294      	uxth	r4, r2
 80259f8:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 80259fc:	4798      	blx	r3
 80259fe:	2300      	movs	r3, #0
 8025a00:	f1ba 0f00 	cmp.w	sl, #0
 8025a04:	bf0c      	ite	eq
 8025a06:	4632      	moveq	r2, r6
 8025a08:	2200      	movne	r2, #0
 8025a0a:	49af      	ldr	r1, [pc, #700]	@ (8025cc8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8025a0c:	9315      	str	r3, [sp, #84]	@ 0x54
 8025a0e:	8809      	ldrh	r1, [r1, #0]
 8025a10:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8025a14:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 8025a18:	fb01 f505 	mul.w	r5, r1, r5
 8025a1c:	fb01 6303 	mla	r3, r1, r3, r6
 8025a20:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8025a24:	9300      	str	r3, [sp, #0]
 8025a26:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025a2a:	9307      	str	r3, [sp, #28]
 8025a2c:	b293      	uxth	r3, r2
 8025a2e:	9302      	str	r3, [sp, #8]
 8025a30:	f10b 030e 	add.w	r3, fp, #14
 8025a34:	9319      	str	r3, [sp, #100]	@ 0x64
 8025a36:	465b      	mov	r3, fp
 8025a38:	46d3      	mov	fp, sl
 8025a3a:	469a      	mov	sl, r3
 8025a3c:	00a4      	lsls	r4, r4, #2
 8025a3e:	1d21      	adds	r1, r4, #4
 8025a40:	9113      	str	r1, [sp, #76]	@ 0x4c
 8025a42:	9b07      	ldr	r3, [sp, #28]
 8025a44:	9a00      	ldr	r2, [sp, #0]
 8025a46:	4293      	cmp	r3, r2
 8025a48:	f240 8134 	bls.w	8025cb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025a4c:	2601      	movs	r6, #1
 8025a4e:	2700      	movs	r7, #0
 8025a50:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025a52:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8025a54:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8025a58:	fa11 f482 	uxtah	r4, r1, r2
 8025a5c:	00a4      	lsls	r4, r4, #2
 8025a5e:	9a01      	ldr	r2, [sp, #4]
 8025a60:	3404      	adds	r4, #4
 8025a62:	1911      	adds	r1, r2, r4
 8025a64:	788a      	ldrb	r2, [r1, #2]
 8025a66:	784d      	ldrb	r5, [r1, #1]
 8025a68:	0212      	lsls	r2, r2, #8
 8025a6a:	78c9      	ldrb	r1, [r1, #3]
 8025a6c:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8025a70:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025a72:	4308      	orrs	r0, r1
 8025a74:	4629      	mov	r1, r5
 8025a76:	fbbb f3f3 	udiv	r3, fp, r3
 8025a7a:	46bc      	mov	ip, r7
 8025a7c:	46b1      	mov	r9, r6
 8025a7e:	4401      	add	r1, r0
 8025a80:	784a      	ldrb	r2, [r1, #1]
 8025a82:	5c28      	ldrb	r0, [r5, r0]
 8025a84:	0212      	lsls	r2, r2, #8
 8025a86:	9d01      	ldr	r5, [sp, #4]
 8025a88:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025a8c:	4302      	orrs	r2, r0
 8025a8e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8025a90:	5d2c      	ldrb	r4, [r5, r4]
 8025a92:	f88a 200d 	strb.w	r2, [sl, #13]
 8025a96:	b292      	uxth	r2, r2
 8025a98:	1ac3      	subs	r3, r0, r3
 8025a9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8025a9c:	198a      	adds	r2, r1, r6
 8025a9e:	9203      	str	r2, [sp, #12]
 8025aa0:	b29b      	uxth	r3, r3
 8025aa2:	19a2      	adds	r2, r4, r6
 8025aa4:	9712      	str	r7, [sp, #72]	@ 0x48
 8025aa6:	960a      	str	r6, [sp, #40]	@ 0x28
 8025aa8:	940e      	str	r4, [sp, #56]	@ 0x38
 8025aaa:	9206      	str	r2, [sp, #24]
 8025aac:	9314      	str	r3, [sp, #80]	@ 0x50
 8025aae:	9604      	str	r6, [sp, #16]
 8025ab0:	f1bb 0f00 	cmp.w	fp, #0
 8025ab4:	d037      	beq.n	8025b26 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025ab6:	45d9      	cmp	r9, fp
 8025ab8:	f080 80ce 	bcs.w	8025c58 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8025abc:	ebab 0b09 	sub.w	fp, fp, r9
 8025ac0:	fa1f fb8b 	uxth.w	fp, fp
 8025ac4:	9b07      	ldr	r3, [sp, #28]
 8025ac6:	9a00      	ldr	r2, [sp, #0]
 8025ac8:	4293      	cmp	r3, r2
 8025aca:	f240 80f3 	bls.w	8025cb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025ace:	9803      	ldr	r0, [sp, #12]
 8025ad0:	9c04      	ldr	r4, [sp, #16]
 8025ad2:	7842      	ldrb	r2, [r0, #1]
 8025ad4:	f1c4 0107 	rsb	r1, r4, #7
 8025ad8:	7803      	ldrb	r3, [r0, #0]
 8025ada:	408a      	lsls	r2, r1
 8025adc:	0052      	lsls	r2, r2, #1
 8025ade:	4123      	asrs	r3, r4
 8025ae0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025ae4:	1c61      	adds	r1, r4, #1
 8025ae6:	b2db      	uxtb	r3, r3
 8025ae8:	4313      	orrs	r3, r2
 8025aea:	b2ca      	uxtb	r2, r1
 8025aec:	4611      	mov	r1, r2
 8025aee:	2908      	cmp	r1, #8
 8025af0:	9204      	str	r2, [sp, #16]
 8025af2:	b29a      	uxth	r2, r3
 8025af4:	f000 811a 	beq.w	8025d2c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8025af8:	3001      	adds	r0, #1
 8025afa:	9003      	str	r0, [sp, #12]
 8025afc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8025afe:	4291      	cmp	r1, r2
 8025b00:	f0c0 80e6 	bcc.w	8025cd0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 8025b04:	f04f 0901 	mov.w	r9, #1
 8025b08:	b2db      	uxtb	r3, r3
 8025b0a:	f88a 300d 	strb.w	r3, [sl, #13]
 8025b0e:	9906      	ldr	r1, [sp, #24]
 8025b10:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8025b14:	f0c0 8132 	bcc.w	8025d7c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8025b18:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025b1c:	f04f 0c00 	mov.w	ip, #0
 8025b20:	f1bb 0f00 	cmp.w	fp, #0
 8025b24:	d1c7      	bne.n	8025ab6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x162>
 8025b26:	9b02      	ldr	r3, [sp, #8]
 8025b28:	4599      	cmp	r9, r3
 8025b2a:	461a      	mov	r2, r3
 8025b2c:	f0c0 80f0 	bcc.w	8025d10 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3bc>
 8025b30:	eba9 0303 	sub.w	r3, r9, r3
 8025b34:	b29b      	uxth	r3, r3
 8025b36:	930c      	str	r3, [sp, #48]	@ 0x30
 8025b38:	2a00      	cmp	r2, #0
 8025b3a:	f000 80fd 	beq.w	8025d38 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e4>
 8025b3e:	4613      	mov	r3, r2
 8025b40:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 8025b44:	9208      	str	r2, [sp, #32]
 8025b46:	4463      	add	r3, ip
 8025b48:	b29b      	uxth	r3, r3
 8025b4a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 8025b4e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8025b52:	f8dd e000 	ldr.w	lr, [sp]
 8025b56:	930d      	str	r3, [sp, #52]	@ 0x34
 8025b58:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 8025b5c:	469b      	mov	fp, r3
 8025b5e:	e048      	b.n	8025bf2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8025b60:	9905      	ldr	r1, [sp, #20]
 8025b62:	f8be 5000 	ldrh.w	r5, [lr]
 8025b66:	fb01 f202 	mul.w	r2, r1, r2
 8025b6a:	1c50      	adds	r0, r2, #1
 8025b6c:	eb00 2022 	add.w	r0, r0, r2, asr #8
 8025b70:	1200      	asrs	r0, r0, #8
 8025b72:	43c4      	mvns	r4, r0
 8025b74:	b280      	uxth	r0, r0
 8025b76:	b2ff      	uxtb	r7, r7
 8025b78:	fb13 f300 	smulbb	r3, r3, r0
 8025b7c:	fb17 f700 	smulbb	r7, r7, r0
 8025b80:	00e9      	lsls	r1, r5, #3
 8025b82:	b2c9      	uxtb	r1, r1
 8025b84:	10ea      	asrs	r2, r5, #3
 8025b86:	b2e4      	uxtb	r4, r4
 8025b88:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025b8c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025b90:	fb01 3304 	mla	r3, r1, r4, r3
 8025b94:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025b98:	fb02 7704 	mla	r7, r2, r4, r7
 8025b9c:	b29b      	uxth	r3, r3
 8025b9e:	b2bf      	uxth	r7, r7
 8025ba0:	1c59      	adds	r1, r3, #1
 8025ba2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025ba6:	1c7a      	adds	r2, r7, #1
 8025ba8:	2e01      	cmp	r6, #1
 8025baa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025bae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8025bb2:	d966      	bls.n	8025c82 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x32e>
 8025bb4:	fa5f f888 	uxtb.w	r8, r8
 8025bb8:	fb18 f800 	smulbb	r8, r8, r0
 8025bbc:	122d      	asrs	r5, r5, #8
 8025bbe:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025bc2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8025bc6:	fb05 8804 	mla	r8, r5, r4, r8
 8025bca:	fa1f f888 	uxth.w	r8, r8
 8025bce:	f108 0101 	add.w	r1, r8, #1
 8025bd2:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025bd6:	097f      	lsrs	r7, r7, #5
 8025bd8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025bdc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025be0:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025be4:	433b      	orrs	r3, r7
 8025be6:	f8ae 3000 	strh.w	r3, [lr]
 8025bea:	45dc      	cmp	ip, fp
 8025bec:	f10e 0e02 	add.w	lr, lr, #2
 8025bf0:	d04b      	beq.n	8025c8a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x336>
 8025bf2:	2204      	movs	r2, #4
 8025bf4:	eb0a 030c 	add.w	r3, sl, ip
 8025bf8:	7b5b      	ldrb	r3, [r3, #13]
 8025bfa:	f10c 0c01 	add.w	ip, ip, #1
 8025bfe:	fb12 9303 	smlabb	r3, r2, r3, r9
 8025c02:	9a01      	ldr	r2, [sp, #4]
 8025c04:	fa1f fc8c 	uxth.w	ip, ip
 8025c08:	58d3      	ldr	r3, [r2, r3]
 8025c0a:	0e1a      	lsrs	r2, r3, #24
 8025c0c:	d0ed      	beq.n	8025bea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x296>
 8025c0e:	f89a 600c 	ldrb.w	r6, [sl, #12]
 8025c12:	2aff      	cmp	r2, #255	@ 0xff
 8025c14:	f106 36ff 	add.w	r6, r6, #4294967295
 8025c18:	ea4f 4813 	mov.w	r8, r3, lsr #16
 8025c1c:	ea4f 2713 	mov.w	r7, r3, lsr #8
 8025c20:	b2f6      	uxtb	r6, r6
 8025c22:	b2db      	uxtb	r3, r3
 8025c24:	d19c      	bne.n	8025b60 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025c26:	9905      	ldr	r1, [sp, #20]
 8025c28:	29ff      	cmp	r1, #255	@ 0xff
 8025c2a:	d199      	bne.n	8025b60 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025c2c:	2e01      	cmp	r6, #1
 8025c2e:	f240 80c4 	bls.w	8025dba <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x466>
 8025c32:	4a26      	ldr	r2, [pc, #152]	@ (8025ccc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8025c34:	00ff      	lsls	r7, r7, #3
 8025c36:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 8025c3a:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 8025c3e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025c42:	433b      	orrs	r3, r7
 8025c44:	b29b      	uxth	r3, r3
 8025c46:	e7ce      	b.n	8025be6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025c48:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025c4c:	b289      	uxth	r1, r1
 8025c4e:	fb93 f3f1 	sdiv	r3, r3, r1
 8025c52:	b29a      	uxth	r2, r3
 8025c54:	9218      	str	r2, [sp, #96]	@ 0x60
 8025c56:	e6a8      	b.n	80259aa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8025c58:	eba9 090b 	sub.w	r9, r9, fp
 8025c5c:	44dc      	add	ip, fp
 8025c5e:	f04f 0b00 	mov.w	fp, #0
 8025c62:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025c66:	fa1f f989 	uxth.w	r9, r9
 8025c6a:	fa1f fc8c 	uxth.w	ip, ip
 8025c6e:	9302      	str	r3, [sp, #8]
 8025c70:	9b07      	ldr	r3, [sp, #28]
 8025c72:	9a00      	ldr	r2, [sp, #0]
 8025c74:	4293      	cmp	r3, r2
 8025c76:	d91d      	bls.n	8025cb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025c78:	f1b9 0f00 	cmp.w	r9, #0
 8025c7c:	f47f af18 	bne.w	8025ab0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025c80:	e725      	b.n	8025ace <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8025c82:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025c86:	433b      	orrs	r3, r7
 8025c88:	e7ad      	b.n	8025be6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025c8a:	9b08      	ldr	r3, [sp, #32]
 8025c8c:	9a00      	ldr	r2, [sp, #0]
 8025c8e:	3b01      	subs	r3, #1
 8025c90:	b29b      	uxth	r3, r3
 8025c92:	3301      	adds	r3, #1
 8025c94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025c98:	9300      	str	r3, [sp, #0]
 8025c9a:	9b02      	ldr	r3, [sp, #8]
 8025c9c:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 8025ca0:	4599      	cmp	r9, r3
 8025ca2:	d24b      	bcs.n	8025d3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 8025ca4:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025ca8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025caa:	9a00      	ldr	r2, [sp, #0]
 8025cac:	9302      	str	r3, [sp, #8]
 8025cae:	9b07      	ldr	r3, [sp, #28]
 8025cb0:	4293      	cmp	r3, r2
 8025cb2:	d8e1      	bhi.n	8025c78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8025cb4:	4b03      	ldr	r3, [pc, #12]	@ (8025cc4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025cb6:	6818      	ldr	r0, [r3, #0]
 8025cb8:	6803      	ldr	r3, [r0, #0]
 8025cba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025cbc:	4798      	blx	r3
 8025cbe:	b01f      	add	sp, #124	@ 0x7c
 8025cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025cc4:	20082ec4 	.word	0x20082ec4
 8025cc8:	20082ebe 	.word	0x20082ebe
 8025ccc:	fffff800 	.word	0xfffff800
 8025cd0:	9b06      	ldr	r3, [sp, #24]
 8025cd2:	429a      	cmp	r2, r3
 8025cd4:	d355      	bcc.n	8025d82 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 8025cd6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8025cd8:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8025cdc:	eb0a 0300 	add.w	r3, sl, r0
 8025ce0:	7359      	strb	r1, [r3, #13]
 8025ce2:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8025ce6:	1c41      	adds	r1, r0, #1
 8025ce8:	fa1f f981 	uxth.w	r9, r1
 8025cec:	9c06      	ldr	r4, [sp, #24]
 8025cee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025cf0:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8025cf4:	3401      	adds	r4, #1
 8025cf6:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8025cfa:	b2a3      	uxth	r3, r4
 8025cfc:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8025d00:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8025d04:	9306      	str	r3, [sp, #24]
 8025d06:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025d0a:	f04f 0c00 	mov.w	ip, #0
 8025d0e:	e6cf      	b.n	8025ab0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025d10:	eba3 0309 	sub.w	r3, r3, r9
 8025d14:	b29b      	uxth	r3, r3
 8025d16:	9311      	str	r3, [sp, #68]	@ 0x44
 8025d18:	f1b9 0f00 	cmp.w	r9, #0
 8025d1c:	f43f aed2 	beq.w	8025ac4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8025d20:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8025d24:	f8cd 9020 	str.w	r9, [sp, #32]
 8025d28:	464b      	mov	r3, r9
 8025d2a:	e70c      	b.n	8025b46 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8025d2c:	2100      	movs	r1, #0
 8025d2e:	9104      	str	r1, [sp, #16]
 8025d30:	9903      	ldr	r1, [sp, #12]
 8025d32:	3102      	adds	r1, #2
 8025d34:	9103      	str	r1, [sp, #12]
 8025d36:	e6e1      	b.n	8025afc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8025d38:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8025d3c:	4b2d      	ldr	r3, [pc, #180]	@ (8025df4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a0>)
 8025d3e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025d40:	881b      	ldrh	r3, [r3, #0]
 8025d42:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8025d44:	1a5b      	subs	r3, r3, r1
 8025d46:	9900      	ldr	r1, [sp, #0]
 8025d48:	3201      	adds	r2, #1
 8025d4a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8025d4e:	9300      	str	r3, [sp, #0]
 8025d50:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025d52:	9212      	str	r2, [sp, #72]	@ 0x48
 8025d54:	429a      	cmp	r2, r3
 8025d56:	d034      	beq.n	8025dc2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 8025d58:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025d5c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025d60:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 8025d64:	ebab 0b03 	sub.w	fp, fp, r3
 8025d68:	fa1f fb8b 	uxth.w	fp, fp
 8025d6c:	f1bb 0f00 	cmp.w	fp, #0
 8025d70:	bf14      	ite	ne
 8025d72:	2300      	movne	r3, #0
 8025d74:	f04f 0b00 	moveq.w	fp, #0
 8025d78:	9302      	str	r3, [sp, #8]
 8025d7a:	e779      	b.n	8025c70 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8025d7c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025d7e:	3101      	adds	r1, #1
 8025d80:	e7b4      	b.n	8025cec <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>
 8025d82:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 8025d86:	f893 904f 	ldrb.w	r9, [r3, #79]	@ 0x4f
 8025d8a:	4613      	mov	r3, r2
 8025d8c:	f1b9 0f01 	cmp.w	r9, #1
 8025d90:	d90d      	bls.n	8025dae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x45a>
 8025d92:	f109 010d 	add.w	r1, r9, #13
 8025d96:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8025d98:	4451      	add	r1, sl
 8025d9a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8025d9e:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8025da2:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8025da6:	428c      	cmp	r4, r1
 8025da8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8025dac:	d1f5      	bne.n	8025d9a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x446>
 8025dae:	b2db      	uxtb	r3, r3
 8025db0:	f88a 300d 	strb.w	r3, [sl, #13]
 8025db4:	fa1f f989 	uxth.w	r9, r9
 8025db8:	e6a9      	b.n	8025b0e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8025dba:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8025dbe:	b29b      	uxth	r3, r3
 8025dc0:	e711      	b.n	8025be6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025dc2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8025dc6:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8025dca:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025dcc:	1a9b      	subs	r3, r3, r2
 8025dce:	fa1f fb83 	uxth.w	fp, r3
 8025dd2:	f1bb 0f00 	cmp.w	fp, #0
 8025dd6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025dd8:	bf18      	it	ne
 8025dda:	2300      	movne	r3, #0
 8025ddc:	3101      	adds	r1, #1
 8025dde:	b29b      	uxth	r3, r3
 8025de0:	9115      	str	r1, [sp, #84]	@ 0x54
 8025de2:	9302      	str	r3, [sp, #8]
 8025de4:	e62d      	b.n	8025a42 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8025de6:	4b04      	ldr	r3, [pc, #16]	@ (8025df8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a4>)
 8025de8:	4a04      	ldr	r2, [pc, #16]	@ (8025dfc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a8>)
 8025dea:	f240 51f3 	movw	r1, #1523	@ 0x5f3
 8025dee:	4804      	ldr	r0, [pc, #16]	@ (8025e00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4ac>)
 8025df0:	f00c fb62 	bl	80324b8 <__assert_func>
 8025df4:	20082ebe 	.word	0x20082ebe
 8025df8:	0803636c 	.word	0x0803636c
 8025dfc:	08037c34 	.word	0x08037c34
 8025e00:	08036278 	.word	0x08036278

08025e04 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e08:	4691      	mov	r9, r2
 8025e0a:	8812      	ldrh	r2, [r2, #0]
 8025e0c:	b093      	sub	sp, #76	@ 0x4c
 8025e0e:	2a01      	cmp	r2, #1
 8025e10:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 8025e14:	f040 8129 	bne.w	802606a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x266>
 8025e18:	b914      	cbnz	r4, 8025e20 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 8025e1a:	b013      	add	sp, #76	@ 0x4c
 8025e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e20:	461d      	mov	r5, r3
 8025e22:	468a      	mov	sl, r1
 8025e24:	6818      	ldr	r0, [r3, #0]
 8025e26:	6859      	ldr	r1, [r3, #4]
 8025e28:	ab0e      	add	r3, sp, #56	@ 0x38
 8025e2a:	c303      	stmia	r3!, {r0, r1}
 8025e2c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025e2e:	6818      	ldr	r0, [r3, #0]
 8025e30:	6859      	ldr	r1, [r3, #4]
 8025e32:	ab10      	add	r3, sp, #64	@ 0x40
 8025e34:	c303      	stmia	r3!, {r0, r1}
 8025e36:	a80e      	add	r0, sp, #56	@ 0x38
 8025e38:	f7e6 ff62 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e3c:	4629      	mov	r1, r5
 8025e3e:	a810      	add	r0, sp, #64	@ 0x40
 8025e40:	f7e6 ff86 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e44:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8025e48:	f9bd 6042 	ldrsh.w	r6, [sp, #66]	@ 0x42
 8025e4c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8025e50:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8025e54:	488b      	ldr	r0, [pc, #556]	@ (8026084 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025e56:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8025e5a:	442a      	add	r2, r5
 8025e5c:	4433      	add	r3, r6
 8025e5e:	6800      	ldr	r0, [r0, #0]
 8025e60:	fb11 5106 	smlabb	r1, r1, r6, r5
 8025e64:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8025e68:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8025e6c:	6802      	ldr	r2, [r0, #0]
 8025e6e:	4e86      	ldr	r6, [pc, #536]	@ (8026088 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>)
 8025e70:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8025e74:	448a      	add	sl, r1
 8025e76:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8025e7a:	42b3      	cmp	r3, r6
 8025e7c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025e7e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025e82:	f040 80c8 	bne.w	8026016 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8025e86:	6841      	ldr	r1, [r0, #4]
 8025e88:	4e80      	ldr	r6, [pc, #512]	@ (802608c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>)
 8025e8a:	680b      	ldr	r3, [r1, #0]
 8025e8c:	699b      	ldr	r3, [r3, #24]
 8025e8e:	42b3      	cmp	r3, r6
 8025e90:	f040 80e4 	bne.w	802605c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>
 8025e94:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8025e96:	4798      	blx	r3
 8025e98:	4b7d      	ldr	r3, [pc, #500]	@ (8026090 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025e9a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025e9e:	881b      	ldrh	r3, [r3, #0]
 8025ea0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025ea4:	2cff      	cmp	r4, #255	@ 0xff
 8025ea6:	fb03 1202 	mla	r2, r3, r2, r1
 8025eaa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025eae:	d06f      	beq.n	8025f90 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8025eb0:	43e2      	mvns	r2, r4
 8025eb2:	fb05 f503 	mul.w	r5, r5, r3
 8025eb6:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 8025eba:	4288      	cmp	r0, r1
 8025ebc:	910c      	str	r1, [sp, #48]	@ 0x30
 8025ebe:	b2d2      	uxtb	r2, r2
 8025ec0:	d25e      	bcs.n	8025f80 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025ec2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025ec4:	fa1f f884 	uxth.w	r8, r4
 8025ec8:	0049      	lsls	r1, r1, #1
 8025eca:	b292      	uxth	r2, r2
 8025ecc:	910d      	str	r1, [sp, #52]	@ 0x34
 8025ece:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8025ed0:	eb00 0b01 	add.w	fp, r0, r1
 8025ed4:	4583      	cmp	fp, r0
 8025ed6:	d948      	bls.n	8025f6a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8025ed8:	4684      	mov	ip, r0
 8025eda:	f10a 3eff 	add.w	lr, sl, #4294967295
 8025ede:	2103      	movs	r1, #3
 8025ee0:	2404      	movs	r4, #4
 8025ee2:	f81e 6f01 	ldrb.w	r6, [lr, #1]!
 8025ee6:	f8bc 3000 	ldrh.w	r3, [ip]
 8025eea:	fb11 4606 	smlabb	r6, r1, r6, r4
 8025eee:	eb09 0106 	add.w	r1, r9, r6
 8025ef2:	788d      	ldrb	r5, [r1, #2]
 8025ef4:	784f      	ldrb	r7, [r1, #1]
 8025ef6:	00dc      	lsls	r4, r3, #3
 8025ef8:	b2e4      	uxtb	r4, r4
 8025efa:	fb14 f402 	smulbb	r4, r4, r2
 8025efe:	fb15 f508 	smulbb	r5, r5, r8
 8025f02:	fb17 f708 	smulbb	r7, r7, r8
 8025f06:	f819 6006 	ldrb.w	r6, [r9, r6]
 8025f0a:	1219      	asrs	r1, r3, #8
 8025f0c:	10db      	asrs	r3, r3, #3
 8025f0e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025f12:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025f16:	fb06 4608 	mla	r6, r6, r8, r4
 8025f1a:	fb01 5102 	mla	r1, r1, r2, r5
 8025f1e:	fb03 7302 	mla	r3, r3, r2, r7
 8025f22:	b2b6      	uxth	r6, r6
 8025f24:	b29b      	uxth	r3, r3
 8025f26:	b28d      	uxth	r5, r1
 8025f28:	1c5c      	adds	r4, r3, #1
 8025f2a:	1c69      	adds	r1, r5, #1
 8025f2c:	1c77      	adds	r7, r6, #1
 8025f2e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025f32:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8025f36:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8025f3a:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 8025f3e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8025f42:	0961      	lsrs	r1, r4, #5
 8025f44:	4333      	orrs	r3, r6
 8025f46:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025f4a:	430b      	orrs	r3, r1
 8025f4c:	f82c 3b02 	strh.w	r3, [ip], #2
 8025f50:	45e3      	cmp	fp, ip
 8025f52:	d8c4      	bhi.n	8025ede <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8025f54:	43c3      	mvns	r3, r0
 8025f56:	449b      	add	fp, r3
 8025f58:	4b4d      	ldr	r3, [pc, #308]	@ (8026090 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025f5a:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 8025f5e:	f10b 0b01 	add.w	fp, fp, #1
 8025f62:	881b      	ldrh	r3, [r3, #0]
 8025f64:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025f68:	44da      	add	sl, fp
 8025f6a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025f6c:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8025f70:	1b5c      	subs	r4, r3, r5
 8025f72:	1b49      	subs	r1, r1, r5
 8025f74:	448a      	add	sl, r1
 8025f76:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025f78:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 8025f7c:	4281      	cmp	r1, r0
 8025f7e:	d8a6      	bhi.n	8025ece <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xca>
 8025f80:	4b40      	ldr	r3, [pc, #256]	@ (8026084 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025f82:	6818      	ldr	r0, [r3, #0]
 8025f84:	6803      	ldr	r3, [r0, #0]
 8025f86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025f88:	4798      	blx	r3
 8025f8a:	b013      	add	sp, #76	@ 0x4c
 8025f8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f90:	fb05 f503 	mul.w	r5, r5, r3
 8025f94:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 8025f98:	4570      	cmp	r0, lr
 8025f9a:	d2f1      	bcs.n	8025f80 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025f9c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025f9e:	f04f 0c03 	mov.w	ip, #3
 8025fa2:	2704      	movs	r7, #4
 8025fa4:	4693      	mov	fp, r2
 8025fa6:	0051      	lsls	r1, r2, #1
 8025fa8:	4e3a      	ldr	r6, [pc, #232]	@ (8026094 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8025faa:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025fac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025fae:	eb00 0802 	add.w	r8, r0, r2
 8025fb2:	4580      	cmp	r8, r0
 8025fb4:	d923      	bls.n	8025ffe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8025fb6:	4604      	mov	r4, r0
 8025fb8:	f10a 35ff 	add.w	r5, sl, #4294967295
 8025fbc:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8025fc0:	fb1c 7202 	smlabb	r2, ip, r2, r7
 8025fc4:	eb09 0302 	add.w	r3, r9, r2
 8025fc8:	7859      	ldrb	r1, [r3, #1]
 8025fca:	789b      	ldrb	r3, [r3, #2]
 8025fcc:	00c9      	lsls	r1, r1, #3
 8025fce:	f819 2002 	ldrb.w	r2, [r9, r2]
 8025fd2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025fd6:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8025fda:	430b      	orrs	r3, r1
 8025fdc:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8025fe0:	f824 3b02 	strh.w	r3, [r4], #2
 8025fe4:	45a0      	cmp	r8, r4
 8025fe6:	d8e9      	bhi.n	8025fbc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8025fe8:	43c3      	mvns	r3, r0
 8025fea:	4498      	add	r8, r3
 8025fec:	4b28      	ldr	r3, [pc, #160]	@ (8026090 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025fee:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025ff2:	f108 0801 	add.w	r8, r8, #1
 8025ff6:	881b      	ldrh	r3, [r3, #0]
 8025ff8:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 8025ffc:	44c2      	add	sl, r8
 8025ffe:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026002:	eba3 010b 	sub.w	r1, r3, fp
 8026006:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802600a:	eba2 020b 	sub.w	r2, r2, fp
 802600e:	4586      	cmp	lr, r0
 8026010:	4492      	add	sl, r2
 8026012:	d8cb      	bhi.n	8025fac <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026014:	e7b4      	b.n	8025f80 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8026016:	4798      	blx	r3
 8026018:	2801      	cmp	r0, #1
 802601a:	d122      	bne.n	8026062 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 802601c:	4b1e      	ldr	r3, [pc, #120]	@ (8026098 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 802601e:	6818      	ldr	r0, [r3, #0]
 8026020:	b350      	cbz	r0, 8026078 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8026022:	2600      	movs	r6, #0
 8026024:	270b      	movs	r7, #11
 8026026:	4b1a      	ldr	r3, [pc, #104]	@ (8026090 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8026028:	b2aa      	uxth	r2, r5
 802602a:	881d      	ldrh	r5, [r3, #0]
 802602c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026030:	9404      	str	r4, [sp, #16]
 8026032:	9506      	str	r5, [sp, #24]
 8026034:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026038:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 802603c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8026040:	4651      	mov	r1, sl
 8026042:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026046:	464a      	mov	r2, r9
 8026048:	9608      	str	r6, [sp, #32]
 802604a:	9605      	str	r6, [sp, #20]
 802604c:	9707      	str	r7, [sp, #28]
 802604e:	9503      	str	r5, [sp, #12]
 8026050:	9400      	str	r4, [sp, #0]
 8026052:	f7fa fdc9 	bl	8020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026056:	b013      	add	sp, #76	@ 0x4c
 8026058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802605c:	4608      	mov	r0, r1
 802605e:	4798      	blx	r3
 8026060:	e7da      	b.n	8026018 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x214>
 8026062:	4b08      	ldr	r3, [pc, #32]	@ (8026084 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8026064:	6818      	ldr	r0, [r3, #0]
 8026066:	6802      	ldr	r2, [r0, #0]
 8026068:	e714      	b.n	8025e94 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x90>
 802606a:	4b0c      	ldr	r3, [pc, #48]	@ (802609c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 802606c:	4a0c      	ldr	r2, [pc, #48]	@ (80260a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 802606e:	f240 61d9 	movw	r1, #1753	@ 0x6d9
 8026072:	480c      	ldr	r0, [pc, #48]	@ (80260a4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a0>)
 8026074:	f00c fa20 	bl	80324b8 <__assert_func>
 8026078:	4b0b      	ldr	r3, [pc, #44]	@ (80260a8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>)
 802607a:	4a0c      	ldr	r2, [pc, #48]	@ (80260ac <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a8>)
 802607c:	217c      	movs	r1, #124	@ 0x7c
 802607e:	480c      	ldr	r0, [pc, #48]	@ (80260b0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026080:	f00c fa1a 	bl	80324b8 <__assert_func>
 8026084:	20082ec4 	.word	0x20082ec4
 8026088:	0800121d 	.word	0x0800121d
 802608c:	0800baa5 	.word	0x0800baa5
 8026090:	20082ebe 	.word	0x20082ebe
 8026094:	fffff800 	.word	0xfffff800
 8026098:	20083364 	.word	0x20083364
 802609c:	0803629c 	.word	0x0803629c
 80260a0:	08036ed8 	.word	0x08036ed8
 80260a4:	08036278 	.word	0x08036278
 80260a8:	080361d4 	.word	0x080361d4
 80260ac:	08036a40 	.word	0x08036a40
 80260b0:	080361fc 	.word	0x080361fc

080260b4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80260b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260b8:	4693      	mov	fp, r2
 80260ba:	7812      	ldrb	r2, [r2, #0]
 80260bc:	b08d      	sub	sp, #52	@ 0x34
 80260be:	2a01      	cmp	r2, #1
 80260c0:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 80260c4:	f040 8252 	bne.w	802656c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4b8>
 80260c8:	b917      	cbnz	r7, 80260d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 80260ca:	b00d      	add	sp, #52	@ 0x34
 80260cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260d0:	461e      	mov	r6, r3
 80260d2:	6818      	ldr	r0, [r3, #0]
 80260d4:	460c      	mov	r4, r1
 80260d6:	6859      	ldr	r1, [r3, #4]
 80260d8:	ab08      	add	r3, sp, #32
 80260da:	c303      	stmia	r3!, {r0, r1}
 80260dc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80260de:	f10b 0b04 	add.w	fp, fp, #4
 80260e2:	6818      	ldr	r0, [r3, #0]
 80260e4:	6859      	ldr	r1, [r3, #4]
 80260e6:	ab0a      	add	r3, sp, #40	@ 0x28
 80260e8:	c303      	stmia	r3!, {r0, r1}
 80260ea:	a808      	add	r0, sp, #32
 80260ec:	f7e6 fe08 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80260f0:	4631      	mov	r1, r6
 80260f2:	a80a      	add	r0, sp, #40	@ 0x28
 80260f4:	f7e6 fe2c 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80260f8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80260fc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026100:	f003 0201 	and.w	r2, r3, #1
 8026104:	4615      	mov	r5, r2
 8026106:	9204      	str	r2, [sp, #16]
 8026108:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802610c:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026110:	442b      	add	r3, r5
 8026112:	fb02 1303 	mla	r3, r2, r3, r1
 8026116:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 802611a:	4402      	add	r2, r0
 802611c:	48b9      	ldr	r0, [pc, #740]	@ (8026404 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 802611e:	440e      	add	r6, r1
 8026120:	6800      	ldr	r0, [r0, #0]
 8026122:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026126:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 802612a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802612e:	eb04 0363 	add.w	r3, r4, r3, asr #1
 8026132:	6802      	ldr	r2, [r0, #0]
 8026134:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 8026138:	9301      	str	r3, [sp, #4]
 802613a:	f001 0301 	and.w	r3, r1, #1
 802613e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026140:	9303      	str	r3, [sp, #12]
 8026142:	9502      	str	r5, [sp, #8]
 8026144:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8026148:	4790      	blx	r2
 802614a:	4baf      	ldr	r3, [pc, #700]	@ (8026408 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802614c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026150:	881b      	ldrh	r3, [r3, #0]
 8026152:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026156:	2fff      	cmp	r7, #255	@ 0xff
 8026158:	fb03 1202 	mla	r2, r3, r2, r1
 802615c:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 8026160:	f000 8154 	beq.w	802640c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8026164:	ea6f 0c07 	mvn.w	ip, r7
 8026168:	fb03 f404 	mul.w	r4, r3, r4
 802616c:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 8026170:	459a      	cmp	sl, r3
 8026172:	9306      	str	r3, [sp, #24]
 8026174:	fa5f fc8c 	uxtb.w	ip, ip
 8026178:	f080 80b6 	bcs.w	80262e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802617c:	1e6b      	subs	r3, r5, #1
 802617e:	b2bf      	uxth	r7, r7
 8026180:	fa1f fc8c 	uxth.w	ip, ip
 8026184:	9307      	str	r3, [sp, #28]
 8026186:	9b03      	ldr	r3, [sp, #12]
 8026188:	2b00      	cmp	r3, #0
 802618a:	f040 80fc 	bne.w	8026386 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 802618e:	9b01      	ldr	r3, [sp, #4]
 8026190:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8026194:	9300      	str	r3, [sp, #0]
 8026196:	f1b9 0f01 	cmp.w	r9, #1
 802619a:	f340 808e 	ble.w	80262ba <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x206>
 802619e:	f1a9 0302 	sub.w	r3, r9, #2
 80261a2:	ea4f 0953 	mov.w	r9, r3, lsr #1
 80261a6:	9305      	str	r3, [sp, #20]
 80261a8:	9b00      	ldr	r3, [sp, #0]
 80261aa:	f10a 0808 	add.w	r8, sl, #8
 80261ae:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 80261b2:	f10a 0604 	add.w	r6, sl, #4
 80261b6:	f103 3eff 	add.w	lr, r3, #4294967295
 80261ba:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 80261be:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 80261c2:	0909      	lsrs	r1, r1, #4
 80261c4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80261c8:	eb0b 0001 	add.w	r0, fp, r1
 80261cc:	7882      	ldrb	r2, [r0, #2]
 80261ce:	7844      	ldrb	r4, [r0, #1]
 80261d0:	00dd      	lsls	r5, r3, #3
 80261d2:	b2ed      	uxtb	r5, r5
 80261d4:	fb12 f207 	smulbb	r2, r2, r7
 80261d8:	fb15 f50c 	smulbb	r5, r5, ip
 80261dc:	fb14 f407 	smulbb	r4, r4, r7
 80261e0:	f81b 1001 	ldrb.w	r1, [fp, r1]
 80261e4:	1218      	asrs	r0, r3, #8
 80261e6:	10db      	asrs	r3, r3, #3
 80261e8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80261ec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80261f0:	fb00 200c 	mla	r0, r0, ip, r2
 80261f4:	fb01 5507 	mla	r5, r1, r7, r5
 80261f8:	fb03 440c 	mla	r4, r3, ip, r4
 80261fc:	b281      	uxth	r1, r0
 80261fe:	b2ad      	uxth	r5, r5
 8026200:	b2a4      	uxth	r4, r4
 8026202:	1c68      	adds	r0, r5, #1
 8026204:	1c4b      	adds	r3, r1, #1
 8026206:	1c62      	adds	r2, r4, #1
 8026208:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802620c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8026210:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 8026214:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026218:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802621c:	0952      	lsrs	r2, r2, #5
 802621e:	430b      	orrs	r3, r1
 8026220:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026224:	4313      	orrs	r3, r2
 8026226:	f826 3c04 	strh.w	r3, [r6, #-4]
 802622a:	f89e 1000 	ldrb.w	r1, [lr]
 802622e:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 8026232:	f001 010f 	and.w	r1, r1, #15
 8026236:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802623a:	eb0b 0001 	add.w	r0, fp, r1
 802623e:	7882      	ldrb	r2, [r0, #2]
 8026240:	00dd      	lsls	r5, r3, #3
 8026242:	7840      	ldrb	r0, [r0, #1]
 8026244:	b2ed      	uxtb	r5, r5
 8026246:	fb12 f207 	smulbb	r2, r2, r7
 802624a:	fb10 f007 	smulbb	r0, r0, r7
 802624e:	fb15 f50c 	smulbb	r5, r5, ip
 8026252:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026256:	121c      	asrs	r4, r3, #8
 8026258:	10db      	asrs	r3, r3, #3
 802625a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802625e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026262:	fb04 240c 	mla	r4, r4, ip, r2
 8026266:	fb01 5507 	mla	r5, r1, r7, r5
 802626a:	fb03 020c 	mla	r2, r3, ip, r0
 802626e:	b2a1      	uxth	r1, r4
 8026270:	b2ad      	uxth	r5, r5
 8026272:	b290      	uxth	r0, r2
 8026274:	1c4b      	adds	r3, r1, #1
 8026276:	1c6c      	adds	r4, r5, #1
 8026278:	1c42      	adds	r2, r0, #1
 802627a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802627e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026282:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 8026286:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802628a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802628e:	0952      	lsrs	r2, r2, #5
 8026290:	430b      	orrs	r3, r1
 8026292:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026296:	4313      	orrs	r3, r2
 8026298:	f826 3c02 	strh.w	r3, [r6, #-2]
 802629c:	3604      	adds	r6, #4
 802629e:	45b0      	cmp	r8, r6
 80262a0:	d18b      	bne.n	80261ba <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80262a2:	9a00      	ldr	r2, [sp, #0]
 80262a4:	f109 0301 	add.w	r3, r9, #1
 80262a8:	441a      	add	r2, r3
 80262aa:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80262ae:	9b05      	ldr	r3, [sp, #20]
 80262b0:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 80262b4:	9200      	str	r2, [sp, #0]
 80262b6:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 80262ba:	f1b9 0f01 	cmp.w	r9, #1
 80262be:	d01b      	beq.n	80262f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>
 80262c0:	9904      	ldr	r1, [sp, #16]
 80262c2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80262c6:	4a50      	ldr	r2, [pc, #320]	@ (8026408 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 80262c8:	440b      	add	r3, r1
 80262ca:	8812      	ldrh	r2, [r2, #0]
 80262cc:	9902      	ldr	r1, [sp, #8]
 80262ce:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80262d2:	1a52      	subs	r2, r2, r1
 80262d4:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80262d8:	9a01      	ldr	r2, [sp, #4]
 80262da:	eb02 0363 	add.w	r3, r2, r3, asr #1
 80262de:	9301      	str	r3, [sp, #4]
 80262e0:	9b06      	ldr	r3, [sp, #24]
 80262e2:	4553      	cmp	r3, sl
 80262e4:	f63f af4f 	bhi.w	8026186 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 80262e8:	4b46      	ldr	r3, [pc, #280]	@ (8026404 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 80262ea:	6818      	ldr	r0, [r3, #0]
 80262ec:	6803      	ldr	r3, [r0, #0]
 80262ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80262f0:	4798      	blx	r3
 80262f2:	b00d      	add	sp, #52	@ 0x34
 80262f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262f8:	9b00      	ldr	r3, [sp, #0]
 80262fa:	781e      	ldrb	r6, [r3, #0]
 80262fc:	f8ba 3000 	ldrh.w	r3, [sl]
 8026300:	0936      	lsrs	r6, r6, #4
 8026302:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026306:	eb0b 0006 	add.w	r0, fp, r6
 802630a:	7881      	ldrb	r1, [r0, #2]
 802630c:	7845      	ldrb	r5, [r0, #1]
 802630e:	00dc      	lsls	r4, r3, #3
 8026310:	b2e4      	uxtb	r4, r4
 8026312:	fb14 f40c 	smulbb	r4, r4, ip
 8026316:	fb11 f107 	smulbb	r1, r1, r7
 802631a:	fb15 f507 	smulbb	r5, r5, r7
 802631e:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8026322:	121a      	asrs	r2, r3, #8
 8026324:	10db      	asrs	r3, r3, #3
 8026326:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802632a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802632e:	fb00 4007 	mla	r0, r0, r7, r4
 8026332:	fb02 120c 	mla	r2, r2, ip, r1
 8026336:	fb03 530c 	mla	r3, r3, ip, r5
 802633a:	b291      	uxth	r1, r2
 802633c:	b29b      	uxth	r3, r3
 802633e:	b280      	uxth	r0, r0
 8026340:	1c4a      	adds	r2, r1, #1
 8026342:	1c5d      	adds	r5, r3, #1
 8026344:	1c44      	adds	r4, r0, #1
 8026346:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802634a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802634e:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 8026352:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026356:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802635a:	094a      	lsrs	r2, r1, #5
 802635c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026360:	4303      	orrs	r3, r0
 8026362:	4313      	orrs	r3, r2
 8026364:	f8aa 3000 	strh.w	r3, [sl]
 8026368:	4b27      	ldr	r3, [pc, #156]	@ (8026408 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802636a:	9902      	ldr	r1, [sp, #8]
 802636c:	881a      	ldrh	r2, [r3, #0]
 802636e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026372:	1a52      	subs	r2, r2, r1
 8026374:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026378:	9a04      	ldr	r2, [sp, #16]
 802637a:	f10a 0a02 	add.w	sl, sl, #2
 802637e:	4413      	add	r3, r2
 8026380:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026384:	e7a8      	b.n	80262d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>
 8026386:	9b01      	ldr	r3, [sp, #4]
 8026388:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802638c:	781e      	ldrb	r6, [r3, #0]
 802638e:	f8ba 3000 	ldrh.w	r3, [sl]
 8026392:	f006 060f 	and.w	r6, r6, #15
 8026396:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802639a:	eb0b 0006 	add.w	r0, fp, r6
 802639e:	7881      	ldrb	r1, [r0, #2]
 80263a0:	7845      	ldrb	r5, [r0, #1]
 80263a2:	00dc      	lsls	r4, r3, #3
 80263a4:	b2e4      	uxtb	r4, r4
 80263a6:	fb14 f40c 	smulbb	r4, r4, ip
 80263aa:	fb11 f107 	smulbb	r1, r1, r7
 80263ae:	fb15 f507 	smulbb	r5, r5, r7
 80263b2:	f81b 0006 	ldrb.w	r0, [fp, r6]
 80263b6:	121a      	asrs	r2, r3, #8
 80263b8:	10db      	asrs	r3, r3, #3
 80263ba:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80263be:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80263c2:	fb00 4007 	mla	r0, r0, r7, r4
 80263c6:	fb02 120c 	mla	r2, r2, ip, r1
 80263ca:	fb03 530c 	mla	r3, r3, ip, r5
 80263ce:	b291      	uxth	r1, r2
 80263d0:	b29b      	uxth	r3, r3
 80263d2:	b280      	uxth	r0, r0
 80263d4:	1c4a      	adds	r2, r1, #1
 80263d6:	1c5d      	adds	r5, r3, #1
 80263d8:	1c44      	adds	r4, r0, #1
 80263da:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80263de:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80263e2:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 80263e6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80263ea:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 80263ee:	094a      	lsrs	r2, r1, #5
 80263f0:	4303      	orrs	r3, r0
 80263f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80263f6:	4313      	orrs	r3, r2
 80263f8:	f82a 3b02 	strh.w	r3, [sl], #2
 80263fc:	9b01      	ldr	r3, [sp, #4]
 80263fe:	3301      	adds	r3, #1
 8026400:	9300      	str	r3, [sp, #0]
 8026402:	e6c8      	b.n	8026196 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 8026404:	20082ec4 	.word	0x20082ec4
 8026408:	20082ebe 	.word	0x20082ebe
 802640c:	fb03 f304 	mul.w	r3, r3, r4
 8026410:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 8026414:	45c2      	cmp	sl, r8
 8026416:	f4bf af67 	bcs.w	80262e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802641a:	9b02      	ldr	r3, [sp, #8]
 802641c:	4f57      	ldr	r7, [pc, #348]	@ (802657c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4c8>)
 802641e:	3b01      	subs	r3, #1
 8026420:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8026424:	9300      	str	r3, [sp, #0]
 8026426:	9b03      	ldr	r3, [sp, #12]
 8026428:	2b00      	cmp	r3, #0
 802642a:	f000 808a 	beq.w	8026542 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x48e>
 802642e:	f899 2000 	ldrb.w	r2, [r9]
 8026432:	9e00      	ldr	r6, [sp, #0]
 8026434:	f002 020f 	and.w	r2, r2, #15
 8026438:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802643c:	eb0b 0302 	add.w	r3, fp, r2
 8026440:	7859      	ldrb	r1, [r3, #1]
 8026442:	789b      	ldrb	r3, [r3, #2]
 8026444:	00c9      	lsls	r1, r1, #3
 8026446:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802644a:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802644e:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8026452:	4313      	orrs	r3, r2
 8026454:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026458:	f109 0e01 	add.w	lr, r9, #1
 802645c:	f82a 3b02 	strh.w	r3, [sl], #2
 8026460:	2e01      	cmp	r6, #1
 8026462:	dd40      	ble.n	80264e6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x432>
 8026464:	3e02      	subs	r6, #2
 8026466:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 802646a:	f10a 0508 	add.w	r5, sl, #8
 802646e:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 8026472:	f10a 0004 	add.w	r0, sl, #4
 8026476:	f10e 34ff 	add.w	r4, lr, #4294967295
 802647a:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 802647e:	3004      	adds	r0, #4
 8026480:	0912      	lsrs	r2, r2, #4
 8026482:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026486:	eb0b 0302 	add.w	r3, fp, r2
 802648a:	7859      	ldrb	r1, [r3, #1]
 802648c:	789b      	ldrb	r3, [r3, #2]
 802648e:	00c9      	lsls	r1, r1, #3
 8026490:	f81b 2002 	ldrb.w	r2, [fp, r2]
 8026494:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026498:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802649c:	430b      	orrs	r3, r1
 802649e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80264a2:	f820 3c08 	strh.w	r3, [r0, #-8]
 80264a6:	7822      	ldrb	r2, [r4, #0]
 80264a8:	f002 020f 	and.w	r2, r2, #15
 80264ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80264b0:	eb0b 0302 	add.w	r3, fp, r2
 80264b4:	7859      	ldrb	r1, [r3, #1]
 80264b6:	789b      	ldrb	r3, [r3, #2]
 80264b8:	00c9      	lsls	r1, r1, #3
 80264ba:	f81b 2002 	ldrb.w	r2, [fp, r2]
 80264be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80264c2:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80264c6:	430b      	orrs	r3, r1
 80264c8:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80264cc:	f820 3c06 	strh.w	r3, [r0, #-6]
 80264d0:	4285      	cmp	r5, r0
 80264d2:	d1d2      	bne.n	802647a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c6>
 80264d4:	f10c 0301 	add.w	r3, ip, #1
 80264d8:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 80264dc:	449e      	add	lr, r3
 80264de:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80264e2:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 80264e6:	2e01      	cmp	r6, #1
 80264e8:	d12e      	bne.n	8026548 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x494>
 80264ea:	f89e 2000 	ldrb.w	r2, [lr]
 80264ee:	0912      	lsrs	r2, r2, #4
 80264f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80264f4:	eb0b 0302 	add.w	r3, fp, r2
 80264f8:	7859      	ldrb	r1, [r3, #1]
 80264fa:	789b      	ldrb	r3, [r3, #2]
 80264fc:	00c9      	lsls	r1, r1, #3
 80264fe:	f81b 0002 	ldrb.w	r0, [fp, r2]
 8026502:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026506:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802650a:	4313      	orrs	r3, r2
 802650c:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026510:	f8aa 3000 	strh.w	r3, [sl]
 8026514:	4b1a      	ldr	r3, [pc, #104]	@ (8026580 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026516:	9902      	ldr	r1, [sp, #8]
 8026518:	881a      	ldrh	r2, [r3, #0]
 802651a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802651e:	1a52      	subs	r2, r2, r1
 8026520:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026524:	9a04      	ldr	r2, [sp, #16]
 8026526:	f10a 0a02 	add.w	sl, sl, #2
 802652a:	4413      	add	r3, r2
 802652c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026530:	45d0      	cmp	r8, sl
 8026532:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026536:	f67f aed7 	bls.w	80262e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802653a:	9b03      	ldr	r3, [sp, #12]
 802653c:	2b00      	cmp	r3, #0
 802653e:	f47f af76 	bne.w	802642e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x37a>
 8026542:	46ce      	mov	lr, r9
 8026544:	9e02      	ldr	r6, [sp, #8]
 8026546:	e78b      	b.n	8026460 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>
 8026548:	9904      	ldr	r1, [sp, #16]
 802654a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802654e:	4a0c      	ldr	r2, [pc, #48]	@ (8026580 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026550:	440b      	add	r3, r1
 8026552:	8812      	ldrh	r2, [r2, #0]
 8026554:	9902      	ldr	r1, [sp, #8]
 8026556:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802655a:	1a52      	subs	r2, r2, r1
 802655c:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026560:	45d0      	cmp	r8, sl
 8026562:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026566:	f63f af5e 	bhi.w	8026426 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 802656a:	e6bd      	b.n	80262e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802656c:	4b05      	ldr	r3, [pc, #20]	@ (8026584 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d0>)
 802656e:	4a06      	ldr	r2, [pc, #24]	@ (8026588 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d4>)
 8026570:	f44f 61e9 	mov.w	r1, #1864	@ 0x748
 8026574:	4805      	ldr	r0, [pc, #20]	@ (802658c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d8>)
 8026576:	f00b ff9f 	bl	80324b8 <__assert_func>
 802657a:	bf00      	nop
 802657c:	fffff800 	.word	0xfffff800
 8026580:	20082ebe 	.word	0x20082ebe
 8026584:	0803633c 	.word	0x0803633c
 8026588:	08037214 	.word	0x08037214
 802658c:	08036278 	.word	0x08036278

08026590 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026594:	b08f      	sub	sp, #60	@ 0x3c
 8026596:	7814      	ldrb	r4, [r2, #0]
 8026598:	461d      	mov	r5, r3
 802659a:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 802659e:	2c01      	cmp	r4, #1
 80265a0:	9206      	str	r2, [sp, #24]
 80265a2:	9101      	str	r1, [sp, #4]
 80265a4:	9304      	str	r3, [sp, #16]
 80265a6:	f040 8142 	bne.w	802682e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 80265aa:	b913      	cbnz	r3, 80265b2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80265ac:	b00f      	add	sp, #60	@ 0x3c
 80265ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80265b2:	6828      	ldr	r0, [r5, #0]
 80265b4:	6869      	ldr	r1, [r5, #4]
 80265b6:	ab0a      	add	r3, sp, #40	@ 0x28
 80265b8:	c303      	stmia	r3!, {r0, r1}
 80265ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80265bc:	6818      	ldr	r0, [r3, #0]
 80265be:	6859      	ldr	r1, [r3, #4]
 80265c0:	ab0c      	add	r3, sp, #48	@ 0x30
 80265c2:	c303      	stmia	r3!, {r0, r1}
 80265c4:	a80a      	add	r0, sp, #40	@ 0x28
 80265c6:	f7e6 fb9b 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80265ca:	4629      	mov	r1, r5
 80265cc:	a80c      	add	r0, sp, #48	@ 0x30
 80265ce:	f7e6 fbbf 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80265d2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80265d6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80265da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80265de:	bfdd      	ittte	le
 80265e0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 80265e4:	b29a      	uxthle	r2, r3
 80265e6:	fb94 f4f2 	sdivle	r4, r4, r2
 80265ea:	b29a      	uxthgt	r2, r3
 80265ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80265f0:	fb93 f0f4 	sdiv	r0, r3, r4
 80265f4:	b285      	uxth	r5, r0
 80265f6:	fb04 3c15 	mls	ip, r4, r5, r3
 80265fa:	fb1c 1c02 	smlabb	ip, ip, r2, r1
 80265fe:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8026602:	fa1f fb8c 	uxth.w	fp, ip
 8026606:	4422      	add	r2, r4
 8026608:	3a01      	subs	r2, #1
 802660a:	fb92 f4f4 	sdiv	r4, r2, r4
 802660e:	2d00      	cmp	r5, #0
 8026610:	f040 8105 	bne.w	802681e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 8026614:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8026618:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 802661c:	4413      	add	r3, r2
 802661e:	4a87      	ldr	r2, [pc, #540]	@ (802683c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026620:	4401      	add	r1, r0
 8026622:	6810      	ldr	r0, [r2, #0]
 8026624:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8026628:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 802662c:	4616      	mov	r6, r2
 802662e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8026632:	6803      	ldr	r3, [r0, #0]
 8026634:	9209      	str	r2, [sp, #36]	@ 0x24
 8026636:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026638:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 802663c:	4798      	blx	r3
 802663e:	9f04      	ldr	r7, [sp, #16]
 8026640:	f1bb 0f00 	cmp.w	fp, #0
 8026644:	bf0c      	ite	eq
 8026646:	4633      	moveq	r3, r6
 8026648:	2300      	movne	r3, #0
 802664a:	ea6f 0807 	mvn.w	r8, r7
 802664e:	497c      	ldr	r1, [pc, #496]	@ (8026840 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 8026650:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8026654:	8809      	ldrh	r1, [r1, #0]
 8026656:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 802665a:	fb01 f505 	mul.w	r5, r1, r5
 802665e:	fb01 6202 	mla	r2, r1, r2, r6
 8026662:	b2a4      	uxth	r4, r4
 8026664:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8026668:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 802666c:	00a4      	lsls	r4, r4, #2
 802666e:	1d21      	adds	r1, r4, #4
 8026670:	4290      	cmp	r0, r2
 8026672:	9202      	str	r2, [sp, #8]
 8026674:	9108      	str	r1, [sp, #32]
 8026676:	fa1f fa83 	uxth.w	sl, r3
 802667a:	fa5f f888 	uxtb.w	r8, r8
 802667e:	d228      	bcs.n	80266d2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x142>
 8026680:	2300      	movs	r3, #0
 8026682:	469c      	mov	ip, r3
 8026684:	9303      	str	r3, [sp, #12]
 8026686:	fa1f f888 	uxth.w	r8, r8
 802668a:	fa1f f987 	uxth.w	r9, r7
 802668e:	f1bc 0f00 	cmp.w	ip, #0
 8026692:	d10f      	bne.n	80266b4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 8026694:	9901      	ldr	r1, [sp, #4]
 8026696:	780a      	ldrb	r2, [r1, #0]
 8026698:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 802669c:	f10c 33ff 	add.w	r3, ip, #4294967295
 80266a0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80266a4:	2b02      	cmp	r3, #2
 80266a6:	9203      	str	r2, [sp, #12]
 80266a8:	f200 80b3 	bhi.w	8026812 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x282>
 80266ac:	3101      	adds	r1, #1
 80266ae:	9101      	str	r1, [sp, #4]
 80266b0:	fa1f fc8c 	uxth.w	ip, ip
 80266b4:	f1bb 0f00 	cmp.w	fp, #0
 80266b8:	d013      	beq.n	80266e2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x152>
 80266ba:	45dc      	cmp	ip, fp
 80266bc:	f080 80a0 	bcs.w	8026800 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 80266c0:	ebab 0c0c 	sub.w	ip, fp, ip
 80266c4:	fa1f fb8c 	uxth.w	fp, ip
 80266c8:	f04f 0c00 	mov.w	ip, #0
 80266cc:	9b02      	ldr	r3, [sp, #8]
 80266ce:	4283      	cmp	r3, r0
 80266d0:	d8dd      	bhi.n	802668e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 80266d2:	4b5a      	ldr	r3, [pc, #360]	@ (802683c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 80266d4:	6818      	ldr	r0, [r3, #0]
 80266d6:	6803      	ldr	r3, [r0, #0]
 80266d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80266da:	4798      	blx	r3
 80266dc:	b00f      	add	sp, #60	@ 0x3c
 80266de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266e2:	2303      	movs	r3, #3
 80266e4:	4619      	mov	r1, r3
 80266e6:	9a08      	ldr	r2, [sp, #32]
 80266e8:	9b03      	ldr	r3, [sp, #12]
 80266ea:	45d4      	cmp	ip, sl
 80266ec:	fb11 2703 	smlabb	r7, r1, r3, r2
 80266f0:	9b06      	ldr	r3, [sp, #24]
 80266f2:	441f      	add	r7, r3
 80266f4:	d362      	bcc.n	80267bc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 80266f6:	ebac 030a 	sub.w	r3, ip, sl
 80266fa:	b29b      	uxth	r3, r3
 80266fc:	9305      	str	r3, [sp, #20]
 80266fe:	9b04      	ldr	r3, [sp, #16]
 8026700:	4654      	mov	r4, sl
 8026702:	2bff      	cmp	r3, #255	@ 0xff
 8026704:	f8cd b01c 	str.w	fp, [sp, #28]
 8026708:	d062      	beq.n	80267d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802670a:	2c00      	cmp	r4, #0
 802670c:	d038      	beq.n	8026780 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 802670e:	f104 3eff 	add.w	lr, r4, #4294967295
 8026712:	fa1f fe8e 	uxth.w	lr, lr
 8026716:	f10e 0e01 	add.w	lr, lr, #1
 802671a:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 802671e:	8802      	ldrh	r2, [r0, #0]
 8026720:	78bd      	ldrb	r5, [r7, #2]
 8026722:	00d4      	lsls	r4, r2, #3
 8026724:	7879      	ldrb	r1, [r7, #1]
 8026726:	b2e4      	uxtb	r4, r4
 8026728:	fb14 f408 	smulbb	r4, r4, r8
 802672c:	fb15 f509 	smulbb	r5, r5, r9
 8026730:	fb11 f109 	smulbb	r1, r1, r9
 8026734:	783e      	ldrb	r6, [r7, #0]
 8026736:	1213      	asrs	r3, r2, #8
 8026738:	10d2      	asrs	r2, r2, #3
 802673a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802673e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026742:	fb06 4409 	mla	r4, r6, r9, r4
 8026746:	fb03 5308 	mla	r3, r3, r8, r5
 802674a:	fb02 1208 	mla	r2, r2, r8, r1
 802674e:	b2a4      	uxth	r4, r4
 8026750:	b291      	uxth	r1, r2
 8026752:	b29d      	uxth	r5, r3
 8026754:	1c62      	adds	r2, r4, #1
 8026756:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802675a:	1c6b      	adds	r3, r5, #1
 802675c:	1c4a      	adds	r2, r1, #1
 802675e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8026762:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8026766:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 802676a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802676e:	0952      	lsrs	r2, r2, #5
 8026770:	430b      	orrs	r3, r1
 8026772:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026776:	4313      	orrs	r3, r2
 8026778:	f820 3b02 	strh.w	r3, [r0], #2
 802677c:	4570      	cmp	r0, lr
 802677e:	d1ce      	bne.n	802671e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 8026780:	45d4      	cmp	ip, sl
 8026782:	d316      	bcc.n	80267b2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8026784:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026786:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 802678a:	4b2d      	ldr	r3, [pc, #180]	@ (8026840 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 802678c:	fa1f fa82 	uxth.w	sl, r2
 8026790:	ebab 0b0a 	sub.w	fp, fp, sl
 8026794:	881b      	ldrh	r3, [r3, #0]
 8026796:	fa1f fb8b 	uxth.w	fp, fp
 802679a:	f1bb 0f00 	cmp.w	fp, #0
 802679e:	eba3 0302 	sub.w	r3, r3, r2
 80267a2:	f8dd c014 	ldr.w	ip, [sp, #20]
 80267a6:	bf18      	it	ne
 80267a8:	f04f 0a00 	movne.w	sl, #0
 80267ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80267b0:	e78c      	b.n	80266cc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80267b2:	f8dd c014 	ldr.w	ip, [sp, #20]
 80267b6:	f8dd a01c 	ldr.w	sl, [sp, #28]
 80267ba:	e787      	b.n	80266cc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80267bc:	ebaa 020c 	sub.w	r2, sl, ip
 80267c0:	b293      	uxth	r3, r2
 80267c2:	9307      	str	r3, [sp, #28]
 80267c4:	9b04      	ldr	r3, [sp, #16]
 80267c6:	4664      	mov	r4, ip
 80267c8:	2bff      	cmp	r3, #255	@ 0xff
 80267ca:	f8cd b014 	str.w	fp, [sp, #20]
 80267ce:	d19c      	bne.n	802670a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 80267d0:	2c00      	cmp	r4, #0
 80267d2:	d0d5      	beq.n	8026780 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 80267d4:	3c01      	subs	r4, #1
 80267d6:	b2a4      	uxth	r4, r4
 80267d8:	3401      	adds	r4, #1
 80267da:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80267de:	787a      	ldrb	r2, [r7, #1]
 80267e0:	78bb      	ldrb	r3, [r7, #2]
 80267e2:	4918      	ldr	r1, [pc, #96]	@ (8026844 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b4>)
 80267e4:	00d2      	lsls	r2, r2, #3
 80267e6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80267ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80267ee:	7839      	ldrb	r1, [r7, #0]
 80267f0:	4313      	orrs	r3, r2
 80267f2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80267f6:	f820 3b02 	strh.w	r3, [r0], #2
 80267fa:	42a0      	cmp	r0, r4
 80267fc:	d1ef      	bne.n	80267de <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 80267fe:	e7bf      	b.n	8026780 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026800:	ebac 0c0b 	sub.w	ip, ip, fp
 8026804:	fa1f fc8c 	uxth.w	ip, ip
 8026808:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 802680c:	f04f 0b00 	mov.w	fp, #0
 8026810:	e75c      	b.n	80266cc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026812:	460b      	mov	r3, r1
 8026814:	3302      	adds	r3, #2
 8026816:	f891 c001 	ldrb.w	ip, [r1, #1]
 802681a:	9301      	str	r3, [sp, #4]
 802681c:	e74a      	b.n	80266b4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 802681e:	9a06      	ldr	r2, [sp, #24]
 8026820:	9801      	ldr	r0, [sp, #4]
 8026822:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 8026826:	ba12      	rev	r2, r2
 8026828:	4410      	add	r0, r2
 802682a:	9001      	str	r0, [sp, #4]
 802682c:	e6f2      	b.n	8026614 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x84>
 802682e:	4b06      	ldr	r3, [pc, #24]	@ (8026848 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b8>)
 8026830:	4a06      	ldr	r2, [pc, #24]	@ (802684c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2bc>)
 8026832:	f240 71c2 	movw	r1, #1986	@ 0x7c2
 8026836:	4806      	ldr	r0, [pc, #24]	@ (8026850 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8026838:	f00b fe3e 	bl	80324b8 <__assert_func>
 802683c:	20082ec4 	.word	0x20082ec4
 8026840:	20082ebe 	.word	0x20082ebe
 8026844:	fffff800 	.word	0xfffff800
 8026848:	0803633c 	.word	0x0803633c
 802684c:	080373b8 	.word	0x080373b8
 8026850:	08036278 	.word	0x08036278

08026854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026858:	b09d      	sub	sp, #116	@ 0x74
 802685a:	7814      	ldrb	r4, [r2, #0]
 802685c:	461d      	mov	r5, r3
 802685e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8026862:	2c01      	cmp	r4, #1
 8026864:	9211      	str	r2, [sp, #68]	@ 0x44
 8026866:	9113      	str	r1, [sp, #76]	@ 0x4c
 8026868:	930f      	str	r3, [sp, #60]	@ 0x3c
 802686a:	f040 820a 	bne.w	8026c82 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 802686e:	b913      	cbnz	r3, 8026876 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8026870:	b01d      	add	sp, #116	@ 0x74
 8026872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026876:	6869      	ldr	r1, [r5, #4]
 8026878:	4683      	mov	fp, r0
 802687a:	6828      	ldr	r0, [r5, #0]
 802687c:	ab18      	add	r3, sp, #96	@ 0x60
 802687e:	c303      	stmia	r3!, {r0, r1}
 8026880:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026882:	6818      	ldr	r0, [r3, #0]
 8026884:	6859      	ldr	r1, [r3, #4]
 8026886:	ab1a      	add	r3, sp, #104	@ 0x68
 8026888:	c303      	stmia	r3!, {r0, r1}
 802688a:	a818      	add	r0, sp, #96	@ 0x60
 802688c:	f7e6 fa38 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026890:	4629      	mov	r1, r5
 8026892:	a81a      	add	r0, sp, #104	@ 0x68
 8026894:	f7e6 fa5c 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026898:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 802689c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80268a0:	f340 814b 	ble.w	8026b3a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e6>
 80268a4:	b2b0      	uxth	r0, r6
 80268a6:	9416      	str	r4, [sp, #88]	@ 0x58
 80268a8:	f9bd 306a 	ldrsh.w	r3, [sp, #106]	@ 0x6a
 80268ac:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 80268b0:	fb93 f1f4 	sdiv	r1, r3, r4
 80268b4:	4422      	add	r2, r4
 80268b6:	3a01      	subs	r2, #1
 80268b8:	fb92 f2f4 	sdiv	r2, r2, r4
 80268bc:	b289      	uxth	r1, r1
 80268be:	fb04 3411 	mls	r4, r4, r1, r3
 80268c2:	9114      	str	r1, [sp, #80]	@ 0x50
 80268c4:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80268c8:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 80268cc:	fb14 1600 	smlabb	r6, r4, r0, r1
 80268d0:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 80268d4:	48a4      	ldr	r0, [pc, #656]	@ (8026b68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 80268d6:	4439      	add	r1, r7
 80268d8:	442b      	add	r3, r5
 80268da:	6800      	ldr	r0, [r0, #0]
 80268dc:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80268e0:	f8ad 306a 	strh.w	r3, [sp, #106]	@ 0x6a
 80268e4:	f9bd 706c 	ldrsh.w	r7, [sp, #108]	@ 0x6c
 80268e8:	6803      	ldr	r3, [r0, #0]
 80268ea:	b2b5      	uxth	r5, r6
 80268ec:	3201      	adds	r2, #1
 80268ee:	9501      	str	r5, [sp, #4]
 80268f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80268f2:	970b      	str	r7, [sp, #44]	@ 0x2c
 80268f4:	b294      	uxth	r4, r2
 80268f6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80268fa:	4798      	blx	r3
 80268fc:	2100      	movs	r1, #0
 80268fe:	2d00      	cmp	r5, #0
 8026900:	4d9a      	ldr	r5, [pc, #616]	@ (8026b6c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026902:	bf08      	it	eq
 8026904:	463a      	moveq	r2, r7
 8026906:	882d      	ldrh	r5, [r5, #0]
 8026908:	9112      	str	r1, [sp, #72]	@ 0x48
 802690a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 802690e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8026912:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026914:	fb05 7101 	mla	r1, r5, r1, r7
 8026918:	ea6f 0c03 	mvn.w	ip, r3
 802691c:	fb05 f306 	mul.w	r3, r5, r6
 8026920:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8026924:	9100      	str	r1, [sp, #0]
 8026926:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 802692a:	f10b 030e 	add.w	r3, fp, #14
 802692e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026930:	465b      	mov	r3, fp
 8026932:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026934:	bf18      	it	ne
 8026936:	2200      	movne	r2, #0
 8026938:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 802693c:	f104 0904 	add.w	r9, r4, #4
 8026940:	46cb      	mov	fp, r9
 8026942:	4699      	mov	r9, r3
 8026944:	460b      	mov	r3, r1
 8026946:	b292      	uxth	r2, r2
 8026948:	9202      	str	r2, [sp, #8]
 802694a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 802694e:	fa5f f28c 	uxtb.w	r2, ip
 8026952:	9107      	str	r1, [sp, #28]
 8026954:	9215      	str	r2, [sp, #84]	@ 0x54
 8026956:	9a00      	ldr	r2, [sp, #0]
 8026958:	4293      	cmp	r3, r2
 802695a:	f240 80fd 	bls.w	8026b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 802695e:	9a01      	ldr	r2, [sp, #4]
 8026960:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026964:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8026966:	fbb2 f3f3 	udiv	r3, r2, r3
 802696a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802696c:	2701      	movs	r7, #1
 802696e:	fa11 f482 	uxtah	r4, r1, r2
 8026972:	00a4      	lsls	r4, r4, #2
 8026974:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8026976:	3404      	adds	r4, #4
 8026978:	1911      	adds	r1, r2, r4
 802697a:	788a      	ldrb	r2, [r1, #2]
 802697c:	784d      	ldrb	r5, [r1, #1]
 802697e:	0212      	lsls	r2, r2, #8
 8026980:	78c9      	ldrb	r1, [r1, #3]
 8026982:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8026986:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026988:	4308      	orrs	r0, r1
 802698a:	4629      	mov	r1, r5
 802698c:	2600      	movs	r6, #0
 802698e:	4401      	add	r1, r0
 8026990:	784a      	ldrb	r2, [r1, #1]
 8026992:	5c28      	ldrb	r0, [r5, r0]
 8026994:	0212      	lsls	r2, r2, #8
 8026996:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026998:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802699c:	4302      	orrs	r2, r0
 802699e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80269a0:	5d2c      	ldrb	r4, [r5, r4]
 80269a2:	f889 200d 	strb.w	r2, [r9, #13]
 80269a6:	b292      	uxth	r2, r2
 80269a8:	1ac3      	subs	r3, r0, r3
 80269aa:	9209      	str	r2, [sp, #36]	@ 0x24
 80269ac:	19ca      	adds	r2, r1, r7
 80269ae:	9205      	str	r2, [sp, #20]
 80269b0:	b29b      	uxth	r3, r3
 80269b2:	19e2      	adds	r2, r4, r7
 80269b4:	f8bd e054 	ldrh.w	lr, [sp, #84]	@ 0x54
 80269b8:	960e      	str	r6, [sp, #56]	@ 0x38
 80269ba:	970a      	str	r7, [sp, #40]	@ 0x28
 80269bc:	940d      	str	r4, [sp, #52]	@ 0x34
 80269be:	9206      	str	r2, [sp, #24]
 80269c0:	9310      	str	r3, [sp, #64]	@ 0x40
 80269c2:	9704      	str	r7, [sp, #16]
 80269c4:	9b01      	ldr	r3, [sp, #4]
 80269c6:	2b00      	cmp	r3, #0
 80269c8:	d034      	beq.n	8026a34 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1e0>
 80269ca:	42bb      	cmp	r3, r7
 80269cc:	f240 811a 	bls.w	8026c04 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 80269d0:	1bdf      	subs	r7, r3, r7
 80269d2:	b2bb      	uxth	r3, r7
 80269d4:	9301      	str	r3, [sp, #4]
 80269d6:	9a00      	ldr	r2, [sp, #0]
 80269d8:	9b07      	ldr	r3, [sp, #28]
 80269da:	4293      	cmp	r3, r2
 80269dc:	f240 80bc 	bls.w	8026b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 80269e0:	9805      	ldr	r0, [sp, #20]
 80269e2:	9c04      	ldr	r4, [sp, #16]
 80269e4:	7842      	ldrb	r2, [r0, #1]
 80269e6:	f1c4 0107 	rsb	r1, r4, #7
 80269ea:	7803      	ldrb	r3, [r0, #0]
 80269ec:	408a      	lsls	r2, r1
 80269ee:	0052      	lsls	r2, r2, #1
 80269f0:	4123      	asrs	r3, r4
 80269f2:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80269f6:	1c61      	adds	r1, r4, #1
 80269f8:	b2db      	uxtb	r3, r3
 80269fa:	4313      	orrs	r3, r2
 80269fc:	b2ca      	uxtb	r2, r1
 80269fe:	4611      	mov	r1, r2
 8026a00:	2908      	cmp	r1, #8
 8026a02:	9204      	str	r2, [sp, #16]
 8026a04:	b29a      	uxth	r2, r3
 8026a06:	f000 8107 	beq.w	8026c18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8026a0a:	3001      	adds	r0, #1
 8026a0c:	9005      	str	r0, [sp, #20]
 8026a0e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8026a10:	4291      	cmp	r1, r2
 8026a12:	f0c0 80d9 	bcc.w	8026bc8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>
 8026a16:	2701      	movs	r7, #1
 8026a18:	b2db      	uxtb	r3, r3
 8026a1a:	f889 300d 	strb.w	r3, [r9, #13]
 8026a1e:	9906      	ldr	r1, [sp, #24]
 8026a20:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8026a24:	f0c0 80fe 	bcc.w	8026c24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 8026a28:	9b01      	ldr	r3, [sp, #4]
 8026a2a:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026a2e:	2600      	movs	r6, #0
 8026a30:	2b00      	cmp	r3, #0
 8026a32:	d1ca      	bne.n	80269ca <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8026a34:	9b02      	ldr	r3, [sp, #8]
 8026a36:	429f      	cmp	r7, r3
 8026a38:	461a      	mov	r2, r3
 8026a3a:	f0c0 8099 	bcc.w	8026b70 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8026a3e:	1afb      	subs	r3, r7, r3
 8026a40:	b29b      	uxth	r3, r3
 8026a42:	9308      	str	r3, [sp, #32]
 8026a44:	9b01      	ldr	r3, [sp, #4]
 8026a46:	9203      	str	r2, [sp, #12]
 8026a48:	930c      	str	r3, [sp, #48]	@ 0x30
 8026a4a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026a4c:	2bff      	cmp	r3, #255	@ 0xff
 8026a4e:	9b03      	ldr	r3, [sp, #12]
 8026a50:	f000 809a 	beq.w	8026b88 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8026a54:	2b00      	cmp	r3, #0
 8026a56:	d049      	beq.n	8026aec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026a58:	eb06 0803 	add.w	r8, r6, r3
 8026a5c:	f8dd c000 	ldr.w	ip, [sp]
 8026a60:	fa1f f888 	uxth.w	r8, r8
 8026a64:	eb09 0306 	add.w	r3, r9, r6
 8026a68:	7b5c      	ldrb	r4, [r3, #13]
 8026a6a:	f8bc 3000 	ldrh.w	r3, [ip]
 8026a6e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026a72:	eb0b 0204 	add.w	r2, fp, r4
 8026a76:	7890      	ldrb	r0, [r2, #2]
 8026a78:	7855      	ldrb	r5, [r2, #1]
 8026a7a:	00d9      	lsls	r1, r3, #3
 8026a7c:	b2c9      	uxtb	r1, r1
 8026a7e:	fb11 f10e 	smulbb	r1, r1, lr
 8026a82:	fb10 f00a 	smulbb	r0, r0, sl
 8026a86:	fb15 f50a 	smulbb	r5, r5, sl
 8026a8a:	f81b 4004 	ldrb.w	r4, [fp, r4]
 8026a8e:	121a      	asrs	r2, r3, #8
 8026a90:	10db      	asrs	r3, r3, #3
 8026a92:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8026a96:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026a9a:	fb04 140a 	mla	r4, r4, sl, r1
 8026a9e:	fb02 020e 	mla	r2, r2, lr, r0
 8026aa2:	fb03 530e 	mla	r3, r3, lr, r5
 8026aa6:	b2a4      	uxth	r4, r4
 8026aa8:	b29b      	uxth	r3, r3
 8026aaa:	b290      	uxth	r0, r2
 8026aac:	1c59      	adds	r1, r3, #1
 8026aae:	1c42      	adds	r2, r0, #1
 8026ab0:	1c65      	adds	r5, r4, #1
 8026ab2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026ab6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026aba:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8026abe:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8026ac2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8026ac6:	094a      	lsrs	r2, r1, #5
 8026ac8:	3601      	adds	r6, #1
 8026aca:	4323      	orrs	r3, r4
 8026acc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026ad0:	b2b6      	uxth	r6, r6
 8026ad2:	4313      	orrs	r3, r2
 8026ad4:	4546      	cmp	r6, r8
 8026ad6:	f82c 3b02 	strh.w	r3, [ip], #2
 8026ada:	d1c3      	bne.n	8026a64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8026adc:	9b03      	ldr	r3, [sp, #12]
 8026ade:	9a00      	ldr	r2, [sp, #0]
 8026ae0:	3b01      	subs	r3, #1
 8026ae2:	b29b      	uxth	r3, r3
 8026ae4:	3301      	adds	r3, #1
 8026ae6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026aea:	9300      	str	r3, [sp, #0]
 8026aec:	9b02      	ldr	r3, [sp, #8]
 8026aee:	429f      	cmp	r7, r3
 8026af0:	d32b      	bcc.n	8026b4a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8026af2:	4b1e      	ldr	r3, [pc, #120]	@ (8026b6c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026af4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026af6:	881b      	ldrh	r3, [r3, #0]
 8026af8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8026afa:	1a5b      	subs	r3, r3, r1
 8026afc:	9900      	ldr	r1, [sp, #0]
 8026afe:	3201      	adds	r2, #1
 8026b00:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8026b04:	9300      	str	r3, [sp, #0]
 8026b06:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026b08:	920e      	str	r2, [sp, #56]	@ 0x38
 8026b0a:	429a      	cmp	r2, r3
 8026b0c:	f000 80a7 	beq.w	8026c5e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 8026b10:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8026b14:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026b18:	9f08      	ldr	r7, [sp, #32]
 8026b1a:	1a9b      	subs	r3, r3, r2
 8026b1c:	b29b      	uxth	r3, r3
 8026b1e:	2b00      	cmp	r3, #0
 8026b20:	bf14      	ite	ne
 8026b22:	2200      	movne	r2, #0
 8026b24:	2300      	moveq	r3, #0
 8026b26:	9202      	str	r2, [sp, #8]
 8026b28:	9301      	str	r3, [sp, #4]
 8026b2a:	9b07      	ldr	r3, [sp, #28]
 8026b2c:	9a00      	ldr	r2, [sp, #0]
 8026b2e:	4293      	cmp	r3, r2
 8026b30:	d912      	bls.n	8026b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026b32:	2f00      	cmp	r7, #0
 8026b34:	f47f af46 	bne.w	80269c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026b38:	e752      	b.n	80269e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8026b3a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8026b3e:	b2b0      	uxth	r0, r6
 8026b40:	fb94 f4f0 	sdiv	r4, r4, r0
 8026b44:	b2a3      	uxth	r3, r4
 8026b46:	9316      	str	r3, [sp, #88]	@ 0x58
 8026b48:	e6ae      	b.n	80268a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x54>
 8026b4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026b4c:	9a00      	ldr	r2, [sp, #0]
 8026b4e:	9302      	str	r3, [sp, #8]
 8026b50:	9b07      	ldr	r3, [sp, #28]
 8026b52:	9f08      	ldr	r7, [sp, #32]
 8026b54:	4293      	cmp	r3, r2
 8026b56:	d8ec      	bhi.n	8026b32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2de>
 8026b58:	4b03      	ldr	r3, [pc, #12]	@ (8026b68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026b5a:	6818      	ldr	r0, [r3, #0]
 8026b5c:	6803      	ldr	r3, [r0, #0]
 8026b5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026b60:	4798      	blx	r3
 8026b62:	b01d      	add	sp, #116	@ 0x74
 8026b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b68:	20082ec4 	.word	0x20082ec4
 8026b6c:	20082ebe 	.word	0x20082ebe
 8026b70:	9b01      	ldr	r3, [sp, #4]
 8026b72:	9703      	str	r7, [sp, #12]
 8026b74:	9308      	str	r3, [sp, #32]
 8026b76:	9b02      	ldr	r3, [sp, #8]
 8026b78:	1bdb      	subs	r3, r3, r7
 8026b7a:	b29b      	uxth	r3, r3
 8026b7c:	930c      	str	r3, [sp, #48]	@ 0x30
 8026b7e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026b80:	2bff      	cmp	r3, #255	@ 0xff
 8026b82:	9b03      	ldr	r3, [sp, #12]
 8026b84:	f47f af66 	bne.w	8026a54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8026b88:	2b00      	cmp	r3, #0
 8026b8a:	d0af      	beq.n	8026aec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026b8c:	18f4      	adds	r4, r6, r3
 8026b8e:	9800      	ldr	r0, [sp, #0]
 8026b90:	b2a4      	uxth	r4, r4
 8026b92:	eb09 0306 	add.w	r3, r9, r6
 8026b96:	7b59      	ldrb	r1, [r3, #13]
 8026b98:	4d3d      	ldr	r5, [pc, #244]	@ (8026c90 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8026b9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b9e:	eb0b 0301 	add.w	r3, fp, r1
 8026ba2:	785a      	ldrb	r2, [r3, #1]
 8026ba4:	789b      	ldrb	r3, [r3, #2]
 8026ba6:	00d2      	lsls	r2, r2, #3
 8026ba8:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026bac:	3601      	adds	r6, #1
 8026bae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026bb2:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8026bb6:	4313      	orrs	r3, r2
 8026bb8:	b2b6      	uxth	r6, r6
 8026bba:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026bbe:	42a6      	cmp	r6, r4
 8026bc0:	f820 3b02 	strh.w	r3, [r0], #2
 8026bc4:	d1e5      	bne.n	8026b92 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8026bc6:	e789      	b.n	8026adc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>
 8026bc8:	9b06      	ldr	r3, [sp, #24]
 8026bca:	429a      	cmp	r2, r3
 8026bcc:	d32d      	bcc.n	8026c2a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 8026bce:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8026bd0:	f899 100d 	ldrb.w	r1, [r9, #13]
 8026bd4:	eb09 0300 	add.w	r3, r9, r0
 8026bd8:	7359      	strb	r1, [r3, #13]
 8026bda:	f899 300d 	ldrb.w	r3, [r9, #13]
 8026bde:	1c41      	adds	r1, r0, #1
 8026be0:	b28f      	uxth	r7, r1
 8026be2:	9c06      	ldr	r4, [sp, #24]
 8026be4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026be6:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8026bea:	3401      	adds	r4, #1
 8026bec:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8026bf0:	b2a3      	uxth	r3, r4
 8026bf2:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8026bf6:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8026bfa:	9306      	str	r3, [sp, #24]
 8026bfc:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026c00:	2600      	movs	r6, #0
 8026c02:	e6df      	b.n	80269c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026c04:	1aff      	subs	r7, r7, r3
 8026c06:	441e      	add	r6, r3
 8026c08:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026c0c:	b2bf      	uxth	r7, r7
 8026c0e:	9302      	str	r3, [sp, #8]
 8026c10:	2300      	movs	r3, #0
 8026c12:	b2b6      	uxth	r6, r6
 8026c14:	9301      	str	r3, [sp, #4]
 8026c16:	e788      	b.n	8026b2a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 8026c18:	2100      	movs	r1, #0
 8026c1a:	9104      	str	r1, [sp, #16]
 8026c1c:	9905      	ldr	r1, [sp, #20]
 8026c1e:	3102      	adds	r1, #2
 8026c20:	9105      	str	r1, [sp, #20]
 8026c22:	e6f4      	b.n	8026a0e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8026c24:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8026c26:	3101      	adds	r1, #1
 8026c28:	e7db      	b.n	8026be2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x38e>
 8026c2a:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8026c2e:	f893 704f 	ldrb.w	r7, [r3, #79]	@ 0x4f
 8026c32:	4613      	mov	r3, r2
 8026c34:	2f01      	cmp	r7, #1
 8026c36:	d90d      	bls.n	8026c54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x400>
 8026c38:	f107 010d 	add.w	r1, r7, #13
 8026c3c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8026c3e:	4449      	add	r1, r9
 8026c40:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8026c44:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026c48:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8026c4c:	428c      	cmp	r4, r1
 8026c4e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8026c52:	d1f5      	bne.n	8026c40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ec>
 8026c54:	b2db      	uxtb	r3, r3
 8026c56:	f889 300d 	strb.w	r3, [r9, #13]
 8026c5a:	b2bf      	uxth	r7, r7
 8026c5c:	e6df      	b.n	8026a1e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8026c5e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8026c62:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 8026c66:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8026c68:	1a9b      	subs	r3, r3, r2
 8026c6a:	b29b      	uxth	r3, r3
 8026c6c:	2b00      	cmp	r3, #0
 8026c6e:	9301      	str	r3, [sp, #4]
 8026c70:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026c72:	bf18      	it	ne
 8026c74:	2300      	movne	r3, #0
 8026c76:	3101      	adds	r1, #1
 8026c78:	b29b      	uxth	r3, r3
 8026c7a:	9302      	str	r3, [sp, #8]
 8026c7c:	9112      	str	r1, [sp, #72]	@ 0x48
 8026c7e:	9b07      	ldr	r3, [sp, #28]
 8026c80:	e669      	b.n	8026956 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8026c82:	4b04      	ldr	r3, [pc, #16]	@ (8026c94 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8026c84:	4a04      	ldr	r2, [pc, #16]	@ (8026c98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8026c86:	f640 0167 	movw	r1, #2151	@ 0x867
 8026c8a:	4804      	ldr	r0, [pc, #16]	@ (8026c9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 8026c8c:	f00b fc14 	bl	80324b8 <__assert_func>
 8026c90:	fffff800 	.word	0xfffff800
 8026c94:	0803633c 	.word	0x0803633c
 8026c98:	0803770c 	.word	0x0803770c
 8026c9c:	08036278 	.word	0x08036278

08026ca0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ca4:	4690      	mov	r8, r2
 8026ca6:	8812      	ldrh	r2, [r2, #0]
 8026ca8:	b093      	sub	sp, #76	@ 0x4c
 8026caa:	461c      	mov	r4, r3
 8026cac:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 8026cb0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026cb2:	2a00      	cmp	r2, #0
 8026cb4:	f040 80fb 	bne.w	8026eae <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8026cb8:	4689      	mov	r9, r1
 8026cba:	6820      	ldr	r0, [r4, #0]
 8026cbc:	6861      	ldr	r1, [r4, #4]
 8026cbe:	aa0e      	add	r2, sp, #56	@ 0x38
 8026cc0:	c203      	stmia	r2!, {r0, r1}
 8026cc2:	6818      	ldr	r0, [r3, #0]
 8026cc4:	6859      	ldr	r1, [r3, #4]
 8026cc6:	aa10      	add	r2, sp, #64	@ 0x40
 8026cc8:	c203      	stmia	r2!, {r0, r1}
 8026cca:	a80e      	add	r0, sp, #56	@ 0x38
 8026ccc:	f7e6 f818 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026cd0:	4621      	mov	r1, r4
 8026cd2:	a810      	add	r0, sp, #64	@ 0x40
 8026cd4:	f7e6 f83c 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026cd8:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8026cdc:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8026ce0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8026ce4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8026ce8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8026cec:	4873      	ldr	r0, [pc, #460]	@ (8026ebc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026cee:	fb11 4105 	smlabb	r1, r1, r5, r4
 8026cf2:	4422      	add	r2, r4
 8026cf4:	442b      	add	r3, r5
 8026cf6:	6800      	ldr	r0, [r0, #0]
 8026cf8:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8026cfc:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8026d00:	6802      	ldr	r2, [r0, #0]
 8026d02:	4489      	add	r9, r1
 8026d04:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8026d08:	4c6d      	ldr	r4, [pc, #436]	@ (8026ec0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8026d0a:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8026d0e:	910a      	str	r1, [sp, #40]	@ 0x28
 8026d10:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 8026d14:	42a3      	cmp	r3, r4
 8026d16:	910c      	str	r1, [sp, #48]	@ 0x30
 8026d18:	f040 8096 	bne.w	8026e48 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026d1c:	6841      	ldr	r1, [r0, #4]
 8026d1e:	4c69      	ldr	r4, [pc, #420]	@ (8026ec4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 8026d20:	680b      	ldr	r3, [r1, #0]
 8026d22:	699b      	ldr	r3, [r3, #24]
 8026d24:	42a3      	cmp	r3, r4
 8026d26:	f040 80b4 	bne.w	8026e92 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8026d2a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026d2c:	4798      	blx	r3
 8026d2e:	4b66      	ldr	r3, [pc, #408]	@ (8026ec8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026d30:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8026d34:	881b      	ldrh	r3, [r3, #0]
 8026d36:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8026d3a:	fb01 2303 	mla	r3, r1, r3, r2
 8026d3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d42:	4418      	add	r0, r3
 8026d44:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026d46:	2b00      	cmp	r3, #0
 8026d48:	dd76      	ble.n	8026e38 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d4c:	2b00      	cmp	r3, #0
 8026d4e:	dd73      	ble.n	8026e38 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d50:	2200      	movs	r2, #0
 8026d52:	2104      	movs	r1, #4
 8026d54:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d58:	920b      	str	r2, [sp, #44]	@ 0x2c
 8026d5a:	930d      	str	r3, [sp, #52]	@ 0x34
 8026d5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d5e:	464e      	mov	r6, r9
 8026d60:	1cc5      	adds	r5, r0, #3
 8026d62:	eb09 0c03 	add.w	ip, r9, r3
 8026d66:	e039      	b.n	8026ddc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026d68:	fb0a f303 	mul.w	r3, sl, r3
 8026d6c:	1c5a      	adds	r2, r3, #1
 8026d6e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026d72:	121b      	asrs	r3, r3, #8
 8026d74:	43df      	mvns	r7, r3
 8026d76:	b29b      	uxth	r3, r3
 8026d78:	fb1e f203 	smulbb	r2, lr, r3
 8026d7c:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 8026d80:	b2ff      	uxtb	r7, r7
 8026d82:	fb0e 2e07 	mla	lr, lr, r7, r2
 8026d86:	fa1f fe8e 	uxth.w	lr, lr
 8026d8a:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 8026d8e:	f10e 0b01 	add.w	fp, lr, #1
 8026d92:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8026d96:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8026d9a:	fb12 fb07 	smulbb	fp, r2, r7
 8026d9e:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026da2:	7862      	ldrb	r2, [r4, #1]
 8026da4:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 8026da8:	fb02 b203 	mla	r2, r2, r3, fp
 8026dac:	b292      	uxth	r2, r2
 8026dae:	f102 0b01 	add.w	fp, r2, #1
 8026db2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026db6:	1212      	asrs	r2, r2, #8
 8026db8:	fb1e f707 	smulbb	r7, lr, r7
 8026dbc:	f805 2c02 	strb.w	r2, [r5, #-2]
 8026dc0:	78a2      	ldrb	r2, [r4, #2]
 8026dc2:	fb02 7303 	mla	r3, r2, r3, r7
 8026dc6:	b29b      	uxth	r3, r3
 8026dc8:	1c5a      	adds	r2, r3, #1
 8026dca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026dce:	121b      	asrs	r3, r3, #8
 8026dd0:	f805 3c01 	strb.w	r3, [r5, #-1]
 8026dd4:	45b4      	cmp	ip, r6
 8026dd6:	f105 0503 	add.w	r5, r5, #3
 8026dda:	d01b      	beq.n	8026e14 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x174>
 8026ddc:	f816 2b01 	ldrb.w	r2, [r6], #1
 8026de0:	fb11 1202 	smlabb	r2, r1, r2, r1
 8026de4:	eb08 0402 	add.w	r4, r8, r2
 8026de8:	78e3      	ldrb	r3, [r4, #3]
 8026dea:	2b00      	cmp	r3, #0
 8026dec:	d0f2      	beq.n	8026dd4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 8026dee:	2bff      	cmp	r3, #255	@ 0xff
 8026df0:	f818 e002 	ldrb.w	lr, [r8, r2]
 8026df4:	d1b8      	bne.n	8026d68 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026df6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8026dfa:	d1b5      	bne.n	8026d68 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026dfc:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026e00:	7863      	ldrb	r3, [r4, #1]
 8026e02:	45b4      	cmp	ip, r6
 8026e04:	f805 3c02 	strb.w	r3, [r5, #-2]
 8026e08:	78a3      	ldrb	r3, [r4, #2]
 8026e0a:	f105 0503 	add.w	r5, r5, #3
 8026e0e:	f805 3c04 	strb.w	r3, [r5, #-4]
 8026e12:	d1e3      	bne.n	8026ddc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026e14:	4b2c      	ldr	r3, [pc, #176]	@ (8026ec8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026e16:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026e18:	881b      	ldrh	r3, [r3, #0]
 8026e1a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026e1c:	1a9b      	subs	r3, r3, r2
 8026e1e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026e22:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8026e24:	442b      	add	r3, r5
 8026e26:	4418      	add	r0, r3
 8026e28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026e2a:	3401      	adds	r4, #1
 8026e2c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026e30:	42a3      	cmp	r3, r4
 8026e32:	940b      	str	r4, [sp, #44]	@ 0x2c
 8026e34:	4491      	add	r9, r2
 8026e36:	d191      	bne.n	8026d5c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8026e38:	4b20      	ldr	r3, [pc, #128]	@ (8026ebc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026e3a:	6818      	ldr	r0, [r3, #0]
 8026e3c:	6803      	ldr	r3, [r0, #0]
 8026e3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026e40:	4798      	blx	r3
 8026e42:	b013      	add	sp, #76	@ 0x4c
 8026e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e48:	4798      	blx	r3
 8026e4a:	4602      	mov	r2, r0
 8026e4c:	2a01      	cmp	r2, #1
 8026e4e:	d124      	bne.n	8026e9a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8026e50:	4b1e      	ldr	r3, [pc, #120]	@ (8026ecc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 8026e52:	6818      	ldr	r0, [r3, #0]
 8026e54:	b328      	cbz	r0, 8026ea2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8026e56:	260b      	movs	r6, #11
 8026e58:	4b1b      	ldr	r3, [pc, #108]	@ (8026ec8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026e5a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8026e5e:	881f      	ldrh	r7, [r3, #0]
 8026e60:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8026e64:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026e68:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026e6c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8026e70:	9208      	str	r2, [sp, #32]
 8026e72:	9205      	str	r2, [sp, #20]
 8026e74:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026e78:	f8cd a010 	str.w	sl, [sp, #16]
 8026e7c:	4642      	mov	r2, r8
 8026e7e:	4649      	mov	r1, r9
 8026e80:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8026e84:	9503      	str	r5, [sp, #12]
 8026e86:	9400      	str	r4, [sp, #0]
 8026e88:	f7f9 feae 	bl	8020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026e8c:	b013      	add	sp, #76	@ 0x4c
 8026e8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e92:	4608      	mov	r0, r1
 8026e94:	4798      	blx	r3
 8026e96:	4602      	mov	r2, r0
 8026e98:	e7d8      	b.n	8026e4c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8026e9a:	4b08      	ldr	r3, [pc, #32]	@ (8026ebc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026e9c:	6818      	ldr	r0, [r3, #0]
 8026e9e:	6802      	ldr	r2, [r0, #0]
 8026ea0:	e743      	b.n	8026d2a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8026ea2:	4b0b      	ldr	r3, [pc, #44]	@ (8026ed0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 8026ea4:	4a0b      	ldr	r2, [pc, #44]	@ (8026ed4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8026ea6:	217c      	movs	r1, #124	@ 0x7c
 8026ea8:	480b      	ldr	r0, [pc, #44]	@ (8026ed8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8026eaa:	f00b fb05 	bl	80324b8 <__assert_func>
 8026eae:	4b0b      	ldr	r3, [pc, #44]	@ (8026edc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8026eb0:	4a0b      	ldr	r2, [pc, #44]	@ (8026ee0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8026eb2:	f640 1155 	movw	r1, #2389	@ 0x955
 8026eb6:	480b      	ldr	r0, [pc, #44]	@ (8026ee4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8026eb8:	f00b fafe 	bl	80324b8 <__assert_func>
 8026ebc:	20082ec4 	.word	0x20082ec4
 8026ec0:	0800121d 	.word	0x0800121d
 8026ec4:	0800baa5 	.word	0x0800baa5
 8026ec8:	20082ebe 	.word	0x20082ebe
 8026ecc:	20083364 	.word	0x20083364
 8026ed0:	080361d4 	.word	0x080361d4
 8026ed4:	08036a40 	.word	0x08036a40
 8026ed8:	080361fc 	.word	0x080361fc
 8026edc:	080362ec 	.word	0x080362ec
 8026ee0:	080370fc 	.word	0x080370fc
 8026ee4:	08036278 	.word	0x08036278

08026ee8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026eec:	4614      	mov	r4, r2
 8026eee:	7812      	ldrb	r2, [r2, #0]
 8026ef0:	b08d      	sub	sp, #52	@ 0x34
 8026ef2:	461e      	mov	r6, r3
 8026ef4:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 8026ef8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026efa:	2a00      	cmp	r2, #0
 8026efc:	f040 81e0 	bne.w	80272c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8026f00:	6830      	ldr	r0, [r6, #0]
 8026f02:	460d      	mov	r5, r1
 8026f04:	6871      	ldr	r1, [r6, #4]
 8026f06:	aa08      	add	r2, sp, #32
 8026f08:	c203      	stmia	r2!, {r0, r1}
 8026f0a:	6818      	ldr	r0, [r3, #0]
 8026f0c:	6859      	ldr	r1, [r3, #4]
 8026f0e:	aa0a      	add	r2, sp, #40	@ 0x28
 8026f10:	c203      	stmia	r2!, {r0, r1}
 8026f12:	a808      	add	r0, sp, #32
 8026f14:	f7e5 fef4 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f18:	4631      	mov	r1, r6
 8026f1a:	a80a      	add	r0, sp, #40	@ 0x28
 8026f1c:	f7e5 ff18 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f20:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026f24:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026f28:	f003 0201 	and.w	r2, r3, #1
 8026f2c:	4617      	mov	r7, r2
 8026f2e:	9204      	str	r2, [sp, #16]
 8026f30:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026f34:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026f38:	443b      	add	r3, r7
 8026f3a:	fb02 1303 	mla	r3, r2, r3, r1
 8026f3e:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 8026f42:	4402      	add	r2, r0
 8026f44:	48d6      	ldr	r0, [pc, #856]	@ (80272a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8026f46:	440e      	add	r6, r1
 8026f48:	6800      	ldr	r0, [r0, #0]
 8026f4a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8026f4e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026f52:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026f56:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8026f5a:	6802      	ldr	r2, [r0, #0]
 8026f5c:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 8026f60:	9301      	str	r3, [sp, #4]
 8026f62:	f001 0301 	and.w	r3, r1, #1
 8026f66:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026f68:	9305      	str	r3, [sp, #20]
 8026f6a:	9703      	str	r7, [sp, #12]
 8026f6c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8026f70:	4790      	blx	r2
 8026f72:	4acc      	ldr	r2, [pc, #816]	@ (80272a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8026f74:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8026f78:	8811      	ldrh	r1, [r2, #0]
 8026f7a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8026f7e:	fb05 f201 	mul.w	r2, r5, r1
 8026f82:	fb01 6303 	mla	r3, r1, r3, r6
 8026f86:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026f8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026f8e:	4418      	add	r0, r3
 8026f90:	1883      	adds	r3, r0, r2
 8026f92:	4298      	cmp	r0, r3
 8026f94:	9306      	str	r3, [sp, #24]
 8026f96:	f104 0204 	add.w	r2, r4, #4
 8026f9a:	f080 80f1 	bcs.w	8027180 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026f9e:	1e7b      	subs	r3, r7, #1
 8026fa0:	4647      	mov	r7, r8
 8026fa2:	9307      	str	r3, [sp, #28]
 8026fa4:	9b05      	ldr	r3, [sp, #20]
 8026fa6:	2b00      	cmp	r3, #0
 8026fa8:	f000 8106 	beq.w	80271b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 8026fac:	9901      	ldr	r1, [sp, #4]
 8026fae:	780b      	ldrb	r3, [r1, #0]
 8026fb0:	1c4d      	adds	r5, r1, #1
 8026fb2:	f003 030f 	and.w	r3, r3, #15
 8026fb6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8026fba:	0e19      	lsrs	r1, r3, #24
 8026fbc:	f040 8136 	bne.w	802722c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x344>
 8026fc0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8026fc4:	3003      	adds	r0, #3
 8026fc6:	f1bc 0f01 	cmp.w	ip, #1
 8026fca:	f340 80ba 	ble.w	8027142 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 8026fce:	f1ac 0302 	sub.w	r3, ip, #2
 8026fd2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026fd6:	f10c 0e01 	add.w	lr, ip, #1
 8026fda:	9302      	str	r3, [sp, #8]
 8026fdc:	eb05 060e 	add.w	r6, r5, lr
 8026fe0:	1d84      	adds	r4, r0, #6
 8026fe2:	e00b      	b.n	8026ffc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8026fe4:	f003 030f 	and.w	r3, r3, #15
 8026fe8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8026fec:	3501      	adds	r5, #1
 8026fee:	0e19      	lsrs	r1, r3, #24
 8026ff0:	d155      	bne.n	802709e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8026ff2:	42b5      	cmp	r5, r6
 8026ff4:	f104 0406 	add.w	r4, r4, #6
 8026ff8:	f000 809a 	beq.w	8027130 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>
 8026ffc:	782b      	ldrb	r3, [r5, #0]
 8026ffe:	0919      	lsrs	r1, r3, #4
 8027000:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8027004:	ea5f 6811 	movs.w	r8, r1, lsr #24
 8027008:	d0ec      	beq.n	8026fe4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 802700a:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 802700e:	f3c1 4907 	ubfx	r9, r1, #16, #8
 8027012:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027016:	fa5f f38a 	uxtb.w	r3, sl
 802701a:	b2c9      	uxtb	r1, r1
 802701c:	fa5f fb89 	uxtb.w	fp, r9
 8027020:	f000 80bf 	beq.w	80271a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ba>
 8027024:	fb08 f807 	mul.w	r8, r8, r7
 8027028:	f108 0901 	add.w	r9, r8, #1
 802702c:	eb09 2828 	add.w	r8, r9, r8, asr #8
 8027030:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027034:	ea6f 0908 	mvn.w	r9, r8
 8027038:	fa1f f888 	uxth.w	r8, r8
 802703c:	fb11 f108 	smulbb	r1, r1, r8
 8027040:	fb13 f308 	smulbb	r3, r3, r8
 8027044:	fb1b f808 	smulbb	r8, fp, r8
 8027048:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 802704c:	fa5f f989 	uxtb.w	r9, r9
 8027050:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 8027054:	fb0b 1109 	mla	r1, fp, r9, r1
 8027058:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 802705c:	fb0a 3309 	mla	r3, sl, r9, r3
 8027060:	fb0b 8809 	mla	r8, fp, r9, r8
 8027064:	b289      	uxth	r1, r1
 8027066:	fa1f fa83 	uxth.w	sl, r3
 802706a:	fa1f f888 	uxth.w	r8, r8
 802706e:	f101 0b01 	add.w	fp, r1, #1
 8027072:	f10a 0301 	add.w	r3, sl, #1
 8027076:	f108 0901 	add.w	r9, r8, #1
 802707a:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802707e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8027082:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8027086:	121b      	asrs	r3, r3, #8
 8027088:	1209      	asrs	r1, r1, #8
 802708a:	ea4f 2828 	mov.w	r8, r8, asr #8
 802708e:	f804 1c06 	strb.w	r1, [r4, #-6]
 8027092:	f804 3c05 	strb.w	r3, [r4, #-5]
 8027096:	f804 8c04 	strb.w	r8, [r4, #-4]
 802709a:	782b      	ldrb	r3, [r5, #0]
 802709c:	e7a2      	b.n	8026fe4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 802709e:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 80270a2:	f3c3 4907 	ubfx	r9, r3, #16, #8
 80270a6:	29ff      	cmp	r1, #255	@ 0xff
 80270a8:	fa5f f88a 	uxtb.w	r8, sl
 80270ac:	b2db      	uxtb	r3, r3
 80270ae:	fa5f fb89 	uxtb.w	fp, r9
 80270b2:	d06d      	beq.n	8027190 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 80270b4:	fb01 f107 	mul.w	r1, r1, r7
 80270b8:	f101 0901 	add.w	r9, r1, #1
 80270bc:	eb09 2121 	add.w	r1, r9, r1, asr #8
 80270c0:	1209      	asrs	r1, r1, #8
 80270c2:	ea6f 0901 	mvn.w	r9, r1
 80270c6:	b289      	uxth	r1, r1
 80270c8:	fb13 f301 	smulbb	r3, r3, r1
 80270cc:	fb18 f801 	smulbb	r8, r8, r1
 80270d0:	fb1b f101 	smulbb	r1, fp, r1
 80270d4:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 80270d8:	fa5f f989 	uxtb.w	r9, r9
 80270dc:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 80270e0:	fb0b 3309 	mla	r3, fp, r9, r3
 80270e4:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 80270e8:	fb0a 8809 	mla	r8, sl, r9, r8
 80270ec:	fb0b 1109 	mla	r1, fp, r9, r1
 80270f0:	fa1f fa88 	uxth.w	sl, r8
 80270f4:	fa1f fb83 	uxth.w	fp, r3
 80270f8:	b289      	uxth	r1, r1
 80270fa:	f10b 0801 	add.w	r8, fp, #1
 80270fe:	f10a 0301 	add.w	r3, sl, #1
 8027102:	f101 0901 	add.w	r9, r1, #1
 8027106:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 802710a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 802710e:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8027112:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 8027116:	121b      	asrs	r3, r3, #8
 8027118:	1209      	asrs	r1, r1, #8
 802711a:	42b5      	cmp	r5, r6
 802711c:	f804 bc03 	strb.w	fp, [r4, #-3]
 8027120:	f804 3c02 	strb.w	r3, [r4, #-2]
 8027124:	f804 1c01 	strb.w	r1, [r4, #-1]
 8027128:	f104 0406 	add.w	r4, r4, #6
 802712c:	f47f af66 	bne.w	8026ffc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027130:	9b02      	ldr	r3, [sp, #8]
 8027132:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8027136:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802713a:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 802713e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027142:	f1bc 0f01 	cmp.w	ip, #1
 8027146:	d106      	bne.n	8027156 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8027148:	782b      	ldrb	r3, [r5, #0]
 802714a:	091b      	lsrs	r3, r3, #4
 802714c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8027150:	0e19      	lsrs	r1, r3, #24
 8027152:	d135      	bne.n	80271c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 8027154:	3003      	adds	r0, #3
 8027156:	4b53      	ldr	r3, [pc, #332]	@ (80272a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8027158:	9c03      	ldr	r4, [sp, #12]
 802715a:	8819      	ldrh	r1, [r3, #0]
 802715c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027160:	1b09      	subs	r1, r1, r4
 8027162:	9c04      	ldr	r4, [sp, #16]
 8027164:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027168:	4408      	add	r0, r1
 802716a:	4423      	add	r3, r4
 802716c:	9901      	ldr	r1, [sp, #4]
 802716e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027172:	eb01 0363 	add.w	r3, r1, r3, asr #1
 8027176:	9301      	str	r3, [sp, #4]
 8027178:	9b06      	ldr	r3, [sp, #24]
 802717a:	4283      	cmp	r3, r0
 802717c:	f63f af12 	bhi.w	8026fa4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8027180:	4b47      	ldr	r3, [pc, #284]	@ (80272a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8027182:	6818      	ldr	r0, [r3, #0]
 8027184:	6803      	ldr	r3, [r0, #0]
 8027186:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027188:	4798      	blx	r3
 802718a:	b00d      	add	sp, #52	@ 0x34
 802718c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027190:	2fff      	cmp	r7, #255	@ 0xff
 8027192:	d18f      	bne.n	80270b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8027194:	f804 3c03 	strb.w	r3, [r4, #-3]
 8027198:	f804 ac02 	strb.w	sl, [r4, #-2]
 802719c:	f804 9c01 	strb.w	r9, [r4, #-1]
 80271a0:	e727      	b.n	8026ff2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 80271a2:	2fff      	cmp	r7, #255	@ 0xff
 80271a4:	f47f af3e 	bne.w	8027024 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80271a8:	f804 1c06 	strb.w	r1, [r4, #-6]
 80271ac:	f804 ac05 	strb.w	sl, [r4, #-5]
 80271b0:	f804 9c04 	strb.w	r9, [r4, #-4]
 80271b4:	782b      	ldrb	r3, [r5, #0]
 80271b6:	e715      	b.n	8026fe4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 80271b8:	9d01      	ldr	r5, [sp, #4]
 80271ba:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80271be:	e702      	b.n	8026fc6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xde>
 80271c0:	f3c3 2507 	ubfx	r5, r3, #8, #8
 80271c4:	f3c3 4407 	ubfx	r4, r3, #16, #8
 80271c8:	29ff      	cmp	r1, #255	@ 0xff
 80271ca:	fa5f fc85 	uxtb.w	ip, r5
 80271ce:	b2db      	uxtb	r3, r3
 80271d0:	b2e6      	uxtb	r6, r4
 80271d2:	d069      	beq.n	80272a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80271d4:	fb01 f107 	mul.w	r1, r1, r7
 80271d8:	1c4c      	adds	r4, r1, #1
 80271da:	eb04 2121 	add.w	r1, r4, r1, asr #8
 80271de:	120c      	asrs	r4, r1, #8
 80271e0:	43e1      	mvns	r1, r4
 80271e2:	b2a4      	uxth	r4, r4
 80271e4:	fb13 f304 	smulbb	r3, r3, r4
 80271e8:	fb1c fc04 	smulbb	ip, ip, r4
 80271ec:	fb16 f404 	smulbb	r4, r6, r4
 80271f0:	7806      	ldrb	r6, [r0, #0]
 80271f2:	b2c9      	uxtb	r1, r1
 80271f4:	fb06 3301 	mla	r3, r6, r1, r3
 80271f8:	7845      	ldrb	r5, [r0, #1]
 80271fa:	7886      	ldrb	r6, [r0, #2]
 80271fc:	fb05 c501 	mla	r5, r5, r1, ip
 8027200:	fb06 4401 	mla	r4, r6, r1, r4
 8027204:	b29b      	uxth	r3, r3
 8027206:	b2ad      	uxth	r5, r5
 8027208:	b2a4      	uxth	r4, r4
 802720a:	1c5e      	adds	r6, r3, #1
 802720c:	f105 0c01 	add.w	ip, r5, #1
 8027210:	1c61      	adds	r1, r4, #1
 8027212:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8027216:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802721a:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 802721e:	121b      	asrs	r3, r3, #8
 8027220:	122d      	asrs	r5, r5, #8
 8027222:	1209      	asrs	r1, r1, #8
 8027224:	7003      	strb	r3, [r0, #0]
 8027226:	7045      	strb	r5, [r0, #1]
 8027228:	7081      	strb	r1, [r0, #2]
 802722a:	e793      	b.n	8027154 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 802722c:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8027230:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027234:	29ff      	cmp	r1, #255	@ 0xff
 8027236:	fa5f fe86 	uxtb.w	lr, r6
 802723a:	b2db      	uxtb	r3, r3
 802723c:	fa5f fc84 	uxtb.w	ip, r4
 8027240:	d038      	beq.n	80272b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 8027242:	fb01 f107 	mul.w	r1, r1, r7
 8027246:	1c4c      	adds	r4, r1, #1
 8027248:	eb04 2421 	add.w	r4, r4, r1, asr #8
 802724c:	1224      	asrs	r4, r4, #8
 802724e:	43e1      	mvns	r1, r4
 8027250:	b2a4      	uxth	r4, r4
 8027252:	fb13 f304 	smulbb	r3, r3, r4
 8027256:	fb1e fe04 	smulbb	lr, lr, r4
 802725a:	fb1c f404 	smulbb	r4, ip, r4
 802725e:	f890 c000 	ldrb.w	ip, [r0]
 8027262:	b2c9      	uxtb	r1, r1
 8027264:	fb0c 3301 	mla	r3, ip, r1, r3
 8027268:	7846      	ldrb	r6, [r0, #1]
 802726a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802726e:	fb06 e601 	mla	r6, r6, r1, lr
 8027272:	fb0c 4401 	mla	r4, ip, r1, r4
 8027276:	b29b      	uxth	r3, r3
 8027278:	b2b6      	uxth	r6, r6
 802727a:	b2a4      	uxth	r4, r4
 802727c:	f103 0c01 	add.w	ip, r3, #1
 8027280:	f106 0e01 	add.w	lr, r6, #1
 8027284:	1c61      	adds	r1, r4, #1
 8027286:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802728a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802728e:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 8027292:	121b      	asrs	r3, r3, #8
 8027294:	1236      	asrs	r6, r6, #8
 8027296:	1209      	asrs	r1, r1, #8
 8027298:	7003      	strb	r3, [r0, #0]
 802729a:	7046      	strb	r6, [r0, #1]
 802729c:	7081      	strb	r1, [r0, #2]
 802729e:	e68f      	b.n	8026fc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 80272a0:	20082ec4 	.word	0x20082ec4
 80272a4:	20082ebe 	.word	0x20082ebe
 80272a8:	2fff      	cmp	r7, #255	@ 0xff
 80272aa:	d193      	bne.n	80271d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 80272ac:	7003      	strb	r3, [r0, #0]
 80272ae:	7045      	strb	r5, [r0, #1]
 80272b0:	7084      	strb	r4, [r0, #2]
 80272b2:	e74f      	b.n	8027154 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 80272b4:	2fff      	cmp	r7, #255	@ 0xff
 80272b6:	d1c4      	bne.n	8027242 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35a>
 80272b8:	7003      	strb	r3, [r0, #0]
 80272ba:	7046      	strb	r6, [r0, #1]
 80272bc:	7084      	strb	r4, [r0, #2]
 80272be:	e67f      	b.n	8026fc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 80272c0:	4b03      	ldr	r3, [pc, #12]	@ (80272d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e8>)
 80272c2:	4a04      	ldr	r2, [pc, #16]	@ (80272d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ec>)
 80272c4:	f640 11b5 	movw	r1, #2485	@ 0x9b5
 80272c8:	4803      	ldr	r0, [pc, #12]	@ (80272d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f0>)
 80272ca:	f00b f8f5 	bl	80324b8 <__assert_func>
 80272ce:	bf00      	nop
 80272d0:	0803636c 	.word	0x0803636c
 80272d4:	080375ec 	.word	0x080375ec
 80272d8:	08036278 	.word	0x08036278

080272dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80272dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80272e0:	b091      	sub	sp, #68	@ 0x44
 80272e2:	9208      	str	r2, [sp, #32]
 80272e4:	9100      	str	r1, [sp, #0]
 80272e6:	7812      	ldrb	r2, [r2, #0]
 80272e8:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 80272ec:	461c      	mov	r4, r3
 80272ee:	9106      	str	r1, [sp, #24]
 80272f0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80272f2:	2a00      	cmp	r2, #0
 80272f4:	f040 8211 	bne.w	802771a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 80272f8:	6820      	ldr	r0, [r4, #0]
 80272fa:	6861      	ldr	r1, [r4, #4]
 80272fc:	aa0c      	add	r2, sp, #48	@ 0x30
 80272fe:	c203      	stmia	r2!, {r0, r1}
 8027300:	6818      	ldr	r0, [r3, #0]
 8027302:	6859      	ldr	r1, [r3, #4]
 8027304:	aa0e      	add	r2, sp, #56	@ 0x38
 8027306:	c203      	stmia	r2!, {r0, r1}
 8027308:	a80c      	add	r0, sp, #48	@ 0x30
 802730a:	f7e5 fcf9 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802730e:	4621      	mov	r1, r4
 8027310:	a80e      	add	r0, sp, #56	@ 0x38
 8027312:	f7e5 fd1d 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027316:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802731a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802731e:	f340 815b 	ble.w	80275d8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>
 8027322:	2201      	movs	r2, #1
 8027324:	b299      	uxth	r1, r3
 8027326:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 802732a:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 802732e:	fb93 f5f2 	sdiv	r5, r3, r2
 8027332:	b2ae      	uxth	r6, r5
 8027334:	fb02 3416 	mls	r4, r2, r6, r3
 8027338:	fb14 0101 	smlabb	r1, r4, r1, r0
 802733c:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8027340:	fa1f f881 	uxth.w	r8, r1
 8027344:	4414      	add	r4, r2
 8027346:	3c01      	subs	r4, #1
 8027348:	fb94 f4f2 	sdiv	r4, r4, r2
 802734c:	b136      	cbz	r6, 802735c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x80>
 802734e:	9a08      	ldr	r2, [sp, #32]
 8027350:	9900      	ldr	r1, [sp, #0]
 8027352:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8027356:	ba12      	rev	r2, r2
 8027358:	4411      	add	r1, r2
 802735a:	9100      	str	r1, [sp, #0]
 802735c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8027360:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8027364:	4402      	add	r2, r0
 8027366:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 802736a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 802736e:	440b      	add	r3, r1
 8027370:	4616      	mov	r6, r2
 8027372:	499c      	ldr	r1, [pc, #624]	@ (80275e4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027374:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8027378:	6808      	ldr	r0, [r1, #0]
 802737a:	9205      	str	r2, [sp, #20]
 802737c:	6803      	ldr	r3, [r0, #0]
 802737e:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8027382:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027384:	4798      	blx	r3
 8027386:	f1b8 0f00 	cmp.w	r8, #0
 802738a:	bf0c      	ite	eq
 802738c:	4633      	moveq	r3, r6
 802738e:	2300      	movne	r3, #0
 8027390:	4995      	ldr	r1, [pc, #596]	@ (80275e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8027392:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8027396:	8809      	ldrh	r1, [r1, #0]
 8027398:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802739c:	fb05 f501 	mul.w	r5, r5, r1
 80273a0:	fb01 6202 	mla	r2, r1, r2, r6
 80273a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80273a8:	4410      	add	r0, r2
 80273aa:	b2a4      	uxth	r4, r4
 80273ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80273b0:	1942      	adds	r2, r0, r5
 80273b2:	00a4      	lsls	r4, r4, #2
 80273b4:	1d21      	adds	r1, r4, #4
 80273b6:	4290      	cmp	r0, r2
 80273b8:	9201      	str	r2, [sp, #4]
 80273ba:	9109      	str	r1, [sp, #36]	@ 0x24
 80273bc:	b29f      	uxth	r7, r3
 80273be:	d21a      	bcs.n	80273f6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 80273c0:	2300      	movs	r3, #0
 80273c2:	4641      	mov	r1, r8
 80273c4:	9302      	str	r3, [sp, #8]
 80273c6:	b963      	cbnz	r3, 80273e2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80273c8:	9d00      	ldr	r5, [sp, #0]
 80273ca:	782a      	ldrb	r2, [r5, #0]
 80273cc:	0993      	lsrs	r3, r2, #6
 80273ce:	1e5c      	subs	r4, r3, #1
 80273d0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80273d4:	2c02      	cmp	r4, #2
 80273d6:	9202      	str	r2, [sp, #8]
 80273d8:	f200 8099 	bhi.w	802750e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x232>
 80273dc:	3501      	adds	r5, #1
 80273de:	9500      	str	r5, [sp, #0]
 80273e0:	b29b      	uxth	r3, r3
 80273e2:	b181      	cbz	r1, 8027406 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 80273e4:	428b      	cmp	r3, r1
 80273e6:	f080 808c 	bcs.w	8027502 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 80273ea:	1acb      	subs	r3, r1, r3
 80273ec:	b299      	uxth	r1, r3
 80273ee:	2300      	movs	r3, #0
 80273f0:	9a01      	ldr	r2, [sp, #4]
 80273f2:	4290      	cmp	r0, r2
 80273f4:	d3e7      	bcc.n	80273c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xea>
 80273f6:	4b7b      	ldr	r3, [pc, #492]	@ (80275e4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 80273f8:	6818      	ldr	r0, [r3, #0]
 80273fa:	6803      	ldr	r3, [r0, #0]
 80273fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80273fe:	4798      	blx	r3
 8027400:	b011      	add	sp, #68	@ 0x44
 8027402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027406:	2204      	movs	r2, #4
 8027408:	4615      	mov	r5, r2
 802740a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802740c:	9a02      	ldr	r2, [sp, #8]
 802740e:	42bb      	cmp	r3, r7
 8027410:	fb15 4202 	smlabb	r2, r5, r2, r4
 8027414:	9c08      	ldr	r4, [sp, #32]
 8027416:	58a5      	ldr	r5, [r4, r2]
 8027418:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802741c:	f0c0 808d 	bcc.w	802753a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 8027420:	1bda      	subs	r2, r3, r7
 8027422:	b292      	uxth	r2, r2
 8027424:	9203      	str	r2, [sp, #12]
 8027426:	2f00      	cmp	r7, #0
 8027428:	d076      	beq.n	8027518 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802742a:	9704      	str	r7, [sp, #16]
 802742c:	9107      	str	r1, [sp, #28]
 802742e:	9a06      	ldr	r2, [sp, #24]
 8027430:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8027434:	fb02 f408 	mul.w	r4, r2, r8
 8027438:	1c62      	adds	r2, r4, #1
 802743a:	eb02 2224 	add.w	r2, r2, r4, asr #8
 802743e:	1212      	asrs	r2, r2, #8
 8027440:	43d4      	mvns	r4, r2
 8027442:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8027446:	b292      	uxth	r2, r2
 8027448:	b2ed      	uxtb	r5, r5
 802744a:	fa5f f98b 	uxtb.w	r9, fp
 802744e:	fa5f fa86 	uxtb.w	sl, r6
 8027452:	fb15 fc02 	smulbb	ip, r5, r2
 8027456:	fb19 fe02 	smulbb	lr, r9, r2
 802745a:	fb1a f202 	smulbb	r2, sl, r2
 802745e:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 8027462:	b2e4      	uxtb	r4, r4
 8027464:	fa1f fc8c 	uxth.w	ip, ip
 8027468:	fa1f fe8e 	uxth.w	lr, lr
 802746c:	b292      	uxth	r2, r2
 802746e:	f1b8 0f00 	cmp.w	r8, #0
 8027472:	d06b      	beq.n	802754c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8027474:	9e06      	ldr	r6, [sp, #24]
 8027476:	2eff      	cmp	r6, #255	@ 0xff
 8027478:	d070      	beq.n	802755c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x280>
 802747a:	9d04      	ldr	r5, [sp, #16]
 802747c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027480:	f105 36ff 	add.w	r6, r5, #4294967295
 8027484:	b2b5      	uxth	r5, r6
 8027486:	9504      	str	r5, [sp, #16]
 8027488:	f000 810e 	beq.w	80276a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 802748c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027490:	f100 0a06 	add.w	sl, r0, #6
 8027494:	44aa      	add	sl, r5
 8027496:	f100 0903 	add.w	r9, r0, #3
 802749a:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 802749e:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80274a2:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 80274a6:	fb08 c804 	mla	r8, r8, r4, ip
 80274aa:	fb06 e604 	mla	r6, r6, r4, lr
 80274ae:	fb05 2504 	mla	r5, r5, r4, r2
 80274b2:	fa1f f888 	uxth.w	r8, r8
 80274b6:	b2b6      	uxth	r6, r6
 80274b8:	f108 0b01 	add.w	fp, r8, #1
 80274bc:	b2ad      	uxth	r5, r5
 80274be:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80274c2:	f106 0b01 	add.w	fp, r6, #1
 80274c6:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80274ca:	f105 0b01 	add.w	fp, r5, #1
 80274ce:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80274d2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80274d6:	1236      	asrs	r6, r6, #8
 80274d8:	122d      	asrs	r5, r5, #8
 80274da:	f809 8c03 	strb.w	r8, [r9, #-3]
 80274de:	f809 6c02 	strb.w	r6, [r9, #-2]
 80274e2:	f809 5c01 	strb.w	r5, [r9, #-1]
 80274e6:	f109 0903 	add.w	r9, r9, #3
 80274ea:	45ca      	cmp	sl, r9
 80274ec:	d1d5      	bne.n	802749a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 80274ee:	9e04      	ldr	r6, [sp, #16]
 80274f0:	3601      	adds	r6, #1
 80274f2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80274f6:	4430      	add	r0, r6
 80274f8:	42bb      	cmp	r3, r7
 80274fa:	d20d      	bcs.n	8027518 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80274fc:	9b03      	ldr	r3, [sp, #12]
 80274fe:	9f07      	ldr	r7, [sp, #28]
 8027500:	e776      	b.n	80273f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027502:	1a5b      	subs	r3, r3, r1
 8027504:	b29b      	uxth	r3, r3
 8027506:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 802750a:	2100      	movs	r1, #0
 802750c:	e770      	b.n	80273f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802750e:	462a      	mov	r2, r5
 8027510:	3202      	adds	r2, #2
 8027512:	786b      	ldrb	r3, [r5, #1]
 8027514:	9200      	str	r2, [sp, #0]
 8027516:	e764      	b.n	80273e2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027518:	9c05      	ldr	r4, [sp, #20]
 802751a:	4b33      	ldr	r3, [pc, #204]	@ (80275e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 802751c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8027520:	b2a7      	uxth	r7, r4
 8027522:	881a      	ldrh	r2, [r3, #0]
 8027524:	1bc9      	subs	r1, r1, r7
 8027526:	b289      	uxth	r1, r1
 8027528:	1b12      	subs	r2, r2, r4
 802752a:	2900      	cmp	r1, #0
 802752c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027530:	9b03      	ldr	r3, [sp, #12]
 8027532:	bf18      	it	ne
 8027534:	2700      	movne	r7, #0
 8027536:	4410      	add	r0, r2
 8027538:	e75a      	b.n	80273f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802753a:	1afa      	subs	r2, r7, r3
 802753c:	b292      	uxth	r2, r2
 802753e:	9207      	str	r2, [sp, #28]
 8027540:	2b00      	cmp	r3, #0
 8027542:	f000 80f1 	beq.w	8027728 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8027546:	e9cd 1303 	strd	r1, r3, [sp, #12]
 802754a:	e770      	b.n	802742e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802754c:	9a04      	ldr	r2, [sp, #16]
 802754e:	3a01      	subs	r2, #1
 8027550:	b292      	uxth	r2, r2
 8027552:	3201      	adds	r2, #1
 8027554:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027558:	4410      	add	r0, r2
 802755a:	e7cd      	b.n	80274f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802755c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027560:	d044      	beq.n	80275ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x310>
 8027562:	9d04      	ldr	r5, [sp, #16]
 8027564:	f100 0a06 	add.w	sl, r0, #6
 8027568:	1e6e      	subs	r6, r5, #1
 802756a:	b2b5      	uxth	r5, r6
 802756c:	9504      	str	r5, [sp, #16]
 802756e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027572:	44aa      	add	sl, r5
 8027574:	f100 0903 	add.w	r9, r0, #3
 8027578:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 802757c:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 8027580:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027584:	fb08 c804 	mla	r8, r8, r4, ip
 8027588:	fb06 e604 	mla	r6, r6, r4, lr
 802758c:	fb05 2504 	mla	r5, r5, r4, r2
 8027590:	fa1f f888 	uxth.w	r8, r8
 8027594:	b2b6      	uxth	r6, r6
 8027596:	f108 0b01 	add.w	fp, r8, #1
 802759a:	b2ad      	uxth	r5, r5
 802759c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80275a0:	f106 0b01 	add.w	fp, r6, #1
 80275a4:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80275a8:	f105 0b01 	add.w	fp, r5, #1
 80275ac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80275b0:	ea4f 2828 	mov.w	r8, r8, asr #8
 80275b4:	1236      	asrs	r6, r6, #8
 80275b6:	122d      	asrs	r5, r5, #8
 80275b8:	f809 8c03 	strb.w	r8, [r9, #-3]
 80275bc:	f809 6c02 	strb.w	r6, [r9, #-2]
 80275c0:	f809 5c01 	strb.w	r5, [r9, #-1]
 80275c4:	f109 0903 	add.w	r9, r9, #3
 80275c8:	45ca      	cmp	sl, r9
 80275ca:	d1d5      	bne.n	8027578 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>
 80275cc:	9a04      	ldr	r2, [sp, #16]
 80275ce:	3201      	adds	r2, #1
 80275d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80275d4:	4410      	add	r0, r2
 80275d6:	e78f      	b.n	80274f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80275d8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80275dc:	b299      	uxth	r1, r3
 80275de:	fb94 f2f1 	sdiv	r2, r4, r1
 80275e2:	e6a0      	b.n	8027326 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 80275e4:	20082ec4 	.word	0x20082ec4
 80275e8:	20082ebe 	.word	0x20082ebe
 80275ec:	9e04      	ldr	r6, [sp, #16]
 80275ee:	1e72      	subs	r2, r6, #1
 80275f0:	b292      	uxth	r2, r2
 80275f2:	2a02      	cmp	r2, #2
 80275f4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80275f6:	f240 808d 	bls.w	8027714 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80275fa:	f04f 0800 	mov.w	r8, #0
 80275fe:	46c6      	mov	lr, r8
 8027600:	46c4      	mov	ip, r8
 8027602:	4602      	mov	r2, r0
 8027604:	4644      	mov	r4, r8
 8027606:	f369 0e07 	bfi	lr, r9, #0, #8
 802760a:	f36a 0807 	bfi	r8, sl, #0, #8
 802760e:	f365 0c07 	bfi	ip, r5, #0, #8
 8027612:	f36a 2e0f 	bfi	lr, sl, #8, #8
 8027616:	f365 280f 	bfi	r8, r5, #8, #8
 802761a:	f369 2c0f 	bfi	ip, r9, #8, #8
 802761e:	f36a 4c17 	bfi	ip, sl, #16, #8
 8027622:	f369 4817 	bfi	r8, r9, #16, #8
 8027626:	f365 4e17 	bfi	lr, r5, #16, #8
 802762a:	f36a 681f 	bfi	r8, sl, #24, #8
 802762e:	9004      	str	r0, [sp, #16]
 8027630:	f369 6e1f 	bfi	lr, r9, #24, #8
 8027634:	f365 6c1f 	bfi	ip, r5, #24, #8
 8027638:	f3c6 0a8f 	ubfx	sl, r6, #2, #16
 802763c:	3401      	adds	r4, #1
 802763e:	fa1f f984 	uxth.w	r9, r4
 8027642:	45d1      	cmp	r9, sl
 8027644:	f8c2 c000 	str.w	ip, [r2]
 8027648:	f8c2 e004 	str.w	lr, [r2, #4]
 802764c:	f8c2 8008 	str.w	r8, [r2, #8]
 8027650:	f102 020c 	add.w	r2, r2, #12
 8027654:	d3f2      	bcc.n	802763c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8027656:	f026 0403 	bic.w	r4, r6, #3
 802765a:	b2a4      	uxth	r4, r4
 802765c:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 8027660:	eba6 0c04 	sub.w	ip, r6, r4
 8027664:	42a6      	cmp	r6, r4
 8027666:	9604      	str	r6, [sp, #16]
 8027668:	eb0e 0200 	add.w	r2, lr, r0
 802766c:	fa1f fc8c 	uxth.w	ip, ip
 8027670:	d014      	beq.n	802769c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027672:	f10c 34ff 	add.w	r4, ip, #4294967295
 8027676:	f89d 602b 	ldrb.w	r6, [sp, #43]	@ 0x2b
 802767a:	b2a4      	uxth	r4, r4
 802767c:	7015      	strb	r5, [r2, #0]
 802767e:	f882 b001 	strb.w	fp, [r2, #1]
 8027682:	7096      	strb	r6, [r2, #2]
 8027684:	b154      	cbz	r4, 802769c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027686:	f1bc 0f02 	cmp.w	ip, #2
 802768a:	70d5      	strb	r5, [r2, #3]
 802768c:	f882 b004 	strb.w	fp, [r2, #4]
 8027690:	7156      	strb	r6, [r2, #5]
 8027692:	d003      	beq.n	802769c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027694:	7195      	strb	r5, [r2, #6]
 8027696:	f882 b007 	strb.w	fp, [r2, #7]
 802769a:	7216      	strb	r6, [r2, #8]
 802769c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802769e:	3201      	adds	r2, #1
 80276a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80276a4:	4410      	add	r0, r2
 80276a6:	e727      	b.n	80274f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80276a8:	eb05 0a45 	add.w	sl, r5, r5, lsl #1
 80276ac:	1d85      	adds	r5, r0, #6
 80276ae:	44aa      	add	sl, r5
 80276b0:	f100 0903 	add.w	r9, r0, #3
 80276b4:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 80276b8:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80276bc:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 80276c0:	fb08 c804 	mla	r8, r8, r4, ip
 80276c4:	fb06 e604 	mla	r6, r6, r4, lr
 80276c8:	fb05 2504 	mla	r5, r5, r4, r2
 80276cc:	fa1f f888 	uxth.w	r8, r8
 80276d0:	b2b6      	uxth	r6, r6
 80276d2:	f108 0b01 	add.w	fp, r8, #1
 80276d6:	b2ad      	uxth	r5, r5
 80276d8:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80276dc:	f106 0b01 	add.w	fp, r6, #1
 80276e0:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80276e4:	f105 0b01 	add.w	fp, r5, #1
 80276e8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80276ec:	ea4f 2828 	mov.w	r8, r8, asr #8
 80276f0:	1236      	asrs	r6, r6, #8
 80276f2:	122d      	asrs	r5, r5, #8
 80276f4:	f809 8c03 	strb.w	r8, [r9, #-3]
 80276f8:	f809 6c02 	strb.w	r6, [r9, #-2]
 80276fc:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027700:	f109 0903 	add.w	r9, r9, #3
 8027704:	45d1      	cmp	r9, sl
 8027706:	d1d5      	bne.n	80276b4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8027708:	9a04      	ldr	r2, [sp, #16]
 802770a:	3201      	adds	r2, #1
 802770c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027710:	4410      	add	r0, r2
 8027712:	e6f1      	b.n	80274f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027714:	46b4      	mov	ip, r6
 8027716:	4602      	mov	r2, r0
 8027718:	e7ab      	b.n	8027672 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x396>
 802771a:	4b05      	ldr	r3, [pc, #20]	@ (8027730 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 802771c:	4a05      	ldr	r2, [pc, #20]	@ (8027734 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 802771e:	f640 2118 	movw	r1, #2584	@ 0xa18
 8027722:	4805      	ldr	r0, [pc, #20]	@ (8027738 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x45c>)
 8027724:	f00a fec8 	bl	80324b8 <__assert_func>
 8027728:	9f07      	ldr	r7, [sp, #28]
 802772a:	4619      	mov	r1, r3
 802772c:	e660      	b.n	80273f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802772e:	bf00      	nop
 8027730:	0803636c 	.word	0x0803636c
 8027734:	080379f8 	.word	0x080379f8
 8027738:	08036278 	.word	0x08036278

0802773c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802773c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027740:	b09d      	sub	sp, #116	@ 0x74
 8027742:	920e      	str	r2, [sp, #56]	@ 0x38
 8027744:	461c      	mov	r4, r3
 8027746:	7812      	ldrb	r2, [r2, #0]
 8027748:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802774c:	9114      	str	r1, [sp, #80]	@ 0x50
 802774e:	9304      	str	r3, [sp, #16]
 8027750:	2a00      	cmp	r2, #0
 8027752:	f040 8207 	bne.w	8027b64 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8027756:	b913      	cbnz	r3, 802775e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8027758:	b01d      	add	sp, #116	@ 0x74
 802775a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802775e:	6861      	ldr	r1, [r4, #4]
 8027760:	4681      	mov	r9, r0
 8027762:	6820      	ldr	r0, [r4, #0]
 8027764:	ab18      	add	r3, sp, #96	@ 0x60
 8027766:	c303      	stmia	r3!, {r0, r1}
 8027768:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802776a:	6818      	ldr	r0, [r3, #0]
 802776c:	6859      	ldr	r1, [r3, #4]
 802776e:	ab1a      	add	r3, sp, #104	@ 0x68
 8027770:	c303      	stmia	r3!, {r0, r1}
 8027772:	a818      	add	r0, sp, #96	@ 0x60
 8027774:	f7e5 fac4 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027778:	4621      	mov	r1, r4
 802777a:	a81a      	add	r0, sp, #104	@ 0x68
 802777c:	f7e5 fae8 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027780:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 8027784:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8027788:	f340 8151 	ble.w	8027a2e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 802778c:	2301      	movs	r3, #1
 802778e:	b289      	uxth	r1, r1
 8027790:	9316      	str	r3, [sp, #88]	@ 0x58
 8027792:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 8027796:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 802779a:	fb90 f4f3 	sdiv	r4, r0, r3
 802779e:	441a      	add	r2, r3
 80277a0:	3a01      	subs	r2, #1
 80277a2:	fb92 f2f3 	sdiv	r2, r2, r3
 80277a6:	b2a4      	uxth	r4, r4
 80277a8:	fb03 0314 	mls	r3, r3, r4, r0
 80277ac:	9415      	str	r4, [sp, #84]	@ 0x54
 80277ae:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 80277b2:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 80277b6:	fb13 4101 	smlabb	r1, r3, r1, r4
 80277ba:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 80277be:	4bba      	ldr	r3, [pc, #744]	@ (8027aa8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 80277c0:	4434      	add	r4, r6
 80277c2:	4405      	add	r5, r0
 80277c4:	6818      	ldr	r0, [r3, #0]
 80277c6:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 80277ca:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 80277ce:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 80277d2:	6803      	ldr	r3, [r0, #0]
 80277d4:	3201      	adds	r2, #1
 80277d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80277d8:	9609      	str	r6, [sp, #36]	@ 0x24
 80277da:	fa1f f881 	uxth.w	r8, r1
 80277de:	b294      	uxth	r4, r2
 80277e0:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 80277e4:	4798      	blx	r3
 80277e6:	2200      	movs	r2, #0
 80277e8:	f1b8 0f00 	cmp.w	r8, #0
 80277ec:	bf0c      	ite	eq
 80277ee:	4633      	moveq	r3, r6
 80277f0:	2300      	movne	r3, #0
 80277f2:	49ae      	ldr	r1, [pc, #696]	@ (8027aac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 80277f4:	9213      	str	r2, [sp, #76]	@ 0x4c
 80277f6:	8809      	ldrh	r1, [r1, #0]
 80277f8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 80277fc:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 8027800:	fb01 f505 	mul.w	r5, r1, r5
 8027804:	fb01 6202 	mla	r2, r1, r2, r6
 8027808:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802780c:	1882      	adds	r2, r0, r2
 802780e:	b29b      	uxth	r3, r3
 8027810:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027814:	9200      	str	r2, [sp, #0]
 8027816:	9302      	str	r3, [sp, #8]
 8027818:	442a      	add	r2, r5
 802781a:	f109 030e 	add.w	r3, r9, #14
 802781e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027820:	4647      	mov	r7, r8
 8027822:	4613      	mov	r3, r2
 8027824:	00a4      	lsls	r4, r4, #2
 8027826:	1d21      	adds	r1, r4, #4
 8027828:	9111      	str	r1, [sp, #68]	@ 0x44
 802782a:	9206      	str	r2, [sp, #24]
 802782c:	9a00      	ldr	r2, [sp, #0]
 802782e:	4293      	cmp	r3, r2
 8027830:	f240 80f5 	bls.w	8027a1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027834:	2301      	movs	r3, #1
 8027836:	2600      	movs	r6, #0
 8027838:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802783a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802783c:	9307      	str	r3, [sp, #28]
 802783e:	fa10 f282 	uxtah	r2, r0, r2
 8027842:	0092      	lsls	r2, r2, #2
 8027844:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8027846:	3204      	adds	r2, #4
 8027848:	4410      	add	r0, r2
 802784a:	7883      	ldrb	r3, [r0, #2]
 802784c:	7845      	ldrb	r5, [r0, #1]
 802784e:	021b      	lsls	r3, r3, #8
 8027850:	78c0      	ldrb	r0, [r0, #3]
 8027852:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8027856:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027858:	4304      	orrs	r4, r0
 802785a:	1928      	adds	r0, r5, r4
 802785c:	7843      	ldrb	r3, [r0, #1]
 802785e:	3001      	adds	r0, #1
 8027860:	9610      	str	r6, [sp, #64]	@ 0x40
 8027862:	9003      	str	r0, [sp, #12]
 8027864:	4630      	mov	r0, r6
 8027866:	2601      	movs	r6, #1
 8027868:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 802786c:	46b0      	mov	r8, r6
 802786e:	fbb7 f1f1 	udiv	r1, r7, r1
 8027872:	5d2c      	ldrb	r4, [r5, r4]
 8027874:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027876:	021b      	lsls	r3, r3, #8
 8027878:	5caa      	ldrb	r2, [r5, r2]
 802787a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802787c:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 8027880:	431c      	orrs	r4, r3
 8027882:	920b      	str	r2, [sp, #44]	@ 0x2c
 8027884:	1a69      	subs	r1, r5, r1
 8027886:	3201      	adds	r2, #1
 8027888:	f889 400d 	strb.w	r4, [r9, #13]
 802788c:	9205      	str	r2, [sp, #20]
 802788e:	b2a4      	uxth	r4, r4
 8027890:	b28a      	uxth	r2, r1
 8027892:	9408      	str	r4, [sp, #32]
 8027894:	9212      	str	r2, [sp, #72]	@ 0x48
 8027896:	2f00      	cmp	r7, #0
 8027898:	d034      	beq.n	8027904 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 802789a:	42be      	cmp	r6, r7
 802789c:	f080 80cf 	bcs.w	8027a3e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x302>
 80278a0:	1bbf      	subs	r7, r7, r6
 80278a2:	b2bf      	uxth	r7, r7
 80278a4:	9b06      	ldr	r3, [sp, #24]
 80278a6:	9a00      	ldr	r2, [sp, #0]
 80278a8:	4293      	cmp	r3, r2
 80278aa:	f240 80b8 	bls.w	8027a1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 80278ae:	9803      	ldr	r0, [sp, #12]
 80278b0:	f1c8 0107 	rsb	r1, r8, #7
 80278b4:	7842      	ldrb	r2, [r0, #1]
 80278b6:	7803      	ldrb	r3, [r0, #0]
 80278b8:	408a      	lsls	r2, r1
 80278ba:	fa43 f308 	asr.w	r3, r3, r8
 80278be:	0052      	lsls	r2, r2, #1
 80278c0:	f108 0801 	add.w	r8, r8, #1
 80278c4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80278c8:	b2db      	uxtb	r3, r3
 80278ca:	fa5f f888 	uxtb.w	r8, r8
 80278ce:	4313      	orrs	r3, r2
 80278d0:	f1b8 0f08 	cmp.w	r8, #8
 80278d4:	b29a      	uxth	r2, r3
 80278d6:	f000 80e0 	beq.w	8027a9a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 80278da:	3001      	adds	r0, #1
 80278dc:	9003      	str	r0, [sp, #12]
 80278de:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80278e0:	4291      	cmp	r1, r2
 80278e2:	f0c0 80bc 	bcc.w	8027a5e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x322>
 80278e6:	9905      	ldr	r1, [sp, #20]
 80278e8:	b2db      	uxtb	r3, r3
 80278ea:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80278ee:	f889 300d 	strb.w	r3, [r9, #13]
 80278f2:	f04f 0601 	mov.w	r6, #1
 80278f6:	f0c0 8121 	bcc.w	8027b3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x400>
 80278fa:	e9cd 6207 	strd	r6, r2, [sp, #28]
 80278fe:	2000      	movs	r0, #0
 8027900:	2f00      	cmp	r7, #0
 8027902:	d1ca      	bne.n	802789a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8027904:	9b02      	ldr	r3, [sp, #8]
 8027906:	429e      	cmp	r6, r3
 8027908:	461a      	mov	r2, r3
 802790a:	f0c0 80f0 	bcc.w	8027aee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b2>
 802790e:	1af3      	subs	r3, r6, r3
 8027910:	b29b      	uxth	r3, r3
 8027912:	930a      	str	r3, [sp, #40]	@ 0x28
 8027914:	2a00      	cmp	r2, #0
 8027916:	f000 80cb 	beq.w	8027ab0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>
 802791a:	4694      	mov	ip, r2
 802791c:	970f      	str	r7, [sp, #60]	@ 0x3c
 802791e:	9b00      	ldr	r3, [sp, #0]
 8027920:	eb00 0e0c 	add.w	lr, r0, ip
 8027924:	960c      	str	r6, [sp, #48]	@ 0x30
 8027926:	970d      	str	r7, [sp, #52]	@ 0x34
 8027928:	fa1f fe8e 	uxth.w	lr, lr
 802792c:	1cdd      	adds	r5, r3, #3
 802792e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8027930:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8027932:	e037      	b.n	80279a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027934:	9a04      	ldr	r2, [sp, #16]
 8027936:	9b01      	ldr	r3, [sp, #4]
 8027938:	fb02 f101 	mul.w	r1, r2, r1
 802793c:	1c4a      	adds	r2, r1, #1
 802793e:	eb02 2121 	add.w	r1, r2, r1, asr #8
 8027942:	1209      	asrs	r1, r1, #8
 8027944:	43ca      	mvns	r2, r1
 8027946:	b289      	uxth	r1, r1
 8027948:	fb13 f301 	smulbb	r3, r3, r1
 802794c:	fb1b fb01 	smulbb	fp, fp, r1
 8027950:	fb1a f101 	smulbb	r1, sl, r1
 8027954:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 8027958:	b2d2      	uxtb	r2, r2
 802795a:	fb0a 3302 	mla	r3, sl, r2, r3
 802795e:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027962:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 8027966:	fb04 b402 	mla	r4, r4, r2, fp
 802796a:	fb0a 1102 	mla	r1, sl, r2, r1
 802796e:	b29b      	uxth	r3, r3
 8027970:	b2a4      	uxth	r4, r4
 8027972:	b289      	uxth	r1, r1
 8027974:	f103 0a01 	add.w	sl, r3, #1
 8027978:	f104 0b01 	add.w	fp, r4, #1
 802797c:	1c4a      	adds	r2, r1, #1
 802797e:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 8027982:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027986:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802798a:	121b      	asrs	r3, r3, #8
 802798c:	1224      	asrs	r4, r4, #8
 802798e:	1209      	asrs	r1, r1, #8
 8027990:	f805 3c03 	strb.w	r3, [r5, #-3]
 8027994:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027998:	f805 1c01 	strb.w	r1, [r5, #-1]
 802799c:	4570      	cmp	r0, lr
 802799e:	f105 0503 	add.w	r5, r5, #3
 80279a2:	d024      	beq.n	80279ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 80279a4:	2204      	movs	r2, #4
 80279a6:	eb09 0300 	add.w	r3, r9, r0
 80279aa:	7b5b      	ldrb	r3, [r3, #13]
 80279ac:	3001      	adds	r0, #1
 80279ae:	fb12 6303 	smlabb	r3, r2, r3, r6
 80279b2:	58fb      	ldr	r3, [r7, r3]
 80279b4:	b280      	uxth	r0, r0
 80279b6:	0e19      	lsrs	r1, r3, #24
 80279b8:	d0f0      	beq.n	802799c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x260>
 80279ba:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80279be:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80279c2:	29ff      	cmp	r1, #255	@ 0xff
 80279c4:	b2db      	uxtb	r3, r3
 80279c6:	fa5f fb84 	uxtb.w	fp, r4
 80279ca:	9301      	str	r3, [sp, #4]
 80279cc:	fa5f fa82 	uxtb.w	sl, r2
 80279d0:	d1b0      	bne.n	8027934 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80279d2:	9b04      	ldr	r3, [sp, #16]
 80279d4:	2bff      	cmp	r3, #255	@ 0xff
 80279d6:	d1ad      	bne.n	8027934 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80279d8:	9b01      	ldr	r3, [sp, #4]
 80279da:	4570      	cmp	r0, lr
 80279dc:	f805 3c03 	strb.w	r3, [r5, #-3]
 80279e0:	f805 4c02 	strb.w	r4, [r5, #-2]
 80279e4:	f805 2c01 	strb.w	r2, [r5, #-1]
 80279e8:	f105 0503 	add.w	r5, r5, #3
 80279ec:	d1da      	bne.n	80279a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 80279ee:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 80279f2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80279f6:	fa1f fc8c 	uxth.w	ip, ip
 80279fa:	9b00      	ldr	r3, [sp, #0]
 80279fc:	f10c 0c01 	add.w	ip, ip, #1
 8027a00:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8027a04:	4463      	add	r3, ip
 8027a06:	9300      	str	r3, [sp, #0]
 8027a08:	9b02      	ldr	r3, [sp, #8]
 8027a0a:	429e      	cmp	r6, r3
 8027a0c:	d251      	bcs.n	8027ab2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8027a0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027a10:	9a00      	ldr	r2, [sp, #0]
 8027a12:	9302      	str	r3, [sp, #8]
 8027a14:	9b06      	ldr	r3, [sp, #24]
 8027a16:	4670      	mov	r0, lr
 8027a18:	4293      	cmp	r3, r2
 8027a1a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027a1c:	d81b      	bhi.n	8027a56 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x31a>
 8027a1e:	4b22      	ldr	r3, [pc, #136]	@ (8027aa8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027a20:	6818      	ldr	r0, [r3, #0]
 8027a22:	6803      	ldr	r3, [r0, #0]
 8027a24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027a26:	4798      	blx	r3
 8027a28:	b01d      	add	sp, #116	@ 0x74
 8027a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a2e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8027a32:	b289      	uxth	r1, r1
 8027a34:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a38:	b29a      	uxth	r2, r3
 8027a3a:	9216      	str	r2, [sp, #88]	@ 0x58
 8027a3c:	e6a9      	b.n	8027792 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8027a3e:	1bf6      	subs	r6, r6, r7
 8027a40:	4438      	add	r0, r7
 8027a42:	2700      	movs	r7, #0
 8027a44:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027a48:	b2b6      	uxth	r6, r6
 8027a4a:	b280      	uxth	r0, r0
 8027a4c:	9302      	str	r3, [sp, #8]
 8027a4e:	9b06      	ldr	r3, [sp, #24]
 8027a50:	9a00      	ldr	r2, [sp, #0]
 8027a52:	4293      	cmp	r3, r2
 8027a54:	d9e3      	bls.n	8027a1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027a56:	2e00      	cmp	r6, #0
 8027a58:	f47f af1d 	bne.w	8027896 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027a5c:	e727      	b.n	80278ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8027a5e:	9b05      	ldr	r3, [sp, #20]
 8027a60:	429a      	cmp	r2, r3
 8027a62:	d34d      	bcc.n	8027b00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8027a64:	9807      	ldr	r0, [sp, #28]
 8027a66:	f899 100d 	ldrb.w	r1, [r9, #13]
 8027a6a:	eb09 0300 	add.w	r3, r9, r0
 8027a6e:	7359      	strb	r1, [r3, #13]
 8027a70:	f899 300d 	ldrb.w	r3, [r9, #13]
 8027a74:	1c41      	adds	r1, r0, #1
 8027a76:	b28e      	uxth	r6, r1
 8027a78:	9c05      	ldr	r4, [sp, #20]
 8027a7a:	9d08      	ldr	r5, [sp, #32]
 8027a7c:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8027a80:	3401      	adds	r4, #1
 8027a82:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8027a86:	b2a3      	uxth	r3, r4
 8027a88:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8027a8c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8027a90:	9305      	str	r3, [sp, #20]
 8027a92:	e9cd 6207 	strd	r6, r2, [sp, #28]
 8027a96:	2000      	movs	r0, #0
 8027a98:	e6fd      	b.n	8027896 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027a9a:	4601      	mov	r1, r0
 8027a9c:	3102      	adds	r1, #2
 8027a9e:	f04f 0800 	mov.w	r8, #0
 8027aa2:	9103      	str	r1, [sp, #12]
 8027aa4:	e71b      	b.n	80278de <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8027aa6:	bf00      	nop
 8027aa8:	20082ec4 	.word	0x20082ec4
 8027aac:	20082ebe 	.word	0x20082ebe
 8027ab0:	4686      	mov	lr, r0
 8027ab2:	4b30      	ldr	r3, [pc, #192]	@ (8027b74 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8027ab4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027ab6:	881b      	ldrh	r3, [r3, #0]
 8027ab8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027aba:	1a5b      	subs	r3, r3, r1
 8027abc:	9900      	ldr	r1, [sp, #0]
 8027abe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027ac2:	4419      	add	r1, r3
 8027ac4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027ac6:	3201      	adds	r2, #1
 8027ac8:	429a      	cmp	r2, r3
 8027aca:	9210      	str	r2, [sp, #64]	@ 0x40
 8027acc:	9100      	str	r1, [sp, #0]
 8027ace:	d038      	beq.n	8027b42 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x406>
 8027ad0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027ad4:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 8027ad8:	4670      	mov	r0, lr
 8027ada:	1aff      	subs	r7, r7, r3
 8027adc:	b2bf      	uxth	r7, r7
 8027ade:	2f00      	cmp	r7, #0
 8027ae0:	bf18      	it	ne
 8027ae2:	2300      	movne	r3, #0
 8027ae4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027ae6:	9302      	str	r3, [sp, #8]
 8027ae8:	bf08      	it	eq
 8027aea:	2700      	moveq	r7, #0
 8027aec:	e7af      	b.n	8027a4e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x312>
 8027aee:	1b9b      	subs	r3, r3, r6
 8027af0:	b29b      	uxth	r3, r3
 8027af2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027af4:	2e00      	cmp	r6, #0
 8027af6:	f43f aed5 	beq.w	80278a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x168>
 8027afa:	970a      	str	r7, [sp, #40]	@ 0x28
 8027afc:	46b4      	mov	ip, r6
 8027afe:	e70e      	b.n	802791e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027b00:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8027b04:	f893 604f 	ldrb.w	r6, [r3, #79]	@ 0x4f
 8027b08:	4613      	mov	r3, r2
 8027b0a:	2e01      	cmp	r6, #1
 8027b0c:	d90d      	bls.n	8027b2a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ee>
 8027b0e:	f106 010d 	add.w	r1, r6, #13
 8027b12:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027b14:	4449      	add	r1, r9
 8027b16:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8027b1a:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8027b1e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8027b22:	428c      	cmp	r4, r1
 8027b24:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8027b28:	d1f5      	bne.n	8027b16 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8027b2a:	9905      	ldr	r1, [sp, #20]
 8027b2c:	b2db      	uxtb	r3, r3
 8027b2e:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027b32:	f889 300d 	strb.w	r3, [r9, #13]
 8027b36:	b2b6      	uxth	r6, r6
 8027b38:	f4bf aedf 	bcs.w	80278fa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027b3c:	9907      	ldr	r1, [sp, #28]
 8027b3e:	3101      	adds	r1, #1
 8027b40:	e79a      	b.n	8027a78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8027b42:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8027b46:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8027b4a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027b4c:	1aff      	subs	r7, r7, r3
 8027b4e:	b2bf      	uxth	r7, r7
 8027b50:	2f00      	cmp	r7, #0
 8027b52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027b54:	bf18      	it	ne
 8027b56:	2300      	movne	r3, #0
 8027b58:	3201      	adds	r2, #1
 8027b5a:	b29b      	uxth	r3, r3
 8027b5c:	9302      	str	r3, [sp, #8]
 8027b5e:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027b60:	9b06      	ldr	r3, [sp, #24]
 8027b62:	e663      	b.n	802782c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf0>
 8027b64:	4b04      	ldr	r3, [pc, #16]	@ (8027b78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8027b66:	4a05      	ldr	r2, [pc, #20]	@ (8027b7c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8027b68:	f640 21ae 	movw	r1, #2734	@ 0xaae
 8027b6c:	4804      	ldr	r0, [pc, #16]	@ (8027b80 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8027b6e:	f00a fca3 	bl	80324b8 <__assert_func>
 8027b72:	bf00      	nop
 8027b74:	20082ebe 	.word	0x20082ebe
 8027b78:	0803636c 	.word	0x0803636c
 8027b7c:	08037cc4 	.word	0x08037cc4
 8027b80:	08036278 	.word	0x08036278

08027b84 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b88:	4617      	mov	r7, r2
 8027b8a:	b095      	sub	sp, #84	@ 0x54
 8027b8c:	8812      	ldrh	r2, [r2, #0]
 8027b8e:	4688      	mov	r8, r1
 8027b90:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8027b94:	2a01      	cmp	r2, #1
 8027b96:	461c      	mov	r4, r3
 8027b98:	910d      	str	r1, [sp, #52]	@ 0x34
 8027b9a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8027b9c:	f040 8105 	bne.w	8027daa <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8027ba0:	6820      	ldr	r0, [r4, #0]
 8027ba2:	6861      	ldr	r1, [r4, #4]
 8027ba4:	aa10      	add	r2, sp, #64	@ 0x40
 8027ba6:	c203      	stmia	r2!, {r0, r1}
 8027ba8:	6818      	ldr	r0, [r3, #0]
 8027baa:	6859      	ldr	r1, [r3, #4]
 8027bac:	aa12      	add	r2, sp, #72	@ 0x48
 8027bae:	c203      	stmia	r2!, {r0, r1}
 8027bb0:	a810      	add	r0, sp, #64	@ 0x40
 8027bb2:	f7e5 f8a5 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027bb6:	4621      	mov	r1, r4
 8027bb8:	a812      	add	r0, sp, #72	@ 0x48
 8027bba:	f7e5 f8c9 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027bbe:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8027bc2:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8027bc6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8027bca:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8027bce:	487a      	ldr	r0, [pc, #488]	@ (8027db8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027bd0:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8027bd4:	4422      	add	r2, r4
 8027bd6:	442b      	add	r3, r5
 8027bd8:	6800      	ldr	r0, [r0, #0]
 8027bda:	fb11 4105 	smlabb	r1, r1, r5, r4
 8027bde:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8027be2:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8027be6:	6802      	ldr	r2, [r0, #0]
 8027be8:	4c74      	ldr	r4, [pc, #464]	@ (8027dbc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8027bea:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8027bee:	4488      	add	r8, r1
 8027bf0:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8027bf4:	42a3      	cmp	r3, r4
 8027bf6:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 8027bfa:	910c      	str	r1, [sp, #48]	@ 0x30
 8027bfc:	f040 809f 	bne.w	8027d3e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8027c00:	6841      	ldr	r1, [r0, #4]
 8027c02:	4c6f      	ldr	r4, [pc, #444]	@ (8027dc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8027c04:	680b      	ldr	r3, [r1, #0]
 8027c06:	699b      	ldr	r3, [r3, #24]
 8027c08:	42a3      	cmp	r3, r4
 8027c0a:	f040 80c0 	bne.w	8027d8e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 8027c0e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8027c10:	4798      	blx	r3
 8027c12:	4a6c      	ldr	r2, [pc, #432]	@ (8027dc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027c14:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8027c18:	8814      	ldrh	r4, [r2, #0]
 8027c1a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8027c1e:	fb04 2303 	mla	r3, r4, r3, r2
 8027c22:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027c26:	4418      	add	r0, r3
 8027c28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027c2a:	2b00      	cmp	r3, #0
 8027c2c:	dd67      	ble.n	8027cfe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8027c2e:	2300      	movs	r3, #0
 8027c30:	f04f 0903 	mov.w	r9, #3
 8027c34:	2104      	movs	r1, #4
 8027c36:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027c38:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027c3a:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 8027c3e:	930e      	str	r3, [sp, #56]	@ 0x38
 8027c40:	f1c5 02ff 	rsb	r2, r5, #255	@ 0xff
 8027c44:	444b      	add	r3, r9
 8027c46:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027c48:	b292      	uxth	r2, r2
 8027c4a:	fa1f fc85 	uxth.w	ip, r5
 8027c4e:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8027c52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027c54:	2b00      	cmp	r3, #0
 8027c56:	dd43      	ble.n	8027ce0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8027c58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027c5a:	2bff      	cmp	r3, #255	@ 0xff
 8027c5c:	d057      	beq.n	8027d0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8027c5e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027c60:	1cc5      	adds	r5, r0, #3
 8027c62:	f108 3eff 	add.w	lr, r8, #4294967295
 8027c66:	eb00 0a03 	add.w	sl, r0, r3
 8027c6a:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8027c6e:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 8027c72:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027c76:	fb16 f402 	smulbb	r4, r6, r2
 8027c7a:	5cfe      	ldrb	r6, [r7, r3]
 8027c7c:	443b      	add	r3, r7
 8027c7e:	fb06 460c 	mla	r6, r6, ip, r4
 8027c82:	b2b6      	uxth	r6, r6
 8027c84:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027c88:	f106 0b01 	add.w	fp, r6, #1
 8027c8c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027c90:	1236      	asrs	r6, r6, #8
 8027c92:	fb14 fb02 	smulbb	fp, r4, r2
 8027c96:	f805 6c03 	strb.w	r6, [r5, #-3]
 8027c9a:	785c      	ldrb	r4, [r3, #1]
 8027c9c:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 8027ca0:	fb04 b40c 	mla	r4, r4, ip, fp
 8027ca4:	b2a4      	uxth	r4, r4
 8027ca6:	f104 0b01 	add.w	fp, r4, #1
 8027caa:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027cae:	1224      	asrs	r4, r4, #8
 8027cb0:	fb16 f602 	smulbb	r6, r6, r2
 8027cb4:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027cb8:	789b      	ldrb	r3, [r3, #2]
 8027cba:	3503      	adds	r5, #3
 8027cbc:	fb03 630c 	mla	r3, r3, ip, r6
 8027cc0:	b29b      	uxth	r3, r3
 8027cc2:	1c5c      	adds	r4, r3, #1
 8027cc4:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8027cc8:	121b      	asrs	r3, r3, #8
 8027cca:	f805 3c04 	strb.w	r3, [r5, #-4]
 8027cce:	45aa      	cmp	sl, r5
 8027cd0:	d1cb      	bne.n	8027c6a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8027cd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027cd4:	4418      	add	r0, r3
 8027cd6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027cd8:	4498      	add	r8, r3
 8027cda:	4b3a      	ldr	r3, [pc, #232]	@ (8027dc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027cdc:	881c      	ldrh	r4, [r3, #0]
 8027cde:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027ce0:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 8027ce4:	eba4 0e03 	sub.w	lr, r4, r3
 8027ce8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8027cea:	1aed      	subs	r5, r5, r3
 8027cec:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 8027cf0:	4418      	add	r0, r3
 8027cf2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027cf4:	3601      	adds	r6, #1
 8027cf6:	42b3      	cmp	r3, r6
 8027cf8:	960b      	str	r6, [sp, #44]	@ 0x2c
 8027cfa:	44a8      	add	r8, r5
 8027cfc:	d1a9      	bne.n	8027c52 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8027cfe:	4b2e      	ldr	r3, [pc, #184]	@ (8027db8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027d00:	6818      	ldr	r0, [r3, #0]
 8027d02:	6803      	ldr	r3, [r0, #0]
 8027d04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027d06:	4798      	blx	r3
 8027d08:	b015      	add	sp, #84	@ 0x54
 8027d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027d10:	1cc4      	adds	r4, r0, #3
 8027d12:	f108 35ff 	add.w	r5, r8, #4294967295
 8027d16:	eb00 0e03 	add.w	lr, r0, r3
 8027d1a:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8027d1e:	3403      	adds	r4, #3
 8027d20:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027d24:	5cfe      	ldrb	r6, [r7, r3]
 8027d26:	443b      	add	r3, r7
 8027d28:	f804 6c06 	strb.w	r6, [r4, #-6]
 8027d2c:	785e      	ldrb	r6, [r3, #1]
 8027d2e:	f804 6c05 	strb.w	r6, [r4, #-5]
 8027d32:	789b      	ldrb	r3, [r3, #2]
 8027d34:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027d38:	45a6      	cmp	lr, r4
 8027d3a:	d1ee      	bne.n	8027d1a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x196>
 8027d3c:	e7c9      	b.n	8027cd2 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 8027d3e:	4798      	blx	r3
 8027d40:	4603      	mov	r3, r0
 8027d42:	2b01      	cmp	r3, #1
 8027d44:	d127      	bne.n	8027d96 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8027d46:	4a20      	ldr	r2, [pc, #128]	@ (8027dc8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8027d48:	6810      	ldr	r0, [r2, #0]
 8027d4a:	b340      	cbz	r0, 8027d9e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8027d4c:	f04f 0c0b 	mov.w	ip, #11
 8027d50:	2600      	movs	r6, #0
 8027d52:	4a1c      	ldr	r2, [pc, #112]	@ (8027dc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027d54:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8027d58:	8814      	ldrh	r4, [r2, #0]
 8027d5a:	fa1f f28a 	uxth.w	r2, sl
 8027d5e:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8027d62:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8027d66:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8027d68:	9406      	str	r4, [sp, #24]
 8027d6a:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8027d6e:	9308      	str	r3, [sp, #32]
 8027d70:	9204      	str	r2, [sp, #16]
 8027d72:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8027d76:	463a      	mov	r2, r7
 8027d78:	4641      	mov	r1, r8
 8027d7a:	f8cd c01c 	str.w	ip, [sp, #28]
 8027d7e:	9605      	str	r6, [sp, #20]
 8027d80:	9503      	str	r5, [sp, #12]
 8027d82:	9400      	str	r4, [sp, #0]
 8027d84:	f7f8 ff30 	bl	8020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8027d88:	b015      	add	sp, #84	@ 0x54
 8027d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d8e:	4608      	mov	r0, r1
 8027d90:	4798      	blx	r3
 8027d92:	4603      	mov	r3, r0
 8027d94:	e7d5      	b.n	8027d42 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027d96:	4b08      	ldr	r3, [pc, #32]	@ (8027db8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027d98:	6818      	ldr	r0, [r3, #0]
 8027d9a:	6802      	ldr	r2, [r0, #0]
 8027d9c:	e737      	b.n	8027c0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8027d9e:	4b0b      	ldr	r3, [pc, #44]	@ (8027dcc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8027da0:	4a0b      	ldr	r2, [pc, #44]	@ (8027dd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8027da2:	217c      	movs	r1, #124	@ 0x7c
 8027da4:	480b      	ldr	r0, [pc, #44]	@ (8027dd4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8027da6:	f00a fb87 	bl	80324b8 <__assert_func>
 8027daa:	4b0b      	ldr	r3, [pc, #44]	@ (8027dd8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8027dac:	4a0b      	ldr	r2, [pc, #44]	@ (8027ddc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8027dae:	f640 3191 	movw	r1, #2961	@ 0xb91
 8027db2:	480b      	ldr	r0, [pc, #44]	@ (8027de0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8027db4:	f00a fb80 	bl	80324b8 <__assert_func>
 8027db8:	20082ec4 	.word	0x20082ec4
 8027dbc:	0800121d 	.word	0x0800121d
 8027dc0:	0800baa5 	.word	0x0800baa5
 8027dc4:	20082ebe 	.word	0x20082ebe
 8027dc8:	20083364 	.word	0x20083364
 8027dcc:	080361d4 	.word	0x080361d4
 8027dd0:	08036a40 	.word	0x08036a40
 8027dd4:	080361fc 	.word	0x080361fc
 8027dd8:	0803629c 	.word	0x0803629c
 8027ddc:	08036f60 	.word	0x08036f60
 8027de0:	08036278 	.word	0x08036278

08027de4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027de8:	4615      	mov	r5, r2
 8027dea:	7812      	ldrb	r2, [r2, #0]
 8027dec:	b08b      	sub	sp, #44	@ 0x2c
 8027dee:	2a01      	cmp	r2, #1
 8027df0:	461f      	mov	r7, r3
 8027df2:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 8027df6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027df8:	f040 8213 	bne.w	8028222 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 8027dfc:	6838      	ldr	r0, [r7, #0]
 8027dfe:	468a      	mov	sl, r1
 8027e00:	6879      	ldr	r1, [r7, #4]
 8027e02:	aa06      	add	r2, sp, #24
 8027e04:	c203      	stmia	r2!, {r0, r1}
 8027e06:	6818      	ldr	r0, [r3, #0]
 8027e08:	6859      	ldr	r1, [r3, #4]
 8027e0a:	aa08      	add	r2, sp, #32
 8027e0c:	c203      	stmia	r2!, {r0, r1}
 8027e0e:	a806      	add	r0, sp, #24
 8027e10:	f7e4 ff76 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027e14:	4639      	mov	r1, r7
 8027e16:	a808      	add	r0, sp, #32
 8027e18:	f7e4 ff9a 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027e1c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8027e20:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8027e24:	f003 0201 	and.w	r2, r3, #1
 8027e28:	4614      	mov	r4, r2
 8027e2a:	9202      	str	r2, [sp, #8]
 8027e2c:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 8027e30:	4423      	add	r3, r4
 8027e32:	fb02 1303 	mla	r3, r2, r3, r1
 8027e36:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8027e3a:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8027e3e:	4402      	add	r2, r0
 8027e40:	48a9      	ldr	r0, [pc, #676]	@ (80280e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8027e42:	440f      	add	r7, r1
 8027e44:	6800      	ldr	r0, [r0, #0]
 8027e46:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027e4a:	f8ad 7020 	strh.w	r7, [sp, #32]
 8027e4e:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8027e52:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8027e56:	f001 0301 	and.w	r3, r1, #1
 8027e5a:	6802      	ldr	r2, [r0, #0]
 8027e5c:	9301      	str	r3, [sp, #4]
 8027e5e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027e62:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8027e64:	9300      	str	r3, [sp, #0]
 8027e66:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 8027e6a:	4790      	blx	r2
 8027e6c:	4a9f      	ldr	r2, [pc, #636]	@ (80280ec <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027e6e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8027e72:	8811      	ldrh	r1, [r2, #0]
 8027e74:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 8027e78:	2eff      	cmp	r6, #255	@ 0xff
 8027e7a:	fb01 7303 	mla	r3, r1, r3, r7
 8027e7e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027e82:	f105 0204 	add.w	r2, r5, #4
 8027e86:	4418      	add	r0, r3
 8027e88:	f000 8132 	beq.w	80280f0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8027e8c:	fb04 f401 	mul.w	r4, r4, r1
 8027e90:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8027e94:	1901      	adds	r1, r0, r4
 8027e96:	4288      	cmp	r0, r1
 8027e98:	9104      	str	r1, [sp, #16]
 8027e9a:	f080 80aa 	bcs.w	8027ff2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8027e9e:	9b00      	ldr	r3, [sp, #0]
 8027ea0:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 8027ea4:	3b01      	subs	r3, #1
 8027ea6:	b2bf      	uxth	r7, r7
 8027ea8:	b2b6      	uxth	r6, r6
 8027eaa:	9305      	str	r3, [sp, #20]
 8027eac:	9b01      	ldr	r3, [sp, #4]
 8027eae:	2b00      	cmp	r3, #0
 8027eb0:	f040 80e8 	bne.w	8028084 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8027eb4:	46d1      	mov	r9, sl
 8027eb6:	f8dd 8000 	ldr.w	r8, [sp]
 8027eba:	f1b8 0f01 	cmp.w	r8, #1
 8027ebe:	f340 8082 	ble.w	8027fc6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027ec2:	f1a8 0302 	sub.w	r3, r8, #2
 8027ec6:	ea4f 0853 	mov.w	r8, r3, lsr #1
 8027eca:	9303      	str	r3, [sp, #12]
 8027ecc:	f100 0e0c 	add.w	lr, r0, #12
 8027ed0:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8027ed4:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8027ed8:	1d84      	adds	r4, r0, #6
 8027eda:	f109 3cff 	add.w	ip, r9, #4294967295
 8027ede:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8027ee2:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 8027ee6:	091b      	lsrs	r3, r3, #4
 8027ee8:	fb15 f507 	smulbb	r5, r5, r7
 8027eec:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027ef0:	5cd1      	ldrb	r1, [r2, r3]
 8027ef2:	4413      	add	r3, r2
 8027ef4:	fb01 5506 	mla	r5, r1, r6, r5
 8027ef8:	b2ad      	uxth	r5, r5
 8027efa:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 8027efe:	f105 0b01 	add.w	fp, r5, #1
 8027f02:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027f06:	122d      	asrs	r5, r5, #8
 8027f08:	fb11 fb07 	smulbb	fp, r1, r7
 8027f0c:	f804 5c06 	strb.w	r5, [r4, #-6]
 8027f10:	7859      	ldrb	r1, [r3, #1]
 8027f12:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 8027f16:	fb01 b106 	mla	r1, r1, r6, fp
 8027f1a:	b289      	uxth	r1, r1
 8027f1c:	f101 0b01 	add.w	fp, r1, #1
 8027f20:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027f24:	1209      	asrs	r1, r1, #8
 8027f26:	fb15 f507 	smulbb	r5, r5, r7
 8027f2a:	f804 1c05 	strb.w	r1, [r4, #-5]
 8027f2e:	789b      	ldrb	r3, [r3, #2]
 8027f30:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8027f34:	fb03 5306 	mla	r3, r3, r6, r5
 8027f38:	b29b      	uxth	r3, r3
 8027f3a:	1c5d      	adds	r5, r3, #1
 8027f3c:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8027f40:	121b      	asrs	r3, r3, #8
 8027f42:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027f46:	f89c 3000 	ldrb.w	r3, [ip]
 8027f4a:	fb11 f107 	smulbb	r1, r1, r7
 8027f4e:	f003 030f 	and.w	r3, r3, #15
 8027f52:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027f56:	5cd5      	ldrb	r5, [r2, r3]
 8027f58:	4413      	add	r3, r2
 8027f5a:	fb05 1106 	mla	r1, r5, r6, r1
 8027f5e:	b28d      	uxth	r5, r1
 8027f60:	f105 0b01 	add.w	fp, r5, #1
 8027f64:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8027f68:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027f6c:	122d      	asrs	r5, r5, #8
 8027f6e:	fb11 fb07 	smulbb	fp, r1, r7
 8027f72:	f804 5c03 	strb.w	r5, [r4, #-3]
 8027f76:	7859      	ldrb	r1, [r3, #1]
 8027f78:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8027f7c:	fb01 b106 	mla	r1, r1, r6, fp
 8027f80:	b289      	uxth	r1, r1
 8027f82:	f101 0b01 	add.w	fp, r1, #1
 8027f86:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027f8a:	1209      	asrs	r1, r1, #8
 8027f8c:	fb15 f507 	smulbb	r5, r5, r7
 8027f90:	f804 1c02 	strb.w	r1, [r4, #-2]
 8027f94:	789b      	ldrb	r3, [r3, #2]
 8027f96:	3406      	adds	r4, #6
 8027f98:	fb03 5306 	mla	r3, r3, r6, r5
 8027f9c:	b29b      	uxth	r3, r3
 8027f9e:	1c59      	adds	r1, r3, #1
 8027fa0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027fa4:	121b      	asrs	r3, r3, #8
 8027fa6:	f804 3c07 	strb.w	r3, [r4, #-7]
 8027faa:	45a6      	cmp	lr, r4
 8027fac:	d197      	bne.n	8027ede <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8027fae:	f108 0301 	add.w	r3, r8, #1
 8027fb2:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8027fb6:	4499      	add	r9, r3
 8027fb8:	9b03      	ldr	r3, [sp, #12]
 8027fba:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8027fbe:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8027fc2:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 8027fc6:	f1b8 0f01 	cmp.w	r8, #1
 8027fca:	d01a      	beq.n	8028002 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 8027fcc:	4b47      	ldr	r3, [pc, #284]	@ (80280ec <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027fce:	9c00      	ldr	r4, [sp, #0]
 8027fd0:	8819      	ldrh	r1, [r3, #0]
 8027fd2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8027fd6:	1b09      	subs	r1, r1, r4
 8027fd8:	9c02      	ldr	r4, [sp, #8]
 8027fda:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027fde:	4423      	add	r3, r4
 8027fe0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027fe4:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8027fe8:	9b04      	ldr	r3, [sp, #16]
 8027fea:	4408      	add	r0, r1
 8027fec:	4283      	cmp	r3, r0
 8027fee:	f63f af5d 	bhi.w	8027eac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8027ff2:	4b3d      	ldr	r3, [pc, #244]	@ (80280e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8027ff4:	6818      	ldr	r0, [r3, #0]
 8027ff6:	6803      	ldr	r3, [r0, #0]
 8027ff8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027ffa:	4798      	blx	r3
 8027ffc:	b00b      	add	sp, #44	@ 0x2c
 8027ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028002:	f899 3000 	ldrb.w	r3, [r9]
 8028006:	7801      	ldrb	r1, [r0, #0]
 8028008:	091b      	lsrs	r3, r3, #4
 802800a:	fb11 f407 	smulbb	r4, r1, r7
 802800e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028012:	5cd1      	ldrb	r1, [r2, r3]
 8028014:	4413      	add	r3, r2
 8028016:	fb01 4106 	mla	r1, r1, r6, r4
 802801a:	b289      	uxth	r1, r1
 802801c:	7844      	ldrb	r4, [r0, #1]
 802801e:	1c4d      	adds	r5, r1, #1
 8028020:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8028024:	1209      	asrs	r1, r1, #8
 8028026:	fb14 f507 	smulbb	r5, r4, r7
 802802a:	7001      	strb	r1, [r0, #0]
 802802c:	785c      	ldrb	r4, [r3, #1]
 802802e:	7881      	ldrb	r1, [r0, #2]
 8028030:	fb04 5406 	mla	r4, r4, r6, r5
 8028034:	b2a4      	uxth	r4, r4
 8028036:	1c65      	adds	r5, r4, #1
 8028038:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802803c:	1224      	asrs	r4, r4, #8
 802803e:	fb11 f507 	smulbb	r5, r1, r7
 8028042:	7044      	strb	r4, [r0, #1]
 8028044:	7899      	ldrb	r1, [r3, #2]
 8028046:	4b29      	ldr	r3, [pc, #164]	@ (80280ec <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8028048:	fb01 5106 	mla	r1, r1, r6, r5
 802804c:	b289      	uxth	r1, r1
 802804e:	1c4c      	adds	r4, r1, #1
 8028050:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028054:	881b      	ldrh	r3, [r3, #0]
 8028056:	9c00      	ldr	r4, [sp, #0]
 8028058:	1209      	asrs	r1, r1, #8
 802805a:	1b1b      	subs	r3, r3, r4
 802805c:	7081      	strb	r1, [r0, #2]
 802805e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028062:	3303      	adds	r3, #3
 8028064:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8028068:	9c02      	ldr	r4, [sp, #8]
 802806a:	4418      	add	r0, r3
 802806c:	9b04      	ldr	r3, [sp, #16]
 802806e:	4421      	add	r1, r4
 8028070:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8028074:	4283      	cmp	r3, r0
 8028076:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 802807a:	d9ba      	bls.n	8027ff2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 802807c:	9b01      	ldr	r3, [sp, #4]
 802807e:	2b00      	cmp	r3, #0
 8028080:	f43f af18 	beq.w	8027eb4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 8028084:	f89a 3000 	ldrb.w	r3, [sl]
 8028088:	7804      	ldrb	r4, [r0, #0]
 802808a:	f003 030f 	and.w	r3, r3, #15
 802808e:	fb14 f107 	smulbb	r1, r4, r7
 8028092:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028096:	5cd4      	ldrb	r4, [r2, r3]
 8028098:	4413      	add	r3, r2
 802809a:	fb04 1406 	mla	r4, r4, r6, r1
 802809e:	b2a4      	uxth	r4, r4
 80280a0:	7841      	ldrb	r1, [r0, #1]
 80280a2:	1c65      	adds	r5, r4, #1
 80280a4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80280a8:	1224      	asrs	r4, r4, #8
 80280aa:	fb11 fc07 	smulbb	ip, r1, r7
 80280ae:	7004      	strb	r4, [r0, #0]
 80280b0:	7859      	ldrb	r1, [r3, #1]
 80280b2:	7885      	ldrb	r5, [r0, #2]
 80280b4:	fb01 c106 	mla	r1, r1, r6, ip
 80280b8:	b289      	uxth	r1, r1
 80280ba:	1c4c      	adds	r4, r1, #1
 80280bc:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80280c0:	1209      	asrs	r1, r1, #8
 80280c2:	fb15 f407 	smulbb	r4, r5, r7
 80280c6:	7041      	strb	r1, [r0, #1]
 80280c8:	789b      	ldrb	r3, [r3, #2]
 80280ca:	f10a 0901 	add.w	r9, sl, #1
 80280ce:	fb03 4306 	mla	r3, r3, r6, r4
 80280d2:	b29b      	uxth	r3, r3
 80280d4:	1c59      	adds	r1, r3, #1
 80280d6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80280da:	121b      	asrs	r3, r3, #8
 80280dc:	7083      	strb	r3, [r0, #2]
 80280de:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80280e2:	3003      	adds	r0, #3
 80280e4:	e6e9      	b.n	8027eba <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd6>
 80280e6:	bf00      	nop
 80280e8:	20082ec4 	.word	0x20082ec4
 80280ec:	20082ebe 	.word	0x20082ebe
 80280f0:	fb04 f101 	mul.w	r1, r4, r1
 80280f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80280f8:	eb00 0e01 	add.w	lr, r0, r1
 80280fc:	4570      	cmp	r0, lr
 80280fe:	f4bf af78 	bcs.w	8027ff2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028102:	9b00      	ldr	r3, [sp, #0]
 8028104:	4698      	mov	r8, r3
 8028106:	f103 39ff 	add.w	r9, r3, #4294967295
 802810a:	9b01      	ldr	r3, [sp, #4]
 802810c:	2b00      	cmp	r3, #0
 802810e:	d072      	beq.n	80281f6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 8028110:	464e      	mov	r6, r9
 8028112:	f89a 3000 	ldrb.w	r3, [sl]
 8028116:	f10a 0c01 	add.w	ip, sl, #1
 802811a:	f003 030f 	and.w	r3, r3, #15
 802811e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028122:	5cd1      	ldrb	r1, [r2, r3]
 8028124:	4413      	add	r3, r2
 8028126:	7001      	strb	r1, [r0, #0]
 8028128:	7859      	ldrb	r1, [r3, #1]
 802812a:	3003      	adds	r0, #3
 802812c:	f800 1c02 	strb.w	r1, [r0, #-2]
 8028130:	789b      	ldrb	r3, [r3, #2]
 8028132:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028136:	2e01      	cmp	r6, #1
 8028138:	dd39      	ble.n	80281ae <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 802813a:	3e02      	subs	r6, #2
 802813c:	0877      	lsrs	r7, r6, #1
 802813e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8028142:	f100 050c 	add.w	r5, r0, #12
 8028146:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802814a:	1d81      	adds	r1, r0, #6
 802814c:	f10c 34ff 	add.w	r4, ip, #4294967295
 8028150:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8028154:	3106      	adds	r1, #6
 8028156:	091b      	lsrs	r3, r3, #4
 8028158:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802815c:	f812 b003 	ldrb.w	fp, [r2, r3]
 8028160:	4413      	add	r3, r2
 8028162:	f801 bc0c 	strb.w	fp, [r1, #-12]
 8028166:	f893 b001 	ldrb.w	fp, [r3, #1]
 802816a:	f801 bc0b 	strb.w	fp, [r1, #-11]
 802816e:	789b      	ldrb	r3, [r3, #2]
 8028170:	f801 3c0a 	strb.w	r3, [r1, #-10]
 8028174:	7823      	ldrb	r3, [r4, #0]
 8028176:	f003 030f 	and.w	r3, r3, #15
 802817a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802817e:	f812 b003 	ldrb.w	fp, [r2, r3]
 8028182:	4413      	add	r3, r2
 8028184:	f801 bc09 	strb.w	fp, [r1, #-9]
 8028188:	f893 b001 	ldrb.w	fp, [r3, #1]
 802818c:	f801 bc08 	strb.w	fp, [r1, #-8]
 8028190:	789b      	ldrb	r3, [r3, #2]
 8028192:	f801 3c07 	strb.w	r3, [r1, #-7]
 8028196:	428d      	cmp	r5, r1
 8028198:	d1da      	bne.n	8028150 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 802819a:	1c7b      	adds	r3, r7, #1
 802819c:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 80281a0:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 80281a4:	449c      	add	ip, r3
 80281a6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80281aa:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 80281ae:	2e01      	cmp	r6, #1
 80281b0:	d124      	bne.n	80281fc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x418>
 80281b2:	f89c 3000 	ldrb.w	r3, [ip]
 80281b6:	9c02      	ldr	r4, [sp, #8]
 80281b8:	091b      	lsrs	r3, r3, #4
 80281ba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281be:	5cd1      	ldrb	r1, [r2, r3]
 80281c0:	4413      	add	r3, r2
 80281c2:	7001      	strb	r1, [r0, #0]
 80281c4:	7859      	ldrb	r1, [r3, #1]
 80281c6:	7041      	strb	r1, [r0, #1]
 80281c8:	7899      	ldrb	r1, [r3, #2]
 80281ca:	4b19      	ldr	r3, [pc, #100]	@ (8028230 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 80281cc:	7081      	strb	r1, [r0, #2]
 80281ce:	881b      	ldrh	r3, [r3, #0]
 80281d0:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 80281d4:	eba3 0308 	sub.w	r3, r3, r8
 80281d8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281dc:	3303      	adds	r3, #3
 80281de:	4421      	add	r1, r4
 80281e0:	4418      	add	r0, r3
 80281e2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80281e6:	4586      	cmp	lr, r0
 80281e8:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 80281ec:	f67f af01 	bls.w	8027ff2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80281f0:	9b01      	ldr	r3, [sp, #4]
 80281f2:	2b00      	cmp	r3, #0
 80281f4:	d18c      	bne.n	8028110 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x32c>
 80281f6:	46d4      	mov	ip, sl
 80281f8:	4646      	mov	r6, r8
 80281fa:	e79c      	b.n	8028136 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x352>
 80281fc:	4b0c      	ldr	r3, [pc, #48]	@ (8028230 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 80281fe:	9c02      	ldr	r4, [sp, #8]
 8028200:	8819      	ldrh	r1, [r3, #0]
 8028202:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8028206:	eba1 0108 	sub.w	r1, r1, r8
 802820a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802820e:	4423      	add	r3, r4
 8028210:	4408      	add	r0, r1
 8028212:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028216:	4586      	cmp	lr, r0
 8028218:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 802821c:	f63f af75 	bhi.w	802810a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x326>
 8028220:	e6e7      	b.n	8027ff2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028222:	4b04      	ldr	r3, [pc, #16]	@ (8028234 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028224:	4a04      	ldr	r2, [pc, #16]	@ (8028238 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 8028226:	f640 31da 	movw	r1, #3034	@ 0xbda
 802822a:	4804      	ldr	r0, [pc, #16]	@ (802823c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 802822c:	f00a f944 	bl	80324b8 <__assert_func>
 8028230:	20082ebe 	.word	0x20082ebe
 8028234:	0803633c 	.word	0x0803633c
 8028238:	080372a0 	.word	0x080372a0
 802823c:	08036278 	.word	0x08036278

08028240 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028244:	b08d      	sub	sp, #52	@ 0x34
 8028246:	7814      	ldrb	r4, [r2, #0]
 8028248:	461d      	mov	r5, r3
 802824a:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
 802824e:	2c01      	cmp	r4, #1
 8028250:	9204      	str	r2, [sp, #16]
 8028252:	9302      	str	r3, [sp, #8]
 8028254:	f040 8133 	bne.w	80284be <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 8028258:	b913      	cbnz	r3, 8028260 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20>
 802825a:	b00d      	add	sp, #52	@ 0x34
 802825c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028260:	6828      	ldr	r0, [r5, #0]
 8028262:	4689      	mov	r9, r1
 8028264:	6869      	ldr	r1, [r5, #4]
 8028266:	ab08      	add	r3, sp, #32
 8028268:	c303      	stmia	r3!, {r0, r1}
 802826a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802826c:	6818      	ldr	r0, [r3, #0]
 802826e:	6859      	ldr	r1, [r3, #4]
 8028270:	ab0a      	add	r3, sp, #40	@ 0x28
 8028272:	c303      	stmia	r3!, {r0, r1}
 8028274:	a808      	add	r0, sp, #32
 8028276:	f7e4 fd43 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802827a:	4629      	mov	r1, r5
 802827c:	a80a      	add	r0, sp, #40	@ 0x28
 802827e:	f7e4 fd67 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028282:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8028286:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 802828a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802828e:	bfdd      	ittte	le
 8028290:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 8028294:	b29a      	uxthle	r2, r3
 8028296:	fb94 f4f2 	sdivle	r4, r4, r2
 802829a:	b29a      	uxthgt	r2, r3
 802829c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80282a0:	fb93 f0f4 	sdiv	r0, r3, r4
 80282a4:	b286      	uxth	r6, r0
 80282a6:	fb04 3816 	mls	r8, r4, r6, r3
 80282aa:	fb18 1802 	smlabb	r8, r8, r2, r1
 80282ae:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 80282b2:	fa1f f888 	uxth.w	r8, r8
 80282b6:	4422      	add	r2, r4
 80282b8:	3a01      	subs	r2, #1
 80282ba:	fb92 f4f4 	sdiv	r4, r2, r4
 80282be:	2e00      	cmp	r6, #0
 80282c0:	f040 80f7 	bne.w	80284b2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x272>
 80282c4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80282c8:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 80282cc:	4413      	add	r3, r2
 80282ce:	4a7f      	ldr	r2, [pc, #508]	@ (80284cc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 80282d0:	4401      	add	r1, r0
 80282d2:	6810      	ldr	r0, [r2, #0]
 80282d4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80282d8:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 80282dc:	4616      	mov	r6, r2
 80282de:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80282e2:	6803      	ldr	r3, [r0, #0]
 80282e4:	9207      	str	r2, [sp, #28]
 80282e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80282e8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80282ec:	4798      	blx	r3
 80282ee:	f1b8 0f00 	cmp.w	r8, #0
 80282f2:	bf0c      	ite	eq
 80282f4:	4633      	moveq	r3, r6
 80282f6:	2300      	movne	r3, #0
 80282f8:	4975      	ldr	r1, [pc, #468]	@ (80284d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 80282fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80282fe:	8809      	ldrh	r1, [r1, #0]
 8028300:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8028304:	fb01 f505 	mul.w	r5, r1, r5
 8028308:	fb01 6202 	mla	r2, r1, r2, r6
 802830c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028310:	4410      	add	r0, r2
 8028312:	b2a4      	uxth	r4, r4
 8028314:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8028318:	1942      	adds	r2, r0, r5
 802831a:	00a4      	lsls	r4, r4, #2
 802831c:	1d21      	adds	r1, r4, #4
 802831e:	4290      	cmp	r0, r2
 8028320:	9200      	str	r2, [sp, #0]
 8028322:	9106      	str	r1, [sp, #24]
 8028324:	fa1f fa83 	uxth.w	sl, r3
 8028328:	d225      	bcs.n	8028376 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x136>
 802832a:	2500      	movs	r5, #0
 802832c:	4686      	mov	lr, r0
 802832e:	4640      	mov	r0, r8
 8028330:	9b02      	ldr	r3, [sp, #8]
 8028332:	9501      	str	r5, [sp, #4]
 8028334:	f1c3 07ff 	rsb	r7, r3, #255	@ 0xff
 8028338:	b2bf      	uxth	r7, r7
 802833a:	fa1f fc83 	uxth.w	ip, r3
 802833e:	b985      	cbnz	r5, 8028362 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8028340:	f899 2000 	ldrb.w	r2, [r9]
 8028344:	0995      	lsrs	r5, r2, #6
 8028346:	1e6b      	subs	r3, r5, #1
 8028348:	2b02      	cmp	r3, #2
 802834a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802834e:	bf88      	it	hi
 8028350:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 8028354:	9201      	str	r2, [sp, #4]
 8028356:	bf9a      	itte	ls
 8028358:	f109 0901 	addls.w	r9, r9, #1
 802835c:	b2ad      	uxthls	r5, r5
 802835e:	f109 0902 	addhi.w	r9, r9, #2
 8028362:	b180      	cbz	r0, 8028386 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 8028364:	4285      	cmp	r5, r0
 8028366:	f080 809e 	bcs.w	80284a6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 802836a:	1b40      	subs	r0, r0, r5
 802836c:	2500      	movs	r5, #0
 802836e:	b280      	uxth	r0, r0
 8028370:	9b00      	ldr	r3, [sp, #0]
 8028372:	4573      	cmp	r3, lr
 8028374:	d8e3      	bhi.n	802833e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8028376:	4b55      	ldr	r3, [pc, #340]	@ (80284cc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8028378:	6818      	ldr	r0, [r3, #0]
 802837a:	6803      	ldr	r3, [r0, #0]
 802837c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802837e:	4798      	blx	r3
 8028380:	b00d      	add	sp, #52	@ 0x34
 8028382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028386:	2303      	movs	r3, #3
 8028388:	4619      	mov	r1, r3
 802838a:	9a06      	ldr	r2, [sp, #24]
 802838c:	9b01      	ldr	r3, [sp, #4]
 802838e:	4555      	cmp	r5, sl
 8028390:	fb11 2403 	smlabb	r4, r1, r3, r2
 8028394:	9b04      	ldr	r3, [sp, #16]
 8028396:	441c      	add	r4, r3
 8028398:	d360      	bcc.n	802845c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802839a:	eba5 030a 	sub.w	r3, r5, sl
 802839e:	b29b      	uxth	r3, r3
 80283a0:	9303      	str	r3, [sp, #12]
 80283a2:	9b02      	ldr	r3, [sp, #8]
 80283a4:	4656      	mov	r6, sl
 80283a6:	2bff      	cmp	r3, #255	@ 0xff
 80283a8:	9005      	str	r0, [sp, #20]
 80283aa:	d060      	beq.n	802846e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 80283ac:	2e00      	cmp	r6, #0
 80283ae:	d03b      	beq.n	8028428 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80283b0:	3e01      	subs	r6, #1
 80283b2:	b2b6      	uxth	r6, r6
 80283b4:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 80283b8:	f10e 0806 	add.w	r8, lr, #6
 80283bc:	4498      	add	r8, r3
 80283be:	f10e 0103 	add.w	r1, lr, #3
 80283c2:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 80283c6:	7823      	ldrb	r3, [r4, #0]
 80283c8:	fb12 f207 	smulbb	r2, r2, r7
 80283cc:	fb03 230c 	mla	r3, r3, ip, r2
 80283d0:	b29b      	uxth	r3, r3
 80283d2:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 80283d6:	f103 0b01 	add.w	fp, r3, #1
 80283da:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 80283de:	121b      	asrs	r3, r3, #8
 80283e0:	fb12 fb07 	smulbb	fp, r2, r7
 80283e4:	f801 3c03 	strb.w	r3, [r1, #-3]
 80283e8:	7862      	ldrb	r2, [r4, #1]
 80283ea:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 80283ee:	fb02 b20c 	mla	r2, r2, ip, fp
 80283f2:	b292      	uxth	r2, r2
 80283f4:	f102 0b01 	add.w	fp, r2, #1
 80283f8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80283fc:	1212      	asrs	r2, r2, #8
 80283fe:	fb13 fb07 	smulbb	fp, r3, r7
 8028402:	f801 2c02 	strb.w	r2, [r1, #-2]
 8028406:	78a3      	ldrb	r3, [r4, #2]
 8028408:	3103      	adds	r1, #3
 802840a:	fb03 b30c 	mla	r3, r3, ip, fp
 802840e:	b29b      	uxth	r3, r3
 8028410:	1c5a      	adds	r2, r3, #1
 8028412:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028416:	121b      	asrs	r3, r3, #8
 8028418:	f801 3c04 	strb.w	r3, [r1, #-4]
 802841c:	4541      	cmp	r1, r8
 802841e:	d1d0      	bne.n	80283c2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8028420:	3601      	adds	r6, #1
 8028422:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8028426:	44b6      	add	lr, r6
 8028428:	4555      	cmp	r5, sl
 802842a:	d313      	bcc.n	8028454 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>
 802842c:	9a07      	ldr	r2, [sp, #28]
 802842e:	4b28      	ldr	r3, [pc, #160]	@ (80284d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8028430:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 8028434:	fa1f fa82 	uxth.w	sl, r2
 8028438:	881b      	ldrh	r3, [r3, #0]
 802843a:	eba0 000a 	sub.w	r0, r0, sl
 802843e:	b280      	uxth	r0, r0
 8028440:	1a9b      	subs	r3, r3, r2
 8028442:	2800      	cmp	r0, #0
 8028444:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028448:	9d03      	ldr	r5, [sp, #12]
 802844a:	bf18      	it	ne
 802844c:	f04f 0a00 	movne.w	sl, #0
 8028450:	449e      	add	lr, r3
 8028452:	e78d      	b.n	8028370 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028454:	9d03      	ldr	r5, [sp, #12]
 8028456:	f8dd a014 	ldr.w	sl, [sp, #20]
 802845a:	e789      	b.n	8028370 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 802845c:	ebaa 0305 	sub.w	r3, sl, r5
 8028460:	b29b      	uxth	r3, r3
 8028462:	9305      	str	r3, [sp, #20]
 8028464:	9b02      	ldr	r3, [sp, #8]
 8028466:	462e      	mov	r6, r5
 8028468:	2bff      	cmp	r3, #255	@ 0xff
 802846a:	9003      	str	r0, [sp, #12]
 802846c:	d19e      	bne.n	80283ac <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 802846e:	2e00      	cmp	r6, #0
 8028470:	d0da      	beq.n	8028428 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028472:	3e01      	subs	r6, #1
 8028474:	b2b2      	uxth	r2, r6
 8028476:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 802847a:	f10e 0606 	add.w	r6, lr, #6
 802847e:	441e      	add	r6, r3
 8028480:	f10e 0303 	add.w	r3, lr, #3
 8028484:	7821      	ldrb	r1, [r4, #0]
 8028486:	3303      	adds	r3, #3
 8028488:	f803 1c06 	strb.w	r1, [r3, #-6]
 802848c:	7861      	ldrb	r1, [r4, #1]
 802848e:	f803 1c05 	strb.w	r1, [r3, #-5]
 8028492:	78a1      	ldrb	r1, [r4, #2]
 8028494:	f803 1c04 	strb.w	r1, [r3, #-4]
 8028498:	429e      	cmp	r6, r3
 802849a:	d1f3      	bne.n	8028484 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>
 802849c:	3201      	adds	r2, #1
 802849e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80284a2:	4496      	add	lr, r2
 80284a4:	e7c0      	b.n	8028428 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80284a6:	1a2d      	subs	r5, r5, r0
 80284a8:	b2ad      	uxth	r5, r5
 80284aa:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 80284ae:	2000      	movs	r0, #0
 80284b0:	e75e      	b.n	8028370 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 80284b2:	9a04      	ldr	r2, [sp, #16]
 80284b4:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80284b8:	ba12      	rev	r2, r2
 80284ba:	4491      	add	r9, r2
 80284bc:	e702      	b.n	80282c4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x84>
 80284be:	4b05      	ldr	r3, [pc, #20]	@ (80284d4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 80284c0:	4a05      	ldr	r2, [pc, #20]	@ (80284d8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 80284c2:	f44f 6146 	mov.w	r1, #3168	@ 0xc60
 80284c6:	4805      	ldr	r0, [pc, #20]	@ (80284dc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 80284c8:	f009 fff6 	bl	80324b8 <__assert_func>
 80284cc:	20082ec4 	.word	0x20082ec4
 80284d0:	20082ebe 	.word	0x20082ebe
 80284d4:	0803633c 	.word	0x0803633c
 80284d8:	08037444 	.word	0x08037444
 80284dc:	08036278 	.word	0x08036278

080284e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80284e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284e4:	b09b      	sub	sp, #108	@ 0x6c
 80284e6:	7814      	ldrb	r4, [r2, #0]
 80284e8:	461d      	mov	r5, r3
 80284ea:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 80284ee:	2c01      	cmp	r4, #1
 80284f0:	9210      	str	r2, [sp, #64]	@ 0x40
 80284f2:	9112      	str	r1, [sp, #72]	@ 0x48
 80284f4:	930d      	str	r3, [sp, #52]	@ 0x34
 80284f6:	f040 820f 	bne.w	8028918 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80284fa:	b913      	cbnz	r3, 8028502 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80284fc:	b01b      	add	sp, #108	@ 0x6c
 80284fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028502:	6869      	ldr	r1, [r5, #4]
 8028504:	4681      	mov	r9, r0
 8028506:	6828      	ldr	r0, [r5, #0]
 8028508:	ab16      	add	r3, sp, #88	@ 0x58
 802850a:	c303      	stmia	r3!, {r0, r1}
 802850c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802850e:	6818      	ldr	r0, [r3, #0]
 8028510:	6859      	ldr	r1, [r3, #4]
 8028512:	ab18      	add	r3, sp, #96	@ 0x60
 8028514:	c303      	stmia	r3!, {r0, r1}
 8028516:	a816      	add	r0, sp, #88	@ 0x58
 8028518:	f7e4 fbf2 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802851c:	4629      	mov	r1, r5
 802851e:	a818      	add	r0, sp, #96	@ 0x60
 8028520:	f7e4 fc16 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028524:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 8028528:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 802852c:	f340 814e 	ble.w	80287cc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 8028530:	fa1f f08a 	uxth.w	r0, sl
 8028534:	9414      	str	r4, [sp, #80]	@ 0x50
 8028536:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	@ 0x62
 802853a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 802853e:	fb93 f1f4 	sdiv	r1, r3, r4
 8028542:	4422      	add	r2, r4
 8028544:	3a01      	subs	r2, #1
 8028546:	fb92 f2f4 	sdiv	r2, r2, r4
 802854a:	b289      	uxth	r1, r1
 802854c:	fb04 3411 	mls	r4, r4, r1, r3
 8028550:	9113      	str	r1, [sp, #76]	@ 0x4c
 8028552:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 8028556:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 802855a:	fb14 1a00 	smlabb	sl, r4, r0, r1
 802855e:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 8028562:	48bc      	ldr	r0, [pc, #752]	@ (8028854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8028564:	4431      	add	r1, r6
 8028566:	442b      	add	r3, r5
 8028568:	6800      	ldr	r0, [r0, #0]
 802856a:	f8ad 1060 	strh.w	r1, [sp, #96]	@ 0x60
 802856e:	f8ad 3062 	strh.w	r3, [sp, #98]	@ 0x62
 8028572:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 8028576:	6803      	ldr	r3, [r0, #0]
 8028578:	3201      	adds	r2, #1
 802857a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802857c:	970a      	str	r7, [sp, #40]	@ 0x28
 802857e:	b294      	uxth	r4, r2
 8028580:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 8028584:	4798      	blx	r3
 8028586:	2200      	movs	r2, #0
 8028588:	fa1f f68a 	uxth.w	r6, sl
 802858c:	2e00      	cmp	r6, #0
 802858e:	bf0c      	ite	eq
 8028590:	463b      	moveq	r3, r7
 8028592:	2300      	movne	r3, #0
 8028594:	49b0      	ldr	r1, [pc, #704]	@ (8028858 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8028596:	9602      	str	r6, [sp, #8]
 8028598:	8809      	ldrh	r1, [r1, #0]
 802859a:	9211      	str	r2, [sp, #68]	@ 0x44
 802859c:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 80285a0:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 80285a4:	fb01 f505 	mul.w	r5, r1, r5
 80285a8:	fb01 6202 	mla	r2, r1, r2, r6
 80285ac:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80285ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80285b2:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80285b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80285ba:	1881      	adds	r1, r0, r2
 80285bc:	9101      	str	r1, [sp, #4]
 80285be:	fa1f fe83 	uxth.w	lr, r3
 80285c2:	4429      	add	r1, r5
 80285c4:	f109 030e 	add.w	r3, r9, #14
 80285c8:	9315      	str	r3, [sp, #84]	@ 0x54
 80285ca:	460b      	mov	r3, r1
 80285cc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80285ce:	464f      	mov	r7, r9
 80285d0:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80285d4:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80285d8:	f104 0c04 	add.w	ip, r4, #4
 80285dc:	9106      	str	r1, [sp, #24]
 80285de:	fa1f f882 	uxth.w	r8, r2
 80285e2:	9a01      	ldr	r2, [sp, #4]
 80285e4:	4293      	cmp	r3, r2
 80285e6:	f240 8101 	bls.w	80287ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80285ea:	2200      	movs	r2, #0
 80285ec:	2601      	movs	r6, #1
 80285ee:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80285f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80285f2:	920c      	str	r2, [sp, #48]	@ 0x30
 80285f4:	fa10 f481 	uxtah	r4, r0, r1
 80285f8:	00a4      	lsls	r4, r4, #2
 80285fa:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80285fc:	3404      	adds	r4, #4
 80285fe:	4421      	add	r1, r4
 8028600:	788a      	ldrb	r2, [r1, #2]
 8028602:	784d      	ldrb	r5, [r1, #1]
 8028604:	0212      	lsls	r2, r2, #8
 8028606:	78c9      	ldrb	r1, [r1, #3]
 8028608:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 802860c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802860e:	4308      	orrs	r0, r1
 8028610:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 8028614:	1829      	adds	r1, r5, r0
 8028616:	5c28      	ldrb	r0, [r5, r0]
 8028618:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802861a:	fbb9 f3f3 	udiv	r3, r9, r3
 802861e:	5d2c      	ldrb	r4, [r5, r4]
 8028620:	784a      	ldrb	r2, [r1, #1]
 8028622:	4431      	add	r1, r6
 8028624:	940e      	str	r4, [sp, #56]	@ 0x38
 8028626:	9104      	str	r1, [sp, #16]
 8028628:	f04f 0a00 	mov.w	sl, #0
 802862c:	19a1      	adds	r1, r4, r6
 802862e:	4634      	mov	r4, r6
 8028630:	0212      	lsls	r2, r2, #8
 8028632:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028636:	4302      	orrs	r2, r0
 8028638:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802863a:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 802863e:	1ac3      	subs	r3, r0, r3
 8028640:	b29b      	uxth	r3, r3
 8028642:	b290      	uxth	r0, r2
 8028644:	9609      	str	r6, [sp, #36]	@ 0x24
 8028646:	737a      	strb	r2, [r7, #13]
 8028648:	9008      	str	r0, [sp, #32]
 802864a:	9105      	str	r1, [sp, #20]
 802864c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802864e:	9603      	str	r6, [sp, #12]
 8028650:	f1b9 0f00 	cmp.w	r9, #0
 8028654:	d035      	beq.n	80286c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8028656:	45a1      	cmp	r9, r4
 8028658:	f240 8100 	bls.w	802885c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 802865c:	9b06      	ldr	r3, [sp, #24]
 802865e:	9a01      	ldr	r2, [sp, #4]
 8028660:	eba9 0904 	sub.w	r9, r9, r4
 8028664:	4293      	cmp	r3, r2
 8028666:	fa1f f989 	uxth.w	r9, r9
 802866a:	f240 80bf 	bls.w	80287ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 802866e:	9804      	ldr	r0, [sp, #16]
 8028670:	9c03      	ldr	r4, [sp, #12]
 8028672:	7842      	ldrb	r2, [r0, #1]
 8028674:	f1c4 0107 	rsb	r1, r4, #7
 8028678:	7803      	ldrb	r3, [r0, #0]
 802867a:	408a      	lsls	r2, r1
 802867c:	0052      	lsls	r2, r2, #1
 802867e:	4123      	asrs	r3, r4
 8028680:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028684:	1c61      	adds	r1, r4, #1
 8028686:	b2db      	uxtb	r3, r3
 8028688:	4313      	orrs	r3, r2
 802868a:	b2ca      	uxtb	r2, r1
 802868c:	4611      	mov	r1, r2
 802868e:	2908      	cmp	r1, #8
 8028690:	9203      	str	r2, [sp, #12]
 8028692:	b29a      	uxth	r2, r3
 8028694:	f000 810b 	beq.w	80288ae <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ce>
 8028698:	3001      	adds	r0, #1
 802869a:	9004      	str	r0, [sp, #16]
 802869c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802869e:	4291      	cmp	r1, r2
 80286a0:	f0c0 80e7 	bcc.w	8028872 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x392>
 80286a4:	2401      	movs	r4, #1
 80286a6:	b2db      	uxtb	r3, r3
 80286a8:	737b      	strb	r3, [r7, #13]
 80286aa:	9905      	ldr	r1, [sp, #20]
 80286ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80286b0:	f0c0 8103 	bcc.w	80288ba <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 80286b4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 80286b8:	f04f 0a00 	mov.w	sl, #0
 80286bc:	f1b9 0f00 	cmp.w	r9, #0
 80286c0:	d1c9      	bne.n	8028656 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x176>
 80286c2:	4574      	cmp	r4, lr
 80286c4:	f0c0 809a 	bcc.w	80287fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 80286c8:	eba4 030e 	sub.w	r3, r4, lr
 80286cc:	b29b      	uxth	r3, r3
 80286ce:	9307      	str	r3, [sp, #28]
 80286d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80286d2:	f8cd e008 	str.w	lr, [sp, #8]
 80286d6:	2bff      	cmp	r3, #255	@ 0xff
 80286d8:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 80286dc:	9b02      	ldr	r3, [sp, #8]
 80286de:	f000 8099 	beq.w	8028814 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x334>
 80286e2:	2b00      	cmp	r3, #0
 80286e4:	d048      	beq.n	8028778 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80286e6:	eb0a 0603 	add.w	r6, sl, r3
 80286ea:	9b01      	ldr	r3, [sp, #4]
 80286ec:	b2b6      	uxth	r6, r6
 80286ee:	1cd8      	adds	r0, r3, #3
 80286f0:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 80286f4:	eb07 030a 	add.w	r3, r7, sl
 80286f8:	7b5b      	ldrb	r3, [r3, #13]
 80286fa:	fb11 f208 	smulbb	r2, r1, r8
 80286fe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028702:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028706:	4463      	add	r3, ip
 8028708:	fb01 2105 	mla	r1, r1, r5, r2
 802870c:	b289      	uxth	r1, r1
 802870e:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 8028712:	f101 0b01 	add.w	fp, r1, #1
 8028716:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802871a:	1209      	asrs	r1, r1, #8
 802871c:	fb12 fb08 	smulbb	fp, r2, r8
 8028720:	f800 1c03 	strb.w	r1, [r0, #-3]
 8028724:	785a      	ldrb	r2, [r3, #1]
 8028726:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 802872a:	fb02 b205 	mla	r2, r2, r5, fp
 802872e:	b292      	uxth	r2, r2
 8028730:	f102 0b01 	add.w	fp, r2, #1
 8028734:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028738:	1212      	asrs	r2, r2, #8
 802873a:	fb11 f108 	smulbb	r1, r1, r8
 802873e:	f800 2c02 	strb.w	r2, [r0, #-2]
 8028742:	789b      	ldrb	r3, [r3, #2]
 8028744:	f10a 0a01 	add.w	sl, sl, #1
 8028748:	fb03 1305 	mla	r3, r3, r5, r1
 802874c:	b29b      	uxth	r3, r3
 802874e:	1c5a      	adds	r2, r3, #1
 8028750:	fa1f fa8a 	uxth.w	sl, sl
 8028754:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028758:	121b      	asrs	r3, r3, #8
 802875a:	45b2      	cmp	sl, r6
 802875c:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028760:	f100 0003 	add.w	r0, r0, #3
 8028764:	d1c4      	bne.n	80286f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8028766:	9b02      	ldr	r3, [sp, #8]
 8028768:	9a01      	ldr	r2, [sp, #4]
 802876a:	3b01      	subs	r3, #1
 802876c:	b29b      	uxth	r3, r3
 802876e:	3301      	adds	r3, #1
 8028770:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028774:	441a      	add	r2, r3
 8028776:	9201      	str	r2, [sp, #4]
 8028778:	4574      	cmp	r4, lr
 802877a:	d330      	bcc.n	80287de <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802877c:	4b36      	ldr	r3, [pc, #216]	@ (8028858 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 802877e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028780:	881b      	ldrh	r3, [r3, #0]
 8028782:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8028784:	1a5b      	subs	r3, r3, r1
 8028786:	9901      	ldr	r1, [sp, #4]
 8028788:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802878c:	4419      	add	r1, r3
 802878e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028790:	3201      	adds	r2, #1
 8028792:	429a      	cmp	r2, r3
 8028794:	920c      	str	r2, [sp, #48]	@ 0x30
 8028796:	9101      	str	r1, [sp, #4]
 8028798:	f000 80ab 	beq.w	80288f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802879c:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 80287a0:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 80287a4:	9c07      	ldr	r4, [sp, #28]
 80287a6:	eba9 090e 	sub.w	r9, r9, lr
 80287aa:	fa1f f989 	uxth.w	r9, r9
 80287ae:	f1b9 0f00 	cmp.w	r9, #0
 80287b2:	bf14      	ite	ne
 80287b4:	f04f 0e00 	movne.w	lr, #0
 80287b8:	f04f 0900 	moveq.w	r9, #0
 80287bc:	9b06      	ldr	r3, [sp, #24]
 80287be:	9a01      	ldr	r2, [sp, #4]
 80287c0:	4293      	cmp	r3, r2
 80287c2:	d913      	bls.n	80287ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80287c4:	2c00      	cmp	r4, #0
 80287c6:	f47f af43 	bne.w	8028650 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 80287ca:	e750      	b.n	802866e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 80287cc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80287d0:	fa1f f08a 	uxth.w	r0, sl
 80287d4:	fb94 f4f0 	sdiv	r4, r4, r0
 80287d8:	b2a3      	uxth	r3, r4
 80287da:	9314      	str	r3, [sp, #80]	@ 0x50
 80287dc:	e6ab      	b.n	8028536 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 80287de:	9b06      	ldr	r3, [sp, #24]
 80287e0:	9a01      	ldr	r2, [sp, #4]
 80287e2:	9c07      	ldr	r4, [sp, #28]
 80287e4:	4293      	cmp	r3, r2
 80287e6:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 80287ea:	d8eb      	bhi.n	80287c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 80287ec:	4b19      	ldr	r3, [pc, #100]	@ (8028854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 80287ee:	6818      	ldr	r0, [r3, #0]
 80287f0:	6803      	ldr	r3, [r0, #0]
 80287f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80287f4:	4798      	blx	r3
 80287f6:	b01b      	add	sp, #108	@ 0x6c
 80287f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80287fc:	ebae 0304 	sub.w	r3, lr, r4
 8028800:	b29b      	uxth	r3, r3
 8028802:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028804:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028806:	9402      	str	r4, [sp, #8]
 8028808:	2bff      	cmp	r3, #255	@ 0xff
 802880a:	f8cd 901c 	str.w	r9, [sp, #28]
 802880e:	9b02      	ldr	r3, [sp, #8]
 8028810:	f47f af67 	bne.w	80286e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8028814:	2b00      	cmp	r3, #0
 8028816:	d0af      	beq.n	8028778 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8028818:	eb0a 0003 	add.w	r0, sl, r3
 802881c:	9b01      	ldr	r3, [sp, #4]
 802881e:	b280      	uxth	r0, r0
 8028820:	1cda      	adds	r2, r3, #3
 8028822:	eb07 030a 	add.w	r3, r7, sl
 8028826:	7b5b      	ldrb	r3, [r3, #13]
 8028828:	f10a 0a01 	add.w	sl, sl, #1
 802882c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028830:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028834:	4463      	add	r3, ip
 8028836:	f802 1c03 	strb.w	r1, [r2, #-3]
 802883a:	7859      	ldrb	r1, [r3, #1]
 802883c:	fa1f fa8a 	uxth.w	sl, sl
 8028840:	f802 1c02 	strb.w	r1, [r2, #-2]
 8028844:	789b      	ldrb	r3, [r3, #2]
 8028846:	4582      	cmp	sl, r0
 8028848:	f802 3c01 	strb.w	r3, [r2, #-1]
 802884c:	f102 0203 	add.w	r2, r2, #3
 8028850:	d1e7      	bne.n	8028822 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x342>
 8028852:	e788      	b.n	8028766 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x286>
 8028854:	20082ec4 	.word	0x20082ec4
 8028858:	20082ebe 	.word	0x20082ebe
 802885c:	eba4 0409 	sub.w	r4, r4, r9
 8028860:	44ca      	add	sl, r9
 8028862:	b2a4      	uxth	r4, r4
 8028864:	fa1f fa8a 	uxth.w	sl, sl
 8028868:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 802886c:	f04f 0900 	mov.w	r9, #0
 8028870:	e7a4      	b.n	80287bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028872:	9b05      	ldr	r3, [sp, #20]
 8028874:	429a      	cmp	r2, r3
 8028876:	d323      	bcc.n	80288c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e0>
 8028878:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802887a:	7b79      	ldrb	r1, [r7, #13]
 802887c:	183b      	adds	r3, r7, r0
 802887e:	7359      	strb	r1, [r3, #13]
 8028880:	7b7b      	ldrb	r3, [r7, #13]
 8028882:	1c41      	adds	r1, r0, #1
 8028884:	b28c      	uxth	r4, r1
 8028886:	9e05      	ldr	r6, [sp, #20]
 8028888:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 802888c:	f106 0a01 	add.w	sl, r6, #1
 8028890:	9e08      	ldr	r6, [sp, #32]
 8028892:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8028896:	fa1f f38a 	uxth.w	r3, sl
 802889a:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 802889e:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 80288a2:	9305      	str	r3, [sp, #20]
 80288a4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 80288a8:	f04f 0a00 	mov.w	sl, #0
 80288ac:	e6d0      	b.n	8028650 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 80288ae:	2100      	movs	r1, #0
 80288b0:	9103      	str	r1, [sp, #12]
 80288b2:	9904      	ldr	r1, [sp, #16]
 80288b4:	3102      	adds	r1, #2
 80288b6:	9104      	str	r1, [sp, #16]
 80288b8:	e6f0      	b.n	802869c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1bc>
 80288ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80288bc:	3101      	adds	r1, #1
 80288be:	e7e2      	b.n	8028886 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3a6>
 80288c0:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 80288c4:	f893 404f 	ldrb.w	r4, [r3, #79]	@ 0x4f
 80288c8:	4613      	mov	r3, r2
 80288ca:	2c01      	cmp	r4, #1
 80288cc:	d90d      	bls.n	80288ea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 80288ce:	f104 010d 	add.w	r1, r4, #13
 80288d2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80288d4:	4439      	add	r1, r7
 80288d6:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 80288da:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 80288de:	f801 0d01 	strb.w	r0, [r1, #-1]!
 80288e2:	428e      	cmp	r6, r1
 80288e4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80288e8:	d1f5      	bne.n	80288d6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 80288ea:	b2db      	uxtb	r3, r3
 80288ec:	737b      	strb	r3, [r7, #13]
 80288ee:	b2a4      	uxth	r4, r4
 80288f0:	e6db      	b.n	80286aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 80288f2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80288f6:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 80288fa:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80288fc:	1a9b      	subs	r3, r3, r2
 80288fe:	fa1f f983 	uxth.w	r9, r3
 8028902:	f1b9 0f00 	cmp.w	r9, #0
 8028906:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028908:	bf18      	it	ne
 802890a:	2300      	movne	r3, #0
 802890c:	3101      	adds	r1, #1
 802890e:	fa1f fe83 	uxth.w	lr, r3
 8028912:	9111      	str	r1, [sp, #68]	@ 0x44
 8028914:	9b06      	ldr	r3, [sp, #24]
 8028916:	e664      	b.n	80285e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8028918:	4b03      	ldr	r3, [pc, #12]	@ (8028928 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 802891a:	4a04      	ldr	r2, [pc, #16]	@ (802892c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802891c:	f640 41f6 	movw	r1, #3318	@ 0xcf6
 8028920:	4803      	ldr	r0, [pc, #12]	@ (8028930 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028922:	f009 fdc9 	bl	80324b8 <__assert_func>
 8028926:	bf00      	nop
 8028928:	0803633c 	.word	0x0803633c
 802892c:	0803779c 	.word	0x0803779c
 8028930:	08036278 	.word	0x08036278

08028934 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028938:	4690      	mov	r8, r2
 802893a:	8812      	ldrh	r2, [r2, #0]
 802893c:	b095      	sub	sp, #84	@ 0x54
 802893e:	2a01      	cmp	r2, #1
 8028940:	461c      	mov	r4, r3
 8028942:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8028946:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028948:	f040 8107 	bne.w	8028b5a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 802894c:	468a      	mov	sl, r1
 802894e:	6820      	ldr	r0, [r4, #0]
 8028950:	6861      	ldr	r1, [r4, #4]
 8028952:	aa10      	add	r2, sp, #64	@ 0x40
 8028954:	c203      	stmia	r2!, {r0, r1}
 8028956:	6818      	ldr	r0, [r3, #0]
 8028958:	6859      	ldr	r1, [r3, #4]
 802895a:	aa12      	add	r2, sp, #72	@ 0x48
 802895c:	c203      	stmia	r2!, {r0, r1}
 802895e:	a810      	add	r0, sp, #64	@ 0x40
 8028960:	f7e4 f9ce 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028964:	4621      	mov	r1, r4
 8028966:	a812      	add	r0, sp, #72	@ 0x48
 8028968:	f7e4 f9f2 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802896c:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8028970:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8028974:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8028978:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 802897c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8028980:	4879      	ldr	r0, [pc, #484]	@ (8028b68 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028982:	fb11 4105 	smlabb	r1, r1, r5, r4
 8028986:	4422      	add	r2, r4
 8028988:	442b      	add	r3, r5
 802898a:	6800      	ldr	r0, [r0, #0]
 802898c:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8028990:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8028994:	6802      	ldr	r2, [r0, #0]
 8028996:	448a      	add	sl, r1
 8028998:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 802899c:	4c73      	ldr	r4, [pc, #460]	@ (8028b6c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 802899e:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80289a2:	910c      	str	r1, [sp, #48]	@ 0x30
 80289a4:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 80289a8:	42a3      	cmp	r3, r4
 80289aa:	910e      	str	r1, [sp, #56]	@ 0x38
 80289ac:	f040 80a2 	bne.w	8028af4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 80289b0:	6841      	ldr	r1, [r0, #4]
 80289b2:	4c6f      	ldr	r4, [pc, #444]	@ (8028b70 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80289b4:	680b      	ldr	r3, [r1, #0]
 80289b6:	699b      	ldr	r3, [r3, #24]
 80289b8:	42a3      	cmp	r3, r4
 80289ba:	f040 80c1 	bne.w	8028b40 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80289be:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80289c0:	4798      	blx	r3
 80289c2:	4b6c      	ldr	r3, [pc, #432]	@ (8028b74 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 80289c4:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 80289c8:	881b      	ldrh	r3, [r3, #0]
 80289ca:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 80289ce:	fb01 2303 	mla	r3, r1, r3, r2
 80289d2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80289d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80289d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80289da:	2b00      	cmp	r3, #0
 80289dc:	f340 8082 	ble.w	8028ae4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 80289e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80289e2:	2b00      	cmp	r3, #0
 80289e4:	dd7e      	ble.n	8028ae4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 80289e6:	2200      	movs	r2, #0
 80289e8:	f04f 0e03 	mov.w	lr, #3
 80289ec:	f04f 0c04 	mov.w	ip, #4
 80289f0:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 80289f4:	009b      	lsls	r3, r3, #2
 80289f6:	920d      	str	r2, [sp, #52]	@ 0x34
 80289f8:	b2bf      	uxth	r7, r7
 80289fa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80289fc:	fa1f f289 	uxth.w	r2, r9
 8028a00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8028a02:	4655      	mov	r5, sl
 8028a04:	1d18      	adds	r0, r3, #4
 8028a06:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028a08:	eb0a 0603 	add.w	r6, sl, r3
 8028a0c:	e03e      	b.n	8028a8c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028a0e:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 8028a12:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 8028a16:	fb13 f307 	smulbb	r3, r3, r7
 8028a1a:	fb0b 3302 	mla	r3, fp, r2, r3
 8028a1e:	b29b      	uxth	r3, r3
 8028a20:	f103 0b01 	add.w	fp, r3, #1
 8028a24:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 8028a28:	121b      	asrs	r3, r3, #8
 8028a2a:	fb14 f407 	smulbb	r4, r4, r7
 8028a2e:	f800 3c04 	strb.w	r3, [r0, #-4]
 8028a32:	784b      	ldrb	r3, [r1, #1]
 8028a34:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 8028a38:	fb03 4302 	mla	r3, r3, r2, r4
 8028a3c:	b29b      	uxth	r3, r3
 8028a3e:	1c5c      	adds	r4, r3, #1
 8028a40:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8028a44:	121b      	asrs	r3, r3, #8
 8028a46:	fb1b fb07 	smulbb	fp, fp, r7
 8028a4a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028a4e:	788c      	ldrb	r4, [r1, #2]
 8028a50:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8028a54:	fb04 b402 	mla	r4, r4, r2, fp
 8028a58:	b2a4      	uxth	r4, r4
 8028a5a:	f104 0b01 	add.w	fp, r4, #1
 8028a5e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8028a62:	1224      	asrs	r4, r4, #8
 8028a64:	fb13 fb07 	smulbb	fp, r3, r7
 8028a68:	f800 4c02 	strb.w	r4, [r0, #-2]
 8028a6c:	78cb      	ldrb	r3, [r1, #3]
 8028a6e:	42ae      	cmp	r6, r5
 8028a70:	fb03 b302 	mla	r3, r3, r2, fp
 8028a74:	b29b      	uxth	r3, r3
 8028a76:	f103 0101 	add.w	r1, r3, #1
 8028a7a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028a7e:	ea4f 2323 	mov.w	r3, r3, asr #8
 8028a82:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028a86:	f100 0004 	add.w	r0, r0, #4
 8028a8a:	d018      	beq.n	8028abe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8028a8c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8028a90:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028a94:	fb1e c303 	smlabb	r3, lr, r3, ip
 8028a98:	eb08 0103 	add.w	r1, r8, r3
 8028a9c:	f818 b003 	ldrb.w	fp, [r8, r3]
 8028aa0:	d1b5      	bne.n	8028a0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028aa2:	f800 bc04 	strb.w	fp, [r0, #-4]
 8028aa6:	784b      	ldrb	r3, [r1, #1]
 8028aa8:	42ae      	cmp	r6, r5
 8028aaa:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028aae:	788b      	ldrb	r3, [r1, #2]
 8028ab0:	f100 0004 	add.w	r0, r0, #4
 8028ab4:	f800 9c05 	strb.w	r9, [r0, #-5]
 8028ab8:	f800 3c06 	strb.w	r3, [r0, #-6]
 8028abc:	d1e6      	bne.n	8028a8c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028abe:	4b2d      	ldr	r3, [pc, #180]	@ (8028b74 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028ac0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8028ac2:	881b      	ldrh	r3, [r3, #0]
 8028ac4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028ac6:	1a1b      	subs	r3, r3, r0
 8028ac8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8028acc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028ace:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028ad0:	441c      	add	r4, r3
 8028ad2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028ad4:	3001      	adds	r0, #1
 8028ad6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8028ada:	4283      	cmp	r3, r0
 8028adc:	900d      	str	r0, [sp, #52]	@ 0x34
 8028ade:	940b      	str	r4, [sp, #44]	@ 0x2c
 8028ae0:	448a      	add	sl, r1
 8028ae2:	d18d      	bne.n	8028a00 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028ae4:	4b20      	ldr	r3, [pc, #128]	@ (8028b68 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028ae6:	6818      	ldr	r0, [r3, #0]
 8028ae8:	6803      	ldr	r3, [r0, #0]
 8028aea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028aec:	4798      	blx	r3
 8028aee:	b015      	add	sp, #84	@ 0x54
 8028af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028af4:	4798      	blx	r3
 8028af6:	2801      	cmp	r0, #1
 8028af8:	d125      	bne.n	8028b46 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8028afa:	4b1f      	ldr	r3, [pc, #124]	@ (8028b78 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8028afc:	6818      	ldr	r0, [r3, #0]
 8028afe:	b330      	cbz	r0, 8028b4e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8028b00:	2502      	movs	r5, #2
 8028b02:	240b      	movs	r4, #11
 8028b04:	2600      	movs	r6, #0
 8028b06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8028b0a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8028b0e:	9302      	str	r3, [sp, #8]
 8028b10:	4b18      	ldr	r3, [pc, #96]	@ (8028b74 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028b12:	9201      	str	r2, [sp, #4]
 8028b14:	881b      	ldrh	r3, [r3, #0]
 8028b16:	9508      	str	r5, [sp, #32]
 8028b18:	9407      	str	r4, [sp, #28]
 8028b1a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8028b1e:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8028b22:	9306      	str	r3, [sp, #24]
 8028b24:	f8cd 9010 	str.w	r9, [sp, #16]
 8028b28:	4642      	mov	r2, r8
 8028b2a:	4651      	mov	r1, sl
 8028b2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028b30:	9605      	str	r6, [sp, #20]
 8028b32:	9503      	str	r5, [sp, #12]
 8028b34:	9400      	str	r4, [sp, #0]
 8028b36:	f7f8 f857 	bl	8020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8028b3a:	b015      	add	sp, #84	@ 0x54
 8028b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b40:	4608      	mov	r0, r1
 8028b42:	4798      	blx	r3
 8028b44:	e7d7      	b.n	8028af6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8028b46:	4b08      	ldr	r3, [pc, #32]	@ (8028b68 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028b48:	6818      	ldr	r0, [r3, #0]
 8028b4a:	6802      	ldr	r2, [r0, #0]
 8028b4c:	e737      	b.n	80289be <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8028b4e:	4b0b      	ldr	r3, [pc, #44]	@ (8028b7c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8028b50:	4a0b      	ldr	r2, [pc, #44]	@ (8028b80 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8028b52:	217c      	movs	r1, #124	@ 0x7c
 8028b54:	480b      	ldr	r0, [pc, #44]	@ (8028b84 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8028b56:	f009 fcaf 	bl	80324b8 <__assert_func>
 8028b5a:	4b0b      	ldr	r3, [pc, #44]	@ (8028b88 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8028b5c:	4a0b      	ldr	r2, [pc, #44]	@ (8028b8c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8028b5e:	f640 51d3 	movw	r1, #3539	@ 0xdd3
 8028b62:	480b      	ldr	r0, [pc, #44]	@ (8028b90 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8028b64:	f009 fca8 	bl	80324b8 <__assert_func>
 8028b68:	20082ec4 	.word	0x20082ec4
 8028b6c:	0800121d 	.word	0x0800121d
 8028b70:	0800baa5 	.word	0x0800baa5
 8028b74:	20082ebe 	.word	0x20082ebe
 8028b78:	20083364 	.word	0x20083364
 8028b7c:	080361d4 	.word	0x080361d4
 8028b80:	08036a40 	.word	0x08036a40
 8028b84:	080361fc 	.word	0x080361fc
 8028b88:	0803629c 	.word	0x0803629c
 8028b8c:	08036fe8 	.word	0x08036fe8
 8028b90:	08036278 	.word	0x08036278

08028b94 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b98:	4617      	mov	r7, r2
 8028b9a:	7812      	ldrb	r2, [r2, #0]
 8028b9c:	b08f      	sub	sp, #60	@ 0x3c
 8028b9e:	2a01      	cmp	r2, #1
 8028ba0:	461e      	mov	r6, r3
 8028ba2:	f89d 8064 	ldrb.w	r8, [sp, #100]	@ 0x64
 8028ba6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028ba8:	f040 8203 	bne.w	8028fb2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41e>
 8028bac:	6830      	ldr	r0, [r6, #0]
 8028bae:	460d      	mov	r5, r1
 8028bb0:	6871      	ldr	r1, [r6, #4]
 8028bb2:	aa0a      	add	r2, sp, #40	@ 0x28
 8028bb4:	c203      	stmia	r2!, {r0, r1}
 8028bb6:	6818      	ldr	r0, [r3, #0]
 8028bb8:	6859      	ldr	r1, [r3, #4]
 8028bba:	aa0c      	add	r2, sp, #48	@ 0x30
 8028bbc:	c203      	stmia	r2!, {r0, r1}
 8028bbe:	a80a      	add	r0, sp, #40	@ 0x28
 8028bc0:	f7e4 f89e 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028bc4:	4631      	mov	r1, r6
 8028bc6:	a80c      	add	r0, sp, #48	@ 0x30
 8028bc8:	f7e4 f8c2 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028bcc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028bd0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028bd4:	f003 0201 	and.w	r2, r3, #1
 8028bd8:	4614      	mov	r4, r2
 8028bda:	9206      	str	r2, [sp, #24]
 8028bdc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8028be0:	4423      	add	r3, r4
 8028be2:	fb02 1303 	mla	r3, r2, r3, r1
 8028be6:	f8bd 002a 	ldrh.w	r0, [sp, #42]	@ 0x2a
 8028bea:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8028bee:	4402      	add	r2, r0
 8028bf0:	489d      	ldr	r0, [pc, #628]	@ (8028e68 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028bf2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028bf6:	440e      	add	r6, r1
 8028bf8:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8028bfc:	6800      	ldr	r0, [r0, #0]
 8028bfe:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8028c02:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8028c06:	9302      	str	r3, [sp, #8]
 8028c08:	f001 0301 	and.w	r3, r1, #1
 8028c0c:	6802      	ldr	r2, [r0, #0]
 8028c0e:	9305      	str	r3, [sp, #20]
 8028c10:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8028c14:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8028c16:	9303      	str	r3, [sp, #12]
 8028c18:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8028c1c:	4790      	blx	r2
 8028c1e:	4a93      	ldr	r2, [pc, #588]	@ (8028e6c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028c20:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8028c24:	8812      	ldrh	r2, [r2, #0]
 8028c26:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028c2a:	fb05 f502 	mul.w	r5, r5, r2
 8028c2e:	fb02 1303 	mla	r3, r2, r3, r1
 8028c32:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028c36:	461a      	mov	r2, r3
 8028c38:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028c3c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8028c40:	f107 0704 	add.w	r7, r7, #4
 8028c44:	9304      	str	r3, [sp, #16]
 8028c46:	f000 8113 	beq.w	8028e70 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028c4a:	4614      	mov	r4, r2
 8028c4c:	9a04      	ldr	r2, [sp, #16]
 8028c4e:	4294      	cmp	r4, r2
 8028c50:	f080 80c2 	bcs.w	8028dd8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028c54:	ea4f 6308 	mov.w	r3, r8, lsl #24
 8028c58:	9300      	str	r3, [sp, #0]
 8028c5a:	9b03      	ldr	r3, [sp, #12]
 8028c5c:	3b01      	subs	r3, #1
 8028c5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8028c60:	9b05      	ldr	r3, [sp, #20]
 8028c62:	2b00      	cmp	r3, #0
 8028c64:	f040 80ef 	bne.w	8028e46 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8028c68:	9b02      	ldr	r3, [sp, #8]
 8028c6a:	9301      	str	r3, [sp, #4]
 8028c6c:	9b03      	ldr	r3, [sp, #12]
 8028c6e:	2b01      	cmp	r3, #1
 8028c70:	f340 809c 	ble.w	8028dac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>
 8028c74:	3b02      	subs	r3, #2
 8028c76:	9308      	str	r3, [sp, #32]
 8028c78:	f104 0e10 	add.w	lr, r4, #16
 8028c7c:	085b      	lsrs	r3, r3, #1
 8028c7e:	9307      	str	r3, [sp, #28]
 8028c80:	eb0e 0ec3 	add.w	lr, lr, r3, lsl #3
 8028c84:	9b01      	ldr	r3, [sp, #4]
 8028c86:	f104 0608 	add.w	r6, r4, #8
 8028c8a:	f103 3cff 	add.w	ip, r3, #4294967295
 8028c8e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8028c92:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8028c96:	091b      	lsrs	r3, r3, #4
 8028c98:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028c9c:	18f8      	adds	r0, r7, r3
 8028c9e:	5cfa      	ldrb	r2, [r7, r3]
 8028ca0:	f890 9001 	ldrb.w	r9, [r0, #1]
 8028ca4:	7883      	ldrb	r3, [r0, #2]
 8028ca6:	0e08      	lsrs	r0, r1, #24
 8028ca8:	f000 80ae 	beq.w	8028e08 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8028cac:	fb08 f500 	mul.w	r5, r8, r0
 8028cb0:	fb18 fb03 	smulbb	fp, r8, r3
 8028cb4:	1c6b      	adds	r3, r5, #1
 8028cb6:	eb03 2525 	add.w	r5, r3, r5, asr #8
 8028cba:	fb18 f202 	smulbb	r2, r8, r2
 8028cbe:	122d      	asrs	r5, r5, #8
 8028cc0:	fb18 f909 	smulbb	r9, r8, r9
 8028cc4:	eba0 0a05 	sub.w	sl, r0, r5
 8028cc8:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8028ccc:	fb0a b303 	mla	r3, sl, r3, fp
 8028cd0:	fa5f fb81 	uxtb.w	fp, r1
 8028cd4:	fb0a 220b 	mla	r2, sl, fp, r2
 8028cd8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028cdc:	4440      	add	r0, r8
 8028cde:	fb0a 9101 	mla	r1, sl, r1, r9
 8028ce2:	1b40      	subs	r0, r0, r5
 8028ce4:	b2c0      	uxtb	r0, r0
 8028ce6:	fbb3 f3f0 	udiv	r3, r3, r0
 8028cea:	fbb2 f2f0 	udiv	r2, r2, r0
 8028cee:	fbb1 f1f0 	udiv	r1, r1, r0
 8028cf2:	041b      	lsls	r3, r3, #16
 8028cf4:	b2d2      	uxtb	r2, r2
 8028cf6:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8028cfa:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8028cfe:	0209      	lsls	r1, r1, #8
 8028d00:	4303      	orrs	r3, r0
 8028d02:	b289      	uxth	r1, r1
 8028d04:	430b      	orrs	r3, r1
 8028d06:	f846 3c08 	str.w	r3, [r6, #-8]
 8028d0a:	f89c 2000 	ldrb.w	r2, [ip]
 8028d0e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8028d12:	f002 020f 	and.w	r2, r2, #15
 8028d16:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028d1a:	0e18      	lsrs	r0, r3, #24
 8028d1c:	eb07 0102 	add.w	r1, r7, r2
 8028d20:	d062      	beq.n	8028de8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>
 8028d22:	fb08 f500 	mul.w	r5, r8, r0
 8028d26:	f105 0901 	add.w	r9, r5, #1
 8028d2a:	eb09 2925 	add.w	r9, r9, r5, asr #8
 8028d2e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028d32:	eba0 0b09 	sub.w	fp, r0, r9
 8028d36:	788d      	ldrb	r5, [r1, #2]
 8028d38:	f891 a001 	ldrb.w	sl, [r1, #1]
 8028d3c:	b2d9      	uxtb	r1, r3
 8028d3e:	fb0b f101 	mul.w	r1, fp, r1
 8028d42:	fb15 f508 	smulbb	r5, r5, r8
 8028d46:	5cba      	ldrb	r2, [r7, r2]
 8028d48:	fb1a fa08 	smulbb	sl, sl, r8
 8028d4c:	fb02 1108 	mla	r1, r2, r8, r1
 8028d50:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8028d54:	fb0b 5502 	mla	r5, fp, r2, r5
 8028d58:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8028d5c:	4440      	add	r0, r8
 8028d5e:	fb0b a202 	mla	r2, fp, r2, sl
 8028d62:	eba0 0009 	sub.w	r0, r0, r9
 8028d66:	b2c0      	uxtb	r0, r0
 8028d68:	fbb1 f3f0 	udiv	r3, r1, r0
 8028d6c:	fbb5 f5f0 	udiv	r5, r5, r0
 8028d70:	fbb2 f2f0 	udiv	r2, r2, r0
 8028d74:	b2db      	uxtb	r3, r3
 8028d76:	042d      	lsls	r5, r5, #16
 8028d78:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8028d7c:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
 8028d80:	0212      	lsls	r2, r2, #8
 8028d82:	432b      	orrs	r3, r5
 8028d84:	b292      	uxth	r2, r2
 8028d86:	4313      	orrs	r3, r2
 8028d88:	f846 3c04 	str.w	r3, [r6, #-4]
 8028d8c:	3608      	adds	r6, #8
 8028d8e:	4576      	cmp	r6, lr
 8028d90:	f47f af7d 	bne.w	8028c8e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028d94:	9b07      	ldr	r3, [sp, #28]
 8028d96:	9901      	ldr	r1, [sp, #4]
 8028d98:	1c5a      	adds	r2, r3, #1
 8028d9a:	4411      	add	r1, r2
 8028d9c:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
 8028da0:	9a08      	ldr	r2, [sp, #32]
 8028da2:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8028da6:	9101      	str	r1, [sp, #4]
 8028da8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028dac:	2b01      	cmp	r3, #1
 8028dae:	d032      	beq.n	8028e16 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x282>
 8028db0:	9906      	ldr	r1, [sp, #24]
 8028db2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028db6:	4a2d      	ldr	r2, [pc, #180]	@ (8028e6c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028db8:	440b      	add	r3, r1
 8028dba:	8812      	ldrh	r2, [r2, #0]
 8028dbc:	9903      	ldr	r1, [sp, #12]
 8028dbe:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028dc2:	1a52      	subs	r2, r2, r1
 8028dc4:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028dc8:	9a02      	ldr	r2, [sp, #8]
 8028dca:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8028dce:	9302      	str	r3, [sp, #8]
 8028dd0:	9b04      	ldr	r3, [sp, #16]
 8028dd2:	42a3      	cmp	r3, r4
 8028dd4:	f63f af44 	bhi.w	8028c60 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028dd8:	4b23      	ldr	r3, [pc, #140]	@ (8028e68 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028dda:	6818      	ldr	r0, [r3, #0]
 8028ddc:	6803      	ldr	r3, [r0, #0]
 8028dde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028de0:	4798      	blx	r3
 8028de2:	b00f      	add	sp, #60	@ 0x3c
 8028de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028de8:	5cbb      	ldrb	r3, [r7, r2]
 8028dea:	9a00      	ldr	r2, [sp, #0]
 8028dec:	7888      	ldrb	r0, [r1, #2]
 8028dee:	4313      	orrs	r3, r2
 8028df0:	784a      	ldrb	r2, [r1, #1]
 8028df2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8028df6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028dfa:	f846 3c04 	str.w	r3, [r6, #-4]
 8028dfe:	3608      	adds	r6, #8
 8028e00:	45b6      	cmp	lr, r6
 8028e02:	f47f af44 	bne.w	8028c8e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028e06:	e7c5      	b.n	8028d94 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8028e08:	9900      	ldr	r1, [sp, #0]
 8028e0a:	430a      	orrs	r2, r1
 8028e0c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028e10:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
 8028e14:	e777      	b.n	8028d06 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8028e16:	9b01      	ldr	r3, [sp, #4]
 8028e18:	4621      	mov	r1, r4
 8028e1a:	7818      	ldrb	r0, [r3, #0]
 8028e1c:	4642      	mov	r2, r8
 8028e1e:	0900      	lsrs	r0, r0, #4
 8028e20:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028e24:	4438      	add	r0, r7
 8028e26:	f7fb f86d 	bl	8023f04 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028e2a:	4b10      	ldr	r3, [pc, #64]	@ (8028e6c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028e2c:	9903      	ldr	r1, [sp, #12]
 8028e2e:	881a      	ldrh	r2, [r3, #0]
 8028e30:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e34:	1a52      	subs	r2, r2, r1
 8028e36:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028e3a:	9a06      	ldr	r2, [sp, #24]
 8028e3c:	3404      	adds	r4, #4
 8028e3e:	4413      	add	r3, r2
 8028e40:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028e44:	e7c0      	b.n	8028dc8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>
 8028e46:	9d02      	ldr	r5, [sp, #8]
 8028e48:	4621      	mov	r1, r4
 8028e4a:	7828      	ldrb	r0, [r5, #0]
 8028e4c:	4642      	mov	r2, r8
 8028e4e:	f000 000f 	and.w	r0, r0, #15
 8028e52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028e56:	4438      	add	r0, r7
 8028e58:	f7fb f854 	bl	8023f04 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028e5c:	1c6b      	adds	r3, r5, #1
 8028e5e:	9301      	str	r3, [sp, #4]
 8028e60:	3404      	adds	r4, #4
 8028e62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028e64:	e703      	b.n	8028c6e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028e66:	bf00      	nop
 8028e68:	20082ec4 	.word	0x20082ec4
 8028e6c:	20082ebe 	.word	0x20082ebe
 8028e70:	4615      	mov	r5, r2
 8028e72:	9a04      	ldr	r2, [sp, #16]
 8028e74:	4295      	cmp	r5, r2
 8028e76:	d2af      	bcs.n	8028dd8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028e78:	9b03      	ldr	r3, [sp, #12]
 8028e7a:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028e7e:	469a      	mov	sl, r3
 8028e80:	f103 38ff 	add.w	r8, r3, #4294967295
 8028e84:	9b05      	ldr	r3, [sp, #20]
 8028e86:	2b00      	cmp	r3, #0
 8028e88:	d07d      	beq.n	8028f86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f2>
 8028e8a:	4646      	mov	r6, r8
 8028e8c:	f899 3000 	ldrb.w	r3, [r9]
 8028e90:	f109 0e01 	add.w	lr, r9, #1
 8028e94:	f003 030f 	and.w	r3, r3, #15
 8028e98:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028e9c:	18fa      	adds	r2, r7, r3
 8028e9e:	5cfb      	ldrb	r3, [r7, r3]
 8028ea0:	7891      	ldrb	r1, [r2, #2]
 8028ea2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028ea6:	7852      	ldrb	r2, [r2, #1]
 8028ea8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028eac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028eb0:	f845 3b04 	str.w	r3, [r5], #4
 8028eb4:	2e01      	cmp	r6, #1
 8028eb6:	dd3e      	ble.n	8028f36 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 8028eb8:	3e02      	subs	r6, #2
 8028eba:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 8028ebe:	f105 0410 	add.w	r4, r5, #16
 8028ec2:	eb04 04cc 	add.w	r4, r4, ip, lsl #3
 8028ec6:	f105 0108 	add.w	r1, r5, #8
 8028eca:	f10e 30ff 	add.w	r0, lr, #4294967295
 8028ece:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8028ed2:	3108      	adds	r1, #8
 8028ed4:	091b      	lsrs	r3, r3, #4
 8028ed6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028eda:	5cfa      	ldrb	r2, [r7, r3]
 8028edc:	eb07 0b03 	add.w	fp, r7, r3
 8028ee0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028ee4:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028ee8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028eec:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028ef0:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028ef4:	f841 3c10 	str.w	r3, [r1, #-16]
 8028ef8:	7803      	ldrb	r3, [r0, #0]
 8028efa:	f003 030f 	and.w	r3, r3, #15
 8028efe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f02:	5cfa      	ldrb	r2, [r7, r3]
 8028f04:	eb07 0b03 	add.w	fp, r7, r3
 8028f08:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028f0c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028f10:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028f14:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028f18:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028f1c:	f841 3c0c 	str.w	r3, [r1, #-12]
 8028f20:	428c      	cmp	r4, r1
 8028f22:	d1d4      	bne.n	8028ece <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 8028f24:	f10c 0301 	add.w	r3, ip, #1
 8028f28:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 8028f2c:	449e      	add	lr, r3
 8028f2e:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8028f32:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8028f36:	2e01      	cmp	r6, #1
 8028f38:	d128      	bne.n	8028f8c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f8>
 8028f3a:	f89e 3000 	ldrb.w	r3, [lr]
 8028f3e:	091b      	lsrs	r3, r3, #4
 8028f40:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f44:	18fa      	adds	r2, r7, r3
 8028f46:	5cfb      	ldrb	r3, [r7, r3]
 8028f48:	7891      	ldrb	r1, [r2, #2]
 8028f4a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028f4e:	7852      	ldrb	r2, [r2, #1]
 8028f50:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028f54:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028f58:	602b      	str	r3, [r5, #0]
 8028f5a:	4b19      	ldr	r3, [pc, #100]	@ (8028fc0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028f5c:	881a      	ldrh	r2, [r3, #0]
 8028f5e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028f62:	eba2 020a 	sub.w	r2, r2, sl
 8028f66:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028f6a:	9a06      	ldr	r2, [sp, #24]
 8028f6c:	3504      	adds	r5, #4
 8028f6e:	4413      	add	r3, r2
 8028f70:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028f74:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028f78:	9b04      	ldr	r3, [sp, #16]
 8028f7a:	42ab      	cmp	r3, r5
 8028f7c:	f67f af2c 	bls.w	8028dd8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028f80:	9b05      	ldr	r3, [sp, #20]
 8028f82:	2b00      	cmp	r3, #0
 8028f84:	d181      	bne.n	8028e8a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8028f86:	46ce      	mov	lr, r9
 8028f88:	4656      	mov	r6, sl
 8028f8a:	e793      	b.n	8028eb4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 8028f8c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028f90:	4a0b      	ldr	r2, [pc, #44]	@ (8028fc0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028f92:	9906      	ldr	r1, [sp, #24]
 8028f94:	8812      	ldrh	r2, [r2, #0]
 8028f96:	440b      	add	r3, r1
 8028f98:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028f9c:	eba2 020a 	sub.w	r2, r2, sl
 8028fa0:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028fa4:	9b04      	ldr	r3, [sp, #16]
 8028fa6:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028faa:	42ab      	cmp	r3, r5
 8028fac:	f63f af6a 	bhi.w	8028e84 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>
 8028fb0:	e712      	b.n	8028dd8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028fb2:	4b04      	ldr	r3, [pc, #16]	@ (8028fc4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x430>)
 8028fb4:	4a04      	ldr	r2, [pc, #16]	@ (8028fc8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x434>)
 8028fb6:	f640 612c 	movw	r1, #3628	@ 0xe2c
 8028fba:	4804      	ldr	r0, [pc, #16]	@ (8028fcc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8028fbc:	f009 fa7c 	bl	80324b8 <__assert_func>
 8028fc0:	20082ebe 	.word	0x20082ebe
 8028fc4:	0803633c 	.word	0x0803633c
 8028fc8:	0803732c 	.word	0x0803732c
 8028fcc:	08036278 	.word	0x08036278

08028fd0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028fd4:	7814      	ldrb	r4, [r2, #0]
 8028fd6:	b091      	sub	sp, #68	@ 0x44
 8028fd8:	2c01      	cmp	r4, #1
 8028fda:	461d      	mov	r5, r3
 8028fdc:	9208      	str	r2, [sp, #32]
 8028fde:	9102      	str	r1, [sp, #8]
 8028fe0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8028fe2:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 8028fe6:	f040 814b 	bne.w	8029280 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 8028fea:	6828      	ldr	r0, [r5, #0]
 8028fec:	6869      	ldr	r1, [r5, #4]
 8028fee:	aa0c      	add	r2, sp, #48	@ 0x30
 8028ff0:	c203      	stmia	r2!, {r0, r1}
 8028ff2:	6818      	ldr	r0, [r3, #0]
 8028ff4:	6859      	ldr	r1, [r3, #4]
 8028ff6:	aa0e      	add	r2, sp, #56	@ 0x38
 8028ff8:	c203      	stmia	r2!, {r0, r1}
 8028ffa:	a80c      	add	r0, sp, #48	@ 0x30
 8028ffc:	f7e3 fe80 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029000:	4629      	mov	r1, r5
 8029002:	a80e      	add	r0, sp, #56	@ 0x38
 8029004:	f7e3 fea4 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029008:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 802900c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8029010:	f340 8130 	ble.w	8029274 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8029014:	4623      	mov	r3, r4
 8029016:	b291      	uxth	r1, r2
 8029018:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 802901c:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 8029020:	fb92 f5f3 	sdiv	r5, r2, r3
 8029024:	b2ae      	uxth	r6, r5
 8029026:	fb03 2416 	mls	r4, r3, r6, r2
 802902a:	fb14 0101 	smlabb	r1, r4, r1, r0
 802902e:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8029032:	b289      	uxth	r1, r1
 8029034:	441c      	add	r4, r3
 8029036:	3c01      	subs	r4, #1
 8029038:	9100      	str	r1, [sp, #0]
 802903a:	fb94 f4f3 	sdiv	r4, r4, r3
 802903e:	b136      	cbz	r6, 802904e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x7e>
 8029040:	9b08      	ldr	r3, [sp, #32]
 8029042:	9902      	ldr	r1, [sp, #8]
 8029044:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 8029048:	ba1b      	rev	r3, r3
 802904a:	4419      	add	r1, r3
 802904c:	9102      	str	r1, [sp, #8]
 802904e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8029052:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8029056:	440a      	add	r2, r1
 8029058:	498d      	ldr	r1, [pc, #564]	@ (8029290 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 802905a:	4403      	add	r3, r0
 802905c:	6808      	ldr	r0, [r1, #0]
 802905e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8029062:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8029066:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 802906a:	6803      	ldr	r3, [r0, #0]
 802906c:	960a      	str	r6, [sp, #40]	@ 0x28
 802906e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029070:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8029074:	4798      	blx	r3
 8029076:	9b00      	ldr	r3, [sp, #0]
 8029078:	4986      	ldr	r1, [pc, #536]	@ (8029294 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 802907a:	2b00      	cmp	r3, #0
 802907c:	bf0c      	ite	eq
 802907e:	4633      	moveq	r3, r6
 8029080:	2300      	movne	r3, #0
 8029082:	8809      	ldrh	r1, [r1, #0]
 8029084:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8029088:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802908c:	fb05 f501 	mul.w	r5, r5, r1
 8029090:	fb01 6202 	mla	r2, r1, r2, r6
 8029094:	b2a4      	uxth	r4, r4
 8029096:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 802909a:	eb08 0285 	add.w	r2, r8, r5, lsl #2
 802909e:	00a4      	lsls	r4, r4, #2
 80290a0:	1d21      	adds	r1, r4, #4
 80290a2:	4590      	cmp	r8, r2
 80290a4:	9203      	str	r2, [sp, #12]
 80290a6:	9109      	str	r1, [sp, #36]	@ 0x24
 80290a8:	fa1f f983 	uxth.w	r9, r3
 80290ac:	d227      	bcs.n	80290fe <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x12e>
 80290ae:	2300      	movs	r3, #0
 80290b0:	469b      	mov	fp, r3
 80290b2:	ea4f 620a 	mov.w	r2, sl, lsl #24
 80290b6:	9304      	str	r3, [sp, #16]
 80290b8:	9205      	str	r2, [sp, #20]
 80290ba:	f1bb 0f00 	cmp.w	fp, #0
 80290be:	d10f      	bne.n	80290e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 80290c0:	9902      	ldr	r1, [sp, #8]
 80290c2:	780b      	ldrb	r3, [r1, #0]
 80290c4:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 80290c8:	f10b 32ff 	add.w	r2, fp, #4294967295
 80290cc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80290d0:	2a02      	cmp	r2, #2
 80290d2:	9304      	str	r3, [sp, #16]
 80290d4:	f200 80c8 	bhi.w	8029268 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80290d8:	3101      	adds	r1, #1
 80290da:	9102      	str	r1, [sp, #8]
 80290dc:	fa1f fb8b 	uxth.w	fp, fp
 80290e0:	9b00      	ldr	r3, [sp, #0]
 80290e2:	b1a3      	cbz	r3, 802910e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 80290e4:	459b      	cmp	fp, r3
 80290e6:	f080 80b6 	bcs.w	8029256 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x286>
 80290ea:	eba3 0b0b 	sub.w	fp, r3, fp
 80290ee:	fa1f f38b 	uxth.w	r3, fp
 80290f2:	f04f 0b00 	mov.w	fp, #0
 80290f6:	9300      	str	r3, [sp, #0]
 80290f8:	9b03      	ldr	r3, [sp, #12]
 80290fa:	4543      	cmp	r3, r8
 80290fc:	d8dd      	bhi.n	80290ba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xea>
 80290fe:	4b64      	ldr	r3, [pc, #400]	@ (8029290 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8029100:	6818      	ldr	r0, [r3, #0]
 8029102:	6803      	ldr	r3, [r0, #0]
 8029104:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029106:	4798      	blx	r3
 8029108:	b011      	add	sp, #68	@ 0x44
 802910a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802910e:	2303      	movs	r3, #3
 8029110:	4619      	mov	r1, r3
 8029112:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029114:	9b04      	ldr	r3, [sp, #16]
 8029116:	45cb      	cmp	fp, r9
 8029118:	fb11 2c03 	smlabb	ip, r1, r3, r2
 802911c:	9b08      	ldr	r3, [sp, #32]
 802911e:	449c      	add	ip, r3
 8029120:	d377      	bcc.n	8029212 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x242>
 8029122:	ebab 0309 	sub.w	r3, fp, r9
 8029126:	9a00      	ldr	r2, [sp, #0]
 8029128:	b29b      	uxth	r3, r3
 802912a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802912e:	9306      	str	r3, [sp, #24]
 8029130:	9207      	str	r2, [sp, #28]
 8029132:	464b      	mov	r3, r9
 8029134:	d077      	beq.n	8029226 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8029136:	b303      	cbz	r3, 802917a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029138:	3b01      	subs	r3, #1
 802913a:	b29b      	uxth	r3, r3
 802913c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802913e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8029142:	9301      	str	r3, [sp, #4]
 8029144:	f1a8 0e04 	sub.w	lr, r8, #4
 8029148:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802914c:	f89c 4000 	ldrb.w	r4, [ip]
 8029150:	0e18      	lsrs	r0, r3, #24
 8029152:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8029156:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802915a:	d126      	bne.n	80291aa <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 802915c:	9b05      	ldr	r3, [sp, #20]
 802915e:	431c      	orrs	r4, r3
 8029160:	9b01      	ldr	r3, [sp, #4]
 8029162:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8029166:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 802916a:	459e      	cmp	lr, r3
 802916c:	f8ce 6000 	str.w	r6, [lr]
 8029170:	d1ea      	bne.n	8029148 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 8029172:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029174:	3301      	adds	r3, #1
 8029176:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 802917a:	45cb      	cmp	fp, r9
 802917c:	d346      	bcc.n	802920c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802917e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8029180:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8029184:	4b43      	ldr	r3, [pc, #268]	@ (8029294 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 8029186:	fa1f f981 	uxth.w	r9, r1
 802918a:	eba2 0209 	sub.w	r2, r2, r9
 802918e:	881b      	ldrh	r3, [r3, #0]
 8029190:	b292      	uxth	r2, r2
 8029192:	2a00      	cmp	r2, #0
 8029194:	eba3 0301 	sub.w	r3, r3, r1
 8029198:	f8dd b018 	ldr.w	fp, [sp, #24]
 802919c:	bf18      	it	ne
 802919e:	f04f 0900 	movne.w	r9, #0
 80291a2:	9200      	str	r2, [sp, #0]
 80291a4:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 80291a8:	e7a6      	b.n	80290f8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80291aa:	fb0a f200 	mul.w	r2, sl, r0
 80291ae:	fb1a f101 	smulbb	r1, sl, r1
 80291b2:	1c55      	adds	r5, r2, #1
 80291b4:	eb05 2522 	add.w	r5, r5, r2, asr #8
 80291b8:	fb1a f404 	smulbb	r4, sl, r4
 80291bc:	122d      	asrs	r5, r5, #8
 80291be:	fb1a f606 	smulbb	r6, sl, r6
 80291c2:	1b47      	subs	r7, r0, r5
 80291c4:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80291c8:	fb07 1102 	mla	r1, r7, r2, r1
 80291cc:	b2da      	uxtb	r2, r3
 80291ce:	fb07 4402 	mla	r4, r7, r2, r4
 80291d2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80291d6:	4450      	add	r0, sl
 80291d8:	fb07 6202 	mla	r2, r7, r2, r6
 80291dc:	1b45      	subs	r5, r0, r5
 80291de:	b2ed      	uxtb	r5, r5
 80291e0:	fbb1 f3f5 	udiv	r3, r1, r5
 80291e4:	fbb4 f4f5 	udiv	r4, r4, r5
 80291e8:	fbb2 f2f5 	udiv	r2, r2, r5
 80291ec:	041b      	lsls	r3, r3, #16
 80291ee:	b2e4      	uxtb	r4, r4
 80291f0:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80291f4:	ea44 6505 	orr.w	r5, r4, r5, lsl #24
 80291f8:	0212      	lsls	r2, r2, #8
 80291fa:	432b      	orrs	r3, r5
 80291fc:	b292      	uxth	r2, r2
 80291fe:	4313      	orrs	r3, r2
 8029200:	f8ce 3000 	str.w	r3, [lr]
 8029204:	9b01      	ldr	r3, [sp, #4]
 8029206:	459e      	cmp	lr, r3
 8029208:	d19e      	bne.n	8029148 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802920a:	e7b2      	b.n	8029172 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 802920c:	e9dd b906 	ldrd	fp, r9, [sp, #24]
 8029210:	e772      	b.n	80290f8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 8029212:	9a00      	ldr	r2, [sp, #0]
 8029214:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8029218:	9206      	str	r2, [sp, #24]
 802921a:	eba9 020b 	sub.w	r2, r9, fp
 802921e:	b292      	uxth	r2, r2
 8029220:	465b      	mov	r3, fp
 8029222:	9207      	str	r2, [sp, #28]
 8029224:	d187      	bne.n	8029136 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8029226:	2b00      	cmp	r3, #0
 8029228:	d0a7      	beq.n	802917a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 802922a:	1e58      	subs	r0, r3, #1
 802922c:	b280      	uxth	r0, r0
 802922e:	3001      	adds	r0, #1
 8029230:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8029234:	f89c 3000 	ldrb.w	r3, [ip]
 8029238:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802923c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8029240:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029244:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8029248:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 802924c:	f848 3b04 	str.w	r3, [r8], #4
 8029250:	4540      	cmp	r0, r8
 8029252:	d1ef      	bne.n	8029234 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>
 8029254:	e791      	b.n	802917a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029256:	ebab 0b03 	sub.w	fp, fp, r3
 802925a:	2300      	movs	r3, #0
 802925c:	fa1f fb8b 	uxth.w	fp, fp
 8029260:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8029264:	9300      	str	r3, [sp, #0]
 8029266:	e747      	b.n	80290f8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 8029268:	460b      	mov	r3, r1
 802926a:	3302      	adds	r3, #2
 802926c:	f891 b001 	ldrb.w	fp, [r1, #1]
 8029270:	9302      	str	r3, [sp, #8]
 8029272:	e735      	b.n	80290e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029274:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8029278:	b291      	uxth	r1, r2
 802927a:	fb94 f3f1 	sdiv	r3, r4, r1
 802927e:	e6cb      	b.n	8029018 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48>
 8029280:	4b05      	ldr	r3, [pc, #20]	@ (8029298 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 8029282:	4a06      	ldr	r2, [pc, #24]	@ (802929c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>)
 8029284:	f640 61a3 	movw	r1, #3747	@ 0xea3
 8029288:	4805      	ldr	r0, [pc, #20]	@ (80292a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>)
 802928a:	f009 f915 	bl	80324b8 <__assert_func>
 802928e:	bf00      	nop
 8029290:	20082ec4 	.word	0x20082ec4
 8029294:	20082ebe 	.word	0x20082ebe
 8029298:	0803633c 	.word	0x0803633c
 802929c:	080374d0 	.word	0x080374d0
 80292a0:	08036278 	.word	0x08036278

080292a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 80292a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80292a8:	7814      	ldrb	r4, [r2, #0]
 80292aa:	b09f      	sub	sp, #124	@ 0x7c
 80292ac:	2c01      	cmp	r4, #1
 80292ae:	461d      	mov	r5, r3
 80292b0:	9214      	str	r2, [sp, #80]	@ 0x50
 80292b2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80292b4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80292b6:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 80292ba:	f040 8232 	bne.w	8029722 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x47e>
 80292be:	6869      	ldr	r1, [r5, #4]
 80292c0:	4683      	mov	fp, r0
 80292c2:	6828      	ldr	r0, [r5, #0]
 80292c4:	aa1a      	add	r2, sp, #104	@ 0x68
 80292c6:	c203      	stmia	r2!, {r0, r1}
 80292c8:	6818      	ldr	r0, [r3, #0]
 80292ca:	6859      	ldr	r1, [r3, #4]
 80292cc:	aa1c      	add	r2, sp, #112	@ 0x70
 80292ce:	c203      	stmia	r2!, {r0, r1}
 80292d0:	a81a      	add	r0, sp, #104	@ 0x68
 80292d2:	f7e3 fd15 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80292d6:	4629      	mov	r1, r5
 80292d8:	a81c      	add	r0, sp, #112	@ 0x70
 80292da:	f7e3 fd39 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80292de:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	@ 0x6c
 80292e2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80292e6:	f340 8214 	ble.w	8029712 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 80292ea:	4623      	mov	r3, r4
 80292ec:	b292      	uxth	r2, r2
 80292ee:	9418      	str	r4, [sp, #96]	@ 0x60
 80292f0:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80292f4:	f9bd 106e 	ldrsh.w	r1, [sp, #110]	@ 0x6e
 80292f8:	fb90 f4f3 	sdiv	r4, r0, r3
 80292fc:	4419      	add	r1, r3
 80292fe:	3901      	subs	r1, #1
 8029300:	fb91 f1f3 	sdiv	r1, r1, r3
 8029304:	b2a4      	uxth	r4, r4
 8029306:	fb03 0314 	mls	r3, r3, r4, r0
 802930a:	9416      	str	r4, [sp, #88]	@ 0x58
 802930c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8029310:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8029314:	fb13 4202 	smlabb	r2, r3, r2, r4
 8029318:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 802931c:	4bae      	ldr	r3, [pc, #696]	@ (80295d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802931e:	4434      	add	r4, r6
 8029320:	4405      	add	r5, r0
 8029322:	6818      	ldr	r0, [r3, #0]
 8029324:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8029328:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 802932c:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 8029330:	6803      	ldr	r3, [r0, #0]
 8029332:	b296      	uxth	r6, r2
 8029334:	3101      	adds	r1, #1
 8029336:	9602      	str	r6, [sp, #8]
 8029338:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802933a:	970d      	str	r7, [sp, #52]	@ 0x34
 802933c:	b28c      	uxth	r4, r1
 802933e:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8029342:	4798      	blx	r3
 8029344:	2300      	movs	r3, #0
 8029346:	2e00      	cmp	r6, #0
 8029348:	bf0c      	ite	eq
 802934a:	463a      	moveq	r2, r7
 802934c:	2200      	movne	r2, #0
 802934e:	49a3      	ldr	r1, [pc, #652]	@ (80295dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 8029350:	9315      	str	r3, [sp, #84]	@ 0x54
 8029352:	8809      	ldrh	r1, [r1, #0]
 8029354:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8029358:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 802935c:	fb05 f501 	mul.w	r5, r5, r1
 8029360:	fb01 6303 	mla	r3, r1, r3, r6
 8029364:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029368:	9301      	str	r3, [sp, #4]
 802936a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 802936e:	9308      	str	r3, [sp, #32]
 8029370:	b293      	uxth	r3, r2
 8029372:	9303      	str	r3, [sp, #12]
 8029374:	ea4f 630a 	mov.w	r3, sl, lsl #24
 8029378:	930a      	str	r3, [sp, #40]	@ 0x28
 802937a:	f10b 030e 	add.w	r3, fp, #14
 802937e:	9319      	str	r3, [sp, #100]	@ 0x64
 8029380:	4653      	mov	r3, sl
 8029382:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8029384:	46da      	mov	sl, fp
 8029386:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 802938a:	f104 0904 	add.w	r9, r4, #4
 802938e:	46cb      	mov	fp, r9
 8029390:	4699      	mov	r9, r3
 8029392:	9b01      	ldr	r3, [sp, #4]
 8029394:	9a08      	ldr	r2, [sp, #32]
 8029396:	4293      	cmp	r3, r2
 8029398:	f080 8116 	bcs.w	80295c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802939c:	2601      	movs	r6, #1
 802939e:	2700      	movs	r7, #0
 80293a0:	9b02      	ldr	r3, [sp, #8]
 80293a2:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 80293a6:	46bc      	mov	ip, r7
 80293a8:	fbb3 f1f1 	udiv	r1, r3, r1
 80293ac:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 80293b0:	fa12 f283 	uxtah	r2, r2, r3
 80293b4:	0092      	lsls	r2, r2, #2
 80293b6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80293b8:	3204      	adds	r2, #4
 80293ba:	1898      	adds	r0, r3, r2
 80293bc:	7883      	ldrb	r3, [r0, #2]
 80293be:	7845      	ldrb	r5, [r0, #1]
 80293c0:	021b      	lsls	r3, r3, #8
 80293c2:	78c0      	ldrb	r0, [r0, #3]
 80293c4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 80293c8:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 80293ca:	4304      	orrs	r4, r0
 80293cc:	4628      	mov	r0, r5
 80293ce:	46b0      	mov	r8, r6
 80293d0:	4420      	add	r0, r4
 80293d2:	7843      	ldrb	r3, [r0, #1]
 80293d4:	5d2c      	ldrb	r4, [r5, r4]
 80293d6:	021b      	lsls	r3, r3, #8
 80293d8:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 80293dc:	431c      	orrs	r4, r3
 80293de:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80293e0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80293e2:	5caa      	ldrb	r2, [r5, r2]
 80293e4:	1a59      	subs	r1, r3, r1
 80293e6:	b2a3      	uxth	r3, r4
 80293e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80293ea:	1983      	adds	r3, r0, r6
 80293ec:	9306      	str	r3, [sp, #24]
 80293ee:	1993      	adds	r3, r2, r6
 80293f0:	9307      	str	r3, [sp, #28]
 80293f2:	b28b      	uxth	r3, r1
 80293f4:	9710      	str	r7, [sp, #64]	@ 0x40
 80293f6:	960c      	str	r6, [sp, #48]	@ 0x30
 80293f8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80293fa:	f88a 400d 	strb.w	r4, [sl, #13]
 80293fe:	9313      	str	r3, [sp, #76]	@ 0x4c
 8029400:	9605      	str	r6, [sp, #20]
 8029402:	9b02      	ldr	r3, [sp, #8]
 8029404:	2b00      	cmp	r3, #0
 8029406:	d038      	beq.n	802947a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 8029408:	4598      	cmp	r8, r3
 802940a:	f080 813f 	bcs.w	802968c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 802940e:	eba3 0808 	sub.w	r8, r3, r8
 8029412:	fa1f f388 	uxth.w	r3, r8
 8029416:	9302      	str	r3, [sp, #8]
 8029418:	9a08      	ldr	r2, [sp, #32]
 802941a:	9b01      	ldr	r3, [sp, #4]
 802941c:	4293      	cmp	r3, r2
 802941e:	f080 80d3 	bcs.w	80295c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8029422:	9806      	ldr	r0, [sp, #24]
 8029424:	9c05      	ldr	r4, [sp, #20]
 8029426:	7842      	ldrb	r2, [r0, #1]
 8029428:	f1c4 0107 	rsb	r1, r4, #7
 802942c:	7803      	ldrb	r3, [r0, #0]
 802942e:	408a      	lsls	r2, r1
 8029430:	0052      	lsls	r2, r2, #1
 8029432:	4123      	asrs	r3, r4
 8029434:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8029438:	1c61      	adds	r1, r4, #1
 802943a:	b2db      	uxtb	r3, r3
 802943c:	4313      	orrs	r3, r2
 802943e:	b2ca      	uxtb	r2, r1
 8029440:	4611      	mov	r1, r2
 8029442:	2908      	cmp	r1, #8
 8029444:	9205      	str	r2, [sp, #20]
 8029446:	b29a      	uxth	r2, r3
 8029448:	f000 812d 	beq.w	80296a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 802944c:	3001      	adds	r0, #1
 802944e:	9006      	str	r0, [sp, #24]
 8029450:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8029452:	4291      	cmp	r1, r2
 8029454:	f0c0 80fa 	bcc.w	802964c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a8>
 8029458:	f04f 0801 	mov.w	r8, #1
 802945c:	b2db      	uxtb	r3, r3
 802945e:	f88a 300d 	strb.w	r3, [sl, #13]
 8029462:	9907      	ldr	r1, [sp, #28]
 8029464:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8029468:	f0c0 8123 	bcc.w	80296b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40e>
 802946c:	9b02      	ldr	r3, [sp, #8]
 802946e:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 8029472:	f04f 0c00 	mov.w	ip, #0
 8029476:	2b00      	cmp	r3, #0
 8029478:	d1c6      	bne.n	8029408 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802947a:	9b03      	ldr	r3, [sp, #12]
 802947c:	4598      	cmp	r8, r3
 802947e:	461a      	mov	r2, r3
 8029480:	f0c0 80ae 	bcc.w	80295e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8029484:	eba8 0303 	sub.w	r3, r8, r3
 8029488:	b29b      	uxth	r3, r3
 802948a:	9309      	str	r3, [sp, #36]	@ 0x24
 802948c:	9b02      	ldr	r3, [sp, #8]
 802948e:	9204      	str	r2, [sp, #16]
 8029490:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029494:	930e      	str	r3, [sp, #56]	@ 0x38
 8029496:	9b04      	ldr	r3, [sp, #16]
 8029498:	f000 80b0 	beq.w	80295fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802949c:	b393      	cbz	r3, 8029504 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802949e:	4463      	add	r3, ip
 80294a0:	b29b      	uxth	r3, r3
 80294a2:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80294a6:	4698      	mov	r8, r3
 80294a8:	9a01      	ldr	r2, [sp, #4]
 80294aa:	9311      	str	r3, [sp, #68]	@ 0x44
 80294ac:	f1a2 0e04 	sub.w	lr, r2, #4
 80294b0:	eb0a 030c 	add.w	r3, sl, ip
 80294b4:	7b5a      	ldrb	r2, [r3, #13]
 80294b6:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 80294ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80294be:	eb0b 0102 	add.w	r1, fp, r2
 80294c2:	f10c 0c01 	add.w	ip, ip, #1
 80294c6:	f81b 0002 	ldrb.w	r0, [fp, r2]
 80294ca:	784d      	ldrb	r5, [r1, #1]
 80294cc:	788a      	ldrb	r2, [r1, #2]
 80294ce:	0e19      	lsrs	r1, r3, #24
 80294d0:	fa1f fc8c 	uxth.w	ip, ip
 80294d4:	d13f      	bne.n	8029556 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 80294d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80294d8:	45c4      	cmp	ip, r8
 80294da:	ea40 0003 	orr.w	r0, r0, r3
 80294de:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80294e2:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 80294e6:	f8ce 5000 	str.w	r5, [lr]
 80294ea:	d1e1      	bne.n	80294b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80294ec:	9b04      	ldr	r3, [sp, #16]
 80294ee:	9a01      	ldr	r2, [sp, #4]
 80294f0:	3b01      	subs	r3, #1
 80294f2:	b29b      	uxth	r3, r3
 80294f4:	3301      	adds	r3, #1
 80294f6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80294fa:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 80294fe:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8029502:	9301      	str	r3, [sp, #4]
 8029504:	9b03      	ldr	r3, [sp, #12]
 8029506:	4598      	cmp	r8, r3
 8029508:	d356      	bcc.n	80295b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x314>
 802950a:	4b34      	ldr	r3, [pc, #208]	@ (80295dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 802950c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802950e:	881b      	ldrh	r3, [r3, #0]
 8029510:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029512:	1a5b      	subs	r3, r3, r1
 8029514:	9901      	ldr	r1, [sp, #4]
 8029516:	3201      	adds	r2, #1
 8029518:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802951c:	9301      	str	r3, [sp, #4]
 802951e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8029520:	9210      	str	r2, [sp, #64]	@ 0x40
 8029522:	4293      	cmp	r3, r2
 8029524:	f000 80e4 	beq.w	80296f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8029528:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 802952c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8029530:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029534:	1a9b      	subs	r3, r3, r2
 8029536:	b29b      	uxth	r3, r3
 8029538:	2b00      	cmp	r3, #0
 802953a:	bf14      	ite	ne
 802953c:	2200      	movne	r2, #0
 802953e:	2300      	moveq	r3, #0
 8029540:	9203      	str	r2, [sp, #12]
 8029542:	9302      	str	r3, [sp, #8]
 8029544:	9b01      	ldr	r3, [sp, #4]
 8029546:	9a08      	ldr	r2, [sp, #32]
 8029548:	4293      	cmp	r3, r2
 802954a:	d23d      	bcs.n	80295c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802954c:	f1b8 0f00 	cmp.w	r8, #0
 8029550:	f47f af57 	bne.w	8029402 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8029554:	e765      	b.n	8029422 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17e>
 8029556:	fb09 f601 	mul.w	r6, r9, r1
 802955a:	fb19 f702 	smulbb	r7, r9, r2
 802955e:	1c74      	adds	r4, r6, #1
 8029560:	eb04 2426 	add.w	r4, r4, r6, asr #8
 8029564:	fb19 f000 	smulbb	r0, r9, r0
 8029568:	1224      	asrs	r4, r4, #8
 802956a:	fb19 f505 	smulbb	r5, r9, r5
 802956e:	1b0e      	subs	r6, r1, r4
 8029570:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029574:	fb06 7202 	mla	r2, r6, r2, r7
 8029578:	b2df      	uxtb	r7, r3
 802957a:	fb06 0007 	mla	r0, r6, r7, r0
 802957e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029582:	fb06 5503 	mla	r5, r6, r3, r5
 8029586:	4449      	add	r1, r9
 8029588:	1b09      	subs	r1, r1, r4
 802958a:	b2c9      	uxtb	r1, r1
 802958c:	fbb2 f2f1 	udiv	r2, r2, r1
 8029590:	fbb0 f0f1 	udiv	r0, r0, r1
 8029594:	fbb5 f5f1 	udiv	r5, r5, r1
 8029598:	0413      	lsls	r3, r2, #16
 802959a:	b2c0      	uxtb	r0, r0
 802959c:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80295a0:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
 80295a4:	022d      	lsls	r5, r5, #8
 80295a6:	430b      	orrs	r3, r1
 80295a8:	b2ad      	uxth	r5, r5
 80295aa:	432b      	orrs	r3, r5
 80295ac:	45c4      	cmp	ip, r8
 80295ae:	f8ce 3000 	str.w	r3, [lr]
 80295b2:	f47f af7d 	bne.w	80294b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80295b6:	e799      	b.n	80294ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>
 80295b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80295ba:	9a08      	ldr	r2, [sp, #32]
 80295bc:	9303      	str	r3, [sp, #12]
 80295be:	9b01      	ldr	r3, [sp, #4]
 80295c0:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 80295c4:	4293      	cmp	r3, r2
 80295c6:	d3c1      	bcc.n	802954c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 80295c8:	4b03      	ldr	r3, [pc, #12]	@ (80295d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 80295ca:	6818      	ldr	r0, [r3, #0]
 80295cc:	6803      	ldr	r3, [r0, #0]
 80295ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80295d0:	4798      	blx	r3
 80295d2:	b01f      	add	sp, #124	@ 0x7c
 80295d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80295d8:	20082ec4 	.word	0x20082ec4
 80295dc:	20082ebe 	.word	0x20082ebe
 80295e0:	9b02      	ldr	r3, [sp, #8]
 80295e2:	f8cd 8010 	str.w	r8, [sp, #16]
 80295e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80295e8:	9b03      	ldr	r3, [sp, #12]
 80295ea:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80295ee:	eba3 0308 	sub.w	r3, r3, r8
 80295f2:	b29b      	uxth	r3, r3
 80295f4:	930e      	str	r3, [sp, #56]	@ 0x38
 80295f6:	9b04      	ldr	r3, [sp, #16]
 80295f8:	f47f af50 	bne.w	802949c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80295fc:	2b00      	cmp	r3, #0
 80295fe:	d081      	beq.n	8029504 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8029600:	eb0c 0003 	add.w	r0, ip, r3
 8029604:	9901      	ldr	r1, [sp, #4]
 8029606:	b280      	uxth	r0, r0
 8029608:	eb0a 030c 	add.w	r3, sl, ip
 802960c:	7b5b      	ldrb	r3, [r3, #13]
 802960e:	f10c 0c01 	add.w	ip, ip, #1
 8029612:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8029616:	eb0b 0203 	add.w	r2, fp, r3
 802961a:	f81b 3003 	ldrb.w	r3, [fp, r3]
 802961e:	7894      	ldrb	r4, [r2, #2]
 8029620:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029624:	7852      	ldrb	r2, [r2, #1]
 8029626:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 802962a:	fa1f fc8c 	uxth.w	ip, ip
 802962e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8029632:	4584      	cmp	ip, r0
 8029634:	f841 3b04 	str.w	r3, [r1], #4
 8029638:	d1e6      	bne.n	8029608 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>
 802963a:	9b04      	ldr	r3, [sp, #16]
 802963c:	9a01      	ldr	r2, [sp, #4]
 802963e:	3b01      	subs	r3, #1
 8029640:	b29b      	uxth	r3, r3
 8029642:	3301      	adds	r3, #1
 8029644:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8029648:	9301      	str	r3, [sp, #4]
 802964a:	e75b      	b.n	8029504 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802964c:	9b07      	ldr	r3, [sp, #28]
 802964e:	4293      	cmp	r3, r2
 8029650:	d832      	bhi.n	80296b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 8029652:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029654:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8029658:	eb0a 0300 	add.w	r3, sl, r0
 802965c:	7359      	strb	r1, [r3, #13]
 802965e:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8029662:	1c41      	adds	r1, r0, #1
 8029664:	fa1f f881 	uxth.w	r8, r1
 8029668:	9c07      	ldr	r4, [sp, #28]
 802966a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802966c:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8029670:	3401      	adds	r4, #1
 8029672:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8029676:	b2a3      	uxth	r3, r4
 8029678:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 802967c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8029680:	9307      	str	r3, [sp, #28]
 8029682:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 8029686:	f04f 0c00 	mov.w	ip, #0
 802968a:	e6ba      	b.n	8029402 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 802968c:	eba8 0803 	sub.w	r8, r8, r3
 8029690:	449c      	add	ip, r3
 8029692:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8029696:	fa1f f888 	uxth.w	r8, r8
 802969a:	9303      	str	r3, [sp, #12]
 802969c:	2300      	movs	r3, #0
 802969e:	fa1f fc8c 	uxth.w	ip, ip
 80296a2:	9302      	str	r3, [sp, #8]
 80296a4:	e74e      	b.n	8029544 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 80296a6:	2100      	movs	r1, #0
 80296a8:	9105      	str	r1, [sp, #20]
 80296aa:	9906      	ldr	r1, [sp, #24]
 80296ac:	3102      	adds	r1, #2
 80296ae:	9106      	str	r1, [sp, #24]
 80296b0:	e6ce      	b.n	8029450 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 80296b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80296b4:	3101      	adds	r1, #1
 80296b6:	e7d7      	b.n	8029668 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 80296b8:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 80296bc:	f893 804f 	ldrb.w	r8, [r3, #79]	@ 0x4f
 80296c0:	4613      	mov	r3, r2
 80296c2:	f1b8 0f01 	cmp.w	r8, #1
 80296c6:	d90d      	bls.n	80296e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>
 80296c8:	f108 010d 	add.w	r1, r8, #13
 80296cc:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 80296ce:	4451      	add	r1, sl
 80296d0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80296d4:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 80296d8:	f801 0d01 	strb.w	r0, [r1, #-1]!
 80296dc:	428c      	cmp	r4, r1
 80296de:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80296e2:	d1f5      	bne.n	80296d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 80296e4:	b2db      	uxtb	r3, r3
 80296e6:	f88a 300d 	strb.w	r3, [sl, #13]
 80296ea:	fa1f f888 	uxth.w	r8, r8
 80296ee:	e6b8      	b.n	8029462 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 80296f0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 80296f4:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 80296f8:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80296fa:	1a9b      	subs	r3, r3, r2
 80296fc:	b29b      	uxth	r3, r3
 80296fe:	2b00      	cmp	r3, #0
 8029700:	9302      	str	r3, [sp, #8]
 8029702:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8029704:	bf18      	it	ne
 8029706:	2300      	movne	r3, #0
 8029708:	3101      	adds	r1, #1
 802970a:	b29b      	uxth	r3, r3
 802970c:	9115      	str	r1, [sp, #84]	@ 0x54
 802970e:	9303      	str	r3, [sp, #12]
 8029710:	e63f      	b.n	8029392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8029712:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8029716:	b292      	uxth	r2, r2
 8029718:	fb93 f3f2 	sdiv	r3, r3, r2
 802971c:	b299      	uxth	r1, r3
 802971e:	9118      	str	r1, [sp, #96]	@ 0x60
 8029720:	e5e6      	b.n	80292f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x4c>
 8029722:	4b03      	ldr	r3, [pc, #12]	@ (8029730 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48c>)
 8029724:	4a03      	ldr	r2, [pc, #12]	@ (8029734 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x490>)
 8029726:	f640 7142 	movw	r1, #3906	@ 0xf42
 802972a:	4803      	ldr	r0, [pc, #12]	@ (8029738 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x494>)
 802972c:	f008 fec4 	bl	80324b8 <__assert_func>
 8029730:	0803633c 	.word	0x0803633c
 8029734:	0803782c 	.word	0x0803782c
 8029738:	08036278 	.word	0x08036278

0802973c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802973c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029740:	4617      	mov	r7, r2
 8029742:	8812      	ldrh	r2, [r2, #0]
 8029744:	b095      	sub	sp, #84	@ 0x54
 8029746:	461c      	mov	r4, r3
 8029748:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 802974c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802974e:	2a00      	cmp	r2, #0
 8029750:	f040 8112 	bne.w	8029978 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 8029754:	4688      	mov	r8, r1
 8029756:	6820      	ldr	r0, [r4, #0]
 8029758:	6861      	ldr	r1, [r4, #4]
 802975a:	aa10      	add	r2, sp, #64	@ 0x40
 802975c:	c203      	stmia	r2!, {r0, r1}
 802975e:	6818      	ldr	r0, [r3, #0]
 8029760:	6859      	ldr	r1, [r3, #4]
 8029762:	aa12      	add	r2, sp, #72	@ 0x48
 8029764:	c203      	stmia	r2!, {r0, r1}
 8029766:	a810      	add	r0, sp, #64	@ 0x40
 8029768:	f7e3 faca 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802976c:	4621      	mov	r1, r4
 802976e:	a812      	add	r0, sp, #72	@ 0x48
 8029770:	f7e3 faee 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029774:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8029778:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 802977c:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8029780:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8029784:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8029788:	487f      	ldr	r0, [pc, #508]	@ (8029988 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 802978a:	fb11 4105 	smlabb	r1, r1, r5, r4
 802978e:	4422      	add	r2, r4
 8029790:	442b      	add	r3, r5
 8029792:	6800      	ldr	r0, [r0, #0]
 8029794:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8029798:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 802979c:	6802      	ldr	r2, [r0, #0]
 802979e:	4488      	add	r8, r1
 80297a0:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 80297a4:	4c79      	ldr	r4, [pc, #484]	@ (802998c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 80297a6:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80297aa:	910c      	str	r1, [sp, #48]	@ 0x30
 80297ac:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 80297b0:	42a3      	cmp	r3, r4
 80297b2:	910e      	str	r1, [sp, #56]	@ 0x38
 80297b4:	f040 80ab 	bne.w	802990e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 80297b8:	6841      	ldr	r1, [r0, #4]
 80297ba:	4c75      	ldr	r4, [pc, #468]	@ (8029990 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 80297bc:	680b      	ldr	r3, [r1, #0]
 80297be:	699b      	ldr	r3, [r3, #24]
 80297c0:	42a3      	cmp	r3, r4
 80297c2:	f040 80cb 	bne.w	802995c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>
 80297c6:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80297c8:	4798      	blx	r3
 80297ca:	4b72      	ldr	r3, [pc, #456]	@ (8029994 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80297cc:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 80297d0:	881b      	ldrh	r3, [r3, #0]
 80297d2:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 80297d6:	fb01 2303 	mla	r3, r1, r3, r2
 80297da:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80297de:	930b      	str	r3, [sp, #44]	@ 0x2c
 80297e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80297e2:	2b00      	cmp	r3, #0
 80297e4:	f340 808b 	ble.w	80298fe <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 80297e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80297ea:	2b00      	cmp	r3, #0
 80297ec:	f340 8087 	ble.w	80298fe <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 80297f0:	2200      	movs	r2, #0
 80297f2:	f04f 0c04 	mov.w	ip, #4
 80297f6:	009b      	lsls	r3, r3, #2
 80297f8:	920d      	str	r2, [sp, #52]	@ 0x34
 80297fa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80297fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80297fe:	4645      	mov	r5, r8
 8029800:	1d1c      	adds	r4, r3, #4
 8029802:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029804:	eb08 0e03 	add.w	lr, r8, r3
 8029808:	e048      	b.n	802989c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802980a:	fb09 f303 	mul.w	r3, r9, r3
 802980e:	1c5a      	adds	r2, r3, #1
 8029810:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029814:	121b      	asrs	r3, r3, #8
 8029816:	b2d8      	uxtb	r0, r3
 8029818:	43c1      	mvns	r1, r0
 802981a:	b29b      	uxth	r3, r3
 802981c:	fb1a f203 	smulbb	r2, sl, r3
 8029820:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 8029824:	b2c9      	uxtb	r1, r1
 8029826:	fb0a 2a01 	mla	sl, sl, r1, r2
 802982a:	fa1f fa8a 	uxth.w	sl, sl
 802982e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8029832:	f10a 0b01 	add.w	fp, sl, #1
 8029836:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802983a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802983e:	fb12 fb01 	smulbb	fp, r2, r1
 8029842:	f804 ac04 	strb.w	sl, [r4, #-4]
 8029846:	7872      	ldrb	r2, [r6, #1]
 8029848:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 802984c:	fb02 b203 	mla	r2, r2, r3, fp
 8029850:	b292      	uxth	r2, r2
 8029852:	f102 0b01 	add.w	fp, r2, #1
 8029856:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802985a:	fb1a fa01 	smulbb	sl, sl, r1
 802985e:	1212      	asrs	r2, r2, #8
 8029860:	f804 2c03 	strb.w	r2, [r4, #-3]
 8029864:	78b1      	ldrb	r1, [r6, #2]
 8029866:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 802986a:	fb01 a103 	mla	r1, r1, r3, sl
 802986e:	fb12 f303 	smulbb	r3, r2, r3
 8029872:	b289      	uxth	r1, r1
 8029874:	b29b      	uxth	r3, r3
 8029876:	f101 0a01 	add.w	sl, r1, #1
 802987a:	1c5e      	adds	r6, r3, #1
 802987c:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8029880:	4402      	add	r2, r0
 8029882:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8029886:	1209      	asrs	r1, r1, #8
 8029888:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 802988c:	f804 1c02 	strb.w	r1, [r4, #-2]
 8029890:	f804 3c01 	strb.w	r3, [r4, #-1]
 8029894:	45ae      	cmp	lr, r5
 8029896:	f104 0404 	add.w	r4, r4, #4
 802989a:	d01c      	beq.n	80298d6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 802989c:	f815 2b01 	ldrb.w	r2, [r5], #1
 80298a0:	fb1c c202 	smlabb	r2, ip, r2, ip
 80298a4:	18be      	adds	r6, r7, r2
 80298a6:	78f3      	ldrb	r3, [r6, #3]
 80298a8:	2b00      	cmp	r3, #0
 80298aa:	d0f3      	beq.n	8029894 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 80298ac:	2bff      	cmp	r3, #255	@ 0xff
 80298ae:	f817 a002 	ldrb.w	sl, [r7, r2]
 80298b2:	d1aa      	bne.n	802980a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80298b4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80298b8:	d1a7      	bne.n	802980a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80298ba:	f804 ac04 	strb.w	sl, [r4, #-4]
 80298be:	7873      	ldrb	r3, [r6, #1]
 80298c0:	45ae      	cmp	lr, r5
 80298c2:	f804 3c03 	strb.w	r3, [r4, #-3]
 80298c6:	78b3      	ldrb	r3, [r6, #2]
 80298c8:	f104 0404 	add.w	r4, r4, #4
 80298cc:	f804 9c05 	strb.w	r9, [r4, #-5]
 80298d0:	f804 3c06 	strb.w	r3, [r4, #-6]
 80298d4:	d1e2      	bne.n	802989c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 80298d6:	4b2f      	ldr	r3, [pc, #188]	@ (8029994 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80298d8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80298da:	881b      	ldrh	r3, [r3, #0]
 80298dc:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80298de:	1a5b      	subs	r3, r3, r1
 80298e0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80298e4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80298e6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80298e8:	4418      	add	r0, r3
 80298ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80298ec:	3101      	adds	r1, #1
 80298ee:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 80298f2:	428b      	cmp	r3, r1
 80298f4:	910d      	str	r1, [sp, #52]	@ 0x34
 80298f6:	900b      	str	r0, [sp, #44]	@ 0x2c
 80298f8:	4490      	add	r8, r2
 80298fa:	f47f af7f 	bne.w	80297fc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 80298fe:	4b22      	ldr	r3, [pc, #136]	@ (8029988 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029900:	6818      	ldr	r0, [r3, #0]
 8029902:	6803      	ldr	r3, [r0, #0]
 8029904:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029906:	4798      	blx	r3
 8029908:	b015      	add	sp, #84	@ 0x54
 802990a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802990e:	4798      	blx	r3
 8029910:	4603      	mov	r3, r0
 8029912:	2b01      	cmp	r3, #1
 8029914:	d126      	bne.n	8029964 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>
 8029916:	4a20      	ldr	r2, [pc, #128]	@ (8029998 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8029918:	6810      	ldr	r0, [r2, #0]
 802991a:	b338      	cbz	r0, 802996c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>
 802991c:	f04f 0c02 	mov.w	ip, #2
 8029920:	260b      	movs	r6, #11
 8029922:	4a1c      	ldr	r2, [pc, #112]	@ (8029994 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029924:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8029928:	8814      	ldrh	r4, [r2, #0]
 802992a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 802992e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8029932:	9406      	str	r4, [sp, #24]
 8029934:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8029938:	e9cd 2101 	strd	r2, r1, [sp, #4]
 802993c:	9305      	str	r3, [sp, #20]
 802993e:	f8cd 9010 	str.w	r9, [sp, #16]
 8029942:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8029946:	463a      	mov	r2, r7
 8029948:	4641      	mov	r1, r8
 802994a:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 802994e:	9503      	str	r5, [sp, #12]
 8029950:	9400      	str	r4, [sp, #0]
 8029952:	f7f7 f949 	bl	8020be8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8029956:	b015      	add	sp, #84	@ 0x54
 8029958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802995c:	4608      	mov	r0, r1
 802995e:	4798      	blx	r3
 8029960:	4603      	mov	r3, r0
 8029962:	e7d6      	b.n	8029912 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 8029964:	4b08      	ldr	r3, [pc, #32]	@ (8029988 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029966:	6818      	ldr	r0, [r3, #0]
 8029968:	6802      	ldr	r2, [r0, #0]
 802996a:	e72c      	b.n	80297c6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802996c:	4b0b      	ldr	r3, [pc, #44]	@ (802999c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 802996e:	4a0c      	ldr	r2, [pc, #48]	@ (80299a0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 8029970:	217c      	movs	r1, #124	@ 0x7c
 8029972:	480c      	ldr	r0, [pc, #48]	@ (80299a4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 8029974:	f008 fda0 	bl	80324b8 <__assert_func>
 8029978:	4b0b      	ldr	r3, [pc, #44]	@ (80299a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 802997a:	4a0c      	ldr	r2, [pc, #48]	@ (80299ac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x270>)
 802997c:	f241 012a 	movw	r1, #4138	@ 0x102a
 8029980:	480b      	ldr	r0, [pc, #44]	@ (80299b0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>)
 8029982:	f008 fd99 	bl	80324b8 <__assert_func>
 8029986:	bf00      	nop
 8029988:	20082ec4 	.word	0x20082ec4
 802998c:	0800121d 	.word	0x0800121d
 8029990:	0800baa5 	.word	0x0800baa5
 8029994:	20082ebe 	.word	0x20082ebe
 8029998:	20083364 	.word	0x20083364
 802999c:	080361d4 	.word	0x080361d4
 80299a0:	08036a40 	.word	0x08036a40
 80299a4:	080361fc 	.word	0x080361fc
 80299a8:	080362ec 	.word	0x080362ec
 80299ac:	08037188 	.word	0x08037188
 80299b0:	08036278 	.word	0x08036278

080299b4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 80299b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299b8:	f89d 0018 	ldrb.w	r0, [sp, #24]
 80299bc:	fb03 f300 	mul.w	r3, r3, r0
 80299c0:	1c58      	adds	r0, r3, #1
 80299c2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80299c6:	121b      	asrs	r3, r3, #8
 80299c8:	2bff      	cmp	r3, #255	@ 0xff
 80299ca:	d039      	beq.n	8029a40 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 80299cc:	6810      	ldr	r0, [r2, #0]
 80299ce:	0e07      	lsrs	r7, r0, #24
 80299d0:	d036      	beq.n	8029a40 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 80299d2:	b2dc      	uxtb	r4, r3
 80299d4:	2b00      	cmp	r3, #0
 80299d6:	d03d      	beq.n	8029a54 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 80299d8:	fb04 f507 	mul.w	r5, r4, r7
 80299dc:	1c6e      	adds	r6, r5, #1
 80299de:	eb06 2625 	add.w	r6, r6, r5, asr #8
 80299e2:	1236      	asrs	r6, r6, #8
 80299e4:	f891 8002 	ldrb.w	r8, [r1, #2]
 80299e8:	eba7 0e06 	sub.w	lr, r7, r6
 80299ec:	b2c5      	uxtb	r5, r0
 80299ee:	f891 c001 	ldrb.w	ip, [r1, #1]
 80299f2:	fb0e f505 	mul.w	r5, lr, r5
 80299f6:	fb03 f808 	mul.w	r8, r3, r8
 80299fa:	7809      	ldrb	r1, [r1, #0]
 80299fc:	fb03 fc0c 	mul.w	ip, r3, ip
 8029a00:	fb03 5501 	mla	r5, r3, r1, r5
 8029a04:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8029a08:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8029a0c:	fb0e 8101 	mla	r1, lr, r1, r8
 8029a10:	19e0      	adds	r0, r4, r7
 8029a12:	fb0e c303 	mla	r3, lr, r3, ip
 8029a16:	1b80      	subs	r0, r0, r6
 8029a18:	b2c0      	uxtb	r0, r0
 8029a1a:	fbb1 f1f0 	udiv	r1, r1, r0
 8029a1e:	fbb5 f4f0 	udiv	r4, r5, r0
 8029a22:	fbb3 f3f0 	udiv	r3, r3, r0
 8029a26:	0409      	lsls	r1, r1, #16
 8029a28:	b2e4      	uxtb	r4, r4
 8029a2a:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8029a2e:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8029a32:	021b      	lsls	r3, r3, #8
 8029a34:	4301      	orrs	r1, r0
 8029a36:	b29b      	uxth	r3, r3
 8029a38:	430b      	orrs	r3, r1
 8029a3a:	6013      	str	r3, [r2, #0]
 8029a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a40:	7848      	ldrb	r0, [r1, #1]
 8029a42:	788d      	ldrb	r5, [r1, #2]
 8029a44:	780c      	ldrb	r4, [r1, #0]
 8029a46:	0200      	lsls	r0, r0, #8
 8029a48:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 8029a4c:	4321      	orrs	r1, r4
 8029a4e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8029a52:	6013      	str	r3, [r2, #0]
 8029a54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08029a58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a5c:	4692      	mov	sl, r2
 8029a5e:	7812      	ldrb	r2, [r2, #0]
 8029a60:	b095      	sub	sp, #84	@ 0x54
 8029a62:	460d      	mov	r5, r1
 8029a64:	461e      	mov	r6, r3
 8029a66:	900d      	str	r0, [sp, #52]	@ 0x34
 8029a68:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029a6a:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8029a6e:	2a00      	cmp	r2, #0
 8029a70:	f040 816b 	bne.w	8029d4a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 8029a74:	6830      	ldr	r0, [r6, #0]
 8029a76:	460f      	mov	r7, r1
 8029a78:	6871      	ldr	r1, [r6, #4]
 8029a7a:	aa10      	add	r2, sp, #64	@ 0x40
 8029a7c:	c203      	stmia	r2!, {r0, r1}
 8029a7e:	6818      	ldr	r0, [r3, #0]
 8029a80:	6859      	ldr	r1, [r3, #4]
 8029a82:	aa12      	add	r2, sp, #72	@ 0x48
 8029a84:	c203      	stmia	r2!, {r0, r1}
 8029a86:	a810      	add	r0, sp, #64	@ 0x40
 8029a88:	f7e3 f93a 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029a8c:	4631      	mov	r1, r6
 8029a8e:	a812      	add	r0, sp, #72	@ 0x48
 8029a90:	f7e3 f95e 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029a94:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029a98:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029a9c:	f003 0201 	and.w	r2, r3, #1
 8029aa0:	4614      	mov	r4, r2
 8029aa2:	9208      	str	r2, [sp, #32]
 8029aa4:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 8029aa8:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 8029aac:	4423      	add	r3, r4
 8029aae:	fb02 1303 	mla	r3, r2, r3, r1
 8029ab2:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 8029ab6:	4402      	add	r2, r0
 8029ab8:	48a7      	ldr	r0, [pc, #668]	@ (8029d58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029aba:	440e      	add	r6, r1
 8029abc:	6800      	ldr	r0, [r0, #0]
 8029abe:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8029ac2:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 8029ac6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029aca:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8029ace:	6802      	ldr	r2, [r0, #0]
 8029ad0:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8029ad4:	9302      	str	r3, [sp, #8]
 8029ad6:	f001 0301 	and.w	r3, r1, #1
 8029ada:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8029adc:	9309      	str	r3, [sp, #36]	@ 0x24
 8029ade:	9607      	str	r6, [sp, #28]
 8029ae0:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 8029ae4:	4790      	blx	r2
 8029ae6:	4a9d      	ldr	r2, [pc, #628]	@ (8029d5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029ae8:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8029aec:	8812      	ldrh	r2, [r2, #0]
 8029aee:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029af2:	fb04 f402 	mul.w	r4, r4, r2
 8029af6:	fb02 1303 	mla	r3, r2, r3, r1
 8029afa:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8029afe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8029b02:	429d      	cmp	r5, r3
 8029b04:	930a      	str	r3, [sp, #40]	@ 0x28
 8029b06:	f10a 0a04 	add.w	sl, sl, #4
 8029b0a:	f080 80f4 	bcs.w	8029cf6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8029b0e:	46bb      	mov	fp, r7
 8029b10:	1e73      	subs	r3, r6, #1
 8029b12:	930c      	str	r3, [sp, #48]	@ 0x30
 8029b14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029b16:	2b00      	cmp	r3, #0
 8029b18:	f000 8104 	beq.w	8029d24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 8029b1c:	9a02      	ldr	r2, [sp, #8]
 8029b1e:	7813      	ldrb	r3, [r2, #0]
 8029b20:	1c54      	adds	r4, r2, #1
 8029b22:	f003 030f 	and.w	r3, r3, #15
 8029b26:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029b2a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029b2c:	0e1b      	lsrs	r3, r3, #24
 8029b2e:	f040 8104 	bne.w	8029d3a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8029b32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029b34:	3504      	adds	r5, #4
 8029b36:	2b01      	cmp	r3, #1
 8029b38:	f340 80bf 	ble.w	8029cba <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8029b3c:	3b02      	subs	r3, #2
 8029b3e:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 8029b42:	9304      	str	r3, [sp, #16]
 8029b44:	f10e 0301 	add.w	r3, lr, #1
 8029b48:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 8029b4c:	9303      	str	r3, [sp, #12]
 8029b4e:	18e7      	adds	r7, r4, r3
 8029b50:	f105 0808 	add.w	r8, r5, #8
 8029b54:	46de      	mov	lr, fp
 8029b56:	e00b      	b.n	8029b70 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029b58:	f005 050f 	and.w	r5, r5, #15
 8029b5c:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 8029b60:	3401      	adds	r4, #1
 8029b62:	0e1a      	lsrs	r2, r3, #24
 8029b64:	d153      	bne.n	8029c0e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8029b66:	42bc      	cmp	r4, r7
 8029b68:	f108 0808 	add.w	r8, r8, #8
 8029b6c:	f000 8099 	beq.w	8029ca2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 8029b70:	7825      	ldrb	r5, [r4, #0]
 8029b72:	092b      	lsrs	r3, r5, #4
 8029b74:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029b78:	0e1a      	lsrs	r2, r3, #24
 8029b7a:	d0ed      	beq.n	8029b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029b7c:	fb0e f202 	mul.w	r2, lr, r2
 8029b80:	1c51      	adds	r1, r2, #1
 8029b82:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029b86:	1212      	asrs	r2, r2, #8
 8029b88:	2aff      	cmp	r2, #255	@ 0xff
 8029b8a:	f000 80bc 	beq.w	8029d06 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029b8e:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8029b92:	0e0e      	lsrs	r6, r1, #24
 8029b94:	f000 80b7 	beq.w	8029d06 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029b98:	b2d0      	uxtb	r0, r2
 8029b9a:	2a00      	cmp	r2, #0
 8029b9c:	d0dc      	beq.n	8029b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029b9e:	fb00 fc06 	mul.w	ip, r0, r6
 8029ba2:	f10c 0501 	add.w	r5, ip, #1
 8029ba6:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029baa:	122d      	asrs	r5, r5, #8
 8029bac:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029bae:	fa5f fb81 	uxtb.w	fp, r1
 8029bb2:	1b75      	subs	r5, r6, r5
 8029bb4:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029bb8:	fb05 fb0b 	mul.w	fp, r5, fp
 8029bbc:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029bc0:	fb02 f909 	mul.w	r9, r2, r9
 8029bc4:	fb02 fc0c 	mul.w	ip, r2, ip
 8029bc8:	b2db      	uxtb	r3, r3
 8029bca:	fb02 b303 	mla	r3, r2, r3, fp
 8029bce:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029bd2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029bd6:	fb05 9902 	mla	r9, r5, r2, r9
 8029bda:	fb05 c101 	mla	r1, r5, r1, ip
 8029bde:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029be0:	4430      	add	r0, r6
 8029be2:	1b45      	subs	r5, r0, r5
 8029be4:	b2ed      	uxtb	r5, r5
 8029be6:	fbb9 f2f5 	udiv	r2, r9, r5
 8029bea:	fbb3 f3f5 	udiv	r3, r3, r5
 8029bee:	fbb1 f1f5 	udiv	r1, r1, r5
 8029bf2:	0412      	lsls	r2, r2, #16
 8029bf4:	b2db      	uxtb	r3, r3
 8029bf6:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029bfa:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029bfe:	0209      	lsls	r1, r1, #8
 8029c00:	4313      	orrs	r3, r2
 8029c02:	b289      	uxth	r1, r1
 8029c04:	430b      	orrs	r3, r1
 8029c06:	f848 3c08 	str.w	r3, [r8, #-8]
 8029c0a:	7825      	ldrb	r5, [r4, #0]
 8029c0c:	e7a4      	b.n	8029b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029c0e:	fb0e f202 	mul.w	r2, lr, r2
 8029c12:	1c51      	adds	r1, r2, #1
 8029c14:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029c18:	1212      	asrs	r2, r2, #8
 8029c1a:	2aff      	cmp	r2, #255	@ 0xff
 8029c1c:	d07b      	beq.n	8029d16 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029c1e:	f858 1c04 	ldr.w	r1, [r8, #-4]
 8029c22:	0e0e      	lsrs	r6, r1, #24
 8029c24:	d077      	beq.n	8029d16 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029c26:	b2d0      	uxtb	r0, r2
 8029c28:	2a00      	cmp	r2, #0
 8029c2a:	d09c      	beq.n	8029b66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029c2c:	fb00 fc06 	mul.w	ip, r0, r6
 8029c30:	f10c 0501 	add.w	r5, ip, #1
 8029c34:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029c38:	122d      	asrs	r5, r5, #8
 8029c3a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029c3c:	fa5f fb81 	uxtb.w	fp, r1
 8029c40:	1b75      	subs	r5, r6, r5
 8029c42:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029c46:	fb05 fb0b 	mul.w	fp, r5, fp
 8029c4a:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029c4e:	fb02 f909 	mul.w	r9, r2, r9
 8029c52:	fb02 fc0c 	mul.w	ip, r2, ip
 8029c56:	b2db      	uxtb	r3, r3
 8029c58:	fb02 b303 	mla	r3, r2, r3, fp
 8029c5c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029c60:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029c64:	fb05 9902 	mla	r9, r5, r2, r9
 8029c68:	fb05 c101 	mla	r1, r5, r1, ip
 8029c6c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029c6e:	4430      	add	r0, r6
 8029c70:	1b45      	subs	r5, r0, r5
 8029c72:	b2ed      	uxtb	r5, r5
 8029c74:	fbb9 f2f5 	udiv	r2, r9, r5
 8029c78:	fbb3 f3f5 	udiv	r3, r3, r5
 8029c7c:	fbb1 f1f5 	udiv	r1, r1, r5
 8029c80:	0412      	lsls	r2, r2, #16
 8029c82:	b2db      	uxtb	r3, r3
 8029c84:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029c88:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029c8c:	0209      	lsls	r1, r1, #8
 8029c8e:	4313      	orrs	r3, r2
 8029c90:	b289      	uxth	r1, r1
 8029c92:	430b      	orrs	r3, r1
 8029c94:	42bc      	cmp	r4, r7
 8029c96:	f848 3c04 	str.w	r3, [r8, #-4]
 8029c9a:	f108 0808 	add.w	r8, r8, #8
 8029c9e:	f47f af67 	bne.w	8029b70 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029ca2:	46f3      	mov	fp, lr
 8029ca4:	f8dd e018 	ldr.w	lr, [sp, #24]
 8029ca8:	9a04      	ldr	r2, [sp, #16]
 8029caa:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 8029cae:	9d05      	ldr	r5, [sp, #20]
 8029cb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029cb4:	9a03      	ldr	r2, [sp, #12]
 8029cb6:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8029cba:	2b01      	cmp	r3, #1
 8029cbc:	d107      	bne.n	8029cce <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 8029cbe:	7823      	ldrb	r3, [r4, #0]
 8029cc0:	091b      	lsrs	r3, r3, #4
 8029cc2:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029cc6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029cc8:	0e1b      	lsrs	r3, r3, #24
 8029cca:	d12e      	bne.n	8029d2a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8029ccc:	3504      	adds	r5, #4
 8029cce:	9908      	ldr	r1, [sp, #32]
 8029cd0:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029cd4:	4a21      	ldr	r2, [pc, #132]	@ (8029d5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029cd6:	440b      	add	r3, r1
 8029cd8:	8812      	ldrh	r2, [r2, #0]
 8029cda:	9907      	ldr	r1, [sp, #28]
 8029cdc:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029ce0:	1a52      	subs	r2, r2, r1
 8029ce2:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8029ce6:	9a02      	ldr	r2, [sp, #8]
 8029ce8:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8029cec:	9302      	str	r3, [sp, #8]
 8029cee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029cf0:	42ab      	cmp	r3, r5
 8029cf2:	f63f af0f 	bhi.w	8029b14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8029cf6:	4b18      	ldr	r3, [pc, #96]	@ (8029d58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029cf8:	6818      	ldr	r0, [r3, #0]
 8029cfa:	6803      	ldr	r3, [r0, #0]
 8029cfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029cfe:	4798      	blx	r3
 8029d00:	b015      	add	sp, #84	@ 0x54
 8029d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029d06:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029d0a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029d0e:	f848 2c08 	str.w	r2, [r8, #-8]
 8029d12:	7825      	ldrb	r5, [r4, #0]
 8029d14:	e720      	b.n	8029b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029d16:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029d1a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029d1e:	f848 2c04 	str.w	r2, [r8, #-4]
 8029d22:	e720      	b.n	8029b66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029d24:	9c02      	ldr	r4, [sp, #8]
 8029d26:	9b07      	ldr	r3, [sp, #28]
 8029d28:	e705      	b.n	8029b36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8029d2a:	9300      	str	r3, [sp, #0]
 8029d2c:	462a      	mov	r2, r5
 8029d2e:	465b      	mov	r3, fp
 8029d30:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d32:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d34:	f7ff fe3e 	bl	80299b4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d38:	e7c8      	b.n	8029ccc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8029d3a:	9300      	str	r3, [sp, #0]
 8029d3c:	462a      	mov	r2, r5
 8029d3e:	465b      	mov	r3, fp
 8029d40:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d42:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d44:	f7ff fe36 	bl	80299b4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d48:	e6f3      	b.n	8029b32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8029d4a:	4b05      	ldr	r3, [pc, #20]	@ (8029d60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8029d4c:	4a05      	ldr	r2, [pc, #20]	@ (8029d64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8029d4e:	f241 018c 	movw	r1, #4236	@ 0x108c
 8029d52:	4805      	ldr	r0, [pc, #20]	@ (8029d68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x310>)
 8029d54:	f008 fbb0 	bl	80324b8 <__assert_func>
 8029d58:	20082ec4 	.word	0x20082ec4
 8029d5c:	20082ebe 	.word	0x20082ebe
 8029d60:	0803636c 	.word	0x0803636c
 8029d64:	0803767c 	.word	0x0803767c
 8029d68:	08036278 	.word	0x08036278

08029d6c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029d70:	b093      	sub	sp, #76	@ 0x4c
 8029d72:	9206      	str	r2, [sp, #24]
 8029d74:	468b      	mov	fp, r1
 8029d76:	7812      	ldrb	r2, [r2, #0]
 8029d78:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8029d7c:	461c      	mov	r4, r3
 8029d7e:	9108      	str	r1, [sp, #32]
 8029d80:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029d82:	2a00      	cmp	r2, #0
 8029d84:	f040 815f 	bne.w	802a046 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2da>
 8029d88:	6820      	ldr	r0, [r4, #0]
 8029d8a:	6861      	ldr	r1, [r4, #4]
 8029d8c:	aa0e      	add	r2, sp, #56	@ 0x38
 8029d8e:	c203      	stmia	r2!, {r0, r1}
 8029d90:	6818      	ldr	r0, [r3, #0]
 8029d92:	6859      	ldr	r1, [r3, #4]
 8029d94:	aa10      	add	r2, sp, #64	@ 0x40
 8029d96:	c203      	stmia	r2!, {r0, r1}
 8029d98:	a80e      	add	r0, sp, #56	@ 0x38
 8029d9a:	f7e2 ffb1 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d9e:	4621      	mov	r1, r4
 8029da0:	a810      	add	r0, sp, #64	@ 0x40
 8029da2:	f7e2 ffd5 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029da6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8029daa:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8029dae:	f340 8137 	ble.w	802a020 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 8029db2:	2201      	movs	r2, #1
 8029db4:	b299      	uxth	r1, r3
 8029db6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8029dba:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8029dbe:	fb93 f5f2 	sdiv	r5, r3, r2
 8029dc2:	b2ae      	uxth	r6, r5
 8029dc4:	fb02 3416 	mls	r4, r2, r6, r3
 8029dc8:	fb14 0101 	smlabb	r1, r4, r1, r0
 8029dcc:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 8029dd0:	fa1f fa81 	uxth.w	sl, r1
 8029dd4:	4414      	add	r4, r2
 8029dd6:	3c01      	subs	r4, #1
 8029dd8:	fb94 f4f2 	sdiv	r4, r4, r2
 8029ddc:	b126      	cbz	r6, 8029de8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x7c>
 8029dde:	9a06      	ldr	r2, [sp, #24]
 8029de0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8029de4:	ba12      	rev	r2, r2
 8029de6:	4493      	add	fp, r2
 8029de8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8029dec:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8029df0:	4402      	add	r2, r0
 8029df2:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8029df6:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029dfa:	440b      	add	r3, r1
 8029dfc:	4616      	mov	r6, r2
 8029dfe:	4995      	ldr	r1, [pc, #596]	@ (802a054 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029e00:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8029e04:	6808      	ldr	r0, [r1, #0]
 8029e06:	9203      	str	r2, [sp, #12]
 8029e08:	6803      	ldr	r3, [r0, #0]
 8029e0a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8029e0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029e10:	4798      	blx	r3
 8029e12:	f1ba 0f00 	cmp.w	sl, #0
 8029e16:	bf0c      	ite	eq
 8029e18:	4633      	moveq	r3, r6
 8029e1a:	2300      	movne	r3, #0
 8029e1c:	498e      	ldr	r1, [pc, #568]	@ (802a058 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029e1e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8029e22:	8809      	ldrh	r1, [r1, #0]
 8029e24:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 8029e28:	fb05 f501 	mul.w	r5, r5, r1
 8029e2c:	fb01 6202 	mla	r2, r1, r2, r6
 8029e30:	b2a4      	uxth	r4, r4
 8029e32:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 8029e36:	00a2      	lsls	r2, r4, #2
 8029e38:	eb08 0485 	add.w	r4, r8, r5, lsl #2
 8029e3c:	3204      	adds	r2, #4
 8029e3e:	45a0      	cmp	r8, r4
 8029e40:	9207      	str	r2, [sp, #28]
 8029e42:	fa1f f983 	uxth.w	r9, r3
 8029e46:	d21e      	bcs.n	8029e86 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8029e48:	2300      	movs	r3, #0
 8029e4a:	4648      	mov	r0, r9
 8029e4c:	9301      	str	r3, [sp, #4]
 8029e4e:	461d      	mov	r5, r3
 8029e50:	4653      	mov	r3, sl
 8029e52:	b985      	cbnz	r5, 8029e76 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8029e54:	f89b 2000 	ldrb.w	r2, [fp]
 8029e58:	0995      	lsrs	r5, r2, #6
 8029e5a:	1e69      	subs	r1, r5, #1
 8029e5c:	2902      	cmp	r1, #2
 8029e5e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8029e62:	bf88      	it	hi
 8029e64:	f89b 5001 	ldrbhi.w	r5, [fp, #1]
 8029e68:	9201      	str	r2, [sp, #4]
 8029e6a:	bf9a      	itte	ls
 8029e6c:	f10b 0b01 	addls.w	fp, fp, #1
 8029e70:	b2ad      	uxthls	r5, r5
 8029e72:	f10b 0b02 	addhi.w	fp, fp, #2
 8029e76:	b173      	cbz	r3, 8029e96 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8029e78:	429d      	cmp	r5, r3
 8029e7a:	d259      	bcs.n	8029f30 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c4>
 8029e7c:	1b5b      	subs	r3, r3, r5
 8029e7e:	2500      	movs	r5, #0
 8029e80:	b29b      	uxth	r3, r3
 8029e82:	45a0      	cmp	r8, r4
 8029e84:	d3e5      	bcc.n	8029e52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8029e86:	4b73      	ldr	r3, [pc, #460]	@ (802a054 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029e88:	6818      	ldr	r0, [r3, #0]
 8029e8a:	6803      	ldr	r3, [r0, #0]
 8029e8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029e8e:	4798      	blx	r3
 8029e90:	b013      	add	sp, #76	@ 0x4c
 8029e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029e96:	2204      	movs	r2, #4
 8029e98:	4616      	mov	r6, r2
 8029e9a:	9907      	ldr	r1, [sp, #28]
 8029e9c:	9a01      	ldr	r2, [sp, #4]
 8029e9e:	4285      	cmp	r5, r0
 8029ea0:	fb16 1202 	smlabb	r2, r6, r2, r1
 8029ea4:	9906      	ldr	r1, [sp, #24]
 8029ea6:	588e      	ldr	r6, [r1, r2]
 8029ea8:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 8029eac:	d357      	bcc.n	8029f5e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8029eae:	1a2a      	subs	r2, r5, r0
 8029eb0:	b292      	uxth	r2, r2
 8029eb2:	9202      	str	r2, [sp, #8]
 8029eb4:	2800      	cmp	r0, #0
 8029eb6:	d041      	beq.n	8029f3c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029eb8:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8029ebc:	9a08      	ldr	r2, [sp, #32]
 8029ebe:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8029ec2:	fb02 f20c 	mul.w	r2, r2, ip
 8029ec6:	f102 0a01 	add.w	sl, r2, #1
 8029eca:	eb0a 2222 	add.w	r2, sl, r2, asr #8
 8029ece:	1212      	asrs	r2, r2, #8
 8029ed0:	b2d1      	uxtb	r1, r2
 8029ed2:	910a      	str	r1, [sp, #40]	@ 0x28
 8029ed4:	b291      	uxth	r1, r2
 8029ed6:	9109      	str	r1, [sp, #36]	@ 0x24
 8029ed8:	fb02 f109 	mul.w	r1, r2, r9
 8029edc:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8029ee0:	ea4f 2709 	mov.w	r7, r9, lsl #8
 8029ee4:	b2f6      	uxtb	r6, r6
 8029ee6:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 8029eea:	4337      	orrs	r7, r6
 8029eec:	910b      	str	r1, [sp, #44]	@ 0x2c
 8029eee:	fb06 f602 	mul.w	r6, r6, r2
 8029ef2:	fb02 fe0e 	mul.w	lr, r2, lr
 8029ef6:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 8029efa:	f1bc 0f00 	cmp.w	ip, #0
 8029efe:	d036      	beq.n	8029f6e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8029f00:	2a00      	cmp	r2, #0
 8029f02:	d13b      	bne.n	8029f7c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8029f04:	9a04      	ldr	r2, [sp, #16]
 8029f06:	1e51      	subs	r1, r2, #1
 8029f08:	b289      	uxth	r1, r1
 8029f0a:	eb08 0c81 	add.w	ip, r8, r1, lsl #2
 8029f0e:	f1a8 0204 	sub.w	r2, r8, #4
 8029f12:	f852 6f04 	ldr.w	r6, [r2, #4]!
 8029f16:	0e36      	lsrs	r6, r6, #24
 8029f18:	bf08      	it	eq
 8029f1a:	6017      	streq	r7, [r2, #0]
 8029f1c:	4594      	cmp	ip, r2
 8029f1e:	d1f8      	bne.n	8029f12 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8029f20:	3101      	adds	r1, #1
 8029f22:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 8029f26:	4285      	cmp	r5, r0
 8029f28:	d208      	bcs.n	8029f3c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029f2a:	9d02      	ldr	r5, [sp, #8]
 8029f2c:	9805      	ldr	r0, [sp, #20]
 8029f2e:	e7a8      	b.n	8029e82 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f30:	1aed      	subs	r5, r5, r3
 8029f32:	b2ad      	uxth	r5, r5
 8029f34:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 8029f38:	2300      	movs	r3, #0
 8029f3a:	e7a2      	b.n	8029e82 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f3c:	9903      	ldr	r1, [sp, #12]
 8029f3e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8029f42:	4a45      	ldr	r2, [pc, #276]	@ (802a058 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029f44:	b288      	uxth	r0, r1
 8029f46:	1a1b      	subs	r3, r3, r0
 8029f48:	8812      	ldrh	r2, [r2, #0]
 8029f4a:	b29b      	uxth	r3, r3
 8029f4c:	2b00      	cmp	r3, #0
 8029f4e:	eba2 0201 	sub.w	r2, r2, r1
 8029f52:	9d02      	ldr	r5, [sp, #8]
 8029f54:	bf18      	it	ne
 8029f56:	2000      	movne	r0, #0
 8029f58:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029f5c:	e791      	b.n	8029e82 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f5e:	1b42      	subs	r2, r0, r5
 8029f60:	b292      	uxth	r2, r2
 8029f62:	9205      	str	r2, [sp, #20]
 8029f64:	2d00      	cmp	r5, #0
 8029f66:	d06b      	beq.n	802a040 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>
 8029f68:	9504      	str	r5, [sp, #16]
 8029f6a:	9302      	str	r3, [sp, #8]
 8029f6c:	e7a6      	b.n	8029ebc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 8029f6e:	9a04      	ldr	r2, [sp, #16]
 8029f70:	3a01      	subs	r2, #1
 8029f72:	b292      	uxth	r2, r2
 8029f74:	3201      	adds	r2, #1
 8029f76:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029f7a:	e7d4      	b.n	8029f26 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8029f7c:	2aff      	cmp	r2, #255	@ 0xff
 8029f7e:	9a04      	ldr	r2, [sp, #16]
 8029f80:	d054      	beq.n	802a02c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 8029f82:	f102 3aff 	add.w	sl, r2, #4294967295
 8029f86:	fa1f fa8a 	uxth.w	sl, sl
 8029f8a:	e9cd 6e0c 	strd	r6, lr, [sp, #48]	@ 0x30
 8029f8e:	f10a 0a01 	add.w	sl, sl, #1
 8029f92:	eb08 0a8a 	add.w	sl, r8, sl, lsl #2
 8029f96:	9304      	str	r3, [sp, #16]
 8029f98:	f8d8 2000 	ldr.w	r2, [r8]
 8029f9c:	0e11      	lsrs	r1, r2, #24
 8029f9e:	d038      	beq.n	802a012 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 8029fa0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8029fa2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029fa4:	fb11 f606 	smulbb	r6, r1, r6
 8029fa8:	b2b6      	uxth	r6, r6
 8029faa:	f106 0e01 	add.w	lr, r6, #1
 8029fae:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8029fb2:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8029fb6:	eba1 090e 	sub.w	r9, r1, lr
 8029fba:	b2d6      	uxtb	r6, r2
 8029fbc:	fb09 3606 	mla	r6, r9, r6, r3
 8029fc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8029fc2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8029fc6:	fb09 3c0c 	mla	ip, r9, ip, r3
 8029fca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029fcc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8029fd0:	4419      	add	r1, r3
 8029fd2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029fd4:	eba1 010e 	sub.w	r1, r1, lr
 8029fd8:	fb09 3202 	mla	r2, r9, r2, r3
 8029fdc:	b2c9      	uxtb	r1, r1
 8029fde:	fbb6 f6f1 	udiv	r6, r6, r1
 8029fe2:	fbbc fcf1 	udiv	ip, ip, r1
 8029fe6:	fbb2 f9f1 	udiv	r9, r2, r1
 8029fea:	b2f6      	uxtb	r6, r6
 8029fec:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8029ff0:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 8029ff4:	f40c 027f 	and.w	r2, ip, #16711680	@ 0xff0000
 8029ff8:	ea4f 2109 	mov.w	r1, r9, lsl #8
 8029ffc:	4332      	orrs	r2, r6
 8029ffe:	b289      	uxth	r1, r1
 802a000:	430a      	orrs	r2, r1
 802a002:	f8c8 2000 	str.w	r2, [r8]
 802a006:	f108 0804 	add.w	r8, r8, #4
 802a00a:	45d0      	cmp	r8, sl
 802a00c:	d1c4      	bne.n	8029f98 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a00e:	9b04      	ldr	r3, [sp, #16]
 802a010:	e789      	b.n	8029f26 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a012:	f8c8 7000 	str.w	r7, [r8]
 802a016:	f108 0804 	add.w	r8, r8, #4
 802a01a:	45d0      	cmp	r8, sl
 802a01c:	d1bc      	bne.n	8029f98 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a01e:	e7f6      	b.n	802a00e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a2>
 802a020:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802a024:	b299      	uxth	r1, r3
 802a026:	fb94 f2f1 	sdiv	r2, r4, r1
 802a02a:	e6c4      	b.n	8029db6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 802a02c:	3a01      	subs	r2, #1
 802a02e:	b292      	uxth	r2, r2
 802a030:	3201      	adds	r2, #1
 802a032:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 802a036:	f848 7b04 	str.w	r7, [r8], #4
 802a03a:	4590      	cmp	r8, r2
 802a03c:	d1fb      	bne.n	802a036 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ca>
 802a03e:	e772      	b.n	8029f26 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a040:	9805      	ldr	r0, [sp, #20]
 802a042:	462b      	mov	r3, r5
 802a044:	e71d      	b.n	8029e82 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a046:	4b05      	ldr	r3, [pc, #20]	@ (802a05c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 802a048:	4a05      	ldr	r2, [pc, #20]	@ (802a060 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>)
 802a04a:	f241 01eb 	movw	r1, #4331	@ 0x10eb
 802a04e:	4805      	ldr	r0, [pc, #20]	@ (802a064 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f8>)
 802a050:	f008 fa32 	bl	80324b8 <__assert_func>
 802a054:	20082ec4 	.word	0x20082ec4
 802a058:	20082ebe 	.word	0x20082ebe
 802a05c:	0803636c 	.word	0x0803636c
 802a060:	08037a88 	.word	0x08037a88
 802a064:	08036278 	.word	0x08036278

0802a068 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802a068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a06c:	b0a1      	sub	sp, #132	@ 0x84
 802a06e:	9210      	str	r2, [sp, #64]	@ 0x40
 802a070:	9119      	str	r1, [sp, #100]	@ 0x64
 802a072:	7812      	ldrb	r2, [r2, #0]
 802a074:	f89d 10ac 	ldrb.w	r1, [sp, #172]	@ 0xac
 802a078:	461c      	mov	r4, r3
 802a07a:	9104      	str	r1, [sp, #16]
 802a07c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a07e:	2a00      	cmp	r2, #0
 802a080:	f040 8215 	bne.w	802a4ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 802a084:	6861      	ldr	r1, [r4, #4]
 802a086:	4683      	mov	fp, r0
 802a088:	6820      	ldr	r0, [r4, #0]
 802a08a:	aa1c      	add	r2, sp, #112	@ 0x70
 802a08c:	c203      	stmia	r2!, {r0, r1}
 802a08e:	6818      	ldr	r0, [r3, #0]
 802a090:	6859      	ldr	r1, [r3, #4]
 802a092:	aa1e      	add	r2, sp, #120	@ 0x78
 802a094:	c203      	stmia	r2!, {r0, r1}
 802a096:	a81c      	add	r0, sp, #112	@ 0x70
 802a098:	f7e2 fe32 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a09c:	4621      	mov	r1, r4
 802a09e:	a81e      	add	r0, sp, #120	@ 0x78
 802a0a0:	f7e2 fe56 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a0a4:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 802a0a8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 802a0ac:	f340 81f7 	ble.w	802a49e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 802a0b0:	2301      	movs	r3, #1
 802a0b2:	b289      	uxth	r1, r1
 802a0b4:	931a      	str	r3, [sp, #104]	@ 0x68
 802a0b6:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 802a0ba:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 802a0be:	fb90 f4f3 	sdiv	r4, r0, r3
 802a0c2:	441a      	add	r2, r3
 802a0c4:	3a01      	subs	r2, #1
 802a0c6:	fb92 f2f3 	sdiv	r2, r2, r3
 802a0ca:	b2a4      	uxth	r4, r4
 802a0cc:	fb03 0314 	mls	r3, r3, r4, r0
 802a0d0:	9418      	str	r4, [sp, #96]	@ 0x60
 802a0d2:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 802a0d6:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 802a0da:	fb13 4101 	smlabb	r1, r3, r1, r4
 802a0de:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 802a0e2:	4bc6      	ldr	r3, [pc, #792]	@ (802a3fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a0e4:	4434      	add	r4, r6
 802a0e6:	4405      	add	r5, r0
 802a0e8:	6818      	ldr	r0, [r3, #0]
 802a0ea:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 802a0ee:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 802a0f2:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 802a0f6:	6803      	ldr	r3, [r0, #0]
 802a0f8:	3201      	adds	r2, #1
 802a0fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802a0fc:	9608      	str	r6, [sp, #32]
 802a0fe:	fa1f f881 	uxth.w	r8, r1
 802a102:	b294      	uxth	r4, r2
 802a104:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 802a108:	4798      	blx	r3
 802a10a:	2300      	movs	r3, #0
 802a10c:	49bc      	ldr	r1, [pc, #752]	@ (802a400 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 802a10e:	f1b8 0f00 	cmp.w	r8, #0
 802a112:	bf08      	it	eq
 802a114:	4632      	moveq	r2, r6
 802a116:	8809      	ldrh	r1, [r1, #0]
 802a118:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 802a11c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a11e:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 802a122:	fb05 f501 	mul.w	r5, r5, r1
 802a126:	fb01 6303 	mla	r3, r1, r3, r6
 802a12a:	ea4f 0484 	mov.w	r4, r4, lsl #2
 802a12e:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 802a132:	f104 0304 	add.w	r3, r4, #4
 802a136:	9315      	str	r3, [sp, #84]	@ 0x54
 802a138:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 802a13c:	bf18      	it	ne
 802a13e:	2200      	movne	r2, #0
 802a140:	9303      	str	r3, [sp, #12]
 802a142:	f10b 030e 	add.w	r3, fp, #14
 802a146:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a148:	465b      	mov	r3, fp
 802a14a:	fa1f f982 	uxth.w	r9, r2
 802a14e:	46cb      	mov	fp, r9
 802a150:	46b4      	mov	ip, r6
 802a152:	4647      	mov	r7, r8
 802a154:	4699      	mov	r9, r3
 802a156:	9b03      	ldr	r3, [sp, #12]
 802a158:	459c      	cmp	ip, r3
 802a15a:	f080 8104 	bcs.w	802a366 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a15e:	e9dd 2017 	ldrd	r2, r0, [sp, #92]	@ 0x5c
 802a162:	2301      	movs	r3, #1
 802a164:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 802a168:	2500      	movs	r5, #0
 802a16a:	fbb7 f1f1 	udiv	r1, r7, r1
 802a16e:	f04f 0a01 	mov.w	sl, #1
 802a172:	fa10 f282 	uxtah	r2, r0, r2
 802a176:	0092      	lsls	r2, r2, #2
 802a178:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802a17a:	3204      	adds	r2, #4
 802a17c:	4410      	add	r0, r2
 802a17e:	9305      	str	r3, [sp, #20]
 802a180:	7883      	ldrb	r3, [r0, #2]
 802a182:	7844      	ldrb	r4, [r0, #1]
 802a184:	021b      	lsls	r3, r3, #8
 802a186:	78c0      	ldrb	r0, [r0, #3]
 802a188:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802a18a:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 802a18e:	4304      	orrs	r4, r0
 802a190:	1930      	adds	r0, r6, r4
 802a192:	7843      	ldrb	r3, [r0, #1]
 802a194:	5d34      	ldrb	r4, [r6, r4]
 802a196:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802a198:	021b      	lsls	r3, r3, #8
 802a19a:	5cb2      	ldrb	r2, [r6, r2]
 802a19c:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802a19e:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802a1a2:	1a71      	subs	r1, r6, r1
 802a1a4:	431c      	orrs	r4, r3
 802a1a6:	920a      	str	r2, [sp, #40]	@ 0x28
 802a1a8:	3201      	adds	r2, #1
 802a1aa:	f889 400d 	strb.w	r4, [r9, #13]
 802a1ae:	9512      	str	r5, [sp, #72]	@ 0x48
 802a1b0:	9202      	str	r2, [sp, #8]
 802a1b2:	4666      	mov	r6, ip
 802a1b4:	b28a      	uxth	r2, r1
 802a1b6:	46d6      	mov	lr, sl
 802a1b8:	4629      	mov	r1, r5
 802a1ba:	464d      	mov	r5, r9
 802a1bc:	46d9      	mov	r9, fp
 802a1be:	b2a4      	uxth	r4, r4
 802a1c0:	3001      	adds	r0, #1
 802a1c2:	9407      	str	r4, [sp, #28]
 802a1c4:	9001      	str	r0, [sp, #4]
 802a1c6:	9216      	str	r2, [sp, #88]	@ 0x58
 802a1c8:	2f00      	cmp	r7, #0
 802a1ca:	d034      	beq.n	802a236 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ce>
 802a1cc:	45ba      	cmp	sl, r7
 802a1ce:	f080 80d2 	bcs.w	802a376 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 802a1d2:	9b03      	ldr	r3, [sp, #12]
 802a1d4:	eba7 070a 	sub.w	r7, r7, sl
 802a1d8:	429e      	cmp	r6, r3
 802a1da:	b2bf      	uxth	r7, r7
 802a1dc:	f080 80c3 	bcs.w	802a366 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a1e0:	9801      	ldr	r0, [sp, #4]
 802a1e2:	f1ce 0107 	rsb	r1, lr, #7
 802a1e6:	7842      	ldrb	r2, [r0, #1]
 802a1e8:	7803      	ldrb	r3, [r0, #0]
 802a1ea:	408a      	lsls	r2, r1
 802a1ec:	fa43 f30e 	asr.w	r3, r3, lr
 802a1f0:	0052      	lsls	r2, r2, #1
 802a1f2:	f10e 0101 	add.w	r1, lr, #1
 802a1f6:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802a1fa:	b2db      	uxtb	r3, r3
 802a1fc:	fa5f fe81 	uxtb.w	lr, r1
 802a200:	4313      	orrs	r3, r2
 802a202:	f1be 0f08 	cmp.w	lr, #8
 802a206:	b29a      	uxth	r2, r3
 802a208:	f000 80f1 	beq.w	802a3ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x386>
 802a20c:	3001      	adds	r0, #1
 802a20e:	9001      	str	r0, [sp, #4]
 802a210:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a212:	4291      	cmp	r1, r2
 802a214:	f0c0 80c0 	bcc.w	802a398 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802a218:	f04f 0a01 	mov.w	sl, #1
 802a21c:	b2db      	uxtb	r3, r3
 802a21e:	736b      	strb	r3, [r5, #13]
 802a220:	9902      	ldr	r1, [sp, #8]
 802a222:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802a226:	f0c0 810a 	bcc.w	802a43e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 802a22a:	9207      	str	r2, [sp, #28]
 802a22c:	f8cd a014 	str.w	sl, [sp, #20]
 802a230:	2100      	movs	r1, #0
 802a232:	2f00      	cmp	r7, #0
 802a234:	d1ca      	bne.n	802a1cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802a236:	45ca      	cmp	sl, r9
 802a238:	f0c0 80cd 	bcc.w	802a3d6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36e>
 802a23c:	ebaa 0309 	sub.w	r3, sl, r9
 802a240:	b29b      	uxth	r3, r3
 802a242:	9309      	str	r3, [sp, #36]	@ 0x24
 802a244:	f1b9 0f00 	cmp.w	r9, #0
 802a248:	f000 80dc 	beq.w	802a404 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39c>
 802a24c:	464b      	mov	r3, r9
 802a24e:	f8cd 9018 	str.w	r9, [sp, #24]
 802a252:	9711      	str	r7, [sp, #68]	@ 0x44
 802a254:	18cb      	adds	r3, r1, r3
 802a256:	e9cd ea0d 	strd	lr, sl, [sp, #52]	@ 0x34
 802a25a:	46b3      	mov	fp, r6
 802a25c:	fa1f fc83 	uxth.w	ip, r3
 802a260:	e9cd 690b 	strd	r6, r9, [sp, #44]	@ 0x2c
 802a264:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 802a268:	970f      	str	r7, [sp, #60]	@ 0x3c
 802a26a:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 802a26e:	e045      	b.n	802a2fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a270:	f8db 0000 	ldr.w	r0, [fp]
 802a274:	0e07      	lsrs	r7, r0, #24
 802a276:	d055      	beq.n	802a324 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2bc>
 802a278:	b2d4      	uxtb	r4, r2
 802a27a:	2a00      	cmp	r2, #0
 802a27c:	d03a      	beq.n	802a2f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a27e:	fb04 fe07 	mul.w	lr, r4, r7
 802a282:	f10e 0601 	add.w	r6, lr, #1
 802a286:	eb06 262e 	add.w	r6, r6, lr, asr #8
 802a28a:	1236      	asrs	r6, r6, #8
 802a28c:	fa5f fe80 	uxtb.w	lr, r0
 802a290:	9614      	str	r6, [sp, #80]	@ 0x50
 802a292:	1bbe      	subs	r6, r7, r6
 802a294:	9413      	str	r4, [sp, #76]	@ 0x4c
 802a296:	f3c3 4907 	ubfx	r9, r3, #16, #8
 802a29a:	fb06 f40e 	mul.w	r4, r6, lr
 802a29e:	fb02 f909 	mul.w	r9, r2, r9
 802a2a2:	f3c3 2e07 	ubfx	lr, r3, #8, #8
 802a2a6:	fb02 fe0e 	mul.w	lr, r2, lr
 802a2aa:	b2db      	uxtb	r3, r3
 802a2ac:	fb02 4303 	mla	r3, r2, r3, r4
 802a2b0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802a2b4:	fb06 9902 	mla	r9, r6, r2, r9
 802a2b8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a2bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a2be:	fb06 e000 	mla	r0, r6, r0, lr
 802a2c2:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a2c4:	443a      	add	r2, r7
 802a2c6:	1b94      	subs	r4, r2, r6
 802a2c8:	b2e4      	uxtb	r4, r4
 802a2ca:	fbb9 f9f4 	udiv	r9, r9, r4
 802a2ce:	fbb3 f3f4 	udiv	r3, r3, r4
 802a2d2:	fbb0 f0f4 	udiv	r0, r0, r4
 802a2d6:	ea4f 4909 	mov.w	r9, r9, lsl #16
 802a2da:	b2db      	uxtb	r3, r3
 802a2dc:	f409 097f 	and.w	r9, r9, #16711680	@ 0xff0000
 802a2e0:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 802a2e4:	0200      	lsls	r0, r0, #8
 802a2e6:	ea43 0909 	orr.w	r9, r3, r9
 802a2ea:	b280      	uxth	r0, r0
 802a2ec:	ea49 0000 	orr.w	r0, r9, r0
 802a2f0:	f8cb 0000 	str.w	r0, [fp]
 802a2f4:	4561      	cmp	r1, ip
 802a2f6:	f10b 0b04 	add.w	fp, fp, #4
 802a2fa:	d01d      	beq.n	802a338 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 802a2fc:	2204      	movs	r2, #4
 802a2fe:	186b      	adds	r3, r5, r1
 802a300:	7b5b      	ldrb	r3, [r3, #13]
 802a302:	3101      	adds	r1, #1
 802a304:	fb12 a303 	smlabb	r3, r2, r3, sl
 802a308:	f858 3003 	ldr.w	r3, [r8, r3]
 802a30c:	b289      	uxth	r1, r1
 802a30e:	0e1a      	lsrs	r2, r3, #24
 802a310:	d0f0      	beq.n	802a2f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a312:	9804      	ldr	r0, [sp, #16]
 802a314:	fb00 f202 	mul.w	r2, r0, r2
 802a318:	1c50      	adds	r0, r2, #1
 802a31a:	eb00 2222 	add.w	r2, r0, r2, asr #8
 802a31e:	1212      	asrs	r2, r2, #8
 802a320:	2aff      	cmp	r2, #255	@ 0xff
 802a322:	d1a5      	bne.n	802a270 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x208>
 802a324:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 802a328:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 802a32c:	4561      	cmp	r1, ip
 802a32e:	f8cb 2000 	str.w	r2, [fp]
 802a332:	f10b 0b04 	add.w	fp, fp, #4
 802a336:	d1e1      	bne.n	802a2fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a338:	e9dd 690b 	ldrd	r6, r9, [sp, #44]	@ 0x2c
 802a33c:	e9dd ea0d 	ldrd	lr, sl, [sp, #52]	@ 0x34
 802a340:	9b06      	ldr	r3, [sp, #24]
 802a342:	45ca      	cmp	sl, r9
 802a344:	f103 33ff 	add.w	r3, r3, #4294967295
 802a348:	b29b      	uxth	r3, r3
 802a34a:	f103 0301 	add.w	r3, r3, #1
 802a34e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802a350:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a354:	d257      	bcs.n	802a406 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39e>
 802a356:	9b03      	ldr	r3, [sp, #12]
 802a358:	4661      	mov	r1, ip
 802a35a:	429e      	cmp	r6, r3
 802a35c:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a360:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a364:	d313      	bcc.n	802a38e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x326>
 802a366:	4b25      	ldr	r3, [pc, #148]	@ (802a3fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a368:	6818      	ldr	r0, [r3, #0]
 802a36a:	6803      	ldr	r3, [r0, #0]
 802a36c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802a36e:	4798      	blx	r3
 802a370:	b021      	add	sp, #132	@ 0x84
 802a372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a376:	ebaa 0a07 	sub.w	sl, sl, r7
 802a37a:	4439      	add	r1, r7
 802a37c:	2700      	movs	r7, #0
 802a37e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a382:	fa1f fa8a 	uxth.w	sl, sl
 802a386:	b289      	uxth	r1, r1
 802a388:	9b03      	ldr	r3, [sp, #12]
 802a38a:	429e      	cmp	r6, r3
 802a38c:	d2eb      	bcs.n	802a366 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a38e:	f1ba 0f00 	cmp.w	sl, #0
 802a392:	f47f af19 	bne.w	802a1c8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a396:	e723      	b.n	802a1e0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a398:	9b02      	ldr	r3, [sp, #8]
 802a39a:	4293      	cmp	r3, r2
 802a39c:	d852      	bhi.n	802a444 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3dc>
 802a39e:	9805      	ldr	r0, [sp, #20]
 802a3a0:	7b69      	ldrb	r1, [r5, #13]
 802a3a2:	182b      	adds	r3, r5, r0
 802a3a4:	7359      	strb	r1, [r3, #13]
 802a3a6:	7b6b      	ldrb	r3, [r5, #13]
 802a3a8:	1c41      	adds	r1, r0, #1
 802a3aa:	fa1f fa81 	uxth.w	sl, r1
 802a3ae:	9c02      	ldr	r4, [sp, #8]
 802a3b0:	f8cd a014 	str.w	sl, [sp, #20]
 802a3b4:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 802a3b8:	f104 0c01 	add.w	ip, r4, #1
 802a3bc:	9c07      	ldr	r4, [sp, #28]
 802a3be:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 802a3c2:	fa1f f38c 	uxth.w	r3, ip
 802a3c6:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 802a3ca:	f8a0 4050 	strh.w	r4, [r0, #80]	@ 0x50
 802a3ce:	9302      	str	r3, [sp, #8]
 802a3d0:	9207      	str	r2, [sp, #28]
 802a3d2:	2100      	movs	r1, #0
 802a3d4:	e6f8      	b.n	802a1c8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a3d6:	eba9 030a 	sub.w	r3, r9, sl
 802a3da:	b29b      	uxth	r3, r3
 802a3dc:	9311      	str	r3, [sp, #68]	@ 0x44
 802a3de:	f1ba 0f00 	cmp.w	sl, #0
 802a3e2:	d06b      	beq.n	802a4bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x454>
 802a3e4:	f8cd a018 	str.w	sl, [sp, #24]
 802a3e8:	9709      	str	r7, [sp, #36]	@ 0x24
 802a3ea:	4653      	mov	r3, sl
 802a3ec:	e732      	b.n	802a254 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 802a3ee:	4601      	mov	r1, r0
 802a3f0:	3102      	adds	r1, #2
 802a3f2:	f04f 0e00 	mov.w	lr, #0
 802a3f6:	9101      	str	r1, [sp, #4]
 802a3f8:	e70a      	b.n	802a210 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 802a3fa:	bf00      	nop
 802a3fc:	20082ec4 	.word	0x20082ec4
 802a400:	20082ebe 	.word	0x20082ebe
 802a404:	468c      	mov	ip, r1
 802a406:	4b31      	ldr	r3, [pc, #196]	@ (802a4cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x464>)
 802a408:	9908      	ldr	r1, [sp, #32]
 802a40a:	881b      	ldrh	r3, [r3, #0]
 802a40c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802a40e:	1a5b      	subs	r3, r3, r1
 802a410:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a414:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802a416:	3201      	adds	r2, #1
 802a418:	4293      	cmp	r3, r2
 802a41a:	9212      	str	r2, [sp, #72]	@ 0x48
 802a41c:	d02d      	beq.n	802a47a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802a41e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a422:	f8bd 7074 	ldrh.w	r7, [sp, #116]	@ 0x74
 802a426:	4661      	mov	r1, ip
 802a428:	eba7 0709 	sub.w	r7, r7, r9
 802a42c:	b2bf      	uxth	r7, r7
 802a42e:	2f00      	cmp	r7, #0
 802a430:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a434:	bf14      	ite	ne
 802a436:	f04f 0900 	movne.w	r9, #0
 802a43a:	2700      	moveq	r7, #0
 802a43c:	e7a4      	b.n	802a388 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 802a43e:	9905      	ldr	r1, [sp, #20]
 802a440:	3101      	adds	r1, #1
 802a442:	e7b4      	b.n	802a3ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x346>
 802a444:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 802a448:	f893 a04f 	ldrb.w	sl, [r3, #79]	@ 0x4f
 802a44c:	4613      	mov	r3, r2
 802a44e:	f1ba 0f01 	cmp.w	sl, #1
 802a452:	d90d      	bls.n	802a470 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x408>
 802a454:	f10a 010d 	add.w	r1, sl, #13
 802a458:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 802a45a:	4429      	add	r1, r5
 802a45c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 802a460:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802a464:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802a468:	428c      	cmp	r4, r1
 802a46a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802a46e:	d1f5      	bne.n	802a45c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f4>
 802a470:	b2db      	uxtb	r3, r3
 802a472:	736b      	strb	r3, [r5, #13]
 802a474:	fa1f fa8a 	uxth.w	sl, sl
 802a478:	e6d2      	b.n	802a220 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 802a47a:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 802a47e:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 802a482:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802a484:	1a9b      	subs	r3, r3, r2
 802a486:	b29f      	uxth	r7, r3
 802a488:	2f00      	cmp	r7, #0
 802a48a:	9b08      	ldr	r3, [sp, #32]
 802a48c:	bf18      	it	ne
 802a48e:	2300      	movne	r3, #0
 802a490:	3101      	adds	r1, #1
 802a492:	46b4      	mov	ip, r6
 802a494:	46a9      	mov	r9, r5
 802a496:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a498:	fa1f fb83 	uxth.w	fp, r3
 802a49c:	e65b      	b.n	802a156 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802a49e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802a4a2:	b289      	uxth	r1, r1
 802a4a4:	fb93 f3f1 	sdiv	r3, r3, r1
 802a4a8:	b29a      	uxth	r2, r3
 802a4aa:	921a      	str	r2, [sp, #104]	@ 0x68
 802a4ac:	e603      	b.n	802a0b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4e>
 802a4ae:	4b08      	ldr	r3, [pc, #32]	@ (802a4d0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x468>)
 802a4b0:	4a08      	ldr	r2, [pc, #32]	@ (802a4d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46c>)
 802a4b2:	f241 1181 	movw	r1, #4481	@ 0x1181
 802a4b6:	4808      	ldr	r0, [pc, #32]	@ (802a4d8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x470>)
 802a4b8:	f007 fffe 	bl	80324b8 <__assert_func>
 802a4bc:	9b03      	ldr	r3, [sp, #12]
 802a4be:	429e      	cmp	r6, r3
 802a4c0:	f4bf af51 	bcs.w	802a366 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a4c4:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a4c8:	e68a      	b.n	802a1e0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a4ca:	bf00      	nop
 802a4cc:	20082ebe 	.word	0x20082ebe
 802a4d0:	0803636c 	.word	0x0803636c
 802a4d4:	08037d54 	.word	0x08037d54
 802a4d8:	08036278 	.word	0x08036278

0802a4dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802a4dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a4e0:	7814      	ldrb	r4, [r2, #0]
 802a4e2:	7855      	ldrb	r5, [r2, #1]
 802a4e4:	2c01      	cmp	r4, #1
 802a4e6:	9e06      	ldr	r6, [sp, #24]
 802a4e8:	f89d 701c 	ldrb.w	r7, [sp, #28]
 802a4ec:	d013      	beq.n	802a516 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3a>
 802a4ee:	d304      	bcc.n	802a4fa <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 802a4f0:	2c02      	cmp	r4, #2
 802a4f2:	f000 80ca 	beq.w	802a68a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ae>
 802a4f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a4fa:	7b04      	ldrb	r4, [r0, #12]
 802a4fc:	2c01      	cmp	r4, #1
 802a4fe:	d02d      	beq.n	802a55c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x80>
 802a500:	d317      	bcc.n	802a532 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802a502:	2c02      	cmp	r4, #2
 802a504:	f040 80cf 	bne.w	802a6a6 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ca>
 802a508:	2d03      	cmp	r5, #3
 802a50a:	f200 80da 	bhi.w	802a6c2 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e6>
 802a50e:	e8df f005 	tbb	[pc, r5]
 802a512:	989e      	.short	0x989e
 802a514:	8c92      	.short	0x8c92
 802a516:	7b04      	ldrb	r4, [r0, #12]
 802a518:	2c01      	cmp	r4, #1
 802a51a:	d018      	beq.n	802a54e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x72>
 802a51c:	d310      	bcc.n	802a540 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x64>
 802a51e:	2c02      	cmp	r4, #2
 802a520:	f040 80ba 	bne.w	802a698 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1bc>
 802a524:	2d03      	cmp	r5, #3
 802a526:	f200 80c5 	bhi.w	802a6b4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1d8>
 802a52a:	e8df f005 	tbb	[pc, r5]
 802a52e:	a2a8      	.short	0xa2a8
 802a530:	969c      	.short	0x969c
 802a532:	2d03      	cmp	r5, #3
 802a534:	f200 80d3 	bhi.w	802a6de <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x202>
 802a538:	e8df f005 	tbb	[pc, r5]
 802a53c:	5f656b71 	.word	0x5f656b71
 802a540:	2d03      	cmp	r5, #3
 802a542:	f200 80c5 	bhi.w	802a6d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1f4>
 802a546:	e8df f005 	tbb	[pc, r5]
 802a54a:	4c52      	.short	0x4c52
 802a54c:	4046      	.short	0x4046
 802a54e:	2d03      	cmp	r5, #3
 802a550:	f200 80d3 	bhi.w	802a6fa <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x21e>
 802a554:	e8df f005 	tbb	[pc, r5]
 802a558:	21272d33 	.word	0x21272d33
 802a55c:	2d03      	cmp	r5, #3
 802a55e:	f200 80c5 	bhi.w	802a6ec <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x210>
 802a562:	e8df f005 	tbb	[pc, r5]
 802a566:	0e14      	.short	0x0e14
 802a568:	0208      	.short	0x0208
 802a56a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a56e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a572:	f7fd b8e3 	b.w	802773c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a576:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a57a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a57e:	f7fc bead 	b.w	80272dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a582:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a586:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a58a:	f7fc bcad 	b.w	8026ee8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a58e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a592:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a596:	f7fc bb83 	b.w	8026ca0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a59a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a59e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5a2:	f7fd bf9d 	b.w	80284e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5a6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ae:	f7fd be47 	b.w	8028240 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5b2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ba:	f7fd bc13 	b.w	8027de4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5be:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5c6:	f7fd badd 	b.w	8027b84 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5ca:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5d2:	f7fc b93f 	b.w	8026854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5d6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5de:	f7fb bfd7 	b.w	8026590 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5e2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ea:	f7fb bd63 	b.w	80260b4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5ee:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5f6:	f7fb bc05 	b.w	8025e04 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5fa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a602:	f7fb b9a7 	b.w	8025954 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a606:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a60a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a60e:	f7fa bfd3 	b.w	80255b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a612:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a616:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a61a:	f7fa bde7 	b.w	80251ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a61e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a622:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a626:	f7fa bc41 	b.w	8024eac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a62a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a62e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a632:	f7ff bd19 	b.w	802a068 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a636:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a63a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a63e:	f7ff bb95 	b.w	8029d6c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a642:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a646:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a64a:	f7ff ba05 	b.w	8029a58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a64e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a652:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a656:	f7ff b871 	b.w	802973c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a65a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a65e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a662:	f7fe be1f 	b.w	80292a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a666:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a66a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a66e:	f7fe bcaf 	b.w	8028fd0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a672:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a676:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a67a:	f7fe ba8b 	b.w	8028b94 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a67e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a682:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a686:	f7fe b955 	b.w	8028934 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a68a:	4b1f      	ldr	r3, [pc, #124]	@ (802a708 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22c>)
 802a68c:	4a1f      	ldr	r2, [pc, #124]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a68e:	f240 31f3 	movw	r1, #1011	@ 0x3f3
 802a692:	481f      	ldr	r0, [pc, #124]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a694:	f007 ff10 	bl	80324b8 <__assert_func>
 802a698:	4b1e      	ldr	r3, [pc, #120]	@ (802a714 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a69a:	4a1c      	ldr	r2, [pc, #112]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a69c:	f240 4179 	movw	r1, #1145	@ 0x479
 802a6a0:	481b      	ldr	r0, [pc, #108]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6a2:	f007 ff09 	bl	80324b8 <__assert_func>
 802a6a6:	4b1b      	ldr	r3, [pc, #108]	@ (802a714 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a6a8:	4a18      	ldr	r2, [pc, #96]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6aa:	f240 4135 	movw	r1, #1077	@ 0x435
 802a6ae:	4818      	ldr	r0, [pc, #96]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6b0:	f007 ff02 	bl	80324b8 <__assert_func>
 802a6b4:	4b18      	ldr	r3, [pc, #96]	@ (802a718 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a6b6:	4a15      	ldr	r2, [pc, #84]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6b8:	f240 4174 	movw	r1, #1140	@ 0x474
 802a6bc:	4814      	ldr	r0, [pc, #80]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6be:	f007 fefb 	bl	80324b8 <__assert_func>
 802a6c2:	4b15      	ldr	r3, [pc, #84]	@ (802a718 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a6c4:	4a11      	ldr	r2, [pc, #68]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6c6:	f44f 6186 	mov.w	r1, #1072	@ 0x430
 802a6ca:	4811      	ldr	r0, [pc, #68]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6cc:	f007 fef4 	bl	80324b8 <__assert_func>
 802a6d0:	4b12      	ldr	r3, [pc, #72]	@ (802a71c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a6d2:	4a0e      	ldr	r2, [pc, #56]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6d4:	f240 414c 	movw	r1, #1100	@ 0x44c
 802a6d8:	480d      	ldr	r0, [pc, #52]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6da:	f007 feed 	bl	80324b8 <__assert_func>
 802a6de:	4b0f      	ldr	r3, [pc, #60]	@ (802a71c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a6e0:	4a0a      	ldr	r2, [pc, #40]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6e2:	f44f 6181 	mov.w	r1, #1032	@ 0x408
 802a6e6:	480a      	ldr	r0, [pc, #40]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6e8:	f007 fee6 	bl	80324b8 <__assert_func>
 802a6ec:	4b0c      	ldr	r3, [pc, #48]	@ (802a720 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a6ee:	4a07      	ldr	r2, [pc, #28]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6f0:	f240 411c 	movw	r1, #1052	@ 0x41c
 802a6f4:	4806      	ldr	r0, [pc, #24]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6f6:	f007 fedf 	bl	80324b8 <__assert_func>
 802a6fa:	4b09      	ldr	r3, [pc, #36]	@ (802a720 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a6fc:	4a03      	ldr	r2, [pc, #12]	@ (802a70c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6fe:	f44f 618c 	mov.w	r1, #1120	@ 0x460
 802a702:	4803      	ldr	r0, [pc, #12]	@ (802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a704:	f007 fed8 	bl	80324b8 <__assert_func>
 802a708:	08035f30 	.word	0x08035f30
 802a70c:	08036a80 	.word	0x08036a80
 802a710:	08036278 	.word	0x08036278
 802a714:	08036090 	.word	0x08036090
 802a718:	0803602c 	.word	0x0803602c
 802a71c:	08035f6c 	.word	0x08035f6c
 802a720:	08035fcc 	.word	0x08035fcc

0802a724 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802a724:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802a728:	b089      	sub	sp, #36	@ 0x24
 802a72a:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 802a72e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a730:	b13c      	cbz	r4, 802a742 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a732:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 802a736:	2e00      	cmp	r6, #0
 802a738:	dd03      	ble.n	802a742 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a73a:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 802a73e:	2e00      	cmp	r6, #0
 802a740:	dc02      	bgt.n	802a748 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 802a742:	b009      	add	sp, #36	@ 0x24
 802a744:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802a748:	f04f 0800 	mov.w	r8, #0
 802a74c:	4606      	mov	r6, r0
 802a74e:	f362 080f 	bfi	r8, r2, #0, #16
 802a752:	4608      	mov	r0, r1
 802a754:	460f      	mov	r7, r1
 802a756:	f363 481f 	bfi	r8, r3, #16, #16
 802a75a:	f7e5 fc0b 	bl	800ff74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a75e:	4681      	mov	r9, r0
 802a760:	4638      	mov	r0, r7
 802a762:	f7e5 fc3b 	bl	800ffdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 802a766:	2300      	movs	r3, #0
 802a768:	f369 030f 	bfi	r3, r9, #0, #16
 802a76c:	f360 431f 	bfi	r3, r0, #16, #16
 802a770:	4638      	mov	r0, r7
 802a772:	e9cd 8302 	strd	r8, r3, [sp, #8]
 802a776:	f7e5 fd3b 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a77a:	280b      	cmp	r0, #11
 802a77c:	d024      	beq.n	802a7c8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa4>
 802a77e:	aa04      	add	r2, sp, #16
 802a780:	f10d 0808 	add.w	r8, sp, #8
 802a784:	e898 0003 	ldmia.w	r8, {r0, r1}
 802a788:	e882 0003 	stmia.w	r2, {r0, r1}
 802a78c:	6828      	ldr	r0, [r5, #0]
 802a78e:	6869      	ldr	r1, [r5, #4]
 802a790:	ab06      	add	r3, sp, #24
 802a792:	c303      	stmia	r3!, {r0, r1}
 802a794:	4610      	mov	r0, r2
 802a796:	f7e2 fab3 	bl	800cd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a79a:	4641      	mov	r1, r8
 802a79c:	a806      	add	r0, sp, #24
 802a79e:	f7e2 fad7 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a7a2:	4638      	mov	r0, r7
 802a7a4:	f7e5 fca0 	bl	80100e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a7a8:	4680      	mov	r8, r0
 802a7aa:	4638      	mov	r0, r7
 802a7ac:	f7e5 fd20 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a7b0:	280d      	cmp	r0, #13
 802a7b2:	f200 8083 	bhi.w	802a8bc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x198>
 802a7b6:	e8df f000 	tbb	[pc, r0]
 802a7ba:	6467      	.short	0x6467
 802a7bc:	81818117 	.word	0x81818117
 802a7c0:	81818181 	.word	0x81818181
 802a7c4:	6a818181 	.word	0x6a818181
 802a7c8:	4638      	mov	r0, r7
 802a7ca:	f7e5 fc8d 	bl	80100e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a7ce:	4680      	mov	r8, r0
 802a7d0:	4638      	mov	r0, r7
 802a7d2:	f7e5 fcb9 	bl	8010148 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a7d6:	4641      	mov	r1, r8
 802a7d8:	4602      	mov	r2, r0
 802a7da:	e9cd 5400 	strd	r5, r4, [sp]
 802a7de:	4630      	mov	r0, r6
 802a7e0:	ab02      	add	r3, sp, #8
 802a7e2:	f7ff fe7b 	bl	802a4dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802a7e6:	e7ac      	b.n	802a742 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a7e8:	f04f 0910 	mov.w	r9, #16
 802a7ec:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 802a7f0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 802a7f4:	4d37      	ldr	r5, [pc, #220]	@ (802a8d4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b0>)
 802a7f6:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 802a7fa:	440a      	add	r2, r1
 802a7fc:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 802a800:	6828      	ldr	r0, [r5, #0]
 802a802:	440b      	add	r3, r1
 802a804:	f8ad 2018 	strh.w	r2, [sp, #24]
 802a808:	f8ad 301a 	strh.w	r3, [sp, #26]
 802a80c:	2800      	cmp	r0, #0
 802a80e:	d05b      	beq.n	802a8c8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a810:	f7f6 f9c2 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802a814:	6833      	ldr	r3, [r6, #0]
 802a816:	4630      	mov	r0, r6
 802a818:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 802a81a:	4798      	blx	r3
 802a81c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 802a820:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 802a824:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 802a828:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 802a82c:	f7e6 fa3c 	bl	8010ca8 <nema_set_clip>
 802a830:	2200      	movs	r2, #0
 802a832:	4623      	mov	r3, r4
 802a834:	4611      	mov	r1, r2
 802a836:	4610      	mov	r0, r2
 802a838:	f7e6 fb14 	bl	8010e64 <nema_rgba>
 802a83c:	f7f3 ff96 	bl	801e76c <nema_set_const_color>
 802a840:	2cff      	cmp	r4, #255	@ 0xff
 802a842:	d02a      	beq.n	802a89a <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x176>
 802a844:	f04f 33ff 	mov.w	r3, #4294967295
 802a848:	2201      	movs	r2, #1
 802a84a:	2100      	movs	r1, #0
 802a84c:	4822      	ldr	r0, [pc, #136]	@ (802a8d8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b4>)
 802a84e:	f7f3 fbc7 	bl	801dfe0 <nema_set_blend>
 802a852:	2100      	movs	r1, #0
 802a854:	f04f 34ff 	mov.w	r4, #4294967295
 802a858:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802a85c:	464b      	mov	r3, r9
 802a85e:	4640      	mov	r0, r8
 802a860:	9101      	str	r1, [sp, #4]
 802a862:	9400      	str	r4, [sp, #0]
 802a864:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802a868:	f7e6 fb04 	bl	8010e74 <nema_bind_src_tex>
 802a86c:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802a870:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802a874:	f7e6 fd58 	bl	8011328 <nema_blit>
 802a878:	6828      	ldr	r0, [r5, #0]
 802a87a:	b328      	cbz	r0, 802a8c8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a87c:	f7f6 f9ac 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802a880:	e75f      	b.n	802a742 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a882:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802a886:	e7b1      	b.n	802a7ec <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a888:	f04f 0904 	mov.w	r9, #4
 802a88c:	e7ae      	b.n	802a7ec <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a88e:	4638      	mov	r0, r7
 802a890:	f7e5 fc5a 	bl	8010148 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a894:	f890 9000 	ldrb.w	r9, [r0]
 802a898:	e7a8      	b.n	802a7ec <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a89a:	4638      	mov	r0, r7
 802a89c:	f7e5 fca8 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a8a0:	b120      	cbz	r0, 802a8ac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x188>
 802a8a2:	4638      	mov	r0, r7
 802a8a4:	f7e5 fca4 	bl	80101f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a8a8:	2801      	cmp	r0, #1
 802a8aa:	d1cb      	bne.n	802a844 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x120>
 802a8ac:	2201      	movs	r2, #1
 802a8ae:	f04f 33ff 	mov.w	r3, #4294967295
 802a8b2:	4610      	mov	r0, r2
 802a8b4:	2100      	movs	r1, #0
 802a8b6:	f7f3 fb93 	bl	801dfe0 <nema_set_blend>
 802a8ba:	e7ca      	b.n	802a852 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 802a8bc:	4b07      	ldr	r3, [pc, #28]	@ (802a8dc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>)
 802a8be:	4a08      	ldr	r2, [pc, #32]	@ (802a8e0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1bc>)
 802a8c0:	2175      	movs	r1, #117	@ 0x75
 802a8c2:	4808      	ldr	r0, [pc, #32]	@ (802a8e4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c0>)
 802a8c4:	f007 fdf8 	bl	80324b8 <__assert_func>
 802a8c8:	4b07      	ldr	r3, [pc, #28]	@ (802a8e8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c4>)
 802a8ca:	4a08      	ldr	r2, [pc, #32]	@ (802a8ec <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c8>)
 802a8cc:	217c      	movs	r1, #124	@ 0x7c
 802a8ce:	4808      	ldr	r0, [pc, #32]	@ (802a8f0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1cc>)
 802a8d0:	f007 fdf2 	bl	80324b8 <__assert_func>
 802a8d4:	20083364 	.word	0x20083364
 802a8d8:	08000504 	.word	0x08000504
 802a8dc:	080360cc 	.word	0x080360cc
 802a8e0:	08036b74 	.word	0x08036b74
 802a8e4:	08036278 	.word	0x08036278
 802a8e8:	080361d4 	.word	0x080361d4
 802a8ec:	08036a40 	.word	0x08036a40
 802a8f0:	080361fc 	.word	0x080361fc

0802a8f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802a8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a8f8:	b089      	sub	sp, #36	@ 0x24
 802a8fa:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 802a8fc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a8fe:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 802a902:	9104      	str	r1, [sp, #16]
 802a904:	8809      	ldrh	r1, [r1, #0]
 802a906:	fb07 6c04 	mla	ip, r7, r4, r6
 802a90a:	10c8      	asrs	r0, r1, #3
 802a90c:	120d      	asrs	r5, r1, #8
 802a90e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802a912:	f005 0af8 	and.w	sl, r5, #248	@ 0xf8
 802a916:	9002      	str	r0, [sp, #8]
 802a918:	00c9      	lsls	r1, r1, #3
 802a91a:	0200      	lsls	r0, r0, #8
 802a91c:	b2c9      	uxtb	r1, r1
 802a91e:	4690      	mov	r8, r2
 802a920:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 802a924:	469e      	mov	lr, r3
 802a926:	eb02 030c 	add.w	r3, r2, ip
 802a92a:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 802a92e:	4308      	orrs	r0, r1
 802a930:	2f00      	cmp	r7, #0
 802a932:	9103      	str	r1, [sp, #12]
 802a934:	9305      	str	r3, [sp, #20]
 802a936:	9007      	str	r0, [sp, #28]
 802a938:	f107 0501 	add.w	r5, r7, #1
 802a93c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 802a940:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 802a944:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802a948:	9200      	str	r2, [sp, #0]
 802a94a:	db02      	blt.n	802a952 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 802a94c:	42be      	cmp	r6, r7
 802a94e:	f300 80a3 	bgt.w	802aa98 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1a4>
 802a952:	fa5f fb80 	uxtb.w	fp, r0
 802a956:	af07      	add	r7, sp, #28
 802a958:	465a      	mov	r2, fp
 802a95a:	46b8      	mov	r8, r7
 802a95c:	2d00      	cmp	r5, #0
 802a95e:	db01      	blt.n	802a964 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x70>
 802a960:	42ae      	cmp	r6, r5
 802a962:	dc79      	bgt.n	802aa58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x164>
 802a964:	f10d 0e1c 	add.w	lr, sp, #28
 802a968:	46f1      	mov	r9, lr
 802a96a:	b2c0      	uxtb	r0, r0
 802a96c:	9001      	str	r0, [sp, #4]
 802a96e:	2b0f      	cmp	r3, #15
 802a970:	f200 80ce 	bhi.w	802ab10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a974:	290f      	cmp	r1, #15
 802a976:	f200 80cb 	bhi.w	802ab10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a97a:	9c00      	ldr	r4, [sp, #0]
 802a97c:	b29b      	uxth	r3, r3
 802a97e:	43e4      	mvns	r4, r4
 802a980:	b289      	uxth	r1, r1
 802a982:	fb03 f501 	mul.w	r5, r3, r1
 802a986:	011b      	lsls	r3, r3, #4
 802a988:	1b5e      	subs	r6, r3, r5
 802a98a:	b2b6      	uxth	r6, r6
 802a98c:	f897 c002 	ldrb.w	ip, [r7, #2]
 802a990:	ebc5 1101 	rsb	r1, r5, r1, lsl #4
 802a994:	787f      	ldrb	r7, [r7, #1]
 802a996:	fb06 f202 	mul.w	r2, r6, r2
 802a99a:	b289      	uxth	r1, r1
 802a99c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802a9a0:	fb06 fc0c 	mul.w	ip, r6, ip
 802a9a4:	1a5b      	subs	r3, r3, r1
 802a9a6:	fb06 f607 	mul.w	r6, r6, r7
 802a9aa:	b29b      	uxth	r3, r3
 802a9ac:	f898 7001 	ldrb.w	r7, [r8, #1]
 802a9b0:	fb03 220b 	mla	r2, r3, fp, r2
 802a9b4:	f898 b002 	ldrb.w	fp, [r8, #2]
 802a9b8:	fb03 6607 	mla	r6, r3, r7, r6
 802a9bc:	fb03 cc0b 	mla	ip, r3, fp, ip
 802a9c0:	f899 8002 	ldrb.w	r8, [r9, #2]
 802a9c4:	f899 7001 	ldrb.w	r7, [r9, #1]
 802a9c8:	9b01      	ldr	r3, [sp, #4]
 802a9ca:	fb01 cc08 	mla	ip, r1, r8, ip
 802a9ce:	fb01 2203 	mla	r2, r1, r3, r2
 802a9d2:	fb01 6607 	mla	r6, r1, r7, r6
 802a9d6:	f89e 8002 	ldrb.w	r8, [lr, #2]
 802a9da:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802a9de:	9b03      	ldr	r3, [sp, #12]
 802a9e0:	9902      	ldr	r1, [sp, #8]
 802a9e2:	fb05 2200 	mla	r2, r5, r0, r2
 802a9e6:	b2e4      	uxtb	r4, r4
 802a9e8:	fb05 cc08 	mla	ip, r5, r8, ip
 802a9ec:	fb05 6607 	mla	r6, r5, r7, r6
 802a9f0:	fb13 f004 	smulbb	r0, r3, r4
 802a9f4:	fb1a f304 	smulbb	r3, sl, r4
 802a9f8:	fb11 f404 	smulbb	r4, r1, r4
 802a9fc:	f8bd e000 	ldrh.w	lr, [sp]
 802aa00:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802aa04:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802aa08:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802aa0c:	fb02 020e 	mla	r2, r2, lr, r0
 802aa10:	fb0c 330e 	mla	r3, ip, lr, r3
 802aa14:	fb06 4e0e 	mla	lr, r6, lr, r4
 802aa18:	fa1f fc83 	uxth.w	ip, r3
 802aa1c:	b292      	uxth	r2, r2
 802aa1e:	fa1f fe8e 	uxth.w	lr, lr
 802aa22:	f10c 0301 	add.w	r3, ip, #1
 802aa26:	1c50      	adds	r0, r2, #1
 802aa28:	f10e 0101 	add.w	r1, lr, #1
 802aa2c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802aa30:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802aa34:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802aa38:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802aa3c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802aa40:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802aa44:	4313      	orrs	r3, r2
 802aa46:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802aa4a:	9a04      	ldr	r2, [sp, #16]
 802aa4c:	ea43 030e 	orr.w	r3, r3, lr
 802aa50:	8013      	strh	r3, [r2, #0]
 802aa52:	b009      	add	sp, #36	@ 0x24
 802aa54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aa58:	2900      	cmp	r1, #0
 802aa5a:	d036      	beq.n	802aaca <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d6>
 802aa5c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aa5e:	2d00      	cmp	r5, #0
 802aa60:	db45      	blt.n	802aaee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aa62:	42ac      	cmp	r4, r5
 802aa64:	dd43      	ble.n	802aaee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aa66:	9d05      	ldr	r5, [sp, #20]
 802aa68:	f815 9004 	ldrb.w	r9, [r5, r4]
 802aa6c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802aa70:	44f1      	add	r9, lr
 802aa72:	f899 5000 	ldrb.w	r5, [r9]
 802aa76:	9501      	str	r5, [sp, #4]
 802aa78:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aa7a:	3501      	adds	r5, #1
 802aa7c:	d433      	bmi.n	802aae6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aa7e:	42ac      	cmp	r4, r5
 802aa80:	dd31      	ble.n	802aae6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aa82:	2b00      	cmp	r3, #0
 802aa84:	d040      	beq.n	802ab08 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x214>
 802aa86:	9805      	ldr	r0, [sp, #20]
 802aa88:	4420      	add	r0, r4
 802aa8a:	7840      	ldrb	r0, [r0, #1]
 802aa8c:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 802aa90:	f81e 0004 	ldrb.w	r0, [lr, r4]
 802aa94:	44a6      	add	lr, r4
 802aa96:	e76a      	b.n	802a96e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802aa98:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802aa9a:	2a00      	cmp	r2, #0
 802aa9c:	db01      	blt.n	802aaa2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ae>
 802aa9e:	4294      	cmp	r4, r2
 802aaa0:	dc1b      	bgt.n	802aada <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1e6>
 802aaa2:	f10d 081c 	add.w	r8, sp, #28
 802aaa6:	3201      	adds	r2, #1
 802aaa8:	f898 b000 	ldrb.w	fp, [r8]
 802aaac:	d40a      	bmi.n	802aac4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aaae:	4294      	cmp	r4, r2
 802aab0:	dd08      	ble.n	802aac4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aab2:	b1fb      	cbz	r3, 802aaf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x200>
 802aab4:	9a05      	ldr	r2, [sp, #20]
 802aab6:	7857      	ldrb	r7, [r2, #1]
 802aab8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802aabc:	f81e 2007 	ldrb.w	r2, [lr, r7]
 802aac0:	4477      	add	r7, lr
 802aac2:	e74b      	b.n	802a95c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802aac4:	b2c2      	uxtb	r2, r0
 802aac6:	af07      	add	r7, sp, #28
 802aac8:	e748      	b.n	802a95c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802aaca:	b2c0      	uxtb	r0, r0
 802aacc:	2b0f      	cmp	r3, #15
 802aace:	9001      	str	r0, [sp, #4]
 802aad0:	d81e      	bhi.n	802ab10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802aad2:	f10d 0e1c 	add.w	lr, sp, #28
 802aad6:	46f1      	mov	r9, lr
 802aad8:	e74f      	b.n	802a97a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x86>
 802aada:	f818 800c 	ldrb.w	r8, [r8, ip]
 802aade:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802aae2:	44f0      	add	r8, lr
 802aae4:	e7df      	b.n	802aaa6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b2>
 802aae6:	b2c0      	uxtb	r0, r0
 802aae8:	f10d 0e1c 	add.w	lr, sp, #28
 802aaec:	e73f      	b.n	802a96e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802aaee:	f10d 091c 	add.w	r9, sp, #28
 802aaf2:	e7be      	b.n	802aa72 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x17e>
 802aaf4:	2d00      	cmp	r5, #0
 802aaf6:	b2c2      	uxtb	r2, r0
 802aaf8:	af07      	add	r7, sp, #28
 802aafa:	f6bf af31 	bge.w	802a960 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 802aafe:	46be      	mov	lr, r7
 802ab00:	46b9      	mov	r9, r7
 802ab02:	4610      	mov	r0, r2
 802ab04:	9201      	str	r2, [sp, #4]
 802ab06:	e735      	b.n	802a974 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802ab08:	b2c0      	uxtb	r0, r0
 802ab0a:	f10d 0e1c 	add.w	lr, sp, #28
 802ab0e:	e731      	b.n	802a974 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802ab10:	4b03      	ldr	r3, [pc, #12]	@ (802ab20 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x22c>)
 802ab12:	4a04      	ldr	r2, [pc, #16]	@ (802ab24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x230>)
 802ab14:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ab18:	4803      	ldr	r0, [pc, #12]	@ (802ab28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x234>)
 802ab1a:	f007 fccd 	bl	80324b8 <__assert_func>
 802ab1e:	bf00      	nop
 802ab20:	0803666c 	.word	0x0803666c
 802ab24:	08036ce8 	.word	0x08036ce8
 802ab28:	080367f4 	.word	0x080367f4

0802ab2c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ab2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab30:	ed2d 8b08 	vpush	{d8-d11}
 802ab34:	b095      	sub	sp, #84	@ 0x54
 802ab36:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ab3a:	e9dd 512b 	ldrd	r5, r1, [sp, #172]	@ 0xac
 802ab3e:	e9dd b827 	ldrd	fp, r8, [sp, #156]	@ 0x9c
 802ab42:	686c      	ldr	r4, [r5, #4]
 802ab44:	461a      	mov	r2, r3
 802ab46:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802ab48:	f89d 60bc 	ldrb.w	r6, [sp, #188]	@ 0xbc
 802ab4c:	fb04 1303 	mla	r3, r4, r3, r1
 802ab50:	682c      	ldr	r4, [r5, #0]
 802ab52:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 802ab56:	43f0      	mvns	r0, r6
 802ab58:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802ab5c:	eeb0 aa40 	vmov.f32	s20, s0
 802ab60:	eef0 9a60 	vmov.f32	s19, s1
 802ab64:	eeb0 9a41 	vmov.f32	s18, s2
 802ab68:	eef0 8a62 	vmov.f32	s17, s5
 802ab6c:	eeb0 8a43 	vmov.f32	s16, s6
 802ab70:	eef0 ba44 	vmov.f32	s23, s8
 802ab74:	eeb0 ba64 	vmov.f32	s22, s9
 802ab78:	eef0 aa45 	vmov.f32	s21, s10
 802ab7c:	469a      	mov	sl, r3
 802ab7e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802ab80:	9d2e      	ldr	r5, [sp, #184]	@ 0xb8
 802ab82:	6849      	ldr	r1, [r1, #4]
 802ab84:	682d      	ldr	r5, [r5, #0]
 802ab86:	3104      	adds	r1, #4
 802ab88:	b2c0      	uxtb	r0, r0
 802ab8a:	9108      	str	r1, [sp, #32]
 802ab8c:	b2b1      	uxth	r1, r6
 802ab8e:	950b      	str	r5, [sp, #44]	@ 0x2c
 802ab90:	900c      	str	r0, [sp, #48]	@ 0x30
 802ab92:	910d      	str	r1, [sp, #52]	@ 0x34
 802ab94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ab96:	2b00      	cmp	r3, #0
 802ab98:	dc02      	bgt.n	802aba0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802ab9a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802ab9c:	2b00      	cmp	r3, #0
 802ab9e:	dd65      	ble.n	802ac6c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802aba0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802aba2:	2a00      	cmp	r2, #0
 802aba4:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802aba8:	b225      	sxth	r5, r4
 802abaa:	fa0f f78e 	sxth.w	r7, lr
 802abae:	f340 8233 	ble.w	802b018 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 802abb2:	1e6e      	subs	r6, r5, #1
 802abb4:	f107 3cff 	add.w	ip, r7, #4294967295
 802abb8:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802abbc:	e9dd e929 	ldrd	lr, r9, [sp, #164]	@ 0xa4
 802abc0:	ea5f 432b 	movs.w	r3, fp, asr #16
 802abc4:	ea4f 4128 	mov.w	r1, r8, asr #16
 802abc8:	d405      	bmi.n	802abd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802abca:	42b3      	cmp	r3, r6
 802abcc:	da03      	bge.n	802abd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802abce:	2900      	cmp	r1, #0
 802abd0:	db01      	blt.n	802abd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802abd2:	4561      	cmp	r1, ip
 802abd4:	db4f      	blt.n	802ac76 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802abd6:	1c58      	adds	r0, r3, #1
 802abd8:	d406      	bmi.n	802abe8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802abda:	42a8      	cmp	r0, r5
 802abdc:	dc04      	bgt.n	802abe8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802abde:	1c48      	adds	r0, r1, #1
 802abe0:	d402      	bmi.n	802abe8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802abe2:	42b8      	cmp	r0, r7
 802abe4:	f340 817e 	ble.w	802aee4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 802abe8:	3a01      	subs	r2, #1
 802abea:	44f3      	add	fp, lr
 802abec:	44c8      	add	r8, r9
 802abee:	f10a 0a02 	add.w	sl, sl, #2
 802abf2:	d1e5      	bne.n	802abc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802abf4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802abf6:	2b00      	cmp	r3, #0
 802abf8:	dd38      	ble.n	802ac6c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802abfa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802abfe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ac02:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ac06:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ac0a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ac0e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ac12:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ac16:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ac1a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ac1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ac22:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac26:	ee16 2a90 	vmov	r2, s13
 802ac2a:	3b01      	subs	r3, #1
 802ac2c:	930e      	str	r3, [sp, #56]	@ 0x38
 802ac2e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac30:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac34:	ee17 2a10 	vmov	r2, s14
 802ac38:	eeb0 7a48 	vmov.f32	s14, s16
 802ac3c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac40:	ee17 8a10 	vmov	r8, s14
 802ac44:	eeb0 7a68 	vmov.f32	s14, s17
 802ac48:	9329      	str	r3, [sp, #164]	@ 0xa4
 802ac4a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac4c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac50:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac54:	932a      	str	r3, [sp, #168]	@ 0xa8
 802ac56:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac58:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ac5a:	ee17 ba10 	vmov	fp, s14
 802ac5e:	eeb0 8a67 	vmov.f32	s16, s15
 802ac62:	eef0 8a46 	vmov.f32	s17, s12
 802ac66:	bf18      	it	ne
 802ac68:	461a      	movne	r2, r3
 802ac6a:	e793      	b.n	802ab94 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802ac6c:	b015      	add	sp, #84	@ 0x54
 802ac6e:	ecbd 8b08 	vpop	{d8-d11}
 802ac72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ac76:	46d4      	mov	ip, sl
 802ac78:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802ac7c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802ac7e:	1e51      	subs	r1, r2, #1
 802ac80:	fb00 b301 	mla	r3, r0, r1, fp
 802ac84:	141b      	asrs	r3, r3, #16
 802ac86:	910a      	str	r1, [sp, #40]	@ 0x28
 802ac88:	f100 80cc 	bmi.w	802ae24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac8c:	42b3      	cmp	r3, r6
 802ac8e:	f280 80c9 	bge.w	802ae24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac92:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ac94:	fb03 8301 	mla	r3, r3, r1, r8
 802ac98:	141b      	asrs	r3, r3, #16
 802ac9a:	f100 80c3 	bmi.w	802ae24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac9e:	3f01      	subs	r7, #1
 802aca0:	42bb      	cmp	r3, r7
 802aca2:	f280 80bf 	bge.w	802ae24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802aca6:	2a00      	cmp	r2, #0
 802aca8:	dda4      	ble.n	802abf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802acaa:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 802acae:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 802acb2:	e08e      	b.n	802add2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802acb4:	f891 c001 	ldrb.w	ip, [r1, #1]
 802acb8:	194c      	adds	r4, r1, r5
 802acba:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802acbe:	44bc      	add	ip, r7
 802acc0:	2a00      	cmp	r2, #0
 802acc2:	f000 80a6 	beq.w	802ae12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 802acc6:	5d48      	ldrb	r0, [r1, r5]
 802acc8:	7865      	ldrb	r5, [r4, #1]
 802acca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802acce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802acd2:	4438      	add	r0, r7
 802acd4:	443d      	add	r5, r7
 802acd6:	b29b      	uxth	r3, r3
 802acd8:	b292      	uxth	r2, r2
 802acda:	fb03 f402 	mul.w	r4, r3, r2
 802acde:	011b      	lsls	r3, r3, #4
 802ace0:	1b19      	subs	r1, r3, r4
 802ace2:	f89c 9000 	ldrb.w	r9, [ip]
 802ace6:	f89c e002 	ldrb.w	lr, [ip, #2]
 802acea:	b289      	uxth	r1, r1
 802acec:	f89c c001 	ldrb.w	ip, [ip, #1]
 802acf0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802acf4:	fb01 f909 	mul.w	r9, r1, r9
 802acf8:	b292      	uxth	r2, r2
 802acfa:	fb01 fe0e 	mul.w	lr, r1, lr
 802acfe:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802ad02:	fb01 f10c 	mul.w	r1, r1, ip
 802ad06:	f817 a00a 	ldrb.w	sl, [r7, sl]
 802ad0a:	1a9b      	subs	r3, r3, r2
 802ad0c:	f896 c002 	ldrb.w	ip, [r6, #2]
 802ad10:	b29b      	uxth	r3, r3
 802ad12:	7876      	ldrb	r6, [r6, #1]
 802ad14:	fb03 990a 	mla	r9, r3, sl, r9
 802ad18:	fb03 ec0c 	mla	ip, r3, ip, lr
 802ad1c:	fb03 1306 	mla	r3, r3, r6, r1
 802ad20:	7801      	ldrb	r1, [r0, #0]
 802ad22:	f890 e002 	ldrb.w	lr, [r0, #2]
 802ad26:	fb02 9901 	mla	r9, r2, r1, r9
 802ad2a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802ad2c:	fb02 ce0e 	mla	lr, r2, lr, ip
 802ad30:	7829      	ldrb	r1, [r5, #0]
 802ad32:	f8b7 c000 	ldrh.w	ip, [r7]
 802ad36:	7840      	ldrb	r0, [r0, #1]
 802ad38:	78ae      	ldrb	r6, [r5, #2]
 802ad3a:	fb02 3200 	mla	r2, r2, r0, r3
 802ad3e:	fb04 9901 	mla	r9, r4, r1, r9
 802ad42:	7868      	ldrb	r0, [r5, #1]
 802ad44:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ad46:	ea4f 252c 	mov.w	r5, ip, asr #8
 802ad4a:	fb04 ee06 	mla	lr, r4, r6, lr
 802ad4e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802ad52:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802ad56:	fb15 f501 	smulbb	r5, r5, r1
 802ad5a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802ad5e:	b2db      	uxtb	r3, r3
 802ad60:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802ad64:	fb13 f301 	smulbb	r3, r3, r1
 802ad68:	fb1c fc01 	smulbb	ip, ip, r1
 802ad6c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ad6e:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802ad72:	fb04 2200 	mla	r2, r4, r0, r2
 802ad76:	fb0e 5501 	mla	r5, lr, r1, r5
 802ad7a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802ad7e:	b2ad      	uxth	r5, r5
 802ad80:	fb02 cc01 	mla	ip, r2, r1, ip
 802ad84:	1c6a      	adds	r2, r5, #1
 802ad86:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802ad8a:	463a      	mov	r2, r7
 802ad8c:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802ad90:	fb09 3301 	mla	r3, r9, r1, r3
 802ad94:	fa1f f18c 	uxth.w	r1, ip
 802ad98:	b29b      	uxth	r3, r3
 802ad9a:	1c5c      	adds	r4, r3, #1
 802ad9c:	1c48      	adds	r0, r1, #1
 802ad9e:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802ada2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802ada6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802adaa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802adae:	0949      	lsrs	r1, r1, #5
 802adb0:	432b      	orrs	r3, r5
 802adb2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802adb6:	430b      	orrs	r3, r1
 802adb8:	f822 3b02 	strh.w	r3, [r2], #2
 802adbc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802adbe:	9209      	str	r2, [sp, #36]	@ 0x24
 802adc0:	449b      	add	fp, r3
 802adc2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802adc4:	4498      	add	r8, r3
 802adc6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802adc8:	429a      	cmp	r2, r3
 802adca:	d029      	beq.n	802ae20 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802adcc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802adce:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802add2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802add6:	ea4f 4128 	mov.w	r1, r8, asr #16
 802adda:	fb05 3101 	mla	r1, r5, r1, r3
 802adde:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802ade0:	9f08      	ldr	r7, [sp, #32]
 802ade2:	f812 a001 	ldrb.w	sl, [r2, r1]
 802ade6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802adea:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802adee:	4411      	add	r1, r2
 802adf0:	eb07 060a 	add.w	r6, r7, sl
 802adf4:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802adf8:	2b00      	cmp	r3, #0
 802adfa:	f47f af5b 	bne.w	802acb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802adfe:	b15a      	cbz	r2, 802ae18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>
 802ae00:	5d48      	ldrb	r0, [r1, r5]
 802ae02:	9908      	ldr	r1, [sp, #32]
 802ae04:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ae08:	4635      	mov	r5, r6
 802ae0a:	4408      	add	r0, r1
 802ae0c:	46b4      	mov	ip, r6
 802ae0e:	460f      	mov	r7, r1
 802ae10:	e761      	b.n	802acd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae12:	4635      	mov	r5, r6
 802ae14:	4630      	mov	r0, r6
 802ae16:	e75e      	b.n	802acd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae18:	4635      	mov	r5, r6
 802ae1a:	4630      	mov	r0, r6
 802ae1c:	46b4      	mov	ip, r6
 802ae1e:	e75a      	b.n	802acd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae20:	469a      	mov	sl, r3
 802ae22:	e6e7      	b.n	802abf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ae24:	2a00      	cmp	r2, #0
 802ae26:	f77f aee5 	ble.w	802abf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ae2a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802ae2c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ae30:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae34:	4675      	mov	r5, lr
 802ae36:	46d1      	mov	r9, sl
 802ae38:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 802ae3c:	f8dd a0b8 	ldr.w	sl, [sp, #184]	@ 0xb8
 802ae40:	9609      	str	r6, [sp, #36]	@ 0x24
 802ae42:	2b00      	cmp	r3, #0
 802ae44:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802ae48:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802ae4c:	db27      	blt.n	802ae9e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae4e:	1e60      	subs	r0, r4, #1
 802ae50:	4283      	cmp	r3, r0
 802ae52:	da24      	bge.n	802ae9e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae54:	2900      	cmp	r1, #0
 802ae56:	db22      	blt.n	802ae9e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae58:	1e68      	subs	r0, r5, #1
 802ae5a:	4281      	cmp	r1, r0
 802ae5c:	da1f      	bge.n	802ae9e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae5e:	b220      	sxth	r0, r4
 802ae60:	fb01 3300 	mla	r3, r1, r0, r3
 802ae64:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802ae66:	5ccd      	ldrb	r5, [r1, r3]
 802ae68:	440b      	add	r3, r1
 802ae6a:	9908      	ldr	r1, [sp, #32]
 802ae6c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802ae70:	460e      	mov	r6, r1
 802ae72:	eb01 0c05 	add.w	ip, r1, r5
 802ae76:	2f00      	cmp	r7, #0
 802ae78:	d04b      	beq.n	802af12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802ae7a:	785c      	ldrb	r4, [r3, #1]
 802ae7c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802ae80:	440c      	add	r4, r1
 802ae82:	2a00      	cmp	r2, #0
 802ae84:	f000 80c4 	beq.w	802b010 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802ae88:	1819      	adds	r1, r3, r0
 802ae8a:	7849      	ldrb	r1, [r1, #1]
 802ae8c:	5c18      	ldrb	r0, [r3, r0]
 802ae8e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ae92:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ae96:	1873      	adds	r3, r6, r1
 802ae98:	9311      	str	r3, [sp, #68]	@ 0x44
 802ae9a:	4430      	add	r0, r6
 802ae9c:	e03f      	b.n	802af1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802ae9e:	1c58      	adds	r0, r3, #1
 802aea0:	d405      	bmi.n	802aeae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aea2:	42a0      	cmp	r0, r4
 802aea4:	dc03      	bgt.n	802aeae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aea6:	1c48      	adds	r0, r1, #1
 802aea8:	d401      	bmi.n	802aeae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aeaa:	42a8      	cmp	r0, r5
 802aeac:	dd20      	ble.n	802aef0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802aeae:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802aeb0:	f109 0902 	add.w	r9, r9, #2
 802aeb4:	449b      	add	fp, r3
 802aeb6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802aeb8:	4498      	add	r8, r3
 802aeba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802aebc:	2b00      	cmp	r3, #0
 802aebe:	dd08      	ble.n	802aed2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802aec0:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 802aec4:	3b01      	subs	r3, #1
 802aec6:	9309      	str	r3, [sp, #36]	@ 0x24
 802aec8:	ea4f 4128 	mov.w	r1, r8, asr #16
 802aecc:	ea4f 432b 	mov.w	r3, fp, asr #16
 802aed0:	e7b7      	b.n	802ae42 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802aed2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802aed4:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 802aed8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802aedc:	3301      	adds	r3, #1
 802aede:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 802aee2:	e687      	b.n	802abf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802aee4:	3a01      	subs	r2, #1
 802aee6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802aeea:	920a      	str	r2, [sp, #40]	@ 0x28
 802aeec:	4616      	mov	r6, r2
 802aeee:	e7a1      	b.n	802ae34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 802aef0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802aef2:	b22d      	sxth	r5, r5
 802aef4:	b224      	sxth	r4, r4
 802aef6:	e9cd 2005 	strd	r2, r0, [sp, #20]
 802aefa:	e9cd 1703 	strd	r1, r7, [sp, #12]
 802aefe:	9302      	str	r3, [sp, #8]
 802af00:	e9cd 4500 	strd	r4, r5, [sp]
 802af04:	9b08      	ldr	r3, [sp, #32]
 802af06:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802af08:	4649      	mov	r1, r9
 802af0a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802af0c:	f7ff fcf2 	bl	802a8f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802af10:	e7cd      	b.n	802aeae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802af12:	2a00      	cmp	r2, #0
 802af14:	d173      	bne.n	802affe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d2>
 802af16:	4660      	mov	r0, ip
 802af18:	4664      	mov	r4, ip
 802af1a:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802af1e:	b2bb      	uxth	r3, r7
 802af20:	b292      	uxth	r2, r2
 802af22:	fb03 f702 	mul.w	r7, r3, r2
 802af26:	011b      	lsls	r3, r3, #4
 802af28:	1bd9      	subs	r1, r3, r7
 802af2a:	7826      	ldrb	r6, [r4, #0]
 802af2c:	f894 e002 	ldrb.w	lr, [r4, #2]
 802af30:	7864      	ldrb	r4, [r4, #1]
 802af32:	b289      	uxth	r1, r1
 802af34:	fb01 f606 	mul.w	r6, r1, r6
 802af38:	fb01 fe0e 	mul.w	lr, r1, lr
 802af3c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802af40:	fb01 f104 	mul.w	r1, r1, r4
 802af44:	9c08      	ldr	r4, [sp, #32]
 802af46:	b292      	uxth	r2, r2
 802af48:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802af4c:	5d65      	ldrb	r5, [r4, r5]
 802af4e:	1a9b      	subs	r3, r3, r2
 802af50:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802af54:	f89c c001 	ldrb.w	ip, [ip, #1]
 802af58:	b29b      	uxth	r3, r3
 802af5a:	fb03 e404 	mla	r4, r3, r4, lr
 802af5e:	fb03 6505 	mla	r5, r3, r5, r6
 802af62:	fb03 130c 	mla	r3, r3, ip, r1
 802af66:	f890 c001 	ldrb.w	ip, [r0, #1]
 802af6a:	7801      	ldrb	r1, [r0, #0]
 802af6c:	f890 e002 	ldrb.w	lr, [r0, #2]
 802af70:	fb02 3c0c 	mla	ip, r2, ip, r3
 802af74:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802af76:	fb02 5601 	mla	r6, r2, r1, r5
 802af7a:	fb02 4e0e 	mla	lr, r2, lr, r4
 802af7e:	7899      	ldrb	r1, [r3, #2]
 802af80:	781a      	ldrb	r2, [r3, #0]
 802af82:	785b      	ldrb	r3, [r3, #1]
 802af84:	f8b9 0000 	ldrh.w	r0, [r9]
 802af88:	fb07 c303 	mla	r3, r7, r3, ip
 802af8c:	fb07 6202 	mla	r2, r7, r2, r6
 802af90:	00c5      	lsls	r5, r0, #3
 802af92:	1204      	asrs	r4, r0, #8
 802af94:	fb07 e101 	mla	r1, r7, r1, lr
 802af98:	10c0      	asrs	r0, r0, #3
 802af9a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 802af9c:	b2ed      	uxtb	r5, r5
 802af9e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802afa2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802afa6:	fb15 f507 	smulbb	r5, r5, r7
 802afaa:	fb14 f407 	smulbb	r4, r4, r7
 802afae:	fb10 f007 	smulbb	r0, r0, r7
 802afb2:	f3c3 2707 	ubfx	r7, r3, #8, #8
 802afb6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802afb8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802afbc:	461e      	mov	r6, r3
 802afbe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802afc2:	fb02 5203 	mla	r2, r2, r3, r5
 802afc6:	fb07 0006 	mla	r0, r7, r6, r0
 802afca:	fb01 4303 	mla	r3, r1, r3, r4
 802afce:	b281      	uxth	r1, r0
 802afd0:	b294      	uxth	r4, r2
 802afd2:	b29b      	uxth	r3, r3
 802afd4:	1c4a      	adds	r2, r1, #1
 802afd6:	1c5d      	adds	r5, r3, #1
 802afd8:	1c60      	adds	r0, r4, #1
 802afda:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802afde:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802afe2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802afe6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802afea:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 802afee:	0952      	lsrs	r2, r2, #5
 802aff0:	430b      	orrs	r3, r1
 802aff2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802aff6:	4313      	orrs	r3, r2
 802aff8:	f8a9 3000 	strh.w	r3, [r9]
 802affc:	e757      	b.n	802aeae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802affe:	5c18      	ldrb	r0, [r3, r0]
 802b000:	9b08      	ldr	r3, [sp, #32]
 802b002:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b006:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b00a:	4418      	add	r0, r3
 802b00c:	4664      	mov	r4, ip
 802b00e:	e786      	b.n	802af1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b010:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b014:	4660      	mov	r0, ip
 802b016:	e782      	b.n	802af1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b018:	f43f adec 	beq.w	802abf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b01c:	1e6e      	subs	r6, r5, #1
 802b01e:	46d4      	mov	ip, sl
 802b020:	e62c      	b.n	802ac7c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 802b022:	bf00      	nop

0802b024 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802b024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b028:	4692      	mov	sl, r2
 802b02a:	b083      	sub	sp, #12
 802b02c:	880a      	ldrh	r2, [r1, #0]
 802b02e:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 802b032:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 802b036:	0215      	lsls	r5, r2, #8
 802b038:	0150      	lsls	r0, r2, #5
 802b03a:	fb04 7e0c 	mla	lr, r4, ip, r7
 802b03e:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 802b042:	f405 0578 	and.w	r5, r5, #16252928	@ 0xf80000
 802b046:	00d2      	lsls	r2, r2, #3
 802b048:	4305      	orrs	r5, r0
 802b04a:	b2d2      	uxtb	r2, r2
 802b04c:	4315      	orrs	r5, r2
 802b04e:	2c00      	cmp	r4, #0
 802b050:	9501      	str	r5, [sp, #4]
 802b052:	eb0a 020e 	add.w	r2, sl, lr
 802b056:	f104 0801 	add.w	r8, r4, #1
 802b05a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802b05e:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 802b062:	f89d 0044 	ldrb.w	r0, [sp, #68]	@ 0x44
 802b066:	db01      	blt.n	802b06c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 802b068:	45a1      	cmp	r9, r4
 802b06a:	dc71      	bgt.n	802b150 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x12c>
 802b06c:	fa5f fa85 	uxtb.w	sl, r5
 802b070:	f10d 0b04 	add.w	fp, sp, #4
 802b074:	4654      	mov	r4, sl
 802b076:	46de      	mov	lr, fp
 802b078:	f1b8 0f00 	cmp.w	r8, #0
 802b07c:	db01      	blt.n	802b082 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5e>
 802b07e:	45c1      	cmp	r9, r8
 802b080:	dc4c      	bgt.n	802b11c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xf8>
 802b082:	fa5f f985 	uxtb.w	r9, r5
 802b086:	ab01      	add	r3, sp, #4
 802b088:	464d      	mov	r5, r9
 802b08a:	4698      	mov	r8, r3
 802b08c:	2e0f      	cmp	r6, #15
 802b08e:	f200 809b 	bhi.w	802b1c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b092:	280f      	cmp	r0, #15
 802b094:	f200 8098 	bhi.w	802b1c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b098:	b2b2      	uxth	r2, r6
 802b09a:	b280      	uxth	r0, r0
 802b09c:	fb02 f700 	mul.w	r7, r2, r0
 802b0a0:	0112      	lsls	r2, r2, #4
 802b0a2:	f89b c002 	ldrb.w	ip, [fp, #2]
 802b0a6:	1bd6      	subs	r6, r2, r7
 802b0a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 802b0ac:	b2b6      	uxth	r6, r6
 802b0ae:	ebc7 1000 	rsb	r0, r7, r0, lsl #4
 802b0b2:	fb06 f404 	mul.w	r4, r6, r4
 802b0b6:	fb06 fc0c 	mul.w	ip, r6, ip
 802b0ba:	fb06 f60b 	mul.w	r6, r6, fp
 802b0be:	b280      	uxth	r0, r0
 802b0c0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802b0c4:	f89e b002 	ldrb.w	fp, [lr, #2]
 802b0c8:	1a12      	subs	r2, r2, r0
 802b0ca:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b0ce:	b292      	uxth	r2, r2
 802b0d0:	fb02 440a 	mla	r4, r2, sl, r4
 802b0d4:	fb02 660e 	mla	r6, r2, lr, r6
 802b0d8:	fb02 cc0b 	mla	ip, r2, fp, ip
 802b0dc:	f898 a002 	ldrb.w	sl, [r8, #2]
 802b0e0:	f898 8001 	ldrb.w	r8, [r8, #1]
 802b0e4:	fb00 4909 	mla	r9, r0, r9, r4
 802b0e8:	fb00 cc0a 	mla	ip, r0, sl, ip
 802b0ec:	fb00 6008 	mla	r0, r0, r8, r6
 802b0f0:	789e      	ldrb	r6, [r3, #2]
 802b0f2:	785b      	ldrb	r3, [r3, #1]
 802b0f4:	fb07 9905 	mla	r9, r7, r5, r9
 802b0f8:	fb07 c506 	mla	r5, r7, r6, ip
 802b0fc:	fb07 0703 	mla	r7, r7, r3, r0
 802b100:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 802b104:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802b108:	097f      	lsrs	r7, r7, #5
 802b10a:	ea45 0509 	orr.w	r5, r5, r9
 802b10e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802b112:	433d      	orrs	r5, r7
 802b114:	800d      	strh	r5, [r1, #0]
 802b116:	b003      	add	sp, #12
 802b118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b11c:	b388      	cbz	r0, 802b182 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x15e>
 802b11e:	2f00      	cmp	r7, #0
 802b120:	db40      	blt.n	802b1a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b122:	45bc      	cmp	ip, r7
 802b124:	dd3e      	ble.n	802b1a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b126:	f812 800c 	ldrb.w	r8, [r2, ip]
 802b12a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802b12e:	4498      	add	r8, r3
 802b130:	3701      	adds	r7, #1
 802b132:	f898 9000 	ldrb.w	r9, [r8]
 802b136:	d432      	bmi.n	802b19e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b138:	45bc      	cmp	ip, r7
 802b13a:	dd30      	ble.n	802b19e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b13c:	2e00      	cmp	r6, #0
 802b13e:	d040      	beq.n	802b1c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x19e>
 802b140:	4494      	add	ip, r2
 802b142:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802b146:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802b14a:	5c9d      	ldrb	r5, [r3, r2]
 802b14c:	4413      	add	r3, r2
 802b14e:	e79d      	b.n	802b08c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b150:	2f00      	cmp	r7, #0
 802b152:	db01      	blt.n	802b158 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 802b154:	45bc      	cmp	ip, r7
 802b156:	dc1c      	bgt.n	802b192 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16e>
 802b158:	f10d 0e04 	add.w	lr, sp, #4
 802b15c:	1c7c      	adds	r4, r7, #1
 802b15e:	f89e a000 	ldrb.w	sl, [lr]
 802b162:	d40a      	bmi.n	802b17a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b164:	45a4      	cmp	ip, r4
 802b166:	dd08      	ble.n	802b17a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b168:	b1fe      	cbz	r6, 802b1aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x186>
 802b16a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802b16e:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b172:	f813 400b 	ldrb.w	r4, [r3, fp]
 802b176:	449b      	add	fp, r3
 802b178:	e77e      	b.n	802b078 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b17a:	b2ec      	uxtb	r4, r5
 802b17c:	f10d 0b04 	add.w	fp, sp, #4
 802b180:	e77a      	b.n	802b078 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b182:	2e0f      	cmp	r6, #15
 802b184:	fa5f f985 	uxtb.w	r9, r5
 802b188:	d81e      	bhi.n	802b1c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b18a:	ab01      	add	r3, sp, #4
 802b18c:	4698      	mov	r8, r3
 802b18e:	464d      	mov	r5, r9
 802b190:	e782      	b.n	802b098 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x74>
 802b192:	f81a e00e 	ldrb.w	lr, [sl, lr]
 802b196:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802b19a:	449e      	add	lr, r3
 802b19c:	e7de      	b.n	802b15c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802b19e:	b2ed      	uxtb	r5, r5
 802b1a0:	ab01      	add	r3, sp, #4
 802b1a2:	e773      	b.n	802b08c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b1a4:	f10d 0804 	add.w	r8, sp, #4
 802b1a8:	e7c2      	b.n	802b130 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x10c>
 802b1aa:	f1b8 0f00 	cmp.w	r8, #0
 802b1ae:	b2ec      	uxtb	r4, r5
 802b1b0:	f10d 0b04 	add.w	fp, sp, #4
 802b1b4:	f6bf af63 	bge.w	802b07e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 802b1b8:	465b      	mov	r3, fp
 802b1ba:	46d8      	mov	r8, fp
 802b1bc:	4625      	mov	r5, r4
 802b1be:	46a1      	mov	r9, r4
 802b1c0:	e767      	b.n	802b092 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b1c2:	b2ed      	uxtb	r5, r5
 802b1c4:	ab01      	add	r3, sp, #4
 802b1c6:	e764      	b.n	802b092 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b1c8:	4b03      	ldr	r3, [pc, #12]	@ (802b1d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b4>)
 802b1ca:	4a04      	ldr	r2, [pc, #16]	@ (802b1dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b8>)
 802b1cc:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b1d0:	4803      	ldr	r0, [pc, #12]	@ (802b1e0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1bc>)
 802b1d2:	f007 f971 	bl	80324b8 <__assert_func>
 802b1d6:	bf00      	nop
 802b1d8:	0803666c 	.word	0x0803666c
 802b1dc:	08036ce8 	.word	0x08036ce8
 802b1e0:	080367f4 	.word	0x080367f4

0802b1e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b1e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b1e8:	ed2d 8b0a 	vpush	{d8-d12}
 802b1ec:	eeb0 aa40 	vmov.f32	s20, s0
 802b1f0:	eef0 9a60 	vmov.f32	s19, s1
 802b1f4:	eeb0 9a41 	vmov.f32	s18, s2
 802b1f8:	eef0 8a62 	vmov.f32	s17, s5
 802b1fc:	eeb0 8a43 	vmov.f32	s16, s6
 802b200:	eeb0 ca44 	vmov.f32	s24, s8
 802b204:	eef0 ba64 	vmov.f32	s23, s9
 802b208:	eeb0 ba45 	vmov.f32	s22, s10
 802b20c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802b210:	b093      	sub	sp, #76	@ 0x4c
 802b212:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802b216:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802b21a:	e9dd 9827 	ldrd	r9, r8, [sp, #156]	@ 0x9c
 802b21e:	9011      	str	r0, [sp, #68]	@ 0x44
 802b220:	461a      	mov	r2, r3
 802b222:	6860      	ldr	r0, [r4, #4]
 802b224:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802b226:	f8dd a0a4 	ldr.w	sl, [sp, #164]	@ 0xa4
 802b22a:	fb00 1303 	mla	r3, r0, r3, r1
 802b22e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802b230:	6820      	ldr	r0, [r4, #0]
 802b232:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802b234:	6849      	ldr	r1, [r1, #4]
 802b236:	6824      	ldr	r4, [r4, #0]
 802b238:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 802b23c:	1d0b      	adds	r3, r1, #4
 802b23e:	9409      	str	r4, [sp, #36]	@ 0x24
 802b240:	930c      	str	r3, [sp, #48]	@ 0x30
 802b242:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b244:	2b00      	cmp	r3, #0
 802b246:	dc02      	bgt.n	802b24e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802b248:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802b24a:	2b00      	cmp	r3, #0
 802b24c:	dd61      	ble.n	802b312 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b24e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b250:	2a00      	cmp	r2, #0
 802b252:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802b256:	b225      	sxth	r5, r4
 802b258:	fa0f f78e 	sxth.w	r7, lr
 802b25c:	f340 81d9 	ble.w	802b612 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802b260:	f8cd e01c 	str.w	lr, [sp, #28]
 802b264:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802b268:	1e6e      	subs	r6, r5, #1
 802b26a:	f107 3cff 	add.w	ip, r7, #4294967295
 802b26e:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b272:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b276:	d405      	bmi.n	802b284 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b278:	42b3      	cmp	r3, r6
 802b27a:	da03      	bge.n	802b284 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b27c:	2900      	cmp	r1, #0
 802b27e:	db01      	blt.n	802b284 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b280:	4561      	cmp	r1, ip
 802b282:	db4b      	blt.n	802b31c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802b284:	1c58      	adds	r0, r3, #1
 802b286:	d406      	bmi.n	802b296 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b288:	42a8      	cmp	r0, r5
 802b28a:	dc04      	bgt.n	802b296 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b28c:	1c48      	adds	r0, r1, #1
 802b28e:	d402      	bmi.n	802b296 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b290:	42b8      	cmp	r0, r7
 802b292:	f340 8149 	ble.w	802b528 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802b296:	3a01      	subs	r2, #1
 802b298:	44d1      	add	r9, sl
 802b29a:	44f0      	add	r8, lr
 802b29c:	f10b 0b02 	add.w	fp, fp, #2
 802b2a0:	d1e5      	bne.n	802b26e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802b2a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b2a4:	2b00      	cmp	r3, #0
 802b2a6:	dd34      	ble.n	802b312 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b2a8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802b2ac:	ee79 9aab 	vadd.f32	s19, s19, s23
 802b2b0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802b2b4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802b2b8:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802b2bc:	ee69 7a27 	vmul.f32	s15, s18, s15
 802b2c0:	ee76 6a68 	vsub.f32	s13, s12, s17
 802b2c4:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802b2c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b2cc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b2d0:	ee16 2a90 	vmov	r2, s13
 802b2d4:	3b01      	subs	r3, #1
 802b2d6:	930a      	str	r3, [sp, #40]	@ 0x28
 802b2d8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b2da:	fb92 faf3 	sdiv	sl, r2, r3
 802b2de:	ee17 2a10 	vmov	r2, s14
 802b2e2:	eeb0 7a48 	vmov.f32	s14, s16
 802b2e6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b2ea:	ee17 8a10 	vmov	r8, s14
 802b2ee:	eeb0 7a68 	vmov.f32	s14, s17
 802b2f2:	fb92 f3f3 	sdiv	r3, r2, r3
 802b2f6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b2fa:	932a      	str	r3, [sp, #168]	@ 0xa8
 802b2fc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b2fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b300:	ee17 9a10 	vmov	r9, s14
 802b304:	eeb0 8a67 	vmov.f32	s16, s15
 802b308:	eef0 8a46 	vmov.f32	s17, s12
 802b30c:	bf18      	it	ne
 802b30e:	461a      	movne	r2, r3
 802b310:	e797      	b.n	802b242 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802b312:	b013      	add	sp, #76	@ 0x4c
 802b314:	ecbd 8b0a 	vpop	{d8-d12}
 802b318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b31c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b320:	f8cd b01c 	str.w	fp, [sp, #28]
 802b324:	1e51      	subs	r1, r2, #1
 802b326:	fb0a 9301 	mla	r3, sl, r1, r9
 802b32a:	141b      	asrs	r3, r3, #16
 802b32c:	9108      	str	r1, [sp, #32]
 802b32e:	f100 809e 	bmi.w	802b46e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b332:	42b3      	cmp	r3, r6
 802b334:	f280 809b 	bge.w	802b46e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b338:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b33a:	fb03 8301 	mla	r3, r3, r1, r8
 802b33e:	141b      	asrs	r3, r3, #16
 802b340:	f100 8095 	bmi.w	802b46e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b344:	3f01      	subs	r7, #1
 802b346:	42bb      	cmp	r3, r7
 802b348:	f280 8091 	bge.w	802b46e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b34c:	2a00      	cmp	r2, #0
 802b34e:	dda8      	ble.n	802b2a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b350:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802b354:	f8cd a0a4 	str.w	sl, [sp, #164]	@ 0xa4
 802b358:	f8cd b020 	str.w	fp, [sp, #32]
 802b35c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802b360:	e060      	b.n	802b424 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b362:	784f      	ldrb	r7, [r1, #1]
 802b364:	194c      	adds	r4, r1, r5
 802b366:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b36a:	4457      	add	r7, sl
 802b36c:	2a00      	cmp	r2, #0
 802b36e:	d075      	beq.n	802b45c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b370:	5d48      	ldrb	r0, [r1, r5]
 802b372:	7865      	ldrb	r5, [r4, #1]
 802b374:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b378:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b37c:	4450      	add	r0, sl
 802b37e:	4455      	add	r5, sl
 802b380:	b29b      	uxth	r3, r3
 802b382:	b292      	uxth	r2, r2
 802b384:	fb03 f402 	mul.w	r4, r3, r2
 802b388:	011b      	lsls	r3, r3, #4
 802b38a:	f897 e000 	ldrb.w	lr, [r7]
 802b38e:	f897 c002 	ldrb.w	ip, [r7, #2]
 802b392:	1b19      	subs	r1, r3, r4
 802b394:	787f      	ldrb	r7, [r7, #1]
 802b396:	b289      	uxth	r1, r1
 802b398:	fb01 fc0c 	mul.w	ip, r1, ip
 802b39c:	fb01 fe0e 	mul.w	lr, r1, lr
 802b3a0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802b3a4:	fb01 f107 	mul.w	r1, r1, r7
 802b3a8:	b292      	uxth	r2, r2
 802b3aa:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b3ae:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802b3b2:	78b7      	ldrb	r7, [r6, #2]
 802b3b4:	1a9b      	subs	r3, r3, r2
 802b3b6:	7876      	ldrb	r6, [r6, #1]
 802b3b8:	b29b      	uxth	r3, r3
 802b3ba:	fb03 ee0b 	mla	lr, r3, fp, lr
 802b3be:	fb03 c707 	mla	r7, r3, r7, ip
 802b3c2:	fb03 1306 	mla	r3, r3, r6, r1
 802b3c6:	f890 b000 	ldrb.w	fp, [r0]
 802b3ca:	f890 c002 	ldrb.w	ip, [r0, #2]
 802b3ce:	7841      	ldrb	r1, [r0, #1]
 802b3d0:	fb02 ee0b 	mla	lr, r2, fp, lr
 802b3d4:	fb02 3301 	mla	r3, r2, r1, r3
 802b3d8:	fb02 770c 	mla	r7, r2, ip, r7
 802b3dc:	f895 b000 	ldrb.w	fp, [r5]
 802b3e0:	f895 c002 	ldrb.w	ip, [r5, #2]
 802b3e4:	7869      	ldrb	r1, [r5, #1]
 802b3e6:	fb04 ee0b 	mla	lr, r4, fp, lr
 802b3ea:	fb04 3101 	mla	r1, r4, r1, r3
 802b3ee:	fb04 7c0c 	mla	ip, r4, ip, r7
 802b3f2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802b3f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802b3f8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802b3fc:	0949      	lsrs	r1, r1, #5
 802b3fe:	4491      	add	r9, r2
 802b400:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802b402:	9b07      	ldr	r3, [sp, #28]
 802b404:	ea4c 0e0e 	orr.w	lr, ip, lr
 802b408:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b40c:	ea4e 0e01 	orr.w	lr, lr, r1
 802b410:	4490      	add	r8, r2
 802b412:	9a08      	ldr	r2, [sp, #32]
 802b414:	f823 eb02 	strh.w	lr, [r3], #2
 802b418:	4293      	cmp	r3, r2
 802b41a:	9307      	str	r3, [sp, #28]
 802b41c:	d025      	beq.n	802b46a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 802b41e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b420:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b424:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b428:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b42c:	fb05 3101 	mla	r1, r5, r1, r3
 802b430:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b432:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802b436:	f812 b001 	ldrb.w	fp, [r2, r1]
 802b43a:	4411      	add	r1, r2
 802b43c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b440:	eb0a 060b 	add.w	r6, sl, fp
 802b444:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b448:	2b00      	cmp	r3, #0
 802b44a:	d18a      	bne.n	802b362 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b44c:	b14a      	cbz	r2, 802b462 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 802b44e:	5d48      	ldrb	r0, [r1, r5]
 802b450:	4637      	mov	r7, r6
 802b452:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b456:	4635      	mov	r5, r6
 802b458:	4450      	add	r0, sl
 802b45a:	e791      	b.n	802b380 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b45c:	4635      	mov	r5, r6
 802b45e:	4630      	mov	r0, r6
 802b460:	e78e      	b.n	802b380 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b462:	4635      	mov	r5, r6
 802b464:	4630      	mov	r0, r6
 802b466:	4637      	mov	r7, r6
 802b468:	e78a      	b.n	802b380 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b46a:	4693      	mov	fp, r2
 802b46c:	e719      	b.n	802b2a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b46e:	2a00      	cmp	r2, #0
 802b470:	f77f af17 	ble.w	802b2a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b474:	9e08      	ldr	r6, [sp, #32]
 802b476:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b47a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b47e:	465f      	mov	r7, fp
 802b480:	f8cd b01c 	str.w	fp, [sp, #28]
 802b484:	f8dd b0b8 	ldr.w	fp, [sp, #184]	@ 0xb8
 802b488:	2b00      	cmp	r3, #0
 802b48a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802b48e:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b492:	db2a      	blt.n	802b4ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b494:	1e65      	subs	r5, r4, #1
 802b496:	42ab      	cmp	r3, r5
 802b498:	da27      	bge.n	802b4ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b49a:	2900      	cmp	r1, #0
 802b49c:	db25      	blt.n	802b4ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b49e:	f10e 35ff 	add.w	r5, lr, #4294967295
 802b4a2:	42a9      	cmp	r1, r5
 802b4a4:	da21      	bge.n	802b4ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4a6:	b224      	sxth	r4, r4
 802b4a8:	fb01 3304 	mla	r3, r1, r4, r3
 802b4ac:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b4ae:	f811 c003 	ldrb.w	ip, [r1, r3]
 802b4b2:	440b      	add	r3, r1
 802b4b4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b4b6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b4ba:	eb01 0e0c 	add.w	lr, r1, ip
 802b4be:	2800      	cmp	r0, #0
 802b4c0:	d048      	beq.n	802b554 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802b4c2:	785d      	ldrb	r5, [r3, #1]
 802b4c4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b4c8:	440d      	add	r5, r1
 802b4ca:	2a00      	cmp	r2, #0
 802b4cc:	f000 809e 	beq.w	802b60c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802b4d0:	1919      	adds	r1, r3, r4
 802b4d2:	7849      	ldrb	r1, [r1, #1]
 802b4d4:	5d1c      	ldrb	r4, [r3, r4]
 802b4d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b4d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802b4dc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b4e0:	1859      	adds	r1, r3, r1
 802b4e2:	18e3      	adds	r3, r4, r3
 802b4e4:	910f      	str	r1, [sp, #60]	@ 0x3c
 802b4e6:	9310      	str	r3, [sp, #64]	@ 0x40
 802b4e8:	e039      	b.n	802b55e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b4ea:	1c5d      	adds	r5, r3, #1
 802b4ec:	d405      	bmi.n	802b4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b4ee:	42a5      	cmp	r5, r4
 802b4f0:	dc03      	bgt.n	802b4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b4f2:	1c4d      	adds	r5, r1, #1
 802b4f4:	d401      	bmi.n	802b4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b4f6:	4575      	cmp	r5, lr
 802b4f8:	dd1c      	ble.n	802b534 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802b4fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b4fc:	2e00      	cmp	r6, #0
 802b4fe:	f107 0702 	add.w	r7, r7, #2
 802b502:	44d1      	add	r9, sl
 802b504:	4498      	add	r8, r3
 802b506:	dd07      	ble.n	802b518 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 802b508:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 802b50c:	3e01      	subs	r6, #1
 802b50e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b512:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b516:	e7b7      	b.n	802b488 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802b518:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 802b51c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b520:	3301      	adds	r3, #1
 802b522:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802b526:	e6bc      	b.n	802b2a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b528:	3a01      	subs	r2, #1
 802b52a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b52e:	9208      	str	r2, [sp, #32]
 802b530:	4616      	mov	r6, r2
 802b532:	e7a4      	b.n	802b47e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802b534:	fa0f f58e 	sxth.w	r5, lr
 802b538:	b224      	sxth	r4, r4
 802b53a:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802b53e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802b542:	e9cd 4500 	strd	r4, r5, [sp]
 802b546:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b548:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b54a:	4639      	mov	r1, r7
 802b54c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802b54e:	f7ff fd69 	bl	802b024 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802b552:	e7d2      	b.n	802b4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b554:	2a00      	cmp	r2, #0
 802b556:	d14f      	bne.n	802b5f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 802b558:	4675      	mov	r5, lr
 802b55a:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b55e:	b283      	uxth	r3, r0
 802b560:	b292      	uxth	r2, r2
 802b562:	fb03 f002 	mul.w	r0, r3, r2
 802b566:	782c      	ldrb	r4, [r5, #0]
 802b568:	011b      	lsls	r3, r3, #4
 802b56a:	940e      	str	r4, [sp, #56]	@ 0x38
 802b56c:	78ac      	ldrb	r4, [r5, #2]
 802b56e:	1a19      	subs	r1, r3, r0
 802b570:	940d      	str	r4, [sp, #52]	@ 0x34
 802b572:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b574:	b289      	uxth	r1, r1
 802b576:	fb01 f404 	mul.w	r4, r1, r4
 802b57a:	940e      	str	r4, [sp, #56]	@ 0x38
 802b57c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b57e:	786d      	ldrb	r5, [r5, #1]
 802b580:	fb01 f404 	mul.w	r4, r1, r4
 802b584:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802b588:	fb01 f105 	mul.w	r1, r1, r5
 802b58c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b58e:	b292      	uxth	r2, r2
 802b590:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b594:	f815 c00c 	ldrb.w	ip, [r5, ip]
 802b598:	940d      	str	r4, [sp, #52]	@ 0x34
 802b59a:	1a9b      	subs	r3, r3, r2
 802b59c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b59e:	b29b      	uxth	r3, r3
 802b5a0:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802b5a4:	fb03 4c0c 	mla	ip, r3, ip, r4
 802b5a8:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b5ac:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b5ae:	fb03 4505 	mla	r5, r3, r5, r4
 802b5b2:	fb03 130e 	mla	r3, r3, lr, r1
 802b5b6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802b5b8:	78a1      	ldrb	r1, [r4, #2]
 802b5ba:	f894 e000 	ldrb.w	lr, [r4]
 802b5be:	7864      	ldrb	r4, [r4, #1]
 802b5c0:	fb02 5501 	mla	r5, r2, r1, r5
 802b5c4:	fb02 cc0e 	mla	ip, r2, lr, ip
 802b5c8:	fb02 3104 	mla	r1, r2, r4, r3
 802b5cc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802b5ce:	7822      	ldrb	r2, [r4, #0]
 802b5d0:	78a3      	ldrb	r3, [r4, #2]
 802b5d2:	7864      	ldrb	r4, [r4, #1]
 802b5d4:	fb00 cc02 	mla	ip, r0, r2, ip
 802b5d8:	fb00 5303 	mla	r3, r0, r3, r5
 802b5dc:	fb00 1204 	mla	r2, r0, r4, r1
 802b5e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802b5e4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b5e8:	0952      	lsrs	r2, r2, #5
 802b5ea:	ea43 030c 	orr.w	r3, r3, ip
 802b5ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b5f2:	4313      	orrs	r3, r2
 802b5f4:	803b      	strh	r3, [r7, #0]
 802b5f6:	e780      	b.n	802b4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b5f8:	5d1c      	ldrb	r4, [r3, r4]
 802b5fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b5fc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b600:	18e3      	adds	r3, r4, r3
 802b602:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 802b606:	9310      	str	r3, [sp, #64]	@ 0x40
 802b608:	4675      	mov	r5, lr
 802b60a:	e7a8      	b.n	802b55e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b60c:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b610:	e7a5      	b.n	802b55e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b612:	f43f ae46 	beq.w	802b2a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b616:	1e6e      	subs	r6, r5, #1
 802b618:	f8cd b01c 	str.w	fp, [sp, #28]
 802b61c:	e682      	b.n	802b324 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802b61e:	bf00      	nop

0802b620 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802b620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b624:	b08b      	sub	sp, #44	@ 0x2c
 802b626:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	@ 0x50
 802b62a:	f8b1 c000 	ldrh.w	ip, [r1]
 802b62e:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 802b632:	fb04 6507 	mla	r5, r4, r7, r6
 802b636:	9107      	str	r1, [sp, #28]
 802b638:	ea4f 01ec 	mov.w	r1, ip, asr #3
 802b63c:	ea4f 202c 	mov.w	r0, ip, asr #8
 802b640:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b644:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802b648:	469a      	mov	sl, r3
 802b64a:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 802b64e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b652:	9105      	str	r1, [sp, #20]
 802b654:	2c00      	cmp	r4, #0
 802b656:	fa5f f18c 	uxtb.w	r1, ip
 802b65a:	9004      	str	r0, [sp, #16]
 802b65c:	9106      	str	r1, [sp, #24]
 802b65e:	eb02 0e05 	add.w	lr, r2, r5
 802b662:	f104 0801 	add.w	r8, r4, #1
 802b666:	f9bd 9054 	ldrsh.w	r9, [sp, #84]	@ 0x54
 802b66a:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 802b66e:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802b672:	9308      	str	r3, [sp, #32]
 802b674:	db02      	blt.n	802b67c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802b676:	45a1      	cmp	r9, r4
 802b678:	f300 8119 	bgt.w	802b8ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28e>
 802b67c:	f04f 0c00 	mov.w	ip, #0
 802b680:	4665      	mov	r5, ip
 802b682:	4662      	mov	r2, ip
 802b684:	4664      	mov	r4, ip
 802b686:	f1b8 0f00 	cmp.w	r8, #0
 802b68a:	db02      	blt.n	802b692 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x72>
 802b68c:	45c1      	cmp	r9, r8
 802b68e:	f300 8127 	bgt.w	802b8e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>
 802b692:	f04f 0e00 	mov.w	lr, #0
 802b696:	46f0      	mov	r8, lr
 802b698:	4676      	mov	r6, lr
 802b69a:	46f1      	mov	r9, lr
 802b69c:	290f      	cmp	r1, #15
 802b69e:	f200 815e 	bhi.w	802b95e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b6a2:	280f      	cmp	r0, #15
 802b6a4:	f200 815b 	bhi.w	802b95e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b6a8:	b280      	uxth	r0, r0
 802b6aa:	b289      	uxth	r1, r1
 802b6ac:	fb00 fa01 	mul.w	sl, r0, r1
 802b6b0:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802b6b4:	b280      	uxth	r0, r0
 802b6b6:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802b6ba:	fb00 fb08 	mul.w	fp, r0, r8
 802b6be:	fb0a f70e 	mul.w	r7, sl, lr
 802b6c2:	9301      	str	r3, [sp, #4]
 802b6c4:	f009 13ff 	and.w	r3, r9, #16711935	@ 0xff00ff
 802b6c8:	9302      	str	r3, [sp, #8]
 802b6ca:	f409 437f 	and.w	r3, r9, #65280	@ 0xff00
 802b6ce:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b6d2:	9303      	str	r3, [sp, #12]
 802b6d4:	0109      	lsls	r1, r1, #4
 802b6d6:	eba1 090a 	sub.w	r9, r1, sl
 802b6da:	fa1f f989 	uxth.w	r9, r9
 802b6de:	fb09 f30c 	mul.w	r3, r9, ip
 802b6e2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802b6e6:	1a09      	subs	r1, r1, r0
 802b6e8:	b289      	uxth	r1, r1
 802b6ea:	fb01 3305 	mla	r3, r1, r5, r3
 802b6ee:	445b      	add	r3, fp
 802b6f0:	443b      	add	r3, r7
 802b6f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b6f6:	2dff      	cmp	r5, #255	@ 0xff
 802b6f8:	9309      	str	r3, [sp, #36]	@ 0x24
 802b6fa:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b6fe:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b702:	d019      	beq.n	802b738 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x118>
 802b704:	fb03 f305 	mul.w	r3, r3, r5
 802b708:	fb04 f405 	mul.w	r4, r4, r5
 802b70c:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802b710:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802b714:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802b718:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 802b71c:	445b      	add	r3, fp
 802b71e:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802b722:	0a1b      	lsrs	r3, r3, #8
 802b724:	0a24      	lsrs	r4, r4, #8
 802b726:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b72a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b72e:	431c      	orrs	r4, r3
 802b730:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b734:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b738:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b73c:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b740:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b744:	d018      	beq.n	802b778 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x158>
 802b746:	fb05 f50c 	mul.w	r5, r5, ip
 802b74a:	fb02 f20c 	mul.w	r2, r2, ip
 802b74e:	0a2f      	lsrs	r7, r5, #8
 802b750:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b754:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 802b758:	f502 7c80 	add.w	ip, r2, #256	@ 0x100
 802b75c:	443d      	add	r5, r7
 802b75e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802b762:	0a2d      	lsrs	r5, r5, #8
 802b764:	0a12      	lsrs	r2, r2, #8
 802b766:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802b76a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b76e:	432a      	orrs	r2, r5
 802b770:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b774:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b778:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802b77c:	d01f      	beq.n	802b7be <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 802b77e:	9f02      	ldr	r7, [sp, #8]
 802b780:	fb07 fb08 	mul.w	fp, r7, r8
 802b784:	9f03      	ldr	r7, [sp, #12]
 802b786:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802b78a:	fb07 f808 	mul.w	r8, r7, r8
 802b78e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b792:	f508 7780 	add.w	r7, r8, #256	@ 0x100
 802b796:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b79a:	eb07 2718 	add.w	r7, r7, r8, lsr #8
 802b79e:	44dc      	add	ip, fp
 802b7a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b7a4:	0a3f      	lsrs	r7, r7, #8
 802b7a6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802b7aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7ae:	ea4c 0807 	orr.w	r8, ip, r7
 802b7b2:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 802b7b6:	9702      	str	r7, [sp, #8]
 802b7b8:	f408 477f 	and.w	r7, r8, #65280	@ 0xff00
 802b7bc:	9703      	str	r7, [sp, #12]
 802b7be:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802b7c2:	d01d      	beq.n	802b800 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1e0>
 802b7c4:	9f01      	ldr	r7, [sp, #4]
 802b7c6:	fb06 f60e 	mul.w	r6, r6, lr
 802b7ca:	fb07 f80e 	mul.w	r8, r7, lr
 802b7ce:	ea4f 2c18 	mov.w	ip, r8, lsr #8
 802b7d2:	f506 7780 	add.w	r7, r6, #256	@ 0x100
 802b7d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7da:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802b7de:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 802b7e2:	44e0      	add	r8, ip
 802b7e4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802b7e8:	0a36      	lsrs	r6, r6, #8
 802b7ea:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802b7ee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b7f2:	ea48 0606 	orr.w	r6, r8, r6
 802b7f6:	f006 17ff 	and.w	r7, r6, #16711935	@ 0xff00ff
 802b7fa:	9701      	str	r7, [sp, #4]
 802b7fc:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b800:	f8bd e020 	ldrh.w	lr, [sp, #32]
 802b804:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802b806:	fb05 f509 	mul.w	r5, r5, r9
 802b80a:	fb07 f70e 	mul.w	r7, r7, lr
 802b80e:	f107 0c01 	add.w	ip, r7, #1
 802b812:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 802b816:	ea6f 2c1c 	mvn.w	ip, ip, lsr #8
 802b81a:	fb02 f209 	mul.w	r2, r2, r9
 802b81e:	fb03 5501 	mla	r5, r3, r1, r5
 802b822:	fb04 2201 	mla	r2, r4, r1, r2
 802b826:	9b02      	ldr	r3, [sp, #8]
 802b828:	fa5f fc8c 	uxtb.w	ip, ip
 802b82c:	fb03 5500 	mla	r5, r3, r0, r5
 802b830:	9b03      	ldr	r3, [sp, #12]
 802b832:	fb03 2200 	mla	r2, r3, r0, r2
 802b836:	9b01      	ldr	r3, [sp, #4]
 802b838:	fb03 550a 	mla	r5, r3, sl, r5
 802b83c:	fb06 2a0a 	mla	sl, r6, sl, r2
 802b840:	9a05      	ldr	r2, [sp, #20]
 802b842:	9b04      	ldr	r3, [sp, #16]
 802b844:	fb12 f10c 	smulbb	r1, r2, ip
 802b848:	9a06      	ldr	r2, [sp, #24]
 802b84a:	0a2e      	lsrs	r6, r5, #8
 802b84c:	fb13 f30c 	smulbb	r3, r3, ip
 802b850:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b854:	fb12 fc0c 	smulbb	ip, r2, ip
 802b858:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b85c:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802b860:	ea46 060a 	orr.w	r6, r6, sl
 802b864:	0c30      	lsrs	r0, r6, #16
 802b866:	f3c6 2207 	ubfx	r2, r6, #8, #8
 802b86a:	b2f6      	uxtb	r6, r6
 802b86c:	fb00 330e 	mla	r3, r0, lr, r3
 802b870:	fb02 120e 	mla	r2, r2, lr, r1
 802b874:	fb06 c60e 	mla	r6, r6, lr, ip
 802b878:	b298      	uxth	r0, r3
 802b87a:	b291      	uxth	r1, r2
 802b87c:	b2b6      	uxth	r6, r6
 802b87e:	1c43      	adds	r3, r0, #1
 802b880:	f106 0e01 	add.w	lr, r6, #1
 802b884:	1c4a      	adds	r2, r1, #1
 802b886:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802b88a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802b88e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b892:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802b896:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b89a:	0952      	lsrs	r2, r2, #5
 802b89c:	4333      	orrs	r3, r6
 802b89e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b8a2:	4313      	orrs	r3, r2
 802b8a4:	9a07      	ldr	r2, [sp, #28]
 802b8a6:	8013      	strh	r3, [r2, #0]
 802b8a8:	b00b      	add	sp, #44	@ 0x2c
 802b8aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b8ae:	2e00      	cmp	r6, #0
 802b8b0:	db01      	blt.n	802b8b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x296>
 802b8b2:	42b7      	cmp	r7, r6
 802b8b4:	dc3c      	bgt.n	802b930 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x310>
 802b8b6:	2500      	movs	r5, #0
 802b8b8:	462c      	mov	r4, r5
 802b8ba:	1c72      	adds	r2, r6, #1
 802b8bc:	d427      	bmi.n	802b90e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b8be:	4297      	cmp	r7, r2
 802b8c0:	dd25      	ble.n	802b90e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b8c2:	b131      	cbz	r1, 802b8d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 802b8c4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802b8c8:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 802b8cc:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802b8d0:	e6d9      	b.n	802b686 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b8d2:	f1b8 0f00 	cmp.w	r8, #0
 802b8d6:	db3b      	blt.n	802b950 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b8d8:	45c1      	cmp	r9, r8
 802b8da:	dd39      	ble.n	802b950 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b8dc:	468c      	mov	ip, r1
 802b8de:	460a      	mov	r2, r1
 802b8e0:	b1c8      	cbz	r0, 802b916 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f6>
 802b8e2:	2e00      	cmp	r6, #0
 802b8e4:	db2d      	blt.n	802b942 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b8e6:	42b7      	cmp	r7, r6
 802b8e8:	dd2b      	ble.n	802b942 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b8ea:	f81e 8007 	ldrb.w	r8, [lr, r7]
 802b8ee:	f85a 9028 	ldr.w	r9, [sl, r8, lsl #2]
 802b8f2:	ea4f 6819 	mov.w	r8, r9, lsr #24
 802b8f6:	3601      	adds	r6, #1
 802b8f8:	d41f      	bmi.n	802b93a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b8fa:	42b7      	cmp	r7, r6
 802b8fc:	dd1d      	ble.n	802b93a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b8fe:	b321      	cbz	r1, 802b94a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x32a>
 802b900:	4477      	add	r7, lr
 802b902:	787e      	ldrb	r6, [r7, #1]
 802b904:	f85a 6026 	ldr.w	r6, [sl, r6, lsl #2]
 802b908:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 802b90c:	e6c6      	b.n	802b69c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b90e:	f04f 0c00 	mov.w	ip, #0
 802b912:	4662      	mov	r2, ip
 802b914:	e6b7      	b.n	802b686 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b916:	290f      	cmp	r1, #15
 802b918:	d821      	bhi.n	802b95e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b91a:	b289      	uxth	r1, r1
 802b91c:	4682      	mov	sl, r0
 802b91e:	4607      	mov	r7, r0
 802b920:	4683      	mov	fp, r0
 802b922:	e9cd 0002 	strd	r0, r0, [sp, #8]
 802b926:	4606      	mov	r6, r0
 802b928:	9001      	str	r0, [sp, #4]
 802b92a:	4686      	mov	lr, r0
 802b92c:	4680      	mov	r8, r0
 802b92e:	e6d1      	b.n	802b6d4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb4>
 802b930:	5d52      	ldrb	r2, [r2, r5]
 802b932:	f85a 4022 	ldr.w	r4, [sl, r2, lsl #2]
 802b936:	0e25      	lsrs	r5, r4, #24
 802b938:	e7bf      	b.n	802b8ba <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x29a>
 802b93a:	f04f 0e00 	mov.w	lr, #0
 802b93e:	4676      	mov	r6, lr
 802b940:	e6ac      	b.n	802b69c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b942:	f04f 0800 	mov.w	r8, #0
 802b946:	46c1      	mov	r9, r8
 802b948:	e7d5      	b.n	802b8f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d6>
 802b94a:	460e      	mov	r6, r1
 802b94c:	468e      	mov	lr, r1
 802b94e:	e6a8      	b.n	802b6a2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b950:	460a      	mov	r2, r1
 802b952:	460e      	mov	r6, r1
 802b954:	4689      	mov	r9, r1
 802b956:	468e      	mov	lr, r1
 802b958:	4688      	mov	r8, r1
 802b95a:	468c      	mov	ip, r1
 802b95c:	e6a1      	b.n	802b6a2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b95e:	4b03      	ldr	r3, [pc, #12]	@ (802b96c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x34c>)
 802b960:	4a03      	ldr	r2, [pc, #12]	@ (802b970 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x350>)
 802b962:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b966:	4803      	ldr	r0, [pc, #12]	@ (802b974 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x354>)
 802b968:	f006 fda6 	bl	80324b8 <__assert_func>
 802b96c:	0803666c 	.word	0x0803666c
 802b970:	08036ce8 	.word	0x08036ce8
 802b974:	080367f4 	.word	0x080367f4

0802b978 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b97c:	ed2d 8b08 	vpush	{d8-d11}
 802b980:	b0a9      	sub	sp, #164	@ 0xa4
 802b982:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802b984:	9022      	str	r0, [sp, #136]	@ 0x88
 802b986:	9115      	str	r1, [sp, #84]	@ 0x54
 802b988:	6860      	ldr	r0, [r4, #4]
 802b98a:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802b98c:	9219      	str	r2, [sp, #100]	@ 0x64
 802b98e:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802b990:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802b994:	fb00 1202 	mla	r2, r0, r2, r1
 802b998:	6820      	ldr	r0, [r4, #0]
 802b99a:	46d1      	mov	r9, sl
 802b99c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802b9a0:	46da      	mov	sl, fp
 802b9a2:	eeb0 aa40 	vmov.f32	s20, s0
 802b9a6:	eef0 9a60 	vmov.f32	s19, s1
 802b9aa:	eeb0 9a41 	vmov.f32	s18, s2
 802b9ae:	eef0 8a62 	vmov.f32	s17, s5
 802b9b2:	eeb0 8a43 	vmov.f32	s16, s6
 802b9b6:	eef0 ba44 	vmov.f32	s23, s8
 802b9ba:	eeb0 ba64 	vmov.f32	s22, s9
 802b9be:	eef0 aa45 	vmov.f32	s21, s10
 802b9c2:	4693      	mov	fp, r2
 802b9c4:	9942      	ldr	r1, [sp, #264]	@ 0x108
 802b9c6:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802b9c8:	6849      	ldr	r1, [r1, #4]
 802b9ca:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802b9ce:	3104      	adds	r1, #4
 802b9d0:	682d      	ldr	r5, [r5, #0]
 802b9d2:	910e      	str	r1, [sp, #56]	@ 0x38
 802b9d4:	b2a1      	uxth	r1, r4
 802b9d6:	9423      	str	r4, [sp, #140]	@ 0x8c
 802b9d8:	9511      	str	r5, [sp, #68]	@ 0x44
 802b9da:	9112      	str	r1, [sp, #72]	@ 0x48
 802b9dc:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802b9de:	2a00      	cmp	r2, #0
 802b9e0:	dc02      	bgt.n	802b9e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802b9e2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802b9e4:	2a00      	cmp	r2, #0
 802b9e6:	dd65      	ble.n	802bab4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802b9e8:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802b9ea:	2b00      	cmp	r3, #0
 802b9ec:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802b9f0:	b234      	sxth	r4, r6
 802b9f2:	fa0f f78c 	sxth.w	r7, ip
 802b9f6:	f340 8396 	ble.w	802c126 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ae>
 802b9fa:	1e65      	subs	r5, r4, #1
 802b9fc:	f107 3eff 	add.w	lr, r7, #4294967295
 802ba00:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802ba04:	e9dd c83d 	ldrd	ip, r8, [sp, #244]	@ 0xf4
 802ba08:	ea5f 422a 	movs.w	r2, sl, asr #16
 802ba0c:	ea4f 4129 	mov.w	r1, r9, asr #16
 802ba10:	d405      	bmi.n	802ba1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba12:	42aa      	cmp	r2, r5
 802ba14:	da03      	bge.n	802ba1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba16:	2900      	cmp	r1, #0
 802ba18:	db01      	blt.n	802ba1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba1a:	4571      	cmp	r1, lr
 802ba1c:	db4f      	blt.n	802babe <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802ba1e:	1c50      	adds	r0, r2, #1
 802ba20:	d406      	bmi.n	802ba30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba22:	42a0      	cmp	r0, r4
 802ba24:	dc04      	bgt.n	802ba30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba26:	1c48      	adds	r0, r1, #1
 802ba28:	d402      	bmi.n	802ba30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba2a:	42b8      	cmp	r0, r7
 802ba2c:	f340 834f 	ble.w	802c0ce <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 802ba30:	3b01      	subs	r3, #1
 802ba32:	44e2      	add	sl, ip
 802ba34:	44c1      	add	r9, r8
 802ba36:	f10b 0b02 	add.w	fp, fp, #2
 802ba3a:	d1e5      	bne.n	802ba08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ba3c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ba3e:	2b00      	cmp	r3, #0
 802ba40:	dd38      	ble.n	802bab4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802ba42:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba46:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ba4a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ba4e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ba52:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ba56:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ba5a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ba5e:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ba62:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ba66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba6a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ba6e:	ee16 2a90 	vmov	r2, s13
 802ba72:	3b01      	subs	r3, #1
 802ba74:	9315      	str	r3, [sp, #84]	@ 0x54
 802ba76:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ba78:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba7c:	ee17 2a10 	vmov	r2, s14
 802ba80:	eeb0 7a48 	vmov.f32	s14, s16
 802ba84:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ba88:	ee17 9a10 	vmov	r9, s14
 802ba8c:	eeb0 7a68 	vmov.f32	s14, s17
 802ba90:	933d      	str	r3, [sp, #244]	@ 0xf4
 802ba92:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ba94:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ba98:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba9c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802ba9e:	933e      	str	r3, [sp, #248]	@ 0xf8
 802baa0:	ee17 aa10 	vmov	sl, s14
 802baa4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802baa6:	eeb0 8a67 	vmov.f32	s16, s15
 802baaa:	eef0 8a46 	vmov.f32	s17, s12
 802baae:	bf08      	it	eq
 802bab0:	4613      	moveq	r3, r2
 802bab2:	e793      	b.n	802b9dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802bab4:	b029      	add	sp, #164	@ 0xa4
 802bab6:	ecbd 8b08 	vpop	{d8-d11}
 802baba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802babe:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802bac2:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bac6:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802bac8:	1e59      	subs	r1, r3, #1
 802baca:	fb00 a201 	mla	r2, r0, r1, sl
 802bace:	1412      	asrs	r2, r2, #16
 802bad0:	910d      	str	r1, [sp, #52]	@ 0x34
 802bad2:	f100 8161 	bmi.w	802bd98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bad6:	42aa      	cmp	r2, r5
 802bad8:	f280 815e 	bge.w	802bd98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802badc:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bade:	fb02 9201 	mla	r2, r2, r1, r9
 802bae2:	1412      	asrs	r2, r2, #16
 802bae4:	f100 8158 	bmi.w	802bd98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bae8:	3f01      	subs	r7, #1
 802baea:	42ba      	cmp	r2, r7
 802baec:	f280 8154 	bge.w	802bd98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802baf0:	2b00      	cmp	r3, #0
 802baf2:	dda3      	ble.n	802ba3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802baf4:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802baf8:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802bafc:	46d0      	mov	r8, sl
 802bafe:	4621      	mov	r1, r4
 802bb00:	e129      	b.n	802bd56 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 802bb02:	f893 c001 	ldrb.w	ip, [r3, #1]
 802bb06:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802bb0a:	9513      	str	r5, [sp, #76]	@ 0x4c
 802bb0c:	0e2d      	lsrs	r5, r5, #24
 802bb0e:	950a      	str	r5, [sp, #40]	@ 0x28
 802bb10:	b162      	cbz	r2, 802bb2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bb12:	185d      	adds	r5, r3, r1
 802bb14:	786d      	ldrb	r5, [r5, #1]
 802bb16:	5c5b      	ldrb	r3, [r3, r1]
 802bb18:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802bb1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802bb20:	9116      	str	r1, [sp, #88]	@ 0x58
 802bb22:	9314      	str	r3, [sp, #80]	@ 0x50
 802bb24:	0e09      	lsrs	r1, r1, #24
 802bb26:	0e1b      	lsrs	r3, r3, #24
 802bb28:	910c      	str	r1, [sp, #48]	@ 0x30
 802bb2a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bb2c:	b2a4      	uxth	r4, r4
 802bb2e:	b292      	uxth	r2, r2
 802bb30:	fb04 f502 	mul.w	r5, r4, r2
 802bb34:	0124      	lsls	r4, r4, #4
 802bb36:	1b66      	subs	r6, r4, r5
 802bb38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bb3a:	b2b6      	uxth	r6, r6
 802bb3c:	fb06 f103 	mul.w	r1, r6, r3
 802bb40:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802bb44:	b292      	uxth	r2, r2
 802bb46:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802bb4a:	1a9b      	subs	r3, r3, r2
 802bb4c:	b29b      	uxth	r3, r3
 802bb4e:	fb03 1100 	mla	r1, r3, r0, r1
 802bb52:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802bb54:	fb02 1104 	mla	r1, r2, r4, r1
 802bb58:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bb5a:	fb05 1104 	mla	r1, r5, r4, r1
 802bb5e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802bb62:	2900      	cmp	r1, #0
 802bb64:	f000 80ea 	beq.w	802bd3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802bb68:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802bb6c:	28ff      	cmp	r0, #255	@ 0xff
 802bb6e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802bb72:	940f      	str	r4, [sp, #60]	@ 0x3c
 802bb74:	970d      	str	r7, [sp, #52]	@ 0x34
 802bb76:	d01c      	beq.n	802bbb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802bb78:	fb04 f400 	mul.w	r4, r4, r0
 802bb7c:	4627      	mov	r7, r4
 802bb7e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bb80:	fb04 fe00 	mul.w	lr, r4, r0
 802bb84:	0a3c      	lsrs	r4, r7, #8
 802bb86:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bb8a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bb8e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bb92:	4427      	add	r7, r4
 802bb94:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802bb98:	0a3f      	lsrs	r7, r7, #8
 802bb9a:	0a00      	lsrs	r0, r0, #8
 802bb9c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802bba0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bba4:	4307      	orrs	r7, r0
 802bba6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802bbaa:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bbac:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 802bbb0:	900d      	str	r0, [sp, #52]	@ 0x34
 802bbb2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802bbb4:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802bbb8:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 802bbbc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802bbbe:	28ff      	cmp	r0, #255	@ 0xff
 802bbc0:	d01c      	beq.n	802bbfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 802bbc2:	fb0c fc00 	mul.w	ip, ip, r0
 802bbc6:	fb0e fe00 	mul.w	lr, lr, r0
 802bbca:	ea4f 241c 	mov.w	r4, ip, lsr #8
 802bbce:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bbd2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802bbd6:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bbda:	44a4      	add	ip, r4
 802bbdc:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802bbe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bbe4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802bbe8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bbec:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bbf0:	ea4c 0e0e 	orr.w	lr, ip, lr
 802bbf4:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802bbf8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bbfc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802bbfe:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802bc02:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802bc06:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802bc08:	28ff      	cmp	r0, #255	@ 0xff
 802bc0a:	d01a      	beq.n	802bc42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802bc0c:	fb07 f700 	mul.w	r7, r7, r0
 802bc10:	fb0a fa00 	mul.w	sl, sl, r0
 802bc14:	0a3c      	lsrs	r4, r7, #8
 802bc16:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc1a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bc1e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802bc22:	4427      	add	r7, r4
 802bc24:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802bc28:	0a3f      	lsrs	r7, r7, #8
 802bc2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bc2e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bc32:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc36:	ea47 0a0a 	orr.w	sl, r7, sl
 802bc3a:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 802bc3e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc42:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802bc44:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802bc48:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bc4c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bc4e:	2cff      	cmp	r4, #255	@ 0xff
 802bc50:	d01d      	beq.n	802bc8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802bc52:	fb00 f004 	mul.w	r0, r0, r4
 802bc56:	fb0b fb04 	mul.w	fp, fp, r4
 802bc5a:	0a04      	lsrs	r4, r0, #8
 802bc5c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc60:	9418      	str	r4, [sp, #96]	@ 0x60
 802bc62:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802bc66:	9417      	str	r4, [sp, #92]	@ 0x5c
 802bc68:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802bc6a:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bc6e:	4420      	add	r0, r4
 802bc70:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802bc72:	0a00      	lsrs	r0, r0, #8
 802bc74:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802bc78:	0a24      	lsrs	r4, r4, #8
 802bc7a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bc7e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bc82:	ea40 0b0b 	orr.w	fp, r0, fp
 802bc86:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802bc8a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802bc8e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802bc90:	fb0c fc06 	mul.w	ip, ip, r6
 802bc94:	fb01 f104 	mul.w	r1, r1, r4
 802bc98:	1c4c      	adds	r4, r1, #1
 802bc9a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bc9e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bca2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802bca4:	fb0e f606 	mul.w	r6, lr, r6
 802bca8:	fb04 cc03 	mla	ip, r4, r3, ip
 802bcac:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bcae:	fb07 cc02 	mla	ip, r7, r2, ip
 802bcb2:	fb04 6603 	mla	r6, r4, r3, r6
 802bcb6:	fb0a 6602 	mla	r6, sl, r2, r6
 802bcba:	fb00 cc05 	mla	ip, r0, r5, ip
 802bcbe:	fb0b 6605 	mla	r6, fp, r5, r6
 802bcc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bcc6:	0a36      	lsrs	r6, r6, #8
 802bcc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bccc:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802bcd0:	ea4c 0303 	orr.w	r3, ip, r3
 802bcd4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bcd6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bcd8:	0c1f      	lsrs	r7, r3, #16
 802bcda:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bcde:	b2db      	uxtb	r3, r3
 802bce0:	8805      	ldrh	r5, [r0, #0]
 802bce2:	fb13 f302 	smulbb	r3, r3, r2
 802bce6:	fb17 f702 	smulbb	r7, r7, r2
 802bcea:	fb16 f602 	smulbb	r6, r6, r2
 802bcee:	1228      	asrs	r0, r5, #8
 802bcf0:	10ea      	asrs	r2, r5, #3
 802bcf2:	00ed      	lsls	r5, r5, #3
 802bcf4:	b2c9      	uxtb	r1, r1
 802bcf6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bcfa:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bcfe:	b2ed      	uxtb	r5, r5
 802bd00:	fb00 7001 	mla	r0, r0, r1, r7
 802bd04:	fb02 6201 	mla	r2, r2, r1, r6
 802bd08:	fb05 3101 	mla	r1, r5, r1, r3
 802bd0c:	b280      	uxth	r0, r0
 802bd0e:	b292      	uxth	r2, r2
 802bd10:	b289      	uxth	r1, r1
 802bd12:	1c43      	adds	r3, r0, #1
 802bd14:	1c4c      	adds	r4, r1, #1
 802bd16:	f102 0c01 	add.w	ip, r2, #1
 802bd1a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bd1e:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bd22:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802bd26:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bd2a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bd2e:	0952      	lsrs	r2, r2, #5
 802bd30:	4308      	orrs	r0, r1
 802bd32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bd36:	4302      	orrs	r2, r0
 802bd38:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bd3a:	8002      	strh	r2, [r0, #0]
 802bd3c:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802bd3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802bd40:	4490      	add	r8, r2
 802bd42:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bd44:	3302      	adds	r3, #2
 802bd46:	4491      	add	r9, r2
 802bd48:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802bd4a:	9309      	str	r3, [sp, #36]	@ 0x24
 802bd4c:	4293      	cmp	r3, r2
 802bd4e:	d021      	beq.n	802bd94 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802bd50:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802bd52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bd56:	ea4f 4228 	mov.w	r2, r8, asr #16
 802bd5a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802bd5e:	fb01 2303 	mla	r3, r1, r3, r2
 802bd62:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802bd64:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802bd66:	5cc2      	ldrb	r2, [r0, r3]
 802bd68:	f3c8 3403 	ubfx	r4, r8, #12, #4
 802bd6c:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802bd70:	4403      	add	r3, r0
 802bd72:	f3c9 3203 	ubfx	r2, r9, #12, #4
 802bd76:	0e38      	lsrs	r0, r7, #24
 802bd78:	2c00      	cmp	r4, #0
 802bd7a:	f47f aec2 	bne.w	802bb02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802bd7e:	2a00      	cmp	r2, #0
 802bd80:	f43f aed4 	beq.w	802bb2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bd84:	5c5b      	ldrb	r3, [r3, r1]
 802bd86:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802bd88:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802bd8c:	9314      	str	r3, [sp, #80]	@ 0x50
 802bd8e:	0e1b      	lsrs	r3, r3, #24
 802bd90:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bd92:	e6cb      	b.n	802bb2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bd94:	4693      	mov	fp, r2
 802bd96:	e651      	b.n	802ba3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bd98:	2b00      	cmp	r3, #0
 802bd9a:	f77f ae4f 	ble.w	802ba3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bd9e:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 802bda2:	ea4f 422a 	mov.w	r2, sl, asr #16
 802bda6:	ea4f 4129 	mov.w	r1, r9, asr #16
 802bdaa:	2a00      	cmp	r2, #0
 802bdac:	465f      	mov	r7, fp
 802bdae:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bdb2:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802bdb4:	e9dd 5b3d 	ldrd	r5, fp, [sp, #244]	@ 0xf4
 802bdb8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802bdbc:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802bdc0:	f2c0 815c 	blt.w	802c07c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bdc4:	1e73      	subs	r3, r6, #1
 802bdc6:	429a      	cmp	r2, r3
 802bdc8:	f280 8158 	bge.w	802c07c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bdcc:	2900      	cmp	r1, #0
 802bdce:	f2c0 8155 	blt.w	802c07c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bdd2:	f10c 33ff 	add.w	r3, ip, #4294967295
 802bdd6:	4299      	cmp	r1, r3
 802bdd8:	f280 8150 	bge.w	802c07c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bddc:	b233      	sxth	r3, r6
 802bdde:	fb01 2203 	mla	r2, r1, r3, r2
 802bde2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802bde4:	930f      	str	r3, [sp, #60]	@ 0x3c
 802bde6:	5c8b      	ldrb	r3, [r1, r2]
 802bde8:	440a      	add	r2, r1
 802bdea:	4616      	mov	r6, r2
 802bdec:	9210      	str	r2, [sp, #64]	@ 0x40
 802bdee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802bdf0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 802bdf4:	0e0b      	lsrs	r3, r1, #24
 802bdf6:	2800      	cmp	r0, #0
 802bdf8:	f000 816f 	beq.w	802c0da <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x762>
 802bdfc:	f896 c001 	ldrb.w	ip, [r6, #1]
 802be00:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802be04:	9224      	str	r2, [sp, #144]	@ 0x90
 802be06:	0e12      	lsrs	r2, r2, #24
 802be08:	921a      	str	r2, [sp, #104]	@ 0x68
 802be0a:	f1be 0f00 	cmp.w	lr, #0
 802be0e:	f040 8172 	bne.w	802c0f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802be12:	b280      	uxth	r0, r0
 802be14:	fa1f fc8e 	uxth.w	ip, lr
 802be18:	fb00 f20c 	mul.w	r2, r0, ip
 802be1c:	0106      	lsls	r6, r0, #4
 802be1e:	1ab0      	subs	r0, r6, r2
 802be20:	b280      	uxth	r0, r0
 802be22:	4686      	mov	lr, r0
 802be24:	900f      	str	r0, [sp, #60]	@ 0x3c
 802be26:	981a      	ldr	r0, [sp, #104]	@ 0x68
 802be28:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802be2c:	fb0e f000 	mul.w	r0, lr, r0
 802be30:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802be34:	fa1f fe8c 	uxth.w	lr, ip
 802be38:	eba6 060e 	sub.w	r6, r6, lr
 802be3c:	b2b6      	uxth	r6, r6
 802be3e:	fb06 0003 	mla	r0, r6, r3, r0
 802be42:	9610      	str	r6, [sp, #64]	@ 0x40
 802be44:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 802be46:	fb0e 0006 	mla	r0, lr, r6, r0
 802be4a:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 802be4c:	fb02 0006 	mla	r0, r2, r6, r0
 802be50:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802be54:	9017      	str	r0, [sp, #92]	@ 0x5c
 802be56:	2800      	cmp	r0, #0
 802be58:	f000 80fa 	beq.w	802c050 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802be5c:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802be60:	2bff      	cmp	r3, #255	@ 0xff
 802be62:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802be66:	9018      	str	r0, [sp, #96]	@ 0x60
 802be68:	911d      	str	r1, [sp, #116]	@ 0x74
 802be6a:	d01b      	beq.n	802bea4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802be6c:	fb01 f103 	mul.w	r1, r1, r3
 802be70:	fb00 f003 	mul.w	r0, r0, r3
 802be74:	460b      	mov	r3, r1
 802be76:	0a01      	lsrs	r1, r0, #8
 802be78:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 802be7c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802be80:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802be84:	4431      	add	r1, r6
 802be86:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802be8a:	0a09      	lsrs	r1, r1, #8
 802be8c:	0a1b      	lsrs	r3, r3, #8
 802be8e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802be92:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802be96:	430b      	orrs	r3, r1
 802be98:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802be9c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bea0:	9118      	str	r1, [sp, #96]	@ 0x60
 802bea2:	931d      	str	r3, [sp, #116]	@ 0x74
 802bea4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802bea6:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802bea8:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802beac:	2eff      	cmp	r6, #255	@ 0xff
 802beae:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802beb2:	931e      	str	r3, [sp, #120]	@ 0x78
 802beb4:	911f      	str	r1, [sp, #124]	@ 0x7c
 802beb6:	d01b      	beq.n	802bef0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x578>
 802beb8:	fb01 f106 	mul.w	r1, r1, r6
 802bebc:	fb03 f306 	mul.w	r3, r3, r6
 802bec0:	460e      	mov	r6, r1
 802bec2:	0a19      	lsrs	r1, r3, #8
 802bec4:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802bec8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802becc:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802bed0:	4401      	add	r1, r0
 802bed2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802bed6:	0a09      	lsrs	r1, r1, #8
 802bed8:	0a1b      	lsrs	r3, r3, #8
 802beda:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bede:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bee2:	4319      	orrs	r1, r3
 802bee4:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bee8:	931e      	str	r3, [sp, #120]	@ 0x78
 802beea:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 802beee:	931f      	str	r3, [sp, #124]	@ 0x7c
 802bef0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802bef2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bef6:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802befa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802befc:	9120      	str	r1, [sp, #128]	@ 0x80
 802befe:	2bff      	cmp	r3, #255	@ 0xff
 802bf00:	d01c      	beq.n	802bf3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802bf02:	fb01 f103 	mul.w	r1, r1, r3
 802bf06:	4608      	mov	r0, r1
 802bf08:	fb0c fc03 	mul.w	ip, ip, r3
 802bf0c:	0a09      	lsrs	r1, r1, #8
 802bf0e:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802bf12:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf16:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bf1a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802bf1e:	4408      	add	r0, r1
 802bf20:	0a00      	lsrs	r0, r0, #8
 802bf22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bf26:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bf2a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf2e:	ea40 0c0c 	orr.w	ip, r0, ip
 802bf32:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802bf36:	9320      	str	r3, [sp, #128]	@ 0x80
 802bf38:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf3c:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802bf3e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bf42:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802bf46:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802bf48:	9321      	str	r3, [sp, #132]	@ 0x84
 802bf4a:	29ff      	cmp	r1, #255	@ 0xff
 802bf4c:	d019      	beq.n	802bf82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802bf4e:	fb03 f301 	mul.w	r3, r3, r1
 802bf52:	fb06 f601 	mul.w	r6, r6, r1
 802bf56:	0a19      	lsrs	r1, r3, #8
 802bf58:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf5c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802bf60:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802bf64:	4419      	add	r1, r3
 802bf66:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802bf6a:	0a09      	lsrs	r1, r1, #8
 802bf6c:	0a36      	lsrs	r6, r6, #8
 802bf6e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf72:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bf76:	430e      	orrs	r6, r1
 802bf78:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802bf7c:	9321      	str	r3, [sp, #132]	@ 0x84
 802bf7e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bf82:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bf84:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802bf86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802bf88:	fb00 f001 	mul.w	r0, r0, r1
 802bf8c:	4601      	mov	r1, r0
 802bf8e:	3001      	adds	r0, #1
 802bf90:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802bf94:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 802bf98:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802bf9a:	9025      	str	r0, [sp, #148]	@ 0x94
 802bf9c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802bf9e:	fb00 f001 	mul.w	r0, r0, r1
 802bfa2:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bfa4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802bfa6:	fb00 f001 	mul.w	r0, r0, r1
 802bfaa:	9017      	str	r0, [sp, #92]	@ 0x5c
 802bfac:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802bfae:	4601      	mov	r1, r0
 802bfb0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802bfb2:	fb01 0003 	mla	r0, r1, r3, r0
 802bfb6:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bfb8:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802bfba:	4601      	mov	r1, r0
 802bfbc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bfbe:	fb01 0103 	mla	r1, r1, r3, r0
 802bfc2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802bfc4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802bfc6:	fb0c 110e 	mla	r1, ip, lr, r1
 802bfca:	fb03 000e 	mla	r0, r3, lr, r0
 802bfce:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802bfd0:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 802bfd4:	fb03 0002 	mla	r0, r3, r2, r0
 802bfd8:	fb06 1302 	mla	r3, r6, r2, r1
 802bfdc:	0a02      	lsrs	r2, r0, #8
 802bfde:	0a1b      	lsrs	r3, r3, #8
 802bfe0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802bfe4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bfe8:	4313      	orrs	r3, r2
 802bfea:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bfec:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802bff0:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bff4:	b2db      	uxtb	r3, r3
 802bff6:	8838      	ldrh	r0, [r7, #0]
 802bff8:	fb16 f602 	smulbb	r6, r6, r2
 802bffc:	fb1c fc02 	smulbb	ip, ip, r2
 802c000:	fb13 f302 	smulbb	r3, r3, r2
 802c004:	1201      	asrs	r1, r0, #8
 802c006:	10c2      	asrs	r2, r0, #3
 802c008:	00c0      	lsls	r0, r0, #3
 802c00a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c00e:	b2c0      	uxtb	r0, r0
 802c010:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c014:	fb01 cc0e 	mla	ip, r1, lr, ip
 802c018:	fb02 620e 	mla	r2, r2, lr, r6
 802c01c:	fb00 330e 	mla	r3, r0, lr, r3
 802c020:	b296      	uxth	r6, r2
 802c022:	b29b      	uxth	r3, r3
 802c024:	fa1f fc8c 	uxth.w	ip, ip
 802c028:	1c58      	adds	r0, r3, #1
 802c02a:	f10c 0201 	add.w	r2, ip, #1
 802c02e:	1c71      	adds	r1, r6, #1
 802c030:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802c034:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c038:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802c03c:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802c040:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c044:	094a      	lsrs	r2, r1, #5
 802c046:	4303      	orrs	r3, r0
 802c048:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c04c:	4313      	orrs	r3, r2
 802c04e:	803b      	strh	r3, [r7, #0]
 802c050:	f1b8 0f00 	cmp.w	r8, #0
 802c054:	f107 0702 	add.w	r7, r7, #2
 802c058:	44aa      	add	sl, r5
 802c05a:	44d9      	add	r9, fp
 802c05c:	dd2e      	ble.n	802c0bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802c05e:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802c062:	ea4f 422a 	mov.w	r2, sl, asr #16
 802c066:	2a00      	cmp	r2, #0
 802c068:	f108 38ff 	add.w	r8, r8, #4294967295
 802c06c:	ea4f 4129 	mov.w	r1, r9, asr #16
 802c070:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802c074:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802c078:	f6bf aea4 	bge.w	802bdc4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802c07c:	1c53      	adds	r3, r2, #1
 802c07e:	d4e7      	bmi.n	802c050 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c080:	42b3      	cmp	r3, r6
 802c082:	dce5      	bgt.n	802c050 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c084:	1c4b      	adds	r3, r1, #1
 802c086:	d4e3      	bmi.n	802c050 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c088:	4563      	cmp	r3, ip
 802c08a:	dce1      	bgt.n	802c050 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c08c:	fa0f f38c 	sxth.w	r3, ip
 802c090:	b236      	sxth	r6, r6
 802c092:	e9cd 6300 	strd	r6, r3, [sp]
 802c096:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802c098:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802c09c:	e9cd e305 	strd	lr, r3, [sp, #20]
 802c0a0:	9202      	str	r2, [sp, #8]
 802c0a2:	4639      	mov	r1, r7
 802c0a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802c0a6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c0a8:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802c0aa:	f7ff fab9 	bl	802b620 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802c0ae:	f1b8 0f00 	cmp.w	r8, #0
 802c0b2:	f107 0702 	add.w	r7, r7, #2
 802c0b6:	44aa      	add	sl, r5
 802c0b8:	44d9      	add	r9, fp
 802c0ba:	dcd0      	bgt.n	802c05e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e6>
 802c0bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c0be:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802c0c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802c0c6:	3301      	adds	r3, #1
 802c0c8:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c0cc:	e4b6      	b.n	802ba3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c0ce:	3b01      	subs	r3, #1
 802c0d0:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802c0d4:	930d      	str	r3, [sp, #52]	@ 0x34
 802c0d6:	4698      	mov	r8, r3
 802c0d8:	e667      	b.n	802bdaa <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802c0da:	f1be 0f00 	cmp.w	lr, #0
 802c0de:	f43f ae98 	beq.w	802be12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c0e2:	4632      	mov	r2, r6
 802c0e4:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c0e6:	5d92      	ldrb	r2, [r2, r6]
 802c0e8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c0ea:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802c0ee:	9226      	str	r2, [sp, #152]	@ 0x98
 802c0f0:	0e12      	lsrs	r2, r2, #24
 802c0f2:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c0f4:	e68d      	b.n	802be12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c0f6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c0f8:	eb06 0c02 	add.w	ip, r6, r2
 802c0fc:	4632      	mov	r2, r6
 802c0fe:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c100:	f89c c001 	ldrb.w	ip, [ip, #1]
 802c104:	5d92      	ldrb	r2, [r2, r6]
 802c106:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c108:	9210      	str	r2, [sp, #64]	@ 0x40
 802c10a:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802c10e:	920f      	str	r2, [sp, #60]	@ 0x3c
 802c110:	9227      	str	r2, [sp, #156]	@ 0x9c
 802c112:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c114:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 802c118:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c11a:	9626      	str	r6, [sp, #152]	@ 0x98
 802c11c:	0e12      	lsrs	r2, r2, #24
 802c11e:	921c      	str	r2, [sp, #112]	@ 0x70
 802c120:	0e32      	lsrs	r2, r6, #24
 802c122:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c124:	e675      	b.n	802be12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c126:	f43f ac89 	beq.w	802ba3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c12a:	1e65      	subs	r5, r4, #1
 802c12c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802c130:	e4c9      	b.n	802bac6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802c132:	bf00      	nop

0802c134 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802c134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c138:	b089      	sub	sp, #36	@ 0x24
 802c13a:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	@ 0x48
 802c13e:	880f      	ldrh	r7, [r1, #0]
 802c140:	e9dd 5014 	ldrd	r5, r0, [sp, #80]	@ 0x50
 802c144:	fb00 5408 	mla	r4, r0, r8, r5
 802c148:	9106      	str	r1, [sp, #24]
 802c14a:	10f9      	asrs	r1, r7, #3
 802c14c:	123e      	asrs	r6, r7, #8
 802c14e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802c152:	00ff      	lsls	r7, r7, #3
 802c154:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802c158:	9104      	str	r1, [sp, #16]
 802c15a:	2800      	cmp	r0, #0
 802c15c:	b2f9      	uxtb	r1, r7
 802c15e:	9105      	str	r1, [sp, #20]
 802c160:	9603      	str	r6, [sp, #12]
 802c162:	eb02 0704 	add.w	r7, r2, r4
 802c166:	f100 0c01 	add.w	ip, r0, #1
 802c16a:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802c16e:	f89d e058 	ldrb.w	lr, [sp, #88]	@ 0x58
 802c172:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802c176:	db02      	blt.n	802c17e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x4a>
 802c178:	4582      	cmp	sl, r0
 802c17a:	f300 8113 	bgt.w	802c3a4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802c17e:	2600      	movs	r6, #0
 802c180:	46b1      	mov	r9, r6
 802c182:	4630      	mov	r0, r6
 802c184:	4634      	mov	r4, r6
 802c186:	f1bc 0f00 	cmp.w	ip, #0
 802c18a:	db02      	blt.n	802c192 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5e>
 802c18c:	45e2      	cmp	sl, ip
 802c18e:	f300 8123 	bgt.w	802c3d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>
 802c192:	2700      	movs	r7, #0
 802c194:	46bc      	mov	ip, r7
 802c196:	463d      	mov	r5, r7
 802c198:	9702      	str	r7, [sp, #8]
 802c19a:	f1be 0f0f 	cmp.w	lr, #15
 802c19e:	f200 8160 	bhi.w	802c462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c1a2:	290f      	cmp	r1, #15
 802c1a4:	f200 815d 	bhi.w	802c462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c1a8:	b289      	uxth	r1, r1
 802c1aa:	fa1f f38e 	uxth.w	r3, lr
 802c1ae:	fb01 f803 	mul.w	r8, r1, r3
 802c1b2:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 802c1b6:	9200      	str	r2, [sp, #0]
 802c1b8:	9a02      	ldr	r2, [sp, #8]
 802c1ba:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802c1be:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c1c2:	b289      	uxth	r1, r1
 802c1c4:	9201      	str	r2, [sp, #4]
 802c1c6:	fb01 fa0c 	mul.w	sl, r1, ip
 802c1ca:	9a02      	ldr	r2, [sp, #8]
 802c1cc:	fb08 fb07 	mul.w	fp, r8, r7
 802c1d0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c1d4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c1d8:	9202      	str	r2, [sp, #8]
 802c1da:	011b      	lsls	r3, r3, #4
 802c1dc:	eba3 0e08 	sub.w	lr, r3, r8
 802c1e0:	fa1f fe8e 	uxth.w	lr, lr
 802c1e4:	fb0e f206 	mul.w	r2, lr, r6
 802c1e8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802c1ec:	1a5b      	subs	r3, r3, r1
 802c1ee:	b29b      	uxth	r3, r3
 802c1f0:	fb03 2209 	mla	r2, r3, r9, r2
 802c1f4:	4452      	add	r2, sl
 802c1f6:	445a      	add	r2, fp
 802c1f8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802c1fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802c200:	9207      	str	r2, [sp, #28]
 802c202:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c206:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c20a:	d019      	beq.n	802c240 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x10c>
 802c20c:	fb02 f209 	mul.w	r2, r2, r9
 802c210:	fb04 f409 	mul.w	r4, r4, r9
 802c214:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 802c218:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c21c:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802c220:	f504 7a80 	add.w	sl, r4, #256	@ 0x100
 802c224:	445a      	add	r2, fp
 802c226:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802c22a:	0a12      	lsrs	r2, r2, #8
 802c22c:	0a24      	lsrs	r4, r4, #8
 802c22e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c232:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c236:	4314      	orrs	r4, r2
 802c238:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c23c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c240:	2eff      	cmp	r6, #255	@ 0xff
 802c242:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c246:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c24a:	d01b      	beq.n	802c284 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 802c24c:	fb0a fa06 	mul.w	sl, sl, r6
 802c250:	fb00 f006 	mul.w	r0, r0, r6
 802c254:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802c258:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c25c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802c260:	f500 7980 	add.w	r9, r0, #256	@ 0x100
 802c264:	44da      	add	sl, fp
 802c266:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 802c26a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c26e:	0a00      	lsrs	r0, r0, #8
 802c270:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802c274:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c278:	ea4a 0000 	orr.w	r0, sl, r0
 802c27c:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c280:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c284:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802c288:	d020      	beq.n	802c2cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x198>
 802c28a:	9e01      	ldr	r6, [sp, #4]
 802c28c:	fb06 fb0c 	mul.w	fp, r6, ip
 802c290:	9e02      	ldr	r6, [sp, #8]
 802c292:	ea4f 291b 	mov.w	r9, fp, lsr #8
 802c296:	fb06 fc0c 	mul.w	ip, r6, ip
 802c29a:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802c29e:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
 802c2a2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c2a6:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802c2aa:	44cb      	add	fp, r9
 802c2ac:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c2b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c2b4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c2b8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c2bc:	ea4b 0c0c 	orr.w	ip, fp, ip
 802c2c0:	f00c 16ff 	and.w	r6, ip, #16711935	@ 0xff00ff
 802c2c4:	9601      	str	r6, [sp, #4]
 802c2c6:	f40c 467f 	and.w	r6, ip, #65280	@ 0xff00
 802c2ca:	9602      	str	r6, [sp, #8]
 802c2cc:	2fff      	cmp	r7, #255	@ 0xff
 802c2ce:	d01d      	beq.n	802c30c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1d8>
 802c2d0:	9e00      	ldr	r6, [sp, #0]
 802c2d2:	fb05 f507 	mul.w	r5, r5, r7
 802c2d6:	fb06 fb07 	mul.w	fp, r6, r7
 802c2da:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802c2de:	f505 7680 	add.w	r6, r5, #256	@ 0x100
 802c2e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802c2e6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c2ea:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 802c2ee:	44e3      	add	fp, ip
 802c2f0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c2f4:	0a2d      	lsrs	r5, r5, #8
 802c2f6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c2fa:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c2fe:	ea4b 0505 	orr.w	r5, fp, r5
 802c302:	f005 16ff 	and.w	r6, r5, #16711935	@ 0xff00ff
 802c306:	9600      	str	r6, [sp, #0]
 802c308:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c30c:	9e07      	ldr	r6, [sp, #28]
 802c30e:	fb0a fa0e 	mul.w	sl, sl, lr
 802c312:	43f7      	mvns	r7, r6
 802c314:	fb00 f00e 	mul.w	r0, r0, lr
 802c318:	fb02 aa03 	mla	sl, r2, r3, sl
 802c31c:	fb04 0003 	mla	r0, r4, r3, r0
 802c320:	9b01      	ldr	r3, [sp, #4]
 802c322:	b2ff      	uxtb	r7, r7
 802c324:	fb03 aa01 	mla	sl, r3, r1, sl
 802c328:	9b02      	ldr	r3, [sp, #8]
 802c32a:	fb03 0c01 	mla	ip, r3, r1, r0
 802c32e:	9b00      	ldr	r3, [sp, #0]
 802c330:	9803      	ldr	r0, [sp, #12]
 802c332:	fb03 aa08 	mla	sl, r3, r8, sl
 802c336:	9b05      	ldr	r3, [sp, #20]
 802c338:	9904      	ldr	r1, [sp, #16]
 802c33a:	fb03 f307 	mul.w	r3, r3, r7
 802c33e:	fb00 f007 	mul.w	r0, r0, r7
 802c342:	fb01 f107 	mul.w	r1, r1, r7
 802c346:	461f      	mov	r7, r3
 802c348:	fb05 c808 	mla	r8, r5, r8, ip
 802c34c:	ea4f 251a 	mov.w	r5, sl, lsr #8
 802c350:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802c354:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802c358:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802c35c:	ea45 0508 	orr.w	r5, r5, r8
 802c360:	f100 0c01 	add.w	ip, r0, #1
 802c364:	1c4e      	adds	r6, r1, #1
 802c366:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802c36a:	0c2c      	lsrs	r4, r5, #16
 802c36c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 802c370:	1c78      	adds	r0, r7, #1
 802c372:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802c376:	4b3e      	ldr	r3, [pc, #248]	@ (802c470 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x33c>)
 802c378:	eb04 241c 	add.w	r4, r4, ip, lsr #8
 802c37c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 802c380:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802c384:	b2ed      	uxtb	r5, r5
 802c386:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802c38a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 802c38e:	00d2      	lsls	r2, r2, #3
 802c390:	ea43 05d5 	orr.w	r5, r3, r5, lsr #3
 802c394:	f402 63fc 	and.w	r3, r2, #2016	@ 0x7e0
 802c398:	431d      	orrs	r5, r3
 802c39a:	9b06      	ldr	r3, [sp, #24]
 802c39c:	801d      	strh	r5, [r3, #0]
 802c39e:	b009      	add	sp, #36	@ 0x24
 802c3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c3a4:	2d00      	cmp	r5, #0
 802c3a6:	db01      	blt.n	802c3ac <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x278>
 802c3a8:	45a8      	cmp	r8, r5
 802c3aa:	dc41      	bgt.n	802c430 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2fc>
 802c3ac:	f04f 0900 	mov.w	r9, #0
 802c3b0:	464c      	mov	r4, r9
 802c3b2:	1c6a      	adds	r2, r5, #1
 802c3b4:	d42a      	bmi.n	802c40c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c3b6:	4590      	cmp	r8, r2
 802c3b8:	dd28      	ble.n	802c40c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c3ba:	f1be 0f00 	cmp.w	lr, #0
 802c3be:	d004      	beq.n	802c3ca <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x296>
 802c3c0:	787a      	ldrb	r2, [r7, #1]
 802c3c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802c3c6:	0e06      	lsrs	r6, r0, #24
 802c3c8:	e6dd      	b.n	802c186 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c3ca:	f1bc 0f00 	cmp.w	ip, #0
 802c3ce:	db40      	blt.n	802c452 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c3d0:	45e2      	cmp	sl, ip
 802c3d2:	dd3e      	ble.n	802c452 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c3d4:	4676      	mov	r6, lr
 802c3d6:	4670      	mov	r0, lr
 802c3d8:	b1d9      	cbz	r1, 802c412 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 802c3da:	2d00      	cmp	r5, #0
 802c3dc:	db31      	blt.n	802c442 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c3de:	45a8      	cmp	r8, r5
 802c3e0:	dd2f      	ble.n	802c442 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c3e2:	f817 2008 	ldrb.w	r2, [r7, r8]
 802c3e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802c3ea:	9202      	str	r2, [sp, #8]
 802c3ec:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802c3f0:	3501      	adds	r5, #1
 802c3f2:	d423      	bmi.n	802c43c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c3f4:	45a8      	cmp	r8, r5
 802c3f6:	dd21      	ble.n	802c43c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c3f8:	f1be 0f00 	cmp.w	lr, #0
 802c3fc:	d026      	beq.n	802c44c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>
 802c3fe:	44b8      	add	r8, r7
 802c400:	f898 5001 	ldrb.w	r5, [r8, #1]
 802c404:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 802c408:	0e2f      	lsrs	r7, r5, #24
 802c40a:	e6c6      	b.n	802c19a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c40c:	2600      	movs	r6, #0
 802c40e:	4630      	mov	r0, r6
 802c410:	e6b9      	b.n	802c186 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c412:	f1be 0f0f 	cmp.w	lr, #15
 802c416:	d824      	bhi.n	802c462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c418:	fa1f f38e 	uxth.w	r3, lr
 802c41c:	4688      	mov	r8, r1
 802c41e:	468b      	mov	fp, r1
 802c420:	468a      	mov	sl, r1
 802c422:	e9cd 1101 	strd	r1, r1, [sp, #4]
 802c426:	460d      	mov	r5, r1
 802c428:	9100      	str	r1, [sp, #0]
 802c42a:	460f      	mov	r7, r1
 802c42c:	468c      	mov	ip, r1
 802c42e:	e6d4      	b.n	802c1da <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802c430:	5d12      	ldrb	r2, [r2, r4]
 802c432:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802c436:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802c43a:	e7ba      	b.n	802c3b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27e>
 802c43c:	2700      	movs	r7, #0
 802c43e:	463d      	mov	r5, r7
 802c440:	e6ab      	b.n	802c19a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c442:	f04f 0c00 	mov.w	ip, #0
 802c446:	f8cd c008 	str.w	ip, [sp, #8]
 802c44a:	e7d1      	b.n	802c3f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2bc>
 802c44c:	4675      	mov	r5, lr
 802c44e:	4677      	mov	r7, lr
 802c450:	e6a7      	b.n	802c1a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c452:	4670      	mov	r0, lr
 802c454:	4675      	mov	r5, lr
 802c456:	f8cd e008 	str.w	lr, [sp, #8]
 802c45a:	4677      	mov	r7, lr
 802c45c:	46f4      	mov	ip, lr
 802c45e:	4676      	mov	r6, lr
 802c460:	e69f      	b.n	802c1a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c462:	4b04      	ldr	r3, [pc, #16]	@ (802c474 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x340>)
 802c464:	4a04      	ldr	r2, [pc, #16]	@ (802c478 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x344>)
 802c466:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802c46a:	4804      	ldr	r0, [pc, #16]	@ (802c47c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x348>)
 802c46c:	f006 f824 	bl	80324b8 <__assert_func>
 802c470:	fffff800 	.word	0xfffff800
 802c474:	0803666c 	.word	0x0803666c
 802c478:	08036ce8 	.word	0x08036ce8
 802c47c:	080367f4 	.word	0x080367f4

0802c480 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802c480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c484:	ed2d 8b08 	vpush	{d8-d11}
 802c488:	b0a3      	sub	sp, #140	@ 0x8c
 802c48a:	901e      	str	r0, [sp, #120]	@ 0x78
 802c48c:	9111      	str	r1, [sp, #68]	@ 0x44
 802c48e:	9215      	str	r2, [sp, #84]	@ 0x54
 802c490:	e9dd 4139 	ldrd	r4, r1, [sp, #228]	@ 0xe4
 802c494:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 802c496:	6860      	ldr	r0, [r4, #4]
 802c498:	e9dd 8b35 	ldrd	r8, fp, [sp, #212]	@ 0xd4
 802c49c:	fb00 1202 	mla	r2, r0, r2, r1
 802c4a0:	6820      	ldr	r0, [r4, #0]
 802c4a2:	46c1      	mov	r9, r8
 802c4a4:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 802c4a8:	46d8      	mov	r8, fp
 802c4aa:	eeb0 aa40 	vmov.f32	s20, s0
 802c4ae:	eef0 9a60 	vmov.f32	s19, s1
 802c4b2:	eeb0 9a41 	vmov.f32	s18, s2
 802c4b6:	eef0 8a62 	vmov.f32	s17, s5
 802c4ba:	eeb0 8a43 	vmov.f32	s16, s6
 802c4be:	eef0 ba44 	vmov.f32	s23, s8
 802c4c2:	eeb0 ba64 	vmov.f32	s22, s9
 802c4c6:	eef0 aa45 	vmov.f32	s21, s10
 802c4ca:	46d3      	mov	fp, sl
 802c4cc:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 802c4ce:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c4d0:	6849      	ldr	r1, [r1, #4]
 802c4d2:	6824      	ldr	r4, [r4, #0]
 802c4d4:	1d0a      	adds	r2, r1, #4
 802c4d6:	940e      	str	r4, [sp, #56]	@ 0x38
 802c4d8:	920b      	str	r2, [sp, #44]	@ 0x2c
 802c4da:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c4dc:	2a00      	cmp	r2, #0
 802c4de:	dc02      	bgt.n	802c4e6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802c4e0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c4e2:	2a00      	cmp	r2, #0
 802c4e4:	dd65      	ble.n	802c5b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c4e6:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802c4e8:	2b00      	cmp	r3, #0
 802c4ea:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802c4ee:	b234      	sxth	r4, r6
 802c4f0:	fa0f f78c 	sxth.w	r7, ip
 802c4f4:	f340 836d 	ble.w	802cbd2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802c4f8:	1e65      	subs	r5, r4, #1
 802c4fa:	f107 3eff 	add.w	lr, r7, #4294967295
 802c4fe:	f8cd c01c 	str.w	ip, [sp, #28]
 802c502:	e9dd ca37 	ldrd	ip, sl, [sp, #220]	@ 0xdc
 802c506:	ea5f 4229 	movs.w	r2, r9, asr #16
 802c50a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c50e:	d405      	bmi.n	802c51c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c510:	42aa      	cmp	r2, r5
 802c512:	da03      	bge.n	802c51c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c514:	2900      	cmp	r1, #0
 802c516:	db01      	blt.n	802c51c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c518:	4571      	cmp	r1, lr
 802c51a:	db4f      	blt.n	802c5bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802c51c:	1c50      	adds	r0, r2, #1
 802c51e:	d406      	bmi.n	802c52e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c520:	42a0      	cmp	r0, r4
 802c522:	dc04      	bgt.n	802c52e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c524:	1c48      	adds	r0, r1, #1
 802c526:	d402      	bmi.n	802c52e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c528:	42b8      	cmp	r0, r7
 802c52a:	f340 832f 	ble.w	802cb8c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802c52e:	3b01      	subs	r3, #1
 802c530:	44e1      	add	r9, ip
 802c532:	44d0      	add	r8, sl
 802c534:	f10b 0b02 	add.w	fp, fp, #2
 802c538:	d1e5      	bne.n	802c506 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802c53a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802c53c:	2b00      	cmp	r3, #0
 802c53e:	dd38      	ble.n	802c5b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c540:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c544:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802c548:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802c54c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802c550:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802c554:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802c558:	ee69 7a27 	vmul.f32	s15, s18, s15
 802c55c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802c560:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802c564:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c568:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c56c:	ee16 2a90 	vmov	r2, s13
 802c570:	3b01      	subs	r3, #1
 802c572:	9311      	str	r3, [sp, #68]	@ 0x44
 802c574:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c576:	fb92 f3f3 	sdiv	r3, r2, r3
 802c57a:	ee17 2a10 	vmov	r2, s14
 802c57e:	eeb0 7a48 	vmov.f32	s14, s16
 802c582:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c586:	ee17 8a10 	vmov	r8, s14
 802c58a:	eeb0 7a68 	vmov.f32	s14, s17
 802c58e:	9337      	str	r3, [sp, #220]	@ 0xdc
 802c590:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c592:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c596:	fb92 f3f3 	sdiv	r3, r2, r3
 802c59a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c59c:	9338      	str	r3, [sp, #224]	@ 0xe0
 802c59e:	ee17 9a10 	vmov	r9, s14
 802c5a2:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5a4:	eeb0 8a67 	vmov.f32	s16, s15
 802c5a8:	eef0 8a46 	vmov.f32	s17, s12
 802c5ac:	bf08      	it	eq
 802c5ae:	4613      	moveq	r3, r2
 802c5b0:	e793      	b.n	802c4da <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802c5b2:	b023      	add	sp, #140	@ 0x8c
 802c5b4:	ecbd 8b08 	vpop	{d8-d11}
 802c5b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c5bc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802c5c0:	f8cd b01c 	str.w	fp, [sp, #28]
 802c5c4:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 802c5c6:	1e59      	subs	r1, r3, #1
 802c5c8:	fb00 9201 	mla	r2, r0, r1, r9
 802c5cc:	1412      	asrs	r2, r2, #16
 802c5ce:	910c      	str	r1, [sp, #48]	@ 0x30
 802c5d0:	f100 815e 	bmi.w	802c890 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5d4:	42aa      	cmp	r2, r5
 802c5d6:	f280 815b 	bge.w	802c890 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5da:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c5dc:	fb02 8201 	mla	r2, r2, r1, r8
 802c5e0:	1412      	asrs	r2, r2, #16
 802c5e2:	f100 8155 	bmi.w	802c890 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5e6:	3f01      	subs	r7, #1
 802c5e8:	42ba      	cmp	r2, r7
 802c5ea:	f280 8151 	bge.w	802c890 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5ee:	2b00      	cmp	r3, #0
 802c5f0:	dda3      	ble.n	802c53a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c5f2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c5f6:	4621      	mov	r1, r4
 802c5f8:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 802c5fc:	f8cd 90d4 	str.w	r9, [sp, #212]	@ 0xd4
 802c600:	464a      	mov	r2, r9
 802c602:	464c      	mov	r4, r9
 802c604:	e122      	b.n	802c84c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802c606:	f893 c001 	ldrb.w	ip, [r3, #1]
 802c60a:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802c60e:	950f      	str	r5, [sp, #60]	@ 0x3c
 802c610:	0e2d      	lsrs	r5, r5, #24
 802c612:	9508      	str	r5, [sp, #32]
 802c614:	b162      	cbz	r2, 802c630 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c616:	185d      	adds	r5, r3, r1
 802c618:	786d      	ldrb	r5, [r5, #1]
 802c61a:	5c5b      	ldrb	r3, [r3, r1]
 802c61c:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802c620:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802c624:	9112      	str	r1, [sp, #72]	@ 0x48
 802c626:	9310      	str	r3, [sp, #64]	@ 0x40
 802c628:	0e09      	lsrs	r1, r1, #24
 802c62a:	0e1b      	lsrs	r3, r3, #24
 802c62c:	910a      	str	r1, [sp, #40]	@ 0x28
 802c62e:	9309      	str	r3, [sp, #36]	@ 0x24
 802c630:	b2a4      	uxth	r4, r4
 802c632:	b292      	uxth	r2, r2
 802c634:	fb04 f502 	mul.w	r5, r4, r2
 802c638:	0124      	lsls	r4, r4, #4
 802c63a:	1b66      	subs	r6, r4, r5
 802c63c:	9b08      	ldr	r3, [sp, #32]
 802c63e:	b2b6      	uxth	r6, r6
 802c640:	fb06 f103 	mul.w	r1, r6, r3
 802c644:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802c648:	b292      	uxth	r2, r2
 802c64a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802c64e:	1a9b      	subs	r3, r3, r2
 802c650:	b29b      	uxth	r3, r3
 802c652:	fb03 1100 	mla	r1, r3, r0, r1
 802c656:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802c658:	fb02 1104 	mla	r1, r2, r4, r1
 802c65c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c65e:	fb05 1104 	mla	r1, r5, r4, r1
 802c662:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802c666:	2900      	cmp	r1, #0
 802c668:	f000 80df 	beq.w	802c82a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802c66c:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802c670:	28ff      	cmp	r0, #255	@ 0xff
 802c672:	940c      	str	r4, [sp, #48]	@ 0x30
 802c674:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c678:	d01a      	beq.n	802c6b0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 802c67a:	fb04 f400 	mul.w	r4, r4, r0
 802c67e:	4627      	mov	r7, r4
 802c680:	fb09 fc00 	mul.w	ip, r9, r0
 802c684:	0a24      	lsrs	r4, r4, #8
 802c686:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c68a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c68e:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c692:	4427      	add	r7, r4
 802c694:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802c698:	0a3f      	lsrs	r7, r7, #8
 802c69a:	0a00      	lsrs	r0, r0, #8
 802c69c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c6a0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c6a4:	4307      	orrs	r7, r0
 802c6a6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802c6aa:	900c      	str	r0, [sp, #48]	@ 0x30
 802c6ac:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c6b0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c6b2:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802c6b6:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 802c6ba:	9808      	ldr	r0, [sp, #32]
 802c6bc:	28ff      	cmp	r0, #255	@ 0xff
 802c6be:	d01a      	beq.n	802c6f6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802c6c0:	fb07 f700 	mul.w	r7, r7, r0
 802c6c4:	fb0c fc00 	mul.w	ip, ip, r0
 802c6c8:	0a3c      	lsrs	r4, r7, #8
 802c6ca:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c6ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c6d2:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c6d6:	4427      	add	r7, r4
 802c6d8:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 802c6dc:	0a3f      	lsrs	r7, r7, #8
 802c6de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c6e2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c6e6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c6ea:	ea47 0c0c 	orr.w	ip, r7, ip
 802c6ee:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802c6f2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c6f6:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802c6f8:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802c6fc:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802c700:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802c702:	28ff      	cmp	r0, #255	@ 0xff
 802c704:	d01c      	beq.n	802c740 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 802c706:	fb0e fe00 	mul.w	lr, lr, r0
 802c70a:	fb0a fa00 	mul.w	sl, sl, r0
 802c70e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 802c712:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c716:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802c71a:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802c71e:	44a6      	add	lr, r4
 802c720:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802c724:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c728:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c72c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802c730:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c734:	ea4e 0a0a 	orr.w	sl, lr, sl
 802c738:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 802c73c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c740:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802c742:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802c746:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c74a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c74c:	2cff      	cmp	r4, #255	@ 0xff
 802c74e:	d01d      	beq.n	802c78c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802c750:	fb00 f004 	mul.w	r0, r0, r4
 802c754:	fb0b fb04 	mul.w	fp, fp, r4
 802c758:	0a04      	lsrs	r4, r0, #8
 802c75a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c75e:	9414      	str	r4, [sp, #80]	@ 0x50
 802c760:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802c764:	9413      	str	r4, [sp, #76]	@ 0x4c
 802c766:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802c768:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802c76c:	4420      	add	r0, r4
 802c76e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802c770:	0a00      	lsrs	r0, r0, #8
 802c772:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802c776:	0a24      	lsrs	r4, r4, #8
 802c778:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c77c:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c780:	ea40 0b0b 	orr.w	fp, r0, fp
 802c784:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802c788:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802c78c:	43c9      	mvns	r1, r1
 802c78e:	fb07 f706 	mul.w	r7, r7, r6
 802c792:	fb0c f606 	mul.w	r6, ip, r6
 802c796:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802c798:	fb09 6603 	mla	r6, r9, r3, r6
 802c79c:	fb04 7703 	mla	r7, r4, r3, r7
 802c7a0:	9b07      	ldr	r3, [sp, #28]
 802c7a2:	fb0e 7702 	mla	r7, lr, r2, r7
 802c7a6:	fb0a 6602 	mla	r6, sl, r2, r6
 802c7aa:	f8b3 e000 	ldrh.w	lr, [r3]
 802c7ae:	b2c9      	uxtb	r1, r1
 802c7b0:	ea4f 242e 	mov.w	r4, lr, asr #8
 802c7b4:	fb00 7005 	mla	r0, r0, r5, r7
 802c7b8:	fb0b 6605 	mla	r6, fp, r5, r6
 802c7bc:	ea4f 09ee 	mov.w	r9, lr, asr #3
 802c7c0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c7c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802c7c8:	fb04 f401 	mul.w	r4, r4, r1
 802c7cc:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802c7d0:	fa5f fe8e 	uxtb.w	lr, lr
 802c7d4:	fb09 f901 	mul.w	r9, r9, r1
 802c7d8:	fb0e f101 	mul.w	r1, lr, r1
 802c7dc:	0a00      	lsrs	r0, r0, #8
 802c7de:	0a36      	lsrs	r6, r6, #8
 802c7e0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c7e4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802c7e8:	1c62      	adds	r2, r4, #1
 802c7ea:	ea40 0306 	orr.w	r3, r0, r6
 802c7ee:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c7f2:	f109 0001 	add.w	r0, r9, #1
 802c7f6:	1c4a      	adds	r2, r1, #1
 802c7f8:	0c1e      	lsrs	r6, r3, #16
 802c7fa:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802c7fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802c802:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 802c806:	4a21      	ldr	r2, [pc, #132]	@ (802c88c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>)
 802c808:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802c80c:	b2db      	uxtb	r3, r3
 802c80e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802c812:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802c816:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 802c81a:	00c0      	lsls	r0, r0, #3
 802c81c:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 802c820:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802c824:	9b07      	ldr	r3, [sp, #28]
 802c826:	4320      	orrs	r0, r4
 802c828:	8018      	strh	r0, [r3, #0]
 802c82a:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c82c:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 802c82e:	9b07      	ldr	r3, [sp, #28]
 802c830:	440a      	add	r2, r1
 802c832:	9235      	str	r2, [sp, #212]	@ 0xd4
 802c834:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c836:	3302      	adds	r3, #2
 802c838:	4490      	add	r8, r2
 802c83a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802c83c:	9307      	str	r3, [sp, #28]
 802c83e:	4293      	cmp	r3, r2
 802c840:	d022      	beq.n	802c888 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 802c842:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802c844:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c846:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802c84a:	9c35      	ldr	r4, [sp, #212]	@ 0xd4
 802c84c:	1412      	asrs	r2, r2, #16
 802c84e:	ea4f 4328 	mov.w	r3, r8, asr #16
 802c852:	fb01 2303 	mla	r3, r1, r3, r2
 802c856:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802c858:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802c85a:	5cc2      	ldrb	r2, [r0, r3]
 802c85c:	f3c4 3403 	ubfx	r4, r4, #12, #4
 802c860:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802c864:	4403      	add	r3, r0
 802c866:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802c86a:	0e38      	lsrs	r0, r7, #24
 802c86c:	2c00      	cmp	r4, #0
 802c86e:	f47f aeca 	bne.w	802c606 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802c872:	2a00      	cmp	r2, #0
 802c874:	f43f aedc 	beq.w	802c630 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c878:	5c5b      	ldrb	r3, [r3, r1]
 802c87a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c87c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802c880:	9310      	str	r3, [sp, #64]	@ 0x40
 802c882:	0e1b      	lsrs	r3, r3, #24
 802c884:	9309      	str	r3, [sp, #36]	@ 0x24
 802c886:	e6d3      	b.n	802c630 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c888:	4693      	mov	fp, r2
 802c88a:	e656      	b.n	802c53a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c88c:	fffff800 	.word	0xfffff800
 802c890:	2b00      	cmp	r3, #0
 802c892:	f77f ae52 	ble.w	802c53a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c896:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802c89a:	ea4f 4229 	mov.w	r2, r9, asr #16
 802c89e:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c8a2:	2a00      	cmp	r2, #0
 802c8a4:	465f      	mov	r7, fp
 802c8a6:	f8cd b01c 	str.w	fp, [sp, #28]
 802c8aa:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c8ac:	e9dd b337 	ldrd	fp, r3, [sp, #220]	@ 0xdc
 802c8b0:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802c8b4:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802c8b8:	f2c0 8147 	blt.w	802cb4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c8bc:	1e73      	subs	r3, r6, #1
 802c8be:	429a      	cmp	r2, r3
 802c8c0:	f280 8143 	bge.w	802cb4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c8c4:	2900      	cmp	r1, #0
 802c8c6:	f2c0 8140 	blt.w	802cb4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c8ca:	f10c 33ff 	add.w	r3, ip, #4294967295
 802c8ce:	4299      	cmp	r1, r3
 802c8d0:	f280 813b 	bge.w	802cb4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c8d4:	b236      	sxth	r6, r6
 802c8d6:	fb01 2106 	mla	r1, r1, r6, r2
 802c8da:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c8dc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802c8de:	5c53      	ldrb	r3, [r2, r1]
 802c8e0:	4411      	add	r1, r2
 802c8e2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 802c8e6:	910d      	str	r1, [sp, #52]	@ 0x34
 802c8e8:	0e13      	lsrs	r3, r2, #24
 802c8ea:	2800      	cmp	r0, #0
 802c8ec:	f000 8154 	beq.w	802cb98 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802c8f0:	f891 c001 	ldrb.w	ip, [r1, #1]
 802c8f4:	9513      	str	r5, [sp, #76]	@ 0x4c
 802c8f6:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 802c8fa:	911f      	str	r1, [sp, #124]	@ 0x7c
 802c8fc:	0e09      	lsrs	r1, r1, #24
 802c8fe:	9116      	str	r1, [sp, #88]	@ 0x58
 802c900:	f1be 0f00 	cmp.w	lr, #0
 802c904:	f040 8153 	bne.w	802cbae <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 802c908:	b286      	uxth	r6, r0
 802c90a:	fa1f fc8e 	uxth.w	ip, lr
 802c90e:	fb06 f00c 	mul.w	r0, r6, ip
 802c912:	0136      	lsls	r6, r6, #4
 802c914:	1a31      	subs	r1, r6, r0
 802c916:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802c918:	b289      	uxth	r1, r1
 802c91a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802c91e:	9113      	str	r1, [sp, #76]	@ 0x4c
 802c920:	fb01 f105 	mul.w	r1, r1, r5
 802c924:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802c928:	fa1f f58c 	uxth.w	r5, ip
 802c92c:	1b76      	subs	r6, r6, r5
 802c92e:	b2b6      	uxth	r6, r6
 802c930:	fb06 1c03 	mla	ip, r6, r3, r1
 802c934:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802c936:	9514      	str	r5, [sp, #80]	@ 0x50
 802c938:	fb05 cc01 	mla	ip, r5, r1, ip
 802c93c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802c93e:	9619      	str	r6, [sp, #100]	@ 0x64
 802c940:	fb00 cc01 	mla	ip, r0, r1, ip
 802c944:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802c948:	f1bc 0f00 	cmp.w	ip, #0
 802c94c:	f000 80e6 	beq.w	802cb1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802c950:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 802c954:	2bff      	cmp	r3, #255	@ 0xff
 802c956:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c95a:	911a      	str	r1, [sp, #104]	@ 0x68
 802c95c:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c95e:	d01b      	beq.n	802c998 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802c960:	fb02 f203 	mul.w	r2, r2, r3
 802c964:	fb01 f103 	mul.w	r1, r1, r3
 802c968:	4613      	mov	r3, r2
 802c96a:	0a0a      	lsrs	r2, r1, #8
 802c96c:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 802c970:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c974:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 802c978:	4432      	add	r2, r6
 802c97a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802c97e:	0a12      	lsrs	r2, r2, #8
 802c980:	0a1b      	lsrs	r3, r3, #8
 802c982:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c986:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c98a:	4313      	orrs	r3, r2
 802c98c:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802c990:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c994:	921a      	str	r2, [sp, #104]	@ 0x68
 802c996:	931b      	str	r3, [sp, #108]	@ 0x6c
 802c998:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c99a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802c99c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802c9a0:	2aff      	cmp	r2, #255	@ 0xff
 802c9a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9a6:	931c      	str	r3, [sp, #112]	@ 0x70
 802c9a8:	d01b      	beq.n	802c9e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 802c9aa:	fb03 f302 	mul.w	r3, r3, r2
 802c9ae:	461e      	mov	r6, r3
 802c9b0:	fb01 f102 	mul.w	r1, r1, r2
 802c9b4:	0a0a      	lsrs	r2, r1, #8
 802c9b6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9ba:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 802c9be:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802c9c2:	440a      	add	r2, r1
 802c9c4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802c9c8:	0a12      	lsrs	r2, r2, #8
 802c9ca:	0a1b      	lsrs	r3, r3, #8
 802c9cc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9d0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9d4:	ea42 0603 	orr.w	r6, r2, r3
 802c9d8:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802c9dc:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 802c9e0:	931c      	str	r3, [sp, #112]	@ 0x70
 802c9e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c9e4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802c9e6:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802c9ea:	2aff      	cmp	r2, #255	@ 0xff
 802c9ec:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9f0:	931d      	str	r3, [sp, #116]	@ 0x74
 802c9f2:	d01b      	beq.n	802ca2c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 802c9f4:	fb03 f302 	mul.w	r3, r3, r2
 802c9f8:	fb06 f602 	mul.w	r6, r6, r2
 802c9fc:	461a      	mov	r2, r3
 802c9fe:	0a33      	lsrs	r3, r6, #8
 802ca00:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802ca04:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ca08:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802ca0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802ca10:	4476      	add	r6, lr
 802ca12:	0a36      	lsrs	r6, r6, #8
 802ca14:	0a1b      	lsrs	r3, r3, #8
 802ca16:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802ca1a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca1e:	ea46 0203 	orr.w	r2, r6, r3
 802ca22:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 802ca26:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802ca2a:	931d      	str	r3, [sp, #116]	@ 0x74
 802ca2c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802ca2e:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802ca32:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802ca36:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802ca38:	930d      	str	r3, [sp, #52]	@ 0x34
 802ca3a:	2aff      	cmp	r2, #255	@ 0xff
 802ca3c:	d01b      	beq.n	802ca76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 802ca3e:	fb03 f302 	mul.w	r3, r3, r2
 802ca42:	fb0e fe02 	mul.w	lr, lr, r2
 802ca46:	0a1a      	lsrs	r2, r3, #8
 802ca48:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca4c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802ca50:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 802ca54:	441a      	add	r2, r3
 802ca56:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802ca5a:	0a12      	lsrs	r2, r2, #8
 802ca5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ca60:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca64:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ca68:	ea42 0e0e 	orr.w	lr, r2, lr
 802ca6c:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802ca70:	930d      	str	r3, [sp, #52]	@ 0x34
 802ca72:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ca76:	ea6f 0c0c 	mvn.w	ip, ip
 802ca7a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802ca7c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802ca7e:	fb01 f305 	mul.w	r3, r1, r5
 802ca82:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802ca84:	fa5f fc8c 	uxtb.w	ip, ip
 802ca88:	fb01 f105 	mul.w	r1, r1, r5
 802ca8c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802ca8e:	fb02 3305 	mla	r3, r2, r5, r3
 802ca92:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802ca94:	fb02 1105 	mla	r1, r2, r5, r1
 802ca98:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ca9a:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802ca9c:	fb06 3605 	mla	r6, r6, r5, r3
 802caa0:	fb02 1205 	mla	r2, r2, r5, r1
 802caa4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802caa6:	8839      	ldrh	r1, [r7, #0]
 802caa8:	fb03 6300 	mla	r3, r3, r0, r6
 802caac:	fb0e 2e00 	mla	lr, lr, r0, r2
 802cab0:	10c8      	asrs	r0, r1, #3
 802cab2:	120a      	asrs	r2, r1, #8
 802cab4:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 802cab8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802cabc:	00c9      	lsls	r1, r1, #3
 802cabe:	fb02 f20c 	mul.w	r2, r2, ip
 802cac2:	fb06 f60c 	mul.w	r6, r6, ip
 802cac6:	b2c9      	uxtb	r1, r1
 802cac8:	fb01 f00c 	mul.w	r0, r1, ip
 802cacc:	0a1b      	lsrs	r3, r3, #8
 802cace:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802cad2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802cad6:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802cada:	430b      	orrs	r3, r1
 802cadc:	f106 0e01 	add.w	lr, r6, #1
 802cae0:	1c51      	adds	r1, r2, #1
 802cae2:	0c1d      	lsrs	r5, r3, #16
 802cae4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802cae8:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802caec:	f3c3 2107 	ubfx	r1, r3, #8, #8
 802caf0:	fa5f fe83 	uxtb.w	lr, r3
 802caf4:	f100 0c01 	add.w	ip, r0, #1
 802caf8:	4b39      	ldr	r3, [pc, #228]	@ (802cbe0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>)
 802cafa:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802cafe:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802cb02:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802cb06:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802cb0a:	00c9      	lsls	r1, r1, #3
 802cb0c:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 802cb10:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 802cb14:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802cb18:	4313      	orrs	r3, r2
 802cb1a:	803b      	strh	r3, [r7, #0]
 802cb1c:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802cb1e:	f1ba 0f00 	cmp.w	sl, #0
 802cb22:	f107 0702 	add.w	r7, r7, #2
 802cb26:	44d9      	add	r9, fp
 802cb28:	4498      	add	r8, r3
 802cb2a:	dd26      	ble.n	802cb7a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802cb2c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802cb30:	ea4f 4229 	mov.w	r2, r9, asr #16
 802cb34:	2a00      	cmp	r2, #0
 802cb36:	f10a 3aff 	add.w	sl, sl, #4294967295
 802cb3a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802cb3e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802cb42:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802cb46:	f6bf aeb9 	bge.w	802c8bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802cb4a:	1c53      	adds	r3, r2, #1
 802cb4c:	d4e6      	bmi.n	802cb1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb4e:	42b3      	cmp	r3, r6
 802cb50:	dce4      	bgt.n	802cb1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb52:	1c4b      	adds	r3, r1, #1
 802cb54:	d4e2      	bmi.n	802cb1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb56:	4563      	cmp	r3, ip
 802cb58:	dce0      	bgt.n	802cb1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb5a:	fa0f f38c 	sxth.w	r3, ip
 802cb5e:	b236      	sxth	r6, r6
 802cb60:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802cb64:	e9cd 6300 	strd	r6, r3, [sp]
 802cb68:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802cb6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802cb6e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802cb70:	4639      	mov	r1, r7
 802cb72:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802cb74:	f7ff fade 	bl	802c134 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802cb78:	e7d0      	b.n	802cb1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb7a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802cb7c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802cb80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802cb84:	3301      	adds	r3, #1
 802cb86:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802cb8a:	e4d6      	b.n	802c53a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cb8c:	3b01      	subs	r3, #1
 802cb8e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802cb92:	930c      	str	r3, [sp, #48]	@ 0x30
 802cb94:	469a      	mov	sl, r3
 802cb96:	e684      	b.n	802c8a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x422>
 802cb98:	f1be 0f00 	cmp.w	lr, #0
 802cb9c:	f43f aeb4 	beq.w	802c908 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cba0:	5d89      	ldrb	r1, [r1, r6]
 802cba2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cba6:	9120      	str	r1, [sp, #128]	@ 0x80
 802cba8:	0e09      	lsrs	r1, r1, #24
 802cbaa:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cbac:	e6ac      	b.n	802c908 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cbae:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802cbb0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cbb2:	eb01 0c06 	add.w	ip, r1, r6
 802cbb6:	f89c c001 	ldrb.w	ip, [ip, #1]
 802cbba:	5d89      	ldrb	r1, [r1, r6]
 802cbbc:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 802cbc0:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cbc4:	0e35      	lsrs	r5, r6, #24
 802cbc6:	9120      	str	r1, [sp, #128]	@ 0x80
 802cbc8:	0e09      	lsrs	r1, r1, #24
 802cbca:	9621      	str	r6, [sp, #132]	@ 0x84
 802cbcc:	9518      	str	r5, [sp, #96]	@ 0x60
 802cbce:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cbd0:	e69a      	b.n	802c908 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cbd2:	f43f acb2 	beq.w	802c53a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cbd6:	1e65      	subs	r5, r4, #1
 802cbd8:	f8cd b01c 	str.w	fp, [sp, #28]
 802cbdc:	e4f2      	b.n	802c5c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802cbde:	bf00      	nop
 802cbe0:	fffff800 	.word	0xfffff800

0802cbe4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 802cbe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cbe8:	b08b      	sub	sp, #44	@ 0x2c
 802cbea:	f89d 0068 	ldrb.w	r0, [sp, #104]	@ 0x68
 802cbee:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 802cbf2:	ea6f 0b00 	mvn.w	fp, r0
 802cbf6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802cbf8:	f9bd 5050 	ldrsh.w	r5, [sp, #80]	@ 0x50
 802cbfc:	9005      	str	r0, [sp, #20]
 802cbfe:	fb0c 4805 	mla	r8, ip, r5, r4
 802cc02:	7848      	ldrb	r0, [r1, #1]
 802cc04:	788e      	ldrb	r6, [r1, #2]
 802cc06:	0204      	lsls	r4, r0, #8
 802cc08:	780f      	ldrb	r7, [r1, #0]
 802cc0a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 802cc0e:	9306      	str	r3, [sp, #24]
 802cc10:	fa5f f38b 	uxtb.w	r3, fp
 802cc14:	433c      	orrs	r4, r7
 802cc16:	9304      	str	r3, [sp, #16]
 802cc18:	f1bc 0f00 	cmp.w	ip, #0
 802cc1c:	eb02 0308 	add.w	r3, r2, r8
 802cc20:	9003      	str	r0, [sp, #12]
 802cc22:	9602      	str	r6, [sp, #8]
 802cc24:	9307      	str	r3, [sp, #28]
 802cc26:	9409      	str	r4, [sp, #36]	@ 0x24
 802cc28:	f10c 0601 	add.w	r6, ip, #1
 802cc2c:	f9bd e054 	ldrsh.w	lr, [sp, #84]	@ 0x54
 802cc30:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 802cc34:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802cc38:	db02      	blt.n	802cc40 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x5c>
 802cc3a:	45e6      	cmp	lr, ip
 802cc3c:	f300 80a0 	bgt.w	802cd80 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x19c>
 802cc40:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cc44:	46e0      	mov	r8, ip
 802cc46:	fa5f fb84 	uxtb.w	fp, r4
 802cc4a:	f8cd b004 	str.w	fp, [sp, #4]
 802cc4e:	2e00      	cmp	r6, #0
 802cc50:	db01      	blt.n	802cc56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cc52:	45b6      	cmp	lr, r6
 802cc54:	dc73      	bgt.n	802cd3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x15a>
 802cc56:	fa5f fa84 	uxtb.w	sl, r4
 802cc5a:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cc5e:	4654      	mov	r4, sl
 802cc60:	46f1      	mov	r9, lr
 802cc62:	2b0f      	cmp	r3, #15
 802cc64:	f200 80cb 	bhi.w	802cdfe <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cc68:	280f      	cmp	r0, #15
 802cc6a:	f200 80c8 	bhi.w	802cdfe <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cc6e:	b29b      	uxth	r3, r3
 802cc70:	b280      	uxth	r0, r0
 802cc72:	fb03 f600 	mul.w	r6, r3, r0
 802cc76:	011b      	lsls	r3, r3, #4
 802cc78:	1b9d      	subs	r5, r3, r6
 802cc7a:	9a01      	ldr	r2, [sp, #4]
 802cc7c:	b2ad      	uxth	r5, r5
 802cc7e:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802cc82:	fb05 f202 	mul.w	r2, r5, r2
 802cc86:	b280      	uxth	r0, r0
 802cc88:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802cc8c:	1a1b      	subs	r3, r3, r0
 802cc8e:	b29b      	uxth	r3, r3
 802cc90:	fb03 220b 	mla	r2, r3, fp, r2
 802cc94:	fb00 2a0a 	mla	sl, r0, sl, r2
 802cc98:	f8bd b010 	ldrh.w	fp, [sp, #16]
 802cc9c:	fb06 a404 	mla	r4, r6, r4, sl
 802cca0:	fb17 f70b 	smulbb	r7, r7, fp
 802cca4:	f8bd a014 	ldrh.w	sl, [sp, #20]
 802cca8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802ccac:	fb04 770a 	mla	r7, r4, sl, r7
 802ccb0:	b2bf      	uxth	r7, r7
 802ccb2:	1c7a      	adds	r2, r7, #1
 802ccb4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802ccb8:	123f      	asrs	r7, r7, #8
 802ccba:	700f      	strb	r7, [r1, #0]
 802ccbc:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802ccc0:	f898 7001 	ldrb.w	r7, [r8, #1]
 802ccc4:	fb05 f204 	mul.w	r2, r5, r4
 802ccc8:	fb03 2407 	mla	r4, r3, r7, r2
 802cccc:	f899 2001 	ldrb.w	r2, [r9, #1]
 802ccd0:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802ccd4:	fb00 4202 	mla	r2, r0, r2, r4
 802ccd8:	9c03      	ldr	r4, [sp, #12]
 802ccda:	fb06 2207 	mla	r2, r6, r7, r2
 802ccde:	fb14 f40b 	smulbb	r4, r4, fp
 802cce2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802cce6:	fb02 420a 	mla	r2, r2, sl, r4
 802ccea:	b292      	uxth	r2, r2
 802ccec:	1c54      	adds	r4, r2, #1
 802ccee:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802ccf2:	1212      	asrs	r2, r2, #8
 802ccf4:	704a      	strb	r2, [r1, #1]
 802ccf6:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802ccfa:	f898 2002 	ldrb.w	r2, [r8, #2]
 802ccfe:	fb05 f504 	mul.w	r5, r5, r4
 802cd02:	fb03 5502 	mla	r5, r3, r2, r5
 802cd06:	f899 4002 	ldrb.w	r4, [r9, #2]
 802cd0a:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802cd0e:	fb00 5004 	mla	r0, r0, r4, r5
 802cd12:	9b02      	ldr	r3, [sp, #8]
 802cd14:	fb06 0602 	mla	r6, r6, r2, r0
 802cd18:	fb13 fb0b 	smulbb	fp, r3, fp
 802cd1c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802cd20:	fb06 ba0a 	mla	sl, r6, sl, fp
 802cd24:	fa1f fa8a 	uxth.w	sl, sl
 802cd28:	f10a 0b01 	add.w	fp, sl, #1
 802cd2c:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802cd30:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802cd34:	f881 a002 	strb.w	sl, [r1, #2]
 802cd38:	b00b      	add	sp, #44	@ 0x2c
 802cd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cd3e:	2800      	cmp	r0, #0
 802cd40:	d089      	beq.n	802cc56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cd42:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 802cd44:	2e00      	cmp	r6, #0
 802cd46:	db47      	blt.n	802cdd8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd48:	42b5      	cmp	r5, r6
 802cd4a:	dd45      	ble.n	802cdd8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd4c:	9a07      	ldr	r2, [sp, #28]
 802cd4e:	f812 9005 	ldrb.w	r9, [r2, r5]
 802cd52:	9a06      	ldr	r2, [sp, #24]
 802cd54:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802cd58:	4491      	add	r9, r2
 802cd5a:	3601      	adds	r6, #1
 802cd5c:	f899 a000 	ldrb.w	sl, [r9]
 802cd60:	d436      	bmi.n	802cdd0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cd62:	42b5      	cmp	r5, r6
 802cd64:	dd34      	ble.n	802cdd0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cd66:	2b00      	cmp	r3, #0
 802cd68:	d045      	beq.n	802cdf6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x212>
 802cd6a:	9a07      	ldr	r2, [sp, #28]
 802cd6c:	442a      	add	r2, r5
 802cd6e:	f892 e001 	ldrb.w	lr, [r2, #1]
 802cd72:	9a06      	ldr	r2, [sp, #24]
 802cd74:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802cd78:	f812 400e 	ldrb.w	r4, [r2, lr]
 802cd7c:	4496      	add	lr, r2
 802cd7e:	e770      	b.n	802cc62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802cd80:	4691      	mov	r9, r2
 802cd82:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cd84:	2a00      	cmp	r2, #0
 802cd86:	db01      	blt.n	802cd8c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1a8>
 802cd88:	4295      	cmp	r5, r2
 802cd8a:	dc19      	bgt.n	802cdc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1dc>
 802cd8c:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 802cd90:	3201      	adds	r2, #1
 802cd92:	f898 b000 	ldrb.w	fp, [r8]
 802cd96:	d40e      	bmi.n	802cdb6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cd98:	4295      	cmp	r5, r2
 802cd9a:	dd0c      	ble.n	802cdb6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cd9c:	b1fb      	cbz	r3, 802cdde <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1fa>
 802cd9e:	9a07      	ldr	r2, [sp, #28]
 802cda0:	f892 c001 	ldrb.w	ip, [r2, #1]
 802cda4:	9a06      	ldr	r2, [sp, #24]
 802cda6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802cdaa:	f812 200c 	ldrb.w	r2, [r2, ip]
 802cdae:	9201      	str	r2, [sp, #4]
 802cdb0:	9a06      	ldr	r2, [sp, #24]
 802cdb2:	4494      	add	ip, r2
 802cdb4:	e74b      	b.n	802cc4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802cdb6:	b2e2      	uxtb	r2, r4
 802cdb8:	9201      	str	r2, [sp, #4]
 802cdba:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cdbe:	e746      	b.n	802cc4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802cdc0:	f819 8008 	ldrb.w	r8, [r9, r8]
 802cdc4:	9a06      	ldr	r2, [sp, #24]
 802cdc6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802cdca:	4490      	add	r8, r2
 802cdcc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cdce:	e7df      	b.n	802cd90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ac>
 802cdd0:	b2e4      	uxtb	r4, r4
 802cdd2:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cdd6:	e744      	b.n	802cc62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802cdd8:	f10d 0924 	add.w	r9, sp, #36	@ 0x24
 802cddc:	e7bd      	b.n	802cd5a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x176>
 802cdde:	b2e2      	uxtb	r2, r4
 802cde0:	2e00      	cmp	r6, #0
 802cde2:	9201      	str	r2, [sp, #4]
 802cde4:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cde8:	f6bf af33 	bge.w	802cc52 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6e>
 802cdec:	46e6      	mov	lr, ip
 802cdee:	46e1      	mov	r9, ip
 802cdf0:	4692      	mov	sl, r2
 802cdf2:	4614      	mov	r4, r2
 802cdf4:	e738      	b.n	802cc68 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802cdf6:	b2e4      	uxtb	r4, r4
 802cdf8:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cdfc:	e734      	b.n	802cc68 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802cdfe:	4b03      	ldr	r3, [pc, #12]	@ (802ce0c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x228>)
 802ce00:	4a03      	ldr	r2, [pc, #12]	@ (802ce10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x22c>)
 802ce02:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ce06:	4803      	ldr	r0, [pc, #12]	@ (802ce14 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x230>)
 802ce08:	f005 fb56 	bl	80324b8 <__assert_func>
 802ce0c:	0803666c 	.word	0x0803666c
 802ce10:	08036ce8 	.word	0x08036ce8
 802ce14:	080367f4 	.word	0x080367f4

0802ce18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ce18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ce1c:	ed2d 8b08 	vpush	{d8-d11}
 802ce20:	b097      	sub	sp, #92	@ 0x5c
 802ce22:	f89d 60c4 	ldrb.w	r6, [sp, #196]	@ 0xc4
 802ce26:	eeb0 aa40 	vmov.f32	s20, s0
 802ce2a:	e9dd b729 	ldrd	fp, r7, [sp, #164]	@ 0xa4
 802ce2e:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 802ce32:	43f0      	mvns	r0, r6
 802ce34:	eef0 9a60 	vmov.f32	s19, s1
 802ce38:	eeb0 9a41 	vmov.f32	s18, s2
 802ce3c:	eef0 8a62 	vmov.f32	s17, s5
 802ce40:	eeb0 8a43 	vmov.f32	s16, s6
 802ce44:	eef0 ba44 	vmov.f32	s23, s8
 802ce48:	eeb0 ba64 	vmov.f32	s22, s9
 802ce4c:	eef0 aa45 	vmov.f32	s21, s10
 802ce50:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ce54:	e9dd 512d 	ldrd	r5, r1, [sp, #180]	@ 0xb4
 802ce58:	461a      	mov	r2, r3
 802ce5a:	686c      	ldr	r4, [r5, #4]
 802ce5c:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802ce5e:	f8dd 90ac 	ldr.w	r9, [sp, #172]	@ 0xac
 802ce62:	fb04 1303 	mla	r3, r4, r3, r1
 802ce66:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
 802ce68:	6829      	ldr	r1, [r5, #0]
 802ce6a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ce6e:	6865      	ldr	r5, [r4, #4]
 802ce70:	eb01 0a03 	add.w	sl, r1, r3
 802ce74:	b2c3      	uxtb	r3, r0
 802ce76:	6824      	ldr	r4, [r4, #0]
 802ce78:	9309      	str	r3, [sp, #36]	@ 0x24
 802ce7a:	1d2b      	adds	r3, r5, #4
 802ce7c:	930a      	str	r3, [sp, #40]	@ 0x28
 802ce7e:	b2b3      	uxth	r3, r6
 802ce80:	940d      	str	r4, [sp, #52]	@ 0x34
 802ce82:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ce84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ce86:	2b00      	cmp	r3, #0
 802ce88:	dc02      	bgt.n	802ce90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802ce8a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802ce8c:	2b00      	cmp	r3, #0
 802ce8e:	dd63      	ble.n	802cf58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ce90:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802ce92:	2a00      	cmp	r2, #0
 802ce94:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802ce98:	b234      	sxth	r4, r6
 802ce9a:	fa0f fc8e 	sxth.w	ip, lr
 802ce9e:	f340 825b 	ble.w	802d358 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 802cea2:	f8cd e020 	str.w	lr, [sp, #32]
 802cea6:	f8dd e0b0 	ldr.w	lr, [sp, #176]	@ 0xb0
 802ceaa:	1e65      	subs	r5, r4, #1
 802ceac:	f10c 38ff 	add.w	r8, ip, #4294967295
 802ceb0:	ea5f 432b 	movs.w	r3, fp, asr #16
 802ceb4:	ea4f 4127 	mov.w	r1, r7, asr #16
 802ceb8:	d405      	bmi.n	802cec6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802ceba:	42ab      	cmp	r3, r5
 802cebc:	da03      	bge.n	802cec6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cebe:	2900      	cmp	r1, #0
 802cec0:	db01      	blt.n	802cec6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cec2:	4541      	cmp	r1, r8
 802cec4:	db4d      	blt.n	802cf62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802cec6:	1c58      	adds	r0, r3, #1
 802cec8:	d406      	bmi.n	802ced8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802ceca:	42a0      	cmp	r0, r4
 802cecc:	dc04      	bgt.n	802ced8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cece:	1c48      	adds	r0, r1, #1
 802ced0:	d402      	bmi.n	802ced8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802ced2:	4560      	cmp	r0, ip
 802ced4:	f340 819b 	ble.w	802d20e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802ced8:	3a01      	subs	r2, #1
 802ceda:	44cb      	add	fp, r9
 802cedc:	4477      	add	r7, lr
 802cede:	f10a 0a03 	add.w	sl, sl, #3
 802cee2:	d1e5      	bne.n	802ceb0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802cee4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802cee6:	2b00      	cmp	r3, #0
 802cee8:	dd36      	ble.n	802cf58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ceea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ceee:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802cef2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802cef6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802cefa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802cefe:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802cf02:	ee69 7a27 	vmul.f32	s15, s18, s15
 802cf06:	ee76 6a68 	vsub.f32	s13, s12, s17
 802cf0a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802cf0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802cf12:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf16:	ee16 2a90 	vmov	r2, s13
 802cf1a:	3b01      	subs	r3, #1
 802cf1c:	930e      	str	r3, [sp, #56]	@ 0x38
 802cf1e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf20:	fb92 f9f3 	sdiv	r9, r2, r3
 802cf24:	ee17 2a10 	vmov	r2, s14
 802cf28:	eeb0 7a48 	vmov.f32	s14, s16
 802cf2c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf30:	ee17 7a10 	vmov	r7, s14
 802cf34:	eeb0 7a68 	vmov.f32	s14, s17
 802cf38:	fb92 f3f3 	sdiv	r3, r2, r3
 802cf3c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf40:	932c      	str	r3, [sp, #176]	@ 0xb0
 802cf42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf44:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802cf46:	ee17 ba10 	vmov	fp, s14
 802cf4a:	eeb0 8a67 	vmov.f32	s16, s15
 802cf4e:	eef0 8a46 	vmov.f32	s17, s12
 802cf52:	bf18      	it	ne
 802cf54:	461a      	movne	r2, r3
 802cf56:	e795      	b.n	802ce84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802cf58:	b017      	add	sp, #92	@ 0x5c
 802cf5a:	ecbd 8b08 	vpop	{d8-d11}
 802cf5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cf62:	f8dd e020 	ldr.w	lr, [sp, #32]
 802cf66:	1e51      	subs	r1, r2, #1
 802cf68:	fb09 b301 	mla	r3, r9, r1, fp
 802cf6c:	141b      	asrs	r3, r3, #16
 802cf6e:	9108      	str	r1, [sp, #32]
 802cf70:	f100 80e7 	bmi.w	802d142 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf74:	42ab      	cmp	r3, r5
 802cf76:	f280 80e4 	bge.w	802d142 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf7a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802cf7c:	fb03 7301 	mla	r3, r3, r1, r7
 802cf80:	141b      	asrs	r3, r3, #16
 802cf82:	f100 80de 	bmi.w	802d142 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf86:	f10c 3cff 	add.w	ip, ip, #4294967295
 802cf8a:	4563      	cmp	r3, ip
 802cf8c:	f280 80d9 	bge.w	802d142 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf90:	2a00      	cmp	r2, #0
 802cf92:	dda7      	ble.n	802cee4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802cf94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802cf98:	eb0a 0302 	add.w	r3, sl, r2
 802cf9c:	930c      	str	r3, [sp, #48]	@ 0x30
 802cf9e:	f10a 0c03 	add.w	ip, sl, #3
 802cfa2:	e9cd 792a 	strd	r7, r9, [sp, #168]	@ 0xa8
 802cfa6:	463b      	mov	r3, r7
 802cfa8:	e09a      	b.n	802d0e0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802cfaa:	784d      	ldrb	r5, [r1, #1]
 802cfac:	1908      	adds	r0, r1, r4
 802cfae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802cfb2:	4435      	add	r5, r6
 802cfb4:	2a00      	cmp	r2, #0
 802cfb6:	f000 80b5 	beq.w	802d124 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802cfba:	5d0c      	ldrb	r4, [r1, r4]
 802cfbc:	f890 e001 	ldrb.w	lr, [r0, #1]
 802cfc0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802cfc4:	19a1      	adds	r1, r4, r6
 802cfc6:	9108      	str	r1, [sp, #32]
 802cfc8:	4631      	mov	r1, r6
 802cfca:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802cfce:	9f08      	ldr	r7, [sp, #32]
 802cfd0:	44b6      	add	lr, r6
 802cfd2:	b29b      	uxth	r3, r3
 802cfd4:	b292      	uxth	r2, r2
 802cfd6:	fb03 f602 	mul.w	r6, r3, r2
 802cfda:	011b      	lsls	r3, r3, #4
 802cfdc:	f895 9000 	ldrb.w	r9, [r5]
 802cfe0:	1b98      	subs	r0, r3, r6
 802cfe2:	b280      	uxth	r0, r0
 802cfe4:	fb00 f909 	mul.w	r9, r0, r9
 802cfe8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802cfec:	b292      	uxth	r2, r2
 802cfee:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802cff2:	f811 100a 	ldrb.w	r1, [r1, sl]
 802cff6:	1a9b      	subs	r3, r3, r2
 802cff8:	b29b      	uxth	r3, r3
 802cffa:	fb03 9101 	mla	r1, r3, r1, r9
 802cffe:	f897 9000 	ldrb.w	r9, [r7]
 802d002:	9c2b      	ldr	r4, [sp, #172]	@ 0xac
 802d004:	fb02 1109 	mla	r1, r2, r9, r1
 802d008:	f89e a000 	ldrb.w	sl, [lr]
 802d00c:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 802d010:	44a3      	add	fp, r4
 802d012:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d014:	fb06 110a 	mla	r1, r6, sl, r1
 802d018:	fb19 f904 	smulbb	r9, r9, r4
 802d01c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802d01e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d022:	fb01 9904 	mla	r9, r1, r4, r9
 802d026:	fa1f f989 	uxth.w	r9, r9
 802d02a:	f109 0101 	add.w	r1, r9, #1
 802d02e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d032:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d036:	f80c 9c03 	strb.w	r9, [ip, #-3]
 802d03a:	7869      	ldrb	r1, [r5, #1]
 802d03c:	f898 9001 	ldrb.w	r9, [r8, #1]
 802d040:	fb00 f101 	mul.w	r1, r0, r1
 802d044:	9c08      	ldr	r4, [sp, #32]
 802d046:	fb03 1109 	mla	r1, r3, r9, r1
 802d04a:	f894 9001 	ldrb.w	r9, [r4, #1]
 802d04e:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
 802d050:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 802d052:	fb02 1109 	mla	r1, r2, r9, r1
 802d056:	f89e a001 	ldrb.w	sl, [lr, #1]
 802d05a:	443c      	add	r4, r7
 802d05c:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 802d060:	942a      	str	r4, [sp, #168]	@ 0xa8
 802d062:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d064:	fb06 110a 	mla	r1, r6, sl, r1
 802d068:	fb19 f904 	smulbb	r9, r9, r4
 802d06c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802d06e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d072:	fb01 9907 	mla	r9, r1, r7, r9
 802d076:	fa1f f989 	uxth.w	r9, r9
 802d07a:	f109 0101 	add.w	r1, r9, #1
 802d07e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d082:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d086:	f80c 9c02 	strb.w	r9, [ip, #-2]
 802d08a:	78a9      	ldrb	r1, [r5, #2]
 802d08c:	f898 5002 	ldrb.w	r5, [r8, #2]
 802d090:	fb00 f001 	mul.w	r0, r0, r1
 802d094:	fb03 0005 	mla	r0, r3, r5, r0
 802d098:	9b08      	ldr	r3, [sp, #32]
 802d09a:	f89e 4002 	ldrb.w	r4, [lr, #2]
 802d09e:	789b      	ldrb	r3, [r3, #2]
 802d0a0:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 802d0a4:	fb02 0003 	mla	r0, r2, r3, r0
 802d0a8:	fb06 0004 	mla	r0, r6, r4, r0
 802d0ac:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d0ae:	fb1e f404 	smulbb	r4, lr, r4
 802d0b2:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 802d0b6:	fb0e 4e07 	mla	lr, lr, r7, r4
 802d0ba:	fa1f fe8e 	uxth.w	lr, lr
 802d0be:	f10e 0301 	add.w	r3, lr, #1
 802d0c2:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802d0c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d0c8:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d0cc:	4563      	cmp	r3, ip
 802d0ce:	f80c ec01 	strb.w	lr, [ip, #-1]
 802d0d2:	d034      	beq.n	802d13e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802d0d4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802d0d6:	f10c 0c03 	add.w	ip, ip, #3
 802d0da:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 802d0de:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d0e0:	1419      	asrs	r1, r3, #16
 802d0e2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d0e6:	fb04 3101 	mla	r1, r4, r1, r3
 802d0ea:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d0ec:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d0ee:	f812 a001 	ldrb.w	sl, [r2, r1]
 802d0f2:	4411      	add	r1, r2
 802d0f4:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802d0f6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802d0fa:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802d0fe:	eb06 080a 	add.w	r8, r6, sl
 802d102:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802d106:	2b00      	cmp	r3, #0
 802d108:	f47f af4f 	bne.w	802cfaa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 802d10c:	b182      	cbz	r2, 802d130 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802d10e:	5d0c      	ldrb	r4, [r1, r4]
 802d110:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d112:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d116:	1861      	adds	r1, r4, r1
 802d118:	9108      	str	r1, [sp, #32]
 802d11a:	46c6      	mov	lr, r8
 802d11c:	4645      	mov	r5, r8
 802d11e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d120:	9f08      	ldr	r7, [sp, #32]
 802d122:	e756      	b.n	802cfd2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d124:	46c6      	mov	lr, r8
 802d126:	f8cd 8020 	str.w	r8, [sp, #32]
 802d12a:	4631      	mov	r1, r6
 802d12c:	4647      	mov	r7, r8
 802d12e:	e750      	b.n	802cfd2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d130:	46c6      	mov	lr, r8
 802d132:	f8cd 8020 	str.w	r8, [sp, #32]
 802d136:	4645      	mov	r5, r8
 802d138:	4631      	mov	r1, r6
 802d13a:	4647      	mov	r7, r8
 802d13c:	e749      	b.n	802cfd2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d13e:	469a      	mov	sl, r3
 802d140:	e6d0      	b.n	802cee4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d142:	2a00      	cmp	r2, #0
 802d144:	f77f aece 	ble.w	802cee4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d148:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802d14c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d150:	1439      	asrs	r1, r7, #16
 802d152:	4654      	mov	r4, sl
 802d154:	9d30      	ldr	r5, [sp, #192]	@ 0xc0
 802d156:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802d15a:	2b00      	cmp	r3, #0
 802d15c:	f3cb 3003 	ubfx	r0, fp, #12, #4
 802d160:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802d164:	db2f      	blt.n	802d1c6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d166:	f106 3cff 	add.w	ip, r6, #4294967295
 802d16a:	4563      	cmp	r3, ip
 802d16c:	da2b      	bge.n	802d1c6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d16e:	2900      	cmp	r1, #0
 802d170:	db29      	blt.n	802d1c6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d172:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d176:	4561      	cmp	r1, ip
 802d178:	da25      	bge.n	802d1c6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d17a:	fa0f fa86 	sxth.w	sl, r6
 802d17e:	fb01 330a 	mla	r3, r1, sl, r3
 802d182:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802d184:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d186:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d18a:	440b      	add	r3, r1
 802d18c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d190:	eb06 0c0e 	add.w	ip, r6, lr
 802d194:	2800      	cmp	r0, #0
 802d196:	d052      	beq.n	802d23e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x426>
 802d198:	7859      	ldrb	r1, [r3, #1]
 802d19a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d19e:	1871      	adds	r1, r6, r1
 802d1a0:	910c      	str	r1, [sp, #48]	@ 0x30
 802d1a2:	2a00      	cmp	r2, #0
 802d1a4:	f000 80d5 	beq.w	802d352 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 802d1a8:	eb03 010a 	add.w	r1, r3, sl
 802d1ac:	7849      	ldrb	r1, [r1, #1]
 802d1ae:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d1b2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d1b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d1ba:	1871      	adds	r1, r6, r1
 802d1bc:	18f3      	adds	r3, r6, r3
 802d1be:	9110      	str	r1, [sp, #64]	@ 0x40
 802d1c0:	9311      	str	r3, [sp, #68]	@ 0x44
 802d1c2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d1c4:	e042      	b.n	802d24c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d1c6:	f113 0c01 	adds.w	ip, r3, #1
 802d1ca:	d406      	bmi.n	802d1da <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d1cc:	45b4      	cmp	ip, r6
 802d1ce:	dc04      	bgt.n	802d1da <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d1d0:	f111 0c01 	adds.w	ip, r1, #1
 802d1d4:	d401      	bmi.n	802d1da <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d1d6:	45f4      	cmp	ip, lr
 802d1d8:	dd1f      	ble.n	802d21a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802d1da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802d1dc:	f1b8 0f00 	cmp.w	r8, #0
 802d1e0:	f104 0403 	add.w	r4, r4, #3
 802d1e4:	44cb      	add	fp, r9
 802d1e6:	441f      	add	r7, r3
 802d1e8:	dd07      	ble.n	802d1fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802d1ea:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 802d1ee:	f108 38ff 	add.w	r8, r8, #4294967295
 802d1f2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d1f6:	1439      	asrs	r1, r7, #16
 802d1f8:	e7af      	b.n	802d15a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d1fa:	9b08      	ldr	r3, [sp, #32]
 802d1fc:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 802d200:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d204:	3301      	adds	r3, #1
 802d206:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d20a:	449a      	add	sl, r3
 802d20c:	e66a      	b.n	802cee4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d20e:	3a01      	subs	r2, #1
 802d210:	f8dd e020 	ldr.w	lr, [sp, #32]
 802d214:	4690      	mov	r8, r2
 802d216:	9208      	str	r2, [sp, #32]
 802d218:	e79b      	b.n	802d152 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802d21a:	fa0f fe8e 	sxth.w	lr, lr
 802d21e:	b236      	sxth	r6, r6
 802d220:	e9cd 6e00 	strd	r6, lr, [sp]
 802d224:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 802d226:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802d22a:	e9cd 2605 	strd	r2, r6, [sp, #20]
 802d22e:	9302      	str	r3, [sp, #8]
 802d230:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d232:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d234:	4621      	mov	r1, r4
 802d236:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802d238:	f7ff fcd4 	bl	802cbe4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 802d23c:	e7cd      	b.n	802d1da <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d23e:	2a00      	cmp	r2, #0
 802d240:	d17b      	bne.n	802d33a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x522>
 802d242:	4661      	mov	r1, ip
 802d244:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d248:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d24c:	b283      	uxth	r3, r0
 802d24e:	b292      	uxth	r2, r2
 802d250:	fb03 f602 	mul.w	r6, r3, r2
 802d254:	011b      	lsls	r3, r3, #4
 802d256:	7809      	ldrb	r1, [r1, #0]
 802d258:	1b98      	subs	r0, r3, r6
 802d25a:	b280      	uxth	r0, r0
 802d25c:	9012      	str	r0, [sp, #72]	@ 0x48
 802d25e:	fb00 f101 	mul.w	r1, r0, r1
 802d262:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d266:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802d268:	b292      	uxth	r2, r2
 802d26a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d26e:	f810 e00e 	ldrb.w	lr, [r0, lr]
 802d272:	1a9b      	subs	r3, r3, r2
 802d274:	b29b      	uxth	r3, r3
 802d276:	fb03 110e 	mla	r1, r3, lr, r1
 802d27a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d27c:	f890 a000 	ldrb.w	sl, [r0]
 802d280:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d282:	fb02 110a 	mla	r1, r2, sl, r1
 802d286:	f890 e000 	ldrb.w	lr, [r0]
 802d28a:	f894 a000 	ldrb.w	sl, [r4]
 802d28e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d290:	fb06 110e 	mla	r1, r6, lr, r1
 802d294:	fb1a fa00 	smulbb	sl, sl, r0
 802d298:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d29a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d29e:	fb01 a100 	mla	r1, r1, r0, sl
 802d2a2:	b289      	uxth	r1, r1
 802d2a4:	f101 0e01 	add.w	lr, r1, #1
 802d2a8:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d2ac:	1209      	asrs	r1, r1, #8
 802d2ae:	7021      	strb	r1, [r4, #0]
 802d2b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d2b2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d2b4:	7849      	ldrb	r1, [r1, #1]
 802d2b6:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d2ba:	fb00 f101 	mul.w	r1, r0, r1
 802d2be:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d2c0:	fb03 110e 	mla	r1, r3, lr, r1
 802d2c4:	f890 a001 	ldrb.w	sl, [r0, #1]
 802d2c8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d2ca:	fb02 110a 	mla	r1, r2, sl, r1
 802d2ce:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d2d2:	f894 a001 	ldrb.w	sl, [r4, #1]
 802d2d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d2d8:	fb06 110e 	mla	r1, r6, lr, r1
 802d2dc:	fb1a fa00 	smulbb	sl, sl, r0
 802d2e0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d2e2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d2e6:	fb01 a100 	mla	r1, r1, r0, sl
 802d2ea:	b289      	uxth	r1, r1
 802d2ec:	f101 0e01 	add.w	lr, r1, #1
 802d2f0:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d2f4:	1209      	asrs	r1, r1, #8
 802d2f6:	7061      	strb	r1, [r4, #1]
 802d2f8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d2fa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d2fc:	7889      	ldrb	r1, [r1, #2]
 802d2fe:	f89c c002 	ldrb.w	ip, [ip, #2]
 802d302:	fb00 f001 	mul.w	r0, r0, r1
 802d306:	fb03 010c 	mla	r1, r3, ip, r0
 802d30a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d30c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802d30e:	7880      	ldrb	r0, [r0, #2]
 802d310:	789b      	ldrb	r3, [r3, #2]
 802d312:	fb02 1100 	mla	r1, r2, r0, r1
 802d316:	78a2      	ldrb	r2, [r4, #2]
 802d318:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d31a:	fb06 1303 	mla	r3, r6, r3, r1
 802d31e:	fb12 f200 	smulbb	r2, r2, r0
 802d322:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d324:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d328:	fb03 2300 	mla	r3, r3, r0, r2
 802d32c:	b29b      	uxth	r3, r3
 802d32e:	1c5a      	adds	r2, r3, #1
 802d330:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802d334:	121b      	asrs	r3, r3, #8
 802d336:	70a3      	strb	r3, [r4, #2]
 802d338:	e74f      	b.n	802d1da <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d33a:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d33e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d342:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d346:	18f3      	adds	r3, r6, r3
 802d348:	9311      	str	r3, [sp, #68]	@ 0x44
 802d34a:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d34e:	4661      	mov	r1, ip
 802d350:	e77c      	b.n	802d24c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d352:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d356:	e779      	b.n	802d24c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d358:	f43f adc4 	beq.w	802cee4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d35c:	1e65      	subs	r5, r4, #1
 802d35e:	e602      	b.n	802cf66 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>

0802d360 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 802d360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d364:	b083      	sub	sp, #12
 802d366:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	@ 0x30
 802d36a:	f891 9001 	ldrb.w	r9, [r1, #1]
 802d36e:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 802d372:	7888      	ldrb	r0, [r1, #2]
 802d374:	fb07 6c08 	mla	ip, r7, r8, r6
 802d378:	ea4f 2909 	mov.w	r9, r9, lsl #8
 802d37c:	780c      	ldrb	r4, [r1, #0]
 802d37e:	ea49 4900 	orr.w	r9, r9, r0, lsl #16
 802d382:	ea49 0404 	orr.w	r4, r9, r4
 802d386:	2f00      	cmp	r7, #0
 802d388:	9401      	str	r4, [sp, #4]
 802d38a:	eb02 090c 	add.w	r9, r2, ip
 802d38e:	f107 0e01 	add.w	lr, r7, #1
 802d392:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 802d396:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 802d39a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 802d39e:	db01      	blt.n	802d3a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x44>
 802d3a0:	45ba      	cmp	sl, r7
 802d3a2:	dc6e      	bgt.n	802d482 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x122>
 802d3a4:	fa5f fb84 	uxtb.w	fp, r4
 802d3a8:	af01      	add	r7, sp, #4
 802d3aa:	465a      	mov	r2, fp
 802d3ac:	46bc      	mov	ip, r7
 802d3ae:	f1be 0f00 	cmp.w	lr, #0
 802d3b2:	db01      	blt.n	802d3b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x58>
 802d3b4:	45f2      	cmp	sl, lr
 802d3b6:	dc49      	bgt.n	802d44c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xec>
 802d3b8:	fa5f fa84 	uxtb.w	sl, r4
 802d3bc:	ab01      	add	r3, sp, #4
 802d3be:	46d1      	mov	r9, sl
 802d3c0:	469e      	mov	lr, r3
 802d3c2:	280f      	cmp	r0, #15
 802d3c4:	f200 8098 	bhi.w	802d4f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d3c8:	2d0f      	cmp	r5, #15
 802d3ca:	f200 8095 	bhi.w	802d4f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d3ce:	b280      	uxth	r0, r0
 802d3d0:	b2ad      	uxth	r5, r5
 802d3d2:	fb00 f805 	mul.w	r8, r0, r5
 802d3d6:	0104      	lsls	r4, r0, #4
 802d3d8:	eba4 0608 	sub.w	r6, r4, r8
 802d3dc:	b2b6      	uxth	r6, r6
 802d3de:	fb06 f002 	mul.w	r0, r6, r2
 802d3e2:	ebc8 1505 	rsb	r5, r8, r5, lsl #4
 802d3e6:	b2ad      	uxth	r5, r5
 802d3e8:	f5c4 7280 	rsb	r2, r4, #256	@ 0x100
 802d3ec:	1b52      	subs	r2, r2, r5
 802d3ee:	b292      	uxth	r2, r2
 802d3f0:	fb02 000b 	mla	r0, r2, fp, r0
 802d3f4:	fb05 000a 	mla	r0, r5, sl, r0
 802d3f8:	fb08 0009 	mla	r0, r8, r9, r0
 802d3fc:	1200      	asrs	r0, r0, #8
 802d3fe:	7008      	strb	r0, [r1, #0]
 802d400:	f897 9001 	ldrb.w	r9, [r7, #1]
 802d404:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802d408:	fb06 f909 	mul.w	r9, r6, r9
 802d40c:	fb02 9904 	mla	r9, r2, r4, r9
 802d410:	f89e 4001 	ldrb.w	r4, [lr, #1]
 802d414:	7858      	ldrb	r0, [r3, #1]
 802d416:	fb05 9404 	mla	r4, r5, r4, r9
 802d41a:	fb08 4000 	mla	r0, r8, r0, r4
 802d41e:	1200      	asrs	r0, r0, #8
 802d420:	7048      	strb	r0, [r1, #1]
 802d422:	78bc      	ldrb	r4, [r7, #2]
 802d424:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802d428:	fb06 f604 	mul.w	r6, r6, r4
 802d42c:	fb02 6600 	mla	r6, r2, r0, r6
 802d430:	f89e 0002 	ldrb.w	r0, [lr, #2]
 802d434:	789b      	ldrb	r3, [r3, #2]
 802d436:	fb05 6500 	mla	r5, r5, r0, r6
 802d43a:	fb08 5803 	mla	r8, r8, r3, r5
 802d43e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d442:	f881 8002 	strb.w	r8, [r1, #2]
 802d446:	b003      	add	sp, #12
 802d448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d44c:	b385      	cbz	r5, 802d4b0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x150>
 802d44e:	2e00      	cmp	r6, #0
 802d450:	db40      	blt.n	802d4d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d452:	45b0      	cmp	r8, r6
 802d454:	dd3e      	ble.n	802d4d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d456:	f819 e008 	ldrb.w	lr, [r9, r8]
 802d45a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d45e:	449e      	add	lr, r3
 802d460:	3601      	adds	r6, #1
 802d462:	f89e a000 	ldrb.w	sl, [lr]
 802d466:	d431      	bmi.n	802d4cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d468:	45b0      	cmp	r8, r6
 802d46a:	dd2f      	ble.n	802d4cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d46c:	2800      	cmp	r0, #0
 802d46e:	d03f      	beq.n	802d4f0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x190>
 802d470:	44c8      	add	r8, r9
 802d472:	f898 4001 	ldrb.w	r4, [r8, #1]
 802d476:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d47a:	f813 9004 	ldrb.w	r9, [r3, r4]
 802d47e:	4423      	add	r3, r4
 802d480:	e79f      	b.n	802d3c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d482:	2e00      	cmp	r6, #0
 802d484:	db01      	blt.n	802d48a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 802d486:	45b0      	cmp	r8, r6
 802d488:	dc1a      	bgt.n	802d4c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>
 802d48a:	f10d 0c04 	add.w	ip, sp, #4
 802d48e:	1c72      	adds	r2, r6, #1
 802d490:	f89c b000 	ldrb.w	fp, [ip]
 802d494:	d409      	bmi.n	802d4aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d496:	4590      	cmp	r8, r2
 802d498:	dd07      	ble.n	802d4aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d49a:	b1f0      	cbz	r0, 802d4da <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x17a>
 802d49c:	f899 7001 	ldrb.w	r7, [r9, #1]
 802d4a0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d4a4:	5dda      	ldrb	r2, [r3, r7]
 802d4a6:	441f      	add	r7, r3
 802d4a8:	e781      	b.n	802d3ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d4aa:	b2e2      	uxtb	r2, r4
 802d4ac:	af01      	add	r7, sp, #4
 802d4ae:	e77e      	b.n	802d3ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d4b0:	280f      	cmp	r0, #15
 802d4b2:	fa5f fa84 	uxtb.w	sl, r4
 802d4b6:	d81f      	bhi.n	802d4f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d4b8:	ab01      	add	r3, sp, #4
 802d4ba:	469e      	mov	lr, r3
 802d4bc:	46d1      	mov	r9, sl
 802d4be:	e786      	b.n	802d3ce <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x6e>
 802d4c0:	f812 c00c 	ldrb.w	ip, [r2, ip]
 802d4c4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802d4c8:	449c      	add	ip, r3
 802d4ca:	e7e0      	b.n	802d48e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 802d4cc:	fa5f f984 	uxtb.w	r9, r4
 802d4d0:	ab01      	add	r3, sp, #4
 802d4d2:	e776      	b.n	802d3c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d4d4:	f10d 0e04 	add.w	lr, sp, #4
 802d4d8:	e7c2      	b.n	802d460 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x100>
 802d4da:	f1be 0f00 	cmp.w	lr, #0
 802d4de:	b2e2      	uxtb	r2, r4
 802d4e0:	af01      	add	r7, sp, #4
 802d4e2:	f6bf af67 	bge.w	802d3b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x54>
 802d4e6:	463b      	mov	r3, r7
 802d4e8:	46be      	mov	lr, r7
 802d4ea:	4691      	mov	r9, r2
 802d4ec:	4692      	mov	sl, r2
 802d4ee:	e76b      	b.n	802d3c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d4f0:	fa5f f984 	uxtb.w	r9, r4
 802d4f4:	ab01      	add	r3, sp, #4
 802d4f6:	e767      	b.n	802d3c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d4f8:	4b03      	ldr	r3, [pc, #12]	@ (802d508 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1a8>)
 802d4fa:	4a04      	ldr	r2, [pc, #16]	@ (802d50c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1ac>)
 802d4fc:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802d500:	4803      	ldr	r0, [pc, #12]	@ (802d510 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1b0>)
 802d502:	f004 ffd9 	bl	80324b8 <__assert_func>
 802d506:	bf00      	nop
 802d508:	0803666c 	.word	0x0803666c
 802d50c:	08036ce8 	.word	0x08036ce8
 802d510:	080367f4 	.word	0x080367f4

0802d514 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802d514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d518:	ed2d 8b0a 	vpush	{d8-d12}
 802d51c:	eeb0 aa40 	vmov.f32	s20, s0
 802d520:	eef0 9a60 	vmov.f32	s19, s1
 802d524:	eeb0 9a41 	vmov.f32	s18, s2
 802d528:	eef0 8a62 	vmov.f32	s17, s5
 802d52c:	eeb0 8a43 	vmov.f32	s16, s6
 802d530:	eeb0 ca44 	vmov.f32	s24, s8
 802d534:	eef0 ba64 	vmov.f32	s23, s9
 802d538:	eeb0 ba45 	vmov.f32	s22, s10
 802d53c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802d540:	b093      	sub	sp, #76	@ 0x4c
 802d542:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802d546:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802d54a:	e9dd 9b27 	ldrd	r9, fp, [sp, #156]	@ 0x9c
 802d54e:	9011      	str	r0, [sp, #68]	@ 0x44
 802d550:	461a      	mov	r2, r3
 802d552:	6860      	ldr	r0, [r4, #4]
 802d554:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802d556:	fb00 1803 	mla	r8, r0, r3, r1
 802d55a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d55c:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 802d55e:	6821      	ldr	r1, [r4, #0]
 802d560:	685b      	ldr	r3, [r3, #4]
 802d562:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d566:	6800      	ldr	r0, [r0, #0]
 802d568:	eb01 0a08 	add.w	sl, r1, r8
 802d56c:	3304      	adds	r3, #4
 802d56e:	f8dd 80a4 	ldr.w	r8, [sp, #164]	@ 0xa4
 802d572:	9009      	str	r0, [sp, #36]	@ 0x24
 802d574:	9307      	str	r3, [sp, #28]
 802d576:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d578:	2b00      	cmp	r3, #0
 802d57a:	dc02      	bgt.n	802d582 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802d57c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802d57e:	2b00      	cmp	r3, #0
 802d580:	dd61      	ble.n	802d646 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d582:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d584:	2a00      	cmp	r2, #0
 802d586:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802d58a:	b230      	sxth	r0, r6
 802d58c:	fa0f f78e 	sxth.w	r7, lr
 802d590:	f340 81fe 	ble.w	802d990 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 802d594:	f8cd e018 	str.w	lr, [sp, #24]
 802d598:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802d59c:	1e45      	subs	r5, r0, #1
 802d59e:	f107 3cff 	add.w	ip, r7, #4294967295
 802d5a2:	ea5f 4329 	movs.w	r3, r9, asr #16
 802d5a6:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d5aa:	d405      	bmi.n	802d5b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5ac:	42ab      	cmp	r3, r5
 802d5ae:	da03      	bge.n	802d5b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5b0:	2900      	cmp	r1, #0
 802d5b2:	db01      	blt.n	802d5b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5b4:	4561      	cmp	r1, ip
 802d5b6:	db4b      	blt.n	802d650 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802d5b8:	1c5c      	adds	r4, r3, #1
 802d5ba:	d406      	bmi.n	802d5ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d5bc:	4284      	cmp	r4, r0
 802d5be:	dc04      	bgt.n	802d5ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d5c0:	1c4c      	adds	r4, r1, #1
 802d5c2:	d402      	bmi.n	802d5ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d5c4:	42bc      	cmp	r4, r7
 802d5c6:	f340 815e 	ble.w	802d886 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802d5ca:	3a01      	subs	r2, #1
 802d5cc:	44c1      	add	r9, r8
 802d5ce:	44f3      	add	fp, lr
 802d5d0:	f10a 0a03 	add.w	sl, sl, #3
 802d5d4:	d1e5      	bne.n	802d5a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802d5d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d5d8:	2b00      	cmp	r3, #0
 802d5da:	dd34      	ble.n	802d646 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d5dc:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802d5e0:	ee79 9aab 	vadd.f32	s19, s19, s23
 802d5e4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802d5e8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802d5ec:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802d5f0:	ee69 7a27 	vmul.f32	s15, s18, s15
 802d5f4:	ee76 6a68 	vsub.f32	s13, s12, s17
 802d5f8:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802d5fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d600:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d604:	ee16 2a90 	vmov	r2, s13
 802d608:	3b01      	subs	r3, #1
 802d60a:	930a      	str	r3, [sp, #40]	@ 0x28
 802d60c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d60e:	fb92 f8f3 	sdiv	r8, r2, r3
 802d612:	ee17 2a10 	vmov	r2, s14
 802d616:	eeb0 7a48 	vmov.f32	s14, s16
 802d61a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d61e:	ee17 ba10 	vmov	fp, s14
 802d622:	eeb0 7a68 	vmov.f32	s14, s17
 802d626:	fb92 f3f3 	sdiv	r3, r2, r3
 802d62a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d62e:	932a      	str	r3, [sp, #168]	@ 0xa8
 802d630:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d632:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802d634:	ee17 9a10 	vmov	r9, s14
 802d638:	eeb0 8a67 	vmov.f32	s16, s15
 802d63c:	eef0 8a46 	vmov.f32	s17, s12
 802d640:	bf18      	it	ne
 802d642:	461a      	movne	r2, r3
 802d644:	e797      	b.n	802d576 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802d646:	b013      	add	sp, #76	@ 0x4c
 802d648:	ecbd 8b0a 	vpop	{d8-d12}
 802d64c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d650:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d654:	1e51      	subs	r1, r2, #1
 802d656:	fb08 9301 	mla	r3, r8, r1, r9
 802d65a:	141b      	asrs	r3, r3, #16
 802d65c:	9106      	str	r1, [sp, #24]
 802d65e:	f100 80aa 	bmi.w	802d7b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d662:	42ab      	cmp	r3, r5
 802d664:	f280 80a7 	bge.w	802d7b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d668:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d66a:	fb03 b301 	mla	r3, r3, r1, fp
 802d66e:	141b      	asrs	r3, r3, #16
 802d670:	f100 80a1 	bmi.w	802d7b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d674:	3f01      	subs	r7, #1
 802d676:	42bb      	cmp	r3, r7
 802d678:	f280 809d 	bge.w	802d7b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d67c:	2a00      	cmp	r2, #0
 802d67e:	ddaa      	ble.n	802d5d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d680:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802d684:	eb0a 0302 	add.w	r3, sl, r2
 802d688:	9308      	str	r3, [sp, #32]
 802d68a:	f10a 0a03 	add.w	sl, sl, #3
 802d68e:	f8cd 80a4 	str.w	r8, [sp, #164]	@ 0xa4
 802d692:	e062      	b.n	802d75a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802d694:	784c      	ldrb	r4, [r1, #1]
 802d696:	180d      	adds	r5, r1, r0
 802d698:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d69c:	4434      	add	r4, r6
 802d69e:	2a00      	cmp	r2, #0
 802d6a0:	d07c      	beq.n	802d79c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802d6a2:	5c08      	ldrb	r0, [r1, r0]
 802d6a4:	786f      	ldrb	r7, [r5, #1]
 802d6a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d6aa:	1981      	adds	r1, r0, r6
 802d6ac:	4608      	mov	r0, r1
 802d6ae:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d6b2:	9106      	str	r1, [sp, #24]
 802d6b4:	4437      	add	r7, r6
 802d6b6:	b29b      	uxth	r3, r3
 802d6b8:	b292      	uxth	r2, r2
 802d6ba:	fb03 f502 	mul.w	r5, r3, r2
 802d6be:	011b      	lsls	r3, r3, #4
 802d6c0:	f894 e000 	ldrb.w	lr, [r4]
 802d6c4:	1b59      	subs	r1, r3, r5
 802d6c6:	b289      	uxth	r1, r1
 802d6c8:	fb01 fe0e 	mul.w	lr, r1, lr
 802d6cc:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802d6d0:	b292      	uxth	r2, r2
 802d6d2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d6d6:	f816 6008 	ldrb.w	r6, [r6, r8]
 802d6da:	1a9b      	subs	r3, r3, r2
 802d6dc:	b29b      	uxth	r3, r3
 802d6de:	fb03 e606 	mla	r6, r3, r6, lr
 802d6e2:	f890 e000 	ldrb.w	lr, [r0]
 802d6e6:	f897 8000 	ldrb.w	r8, [r7]
 802d6ea:	fb02 660e 	mla	r6, r2, lr, r6
 802d6ee:	fb05 6808 	mla	r8, r5, r8, r6
 802d6f2:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d6f6:	f80a 8c03 	strb.w	r8, [sl, #-3]
 802d6fa:	f894 8001 	ldrb.w	r8, [r4, #1]
 802d6fe:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802d700:	fb01 f608 	mul.w	r6, r1, r8
 802d704:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d708:	4481      	add	r9, r0
 802d70a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 802d70c:	fb03 680e 	mla	r8, r3, lr, r6
 802d710:	4483      	add	fp, r0
 802d712:	9806      	ldr	r0, [sp, #24]
 802d714:	787e      	ldrb	r6, [r7, #1]
 802d716:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d71a:	fb02 8e0e 	mla	lr, r2, lr, r8
 802d71e:	fb05 ee06 	mla	lr, r5, r6, lr
 802d722:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d726:	f80a ec02 	strb.w	lr, [sl, #-2]
 802d72a:	78a4      	ldrb	r4, [r4, #2]
 802d72c:	f89c 6002 	ldrb.w	r6, [ip, #2]
 802d730:	fb01 f104 	mul.w	r1, r1, r4
 802d734:	fb03 1106 	mla	r1, r3, r6, r1
 802d738:	7883      	ldrb	r3, [r0, #2]
 802d73a:	78b8      	ldrb	r0, [r7, #2]
 802d73c:	fb02 1103 	mla	r1, r2, r3, r1
 802d740:	fb05 1500 	mla	r5, r5, r0, r1
 802d744:	9b08      	ldr	r3, [sp, #32]
 802d746:	122d      	asrs	r5, r5, #8
 802d748:	4553      	cmp	r3, sl
 802d74a:	f80a 5c01 	strb.w	r5, [sl, #-1]
 802d74e:	d030      	beq.n	802d7b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 802d750:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d752:	f10a 0a03 	add.w	sl, sl, #3
 802d756:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802d75a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d75e:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d762:	fb00 3101 	mla	r1, r0, r1, r3
 802d766:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d768:	9e07      	ldr	r6, [sp, #28]
 802d76a:	f812 8001 	ldrb.w	r8, [r2, r1]
 802d76e:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802d772:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d776:	4411      	add	r1, r2
 802d778:	eb06 0c08 	add.w	ip, r6, r8
 802d77c:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d780:	2b00      	cmp	r3, #0
 802d782:	d187      	bne.n	802d694 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x180>
 802d784:	b17a      	cbz	r2, 802d7a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 802d786:	5c08      	ldrb	r0, [r1, r0]
 802d788:	9907      	ldr	r1, [sp, #28]
 802d78a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d78e:	1841      	adds	r1, r0, r1
 802d790:	4667      	mov	r7, ip
 802d792:	9106      	str	r1, [sp, #24]
 802d794:	4664      	mov	r4, ip
 802d796:	9e07      	ldr	r6, [sp, #28]
 802d798:	4608      	mov	r0, r1
 802d79a:	e78c      	b.n	802d6b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d79c:	4667      	mov	r7, ip
 802d79e:	f8cd c018 	str.w	ip, [sp, #24]
 802d7a2:	4660      	mov	r0, ip
 802d7a4:	e787      	b.n	802d6b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7a6:	4667      	mov	r7, ip
 802d7a8:	f8cd c018 	str.w	ip, [sp, #24]
 802d7ac:	4664      	mov	r4, ip
 802d7ae:	4660      	mov	r0, ip
 802d7b0:	e781      	b.n	802d6b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7b2:	469a      	mov	sl, r3
 802d7b4:	e70f      	b.n	802d5d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d7b6:	2a00      	cmp	r2, #0
 802d7b8:	f77f af0d 	ble.w	802d5d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d7bc:	9d06      	ldr	r5, [sp, #24]
 802d7be:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d7c2:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d7c6:	4657      	mov	r7, sl
 802d7c8:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 802d7cc:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802d7ce:	f8dd a0a8 	ldr.w	sl, [sp, #168]	@ 0xa8
 802d7d2:	2b00      	cmp	r3, #0
 802d7d4:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802d7d8:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d7dc:	db31      	blt.n	802d842 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7de:	f106 3cff 	add.w	ip, r6, #4294967295
 802d7e2:	4563      	cmp	r3, ip
 802d7e4:	da2d      	bge.n	802d842 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7e6:	2900      	cmp	r1, #0
 802d7e8:	db2b      	blt.n	802d842 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7ea:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d7ee:	4561      	cmp	r1, ip
 802d7f0:	da27      	bge.n	802d842 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7f2:	fa0f fc86 	sxth.w	ip, r6
 802d7f6:	fb01 330c 	mla	r3, r1, ip, r3
 802d7fa:	9e07      	ldr	r6, [sp, #28]
 802d7fc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802d7fe:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d802:	440b      	add	r3, r1
 802d804:	4631      	mov	r1, r6
 802d806:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d80a:	4471      	add	r1, lr
 802d80c:	910e      	str	r1, [sp, #56]	@ 0x38
 802d80e:	2800      	cmp	r0, #0
 802d810:	d04f      	beq.n	802d8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802d812:	7859      	ldrb	r1, [r3, #1]
 802d814:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d818:	1871      	adds	r1, r6, r1
 802d81a:	9108      	str	r1, [sp, #32]
 802d81c:	2a00      	cmp	r2, #0
 802d81e:	f000 80b2 	beq.w	802d986 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802d822:	eb03 010c 	add.w	r1, r3, ip
 802d826:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d82a:	7849      	ldrb	r1, [r1, #1]
 802d82c:	9b07      	ldr	r3, [sp, #28]
 802d82e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d832:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d836:	1859      	adds	r1, r3, r1
 802d838:	18f3      	adds	r3, r6, r3
 802d83a:	910c      	str	r1, [sp, #48]	@ 0x30
 802d83c:	930d      	str	r3, [sp, #52]	@ 0x34
 802d83e:	9e08      	ldr	r6, [sp, #32]
 802d840:	e03d      	b.n	802d8be <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d842:	f113 0c01 	adds.w	ip, r3, #1
 802d846:	d406      	bmi.n	802d856 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d848:	45b4      	cmp	ip, r6
 802d84a:	dc04      	bgt.n	802d856 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d84c:	f111 0c01 	adds.w	ip, r1, #1
 802d850:	d401      	bmi.n	802d856 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d852:	45f4      	cmp	ip, lr
 802d854:	dd1d      	ble.n	802d892 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802d856:	2d00      	cmp	r5, #0
 802d858:	f107 0703 	add.w	r7, r7, #3
 802d85c:	44c1      	add	r9, r8
 802d85e:	44d3      	add	fp, sl
 802d860:	dd07      	ble.n	802d872 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802d862:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 802d866:	3d01      	subs	r5, #1
 802d868:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d86c:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d870:	e7af      	b.n	802d7d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802d872:	9b06      	ldr	r3, [sp, #24]
 802d874:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 802d878:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d87c:	3301      	adds	r3, #1
 802d87e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d882:	449a      	add	sl, r3
 802d884:	e6a7      	b.n	802d5d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d886:	3a01      	subs	r2, #1
 802d888:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d88c:	4615      	mov	r5, r2
 802d88e:	9206      	str	r2, [sp, #24]
 802d890:	e799      	b.n	802d7c6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802d892:	fa0f fe8e 	sxth.w	lr, lr
 802d896:	b236      	sxth	r6, r6
 802d898:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802d89c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802d8a0:	e9cd 6e00 	strd	r6, lr, [sp]
 802d8a4:	9b07      	ldr	r3, [sp, #28]
 802d8a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d8a8:	4639      	mov	r1, r7
 802d8aa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d8ac:	f7ff fd58 	bl	802d360 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 802d8b0:	e7d1      	b.n	802d856 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d8b2:	2a00      	cmp	r2, #0
 802d8b4:	d15b      	bne.n	802d96e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45a>
 802d8b6:	460e      	mov	r6, r1
 802d8b8:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 802d8bc:	9108      	str	r1, [sp, #32]
 802d8be:	b283      	uxth	r3, r0
 802d8c0:	b292      	uxth	r2, r2
 802d8c2:	fb03 f002 	mul.w	r0, r3, r2
 802d8c6:	011b      	lsls	r3, r3, #4
 802d8c8:	f896 c000 	ldrb.w	ip, [r6]
 802d8cc:	1a19      	subs	r1, r3, r0
 802d8ce:	b289      	uxth	r1, r1
 802d8d0:	fb01 fc0c 	mul.w	ip, r1, ip
 802d8d4:	9e07      	ldr	r6, [sp, #28]
 802d8d6:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802d8da:	b292      	uxth	r2, r2
 802d8dc:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d8e0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 802d8e4:	1a9b      	subs	r3, r3, r2
 802d8e6:	b29b      	uxth	r3, r3
 802d8e8:	fb03 cc0e 	mla	ip, r3, lr, ip
 802d8ec:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d8ee:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d8f2:	f896 e000 	ldrb.w	lr, [r6]
 802d8f6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d8f8:	f896 c000 	ldrb.w	ip, [r6]
 802d8fc:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d8fe:	fb02 6e0e 	mla	lr, r2, lr, r6
 802d902:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d906:	9e08      	ldr	r6, [sp, #32]
 802d908:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d90c:	f887 c000 	strb.w	ip, [r7]
 802d910:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d914:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d916:	fb01 fc0c 	mul.w	ip, r1, ip
 802d91a:	f896 e001 	ldrb.w	lr, [r6, #1]
 802d91e:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d920:	fb03 ce0e 	mla	lr, r3, lr, ip
 802d924:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d928:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d92a:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d92e:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d932:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d934:	fb02 ee06 	mla	lr, r2, r6, lr
 802d938:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d93c:	9e08      	ldr	r6, [sp, #32]
 802d93e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d942:	f887 c001 	strb.w	ip, [r7, #1]
 802d946:	f896 c002 	ldrb.w	ip, [r6, #2]
 802d94a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d94c:	fb01 f10c 	mul.w	r1, r1, ip
 802d950:	f896 e002 	ldrb.w	lr, [r6, #2]
 802d954:	fb03 110e 	mla	r1, r3, lr, r1
 802d958:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802d95a:	789e      	ldrb	r6, [r3, #2]
 802d95c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d95e:	fb02 1206 	mla	r2, r2, r6, r1
 802d962:	789b      	ldrb	r3, [r3, #2]
 802d964:	fb00 2303 	mla	r3, r0, r3, r2
 802d968:	121b      	asrs	r3, r3, #8
 802d96a:	70bb      	strb	r3, [r7, #2]
 802d96c:	e773      	b.n	802d856 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d96e:	4631      	mov	r1, r6
 802d970:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d974:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802d976:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d97a:	1871      	adds	r1, r6, r1
 802d97c:	930c      	str	r3, [sp, #48]	@ 0x30
 802d97e:	910d      	str	r1, [sp, #52]	@ 0x34
 802d980:	9308      	str	r3, [sp, #32]
 802d982:	461e      	mov	r6, r3
 802d984:	e79b      	b.n	802d8be <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d986:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d988:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 802d98c:	460e      	mov	r6, r1
 802d98e:	e796      	b.n	802d8be <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d990:	f43f ae21 	beq.w	802d5d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d994:	1e45      	subs	r5, r0, #1
 802d996:	e65d      	b.n	802d654 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>

0802d998 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 802d998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d99c:	b087      	sub	sp, #28
 802d99e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802d9a2:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 802d9a6:	fb06 080c 	mla	r8, r6, ip, r0
 802d9aa:	2e00      	cmp	r6, #0
 802d9ac:	4696      	mov	lr, r2
 802d9ae:	eb02 0a08 	add.w	sl, r2, r8
 802d9b2:	f106 0b01 	add.w	fp, r6, #1
 802d9b6:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 802d9ba:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802d9be:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 802d9c2:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 802d9c6:	db02      	blt.n	802d9ce <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 802d9c8:	42b2      	cmp	r2, r6
 802d9ca:	f300 80f1 	bgt.w	802dbb0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x218>
 802d9ce:	2600      	movs	r6, #0
 802d9d0:	46b1      	mov	r9, r6
 802d9d2:	46b0      	mov	r8, r6
 802d9d4:	46b6      	mov	lr, r6
 802d9d6:	f1bb 0f00 	cmp.w	fp, #0
 802d9da:	db02      	blt.n	802d9e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x4a>
 802d9dc:	455a      	cmp	r2, fp
 802d9de:	f300 8101 	bgt.w	802dbe4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 802d9e2:	f04f 0c00 	mov.w	ip, #0
 802d9e6:	e9cd cc02 	strd	ip, ip, [sp, #8]
 802d9ea:	f8cd c004 	str.w	ip, [sp, #4]
 802d9ee:	2f0f      	cmp	r7, #15
 802d9f0:	f200 813a 	bhi.w	802dc68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802d9f4:	2d0f      	cmp	r5, #15
 802d9f6:	f200 8137 	bhi.w	802dc68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802d9fa:	b2a8      	uxth	r0, r5
 802d9fc:	b2bb      	uxth	r3, r7
 802d9fe:	fb00 f503 	mul.w	r5, r0, r3
 802da02:	9a01      	ldr	r2, [sp, #4]
 802da04:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802da08:	b280      	uxth	r0, r0
 802da0a:	fb00 fa02 	mul.w	sl, r0, r2
 802da0e:	fb05 fb0c 	mul.w	fp, r5, ip
 802da12:	011b      	lsls	r3, r3, #4
 802da14:	1b5f      	subs	r7, r3, r5
 802da16:	b2bf      	uxth	r7, r7
 802da18:	fb07 f206 	mul.w	r2, r7, r6
 802da1c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802da20:	1a1b      	subs	r3, r3, r0
 802da22:	b29b      	uxth	r3, r3
 802da24:	fb03 2209 	mla	r2, r3, r9, r2
 802da28:	4452      	add	r2, sl
 802da2a:	445a      	add	r2, fp
 802da2c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802da30:	2a00      	cmp	r2, #0
 802da32:	f000 80ba 	beq.w	802dbaa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x212>
 802da36:	b2a4      	uxth	r4, r4
 802da38:	fb02 f204 	mul.w	r2, r2, r4
 802da3c:	f102 0a01 	add.w	sl, r2, #1
 802da40:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802da44:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802da48:	9205      	str	r2, [sp, #20]
 802da4a:	f008 12ff 	and.w	r2, r8, #16711935	@ 0xff00ff
 802da4e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802da52:	fb06 f202 	mul.w	r2, r6, r2
 802da56:	fb06 f608 	mul.w	r6, r6, r8
 802da5a:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802da5e:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802da62:	fb09 fb0b 	mul.w	fp, r9, fp
 802da66:	fb09 fe0e 	mul.w	lr, r9, lr
 802da6a:	f506 7980 	add.w	r9, r6, #256	@ 0x100
 802da6e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 802da72:	0a36      	lsrs	r6, r6, #8
 802da74:	ea4f 2812 	mov.w	r8, r2, lsr #8
 802da78:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802da7c:	fb07 f606 	mul.w	r6, r7, r6
 802da80:	9404      	str	r4, [sp, #16]
 802da82:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802da86:	9c03      	ldr	r4, [sp, #12]
 802da88:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802da8c:	4490      	add	r8, r2
 802da8e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802da92:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802da96:	fb0c f202 	mul.w	r2, ip, r2
 802da9a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802da9e:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802daa2:	9c02      	ldr	r4, [sp, #8]
 802daa4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802daa8:	fb0c fc09 	mul.w	ip, ip, r9
 802daac:	fb08 f807 	mul.w	r8, r8, r7
 802dab0:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802dab4:	9603      	str	r6, [sp, #12]
 802dab6:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 802daba:	9e01      	ldr	r6, [sp, #4]
 802dabc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802dac0:	44d3      	add	fp, sl
 802dac2:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 802dac6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802daca:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802dace:	fb06 f707 	mul.w	r7, r6, r7
 802dad2:	fb06 f909 	mul.w	r9, r6, r9
 802dad6:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802dada:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802dade:	9e03      	ldr	r6, [sp, #12]
 802dae0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802dae4:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 802dae8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802daec:	fb0b 8803 	mla	r8, fp, r3, r8
 802daf0:	fb03 660e 	mla	r6, r3, lr, r6
 802daf4:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802daf8:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802dafc:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802db00:	4492      	add	sl, r2
 802db02:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 802db06:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802db0a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 802db0e:	0a3a      	lsrs	r2, r7, #8
 802db10:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802db14:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802db18:	fb0b 8b05 	mla	fp, fp, r5, r8
 802db1c:	fb05 660e 	mla	r6, r5, lr, r6
 802db20:	f002 18ff 	and.w	r8, r2, #16711935	@ 0xff00ff
 802db24:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802db28:	f509 7580 	add.w	r5, r9, #256	@ 0x100
 802db2c:	44b8      	add	r8, r7
 802db2e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802db32:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802db36:	0a2d      	lsrs	r5, r5, #8
 802db38:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802db3c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db40:	fb00 6505 	mla	r5, r0, r5, r6
 802db44:	fb08 b800 	mla	r8, r8, r0, fp
 802db48:	0a2d      	lsrs	r5, r5, #8
 802db4a:	ea4f 2018 	mov.w	r0, r8, lsr #8
 802db4e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db52:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802db56:	4328      	orrs	r0, r5
 802db58:	784b      	ldrb	r3, [r1, #1]
 802db5a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 802db5e:	9c04      	ldr	r4, [sp, #16]
 802db60:	788d      	ldrb	r5, [r1, #2]
 802db62:	fa5f fa80 	uxtb.w	sl, r0
 802db66:	fb13 f602 	smulbb	r6, r3, r2
 802db6a:	fb15 f502 	smulbb	r5, r5, r2
 802db6e:	fb1a fa04 	smulbb	sl, sl, r4
 802db72:	780f      	ldrb	r7, [r1, #0]
 802db74:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 802db78:	0c00      	lsrs	r0, r0, #16
 802db7a:	fb0c 6304 	mla	r3, ip, r4, r6
 802db7e:	fb07 a202 	mla	r2, r7, r2, sl
 802db82:	fb00 5404 	mla	r4, r0, r4, r5
 802db86:	b29b      	uxth	r3, r3
 802db88:	b292      	uxth	r2, r2
 802db8a:	b2a4      	uxth	r4, r4
 802db8c:	1c56      	adds	r6, r2, #1
 802db8e:	1c5d      	adds	r5, r3, #1
 802db90:	1c60      	adds	r0, r4, #1
 802db92:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802db96:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802db9a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802db9e:	1212      	asrs	r2, r2, #8
 802dba0:	121b      	asrs	r3, r3, #8
 802dba2:	1224      	asrs	r4, r4, #8
 802dba4:	700a      	strb	r2, [r1, #0]
 802dba6:	704b      	strb	r3, [r1, #1]
 802dba8:	708c      	strb	r4, [r1, #2]
 802dbaa:	b007      	add	sp, #28
 802dbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802dbb0:	2800      	cmp	r0, #0
 802dbb2:	db01      	blt.n	802dbb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x220>
 802dbb4:	4584      	cmp	ip, r0
 802dbb6:	dc3d      	bgt.n	802dc34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29c>
 802dbb8:	f04f 0900 	mov.w	r9, #0
 802dbbc:	46ce      	mov	lr, r9
 802dbbe:	1c46      	adds	r6, r0, #1
 802dbc0:	d42a      	bmi.n	802dc18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802dbc2:	45b4      	cmp	ip, r6
 802dbc4:	dd28      	ble.n	802dc18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802dbc6:	b137      	cbz	r7, 802dbd6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x23e>
 802dbc8:	f89a 6001 	ldrb.w	r6, [sl, #1]
 802dbcc:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 802dbd0:	ea4f 6618 	mov.w	r6, r8, lsr #24
 802dbd4:	e6ff      	b.n	802d9d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dbd6:	f1bb 0f00 	cmp.w	fp, #0
 802dbda:	db3e      	blt.n	802dc5a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dbdc:	455a      	cmp	r2, fp
 802dbde:	dd3c      	ble.n	802dc5a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dbe0:	463e      	mov	r6, r7
 802dbe2:	46b8      	mov	r8, r7
 802dbe4:	b1dd      	cbz	r5, 802dc1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 802dbe6:	2800      	cmp	r0, #0
 802dbe8:	db30      	blt.n	802dc4c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dbea:	4584      	cmp	ip, r0
 802dbec:	dd2e      	ble.n	802dc4c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dbee:	f81a 200c 	ldrb.w	r2, [sl, ip]
 802dbf2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802dbf6:	9202      	str	r2, [sp, #8]
 802dbf8:	0e12      	lsrs	r2, r2, #24
 802dbfa:	9201      	str	r2, [sp, #4]
 802dbfc:	3001      	adds	r0, #1
 802dbfe:	d420      	bmi.n	802dc42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dc00:	4584      	cmp	ip, r0
 802dc02:	dd1e      	ble.n	802dc42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dc04:	b337      	cbz	r7, 802dc54 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2bc>
 802dc06:	44d4      	add	ip, sl
 802dc08:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802dc0c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802dc10:	9303      	str	r3, [sp, #12]
 802dc12:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802dc16:	e6ea      	b.n	802d9ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc18:	2600      	movs	r6, #0
 802dc1a:	46b0      	mov	r8, r6
 802dc1c:	e6db      	b.n	802d9d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dc1e:	2f0f      	cmp	r7, #15
 802dc20:	d822      	bhi.n	802dc68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dc22:	b2bb      	uxth	r3, r7
 802dc24:	4628      	mov	r0, r5
 802dc26:	46ab      	mov	fp, r5
 802dc28:	46aa      	mov	sl, r5
 802dc2a:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802dc2e:	46ac      	mov	ip, r5
 802dc30:	9501      	str	r5, [sp, #4]
 802dc32:	e6ee      	b.n	802da12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 802dc34:	f81e 6008 	ldrb.w	r6, [lr, r8]
 802dc38:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
 802dc3c:	ea4f 691e 	mov.w	r9, lr, lsr #24
 802dc40:	e7bd      	b.n	802dbbe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x226>
 802dc42:	f04f 0c00 	mov.w	ip, #0
 802dc46:	f8cd c00c 	str.w	ip, [sp, #12]
 802dc4a:	e6d0      	b.n	802d9ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc4c:	2200      	movs	r2, #0
 802dc4e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 802dc52:	e7d3      	b.n	802dbfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 802dc54:	9703      	str	r7, [sp, #12]
 802dc56:	46bc      	mov	ip, r7
 802dc58:	e6cc      	b.n	802d9f4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dc5a:	46b8      	mov	r8, r7
 802dc5c:	e9cd 7702 	strd	r7, r7, [sp, #8]
 802dc60:	46bc      	mov	ip, r7
 802dc62:	9701      	str	r7, [sp, #4]
 802dc64:	463e      	mov	r6, r7
 802dc66:	e6c5      	b.n	802d9f4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dc68:	4b03      	ldr	r3, [pc, #12]	@ (802dc78 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e0>)
 802dc6a:	4a04      	ldr	r2, [pc, #16]	@ (802dc7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e4>)
 802dc6c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802dc70:	4803      	ldr	r0, [pc, #12]	@ (802dc80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e8>)
 802dc72:	f004 fc21 	bl	80324b8 <__assert_func>
 802dc76:	bf00      	nop
 802dc78:	0803666c 	.word	0x0803666c
 802dc7c:	08036ce8 	.word	0x08036ce8
 802dc80:	080367f4 	.word	0x080367f4

0802dc84 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802dc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dc88:	ed2d 8b08 	vpush	{d8-d11}
 802dc8c:	b0a9      	sub	sp, #164	@ 0xa4
 802dc8e:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802dc90:	9022      	str	r0, [sp, #136]	@ 0x88
 802dc92:	9114      	str	r1, [sp, #80]	@ 0x50
 802dc94:	6860      	ldr	r0, [r4, #4]
 802dc96:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802dc98:	9217      	str	r2, [sp, #92]	@ 0x5c
 802dc9a:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802dc9c:	eeb0 aa40 	vmov.f32	s20, s0
 802dca0:	fb00 1b02 	mla	fp, r0, r2, r1
 802dca4:	6821      	ldr	r1, [r4, #0]
 802dca6:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802dcaa:	eb01 0800 	add.w	r8, r1, r0
 802dcae:	e9dd ab3b 	ldrd	sl, fp, [sp, #236]	@ 0xec
 802dcb2:	eef0 9a60 	vmov.f32	s19, s1
 802dcb6:	eeb0 9a41 	vmov.f32	s18, s2
 802dcba:	eef0 8a62 	vmov.f32	s17, s5
 802dcbe:	eeb0 8a43 	vmov.f32	s16, s6
 802dcc2:	eef0 ba44 	vmov.f32	s23, s8
 802dcc6:	eeb0 ba64 	vmov.f32	s22, s9
 802dcca:	eef0 aa45 	vmov.f32	s21, s10
 802dcce:	46c1      	mov	r9, r8
 802dcd0:	465f      	mov	r7, fp
 802dcd2:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dcd4:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802dcd6:	6852      	ldr	r2, [r2, #4]
 802dcd8:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802dcdc:	3204      	adds	r2, #4
 802dcde:	682d      	ldr	r5, [r5, #0]
 802dce0:	920a      	str	r2, [sp, #40]	@ 0x28
 802dce2:	b2a2      	uxth	r2, r4
 802dce4:	9423      	str	r4, [sp, #140]	@ 0x8c
 802dce6:	9511      	str	r5, [sp, #68]	@ 0x44
 802dce8:	9216      	str	r2, [sp, #88]	@ 0x58
 802dcea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802dcec:	2a00      	cmp	r2, #0
 802dcee:	dc02      	bgt.n	802dcf6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802dcf0:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802dcf2:	2a00      	cmp	r2, #0
 802dcf4:	dd65      	ble.n	802ddc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dcf6:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dcf8:	2b00      	cmp	r3, #0
 802dcfa:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802dcfe:	b235      	sxth	r5, r6
 802dd00:	fa0f f88c 	sxth.w	r8, ip
 802dd04:	f340 838b 	ble.w	802e41e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 802dd08:	1e6c      	subs	r4, r5, #1
 802dd0a:	f108 3eff 	add.w	lr, r8, #4294967295
 802dd0e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802dd12:	e9dd cb3d 	ldrd	ip, fp, [sp, #244]	@ 0xf4
 802dd16:	ea5f 422a 	movs.w	r2, sl, asr #16
 802dd1a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802dd1e:	d405      	bmi.n	802dd2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd20:	42a2      	cmp	r2, r4
 802dd22:	da03      	bge.n	802dd2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd24:	2900      	cmp	r1, #0
 802dd26:	db01      	blt.n	802dd2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd28:	4571      	cmp	r1, lr
 802dd2a:	db4f      	blt.n	802ddcc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802dd2c:	1c50      	adds	r0, r2, #1
 802dd2e:	d406      	bmi.n	802dd3e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd30:	42a8      	cmp	r0, r5
 802dd32:	dc04      	bgt.n	802dd3e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd34:	1c48      	adds	r0, r1, #1
 802dd36:	d402      	bmi.n	802dd3e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd38:	4540      	cmp	r0, r8
 802dd3a:	f340 834c 	ble.w	802e3d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802dd3e:	3b01      	subs	r3, #1
 802dd40:	44e2      	add	sl, ip
 802dd42:	445f      	add	r7, fp
 802dd44:	f109 0903 	add.w	r9, r9, #3
 802dd48:	d1e5      	bne.n	802dd16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802dd4a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802dd4c:	2b00      	cmp	r3, #0
 802dd4e:	dd38      	ble.n	802ddc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dd50:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802dd54:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802dd58:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802dd5c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802dd60:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802dd64:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802dd68:	ee69 7a27 	vmul.f32	s15, s18, s15
 802dd6c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802dd70:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802dd74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802dd78:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dd7c:	ee16 2a90 	vmov	r2, s13
 802dd80:	3b01      	subs	r3, #1
 802dd82:	9314      	str	r3, [sp, #80]	@ 0x50
 802dd84:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802dd86:	fb92 f3f3 	sdiv	r3, r2, r3
 802dd8a:	ee17 2a10 	vmov	r2, s14
 802dd8e:	eeb0 7a48 	vmov.f32	s14, s16
 802dd92:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dd96:	ee17 7a10 	vmov	r7, s14
 802dd9a:	eeb0 7a68 	vmov.f32	s14, s17
 802dd9e:	933d      	str	r3, [sp, #244]	@ 0xf4
 802dda0:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802dda2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dda6:	fb92 f3f3 	sdiv	r3, r2, r3
 802ddaa:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802ddac:	933e      	str	r3, [sp, #248]	@ 0xf8
 802ddae:	ee17 aa10 	vmov	sl, s14
 802ddb2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ddb4:	eeb0 8a67 	vmov.f32	s16, s15
 802ddb8:	eef0 8a46 	vmov.f32	s17, s12
 802ddbc:	bf08      	it	eq
 802ddbe:	4613      	moveq	r3, r2
 802ddc0:	e793      	b.n	802dcea <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802ddc2:	b029      	add	sp, #164	@ 0xa4
 802ddc4:	ecbd 8b08 	vpop	{d8-d11}
 802ddc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ddcc:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802ddd0:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802ddd2:	1e59      	subs	r1, r3, #1
 802ddd4:	fb00 a201 	mla	r2, r0, r1, sl
 802ddd8:	1412      	asrs	r2, r2, #16
 802ddda:	9109      	str	r1, [sp, #36]	@ 0x24
 802dddc:	f100 8168 	bmi.w	802e0b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802dde0:	42a2      	cmp	r2, r4
 802dde2:	f280 8165 	bge.w	802e0b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802dde6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802dde8:	fb02 7201 	mla	r2, r2, r1, r7
 802ddec:	1412      	asrs	r2, r2, #16
 802ddee:	f100 815f 	bmi.w	802e0b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802ddf2:	f108 31ff 	add.w	r1, r8, #4294967295
 802ddf6:	428a      	cmp	r2, r1
 802ddf8:	f280 815a 	bge.w	802e0b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802ddfc:	2b00      	cmp	r3, #0
 802ddfe:	dda4      	ble.n	802dd4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802de00:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802de04:	444b      	add	r3, r9
 802de06:	9310      	str	r3, [sp, #64]	@ 0x40
 802de08:	f109 0303 	add.w	r3, r9, #3
 802de0c:	9309      	str	r3, [sp, #36]	@ 0x24
 802de0e:	46d1      	mov	r9, sl
 802de10:	973c      	str	r7, [sp, #240]	@ 0xf0
 802de12:	462e      	mov	r6, r5
 802de14:	463b      	mov	r3, r7
 802de16:	e12b      	b.n	802e070 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802de18:	785f      	ldrb	r7, [r3, #1]
 802de1a:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 802de1e:	9712      	str	r7, [sp, #72]	@ 0x48
 802de20:	0e3f      	lsrs	r7, r7, #24
 802de22:	970b      	str	r7, [sp, #44]	@ 0x2c
 802de24:	b16a      	cbz	r2, 802de42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802de26:	199f      	adds	r7, r3, r6
 802de28:	5d9b      	ldrb	r3, [r3, r6]
 802de2a:	4626      	mov	r6, r4
 802de2c:	787f      	ldrb	r7, [r7, #1]
 802de2e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802de32:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 802de36:	9313      	str	r3, [sp, #76]	@ 0x4c
 802de38:	9415      	str	r4, [sp, #84]	@ 0x54
 802de3a:	0e1b      	lsrs	r3, r3, #24
 802de3c:	0e24      	lsrs	r4, r4, #24
 802de3e:	940d      	str	r4, [sp, #52]	@ 0x34
 802de40:	930c      	str	r3, [sp, #48]	@ 0x30
 802de42:	fa1f fc81 	uxth.w	ip, r1
 802de46:	b292      	uxth	r2, r2
 802de48:	fb0c f602 	mul.w	r6, ip, r2
 802de4c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802de50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802de52:	ebac 0706 	sub.w	r7, ip, r6
 802de56:	b2bf      	uxth	r7, r7
 802de58:	fb07 f103 	mul.w	r1, r7, r3
 802de5c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802de60:	b292      	uxth	r2, r2
 802de62:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 802de66:	1a9b      	subs	r3, r3, r2
 802de68:	b29b      	uxth	r3, r3
 802de6a:	fb03 1100 	mla	r1, r3, r0, r1
 802de6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802de70:	fb02 1104 	mla	r1, r2, r4, r1
 802de74:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802de76:	fb06 1104 	mla	r1, r6, r4, r1
 802de7a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802de7e:	2900      	cmp	r1, #0
 802de80:	f000 80e5 	beq.w	802e04e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802de84:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802de88:	28ff      	cmp	r0, #255	@ 0xff
 802de8a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802de8e:	940e      	str	r4, [sp, #56]	@ 0x38
 802de90:	950f      	str	r5, [sp, #60]	@ 0x3c
 802de92:	d01d      	beq.n	802ded0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 802de94:	fb04 fe00 	mul.w	lr, r4, r0
 802de98:	fb05 f800 	mul.w	r8, r5, r0
 802de9c:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802dea0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802dea4:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802dea8:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802deac:	44ae      	add	lr, r5
 802deae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802deb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802deb6:	0a00      	lsrs	r0, r0, #8
 802deb8:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802debc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802dec0:	ea4e 0e00 	orr.w	lr, lr, r0
 802dec4:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802dec8:	900e      	str	r0, [sp, #56]	@ 0x38
 802deca:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802dece:	900f      	str	r0, [sp, #60]	@ 0x3c
 802ded0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802ded2:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802ded6:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 802deda:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802dedc:	28ff      	cmp	r0, #255	@ 0xff
 802dede:	d01c      	beq.n	802df1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802dee0:	fb0e fe00 	mul.w	lr, lr, r0
 802dee4:	fb08 f800 	mul.w	r8, r8, r0
 802dee8:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802deec:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802def0:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802def4:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802def8:	44ae      	add	lr, r5
 802defa:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802defe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802df02:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802df06:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802df0a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802df0e:	ea4e 0808 	orr.w	r8, lr, r8
 802df12:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802df16:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802df1a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802df1c:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802df20:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802df24:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802df26:	28ff      	cmp	r0, #255	@ 0xff
 802df28:	d01c      	beq.n	802df64 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802df2a:	fb0c fc00 	mul.w	ip, ip, r0
 802df2e:	fb0a fa00 	mul.w	sl, sl, r0
 802df32:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802df36:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802df3a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802df3e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802df42:	44ac      	add	ip, r5
 802df44:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802df48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802df4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802df50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802df54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802df58:	ea4c 0a0a 	orr.w	sl, ip, sl
 802df5c:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 802df60:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802df64:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802df66:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802df6a:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802df6e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802df70:	2cff      	cmp	r4, #255	@ 0xff
 802df72:	d019      	beq.n	802dfa8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802df74:	fb00 f004 	mul.w	r0, r0, r4
 802df78:	fb0b fb04 	mul.w	fp, fp, r4
 802df7c:	0a05      	lsrs	r5, r0, #8
 802df7e:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802df82:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802df86:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 802df8a:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 802df8e:	4420      	add	r0, r4
 802df90:	0a00      	lsrs	r0, r0, #8
 802df92:	0a2d      	lsrs	r5, r5, #8
 802df94:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802df98:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 802df9c:	ea40 0b0b 	orr.w	fp, r0, fp
 802dfa0:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802dfa4:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802dfa8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802dfaa:	fb0e fe07 	mul.w	lr, lr, r7
 802dfae:	fb01 f104 	mul.w	r1, r1, r4
 802dfb2:	1c4d      	adds	r5, r1, #1
 802dfb4:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802dfb8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802dfbc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802dfbe:	fb08 f707 	mul.w	r7, r8, r7
 802dfc2:	fb05 ee03 	mla	lr, r5, r3, lr
 802dfc6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802dfc8:	fb0c ee02 	mla	lr, ip, r2, lr
 802dfcc:	fb05 7703 	mla	r7, r5, r3, r7
 802dfd0:	fb0a 7702 	mla	r7, sl, r2, r7
 802dfd4:	fb00 ee06 	mla	lr, r0, r6, lr
 802dfd8:	fb0b 7706 	mla	r7, fp, r6, r7
 802dfdc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802dfde:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802dfe2:	0a3f      	lsrs	r7, r7, #8
 802dfe4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802dfe8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802dfec:	ea4e 0307 	orr.w	r3, lr, r7
 802dff0:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 802dff4:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 802dff8:	b2c9      	uxtb	r1, r1
 802dffa:	fa5f fc83 	uxtb.w	ip, r3
 802dffe:	fb16 f601 	smulbb	r6, r6, r1
 802e002:	fb17 f701 	smulbb	r7, r7, r1
 802e006:	fb1c fc04 	smulbb	ip, ip, r4
 802e00a:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 802e00e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802e012:	0c1b      	lsrs	r3, r3, #16
 802e014:	fb00 c101 	mla	r1, r0, r1, ip
 802e018:	fb03 6304 	mla	r3, r3, r4, r6
 802e01c:	fb02 7204 	mla	r2, r2, r4, r7
 802e020:	b289      	uxth	r1, r1
 802e022:	b292      	uxth	r2, r2
 802e024:	b29b      	uxth	r3, r3
 802e026:	f101 0e01 	add.w	lr, r1, #1
 802e02a:	1c56      	adds	r6, r2, #1
 802e02c:	1c5d      	adds	r5, r3, #1
 802e02e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e030:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802e034:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802e038:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802e03c:	1209      	asrs	r1, r1, #8
 802e03e:	1212      	asrs	r2, r2, #8
 802e040:	121b      	asrs	r3, r3, #8
 802e042:	f800 1c03 	strb.w	r1, [r0, #-3]
 802e046:	f800 2c02 	strb.w	r2, [r0, #-2]
 802e04a:	f800 3c01 	strb.w	r3, [r0, #-1]
 802e04e:	9b3d      	ldr	r3, [sp, #244]	@ 0xf4
 802e050:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e052:	4499      	add	r9, r3
 802e054:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e056:	4413      	add	r3, r2
 802e058:	933c      	str	r3, [sp, #240]	@ 0xf0
 802e05a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802e05c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802e05e:	4293      	cmp	r3, r2
 802e060:	d024      	beq.n	802e0ac <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802e062:	4613      	mov	r3, r2
 802e064:	3303      	adds	r3, #3
 802e066:	9309      	str	r3, [sp, #36]	@ 0x24
 802e068:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802e06a:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802e06e:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e070:	ea4f 4229 	mov.w	r2, r9, asr #16
 802e074:	141b      	asrs	r3, r3, #16
 802e076:	fb06 2303 	mla	r3, r6, r3, r2
 802e07a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802e07c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802e07e:	5cc2      	ldrb	r2, [r0, r3]
 802e080:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802e084:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 802e088:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802e08a:	4403      	add	r3, r0
 802e08c:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802e090:	0e28      	lsrs	r0, r5, #24
 802e092:	2900      	cmp	r1, #0
 802e094:	f47f aec0 	bne.w	802de18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x194>
 802e098:	2a00      	cmp	r2, #0
 802e09a:	f43f aed2 	beq.w	802de42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e09e:	5d9b      	ldrb	r3, [r3, r6]
 802e0a0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802e0a4:	9313      	str	r3, [sp, #76]	@ 0x4c
 802e0a6:	0e1b      	lsrs	r3, r3, #24
 802e0a8:	930c      	str	r3, [sp, #48]	@ 0x30
 802e0aa:	e6ca      	b.n	802de42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e0ac:	4699      	mov	r9, r3
 802e0ae:	e64c      	b.n	802dd4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e0b0:	2b00      	cmp	r3, #0
 802e0b2:	f77f ae4a 	ble.w	802dd4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e0b6:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 802e0ba:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e0be:	1439      	asrs	r1, r7, #16
 802e0c0:	2a00      	cmp	r2, #0
 802e0c2:	46cb      	mov	fp, r9
 802e0c4:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 802e0c8:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802e0ca:	e9dd 953d 	ldrd	r9, r5, [sp, #244]	@ 0xf4
 802e0ce:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e0d2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e0d6:	f2c0 8154 	blt.w	802e382 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0da:	1e73      	subs	r3, r6, #1
 802e0dc:	429a      	cmp	r2, r3
 802e0de:	f280 8150 	bge.w	802e382 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0e2:	2900      	cmp	r1, #0
 802e0e4:	f2c0 814d 	blt.w	802e382 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0e8:	f10c 33ff 	add.w	r3, ip, #4294967295
 802e0ec:	4299      	cmp	r1, r3
 802e0ee:	f280 8148 	bge.w	802e382 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0f2:	b236      	sxth	r6, r6
 802e0f4:	fb01 2206 	mla	r2, r1, r6, r2
 802e0f8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802e0fa:	5c8b      	ldrb	r3, [r1, r2]
 802e0fc:	440a      	add	r2, r1
 802e0fe:	9210      	str	r2, [sp, #64]	@ 0x40
 802e100:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802e102:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802e106:	930e      	str	r3, [sp, #56]	@ 0x38
 802e108:	0e1b      	lsrs	r3, r3, #24
 802e10a:	2800      	cmp	r0, #0
 802e10c:	f000 8169 	beq.w	802e3e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 802e110:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e112:	f891 c001 	ldrb.w	ip, [r1, #1]
 802e116:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e11a:	9224      	str	r2, [sp, #144]	@ 0x90
 802e11c:	0e12      	lsrs	r2, r2, #24
 802e11e:	9218      	str	r2, [sp, #96]	@ 0x60
 802e120:	f1be 0f00 	cmp.w	lr, #0
 802e124:	f040 816a 	bne.w	802e3fc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802e128:	b280      	uxth	r0, r0
 802e12a:	fa1f fc8e 	uxth.w	ip, lr
 802e12e:	fb00 f20c 	mul.w	r2, r0, ip
 802e132:	4611      	mov	r1, r2
 802e134:	0106      	lsls	r6, r0, #4
 802e136:	1ab0      	subs	r0, r6, r2
 802e138:	9210      	str	r2, [sp, #64]	@ 0x40
 802e13a:	b282      	uxth	r2, r0
 802e13c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802e13e:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 802e142:	fb02 f000 	mul.w	r0, r2, r0
 802e146:	921b      	str	r2, [sp, #108]	@ 0x6c
 802e148:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802e14c:	fa1f f28c 	uxth.w	r2, ip
 802e150:	1ab6      	subs	r6, r6, r2
 802e152:	b2b6      	uxth	r6, r6
 802e154:	fb06 0c03 	mla	ip, r6, r3, r0
 802e158:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802e15a:	921c      	str	r2, [sp, #112]	@ 0x70
 802e15c:	fb02 cc00 	mla	ip, r2, r0, ip
 802e160:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e162:	961d      	str	r6, [sp, #116]	@ 0x74
 802e164:	fb01 cc02 	mla	ip, r1, r2, ip
 802e168:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802e16c:	f1bc 0f00 	cmp.w	ip, #0
 802e170:	f000 80f1 	beq.w	802e356 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e174:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802e176:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802e178:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e17c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802e180:	2bff      	cmp	r3, #255	@ 0xff
 802e182:	921e      	str	r2, [sp, #120]	@ 0x78
 802e184:	910e      	str	r1, [sp, #56]	@ 0x38
 802e186:	d01b      	beq.n	802e1c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 802e188:	fb01 f103 	mul.w	r1, r1, r3
 802e18c:	fb02 f203 	mul.w	r2, r2, r3
 802e190:	460b      	mov	r3, r1
 802e192:	0a11      	lsrs	r1, r2, #8
 802e194:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 802e198:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e19c:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802e1a0:	4431      	add	r1, r6
 802e1a2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802e1a6:	0a09      	lsrs	r1, r1, #8
 802e1a8:	0a1b      	lsrs	r3, r3, #8
 802e1aa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1b2:	430b      	orrs	r3, r1
 802e1b4:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802e1b8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1bc:	921e      	str	r2, [sp, #120]	@ 0x78
 802e1be:	930e      	str	r3, [sp, #56]	@ 0x38
 802e1c0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802e1c2:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802e1c4:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e1c8:	29ff      	cmp	r1, #255	@ 0xff
 802e1ca:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802e1ce:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e1d0:	9220      	str	r2, [sp, #128]	@ 0x80
 802e1d2:	d01b      	beq.n	802e20c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 802e1d4:	fb03 f301 	mul.w	r3, r3, r1
 802e1d8:	fb02 f201 	mul.w	r2, r2, r1
 802e1dc:	0a19      	lsrs	r1, r3, #8
 802e1de:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e1e2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1e6:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802e1ea:	4401      	add	r1, r0
 802e1ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802e1f0:	0a09      	lsrs	r1, r1, #8
 802e1f2:	0a1b      	lsrs	r3, r3, #8
 802e1f4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1f8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1fc:	ea41 0003 	orr.w	r0, r1, r3
 802e200:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802e204:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e206:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802e20a:	9320      	str	r3, [sp, #128]	@ 0x80
 802e20c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802e20e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802e210:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e214:	2aff      	cmp	r2, #255	@ 0xff
 802e216:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e21a:	9321      	str	r3, [sp, #132]	@ 0x84
 802e21c:	d01a      	beq.n	802e254 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d0>
 802e21e:	fb03 f302 	mul.w	r3, r3, r2
 802e222:	4618      	mov	r0, r3
 802e224:	fb06 f602 	mul.w	r6, r6, r2
 802e228:	0a31      	lsrs	r1, r6, #8
 802e22a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e22e:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802e232:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802e236:	440e      	add	r6, r1
 802e238:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802e23c:	0a36      	lsrs	r6, r6, #8
 802e23e:	0a1b      	lsrs	r3, r3, #8
 802e240:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802e244:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e248:	4333      	orrs	r3, r6
 802e24a:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e24e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e252:	9321      	str	r3, [sp, #132]	@ 0x84
 802e254:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802e256:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e25a:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802e25e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e260:	2aff      	cmp	r2, #255	@ 0xff
 802e262:	d01a      	beq.n	802e29a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x616>
 802e264:	fb03 f302 	mul.w	r3, r3, r2
 802e268:	fb0e fe02 	mul.w	lr, lr, r2
 802e26c:	0a19      	lsrs	r1, r3, #8
 802e26e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e272:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e276:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 802e27a:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802e27e:	4401      	add	r1, r0
 802e280:	0a09      	lsrs	r1, r1, #8
 802e282:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e286:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e28a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e28e:	ea41 0e0e 	orr.w	lr, r1, lr
 802e292:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802e296:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e29a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e29c:	fb0c f102 	mul.w	r1, ip, r2
 802e2a0:	1c48      	adds	r0, r1, #1
 802e2a2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802e2a6:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 802e2aa:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802e2ac:	9225      	str	r2, [sp, #148]	@ 0x94
 802e2ae:	4684      	mov	ip, r0
 802e2b0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802e2b2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802e2b4:	fb0c fc02 	mul.w	ip, ip, r2
 802e2b8:	fb00 f002 	mul.w	r0, r0, r2
 802e2bc:	4601      	mov	r1, r0
 802e2be:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802e2c0:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802e2c2:	fb00 cc02 	mla	ip, r0, r2, ip
 802e2c6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802e2c8:	fb00 1102 	mla	r1, r0, r2, r1
 802e2cc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802e2ce:	9821      	ldr	r0, [sp, #132]	@ 0x84
 802e2d0:	fb06 c602 	mla	r6, r6, r2, ip
 802e2d4:	fb00 1002 	mla	r0, r0, r2, r1
 802e2d8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e2da:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 802e2de:	fb03 6602 	mla	r6, r3, r2, r6
 802e2e2:	fb0e 0302 	mla	r3, lr, r2, r0
 802e2e6:	0a32      	lsrs	r2, r6, #8
 802e2e8:	0a1b      	lsrs	r3, r3, #8
 802e2ea:	f89b 6002 	ldrb.w	r6, [fp, #2]
 802e2ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e2f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e2f6:	4313      	orrs	r3, r2
 802e2f8:	fb16 f001 	smulbb	r0, r6, r1
 802e2fc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e2fe:	fa5f fe83 	uxtb.w	lr, r3
 802e302:	fb1e fe02 	smulbb	lr, lr, r2
 802e306:	f89b c001 	ldrb.w	ip, [fp, #1]
 802e30a:	900e      	str	r0, [sp, #56]	@ 0x38
 802e30c:	f89b 0000 	ldrb.w	r0, [fp]
 802e310:	fb1c fc01 	smulbb	ip, ip, r1
 802e314:	fb00 e001 	mla	r0, r0, r1, lr
 802e318:	4611      	mov	r1, r2
 802e31a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802e31e:	fb06 c202 	mla	r2, r6, r2, ip
 802e322:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802e324:	0c1b      	lsrs	r3, r3, #16
 802e326:	fb03 6301 	mla	r3, r3, r1, r6
 802e32a:	b280      	uxth	r0, r0
 802e32c:	b296      	uxth	r6, r2
 802e32e:	b29b      	uxth	r3, r3
 802e330:	1c5a      	adds	r2, r3, #1
 802e332:	f100 0c01 	add.w	ip, r0, #1
 802e336:	1c71      	adds	r1, r6, #1
 802e338:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802e33c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802e340:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802e344:	1200      	asrs	r0, r0, #8
 802e346:	120a      	asrs	r2, r1, #8
 802e348:	121b      	asrs	r3, r3, #8
 802e34a:	f88b 0000 	strb.w	r0, [fp]
 802e34e:	f88b 2001 	strb.w	r2, [fp, #1]
 802e352:	f88b 3002 	strb.w	r3, [fp, #2]
 802e356:	f1b8 0f00 	cmp.w	r8, #0
 802e35a:	f10b 0b03 	add.w	fp, fp, #3
 802e35e:	44ca      	add	sl, r9
 802e360:	442f      	add	r7, r5
 802e362:	dd2e      	ble.n	802e3c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e364:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802e368:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e36c:	2a00      	cmp	r2, #0
 802e36e:	f108 38ff 	add.w	r8, r8, #4294967295
 802e372:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e376:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e37a:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e37e:	f6bf aeac 	bge.w	802e0da <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802e382:	1c53      	adds	r3, r2, #1
 802e384:	d4e7      	bmi.n	802e356 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e386:	42b3      	cmp	r3, r6
 802e388:	dce5      	bgt.n	802e356 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e38a:	1c4b      	adds	r3, r1, #1
 802e38c:	d4e3      	bmi.n	802e356 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e38e:	4563      	cmp	r3, ip
 802e390:	dce1      	bgt.n	802e356 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e392:	fa0f f38c 	sxth.w	r3, ip
 802e396:	b236      	sxth	r6, r6
 802e398:	e9cd 6300 	strd	r6, r3, [sp]
 802e39c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802e39e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802e3a2:	e9cd e305 	strd	lr, r3, [sp, #20]
 802e3a6:	9202      	str	r2, [sp, #8]
 802e3a8:	4659      	mov	r1, fp
 802e3aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802e3ac:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e3ae:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802e3b0:	f7ff faf2 	bl	802d998 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 802e3b4:	f1b8 0f00 	cmp.w	r8, #0
 802e3b8:	f10b 0b03 	add.w	fp, fp, #3
 802e3bc:	44ca      	add	sl, r9
 802e3be:	442f      	add	r7, r5
 802e3c0:	dcd0      	bgt.n	802e364 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802e3c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802e3c4:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 802e3c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802e3cc:	3301      	adds	r3, #1
 802e3ce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e3d2:	4499      	add	r9, r3
 802e3d4:	e4b9      	b.n	802dd4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e3d6:	3b01      	subs	r3, #1
 802e3d8:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e3dc:	4698      	mov	r8, r3
 802e3de:	9309      	str	r3, [sp, #36]	@ 0x24
 802e3e0:	e66e      	b.n	802e0c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802e3e2:	f1be 0f00 	cmp.w	lr, #0
 802e3e6:	f43f ae9f 	beq.w	802e128 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e3ea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e3ec:	5d92      	ldrb	r2, [r2, r6]
 802e3ee:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e3f0:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802e3f4:	9226      	str	r2, [sp, #152]	@ 0x98
 802e3f6:	0e12      	lsrs	r2, r2, #24
 802e3f8:	9219      	str	r2, [sp, #100]	@ 0x64
 802e3fa:	e695      	b.n	802e128 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e3fc:	eb01 0c06 	add.w	ip, r1, r6
 802e400:	f89c c001 	ldrb.w	ip, [ip, #1]
 802e404:	5d89      	ldrb	r1, [r1, r6]
 802e406:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e408:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802e40c:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 802e410:	9227      	str	r2, [sp, #156]	@ 0x9c
 802e412:	0e12      	lsrs	r2, r2, #24
 802e414:	921a      	str	r2, [sp, #104]	@ 0x68
 802e416:	0e32      	lsrs	r2, r6, #24
 802e418:	9626      	str	r6, [sp, #152]	@ 0x98
 802e41a:	9219      	str	r2, [sp, #100]	@ 0x64
 802e41c:	e684      	b.n	802e128 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e41e:	f43f ac94 	beq.w	802dd4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e422:	1e6c      	subs	r4, r5, #1
 802e424:	e4d4      	b.n	802ddd0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802e426:	bf00      	nop

0802e428 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 802e428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e42c:	b089      	sub	sp, #36	@ 0x24
 802e42e:	f9bd b048 	ldrsh.w	fp, [sp, #72]	@ 0x48
 802e432:	e9dd 4014 	ldrd	r4, r0, [sp, #80]	@ 0x50
 802e436:	fb00 450b 	mla	r5, r0, fp, r4
 802e43a:	2800      	cmp	r0, #0
 802e43c:	4694      	mov	ip, r2
 802e43e:	f100 0601 	add.w	r6, r0, #1
 802e442:	442a      	add	r2, r5
 802e444:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802e448:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 802e44c:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 802e450:	db02      	blt.n	802e458 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x30>
 802e452:	4580      	cmp	r8, r0
 802e454:	f300 810a 	bgt.w	802e66c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x244>
 802e458:	f04f 0c00 	mov.w	ip, #0
 802e45c:	46e6      	mov	lr, ip
 802e45e:	4665      	mov	r5, ip
 802e460:	46e1      	mov	r9, ip
 802e462:	2e00      	cmp	r6, #0
 802e464:	db02      	blt.n	802e46c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x44>
 802e466:	45b0      	cmp	r8, r6
 802e468:	f300 811a 	bgt.w	802e6a0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x278>
 802e46c:	2400      	movs	r4, #0
 802e46e:	46a0      	mov	r8, r4
 802e470:	e9cd 4403 	strd	r4, r4, [sp, #12]
 802e474:	f1ba 0f0f 	cmp.w	sl, #15
 802e478:	f200 8158 	bhi.w	802e72c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e47c:	2f0f      	cmp	r7, #15
 802e47e:	f200 8155 	bhi.w	802e72c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e482:	b2ba      	uxth	r2, r7
 802e484:	fa1f f38a 	uxth.w	r3, sl
 802e488:	fb02 f703 	mul.w	r7, r2, r3
 802e48c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802e490:	b292      	uxth	r2, r2
 802e492:	fb02 fa08 	mul.w	sl, r2, r8
 802e496:	fb07 fb04 	mul.w	fp, r7, r4
 802e49a:	011b      	lsls	r3, r3, #4
 802e49c:	1bd8      	subs	r0, r3, r7
 802e49e:	b280      	uxth	r0, r0
 802e4a0:	9001      	str	r0, [sp, #4]
 802e4a2:	fb00 f00c 	mul.w	r0, r0, ip
 802e4a6:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802e4aa:	1a9b      	subs	r3, r3, r2
 802e4ac:	b29b      	uxth	r3, r3
 802e4ae:	fb03 000e 	mla	r0, r3, lr, r0
 802e4b2:	4450      	add	r0, sl
 802e4b4:	4458      	add	r0, fp
 802e4b6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802e4ba:	9002      	str	r0, [sp, #8]
 802e4bc:	2800      	cmp	r0, #0
 802e4be:	f000 80d2 	beq.w	802e666 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 802e4c2:	f009 10ff 	and.w	r0, r9, #16711935	@ 0xff00ff
 802e4c6:	f409 467f 	and.w	r6, r9, #65280	@ 0xff00
 802e4ca:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802e4ce:	9005      	str	r0, [sp, #20]
 802e4d0:	9606      	str	r6, [sp, #24]
 802e4d2:	d01e      	beq.n	802e512 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xea>
 802e4d4:	fb00 fb0e 	mul.w	fp, r0, lr
 802e4d8:	fb06 fe0e 	mul.w	lr, r6, lr
 802e4dc:	ea4f 201b 	mov.w	r0, fp, lsr #8
 802e4e0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e4e4:	f50e 7a80 	add.w	sl, lr, #256	@ 0x100
 802e4e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802e4ec:	4483      	add	fp, r0
 802e4ee:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 802e4f2:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802e4f6:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802e4fa:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802e4fe:	f40a 4e7f 	and.w	lr, sl, #65280	@ 0xff00
 802e502:	ea4b 0e0e 	orr.w	lr, fp, lr
 802e506:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e50a:	9005      	str	r0, [sp, #20]
 802e50c:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802e510:	9006      	str	r0, [sp, #24]
 802e512:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e516:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802e51a:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e51e:	9007      	str	r0, [sp, #28]
 802e520:	d01d      	beq.n	802e55e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x136>
 802e522:	fb0a fa0c 	mul.w	sl, sl, ip
 802e526:	fb00 f50c 	mul.w	r5, r0, ip
 802e52a:	ea4f 201a 	mov.w	r0, sl, lsr #8
 802e52e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e532:	f505 7b80 	add.w	fp, r5, #256	@ 0x100
 802e536:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802e53a:	4482      	add	sl, r0
 802e53c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802e540:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e544:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802e548:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802e54c:	f40b 457f 	and.w	r5, fp, #65280	@ 0xff00
 802e550:	ea4a 0505 	orr.w	r5, sl, r5
 802e554:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e558:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e55c:	9007      	str	r0, [sp, #28]
 802e55e:	9803      	ldr	r0, [sp, #12]
 802e560:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802e564:	f000 19ff 	and.w	r9, r0, #16711935	@ 0xff00ff
 802e568:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e56c:	d01b      	beq.n	802e5a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x17e>
 802e56e:	fb09 f908 	mul.w	r9, r9, r8
 802e572:	fb06 f608 	mul.w	r6, r6, r8
 802e576:	ea4f 2c19 	mov.w	ip, r9, lsr #8
 802e57a:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802e57e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e582:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 802e586:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802e58a:	44e1      	add	r9, ip
 802e58c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802e590:	0a30      	lsrs	r0, r6, #8
 802e592:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802e596:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e59a:	ea49 0606 	orr.w	r6, r9, r6
 802e59e:	f006 19ff 	and.w	r9, r6, #16711935	@ 0xff00ff
 802e5a2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802e5a6:	9d04      	ldr	r5, [sp, #16]
 802e5a8:	2cff      	cmp	r4, #255	@ 0xff
 802e5aa:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802e5ae:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802e5b2:	d01a      	beq.n	802e5ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1c2>
 802e5b4:	fb00 f004 	mul.w	r0, r0, r4
 802e5b8:	fb0e f404 	mul.w	r4, lr, r4
 802e5bc:	ea4f 2c10 	mov.w	ip, r0, lsr #8
 802e5c0:	f504 7e80 	add.w	lr, r4, #256	@ 0x100
 802e5c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e5c8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e5cc:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
 802e5d0:	4460      	add	r0, ip
 802e5d2:	0a00      	lsrs	r0, r0, #8
 802e5d4:	0a24      	lsrs	r4, r4, #8
 802e5d6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e5da:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802e5de:	ea40 0e0e 	orr.w	lr, r0, lr
 802e5e2:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e5e6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e5ea:	9c02      	ldr	r4, [sp, #8]
 802e5ec:	9d07      	ldr	r5, [sp, #28]
 802e5ee:	ea6f 0c04 	mvn.w	ip, r4
 802e5f2:	9c01      	ldr	r4, [sp, #4]
 802e5f4:	fa5f fc8c 	uxtb.w	ip, ip
 802e5f8:	fb0a fb04 	mul.w	fp, sl, r4
 802e5fc:	fb05 f504 	mul.w	r5, r5, r4
 802e600:	9c05      	ldr	r4, [sp, #20]
 802e602:	fb04 bb03 	mla	fp, r4, r3, fp
 802e606:	9c06      	ldr	r4, [sp, #24]
 802e608:	fb09 b902 	mla	r9, r9, r2, fp
 802e60c:	fb04 5303 	mla	r3, r4, r3, r5
 802e610:	fb06 3602 	mla	r6, r6, r2, r3
 802e614:	780c      	ldrb	r4, [r1, #0]
 802e616:	fb00 9007 	mla	r0, r0, r7, r9
 802e61a:	784a      	ldrb	r2, [r1, #1]
 802e61c:	fb0e 6707 	mla	r7, lr, r7, r6
 802e620:	788b      	ldrb	r3, [r1, #2]
 802e622:	fb02 f20c 	mul.w	r2, r2, ip
 802e626:	fb03 f30c 	mul.w	r3, r3, ip
 802e62a:	fb04 fc0c 	mul.w	ip, r4, ip
 802e62e:	0a00      	lsrs	r0, r0, #8
 802e630:	0a3f      	lsrs	r7, r7, #8
 802e632:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e636:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e63a:	4338      	orrs	r0, r7
 802e63c:	1c54      	adds	r4, r2, #1
 802e63e:	1c5f      	adds	r7, r3, #1
 802e640:	f10c 0601 	add.w	r6, ip, #1
 802e644:	0a05      	lsrs	r5, r0, #8
 802e646:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802e64a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802e64e:	0c04      	lsrs	r4, r0, #16
 802e650:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802e654:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802e658:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802e65c:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802e660:	704a      	strb	r2, [r1, #1]
 802e662:	708b      	strb	r3, [r1, #2]
 802e664:	7008      	strb	r0, [r1, #0]
 802e666:	b009      	add	sp, #36	@ 0x24
 802e668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e66c:	2c00      	cmp	r4, #0
 802e66e:	db01      	blt.n	802e674 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24c>
 802e670:	45a3      	cmp	fp, r4
 802e672:	dc41      	bgt.n	802e6f8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2d0>
 802e674:	f04f 0e00 	mov.w	lr, #0
 802e678:	46f1      	mov	r9, lr
 802e67a:	1c60      	adds	r0, r4, #1
 802e67c:	d42b      	bmi.n	802e6d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e67e:	4583      	cmp	fp, r0
 802e680:	dd29      	ble.n	802e6d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e682:	f1ba 0f00 	cmp.w	sl, #0
 802e686:	d005      	beq.n	802e694 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x26c>
 802e688:	7850      	ldrb	r0, [r2, #1]
 802e68a:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 802e68e:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 802e692:	e6e6      	b.n	802e462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e694:	2e00      	cmp	r6, #0
 802e696:	db42      	blt.n	802e71e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e698:	45b0      	cmp	r8, r6
 802e69a:	dd40      	ble.n	802e71e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e69c:	46d4      	mov	ip, sl
 802e69e:	4655      	mov	r5, sl
 802e6a0:	b1ef      	cbz	r7, 802e6de <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 802e6a2:	2c00      	cmp	r4, #0
 802e6a4:	db32      	blt.n	802e70c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e6a6:	45a3      	cmp	fp, r4
 802e6a8:	dd30      	ble.n	802e70c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e6aa:	f812 000b 	ldrb.w	r0, [r2, fp]
 802e6ae:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802e6b2:	9003      	str	r0, [sp, #12]
 802e6b4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 802e6b8:	3401      	adds	r4, #1
 802e6ba:	d424      	bmi.n	802e706 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e6bc:	45a3      	cmp	fp, r4
 802e6be:	dd22      	ble.n	802e706 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e6c0:	f1ba 0f00 	cmp.w	sl, #0
 802e6c4:	d027      	beq.n	802e716 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ee>
 802e6c6:	4493      	add	fp, r2
 802e6c8:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802e6cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802e6d0:	9304      	str	r3, [sp, #16]
 802e6d2:	0e1c      	lsrs	r4, r3, #24
 802e6d4:	e6ce      	b.n	802e474 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e6d6:	f04f 0c00 	mov.w	ip, #0
 802e6da:	4665      	mov	r5, ip
 802e6dc:	e6c1      	b.n	802e462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e6de:	f1ba 0f0f 	cmp.w	sl, #15
 802e6e2:	d823      	bhi.n	802e72c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e6e4:	fa1f f38a 	uxth.w	r3, sl
 802e6e8:	463a      	mov	r2, r7
 802e6ea:	46bb      	mov	fp, r7
 802e6ec:	46ba      	mov	sl, r7
 802e6ee:	e9cd 7703 	strd	r7, r7, [sp, #12]
 802e6f2:	463c      	mov	r4, r7
 802e6f4:	46b8      	mov	r8, r7
 802e6f6:	e6d0      	b.n	802e49a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x72>
 802e6f8:	f81c 0005 	ldrb.w	r0, [ip, r5]
 802e6fc:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 802e700:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802e704:	e7b9      	b.n	802e67a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 802e706:	2400      	movs	r4, #0
 802e708:	9404      	str	r4, [sp, #16]
 802e70a:	e6b3      	b.n	802e474 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e70c:	f04f 0800 	mov.w	r8, #0
 802e710:	f8cd 800c 	str.w	r8, [sp, #12]
 802e714:	e7d0      	b.n	802e6b8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>
 802e716:	f8cd a010 	str.w	sl, [sp, #16]
 802e71a:	4654      	mov	r4, sl
 802e71c:	e6ae      	b.n	802e47c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e71e:	4655      	mov	r5, sl
 802e720:	e9cd aa03 	strd	sl, sl, [sp, #12]
 802e724:	4654      	mov	r4, sl
 802e726:	46d0      	mov	r8, sl
 802e728:	46d4      	mov	ip, sl
 802e72a:	e6a7      	b.n	802e47c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e72c:	4b03      	ldr	r3, [pc, #12]	@ (802e73c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x314>)
 802e72e:	4a04      	ldr	r2, [pc, #16]	@ (802e740 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x318>)
 802e730:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802e734:	4803      	ldr	r0, [pc, #12]	@ (802e744 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x31c>)
 802e736:	f003 febf 	bl	80324b8 <__assert_func>
 802e73a:	bf00      	nop
 802e73c:	0803666c 	.word	0x0803666c
 802e740:	08036ce8 	.word	0x08036ce8
 802e744:	080367f4 	.word	0x080367f4

0802e748 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802e748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e74c:	ed2d 8b0a 	vpush	{d8-d12}
 802e750:	eeb0 aa40 	vmov.f32	s20, s0
 802e754:	eef0 9a60 	vmov.f32	s19, s1
 802e758:	eeb0 9a41 	vmov.f32	s18, s2
 802e75c:	eef0 8a62 	vmov.f32	s17, s5
 802e760:	eeb0 8a43 	vmov.f32	s16, s6
 802e764:	eeb0 ca44 	vmov.f32	s24, s8
 802e768:	eef0 ba64 	vmov.f32	s23, s9
 802e76c:	eeb0 ba45 	vmov.f32	s22, s10
 802e770:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802e774:	b0a3      	sub	sp, #140	@ 0x8c
 802e776:	901e      	str	r0, [sp, #120]	@ 0x78
 802e778:	9111      	str	r1, [sp, #68]	@ 0x44
 802e77a:	9213      	str	r2, [sp, #76]	@ 0x4c
 802e77c:	e9dd 413b 	ldrd	r4, r1, [sp, #236]	@ 0xec
 802e780:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802e782:	6860      	ldr	r0, [r4, #4]
 802e784:	fb00 1b02 	mla	fp, r0, r2, r1
 802e788:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e78a:	6821      	ldr	r1, [r4, #0]
 802e78c:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802e78e:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802e792:	6852      	ldr	r2, [r2, #4]
 802e794:	eb01 0800 	add.w	r8, r1, r0
 802e798:	6824      	ldr	r4, [r4, #0]
 802e79a:	e9dd 7b37 	ldrd	r7, fp, [sp, #220]	@ 0xdc
 802e79e:	3204      	adds	r2, #4
 802e7a0:	46c3      	mov	fp, r8
 802e7a2:	46b8      	mov	r8, r7
 802e7a4:	9f38      	ldr	r7, [sp, #224]	@ 0xe0
 802e7a6:	940e      	str	r4, [sp, #56]	@ 0x38
 802e7a8:	920a      	str	r2, [sp, #40]	@ 0x28
 802e7aa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e7ac:	2a00      	cmp	r2, #0
 802e7ae:	dc02      	bgt.n	802e7b6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802e7b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e7b2:	2a00      	cmp	r2, #0
 802e7b4:	dd63      	ble.n	802e87e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e7b6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e7b8:	2b00      	cmp	r3, #0
 802e7ba:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802e7be:	b234      	sxth	r4, r6
 802e7c0:	fa0f f98c 	sxth.w	r9, ip
 802e7c4:	f340 835f 	ble.w	802ee86 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e7c8:	1e65      	subs	r5, r4, #1
 802e7ca:	f109 3eff 	add.w	lr, r9, #4294967295
 802e7ce:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802e7d2:	e9dd ca39 	ldrd	ip, sl, [sp, #228]	@ 0xe4
 802e7d6:	ea5f 4228 	movs.w	r2, r8, asr #16
 802e7da:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e7de:	d405      	bmi.n	802e7ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e7e0:	42aa      	cmp	r2, r5
 802e7e2:	da03      	bge.n	802e7ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e7e4:	2900      	cmp	r1, #0
 802e7e6:	db01      	blt.n	802e7ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e7e8:	4571      	cmp	r1, lr
 802e7ea:	db4d      	blt.n	802e888 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802e7ec:	1c50      	adds	r0, r2, #1
 802e7ee:	d406      	bmi.n	802e7fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e7f0:	42a0      	cmp	r0, r4
 802e7f2:	dc04      	bgt.n	802e7fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e7f4:	1c48      	adds	r0, r1, #1
 802e7f6:	d402      	bmi.n	802e7fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e7f8:	4548      	cmp	r0, r9
 802e7fa:	f340 831e 	ble.w	802ee3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 802e7fe:	3b01      	subs	r3, #1
 802e800:	44e0      	add	r8, ip
 802e802:	4457      	add	r7, sl
 802e804:	f10b 0b03 	add.w	fp, fp, #3
 802e808:	d1e5      	bne.n	802e7d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802e80a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802e80c:	2b00      	cmp	r3, #0
 802e80e:	dd36      	ble.n	802e87e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e810:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802e814:	ee79 9aab 	vadd.f32	s19, s19, s23
 802e818:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802e81c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802e820:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802e824:	ee69 7a27 	vmul.f32	s15, s18, s15
 802e828:	ee76 6a68 	vsub.f32	s13, s12, s17
 802e82c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802e830:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802e834:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e838:	ee16 2a90 	vmov	r2, s13
 802e83c:	3b01      	subs	r3, #1
 802e83e:	9311      	str	r3, [sp, #68]	@ 0x44
 802e840:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e842:	fb92 f3f3 	sdiv	r3, r2, r3
 802e846:	ee17 2a10 	vmov	r2, s14
 802e84a:	eeb0 7a48 	vmov.f32	s14, s16
 802e84e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e852:	ee17 7a10 	vmov	r7, s14
 802e856:	eeb0 7a68 	vmov.f32	s14, s17
 802e85a:	9339      	str	r3, [sp, #228]	@ 0xe4
 802e85c:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e85e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e862:	fb92 f3f3 	sdiv	r3, r2, r3
 802e866:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e868:	933a      	str	r3, [sp, #232]	@ 0xe8
 802e86a:	ee17 8a10 	vmov	r8, s14
 802e86e:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e870:	eeb0 8a67 	vmov.f32	s16, s15
 802e874:	eef0 8a46 	vmov.f32	s17, s12
 802e878:	bf08      	it	eq
 802e87a:	4613      	moveq	r3, r2
 802e87c:	e795      	b.n	802e7aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802e87e:	b023      	add	sp, #140	@ 0x8c
 802e880:	ecbd 8b0a 	vpop	{d8-d12}
 802e884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e888:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e88c:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 802e88e:	1e59      	subs	r1, r3, #1
 802e890:	fb00 8201 	mla	r2, r0, r1, r8
 802e894:	1412      	asrs	r2, r2, #16
 802e896:	9109      	str	r1, [sp, #36]	@ 0x24
 802e898:	f100 8151 	bmi.w	802eb3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e89c:	42aa      	cmp	r2, r5
 802e89e:	f280 814e 	bge.w	802eb3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8a2:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802e8a4:	fb02 7201 	mla	r2, r2, r1, r7
 802e8a8:	1412      	asrs	r2, r2, #16
 802e8aa:	f100 8148 	bmi.w	802eb3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8ae:	f109 31ff 	add.w	r1, r9, #4294967295
 802e8b2:	428a      	cmp	r2, r1
 802e8b4:	f280 8143 	bge.w	802eb3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8b8:	2b00      	cmp	r3, #0
 802e8ba:	dda6      	ble.n	802e80a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802e8bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e8c0:	445b      	add	r3, fp
 802e8c2:	930d      	str	r3, [sp, #52]	@ 0x34
 802e8c4:	f10b 0c03 	add.w	ip, fp, #3
 802e8c8:	46c1      	mov	r9, r8
 802e8ca:	9738      	str	r7, [sp, #224]	@ 0xe0
 802e8cc:	4621      	mov	r1, r4
 802e8ce:	463b      	mov	r3, r7
 802e8d0:	e114      	b.n	802eafc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802e8d2:	f893 e001 	ldrb.w	lr, [r3, #1]
 802e8d6:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 802e8da:	950f      	str	r5, [sp, #60]	@ 0x3c
 802e8dc:	0e2d      	lsrs	r5, r5, #24
 802e8de:	9506      	str	r5, [sp, #24]
 802e8e0:	b162      	cbz	r2, 802e8fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802e8e2:	185d      	adds	r5, r3, r1
 802e8e4:	786d      	ldrb	r5, [r5, #1]
 802e8e6:	5c5b      	ldrb	r3, [r3, r1]
 802e8e8:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802e8ec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802e8f0:	9112      	str	r1, [sp, #72]	@ 0x48
 802e8f2:	9310      	str	r3, [sp, #64]	@ 0x40
 802e8f4:	0e09      	lsrs	r1, r1, #24
 802e8f6:	0e1b      	lsrs	r3, r3, #24
 802e8f8:	9108      	str	r1, [sp, #32]
 802e8fa:	9307      	str	r3, [sp, #28]
 802e8fc:	b2a4      	uxth	r4, r4
 802e8fe:	b292      	uxth	r2, r2
 802e900:	fb04 f502 	mul.w	r5, r4, r2
 802e904:	0124      	lsls	r4, r4, #4
 802e906:	1b66      	subs	r6, r4, r5
 802e908:	9b06      	ldr	r3, [sp, #24]
 802e90a:	b2b6      	uxth	r6, r6
 802e90c:	fb06 f103 	mul.w	r1, r6, r3
 802e910:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802e914:	b292      	uxth	r2, r2
 802e916:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802e91a:	1a9b      	subs	r3, r3, r2
 802e91c:	b29b      	uxth	r3, r3
 802e91e:	fb03 1100 	mla	r1, r3, r0, r1
 802e922:	9c07      	ldr	r4, [sp, #28]
 802e924:	fb02 1104 	mla	r1, r2, r4, r1
 802e928:	9c08      	ldr	r4, [sp, #32]
 802e92a:	fb05 1104 	mla	r1, r5, r4, r1
 802e92e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802e932:	9109      	str	r1, [sp, #36]	@ 0x24
 802e934:	2900      	cmp	r1, #0
 802e936:	f000 80d2 	beq.w	802eade <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 802e93a:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802e93e:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e942:	28ff      	cmp	r0, #255	@ 0xff
 802e944:	940b      	str	r4, [sp, #44]	@ 0x2c
 802e946:	910c      	str	r1, [sp, #48]	@ 0x30
 802e948:	d01b      	beq.n	802e982 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802e94a:	fb04 f400 	mul.w	r4, r4, r0
 802e94e:	4627      	mov	r7, r4
 802e950:	fb01 fe00 	mul.w	lr, r1, r0
 802e954:	0a24      	lsrs	r4, r4, #8
 802e956:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e95a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e95e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e962:	4427      	add	r7, r4
 802e964:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802e968:	0a3f      	lsrs	r7, r7, #8
 802e96a:	0a00      	lsrs	r0, r0, #8
 802e96c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e970:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802e974:	4307      	orrs	r7, r0
 802e976:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 802e97a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802e97c:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e980:	910c      	str	r1, [sp, #48]	@ 0x30
 802e982:	9806      	ldr	r0, [sp, #24]
 802e984:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802e986:	28ff      	cmp	r0, #255	@ 0xff
 802e988:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802e98c:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802e990:	d01a      	beq.n	802e9c8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 802e992:	fb07 f700 	mul.w	r7, r7, r0
 802e996:	fb0e fe00 	mul.w	lr, lr, r0
 802e99a:	0a3c      	lsrs	r4, r7, #8
 802e99c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e9a0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e9a4:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e9a8:	4427      	add	r7, r4
 802e9aa:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802e9ae:	0a3f      	lsrs	r7, r7, #8
 802e9b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e9b4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e9b8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e9bc:	ea47 0e0e 	orr.w	lr, r7, lr
 802e9c0:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 802e9c4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e9c8:	9c07      	ldr	r4, [sp, #28]
 802e9ca:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e9cc:	2cff      	cmp	r4, #255	@ 0xff
 802e9ce:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802e9d2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802e9d6:	d01b      	beq.n	802ea10 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802e9d8:	fb00 f004 	mul.w	r0, r0, r4
 802e9dc:	fb0a fa04 	mul.w	sl, sl, r4
 802e9e0:	ea4f 2810 	mov.w	r8, r0, lsr #8
 802e9e4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802e9e8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e9ec:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 802e9f0:	4440      	add	r0, r8
 802e9f2:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 802e9f6:	0a00      	lsrs	r0, r0, #8
 802e9f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e9fc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ea00:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ea04:	ea40 0a0a 	orr.w	sl, r0, sl
 802ea08:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802ea0c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ea10:	9c08      	ldr	r4, [sp, #32]
 802ea12:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ea14:	2cff      	cmp	r4, #255	@ 0xff
 802ea16:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802ea1a:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802ea1e:	d01b      	beq.n	802ea58 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 802ea20:	fb08 f804 	mul.w	r8, r8, r4
 802ea24:	fb0b fb04 	mul.w	fp, fp, r4
 802ea28:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802ea2c:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 802ea30:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802ea34:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802ea38:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802ea3c:	4488      	add	r8, r1
 802ea3e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ea42:	0a24      	lsrs	r4, r4, #8
 802ea44:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea48:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ea4c:	ea48 0b0b 	orr.w	fp, r8, fp
 802ea50:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 802ea54:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ea58:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802ea5a:	fb07 f706 	mul.w	r7, r7, r6
 802ea5e:	43c9      	mvns	r1, r1
 802ea60:	fb0e f606 	mul.w	r6, lr, r6
 802ea64:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802ea66:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802ea6a:	fb04 7703 	mla	r7, r4, r3, r7
 802ea6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802ea70:	fb00 7702 	mla	r7, r0, r2, r7
 802ea74:	fb04 6603 	mla	r6, r4, r3, r6
 802ea78:	fb0a 6602 	mla	r6, sl, r2, r6
 802ea7c:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 802ea80:	fb0b 6b05 	mla	fp, fp, r5, r6
 802ea84:	fb08 7805 	mla	r8, r8, r5, r7
 802ea88:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802ea8c:	b2c9      	uxtb	r1, r1
 802ea8e:	fb0e fe01 	mul.w	lr, lr, r1
 802ea92:	fb04 f401 	mul.w	r4, r4, r1
 802ea96:	fb03 f101 	mul.w	r1, r3, r1
 802ea9a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ea9e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802eaa2:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802eaa6:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802eaaa:	ea48 030b 	orr.w	r3, r8, fp
 802eaae:	f10e 0201 	add.w	r2, lr, #1
 802eab2:	1c66      	adds	r6, r4, #1
 802eab4:	1c4d      	adds	r5, r1, #1
 802eab6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 802eaba:	0a18      	lsrs	r0, r3, #8
 802eabc:	0c1a      	lsrs	r2, r3, #16
 802eabe:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802eac2:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802eac6:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802eaca:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802eace:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802ead2:	f80c ec02 	strb.w	lr, [ip, #-2]
 802ead6:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802eada:	f80c 1c03 	strb.w	r1, [ip, #-3]
 802eade:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 802eae0:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802eae2:	4499      	add	r9, r3
 802eae4:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eae6:	4413      	add	r3, r2
 802eae8:	9338      	str	r3, [sp, #224]	@ 0xe0
 802eaea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802eaec:	4563      	cmp	r3, ip
 802eaee:	d024      	beq.n	802eb3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802eaf0:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 802eaf2:	f10c 0c03 	add.w	ip, ip, #3
 802eaf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802eafa:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eafc:	ea4f 4229 	mov.w	r2, r9, asr #16
 802eb00:	141b      	asrs	r3, r3, #16
 802eb02:	fb01 2303 	mla	r3, r1, r3, r2
 802eb06:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802eb08:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802eb0a:	5cc2      	ldrb	r2, [r0, r3]
 802eb0c:	f3c9 3403 	ubfx	r4, r9, #12, #4
 802eb10:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802eb14:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802eb16:	4403      	add	r3, r0
 802eb18:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802eb1c:	0e38      	lsrs	r0, r7, #24
 802eb1e:	2c00      	cmp	r4, #0
 802eb20:	f47f aed7 	bne.w	802e8d2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802eb24:	2a00      	cmp	r2, #0
 802eb26:	f43f aee9 	beq.w	802e8fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb2a:	5c5b      	ldrb	r3, [r3, r1]
 802eb2c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eb2e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802eb32:	9310      	str	r3, [sp, #64]	@ 0x40
 802eb34:	0e1b      	lsrs	r3, r3, #24
 802eb36:	9307      	str	r3, [sp, #28]
 802eb38:	e6e0      	b.n	802e8fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb3a:	469b      	mov	fp, r3
 802eb3c:	e665      	b.n	802e80a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb3e:	2b00      	cmp	r3, #0
 802eb40:	f77f ae63 	ble.w	802e80a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb44:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802eb48:	ea4f 4228 	mov.w	r2, r8, asr #16
 802eb4c:	1439      	asrs	r1, r7, #16
 802eb4e:	2a00      	cmp	r2, #0
 802eb50:	46d9      	mov	r9, fp
 802eb52:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 802eb56:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802eb58:	e9dd b539 	ldrd	fp, r5, [sp, #228]	@ 0xe4
 802eb5c:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802eb60:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802eb64:	f2c0 8141 	blt.w	802edea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb68:	1e73      	subs	r3, r6, #1
 802eb6a:	429a      	cmp	r2, r3
 802eb6c:	f280 813d 	bge.w	802edea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb70:	2900      	cmp	r1, #0
 802eb72:	f2c0 813a 	blt.w	802edea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb76:	f10c 33ff 	add.w	r3, ip, #4294967295
 802eb7a:	4299      	cmp	r1, r3
 802eb7c:	f280 8135 	bge.w	802edea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb80:	b233      	sxth	r3, r6
 802eb82:	fb01 2203 	mla	r2, r1, r3, r2
 802eb86:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802eb88:	930c      	str	r3, [sp, #48]	@ 0x30
 802eb8a:	5c8b      	ldrb	r3, [r1, r2]
 802eb8c:	440a      	add	r2, r1
 802eb8e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eb90:	4616      	mov	r6, r2
 802eb92:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802eb96:	930d      	str	r3, [sp, #52]	@ 0x34
 802eb98:	0e1b      	lsrs	r3, r3, #24
 802eb9a:	2800      	cmp	r0, #0
 802eb9c:	f000 8153 	beq.w	802ee46 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802eba0:	f896 c001 	ldrb.w	ip, [r6, #1]
 802eba4:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 802eba8:	921f      	str	r2, [sp, #124]	@ 0x7c
 802ebaa:	0e12      	lsrs	r2, r2, #24
 802ebac:	9214      	str	r2, [sp, #80]	@ 0x50
 802ebae:	f1be 0f00 	cmp.w	lr, #0
 802ebb2:	f040 8155 	bne.w	802ee60 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802ebb6:	b280      	uxth	r0, r0
 802ebb8:	fa1f fc8e 	uxth.w	ip, lr
 802ebbc:	fb00 f20c 	mul.w	r2, r0, ip
 802ebc0:	0106      	lsls	r6, r0, #4
 802ebc2:	1ab0      	subs	r0, r6, r2
 802ebc4:	b281      	uxth	r1, r0
 802ebc6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802ebc8:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802ebcc:	fb01 f000 	mul.w	r0, r1, r0
 802ebd0:	9117      	str	r1, [sp, #92]	@ 0x5c
 802ebd2:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802ebd6:	fa1f f18c 	uxth.w	r1, ip
 802ebda:	1a76      	subs	r6, r6, r1
 802ebdc:	b2b6      	uxth	r6, r6
 802ebde:	9619      	str	r6, [sp, #100]	@ 0x64
 802ebe0:	fb06 0603 	mla	r6, r6, r3, r0
 802ebe4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802ebe6:	9118      	str	r1, [sp, #96]	@ 0x60
 802ebe8:	fb01 6600 	mla	r6, r1, r0, r6
 802ebec:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ebee:	fb02 6601 	mla	r6, r2, r1, r6
 802ebf2:	f3c6 2107 	ubfx	r1, r6, #8, #8
 802ebf6:	911a      	str	r1, [sp, #104]	@ 0x68
 802ebf8:	2900      	cmp	r1, #0
 802ebfa:	f000 80e0 	beq.w	802edbe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ebfe:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802ec00:	2bff      	cmp	r3, #255	@ 0xff
 802ec02:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 802ec06:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802ec0a:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec0c:	901b      	str	r0, [sp, #108]	@ 0x6c
 802ec0e:	d01c      	beq.n	802ec4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 802ec10:	fb01 f103 	mul.w	r1, r1, r3
 802ec14:	fb00 f003 	mul.w	r0, r0, r3
 802ec18:	460e      	mov	r6, r1
 802ec1a:	4603      	mov	r3, r0
 802ec1c:	0a09      	lsrs	r1, r1, #8
 802ec1e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec22:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ec26:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802ec2a:	4431      	add	r1, r6
 802ec2c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802ec30:	0a09      	lsrs	r1, r1, #8
 802ec32:	0a1b      	lsrs	r3, r3, #8
 802ec34:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec38:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec3c:	430b      	orrs	r3, r1
 802ec3e:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802ec42:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec46:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec48:	931b      	str	r3, [sp, #108]	@ 0x6c
 802ec4a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802ec4c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec50:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ec54:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802ec56:	931c      	str	r3, [sp, #112]	@ 0x70
 802ec58:	29ff      	cmp	r1, #255	@ 0xff
 802ec5a:	d019      	beq.n	802ec90 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802ec5c:	fb03 f301 	mul.w	r3, r3, r1
 802ec60:	fb06 f601 	mul.w	r6, r6, r1
 802ec64:	0a19      	lsrs	r1, r3, #8
 802ec66:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ec6a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec6e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802ec72:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ec76:	4401      	add	r1, r0
 802ec78:	0a09      	lsrs	r1, r1, #8
 802ec7a:	0a1b      	lsrs	r3, r3, #8
 802ec7c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec80:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec84:	4319      	orrs	r1, r3
 802ec86:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec8a:	931c      	str	r3, [sp, #112]	@ 0x70
 802ec8c:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ec90:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802ec92:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec96:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802ec9a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802ec9c:	930c      	str	r3, [sp, #48]	@ 0x30
 802ec9e:	29ff      	cmp	r1, #255	@ 0xff
 802eca0:	901d      	str	r0, [sp, #116]	@ 0x74
 802eca2:	d01a      	beq.n	802ecda <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x592>
 802eca4:	fb03 f301 	mul.w	r3, r3, r1
 802eca8:	fb00 fc01 	mul.w	ip, r0, r1
 802ecac:	0a19      	lsrs	r1, r3, #8
 802ecae:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ecb2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ecb6:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802ecba:	4401      	add	r1, r0
 802ecbc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802ecc0:	0a09      	lsrs	r1, r1, #8
 802ecc2:	0a1b      	lsrs	r3, r3, #8
 802ecc4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ecc8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802eccc:	4319      	orrs	r1, r3
 802ecce:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ecd2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ecd6:	930c      	str	r3, [sp, #48]	@ 0x30
 802ecd8:	911d      	str	r1, [sp, #116]	@ 0x74
 802ecda:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ecdc:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802ece0:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802ece4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ece6:	29ff      	cmp	r1, #255	@ 0xff
 802ece8:	d01c      	beq.n	802ed24 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 802ecea:	fb0c fc01 	mul.w	ip, ip, r1
 802ecee:	fb0e fe01 	mul.w	lr, lr, r1
 802ecf2:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802ecf6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ecfa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ecfe:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 802ed02:	4484      	add	ip, r0
 802ed04:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802ed08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ed0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ed10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ed14:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ed18:	ea4c 0e0e 	orr.w	lr, ip, lr
 802ed1c:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802ed20:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ed24:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802ed26:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802ed28:	43c9      	mvns	r1, r1
 802ed2a:	911a      	str	r1, [sp, #104]	@ 0x68
 802ed2c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802ed2e:	fb00 f001 	mul.w	r0, r0, r1
 802ed32:	fb06 f301 	mul.w	r3, r6, r1
 802ed36:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802ed38:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed3a:	fb01 0006 	mla	r0, r1, r6, r0
 802ed3e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802ed40:	fb01 3106 	mla	r1, r1, r6, r3
 802ed44:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 802ed46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802ed48:	910d      	str	r1, [sp, #52]	@ 0x34
 802ed4a:	fb03 0306 	mla	r3, r3, r6, r0
 802ed4e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed50:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802ed52:	fb0c 3302 	mla	r3, ip, r2, r3
 802ed56:	fb00 1106 	mla	r1, r0, r6, r1
 802ed5a:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802ed5e:	f899 0002 	ldrb.w	r0, [r9, #2]
 802ed62:	fb0e 1e02 	mla	lr, lr, r2, r1
 802ed66:	f899 2001 	ldrb.w	r2, [r9, #1]
 802ed6a:	f899 1000 	ldrb.w	r1, [r9]
 802ed6e:	fb00 f006 	mul.w	r0, r0, r6
 802ed72:	fb02 fc06 	mul.w	ip, r2, r6
 802ed76:	fb01 f106 	mul.w	r1, r1, r6
 802ed7a:	0a1b      	lsrs	r3, r3, #8
 802ed7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ed80:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802ed84:	1c46      	adds	r6, r0, #1
 802ed86:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802ed8a:	4313      	orrs	r3, r2
 802ed8c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802ed90:	f10c 0201 	add.w	r2, ip, #1
 802ed94:	1c4e      	adds	r6, r1, #1
 802ed96:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 802ed9a:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802ed9e:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802eda2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802eda6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802edaa:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802edae:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802edb2:	f889 2001 	strb.w	r2, [r9, #1]
 802edb6:	f889 0002 	strb.w	r0, [r9, #2]
 802edba:	f889 3000 	strb.w	r3, [r9]
 802edbe:	f1ba 0f00 	cmp.w	sl, #0
 802edc2:	f109 0903 	add.w	r9, r9, #3
 802edc6:	44d8      	add	r8, fp
 802edc8:	442f      	add	r7, r5
 802edca:	dd2c      	ble.n	802ee26 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6de>
 802edcc:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802edd0:	ea4f 4228 	mov.w	r2, r8, asr #16
 802edd4:	2a00      	cmp	r2, #0
 802edd6:	f10a 3aff 	add.w	sl, sl, #4294967295
 802edda:	ea4f 4127 	mov.w	r1, r7, asr #16
 802edde:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802ede2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802ede6:	f6bf aebf 	bge.w	802eb68 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802edea:	1c53      	adds	r3, r2, #1
 802edec:	d4e7      	bmi.n	802edbe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edee:	42b3      	cmp	r3, r6
 802edf0:	dce5      	bgt.n	802edbe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edf2:	1c4b      	adds	r3, r1, #1
 802edf4:	d4e3      	bmi.n	802edbe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edf6:	4563      	cmp	r3, ip
 802edf8:	dce1      	bgt.n	802edbe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edfa:	fa0f f38c 	sxth.w	r3, ip
 802edfe:	b236      	sxth	r6, r6
 802ee00:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802ee04:	e9cd 6300 	strd	r6, r3, [sp]
 802ee08:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802ee0c:	4649      	mov	r1, r9
 802ee0e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ee10:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802ee12:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802ee14:	f7ff fb08 	bl	802e428 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 802ee18:	f1ba 0f00 	cmp.w	sl, #0
 802ee1c:	f109 0903 	add.w	r9, r9, #3
 802ee20:	44d8      	add	r8, fp
 802ee22:	442f      	add	r7, r5
 802ee24:	dcd2      	bgt.n	802edcc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x684>
 802ee26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ee28:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802ee2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802ee30:	3301      	adds	r3, #1
 802ee32:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ee36:	449b      	add	fp, r3
 802ee38:	e4e7      	b.n	802e80a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee3a:	3b01      	subs	r3, #1
 802ee3c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802ee40:	469a      	mov	sl, r3
 802ee42:	9309      	str	r3, [sp, #36]	@ 0x24
 802ee44:	e683      	b.n	802eb4e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 802ee46:	f1be 0f00 	cmp.w	lr, #0
 802ee4a:	f43f aeb4 	beq.w	802ebb6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee4e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ee50:	5c72      	ldrb	r2, [r6, r1]
 802ee52:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802ee54:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802ee58:	9220      	str	r2, [sp, #128]	@ 0x80
 802ee5a:	0e12      	lsrs	r2, r2, #24
 802ee5c:	9215      	str	r2, [sp, #84]	@ 0x54
 802ee5e:	e6aa      	b.n	802ebb6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee60:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802ee62:	eb06 0c02 	add.w	ip, r6, r2
 802ee66:	4632      	mov	r2, r6
 802ee68:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802ee6a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802ee6e:	5d92      	ldrb	r2, [r2, r6]
 802ee70:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802ee74:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802ee78:	0e31      	lsrs	r1, r6, #24
 802ee7a:	9220      	str	r2, [sp, #128]	@ 0x80
 802ee7c:	0e12      	lsrs	r2, r2, #24
 802ee7e:	9621      	str	r6, [sp, #132]	@ 0x84
 802ee80:	9116      	str	r1, [sp, #88]	@ 0x58
 802ee82:	9215      	str	r2, [sp, #84]	@ 0x54
 802ee84:	e697      	b.n	802ebb6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee86:	f43f acc0 	beq.w	802e80a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee8a:	1e65      	subs	r5, r4, #1
 802ee8c:	e4fe      	b.n	802e88c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ee8e:	bf00      	nop

0802ee90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 802ee90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ee94:	b087      	sub	sp, #28
 802ee96:	f89d b058 	ldrb.w	fp, [sp, #88]	@ 0x58
 802ee9a:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 802ee9e:	ea6f 000b 	mvn.w	r0, fp
 802eea2:	e9dd 4712 	ldrd	r4, r7, [sp, #72]	@ 0x48
 802eea6:	fb07 4c06 	mla	ip, r7, r6, r4
 802eeaa:	b2c0      	uxtb	r0, r0
 802eeac:	2f00      	cmp	r7, #0
 802eeae:	9002      	str	r0, [sp, #8]
 802eeb0:	eb02 0e0c 	add.w	lr, r2, ip
 802eeb4:	f107 0801 	add.w	r8, r7, #1
 802eeb8:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	@ 0x44
 802eebc:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 802eec0:	f89d 0054 	ldrb.w	r0, [sp, #84]	@ 0x54
 802eec4:	db02      	blt.n	802eecc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3c>
 802eec6:	45b9      	cmp	r9, r7
 802eec8:	f300 80a0 	bgt.w	802f00c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x17c>
 802eecc:	468c      	mov	ip, r1
 802eece:	460f      	mov	r7, r1
 802eed0:	780a      	ldrb	r2, [r1, #0]
 802eed2:	9203      	str	r2, [sp, #12]
 802eed4:	9201      	str	r2, [sp, #4]
 802eed6:	f1b8 0f00 	cmp.w	r8, #0
 802eeda:	db01      	blt.n	802eee0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x50>
 802eedc:	45c1      	cmp	r9, r8
 802eede:	dc7b      	bgt.n	802efd8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x148>
 802eee0:	460b      	mov	r3, r1
 802eee2:	4689      	mov	r9, r1
 802eee4:	f891 a000 	ldrb.w	sl, [r1]
 802eee8:	f8cd a014 	str.w	sl, [sp, #20]
 802eeec:	2d0f      	cmp	r5, #15
 802eeee:	f200 80cd 	bhi.w	802f08c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802eef2:	280f      	cmp	r0, #15
 802eef4:	f200 80ca 	bhi.w	802f08c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802eef8:	780a      	ldrb	r2, [r1, #0]
 802eefa:	9204      	str	r2, [sp, #16]
 802eefc:	b2aa      	uxth	r2, r5
 802eefe:	b280      	uxth	r0, r0
 802ef00:	fb02 f500 	mul.w	r5, r2, r0
 802ef04:	0112      	lsls	r2, r2, #4
 802ef06:	f89c 8001 	ldrb.w	r8, [ip, #1]
 802ef0a:	f89c e002 	ldrb.w	lr, [ip, #2]
 802ef0e:	1b54      	subs	r4, r2, r5
 802ef10:	b2a4      	uxth	r4, r4
 802ef12:	fb04 f808 	mul.w	r8, r4, r8
 802ef16:	fb04 fe0e 	mul.w	lr, r4, lr
 802ef1a:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802ef1e:	b280      	uxth	r0, r0
 802ef20:	9e01      	ldr	r6, [sp, #4]
 802ef22:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802ef26:	f897 c001 	ldrb.w	ip, [r7, #1]
 802ef2a:	1a12      	subs	r2, r2, r0
 802ef2c:	78bf      	ldrb	r7, [r7, #2]
 802ef2e:	b292      	uxth	r2, r2
 802ef30:	fb04 f406 	mul.w	r4, r4, r6
 802ef34:	fb02 8c0c 	mla	ip, r2, ip, r8
 802ef38:	fb02 e707 	mla	r7, r2, r7, lr
 802ef3c:	9e03      	ldr	r6, [sp, #12]
 802ef3e:	f899 8001 	ldrb.w	r8, [r9, #1]
 802ef42:	f899 e002 	ldrb.w	lr, [r9, #2]
 802ef46:	fb02 4206 	mla	r2, r2, r6, r4
 802ef4a:	fb00 cc08 	mla	ip, r0, r8, ip
 802ef4e:	fb00 770e 	mla	r7, r0, lr, r7
 802ef52:	f893 8001 	ldrb.w	r8, [r3, #1]
 802ef56:	f893 e002 	ldrb.w	lr, [r3, #2]
 802ef5a:	fb00 220a 	mla	r2, r0, sl, r2
 802ef5e:	fb05 c808 	mla	r8, r5, r8, ip
 802ef62:	fb05 7e0e 	mla	lr, r5, lr, r7
 802ef66:	9805      	ldr	r0, [sp, #20]
 802ef68:	f8bd 9008 	ldrh.w	r9, [sp, #8]
 802ef6c:	fb05 2500 	mla	r5, r5, r0, r2
 802ef70:	9a04      	ldr	r2, [sp, #16]
 802ef72:	fa1f f38b 	uxth.w	r3, fp
 802ef76:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802ef7a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802ef7e:	fb12 f609 	smulbb	r6, r2, r9
 802ef82:	fb1e fe03 	smulbb	lr, lr, r3
 802ef86:	fb18 f803 	smulbb	r8, r8, r3
 802ef8a:	784a      	ldrb	r2, [r1, #1]
 802ef8c:	7888      	ldrb	r0, [r1, #2]
 802ef8e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802ef92:	fb05 6503 	mla	r5, r5, r3, r6
 802ef96:	fb02 8809 	mla	r8, r2, r9, r8
 802ef9a:	fb00 e909 	mla	r9, r0, r9, lr
 802ef9e:	b2ad      	uxth	r5, r5
 802efa0:	fa1f f888 	uxth.w	r8, r8
 802efa4:	fa1f f989 	uxth.w	r9, r9
 802efa8:	f108 0001 	add.w	r0, r8, #1
 802efac:	f109 0201 	add.w	r2, r9, #1
 802efb0:	1c6b      	adds	r3, r5, #1
 802efb2:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802efb6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802efba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802efbe:	ea4f 2828 	mov.w	r8, r8, asr #8
 802efc2:	ea4f 2929 	mov.w	r9, r9, asr #8
 802efc6:	122d      	asrs	r5, r5, #8
 802efc8:	f881 8001 	strb.w	r8, [r1, #1]
 802efcc:	f881 9002 	strb.w	r9, [r1, #2]
 802efd0:	700d      	strb	r5, [r1, #0]
 802efd2:	b007      	add	sp, #28
 802efd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802efd8:	b388      	cbz	r0, 802f03e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1ae>
 802efda:	2c00      	cmp	r4, #0
 802efdc:	db44      	blt.n	802f068 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802efde:	42a6      	cmp	r6, r4
 802efe0:	dd42      	ble.n	802f068 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802efe2:	f81e 9006 	ldrb.w	r9, [lr, r6]
 802efe6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802efea:	4499      	add	r9, r3
 802efec:	3401      	adds	r4, #1
 802efee:	f899 a000 	ldrb.w	sl, [r9]
 802eff2:	d435      	bmi.n	802f060 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802eff4:	42a6      	cmp	r6, r4
 802eff6:	dd33      	ble.n	802f060 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802eff8:	2d00      	cmp	r5, #0
 802effa:	d043      	beq.n	802f084 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1f4>
 802effc:	4476      	add	r6, lr
 802effe:	7872      	ldrb	r2, [r6, #1]
 802f000:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f004:	5c9c      	ldrb	r4, [r3, r2]
 802f006:	4413      	add	r3, r2
 802f008:	9405      	str	r4, [sp, #20]
 802f00a:	e76f      	b.n	802eeec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f00c:	2c00      	cmp	r4, #0
 802f00e:	db01      	blt.n	802f014 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 802f010:	42a6      	cmp	r6, r4
 802f012:	dc1f      	bgt.n	802f054 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1c4>
 802f014:	460f      	mov	r7, r1
 802f016:	783a      	ldrb	r2, [r7, #0]
 802f018:	9203      	str	r2, [sp, #12]
 802f01a:	1c62      	adds	r2, r4, #1
 802f01c:	d40b      	bmi.n	802f036 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f01e:	4296      	cmp	r6, r2
 802f020:	dd09      	ble.n	802f036 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f022:	b31d      	cbz	r5, 802f06c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1dc>
 802f024:	f89e c001 	ldrb.w	ip, [lr, #1]
 802f028:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f02c:	f813 200c 	ldrb.w	r2, [r3, ip]
 802f030:	449c      	add	ip, r3
 802f032:	9201      	str	r2, [sp, #4]
 802f034:	e74f      	b.n	802eed6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f036:	780a      	ldrb	r2, [r1, #0]
 802f038:	468c      	mov	ip, r1
 802f03a:	9201      	str	r2, [sp, #4]
 802f03c:	e74b      	b.n	802eed6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f03e:	2d0f      	cmp	r5, #15
 802f040:	f891 a000 	ldrb.w	sl, [r1]
 802f044:	d822      	bhi.n	802f08c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f046:	f8cd a010 	str.w	sl, [sp, #16]
 802f04a:	460b      	mov	r3, r1
 802f04c:	4689      	mov	r9, r1
 802f04e:	f8cd a014 	str.w	sl, [sp, #20]
 802f052:	e753      	b.n	802eefc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x6c>
 802f054:	f812 700c 	ldrb.w	r7, [r2, ip]
 802f058:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802f05c:	441f      	add	r7, r3
 802f05e:	e7da      	b.n	802f016 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x186>
 802f060:	780b      	ldrb	r3, [r1, #0]
 802f062:	9305      	str	r3, [sp, #20]
 802f064:	460b      	mov	r3, r1
 802f066:	e741      	b.n	802eeec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f068:	4689      	mov	r9, r1
 802f06a:	e7bf      	b.n	802efec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802f06c:	780a      	ldrb	r2, [r1, #0]
 802f06e:	f1b8 0f00 	cmp.w	r8, #0
 802f072:	9201      	str	r2, [sp, #4]
 802f074:	468c      	mov	ip, r1
 802f076:	f6bf af31 	bge.w	802eedc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x4c>
 802f07a:	460b      	mov	r3, r1
 802f07c:	4689      	mov	r9, r1
 802f07e:	9205      	str	r2, [sp, #20]
 802f080:	4692      	mov	sl, r2
 802f082:	e736      	b.n	802eef2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f084:	780b      	ldrb	r3, [r1, #0]
 802f086:	9305      	str	r3, [sp, #20]
 802f088:	460b      	mov	r3, r1
 802f08a:	e732      	b.n	802eef2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f08c:	4b03      	ldr	r3, [pc, #12]	@ (802f09c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x20c>)
 802f08e:	4a04      	ldr	r2, [pc, #16]	@ (802f0a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x210>)
 802f090:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f094:	4803      	ldr	r0, [pc, #12]	@ (802f0a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x214>)
 802f096:	f003 fa0f 	bl	80324b8 <__assert_func>
 802f09a:	bf00      	nop
 802f09c:	0803666c 	.word	0x0803666c
 802f0a0:	08036ce8 	.word	0x08036ce8
 802f0a4:	080367f4 	.word	0x080367f4

0802f0a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f0a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f0ac:	ed2d 8b08 	vpush	{d8-d11}
 802f0b0:	b095      	sub	sp, #84	@ 0x54
 802f0b2:	f89d 40bc 	ldrb.w	r4, [sp, #188]	@ 0xbc
 802f0b6:	9013      	str	r0, [sp, #76]	@ 0x4c
 802f0b8:	43e0      	mvns	r0, r4
 802f0ba:	e9dd a727 	ldrd	sl, r7, [sp, #156]	@ 0x9c
 802f0be:	eeb0 aa40 	vmov.f32	s20, s0
 802f0c2:	eef0 9a60 	vmov.f32	s19, s1
 802f0c6:	eeb0 9a41 	vmov.f32	s18, s2
 802f0ca:	eef0 8a62 	vmov.f32	s17, s5
 802f0ce:	eeb0 8a43 	vmov.f32	s16, s6
 802f0d2:	eef0 ba44 	vmov.f32	s23, s8
 802f0d6:	eeb0 ba64 	vmov.f32	s22, s9
 802f0da:	eef0 aa45 	vmov.f32	s21, s10
 802f0de:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802f0e2:	9411      	str	r4, [sp, #68]	@ 0x44
 802f0e4:	469b      	mov	fp, r3
 802f0e6:	e9dd 422b 	ldrd	r4, r2, [sp, #172]	@ 0xac
 802f0ea:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802f0ec:	6861      	ldr	r1, [r4, #4]
 802f0ee:	fb01 2303 	mla	r3, r1, r3, r2
 802f0f2:	6821      	ldr	r1, [r4, #0]
 802f0f4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802f0f6:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802f0f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802f0fc:	6852      	ldr	r2, [r2, #4]
 802f0fe:	6824      	ldr	r4, [r4, #0]
 802f100:	930d      	str	r3, [sp, #52]	@ 0x34
 802f102:	b2c3      	uxtb	r3, r0
 802f104:	930b      	str	r3, [sp, #44]	@ 0x2c
 802f106:	1d13      	adds	r3, r2, #4
 802f108:	940a      	str	r4, [sp, #40]	@ 0x28
 802f10a:	9308      	str	r3, [sp, #32]
 802f10c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f10e:	2b00      	cmp	r3, #0
 802f110:	dc02      	bgt.n	802f118 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802f112:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802f114:	2b00      	cmp	r3, #0
 802f116:	dd6c      	ble.n	802f1f2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f118:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f11a:	f1bb 0f00 	cmp.w	fp, #0
 802f11e:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 802f122:	b228      	sxth	r0, r5
 802f124:	fa0f f68e 	sxth.w	r6, lr
 802f128:	f340 8245 	ble.w	802f5b6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 802f12c:	e9dd 8929 	ldrd	r8, r9, [sp, #164]	@ 0xa4
 802f130:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f132:	1e44      	subs	r4, r0, #1
 802f134:	f106 3cff 	add.w	ip, r6, #4294967295
 802f138:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802f13c:	ea5f 432a 	movs.w	r3, sl, asr #16
 802f140:	ea4f 4127 	mov.w	r1, r7, asr #16
 802f144:	d405      	bmi.n	802f152 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f146:	42a3      	cmp	r3, r4
 802f148:	da03      	bge.n	802f152 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f14a:	2900      	cmp	r1, #0
 802f14c:	db01      	blt.n	802f152 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f14e:	4561      	cmp	r1, ip
 802f150:	db54      	blt.n	802f1fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802f152:	f113 0e01 	adds.w	lr, r3, #1
 802f156:	d407      	bmi.n	802f168 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f158:	4586      	cmp	lr, r0
 802f15a:	dc05      	bgt.n	802f168 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f15c:	f111 0e01 	adds.w	lr, r1, #1
 802f160:	d402      	bmi.n	802f168 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f162:	45b6      	cmp	lr, r6
 802f164:	f340 8189 	ble.w	802f47a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802f168:	f1bb 0b01 	subs.w	fp, fp, #1
 802f16c:	44c2      	add	sl, r8
 802f16e:	444f      	add	r7, r9
 802f170:	f102 0204 	add.w	r2, r2, #4
 802f174:	d1e2      	bne.n	802f13c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802f176:	920d      	str	r2, [sp, #52]	@ 0x34
 802f178:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f17a:	2b00      	cmp	r3, #0
 802f17c:	dd39      	ble.n	802f1f2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f17e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802f182:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802f186:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802f18a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802f18e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802f192:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f196:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f19a:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f19e:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f1a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f1a6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f1aa:	ee16 2a90 	vmov	r2, s13
 802f1ae:	3b01      	subs	r3, #1
 802f1b0:	930e      	str	r3, [sp, #56]	@ 0x38
 802f1b2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f1b4:	fb92 f3f3 	sdiv	r3, r2, r3
 802f1b8:	ee17 2a10 	vmov	r2, s14
 802f1bc:	eeb0 7a48 	vmov.f32	s14, s16
 802f1c0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f1c4:	ee17 7a10 	vmov	r7, s14
 802f1c8:	eeb0 7a68 	vmov.f32	s14, s17
 802f1cc:	9329      	str	r3, [sp, #164]	@ 0xa4
 802f1ce:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f1d0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f1d4:	fb92 f3f3 	sdiv	r3, r2, r3
 802f1d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802f1da:	932a      	str	r3, [sp, #168]	@ 0xa8
 802f1dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f1de:	ee17 aa10 	vmov	sl, s14
 802f1e2:	eeb0 8a67 	vmov.f32	s16, s15
 802f1e6:	eef0 8a46 	vmov.f32	s17, s12
 802f1ea:	bf14      	ite	ne
 802f1ec:	469b      	movne	fp, r3
 802f1ee:	4693      	moveq	fp, r2
 802f1f0:	e78c      	b.n	802f10c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802f1f2:	b015      	add	sp, #84	@ 0x54
 802f1f4:	ecbd 8b08 	vpop	{d8-d11}
 802f1f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f1fc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f200:	920d      	str	r2, [sp, #52]	@ 0x34
 802f202:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f204:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f208:	fb01 a302 	mla	r3, r1, r2, sl
 802f20c:	141b      	asrs	r3, r3, #16
 802f20e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f210:	f100 80d3 	bmi.w	802f3ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f214:	42a3      	cmp	r3, r4
 802f216:	f280 80d0 	bge.w	802f3ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f21a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f21c:	fb03 7302 	mla	r3, r3, r2, r7
 802f220:	141b      	asrs	r3, r3, #16
 802f222:	f100 80ca 	bmi.w	802f3ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f226:	3e01      	subs	r6, #1
 802f228:	42b3      	cmp	r3, r6
 802f22a:	f280 80c6 	bge.w	802f3ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f22e:	f1bb 0f00 	cmp.w	fp, #0
 802f232:	dda1      	ble.n	802f178 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f234:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 802f238:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802f23c:	930c      	str	r3, [sp, #48]	@ 0x30
 802f23e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f240:	f103 0804 	add.w	r8, r3, #4
 802f244:	e08f      	b.n	802f366 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802f246:	7861      	ldrb	r1, [r4, #1]
 802f248:	eb04 0c00 	add.w	ip, r4, r0
 802f24c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f250:	4431      	add	r1, r6
 802f252:	2a00      	cmp	r2, #0
 802f254:	f000 80a3 	beq.w	802f39e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 802f258:	5c20      	ldrb	r0, [r4, r0]
 802f25a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802f25e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f262:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f266:	4430      	add	r0, r6
 802f268:	44b4      	add	ip, r6
 802f26a:	b29b      	uxth	r3, r3
 802f26c:	b292      	uxth	r2, r2
 802f26e:	fb03 f402 	mul.w	r4, r3, r2
 802f272:	011b      	lsls	r3, r3, #4
 802f274:	f891 b001 	ldrb.w	fp, [r1, #1]
 802f278:	1b1e      	subs	r6, r3, r4
 802f27a:	f891 9002 	ldrb.w	r9, [r1, #2]
 802f27e:	b2b6      	uxth	r6, r6
 802f280:	7809      	ldrb	r1, [r1, #0]
 802f282:	fb06 fb0b 	mul.w	fp, r6, fp
 802f286:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f28a:	b292      	uxth	r2, r2
 802f28c:	fb06 f909 	mul.w	r9, r6, r9
 802f290:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f294:	fb06 f601 	mul.w	r6, r6, r1
 802f298:	1a9b      	subs	r3, r3, r2
 802f29a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802f29e:	b29b      	uxth	r3, r3
 802f2a0:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f2a4:	fb03 bb01 	mla	fp, r3, r1, fp
 802f2a8:	9908      	ldr	r1, [sp, #32]
 802f2aa:	fb03 990e 	mla	r9, r3, lr, r9
 802f2ae:	5d49      	ldrb	r1, [r1, r5]
 802f2b0:	7885      	ldrb	r5, [r0, #2]
 802f2b2:	fb03 6301 	mla	r3, r3, r1, r6
 802f2b6:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f2ba:	fb02 9905 	mla	r9, r2, r5, r9
 802f2be:	7801      	ldrb	r1, [r0, #0]
 802f2c0:	fb02 bb0e 	mla	fp, r2, lr, fp
 802f2c4:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802f2c8:	fb02 3301 	mla	r3, r2, r1, r3
 802f2cc:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f2d0:	fb04 9900 	mla	r9, r4, r0, r9
 802f2d4:	f89c 1000 	ldrb.w	r1, [ip]
 802f2d8:	fb04 bb0e 	mla	fp, r4, lr, fp
 802f2dc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802f2de:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 802f2e2:	fb04 3301 	mla	r3, r4, r1, r3
 802f2e6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802f2e8:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802f2ec:	fb19 f902 	smulbb	r9, r9, r2
 802f2f0:	fb1c fc01 	smulbb	ip, ip, r1
 802f2f4:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802f2f8:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802f2fc:	fb1b fb02 	smulbb	fp, fp, r2
 802f300:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802f304:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 802f308:	fb05 9901 	mla	r9, r5, r1, r9
 802f30c:	fb03 c302 	mla	r3, r3, r2, ip
 802f310:	fb06 bb01 	mla	fp, r6, r1, fp
 802f314:	fa1f f989 	uxth.w	r9, r9
 802f318:	b29b      	uxth	r3, r3
 802f31a:	f109 0101 	add.w	r1, r9, #1
 802f31e:	1c5a      	adds	r2, r3, #1
 802f320:	fa1f fb8b 	uxth.w	fp, fp
 802f324:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802f328:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802f32c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f32e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f330:	f10b 0001 	add.w	r0, fp, #1
 802f334:	3a01      	subs	r2, #1
 802f336:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802f33a:	448a      	add	sl, r1
 802f33c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802f33e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f340:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 802f344:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f348:	121b      	asrs	r3, r3, #8
 802f34a:	3201      	adds	r2, #1
 802f34c:	f808 bc03 	strb.w	fp, [r8, #-3]
 802f350:	f808 9c02 	strb.w	r9, [r8, #-2]
 802f354:	f808 3c04 	strb.w	r3, [r8, #-4]
 802f358:	440f      	add	r7, r1
 802f35a:	f108 0804 	add.w	r8, r8, #4
 802f35e:	d025      	beq.n	802f3ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802f360:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f362:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802f366:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f36a:	143c      	asrs	r4, r7, #16
 802f36c:	fb00 3404 	mla	r4, r0, r4, r3
 802f370:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f372:	9e08      	ldr	r6, [sp, #32]
 802f374:	5d15      	ldrb	r5, [r2, r4]
 802f376:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802f37a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802f37e:	4414      	add	r4, r2
 802f380:	eb06 0e05 	add.w	lr, r6, r5
 802f384:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f388:	2b00      	cmp	r3, #0
 802f38a:	f47f af5c 	bne.w	802f246 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802f38e:	b14a      	cbz	r2, 802f3a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802f390:	5c20      	ldrb	r0, [r4, r0]
 802f392:	46f4      	mov	ip, lr
 802f394:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f398:	4430      	add	r0, r6
 802f39a:	4671      	mov	r1, lr
 802f39c:	e765      	b.n	802f26a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f39e:	46f4      	mov	ip, lr
 802f3a0:	4670      	mov	r0, lr
 802f3a2:	e762      	b.n	802f26a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3a4:	46f4      	mov	ip, lr
 802f3a6:	4670      	mov	r0, lr
 802f3a8:	4671      	mov	r1, lr
 802f3aa:	e75e      	b.n	802f26a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f3ae:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 802f3b2:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 802f3b6:	930d      	str	r3, [sp, #52]	@ 0x34
 802f3b8:	e6de      	b.n	802f178 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f3ba:	f1bb 0f00 	cmp.w	fp, #0
 802f3be:	f77f aedb 	ble.w	802f178 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f3c2:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 802f3c6:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f3ca:	1439      	asrs	r1, r7, #16
 802f3cc:	4676      	mov	r6, lr
 802f3ce:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 802f3d2:	f8dd 80b8 	ldr.w	r8, [sp, #184]	@ 0xb8
 802f3d6:	2b00      	cmp	r3, #0
 802f3d8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802f3dc:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f3e0:	db29      	blt.n	802f436 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3e2:	1e6c      	subs	r4, r5, #1
 802f3e4:	42a3      	cmp	r3, r4
 802f3e6:	da26      	bge.n	802f436 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3e8:	2900      	cmp	r1, #0
 802f3ea:	db24      	blt.n	802f436 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3ec:	1e74      	subs	r4, r6, #1
 802f3ee:	42a1      	cmp	r1, r4
 802f3f0:	da21      	bge.n	802f436 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3f2:	b22c      	sxth	r4, r5
 802f3f4:	fb01 3304 	mla	r3, r1, r4, r3
 802f3f8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802f3fa:	5ce9      	ldrb	r1, [r5, r3]
 802f3fc:	442b      	add	r3, r5
 802f3fe:	9d08      	ldr	r5, [sp, #32]
 802f400:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f404:	9112      	str	r1, [sp, #72]	@ 0x48
 802f406:	eb05 0c01 	add.w	ip, r5, r1
 802f40a:	2800      	cmp	r0, #0
 802f40c:	d04e      	beq.n	802f4ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 802f40e:	f893 e001 	ldrb.w	lr, [r3, #1]
 802f412:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f416:	44ae      	add	lr, r5
 802f418:	2a00      	cmp	r2, #0
 802f41a:	f000 80c7 	beq.w	802f5ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802f41e:	1919      	adds	r1, r3, r4
 802f420:	7849      	ldrb	r1, [r1, #1]
 802f422:	5d1c      	ldrb	r4, [r3, r4]
 802f424:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f428:	186b      	adds	r3, r5, r1
 802f42a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f42e:	930c      	str	r3, [sp, #48]	@ 0x30
 802f430:	1963      	adds	r3, r4, r5
 802f432:	9310      	str	r3, [sp, #64]	@ 0x40
 802f434:	e041      	b.n	802f4ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f436:	1c5c      	adds	r4, r3, #1
 802f438:	d405      	bmi.n	802f446 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f43a:	42ac      	cmp	r4, r5
 802f43c:	dc03      	bgt.n	802f446 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f43e:	1c4c      	adds	r4, r1, #1
 802f440:	d401      	bmi.n	802f446 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f442:	42b4      	cmp	r4, r6
 802f444:	dd21      	ble.n	802f48a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802f446:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802f448:	f1b9 0f00 	cmp.w	r9, #0
 802f44c:	449a      	add	sl, r3
 802f44e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f450:	f10b 0b04 	add.w	fp, fp, #4
 802f454:	441f      	add	r7, r3
 802f456:	dd07      	ble.n	802f468 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802f458:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 802f45c:	f109 39ff 	add.w	r9, r9, #4294967295
 802f460:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f464:	1439      	asrs	r1, r7, #16
 802f466:	e7b6      	b.n	802f3d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802f468:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f46a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f46c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802f470:	3301      	adds	r3, #1
 802f472:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802f476:	930d      	str	r3, [sp, #52]	@ 0x34
 802f478:	e67e      	b.n	802f178 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f47a:	920d      	str	r2, [sp, #52]	@ 0x34
 802f47c:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f480:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f484:	4691      	mov	r9, r2
 802f486:	9209      	str	r2, [sp, #36]	@ 0x24
 802f488:	e7a0      	b.n	802f3cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802f48a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802f48c:	b236      	sxth	r6, r6
 802f48e:	b22d      	sxth	r5, r5
 802f490:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802f494:	e9cd 2405 	strd	r2, r4, [sp, #20]
 802f498:	9302      	str	r3, [sp, #8]
 802f49a:	e9cd 5600 	strd	r5, r6, [sp]
 802f49e:	9b08      	ldr	r3, [sp, #32]
 802f4a0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f4a2:	4659      	mov	r1, fp
 802f4a4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802f4a6:	f7ff fcf3 	bl	802ee90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 802f4aa:	e7cc      	b.n	802f446 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f4ac:	2a00      	cmp	r2, #0
 802f4ae:	d173      	bne.n	802f598 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802f4b0:	46e6      	mov	lr, ip
 802f4b2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f4b6:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f4ba:	b283      	uxth	r3, r0
 802f4bc:	b292      	uxth	r2, r2
 802f4be:	fb03 f002 	mul.w	r0, r3, r2
 802f4c2:	011b      	lsls	r3, r3, #4
 802f4c4:	f89e 6001 	ldrb.w	r6, [lr, #1]
 802f4c8:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802f4cc:	1a19      	subs	r1, r3, r0
 802f4ce:	b289      	uxth	r1, r1
 802f4d0:	f89e e000 	ldrb.w	lr, [lr]
 802f4d4:	fb01 f505 	mul.w	r5, r1, r5
 802f4d8:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802f4dc:	fb01 f606 	mul.w	r6, r1, r6
 802f4e0:	b292      	uxth	r2, r2
 802f4e2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f4e6:	fb01 f40e 	mul.w	r4, r1, lr
 802f4ea:	1a9b      	subs	r3, r3, r2
 802f4ec:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802f4f0:	f89c e002 	ldrb.w	lr, [ip, #2]
 802f4f4:	b29b      	uxth	r3, r3
 802f4f6:	fb03 6601 	mla	r6, r3, r1, r6
 802f4fa:	fb03 5e0e 	mla	lr, r3, lr, r5
 802f4fe:	9908      	ldr	r1, [sp, #32]
 802f500:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802f502:	5d49      	ldrb	r1, [r1, r5]
 802f504:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802f506:	fb03 4301 	mla	r3, r3, r1, r4
 802f50a:	f895 c001 	ldrb.w	ip, [r5, #1]
 802f50e:	78ad      	ldrb	r5, [r5, #2]
 802f510:	fb02 6c0c 	mla	ip, r2, ip, r6
 802f514:	fb02 e505 	mla	r5, r2, r5, lr
 802f518:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f51a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802f51c:	784e      	ldrb	r6, [r1, #1]
 802f51e:	7824      	ldrb	r4, [r4, #0]
 802f520:	7889      	ldrb	r1, [r1, #2]
 802f522:	fb02 3204 	mla	r2, r2, r4, r3
 802f526:	fb00 cc06 	mla	ip, r0, r6, ip
 802f52a:	fb00 5501 	mla	r5, r0, r1, r5
 802f52e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f530:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802f532:	780b      	ldrb	r3, [r1, #0]
 802f534:	f89b 4000 	ldrb.w	r4, [fp]
 802f538:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 802f53c:	fb00 2003 	mla	r0, r0, r3, r2
 802f540:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802f544:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802f548:	fb15 f501 	smulbb	r5, r5, r1
 802f54c:	fb14 f406 	smulbb	r4, r4, r6
 802f550:	fb1c fc01 	smulbb	ip, ip, r1
 802f554:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802f558:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802f55c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802f560:	fb00 4001 	mla	r0, r0, r1, r4
 802f564:	fb03 5306 	mla	r3, r3, r6, r5
 802f568:	fb02 c106 	mla	r1, r2, r6, ip
 802f56c:	b29b      	uxth	r3, r3
 802f56e:	b280      	uxth	r0, r0
 802f570:	b289      	uxth	r1, r1
 802f572:	1c5a      	adds	r2, r3, #1
 802f574:	1c4d      	adds	r5, r1, #1
 802f576:	1c44      	adds	r4, r0, #1
 802f578:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802f57c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802f580:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 802f584:	1209      	asrs	r1, r1, #8
 802f586:	1212      	asrs	r2, r2, #8
 802f588:	121b      	asrs	r3, r3, #8
 802f58a:	f88b 1001 	strb.w	r1, [fp, #1]
 802f58e:	f88b 2002 	strb.w	r2, [fp, #2]
 802f592:	f88b 3000 	strb.w	r3, [fp]
 802f596:	e756      	b.n	802f446 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f598:	5d1c      	ldrb	r4, [r3, r4]
 802f59a:	9b08      	ldr	r3, [sp, #32]
 802f59c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f5a0:	18e3      	adds	r3, r4, r3
 802f5a2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f5a6:	9310      	str	r3, [sp, #64]	@ 0x40
 802f5a8:	46e6      	mov	lr, ip
 802f5aa:	e786      	b.n	802f4ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f5ac:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f5b0:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f5b4:	e781      	b.n	802f4ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f5b6:	f43f addf 	beq.w	802f178 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f5ba:	1e44      	subs	r4, r0, #1
 802f5bc:	e621      	b.n	802f202 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 802f5be:	bf00      	nop

0802f5c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 802f5c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f5c4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802f5c8:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 802f5cc:	fb04 6e0c 	mla	lr, r4, ip, r6
 802f5d0:	2c00      	cmp	r4, #0
 802f5d2:	461f      	mov	r7, r3
 802f5d4:	eb02 0a0e 	add.w	sl, r2, lr
 802f5d8:	f104 0801 	add.w	r8, r4, #1
 802f5dc:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 802f5e0:	f89d 5038 	ldrb.w	r5, [sp, #56]	@ 0x38
 802f5e4:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
 802f5e8:	db01      	blt.n	802f5ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2e>
 802f5ea:	45a1      	cmp	r9, r4
 802f5ec:	dc6f      	bgt.n	802f6ce <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x10e>
 802f5ee:	f891 b000 	ldrb.w	fp, [r1]
 802f5f2:	460b      	mov	r3, r1
 802f5f4:	465c      	mov	r4, fp
 802f5f6:	468e      	mov	lr, r1
 802f5f8:	f1b8 0f00 	cmp.w	r8, #0
 802f5fc:	db01      	blt.n	802f602 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x42>
 802f5fe:	45c1      	cmp	r9, r8
 802f600:	dc4a      	bgt.n	802f698 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xd8>
 802f602:	f891 9000 	ldrb.w	r9, [r1]
 802f606:	460f      	mov	r7, r1
 802f608:	46ca      	mov	sl, r9
 802f60a:	4688      	mov	r8, r1
 802f60c:	2d0f      	cmp	r5, #15
 802f60e:	f200 8097 	bhi.w	802f740 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f612:	280f      	cmp	r0, #15
 802f614:	f200 8094 	bhi.w	802f740 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f618:	b2aa      	uxth	r2, r5
 802f61a:	b280      	uxth	r0, r0
 802f61c:	fb02 f600 	mul.w	r6, r2, r0
 802f620:	0112      	lsls	r2, r2, #4
 802f622:	1b95      	subs	r5, r2, r6
 802f624:	f893 c001 	ldrb.w	ip, [r3, #1]
 802f628:	789b      	ldrb	r3, [r3, #2]
 802f62a:	b2ad      	uxth	r5, r5
 802f62c:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802f630:	fb05 f404 	mul.w	r4, r5, r4
 802f634:	fb05 fc0c 	mul.w	ip, r5, ip
 802f638:	fb05 f503 	mul.w	r5, r5, r3
 802f63c:	b280      	uxth	r0, r0
 802f63e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802f642:	f89e 3001 	ldrb.w	r3, [lr, #1]
 802f646:	1a12      	subs	r2, r2, r0
 802f648:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f64c:	b292      	uxth	r2, r2
 802f64e:	fb02 cc03 	mla	ip, r2, r3, ip
 802f652:	fb02 440b 	mla	r4, r2, fp, r4
 802f656:	fb02 520e 	mla	r2, r2, lr, r5
 802f65a:	f898 3001 	ldrb.w	r3, [r8, #1]
 802f65e:	f898 8002 	ldrb.w	r8, [r8, #2]
 802f662:	fb00 cc03 	mla	ip, r0, r3, ip
 802f666:	fb00 4909 	mla	r9, r0, r9, r4
 802f66a:	fb00 2008 	mla	r0, r0, r8, r2
 802f66e:	787b      	ldrb	r3, [r7, #1]
 802f670:	78ba      	ldrb	r2, [r7, #2]
 802f672:	fb06 9a0a 	mla	sl, r6, sl, r9
 802f676:	fb06 c303 	mla	r3, r6, r3, ip
 802f67a:	fb06 0602 	mla	r6, r6, r2, r0
 802f67e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 802f682:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802f686:	0236      	lsls	r6, r6, #8
 802f688:	ea43 030a 	orr.w	r3, r3, sl
 802f68c:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 802f690:	4333      	orrs	r3, r6
 802f692:	600b      	str	r3, [r1, #0]
 802f694:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f698:	b378      	cbz	r0, 802f6fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x13a>
 802f69a:	2e00      	cmp	r6, #0
 802f69c:	db3f      	blt.n	802f71e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f69e:	45b4      	cmp	ip, r6
 802f6a0:	dd3d      	ble.n	802f71e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f6a2:	f81a 800c 	ldrb.w	r8, [sl, ip]
 802f6a6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802f6aa:	44b8      	add	r8, r7
 802f6ac:	3601      	adds	r6, #1
 802f6ae:	f898 9000 	ldrb.w	r9, [r8]
 802f6b2:	d430      	bmi.n	802f716 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f6b4:	45b4      	cmp	ip, r6
 802f6b6:	dd2e      	ble.n	802f716 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f6b8:	2d00      	cmp	r5, #0
 802f6ba:	d03d      	beq.n	802f738 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x178>
 802f6bc:	44d4      	add	ip, sl
 802f6be:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802f6c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f6c6:	f817 a002 	ldrb.w	sl, [r7, r2]
 802f6ca:	4417      	add	r7, r2
 802f6cc:	e79e      	b.n	802f60c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f6ce:	2e00      	cmp	r6, #0
 802f6d0:	db01      	blt.n	802f6d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x116>
 802f6d2:	45b4      	cmp	ip, r6
 802f6d4:	dc19      	bgt.n	802f70a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x14a>
 802f6d6:	468e      	mov	lr, r1
 802f6d8:	1c73      	adds	r3, r6, #1
 802f6da:	f89e b000 	ldrb.w	fp, [lr]
 802f6de:	d409      	bmi.n	802f6f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f6e0:	459c      	cmp	ip, r3
 802f6e2:	dd07      	ble.n	802f6f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f6e4:	b1ed      	cbz	r5, 802f722 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x162>
 802f6e6:	f89a 3001 	ldrb.w	r3, [sl, #1]
 802f6ea:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802f6ee:	5cfc      	ldrb	r4, [r7, r3]
 802f6f0:	443b      	add	r3, r7
 802f6f2:	e781      	b.n	802f5f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f6f4:	780c      	ldrb	r4, [r1, #0]
 802f6f6:	460b      	mov	r3, r1
 802f6f8:	e77e      	b.n	802f5f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f6fa:	2d0f      	cmp	r5, #15
 802f6fc:	f891 9000 	ldrb.w	r9, [r1]
 802f700:	d81e      	bhi.n	802f740 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f702:	460f      	mov	r7, r1
 802f704:	4688      	mov	r8, r1
 802f706:	46ca      	mov	sl, r9
 802f708:	e786      	b.n	802f618 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x58>
 802f70a:	f812 e00e 	ldrb.w	lr, [r2, lr]
 802f70e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f712:	449e      	add	lr, r3
 802f714:	e7e0      	b.n	802f6d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 802f716:	f891 a000 	ldrb.w	sl, [r1]
 802f71a:	460f      	mov	r7, r1
 802f71c:	e776      	b.n	802f60c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f71e:	4688      	mov	r8, r1
 802f720:	e7c4      	b.n	802f6ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xec>
 802f722:	f1b8 0f00 	cmp.w	r8, #0
 802f726:	780c      	ldrb	r4, [r1, #0]
 802f728:	460b      	mov	r3, r1
 802f72a:	f6bf af68 	bge.w	802f5fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x3e>
 802f72e:	460f      	mov	r7, r1
 802f730:	4688      	mov	r8, r1
 802f732:	46a2      	mov	sl, r4
 802f734:	46a1      	mov	r9, r4
 802f736:	e76c      	b.n	802f612 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f738:	f891 a000 	ldrb.w	sl, [r1]
 802f73c:	460f      	mov	r7, r1
 802f73e:	e768      	b.n	802f612 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f740:	4b03      	ldr	r3, [pc, #12]	@ (802f750 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x190>)
 802f742:	4a04      	ldr	r2, [pc, #16]	@ (802f754 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x194>)
 802f744:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f748:	4803      	ldr	r0, [pc, #12]	@ (802f758 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x198>)
 802f74a:	f002 feb5 	bl	80324b8 <__assert_func>
 802f74e:	bf00      	nop
 802f750:	0803666c 	.word	0x0803666c
 802f754:	08036ce8 	.word	0x08036ce8
 802f758:	080367f4 	.word	0x080367f4

0802f75c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f75c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f760:	ed2d 8b0a 	vpush	{d8-d12}
 802f764:	eeb0 aa40 	vmov.f32	s20, s0
 802f768:	eef0 9a60 	vmov.f32	s19, s1
 802f76c:	eeb0 9a41 	vmov.f32	s18, s2
 802f770:	eef0 8a62 	vmov.f32	s17, s5
 802f774:	eeb0 8a43 	vmov.f32	s16, s6
 802f778:	eeb0 ca44 	vmov.f32	s24, s8
 802f77c:	eef0 ba64 	vmov.f32	s23, s9
 802f780:	eeb0 ba45 	vmov.f32	s22, s10
 802f784:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802f788:	b091      	sub	sp, #68	@ 0x44
 802f78a:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802f78e:	e9dd 9525 	ldrd	r9, r5, [sp, #148]	@ 0x94
 802f792:	900f      	str	r0, [sp, #60]	@ 0x3c
 802f794:	4698      	mov	r8, r3
 802f796:	e9dd 0229 	ldrd	r0, r2, [sp, #164]	@ 0xa4
 802f79a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802f79c:	6841      	ldr	r1, [r0, #4]
 802f79e:	fb01 2303 	mla	r3, r1, r3, r2
 802f7a2:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802f7a4:	6801      	ldr	r1, [r0, #0]
 802f7a6:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 802f7a8:	6852      	ldr	r2, [r2, #4]
 802f7aa:	6800      	ldr	r0, [r0, #0]
 802f7ac:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 802f7b0:	1d13      	adds	r3, r2, #4
 802f7b2:	9009      	str	r0, [sp, #36]	@ 0x24
 802f7b4:	930c      	str	r3, [sp, #48]	@ 0x30
 802f7b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f7b8:	2b00      	cmp	r3, #0
 802f7ba:	dc02      	bgt.n	802f7c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802f7bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802f7be:	2b00      	cmp	r3, #0
 802f7c0:	dd66      	ble.n	802f890 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f7c2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f7c4:	f1b8 0f00 	cmp.w	r8, #0
 802f7c8:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802f7cc:	b221      	sxth	r1, r4
 802f7ce:	fa0f f78e 	sxth.w	r7, lr
 802f7d2:	f340 81df 	ble.w	802fb94 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802f7d6:	1e4e      	subs	r6, r1, #1
 802f7d8:	f107 3cff 	add.w	ip, r7, #4294967295
 802f7dc:	f8cd e01c 	str.w	lr, [sp, #28]
 802f7e0:	e9dd eb27 	ldrd	lr, fp, [sp, #156]	@ 0x9c
 802f7e4:	ea5f 4329 	movs.w	r3, r9, asr #16
 802f7e8:	ea4f 4025 	mov.w	r0, r5, asr #16
 802f7ec:	d405      	bmi.n	802f7fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f7ee:	42b3      	cmp	r3, r6
 802f7f0:	da03      	bge.n	802f7fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f7f2:	2800      	cmp	r0, #0
 802f7f4:	db01      	blt.n	802f7fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f7f6:	4560      	cmp	r0, ip
 802f7f8:	db4f      	blt.n	802f89a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802f7fa:	1c5a      	adds	r2, r3, #1
 802f7fc:	d406      	bmi.n	802f80c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f7fe:	428a      	cmp	r2, r1
 802f800:	dc04      	bgt.n	802f80c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f802:	1c42      	adds	r2, r0, #1
 802f804:	d402      	bmi.n	802f80c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f806:	42ba      	cmp	r2, r7
 802f808:	f340 8157 	ble.w	802faba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802f80c:	f1b8 0801 	subs.w	r8, r8, #1
 802f810:	44f1      	add	r9, lr
 802f812:	445d      	add	r5, fp
 802f814:	f10a 0a04 	add.w	sl, sl, #4
 802f818:	d1e4      	bne.n	802f7e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802f81a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f81c:	2b00      	cmp	r3, #0
 802f81e:	dd37      	ble.n	802f890 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f820:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802f824:	ee79 9aab 	vadd.f32	s19, s19, s23
 802f828:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802f82c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802f830:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f834:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f838:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f83c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f840:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f844:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f848:	ee16 2a90 	vmov	r2, s13
 802f84c:	3b01      	subs	r3, #1
 802f84e:	930a      	str	r3, [sp, #40]	@ 0x28
 802f850:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f852:	fb92 f3f3 	sdiv	r3, r2, r3
 802f856:	ee17 2a10 	vmov	r2, s14
 802f85a:	eeb0 7a48 	vmov.f32	s14, s16
 802f85e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f862:	ee17 5a10 	vmov	r5, s14
 802f866:	eeb0 7a68 	vmov.f32	s14, s17
 802f86a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802f86c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f86e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f872:	fb92 f3f3 	sdiv	r3, r2, r3
 802f876:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802f878:	9328      	str	r3, [sp, #160]	@ 0xa0
 802f87a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f87c:	ee17 9a10 	vmov	r9, s14
 802f880:	eeb0 8a67 	vmov.f32	s16, s15
 802f884:	eef0 8a46 	vmov.f32	s17, s12
 802f888:	bf14      	ite	ne
 802f88a:	4698      	movne	r8, r3
 802f88c:	4690      	moveq	r8, r2
 802f88e:	e792      	b.n	802f7b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802f890:	b011      	add	sp, #68	@ 0x44
 802f892:	ecbd 8b0a 	vpop	{d8-d12}
 802f896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f89a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802f89e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802f8a0:	f108 32ff 	add.w	r2, r8, #4294967295
 802f8a4:	fb00 9302 	mla	r3, r0, r2, r9
 802f8a8:	141b      	asrs	r3, r3, #16
 802f8aa:	9207      	str	r2, [sp, #28]
 802f8ac:	f100 80a6 	bmi.w	802f9fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f8b0:	42b3      	cmp	r3, r6
 802f8b2:	f280 80a3 	bge.w	802f9fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f8b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802f8b8:	fb03 5302 	mla	r3, r3, r2, r5
 802f8bc:	141b      	asrs	r3, r3, #16
 802f8be:	f100 809d 	bmi.w	802f9fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f8c2:	3f01      	subs	r7, #1
 802f8c4:	42bb      	cmp	r3, r7
 802f8c6:	f280 8099 	bge.w	802f9fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f8ca:	f1b8 0f00 	cmp.w	r8, #0
 802f8ce:	dda4      	ble.n	802f81a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f8d0:	f8cd a020 	str.w	sl, [sp, #32]
 802f8d4:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802f8d8:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802f8dc:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802f8e0:	e065      	b.n	802f9ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802f8e2:	f890 c001 	ldrb.w	ip, [r0, #1]
 802f8e6:	1844      	adds	r4, r0, r1
 802f8e8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f8ec:	44d4      	add	ip, sl
 802f8ee:	2a00      	cmp	r2, #0
 802f8f0:	d078      	beq.n	802f9e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802f8f2:	5c40      	ldrb	r0, [r0, r1]
 802f8f4:	7866      	ldrb	r6, [r4, #1]
 802f8f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f8fa:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802f8fe:	4450      	add	r0, sl
 802f900:	4456      	add	r6, sl
 802f902:	b29b      	uxth	r3, r3
 802f904:	b292      	uxth	r2, r2
 802f906:	fb03 f402 	mul.w	r4, r3, r2
 802f90a:	011b      	lsls	r3, r3, #4
 802f90c:	f89c 8000 	ldrb.w	r8, [ip]
 802f910:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f914:	1b19      	subs	r1, r3, r4
 802f916:	f89c c002 	ldrb.w	ip, [ip, #2]
 802f91a:	b289      	uxth	r1, r1
 802f91c:	fb01 fe0e 	mul.w	lr, r1, lr
 802f920:	fb01 f808 	mul.w	r8, r1, r8
 802f924:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f928:	fb01 f10c 	mul.w	r1, r1, ip
 802f92c:	b292      	uxth	r2, r2
 802f92e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f932:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802f936:	f897 c001 	ldrb.w	ip, [r7, #1]
 802f93a:	1a9b      	subs	r3, r3, r2
 802f93c:	78bf      	ldrb	r7, [r7, #2]
 802f93e:	b29b      	uxth	r3, r3
 802f940:	fb03 880b 	mla	r8, r3, fp, r8
 802f944:	fb03 ec0c 	mla	ip, r3, ip, lr
 802f948:	fb03 1307 	mla	r3, r3, r7, r1
 802f94c:	7881      	ldrb	r1, [r0, #2]
 802f94e:	f890 b000 	ldrb.w	fp, [r0]
 802f952:	fb02 3301 	mla	r3, r2, r1, r3
 802f956:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f95a:	78b1      	ldrb	r1, [r6, #2]
 802f95c:	fb02 880b 	mla	r8, r2, fp, r8
 802f960:	fb02 cc0e 	mla	ip, r2, lr, ip
 802f964:	fb04 3301 	mla	r3, r4, r1, r3
 802f968:	f896 b000 	ldrb.w	fp, [r6]
 802f96c:	f896 e001 	ldrb.w	lr, [r6, #1]
 802f970:	0219      	lsls	r1, r3, #8
 802f972:	fb04 880b 	mla	r8, r4, fp, r8
 802f976:	fb04 cc0e 	mla	ip, r4, lr, ip
 802f97a:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 802f97e:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802f980:	9a07      	ldr	r2, [sp, #28]
 802f982:	4489      	add	r9, r1
 802f984:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802f986:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802f98a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802f98e:	ea48 080c 	orr.w	r8, r8, ip
 802f992:	440d      	add	r5, r1
 802f994:	9908      	ldr	r1, [sp, #32]
 802f996:	3a01      	subs	r2, #1
 802f998:	ea48 0303 	orr.w	r3, r8, r3
 802f99c:	9207      	str	r2, [sp, #28]
 802f99e:	f841 3b04 	str.w	r3, [r1], #4
 802f9a2:	3201      	adds	r2, #1
 802f9a4:	9108      	str	r1, [sp, #32]
 802f9a6:	d024      	beq.n	802f9f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802f9a8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f9aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802f9ae:	ea4f 4329 	mov.w	r3, r9, asr #16
 802f9b2:	1428      	asrs	r0, r5, #16
 802f9b4:	fb01 3000 	mla	r0, r1, r0, r3
 802f9b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f9ba:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802f9be:	f812 b000 	ldrb.w	fp, [r2, r0]
 802f9c2:	4410      	add	r0, r2
 802f9c4:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802f9c8:	eb0a 070b 	add.w	r7, sl, fp
 802f9cc:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802f9d0:	2b00      	cmp	r3, #0
 802f9d2:	d186      	bne.n	802f8e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802f9d4:	b14a      	cbz	r2, 802f9ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 802f9d6:	5c40      	ldrb	r0, [r0, r1]
 802f9d8:	463e      	mov	r6, r7
 802f9da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f9de:	4450      	add	r0, sl
 802f9e0:	46bc      	mov	ip, r7
 802f9e2:	e78e      	b.n	802f902 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802f9e4:	463e      	mov	r6, r7
 802f9e6:	4638      	mov	r0, r7
 802f9e8:	e78b      	b.n	802f902 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802f9ea:	463e      	mov	r6, r7
 802f9ec:	4638      	mov	r0, r7
 802f9ee:	46bc      	mov	ip, r7
 802f9f0:	e787      	b.n	802f902 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802f9f2:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 802f9f6:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802f9fa:	e70e      	b.n	802f81a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f9fc:	f1b8 0f00 	cmp.w	r8, #0
 802fa00:	f77f af0b 	ble.w	802f81a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fa04:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802fa08:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fa0c:	1428      	asrs	r0, r5, #16
 802fa0e:	4677      	mov	r7, lr
 802fa10:	46d0      	mov	r8, sl
 802fa12:	f8cd a020 	str.w	sl, [sp, #32]
 802fa16:	f8dd a0b0 	ldr.w	sl, [sp, #176]	@ 0xb0
 802fa1a:	2b00      	cmp	r3, #0
 802fa1c:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802fa20:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fa24:	db28      	blt.n	802fa78 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa26:	1e66      	subs	r6, r4, #1
 802fa28:	42b3      	cmp	r3, r6
 802fa2a:	da25      	bge.n	802fa78 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa2c:	2800      	cmp	r0, #0
 802fa2e:	db23      	blt.n	802fa78 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa30:	1e7e      	subs	r6, r7, #1
 802fa32:	42b0      	cmp	r0, r6
 802fa34:	da20      	bge.n	802fa78 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa36:	b224      	sxth	r4, r4
 802fa38:	fb00 3304 	mla	r3, r0, r4, r3
 802fa3c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802fa3e:	5cc7      	ldrb	r7, [r0, r3]
 802fa40:	4403      	add	r3, r0
 802fa42:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802fa44:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802fa48:	eb00 0c07 	add.w	ip, r0, r7
 802fa4c:	2900      	cmp	r1, #0
 802fa4e:	d04a      	beq.n	802fae6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802fa50:	785e      	ldrb	r6, [r3, #1]
 802fa52:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802fa56:	4406      	add	r6, r0
 802fa58:	2a00      	cmp	r2, #0
 802fa5a:	f000 8098 	beq.w	802fb8e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802fa5e:	1918      	adds	r0, r3, r4
 802fa60:	7840      	ldrb	r0, [r0, #1]
 802fa62:	5d1c      	ldrb	r4, [r3, r4]
 802fa64:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fa66:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fa6a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fa6e:	1818      	adds	r0, r3, r0
 802fa70:	18e3      	adds	r3, r4, r3
 802fa72:	900d      	str	r0, [sp, #52]	@ 0x34
 802fa74:	930e      	str	r3, [sp, #56]	@ 0x38
 802fa76:	e03b      	b.n	802faf0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fa78:	1c5e      	adds	r6, r3, #1
 802fa7a:	d405      	bmi.n	802fa88 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fa7c:	42a6      	cmp	r6, r4
 802fa7e:	dc03      	bgt.n	802fa88 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fa80:	1c46      	adds	r6, r0, #1
 802fa82:	d401      	bmi.n	802fa88 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fa84:	42be      	cmp	r6, r7
 802fa86:	dd1f      	ble.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802fa88:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802fa8a:	f1bb 0f00 	cmp.w	fp, #0
 802fa8e:	4499      	add	r9, r3
 802fa90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802fa92:	f108 0804 	add.w	r8, r8, #4
 802fa96:	441d      	add	r5, r3
 802fa98:	dd07      	ble.n	802faaa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802fa9a:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 802fa9e:	f10b 3bff 	add.w	fp, fp, #4294967295
 802faa2:	ea4f 4329 	mov.w	r3, r9, asr #16
 802faa6:	1428      	asrs	r0, r5, #16
 802faa8:	e7b7      	b.n	802fa1a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802faaa:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 802faae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802fab2:	3301      	adds	r3, #1
 802fab4:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802fab8:	e6af      	b.n	802f81a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802faba:	f108 32ff 	add.w	r2, r8, #4294967295
 802fabe:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802fac2:	4693      	mov	fp, r2
 802fac4:	9207      	str	r2, [sp, #28]
 802fac6:	e7a2      	b.n	802fa0e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802fac8:	b23f      	sxth	r7, r7
 802faca:	b224      	sxth	r4, r4
 802facc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 802fad0:	e9cd 3002 	strd	r3, r0, [sp, #8]
 802fad4:	e9cd 4700 	strd	r4, r7, [sp]
 802fad8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fada:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802fadc:	4641      	mov	r1, r8
 802fade:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802fae0:	f7ff fd6e 	bl	802f5c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 802fae4:	e7d0      	b.n	802fa88 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fae6:	2a00      	cmp	r2, #0
 802fae8:	d147      	bne.n	802fb7a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 802faea:	4666      	mov	r6, ip
 802faec:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802faf0:	b28b      	uxth	r3, r1
 802faf2:	b292      	uxth	r2, r2
 802faf4:	fb03 f002 	mul.w	r0, r3, r2
 802faf8:	011b      	lsls	r3, r3, #4
 802fafa:	f896 e000 	ldrb.w	lr, [r6]
 802fafe:	7874      	ldrb	r4, [r6, #1]
 802fb00:	1a19      	subs	r1, r3, r0
 802fb02:	78b6      	ldrb	r6, [r6, #2]
 802fb04:	b289      	uxth	r1, r1
 802fb06:	fb01 f404 	mul.w	r4, r1, r4
 802fb0a:	fb01 fe0e 	mul.w	lr, r1, lr
 802fb0e:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802fb12:	fb01 f106 	mul.w	r1, r1, r6
 802fb16:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802fb18:	b292      	uxth	r2, r2
 802fb1a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fb1e:	5df7      	ldrb	r7, [r6, r7]
 802fb20:	1a9b      	subs	r3, r3, r2
 802fb22:	f89c 6001 	ldrb.w	r6, [ip, #1]
 802fb26:	f89c c002 	ldrb.w	ip, [ip, #2]
 802fb2a:	b29b      	uxth	r3, r3
 802fb2c:	fb03 4606 	mla	r6, r3, r6, r4
 802fb30:	fb03 e707 	mla	r7, r3, r7, lr
 802fb34:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802fb36:	fb03 130c 	mla	r3, r3, ip, r1
 802fb3a:	7861      	ldrb	r1, [r4, #1]
 802fb3c:	f894 c000 	ldrb.w	ip, [r4]
 802fb40:	78a4      	ldrb	r4, [r4, #2]
 802fb42:	fb02 6601 	mla	r6, r2, r1, r6
 802fb46:	fb02 770c 	mla	r7, r2, ip, r7
 802fb4a:	fb02 3104 	mla	r1, r2, r4, r3
 802fb4e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802fb50:	7862      	ldrb	r2, [r4, #1]
 802fb52:	7823      	ldrb	r3, [r4, #0]
 802fb54:	78a4      	ldrb	r4, [r4, #2]
 802fb56:	fb00 6602 	mla	r6, r0, r2, r6
 802fb5a:	fb00 7303 	mla	r3, r0, r3, r7
 802fb5e:	fb00 1204 	mla	r2, r0, r4, r1
 802fb62:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802fb66:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802fb6a:	0212      	lsls	r2, r2, #8
 802fb6c:	4333      	orrs	r3, r6
 802fb6e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802fb72:	4313      	orrs	r3, r2
 802fb74:	f8c8 3000 	str.w	r3, [r8]
 802fb78:	e786      	b.n	802fa88 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fb7a:	5d1c      	ldrb	r4, [r3, r4]
 802fb7c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fb7e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fb82:	18e3      	adds	r3, r4, r3
 802fb84:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 802fb88:	930e      	str	r3, [sp, #56]	@ 0x38
 802fb8a:	4666      	mov	r6, ip
 802fb8c:	e7b0      	b.n	802faf0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fb8e:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fb92:	e7ad      	b.n	802faf0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fb94:	f43f ae41 	beq.w	802f81a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fb98:	1e4e      	subs	r6, r1, #1
 802fb9a:	e680      	b.n	802f89e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>

0802fb9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 802fb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fba0:	b087      	sub	sp, #28
 802fba2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802fba6:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	@ 0x48
 802fbaa:	fb04 070c 	mla	r7, r4, ip, r0
 802fbae:	9100      	str	r1, [sp, #0]
 802fbb0:	f89d 1058 	ldrb.w	r1, [sp, #88]	@ 0x58
 802fbb4:	2c00      	cmp	r4, #0
 802fbb6:	eb02 0b07 	add.w	fp, r2, r7
 802fbba:	f104 0501 	add.w	r5, r4, #1
 802fbbe:	f9bd 8044 	ldrsh.w	r8, [sp, #68]	@ 0x44
 802fbc2:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 802fbc6:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 802fbca:	9101      	str	r1, [sp, #4]
 802fbcc:	db02      	blt.n	802fbd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x38>
 802fbce:	45a0      	cmp	r8, r4
 802fbd0:	f300 811a 	bgt.w	802fe08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26c>
 802fbd4:	2700      	movs	r7, #0
 802fbd6:	46be      	mov	lr, r7
 802fbd8:	46b9      	mov	r9, r7
 802fbda:	463c      	mov	r4, r7
 802fbdc:	2d00      	cmp	r5, #0
 802fbde:	db02      	blt.n	802fbe6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x4a>
 802fbe0:	45a8      	cmp	r8, r5
 802fbe2:	f300 812b 	bgt.w	802fe3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a0>
 802fbe6:	f04f 0c00 	mov.w	ip, #0
 802fbea:	46e0      	mov	r8, ip
 802fbec:	4665      	mov	r5, ip
 802fbee:	f8cd c010 	str.w	ip, [sp, #16]
 802fbf2:	f1ba 0f0f 	cmp.w	sl, #15
 802fbf6:	f200 8167 	bhi.w	802fec8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fbfa:	2e0f      	cmp	r6, #15
 802fbfc:	f200 8164 	bhi.w	802fec8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fc00:	b2b2      	uxth	r2, r6
 802fc02:	fa1f f38a 	uxth.w	r3, sl
 802fc06:	fb02 f603 	mul.w	r6, r2, r3
 802fc0a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802fc0e:	b292      	uxth	r2, r2
 802fc10:	fb02 fa08 	mul.w	sl, r2, r8
 802fc14:	fb06 fb0c 	mul.w	fp, r6, ip
 802fc18:	011b      	lsls	r3, r3, #4
 802fc1a:	1b98      	subs	r0, r3, r6
 802fc1c:	b280      	uxth	r0, r0
 802fc1e:	9002      	str	r0, [sp, #8]
 802fc20:	fb00 f007 	mul.w	r0, r0, r7
 802fc24:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fc28:	1a9b      	subs	r3, r3, r2
 802fc2a:	b29b      	uxth	r3, r3
 802fc2c:	fb03 000e 	mla	r0, r3, lr, r0
 802fc30:	4450      	add	r0, sl
 802fc32:	4458      	add	r0, fp
 802fc34:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802fc38:	9003      	str	r0, [sp, #12]
 802fc3a:	2800      	cmp	r0, #0
 802fc3c:	f000 80e1 	beq.w	802fe02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x266>
 802fc40:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802fc44:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802fc48:	f009 1bff 	and.w	fp, r9, #16711935	@ 0xff00ff
 802fc4c:	9105      	str	r1, [sp, #20]
 802fc4e:	d01d      	beq.n	802fc8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xf0>
 802fc50:	fb0b fb0e 	mul.w	fp, fp, lr
 802fc54:	fb01 fe0e 	mul.w	lr, r1, lr
 802fc58:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802fc5c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fc60:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802fc64:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802fc68:	44d3      	add	fp, sl
 802fc6a:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802fc6e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802fc72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fc76:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802fc7a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802fc7e:	ea4b 0e0e 	orr.w	lr, fp, lr
 802fc82:	f40e 417f 	and.w	r1, lr, #65280	@ 0xff00
 802fc86:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802fc8a:	9105      	str	r1, [sp, #20]
 802fc8c:	2fff      	cmp	r7, #255	@ 0xff
 802fc8e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fc92:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fc96:	d01b      	beq.n	802fcd0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x134>
 802fc98:	fb0e fe07 	mul.w	lr, lr, r7
 802fc9c:	fb04 f407 	mul.w	r4, r4, r7
 802fca0:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802fca4:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fca8:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802fcac:	f504 7080 	add.w	r0, r4, #256	@ 0x100
 802fcb0:	44d6      	add	lr, sl
 802fcb2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802fcb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fcba:	0a24      	lsrs	r4, r4, #8
 802fcbc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802fcc0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fcc4:	ea4e 0404 	orr.w	r4, lr, r4
 802fcc8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fccc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fcd0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802fcd4:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fcd8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fcdc:	d019      	beq.n	802fd12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x176>
 802fcde:	fb00 f008 	mul.w	r0, r0, r8
 802fce2:	fb05 f508 	mul.w	r5, r5, r8
 802fce6:	ea4f 2910 	mov.w	r9, r0, lsr #8
 802fcea:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802fcee:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802fcf2:	f505 7780 	add.w	r7, r5, #256	@ 0x100
 802fcf6:	4448      	add	r0, r9
 802fcf8:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 802fcfc:	0a00      	lsrs	r0, r0, #8
 802fcfe:	0a2d      	lsrs	r5, r5, #8
 802fd00:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802fd04:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd08:	4305      	orrs	r5, r0
 802fd0a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fd0e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd12:	9904      	ldr	r1, [sp, #16]
 802fd14:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802fd18:	f001 1aff 	and.w	sl, r1, #16711935	@ 0xff00ff
 802fd1c:	f401 497f 	and.w	r9, r1, #65280	@ 0xff00
 802fd20:	d01c      	beq.n	802fd5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x1c0>
 802fd22:	fb0a fa0c 	mul.w	sl, sl, ip
 802fd26:	fb09 fc0c 	mul.w	ip, r9, ip
 802fd2a:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802fd2e:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802fd32:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802fd36:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802fd3a:	44c2      	add	sl, r8
 802fd3c:	eb07 2c1c 	add.w	ip, r7, ip, lsr #8
 802fd40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802fd44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802fd48:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fd4c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802fd50:	ea4a 090c 	orr.w	r9, sl, ip
 802fd54:	f009 1aff 	and.w	sl, r9, #16711935	@ 0xff00ff
 802fd58:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fd5c:	f8bd 8004 	ldrh.w	r8, [sp, #4]
 802fd60:	9903      	ldr	r1, [sp, #12]
 802fd62:	fb01 fc08 	mul.w	ip, r1, r8
 802fd66:	f10c 0701 	add.w	r7, ip, #1
 802fd6a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802fd6e:	ea6f 2c17 	mvn.w	ip, r7, lsr #8
 802fd72:	9902      	ldr	r1, [sp, #8]
 802fd74:	fa5f f78c 	uxtb.w	r7, ip
 802fd78:	fb04 f401 	mul.w	r4, r4, r1
 802fd7c:	fb0e fe01 	mul.w	lr, lr, r1
 802fd80:	9905      	ldr	r1, [sp, #20]
 802fd82:	fb0b ee03 	mla	lr, fp, r3, lr
 802fd86:	fb01 4303 	mla	r3, r1, r3, r4
 802fd8a:	fb00 e002 	mla	r0, r0, r2, lr
 802fd8e:	fb05 3502 	mla	r5, r5, r2, r3
 802fd92:	fb0a 0a06 	mla	sl, sl, r6, r0
 802fd96:	fb09 5906 	mla	r9, r9, r6, r5
 802fd9a:	ea4f 261a 	mov.w	r6, sl, lsr #8
 802fd9e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802fda2:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802fda6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fdaa:	ea46 0609 	orr.w	r6, r6, r9
 802fdae:	b2f2      	uxtb	r2, r6
 802fdb0:	f3c6 2307 	ubfx	r3, r6, #8, #8
 802fdb4:	0c36      	lsrs	r6, r6, #16
 802fdb6:	9900      	ldr	r1, [sp, #0]
 802fdb8:	fb12 f408 	smulbb	r4, r2, r8
 802fdbc:	fb13 f008 	smulbb	r0, r3, r8
 802fdc0:	fb16 f808 	smulbb	r8, r6, r8
 802fdc4:	780a      	ldrb	r2, [r1, #0]
 802fdc6:	784b      	ldrb	r3, [r1, #1]
 802fdc8:	788e      	ldrb	r6, [r1, #2]
 802fdca:	fb02 4207 	mla	r2, r2, r7, r4
 802fdce:	fb03 0307 	mla	r3, r3, r7, r0
 802fdd2:	fb06 8807 	mla	r8, r6, r7, r8
 802fdd6:	b292      	uxth	r2, r2
 802fdd8:	b29b      	uxth	r3, r3
 802fdda:	fa1f f888 	uxth.w	r8, r8
 802fdde:	1c54      	adds	r4, r2, #1
 802fde0:	1c58      	adds	r0, r3, #1
 802fde2:	f108 0701 	add.w	r7, r8, #1
 802fde6:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802fdea:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802fdee:	eb07 2818 	add.w	r8, r7, r8, lsr #8
 802fdf2:	1212      	asrs	r2, r2, #8
 802fdf4:	121b      	asrs	r3, r3, #8
 802fdf6:	ea4f 2828 	mov.w	r8, r8, asr #8
 802fdfa:	700a      	strb	r2, [r1, #0]
 802fdfc:	704b      	strb	r3, [r1, #1]
 802fdfe:	f881 8002 	strb.w	r8, [r1, #2]
 802fe02:	b007      	add	sp, #28
 802fe04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fe08:	2800      	cmp	r0, #0
 802fe0a:	db01      	blt.n	802fe10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x274>
 802fe0c:	4584      	cmp	ip, r0
 802fe0e:	dc40      	bgt.n	802fe92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f6>
 802fe10:	f04f 0e00 	mov.w	lr, #0
 802fe14:	46f1      	mov	r9, lr
 802fe16:	1c42      	adds	r2, r0, #1
 802fe18:	d42b      	bmi.n	802fe72 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fe1a:	4594      	cmp	ip, r2
 802fe1c:	dd29      	ble.n	802fe72 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fe1e:	f1ba 0f00 	cmp.w	sl, #0
 802fe22:	d005      	beq.n	802fe30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x294>
 802fe24:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802fe28:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802fe2c:	0e27      	lsrs	r7, r4, #24
 802fe2e:	e6d5      	b.n	802fbdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fe30:	2d00      	cmp	r5, #0
 802fe32:	db41      	blt.n	802feb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe34:	45a8      	cmp	r8, r5
 802fe36:	dd3f      	ble.n	802feb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe38:	4657      	mov	r7, sl
 802fe3a:	4654      	mov	r4, sl
 802fe3c:	b1e6      	cbz	r6, 802fe78 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2dc>
 802fe3e:	2800      	cmp	r0, #0
 802fe40:	db32      	blt.n	802fea8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe42:	4584      	cmp	ip, r0
 802fe44:	dd30      	ble.n	802fea8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe46:	f81b 200c 	ldrb.w	r2, [fp, ip]
 802fe4a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802fe4e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802fe52:	3001      	adds	r0, #1
 802fe54:	d423      	bmi.n	802fe9e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fe56:	4584      	cmp	ip, r0
 802fe58:	dd21      	ble.n	802fe9e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fe5a:	f1ba 0f00 	cmp.w	sl, #0
 802fe5e:	d027      	beq.n	802feb0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x314>
 802fe60:	44dc      	add	ip, fp
 802fe62:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802fe66:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802fe6a:	9304      	str	r3, [sp, #16]
 802fe6c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802fe70:	e6bf      	b.n	802fbf2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fe72:	2700      	movs	r7, #0
 802fe74:	463c      	mov	r4, r7
 802fe76:	e6b1      	b.n	802fbdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fe78:	f1ba 0f0f 	cmp.w	sl, #15
 802fe7c:	d824      	bhi.n	802fec8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fe7e:	fa1f f38a 	uxth.w	r3, sl
 802fe82:	4632      	mov	r2, r6
 802fe84:	46b3      	mov	fp, r6
 802fe86:	46b2      	mov	sl, r6
 802fe88:	9604      	str	r6, [sp, #16]
 802fe8a:	4635      	mov	r5, r6
 802fe8c:	46b4      	mov	ip, r6
 802fe8e:	46b0      	mov	r8, r6
 802fe90:	e6c2      	b.n	802fc18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802fe92:	5dd2      	ldrb	r2, [r2, r7]
 802fe94:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 802fe98:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802fe9c:	e7bb      	b.n	802fe16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x27a>
 802fe9e:	f04f 0c00 	mov.w	ip, #0
 802fea2:	f8cd c010 	str.w	ip, [sp, #16]
 802fea6:	e6a4      	b.n	802fbf2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fea8:	f04f 0800 	mov.w	r8, #0
 802feac:	4645      	mov	r5, r8
 802feae:	e7d0      	b.n	802fe52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2b6>
 802feb0:	f8cd a010 	str.w	sl, [sp, #16]
 802feb4:	46d4      	mov	ip, sl
 802feb6:	e6a0      	b.n	802fbfa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802feb8:	4654      	mov	r4, sl
 802feba:	f8cd a010 	str.w	sl, [sp, #16]
 802febe:	4655      	mov	r5, sl
 802fec0:	46d4      	mov	ip, sl
 802fec2:	46d0      	mov	r8, sl
 802fec4:	4657      	mov	r7, sl
 802fec6:	e698      	b.n	802fbfa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802fec8:	4b03      	ldr	r3, [pc, #12]	@ (802fed8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x33c>)
 802feca:	4a04      	ldr	r2, [pc, #16]	@ (802fedc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x340>)
 802fecc:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802fed0:	4803      	ldr	r0, [pc, #12]	@ (802fee0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x344>)
 802fed2:	f002 faf1 	bl	80324b8 <__assert_func>
 802fed6:	bf00      	nop
 802fed8:	0803666c 	.word	0x0803666c
 802fedc:	08036ce8 	.word	0x08036ce8
 802fee0:	080367f4 	.word	0x080367f4

0802fee4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802fee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fee8:	ed2d 8b08 	vpush	{d8-d11}
 802feec:	b0a9      	sub	sp, #164	@ 0xa4
 802feee:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802fef2:	eeb0 aa40 	vmov.f32	s20, s0
 802fef6:	46d9      	mov	r9, fp
 802fef8:	eef0 9a60 	vmov.f32	s19, s1
 802fefc:	eeb0 9a41 	vmov.f32	s18, s2
 802ff00:	eef0 8a62 	vmov.f32	s17, s5
 802ff04:	eeb0 8a43 	vmov.f32	s16, s6
 802ff08:	eef0 ba44 	vmov.f32	s23, s8
 802ff0c:	eeb0 ba64 	vmov.f32	s22, s9
 802ff10:	eef0 aa45 	vmov.f32	s21, s10
 802ff14:	46d3      	mov	fp, sl
 802ff16:	9022      	str	r0, [sp, #136]	@ 0x88
 802ff18:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 802ff1a:	9115      	str	r1, [sp, #84]	@ 0x54
 802ff1c:	9218      	str	r2, [sp, #96]	@ 0x60
 802ff1e:	6841      	ldr	r1, [r0, #4]
 802ff20:	9a40      	ldr	r2, [sp, #256]	@ 0x100
 802ff22:	469e      	mov	lr, r3
 802ff24:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 802ff26:	6807      	ldr	r7, [r0, #0]
 802ff28:	fb01 2303 	mla	r3, r1, r3, r2
 802ff2c:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802ff2e:	9842      	ldr	r0, [sp, #264]	@ 0x108
 802ff30:	6852      	ldr	r2, [r2, #4]
 802ff32:	f89d 110c 	ldrb.w	r1, [sp, #268]	@ 0x10c
 802ff36:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 802ff3a:	6800      	ldr	r0, [r0, #0]
 802ff3c:	1d13      	adds	r3, r2, #4
 802ff3e:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ff40:	b28b      	uxth	r3, r1
 802ff42:	9123      	str	r1, [sp, #140]	@ 0x8c
 802ff44:	9011      	str	r0, [sp, #68]	@ 0x44
 802ff46:	9317      	str	r3, [sp, #92]	@ 0x5c
 802ff48:	9712      	str	r7, [sp, #72]	@ 0x48
 802ff4a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ff4c:	2b00      	cmp	r3, #0
 802ff4e:	dc02      	bgt.n	802ff56 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802ff50:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802ff52:	2b00      	cmp	r3, #0
 802ff54:	dd68      	ble.n	8030028 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ff56:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802ff58:	f1be 0f00 	cmp.w	lr, #0
 802ff5c:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 802ff60:	b228      	sxth	r0, r5
 802ff62:	b23e      	sxth	r6, r7
 802ff64:	f340 83a0 	ble.w	80306a8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c4>
 802ff68:	e9dd 8a3d 	ldrd	r8, sl, [sp, #244]	@ 0xf4
 802ff6c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ff6e:	1e44      	subs	r4, r0, #1
 802ff70:	f106 3cff 	add.w	ip, r6, #4294967295
 802ff74:	9709      	str	r7, [sp, #36]	@ 0x24
 802ff76:	ea5f 4329 	movs.w	r3, r9, asr #16
 802ff7a:	ea4f 422b 	mov.w	r2, fp, asr #16
 802ff7e:	d405      	bmi.n	802ff8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ff80:	42a3      	cmp	r3, r4
 802ff82:	da03      	bge.n	802ff8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ff84:	2a00      	cmp	r2, #0
 802ff86:	db01      	blt.n	802ff8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ff88:	4562      	cmp	r2, ip
 802ff8a:	db52      	blt.n	8030032 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802ff8c:	1c5f      	adds	r7, r3, #1
 802ff8e:	d406      	bmi.n	802ff9e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ff90:	4287      	cmp	r7, r0
 802ff92:	dc04      	bgt.n	802ff9e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ff94:	1c57      	adds	r7, r2, #1
 802ff96:	d402      	bmi.n	802ff9e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ff98:	42b7      	cmp	r7, r6
 802ff9a:	f340 835f 	ble.w	803065c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802ff9e:	f1be 0e01 	subs.w	lr, lr, #1
 802ffa2:	44c1      	add	r9, r8
 802ffa4:	44d3      	add	fp, sl
 802ffa6:	f101 0104 	add.w	r1, r1, #4
 802ffaa:	d1e4      	bne.n	802ff76 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ffac:	9112      	str	r1, [sp, #72]	@ 0x48
 802ffae:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ffb0:	2b00      	cmp	r3, #0
 802ffb2:	dd39      	ble.n	8030028 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ffb4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ffb8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ffbc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ffc0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ffc4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ffc8:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ffcc:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ffd0:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ffd4:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ffd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ffdc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ffe0:	ee16 2a90 	vmov	r2, s13
 802ffe4:	3b01      	subs	r3, #1
 802ffe6:	9315      	str	r3, [sp, #84]	@ 0x54
 802ffe8:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ffea:	fb92 f3f3 	sdiv	r3, r2, r3
 802ffee:	ee17 2a10 	vmov	r2, s14
 802fff2:	eeb0 7a48 	vmov.f32	s14, s16
 802fff6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802fffa:	ee17 ba10 	vmov	fp, s14
 802fffe:	eeb0 7a68 	vmov.f32	s14, s17
 8030002:	933d      	str	r3, [sp, #244]	@ 0xf4
 8030004:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8030006:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 803000a:	fb92 f3f3 	sdiv	r3, r2, r3
 803000e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8030010:	933e      	str	r3, [sp, #248]	@ 0xf8
 8030012:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8030014:	ee17 9a10 	vmov	r9, s14
 8030018:	eeb0 8a67 	vmov.f32	s16, s15
 803001c:	eef0 8a46 	vmov.f32	s17, s12
 8030020:	bf14      	ite	ne
 8030022:	469e      	movne	lr, r3
 8030024:	4696      	moveq	lr, r2
 8030026:	e790      	b.n	802ff4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8030028:	b029      	add	sp, #164	@ 0xa4
 803002a:	ecbd 8b08 	vpop	{d8-d11}
 803002e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030032:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030034:	9112      	str	r1, [sp, #72]	@ 0x48
 8030036:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8030038:	f10e 32ff 	add.w	r2, lr, #4294967295
 803003c:	fb01 9302 	mla	r3, r1, r2, r9
 8030040:	141b      	asrs	r3, r3, #16
 8030042:	920a      	str	r2, [sp, #40]	@ 0x28
 8030044:	f100 816a 	bmi.w	803031c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030048:	42a3      	cmp	r3, r4
 803004a:	f280 8167 	bge.w	803031c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803004e:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8030050:	fb03 b302 	mla	r3, r3, r2, fp
 8030054:	141b      	asrs	r3, r3, #16
 8030056:	f100 8161 	bmi.w	803031c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803005a:	3e01      	subs	r6, #1
 803005c:	42b3      	cmp	r3, r6
 803005e:	f280 815d 	bge.w	803031c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030062:	f1be 0f00 	cmp.w	lr, #0
 8030066:	dda2      	ble.n	802ffae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8030068:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 803006a:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 803006e:	3304      	adds	r3, #4
 8030070:	9309      	str	r3, [sp, #36]	@ 0x24
 8030072:	f8cd b0f0 	str.w	fp, [sp, #240]	@ 0xf0
 8030076:	4606      	mov	r6, r0
 8030078:	465b      	mov	r3, fp
 803007a:	e12a      	b.n	80302d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 803007c:	785f      	ldrb	r7, [r3, #1]
 803007e:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 8030082:	9713      	str	r7, [sp, #76]	@ 0x4c
 8030084:	0e3f      	lsrs	r7, r7, #24
 8030086:	970c      	str	r7, [sp, #48]	@ 0x30
 8030088:	b16a      	cbz	r2, 80300a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 803008a:	199f      	adds	r7, r3, r6
 803008c:	5d9b      	ldrb	r3, [r3, r6]
 803008e:	462e      	mov	r6, r5
 8030090:	787f      	ldrb	r7, [r7, #1]
 8030092:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8030096:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 803009a:	9314      	str	r3, [sp, #80]	@ 0x50
 803009c:	9516      	str	r5, [sp, #88]	@ 0x58
 803009e:	0e1b      	lsrs	r3, r3, #24
 80300a0:	0e2d      	lsrs	r5, r5, #24
 80300a2:	950e      	str	r5, [sp, #56]	@ 0x38
 80300a4:	930d      	str	r3, [sp, #52]	@ 0x34
 80300a6:	fa1f fc81 	uxth.w	ip, r1
 80300aa:	b292      	uxth	r2, r2
 80300ac:	fb0c f602 	mul.w	r6, ip, r2
 80300b0:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80300b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80300b6:	ebac 0706 	sub.w	r7, ip, r6
 80300ba:	b2bf      	uxth	r7, r7
 80300bc:	fb07 f103 	mul.w	r1, r7, r3
 80300c0:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80300c4:	b292      	uxth	r2, r2
 80300c6:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 80300ca:	1a9b      	subs	r3, r3, r2
 80300cc:	b29b      	uxth	r3, r3
 80300ce:	fb03 1104 	mla	r1, r3, r4, r1
 80300d2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80300d4:	fb02 1105 	mla	r1, r2, r5, r1
 80300d8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80300da:	fb06 1105 	mla	r1, r6, r5, r1
 80300de:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80300e2:	2900      	cmp	r1, #0
 80300e4:	f000 80e3 	beq.w	80302ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80300e8:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80300ec:	2cff      	cmp	r4, #255	@ 0xff
 80300ee:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80300f2:	950f      	str	r5, [sp, #60]	@ 0x3c
 80300f4:	9010      	str	r0, [sp, #64]	@ 0x40
 80300f6:	d01e      	beq.n	8030136 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80300f8:	fb00 f004 	mul.w	r0, r0, r4
 80300fc:	fb05 fe04 	mul.w	lr, r5, r4
 8030100:	4604      	mov	r4, r0
 8030102:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8030106:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 803010a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 803010e:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8030112:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8030116:	44e6      	add	lr, ip
 8030118:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 803011c:	0a24      	lsrs	r4, r4, #8
 803011e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030122:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8030126:	ea4e 0e04 	orr.w	lr, lr, r4
 803012a:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 803012e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8030130:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8030134:	9010      	str	r0, [sp, #64]	@ 0x40
 8030136:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8030138:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 803013c:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8030140:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8030142:	28ff      	cmp	r0, #255	@ 0xff
 8030144:	d01c      	beq.n	8030180 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8030146:	fb0e fe00 	mul.w	lr, lr, r0
 803014a:	fb08 f800 	mul.w	r8, r8, r0
 803014e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8030152:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8030156:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 803015a:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 803015e:	44a6      	add	lr, r4
 8030160:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 8030164:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030168:	ea4f 2818 	mov.w	r8, r8, lsr #8
 803016c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030170:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8030174:	ea4e 0808 	orr.w	r8, lr, r8
 8030178:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 803017c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8030180:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8030182:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8030186:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 803018a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 803018c:	28ff      	cmp	r0, #255	@ 0xff
 803018e:	d01c      	beq.n	80301ca <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8030190:	fb0c fc00 	mul.w	ip, ip, r0
 8030194:	fb0a fa00 	mul.w	sl, sl, r0
 8030198:	ea4f 241c 	mov.w	r4, ip, lsr #8
 803019c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80301a0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80301a4:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 80301a8:	44a4      	add	ip, r4
 80301aa:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80301ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80301b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80301b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80301ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80301be:	ea4c 0a0a 	orr.w	sl, ip, sl
 80301c2:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 80301c6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80301ca:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80301cc:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 80301d0:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80301d4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80301d6:	2cff      	cmp	r4, #255	@ 0xff
 80301d8:	d019      	beq.n	803020e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80301da:	fb00 f004 	mul.w	r0, r0, r4
 80301de:	fb0b fb04 	mul.w	fp, fp, r4
 80301e2:	0a04      	lsrs	r4, r0, #8
 80301e4:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 80301e8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 80301ec:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 80301f0:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 80301f4:	4428      	add	r0, r5
 80301f6:	0a00      	lsrs	r0, r0, #8
 80301f8:	0a24      	lsrs	r4, r4, #8
 80301fa:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80301fe:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8030202:	ea40 0b0b 	orr.w	fp, r0, fp
 8030206:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 803020a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 803020e:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 8030210:	fb0e fe07 	mul.w	lr, lr, r7
 8030214:	fb01 f105 	mul.w	r1, r1, r5
 8030218:	1c4c      	adds	r4, r1, #1
 803021a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 803021e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8030222:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8030224:	fb08 f707 	mul.w	r7, r8, r7
 8030228:	fb04 ee03 	mla	lr, r4, r3, lr
 803022c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 803022e:	fb0c ee02 	mla	lr, ip, r2, lr
 8030232:	fb04 7703 	mla	r7, r4, r3, r7
 8030236:	fb0a 7702 	mla	r7, sl, r2, r7
 803023a:	fb00 ee06 	mla	lr, r0, r6, lr
 803023e:	fb0b 7706 	mla	r7, fp, r6, r7
 8030242:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030246:	0a3f      	lsrs	r7, r7, #8
 8030248:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 803024c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030250:	ea4e 0303 	orr.w	r3, lr, r3
 8030254:	b2df      	uxtb	r7, r3
 8030256:	f3c3 2607 	ubfx	r6, r3, #8, #8
 803025a:	0c1b      	lsrs	r3, r3, #16
 803025c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 803025e:	fb17 f705 	smulbb	r7, r7, r5
 8030262:	fb16 f605 	smulbb	r6, r6, r5
 8030266:	fb13 f305 	smulbb	r3, r3, r5
 803026a:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 803026e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8030272:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 8030276:	b2c9      	uxtb	r1, r1
 8030278:	fb00 7001 	mla	r0, r0, r1, r7
 803027c:	fb02 6201 	mla	r2, r2, r1, r6
 8030280:	fb0c 3101 	mla	r1, ip, r1, r3
 8030284:	b280      	uxth	r0, r0
 8030286:	b292      	uxth	r2, r2
 8030288:	b289      	uxth	r1, r1
 803028a:	1c47      	adds	r7, r0, #1
 803028c:	1c56      	adds	r6, r2, #1
 803028e:	1c4b      	adds	r3, r1, #1
 8030290:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8030294:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8030298:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 803029c:	1200      	asrs	r0, r0, #8
 803029e:	1212      	asrs	r2, r2, #8
 80302a0:	1209      	asrs	r1, r1, #8
 80302a2:	f804 0c04 	strb.w	r0, [r4, #-4]
 80302a6:	f804 2c03 	strb.w	r2, [r4, #-3]
 80302aa:	f804 1c02 	strb.w	r1, [r4, #-2]
 80302ae:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 80302b0:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 80302b2:	4491      	add	r9, r2
 80302b4:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80302b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80302b8:	440a      	add	r2, r1
 80302ba:	923c      	str	r2, [sp, #240]	@ 0xf0
 80302bc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80302be:	3b01      	subs	r3, #1
 80302c0:	930a      	str	r3, [sp, #40]	@ 0x28
 80302c2:	3204      	adds	r2, #4
 80302c4:	3301      	adds	r3, #1
 80302c6:	9209      	str	r2, [sp, #36]	@ 0x24
 80302c8:	d021      	beq.n	803030e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80302ca:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 80302cc:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 80302d0:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 80302d2:	ea4f 4229 	mov.w	r2, r9, asr #16
 80302d6:	141b      	asrs	r3, r3, #16
 80302d8:	fb06 2303 	mla	r3, r6, r3, r2
 80302dc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80302de:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80302e0:	5ce2      	ldrb	r2, [r4, r3]
 80302e2:	f3c9 3103 	ubfx	r1, r9, #12, #4
 80302e6:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 80302ea:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80302ec:	4423      	add	r3, r4
 80302ee:	f3c2 3203 	ubfx	r2, r2, #12, #4
 80302f2:	0e04      	lsrs	r4, r0, #24
 80302f4:	2900      	cmp	r1, #0
 80302f6:	f47f aec1 	bne.w	803007c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80302fa:	2a00      	cmp	r2, #0
 80302fc:	f43f aed3 	beq.w	80300a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8030300:	5d9b      	ldrb	r3, [r3, r6]
 8030302:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8030306:	9314      	str	r3, [sp, #80]	@ 0x50
 8030308:	0e1b      	lsrs	r3, r3, #24
 803030a:	930d      	str	r3, [sp, #52]	@ 0x34
 803030c:	e6cb      	b.n	80300a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 803030e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8030310:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 8030314:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 8030318:	9312      	str	r3, [sp, #72]	@ 0x48
 803031a:	e648      	b.n	802ffae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803031c:	f1be 0f00 	cmp.w	lr, #0
 8030320:	f77f ae45 	ble.w	802ffae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8030324:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8030328:	ea4f 4329 	mov.w	r3, r9, asr #16
 803032c:	ea4f 422b 	mov.w	r2, fp, asr #16
 8030330:	2b00      	cmp	r3, #0
 8030332:	46be      	mov	lr, r7
 8030334:	4629      	mov	r1, r5
 8030336:	e9dd 653d 	ldrd	r6, r5, [sp, #244]	@ 0xf4
 803033a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 803033e:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8030340:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8030344:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030348:	f2c0 815d 	blt.w	8030606 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803034c:	f101 3cff 	add.w	ip, r1, #4294967295
 8030350:	4563      	cmp	r3, ip
 8030352:	f280 8158 	bge.w	8030606 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030356:	2a00      	cmp	r2, #0
 8030358:	f2c0 8155 	blt.w	8030606 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803035c:	f10e 3cff 	add.w	ip, lr, #4294967295
 8030360:	4562      	cmp	r2, ip
 8030362:	f280 8150 	bge.w	8030606 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030366:	fa0f fc81 	sxth.w	ip, r1
 803036a:	fb02 330c 	mla	r3, r2, ip, r3
 803036e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030370:	5cd1      	ldrb	r1, [r2, r3]
 8030372:	18d3      	adds	r3, r2, r3
 8030374:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8030376:	469e      	mov	lr, r3
 8030378:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 803037c:	0e19      	lsrs	r1, r3, #24
 803037e:	9309      	str	r3, [sp, #36]	@ 0x24
 8030380:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030382:	2800      	cmp	r0, #0
 8030384:	f000 8171 	beq.w	803066a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 8030388:	4671      	mov	r1, lr
 803038a:	f89e e001 	ldrb.w	lr, [lr, #1]
 803038e:	4613      	mov	r3, r2
 8030390:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 8030394:	9224      	str	r2, [sp, #144]	@ 0x90
 8030396:	0e12      	lsrs	r2, r2, #24
 8030398:	921a      	str	r2, [sp, #104]	@ 0x68
 803039a:	2f00      	cmp	r7, #0
 803039c:	f040 8171 	bne.w	8030682 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79e>
 80303a0:	b280      	uxth	r0, r0
 80303a2:	b2bf      	uxth	r7, r7
 80303a4:	fb00 f207 	mul.w	r2, r0, r7
 80303a8:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 80303ac:	ebac 0002 	sub.w	r0, ip, r2
 80303b0:	b280      	uxth	r0, r0
 80303b2:	4603      	mov	r3, r0
 80303b4:	9010      	str	r0, [sp, #64]	@ 0x40
 80303b6:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80303b8:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 80303bc:	fb03 f000 	mul.w	r0, r3, r0
 80303c0:	fa1f fe87 	uxth.w	lr, r7
 80303c4:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 80303c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80303ca:	eba7 070e 	sub.w	r7, r7, lr
 80303ce:	b2bf      	uxth	r7, r7
 80303d0:	fb07 0003 	mla	r0, r7, r3, r0
 80303d4:	9719      	str	r7, [sp, #100]	@ 0x64
 80303d6:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 80303d8:	fb0e 0007 	mla	r0, lr, r7, r0
 80303dc:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 80303de:	fb02 0007 	mla	r0, r2, r7, r0
 80303e2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80303e6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80303e8:	2800      	cmp	r0, #0
 80303ea:	f000 80f6 	beq.w	80305da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80303ee:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80303f0:	2bff      	cmp	r3, #255	@ 0xff
 80303f2:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 80303f6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80303fa:	901d      	str	r0, [sp, #116]	@ 0x74
 80303fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80303fe:	d01b      	beq.n	8030438 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x554>
 8030400:	fb01 f103 	mul.w	r1, r1, r3
 8030404:	fb00 f003 	mul.w	r0, r0, r3
 8030408:	460b      	mov	r3, r1
 803040a:	0a01      	lsrs	r1, r0, #8
 803040c:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 8030410:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030414:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8030418:	4439      	add	r1, r7
 803041a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 803041e:	0a09      	lsrs	r1, r1, #8
 8030420:	0a1b      	lsrs	r3, r3, #8
 8030422:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030426:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 803042a:	430b      	orrs	r3, r1
 803042c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8030430:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030434:	911d      	str	r1, [sp, #116]	@ 0x74
 8030436:	9309      	str	r3, [sp, #36]	@ 0x24
 8030438:	9924      	ldr	r1, [sp, #144]	@ 0x90
 803043a:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 803043c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8030440:	2fff      	cmp	r7, #255	@ 0xff
 8030442:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8030446:	931e      	str	r3, [sp, #120]	@ 0x78
 8030448:	911f      	str	r1, [sp, #124]	@ 0x7c
 803044a:	d01c      	beq.n	8030486 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a2>
 803044c:	fb01 f107 	mul.w	r1, r1, r7
 8030450:	fb03 f307 	mul.w	r3, r3, r7
 8030454:	460f      	mov	r7, r1
 8030456:	0a19      	lsrs	r1, r3, #8
 8030458:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 803045c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030460:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8030464:	4401      	add	r1, r0
 8030466:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 803046a:	0a09      	lsrs	r1, r1, #8
 803046c:	0a1b      	lsrs	r3, r3, #8
 803046e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030472:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030476:	ea41 0003 	orr.w	r0, r1, r3
 803047a:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 803047e:	931e      	str	r3, [sp, #120]	@ 0x78
 8030480:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8030484:	931f      	str	r3, [sp, #124]	@ 0x7c
 8030486:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8030488:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 803048c:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 8030490:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8030492:	9120      	str	r1, [sp, #128]	@ 0x80
 8030494:	2bff      	cmp	r3, #255	@ 0xff
 8030496:	d01b      	beq.n	80304d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8030498:	fb01 f103 	mul.w	r1, r1, r3
 803049c:	fb0c fc03 	mul.w	ip, ip, r3
 80304a0:	0a08      	lsrs	r0, r1, #8
 80304a2:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 80304a6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304aa:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 80304ae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80304b2:	4401      	add	r1, r0
 80304b4:	0a09      	lsrs	r1, r1, #8
 80304b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80304ba:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80304be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80304c2:	ea41 0c0c 	orr.w	ip, r1, ip
 80304c6:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 80304ca:	9320      	str	r3, [sp, #128]	@ 0x80
 80304cc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80304d0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80304d2:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 80304d6:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 80304da:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80304dc:	9321      	str	r3, [sp, #132]	@ 0x84
 80304de:	28ff      	cmp	r0, #255	@ 0xff
 80304e0:	d019      	beq.n	8030516 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x632>
 80304e2:	fb03 f300 	mul.w	r3, r3, r0
 80304e6:	fb07 f700 	mul.w	r7, r7, r0
 80304ea:	0a18      	lsrs	r0, r3, #8
 80304ec:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304f0:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80304f4:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 80304f8:	4418      	add	r0, r3
 80304fa:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80304fe:	0a00      	lsrs	r0, r0, #8
 8030500:	0a3f      	lsrs	r7, r7, #8
 8030502:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8030506:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 803050a:	4307      	orrs	r7, r0
 803050c:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 8030510:	9321      	str	r3, [sp, #132]	@ 0x84
 8030512:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8030516:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030518:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 803051a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 803051c:	fb01 f100 	mul.w	r1, r1, r0
 8030520:	4608      	mov	r0, r1
 8030522:	3101      	adds	r1, #1
 8030524:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8030528:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 803052c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 803052e:	9125      	str	r1, [sp, #148]	@ 0x94
 8030530:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8030532:	fb01 f100 	mul.w	r1, r1, r0
 8030536:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030538:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 803053a:	fb01 f100 	mul.w	r1, r1, r0
 803053e:	9110      	str	r1, [sp, #64]	@ 0x40
 8030540:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8030542:	4608      	mov	r0, r1
 8030544:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030546:	fb00 1103 	mla	r1, r0, r3, r1
 803054a:	910f      	str	r1, [sp, #60]	@ 0x3c
 803054c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 803054e:	4608      	mov	r0, r1
 8030550:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8030552:	fb00 1003 	mla	r0, r0, r3, r1
 8030556:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8030558:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 803055a:	fb0c 000e 	mla	r0, ip, lr, r0
 803055e:	fb03 110e 	mla	r1, r3, lr, r1
 8030562:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8030564:	f89a c002 	ldrb.w	ip, [sl, #2]
 8030568:	fb03 1102 	mla	r1, r3, r2, r1
 803056c:	fb07 0302 	mla	r3, r7, r2, r0
 8030570:	0a0a      	lsrs	r2, r1, #8
 8030572:	0a1b      	lsrs	r3, r3, #8
 8030574:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8030578:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 803057c:	4313      	orrs	r3, r2
 803057e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8030580:	b2df      	uxtb	r7, r3
 8030582:	f3c3 2007 	ubfx	r0, r3, #8, #8
 8030586:	0c1b      	lsrs	r3, r3, #16
 8030588:	fb17 f702 	smulbb	r7, r7, r2
 803058c:	fb10 f002 	smulbb	r0, r0, r2
 8030590:	fb13 f302 	smulbb	r3, r3, r2
 8030594:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 8030598:	f89a 1000 	ldrb.w	r1, [sl]
 803059c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80305a0:	fb01 710e 	mla	r1, r1, lr, r7
 80305a4:	fb02 020e 	mla	r2, r2, lr, r0
 80305a8:	fb0c 330e 	mla	r3, ip, lr, r3
 80305ac:	b297      	uxth	r7, r2
 80305ae:	fa1f fc81 	uxth.w	ip, r1
 80305b2:	b298      	uxth	r0, r3
 80305b4:	f10c 0101 	add.w	r1, ip, #1
 80305b8:	1c7a      	adds	r2, r7, #1
 80305ba:	1c43      	adds	r3, r0, #1
 80305bc:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80305c0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80305c4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80305c8:	1209      	asrs	r1, r1, #8
 80305ca:	1212      	asrs	r2, r2, #8
 80305cc:	121b      	asrs	r3, r3, #8
 80305ce:	f88a 1000 	strb.w	r1, [sl]
 80305d2:	f88a 2001 	strb.w	r2, [sl, #1]
 80305d6:	f88a 3002 	strb.w	r3, [sl, #2]
 80305da:	f1b8 0f00 	cmp.w	r8, #0
 80305de:	f10a 0a04 	add.w	sl, sl, #4
 80305e2:	44b1      	add	r9, r6
 80305e4:	44ab      	add	fp, r5
 80305e6:	dd30      	ble.n	803064a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x766>
 80305e8:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 80305ec:	ea4f 4329 	mov.w	r3, r9, asr #16
 80305f0:	2b00      	cmp	r3, #0
 80305f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80305f6:	ea4f 422b 	mov.w	r2, fp, asr #16
 80305fa:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80305fe:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030602:	f6bf aea3 	bge.w	803034c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8030606:	f113 0c01 	adds.w	ip, r3, #1
 803060a:	d4e6      	bmi.n	80305da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803060c:	458c      	cmp	ip, r1
 803060e:	dce4      	bgt.n	80305da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8030610:	f112 0c01 	adds.w	ip, r2, #1
 8030614:	d4e1      	bmi.n	80305da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8030616:	45f4      	cmp	ip, lr
 8030618:	dcdf      	bgt.n	80305da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803061a:	fa0f fe8e 	sxth.w	lr, lr
 803061e:	b209      	sxth	r1, r1
 8030620:	e9cd 1e00 	strd	r1, lr, [sp]
 8030624:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8030626:	e9cd 2003 	strd	r2, r0, [sp, #12]
 803062a:	e9cd 7105 	strd	r7, r1, [sp, #20]
 803062e:	9302      	str	r3, [sp, #8]
 8030630:	4651      	mov	r1, sl
 8030632:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030634:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030636:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8030638:	f7ff fab0 	bl	802fb9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 803063c:	f1b8 0f00 	cmp.w	r8, #0
 8030640:	f10a 0a04 	add.w	sl, sl, #4
 8030644:	44b1      	add	r9, r6
 8030646:	44ab      	add	fp, r5
 8030648:	dcce      	bgt.n	80305e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 803064a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 803064c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 803064e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8030652:	3301      	adds	r3, #1
 8030654:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8030658:	9312      	str	r3, [sp, #72]	@ 0x48
 803065a:	e4a8      	b.n	802ffae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803065c:	9112      	str	r1, [sp, #72]	@ 0x48
 803065e:	f10e 31ff 	add.w	r1, lr, #4294967295
 8030662:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030664:	910a      	str	r1, [sp, #40]	@ 0x28
 8030666:	4688      	mov	r8, r1
 8030668:	e662      	b.n	8030330 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 803066a:	2f00      	cmp	r7, #0
 803066c:	f43f ae98 	beq.w	80303a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030670:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030672:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8030676:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 803067a:	0e13      	lsrs	r3, r2, #24
 803067c:	9226      	str	r2, [sp, #152]	@ 0x98
 803067e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8030680:	e68e      	b.n	80303a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030682:	eb01 0e0c 	add.w	lr, r1, ip
 8030686:	f89e e001 	ldrb.w	lr, [lr, #1]
 803068a:	f811 c00c 	ldrb.w	ip, [r1, ip]
 803068e:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8030692:	4611      	mov	r1, r2
 8030694:	9227      	str	r2, [sp, #156]	@ 0x9c
 8030696:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 803069a:	4613      	mov	r3, r2
 803069c:	9226      	str	r2, [sp, #152]	@ 0x98
 803069e:	0e0a      	lsrs	r2, r1, #24
 80306a0:	921c      	str	r2, [sp, #112]	@ 0x70
 80306a2:	0e1a      	lsrs	r2, r3, #24
 80306a4:	921b      	str	r2, [sp, #108]	@ 0x6c
 80306a6:	e67b      	b.n	80303a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306a8:	f43f ac81 	beq.w	802ffae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80306ac:	1e44      	subs	r4, r0, #1
 80306ae:	e4c2      	b.n	8030036 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>

080306b0 <_ZN8touchgfx19GPU2DVectorRenderer19setStrokeMiterLimitEf>:
 80306b0:	4770      	bx	lr
 80306b2:	bf00      	nop

080306b4 <_ZN8touchgfx19GPU2DVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:
 80306b4:	4770      	bx	lr
 80306b6:	bf00      	nop

080306b8 <_ZN8touchgfx19GPU2DVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:
 80306b8:	4770      	bx	lr
 80306ba:	bf00      	nop

080306bc <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 80306bc:	680a      	ldr	r2, [r1, #0]
 80306be:	4b09      	ldr	r3, [pc, #36]	@ (80306e4 <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E+0x28>)
 80306c0:	601a      	str	r2, [r3, #0]
 80306c2:	684a      	ldr	r2, [r1, #4]
 80306c4:	605a      	str	r2, [r3, #4]
 80306c6:	688a      	ldr	r2, [r1, #8]
 80306c8:	609a      	str	r2, [r3, #8]
 80306ca:	68ca      	ldr	r2, [r1, #12]
 80306cc:	60da      	str	r2, [r3, #12]
 80306ce:	690a      	ldr	r2, [r1, #16]
 80306d0:	611a      	str	r2, [r3, #16]
 80306d2:	694a      	ldr	r2, [r1, #20]
 80306d4:	615a      	str	r2, [r3, #20]
 80306d6:	698a      	ldr	r2, [r1, #24]
 80306d8:	619a      	str	r2, [r3, #24]
 80306da:	69ca      	ldr	r2, [r1, #28]
 80306dc:	61da      	str	r2, [r3, #28]
 80306de:	6a0a      	ldr	r2, [r1, #32]
 80306e0:	621a      	str	r2, [r3, #32]
 80306e2:	4770      	bx	lr
 80306e4:	200833c0 	.word	0x200833c0

080306e8 <_ZN8touchgfx19GPU2DVectorRendererD1Ev>:
 80306e8:	4770      	bx	lr
 80306ea:	bf00      	nop

080306ec <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 80306ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80306f0:	4f58      	ldr	r7, [pc, #352]	@ (8030854 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x168>)
 80306f2:	b08c      	sub	sp, #48	@ 0x30
 80306f4:	6838      	ldr	r0, [r7, #0]
 80306f6:	2800      	cmp	r0, #0
 80306f8:	f000 8093 	beq.w	8030822 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 80306fc:	460e      	mov	r6, r1
 80306fe:	4615      	mov	r5, r2
 8030700:	f7f0 fa4a 	bl	8020b98 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8030704:	683c      	ldr	r4, [r7, #0]
 8030706:	2c00      	cmp	r4, #0
 8030708:	f000 808b 	beq.w	8030822 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 803070c:	4b52      	ldr	r3, [pc, #328]	@ (8030858 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x16c>)
 803070e:	781b      	ldrb	r3, [r3, #0]
 8030710:	2b00      	cmp	r3, #0
 8030712:	d178      	bne.n	8030806 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x11a>
 8030714:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030718:	4b50      	ldr	r3, [pc, #320]	@ (803085c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x170>)
 803071a:	681b      	ldr	r3, [r3, #0]
 803071c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8030720:	2a00      	cmp	r2, #0
 8030722:	d151      	bne.n	80307c8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xdc>
 8030724:	6898      	ldr	r0, [r3, #8]
 8030726:	6803      	ldr	r3, [r0, #0]
 8030728:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 803072a:	4798      	blx	r3
 803072c:	2801      	cmp	r0, #1
 803072e:	d053      	beq.n	80307d8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xec>
 8030730:	d35e      	bcc.n	80307f0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x104>
 8030732:	2802      	cmp	r0, #2
 8030734:	f040 8087 	bne.w	8030846 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x15a>
 8030738:	4a49      	ldr	r2, [pc, #292]	@ (8030860 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 803073a:	4b4a      	ldr	r3, [pc, #296]	@ (8030864 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 803073c:	8811      	ldrh	r1, [r2, #0]
 803073e:	881a      	ldrh	r2, [r3, #0]
 8030740:	008b      	lsls	r3, r1, #2
 8030742:	9300      	str	r3, [sp, #0]
 8030744:	4640      	mov	r0, r8
 8030746:	2310      	movs	r3, #16
 8030748:	f7e0 fc18 	bl	8010f7c <nema_bind_dst_tex>
 803074c:	4c46      	ldr	r4, [pc, #280]	@ (8030868 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x17c>)
 803074e:	4847      	ldr	r0, [pc, #284]	@ (803086c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x180>)
 8030750:	f7e1 f8be 	bl	80118d0 <nema_mat3x3_load_identity>
 8030754:	6823      	ldr	r3, [r4, #0]
 8030756:	2b00      	cmp	r3, #0
 8030758:	d069      	beq.n	803082e <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x142>
 803075a:	882a      	ldrh	r2, [r5, #0]
 803075c:	886b      	ldrh	r3, [r5, #2]
 803075e:	8831      	ldrh	r1, [r6, #0]
 8030760:	8874      	ldrh	r4, [r6, #2]
 8030762:	4f43      	ldr	r7, [pc, #268]	@ (8030870 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x184>)
 8030764:	4411      	add	r1, r2
 8030766:	441c      	add	r4, r3
 8030768:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 803076c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8030770:	686d      	ldr	r5, [r5, #4]
 8030772:	b209      	sxth	r1, r1
 8030774:	b224      	sxth	r4, r4
 8030776:	4608      	mov	r0, r1
 8030778:	8039      	strh	r1, [r7, #0]
 803077a:	607d      	str	r5, [r7, #4]
 803077c:	4621      	mov	r1, r4
 803077e:	807c      	strh	r4, [r7, #2]
 8030780:	f7e0 fa92 	bl	8010ca8 <nema_set_clip>
 8030784:	483b      	ldr	r0, [pc, #236]	@ (8030874 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x188>)
 8030786:	f7ec f95d 	bl	801ca44 <nema_vg_set_blend>
 803078a:	2002      	movs	r0, #2
 803078c:	f7ec f960 	bl	801ca50 <nema_vg_set_quality>
 8030790:	f7ed fa34 	bl	801dbfc <nema_cl_get_bound>
 8030794:	4b38      	ldr	r3, [pc, #224]	@ (8030878 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x18c>)
 8030796:	6018      	str	r0, [r3, #0]
 8030798:	a803      	add	r0, sp, #12
 803079a:	f7e1 f899 	bl	80118d0 <nema_mat3x3_load_identity>
 803079e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80307a2:	a803      	add	r0, sp, #12
 80307a4:	ee00 3a90 	vmov	s1, r3
 80307a8:	f9b6 3000 	ldrsh.w	r3, [r6]
 80307ac:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80307b0:	ee00 3a10 	vmov	s0, r3
 80307b4:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80307b8:	f7e1 f8ac 	bl	8011914 <nema_mat3x3_translate>
 80307bc:	a803      	add	r0, sp, #12
 80307be:	f7ec f957 	bl	801ca70 <nema_vg_set_global_matrix>
 80307c2:	b00c      	add	sp, #48	@ 0x30
 80307c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80307c8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80307ca:	2800      	cmp	r0, #0
 80307cc:	d0aa      	beq.n	8030724 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x38>
 80307ce:	6803      	ldr	r3, [r0, #0]
 80307d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80307d2:	4798      	blx	r3
 80307d4:	2801      	cmp	r0, #1
 80307d6:	d1ab      	bne.n	8030730 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x44>
 80307d8:	4a21      	ldr	r2, [pc, #132]	@ (8030860 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 80307da:	4b22      	ldr	r3, [pc, #136]	@ (8030864 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 80307dc:	8811      	ldrh	r1, [r2, #0]
 80307de:	881a      	ldrh	r2, [r3, #0]
 80307e0:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 80307e4:	9300      	str	r3, [sp, #0]
 80307e6:	4640      	mov	r0, r8
 80307e8:	2339      	movs	r3, #57	@ 0x39
 80307ea:	f7e0 fbc7 	bl	8010f7c <nema_bind_dst_tex>
 80307ee:	e7ad      	b.n	803074c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 80307f0:	4a1b      	ldr	r2, [pc, #108]	@ (8030860 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 80307f2:	4b1c      	ldr	r3, [pc, #112]	@ (8030864 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 80307f4:	8811      	ldrh	r1, [r2, #0]
 80307f6:	881a      	ldrh	r2, [r3, #0]
 80307f8:	004b      	lsls	r3, r1, #1
 80307fa:	9300      	str	r3, [sp, #0]
 80307fc:	4640      	mov	r0, r8
 80307fe:	2304      	movs	r3, #4
 8030800:	f7e0 fbbc 	bl	8010f7c <nema_bind_dst_tex>
 8030804:	e7a2      	b.n	803074c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030806:	6823      	ldr	r3, [r4, #0]
 8030808:	4620      	mov	r0, r4
 803080a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 803080c:	4798      	blx	r3
 803080e:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030812:	683b      	ldr	r3, [r7, #0]
 8030814:	4580      	cmp	r8, r0
 8030816:	bf08      	it	eq
 8030818:	f8d4 8040 	ldreq.w	r8, [r4, #64]	@ 0x40
 803081c:	2b00      	cmp	r3, #0
 803081e:	f47f af7b 	bne.w	8030718 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x2c>
 8030822:	4b16      	ldr	r3, [pc, #88]	@ (803087c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x190>)
 8030824:	4a16      	ldr	r2, [pc, #88]	@ (8030880 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x194>)
 8030826:	217c      	movs	r1, #124	@ 0x7c
 8030828:	4816      	ldr	r0, [pc, #88]	@ (8030884 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x198>)
 803082a:	f001 fe45 	bl	80324b8 <__assert_func>
 803082e:	f7ec f975 	bl	801cb1c <nema_vg_paint_create>
 8030832:	6020      	str	r0, [r4, #0]
 8030834:	f7ec fdc4 	bl	801d3c0 <nema_vg_path_create>
 8030838:	4b13      	ldr	r3, [pc, #76]	@ (8030888 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x19c>)
 803083a:	2101      	movs	r1, #1
 803083c:	6018      	str	r0, [r3, #0]
 803083e:	6820      	ldr	r0, [r4, #0]
 8030840:	f7ec f9a2 	bl	801cb88 <nema_vg_paint_lock_tran_to_path>
 8030844:	e789      	b.n	803075a <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x6e>
 8030846:	4b11      	ldr	r3, [pc, #68]	@ (803088c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a0>)
 8030848:	4a11      	ldr	r2, [pc, #68]	@ (8030890 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a4>)
 803084a:	212c      	movs	r1, #44	@ 0x2c
 803084c:	4811      	ldr	r0, [pc, #68]	@ (8030894 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a8>)
 803084e:	f001 fe33 	bl	80324b8 <__assert_func>
 8030852:	bf00      	nop
 8030854:	20083364 	.word	0x20083364
 8030858:	20082ec2 	.word	0x20082ec2
 803085c:	20082ec4 	.word	0x20082ec4
 8030860:	20082ebe 	.word	0x20082ebe
 8030864:	20082ec0 	.word	0x20082ec0
 8030868:	200833f0 	.word	0x200833f0
 803086c:	200833c0 	.word	0x200833c0
 8030870:	200833f4 	.word	0x200833f4
 8030874:	04000501 	.word	0x04000501
 8030878:	200833e4 	.word	0x200833e4
 803087c:	080361d4 	.word	0x080361d4
 8030880:	080381cc 	.word	0x080381cc
 8030884:	080361fc 	.word	0x080361fc
 8030888:	200833ec 	.word	0x200833ec
 803088c:	08036230 	.word	0x08036230
 8030890:	0803816c 	.word	0x0803816c
 8030894:	08037fc8 	.word	0x08037fc8

08030898 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
 8030898:	2901      	cmp	r1, #1
 803089a:	d002      	beq.n	80308a2 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0xa>
 803089c:	d305      	bcc.n	80308aa <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x12>
 803089e:	2902      	cmp	r1, #2
 80308a0:	d102      	bne.n	80308a8 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x10>
 80308a2:	4608      	mov	r0, r1
 80308a4:	f7ec b8c0 	b.w	801ca28 <nema_vg_set_fill_rule>
 80308a8:	4770      	bx	lr
 80308aa:	2000      	movs	r0, #0
 80308ac:	f7ec b8bc 	b.w	801ca28 <nema_vg_set_fill_rule>

080308b0 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv>:
 80308b0:	b510      	push	{r4, lr}
 80308b2:	4b06      	ldr	r3, [pc, #24]	@ (80308cc <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x1c>)
 80308b4:	4c06      	ldr	r4, [pc, #24]	@ (80308d0 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x20>)
 80308b6:	6818      	ldr	r0, [r3, #0]
 80308b8:	f7ed fad2 	bl	801de60 <nema_cl_submit>
 80308bc:	6820      	ldr	r0, [r4, #0]
 80308be:	b118      	cbz	r0, 80308c8 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x18>
 80308c0:	f7ec f988 	bl	801cbd4 <nema_vg_grad_destroy>
 80308c4:	2300      	movs	r3, #0
 80308c6:	6023      	str	r3, [r4, #0]
 80308c8:	bd10      	pop	{r4, pc}
 80308ca:	bf00      	nop
 80308cc:	200833e4 	.word	0x200833e4
 80308d0:	200833e8 	.word	0x200833e8

080308d4 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_>:
 80308d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80308d8:	4c13      	ldr	r4, [pc, #76]	@ (8030928 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x54>)
 80308da:	b083      	sub	sp, #12
 80308dc:	6820      	ldr	r0, [r4, #0]
 80308de:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80308e0:	460f      	mov	r7, r1
 80308e2:	4616      	mov	r6, r2
 80308e4:	4699      	mov	r9, r3
 80308e6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80308ea:	f7ec fd61 	bl	801d3b0 <nema_vg_path_clear>
 80308ee:	6820      	ldr	r0, [r4, #0]
 80308f0:	490e      	ldr	r1, [pc, #56]	@ (803092c <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x58>)
 80308f2:	f7ec fdeb 	bl	801d4cc <nema_vg_path_set_matrix>
 80308f6:	6820      	ldr	r0, [r4, #0]
 80308f8:	b175      	cbz	r5, 8030918 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x44>
 80308fa:	e9cd 9500 	strd	r9, r5, [sp]
 80308fe:	4643      	mov	r3, r8
 8030900:	463a      	mov	r2, r7
 8030902:	4631      	mov	r1, r6
 8030904:	f7ec fd64 	bl	801d3d0 <nema_vg_path_set_shape_and_bbox>
 8030908:	4b09      	ldr	r3, [pc, #36]	@ (8030930 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x5c>)
 803090a:	6820      	ldr	r0, [r4, #0]
 803090c:	6819      	ldr	r1, [r3, #0]
 803090e:	b003      	add	sp, #12
 8030910:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030914:	f7e7 bd64 	b.w	80183e0 <nema_vg_draw_path>
 8030918:	f8cd 9000 	str.w	r9, [sp]
 803091c:	4643      	mov	r3, r8
 803091e:	463a      	mov	r2, r7
 8030920:	4631      	mov	r1, r6
 8030922:	f7ec fdc5 	bl	801d4b0 <nema_vg_path_set_shape>
 8030926:	e7ef      	b.n	8030908 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8030928:	200833ec 	.word	0x200833ec
 803092c:	200833c0 	.word	0x200833c0
 8030930:	200833f0 	.word	0x200833f0

08030934 <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf>:
 8030934:	b510      	push	{r4, lr}
 8030936:	ed2d 8b02 	vpush	{d8}
 803093a:	eeb0 8a40 	vmov.f32	s16, s0
 803093e:	4c07      	ldr	r4, [pc, #28]	@ (803095c <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf+0x28>)
 8030940:	2100      	movs	r1, #0
 8030942:	6820      	ldr	r0, [r4, #0]
 8030944:	f7ec f914 	bl	801cb70 <nema_vg_paint_set_type>
 8030948:	eeb0 0a48 	vmov.f32	s0, s16
 803094c:	ecbd 8b02 	vpop	{d8}
 8030950:	6820      	ldr	r0, [r4, #0]
 8030952:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030956:	f7ec bcbd 	b.w	801d2d4 <nema_vg_paint_set_stroke_width>
 803095a:	bf00      	nop
 803095c:	200833f0 	.word	0x200833f0

08030960 <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE>:
 8030960:	b538      	push	{r3, r4, r5, lr}
 8030962:	460c      	mov	r4, r1
 8030964:	4d09      	ldr	r5, [pc, #36]	@ (803098c <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE+0x2c>)
 8030966:	2100      	movs	r1, #0
 8030968:	6828      	ldr	r0, [r5, #0]
 803096a:	f7ec f901 	bl	801cb70 <nema_vg_paint_set_type>
 803096e:	f3c4 2107 	ubfx	r1, r4, #8, #8
 8030972:	0e23      	lsrs	r3, r4, #24
 8030974:	b2e2      	uxtb	r2, r4
 8030976:	f3c4 4007 	ubfx	r0, r4, #16, #8
 803097a:	682d      	ldr	r5, [r5, #0]
 803097c:	f7e0 fa72 	bl	8010e64 <nema_rgba>
 8030980:	4601      	mov	r1, r0
 8030982:	4628      	mov	r0, r5
 8030984:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8030988:	f7ec bc96 	b.w	801d2b8 <nema_vg_paint_set_paint_color>
 803098c:	200833f0 	.word	0x200833f0

08030990 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh>:
 8030990:	29ff      	cmp	r1, #255	@ 0xff
 8030992:	d00b      	beq.n	80309ac <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x1c>
 8030994:	ee07 1a90 	vmov	s15, r1
 8030998:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 80309b8 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x28>
 803099c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80309a0:	4b06      	ldr	r3, [pc, #24]	@ (80309bc <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 80309a2:	ee87 0a87 	vdiv.f32	s0, s15, s14
 80309a6:	6818      	ldr	r0, [r3, #0]
 80309a8:	f7ec bc8c 	b.w	801d2c4 <nema_vg_paint_set_opacity>
 80309ac:	4b03      	ldr	r3, [pc, #12]	@ (80309bc <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 80309ae:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80309b2:	6818      	ldr	r0, [r3, #0]
 80309b4:	f7ec bc86 	b.w	801d2c4 <nema_vg_paint_set_opacity>
 80309b8:	437f0000 	.word	0x437f0000
 80309bc:	200833f0 	.word	0x200833f0

080309c0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 80309c0:	b570      	push	{r4, r5, r6, lr}
 80309c2:	ed2d 8b08 	vpush	{d8-d11}
 80309c6:	290a      	cmp	r1, #10
 80309c8:	b0c4      	sub	sp, #272	@ 0x110
 80309ca:	f200 8288 	bhi.w	8030ede <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x51e>
 80309ce:	4dd8      	ldr	r5, [pc, #864]	@ (8030d30 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x370>)
 80309d0:	4616      	mov	r6, r2
 80309d2:	682a      	ldr	r2, [r5, #0]
 80309d4:	460c      	mov	r4, r1
 80309d6:	eeb0 9a40 	vmov.f32	s18, s0
 80309da:	eef0 8a60 	vmov.f32	s17, s1
 80309de:	eef0 aa41 	vmov.f32	s21, s2
 80309e2:	eeb0 8a61 	vmov.f32	s16, s3
 80309e6:	eef0 9a42 	vmov.f32	s19, s4
 80309ea:	eeb0 aa62 	vmov.f32	s20, s5
 80309ee:	2a00      	cmp	r2, #0
 80309f0:	f000 8197 	beq.w	8030d22 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x362>
 80309f4:	2c00      	cmp	r4, #0
 80309f6:	f000 8157 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 80309fa:	681a      	ldr	r2, [r3, #0]
 80309fc:	2c01      	cmp	r4, #1
 80309fe:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a02:	ee06 1a10 	vmov	s12, r1
 8030a06:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a0a:	ee06 1a90 	vmov	s13, r1
 8030a0e:	b2d1      	uxtb	r1, r2
 8030a10:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a14:	ee07 1a10 	vmov	s14, r1
 8030a18:	ee07 2a90 	vmov	s15, r2
 8030a1c:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030a20:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030a24:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030a28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030a2c:	ed8d 6a1c 	vstr	s12, [sp, #112]	@ 0x70
 8030a30:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8030a34:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 8030a38:	edcd 7a1f 	vstr	s15, [sp, #124]	@ 0x7c
 8030a3c:	f000 8134 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a40:	685a      	ldr	r2, [r3, #4]
 8030a42:	2c02      	cmp	r4, #2
 8030a44:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a48:	ee06 1a10 	vmov	s12, r1
 8030a4c:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a50:	ee06 1a90 	vmov	s13, r1
 8030a54:	b2d1      	uxtb	r1, r2
 8030a56:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a5a:	ee07 1a10 	vmov	s14, r1
 8030a5e:	ee07 2a90 	vmov	s15, r2
 8030a62:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030a66:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030a6a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030a6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030a72:	ed8d 6a20 	vstr	s12, [sp, #128]	@ 0x80
 8030a76:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8030a7a:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
 8030a7e:	edcd 7a23 	vstr	s15, [sp, #140]	@ 0x8c
 8030a82:	f000 8111 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a86:	689a      	ldr	r2, [r3, #8]
 8030a88:	2c03      	cmp	r4, #3
 8030a8a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a8e:	ee06 1a10 	vmov	s12, r1
 8030a92:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a96:	ee06 1a90 	vmov	s13, r1
 8030a9a:	b2d1      	uxtb	r1, r2
 8030a9c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030aa0:	ee07 1a10 	vmov	s14, r1
 8030aa4:	ee07 2a90 	vmov	s15, r2
 8030aa8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030aac:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ab0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030ab4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ab8:	ed8d 6a24 	vstr	s12, [sp, #144]	@ 0x90
 8030abc:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8030ac0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8030ac4:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8030ac8:	f000 80ee 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030acc:	68da      	ldr	r2, [r3, #12]
 8030ace:	2c04      	cmp	r4, #4
 8030ad0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030ad4:	ee06 1a10 	vmov	s12, r1
 8030ad8:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030adc:	ee06 1a90 	vmov	s13, r1
 8030ae0:	b2d1      	uxtb	r1, r2
 8030ae2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030ae6:	ee07 1a10 	vmov	s14, r1
 8030aea:	ee07 2a90 	vmov	s15, r2
 8030aee:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030af2:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030af6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030afa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030afe:	ed8d 6a28 	vstr	s12, [sp, #160]	@ 0xa0
 8030b02:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8030b06:	ed8d 7a2a 	vstr	s14, [sp, #168]	@ 0xa8
 8030b0a:	edcd 7a2b 	vstr	s15, [sp, #172]	@ 0xac
 8030b0e:	f000 80cb 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b12:	691a      	ldr	r2, [r3, #16]
 8030b14:	2c05      	cmp	r4, #5
 8030b16:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b1a:	ee06 1a10 	vmov	s12, r1
 8030b1e:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b22:	ee06 1a90 	vmov	s13, r1
 8030b26:	b2d1      	uxtb	r1, r2
 8030b28:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b2c:	ee07 1a10 	vmov	s14, r1
 8030b30:	ee07 2a90 	vmov	s15, r2
 8030b34:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b38:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b3c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b44:	ed8d 6a2c 	vstr	s12, [sp, #176]	@ 0xb0
 8030b48:	edcd 6a2d 	vstr	s13, [sp, #180]	@ 0xb4
 8030b4c:	ed8d 7a2e 	vstr	s14, [sp, #184]	@ 0xb8
 8030b50:	edcd 7a2f 	vstr	s15, [sp, #188]	@ 0xbc
 8030b54:	f000 80a8 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b58:	695a      	ldr	r2, [r3, #20]
 8030b5a:	2c06      	cmp	r4, #6
 8030b5c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b60:	ee06 1a10 	vmov	s12, r1
 8030b64:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b68:	ee06 1a90 	vmov	s13, r1
 8030b6c:	b2d1      	uxtb	r1, r2
 8030b6e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b72:	ee07 1a10 	vmov	s14, r1
 8030b76:	ee07 2a90 	vmov	s15, r2
 8030b7a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b7e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b82:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b8a:	ed8d 6a30 	vstr	s12, [sp, #192]	@ 0xc0
 8030b8e:	edcd 6a31 	vstr	s13, [sp, #196]	@ 0xc4
 8030b92:	ed8d 7a32 	vstr	s14, [sp, #200]	@ 0xc8
 8030b96:	edcd 7a33 	vstr	s15, [sp, #204]	@ 0xcc
 8030b9a:	f000 8085 	beq.w	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b9e:	699a      	ldr	r2, [r3, #24]
 8030ba0:	2c07      	cmp	r4, #7
 8030ba2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030ba6:	ee06 1a10 	vmov	s12, r1
 8030baa:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030bae:	ee06 1a90 	vmov	s13, r1
 8030bb2:	b2d1      	uxtb	r1, r2
 8030bb4:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030bb8:	ee07 1a10 	vmov	s14, r1
 8030bbc:	ee07 2a90 	vmov	s15, r2
 8030bc0:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030bc4:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030bc8:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030bcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030bd0:	ed8d 6a34 	vstr	s12, [sp, #208]	@ 0xd0
 8030bd4:	edcd 6a35 	vstr	s13, [sp, #212]	@ 0xd4
 8030bd8:	ed8d 7a36 	vstr	s14, [sp, #216]	@ 0xd8
 8030bdc:	edcd 7a37 	vstr	s15, [sp, #220]	@ 0xdc
 8030be0:	d062      	beq.n	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030be2:	69da      	ldr	r2, [r3, #28]
 8030be4:	2c08      	cmp	r4, #8
 8030be6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030bea:	ee06 1a10 	vmov	s12, r1
 8030bee:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030bf2:	ee06 1a90 	vmov	s13, r1
 8030bf6:	b2d1      	uxtb	r1, r2
 8030bf8:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030bfc:	ee07 1a10 	vmov	s14, r1
 8030c00:	ee07 2a90 	vmov	s15, r2
 8030c04:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c08:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c0c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c14:	ed8d 6a38 	vstr	s12, [sp, #224]	@ 0xe0
 8030c18:	edcd 6a39 	vstr	s13, [sp, #228]	@ 0xe4
 8030c1c:	ed8d 7a3a 	vstr	s14, [sp, #232]	@ 0xe8
 8030c20:	edcd 7a3b 	vstr	s15, [sp, #236]	@ 0xec
 8030c24:	d040      	beq.n	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c26:	6a1a      	ldr	r2, [r3, #32]
 8030c28:	2c09      	cmp	r4, #9
 8030c2a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030c2e:	ee06 1a10 	vmov	s12, r1
 8030c32:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030c36:	ee06 1a90 	vmov	s13, r1
 8030c3a:	b2d1      	uxtb	r1, r2
 8030c3c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c40:	ee07 1a10 	vmov	s14, r1
 8030c44:	ee07 2a90 	vmov	s15, r2
 8030c48:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c4c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c50:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c58:	ed8d 6a3c 	vstr	s12, [sp, #240]	@ 0xf0
 8030c5c:	edcd 6a3d 	vstr	s13, [sp, #244]	@ 0xf4
 8030c60:	ed8d 7a3e 	vstr	s14, [sp, #248]	@ 0xf8
 8030c64:	edcd 7a3f 	vstr	s15, [sp, #252]	@ 0xfc
 8030c68:	d01e      	beq.n	8030ca8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8030c6c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8030c70:	ee06 2a10 	vmov	s12, r2
 8030c74:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8030c78:	ee06 2a90 	vmov	s13, r2
 8030c7c:	b2da      	uxtb	r2, r3
 8030c7e:	0e1b      	lsrs	r3, r3, #24
 8030c80:	ee07 2a10 	vmov	s14, r2
 8030c84:	ee07 3a90 	vmov	s15, r3
 8030c88:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c8c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c90:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c98:	ed8d 6a40 	vstr	s12, [sp, #256]	@ 0x100
 8030c9c:	edcd 6a41 	vstr	s13, [sp, #260]	@ 0x104
 8030ca0:	ed8d 7a42 	vstr	s14, [sp, #264]	@ 0x108
 8030ca4:	edcd 7a43 	vstr	s15, [sp, #268]	@ 0x10c
 8030ca8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8030cac:	2100      	movs	r1, #0
 8030cae:	461a      	mov	r2, r3
 8030cb0:	4608      	mov	r0, r1
 8030cb2:	f7df fff9 	bl	8010ca8 <nema_set_clip>
 8030cb6:	4621      	mov	r1, r4
 8030cb8:	4632      	mov	r2, r6
 8030cba:	ab1c      	add	r3, sp, #112	@ 0x70
 8030cbc:	6828      	ldr	r0, [r5, #0]
 8030cbe:	f7eb ff95 	bl	801cbec <nema_vg_grad_set>
 8030cc2:	481c      	ldr	r0, [pc, #112]	@ (8030d34 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x374>)
 8030cc4:	4c1c      	ldr	r4, [pc, #112]	@ (8030d38 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x378>)
 8030cc6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8030cca:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8030cce:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8030cd2:	f9b0 0000 	ldrsh.w	r0, [r0]
 8030cd6:	f7df ffe7 	bl	8010ca8 <nema_set_clip>
 8030cda:	6820      	ldr	r0, [r4, #0]
 8030cdc:	2101      	movs	r1, #1
 8030cde:	f7eb ff47 	bl	801cb70 <nema_vg_paint_set_type>
 8030ce2:	eef4 9a4a 	vcmp.f32	s19, s20
 8030ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030cea:	d009      	beq.n	8030d00 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030cec:	eef4 8a48 	vcmp.f32	s17, s16
 8030cf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030cf4:	d004      	beq.n	8030d00 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030cf6:	eeb4 9a6a 	vcmp.f32	s18, s21
 8030cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030cfe:	d11f      	bne.n	8030d40 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x380>
 8030d00:	eef0 1a48 	vmov.f32	s3, s16
 8030d04:	eeb0 1a6a 	vmov.f32	s2, s21
 8030d08:	eef0 0a68 	vmov.f32	s1, s17
 8030d0c:	eeb0 0a49 	vmov.f32	s0, s18
 8030d10:	6829      	ldr	r1, [r5, #0]
 8030d12:	6820      	ldr	r0, [r4, #0]
 8030d14:	2201      	movs	r2, #1
 8030d16:	f7ec fa11 	bl	801d13c <nema_vg_paint_set_grad_linear>
 8030d1a:	b044      	add	sp, #272	@ 0x110
 8030d1c:	ecbd 8b08 	vpop	{d8-d11}
 8030d20:	bd70      	pop	{r4, r5, r6, pc}
 8030d22:	9301      	str	r3, [sp, #4]
 8030d24:	f7eb ff42 	bl	801cbac <nema_vg_grad_create>
 8030d28:	9b01      	ldr	r3, [sp, #4]
 8030d2a:	6028      	str	r0, [r5, #0]
 8030d2c:	e662      	b.n	80309f4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x34>
 8030d2e:	bf00      	nop
 8030d30:	200833e8 	.word	0x200833e8
 8030d34:	200833f4 	.word	0x200833f4
 8030d38:	200833f0 	.word	0x200833f0
 8030d3c:	42c80000 	.word	0x42c80000
 8030d40:	ed1f ba02 	vldr	s22, [pc, #-8]	@ 8030d3c <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x37c>
 8030d44:	a813      	add	r0, sp, #76	@ 0x4c
 8030d46:	f7dd fcfe 	bl	800e746 <_ZN8touchgfx9Matrix3x3C1Ev>
 8030d4a:	a813      	add	r0, sp, #76	@ 0x4c
 8030d4c:	f7dd fcee 	bl	800e72c <_ZN8touchgfx9Matrix3x35resetEv>
 8030d50:	ee8b 0a29 	vdiv.f32	s0, s22, s19
 8030d54:	eecb 0a0a 	vdiv.f32	s1, s22, s20
 8030d58:	a813      	add	r0, sp, #76	@ 0x4c
 8030d5a:	f7dd fcf8 	bl	800e74e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030d5e:	a813      	add	r0, sp, #76	@ 0x4c
 8030d60:	a903      	add	r1, sp, #12
 8030d62:	edcd aa05 	vstr	s21, [sp, #20]
 8030d66:	ed8d 9a03 	vstr	s18, [sp, #12]
 8030d6a:	ed8d 8a06 	vstr	s16, [sp, #24]
 8030d6e:	edcd 8a04 	vstr	s17, [sp, #16]
 8030d72:	f7dd fd8a 	bl	800e88a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030d76:	a905      	add	r1, sp, #20
 8030d78:	a813      	add	r0, sp, #76	@ 0x4c
 8030d7a:	eef0 aa40 	vmov.f32	s21, s0
 8030d7e:	eeb0 9a60 	vmov.f32	s18, s1
 8030d82:	f7dd fd82 	bl	800e88a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030d86:	ee30 6ac9 	vsub.f32	s12, s1, s18
 8030d8a:	ee70 5a6a 	vsub.f32	s11, s0, s21
 8030d8e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8030d92:	ee86 5a25 	vdiv.f32	s10, s12, s11
 8030d96:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8030d9a:	ee87 7a85 	vdiv.f32	s14, s15, s10
 8030d9e:	eea6 9a26 	vfma.f32	s18, s12, s13
 8030da2:	ee77 0a20 	vadd.f32	s1, s14, s1
 8030da6:	ee70 7a27 	vadd.f32	s15, s0, s15
 8030daa:	eee5 aaa6 	vfma.f32	s21, s11, s13
 8030dae:	a813      	add	r0, sp, #76	@ 0x4c
 8030db0:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8030db4:	ed8d 9a0c 	vstr	s18, [sp, #48]	@ 0x30
 8030db8:	edcd 0a0e 	vstr	s1, [sp, #56]	@ 0x38
 8030dbc:	edcd aa0b 	vstr	s21, [sp, #44]	@ 0x2c
 8030dc0:	f7dd fcb4 	bl	800e72c <_ZN8touchgfx9Matrix3x35resetEv>
 8030dc4:	ee89 0a8b 	vdiv.f32	s0, s19, s22
 8030dc8:	eeca 0a0b 	vdiv.f32	s1, s20, s22
 8030dcc:	a813      	add	r0, sp, #76	@ 0x4c
 8030dce:	f7dd fcbe 	bl	800e74e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030dd2:	a813      	add	r0, sp, #76	@ 0x4c
 8030dd4:	a90d      	add	r1, sp, #52	@ 0x34
 8030dd6:	f7dd fd58 	bl	800e88a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030dda:	a813      	add	r0, sp, #76	@ 0x4c
 8030ddc:	a90b      	add	r1, sp, #44	@ 0x2c
 8030dde:	ed8d 0a0f 	vstr	s0, [sp, #60]	@ 0x3c
 8030de2:	edcd 0a10 	vstr	s1, [sp, #64]	@ 0x40
 8030de6:	f7dd fd50 	bl	800e88a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030dea:	eddd 7a04 	vldr	s15, [sp, #16]
 8030dee:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030df2:	ed9d 7a03 	vldr	s14, [sp, #12]
 8030df6:	ee76 7a67 	vsub.f32	s15, s12, s15
 8030dfa:	eddd 6a05 	vldr	s13, [sp, #20]
 8030dfe:	eef0 9a40 	vmov.f32	s19, s0
 8030e02:	ee27 0aa7 	vmul.f32	s0, s15, s15
 8030e06:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8030e0a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8030e0e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8030e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030e16:	eeb0 aa60 	vmov.f32	s20, s1
 8030e1a:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8030e1e:	d457      	bmi.n	8030ed0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x510>
 8030e20:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8030e24:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8030e28:	ee37 7a46 	vsub.f32	s14, s14, s12
 8030e2c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8030e30:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8030e34:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8030e38:	eec6 aa26 	vdiv.f32	s21, s12, s13
 8030e3c:	eeb0 0a6a 	vmov.f32	s0, s21
 8030e40:	f000 f9f4 	bl	803122c <atanf>
 8030e44:	eef0 ba40 	vmov.f32	s23, s0
 8030e48:	f000 fac4 	bl	80313d4 <cosf>
 8030e4c:	ee29 ba00 	vmul.f32	s22, s18, s0
 8030e50:	eeb0 0a6b 	vmov.f32	s0, s23
 8030e54:	f000 fb0a 	bl	803146c <sinf>
 8030e58:	eef5 aac0 	vcmpe.f32	s21, #0.0
 8030e5c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8030e60:	ee29 9a00 	vmul.f32	s18, s18, s0
 8030e64:	eef0 0a4a 	vmov.f32	s1, s20
 8030e68:	eeb0 0a69 	vmov.f32	s0, s19
 8030e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030e70:	eeab 0a27 	vfma.f32	s0, s22, s15
 8030e74:	eeeb 9a67 	vfms.f32	s19, s22, s15
 8030e78:	eee9 0a27 	vfma.f32	s1, s18, s15
 8030e7c:	eea9 aa67 	vfms.f32	s20, s18, s15
 8030e80:	dc0b      	bgt.n	8030e9a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x4da>
 8030e82:	eeb0 7a4a 	vmov.f32	s14, s20
 8030e86:	eef0 7a69 	vmov.f32	s15, s19
 8030e8a:	eeb0 aa60 	vmov.f32	s20, s1
 8030e8e:	eef0 9a40 	vmov.f32	s19, s0
 8030e92:	eef0 0a47 	vmov.f32	s1, s14
 8030e96:	eeb0 0a67 	vmov.f32	s0, s15
 8030e9a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8030e9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030ea2:	6820      	ldr	r0, [r4, #0]
 8030ea4:	6829      	ldr	r1, [r5, #0]
 8030ea6:	d50b      	bpl.n	8030ec0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x500>
 8030ea8:	eef0 1a60 	vmov.f32	s3, s1
 8030eac:	eeb0 1a40 	vmov.f32	s2, s0
 8030eb0:	eef0 0a4a 	vmov.f32	s1, s20
 8030eb4:	eeb0 0a69 	vmov.f32	s0, s19
 8030eb8:	2201      	movs	r2, #1
 8030eba:	f7ec f93f 	bl	801d13c <nema_vg_paint_set_grad_linear>
 8030ebe:	e72c      	b.n	8030d1a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030ec0:	eef0 1a4a 	vmov.f32	s3, s20
 8030ec4:	eeb0 1a69 	vmov.f32	s2, s19
 8030ec8:	2201      	movs	r2, #1
 8030eca:	f7ec f937 	bl	801d13c <nema_vg_paint_set_grad_linear>
 8030ece:	e724      	b.n	8030d1a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030ed0:	f000 f98e 	bl	80311f0 <sqrtf>
 8030ed4:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030ed8:	eddd 6a05 	vldr	s13, [sp, #20]
 8030edc:	e7a0      	b.n	8030e20 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x460>
 8030ede:	4b03      	ldr	r3, [pc, #12]	@ (8030eec <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x52c>)
 8030ee0:	4a03      	ldr	r2, [pc, #12]	@ (8030ef0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x530>)
 8030ee2:	2194      	movs	r1, #148	@ 0x94
 8030ee4:	4803      	ldr	r0, [pc, #12]	@ (8030ef4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x534>)
 8030ee6:	f001 fae7 	bl	80324b8 <__assert_func>
 8030eea:	bf00      	nop
 8030eec:	08037fb0 	.word	0x08037fb0
 8030ef0:	0803803c 	.word	0x0803803c
 8030ef4:	08037fc8 	.word	0x08037fc8

08030ef8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE>:
 8030ef8:	b530      	push	{r4, r5, lr}
 8030efa:	ed2d 8b04 	vpush	{d8-d9}
 8030efe:	2905      	cmp	r1, #5
 8030f00:	b099      	sub	sp, #100	@ 0x64
 8030f02:	f200 80db 	bhi.w	80310bc <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1c4>
 8030f06:	4d70      	ldr	r5, [pc, #448]	@ (80310c8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d0>)
 8030f08:	eeb0 8a40 	vmov.f32	s16, s0
 8030f0c:	6828      	ldr	r0, [r5, #0]
 8030f0e:	eef0 8a60 	vmov.f32	s17, s1
 8030f12:	eeb0 9a41 	vmov.f32	s18, s2
 8030f16:	2800      	cmp	r0, #0
 8030f18:	f000 80c6 	beq.w	80310a8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1b0>
 8030f1c:	2900      	cmp	r1, #0
 8030f1e:	f000 80ac 	beq.w	803107a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030f22:	681c      	ldr	r4, [r3, #0]
 8030f24:	2901      	cmp	r1, #1
 8030f26:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030f2a:	ee06 ca10 	vmov	s12, ip
 8030f2e:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f32:	ee06 ca90 	vmov	s13, ip
 8030f36:	fa5f fc84 	uxtb.w	ip, r4
 8030f3a:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f3e:	ee07 ca10 	vmov	s14, ip
 8030f42:	ee07 4a90 	vmov	s15, r4
 8030f46:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f4a:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f4e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f56:	ed8d 6a04 	vstr	s12, [sp, #16]
 8030f5a:	edcd 6a05 	vstr	s13, [sp, #20]
 8030f5e:	ed8d 7a06 	vstr	s14, [sp, #24]
 8030f62:	edcd 7a07 	vstr	s15, [sp, #28]
 8030f66:	f000 8088 	beq.w	803107a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030f6a:	685c      	ldr	r4, [r3, #4]
 8030f6c:	2902      	cmp	r1, #2
 8030f6e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030f72:	ee06 ca10 	vmov	s12, ip
 8030f76:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f7a:	ee06 ca90 	vmov	s13, ip
 8030f7e:	fa5f fc84 	uxtb.w	ip, r4
 8030f82:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f86:	ee07 ca10 	vmov	s14, ip
 8030f8a:	ee07 4a90 	vmov	s15, r4
 8030f8e:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f92:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f96:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f9e:	ed8d 6a08 	vstr	s12, [sp, #32]
 8030fa2:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8030fa6:	ed8d 7a0a 	vstr	s14, [sp, #40]	@ 0x28
 8030faa:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8030fae:	d064      	beq.n	803107a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030fb0:	689c      	ldr	r4, [r3, #8]
 8030fb2:	2903      	cmp	r1, #3
 8030fb4:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030fb8:	ee06 ca10 	vmov	s12, ip
 8030fbc:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030fc0:	ee06 ca90 	vmov	s13, ip
 8030fc4:	fa5f fc84 	uxtb.w	ip, r4
 8030fc8:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030fcc:	ee07 ca10 	vmov	s14, ip
 8030fd0:	ee07 4a90 	vmov	s15, r4
 8030fd4:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030fd8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030fdc:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030fe0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030fe4:	ed8d 6a0c 	vstr	s12, [sp, #48]	@ 0x30
 8030fe8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8030fec:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8030ff0:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8030ff4:	d041      	beq.n	803107a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030ff6:	68dc      	ldr	r4, [r3, #12]
 8030ff8:	2904      	cmp	r1, #4
 8030ffa:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030ffe:	ee06 ca10 	vmov	s12, ip
 8031002:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8031006:	ee06 ca90 	vmov	s13, ip
 803100a:	fa5f fc84 	uxtb.w	ip, r4
 803100e:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8031012:	ee07 ca10 	vmov	s14, ip
 8031016:	ee07 4a90 	vmov	s15, r4
 803101a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803101e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031022:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031026:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803102a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 803102e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8031032:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 8031036:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 803103a:	d01e      	beq.n	803107a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 803103c:	691b      	ldr	r3, [r3, #16]
 803103e:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8031042:	ee06 4a10 	vmov	s12, r4
 8031046:	f3c3 2407 	ubfx	r4, r3, #8, #8
 803104a:	ee06 4a90 	vmov	s13, r4
 803104e:	b2dc      	uxtb	r4, r3
 8031050:	0e1b      	lsrs	r3, r3, #24
 8031052:	ee07 4a10 	vmov	s14, r4
 8031056:	ee07 3a90 	vmov	s15, r3
 803105a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803105e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031062:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031066:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803106a:	ed8d 6a14 	vstr	s12, [sp, #80]	@ 0x50
 803106e:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8031072:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8031076:	edcd 7a17 	vstr	s15, [sp, #92]	@ 0x5c
 803107a:	4c14      	ldr	r4, [pc, #80]	@ (80310cc <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d4>)
 803107c:	ab04      	add	r3, sp, #16
 803107e:	f7eb fdb5 	bl	801cbec <nema_vg_grad_set>
 8031082:	6820      	ldr	r0, [r4, #0]
 8031084:	2103      	movs	r1, #3
 8031086:	f7eb fd73 	bl	801cb70 <nema_vg_paint_set_type>
 803108a:	6820      	ldr	r0, [r4, #0]
 803108c:	eeb0 1a49 	vmov.f32	s2, s18
 8031090:	eef0 0a68 	vmov.f32	s1, s17
 8031094:	eeb0 0a48 	vmov.f32	s0, s16
 8031098:	6829      	ldr	r1, [r5, #0]
 803109a:	2201      	movs	r2, #1
 803109c:	f7ec f8be 	bl	801d21c <nema_vg_paint_set_grad_radial>
 80310a0:	b019      	add	sp, #100	@ 0x64
 80310a2:	ecbd 8b04 	vpop	{d8-d9}
 80310a6:	bd30      	pop	{r4, r5, pc}
 80310a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80310ac:	9101      	str	r1, [sp, #4]
 80310ae:	f7eb fd7d 	bl	801cbac <nema_vg_grad_create>
 80310b2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80310b6:	6028      	str	r0, [r5, #0]
 80310b8:	9901      	ldr	r1, [sp, #4]
 80310ba:	e72f      	b.n	8030f1c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x24>
 80310bc:	4b04      	ldr	r3, [pc, #16]	@ (80310d0 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d8>)
 80310be:	4a05      	ldr	r2, [pc, #20]	@ (80310d4 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1dc>)
 80310c0:	21ed      	movs	r1, #237	@ 0xed
 80310c2:	4805      	ldr	r0, [pc, #20]	@ (80310d8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1e0>)
 80310c4:	f001 f9f8 	bl	80324b8 <__assert_func>
 80310c8:	200833e8 	.word	0x200833e8
 80310cc:	200833f0 	.word	0x200833f0
 80310d0:	08037fbc 	.word	0x08037fbc
 80310d4:	080380e4 	.word	0x080380e4
 80310d8:	08037fc8 	.word	0x08037fc8

080310dc <_ZN8touchgfx19GPU2DVectorRendererD0Ev>:
 80310dc:	b510      	push	{r4, lr}
 80310de:	4604      	mov	r4, r0
 80310e0:	2104      	movs	r1, #4
 80310e2:	f000 f810 	bl	8031106 <_ZdlPvj>
 80310e6:	4620      	mov	r0, r4
 80310e8:	bd10      	pop	{r4, pc}
 80310ea:	bf00      	nop

080310ec <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 80310ec:	2200      	movs	r2, #0
 80310ee:	4b02      	ldr	r3, [pc, #8]	@ (80310f8 <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xc>)
 80310f0:	e9c3 2200 	strd	r2, r2, [r3]
 80310f4:	4770      	bx	lr
 80310f6:	bf00      	nop
 80310f8:	200833f4 	.word	0x200833f4

080310fc <__aeabi_atexit>:
 80310fc:	460b      	mov	r3, r1
 80310fe:	4601      	mov	r1, r0
 8031100:	4618      	mov	r0, r3
 8031102:	f001 babb 	b.w	803267c <__cxa_atexit>

08031106 <_ZdlPvj>:
 8031106:	f000 b812 	b.w	803112e <_ZdlPv>

0803110a <__cxa_guard_acquire>:
 803110a:	6802      	ldr	r2, [r0, #0]
 803110c:	4603      	mov	r3, r0
 803110e:	07d2      	lsls	r2, r2, #31
 8031110:	d405      	bmi.n	803111e <__cxa_guard_acquire+0x14>
 8031112:	7842      	ldrb	r2, [r0, #1]
 8031114:	b102      	cbz	r2, 8031118 <__cxa_guard_acquire+0xe>
 8031116:	deff      	udf	#255	@ 0xff
 8031118:	2001      	movs	r0, #1
 803111a:	7058      	strb	r0, [r3, #1]
 803111c:	4770      	bx	lr
 803111e:	2000      	movs	r0, #0
 8031120:	4770      	bx	lr

08031122 <__cxa_guard_release>:
 8031122:	2301      	movs	r3, #1
 8031124:	6003      	str	r3, [r0, #0]
 8031126:	4770      	bx	lr

08031128 <__cxa_pure_virtual>:
 8031128:	b508      	push	{r3, lr}
 803112a:	f000 f80d 	bl	8031148 <_ZSt9terminatev>

0803112e <_ZdlPv>:
 803112e:	f001 b9ef 	b.w	8032510 <free>

08031132 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8031132:	b508      	push	{r3, lr}
 8031134:	4780      	blx	r0
 8031136:	f001 f9b8 	bl	80324aa <abort>
	...

0803113c <_ZSt13get_terminatev>:
 803113c:	4b01      	ldr	r3, [pc, #4]	@ (8031144 <_ZSt13get_terminatev+0x8>)
 803113e:	e8d3 0faf 	lda	r0, [r3]
 8031142:	4770      	bx	lr
 8031144:	20000244 	.word	0x20000244

08031148 <_ZSt9terminatev>:
 8031148:	b508      	push	{r3, lr}
 803114a:	f7ff fff7 	bl	803113c <_ZSt13get_terminatev>
 803114e:	f7ff fff0 	bl	8031132 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08031154 <acosf>:
 8031154:	b508      	push	{r3, lr}
 8031156:	ed2d 8b02 	vpush	{d8}
 803115a:	eeb0 8a40 	vmov.f32	s16, s0
 803115e:	f000 fb81 	bl	8031864 <__ieee754_acosf>
 8031162:	eef0 8a40 	vmov.f32	s17, s0
 8031166:	eeb4 8a48 	vcmp.f32	s16, s16
 803116a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803116e:	d615      	bvs.n	803119c <acosf+0x48>
 8031170:	eeb0 0a48 	vmov.f32	s0, s16
 8031174:	f000 f972 	bl	803145c <fabsf>
 8031178:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 803117c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8031180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031184:	dd0a      	ble.n	803119c <acosf+0x48>
 8031186:	f001 fc53 	bl	8032a30 <__errno>
 803118a:	2321      	movs	r3, #33	@ 0x21
 803118c:	ecbd 8b02 	vpop	{d8}
 8031190:	6003      	str	r3, [r0, #0]
 8031192:	4805      	ldr	r0, [pc, #20]	@ (80311a8 <acosf+0x54>)
 8031194:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8031198:	f000 b9da 	b.w	8031550 <nanf>
 803119c:	eeb0 0a68 	vmov.f32	s0, s17
 80311a0:	ecbd 8b02 	vpop	{d8}
 80311a4:	bd08      	pop	{r3, pc}
 80311a6:	bf00      	nop
 80311a8:	08038657 	.word	0x08038657

080311ac <atan2f>:
 80311ac:	f000 bc52 	b.w	8031a54 <__ieee754_atan2f>

080311b0 <fmodf>:
 80311b0:	b508      	push	{r3, lr}
 80311b2:	ed2d 8b02 	vpush	{d8}
 80311b6:	eef0 8a40 	vmov.f32	s17, s0
 80311ba:	eeb0 8a60 	vmov.f32	s16, s1
 80311be:	f000 fce7 	bl	8031b90 <__ieee754_fmodf>
 80311c2:	eef4 8a48 	vcmp.f32	s17, s16
 80311c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311ca:	d60c      	bvs.n	80311e6 <fmodf+0x36>
 80311cc:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80311ec <fmodf+0x3c>
 80311d0:	eeb4 8a68 	vcmp.f32	s16, s17
 80311d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311d8:	d105      	bne.n	80311e6 <fmodf+0x36>
 80311da:	f001 fc29 	bl	8032a30 <__errno>
 80311de:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80311e2:	2321      	movs	r3, #33	@ 0x21
 80311e4:	6003      	str	r3, [r0, #0]
 80311e6:	ecbd 8b02 	vpop	{d8}
 80311ea:	bd08      	pop	{r3, pc}
 80311ec:	00000000 	.word	0x00000000

080311f0 <sqrtf>:
 80311f0:	b508      	push	{r3, lr}
 80311f2:	ed2d 8b02 	vpush	{d8}
 80311f6:	eeb0 8a40 	vmov.f32	s16, s0
 80311fa:	f000 f9af 	bl	803155c <__ieee754_sqrtf>
 80311fe:	eeb4 8a48 	vcmp.f32	s16, s16
 8031202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031206:	d60c      	bvs.n	8031222 <sqrtf+0x32>
 8031208:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8031228 <sqrtf+0x38>
 803120c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8031210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031214:	d505      	bpl.n	8031222 <sqrtf+0x32>
 8031216:	f001 fc0b 	bl	8032a30 <__errno>
 803121a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 803121e:	2321      	movs	r3, #33	@ 0x21
 8031220:	6003      	str	r3, [r0, #0]
 8031222:	ecbd 8b02 	vpop	{d8}
 8031226:	bd08      	pop	{r3, pc}
 8031228:	00000000 	.word	0x00000000

0803122c <atanf>:
 803122c:	b538      	push	{r3, r4, r5, lr}
 803122e:	ee10 5a10 	vmov	r5, s0
 8031232:	eef0 7a40 	vmov.f32	s15, s0
 8031236:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 803123a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 803123e:	d30f      	bcc.n	8031260 <atanf+0x34>
 8031240:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8031244:	d904      	bls.n	8031250 <atanf+0x24>
 8031246:	ee70 7a00 	vadd.f32	s15, s0, s0
 803124a:	eeb0 0a67 	vmov.f32	s0, s15
 803124e:	bd38      	pop	{r3, r4, r5, pc}
 8031250:	2d00      	cmp	r5, #0
 8031252:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8031388 <atanf+0x15c>
 8031256:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 803138c <atanf+0x160>
 803125a:	fe77 7a27 	vselgt.f32	s15, s14, s15
 803125e:	e7f4      	b.n	803124a <atanf+0x1e>
 8031260:	4b4b      	ldr	r3, [pc, #300]	@ (8031390 <atanf+0x164>)
 8031262:	429c      	cmp	r4, r3
 8031264:	d810      	bhi.n	8031288 <atanf+0x5c>
 8031266:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 803126a:	d20a      	bcs.n	8031282 <atanf+0x56>
 803126c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8031394 <atanf+0x168>
 8031270:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8031274:	ee30 7a07 	vadd.f32	s14, s0, s14
 8031278:	eeb4 7ae6 	vcmpe.f32	s14, s13
 803127c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031280:	dce3      	bgt.n	803124a <atanf+0x1e>
 8031282:	f04f 33ff 	mov.w	r3, #4294967295
 8031286:	e013      	b.n	80312b0 <atanf+0x84>
 8031288:	f000 f8e8 	bl	803145c <fabsf>
 803128c:	4b42      	ldr	r3, [pc, #264]	@ (8031398 <atanf+0x16c>)
 803128e:	429c      	cmp	r4, r3
 8031290:	d84f      	bhi.n	8031332 <atanf+0x106>
 8031292:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8031296:	429c      	cmp	r4, r3
 8031298:	d841      	bhi.n	803131e <atanf+0xf2>
 803129a:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 803129e:	2300      	movs	r3, #0
 80312a0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80312a4:	eea0 7a27 	vfma.f32	s14, s0, s15
 80312a8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80312ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80312b0:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 803139c <atanf+0x170>
 80312b4:	1c5a      	adds	r2, r3, #1
 80312b6:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80313a0 <atanf+0x174>
 80312ba:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 80313a4 <atanf+0x178>
 80312be:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80312c2:	ee66 6a06 	vmul.f32	s13, s12, s12
 80312c6:	eee6 5a87 	vfma.f32	s11, s13, s14
 80312ca:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 80313a8 <atanf+0x17c>
 80312ce:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80312d2:	eddf 5a36 	vldr	s11, [pc, #216]	@ 80313ac <atanf+0x180>
 80312d6:	eee7 5a26 	vfma.f32	s11, s14, s13
 80312da:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 80313b0 <atanf+0x184>
 80312de:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80312e2:	eddf 5a34 	vldr	s11, [pc, #208]	@ 80313b4 <atanf+0x188>
 80312e6:	eee7 5a26 	vfma.f32	s11, s14, s13
 80312ea:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 80313b8 <atanf+0x18c>
 80312ee:	eea6 5a87 	vfma.f32	s10, s13, s14
 80312f2:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 80313bc <atanf+0x190>
 80312f6:	eea5 7a26 	vfma.f32	s14, s10, s13
 80312fa:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 80313c0 <atanf+0x194>
 80312fe:	eea7 5a26 	vfma.f32	s10, s14, s13
 8031302:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 80313c4 <atanf+0x198>
 8031306:	eea5 7a26 	vfma.f32	s14, s10, s13
 803130a:	ee27 7a26 	vmul.f32	s14, s14, s13
 803130e:	eea5 7a86 	vfma.f32	s14, s11, s12
 8031312:	ee27 7a87 	vmul.f32	s14, s15, s14
 8031316:	d121      	bne.n	803135c <atanf+0x130>
 8031318:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803131c:	e795      	b.n	803124a <atanf+0x1e>
 803131e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8031322:	2301      	movs	r3, #1
 8031324:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031328:	ee30 0a27 	vadd.f32	s0, s0, s15
 803132c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031330:	e7be      	b.n	80312b0 <atanf+0x84>
 8031332:	4b25      	ldr	r3, [pc, #148]	@ (80313c8 <atanf+0x19c>)
 8031334:	429c      	cmp	r4, r3
 8031336:	d80b      	bhi.n	8031350 <atanf+0x124>
 8031338:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 803133c:	2302      	movs	r3, #2
 803133e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031342:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031346:	eea0 7a27 	vfma.f32	s14, s0, s15
 803134a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 803134e:	e7af      	b.n	80312b0 <atanf+0x84>
 8031350:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031354:	2303      	movs	r3, #3
 8031356:	eec7 7a00 	vdiv.f32	s15, s14, s0
 803135a:	e7a9      	b.n	80312b0 <atanf+0x84>
 803135c:	4a1b      	ldr	r2, [pc, #108]	@ (80313cc <atanf+0x1a0>)
 803135e:	2d00      	cmp	r5, #0
 8031360:	491b      	ldr	r1, [pc, #108]	@ (80313d0 <atanf+0x1a4>)
 8031362:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8031366:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 803136a:	edd3 6a00 	vldr	s13, [r3]
 803136e:	ee37 7a66 	vsub.f32	s14, s14, s13
 8031372:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031376:	edd2 7a00 	vldr	s15, [r2]
 803137a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803137e:	bfb8      	it	lt
 8031380:	eef1 7a67 	vneglt.f32	s15, s15
 8031384:	e761      	b.n	803124a <atanf+0x1e>
 8031386:	bf00      	nop
 8031388:	bfc90fdb 	.word	0xbfc90fdb
 803138c:	3fc90fdb 	.word	0x3fc90fdb
 8031390:	3edfffff 	.word	0x3edfffff
 8031394:	7149f2ca 	.word	0x7149f2ca
 8031398:	3f97ffff 	.word	0x3f97ffff
 803139c:	3c8569d7 	.word	0x3c8569d7
 80313a0:	3d4bda59 	.word	0x3d4bda59
 80313a4:	bd6ef16b 	.word	0xbd6ef16b
 80313a8:	3d886b35 	.word	0x3d886b35
 80313ac:	3dba2e6e 	.word	0x3dba2e6e
 80313b0:	3e124925 	.word	0x3e124925
 80313b4:	3eaaaaab 	.word	0x3eaaaaab
 80313b8:	bd15a221 	.word	0xbd15a221
 80313bc:	bd9d8795 	.word	0xbd9d8795
 80313c0:	bde38e38 	.word	0xbde38e38
 80313c4:	be4ccccd 	.word	0xbe4ccccd
 80313c8:	401bffff 	.word	0x401bffff
 80313cc:	0803821c 	.word	0x0803821c
 80313d0:	0803820c 	.word	0x0803820c

080313d4 <cosf>:
 80313d4:	ee10 3a10 	vmov	r3, s0
 80313d8:	b507      	push	{r0, r1, r2, lr}
 80313da:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80313de:	4a1d      	ldr	r2, [pc, #116]	@ (8031454 <cosf+0x80>)
 80313e0:	4293      	cmp	r3, r2
 80313e2:	d806      	bhi.n	80313f2 <cosf+0x1e>
 80313e4:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8031458 <cosf+0x84>
 80313e8:	b003      	add	sp, #12
 80313ea:	f85d eb04 	ldr.w	lr, [sp], #4
 80313ee:	f000 b8b9 	b.w	8031564 <__kernel_cosf>
 80313f2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80313f6:	d304      	bcc.n	8031402 <cosf+0x2e>
 80313f8:	ee30 0a40 	vsub.f32	s0, s0, s0
 80313fc:	b003      	add	sp, #12
 80313fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8031402:	4668      	mov	r0, sp
 8031404:	f000 fc48 	bl	8031c98 <__ieee754_rem_pio2f>
 8031408:	f000 0003 	and.w	r0, r0, #3
 803140c:	2801      	cmp	r0, #1
 803140e:	d009      	beq.n	8031424 <cosf+0x50>
 8031410:	2802      	cmp	r0, #2
 8031412:	d010      	beq.n	8031436 <cosf+0x62>
 8031414:	b9b0      	cbnz	r0, 8031444 <cosf+0x70>
 8031416:	eddd 0a01 	vldr	s1, [sp, #4]
 803141a:	ed9d 0a00 	vldr	s0, [sp]
 803141e:	f000 f8a1 	bl	8031564 <__kernel_cosf>
 8031422:	e7eb      	b.n	80313fc <cosf+0x28>
 8031424:	eddd 0a01 	vldr	s1, [sp, #4]
 8031428:	ed9d 0a00 	vldr	s0, [sp]
 803142c:	f000 f8f2 	bl	8031614 <__kernel_sinf>
 8031430:	eeb1 0a40 	vneg.f32	s0, s0
 8031434:	e7e2      	b.n	80313fc <cosf+0x28>
 8031436:	eddd 0a01 	vldr	s1, [sp, #4]
 803143a:	ed9d 0a00 	vldr	s0, [sp]
 803143e:	f000 f891 	bl	8031564 <__kernel_cosf>
 8031442:	e7f5      	b.n	8031430 <cosf+0x5c>
 8031444:	2001      	movs	r0, #1
 8031446:	eddd 0a01 	vldr	s1, [sp, #4]
 803144a:	ed9d 0a00 	vldr	s0, [sp]
 803144e:	f000 f8e1 	bl	8031614 <__kernel_sinf>
 8031452:	e7d3      	b.n	80313fc <cosf+0x28>
 8031454:	3f490fd8 	.word	0x3f490fd8
 8031458:	00000000 	.word	0x00000000

0803145c <fabsf>:
 803145c:	ee10 3a10 	vmov	r3, s0
 8031460:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031464:	ee00 3a10 	vmov	s0, r3
 8031468:	4770      	bx	lr
	...

0803146c <sinf>:
 803146c:	ee10 3a10 	vmov	r3, s0
 8031470:	b507      	push	{r0, r1, r2, lr}
 8031472:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031476:	4a1e      	ldr	r2, [pc, #120]	@ (80314f0 <sinf+0x84>)
 8031478:	4293      	cmp	r3, r2
 803147a:	d807      	bhi.n	803148c <sinf+0x20>
 803147c:	2000      	movs	r0, #0
 803147e:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80314f4 <sinf+0x88>
 8031482:	b003      	add	sp, #12
 8031484:	f85d eb04 	ldr.w	lr, [sp], #4
 8031488:	f000 b8c4 	b.w	8031614 <__kernel_sinf>
 803148c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031490:	d304      	bcc.n	803149c <sinf+0x30>
 8031492:	ee30 0a40 	vsub.f32	s0, s0, s0
 8031496:	b003      	add	sp, #12
 8031498:	f85d fb04 	ldr.w	pc, [sp], #4
 803149c:	4668      	mov	r0, sp
 803149e:	f000 fbfb 	bl	8031c98 <__ieee754_rem_pio2f>
 80314a2:	f000 0003 	and.w	r0, r0, #3
 80314a6:	2801      	cmp	r0, #1
 80314a8:	d00a      	beq.n	80314c0 <sinf+0x54>
 80314aa:	2802      	cmp	r0, #2
 80314ac:	d00f      	beq.n	80314ce <sinf+0x62>
 80314ae:	b9c0      	cbnz	r0, 80314e2 <sinf+0x76>
 80314b0:	2001      	movs	r0, #1
 80314b2:	eddd 0a01 	vldr	s1, [sp, #4]
 80314b6:	ed9d 0a00 	vldr	s0, [sp]
 80314ba:	f000 f8ab 	bl	8031614 <__kernel_sinf>
 80314be:	e7ea      	b.n	8031496 <sinf+0x2a>
 80314c0:	eddd 0a01 	vldr	s1, [sp, #4]
 80314c4:	ed9d 0a00 	vldr	s0, [sp]
 80314c8:	f000 f84c 	bl	8031564 <__kernel_cosf>
 80314cc:	e7e3      	b.n	8031496 <sinf+0x2a>
 80314ce:	2001      	movs	r0, #1
 80314d0:	eddd 0a01 	vldr	s1, [sp, #4]
 80314d4:	ed9d 0a00 	vldr	s0, [sp]
 80314d8:	f000 f89c 	bl	8031614 <__kernel_sinf>
 80314dc:	eeb1 0a40 	vneg.f32	s0, s0
 80314e0:	e7d9      	b.n	8031496 <sinf+0x2a>
 80314e2:	eddd 0a01 	vldr	s1, [sp, #4]
 80314e6:	ed9d 0a00 	vldr	s0, [sp]
 80314ea:	f000 f83b 	bl	8031564 <__kernel_cosf>
 80314ee:	e7f5      	b.n	80314dc <sinf+0x70>
 80314f0:	3f490fd8 	.word	0x3f490fd8
 80314f4:	00000000 	.word	0x00000000

080314f8 <tanf>:
 80314f8:	ee10 3a10 	vmov	r3, s0
 80314fc:	b507      	push	{r0, r1, r2, lr}
 80314fe:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031502:	4a11      	ldr	r2, [pc, #68]	@ (8031548 <tanf+0x50>)
 8031504:	4293      	cmp	r3, r2
 8031506:	d807      	bhi.n	8031518 <tanf+0x20>
 8031508:	2001      	movs	r0, #1
 803150a:	eddf 0a10 	vldr	s1, [pc, #64]	@ 803154c <tanf+0x54>
 803150e:	b003      	add	sp, #12
 8031510:	f85d eb04 	ldr.w	lr, [sp], #4
 8031514:	f000 b8c6 	b.w	80316a4 <__kernel_tanf>
 8031518:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 803151c:	d304      	bcc.n	8031528 <tanf+0x30>
 803151e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8031522:	b003      	add	sp, #12
 8031524:	f85d fb04 	ldr.w	pc, [sp], #4
 8031528:	4668      	mov	r0, sp
 803152a:	f000 fbb5 	bl	8031c98 <__ieee754_rem_pio2f>
 803152e:	eddd 0a01 	vldr	s1, [sp, #4]
 8031532:	0040      	lsls	r0, r0, #1
 8031534:	ed9d 0a00 	vldr	s0, [sp]
 8031538:	f000 0002 	and.w	r0, r0, #2
 803153c:	f1c0 0001 	rsb	r0, r0, #1
 8031540:	f000 f8b0 	bl	80316a4 <__kernel_tanf>
 8031544:	e7ed      	b.n	8031522 <tanf+0x2a>
 8031546:	bf00      	nop
 8031548:	3f490fda 	.word	0x3f490fda
 803154c:	00000000 	.word	0x00000000

08031550 <nanf>:
 8031550:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8031558 <nanf+0x8>
 8031554:	4770      	bx	lr
 8031556:	bf00      	nop
 8031558:	7fc00000 	.word	0x7fc00000

0803155c <__ieee754_sqrtf>:
 803155c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8031560:	4770      	bx	lr
	...

08031564 <__kernel_cosf>:
 8031564:	ee10 3a10 	vmov	r3, s0
 8031568:	eef0 6a40 	vmov.f32	s13, s0
 803156c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8031570:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031574:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031578:	d204      	bcs.n	8031584 <__kernel_cosf+0x20>
 803157a:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 803157e:	ee17 2a90 	vmov	r2, s15
 8031582:	b342      	cbz	r2, 80315d6 <__kernel_cosf+0x72>
 8031584:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8031588:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80315f4 <__kernel_cosf+0x90>
 803158c:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 80315f8 <__kernel_cosf+0x94>
 8031590:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8031594:	4a19      	ldr	r2, [pc, #100]	@ (80315fc <__kernel_cosf+0x98>)
 8031596:	eea7 6a27 	vfma.f32	s12, s14, s15
 803159a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8031600 <__kernel_cosf+0x9c>
 803159e:	4293      	cmp	r3, r2
 80315a0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80315a4:	ed9f 6a17 	vldr	s12, [pc, #92]	@ 8031604 <__kernel_cosf+0xa0>
 80315a8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80315ac:	eddf 7a16 	vldr	s15, [pc, #88]	@ 8031608 <__kernel_cosf+0xa4>
 80315b0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80315b4:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 803160c <__kernel_cosf+0xa8>
 80315b8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80315bc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80315c0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80315c4:	ee26 6a07 	vmul.f32	s12, s12, s14
 80315c8:	eee7 0a06 	vfma.f32	s1, s14, s12
 80315cc:	d804      	bhi.n	80315d8 <__kernel_cosf+0x74>
 80315ce:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80315d2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80315d6:	4770      	bx	lr
 80315d8:	4a0d      	ldr	r2, [pc, #52]	@ (8031610 <__kernel_cosf+0xac>)
 80315da:	4293      	cmp	r3, r2
 80315dc:	bf96      	itet	ls
 80315de:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 80315e2:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 80315e6:	ee07 3a10 	vmovls	s14, r3
 80315ea:	ee30 0a47 	vsub.f32	s0, s0, s14
 80315ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80315f2:	e7ec      	b.n	80315ce <__kernel_cosf+0x6a>
 80315f4:	ad47d74e 	.word	0xad47d74e
 80315f8:	310f74f6 	.word	0x310f74f6
 80315fc:	3e999999 	.word	0x3e999999
 8031600:	b493f27c 	.word	0xb493f27c
 8031604:	37d00d01 	.word	0x37d00d01
 8031608:	bab60b61 	.word	0xbab60b61
 803160c:	3d2aaaab 	.word	0x3d2aaaab
 8031610:	3f480000 	.word	0x3f480000

08031614 <__kernel_sinf>:
 8031614:	ee10 3a10 	vmov	r3, s0
 8031618:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 803161c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031620:	d204      	bcs.n	803162c <__kernel_sinf+0x18>
 8031622:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8031626:	ee17 3a90 	vmov	r3, s15
 803162a:	b35b      	cbz	r3, 8031684 <__kernel_sinf+0x70>
 803162c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8031630:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031688 <__kernel_sinf+0x74>
 8031634:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 803168c <__kernel_sinf+0x78>
 8031638:	eea7 6a27 	vfma.f32	s12, s14, s15
 803163c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8031690 <__kernel_sinf+0x7c>
 8031640:	ee60 6a07 	vmul.f32	s13, s0, s14
 8031644:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031648:	ed9f 6a12 	vldr	s12, [pc, #72]	@ 8031694 <__kernel_sinf+0x80>
 803164c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8031650:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8031698 <__kernel_sinf+0x84>
 8031654:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031658:	b930      	cbnz	r0, 8031668 <__kernel_sinf+0x54>
 803165a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 803169c <__kernel_sinf+0x88>
 803165e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8031662:	eea6 0a26 	vfma.f32	s0, s12, s13
 8031666:	4770      	bx	lr
 8031668:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 803166c:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8031670:	eee0 7a86 	vfma.f32	s15, s1, s12
 8031674:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8031678:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80316a0 <__kernel_sinf+0x8c>
 803167c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8031680:	ee30 0a60 	vsub.f32	s0, s0, s1
 8031684:	4770      	bx	lr
 8031686:	bf00      	nop
 8031688:	2f2ec9d3 	.word	0x2f2ec9d3
 803168c:	b2d72f34 	.word	0xb2d72f34
 8031690:	3638ef1b 	.word	0x3638ef1b
 8031694:	b9500d01 	.word	0xb9500d01
 8031698:	3c088889 	.word	0x3c088889
 803169c:	be2aaaab 	.word	0xbe2aaaab
 80316a0:	3e2aaaab 	.word	0x3e2aaaab

080316a4 <__kernel_tanf>:
 80316a4:	b508      	push	{r3, lr}
 80316a6:	ee10 3a10 	vmov	r3, s0
 80316aa:	eef0 7a40 	vmov.f32	s15, s0
 80316ae:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80316b2:	f1b2 5f46 	cmp.w	r2, #830472192	@ 0x31800000
 80316b6:	d217      	bcs.n	80316e8 <__kernel_tanf+0x44>
 80316b8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80316bc:	ee17 1a10 	vmov	r1, s14
 80316c0:	bb39      	cbnz	r1, 8031712 <__kernel_tanf+0x6e>
 80316c2:	1c43      	adds	r3, r0, #1
 80316c4:	4313      	orrs	r3, r2
 80316c6:	d108      	bne.n	80316da <__kernel_tanf+0x36>
 80316c8:	f7ff fec8 	bl	803145c <fabsf>
 80316cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80316d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80316d4:	eeb0 0a67 	vmov.f32	s0, s15
 80316d8:	bd08      	pop	{r3, pc}
 80316da:	2801      	cmp	r0, #1
 80316dc:	d0fa      	beq.n	80316d4 <__kernel_tanf+0x30>
 80316de:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80316e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80316e6:	e7f5      	b.n	80316d4 <__kernel_tanf+0x30>
 80316e8:	494c      	ldr	r1, [pc, #304]	@ (803181c <__kernel_tanf+0x178>)
 80316ea:	428a      	cmp	r2, r1
 80316ec:	d311      	bcc.n	8031712 <__kernel_tanf+0x6e>
 80316ee:	2b00      	cmp	r3, #0
 80316f0:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8031820 <__kernel_tanf+0x17c>
 80316f4:	bfbc      	itt	lt
 80316f6:	eef1 7a40 	vneglt.f32	s15, s0
 80316fa:	eef1 0a60 	vneglt.f32	s1, s1
 80316fe:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031702:	eddf 7a48 	vldr	s15, [pc, #288]	@ 8031824 <__kernel_tanf+0x180>
 8031706:	ee77 7ae0 	vsub.f32	s15, s15, s1
 803170a:	eddf 0a47 	vldr	s1, [pc, #284]	@ 8031828 <__kernel_tanf+0x184>
 803170e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031712:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8031716:	eddf 5a45 	vldr	s11, [pc, #276]	@ 803182c <__kernel_tanf+0x188>
 803171a:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8031830 <__kernel_tanf+0x18c>
 803171e:	ed9f 5a45 	vldr	s10, [pc, #276]	@ 8031834 <__kernel_tanf+0x190>
 8031722:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8031726:	493d      	ldr	r1, [pc, #244]	@ (803181c <__kernel_tanf+0x178>)
 8031728:	428a      	cmp	r2, r1
 803172a:	eea7 6a25 	vfma.f32	s12, s14, s11
 803172e:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8031838 <__kernel_tanf+0x194>
 8031732:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031736:	ed9f 6a41 	vldr	s12, [pc, #260]	@ 803183c <__kernel_tanf+0x198>
 803173a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803173e:	eddf 5a40 	vldr	s11, [pc, #256]	@ 8031840 <__kernel_tanf+0x19c>
 8031742:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031746:	ed9f 6a3f 	vldr	s12, [pc, #252]	@ 8031844 <__kernel_tanf+0x1a0>
 803174a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803174e:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8031848 <__kernel_tanf+0x1a4>
 8031752:	eee7 5a05 	vfma.f32	s11, s14, s10
 8031756:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 803184c <__kernel_tanf+0x1a8>
 803175a:	eea5 5a87 	vfma.f32	s10, s11, s14
 803175e:	eddf 5a3c 	vldr	s11, [pc, #240]	@ 8031850 <__kernel_tanf+0x1ac>
 8031762:	eee5 5a07 	vfma.f32	s11, s10, s14
 8031766:	ed9f 5a3b 	vldr	s10, [pc, #236]	@ 8031854 <__kernel_tanf+0x1b0>
 803176a:	eea5 5a87 	vfma.f32	s10, s11, s14
 803176e:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8031858 <__kernel_tanf+0x1b4>
 8031772:	eee5 5a07 	vfma.f32	s11, s10, s14
 8031776:	eeb0 7a46 	vmov.f32	s14, s12
 803177a:	ee27 5aa6 	vmul.f32	s10, s15, s13
 803177e:	eeb0 6a60 	vmov.f32	s12, s1
 8031782:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031786:	eea7 6a05 	vfma.f32	s12, s14, s10
 803178a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 803185c <__kernel_tanf+0x1b8>
 803178e:	eee6 0a26 	vfma.f32	s1, s12, s13
 8031792:	eee5 0a07 	vfma.f32	s1, s10, s14
 8031796:	ee37 6aa0 	vadd.f32	s12, s15, s1
 803179a:	d31d      	bcc.n	80317d8 <__kernel_tanf+0x134>
 803179c:	ee07 0a10 	vmov	s14, r0
 80317a0:	ee26 5a06 	vmul.f32	s10, s12, s12
 80317a4:	179b      	asrs	r3, r3, #30
 80317a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80317aa:	f003 0302 	and.w	r3, r3, #2
 80317ae:	ee36 6a07 	vadd.f32	s12, s12, s14
 80317b2:	f1c3 0301 	rsb	r3, r3, #1
 80317b6:	ee06 3a90 	vmov	s13, r3
 80317ba:	eec5 5a06 	vdiv.f32	s11, s10, s12
 80317be:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80317c2:	ee35 6ae0 	vsub.f32	s12, s11, s1
 80317c6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80317ca:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 80317ce:	eea7 7ac6 	vfms.f32	s14, s15, s12
 80317d2:	ee66 7a87 	vmul.f32	s15, s13, s14
 80317d6:	e77d      	b.n	80316d4 <__kernel_tanf+0x30>
 80317d8:	2801      	cmp	r0, #1
 80317da:	d01b      	beq.n	8031814 <__kernel_tanf+0x170>
 80317dc:	4b20      	ldr	r3, [pc, #128]	@ (8031860 <__kernel_tanf+0x1bc>)
 80317de:	ee16 2a10 	vmov	r2, s12
 80317e2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80317e6:	401a      	ands	r2, r3
 80317e8:	ee05 2a90 	vmov	s11, r2
 80317ec:	ee75 7ae7 	vsub.f32	s15, s11, s15
 80317f0:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80317f4:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 80317f8:	eec7 6a86 	vdiv.f32	s13, s15, s12
 80317fc:	ee16 2a90 	vmov	r2, s13
 8031800:	4013      	ands	r3, r2
 8031802:	ee07 3a90 	vmov	s15, r3
 8031806:	eea5 7aa7 	vfma.f32	s14, s11, s15
 803180a:	eea0 7aa7 	vfma.f32	s14, s1, s15
 803180e:	eee7 7a26 	vfma.f32	s15, s14, s13
 8031812:	e75f      	b.n	80316d4 <__kernel_tanf+0x30>
 8031814:	eef0 7a46 	vmov.f32	s15, s12
 8031818:	e75c      	b.n	80316d4 <__kernel_tanf+0x30>
 803181a:	bf00      	nop
 803181c:	3f2ca140 	.word	0x3f2ca140
 8031820:	3f490fda 	.word	0x3f490fda
 8031824:	33222168 	.word	0x33222168
 8031828:	00000000 	.word	0x00000000
 803182c:	b79bae5f 	.word	0xb79bae5f
 8031830:	38a3f445 	.word	0x38a3f445
 8031834:	37d95384 	.word	0x37d95384
 8031838:	3a1a26c8 	.word	0x3a1a26c8
 803183c:	3b6b6916 	.word	0x3b6b6916
 8031840:	3cb327a4 	.word	0x3cb327a4
 8031844:	3e088889 	.word	0x3e088889
 8031848:	3895c07a 	.word	0x3895c07a
 803184c:	398137b9 	.word	0x398137b9
 8031850:	3abede48 	.word	0x3abede48
 8031854:	3c11371f 	.word	0x3c11371f
 8031858:	3d5d0dd1 	.word	0x3d5d0dd1
 803185c:	3eaaaaab 	.word	0x3eaaaaab
 8031860:	fffff000 	.word	0xfffff000

08031864 <__ieee754_acosf>:
 8031864:	b508      	push	{r3, lr}
 8031866:	ee10 3a10 	vmov	r3, s0
 803186a:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 803186e:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031872:	ed2d 8b0c 	vpush	{d8-d13}
 8031876:	d109      	bne.n	803188c <__ieee754_acosf+0x28>
 8031878:	2b00      	cmp	r3, #0
 803187a:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8031a10 <__ieee754_acosf+0x1ac>
 803187e:	eddf 7a65 	vldr	s15, [pc, #404]	@ 8031a14 <__ieee754_acosf+0x1b0>
 8031882:	fe37 0a80 	vselgt.f32	s0, s15, s0
 8031886:	ecbd 8b0c 	vpop	{d8-d13}
 803188a:	bd08      	pop	{r3, pc}
 803188c:	d904      	bls.n	8031898 <__ieee754_acosf+0x34>
 803188e:	ee30 8a40 	vsub.f32	s16, s0, s0
 8031892:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8031896:	e7f6      	b.n	8031886 <__ieee754_acosf+0x22>
 8031898:	f1b2 5f7c 	cmp.w	r2, #1056964608	@ 0x3f000000
 803189c:	d23c      	bcs.n	8031918 <__ieee754_acosf+0xb4>
 803189e:	f1b2 5f0c 	cmp.w	r2, #587202560	@ 0x23000000
 80318a2:	f240 80b1 	bls.w	8031a08 <__ieee754_acosf+0x1a4>
 80318a6:	ee60 7a00 	vmul.f32	s15, s0, s0
 80318aa:	eddf 6a5b 	vldr	s13, [pc, #364]	@ 8031a18 <__ieee754_acosf+0x1b4>
 80318ae:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 8031a1c <__ieee754_acosf+0x1b8>
 80318b2:	ed9f 6a5b 	vldr	s12, [pc, #364]	@ 8031a20 <__ieee754_acosf+0x1bc>
 80318b6:	eea7 7aa6 	vfma.f32	s14, s15, s13
 80318ba:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 8031a24 <__ieee754_acosf+0x1c0>
 80318be:	eee7 6a27 	vfma.f32	s13, s14, s15
 80318c2:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8031a28 <__ieee754_acosf+0x1c4>
 80318c6:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80318ca:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8031a2c <__ieee754_acosf+0x1c8>
 80318ce:	eee7 6a27 	vfma.f32	s13, s14, s15
 80318d2:	ed9f 7a57 	vldr	s14, [pc, #348]	@ 8031a30 <__ieee754_acosf+0x1cc>
 80318d6:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80318da:	eddf 6a56 	vldr	s13, [pc, #344]	@ 8031a34 <__ieee754_acosf+0x1d0>
 80318de:	eea7 6aa6 	vfma.f32	s12, s15, s13
 80318e2:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8031a38 <__ieee754_acosf+0x1d4>
 80318e6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80318ea:	eee6 6a27 	vfma.f32	s13, s12, s15
 80318ee:	ed9f 6a53 	vldr	s12, [pc, #332]	@ 8031a3c <__ieee754_acosf+0x1d8>
 80318f2:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80318f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80318fa:	eee6 6a27 	vfma.f32	s13, s12, s15
 80318fe:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8031a40 <__ieee754_acosf+0x1dc>
 8031902:	ee87 6a26 	vdiv.f32	s12, s14, s13
 8031906:	eee0 7a46 	vfms.f32	s15, s0, s12
 803190a:	ee70 7a67 	vsub.f32	s15, s0, s15
 803190e:	ed9f 0a4d 	vldr	s0, [pc, #308]	@ 8031a44 <__ieee754_acosf+0x1e0>
 8031912:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031916:	e7b6      	b.n	8031886 <__ieee754_acosf+0x22>
 8031918:	2b00      	cmp	r3, #0
 803191a:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 803191e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031922:	eddf da3d 	vldr	s27, [pc, #244]	@ 8031a18 <__ieee754_acosf+0x1b4>
 8031926:	eddf ca3d 	vldr	s25, [pc, #244]	@ 8031a1c <__ieee754_acosf+0x1b8>
 803192a:	ed9f ca3e 	vldr	s24, [pc, #248]	@ 8031a24 <__ieee754_acosf+0x1c0>
 803192e:	eddf ba3e 	vldr	s23, [pc, #248]	@ 8031a28 <__ieee754_acosf+0x1c4>
 8031932:	ed9f ba3e 	vldr	s22, [pc, #248]	@ 8031a2c <__ieee754_acosf+0x1c8>
 8031936:	eddf 8a3e 	vldr	s17, [pc, #248]	@ 8031a30 <__ieee754_acosf+0x1cc>
 803193a:	ed9f da3e 	vldr	s26, [pc, #248]	@ 8031a34 <__ieee754_acosf+0x1d0>
 803193e:	eddf aa38 	vldr	s21, [pc, #224]	@ 8031a20 <__ieee754_acosf+0x1bc>
 8031942:	ed9f aa3d 	vldr	s20, [pc, #244]	@ 8031a38 <__ieee754_acosf+0x1d4>
 8031946:	eddf 9a3d 	vldr	s19, [pc, #244]	@ 8031a3c <__ieee754_acosf+0x1d8>
 803194a:	da28      	bge.n	803199e <__ieee754_acosf+0x13a>
 803194c:	ee30 8a09 	vadd.f32	s16, s0, s18
 8031950:	ee28 0a27 	vmul.f32	s0, s16, s15
 8031954:	eee0 ca2d 	vfma.f32	s25, s0, s27
 8031958:	eee0 aa0d 	vfma.f32	s21, s0, s26
 803195c:	eeac ca80 	vfma.f32	s24, s25, s0
 8031960:	eeaa aa80 	vfma.f32	s20, s21, s0
 8031964:	eeec ba00 	vfma.f32	s23, s24, s0
 8031968:	eeea 9a00 	vfma.f32	s19, s20, s0
 803196c:	eeab ba80 	vfma.f32	s22, s23, s0
 8031970:	eea9 9a80 	vfma.f32	s18, s19, s0
 8031974:	eeeb 8a00 	vfma.f32	s17, s22, s0
 8031978:	ee68 8a80 	vmul.f32	s17, s17, s0
 803197c:	f7ff fdee 	bl	803155c <__ieee754_sqrtf>
 8031980:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8031a48 <__ieee754_acosf+0x1e4>
 8031984:	ee88 7a89 	vdiv.f32	s14, s17, s18
 8031988:	eee0 7a07 	vfma.f32	s15, s0, s14
 803198c:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8031990:	ee77 7a80 	vadd.f32	s15, s15, s0
 8031994:	ed9f 0a2d 	vldr	s0, [pc, #180]	@ 8031a4c <__ieee754_acosf+0x1e8>
 8031998:	eea7 0ac7 	vfms.f32	s0, s15, s14
 803199c:	e773      	b.n	8031886 <__ieee754_acosf+0x22>
 803199e:	ee39 8a40 	vsub.f32	s16, s18, s0
 80319a2:	ee28 8a27 	vmul.f32	s16, s16, s15
 80319a6:	eeb0 0a48 	vmov.f32	s0, s16
 80319aa:	f7ff fdd7 	bl	803155c <__ieee754_sqrtf>
 80319ae:	eee8 ca2d 	vfma.f32	s25, s16, s27
 80319b2:	eee8 aa0d 	vfma.f32	s21, s16, s26
 80319b6:	ee10 3a10 	vmov	r3, s0
 80319ba:	eeb0 6a48 	vmov.f32	s12, s16
 80319be:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 80319c2:	f023 030f 	bic.w	r3, r3, #15
 80319c6:	eeac ca88 	vfma.f32	s24, s25, s16
 80319ca:	eeaa aa88 	vfma.f32	s20, s21, s16
 80319ce:	ee07 3a90 	vmov	s15, r3
 80319d2:	eea7 6ae7 	vfms.f32	s12, s15, s15
 80319d6:	ee70 6a27 	vadd.f32	s13, s0, s15
 80319da:	eeec ba08 	vfma.f32	s23, s24, s16
 80319de:	eeea 9a08 	vfma.f32	s19, s20, s16
 80319e2:	ee86 7a26 	vdiv.f32	s14, s12, s13
 80319e6:	eeab ba88 	vfma.f32	s22, s23, s16
 80319ea:	eea9 9a88 	vfma.f32	s18, s19, s16
 80319ee:	eeeb 8a08 	vfma.f32	s17, s22, s16
 80319f2:	ee68 8a88 	vmul.f32	s17, s17, s16
 80319f6:	eec8 6a89 	vdiv.f32	s13, s17, s18
 80319fa:	eea0 7a26 	vfma.f32	s14, s0, s13
 80319fe:	ee37 0a87 	vadd.f32	s0, s15, s14
 8031a02:	ee30 0a00 	vadd.f32	s0, s0, s0
 8031a06:	e73e      	b.n	8031886 <__ieee754_acosf+0x22>
 8031a08:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8031a50 <__ieee754_acosf+0x1ec>
 8031a0c:	e73b      	b.n	8031886 <__ieee754_acosf+0x22>
 8031a0e:	bf00      	nop
 8031a10:	40490fdb 	.word	0x40490fdb
 8031a14:	00000000 	.word	0x00000000
 8031a18:	3811ef08 	.word	0x3811ef08
 8031a1c:	3a4f7f04 	.word	0x3a4f7f04
 8031a20:	bf303361 	.word	0xbf303361
 8031a24:	bd241146 	.word	0xbd241146
 8031a28:	3e4e0aa8 	.word	0x3e4e0aa8
 8031a2c:	bea6b090 	.word	0xbea6b090
 8031a30:	3e2aaaab 	.word	0x3e2aaaab
 8031a34:	3d9dc62e 	.word	0x3d9dc62e
 8031a38:	4001572d 	.word	0x4001572d
 8031a3c:	c019d139 	.word	0xc019d139
 8031a40:	33a22168 	.word	0x33a22168
 8031a44:	3fc90fda 	.word	0x3fc90fda
 8031a48:	b3a22168 	.word	0xb3a22168
 8031a4c:	40490fda 	.word	0x40490fda
 8031a50:	3fc90fdb 	.word	0x3fc90fdb

08031a54 <__ieee754_atan2f>:
 8031a54:	ee10 2a90 	vmov	r2, s1
 8031a58:	eef0 7a40 	vmov.f32	s15, s0
 8031a5c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8031a60:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031a64:	b510      	push	{r4, lr}
 8031a66:	d806      	bhi.n	8031a76 <__ieee754_atan2f+0x22>
 8031a68:	ee10 0a10 	vmov	r0, s0
 8031a6c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8031a70:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031a74:	d904      	bls.n	8031a80 <__ieee754_atan2f+0x2c>
 8031a76:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8031a7a:	eeb0 0a67 	vmov.f32	s0, s15
 8031a7e:	bd10      	pop	{r4, pc}
 8031a80:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031a84:	d103      	bne.n	8031a8e <__ieee754_atan2f+0x3a>
 8031a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031a8a:	f7ff bbcf 	b.w	803122c <atanf>
 8031a8e:	1794      	asrs	r4, r2, #30
 8031a90:	f004 0402 	and.w	r4, r4, #2
 8031a94:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8031a98:	b93b      	cbnz	r3, 8031aaa <__ieee754_atan2f+0x56>
 8031a9a:	2c02      	cmp	r4, #2
 8031a9c:	d05c      	beq.n	8031b58 <__ieee754_atan2f+0x104>
 8031a9e:	2c03      	cmp	r4, #3
 8031aa0:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8031b6c <__ieee754_atan2f+0x118>
 8031aa4:	fe47 7a00 	vseleq.f32	s15, s14, s0
 8031aa8:	e7e7      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031aaa:	b939      	cbnz	r1, 8031abc <__ieee754_atan2f+0x68>
 8031aac:	2800      	cmp	r0, #0
 8031aae:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8031b70 <__ieee754_atan2f+0x11c>
 8031ab2:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031b74 <__ieee754_atan2f+0x120>
 8031ab6:	fe67 7a87 	vselge.f32	s15, s15, s14
 8031aba:	e7de      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031abc:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031ac0:	d110      	bne.n	8031ae4 <__ieee754_atan2f+0x90>
 8031ac2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031ac6:	f104 34ff 	add.w	r4, r4, #4294967295
 8031aca:	d107      	bne.n	8031adc <__ieee754_atan2f+0x88>
 8031acc:	2c02      	cmp	r4, #2
 8031ace:	d846      	bhi.n	8031b5e <__ieee754_atan2f+0x10a>
 8031ad0:	4b29      	ldr	r3, [pc, #164]	@ (8031b78 <__ieee754_atan2f+0x124>)
 8031ad2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8031ad6:	edd3 7a00 	vldr	s15, [r3]
 8031ada:	e7ce      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031adc:	2c02      	cmp	r4, #2
 8031ade:	d841      	bhi.n	8031b64 <__ieee754_atan2f+0x110>
 8031ae0:	4b26      	ldr	r3, [pc, #152]	@ (8031b7c <__ieee754_atan2f+0x128>)
 8031ae2:	e7f6      	b.n	8031ad2 <__ieee754_atan2f+0x7e>
 8031ae4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031ae8:	d0e0      	beq.n	8031aac <__ieee754_atan2f+0x58>
 8031aea:	1a5b      	subs	r3, r3, r1
 8031aec:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8031af0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8031af4:	da1a      	bge.n	8031b2c <__ieee754_atan2f+0xd8>
 8031af6:	2a00      	cmp	r2, #0
 8031af8:	da01      	bge.n	8031afe <__ieee754_atan2f+0xaa>
 8031afa:	313c      	adds	r1, #60	@ 0x3c
 8031afc:	db19      	blt.n	8031b32 <__ieee754_atan2f+0xde>
 8031afe:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8031b02:	f7ff fcab 	bl	803145c <fabsf>
 8031b06:	f7ff fb91 	bl	803122c <atanf>
 8031b0a:	eef0 7a40 	vmov.f32	s15, s0
 8031b0e:	2c01      	cmp	r4, #1
 8031b10:	d012      	beq.n	8031b38 <__ieee754_atan2f+0xe4>
 8031b12:	2c02      	cmp	r4, #2
 8031b14:	d017      	beq.n	8031b46 <__ieee754_atan2f+0xf2>
 8031b16:	2c00      	cmp	r4, #0
 8031b18:	d0af      	beq.n	8031a7a <__ieee754_atan2f+0x26>
 8031b1a:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8031b80 <__ieee754_atan2f+0x12c>
 8031b1e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b22:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8031b84 <__ieee754_atan2f+0x130>
 8031b26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031b2a:	e7a6      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031b2c:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8031b70 <__ieee754_atan2f+0x11c>
 8031b30:	e7ed      	b.n	8031b0e <__ieee754_atan2f+0xba>
 8031b32:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031b88 <__ieee754_atan2f+0x134>
 8031b36:	e7ea      	b.n	8031b0e <__ieee754_atan2f+0xba>
 8031b38:	ee17 3a90 	vmov	r3, s15
 8031b3c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8031b40:	ee07 3a90 	vmov	s15, r3
 8031b44:	e799      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031b46:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8031b80 <__ieee754_atan2f+0x12c>
 8031b4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b4e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8031b84 <__ieee754_atan2f+0x130>
 8031b52:	ee77 7a67 	vsub.f32	s15, s14, s15
 8031b56:	e790      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031b58:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8031b84 <__ieee754_atan2f+0x130>
 8031b5c:	e78d      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031b5e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8031b8c <__ieee754_atan2f+0x138>
 8031b62:	e78a      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031b64:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031b88 <__ieee754_atan2f+0x134>
 8031b68:	e787      	b.n	8031a7a <__ieee754_atan2f+0x26>
 8031b6a:	bf00      	nop
 8031b6c:	c0490fdb 	.word	0xc0490fdb
 8031b70:	3fc90fdb 	.word	0x3fc90fdb
 8031b74:	bfc90fdb 	.word	0xbfc90fdb
 8031b78:	08038238 	.word	0x08038238
 8031b7c:	0803822c 	.word	0x0803822c
 8031b80:	33bbbd2e 	.word	0x33bbbd2e
 8031b84:	40490fdb 	.word	0x40490fdb
 8031b88:	00000000 	.word	0x00000000
 8031b8c:	3f490fdb 	.word	0x3f490fdb

08031b90 <__ieee754_fmodf>:
 8031b90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031b92:	ee10 5a90 	vmov	r5, s1
 8031b96:	f025 4000 	bic.w	r0, r5, #2147483648	@ 0x80000000
 8031b9a:	1e43      	subs	r3, r0, #1
 8031b9c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031ba0:	d206      	bcs.n	8031bb0 <__ieee754_fmodf+0x20>
 8031ba2:	ee10 3a10 	vmov	r3, s0
 8031ba6:	f023 4600 	bic.w	r6, r3, #2147483648	@ 0x80000000
 8031baa:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8031bae:	d304      	bcc.n	8031bba <__ieee754_fmodf+0x2a>
 8031bb0:	ee60 0a20 	vmul.f32	s1, s0, s1
 8031bb4:	ee80 0aa0 	vdiv.f32	s0, s1, s1
 8031bb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031bba:	4286      	cmp	r6, r0
 8031bbc:	dbfc      	blt.n	8031bb8 <__ieee754_fmodf+0x28>
 8031bbe:	f003 4400 	and.w	r4, r3, #2147483648	@ 0x80000000
 8031bc2:	d105      	bne.n	8031bd0 <__ieee754_fmodf+0x40>
 8031bc4:	4b33      	ldr	r3, [pc, #204]	@ (8031c94 <__ieee754_fmodf+0x104>)
 8031bc6:	eb03 7354 	add.w	r3, r3, r4, lsr #29
 8031bca:	ed93 0a00 	vldr	s0, [r3]
 8031bce:	e7f3      	b.n	8031bb8 <__ieee754_fmodf+0x28>
 8031bd0:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8031bd4:	d141      	bne.n	8031c5a <__ieee754_fmodf+0xca>
 8031bd6:	0232      	lsls	r2, r6, #8
 8031bd8:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 8031bdc:	2a00      	cmp	r2, #0
 8031bde:	dc39      	bgt.n	8031c54 <__ieee754_fmodf+0xc4>
 8031be0:	f015 4fff 	tst.w	r5, #2139095040	@ 0x7f800000
 8031be4:	d13f      	bne.n	8031c66 <__ieee754_fmodf+0xd6>
 8031be6:	0207      	lsls	r7, r0, #8
 8031be8:	f06f 027d 	mvn.w	r2, #125	@ 0x7d
 8031bec:	2f00      	cmp	r7, #0
 8031bee:	da37      	bge.n	8031c60 <__ieee754_fmodf+0xd0>
 8031bf0:	f111 0f7e 	cmn.w	r1, #126	@ 0x7e
 8031bf4:	bfb5      	itete	lt
 8031bf6:	f06f 037d 	mvnlt.w	r3, #125	@ 0x7d
 8031bfa:	f3c3 0316 	ubfxge	r3, r3, #0, #23
 8031bfe:	1a5b      	sublt	r3, r3, r1
 8031c00:	f443 0300 	orrge.w	r3, r3, #8388608	@ 0x800000
 8031c04:	eba1 0102 	sub.w	r1, r1, r2
 8031c08:	bfb8      	it	lt
 8031c0a:	fa06 f303 	lsllt.w	r3, r6, r3
 8031c0e:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c12:	bfb5      	itete	lt
 8031c14:	f06f 057d 	mvnlt.w	r5, #125	@ 0x7d
 8031c18:	f3c5 0516 	ubfxge	r5, r5, #0, #23
 8031c1c:	1aad      	sublt	r5, r5, r2
 8031c1e:	f445 0000 	orrge.w	r0, r5, #8388608	@ 0x800000
 8031c22:	bfb8      	it	lt
 8031c24:	40a8      	lsllt	r0, r5
 8031c26:	1a1d      	subs	r5, r3, r0
 8031c28:	bb01      	cbnz	r1, 8031c6c <__ieee754_fmodf+0xdc>
 8031c2a:	ea13 0325 	ands.w	r3, r3, r5, asr #32
 8031c2e:	bf38      	it	cc
 8031c30:	462b      	movcc	r3, r5
 8031c32:	2b00      	cmp	r3, #0
 8031c34:	d0c6      	beq.n	8031bc4 <__ieee754_fmodf+0x34>
 8031c36:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031c3a:	db1f      	blt.n	8031c7c <__ieee754_fmodf+0xec>
 8031c3c:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c40:	db1f      	blt.n	8031c82 <__ieee754_fmodf+0xf2>
 8031c42:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8031c46:	327f      	adds	r2, #127	@ 0x7f
 8031c48:	4323      	orrs	r3, r4
 8031c4a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8031c4e:	ee00 3a10 	vmov	s0, r3
 8031c52:	e7b1      	b.n	8031bb8 <__ieee754_fmodf+0x28>
 8031c54:	3901      	subs	r1, #1
 8031c56:	0052      	lsls	r2, r2, #1
 8031c58:	e7c0      	b.n	8031bdc <__ieee754_fmodf+0x4c>
 8031c5a:	15f1      	asrs	r1, r6, #23
 8031c5c:	397f      	subs	r1, #127	@ 0x7f
 8031c5e:	e7bf      	b.n	8031be0 <__ieee754_fmodf+0x50>
 8031c60:	3a01      	subs	r2, #1
 8031c62:	007f      	lsls	r7, r7, #1
 8031c64:	e7c2      	b.n	8031bec <__ieee754_fmodf+0x5c>
 8031c66:	15c2      	asrs	r2, r0, #23
 8031c68:	3a7f      	subs	r2, #127	@ 0x7f
 8031c6a:	e7c1      	b.n	8031bf0 <__ieee754_fmodf+0x60>
 8031c6c:	2d00      	cmp	r5, #0
 8031c6e:	da02      	bge.n	8031c76 <__ieee754_fmodf+0xe6>
 8031c70:	005b      	lsls	r3, r3, #1
 8031c72:	3901      	subs	r1, #1
 8031c74:	e7d7      	b.n	8031c26 <__ieee754_fmodf+0x96>
 8031c76:	d0a5      	beq.n	8031bc4 <__ieee754_fmodf+0x34>
 8031c78:	006b      	lsls	r3, r5, #1
 8031c7a:	e7fa      	b.n	8031c72 <__ieee754_fmodf+0xe2>
 8031c7c:	005b      	lsls	r3, r3, #1
 8031c7e:	3a01      	subs	r2, #1
 8031c80:	e7d9      	b.n	8031c36 <__ieee754_fmodf+0xa6>
 8031c82:	f1c2 22ff 	rsb	r2, r2, #4278255360	@ 0xff00ff00
 8031c86:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 8031c8a:	3282      	adds	r2, #130	@ 0x82
 8031c8c:	4113      	asrs	r3, r2
 8031c8e:	4323      	orrs	r3, r4
 8031c90:	e7dd      	b.n	8031c4e <__ieee754_fmodf+0xbe>
 8031c92:	bf00      	nop
 8031c94:	08038244 	.word	0x08038244

08031c98 <__ieee754_rem_pio2f>:
 8031c98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031c9a:	ee10 6a10 	vmov	r6, s0
 8031c9e:	4b87      	ldr	r3, [pc, #540]	@ (8031ebc <__ieee754_rem_pio2f+0x224>)
 8031ca0:	b087      	sub	sp, #28
 8031ca2:	4604      	mov	r4, r0
 8031ca4:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8031ca8:	429d      	cmp	r5, r3
 8031caa:	d805      	bhi.n	8031cb8 <__ieee754_rem_pio2f+0x20>
 8031cac:	2300      	movs	r3, #0
 8031cae:	ed80 0a00 	vstr	s0, [r0]
 8031cb2:	6043      	str	r3, [r0, #4]
 8031cb4:	2000      	movs	r0, #0
 8031cb6:	e022      	b.n	8031cfe <__ieee754_rem_pio2f+0x66>
 8031cb8:	4b81      	ldr	r3, [pc, #516]	@ (8031ec0 <__ieee754_rem_pio2f+0x228>)
 8031cba:	429d      	cmp	r5, r3
 8031cbc:	d83a      	bhi.n	8031d34 <__ieee754_rem_pio2f+0x9c>
 8031cbe:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031cc2:	2e00      	cmp	r6, #0
 8031cc4:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ 8031ec4 <__ieee754_rem_pio2f+0x22c>
 8031cc8:	f023 030f 	bic.w	r3, r3, #15
 8031ccc:	4a7e      	ldr	r2, [pc, #504]	@ (8031ec8 <__ieee754_rem_pio2f+0x230>)
 8031cce:	dd18      	ble.n	8031d02 <__ieee754_rem_pio2f+0x6a>
 8031cd0:	4293      	cmp	r3, r2
 8031cd2:	ee70 7a47 	vsub.f32	s15, s0, s14
 8031cd6:	bf09      	itett	eq
 8031cd8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	@ 8031ecc <__ieee754_rem_pio2f+0x234>
 8031cdc:	eddf 6a7c 	vldrne	s13, [pc, #496]	@ 8031ed0 <__ieee754_rem_pio2f+0x238>
 8031ce0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8031ce4:	eddf 6a7b 	vldreq	s13, [pc, #492]	@ 8031ed4 <__ieee754_rem_pio2f+0x23c>
 8031ce8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8031cec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031cf0:	ed80 7a00 	vstr	s14, [r0]
 8031cf4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8031cf8:	edc0 7a01 	vstr	s15, [r0, #4]
 8031cfc:	2001      	movs	r0, #1
 8031cfe:	b007      	add	sp, #28
 8031d00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031d02:	4293      	cmp	r3, r2
 8031d04:	ee70 7a07 	vadd.f32	s15, s0, s14
 8031d08:	bf09      	itett	eq
 8031d0a:	ed9f 7a70 	vldreq	s14, [pc, #448]	@ 8031ecc <__ieee754_rem_pio2f+0x234>
 8031d0e:	eddf 6a70 	vldrne	s13, [pc, #448]	@ 8031ed0 <__ieee754_rem_pio2f+0x238>
 8031d12:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8031d16:	eddf 6a6f 	vldreq	s13, [pc, #444]	@ 8031ed4 <__ieee754_rem_pio2f+0x23c>
 8031d1a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8031d1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031d22:	ed80 7a00 	vstr	s14, [r0]
 8031d26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8031d2a:	edc0 7a01 	vstr	s15, [r0, #4]
 8031d2e:	f04f 30ff 	mov.w	r0, #4294967295
 8031d32:	e7e4      	b.n	8031cfe <__ieee754_rem_pio2f+0x66>
 8031d34:	4b68      	ldr	r3, [pc, #416]	@ (8031ed8 <__ieee754_rem_pio2f+0x240>)
 8031d36:	429d      	cmp	r5, r3
 8031d38:	d872      	bhi.n	8031e20 <__ieee754_rem_pio2f+0x188>
 8031d3a:	f7ff fb8f 	bl	803145c <fabsf>
 8031d3e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031d42:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 8031edc <__ieee754_rem_pio2f+0x244>
 8031d46:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031d4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8031d4e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8031d52:	ee17 0a90 	vmov	r0, s15
 8031d56:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031ec4 <__ieee754_rem_pio2f+0x22c>
 8031d5a:	281f      	cmp	r0, #31
 8031d5c:	eea7 0a67 	vfms.f32	s0, s14, s15
 8031d60:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031ed0 <__ieee754_rem_pio2f+0x238>
 8031d64:	eeb1 6a47 	vneg.f32	s12, s14
 8031d68:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031d6c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031d70:	ee16 1a90 	vmov	r1, s13
 8031d74:	dc09      	bgt.n	8031d8a <__ieee754_rem_pio2f+0xf2>
 8031d76:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031d7a:	1e47      	subs	r7, r0, #1
 8031d7c:	4a58      	ldr	r2, [pc, #352]	@ (8031ee0 <__ieee754_rem_pio2f+0x248>)
 8031d7e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8031d82:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8031d86:	4293      	cmp	r3, r2
 8031d88:	d106      	bne.n	8031d98 <__ieee754_rem_pio2f+0x100>
 8031d8a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8031d8e:	15eb      	asrs	r3, r5, #23
 8031d90:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8031d94:	2a08      	cmp	r2, #8
 8031d96:	dc14      	bgt.n	8031dc2 <__ieee754_rem_pio2f+0x12a>
 8031d98:	6021      	str	r1, [r4, #0]
 8031d9a:	ed94 7a00 	vldr	s14, [r4]
 8031d9e:	2e00      	cmp	r6, #0
 8031da0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8031da4:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031da8:	ed84 0a01 	vstr	s0, [r4, #4]
 8031dac:	daa7      	bge.n	8031cfe <__ieee754_rem_pio2f+0x66>
 8031dae:	eeb1 7a47 	vneg.f32	s14, s14
 8031db2:	eeb1 0a40 	vneg.f32	s0, s0
 8031db6:	ed84 7a00 	vstr	s14, [r4]
 8031dba:	ed84 0a01 	vstr	s0, [r4, #4]
 8031dbe:	4240      	negs	r0, r0
 8031dc0:	e79d      	b.n	8031cfe <__ieee754_rem_pio2f+0x66>
 8031dc2:	eef0 6a40 	vmov.f32	s13, s0
 8031dc6:	eddf 5a41 	vldr	s11, [pc, #260]	@ 8031ecc <__ieee754_rem_pio2f+0x234>
 8031dca:	eee6 6a25 	vfma.f32	s13, s12, s11
 8031dce:	ee70 7a66 	vsub.f32	s15, s0, s13
 8031dd2:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031dd6:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8031ed4 <__ieee754_rem_pio2f+0x23c>
 8031dda:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8031dde:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8031de2:	ee15 2a90 	vmov	r2, s11
 8031de6:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8031dea:	1a5b      	subs	r3, r3, r1
 8031dec:	2b19      	cmp	r3, #25
 8031dee:	dc04      	bgt.n	8031dfa <__ieee754_rem_pio2f+0x162>
 8031df0:	eeb0 0a66 	vmov.f32	s0, s13
 8031df4:	edc4 5a00 	vstr	s11, [r4]
 8031df8:	e7cf      	b.n	8031d9a <__ieee754_rem_pio2f+0x102>
 8031dfa:	eeb0 0a66 	vmov.f32	s0, s13
 8031dfe:	eddf 5a39 	vldr	s11, [pc, #228]	@ 8031ee4 <__ieee754_rem_pio2f+0x24c>
 8031e02:	eea6 0a25 	vfma.f32	s0, s12, s11
 8031e06:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8031e0a:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8031ee8 <__ieee754_rem_pio2f+0x250>
 8031e0e:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031e12:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8031e16:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031e1a:	ed84 7a00 	vstr	s14, [r4]
 8031e1e:	e7bc      	b.n	8031d9a <__ieee754_rem_pio2f+0x102>
 8031e20:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8031e24:	d306      	bcc.n	8031e34 <__ieee754_rem_pio2f+0x19c>
 8031e26:	ee70 7a40 	vsub.f32	s15, s0, s0
 8031e2a:	edc0 7a01 	vstr	s15, [r0, #4]
 8031e2e:	edc0 7a00 	vstr	s15, [r0]
 8031e32:	e73f      	b.n	8031cb4 <__ieee754_rem_pio2f+0x1c>
 8031e34:	15ea      	asrs	r2, r5, #23
 8031e36:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 8031eec <__ieee754_rem_pio2f+0x254>
 8031e3a:	3a86      	subs	r2, #134	@ 0x86
 8031e3c:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8031e40:	ee07 3a90 	vmov	s15, r3
 8031e44:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031e4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031e50:	ed8d 7a03 	vstr	s14, [sp, #12]
 8031e54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031e58:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031e60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031e64:	ed8d 7a04 	vstr	s14, [sp, #16]
 8031e68:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031e6c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8031e70:	edcd 7a05 	vstr	s15, [sp, #20]
 8031e74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031e78:	d11e      	bne.n	8031eb8 <__ieee754_rem_pio2f+0x220>
 8031e7a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8031e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031e82:	bf0c      	ite	eq
 8031e84:	2301      	moveq	r3, #1
 8031e86:	2302      	movne	r3, #2
 8031e88:	4919      	ldr	r1, [pc, #100]	@ (8031ef0 <__ieee754_rem_pio2f+0x258>)
 8031e8a:	a803      	add	r0, sp, #12
 8031e8c:	9101      	str	r1, [sp, #4]
 8031e8e:	2102      	movs	r1, #2
 8031e90:	9100      	str	r1, [sp, #0]
 8031e92:	4621      	mov	r1, r4
 8031e94:	f000 f82e 	bl	8031ef4 <__kernel_rem_pio2f>
 8031e98:	2e00      	cmp	r6, #0
 8031e9a:	f6bf af30 	bge.w	8031cfe <__ieee754_rem_pio2f+0x66>
 8031e9e:	edd4 7a00 	vldr	s15, [r4]
 8031ea2:	eef1 7a67 	vneg.f32	s15, s15
 8031ea6:	edc4 7a00 	vstr	s15, [r4]
 8031eaa:	edd4 7a01 	vldr	s15, [r4, #4]
 8031eae:	eef1 7a67 	vneg.f32	s15, s15
 8031eb2:	edc4 7a01 	vstr	s15, [r4, #4]
 8031eb6:	e782      	b.n	8031dbe <__ieee754_rem_pio2f+0x126>
 8031eb8:	2303      	movs	r3, #3
 8031eba:	e7e5      	b.n	8031e88 <__ieee754_rem_pio2f+0x1f0>
 8031ebc:	3f490fd8 	.word	0x3f490fd8
 8031ec0:	4016cbe3 	.word	0x4016cbe3
 8031ec4:	3fc90f80 	.word	0x3fc90f80
 8031ec8:	3fc90fd0 	.word	0x3fc90fd0
 8031ecc:	37354400 	.word	0x37354400
 8031ed0:	37354443 	.word	0x37354443
 8031ed4:	2e85a308 	.word	0x2e85a308
 8031ed8:	43490f80 	.word	0x43490f80
 8031edc:	3f22f984 	.word	0x3f22f984
 8031ee0:	0803824c 	.word	0x0803824c
 8031ee4:	2e85a300 	.word	0x2e85a300
 8031ee8:	248d3132 	.word	0x248d3132
 8031eec:	43800000 	.word	0x43800000
 8031ef0:	080382cc 	.word	0x080382cc

08031ef4 <__kernel_rem_pio2f>:
 8031ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031ef8:	4690      	mov	r8, r2
 8031efa:	4abc      	ldr	r2, [pc, #752]	@ (80321ec <__kernel_rem_pio2f+0x2f8>)
 8031efc:	460f      	mov	r7, r1
 8031efe:	f103 3bff 	add.w	fp, r3, #4294967295
 8031f02:	f118 0f04 	cmn.w	r8, #4
 8031f06:	ed2d 8b04 	vpush	{d8-d9}
 8031f0a:	b0d9      	sub	sp, #356	@ 0x164
 8031f0c:	9001      	str	r0, [sp, #4]
 8031f0e:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8031f10:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8031f14:	db27      	blt.n	8031f66 <__kernel_rem_pio2f+0x72>
 8031f16:	f1b8 0203 	subs.w	r2, r8, #3
 8031f1a:	bf48      	it	mi
 8031f1c:	f108 0204 	addmi.w	r2, r8, #4
 8031f20:	10d2      	asrs	r2, r2, #3
 8031f22:	1c55      	adds	r5, r2, #1
 8031f24:	eba2 060b 	sub.w	r6, r2, fp
 8031f28:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8031f2a:	eb0a 0c0b 	add.w	ip, sl, fp
 8031f2e:	00e8      	lsls	r0, r5, #3
 8031f30:	ac1c      	add	r4, sp, #112	@ 0x70
 8031f32:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8031f36:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80321fc <__kernel_rem_pio2f+0x308>
 8031f3a:	9002      	str	r0, [sp, #8]
 8031f3c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8031f40:	2000      	movs	r0, #0
 8031f42:	4560      	cmp	r0, ip
 8031f44:	dd11      	ble.n	8031f6a <__kernel_rem_pio2f+0x76>
 8031f46:	a91c      	add	r1, sp, #112	@ 0x70
 8031f48:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8031f4c:	f04f 0c00 	mov.w	ip, #0
 8031f50:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8031f54:	45d4      	cmp	ip, sl
 8031f56:	dc29      	bgt.n	8031fac <__kernel_rem_pio2f+0xb8>
 8031f58:	f8dd e004 	ldr.w	lr, [sp, #4]
 8031f5c:	4606      	mov	r6, r0
 8031f5e:	eddf 7aa7 	vldr	s15, [pc, #668]	@ 80321fc <__kernel_rem_pio2f+0x308>
 8031f62:	2400      	movs	r4, #0
 8031f64:	e018      	b.n	8031f98 <__kernel_rem_pio2f+0xa4>
 8031f66:	2200      	movs	r2, #0
 8031f68:	e7db      	b.n	8031f22 <__kernel_rem_pio2f+0x2e>
 8031f6a:	42c6      	cmn	r6, r0
 8031f6c:	bf54      	ite	pl
 8031f6e:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8031f72:	eef0 7a47 	vmovmi.f32	s15, s14
 8031f76:	f100 0001 	add.w	r0, r0, #1
 8031f7a:	bf5c      	itt	pl
 8031f7c:	ee07 1a90 	vmovpl	s15, r1
 8031f80:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8031f84:	ece4 7a01 	vstmia	r4!, {s15}
 8031f88:	e7db      	b.n	8031f42 <__kernel_rem_pio2f+0x4e>
 8031f8a:	ecfe 6a01 	vldmia	lr!, {s13}
 8031f8e:	3401      	adds	r4, #1
 8031f90:	ed96 7a00 	vldr	s14, [r6]
 8031f94:	eee6 7a87 	vfma.f32	s15, s13, s14
 8031f98:	455c      	cmp	r4, fp
 8031f9a:	f1a6 0604 	sub.w	r6, r6, #4
 8031f9e:	ddf4      	ble.n	8031f8a <__kernel_rem_pio2f+0x96>
 8031fa0:	f10c 0c01 	add.w	ip, ip, #1
 8031fa4:	3004      	adds	r0, #4
 8031fa6:	ece9 7a01 	vstmia	r9!, {s15}
 8031faa:	e7d3      	b.n	8031f54 <__kernel_rem_pio2f+0x60>
 8031fac:	a908      	add	r1, sp, #32
 8031fae:	4654      	mov	r4, sl
 8031fb0:	eddf 8a91 	vldr	s17, [pc, #580]	@ 80321f8 <__kernel_rem_pio2f+0x304>
 8031fb4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8031fb8:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 80321f4 <__kernel_rem_pio2f+0x300>
 8031fbc:	9104      	str	r1, [sp, #16]
 8031fbe:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8031fc0:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8031fc4:	9203      	str	r2, [sp, #12]
 8031fc6:	00a2      	lsls	r2, r4, #2
 8031fc8:	a944      	add	r1, sp, #272	@ 0x110
 8031fca:	4626      	mov	r6, r4
 8031fcc:	9205      	str	r2, [sp, #20]
 8031fce:	aa58      	add	r2, sp, #352	@ 0x160
 8031fd0:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8031fd4:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8031fd8:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8031fdc:	aa08      	add	r2, sp, #32
 8031fde:	4694      	mov	ip, r2
 8031fe0:	2e00      	cmp	r6, #0
 8031fe2:	f1a0 0004 	sub.w	r0, r0, #4
 8031fe6:	dc4c      	bgt.n	8032082 <__kernel_rem_pio2f+0x18e>
 8031fe8:	4628      	mov	r0, r5
 8031fea:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8031fee:	f000 f9f5 	bl	80323dc <scalbnf>
 8031ff2:	eeb0 8a40 	vmov.f32	s16, s0
 8031ff6:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8031ffa:	ee28 0a00 	vmul.f32	s0, s16, s0
 8031ffe:	f000 fa51 	bl	80324a4 <floorf>
 8032002:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8032006:	2d00      	cmp	r5, #0
 8032008:	eea0 8a67 	vfms.f32	s16, s0, s15
 803200c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8032010:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8032014:	ee17 9a90 	vmov	r9, s15
 8032018:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803201c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8032020:	dd41      	ble.n	80320a6 <__kernel_rem_pio2f+0x1b2>
 8032022:	f104 3cff 	add.w	ip, r4, #4294967295
 8032026:	a908      	add	r1, sp, #32
 8032028:	f1c5 0e08 	rsb	lr, r5, #8
 803202c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8032030:	fa46 f00e 	asr.w	r0, r6, lr
 8032034:	4481      	add	r9, r0
 8032036:	fa00 f00e 	lsl.w	r0, r0, lr
 803203a:	1a36      	subs	r6, r6, r0
 803203c:	f1c5 0007 	rsb	r0, r5, #7
 8032040:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8032044:	4106      	asrs	r6, r0
 8032046:	2e00      	cmp	r6, #0
 8032048:	dd3c      	ble.n	80320c4 <__kernel_rem_pio2f+0x1d0>
 803204a:	f04f 0e00 	mov.w	lr, #0
 803204e:	f109 0901 	add.w	r9, r9, #1
 8032052:	4670      	mov	r0, lr
 8032054:	4574      	cmp	r4, lr
 8032056:	dc68      	bgt.n	803212a <__kernel_rem_pio2f+0x236>
 8032058:	2d00      	cmp	r5, #0
 803205a:	dd03      	ble.n	8032064 <__kernel_rem_pio2f+0x170>
 803205c:	2d01      	cmp	r5, #1
 803205e:	d074      	beq.n	803214a <__kernel_rem_pio2f+0x256>
 8032060:	2d02      	cmp	r5, #2
 8032062:	d07d      	beq.n	8032160 <__kernel_rem_pio2f+0x26c>
 8032064:	2e02      	cmp	r6, #2
 8032066:	d12d      	bne.n	80320c4 <__kernel_rem_pio2f+0x1d0>
 8032068:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 803206c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8032070:	b340      	cbz	r0, 80320c4 <__kernel_rem_pio2f+0x1d0>
 8032072:	4628      	mov	r0, r5
 8032074:	9306      	str	r3, [sp, #24]
 8032076:	f000 f9b1 	bl	80323dc <scalbnf>
 803207a:	9b06      	ldr	r3, [sp, #24]
 803207c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8032080:	e020      	b.n	80320c4 <__kernel_rem_pio2f+0x1d0>
 8032082:	ee60 7a28 	vmul.f32	s15, s0, s17
 8032086:	3e01      	subs	r6, #1
 8032088:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803208c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032090:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8032094:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032098:	ecac 0a01 	vstmia	ip!, {s0}
 803209c:	ed90 0a00 	vldr	s0, [r0]
 80320a0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80320a4:	e79c      	b.n	8031fe0 <__kernel_rem_pio2f+0xec>
 80320a6:	d105      	bne.n	80320b4 <__kernel_rem_pio2f+0x1c0>
 80320a8:	1e60      	subs	r0, r4, #1
 80320aa:	a908      	add	r1, sp, #32
 80320ac:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80320b0:	11f6      	asrs	r6, r6, #7
 80320b2:	e7c8      	b.n	8032046 <__kernel_rem_pio2f+0x152>
 80320b4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80320b8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80320bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80320c0:	da31      	bge.n	8032126 <__kernel_rem_pio2f+0x232>
 80320c2:	2600      	movs	r6, #0
 80320c4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80320c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80320cc:	f040 8098 	bne.w	8032200 <__kernel_rem_pio2f+0x30c>
 80320d0:	1e60      	subs	r0, r4, #1
 80320d2:	2200      	movs	r2, #0
 80320d4:	4550      	cmp	r0, sl
 80320d6:	da4b      	bge.n	8032170 <__kernel_rem_pio2f+0x27c>
 80320d8:	2a00      	cmp	r2, #0
 80320da:	d065      	beq.n	80321a8 <__kernel_rem_pio2f+0x2b4>
 80320dc:	3c01      	subs	r4, #1
 80320de:	ab08      	add	r3, sp, #32
 80320e0:	3d08      	subs	r5, #8
 80320e2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80320e6:	2b00      	cmp	r3, #0
 80320e8:	d0f8      	beq.n	80320dc <__kernel_rem_pio2f+0x1e8>
 80320ea:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80320ee:	4628      	mov	r0, r5
 80320f0:	f000 f974 	bl	80323dc <scalbnf>
 80320f4:	1c63      	adds	r3, r4, #1
 80320f6:	aa44      	add	r2, sp, #272	@ 0x110
 80320f8:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 80321f8 <__kernel_rem_pio2f+0x304>
 80320fc:	0099      	lsls	r1, r3, #2
 80320fe:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8032102:	4623      	mov	r3, r4
 8032104:	2b00      	cmp	r3, #0
 8032106:	f280 80a9 	bge.w	803225c <__kernel_rem_pio2f+0x368>
 803210a:	4623      	mov	r3, r4
 803210c:	2b00      	cmp	r3, #0
 803210e:	f2c0 80c7 	blt.w	80322a0 <__kernel_rem_pio2f+0x3ac>
 8032112:	aa44      	add	r2, sp, #272	@ 0x110
 8032114:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 80321f0 <__kernel_rem_pio2f+0x2fc>
 8032118:	eddf 7a38 	vldr	s15, [pc, #224]	@ 80321fc <__kernel_rem_pio2f+0x308>
 803211c:	2000      	movs	r0, #0
 803211e:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8032122:	1ae2      	subs	r2, r4, r3
 8032124:	e0b1      	b.n	803228a <__kernel_rem_pio2f+0x396>
 8032126:	2602      	movs	r6, #2
 8032128:	e78f      	b.n	803204a <__kernel_rem_pio2f+0x156>
 803212a:	f852 1b04 	ldr.w	r1, [r2], #4
 803212e:	b948      	cbnz	r0, 8032144 <__kernel_rem_pio2f+0x250>
 8032130:	b121      	cbz	r1, 803213c <__kernel_rem_pio2f+0x248>
 8032132:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8032136:	f842 1c04 	str.w	r1, [r2, #-4]
 803213a:	2101      	movs	r1, #1
 803213c:	f10e 0e01 	add.w	lr, lr, #1
 8032140:	4608      	mov	r0, r1
 8032142:	e787      	b.n	8032054 <__kernel_rem_pio2f+0x160>
 8032144:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8032148:	e7f5      	b.n	8032136 <__kernel_rem_pio2f+0x242>
 803214a:	f104 3cff 	add.w	ip, r4, #4294967295
 803214e:	aa08      	add	r2, sp, #32
 8032150:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8032154:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8032158:	a908      	add	r1, sp, #32
 803215a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 803215e:	e781      	b.n	8032064 <__kernel_rem_pio2f+0x170>
 8032160:	f104 3cff 	add.w	ip, r4, #4294967295
 8032164:	aa08      	add	r2, sp, #32
 8032166:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 803216a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 803216e:	e7f3      	b.n	8032158 <__kernel_rem_pio2f+0x264>
 8032170:	a908      	add	r1, sp, #32
 8032172:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8032176:	3801      	subs	r0, #1
 8032178:	430a      	orrs	r2, r1
 803217a:	e7ab      	b.n	80320d4 <__kernel_rem_pio2f+0x1e0>
 803217c:	3201      	adds	r2, #1
 803217e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8032182:	2e00      	cmp	r6, #0
 8032184:	d0fa      	beq.n	803217c <__kernel_rem_pio2f+0x288>
 8032186:	9905      	ldr	r1, [sp, #20]
 8032188:	18e6      	adds	r6, r4, r3
 803218a:	f104 0c01 	add.w	ip, r4, #1
 803218e:	4422      	add	r2, r4
 8032190:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8032194:	eb0d 0001 	add.w	r0, sp, r1
 8032198:	a91c      	add	r1, sp, #112	@ 0x70
 803219a:	384c      	subs	r0, #76	@ 0x4c
 803219c:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80321a0:	4562      	cmp	r2, ip
 80321a2:	da04      	bge.n	80321ae <__kernel_rem_pio2f+0x2ba>
 80321a4:	4614      	mov	r4, r2
 80321a6:	e70e      	b.n	8031fc6 <__kernel_rem_pio2f+0xd2>
 80321a8:	9804      	ldr	r0, [sp, #16]
 80321aa:	2201      	movs	r2, #1
 80321ac:	e7e7      	b.n	803217e <__kernel_rem_pio2f+0x28a>
 80321ae:	9903      	ldr	r1, [sp, #12]
 80321b0:	2400      	movs	r4, #0
 80321b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80321b6:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80321ba:	ee07 1a90 	vmov	s15, r1
 80321be:	9105      	str	r1, [sp, #20]
 80321c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80321c4:	ece6 7a01 	vstmia	r6!, {s15}
 80321c8:	46b1      	mov	r9, r6
 80321ca:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80321fc <__kernel_rem_pio2f+0x308>
 80321ce:	455c      	cmp	r4, fp
 80321d0:	dd04      	ble.n	80321dc <__kernel_rem_pio2f+0x2e8>
 80321d2:	f10c 0c01 	add.w	ip, ip, #1
 80321d6:	ece0 7a01 	vstmia	r0!, {s15}
 80321da:	e7e1      	b.n	80321a0 <__kernel_rem_pio2f+0x2ac>
 80321dc:	ecfe 6a01 	vldmia	lr!, {s13}
 80321e0:	3401      	adds	r4, #1
 80321e2:	ed39 7a01 	vldmdb	r9!, {s14}
 80321e6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80321ea:	e7f0      	b.n	80321ce <__kernel_rem_pio2f+0x2da>
 80321ec:	08038610 	.word	0x08038610
 80321f0:	080385e4 	.word	0x080385e4
 80321f4:	43800000 	.word	0x43800000
 80321f8:	3b800000 	.word	0x3b800000
 80321fc:	00000000 	.word	0x00000000
 8032200:	9b02      	ldr	r3, [sp, #8]
 8032202:	eeb0 0a48 	vmov.f32	s0, s16
 8032206:	eba3 0008 	sub.w	r0, r3, r8
 803220a:	f000 f8e7 	bl	80323dc <scalbnf>
 803220e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 80321f4 <__kernel_rem_pio2f+0x300>
 8032212:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8032216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803221a:	db19      	blt.n	8032250 <__kernel_rem_pio2f+0x35c>
 803221c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 80321f8 <__kernel_rem_pio2f+0x304>
 8032220:	aa08      	add	r2, sp, #32
 8032222:	3508      	adds	r5, #8
 8032224:	ee60 7a27 	vmul.f32	s15, s0, s15
 8032228:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803222c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032230:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8032234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8032238:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 803223c:	ee10 3a10 	vmov	r3, s0
 8032240:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8032244:	3401      	adds	r4, #1
 8032246:	ee17 3a90 	vmov	r3, s15
 803224a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 803224e:	e74c      	b.n	80320ea <__kernel_rem_pio2f+0x1f6>
 8032250:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032254:	aa08      	add	r2, sp, #32
 8032256:	ee10 3a10 	vmov	r3, s0
 803225a:	e7f6      	b.n	803224a <__kernel_rem_pio2f+0x356>
 803225c:	a808      	add	r0, sp, #32
 803225e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8032262:	3b01      	subs	r3, #1
 8032264:	ee07 0a90 	vmov	s15, r0
 8032268:	9001      	str	r0, [sp, #4]
 803226a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803226e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8032272:	ee20 0a07 	vmul.f32	s0, s0, s14
 8032276:	ed62 7a01 	vstmdb	r2!, {s15}
 803227a:	e743      	b.n	8032104 <__kernel_rem_pio2f+0x210>
 803227c:	ecfc 6a01 	vldmia	ip!, {s13}
 8032280:	3001      	adds	r0, #1
 8032282:	ecb5 7a01 	vldmia	r5!, {s14}
 8032286:	eee6 7a87 	vfma.f32	s15, s13, s14
 803228a:	4550      	cmp	r0, sl
 803228c:	dc01      	bgt.n	8032292 <__kernel_rem_pio2f+0x39e>
 803228e:	4282      	cmp	r2, r0
 8032290:	daf4      	bge.n	803227c <__kernel_rem_pio2f+0x388>
 8032292:	a858      	add	r0, sp, #352	@ 0x160
 8032294:	3b01      	subs	r3, #1
 8032296:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 803229a:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 803229e:	e735      	b.n	803210c <__kernel_rem_pio2f+0x218>
 80322a0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80322a2:	2b02      	cmp	r3, #2
 80322a4:	dc09      	bgt.n	80322ba <__kernel_rem_pio2f+0x3c6>
 80322a6:	2b00      	cmp	r3, #0
 80322a8:	dc2b      	bgt.n	8032302 <__kernel_rem_pio2f+0x40e>
 80322aa:	d044      	beq.n	8032336 <__kernel_rem_pio2f+0x442>
 80322ac:	f009 0007 	and.w	r0, r9, #7
 80322b0:	b059      	add	sp, #356	@ 0x164
 80322b2:	ecbd 8b04 	vpop	{d8-d9}
 80322b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80322ba:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80322bc:	2b03      	cmp	r3, #3
 80322be:	d1f5      	bne.n	80322ac <__kernel_rem_pio2f+0x3b8>
 80322c0:	aa30      	add	r2, sp, #192	@ 0xc0
 80322c2:	1f0b      	subs	r3, r1, #4
 80322c4:	4620      	mov	r0, r4
 80322c6:	4413      	add	r3, r2
 80322c8:	461a      	mov	r2, r3
 80322ca:	2800      	cmp	r0, #0
 80322cc:	f1a2 0204 	sub.w	r2, r2, #4
 80322d0:	dc52      	bgt.n	8032378 <__kernel_rem_pio2f+0x484>
 80322d2:	4622      	mov	r2, r4
 80322d4:	2a01      	cmp	r2, #1
 80322d6:	f1a3 0304 	sub.w	r3, r3, #4
 80322da:	dc5d      	bgt.n	8032398 <__kernel_rem_pio2f+0x4a4>
 80322dc:	ab30      	add	r3, sp, #192	@ 0xc0
 80322de:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 80321fc <__kernel_rem_pio2f+0x308>
 80322e2:	440b      	add	r3, r1
 80322e4:	2c01      	cmp	r4, #1
 80322e6:	dc67      	bgt.n	80323b8 <__kernel_rem_pio2f+0x4c4>
 80322e8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80322ec:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 80322f0:	2e00      	cmp	r6, #0
 80322f2:	d167      	bne.n	80323c4 <__kernel_rem_pio2f+0x4d0>
 80322f4:	edc7 6a00 	vstr	s13, [r7]
 80322f8:	ed87 7a01 	vstr	s14, [r7, #4]
 80322fc:	edc7 7a02 	vstr	s15, [r7, #8]
 8032300:	e7d4      	b.n	80322ac <__kernel_rem_pio2f+0x3b8>
 8032302:	ab30      	add	r3, sp, #192	@ 0xc0
 8032304:	4622      	mov	r2, r4
 8032306:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 80321fc <__kernel_rem_pio2f+0x308>
 803230a:	440b      	add	r3, r1
 803230c:	2a00      	cmp	r2, #0
 803230e:	da24      	bge.n	803235a <__kernel_rem_pio2f+0x466>
 8032310:	b34e      	cbz	r6, 8032366 <__kernel_rem_pio2f+0x472>
 8032312:	eef1 7a47 	vneg.f32	s15, s14
 8032316:	edc7 7a00 	vstr	s15, [r7]
 803231a:	aa31      	add	r2, sp, #196	@ 0xc4
 803231c:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8032320:	2301      	movs	r3, #1
 8032322:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032326:	429c      	cmp	r4, r3
 8032328:	da20      	bge.n	803236c <__kernel_rem_pio2f+0x478>
 803232a:	b10e      	cbz	r6, 8032330 <__kernel_rem_pio2f+0x43c>
 803232c:	eef1 7a67 	vneg.f32	s15, s15
 8032330:	edc7 7a01 	vstr	s15, [r7, #4]
 8032334:	e7ba      	b.n	80322ac <__kernel_rem_pio2f+0x3b8>
 8032336:	ab30      	add	r3, sp, #192	@ 0xc0
 8032338:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 80321fc <__kernel_rem_pio2f+0x308>
 803233c:	440b      	add	r3, r1
 803233e:	2c00      	cmp	r4, #0
 8032340:	da05      	bge.n	803234e <__kernel_rem_pio2f+0x45a>
 8032342:	b10e      	cbz	r6, 8032348 <__kernel_rem_pio2f+0x454>
 8032344:	eef1 7a67 	vneg.f32	s15, s15
 8032348:	edc7 7a00 	vstr	s15, [r7]
 803234c:	e7ae      	b.n	80322ac <__kernel_rem_pio2f+0x3b8>
 803234e:	ed33 7a01 	vldmdb	r3!, {s14}
 8032352:	3c01      	subs	r4, #1
 8032354:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032358:	e7f1      	b.n	803233e <__kernel_rem_pio2f+0x44a>
 803235a:	ed73 7a01 	vldmdb	r3!, {s15}
 803235e:	3a01      	subs	r2, #1
 8032360:	ee37 7a27 	vadd.f32	s14, s14, s15
 8032364:	e7d2      	b.n	803230c <__kernel_rem_pio2f+0x418>
 8032366:	eef0 7a47 	vmov.f32	s15, s14
 803236a:	e7d4      	b.n	8032316 <__kernel_rem_pio2f+0x422>
 803236c:	ecb2 7a01 	vldmia	r2!, {s14}
 8032370:	3301      	adds	r3, #1
 8032372:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032376:	e7d6      	b.n	8032326 <__kernel_rem_pio2f+0x432>
 8032378:	edd2 7a00 	vldr	s15, [r2]
 803237c:	3801      	subs	r0, #1
 803237e:	edd2 6a01 	vldr	s13, [r2, #4]
 8032382:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8032386:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803238a:	ed82 7a00 	vstr	s14, [r2]
 803238e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8032392:	edc2 7a01 	vstr	s15, [r2, #4]
 8032396:	e798      	b.n	80322ca <__kernel_rem_pio2f+0x3d6>
 8032398:	edd3 7a00 	vldr	s15, [r3]
 803239c:	3a01      	subs	r2, #1
 803239e:	edd3 6a01 	vldr	s13, [r3, #4]
 80323a2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80323a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80323aa:	ed83 7a00 	vstr	s14, [r3]
 80323ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80323b2:	edc3 7a01 	vstr	s15, [r3, #4]
 80323b6:	e78d      	b.n	80322d4 <__kernel_rem_pio2f+0x3e0>
 80323b8:	ed33 7a01 	vldmdb	r3!, {s14}
 80323bc:	3c01      	subs	r4, #1
 80323be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80323c2:	e78f      	b.n	80322e4 <__kernel_rem_pio2f+0x3f0>
 80323c4:	eef1 6a66 	vneg.f32	s13, s13
 80323c8:	eeb1 7a47 	vneg.f32	s14, s14
 80323cc:	eef1 7a67 	vneg.f32	s15, s15
 80323d0:	edc7 6a00 	vstr	s13, [r7]
 80323d4:	ed87 7a01 	vstr	s14, [r7, #4]
 80323d8:	e790      	b.n	80322fc <__kernel_rem_pio2f+0x408>
 80323da:	bf00      	nop

080323dc <scalbnf>:
 80323dc:	ee10 3a10 	vmov	r3, s0
 80323e0:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80323e4:	d02a      	beq.n	803243c <scalbnf+0x60>
 80323e6:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 80323ea:	d302      	bcc.n	80323f2 <scalbnf+0x16>
 80323ec:	ee30 0a00 	vadd.f32	s0, s0, s0
 80323f0:	4770      	bx	lr
 80323f2:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 80323f6:	d122      	bne.n	803243e <scalbnf+0x62>
 80323f8:	4b23      	ldr	r3, [pc, #140]	@ (8032488 <scalbnf+0xac>)
 80323fa:	eddf 7a24 	vldr	s15, [pc, #144]	@ 803248c <scalbnf+0xb0>
 80323fe:	4298      	cmp	r0, r3
 8032400:	ee20 0a27 	vmul.f32	s0, s0, s15
 8032404:	db16      	blt.n	8032434 <scalbnf+0x58>
 8032406:	ee10 3a10 	vmov	r3, s0
 803240a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 803240e:	3a19      	subs	r2, #25
 8032410:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8032414:	4288      	cmp	r0, r1
 8032416:	dd14      	ble.n	8032442 <scalbnf+0x66>
 8032418:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8032490 <scalbnf+0xb4>
 803241c:	ee10 3a10 	vmov	r3, s0
 8032420:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 8032494 <scalbnf+0xb8>
 8032424:	eeb0 7a67 	vmov.f32	s14, s15
 8032428:	2b00      	cmp	r3, #0
 803242a:	fe67 7aa6 	vselge.f32	s15, s15, s13
 803242e:	ee27 0a87 	vmul.f32	s0, s15, s14
 8032432:	4770      	bx	lr
 8032434:	eddf 7a18 	vldr	s15, [pc, #96]	@ 8032498 <scalbnf+0xbc>
 8032438:	ee27 0a80 	vmul.f32	s0, s15, s0
 803243c:	4770      	bx	lr
 803243e:	0dd2      	lsrs	r2, r2, #23
 8032440:	e7e6      	b.n	8032410 <scalbnf+0x34>
 8032442:	4410      	add	r0, r2
 8032444:	28fe      	cmp	r0, #254	@ 0xfe
 8032446:	dce7      	bgt.n	8032418 <scalbnf+0x3c>
 8032448:	2800      	cmp	r0, #0
 803244a:	dd06      	ble.n	803245a <scalbnf+0x7e>
 803244c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8032450:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032454:	ee00 3a10 	vmov	s0, r3
 8032458:	4770      	bx	lr
 803245a:	f110 0f16 	cmn.w	r0, #22
 803245e:	da09      	bge.n	8032474 <scalbnf+0x98>
 8032460:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8032498 <scalbnf+0xbc>
 8032464:	ee10 3a10 	vmov	r3, s0
 8032468:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 803249c <scalbnf+0xc0>
 803246c:	eeb0 7a67 	vmov.f32	s14, s15
 8032470:	2b00      	cmp	r3, #0
 8032472:	e7da      	b.n	803242a <scalbnf+0x4e>
 8032474:	3019      	adds	r0, #25
 8032476:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 803247a:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 80324a0 <scalbnf+0xc4>
 803247e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032482:	ee07 3a90 	vmov	s15, r3
 8032486:	e7d7      	b.n	8032438 <scalbnf+0x5c>
 8032488:	ffff3cb0 	.word	0xffff3cb0
 803248c:	4c000000 	.word	0x4c000000
 8032490:	7149f2ca 	.word	0x7149f2ca
 8032494:	f149f2ca 	.word	0xf149f2ca
 8032498:	0da24260 	.word	0x0da24260
 803249c:	8da24260 	.word	0x8da24260
 80324a0:	33000000 	.word	0x33000000

080324a4 <floorf>:
 80324a4:	febb 0a40 	vrintm.f32	s0, s0
 80324a8:	4770      	bx	lr

080324aa <abort>:
 80324aa:	2006      	movs	r0, #6
 80324ac:	b508      	push	{r3, lr}
 80324ae:	f000 fa4d 	bl	803294c <raise>
 80324b2:	2001      	movs	r0, #1
 80324b4:	f7ce fd02 	bl	8000ebc <_exit>

080324b8 <__assert_func>:
 80324b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80324ba:	4614      	mov	r4, r2
 80324bc:	461a      	mov	r2, r3
 80324be:	4b09      	ldr	r3, [pc, #36]	@ (80324e4 <__assert_func+0x2c>)
 80324c0:	4605      	mov	r5, r0
 80324c2:	681b      	ldr	r3, [r3, #0]
 80324c4:	68d8      	ldr	r0, [r3, #12]
 80324c6:	b954      	cbnz	r4, 80324de <__assert_func+0x26>
 80324c8:	4b07      	ldr	r3, [pc, #28]	@ (80324e8 <__assert_func+0x30>)
 80324ca:	461c      	mov	r4, r3
 80324cc:	9100      	str	r1, [sp, #0]
 80324ce:	4907      	ldr	r1, [pc, #28]	@ (80324ec <__assert_func+0x34>)
 80324d0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80324d4:	462b      	mov	r3, r5
 80324d6:	f000 f983 	bl	80327e0 <fiprintf>
 80324da:	f7ff ffe6 	bl	80324aa <abort>
 80324de:	4b04      	ldr	r3, [pc, #16]	@ (80324f0 <__assert_func+0x38>)
 80324e0:	e7f4      	b.n	80324cc <__assert_func+0x14>
 80324e2:	bf00      	nop
 80324e4:	20000254 	.word	0x20000254
 80324e8:	08038657 	.word	0x08038657
 80324ec:	08038629 	.word	0x08038629
 80324f0:	0803861c 	.word	0x0803861c

080324f4 <atexit>:
 80324f4:	2300      	movs	r3, #0
 80324f6:	4601      	mov	r1, r0
 80324f8:	461a      	mov	r2, r3
 80324fa:	4618      	mov	r0, r3
 80324fc:	f000 bad2 	b.w	8032aa4 <__register_exitproc>

08032500 <malloc>:
 8032500:	4b02      	ldr	r3, [pc, #8]	@ (803250c <malloc+0xc>)
 8032502:	4601      	mov	r1, r0
 8032504:	6818      	ldr	r0, [r3, #0]
 8032506:	f000 b82d 	b.w	8032564 <_malloc_r>
 803250a:	bf00      	nop
 803250c:	20000254 	.word	0x20000254

08032510 <free>:
 8032510:	4b02      	ldr	r3, [pc, #8]	@ (803251c <free+0xc>)
 8032512:	4601      	mov	r1, r0
 8032514:	6818      	ldr	r0, [r3, #0]
 8032516:	f000 bb23 	b.w	8032b60 <_free_r>
 803251a:	bf00      	nop
 803251c:	20000254 	.word	0x20000254

08032520 <sbrk_aligned>:
 8032520:	b570      	push	{r4, r5, r6, lr}
 8032522:	4e0f      	ldr	r6, [pc, #60]	@ (8032560 <sbrk_aligned+0x40>)
 8032524:	460c      	mov	r4, r1
 8032526:	4605      	mov	r5, r0
 8032528:	6831      	ldr	r1, [r6, #0]
 803252a:	b911      	cbnz	r1, 8032532 <sbrk_aligned+0x12>
 803252c:	f000 fa5e 	bl	80329ec <_sbrk_r>
 8032530:	6030      	str	r0, [r6, #0]
 8032532:	4621      	mov	r1, r4
 8032534:	4628      	mov	r0, r5
 8032536:	f000 fa59 	bl	80329ec <_sbrk_r>
 803253a:	1c43      	adds	r3, r0, #1
 803253c:	d103      	bne.n	8032546 <sbrk_aligned+0x26>
 803253e:	f04f 34ff 	mov.w	r4, #4294967295
 8032542:	4620      	mov	r0, r4
 8032544:	bd70      	pop	{r4, r5, r6, pc}
 8032546:	1cc4      	adds	r4, r0, #3
 8032548:	f024 0403 	bic.w	r4, r4, #3
 803254c:	42a0      	cmp	r0, r4
 803254e:	d0f8      	beq.n	8032542 <sbrk_aligned+0x22>
 8032550:	1a21      	subs	r1, r4, r0
 8032552:	4628      	mov	r0, r5
 8032554:	f000 fa4a 	bl	80329ec <_sbrk_r>
 8032558:	3001      	adds	r0, #1
 803255a:	d1f2      	bne.n	8032542 <sbrk_aligned+0x22>
 803255c:	e7ef      	b.n	803253e <sbrk_aligned+0x1e>
 803255e:	bf00      	nop
 8032560:	200833fc 	.word	0x200833fc

08032564 <_malloc_r>:
 8032564:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032568:	1ccd      	adds	r5, r1, #3
 803256a:	4606      	mov	r6, r0
 803256c:	f025 0503 	bic.w	r5, r5, #3
 8032570:	3508      	adds	r5, #8
 8032572:	2d0c      	cmp	r5, #12
 8032574:	bf38      	it	cc
 8032576:	250c      	movcc	r5, #12
 8032578:	2d00      	cmp	r5, #0
 803257a:	db01      	blt.n	8032580 <_malloc_r+0x1c>
 803257c:	42a9      	cmp	r1, r5
 803257e:	d904      	bls.n	803258a <_malloc_r+0x26>
 8032580:	230c      	movs	r3, #12
 8032582:	6033      	str	r3, [r6, #0]
 8032584:	2000      	movs	r0, #0
 8032586:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803258a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8032660 <_malloc_r+0xfc>
 803258e:	f000 f869 	bl	8032664 <__malloc_lock>
 8032592:	f8d8 3000 	ldr.w	r3, [r8]
 8032596:	461c      	mov	r4, r3
 8032598:	bb44      	cbnz	r4, 80325ec <_malloc_r+0x88>
 803259a:	4629      	mov	r1, r5
 803259c:	4630      	mov	r0, r6
 803259e:	f7ff ffbf 	bl	8032520 <sbrk_aligned>
 80325a2:	1c43      	adds	r3, r0, #1
 80325a4:	4604      	mov	r4, r0
 80325a6:	d158      	bne.n	803265a <_malloc_r+0xf6>
 80325a8:	f8d8 4000 	ldr.w	r4, [r8]
 80325ac:	4627      	mov	r7, r4
 80325ae:	2f00      	cmp	r7, #0
 80325b0:	d143      	bne.n	803263a <_malloc_r+0xd6>
 80325b2:	2c00      	cmp	r4, #0
 80325b4:	d04b      	beq.n	803264e <_malloc_r+0xea>
 80325b6:	6823      	ldr	r3, [r4, #0]
 80325b8:	4639      	mov	r1, r7
 80325ba:	4630      	mov	r0, r6
 80325bc:	eb04 0903 	add.w	r9, r4, r3
 80325c0:	f000 fa14 	bl	80329ec <_sbrk_r>
 80325c4:	4581      	cmp	r9, r0
 80325c6:	d142      	bne.n	803264e <_malloc_r+0xea>
 80325c8:	6821      	ldr	r1, [r4, #0]
 80325ca:	4630      	mov	r0, r6
 80325cc:	1a6d      	subs	r5, r5, r1
 80325ce:	4629      	mov	r1, r5
 80325d0:	f7ff ffa6 	bl	8032520 <sbrk_aligned>
 80325d4:	3001      	adds	r0, #1
 80325d6:	d03a      	beq.n	803264e <_malloc_r+0xea>
 80325d8:	6823      	ldr	r3, [r4, #0]
 80325da:	442b      	add	r3, r5
 80325dc:	6023      	str	r3, [r4, #0]
 80325de:	f8d8 3000 	ldr.w	r3, [r8]
 80325e2:	685a      	ldr	r2, [r3, #4]
 80325e4:	bb62      	cbnz	r2, 8032640 <_malloc_r+0xdc>
 80325e6:	f8c8 7000 	str.w	r7, [r8]
 80325ea:	e00f      	b.n	803260c <_malloc_r+0xa8>
 80325ec:	6822      	ldr	r2, [r4, #0]
 80325ee:	1b52      	subs	r2, r2, r5
 80325f0:	d420      	bmi.n	8032634 <_malloc_r+0xd0>
 80325f2:	2a0b      	cmp	r2, #11
 80325f4:	d917      	bls.n	8032626 <_malloc_r+0xc2>
 80325f6:	1961      	adds	r1, r4, r5
 80325f8:	42a3      	cmp	r3, r4
 80325fa:	6025      	str	r5, [r4, #0]
 80325fc:	bf18      	it	ne
 80325fe:	6059      	strne	r1, [r3, #4]
 8032600:	6863      	ldr	r3, [r4, #4]
 8032602:	bf08      	it	eq
 8032604:	f8c8 1000 	streq.w	r1, [r8]
 8032608:	5162      	str	r2, [r4, r5]
 803260a:	604b      	str	r3, [r1, #4]
 803260c:	4630      	mov	r0, r6
 803260e:	f000 f82f 	bl	8032670 <__malloc_unlock>
 8032612:	f104 000b 	add.w	r0, r4, #11
 8032616:	1d23      	adds	r3, r4, #4
 8032618:	f020 0007 	bic.w	r0, r0, #7
 803261c:	1ac2      	subs	r2, r0, r3
 803261e:	bf1c      	itt	ne
 8032620:	1a1b      	subne	r3, r3, r0
 8032622:	50a3      	strne	r3, [r4, r2]
 8032624:	e7af      	b.n	8032586 <_malloc_r+0x22>
 8032626:	6862      	ldr	r2, [r4, #4]
 8032628:	42a3      	cmp	r3, r4
 803262a:	bf0c      	ite	eq
 803262c:	f8c8 2000 	streq.w	r2, [r8]
 8032630:	605a      	strne	r2, [r3, #4]
 8032632:	e7eb      	b.n	803260c <_malloc_r+0xa8>
 8032634:	4623      	mov	r3, r4
 8032636:	6864      	ldr	r4, [r4, #4]
 8032638:	e7ae      	b.n	8032598 <_malloc_r+0x34>
 803263a:	463c      	mov	r4, r7
 803263c:	687f      	ldr	r7, [r7, #4]
 803263e:	e7b6      	b.n	80325ae <_malloc_r+0x4a>
 8032640:	461a      	mov	r2, r3
 8032642:	685b      	ldr	r3, [r3, #4]
 8032644:	42a3      	cmp	r3, r4
 8032646:	d1fb      	bne.n	8032640 <_malloc_r+0xdc>
 8032648:	2300      	movs	r3, #0
 803264a:	6053      	str	r3, [r2, #4]
 803264c:	e7de      	b.n	803260c <_malloc_r+0xa8>
 803264e:	230c      	movs	r3, #12
 8032650:	4630      	mov	r0, r6
 8032652:	6033      	str	r3, [r6, #0]
 8032654:	f000 f80c 	bl	8032670 <__malloc_unlock>
 8032658:	e794      	b.n	8032584 <_malloc_r+0x20>
 803265a:	6005      	str	r5, [r0, #0]
 803265c:	e7d6      	b.n	803260c <_malloc_r+0xa8>
 803265e:	bf00      	nop
 8032660:	20083400 	.word	0x20083400

08032664 <__malloc_lock>:
 8032664:	4801      	ldr	r0, [pc, #4]	@ (803266c <__malloc_lock+0x8>)
 8032666:	f000 ba0e 	b.w	8032a86 <__retarget_lock_acquire_recursive>
 803266a:	bf00      	nop
 803266c:	20083544 	.word	0x20083544

08032670 <__malloc_unlock>:
 8032670:	4801      	ldr	r0, [pc, #4]	@ (8032678 <__malloc_unlock+0x8>)
 8032672:	f000 ba09 	b.w	8032a88 <__retarget_lock_release_recursive>
 8032676:	bf00      	nop
 8032678:	20083544 	.word	0x20083544

0803267c <__cxa_atexit>:
 803267c:	b510      	push	{r4, lr}
 803267e:	4604      	mov	r4, r0
 8032680:	4804      	ldr	r0, [pc, #16]	@ (8032694 <__cxa_atexit+0x18>)
 8032682:	4613      	mov	r3, r2
 8032684:	b120      	cbz	r0, 8032690 <__cxa_atexit+0x14>
 8032686:	460a      	mov	r2, r1
 8032688:	2002      	movs	r0, #2
 803268a:	4621      	mov	r1, r4
 803268c:	f000 fa0a 	bl	8032aa4 <__register_exitproc>
 8032690:	bd10      	pop	{r4, pc}
 8032692:	bf00      	nop
 8032694:	08032aa5 	.word	0x08032aa5

08032698 <std>:
 8032698:	2300      	movs	r3, #0
 803269a:	b510      	push	{r4, lr}
 803269c:	4604      	mov	r4, r0
 803269e:	6083      	str	r3, [r0, #8]
 80326a0:	8181      	strh	r1, [r0, #12]
 80326a2:	4619      	mov	r1, r3
 80326a4:	6643      	str	r3, [r0, #100]	@ 0x64
 80326a6:	81c2      	strh	r2, [r0, #14]
 80326a8:	2208      	movs	r2, #8
 80326aa:	6183      	str	r3, [r0, #24]
 80326ac:	e9c0 3300 	strd	r3, r3, [r0]
 80326b0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80326b4:	305c      	adds	r0, #92	@ 0x5c
 80326b6:	f000 f906 	bl	80328c6 <memset>
 80326ba:	4b0d      	ldr	r3, [pc, #52]	@ (80326f0 <std+0x58>)
 80326bc:	6224      	str	r4, [r4, #32]
 80326be:	6263      	str	r3, [r4, #36]	@ 0x24
 80326c0:	4b0c      	ldr	r3, [pc, #48]	@ (80326f4 <std+0x5c>)
 80326c2:	62a3      	str	r3, [r4, #40]	@ 0x28
 80326c4:	4b0c      	ldr	r3, [pc, #48]	@ (80326f8 <std+0x60>)
 80326c6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80326c8:	4b0c      	ldr	r3, [pc, #48]	@ (80326fc <std+0x64>)
 80326ca:	6323      	str	r3, [r4, #48]	@ 0x30
 80326cc:	4b0c      	ldr	r3, [pc, #48]	@ (8032700 <std+0x68>)
 80326ce:	429c      	cmp	r4, r3
 80326d0:	d006      	beq.n	80326e0 <std+0x48>
 80326d2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80326d6:	4294      	cmp	r4, r2
 80326d8:	d002      	beq.n	80326e0 <std+0x48>
 80326da:	33d0      	adds	r3, #208	@ 0xd0
 80326dc:	429c      	cmp	r4, r3
 80326de:	d105      	bne.n	80326ec <std+0x54>
 80326e0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80326e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80326e8:	f000 b9cc 	b.w	8032a84 <__retarget_lock_init_recursive>
 80326ec:	bd10      	pop	{r4, pc}
 80326ee:	bf00      	nop
 80326f0:	08032841 	.word	0x08032841
 80326f4:	08032863 	.word	0x08032863
 80326f8:	0803289b 	.word	0x0803289b
 80326fc:	080328bf 	.word	0x080328bf
 8032700:	20083404 	.word	0x20083404

08032704 <stdio_exit_handler>:
 8032704:	4a02      	ldr	r2, [pc, #8]	@ (8032710 <stdio_exit_handler+0xc>)
 8032706:	4903      	ldr	r1, [pc, #12]	@ (8032714 <stdio_exit_handler+0x10>)
 8032708:	4803      	ldr	r0, [pc, #12]	@ (8032718 <stdio_exit_handler+0x14>)
 803270a:	f000 b87b 	b.w	8032804 <_fwalk_sglue>
 803270e:	bf00      	nop
 8032710:	20000248 	.word	0x20000248
 8032714:	080332a5 	.word	0x080332a5
 8032718:	20000258 	.word	0x20000258

0803271c <cleanup_stdio>:
 803271c:	6841      	ldr	r1, [r0, #4]
 803271e:	4b0c      	ldr	r3, [pc, #48]	@ (8032750 <cleanup_stdio+0x34>)
 8032720:	4299      	cmp	r1, r3
 8032722:	b510      	push	{r4, lr}
 8032724:	4604      	mov	r4, r0
 8032726:	d001      	beq.n	803272c <cleanup_stdio+0x10>
 8032728:	f000 fdbc 	bl	80332a4 <_fflush_r>
 803272c:	68a1      	ldr	r1, [r4, #8]
 803272e:	4b09      	ldr	r3, [pc, #36]	@ (8032754 <cleanup_stdio+0x38>)
 8032730:	4299      	cmp	r1, r3
 8032732:	d002      	beq.n	803273a <cleanup_stdio+0x1e>
 8032734:	4620      	mov	r0, r4
 8032736:	f000 fdb5 	bl	80332a4 <_fflush_r>
 803273a:	68e1      	ldr	r1, [r4, #12]
 803273c:	4b06      	ldr	r3, [pc, #24]	@ (8032758 <cleanup_stdio+0x3c>)
 803273e:	4299      	cmp	r1, r3
 8032740:	d004      	beq.n	803274c <cleanup_stdio+0x30>
 8032742:	4620      	mov	r0, r4
 8032744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032748:	f000 bdac 	b.w	80332a4 <_fflush_r>
 803274c:	bd10      	pop	{r4, pc}
 803274e:	bf00      	nop
 8032750:	20083404 	.word	0x20083404
 8032754:	2008346c 	.word	0x2008346c
 8032758:	200834d4 	.word	0x200834d4

0803275c <global_stdio_init.part.0>:
 803275c:	b510      	push	{r4, lr}
 803275e:	4b0b      	ldr	r3, [pc, #44]	@ (803278c <global_stdio_init.part.0+0x30>)
 8032760:	2104      	movs	r1, #4
 8032762:	4c0b      	ldr	r4, [pc, #44]	@ (8032790 <global_stdio_init.part.0+0x34>)
 8032764:	4a0b      	ldr	r2, [pc, #44]	@ (8032794 <global_stdio_init.part.0+0x38>)
 8032766:	4620      	mov	r0, r4
 8032768:	601a      	str	r2, [r3, #0]
 803276a:	2200      	movs	r2, #0
 803276c:	f7ff ff94 	bl	8032698 <std>
 8032770:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8032774:	2201      	movs	r2, #1
 8032776:	2109      	movs	r1, #9
 8032778:	f7ff ff8e 	bl	8032698 <std>
 803277c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8032780:	2202      	movs	r2, #2
 8032782:	2112      	movs	r1, #18
 8032784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032788:	f7ff bf86 	b.w	8032698 <std>
 803278c:	2008353c 	.word	0x2008353c
 8032790:	20083404 	.word	0x20083404
 8032794:	08032705 	.word	0x08032705

08032798 <__sfp_lock_acquire>:
 8032798:	4801      	ldr	r0, [pc, #4]	@ (80327a0 <__sfp_lock_acquire+0x8>)
 803279a:	f000 b974 	b.w	8032a86 <__retarget_lock_acquire_recursive>
 803279e:	bf00      	nop
 80327a0:	20083546 	.word	0x20083546

080327a4 <__sfp_lock_release>:
 80327a4:	4801      	ldr	r0, [pc, #4]	@ (80327ac <__sfp_lock_release+0x8>)
 80327a6:	f000 b96f 	b.w	8032a88 <__retarget_lock_release_recursive>
 80327aa:	bf00      	nop
 80327ac:	20083546 	.word	0x20083546

080327b0 <__sinit>:
 80327b0:	b510      	push	{r4, lr}
 80327b2:	4604      	mov	r4, r0
 80327b4:	f7ff fff0 	bl	8032798 <__sfp_lock_acquire>
 80327b8:	6a23      	ldr	r3, [r4, #32]
 80327ba:	b11b      	cbz	r3, 80327c4 <__sinit+0x14>
 80327bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80327c0:	f7ff bff0 	b.w	80327a4 <__sfp_lock_release>
 80327c4:	4b04      	ldr	r3, [pc, #16]	@ (80327d8 <__sinit+0x28>)
 80327c6:	6223      	str	r3, [r4, #32]
 80327c8:	4b04      	ldr	r3, [pc, #16]	@ (80327dc <__sinit+0x2c>)
 80327ca:	681b      	ldr	r3, [r3, #0]
 80327cc:	2b00      	cmp	r3, #0
 80327ce:	d1f5      	bne.n	80327bc <__sinit+0xc>
 80327d0:	f7ff ffc4 	bl	803275c <global_stdio_init.part.0>
 80327d4:	e7f2      	b.n	80327bc <__sinit+0xc>
 80327d6:	bf00      	nop
 80327d8:	0803271d 	.word	0x0803271d
 80327dc:	2008353c 	.word	0x2008353c

080327e0 <fiprintf>:
 80327e0:	b40e      	push	{r1, r2, r3}
 80327e2:	b503      	push	{r0, r1, lr}
 80327e4:	ab03      	add	r3, sp, #12
 80327e6:	4601      	mov	r1, r0
 80327e8:	4805      	ldr	r0, [pc, #20]	@ (8032800 <fiprintf+0x20>)
 80327ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80327ee:	6800      	ldr	r0, [r0, #0]
 80327f0:	9301      	str	r3, [sp, #4]
 80327f2:	f000 fa29 	bl	8032c48 <_vfiprintf_r>
 80327f6:	b002      	add	sp, #8
 80327f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80327fc:	b003      	add	sp, #12
 80327fe:	4770      	bx	lr
 8032800:	20000254 	.word	0x20000254

08032804 <_fwalk_sglue>:
 8032804:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032808:	4607      	mov	r7, r0
 803280a:	4688      	mov	r8, r1
 803280c:	4614      	mov	r4, r2
 803280e:	2600      	movs	r6, #0
 8032810:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8032814:	f1b9 0901 	subs.w	r9, r9, #1
 8032818:	d505      	bpl.n	8032826 <_fwalk_sglue+0x22>
 803281a:	6824      	ldr	r4, [r4, #0]
 803281c:	2c00      	cmp	r4, #0
 803281e:	d1f7      	bne.n	8032810 <_fwalk_sglue+0xc>
 8032820:	4630      	mov	r0, r6
 8032822:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032826:	89ab      	ldrh	r3, [r5, #12]
 8032828:	2b01      	cmp	r3, #1
 803282a:	d907      	bls.n	803283c <_fwalk_sglue+0x38>
 803282c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8032830:	3301      	adds	r3, #1
 8032832:	d003      	beq.n	803283c <_fwalk_sglue+0x38>
 8032834:	4629      	mov	r1, r5
 8032836:	4638      	mov	r0, r7
 8032838:	47c0      	blx	r8
 803283a:	4306      	orrs	r6, r0
 803283c:	3568      	adds	r5, #104	@ 0x68
 803283e:	e7e9      	b.n	8032814 <_fwalk_sglue+0x10>

08032840 <__sread>:
 8032840:	b510      	push	{r4, lr}
 8032842:	460c      	mov	r4, r1
 8032844:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032848:	f000 f8aa 	bl	80329a0 <_read_r>
 803284c:	2800      	cmp	r0, #0
 803284e:	bfab      	itete	ge
 8032850:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8032852:	89a3      	ldrhlt	r3, [r4, #12]
 8032854:	181b      	addge	r3, r3, r0
 8032856:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 803285a:	bfac      	ite	ge
 803285c:	6563      	strge	r3, [r4, #84]	@ 0x54
 803285e:	81a3      	strhlt	r3, [r4, #12]
 8032860:	bd10      	pop	{r4, pc}

08032862 <__swrite>:
 8032862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8032866:	461f      	mov	r7, r3
 8032868:	898b      	ldrh	r3, [r1, #12]
 803286a:	4605      	mov	r5, r0
 803286c:	460c      	mov	r4, r1
 803286e:	05db      	lsls	r3, r3, #23
 8032870:	4616      	mov	r6, r2
 8032872:	d505      	bpl.n	8032880 <__swrite+0x1e>
 8032874:	2302      	movs	r3, #2
 8032876:	2200      	movs	r2, #0
 8032878:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 803287c:	f000 f87e 	bl	803297c <_lseek_r>
 8032880:	89a3      	ldrh	r3, [r4, #12]
 8032882:	4632      	mov	r2, r6
 8032884:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8032888:	4628      	mov	r0, r5
 803288a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 803288e:	81a3      	strh	r3, [r4, #12]
 8032890:	463b      	mov	r3, r7
 8032892:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8032896:	f000 b8b9 	b.w	8032a0c <_write_r>

0803289a <__sseek>:
 803289a:	b510      	push	{r4, lr}
 803289c:	460c      	mov	r4, r1
 803289e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80328a2:	f000 f86b 	bl	803297c <_lseek_r>
 80328a6:	1c43      	adds	r3, r0, #1
 80328a8:	89a3      	ldrh	r3, [r4, #12]
 80328aa:	bf15      	itete	ne
 80328ac:	6560      	strne	r0, [r4, #84]	@ 0x54
 80328ae:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80328b2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80328b6:	81a3      	strheq	r3, [r4, #12]
 80328b8:	bf18      	it	ne
 80328ba:	81a3      	strhne	r3, [r4, #12]
 80328bc:	bd10      	pop	{r4, pc}

080328be <__sclose>:
 80328be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80328c2:	f000 b84b 	b.w	803295c <_close_r>

080328c6 <memset>:
 80328c6:	4402      	add	r2, r0
 80328c8:	4603      	mov	r3, r0
 80328ca:	4293      	cmp	r3, r2
 80328cc:	d100      	bne.n	80328d0 <memset+0xa>
 80328ce:	4770      	bx	lr
 80328d0:	f803 1b01 	strb.w	r1, [r3], #1
 80328d4:	e7f9      	b.n	80328ca <memset+0x4>

080328d6 <strncmp>:
 80328d6:	b510      	push	{r4, lr}
 80328d8:	b16a      	cbz	r2, 80328f6 <strncmp+0x20>
 80328da:	3901      	subs	r1, #1
 80328dc:	1884      	adds	r4, r0, r2
 80328de:	f810 2b01 	ldrb.w	r2, [r0], #1
 80328e2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80328e6:	429a      	cmp	r2, r3
 80328e8:	d103      	bne.n	80328f2 <strncmp+0x1c>
 80328ea:	42a0      	cmp	r0, r4
 80328ec:	d001      	beq.n	80328f2 <strncmp+0x1c>
 80328ee:	2a00      	cmp	r2, #0
 80328f0:	d1f5      	bne.n	80328de <strncmp+0x8>
 80328f2:	1ad0      	subs	r0, r2, r3
 80328f4:	bd10      	pop	{r4, pc}
 80328f6:	4610      	mov	r0, r2
 80328f8:	e7fc      	b.n	80328f4 <strncmp+0x1e>

080328fa <_raise_r>:
 80328fa:	291f      	cmp	r1, #31
 80328fc:	b538      	push	{r3, r4, r5, lr}
 80328fe:	4605      	mov	r5, r0
 8032900:	460c      	mov	r4, r1
 8032902:	d904      	bls.n	803290e <_raise_r+0x14>
 8032904:	2316      	movs	r3, #22
 8032906:	6003      	str	r3, [r0, #0]
 8032908:	f04f 30ff 	mov.w	r0, #4294967295
 803290c:	bd38      	pop	{r3, r4, r5, pc}
 803290e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8032910:	b112      	cbz	r2, 8032918 <_raise_r+0x1e>
 8032912:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8032916:	b94b      	cbnz	r3, 803292c <_raise_r+0x32>
 8032918:	4628      	mov	r0, r5
 803291a:	f000 f865 	bl	80329e8 <_getpid_r>
 803291e:	4622      	mov	r2, r4
 8032920:	4601      	mov	r1, r0
 8032922:	4628      	mov	r0, r5
 8032924:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032928:	f000 b84c 	b.w	80329c4 <_kill_r>
 803292c:	2b01      	cmp	r3, #1
 803292e:	d00a      	beq.n	8032946 <_raise_r+0x4c>
 8032930:	1c59      	adds	r1, r3, #1
 8032932:	d103      	bne.n	803293c <_raise_r+0x42>
 8032934:	2316      	movs	r3, #22
 8032936:	6003      	str	r3, [r0, #0]
 8032938:	2001      	movs	r0, #1
 803293a:	e7e7      	b.n	803290c <_raise_r+0x12>
 803293c:	2100      	movs	r1, #0
 803293e:	4620      	mov	r0, r4
 8032940:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8032944:	4798      	blx	r3
 8032946:	2000      	movs	r0, #0
 8032948:	e7e0      	b.n	803290c <_raise_r+0x12>
	...

0803294c <raise>:
 803294c:	4b02      	ldr	r3, [pc, #8]	@ (8032958 <raise+0xc>)
 803294e:	4601      	mov	r1, r0
 8032950:	6818      	ldr	r0, [r3, #0]
 8032952:	f7ff bfd2 	b.w	80328fa <_raise_r>
 8032956:	bf00      	nop
 8032958:	20000254 	.word	0x20000254

0803295c <_close_r>:
 803295c:	b538      	push	{r3, r4, r5, lr}
 803295e:	2300      	movs	r3, #0
 8032960:	4d05      	ldr	r5, [pc, #20]	@ (8032978 <_close_r+0x1c>)
 8032962:	4604      	mov	r4, r0
 8032964:	4608      	mov	r0, r1
 8032966:	602b      	str	r3, [r5, #0]
 8032968:	f7ce faca 	bl	8000f00 <_close>
 803296c:	1c43      	adds	r3, r0, #1
 803296e:	d102      	bne.n	8032976 <_close_r+0x1a>
 8032970:	682b      	ldr	r3, [r5, #0]
 8032972:	b103      	cbz	r3, 8032976 <_close_r+0x1a>
 8032974:	6023      	str	r3, [r4, #0]
 8032976:	bd38      	pop	{r3, r4, r5, pc}
 8032978:	20083540 	.word	0x20083540

0803297c <_lseek_r>:
 803297c:	b538      	push	{r3, r4, r5, lr}
 803297e:	4604      	mov	r4, r0
 8032980:	4d06      	ldr	r5, [pc, #24]	@ (803299c <_lseek_r+0x20>)
 8032982:	4608      	mov	r0, r1
 8032984:	4611      	mov	r1, r2
 8032986:	2200      	movs	r2, #0
 8032988:	602a      	str	r2, [r5, #0]
 803298a:	461a      	mov	r2, r3
 803298c:	f7ce fac2 	bl	8000f14 <_lseek>
 8032990:	1c43      	adds	r3, r0, #1
 8032992:	d102      	bne.n	803299a <_lseek_r+0x1e>
 8032994:	682b      	ldr	r3, [r5, #0]
 8032996:	b103      	cbz	r3, 803299a <_lseek_r+0x1e>
 8032998:	6023      	str	r3, [r4, #0]
 803299a:	bd38      	pop	{r3, r4, r5, pc}
 803299c:	20083540 	.word	0x20083540

080329a0 <_read_r>:
 80329a0:	b538      	push	{r3, r4, r5, lr}
 80329a2:	4604      	mov	r4, r0
 80329a4:	4d06      	ldr	r5, [pc, #24]	@ (80329c0 <_read_r+0x20>)
 80329a6:	4608      	mov	r0, r1
 80329a8:	4611      	mov	r1, r2
 80329aa:	2200      	movs	r2, #0
 80329ac:	602a      	str	r2, [r5, #0]
 80329ae:	461a      	mov	r2, r3
 80329b0:	f7ce fa8a 	bl	8000ec8 <_read>
 80329b4:	1c43      	adds	r3, r0, #1
 80329b6:	d102      	bne.n	80329be <_read_r+0x1e>
 80329b8:	682b      	ldr	r3, [r5, #0]
 80329ba:	b103      	cbz	r3, 80329be <_read_r+0x1e>
 80329bc:	6023      	str	r3, [r4, #0]
 80329be:	bd38      	pop	{r3, r4, r5, pc}
 80329c0:	20083540 	.word	0x20083540

080329c4 <_kill_r>:
 80329c4:	b538      	push	{r3, r4, r5, lr}
 80329c6:	2300      	movs	r3, #0
 80329c8:	4d06      	ldr	r5, [pc, #24]	@ (80329e4 <_kill_r+0x20>)
 80329ca:	4604      	mov	r4, r0
 80329cc:	4608      	mov	r0, r1
 80329ce:	4611      	mov	r1, r2
 80329d0:	602b      	str	r3, [r5, #0]
 80329d2:	f7ce fa6b 	bl	8000eac <_kill>
 80329d6:	1c43      	adds	r3, r0, #1
 80329d8:	d102      	bne.n	80329e0 <_kill_r+0x1c>
 80329da:	682b      	ldr	r3, [r5, #0]
 80329dc:	b103      	cbz	r3, 80329e0 <_kill_r+0x1c>
 80329de:	6023      	str	r3, [r4, #0]
 80329e0:	bd38      	pop	{r3, r4, r5, pc}
 80329e2:	bf00      	nop
 80329e4:	20083540 	.word	0x20083540

080329e8 <_getpid_r>:
 80329e8:	f7ce ba5e 	b.w	8000ea8 <_getpid>

080329ec <_sbrk_r>:
 80329ec:	b538      	push	{r3, r4, r5, lr}
 80329ee:	2300      	movs	r3, #0
 80329f0:	4d05      	ldr	r5, [pc, #20]	@ (8032a08 <_sbrk_r+0x1c>)
 80329f2:	4604      	mov	r4, r0
 80329f4:	4608      	mov	r0, r1
 80329f6:	602b      	str	r3, [r5, #0]
 80329f8:	f7ce fa8e 	bl	8000f18 <_sbrk>
 80329fc:	1c43      	adds	r3, r0, #1
 80329fe:	d102      	bne.n	8032a06 <_sbrk_r+0x1a>
 8032a00:	682b      	ldr	r3, [r5, #0]
 8032a02:	b103      	cbz	r3, 8032a06 <_sbrk_r+0x1a>
 8032a04:	6023      	str	r3, [r4, #0]
 8032a06:	bd38      	pop	{r3, r4, r5, pc}
 8032a08:	20083540 	.word	0x20083540

08032a0c <_write_r>:
 8032a0c:	b538      	push	{r3, r4, r5, lr}
 8032a0e:	4604      	mov	r4, r0
 8032a10:	4d06      	ldr	r5, [pc, #24]	@ (8032a2c <_write_r+0x20>)
 8032a12:	4608      	mov	r0, r1
 8032a14:	4611      	mov	r1, r2
 8032a16:	2200      	movs	r2, #0
 8032a18:	602a      	str	r2, [r5, #0]
 8032a1a:	461a      	mov	r2, r3
 8032a1c:	f7ce fa62 	bl	8000ee4 <_write>
 8032a20:	1c43      	adds	r3, r0, #1
 8032a22:	d102      	bne.n	8032a2a <_write_r+0x1e>
 8032a24:	682b      	ldr	r3, [r5, #0]
 8032a26:	b103      	cbz	r3, 8032a2a <_write_r+0x1e>
 8032a28:	6023      	str	r3, [r4, #0]
 8032a2a:	bd38      	pop	{r3, r4, r5, pc}
 8032a2c:	20083540 	.word	0x20083540

08032a30 <__errno>:
 8032a30:	4b01      	ldr	r3, [pc, #4]	@ (8032a38 <__errno+0x8>)
 8032a32:	6818      	ldr	r0, [r3, #0]
 8032a34:	4770      	bx	lr
 8032a36:	bf00      	nop
 8032a38:	20000254 	.word	0x20000254

08032a3c <__libc_init_array>:
 8032a3c:	b570      	push	{r4, r5, r6, lr}
 8032a3e:	4d0d      	ldr	r5, [pc, #52]	@ (8032a74 <__libc_init_array+0x38>)
 8032a40:	2600      	movs	r6, #0
 8032a42:	4c0d      	ldr	r4, [pc, #52]	@ (8032a78 <__libc_init_array+0x3c>)
 8032a44:	1b64      	subs	r4, r4, r5
 8032a46:	10a4      	asrs	r4, r4, #2
 8032a48:	42a6      	cmp	r6, r4
 8032a4a:	d109      	bne.n	8032a60 <__libc_init_array+0x24>
 8032a4c:	4d0b      	ldr	r5, [pc, #44]	@ (8032a7c <__libc_init_array+0x40>)
 8032a4e:	2600      	movs	r6, #0
 8032a50:	4c0b      	ldr	r4, [pc, #44]	@ (8032a80 <__libc_init_array+0x44>)
 8032a52:	f000 fd75 	bl	8033540 <_init>
 8032a56:	1b64      	subs	r4, r4, r5
 8032a58:	10a4      	asrs	r4, r4, #2
 8032a5a:	42a6      	cmp	r6, r4
 8032a5c:	d105      	bne.n	8032a6a <__libc_init_array+0x2e>
 8032a5e:	bd70      	pop	{r4, r5, r6, pc}
 8032a60:	f855 3b04 	ldr.w	r3, [r5], #4
 8032a64:	3601      	adds	r6, #1
 8032a66:	4798      	blx	r3
 8032a68:	e7ee      	b.n	8032a48 <__libc_init_array+0xc>
 8032a6a:	f855 3b04 	ldr.w	r3, [r5], #4
 8032a6e:	3601      	adds	r6, #1
 8032a70:	4798      	blx	r3
 8032a72:	e7f2      	b.n	8032a5a <__libc_init_array+0x1e>
 8032a74:	08038860 	.word	0x08038860
 8032a78:	08038860 	.word	0x08038860
 8032a7c:	08038860 	.word	0x08038860
 8032a80:	08038880 	.word	0x08038880

08032a84 <__retarget_lock_init_recursive>:
 8032a84:	4770      	bx	lr

08032a86 <__retarget_lock_acquire_recursive>:
 8032a86:	4770      	bx	lr

08032a88 <__retarget_lock_release_recursive>:
 8032a88:	4770      	bx	lr

08032a8a <memcpy>:
 8032a8a:	440a      	add	r2, r1
 8032a8c:	1e43      	subs	r3, r0, #1
 8032a8e:	4291      	cmp	r1, r2
 8032a90:	d100      	bne.n	8032a94 <memcpy+0xa>
 8032a92:	4770      	bx	lr
 8032a94:	b510      	push	{r4, lr}
 8032a96:	f811 4b01 	ldrb.w	r4, [r1], #1
 8032a9a:	4291      	cmp	r1, r2
 8032a9c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8032aa0:	d1f9      	bne.n	8032a96 <memcpy+0xc>
 8032aa2:	bd10      	pop	{r4, pc}

08032aa4 <__register_exitproc>:
 8032aa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032aa8:	4d28      	ldr	r5, [pc, #160]	@ (8032b4c <__register_exitproc+0xa8>)
 8032aaa:	4607      	mov	r7, r0
 8032aac:	4691      	mov	r9, r2
 8032aae:	460e      	mov	r6, r1
 8032ab0:	6828      	ldr	r0, [r5, #0]
 8032ab2:	4698      	mov	r8, r3
 8032ab4:	f7ff ffe7 	bl	8032a86 <__retarget_lock_acquire_recursive>
 8032ab8:	4a25      	ldr	r2, [pc, #148]	@ (8032b50 <__register_exitproc+0xac>)
 8032aba:	6814      	ldr	r4, [r2, #0]
 8032abc:	b93c      	cbnz	r4, 8032ace <__register_exitproc+0x2a>
 8032abe:	4b25      	ldr	r3, [pc, #148]	@ (8032b54 <__register_exitproc+0xb0>)
 8032ac0:	6013      	str	r3, [r2, #0]
 8032ac2:	4a25      	ldr	r2, [pc, #148]	@ (8032b58 <__register_exitproc+0xb4>)
 8032ac4:	b112      	cbz	r2, 8032acc <__register_exitproc+0x28>
 8032ac6:	6812      	ldr	r2, [r2, #0]
 8032ac8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8032acc:	4c21      	ldr	r4, [pc, #132]	@ (8032b54 <__register_exitproc+0xb0>)
 8032ace:	6863      	ldr	r3, [r4, #4]
 8032ad0:	2b1f      	cmp	r3, #31
 8032ad2:	dd06      	ble.n	8032ae2 <__register_exitproc+0x3e>
 8032ad4:	6828      	ldr	r0, [r5, #0]
 8032ad6:	f7ff ffd7 	bl	8032a88 <__retarget_lock_release_recursive>
 8032ada:	f04f 30ff 	mov.w	r0, #4294967295
 8032ade:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032ae2:	b33f      	cbz	r7, 8032b34 <__register_exitproc+0x90>
 8032ae4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8032ae8:	b968      	cbnz	r0, 8032b06 <__register_exitproc+0x62>
 8032aea:	4b1c      	ldr	r3, [pc, #112]	@ (8032b5c <__register_exitproc+0xb8>)
 8032aec:	2b00      	cmp	r3, #0
 8032aee:	d0f1      	beq.n	8032ad4 <__register_exitproc+0x30>
 8032af0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8032af4:	f7ff fd04 	bl	8032500 <malloc>
 8032af8:	2800      	cmp	r0, #0
 8032afa:	d0eb      	beq.n	8032ad4 <__register_exitproc+0x30>
 8032afc:	2300      	movs	r3, #0
 8032afe:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8032b02:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8032b06:	6863      	ldr	r3, [r4, #4]
 8032b08:	2201      	movs	r2, #1
 8032b0a:	2f02      	cmp	r7, #2
 8032b0c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8032b10:	fa02 f203 	lsl.w	r2, r2, r3
 8032b14:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8032b18:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8032b1c:	ea43 0302 	orr.w	r3, r3, r2
 8032b20:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8032b24:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8032b28:	bf02      	ittt	eq
 8032b2a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8032b2e:	4313      	orreq	r3, r2
 8032b30:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8032b34:	6863      	ldr	r3, [r4, #4]
 8032b36:	6828      	ldr	r0, [r5, #0]
 8032b38:	1c5a      	adds	r2, r3, #1
 8032b3a:	3302      	adds	r3, #2
 8032b3c:	6062      	str	r2, [r4, #4]
 8032b3e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8032b42:	f7ff ffa1 	bl	8032a88 <__retarget_lock_release_recursive>
 8032b46:	2000      	movs	r0, #0
 8032b48:	e7c9      	b.n	8032ade <__register_exitproc+0x3a>
 8032b4a:	bf00      	nop
 8032b4c:	200002a4 	.word	0x200002a4
 8032b50:	200835d4 	.word	0x200835d4
 8032b54:	20083548 	.word	0x20083548
 8032b58:	08038658 	.word	0x08038658
 8032b5c:	08032501 	.word	0x08032501

08032b60 <_free_r>:
 8032b60:	b538      	push	{r3, r4, r5, lr}
 8032b62:	4605      	mov	r5, r0
 8032b64:	2900      	cmp	r1, #0
 8032b66:	d041      	beq.n	8032bec <_free_r+0x8c>
 8032b68:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8032b6c:	1f0c      	subs	r4, r1, #4
 8032b6e:	2b00      	cmp	r3, #0
 8032b70:	bfb8      	it	lt
 8032b72:	18e4      	addlt	r4, r4, r3
 8032b74:	f7ff fd76 	bl	8032664 <__malloc_lock>
 8032b78:	4a1d      	ldr	r2, [pc, #116]	@ (8032bf0 <_free_r+0x90>)
 8032b7a:	6813      	ldr	r3, [r2, #0]
 8032b7c:	b933      	cbnz	r3, 8032b8c <_free_r+0x2c>
 8032b7e:	6063      	str	r3, [r4, #4]
 8032b80:	6014      	str	r4, [r2, #0]
 8032b82:	4628      	mov	r0, r5
 8032b84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032b88:	f7ff bd72 	b.w	8032670 <__malloc_unlock>
 8032b8c:	42a3      	cmp	r3, r4
 8032b8e:	d908      	bls.n	8032ba2 <_free_r+0x42>
 8032b90:	6820      	ldr	r0, [r4, #0]
 8032b92:	1821      	adds	r1, r4, r0
 8032b94:	428b      	cmp	r3, r1
 8032b96:	bf01      	itttt	eq
 8032b98:	6819      	ldreq	r1, [r3, #0]
 8032b9a:	685b      	ldreq	r3, [r3, #4]
 8032b9c:	1809      	addeq	r1, r1, r0
 8032b9e:	6021      	streq	r1, [r4, #0]
 8032ba0:	e7ed      	b.n	8032b7e <_free_r+0x1e>
 8032ba2:	461a      	mov	r2, r3
 8032ba4:	685b      	ldr	r3, [r3, #4]
 8032ba6:	b10b      	cbz	r3, 8032bac <_free_r+0x4c>
 8032ba8:	42a3      	cmp	r3, r4
 8032baa:	d9fa      	bls.n	8032ba2 <_free_r+0x42>
 8032bac:	6811      	ldr	r1, [r2, #0]
 8032bae:	1850      	adds	r0, r2, r1
 8032bb0:	42a0      	cmp	r0, r4
 8032bb2:	d10b      	bne.n	8032bcc <_free_r+0x6c>
 8032bb4:	6820      	ldr	r0, [r4, #0]
 8032bb6:	4401      	add	r1, r0
 8032bb8:	1850      	adds	r0, r2, r1
 8032bba:	6011      	str	r1, [r2, #0]
 8032bbc:	4283      	cmp	r3, r0
 8032bbe:	d1e0      	bne.n	8032b82 <_free_r+0x22>
 8032bc0:	6818      	ldr	r0, [r3, #0]
 8032bc2:	685b      	ldr	r3, [r3, #4]
 8032bc4:	4408      	add	r0, r1
 8032bc6:	6053      	str	r3, [r2, #4]
 8032bc8:	6010      	str	r0, [r2, #0]
 8032bca:	e7da      	b.n	8032b82 <_free_r+0x22>
 8032bcc:	d902      	bls.n	8032bd4 <_free_r+0x74>
 8032bce:	230c      	movs	r3, #12
 8032bd0:	602b      	str	r3, [r5, #0]
 8032bd2:	e7d6      	b.n	8032b82 <_free_r+0x22>
 8032bd4:	6820      	ldr	r0, [r4, #0]
 8032bd6:	1821      	adds	r1, r4, r0
 8032bd8:	428b      	cmp	r3, r1
 8032bda:	bf02      	ittt	eq
 8032bdc:	6819      	ldreq	r1, [r3, #0]
 8032bde:	685b      	ldreq	r3, [r3, #4]
 8032be0:	1809      	addeq	r1, r1, r0
 8032be2:	6063      	str	r3, [r4, #4]
 8032be4:	bf08      	it	eq
 8032be6:	6021      	streq	r1, [r4, #0]
 8032be8:	6054      	str	r4, [r2, #4]
 8032bea:	e7ca      	b.n	8032b82 <_free_r+0x22>
 8032bec:	bd38      	pop	{r3, r4, r5, pc}
 8032bee:	bf00      	nop
 8032bf0:	20083400 	.word	0x20083400

08032bf4 <__sfputc_r>:
 8032bf4:	6893      	ldr	r3, [r2, #8]
 8032bf6:	3b01      	subs	r3, #1
 8032bf8:	2b00      	cmp	r3, #0
 8032bfa:	6093      	str	r3, [r2, #8]
 8032bfc:	b410      	push	{r4}
 8032bfe:	da08      	bge.n	8032c12 <__sfputc_r+0x1e>
 8032c00:	6994      	ldr	r4, [r2, #24]
 8032c02:	42a3      	cmp	r3, r4
 8032c04:	db01      	blt.n	8032c0a <__sfputc_r+0x16>
 8032c06:	290a      	cmp	r1, #10
 8032c08:	d103      	bne.n	8032c12 <__sfputc_r+0x1e>
 8032c0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032c0e:	f000 bb71 	b.w	80332f4 <__swbuf_r>
 8032c12:	6813      	ldr	r3, [r2, #0]
 8032c14:	1c58      	adds	r0, r3, #1
 8032c16:	6010      	str	r0, [r2, #0]
 8032c18:	4608      	mov	r0, r1
 8032c1a:	7019      	strb	r1, [r3, #0]
 8032c1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032c20:	4770      	bx	lr

08032c22 <__sfputs_r>:
 8032c22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8032c24:	4606      	mov	r6, r0
 8032c26:	460f      	mov	r7, r1
 8032c28:	4614      	mov	r4, r2
 8032c2a:	18d5      	adds	r5, r2, r3
 8032c2c:	42ac      	cmp	r4, r5
 8032c2e:	d101      	bne.n	8032c34 <__sfputs_r+0x12>
 8032c30:	2000      	movs	r0, #0
 8032c32:	e007      	b.n	8032c44 <__sfputs_r+0x22>
 8032c34:	463a      	mov	r2, r7
 8032c36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032c3a:	4630      	mov	r0, r6
 8032c3c:	f7ff ffda 	bl	8032bf4 <__sfputc_r>
 8032c40:	1c43      	adds	r3, r0, #1
 8032c42:	d1f3      	bne.n	8032c2c <__sfputs_r+0xa>
 8032c44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08032c48 <_vfiprintf_r>:
 8032c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032c4c:	460d      	mov	r5, r1
 8032c4e:	b09d      	sub	sp, #116	@ 0x74
 8032c50:	4614      	mov	r4, r2
 8032c52:	4698      	mov	r8, r3
 8032c54:	4606      	mov	r6, r0
 8032c56:	b118      	cbz	r0, 8032c60 <_vfiprintf_r+0x18>
 8032c58:	6a03      	ldr	r3, [r0, #32]
 8032c5a:	b90b      	cbnz	r3, 8032c60 <_vfiprintf_r+0x18>
 8032c5c:	f7ff fda8 	bl	80327b0 <__sinit>
 8032c60:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032c62:	07d9      	lsls	r1, r3, #31
 8032c64:	d405      	bmi.n	8032c72 <_vfiprintf_r+0x2a>
 8032c66:	89ab      	ldrh	r3, [r5, #12]
 8032c68:	059a      	lsls	r2, r3, #22
 8032c6a:	d402      	bmi.n	8032c72 <_vfiprintf_r+0x2a>
 8032c6c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032c6e:	f7ff ff0a 	bl	8032a86 <__retarget_lock_acquire_recursive>
 8032c72:	89ab      	ldrh	r3, [r5, #12]
 8032c74:	071b      	lsls	r3, r3, #28
 8032c76:	d501      	bpl.n	8032c7c <_vfiprintf_r+0x34>
 8032c78:	692b      	ldr	r3, [r5, #16]
 8032c7a:	b99b      	cbnz	r3, 8032ca4 <_vfiprintf_r+0x5c>
 8032c7c:	4629      	mov	r1, r5
 8032c7e:	4630      	mov	r0, r6
 8032c80:	f000 fb76 	bl	8033370 <__swsetup_r>
 8032c84:	b170      	cbz	r0, 8032ca4 <_vfiprintf_r+0x5c>
 8032c86:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032c88:	07dc      	lsls	r4, r3, #31
 8032c8a:	d504      	bpl.n	8032c96 <_vfiprintf_r+0x4e>
 8032c8c:	f04f 30ff 	mov.w	r0, #4294967295
 8032c90:	b01d      	add	sp, #116	@ 0x74
 8032c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8032c96:	89ab      	ldrh	r3, [r5, #12]
 8032c98:	0598      	lsls	r0, r3, #22
 8032c9a:	d4f7      	bmi.n	8032c8c <_vfiprintf_r+0x44>
 8032c9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032c9e:	f7ff fef3 	bl	8032a88 <__retarget_lock_release_recursive>
 8032ca2:	e7f3      	b.n	8032c8c <_vfiprintf_r+0x44>
 8032ca4:	2300      	movs	r3, #0
 8032ca6:	f8cd 800c 	str.w	r8, [sp, #12]
 8032caa:	f04f 0901 	mov.w	r9, #1
 8032cae:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8032e64 <_vfiprintf_r+0x21c>
 8032cb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8032cb4:	2320      	movs	r3, #32
 8032cb6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8032cba:	2330      	movs	r3, #48	@ 0x30
 8032cbc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8032cc0:	4623      	mov	r3, r4
 8032cc2:	469a      	mov	sl, r3
 8032cc4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8032cc8:	b10a      	cbz	r2, 8032cce <_vfiprintf_r+0x86>
 8032cca:	2a25      	cmp	r2, #37	@ 0x25
 8032ccc:	d1f9      	bne.n	8032cc2 <_vfiprintf_r+0x7a>
 8032cce:	ebba 0b04 	subs.w	fp, sl, r4
 8032cd2:	d00b      	beq.n	8032cec <_vfiprintf_r+0xa4>
 8032cd4:	465b      	mov	r3, fp
 8032cd6:	4622      	mov	r2, r4
 8032cd8:	4629      	mov	r1, r5
 8032cda:	4630      	mov	r0, r6
 8032cdc:	f7ff ffa1 	bl	8032c22 <__sfputs_r>
 8032ce0:	3001      	adds	r0, #1
 8032ce2:	f000 80a7 	beq.w	8032e34 <_vfiprintf_r+0x1ec>
 8032ce6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8032ce8:	445a      	add	r2, fp
 8032cea:	9209      	str	r2, [sp, #36]	@ 0x24
 8032cec:	f89a 3000 	ldrb.w	r3, [sl]
 8032cf0:	2b00      	cmp	r3, #0
 8032cf2:	f000 809f 	beq.w	8032e34 <_vfiprintf_r+0x1ec>
 8032cf6:	2300      	movs	r3, #0
 8032cf8:	f04f 32ff 	mov.w	r2, #4294967295
 8032cfc:	f10a 0a01 	add.w	sl, sl, #1
 8032d00:	9304      	str	r3, [sp, #16]
 8032d02:	9307      	str	r3, [sp, #28]
 8032d04:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8032d08:	931a      	str	r3, [sp, #104]	@ 0x68
 8032d0a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8032d0e:	4654      	mov	r4, sl
 8032d10:	2205      	movs	r2, #5
 8032d12:	4854      	ldr	r0, [pc, #336]	@ (8032e64 <_vfiprintf_r+0x21c>)
 8032d14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032d18:	f000 fb80 	bl	803341c <memchr>
 8032d1c:	9a04      	ldr	r2, [sp, #16]
 8032d1e:	b9d8      	cbnz	r0, 8032d58 <_vfiprintf_r+0x110>
 8032d20:	06d1      	lsls	r1, r2, #27
 8032d22:	bf44      	itt	mi
 8032d24:	2320      	movmi	r3, #32
 8032d26:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d2a:	0713      	lsls	r3, r2, #28
 8032d2c:	bf44      	itt	mi
 8032d2e:	232b      	movmi	r3, #43	@ 0x2b
 8032d30:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d34:	f89a 3000 	ldrb.w	r3, [sl]
 8032d38:	2b2a      	cmp	r3, #42	@ 0x2a
 8032d3a:	d015      	beq.n	8032d68 <_vfiprintf_r+0x120>
 8032d3c:	9a07      	ldr	r2, [sp, #28]
 8032d3e:	4654      	mov	r4, sl
 8032d40:	2000      	movs	r0, #0
 8032d42:	f04f 0c0a 	mov.w	ip, #10
 8032d46:	4621      	mov	r1, r4
 8032d48:	f811 3b01 	ldrb.w	r3, [r1], #1
 8032d4c:	3b30      	subs	r3, #48	@ 0x30
 8032d4e:	2b09      	cmp	r3, #9
 8032d50:	d94b      	bls.n	8032dea <_vfiprintf_r+0x1a2>
 8032d52:	b1b0      	cbz	r0, 8032d82 <_vfiprintf_r+0x13a>
 8032d54:	9207      	str	r2, [sp, #28]
 8032d56:	e014      	b.n	8032d82 <_vfiprintf_r+0x13a>
 8032d58:	eba0 0308 	sub.w	r3, r0, r8
 8032d5c:	46a2      	mov	sl, r4
 8032d5e:	fa09 f303 	lsl.w	r3, r9, r3
 8032d62:	4313      	orrs	r3, r2
 8032d64:	9304      	str	r3, [sp, #16]
 8032d66:	e7d2      	b.n	8032d0e <_vfiprintf_r+0xc6>
 8032d68:	9b03      	ldr	r3, [sp, #12]
 8032d6a:	1d19      	adds	r1, r3, #4
 8032d6c:	681b      	ldr	r3, [r3, #0]
 8032d6e:	2b00      	cmp	r3, #0
 8032d70:	9103      	str	r1, [sp, #12]
 8032d72:	bfbb      	ittet	lt
 8032d74:	425b      	neglt	r3, r3
 8032d76:	f042 0202 	orrlt.w	r2, r2, #2
 8032d7a:	9307      	strge	r3, [sp, #28]
 8032d7c:	9307      	strlt	r3, [sp, #28]
 8032d7e:	bfb8      	it	lt
 8032d80:	9204      	strlt	r2, [sp, #16]
 8032d82:	7823      	ldrb	r3, [r4, #0]
 8032d84:	2b2e      	cmp	r3, #46	@ 0x2e
 8032d86:	d10a      	bne.n	8032d9e <_vfiprintf_r+0x156>
 8032d88:	7863      	ldrb	r3, [r4, #1]
 8032d8a:	2b2a      	cmp	r3, #42	@ 0x2a
 8032d8c:	d132      	bne.n	8032df4 <_vfiprintf_r+0x1ac>
 8032d8e:	9b03      	ldr	r3, [sp, #12]
 8032d90:	3402      	adds	r4, #2
 8032d92:	1d1a      	adds	r2, r3, #4
 8032d94:	681b      	ldr	r3, [r3, #0]
 8032d96:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8032d9a:	9203      	str	r2, [sp, #12]
 8032d9c:	9305      	str	r3, [sp, #20]
 8032d9e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8032e74 <_vfiprintf_r+0x22c>
 8032da2:	2203      	movs	r2, #3
 8032da4:	7821      	ldrb	r1, [r4, #0]
 8032da6:	4650      	mov	r0, sl
 8032da8:	f000 fb38 	bl	803341c <memchr>
 8032dac:	b138      	cbz	r0, 8032dbe <_vfiprintf_r+0x176>
 8032dae:	eba0 000a 	sub.w	r0, r0, sl
 8032db2:	2240      	movs	r2, #64	@ 0x40
 8032db4:	9b04      	ldr	r3, [sp, #16]
 8032db6:	3401      	adds	r4, #1
 8032db8:	4082      	lsls	r2, r0
 8032dba:	4313      	orrs	r3, r2
 8032dbc:	9304      	str	r3, [sp, #16]
 8032dbe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032dc2:	2206      	movs	r2, #6
 8032dc4:	4828      	ldr	r0, [pc, #160]	@ (8032e68 <_vfiprintf_r+0x220>)
 8032dc6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8032dca:	f000 fb27 	bl	803341c <memchr>
 8032dce:	2800      	cmp	r0, #0
 8032dd0:	d03f      	beq.n	8032e52 <_vfiprintf_r+0x20a>
 8032dd2:	4b26      	ldr	r3, [pc, #152]	@ (8032e6c <_vfiprintf_r+0x224>)
 8032dd4:	bb1b      	cbnz	r3, 8032e1e <_vfiprintf_r+0x1d6>
 8032dd6:	9b03      	ldr	r3, [sp, #12]
 8032dd8:	3307      	adds	r3, #7
 8032dda:	f023 0307 	bic.w	r3, r3, #7
 8032dde:	3308      	adds	r3, #8
 8032de0:	9303      	str	r3, [sp, #12]
 8032de2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8032de4:	443b      	add	r3, r7
 8032de6:	9309      	str	r3, [sp, #36]	@ 0x24
 8032de8:	e76a      	b.n	8032cc0 <_vfiprintf_r+0x78>
 8032dea:	fb0c 3202 	mla	r2, ip, r2, r3
 8032dee:	460c      	mov	r4, r1
 8032df0:	2001      	movs	r0, #1
 8032df2:	e7a8      	b.n	8032d46 <_vfiprintf_r+0xfe>
 8032df4:	2300      	movs	r3, #0
 8032df6:	3401      	adds	r4, #1
 8032df8:	f04f 0c0a 	mov.w	ip, #10
 8032dfc:	4619      	mov	r1, r3
 8032dfe:	9305      	str	r3, [sp, #20]
 8032e00:	4620      	mov	r0, r4
 8032e02:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032e06:	3a30      	subs	r2, #48	@ 0x30
 8032e08:	2a09      	cmp	r2, #9
 8032e0a:	d903      	bls.n	8032e14 <_vfiprintf_r+0x1cc>
 8032e0c:	2b00      	cmp	r3, #0
 8032e0e:	d0c6      	beq.n	8032d9e <_vfiprintf_r+0x156>
 8032e10:	9105      	str	r1, [sp, #20]
 8032e12:	e7c4      	b.n	8032d9e <_vfiprintf_r+0x156>
 8032e14:	fb0c 2101 	mla	r1, ip, r1, r2
 8032e18:	4604      	mov	r4, r0
 8032e1a:	2301      	movs	r3, #1
 8032e1c:	e7f0      	b.n	8032e00 <_vfiprintf_r+0x1b8>
 8032e1e:	ab03      	add	r3, sp, #12
 8032e20:	462a      	mov	r2, r5
 8032e22:	a904      	add	r1, sp, #16
 8032e24:	4630      	mov	r0, r6
 8032e26:	9300      	str	r3, [sp, #0]
 8032e28:	4b11      	ldr	r3, [pc, #68]	@ (8032e70 <_vfiprintf_r+0x228>)
 8032e2a:	f3af 8000 	nop.w
 8032e2e:	4607      	mov	r7, r0
 8032e30:	1c78      	adds	r0, r7, #1
 8032e32:	d1d6      	bne.n	8032de2 <_vfiprintf_r+0x19a>
 8032e34:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032e36:	07d9      	lsls	r1, r3, #31
 8032e38:	d405      	bmi.n	8032e46 <_vfiprintf_r+0x1fe>
 8032e3a:	89ab      	ldrh	r3, [r5, #12]
 8032e3c:	059a      	lsls	r2, r3, #22
 8032e3e:	d402      	bmi.n	8032e46 <_vfiprintf_r+0x1fe>
 8032e40:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032e42:	f7ff fe21 	bl	8032a88 <__retarget_lock_release_recursive>
 8032e46:	89ab      	ldrh	r3, [r5, #12]
 8032e48:	065b      	lsls	r3, r3, #25
 8032e4a:	f53f af1f 	bmi.w	8032c8c <_vfiprintf_r+0x44>
 8032e4e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8032e50:	e71e      	b.n	8032c90 <_vfiprintf_r+0x48>
 8032e52:	ab03      	add	r3, sp, #12
 8032e54:	462a      	mov	r2, r5
 8032e56:	a904      	add	r1, sp, #16
 8032e58:	4630      	mov	r0, r6
 8032e5a:	9300      	str	r3, [sp, #0]
 8032e5c:	4b04      	ldr	r3, [pc, #16]	@ (8032e70 <_vfiprintf_r+0x228>)
 8032e5e:	f000 f87d 	bl	8032f5c <_printf_i>
 8032e62:	e7e4      	b.n	8032e2e <_vfiprintf_r+0x1e6>
 8032e64:	0803865c 	.word	0x0803865c
 8032e68:	08038666 	.word	0x08038666
 8032e6c:	00000000 	.word	0x00000000
 8032e70:	08032c23 	.word	0x08032c23
 8032e74:	08038662 	.word	0x08038662

08032e78 <_printf_common>:
 8032e78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8032e7c:	4616      	mov	r6, r2
 8032e7e:	4698      	mov	r8, r3
 8032e80:	688a      	ldr	r2, [r1, #8]
 8032e82:	4607      	mov	r7, r0
 8032e84:	690b      	ldr	r3, [r1, #16]
 8032e86:	460c      	mov	r4, r1
 8032e88:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8032e8c:	4293      	cmp	r3, r2
 8032e8e:	bfb8      	it	lt
 8032e90:	4613      	movlt	r3, r2
 8032e92:	6033      	str	r3, [r6, #0]
 8032e94:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8032e98:	b10a      	cbz	r2, 8032e9e <_printf_common+0x26>
 8032e9a:	3301      	adds	r3, #1
 8032e9c:	6033      	str	r3, [r6, #0]
 8032e9e:	6823      	ldr	r3, [r4, #0]
 8032ea0:	0699      	lsls	r1, r3, #26
 8032ea2:	bf42      	ittt	mi
 8032ea4:	6833      	ldrmi	r3, [r6, #0]
 8032ea6:	3302      	addmi	r3, #2
 8032ea8:	6033      	strmi	r3, [r6, #0]
 8032eaa:	6825      	ldr	r5, [r4, #0]
 8032eac:	f015 0506 	ands.w	r5, r5, #6
 8032eb0:	d106      	bne.n	8032ec0 <_printf_common+0x48>
 8032eb2:	f104 0a19 	add.w	sl, r4, #25
 8032eb6:	68e3      	ldr	r3, [r4, #12]
 8032eb8:	6832      	ldr	r2, [r6, #0]
 8032eba:	1a9b      	subs	r3, r3, r2
 8032ebc:	42ab      	cmp	r3, r5
 8032ebe:	dc2b      	bgt.n	8032f18 <_printf_common+0xa0>
 8032ec0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8032ec4:	6822      	ldr	r2, [r4, #0]
 8032ec6:	3b00      	subs	r3, #0
 8032ec8:	bf18      	it	ne
 8032eca:	2301      	movne	r3, #1
 8032ecc:	0692      	lsls	r2, r2, #26
 8032ece:	d430      	bmi.n	8032f32 <_printf_common+0xba>
 8032ed0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8032ed4:	4641      	mov	r1, r8
 8032ed6:	4638      	mov	r0, r7
 8032ed8:	47c8      	blx	r9
 8032eda:	3001      	adds	r0, #1
 8032edc:	d023      	beq.n	8032f26 <_printf_common+0xae>
 8032ede:	6823      	ldr	r3, [r4, #0]
 8032ee0:	341a      	adds	r4, #26
 8032ee2:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8032ee6:	f003 0306 	and.w	r3, r3, #6
 8032eea:	2b04      	cmp	r3, #4
 8032eec:	bf0a      	itet	eq
 8032eee:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8032ef2:	2500      	movne	r5, #0
 8032ef4:	6833      	ldreq	r3, [r6, #0]
 8032ef6:	f04f 0600 	mov.w	r6, #0
 8032efa:	bf08      	it	eq
 8032efc:	1aed      	subeq	r5, r5, r3
 8032efe:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8032f02:	bf08      	it	eq
 8032f04:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8032f08:	4293      	cmp	r3, r2
 8032f0a:	bfc4      	itt	gt
 8032f0c:	1a9b      	subgt	r3, r3, r2
 8032f0e:	18ed      	addgt	r5, r5, r3
 8032f10:	42b5      	cmp	r5, r6
 8032f12:	d11a      	bne.n	8032f4a <_printf_common+0xd2>
 8032f14:	2000      	movs	r0, #0
 8032f16:	e008      	b.n	8032f2a <_printf_common+0xb2>
 8032f18:	2301      	movs	r3, #1
 8032f1a:	4652      	mov	r2, sl
 8032f1c:	4641      	mov	r1, r8
 8032f1e:	4638      	mov	r0, r7
 8032f20:	47c8      	blx	r9
 8032f22:	3001      	adds	r0, #1
 8032f24:	d103      	bne.n	8032f2e <_printf_common+0xb6>
 8032f26:	f04f 30ff 	mov.w	r0, #4294967295
 8032f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8032f2e:	3501      	adds	r5, #1
 8032f30:	e7c1      	b.n	8032eb6 <_printf_common+0x3e>
 8032f32:	18e1      	adds	r1, r4, r3
 8032f34:	1c5a      	adds	r2, r3, #1
 8032f36:	2030      	movs	r0, #48	@ 0x30
 8032f38:	3302      	adds	r3, #2
 8032f3a:	4422      	add	r2, r4
 8032f3c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8032f40:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8032f44:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8032f48:	e7c2      	b.n	8032ed0 <_printf_common+0x58>
 8032f4a:	2301      	movs	r3, #1
 8032f4c:	4622      	mov	r2, r4
 8032f4e:	4641      	mov	r1, r8
 8032f50:	4638      	mov	r0, r7
 8032f52:	47c8      	blx	r9
 8032f54:	3001      	adds	r0, #1
 8032f56:	d0e6      	beq.n	8032f26 <_printf_common+0xae>
 8032f58:	3601      	adds	r6, #1
 8032f5a:	e7d9      	b.n	8032f10 <_printf_common+0x98>

08032f5c <_printf_i>:
 8032f5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8032f60:	7e0f      	ldrb	r7, [r1, #24]
 8032f62:	4691      	mov	r9, r2
 8032f64:	4680      	mov	r8, r0
 8032f66:	460c      	mov	r4, r1
 8032f68:	2f78      	cmp	r7, #120	@ 0x78
 8032f6a:	469a      	mov	sl, r3
 8032f6c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8032f6e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8032f72:	d807      	bhi.n	8032f84 <_printf_i+0x28>
 8032f74:	2f62      	cmp	r7, #98	@ 0x62
 8032f76:	d80a      	bhi.n	8032f8e <_printf_i+0x32>
 8032f78:	2f00      	cmp	r7, #0
 8032f7a:	f000 80d2 	beq.w	8033122 <_printf_i+0x1c6>
 8032f7e:	2f58      	cmp	r7, #88	@ 0x58
 8032f80:	f000 80b9 	beq.w	80330f6 <_printf_i+0x19a>
 8032f84:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8032f88:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8032f8c:	e03a      	b.n	8033004 <_printf_i+0xa8>
 8032f8e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8032f92:	2b15      	cmp	r3, #21
 8032f94:	d8f6      	bhi.n	8032f84 <_printf_i+0x28>
 8032f96:	a101      	add	r1, pc, #4	@ (adr r1, 8032f9c <_printf_i+0x40>)
 8032f98:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8032f9c:	08032ff5 	.word	0x08032ff5
 8032fa0:	08033009 	.word	0x08033009
 8032fa4:	08032f85 	.word	0x08032f85
 8032fa8:	08032f85 	.word	0x08032f85
 8032fac:	08032f85 	.word	0x08032f85
 8032fb0:	08032f85 	.word	0x08032f85
 8032fb4:	08033009 	.word	0x08033009
 8032fb8:	08032f85 	.word	0x08032f85
 8032fbc:	08032f85 	.word	0x08032f85
 8032fc0:	08032f85 	.word	0x08032f85
 8032fc4:	08032f85 	.word	0x08032f85
 8032fc8:	08033109 	.word	0x08033109
 8032fcc:	08033033 	.word	0x08033033
 8032fd0:	080330c3 	.word	0x080330c3
 8032fd4:	08032f85 	.word	0x08032f85
 8032fd8:	08032f85 	.word	0x08032f85
 8032fdc:	0803312b 	.word	0x0803312b
 8032fe0:	08032f85 	.word	0x08032f85
 8032fe4:	08033033 	.word	0x08033033
 8032fe8:	08032f85 	.word	0x08032f85
 8032fec:	08032f85 	.word	0x08032f85
 8032ff0:	080330cb 	.word	0x080330cb
 8032ff4:	6833      	ldr	r3, [r6, #0]
 8032ff6:	1d1a      	adds	r2, r3, #4
 8032ff8:	681b      	ldr	r3, [r3, #0]
 8032ffa:	6032      	str	r2, [r6, #0]
 8032ffc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8033000:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8033004:	2301      	movs	r3, #1
 8033006:	e09d      	b.n	8033144 <_printf_i+0x1e8>
 8033008:	6833      	ldr	r3, [r6, #0]
 803300a:	6820      	ldr	r0, [r4, #0]
 803300c:	1d19      	adds	r1, r3, #4
 803300e:	6031      	str	r1, [r6, #0]
 8033010:	0606      	lsls	r6, r0, #24
 8033012:	d501      	bpl.n	8033018 <_printf_i+0xbc>
 8033014:	681d      	ldr	r5, [r3, #0]
 8033016:	e003      	b.n	8033020 <_printf_i+0xc4>
 8033018:	0645      	lsls	r5, r0, #25
 803301a:	d5fb      	bpl.n	8033014 <_printf_i+0xb8>
 803301c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8033020:	2d00      	cmp	r5, #0
 8033022:	da03      	bge.n	803302c <_printf_i+0xd0>
 8033024:	232d      	movs	r3, #45	@ 0x2d
 8033026:	426d      	negs	r5, r5
 8033028:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803302c:	4859      	ldr	r0, [pc, #356]	@ (8033194 <_printf_i+0x238>)
 803302e:	230a      	movs	r3, #10
 8033030:	e011      	b.n	8033056 <_printf_i+0xfa>
 8033032:	6821      	ldr	r1, [r4, #0]
 8033034:	6833      	ldr	r3, [r6, #0]
 8033036:	0608      	lsls	r0, r1, #24
 8033038:	f853 5b04 	ldr.w	r5, [r3], #4
 803303c:	d402      	bmi.n	8033044 <_printf_i+0xe8>
 803303e:	0649      	lsls	r1, r1, #25
 8033040:	bf48      	it	mi
 8033042:	b2ad      	uxthmi	r5, r5
 8033044:	2f6f      	cmp	r7, #111	@ 0x6f
 8033046:	6033      	str	r3, [r6, #0]
 8033048:	4852      	ldr	r0, [pc, #328]	@ (8033194 <_printf_i+0x238>)
 803304a:	bf14      	ite	ne
 803304c:	230a      	movne	r3, #10
 803304e:	2308      	moveq	r3, #8
 8033050:	2100      	movs	r1, #0
 8033052:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8033056:	6866      	ldr	r6, [r4, #4]
 8033058:	2e00      	cmp	r6, #0
 803305a:	60a6      	str	r6, [r4, #8]
 803305c:	bfa2      	ittt	ge
 803305e:	6821      	ldrge	r1, [r4, #0]
 8033060:	f021 0104 	bicge.w	r1, r1, #4
 8033064:	6021      	strge	r1, [r4, #0]
 8033066:	b90d      	cbnz	r5, 803306c <_printf_i+0x110>
 8033068:	2e00      	cmp	r6, #0
 803306a:	d04b      	beq.n	8033104 <_printf_i+0x1a8>
 803306c:	4616      	mov	r6, r2
 803306e:	fbb5 f1f3 	udiv	r1, r5, r3
 8033072:	fb03 5711 	mls	r7, r3, r1, r5
 8033076:	5dc7      	ldrb	r7, [r0, r7]
 8033078:	f806 7d01 	strb.w	r7, [r6, #-1]!
 803307c:	462f      	mov	r7, r5
 803307e:	460d      	mov	r5, r1
 8033080:	42bb      	cmp	r3, r7
 8033082:	d9f4      	bls.n	803306e <_printf_i+0x112>
 8033084:	2b08      	cmp	r3, #8
 8033086:	d10b      	bne.n	80330a0 <_printf_i+0x144>
 8033088:	6823      	ldr	r3, [r4, #0]
 803308a:	07df      	lsls	r7, r3, #31
 803308c:	d508      	bpl.n	80330a0 <_printf_i+0x144>
 803308e:	6923      	ldr	r3, [r4, #16]
 8033090:	6861      	ldr	r1, [r4, #4]
 8033092:	4299      	cmp	r1, r3
 8033094:	bfde      	ittt	le
 8033096:	2330      	movle	r3, #48	@ 0x30
 8033098:	f806 3c01 	strble.w	r3, [r6, #-1]
 803309c:	f106 36ff 	addle.w	r6, r6, #4294967295
 80330a0:	1b92      	subs	r2, r2, r6
 80330a2:	6122      	str	r2, [r4, #16]
 80330a4:	464b      	mov	r3, r9
 80330a6:	aa03      	add	r2, sp, #12
 80330a8:	4621      	mov	r1, r4
 80330aa:	4640      	mov	r0, r8
 80330ac:	f8cd a000 	str.w	sl, [sp]
 80330b0:	f7ff fee2 	bl	8032e78 <_printf_common>
 80330b4:	3001      	adds	r0, #1
 80330b6:	d14a      	bne.n	803314e <_printf_i+0x1f2>
 80330b8:	f04f 30ff 	mov.w	r0, #4294967295
 80330bc:	b004      	add	sp, #16
 80330be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80330c2:	6823      	ldr	r3, [r4, #0]
 80330c4:	f043 0320 	orr.w	r3, r3, #32
 80330c8:	6023      	str	r3, [r4, #0]
 80330ca:	2778      	movs	r7, #120	@ 0x78
 80330cc:	4832      	ldr	r0, [pc, #200]	@ (8033198 <_printf_i+0x23c>)
 80330ce:	6823      	ldr	r3, [r4, #0]
 80330d0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80330d4:	061f      	lsls	r7, r3, #24
 80330d6:	6831      	ldr	r1, [r6, #0]
 80330d8:	f851 5b04 	ldr.w	r5, [r1], #4
 80330dc:	d402      	bmi.n	80330e4 <_printf_i+0x188>
 80330de:	065f      	lsls	r7, r3, #25
 80330e0:	bf48      	it	mi
 80330e2:	b2ad      	uxthmi	r5, r5
 80330e4:	6031      	str	r1, [r6, #0]
 80330e6:	07d9      	lsls	r1, r3, #31
 80330e8:	bf44      	itt	mi
 80330ea:	f043 0320 	orrmi.w	r3, r3, #32
 80330ee:	6023      	strmi	r3, [r4, #0]
 80330f0:	b11d      	cbz	r5, 80330fa <_printf_i+0x19e>
 80330f2:	2310      	movs	r3, #16
 80330f4:	e7ac      	b.n	8033050 <_printf_i+0xf4>
 80330f6:	4827      	ldr	r0, [pc, #156]	@ (8033194 <_printf_i+0x238>)
 80330f8:	e7e9      	b.n	80330ce <_printf_i+0x172>
 80330fa:	6823      	ldr	r3, [r4, #0]
 80330fc:	f023 0320 	bic.w	r3, r3, #32
 8033100:	6023      	str	r3, [r4, #0]
 8033102:	e7f6      	b.n	80330f2 <_printf_i+0x196>
 8033104:	4616      	mov	r6, r2
 8033106:	e7bd      	b.n	8033084 <_printf_i+0x128>
 8033108:	6833      	ldr	r3, [r6, #0]
 803310a:	6825      	ldr	r5, [r4, #0]
 803310c:	1d18      	adds	r0, r3, #4
 803310e:	6961      	ldr	r1, [r4, #20]
 8033110:	6030      	str	r0, [r6, #0]
 8033112:	062e      	lsls	r6, r5, #24
 8033114:	681b      	ldr	r3, [r3, #0]
 8033116:	d501      	bpl.n	803311c <_printf_i+0x1c0>
 8033118:	6019      	str	r1, [r3, #0]
 803311a:	e002      	b.n	8033122 <_printf_i+0x1c6>
 803311c:	0668      	lsls	r0, r5, #25
 803311e:	d5fb      	bpl.n	8033118 <_printf_i+0x1bc>
 8033120:	8019      	strh	r1, [r3, #0]
 8033122:	2300      	movs	r3, #0
 8033124:	4616      	mov	r6, r2
 8033126:	6123      	str	r3, [r4, #16]
 8033128:	e7bc      	b.n	80330a4 <_printf_i+0x148>
 803312a:	6833      	ldr	r3, [r6, #0]
 803312c:	2100      	movs	r1, #0
 803312e:	1d1a      	adds	r2, r3, #4
 8033130:	6032      	str	r2, [r6, #0]
 8033132:	681e      	ldr	r6, [r3, #0]
 8033134:	6862      	ldr	r2, [r4, #4]
 8033136:	4630      	mov	r0, r6
 8033138:	f000 f970 	bl	803341c <memchr>
 803313c:	b108      	cbz	r0, 8033142 <_printf_i+0x1e6>
 803313e:	1b80      	subs	r0, r0, r6
 8033140:	6060      	str	r0, [r4, #4]
 8033142:	6863      	ldr	r3, [r4, #4]
 8033144:	6123      	str	r3, [r4, #16]
 8033146:	2300      	movs	r3, #0
 8033148:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803314c:	e7aa      	b.n	80330a4 <_printf_i+0x148>
 803314e:	6923      	ldr	r3, [r4, #16]
 8033150:	4632      	mov	r2, r6
 8033152:	4649      	mov	r1, r9
 8033154:	4640      	mov	r0, r8
 8033156:	47d0      	blx	sl
 8033158:	3001      	adds	r0, #1
 803315a:	d0ad      	beq.n	80330b8 <_printf_i+0x15c>
 803315c:	6823      	ldr	r3, [r4, #0]
 803315e:	079b      	lsls	r3, r3, #30
 8033160:	d413      	bmi.n	803318a <_printf_i+0x22e>
 8033162:	68e0      	ldr	r0, [r4, #12]
 8033164:	9b03      	ldr	r3, [sp, #12]
 8033166:	4298      	cmp	r0, r3
 8033168:	bfb8      	it	lt
 803316a:	4618      	movlt	r0, r3
 803316c:	e7a6      	b.n	80330bc <_printf_i+0x160>
 803316e:	2301      	movs	r3, #1
 8033170:	4632      	mov	r2, r6
 8033172:	4649      	mov	r1, r9
 8033174:	4640      	mov	r0, r8
 8033176:	47d0      	blx	sl
 8033178:	3001      	adds	r0, #1
 803317a:	d09d      	beq.n	80330b8 <_printf_i+0x15c>
 803317c:	3501      	adds	r5, #1
 803317e:	68e3      	ldr	r3, [r4, #12]
 8033180:	9903      	ldr	r1, [sp, #12]
 8033182:	1a5b      	subs	r3, r3, r1
 8033184:	42ab      	cmp	r3, r5
 8033186:	dcf2      	bgt.n	803316e <_printf_i+0x212>
 8033188:	e7eb      	b.n	8033162 <_printf_i+0x206>
 803318a:	2500      	movs	r5, #0
 803318c:	f104 0619 	add.w	r6, r4, #25
 8033190:	e7f5      	b.n	803317e <_printf_i+0x222>
 8033192:	bf00      	nop
 8033194:	0803866d 	.word	0x0803866d
 8033198:	0803867e 	.word	0x0803867e

0803319c <__sflush_r>:
 803319c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80331a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80331a4:	0716      	lsls	r6, r2, #28
 80331a6:	4605      	mov	r5, r0
 80331a8:	460c      	mov	r4, r1
 80331aa:	d454      	bmi.n	8033256 <__sflush_r+0xba>
 80331ac:	684b      	ldr	r3, [r1, #4]
 80331ae:	2b00      	cmp	r3, #0
 80331b0:	dc02      	bgt.n	80331b8 <__sflush_r+0x1c>
 80331b2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80331b4:	2b00      	cmp	r3, #0
 80331b6:	dd48      	ble.n	803324a <__sflush_r+0xae>
 80331b8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80331ba:	2e00      	cmp	r6, #0
 80331bc:	d045      	beq.n	803324a <__sflush_r+0xae>
 80331be:	2300      	movs	r3, #0
 80331c0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80331c4:	682f      	ldr	r7, [r5, #0]
 80331c6:	6a21      	ldr	r1, [r4, #32]
 80331c8:	602b      	str	r3, [r5, #0]
 80331ca:	d030      	beq.n	803322e <__sflush_r+0x92>
 80331cc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80331ce:	89a3      	ldrh	r3, [r4, #12]
 80331d0:	0759      	lsls	r1, r3, #29
 80331d2:	d505      	bpl.n	80331e0 <__sflush_r+0x44>
 80331d4:	6863      	ldr	r3, [r4, #4]
 80331d6:	1ad2      	subs	r2, r2, r3
 80331d8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80331da:	b10b      	cbz	r3, 80331e0 <__sflush_r+0x44>
 80331dc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80331de:	1ad2      	subs	r2, r2, r3
 80331e0:	2300      	movs	r3, #0
 80331e2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80331e4:	6a21      	ldr	r1, [r4, #32]
 80331e6:	4628      	mov	r0, r5
 80331e8:	47b0      	blx	r6
 80331ea:	1c43      	adds	r3, r0, #1
 80331ec:	89a3      	ldrh	r3, [r4, #12]
 80331ee:	d106      	bne.n	80331fe <__sflush_r+0x62>
 80331f0:	6829      	ldr	r1, [r5, #0]
 80331f2:	291d      	cmp	r1, #29
 80331f4:	d82b      	bhi.n	803324e <__sflush_r+0xb2>
 80331f6:	4a2a      	ldr	r2, [pc, #168]	@ (80332a0 <__sflush_r+0x104>)
 80331f8:	410a      	asrs	r2, r1
 80331fa:	07d6      	lsls	r6, r2, #31
 80331fc:	d427      	bmi.n	803324e <__sflush_r+0xb2>
 80331fe:	2200      	movs	r2, #0
 8033200:	04d9      	lsls	r1, r3, #19
 8033202:	6062      	str	r2, [r4, #4]
 8033204:	6922      	ldr	r2, [r4, #16]
 8033206:	6022      	str	r2, [r4, #0]
 8033208:	d504      	bpl.n	8033214 <__sflush_r+0x78>
 803320a:	1c42      	adds	r2, r0, #1
 803320c:	d101      	bne.n	8033212 <__sflush_r+0x76>
 803320e:	682b      	ldr	r3, [r5, #0]
 8033210:	b903      	cbnz	r3, 8033214 <__sflush_r+0x78>
 8033212:	6560      	str	r0, [r4, #84]	@ 0x54
 8033214:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8033216:	602f      	str	r7, [r5, #0]
 8033218:	b1b9      	cbz	r1, 803324a <__sflush_r+0xae>
 803321a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 803321e:	4299      	cmp	r1, r3
 8033220:	d002      	beq.n	8033228 <__sflush_r+0x8c>
 8033222:	4628      	mov	r0, r5
 8033224:	f7ff fc9c 	bl	8032b60 <_free_r>
 8033228:	2300      	movs	r3, #0
 803322a:	6363      	str	r3, [r4, #52]	@ 0x34
 803322c:	e00d      	b.n	803324a <__sflush_r+0xae>
 803322e:	2301      	movs	r3, #1
 8033230:	4628      	mov	r0, r5
 8033232:	47b0      	blx	r6
 8033234:	4602      	mov	r2, r0
 8033236:	1c50      	adds	r0, r2, #1
 8033238:	d1c9      	bne.n	80331ce <__sflush_r+0x32>
 803323a:	682b      	ldr	r3, [r5, #0]
 803323c:	2b00      	cmp	r3, #0
 803323e:	d0c6      	beq.n	80331ce <__sflush_r+0x32>
 8033240:	2b1d      	cmp	r3, #29
 8033242:	d001      	beq.n	8033248 <__sflush_r+0xac>
 8033244:	2b16      	cmp	r3, #22
 8033246:	d11d      	bne.n	8033284 <__sflush_r+0xe8>
 8033248:	602f      	str	r7, [r5, #0]
 803324a:	2000      	movs	r0, #0
 803324c:	e021      	b.n	8033292 <__sflush_r+0xf6>
 803324e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033252:	b21b      	sxth	r3, r3
 8033254:	e01a      	b.n	803328c <__sflush_r+0xf0>
 8033256:	690f      	ldr	r7, [r1, #16]
 8033258:	2f00      	cmp	r7, #0
 803325a:	d0f6      	beq.n	803324a <__sflush_r+0xae>
 803325c:	0793      	lsls	r3, r2, #30
 803325e:	680e      	ldr	r6, [r1, #0]
 8033260:	600f      	str	r7, [r1, #0]
 8033262:	bf0c      	ite	eq
 8033264:	694b      	ldreq	r3, [r1, #20]
 8033266:	2300      	movne	r3, #0
 8033268:	eba6 0807 	sub.w	r8, r6, r7
 803326c:	608b      	str	r3, [r1, #8]
 803326e:	f1b8 0f00 	cmp.w	r8, #0
 8033272:	ddea      	ble.n	803324a <__sflush_r+0xae>
 8033274:	4643      	mov	r3, r8
 8033276:	463a      	mov	r2, r7
 8033278:	6a21      	ldr	r1, [r4, #32]
 803327a:	4628      	mov	r0, r5
 803327c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 803327e:	47b0      	blx	r6
 8033280:	2800      	cmp	r0, #0
 8033282:	dc08      	bgt.n	8033296 <__sflush_r+0xfa>
 8033284:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033288:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 803328c:	f04f 30ff 	mov.w	r0, #4294967295
 8033290:	81a3      	strh	r3, [r4, #12]
 8033292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8033296:	4407      	add	r7, r0
 8033298:	eba8 0800 	sub.w	r8, r8, r0
 803329c:	e7e7      	b.n	803326e <__sflush_r+0xd2>
 803329e:	bf00      	nop
 80332a0:	dfbffffe 	.word	0xdfbffffe

080332a4 <_fflush_r>:
 80332a4:	b538      	push	{r3, r4, r5, lr}
 80332a6:	690b      	ldr	r3, [r1, #16]
 80332a8:	4605      	mov	r5, r0
 80332aa:	460c      	mov	r4, r1
 80332ac:	b913      	cbnz	r3, 80332b4 <_fflush_r+0x10>
 80332ae:	2500      	movs	r5, #0
 80332b0:	4628      	mov	r0, r5
 80332b2:	bd38      	pop	{r3, r4, r5, pc}
 80332b4:	b118      	cbz	r0, 80332be <_fflush_r+0x1a>
 80332b6:	6a03      	ldr	r3, [r0, #32]
 80332b8:	b90b      	cbnz	r3, 80332be <_fflush_r+0x1a>
 80332ba:	f7ff fa79 	bl	80327b0 <__sinit>
 80332be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80332c2:	2b00      	cmp	r3, #0
 80332c4:	d0f3      	beq.n	80332ae <_fflush_r+0xa>
 80332c6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80332c8:	07d0      	lsls	r0, r2, #31
 80332ca:	d404      	bmi.n	80332d6 <_fflush_r+0x32>
 80332cc:	0599      	lsls	r1, r3, #22
 80332ce:	d402      	bmi.n	80332d6 <_fflush_r+0x32>
 80332d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80332d2:	f7ff fbd8 	bl	8032a86 <__retarget_lock_acquire_recursive>
 80332d6:	4628      	mov	r0, r5
 80332d8:	4621      	mov	r1, r4
 80332da:	f7ff ff5f 	bl	803319c <__sflush_r>
 80332de:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80332e0:	4605      	mov	r5, r0
 80332e2:	07da      	lsls	r2, r3, #31
 80332e4:	d4e4      	bmi.n	80332b0 <_fflush_r+0xc>
 80332e6:	89a3      	ldrh	r3, [r4, #12]
 80332e8:	059b      	lsls	r3, r3, #22
 80332ea:	d4e1      	bmi.n	80332b0 <_fflush_r+0xc>
 80332ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80332ee:	f7ff fbcb 	bl	8032a88 <__retarget_lock_release_recursive>
 80332f2:	e7dd      	b.n	80332b0 <_fflush_r+0xc>

080332f4 <__swbuf_r>:
 80332f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80332f6:	460e      	mov	r6, r1
 80332f8:	4614      	mov	r4, r2
 80332fa:	4605      	mov	r5, r0
 80332fc:	b118      	cbz	r0, 8033306 <__swbuf_r+0x12>
 80332fe:	6a03      	ldr	r3, [r0, #32]
 8033300:	b90b      	cbnz	r3, 8033306 <__swbuf_r+0x12>
 8033302:	f7ff fa55 	bl	80327b0 <__sinit>
 8033306:	69a3      	ldr	r3, [r4, #24]
 8033308:	60a3      	str	r3, [r4, #8]
 803330a:	89a3      	ldrh	r3, [r4, #12]
 803330c:	071a      	lsls	r2, r3, #28
 803330e:	d501      	bpl.n	8033314 <__swbuf_r+0x20>
 8033310:	6923      	ldr	r3, [r4, #16]
 8033312:	b943      	cbnz	r3, 8033326 <__swbuf_r+0x32>
 8033314:	4621      	mov	r1, r4
 8033316:	4628      	mov	r0, r5
 8033318:	f000 f82a 	bl	8033370 <__swsetup_r>
 803331c:	b118      	cbz	r0, 8033326 <__swbuf_r+0x32>
 803331e:	f04f 37ff 	mov.w	r7, #4294967295
 8033322:	4638      	mov	r0, r7
 8033324:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8033326:	6823      	ldr	r3, [r4, #0]
 8033328:	b2f6      	uxtb	r6, r6
 803332a:	6922      	ldr	r2, [r4, #16]
 803332c:	4637      	mov	r7, r6
 803332e:	1a98      	subs	r0, r3, r2
 8033330:	6963      	ldr	r3, [r4, #20]
 8033332:	4283      	cmp	r3, r0
 8033334:	dc05      	bgt.n	8033342 <__swbuf_r+0x4e>
 8033336:	4621      	mov	r1, r4
 8033338:	4628      	mov	r0, r5
 803333a:	f7ff ffb3 	bl	80332a4 <_fflush_r>
 803333e:	2800      	cmp	r0, #0
 8033340:	d1ed      	bne.n	803331e <__swbuf_r+0x2a>
 8033342:	68a3      	ldr	r3, [r4, #8]
 8033344:	3b01      	subs	r3, #1
 8033346:	60a3      	str	r3, [r4, #8]
 8033348:	6823      	ldr	r3, [r4, #0]
 803334a:	1c5a      	adds	r2, r3, #1
 803334c:	6022      	str	r2, [r4, #0]
 803334e:	701e      	strb	r6, [r3, #0]
 8033350:	1c43      	adds	r3, r0, #1
 8033352:	6962      	ldr	r2, [r4, #20]
 8033354:	429a      	cmp	r2, r3
 8033356:	d004      	beq.n	8033362 <__swbuf_r+0x6e>
 8033358:	89a3      	ldrh	r3, [r4, #12]
 803335a:	07db      	lsls	r3, r3, #31
 803335c:	d5e1      	bpl.n	8033322 <__swbuf_r+0x2e>
 803335e:	2e0a      	cmp	r6, #10
 8033360:	d1df      	bne.n	8033322 <__swbuf_r+0x2e>
 8033362:	4621      	mov	r1, r4
 8033364:	4628      	mov	r0, r5
 8033366:	f7ff ff9d 	bl	80332a4 <_fflush_r>
 803336a:	2800      	cmp	r0, #0
 803336c:	d0d9      	beq.n	8033322 <__swbuf_r+0x2e>
 803336e:	e7d6      	b.n	803331e <__swbuf_r+0x2a>

08033370 <__swsetup_r>:
 8033370:	b538      	push	{r3, r4, r5, lr}
 8033372:	4b29      	ldr	r3, [pc, #164]	@ (8033418 <__swsetup_r+0xa8>)
 8033374:	4605      	mov	r5, r0
 8033376:	460c      	mov	r4, r1
 8033378:	6818      	ldr	r0, [r3, #0]
 803337a:	b118      	cbz	r0, 8033384 <__swsetup_r+0x14>
 803337c:	6a03      	ldr	r3, [r0, #32]
 803337e:	b90b      	cbnz	r3, 8033384 <__swsetup_r+0x14>
 8033380:	f7ff fa16 	bl	80327b0 <__sinit>
 8033384:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033388:	0719      	lsls	r1, r3, #28
 803338a:	d422      	bmi.n	80333d2 <__swsetup_r+0x62>
 803338c:	06da      	lsls	r2, r3, #27
 803338e:	d407      	bmi.n	80333a0 <__swsetup_r+0x30>
 8033390:	2209      	movs	r2, #9
 8033392:	602a      	str	r2, [r5, #0]
 8033394:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033398:	f04f 30ff 	mov.w	r0, #4294967295
 803339c:	81a3      	strh	r3, [r4, #12]
 803339e:	e033      	b.n	8033408 <__swsetup_r+0x98>
 80333a0:	0758      	lsls	r0, r3, #29
 80333a2:	d512      	bpl.n	80333ca <__swsetup_r+0x5a>
 80333a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80333a6:	b141      	cbz	r1, 80333ba <__swsetup_r+0x4a>
 80333a8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80333ac:	4299      	cmp	r1, r3
 80333ae:	d002      	beq.n	80333b6 <__swsetup_r+0x46>
 80333b0:	4628      	mov	r0, r5
 80333b2:	f7ff fbd5 	bl	8032b60 <_free_r>
 80333b6:	2300      	movs	r3, #0
 80333b8:	6363      	str	r3, [r4, #52]	@ 0x34
 80333ba:	89a3      	ldrh	r3, [r4, #12]
 80333bc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80333c0:	81a3      	strh	r3, [r4, #12]
 80333c2:	2300      	movs	r3, #0
 80333c4:	6063      	str	r3, [r4, #4]
 80333c6:	6923      	ldr	r3, [r4, #16]
 80333c8:	6023      	str	r3, [r4, #0]
 80333ca:	89a3      	ldrh	r3, [r4, #12]
 80333cc:	f043 0308 	orr.w	r3, r3, #8
 80333d0:	81a3      	strh	r3, [r4, #12]
 80333d2:	6923      	ldr	r3, [r4, #16]
 80333d4:	b94b      	cbnz	r3, 80333ea <__swsetup_r+0x7a>
 80333d6:	89a3      	ldrh	r3, [r4, #12]
 80333d8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80333dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80333e0:	d003      	beq.n	80333ea <__swsetup_r+0x7a>
 80333e2:	4621      	mov	r1, r4
 80333e4:	4628      	mov	r0, r5
 80333e6:	f000 f84c 	bl	8033482 <__smakebuf_r>
 80333ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80333ee:	f013 0201 	ands.w	r2, r3, #1
 80333f2:	d00a      	beq.n	803340a <__swsetup_r+0x9a>
 80333f4:	2200      	movs	r2, #0
 80333f6:	60a2      	str	r2, [r4, #8]
 80333f8:	6962      	ldr	r2, [r4, #20]
 80333fa:	4252      	negs	r2, r2
 80333fc:	61a2      	str	r2, [r4, #24]
 80333fe:	6922      	ldr	r2, [r4, #16]
 8033400:	b942      	cbnz	r2, 8033414 <__swsetup_r+0xa4>
 8033402:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8033406:	d1c5      	bne.n	8033394 <__swsetup_r+0x24>
 8033408:	bd38      	pop	{r3, r4, r5, pc}
 803340a:	0799      	lsls	r1, r3, #30
 803340c:	bf58      	it	pl
 803340e:	6962      	ldrpl	r2, [r4, #20]
 8033410:	60a2      	str	r2, [r4, #8]
 8033412:	e7f4      	b.n	80333fe <__swsetup_r+0x8e>
 8033414:	2000      	movs	r0, #0
 8033416:	e7f7      	b.n	8033408 <__swsetup_r+0x98>
 8033418:	20000254 	.word	0x20000254

0803341c <memchr>:
 803341c:	b2c9      	uxtb	r1, r1
 803341e:	4603      	mov	r3, r0
 8033420:	4402      	add	r2, r0
 8033422:	b510      	push	{r4, lr}
 8033424:	4293      	cmp	r3, r2
 8033426:	4618      	mov	r0, r3
 8033428:	d101      	bne.n	803342e <memchr+0x12>
 803342a:	2000      	movs	r0, #0
 803342c:	e003      	b.n	8033436 <memchr+0x1a>
 803342e:	7804      	ldrb	r4, [r0, #0]
 8033430:	3301      	adds	r3, #1
 8033432:	428c      	cmp	r4, r1
 8033434:	d1f6      	bne.n	8033424 <memchr+0x8>
 8033436:	bd10      	pop	{r4, pc}

08033438 <__swhatbuf_r>:
 8033438:	b570      	push	{r4, r5, r6, lr}
 803343a:	460c      	mov	r4, r1
 803343c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8033440:	b096      	sub	sp, #88	@ 0x58
 8033442:	4615      	mov	r5, r2
 8033444:	2900      	cmp	r1, #0
 8033446:	461e      	mov	r6, r3
 8033448:	da0c      	bge.n	8033464 <__swhatbuf_r+0x2c>
 803344a:	89a3      	ldrh	r3, [r4, #12]
 803344c:	2100      	movs	r1, #0
 803344e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8033452:	bf14      	ite	ne
 8033454:	2340      	movne	r3, #64	@ 0x40
 8033456:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 803345a:	2000      	movs	r0, #0
 803345c:	6031      	str	r1, [r6, #0]
 803345e:	602b      	str	r3, [r5, #0]
 8033460:	b016      	add	sp, #88	@ 0x58
 8033462:	bd70      	pop	{r4, r5, r6, pc}
 8033464:	466a      	mov	r2, sp
 8033466:	f000 f849 	bl	80334fc <_fstat_r>
 803346a:	2800      	cmp	r0, #0
 803346c:	dbed      	blt.n	803344a <__swhatbuf_r+0x12>
 803346e:	9901      	ldr	r1, [sp, #4]
 8033470:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8033474:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8033478:	4259      	negs	r1, r3
 803347a:	4159      	adcs	r1, r3
 803347c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8033480:	e7eb      	b.n	803345a <__swhatbuf_r+0x22>

08033482 <__smakebuf_r>:
 8033482:	898b      	ldrh	r3, [r1, #12]
 8033484:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8033486:	079d      	lsls	r5, r3, #30
 8033488:	4606      	mov	r6, r0
 803348a:	460c      	mov	r4, r1
 803348c:	d507      	bpl.n	803349e <__smakebuf_r+0x1c>
 803348e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8033492:	6023      	str	r3, [r4, #0]
 8033494:	6123      	str	r3, [r4, #16]
 8033496:	2301      	movs	r3, #1
 8033498:	6163      	str	r3, [r4, #20]
 803349a:	b003      	add	sp, #12
 803349c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803349e:	ab01      	add	r3, sp, #4
 80334a0:	466a      	mov	r2, sp
 80334a2:	f7ff ffc9 	bl	8033438 <__swhatbuf_r>
 80334a6:	9f00      	ldr	r7, [sp, #0]
 80334a8:	4605      	mov	r5, r0
 80334aa:	4630      	mov	r0, r6
 80334ac:	4639      	mov	r1, r7
 80334ae:	f7ff f859 	bl	8032564 <_malloc_r>
 80334b2:	b948      	cbnz	r0, 80334c8 <__smakebuf_r+0x46>
 80334b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80334b8:	059a      	lsls	r2, r3, #22
 80334ba:	d4ee      	bmi.n	803349a <__smakebuf_r+0x18>
 80334bc:	f023 0303 	bic.w	r3, r3, #3
 80334c0:	f043 0302 	orr.w	r3, r3, #2
 80334c4:	81a3      	strh	r3, [r4, #12]
 80334c6:	e7e2      	b.n	803348e <__smakebuf_r+0xc>
 80334c8:	89a3      	ldrh	r3, [r4, #12]
 80334ca:	6020      	str	r0, [r4, #0]
 80334cc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80334d0:	81a3      	strh	r3, [r4, #12]
 80334d2:	9b01      	ldr	r3, [sp, #4]
 80334d4:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80334d8:	b15b      	cbz	r3, 80334f2 <__smakebuf_r+0x70>
 80334da:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80334de:	4630      	mov	r0, r6
 80334e0:	f000 f81e 	bl	8033520 <_isatty_r>
 80334e4:	b128      	cbz	r0, 80334f2 <__smakebuf_r+0x70>
 80334e6:	89a3      	ldrh	r3, [r4, #12]
 80334e8:	f023 0303 	bic.w	r3, r3, #3
 80334ec:	f043 0301 	orr.w	r3, r3, #1
 80334f0:	81a3      	strh	r3, [r4, #12]
 80334f2:	89a3      	ldrh	r3, [r4, #12]
 80334f4:	431d      	orrs	r5, r3
 80334f6:	81a5      	strh	r5, [r4, #12]
 80334f8:	e7cf      	b.n	803349a <__smakebuf_r+0x18>
	...

080334fc <_fstat_r>:
 80334fc:	b538      	push	{r3, r4, r5, lr}
 80334fe:	2300      	movs	r3, #0
 8033500:	4d06      	ldr	r5, [pc, #24]	@ (803351c <_fstat_r+0x20>)
 8033502:	4604      	mov	r4, r0
 8033504:	4608      	mov	r0, r1
 8033506:	4611      	mov	r1, r2
 8033508:	602b      	str	r3, [r5, #0]
 803350a:	f7cd fcfc 	bl	8000f06 <_fstat>
 803350e:	1c43      	adds	r3, r0, #1
 8033510:	d102      	bne.n	8033518 <_fstat_r+0x1c>
 8033512:	682b      	ldr	r3, [r5, #0]
 8033514:	b103      	cbz	r3, 8033518 <_fstat_r+0x1c>
 8033516:	6023      	str	r3, [r4, #0]
 8033518:	bd38      	pop	{r3, r4, r5, pc}
 803351a:	bf00      	nop
 803351c:	20083540 	.word	0x20083540

08033520 <_isatty_r>:
 8033520:	b538      	push	{r3, r4, r5, lr}
 8033522:	2300      	movs	r3, #0
 8033524:	4d05      	ldr	r5, [pc, #20]	@ (803353c <_isatty_r+0x1c>)
 8033526:	4604      	mov	r4, r0
 8033528:	4608      	mov	r0, r1
 803352a:	602b      	str	r3, [r5, #0]
 803352c:	f7cd fcf0 	bl	8000f10 <_isatty>
 8033530:	1c43      	adds	r3, r0, #1
 8033532:	d102      	bne.n	803353a <_isatty_r+0x1a>
 8033534:	682b      	ldr	r3, [r5, #0]
 8033536:	b103      	cbz	r3, 803353a <_isatty_r+0x1a>
 8033538:	6023      	str	r3, [r4, #0]
 803353a:	bd38      	pop	{r3, r4, r5, pc}
 803353c:	20083540 	.word	0x20083540

08033540 <_init>:
 8033540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033542:	bf00      	nop
 8033544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033546:	bc08      	pop	{r3}
 8033548:	469e      	mov	lr, r3
 803354a:	4770      	bx	lr

0803354c <_fini>:
 803354c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803354e:	bf00      	nop
 8033550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033552:	bc08      	pop	{r3}
 8033554:	469e      	mov	lr, r3
 8033556:	4770      	bx	lr
