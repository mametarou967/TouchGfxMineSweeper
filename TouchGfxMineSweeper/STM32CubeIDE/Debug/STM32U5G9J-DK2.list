
STM32U5G9J-DK2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000274  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00033328  08000280  08000280  00001280  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005160  080335a8  080335a8  000345a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08038708  08038708  00039708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  080388b0  080388b0  000398b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  080388c8  080388c8  000398c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  080388d6  080388d6  000398d6  2**0
                  ALLOC
  7 .ARM          00000000  080388d8  080388d8  00107010  2**0
                  CONTENTS
  8 .preinit_array 00000000  080388d8  080388d8  00107010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000020  080388d8  080388d8  000398d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  080388f8  080388f8  000398f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000002a8  20000000  08038900  0003a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          0008347c  200002a8  08038ba8  0003a2a8  2**2
                  ALLOC
 13 ._user_heap_stack 00002004  20083724  08038ba8  0003a724  2**0
                  ALLOC
 14 .ARM.attributes 00000036  00000000  00000000  00107010  2**0
                  CONTENTS, READONLY
 15 FramebufferSection 00177000  20085728  20085728  0003a728  2**2
                  ALLOC
 16 VideobufferSection 00000000  201fc728  201fc728  00107046  2**0
                  CONTENTS
 17 ExtFlashSection 000cc010  a0000000  a0000000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .debug_info   000aa68a  00000000  00000000  00107046  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00013ffc  00000000  00000000  001b16d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loclists 0001ef51  00000000  00000000  001c56cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 000035f0  00000000  00000000  001e4620  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 000033ff  00000000  00000000  001e7c10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0004fc89  00000000  00000000  001eb00f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line   0005d2b2  00000000  00000000  0023ac98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001c121e  00000000  00000000  00297f4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  00459168  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00009c88  00000000  00000000  0045922c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line_str 0000007e  00000000  00000000  00462eb4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000280 <__do_global_dtors_aux>:
 8000280:	b510      	push	{r4, lr}
 8000282:	4c05      	ldr	r4, [pc, #20]	@ (8000298 <__do_global_dtors_aux+0x18>)
 8000284:	7823      	ldrb	r3, [r4, #0]
 8000286:	b933      	cbnz	r3, 8000296 <__do_global_dtors_aux+0x16>
 8000288:	4b04      	ldr	r3, [pc, #16]	@ (800029c <__do_global_dtors_aux+0x1c>)
 800028a:	b113      	cbz	r3, 8000292 <__do_global_dtors_aux+0x12>
 800028c:	4804      	ldr	r0, [pc, #16]	@ (80002a0 <__do_global_dtors_aux+0x20>)
 800028e:	f3af 8000 	nop.w
 8000292:	2301      	movs	r3, #1
 8000294:	7023      	strb	r3, [r4, #0]
 8000296:	bd10      	pop	{r4, pc}
 8000298:	200002a8 	.word	0x200002a8
 800029c:	00000000 	.word	0x00000000
 80002a0:	08033590 	.word	0x08033590

080002a4 <frame_dummy>:
 80002a4:	b508      	push	{r3, lr}
 80002a6:	4b03      	ldr	r3, [pc, #12]	@ (80002b4 <frame_dummy+0x10>)
 80002a8:	b11b      	cbz	r3, 80002b2 <frame_dummy+0xe>
 80002aa:	4903      	ldr	r1, [pc, #12]	@ (80002b8 <frame_dummy+0x14>)
 80002ac:	4803      	ldr	r0, [pc, #12]	@ (80002bc <frame_dummy+0x18>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	bd08      	pop	{r3, pc}
 80002b4:	00000000 	.word	0x00000000
 80002b8:	200002ac 	.word	0x200002ac
 80002bc:	08033590 	.word	0x08033590

080002c0 <StartDefaultTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80002c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN defaultTask */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80002c2:	2001      	movs	r0, #1
 80002c4:	f008 fc19 	bl	8008afa <osDelay>
  for(;;)
 80002c8:	e7fb      	b.n	80002c2 <StartDefaultTask+0x2>
	...

080002cc <vApplicationIdleHook>:
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80002cc:	2000      	movs	r0, #0
 80002ce:	4901      	ldr	r1, [pc, #4]	@ (80002d4 <vApplicationIdleHook+0x8>)
 80002d0:	f009 be50 	b.w	8009f74 <vTaskSetApplicationTaskTag>
 80002d4:	08001385 	.word	0x08001385

080002d8 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 80002d8:	b508      	push	{r3, lr}
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002da:	2100      	movs	r1, #0
 80002dc:	4a06      	ldr	r2, [pc, #24]	@ (80002f8 <MX_FREERTOS_Init+0x20>)
 80002de:	4807      	ldr	r0, [pc, #28]	@ (80002fc <MX_FREERTOS_Init+0x24>)
 80002e0:	f008 fbc0 	bl	8008a64 <osThreadNew>
 80002e4:	4b06      	ldr	r3, [pc, #24]	@ (8000300 <MX_FREERTOS_Init+0x28>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002e6:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002e8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002ea:	4a06      	ldr	r2, [pc, #24]	@ (8000304 <MX_FREERTOS_Init+0x2c>)
 80002ec:	4806      	ldr	r0, [pc, #24]	@ (8000308 <MX_FREERTOS_Init+0x30>)
 80002ee:	f008 fbb9 	bl	8008a64 <osThreadNew>
 80002f2:	4b06      	ldr	r3, [pc, #24]	@ (800030c <MX_FREERTOS_Init+0x34>)
 80002f4:	6018      	str	r0, [r3, #0]
}
 80002f6:	bd08      	pop	{r3, pc}
 80002f8:	080336b4 	.word	0x080336b4
 80002fc:	080002c1 	.word	0x080002c1
 8000300:	200002c8 	.word	0x200002c8
 8000304:	08033690 	.word	0x08033690
 8000308:	08000fbb 	.word	0x08000fbb
 800030c:	200002c4 	.word	0x200002c4

08000310 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000310:	b530      	push	{r4, r5, lr}
 8000312:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000314:	2260      	movs	r2, #96	@ 0x60
 8000316:	2100      	movs	r1, #0
 8000318:	a806      	add	r0, sp, #24
 800031a:	f032 fafc 	bl	8032916 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800031e:	2218      	movs	r2, #24
 8000320:	2100      	movs	r1, #0
 8000322:	4668      	mov	r0, sp
 8000324:	f032 faf7 	bl	8032916 <memset>

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000328:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 800032c:	f006 f924 	bl	8006578 <HAL_PWREx_ControlVoltageScaling>
 8000330:	b108      	cbz	r0, 8000336 <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000332:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000334:	e7fe      	b.n	8000334 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000336:	2201      	movs	r2, #1
 8000338:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800033c:	2503      	movs	r5, #3
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800033e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000342:	2404      	movs	r4, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000344:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 80;
 8000346:	2250      	movs	r2, #80	@ 0x50
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000348:	e9cd 001c 	strd	r0, r0, [sp, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 800034c:	9017      	str	r0, [sp, #92]	@ 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800034e:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000350:	e9cd 3514 	strd	r3, r5, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000354:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000358:	e9cd 331a 	strd	r3, r3, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLM = 4;
 800035c:	9416      	str	r4, [sp, #88]	@ 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800035e:	f006 fbd1 	bl	8006b04 <HAL_RCC_OscConfig>
 8000362:	b108      	cbz	r0, 8000368 <SystemClock_Config+0x58>
 8000364:	b672      	cpsid	i
  while (1)
 8000366:	e7fe      	b.n	8000366 <SystemClock_Config+0x56>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000368:	231f      	movs	r3, #31
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800036a:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 800036e:	e9cd 0004 	strd	r0, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000372:	4621      	mov	r1, r4
 8000374:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000376:	e9cd 3500 	strd	r3, r5, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800037a:	f006 fa61 	bl	8006840 <HAL_RCC_ClockConfig>
 800037e:	b108      	cbz	r0, 8000384 <SystemClock_Config+0x74>
 8000380:	b672      	cpsid	i
  while (1)
 8000382:	e7fe      	b.n	8000382 <SystemClock_Config+0x72>
}
 8000384:	b01f      	add	sp, #124	@ 0x7c
 8000386:	bd30      	pop	{r4, r5, pc}

08000388 <main>:
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b098      	sub	sp, #96	@ 0x60
  HAL_Init();
 800038c:	f003 fc78 	bl	8003c80 <HAL_Init>
  SystemClock_Config();
 8000390:	f7ff ffbe 	bl	8000310 <SystemClock_Config>
  HAL_PWREx_DisableUCPDDeadBattery();
 8000394:	f006 f964 	bl	8006660 <HAL_PWREx_DisableUCPDDeadBattery>
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 8000398:	2002      	movs	r0, #2
 800039a:	f006 f935 	bl	8006608 <HAL_PWREx_ConfigSupply>
 800039e:	4605      	mov	r5, r0
 80003a0:	b108      	cbz	r0, 80003a6 <main+0x1e>
 80003a2:	b672      	cpsid	i
  while (1)
 80003a4:	e7fe      	b.n	80003a4 <main+0x1c>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003a6:	f04f 0914 	mov.w	r9, #20
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003aa:	4cc0      	ldr	r4, [pc, #768]	@ (80006ac <main+0x324>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003ac:	4601      	mov	r1, r0
 80003ae:	464a      	mov	r2, r9
 80003b0:	a80b      	add	r0, sp, #44	@ 0x2c
 80003b2:	f032 fab0 	bl	8032916 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003b6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003ba:	2601      	movs	r6, #1
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003bc:	f043 0310 	orr.w	r3, r3, #16
 80003c0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003c4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003c8:	f04f 0810 	mov.w	r8, #16
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003cc:	f003 0310 	and.w	r3, r3, #16
 80003d0:	9304      	str	r3, [sp, #16]
 80003d2:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003d4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80003d8:	f04f 0a20 	mov.w	sl, #32
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003dc:	f043 0304 	orr.w	r3, r3, #4
 80003e0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003e4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003e8:	2201      	movs	r2, #1
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003ea:	f003 0304 	and.w	r3, r3, #4
 80003ee:	9305      	str	r3, [sp, #20]
 80003f0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003f6:	2150      	movs	r1, #80	@ 0x50
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f8:	f043 0320 	orr.w	r3, r3, #32
 80003fc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000400:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000404:	48aa      	ldr	r0, [pc, #680]	@ (80006b0 <main+0x328>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000406:	f003 0320 	and.w	r3, r3, #32
 800040a:	9306      	str	r3, [sp, #24]
 800040c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800040e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000412:	2702      	movs	r7, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000414:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000418:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800041c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000420:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000424:	9307      	str	r3, [sp, #28]
 8000426:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000428:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800042c:	f043 0302 	orr.w	r3, r3, #2
 8000430:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000434:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000438:	f003 0302 	and.w	r3, r3, #2
 800043c:	9308      	str	r3, [sp, #32]
 800043e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000440:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000444:	f043 0308 	orr.w	r3, r3, #8
 8000448:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800044c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000450:	f003 0308 	and.w	r3, r3, #8
 8000454:	9309      	str	r3, [sp, #36]	@ 0x24
 8000456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000458:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800045c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000460:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000464:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000468:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800046c:	930a      	str	r3, [sp, #40]	@ 0x28
 800046e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000470:	f004 fb26 	bl	8004ac0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000474:	462a      	mov	r2, r5
 8000476:	f641 4101 	movw	r1, #7169	@ 0x1c01
 800047a:	488e      	ldr	r0, [pc, #568]	@ (80006b4 <main+0x32c>)
 800047c:	f004 fb20 	bl	8004ac0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, USER_LD2_RED_Pin|USER_LD3_GREEN_Pin, GPIO_PIN_SET);
 8000480:	2201      	movs	r2, #1
 8000482:	4649      	mov	r1, r9
 8000484:	488c      	ldr	r0, [pc, #560]	@ (80006b8 <main+0x330>)
 8000486:	f004 fb1b 	bl	8004ac0 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 800048a:	4889      	ldr	r0, [pc, #548]	@ (80006b0 <main+0x328>)
 800048c:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800048e:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000492:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 8000496:	f004 f9ff 	bl	8004898 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800049a:	4b88      	ldr	r3, [pc, #544]	@ (80006bc <main+0x334>)
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 800049c:	4884      	ldr	r0, [pc, #528]	@ (80006b0 <main+0x328>)
 800049e:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80004a0:	e9cd a30b 	strd	sl, r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80004a4:	960d      	str	r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004a6:	f04f 0a11 	mov.w	sl, #17
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 80004aa:	f004 f9f5 	bl	8004898 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ae:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004b0:	487f      	ldr	r0, [pc, #508]	@ (80006b0 <main+0x328>)
 80004b2:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004b4:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004b8:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004bc:	f004 f9ec 	bl	8004898 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 80004c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004c4:	487b      	ldr	r0, [pc, #492]	@ (80006b4 <main+0x32c>)
 80004c6:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80004c8:	e9cd 350b 	strd	r3, r5, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80004cc:	970d      	str	r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004ce:	f004 f9e3 	bl	8004898 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin;
 80004d2:	f641 4301 	movw	r3, #7169	@ 0x1c01
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004d6:	4877      	ldr	r0, [pc, #476]	@ (80006b4 <main+0x32c>)
 80004d8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004da:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004de:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004e2:	f004 f9d9 	bl	8004898 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004e6:	4874      	ldr	r0, [pc, #464]	@ (80006b8 <main+0x330>)
 80004e8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ea:	e9cd 9a0b 	strd	r9, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004ee:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004f2:	f004 f9d1 	bl	8004898 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI5_IRQn, 5, 0);
 80004f6:	462a      	mov	r2, r5
 80004f8:	2105      	movs	r1, #5
 80004fa:	4640      	mov	r0, r8
 80004fc:	f003 fc28 	bl	8003d50 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI5_IRQn);
 8000500:	4640      	mov	r0, r8
 8000502:	f003 fc55 	bl	8003db0 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000506:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800050a:	462a      	mov	r2, r5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800050c:	4333      	orrs	r3, r6
 800050e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8000512:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000516:	2105      	movs	r1, #5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000518:	4033      	ands	r3, r6
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800051a:	201d      	movs	r0, #29
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800051c:	9303      	str	r3, [sp, #12]
 800051e:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000520:	f003 fc16 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 8000524:	201d      	movs	r0, #29
 8000526:	f003 fc43 	bl	8003db0 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPDMA1_Channel1_IRQn, 5, 0);
 800052a:	462a      	mov	r2, r5
 800052c:	2105      	movs	r1, #5
 800052e:	201e      	movs	r0, #30
 8000530:	f003 fc0e 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel1_IRQn);
 8000534:	201e      	movs	r0, #30
 8000536:	f003 fc3b 	bl	8003db0 <HAL_NVIC_EnableIRQ>
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 800053a:	4628      	mov	r0, r5
 800053c:	f004 fea2 	bl	8005284 <HAL_ICACHE_ConfigAssociativityMode>
 8000540:	b108      	cbz	r0, 8000546 <main+0x1be>
 8000542:	b672      	cpsid	i
  while (1)
 8000544:	e7fe      	b.n	8000544 <main+0x1bc>
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000546:	f004 fead 	bl	80052a4 <HAL_ICACHE_Enable>
 800054a:	b108      	cbz	r0, 8000550 <main+0x1c8>
 800054c:	b672      	cpsid	i
  while (1)
 800054e:	e7fe      	b.n	800054e <main+0x1c6>
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000550:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
  hdcache1.Instance = DCACHE1;
 8000554:	485a      	ldr	r0, [pc, #360]	@ (80006c0 <main+0x338>)
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000556:	4b5b      	ldr	r3, [pc, #364]	@ (80006c4 <main+0x33c>)
 8000558:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 800055c:	f003 fce8 	bl	8003f30 <HAL_DCACHE_Init>
 8000560:	b108      	cbz	r0, 8000566 <main+0x1de>
 8000562:	b672      	cpsid	i
  while (1)
 8000564:	e7fe      	b.n	8000564 <main+0x1dc>
  hdcache2.Instance = DCACHE2;
 8000566:	4858      	ldr	r0, [pc, #352]	@ (80006c8 <main+0x340>)
 8000568:	4b58      	ldr	r3, [pc, #352]	@ (80006cc <main+0x344>)
  hdcache2.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 800056a:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache2) != HAL_OK)
 800056e:	f003 fcdf 	bl	8003f30 <HAL_DCACHE_Init>
 8000572:	4605      	mov	r5, r0
 8000574:	b108      	cbz	r0, 800057a <main+0x1f2>
 8000576:	b672      	cpsid	i
  while (1)
 8000578:	e7fe      	b.n	8000578 <main+0x1f0>
   __HAL_RCC_SYSCFG_CLK_ENABLE();
 800057a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800057e:	f043 0302 	orr.w	r3, r3, #2
 8000582:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8000586:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800058a:	f003 0302 	and.w	r3, r3, #2
 800058e:	9302      	str	r3, [sp, #8]
 8000590:	9b02      	ldr	r3, [sp, #8]
   HAL_SYSCFG_DisableSRAMCached();
 8000592:	f003 fbc3 	bl	8003d1c <HAL_SYSCFG_DisableSRAMCached>
  hcrc.Instance = CRC;
 8000596:	484e      	ldr	r0, [pc, #312]	@ (80006d0 <main+0x348>)
 8000598:	4b4e      	ldr	r3, [pc, #312]	@ (80006d4 <main+0x34c>)
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800059a:	e9c0 5505 	strd	r5, r5, [r0, #20]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800059e:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 80005a0:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005a2:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005a4:	f003 fc4c 	bl	8003e40 <HAL_CRC_Init>
 80005a8:	4605      	mov	r5, r0
 80005aa:	b108      	cbz	r0, 80005b0 <main+0x228>
 80005ac:	b672      	cpsid	i
  while (1)
 80005ae:	e7fe      	b.n	80005ae <main+0x226>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80005b0:	2234      	movs	r2, #52	@ 0x34
 80005b2:	4601      	mov	r1, r0
 80005b4:	a80b      	add	r0, sp, #44	@ 0x2c
 80005b6:	f032 f9ae 	bl	8032916 <memset>
  hltdc.Instance = LTDC;
 80005ba:	4c47      	ldr	r4, [pc, #284]	@ (80006d8 <main+0x350>)
 80005bc:	4b47      	ldr	r3, [pc, #284]	@ (80006dc <main+0x354>)
  hltdc.Init.AccumulatedActiveH = 492;
 80005be:	f44f 7c4b 	mov.w	ip, #812	@ 0x32c
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80005c2:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.HorizontalSync = 4;
 80005c6:	2304      	movs	r3, #4
  hltdc.Init.VerticalSync = 4;
 80005c8:	e9c4 3305 	strd	r3, r3, [r4, #20]
  hltdc.Init.AccumulatedHBP = 12;
 80005cc:	230c      	movs	r3, #12
  hltdc.Init.AccumulatedVBP = 12;
 80005ce:	e9c4 3307 	strd	r3, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 492;
 80005d2:	f44f 73f6 	mov.w	r3, #492	@ 0x1ec
  hltdc.Init.TotalHeigh = 506;
 80005d6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
  hltdc.Init.AccumulatedActiveH = 492;
 80005da:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 506;
 80005de:	f44f 73fd 	mov.w	r3, #506	@ 0x1fa
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005e2:	4620      	mov	r0, r4
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80005e4:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 506;
 80005e8:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80005ec:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
 80005ee:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80005f0:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005f4:	f005 feaa 	bl	800634c <HAL_LTDC_Init>
 80005f8:	4602      	mov	r2, r0
 80005fa:	b108      	cbz	r0, 8000600 <main+0x278>
 80005fc:	b672      	cpsid	i
  while (1)
 80005fe:	e7fe      	b.n	80005fe <main+0x276>
  pLayerCfg.WindowX1 = 800;
 8000600:	f44f 7148 	mov.w	r1, #800	@ 0x320
  pLayerCfg.WindowX0 = 0;
 8000604:	900b      	str	r0, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
 8000606:	e9cd 100c 	strd	r1, r0, [sp, #48]	@ 0x30
  pLayerCfg.Alpha = 255;
 800060a:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800060c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000610:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000614:	2005      	movs	r0, #5
  pLayerCfg.WindowY1 = 480;
 8000616:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800061a:	e9cd 5012 	strd	r5, r0, [sp, #72]	@ 0x48
  pLayerCfg.ImageWidth = 800;
 800061e:	e9cd 2114 	strd	r2, r1, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000622:	4620      	mov	r0, r4
 8000624:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000626:	e9cd 370e 	strd	r3, r7, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 480;
 800062a:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800062c:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8000630:	f88d 205e 	strb.w	r2, [sp, #94]	@ 0x5e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000634:	f005 ff55 	bl	80064e2 <HAL_LTDC_ConfigLayer>
 8000638:	4603      	mov	r3, r0
 800063a:	b108      	cbz	r0, 8000640 <main+0x2b8>
 800063c:	b672      	cpsid	i
  while (1)
 800063e:	e7fe      	b.n	800063e <main+0x2b6>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000640:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
  hdma2d.Instance = DMA2D;
 8000644:	4826      	ldr	r0, [pc, #152]	@ (80006e0 <main+0x358>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000646:	4c27      	ldr	r4, [pc, #156]	@ (80006e4 <main+0x35c>)
  hdma2d.Init.OutputOffset = 0;
 8000648:	e9c0 6302 	strd	r6, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800064c:	e9c0 4200 	strd	r4, r2, [r0]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 8000650:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000654:	f003 ffd0 	bl	80045f8 <HAL_DMA2D_Init>
 8000658:	b108      	cbz	r0, 800065e <main+0x2d6>
 800065a:	b672      	cpsid	i
  while (1)
 800065c:	e7fe      	b.n	800065c <main+0x2d4>
  hgpu2d.Instance = GPU2D;
 800065e:	4822      	ldr	r0, [pc, #136]	@ (80006e8 <main+0x360>)
 8000660:	4b22      	ldr	r3, [pc, #136]	@ (80006ec <main+0x364>)
 8000662:	6003      	str	r3, [r0, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 8000664:	f004 fa50 	bl	8004b08 <HAL_GPU2D_Init>
 8000668:	b108      	cbz	r0, 800066e <main+0x2e6>
 800066a:	b672      	cpsid	i
  while (1)
 800066c:	e7fe      	b.n	800066c <main+0x2e4>
  hxspi1.Init.FifoThresholdByte = 4;
 800066e:	2304      	movs	r3, #4
  hxspi1.Instance = HSPI1;
 8000670:	4c1f      	ldr	r4, [pc, #124]	@ (80006f0 <main+0x368>)
  hxspi1.Init.FifoThresholdByte = 4;
 8000672:	4920      	ldr	r1, [pc, #128]	@ (80006f4 <main+0x36c>)
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000674:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
  hxspi1.Init.FifoThresholdByte = 4;
 8000678:	e9c4 1300 	strd	r1, r3, [r4]
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 800067c:	2300      	movs	r3, #0
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 800067e:	2602      	movs	r6, #2
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000680:	e9c4 3202 	strd	r3, r2, [r4, #8]
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000684:	221a      	movs	r2, #26
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 8000686:	4620      	mov	r0, r4
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000688:	e9c4 2604 	strd	r2, r6, [r4, #16]
  hxspi1.Init.ClockMode = HAL_XSPI_CLOCK_MODE_0;
 800068c:	e9c4 3306 	strd	r3, r3, [r4, #24]
  hxspi1.Init.ClockPrescaler = 0;
 8000690:	e9c4 3308 	strd	r3, r3, [r4, #32]
  hxspi1.Init.DelayHoldQuarterCycle = HAL_XSPI_DHQC_DISABLE;
 8000694:	e9c4 330a 	strd	r3, r3, [r4, #40]	@ 0x28
  hxspi1.Init.Refresh = 0;
 8000698:	e9c4 330e 	strd	r3, r3, [r4, #56]	@ 0x38
  hxspi1.Init.ChipSelectBoundary = HAL_XSPI_BONDARYOF_NONE;
 800069c:	6323      	str	r3, [r4, #48]	@ 0x30
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 800069e:	f007 fe93 	bl	80083c8 <HAL_XSPI_Init>
 80006a2:	4605      	mov	r5, r0
 80006a4:	b340      	cbz	r0, 80006f8 <main+0x370>
 80006a6:	b672      	cpsid	i
  while (1)
 80006a8:	e7fe      	b.n	80006a8 <main+0x320>
 80006aa:	bf00      	nop
 80006ac:	46020c00 	.word	0x46020c00
 80006b0:	42021000 	.word	0x42021000
 80006b4:	42020800 	.word	0x42020800
 80006b8:	42020c00 	.word	0x42020c00
 80006bc:	10210000 	.word	0x10210000
 80006c0:	20000610 	.word	0x20000610
 80006c4:	40031400 	.word	0x40031400
 80006c8:	200005e4 	.word	0x200005e4
 80006cc:	40031800 	.word	0x40031800
 80006d0:	2000063c 	.word	0x2000063c
 80006d4:	40023000 	.word	0x40023000
 80006d8:	200002cc 	.word	0x200002cc
 80006dc:	40016800 	.word	0x40016800
 80006e0:	2000057c 	.word	0x2000057c
 80006e4:	4002b000 	.word	0x4002b000
 80006e8:	20000570 	.word	0x20000570
 80006ec:	4002f000 	.word	0x4002f000
 80006f0:	20000510 	.word	0x20000510
 80006f4:	420d3400 	.word	0x420d3400
  MX66UW1G45G_ResetEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 80006f8:	4602      	mov	r2, r0
 80006fa:	4601      	mov	r1, r0
 80006fc:	4620      	mov	r0, r4
 80006fe:	f003 fa3b 	bl	8003b78 <MX66UW1G45G_ResetEnable>
  MX66UW1G45G_ResetMemory(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000702:	462a      	mov	r2, r5
 8000704:	4629      	mov	r1, r5
 8000706:	4620      	mov	r0, r4
 8000708:	f003 fa67 	bl	8003bda <MX66UW1G45G_ResetMemory>
  HAL_Delay(MX66UW1G45G_RESET_MAX_TIME);
 800070c:	2064      	movs	r0, #100	@ 0x64
 800070e:	f003 faf3 	bl	8003cf8 <HAL_Delay>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000712:	462a      	mov	r2, r5
 8000714:	4629      	mov	r1, r5
 8000716:	4620      	mov	r0, r4
 8000718:	f003 f95c 	bl	80039d4 <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG3_ADDR, MX66UW1G45G_CR2_DC_6_CYCLES);
 800071c:	2307      	movs	r3, #7
 800071e:	462a      	mov	r2, r5
 8000720:	4629      	mov	r1, r5
 8000722:	4620      	mov	r0, r4
 8000724:	9300      	str	r3, [sp, #0]
 8000726:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800072a:	f003 f9cd 	bl	8003ac8 <MX66UW1G45G_WriteCfg2Register>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 800072e:	462a      	mov	r2, r5
 8000730:	4629      	mov	r1, r5
 8000732:	4620      	mov	r0, r4
 8000734:	f003 f94e 	bl	80039d4 <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG1_ADDR, MX66UW1G45G_CR2_DOPI);
 8000738:	462b      	mov	r3, r5
 800073a:	462a      	mov	r2, r5
 800073c:	4629      	mov	r1, r5
 800073e:	4620      	mov	r0, r4
 8000740:	9600      	str	r6, [sp, #0]
 8000742:	f003 f9c1 	bl	8003ac8 <MX66UW1G45G_WriteCfg2Register>
  HAL_Delay(MX66UW1G45G_WRITE_REG_MAX_TIME);
 8000746:	2028      	movs	r0, #40	@ 0x28
 8000748:	f003 fad6 	bl	8003cf8 <HAL_Delay>
  MX66UW1G45G_EnableDTRMemoryMappedMode(&hxspi1, MX66UW1G45G_OPI_MODE);
 800074c:	2101      	movs	r1, #1
 800074e:	4620      	mov	r0, r4
 8000750:	f003 f8f1 	bl	8003936 <MX66UW1G45G_EnableDTRMemoryMappedMode>
  hi2c2.Instance = I2C2;
 8000754:	4c19      	ldr	r4, [pc, #100]	@ (80007bc <main+0x434>)
  hi2c2.Init.Timing = 0x00F07BFF;
 8000756:	4a1a      	ldr	r2, [pc, #104]	@ (80007c0 <main+0x438>)
 8000758:	4b1a      	ldr	r3, [pc, #104]	@ (80007c4 <main+0x43c>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800075a:	4620      	mov	r0, r4
  hi2c2.Init.Timing = 0x00F07BFF;
 800075c:	e9c4 2300 	strd	r2, r3, [r4]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000760:	2301      	movs	r3, #1
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000762:	e9c4 5505 	strd	r5, r5, [r4, #20]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000766:	e9c4 3503 	strd	r3, r5, [r4, #12]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800076a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hi2c2.Init.OwnAddress1 = 0;
 800076e:	60a5      	str	r5, [r4, #8]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000770:	f004 fb2f 	bl	8004dd2 <HAL_I2C_Init>
 8000774:	4601      	mov	r1, r0
 8000776:	b108      	cbz	r0, 800077c <main+0x3f4>
 8000778:	b672      	cpsid	i
  while (1)
 800077a:	e7fe      	b.n	800077a <main+0x3f2>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800077c:	4620      	mov	r0, r4
 800077e:	f004 fd35 	bl	80051ec <HAL_I2CEx_ConfigAnalogFilter>
 8000782:	4601      	mov	r1, r0
 8000784:	b108      	cbz	r0, 800078a <main+0x402>
 8000786:	b672      	cpsid	i
  while (1)
 8000788:	e7fe      	b.n	8000788 <main+0x400>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800078a:	4620      	mov	r0, r4
 800078c:	f004 fd54 	bl	8005238 <HAL_I2CEx_ConfigDigitalFilter>
 8000790:	b108      	cbz	r0, 8000796 <main+0x40e>
 8000792:	b672      	cpsid	i
  while (1)
 8000794:	e7fe      	b.n	8000794 <main+0x40c>
  hjpeg.Instance = JPEG;
 8000796:	480c      	ldr	r0, [pc, #48]	@ (80007c8 <main+0x440>)
 8000798:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <main+0x444>)
 800079a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
 800079c:	f004 ff52 	bl	8005644 <HAL_JPEG_Init>
 80007a0:	b108      	cbz	r0, 80007a6 <main+0x41e>
 80007a2:	b672      	cpsid	i
  while (1)
 80007a4:	e7fe      	b.n	80007a4 <main+0x41c>
  MX_TouchGFX_Init();
 80007a6:	f000 fc01 	bl	8000fac <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80007aa:	f000 fbfe 	bl	8000faa <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80007ae:	f008 f923 	bl	80089f8 <osKernelInitialize>
  MX_FREERTOS_Init();
 80007b2:	f7ff fd91 	bl	80002d8 <MX_FREERTOS_Init>
  osKernelStart();
 80007b6:	f008 f935 	bl	8008a24 <osKernelStart>
  while (1)
 80007ba:	e7fe      	b.n	80007ba <main+0x432>
 80007bc:	200004bc 	.word	0x200004bc
 80007c0:	40005800 	.word	0x40005800
 80007c4:	00f07bff 	.word	0x00f07bff
 80007c8:	20000464 	.word	0x20000464
 80007cc:	4002a000 	.word	0x4002a000

080007d0 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 80007d0:	6802      	ldr	r2, [r0, #0]
 80007d2:	4b03      	ldr	r3, [pc, #12]	@ (80007e0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80007d4:	429a      	cmp	r2, r3
 80007d6:	d101      	bne.n	80007dc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80007d8:	f003 ba7c 	b.w	8003cd4 <HAL_IncTick>
}
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40001000 	.word	0x40001000

080007e4 <Error_Handler>:
 80007e4:	b672      	cpsid	i
  while (1)
 80007e6:	e7fe      	b.n	80007e6 <Error_Handler+0x2>

080007e8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80007e8:	4b0a      	ldr	r3, [pc, #40]	@ (8000814 <HAL_MspInit+0x2c>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007ea:	210f      	movs	r1, #15
  __HAL_RCC_PWR_CLK_ENABLE();
 80007ec:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007f0:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80007f4:	f042 0204 	orr.w	r2, r2, #4
 80007f8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007fc:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 80007fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
{
 8000802:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8000804:	f003 0304 	and.w	r3, r3, #4
 8000808:	9301      	str	r3, [sp, #4]
 800080a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800080c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800080e:	f003 ba9f 	b.w	8003d50 <HAL_NVIC_SetPriority>
 8000812:	bf00      	nop
 8000814:	46020c00 	.word	0x46020c00

08000818 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000818:	6802      	ldr	r2, [r0, #0]
 800081a:	4b09      	ldr	r3, [pc, #36]	@ (8000840 <HAL_CRC_MspInit+0x28>)
{
 800081c:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800081e:	429a      	cmp	r2, r3
 8000820:	d10c      	bne.n	800083c <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000822:	4b08      	ldr	r3, [pc, #32]	@ (8000844 <HAL_CRC_MspInit+0x2c>)
 8000824:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000828:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800082c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000830:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000834:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000838:	9301      	str	r3, [sp, #4]
 800083a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800083c:	b002      	add	sp, #8
 800083e:	4770      	bx	lr
 8000840:	40023000 	.word	0x40023000
 8000844:	46020c00 	.word	0x46020c00

08000848 <HAL_DCACHE_MspInit>:
* @param hdcache: DCACHE handle pointer
* @retval None
*/
void HAL_DCACHE_MspInit(DCACHE_HandleTypeDef* hdcache)
{
  if(hdcache->Instance==DCACHE1)
 8000848:	6803      	ldr	r3, [r0, #0]
 800084a:	4a12      	ldr	r2, [pc, #72]	@ (8000894 <HAL_DCACHE_MspInit+0x4c>)
{
 800084c:	b082      	sub	sp, #8
  if(hdcache->Instance==DCACHE1)
 800084e:	4293      	cmp	r3, r2
 8000850:	d10e      	bne.n	8000870 <HAL_DCACHE_MspInit+0x28>
  {
  /* USER CODE BEGIN DCACHE1_MspInit 0 */

  /* USER CODE END DCACHE1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DCACHE1_CLK_ENABLE();
 8000852:	4b11      	ldr	r3, [pc, #68]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000854:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000858:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800085c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000860:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000864:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8000868:	9300      	str	r3, [sp, #0]
 800086a:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN DCACHE2_MspInit 1 */

  /* USER CODE END DCACHE2_MspInit 1 */
  }

}
 800086c:	b002      	add	sp, #8
 800086e:	4770      	bx	lr
  else if(hdcache->Instance==DCACHE2)
 8000870:	4a0a      	ldr	r2, [pc, #40]	@ (800089c <HAL_DCACHE_MspInit+0x54>)
 8000872:	4293      	cmp	r3, r2
 8000874:	d1fa      	bne.n	800086c <HAL_DCACHE_MspInit+0x24>
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000876:	4b08      	ldr	r3, [pc, #32]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000878:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800087c:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000880:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000884:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000888:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800088c:	9301      	str	r3, [sp, #4]
 800088e:	9b01      	ldr	r3, [sp, #4]
}
 8000890:	e7ec      	b.n	800086c <HAL_DCACHE_MspInit+0x24>
 8000892:	bf00      	nop
 8000894:	40031400 	.word	0x40031400
 8000898:	46020c00 	.word	0x46020c00
 800089c:	40031800 	.word	0x40031800

080008a0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80008a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80008a2:	4b0f      	ldr	r3, [pc, #60]	@ (80008e0 <HAL_DMA2D_MspInit+0x40>)
 80008a4:	6802      	ldr	r2, [r0, #0]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	d117      	bne.n	80008da <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008aa:	4b0e      	ldr	r3, [pc, #56]	@ (80008e4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ac:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008ae:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008b2:	2076      	movs	r0, #118	@ 0x76
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008b4:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80008b8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80008bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008c0:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008c2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80008c6:	9301      	str	r3, [sp, #4]
 80008c8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ca:	f003 fa41 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008ce:	2076      	movs	r0, #118	@ 0x76
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80008d0:	b003      	add	sp, #12
 80008d2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008d6:	f003 ba6b 	b.w	8003db0 <HAL_NVIC_EnableIRQ>
}
 80008da:	b003      	add	sp, #12
 80008dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80008e0:	4002b000 	.word	0x4002b000
 80008e4:	46020c00 	.word	0x46020c00

080008e8 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 80008e8:	b507      	push	{r0, r1, r2, lr}
  if(hgpu2d->Instance==GPU2D)
 80008ea:	4b19      	ldr	r3, [pc, #100]	@ (8000950 <HAL_GPU2D_MspInit+0x68>)
 80008ec:	6802      	ldr	r2, [r0, #0]
 80008ee:	429a      	cmp	r2, r3
 80008f0:	d12b      	bne.n	800094a <HAL_GPU2D_MspInit+0x62>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f2:	4b18      	ldr	r3, [pc, #96]	@ (8000954 <HAL_GPU2D_MspInit+0x6c>)
    __HAL_RCC_DCACHE2_CLK_ENABLE();
    /* GPU2D interrupt Init */
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008f4:	2105      	movs	r1, #5
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008fa:	2084      	movs	r0, #132	@ 0x84
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008fc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8000900:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000904:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000908:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800090c:	9200      	str	r2, [sp, #0]
 800090e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000910:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000914:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000918:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800091c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 8000920:	2200      	movs	r2, #0
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000922:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000926:	9301      	str	r3, [sp, #4]
 8000928:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 800092a:	f003 fa11 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_IRQn);
 800092e:	2084      	movs	r0, #132	@ 0x84
 8000930:	f003 fa3e 	bl	8003db0 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPU2D_ER_IRQn, 5, 0);
 8000934:	2200      	movs	r2, #0
 8000936:	2105      	movs	r1, #5
 8000938:	2085      	movs	r0, #133	@ 0x85
 800093a:	f003 fa09 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 800093e:	2085      	movs	r0, #133	@ 0x85
  /* USER CODE BEGIN GPU2D_MspInit 1 */

  /* USER CODE END GPU2D_MspInit 1 */
  }

}
 8000940:	b003      	add	sp, #12
 8000942:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 8000946:	f003 ba33 	b.w	8003db0 <HAL_NVIC_EnableIRQ>
}
 800094a:	b003      	add	sp, #12
 800094c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000950:	4002f000 	.word	0x4002f000
 8000954:	46020c00 	.word	0x46020c00

08000958 <HAL_XSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspInit(XSPI_HandleTypeDef* hxspi)
{
 8000958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800095a:	4604      	mov	r4, r0
 800095c:	b0c1      	sub	sp, #260	@ 0x104
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800095e:	2214      	movs	r2, #20
 8000960:	2100      	movs	r1, #0
 8000962:	a803      	add	r0, sp, #12
 8000964:	f031 ffd7 	bl	8032916 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000968:	22e0      	movs	r2, #224	@ 0xe0
 800096a:	2100      	movs	r1, #0
 800096c:	a808      	add	r0, sp, #32
 800096e:	f031 ffd2 	bl	8032916 <memset>
  if(hxspi->Instance==HSPI1)
 8000972:	6822      	ldr	r2, [r4, #0]
 8000974:	4b32      	ldr	r3, [pc, #200]	@ (8000a40 <HAL_XSPI_MspInit+0xe8>)
 8000976:	429a      	cmp	r2, r3
 8000978:	d15f      	bne.n	8000a3a <HAL_XSPI_MspInit+0xe2>

  /* USER CODE END HSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HSPI;
 800097a:	2301      	movs	r3, #1
 800097c:	2200      	movs	r2, #0
 800097e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000982:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL2.PLL2M = 4;
 8000986:	2103      	movs	r1, #3
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000988:	9338      	str	r3, [sp, #224]	@ 0xe0
    PeriphClkInit.PLL2.PLL2M = 4;
 800098a:	2304      	movs	r3, #4
    PeriphClkInit.PLL2.PLL2N = 66;
    PeriphClkInit.PLL2.PLL2P = 2;
 800098c:	2042      	movs	r0, #66	@ 0x42
    PeriphClkInit.PLL2.PLL2M = 4;
 800098e:	e9cd 130a 	strd	r1, r3, [sp, #40]	@ 0x28
    PeriphClkInit.PLL2.PLL2P = 2;
 8000992:	2302      	movs	r3, #2
 8000994:	e9cd 030c 	strd	r0, r3, [sp, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2Q = 2;
    PeriphClkInit.PLL2.PLL2R = 2;
 8000998:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL2.PLL2FRACN = 0;
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 800099c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a0:	a808      	add	r0, sp, #32
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 80009a2:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a4:	f006 fe18 	bl	80075d8 <HAL_RCCEx_PeriphCLKConfig>
 80009a8:	b108      	cbz	r0, 80009ae <HAL_XSPI_MspInit+0x56>
    {
      Error_Handler();
 80009aa:	f7ff ff1b 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009ae:	4b25      	ldr	r3, [pc, #148]	@ (8000a44 <HAL_XSPI_MspInit+0xec>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009b0:	2400      	movs	r4, #0
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b2:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009b6:	2702      	movs	r7, #2
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80009bc:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80009c0:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009c4:	2603      	movs	r6, #3
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009c6:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80009ca:	9200      	str	r2, [sp, #0]
 80009cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80009d2:	2508      	movs	r5, #8
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009d4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80009d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009dc:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009e0:	4819      	ldr	r0, [pc, #100]	@ (8000a48 <HAL_XSPI_MspInit+0xf0>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009e2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80009e6:	9201      	str	r2, [sp, #4]
 80009e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009ea:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009ee:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009f0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80009f4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009fc:	e9cd 4605 	strd	r4, r6, [sp, #20]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a00:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a04:	9302      	str	r3, [sp, #8]
 8000a06:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a08:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a0c:	9507      	str	r5, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a0e:	e9cd 3703 	strd	r3, r7, [sp, #12]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000a12:	f003 ff41 	bl	8004898 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000a16:	230f      	movs	r3, #15
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a18:	480c      	ldr	r0, [pc, #48]	@ (8000a4c <HAL_XSPI_MspInit+0xf4>)
 8000a1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a1c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a20:	e9cd 4605 	strd	r4, r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a24:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a26:	f003 ff37 	bl	8004898 <HAL_GPIO_Init>

    /* HSPI1 interrupt Init */
    HAL_NVIC_SetPriority(HSPI1_IRQn, 5, 0);
 8000a2a:	2083      	movs	r0, #131	@ 0x83
 8000a2c:	4622      	mov	r2, r4
 8000a2e:	2105      	movs	r1, #5
 8000a30:	f003 f98e 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(HSPI1_IRQn);
 8000a34:	2083      	movs	r0, #131	@ 0x83
 8000a36:	f003 f9bb 	bl	8003db0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN HSPI1_MspInit 1 */

  /* USER CODE END HSPI1_MspInit 1 */
  }

}
 8000a3a:	b041      	add	sp, #260	@ 0x104
 8000a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	420d3400 	.word	0x420d3400
 8000a44:	46020c00 	.word	0x46020c00
 8000a48:	42021c00 	.word	0x42021c00
 8000a4c:	42022000 	.word	0x42022000

08000a50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000a50:	b510      	push	{r4, lr}
 8000a52:	4604      	mov	r4, r0
 8000a54:	b0c0      	sub	sp, #256	@ 0x100
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a56:	2214      	movs	r2, #20
 8000a58:	2100      	movs	r1, #0
 8000a5a:	a803      	add	r0, sp, #12
 8000a5c:	f031 ff5b 	bl	8032916 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a60:	22e0      	movs	r2, #224	@ 0xe0
 8000a62:	2100      	movs	r1, #0
 8000a64:	a808      	add	r0, sp, #32
 8000a66:	f031 ff56 	bl	8032916 <memset>
  if(hi2c->Instance==I2C2)
 8000a6a:	6822      	ldr	r2, [r4, #0]
 8000a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8000ad8 <HAL_I2C_MspInit+0x88>)
 8000a6e:	429a      	cmp	r2, r3
 8000a70:	d12f      	bne.n	8000ad2 <HAL_I2C_MspInit+0x82>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a72:	2280      	movs	r2, #128	@ 0x80
 8000a74:	2300      	movs	r3, #0
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a76:	a808      	add	r0, sp, #32
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a78:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a7c:	f006 fdac 	bl	80075d8 <HAL_RCCEx_PeriphCLKConfig>
 8000a80:	b108      	cbz	r0, 8000a86 <HAL_I2C_MspInit+0x36>
    {
      Error_Handler();
 8000a82:	f7ff feaf 	bl	80007e4 <Error_Handler>
    }

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a86:	4c15      	ldr	r4, [pc, #84]	@ (8000adc <HAL_I2C_MspInit+0x8c>)
    /**I2C2 GPIO Configuration
    PF0     ------> I2C2_SDA
    PF1     ------> I2C2_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a88:	2203      	movs	r2, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a8a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a8e:	4814      	ldr	r0, [pc, #80]	@ (8000ae0 <HAL_I2C_MspInit+0x90>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a90:	f043 0320 	orr.w	r3, r3, #32
 8000a94:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000a98:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a9c:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a9e:	f003 0320 	and.w	r3, r3, #32
 8000aa2:	9301      	str	r3, [sp, #4]
 8000aa4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000aa6:	2312      	movs	r3, #18
 8000aa8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aac:	2300      	movs	r3, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000aae:	e9cd 3305 	strd	r3, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000ab2:	2304      	movs	r3, #4
 8000ab4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ab6:	f003 feef 	bl	8004898 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000aba:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000abe:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000ac2:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
 8000ac6:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000aca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000ace:	9302      	str	r3, [sp, #8]
 8000ad0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000ad2:	b040      	add	sp, #256	@ 0x100
 8000ad4:	bd10      	pop	{r4, pc}
 8000ad6:	bf00      	nop
 8000ad8:	40005800 	.word	0x40005800
 8000adc:	46020c00 	.word	0x46020c00
 8000ae0:	42021400 	.word	0x42021400

08000ae4 <HAL_JPEG_MspInit>:
* This function configures the hardware resources used in this example
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
 8000ae4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  DMA_DataHandlingConfTypeDef DataHandlingConfig;
  if(hjpeg->Instance==JPEG)
 8000ae6:	6802      	ldr	r2, [r0, #0]
 8000ae8:	4b3d      	ldr	r3, [pc, #244]	@ (8000be0 <HAL_JPEG_MspInit+0xfc>)
{
 8000aea:	4605      	mov	r5, r0
  if(hjpeg->Instance==JPEG)
 8000aec:	429a      	cmp	r2, r3
 8000aee:	d174      	bne.n	8000bda <HAL_JPEG_MspInit+0xf6>
  {
  /* USER CODE BEGIN JPEG_MspInit 0 */

  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af0:	4b3c      	ldr	r3, [pc, #240]	@ (8000be4 <HAL_JPEG_MspInit+0x100>)
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
    handle_GPDMA1_Channel1.Init.DestInc = DMA_DINC_INCREMENTED;
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000af2:	f44f 2600 	mov.w	r6, #524288	@ 0x80000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
 8000afa:	4c3b      	ldr	r4, [pc, #236]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000afc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8000b00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b04:	2202      	movs	r2, #2
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b0a:	f44f 3c00 	mov.w	ip, #131072	@ 0x20000
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b0e:	e9c4 6205 	strd	r6, r2, [r4, #20]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b12:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b16:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000b1a:	9301      	str	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b1c:	e9c4 c207 	strd	ip, r2, [r4, #28]
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b20:	9b01      	ldr	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 8;
 8000b22:	2208      	movs	r2, #8
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b24:	237d      	movs	r3, #125	@ 0x7d
 8000b26:	4831      	ldr	r0, [pc, #196]	@ (8000bec <HAL_JPEG_MspInit+0x108>)
    handle_GPDMA1_Channel1.Init.DestBurstLength = 8;
 8000b28:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b2c:	e9c4 0300 	strd	r0, r3, [r4]
    handle_GPDMA1_Channel1.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT1;
 8000b30:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000b34:	2300      	movs	r3, #0
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b36:	4620      	mov	r0, r4
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000b38:	e9c4 3302 	strd	r3, r3, [r4, #8]
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b3c:	e9c4 230b 	strd	r2, r3, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
 8000b40:	6123      	str	r3, [r4, #16]
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
 8000b42:	6363      	str	r3, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b44:	f003 fa2a 	bl	8003f9c <HAL_DMA_Init>
 8000b48:	b108      	cbz	r0, 8000b4e <HAL_JPEG_MspInit+0x6a>
    {
      Error_Handler();
 8000b4a:	f7ff fe4b 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b4e:	636c      	str	r4, [r5, #52]	@ 0x34

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b50:	2110      	movs	r1, #16
 8000b52:	4825      	ldr	r0, [pc, #148]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b54:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b56:	f003 fd31 	bl	80045bc <HAL_DMA_ConfigChannelAttributes>
 8000b5a:	b108      	cbz	r0, 8000b60 <HAL_JPEG_MspInit+0x7c>
    {
      Error_Handler();
 8000b5c:	f7ff fe42 	bl	80007e4 <Error_Handler>
    }

    /* GPDMA1_REQUEST_JPEG_RX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b60:	237c      	movs	r3, #124	@ 0x7c
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 8000b62:	4c23      	ldr	r4, [pc, #140]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b64:	4a23      	ldr	r2, [pc, #140]	@ (8000bf4 <HAL_JPEG_MspInit+0x110>)
    handle_GPDMA1_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b66:	2600      	movs	r6, #0
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b68:	e9c4 2300 	strd	r2, r3, [r4]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b6c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000b70:	e9c4 6302 	strd	r6, r3, [r4, #8]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000b74:	2308      	movs	r3, #8
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b76:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8000b7a:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000b7e:	e9c4 3604 	strd	r3, r6, [r4, #16]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 8;
    handle_GPDMA1_Channel0.Init.DestBurstLength = 8;
 8000b82:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT1|DMA_DEST_ALLOCATED_PORT0;
 8000b86:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b8a:	4620      	mov	r0, r4
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b8c:	e9c4 1207 	strd	r1, r2, [r4, #28]
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b90:	e9c4 360b 	strd	r3, r6, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000b94:	61a6      	str	r6, [r4, #24]
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8000b96:	6366      	str	r6, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b98:	f003 fa00 	bl	8003f9c <HAL_DMA_Init>
 8000b9c:	b108      	cbz	r0, 8000ba2 <HAL_JPEG_MspInit+0xbe>
    {
      Error_Handler();
 8000b9e:	f7ff fe21 	bl	80007e4 <Error_Handler>
    }

    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000ba2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000ba6:	4812      	ldr	r0, [pc, #72]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
 8000ba8:	a902      	add	r1, sp, #8
    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
 8000baa:	9602      	str	r6, [sp, #8]
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000bac:	9303      	str	r3, [sp, #12]
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000bae:	f003 fe53 	bl	8004858 <HAL_DMAEx_ConfigDataHandling>
 8000bb2:	b108      	cbz	r0, 8000bb8 <HAL_JPEG_MspInit+0xd4>
    {
      Error_Handler();
 8000bb4:	f7ff fe16 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bb8:	632c      	str	r4, [r5, #48]	@ 0x30

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bba:	2110      	movs	r1, #16
 8000bbc:	480c      	ldr	r0, [pc, #48]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bbe:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bc0:	f003 fcfc 	bl	80045bc <HAL_DMA_ConfigChannelAttributes>
 8000bc4:	b108      	cbz	r0, 8000bca <HAL_JPEG_MspInit+0xe6>
    {
      Error_Handler();
 8000bc6:	f7ff fe0d 	bl	80007e4 <Error_Handler>
    }

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 7, 0);
 8000bca:	208c      	movs	r0, #140	@ 0x8c
 8000bcc:	2200      	movs	r2, #0
 8000bce:	2107      	movs	r1, #7
 8000bd0:	f003 f8be 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
 8000bd4:	208c      	movs	r0, #140	@ 0x8c
 8000bd6:	f003 f8eb 	bl	8003db0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
 8000bda:	b004      	add	sp, #16
 8000bdc:	bd70      	pop	{r4, r5, r6, pc}
 8000bde:	bf00      	nop
 8000be0:	4002a000 	.word	0x4002a000
 8000be4:	46020c00 	.word	0x46020c00
 8000be8:	200003ec 	.word	0x200003ec
 8000bec:	400200d0 	.word	0x400200d0
 8000bf0:	20000374 	.word	0x20000374
 8000bf4:	40020050 	.word	0x40020050

08000bf8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bfa:	2514      	movs	r5, #20
{
 8000bfc:	4604      	mov	r4, r0
 8000bfe:	b0c3      	sub	sp, #268	@ 0x10c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c00:	462a      	mov	r2, r5
 8000c02:	2100      	movs	r1, #0
 8000c04:	eb0d 0005 	add.w	r0, sp, r5
 8000c08:	f031 fe85 	bl	8032916 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000c0c:	22e0      	movs	r2, #224	@ 0xe0
 8000c0e:	2100      	movs	r1, #0
 8000c10:	a80a      	add	r0, sp, #40	@ 0x28
 8000c12:	f031 fe80 	bl	8032916 <memset>
  if(hltdc->Instance==LTDC)
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	4b57      	ldr	r3, [pc, #348]	@ (8000d78 <HAL_LTDC_MspInit+0x180>)
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	f040 80a9 	bne.w	8000d72 <HAL_LTDC_MspInit+0x17a>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000c20:	2200      	movs	r2, #0
 8000c22:	2302      	movs	r3, #2
 8000c24:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    PeriphClkInit.LtdcClockSelection = RCC_LTDCCLKSOURCE_PLL3;
    PeriphClkInit.PLL3.PLL3Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c28:	2304      	movs	r3, #4
 8000c2a:	2203      	movs	r2, #3
    PeriphClkInit.PLL3.PLL3N = 125;
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c2c:	217d      	movs	r1, #125	@ 0x7d
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c2e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c32:	2308      	movs	r3, #8
 8000c34:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
    PeriphClkInit.PLL3.PLL3Q = 2;
 8000c38:	2302      	movs	r3, #2
    PeriphClkInit.PLL3.PLL3R = 20;
 8000c3a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
    PeriphClkInit.PLL3.PLL3RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL3.PLL3FRACN = 0;
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c3e:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c42:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c44:	931d      	str	r3, [sp, #116]	@ 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c46:	f006 fcc7 	bl	80075d8 <HAL_RCCEx_PeriphCLKConfig>
 8000c4a:	b108      	cbz	r0, 8000c50 <HAL_LTDC_MspInit+0x58>
    {
      Error_Handler();
 8000c4c:	f7ff fdca 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c50:	4b4a      	ldr	r3, [pc, #296]	@ (8000d7c <HAL_LTDC_MspInit+0x184>)
    PB9     ------> LTDC_B0
    PE0     ------> LTDC_HSYNC
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c52:	2400      	movs	r4, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c54:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c58:	2502      	movs	r5, #2
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c5a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000c5e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8000c62:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000c66:	2608      	movs	r6, #8
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c68:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000c6c:	9200      	str	r2, [sp, #0]
 8000c6e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c70:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c74:	4842      	ldr	r0, [pc, #264]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c76:	f042 0202 	orr.w	r2, r2, #2
 8000c7a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c7e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c82:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c84:	f002 0202 	and.w	r2, r2, #2
 8000c88:	9201      	str	r2, [sp, #4]
 8000c8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c8c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000c90:	2707      	movs	r7, #7
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c92:	f042 0210 	orr.w	r2, r2, #16
 8000c96:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c9a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000c9e:	f002 0210 	and.w	r2, r2, #16
 8000ca2:	9202      	str	r2, [sp, #8]
 8000ca4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ca6:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000caa:	f042 0208 	orr.w	r2, r2, #8
 8000cae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cb2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cb6:	f002 0208 	and.w	r2, r2, #8
 8000cba:	9203      	str	r2, [sp, #12]
 8000cbc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cbe:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cc2:	f042 0204 	orr.w	r2, r2, #4
 8000cc6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cce:	e9cd 4407 	strd	r4, r4, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cd2:	f003 0304 	and.w	r3, r3, #4
 8000cd6:	9304      	str	r3, [sp, #16]
 8000cd8:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cda:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cdc:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cde:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	f003 fdd9 	bl	8004898 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ce6:	f64f 7381 	movw	r3, #65409	@ 0xff81
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cea:	4826      	ldr	r0, [pc, #152]	@ (8000d84 <HAL_LTDC_MspInit+0x18c>)
 8000cec:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cee:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf2:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cf6:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cf8:	f003 fdce 	bl	8004898 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000cfc:	f64f 734b 	movw	r3, #65355	@ 0xff4b
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d00:	4821      	ldr	r0, [pc, #132]	@ (8000d88 <HAL_LTDC_MspInit+0x190>)
 8000d02:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d04:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d08:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d0c:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0e:	f003 fdc3 	bl	8004898 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d12:	23c0      	movs	r3, #192	@ 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d14:	481d      	ldr	r0, [pc, #116]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d16:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d18:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1c:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d20:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d22:	f003 fdb9 	bl	8004898 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000d26:	f44f 7340 	mov.w	r3, #768	@ 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d2a:	4818      	ldr	r0, [pc, #96]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d2c:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d2e:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d32:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d36:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d38:	f003 fdae 	bl	8004898 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000d3c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d40:	480f      	ldr	r0, [pc, #60]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
 8000d42:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d44:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d48:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d4c:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d4e:	f003 fda3 	bl	8004898 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000d52:	4622      	mov	r2, r4
 8000d54:	2105      	movs	r1, #5
 8000d56:	2087      	movs	r0, #135	@ 0x87
 8000d58:	f002 fffa 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000d5c:	2087      	movs	r0, #135	@ 0x87
 8000d5e:	f003 f827 	bl	8003db0 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 8000d62:	2088      	movs	r0, #136	@ 0x88
 8000d64:	4622      	mov	r2, r4
 8000d66:	2105      	movs	r1, #5
 8000d68:	f002 fff2 	bl	8003d50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000d6c:	2088      	movs	r0, #136	@ 0x88
 8000d6e:	f003 f81f 	bl	8003db0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000d72:	b043      	add	sp, #268	@ 0x10c
 8000d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d76:	bf00      	nop
 8000d78:	40016800 	.word	0x40016800
 8000d7c:	46020c00 	.word	0x46020c00
 8000d80:	42020400 	.word	0x42020400
 8000d84:	42021000 	.word	0x42021000
 8000d88:	42020c00 	.word	0x42020c00
 8000d8c:	42020800 	.word	0x42020800

08000d90 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d90:	4b1f      	ldr	r3, [pc, #124]	@ (8000e10 <HAL_InitTick+0x80>)
{
 8000d92:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d94:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
{
 8000d98:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d9a:	f042 0210 	orr.w	r2, r2, #16
 8000d9e:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8000da2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000da6:	4669      	mov	r1, sp
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000da8:	f003 0310 	and.w	r3, r3, #16
 8000dac:	9301      	str	r3, [sp, #4]
{
 8000dae:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db0:	a802      	add	r0, sp, #8

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8000db2:	4d18      	ldr	r5, [pc, #96]	@ (8000e14 <HAL_InitTick+0x84>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000db4:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db6:	f006 fb15 	bl	80073e4 <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000dba:	f006 fb03 	bl	80073c4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000dbe:	4b16      	ldr	r3, [pc, #88]	@ (8000e18 <HAL_InitTick+0x88>)
 8000dc0:	602b      	str	r3, [r5, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8000dc2:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000dc6:	60eb      	str	r3, [r5, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dc8:	4b14      	ldr	r3, [pc, #80]	@ (8000e1c <HAL_InitTick+0x8c>)
 8000dca:	fbb0 f0f3 	udiv	r0, r0, r3
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8000dce:	2300      	movs	r3, #0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dd0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8000dd2:	6068      	str	r0, [r5, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim6);
 8000dd4:	4628      	mov	r0, r5
  htim6.Init.ClockDivision = 0;
 8000dd6:	612b      	str	r3, [r5, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dd8:	60ab      	str	r3, [r5, #8]
  status = HAL_TIM_Base_Init(&htim6);
 8000dda:	f007 f98b 	bl	80080f4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8000dde:	4604      	mov	r4, r0
 8000de0:	b968      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8000de2:	4628      	mov	r0, r5
 8000de4:	f006 ffa0 	bl	8007d28 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8000de8:	4604      	mov	r4, r0
 8000dea:	b940      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000dec:	2e0f      	cmp	r6, #15
 8000dee:	d80c      	bhi.n	8000e0a <HAL_InitTick+0x7a>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8000df0:	4602      	mov	r2, r0
 8000df2:	4631      	mov	r1, r6
 8000df4:	2031      	movs	r0, #49	@ 0x31
 8000df6:	f002 ffab 	bl	8003d50 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000dfa:	4b09      	ldr	r3, [pc, #36]	@ (8000e20 <HAL_InitTick+0x90>)
 8000dfc:	601e      	str	r6, [r3, #0]
      }
    }
  }

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8000dfe:	2031      	movs	r0, #49	@ 0x31
 8000e00:	f002 ffd6 	bl	8003db0 <HAL_NVIC_EnableIRQ>

 /* Return function status */
  return status;
}
 8000e04:	4620      	mov	r0, r4
 8000e06:	b008      	add	sp, #32
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
        status = HAL_ERROR;
 8000e0a:	2401      	movs	r4, #1
 8000e0c:	e7f7      	b.n	8000dfe <HAL_InitTick+0x6e>
 8000e0e:	bf00      	nop
 8000e10:	46020c00 	.word	0x46020c00
 8000e14:	20000660 	.word	0x20000660
 8000e18:	40001000 	.word	0x40001000
 8000e1c:	000f4240 	.word	0x000f4240
 8000e20:	20000054 	.word	0x20000054

08000e24 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e24:	e7fe      	b.n	8000e24 <NMI_Handler>

08000e26 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e26:	e7fe      	b.n	8000e26 <HardFault_Handler>

08000e28 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e28:	e7fe      	b.n	8000e28 <MemManage_Handler>

08000e2a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e2a:	e7fe      	b.n	8000e2a <BusFault_Handler>

08000e2c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e2c:	e7fe      	b.n	8000e2c <UsageFault_Handler>

08000e2e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e2e:	4770      	bx	lr

08000e30 <EXTI5_IRQHandler>:
void EXTI5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI5_IRQn 0 */

  /* USER CODE END EXTI5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8000e30:	2020      	movs	r0, #32
 8000e32:	f003 be55 	b.w	8004ae0 <HAL_GPIO_EXTI_IRQHandler>
	...

08000e38 <GPDMA1_Channel0_IRQHandler>:
void GPDMA1_Channel0_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8000e38:	4801      	ldr	r0, [pc, #4]	@ (8000e40 <GPDMA1_Channel0_IRQHandler+0x8>)
 8000e3a:	f003 bafe 	b.w	800443a <HAL_DMA_IRQHandler>
 8000e3e:	bf00      	nop
 8000e40:	20000374 	.word	0x20000374

08000e44 <GPDMA1_Channel1_IRQHandler>:
void GPDMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel1_IRQn 0 */

  /* USER CODE END GPDMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel1);
 8000e44:	4801      	ldr	r0, [pc, #4]	@ (8000e4c <GPDMA1_Channel1_IRQHandler+0x8>)
 8000e46:	f003 baf8 	b.w	800443a <HAL_DMA_IRQHandler>
 8000e4a:	bf00      	nop
 8000e4c:	200003ec 	.word	0x200003ec

08000e50 <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000e50:	4801      	ldr	r0, [pc, #4]	@ (8000e58 <TIM6_IRQHandler+0x8>)
 8000e52:	f006 bfc7 	b.w	8007de4 <HAL_TIM_IRQHandler>
 8000e56:	bf00      	nop
 8000e58:	20000660 	.word	0x20000660

08000e5c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8000e5c:	4801      	ldr	r0, [pc, #4]	@ (8000e64 <DMA2D_IRQHandler+0x8>)
 8000e5e:	f003 bc0a 	b.w	8004676 <HAL_DMA2D_IRQHandler>
 8000e62:	bf00      	nop
 8000e64:	2000057c 	.word	0x2000057c

08000e68 <HSPI1_IRQHandler>:
void HSPI1_IRQHandler(void)
{
  /* USER CODE BEGIN HSPI1_IRQn 0 */

  /* USER CODE END HSPI1_IRQn 0 */
  HAL_XSPI_IRQHandler(&hxspi1);
 8000e68:	4801      	ldr	r0, [pc, #4]	@ (8000e70 <HSPI1_IRQHandler+0x8>)
 8000e6a:	f007 bced 	b.w	8008848 <HAL_XSPI_IRQHandler>
 8000e6e:	bf00      	nop
 8000e70:	20000510 	.word	0x20000510

08000e74 <GPU2D_IRQHandler>:
void GPU2D_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_IRQn 0 */

  /* USER CODE END GPU2D_IRQn 0 */
  HAL_GPU2D_IRQHandler(&hgpu2d);
 8000e74:	4801      	ldr	r0, [pc, #4]	@ (8000e7c <GPU2D_IRQHandler+0x8>)
 8000e76:	f003 be62 	b.w	8004b3e <HAL_GPU2D_IRQHandler>
 8000e7a:	bf00      	nop
 8000e7c:	20000570 	.word	0x20000570

08000e80 <GPU2D_ER_IRQHandler>:
void GPU2D_ER_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_ER_IRQn 0 */

  /* USER CODE END GPU2D_ER_IRQn 0 */
  HAL_GPU2D_ER_IRQHandler(&hgpu2d);
 8000e80:	4801      	ldr	r0, [pc, #4]	@ (8000e88 <GPU2D_ER_IRQHandler+0x8>)
 8000e82:	f003 be6f 	b.w	8004b64 <HAL_GPU2D_ER_IRQHandler>
 8000e86:	bf00      	nop
 8000e88:	20000570 	.word	0x20000570

08000e8c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8000e8c:	4801      	ldr	r0, [pc, #4]	@ (8000e94 <LTDC_IRQHandler+0x8>)
 8000e8e:	f005 bacb 	b.w	8006428 <HAL_LTDC_IRQHandler>
 8000e92:	bf00      	nop
 8000e94:	200002cc 	.word	0x200002cc

08000e98 <LTDC_ER_IRQHandler>:
}

/**
  * @brief This function handles LCD-TFT Error interrupt.
  */
void LTDC_ER_IRQHandler(void)
 8000e98:	f7ff bff8 	b.w	8000e8c <LTDC_IRQHandler>

08000e9c <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
 8000e9c:	4801      	ldr	r0, [pc, #4]	@ (8000ea4 <JPEG_IRQHandler+0x8>)
 8000e9e:	f005 b976 	b.w	800618e <HAL_JPEG_IRQHandler>
 8000ea2:	bf00      	nop
 8000ea4:	20000464 	.word	0x20000464

08000ea8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	4770      	bx	lr

08000eac <_kill>:

int _kill(int pid, int sig)
{
 8000eac:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000eae:	f031 fde7 	bl	8032a80 <__errno>
 8000eb2:	2316      	movs	r3, #22
 8000eb4:	6003      	str	r3, [r0, #0]
  return -1;
}
 8000eb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000eba:	bd08      	pop	{r3, pc}

08000ebc <_exit>:

void _exit (int status)
{
 8000ebc:	b508      	push	{r3, lr}
  errno = EINVAL;
 8000ebe:	f031 fddf 	bl	8032a80 <__errno>
 8000ec2:	2316      	movs	r3, #22
 8000ec4:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8000ec6:	e7fe      	b.n	8000ec6 <_exit+0xa>

08000ec8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	460d      	mov	r5, r1
 8000ecc:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ece:	460e      	mov	r6, r1
 8000ed0:	1b73      	subs	r3, r6, r5
 8000ed2:	429c      	cmp	r4, r3
 8000ed4:	dc01      	bgt.n	8000eda <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8000eda:	f3af 8000 	nop.w
 8000ede:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ee2:	e7f5      	b.n	8000ed0 <_read+0x8>

08000ee4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460d      	mov	r5, r1
 8000ee8:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000eea:	460e      	mov	r6, r1
 8000eec:	1b73      	subs	r3, r6, r5
 8000eee:	429c      	cmp	r4, r3
 8000ef0:	dc01      	bgt.n	8000ef6 <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8000ef6:	f816 0b01 	ldrb.w	r0, [r6], #1
 8000efa:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000efe:	e7f5      	b.n	8000eec <_write+0x8>

08000f00 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000f00:	f04f 30ff 	mov.w	r0, #4294967295
 8000f04:	4770      	bx	lr

08000f06 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000f06:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 8000f0a:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8000f0c:	604b      	str	r3, [r1, #4]
}
 8000f0e:	4770      	bx	lr

08000f10 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000f10:	2001      	movs	r0, #1
 8000f12:	4770      	bx	lr

08000f14 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000f14:	2000      	movs	r0, #0
 8000f16:	4770      	bx	lr

08000f18 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f18:	4a0b      	ldr	r2, [pc, #44]	@ (8000f48 <_sbrk+0x30>)
{
 8000f1a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8000f1c:	6811      	ldr	r1, [r2, #0]
{
 8000f1e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8000f20:	b909      	cbnz	r1, 8000f26 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8000f22:	490a      	ldr	r1, [pc, #40]	@ (8000f4c <_sbrk+0x34>)
 8000f24:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f26:	6810      	ldr	r0, [r2, #0]
 8000f28:	4909      	ldr	r1, [pc, #36]	@ (8000f50 <_sbrk+0x38>)
 8000f2a:	4c0a      	ldr	r4, [pc, #40]	@ (8000f54 <_sbrk+0x3c>)
 8000f2c:	4403      	add	r3, r0
 8000f2e:	1b09      	subs	r1, r1, r4
 8000f30:	428b      	cmp	r3, r1
 8000f32:	d906      	bls.n	8000f42 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8000f34:	f031 fda4 	bl	8032a80 <__errno>
 8000f38:	230c      	movs	r3, #12
 8000f3a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8000f40:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8000f42:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8000f44:	e7fc      	b.n	8000f40 <_sbrk+0x28>
 8000f46:	bf00      	nop
 8000f48:	200006ac 	.word	0x200006ac
 8000f4c:	20083728 	.word	0x20083728
 8000f50:	202f0000 	.word	0x202f0000
 8000f54:	00001000 	.word	0x00001000

08000f58 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8000f58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000f90 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f5c:	f002 fe6e 	bl	8003c3c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8000f60:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8000f62:	e003      	b.n	8000f6c <LoopCopyDataInit>

08000f64 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8000f64:	4b0b      	ldr	r3, [pc, #44]	@ (8000f94 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8000f66:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8000f68:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8000f6a:	3104      	adds	r1, #4

08000f6c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8000f6c:	480a      	ldr	r0, [pc, #40]	@ (8000f98 <LoopForever+0xa>)
	ldr	r3, =_edata
 8000f6e:	4b0b      	ldr	r3, [pc, #44]	@ (8000f9c <LoopForever+0xe>)
	adds	r2, r0, r1
 8000f70:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000f72:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000f74:	d3f6      	bcc.n	8000f64 <CopyDataInit>
	ldr	r2, =_sbss
 8000f76:	4a0a      	ldr	r2, [pc, #40]	@ (8000fa0 <LoopForever+0x12>)
	b	LoopFillZerobss
 8000f78:	e002      	b.n	8000f80 <LoopFillZerobss>

08000f7a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8000f7a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8000f7c:	f842 3b04 	str.w	r3, [r2], #4

08000f80 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000f80:	4b08      	ldr	r3, [pc, #32]	@ (8000fa4 <LoopForever+0x16>)
	cmp	r2, r3
 8000f82:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000f84:	d3f9      	bcc.n	8000f7a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000f86:	f031 fd81 	bl	8032a8c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8000f8a:	f7ff f9fd 	bl	8000388 <main>

08000f8e <LoopForever>:

LoopForever:
    b LoopForever
 8000f8e:	e7fe      	b.n	8000f8e <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8000f90:	202f0000 	.word	0x202f0000
	ldr	r3, =_sidata
 8000f94:	08038900 	.word	0x08038900
	ldr	r0, =_sdata
 8000f98:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8000f9c:	200002a8 	.word	0x200002a8
	ldr	r2, =_sbss
 8000fa0:	200002a8 	.word	0x200002a8
	ldr	r3, = _ebss
 8000fa4:	20083724 	.word	0x20083724

08000fa8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000fa8:	e7fe      	b.n	8000fa8 <ADC1_2_IRQHandler>

08000faa <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000faa:	4770      	bx	lr

08000fac <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000fac:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000fae:	f001 fb6f 	bl	8002690 <touchgfx_components_init>
    touchgfx_init();
}
 8000fb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000fb6:	f001 baf1 	b.w	800259c <touchgfx_init>

08000fba <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000fba:	f001 bb79 	b.w	80026b0 <touchgfx_taskEntry>

08000fbe <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000fbe:	6840      	ldr	r0, [r0, #4]
    }
 8000fc0:	4770      	bx	lr

08000fc2 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000fc2:	6041      	str	r1, [r0, #4]
    }
 8000fc4:	4770      	bx	lr
	...

08000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000fc8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8000fcc:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8000fd0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000fd4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000fd8:	4b05      	ldr	r3, [pc, #20]	@ (8000ff0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000fda:	4a06      	ldr	r2, [pc, #24]	@ (8000ff4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000fdc:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8000fe0:	430a      	orrs	r2, r1
 8000fe2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000fe6:	681a      	ldr	r2, [r3, #0]
 8000fe8:	f042 0201 	orr.w	r2, r2, #1
 8000fec:	601a      	str	r2, [r3, #0]
}
 8000fee:	4770      	bx	lr
 8000ff0:	e0001000 	.word	0xe0001000
 8000ff4:	c5acce55 	.word	0xc5acce55

08000ff8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000ff8:	1a52      	subs	r2, r2, r1
 8000ffa:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8000ffe:	fbb2 f0f3 	udiv	r0, r2, r3
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001004:	4b01      	ldr	r3, [pc, #4]	@ (800100c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001006:	6858      	ldr	r0, [r3, #4]
}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	e0001000 	.word	0xe0001000

08001010 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001010:	4770      	bx	lr

08001012 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001012:	b510      	push	{r4, lr}
 8001014:	4604      	mov	r4, r0
 8001016:	210c      	movs	r1, #12
 8001018:	f030 f89d 	bl	8031156 <_ZdlPvj>
 800101c:	4620      	mov	r0, r4
 800101e:	bd10      	pop	{r4, pc}

08001020 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001020:	6803      	ldr	r3, [r0, #0]
{
 8001022:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001024:	691b      	ldr	r3, [r3, #16]
{
 8001026:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001028:	b131      	cbz	r1, 8001038 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800102a:	4798      	blx	r3
 800102c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800102e:	6863      	ldr	r3, [r4, #4]
 8001030:	1a9b      	subs	r3, r3, r2
 8001032:	4403      	add	r3, r0
 8001034:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001036:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001038:	4798      	blx	r3
 800103a:	60a0      	str	r0, [r4, #8]
}
 800103c:	e7fb      	b.n	8001036 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800103e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800103e:	4770      	bx	lr

08001040 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001040:	4770      	bx	lr

08001042 <_ZN8touchgfx10KeySampler4initEv>:

using namespace touchgfx;

void KeySampler::init()
{
}
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001044:	b510      	push	{r4, lr}
    bool buttonPressed = false;
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 8001046:	4805      	ldr	r0, [pc, #20]	@ (800105c <_ZN8touchgfx10KeySampler6sampleERh+0x18>)
{
 8001048:	460c      	mov	r4, r1
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 800104a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800104e:	f003 fd31 	bl	8004ab4 <HAL_GPIO_ReadPin>
 8001052:	b108      	cbz	r0, 8001058 <_ZN8touchgfx10KeySampler6sampleERh+0x14>
    {
        buttonPressed = true;
        key = 1; // This is the "hardware button key" reffered in the TouchGFX Designer Interactions
 8001054:	2001      	movs	r0, #1
 8001056:	7020      	strb	r0, [r4, #0]
    }
    return buttonPressed;
}
 8001058:	bd10      	pop	{r4, pc}
 800105a:	bf00      	nop
 800105c:	42020800 	.word	0x42020800

08001060 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001060:	b510      	push	{r4, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	2108      	movs	r1, #8
 8001066:	f030 f876 	bl	8031156 <_ZdlPvj>
 800106a:	4620      	mov	r0, r4
 800106c:	bd10      	pop	{r4, pc}

0800106e <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
    // No init needed
}
 800106e:	4770      	bx	lr

08001070 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001070:	4770      	bx	lr

08001072 <_ZN20STM32TouchControllerD0Ev>:
 8001072:	b510      	push	{r4, lr}
 8001074:	4604      	mov	r4, r0
 8001076:	2104      	movs	r1, #4
 8001078:	f030 f86d 	bl	8031156 <_ZdlPvj>
 800107c:	4620      	mov	r0, r4
 800107e:	bd10      	pop	{r4, pc}

08001080 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4615      	mov	r5, r2
    uint8_t touches = 0;
    uint8_t buf[6];
    const uint16_t STATUS_REG = 0x814E;
    const uint16_t TOUCH_POS_REG = 0x8150;
    uint8_t ZERO = 0;
 8001086:	f04f 0a00 	mov.w	sl, #0
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800108a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800108e:	4b28      	ldr	r3, [pc, #160]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
{
 8001090:	b089      	sub	sp, #36	@ 0x24
    uint8_t ZERO = 0;
 8001092:	f88d a017 	strb.w	sl, [sp, #23]
{
 8001096:	460e      	mov	r6, r1
 8001098:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  __ASM volatile ("dsb 0xF":::"memory");
 800109c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010a0:	f3bf 8f6f 	isb	sy

    NVIC_DisableIRQ(EXTI5_IRQn);
    if (doSampleTouch)
 80010a4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001138 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb8>
 80010a8:	f899 3000 	ldrb.w	r3, [r9]
 80010ac:	b30b      	cbz	r3, 80010f2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x72>
    {
        HAL_I2C_Mem_Read(&hi2c2, 0xBA, STATUS_REG, 2, buf, 1, HAL_MAX_DELAY);
 80010ae:	f04f 0b01 	mov.w	fp, #1
 80010b2:	f04f 38ff 	mov.w	r8, #4294967295
 80010b6:	af06      	add	r7, sp, #24
 80010b8:	2302      	movs	r3, #2
 80010ba:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010be:	21ba      	movs	r1, #186	@ 0xba
 80010c0:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010c4:	481b      	ldr	r0, [pc, #108]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 80010c6:	9700      	str	r7, [sp, #0]
 80010c8:	f003 ffb2 	bl	8005030 <HAL_I2C_Mem_Read>
        touches = (0x0F & buf[0]);
 80010cc:	f89d 4018 	ldrb.w	r4, [sp, #24]

        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010d0:	f10d 0317 	add.w	r3, sp, #23
 80010d4:	9300      	str	r3, [sp, #0]
 80010d6:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010da:	2302      	movs	r3, #2
 80010dc:	21ba      	movs	r1, #186	@ 0xba
 80010de:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010e2:	4814      	ldr	r0, [pc, #80]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
        touches = (0x0F & buf[0]);
 80010e4:	f004 040f 	and.w	r4, r4, #15
        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010e8:	f003 fec8 	bl	8004e7c <HAL_I2C_Mem_Write>

        doSampleTouch = false;
 80010ec:	f889 a000 	strb.w	sl, [r9]

        if (touches > 0)
 80010f0:	b954      	cbnz	r4, 8001108 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>
    uint8_t touches = 0;
 80010f2:	2400      	movs	r4, #0
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010f4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80010f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
 80010fa:	601a      	str	r2, [r3, #0]
        }
    }
    NVIC_EnableIRQ(EXTI5_IRQn);

    return (touches > 0);
}
 80010fc:	1e20      	subs	r0, r4, #0
 80010fe:	bf18      	it	ne
 8001100:	2001      	movne	r0, #1
 8001102:	b009      	add	sp, #36	@ 0x24
 8001104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            HAL_I2C_Mem_Read(&hi2c2, 0xBA, TOUCH_POS_REG, 2, buf, 4, HAL_MAX_DELAY);
 8001108:	2304      	movs	r3, #4
 800110a:	f248 1250 	movw	r2, #33104	@ 0x8150
 800110e:	e9cd 7300 	strd	r7, r3, [sp]
 8001112:	21ba      	movs	r1, #186	@ 0xba
 8001114:	2302      	movs	r3, #2
 8001116:	4807      	ldr	r0, [pc, #28]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 8001118:	f8cd 8008 	str.w	r8, [sp, #8]
 800111c:	f003 ff88 	bl	8005030 <HAL_I2C_Mem_Read>
            x = buf[0] + (buf[1] << 8);
 8001120:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8001124:	6033      	str	r3, [r6, #0]
            y = buf[2] + (buf[3] << 8);
 8001126:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800112a:	602b      	str	r3, [r5, #0]
 800112c:	e7e2      	b.n	80010f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x74>
 800112e:	bf00      	nop
 8001130:	e000e100 	.word	0xe000e100
 8001134:	200004bc 	.word	0x200004bc
 8001138:	200006b0 	.word	0x200006b0

0800113c <HAL_GPIO_EXTI_Falling_Callback>:
        if (GPIO_Pin == TP_IRQ_Pin)
 800113c:	2820      	cmp	r0, #32
            doSampleTouch = true;
 800113e:	bf02      	ittt	eq
 8001140:	2201      	moveq	r2, #1
 8001142:	4b01      	ldreq	r3, [pc, #4]	@ (8001148 <HAL_GPIO_EXTI_Falling_Callback+0xc>)
 8001144:	701a      	strbeq	r2, [r3, #0]
    }
 8001146:	4770      	bx	lr
 8001148:	200006b0 	.word	0x200006b0

0800114c <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 800114c:	4770      	bx	lr
	...

08001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001150:	2803      	cmp	r0, #3
 8001152:	d814      	bhi.n	800117e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
 8001154:	e8df f000 	tbb	[pc, r0]
 8001158:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
 800115c:	2201      	movs	r2, #1
 800115e:	4611      	mov	r1, r2
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001160:	4807      	ldr	r0, [pc, #28]	@ (8001180 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8001162:	f003 bcad 	b.w	8004ac0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001166:	2201      	movs	r2, #1
 8001168:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800116c:	e7f8      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
 800116e:	2201      	movs	r2, #1
 8001170:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001174:	e7f4      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001176:	2201      	movs	r2, #1
 8001178:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800117c:	e7f0      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 800117e:	4770      	bx	lr
 8001180:	42020800 	.word	0x42020800

08001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001184:	2803      	cmp	r0, #3
 8001186:	d814      	bhi.n	80011b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 8001188:	e8df f000 	tbb	[pc, r0]
 800118c:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001190:	2200      	movs	r2, #0
 8001192:	2101      	movs	r1, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001194:	4807      	ldr	r0, [pc, #28]	@ (80011b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8001196:	f003 bc93 	b.w	8004ac0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800119a:	2200      	movs	r2, #0
 800119c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011a0:	e7f8      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80011a2:	2200      	movs	r2, #0
 80011a4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011a8:	e7f4      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011aa:	2200      	movs	r2, #0
 80011ac:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011b0:	e7f0      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80011b2:	4770      	bx	lr
 80011b4:	42020800 	.word	0x42020800

080011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80011b8:	2803      	cmp	r0, #3
 80011ba:	d810      	bhi.n	80011de <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x26>
 80011bc:	e8df f000 	tbb	[pc, r0]
 80011c0:	0c090602 	.word	0x0c090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80011c4:	2101      	movs	r1, #1
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011c6:	4806      	ldr	r0, [pc, #24]	@ (80011e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80011c8:	f003 bc7f 	b.w	8004aca <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80011cc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011d0:	e7f9      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80011d2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011d6:	e7f6      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011dc:	e7f3      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80011de:	4770      	bx	lr
 80011e0:	42020800 	.word	0x42020800

080011e4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80011e4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80011e6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80011ea:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80011ee:	4770      	bx	lr

080011f0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80011f0:	2000      	movs	r0, #0
 80011f2:	4770      	bx	lr

080011f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80011f4:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011f6:	3900      	subs	r1, #0
 80011f8:	bf18      	it	ne
 80011fa:	2101      	movne	r1, #1
 80011fc:	4b01      	ldr	r3, [pc, #4]	@ (8001204 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80011fe:	7019      	strb	r1, [r3, #0]
    }
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	20082f07 	.word	0x20082f07

08001208 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001208:	2000      	movs	r0, #0
 800120a:	4770      	bx	lr

0800120c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800120c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800120e:	b10b      	cbz	r3, 8001214 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001210:	4608      	mov	r0, r1
 8001212:	4718      	bx	r3
        }
    }
 8001214:	4770      	bx	lr

08001216 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001216:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800121c:	6840      	ldr	r0, [r0, #4]
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	699b      	ldr	r3, [r3, #24]
 8001222:	4718      	bx	r3

08001224 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001224:	4770      	bx	lr

08001226 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001226:	4770      	bx	lr

08001228 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001228:	4770      	bx	lr
	...

0800122c <_ZN11TouchGFXHAL10initializeEv>:

KeySampler btnctrl;


void TouchGFXHAL::initialize()
{
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4604      	mov	r4, r0
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
    instrumentation.init();
 8001230:	f104 05a8 	add.w	r5, r4, #168	@ 0xa8
    TouchGFXGeneratedHAL::initialize();
 8001234:	f001 fac8 	bl	80027c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
 8001238:	4628      	mov	r0, r5
 800123a:	f7ff fec5 	bl	8000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800123e:	2301      	movs	r3, #1
 8001240:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
        buttonController = btnCtrl;
 8001244:	4b01      	ldr	r3, [pc, #4]	@ (800124c <_ZN11TouchGFXHAL10initializeEv+0x20>)
        mcuInstrumentation = mcuInstr;
 8001246:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8001248:	6163      	str	r3, [r4, #20]
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
    setButtonController(&btnctrl);

}
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	200006b4 	.word	0x200006b4

08001250 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001250:	f001 ba9a 	b.w	8002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001254 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001254:	f001 ba9e 	b.w	8002794 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001258 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001258:	f001 bb68 	b.w	800292c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800125c <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800125c:	f001 bb68 	b.w	8002930 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001260 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001260:	f001 ba6c 	b.w	800273c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001264 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001264:	f001 bcd2 	b.w	8002c0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001268 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001268:	f001 bcb6 	b.w	8002bd8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800126c:	f001 ba72 	b.w	8002754 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001270 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 8001270:	f001 bb58 	b.w	8002924 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

08001274 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    TouchGFXGeneratedHAL::endFrame();
 8001274:	f001 bb58 	b.w	8002928 <_ZN20TouchGFXGeneratedHAL8endFrameEv>

08001278 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001278:	b510      	push	{r4, lr}
 800127a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800127c:	f00a fbbe 	bl	800b9fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001280:	6823      	ldr	r3, [r4, #0]
 8001282:	4620      	mov	r0, r4
    }
 8001284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001288:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800128c:	4718      	bx	r3

0800128e <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
 800128e:	f009 bf3f 	b.w	800b110 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08001292 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
 8001292:	f009 be05 	b.w	800aea0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001296 <_ZN11TouchGFXHALD0Ev>:
 8001296:	b510      	push	{r4, lr}
 8001298:	4604      	mov	r4, r0
 800129a:	21b4      	movs	r1, #180	@ 0xb4
 800129c:	f02f ff5b 	bl	8031156 <_ZdlPvj>
 80012a0:	4620      	mov	r0, r4
 80012a2:	bd10      	pop	{r4, pc}

080012a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012a4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012a6:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80012aa:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80012ae:	4b0c      	ldr	r3, [pc, #48]	@ (80012e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80012b0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80012b2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80012b4:	d009      	beq.n	80012ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80012b6:	b93a      	cbnz	r2, 80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012b8:	490a      	ldr	r1, [pc, #40]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ba:	4a0b      	ldr	r2, [pc, #44]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012bc:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012be:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80012c0:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80012c2:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80012c6:	701a      	strb	r2, [r3, #0]
    }
 80012c8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80012ca:	2a00      	cmp	r2, #0
 80012cc:	d0fc      	beq.n	80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ce:	4a06      	ldr	r2, [pc, #24]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d0:	4904      	ldr	r1, [pc, #16]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d6:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80012d8:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80012da:	2200      	movs	r2, #0
 80012dc:	e7f3      	b.n	80012c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80012de:	bf00      	nop
 80012e0:	20082f00 	.word	0x20082f00
 80012e4:	20082efe 	.word	0x20082efe
 80012e8:	20082efc 	.word	0x20082efc

080012ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	460d      	mov	r5, r1
 80012f0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80012f2:	b935      	cbnz	r5, 8001302 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80012f4:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80012f8:	4b08      	ldr	r3, [pc, #32]	@ (800131c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80012fa:	4a09      	ldr	r2, [pc, #36]	@ (8001320 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80012fc:	4809      	ldr	r0, [pc, #36]	@ (8001324 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80012fe:	f031 f903 	bl	8032508 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001302:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
    }
 8001306:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800130a:	3a00      	subs	r2, #0
 800130c:	bf18      	it	ne
 800130e:	2201      	movne	r2, #1
 8001310:	4b05      	ldr	r3, [pc, #20]	@ (8001328 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001312:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001314:	6803      	ldr	r3, [r0, #0]
 8001316:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800131a:	4718      	bx	r3
 800131c:	08033734 	.word	0x08033734
 8001320:	0803376c 	.word	0x0803376c
 8001324:	080337ba 	.word	0x080337ba
 8001328:	20082f06 	.word	0x20082f06

0800132c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800132c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800132e:	4b09      	ldr	r3, [pc, #36]	@ (8001354 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001330:	881b      	ldrh	r3, [r3, #0]
 8001332:	428b      	cmp	r3, r1
 8001334:	d803      	bhi.n	800133e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001336:	4b08      	ldr	r3, [pc, #32]	@ (8001358 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	4293      	cmp	r3, r2
 800133c:	d905      	bls.n	800134a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800133e:	219e      	movs	r1, #158	@ 0x9e
 8001340:	4b06      	ldr	r3, [pc, #24]	@ (800135c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001342:	4a07      	ldr	r2, [pc, #28]	@ (8001360 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001344:	4807      	ldr	r0, [pc, #28]	@ (8001364 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001346:	f031 f8df 	bl	8032508 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800134a:	4b07      	ldr	r3, [pc, #28]	@ (8001368 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800134c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800134e:	4b07      	ldr	r3, [pc, #28]	@ (800136c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001350:	801a      	strh	r2, [r3, #0]
    }
 8001352:	bd08      	pop	{r3, pc}
 8001354:	20082efc 	.word	0x20082efc
 8001358:	20082efe 	.word	0x20082efe
 800135c:	080337ff 	.word	0x080337ff
 8001360:	08033862 	.word	0x08033862
 8001364:	080337ba 	.word	0x080337ba
 8001368:	20082f02 	.word	0x20082f02
 800136c:	20082f04 	.word	0x20082f04

08001370 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001370:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001372:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001376:	b118      	cbz	r0, 8001380 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001378:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800137a:	6803      	ldr	r3, [r0, #0]
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4718      	bx	r3
    }
 8001380:	4770      	bx	lr
	...

08001384 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001384:	4601      	mov	r1, r0
 8001386:	b508      	push	{r3, lr}
        return instance;
 8001388:	4b03      	ldr	r3, [pc, #12]	@ (8001398 <IdleTaskHook+0x14>)
 800138a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800138c:	b101      	cbz	r1, 8001390 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800138e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001390:	f00a fb4e 	bl	800ba30 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001394:	2001      	movs	r0, #1
 8001396:	bd08      	pop	{r3, pc}
 8001398:	20082f08 	.word	0x20082f08

0800139c <_GLOBAL__sub_I_btnctrl>:
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 800139c:	4802      	ldr	r0, [pc, #8]	@ (80013a8 <_GLOBAL__sub_I_btnctrl+0xc>)
 800139e:	4b03      	ldr	r3, [pc, #12]	@ (80013ac <_GLOBAL__sub_I_btnctrl+0x10>)
 80013a0:	6003      	str	r3, [r0, #0]
        init();
 80013a2:	f7ff be4e 	b.w	8001042 <_ZN8touchgfx10KeySampler4initEv>
 80013a6:	bf00      	nop
 80013a8:	200006b4 	.word	0x200006b4
 80013ac:	08033708 	.word	0x08033708

080013b0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
 80013b0:	6940      	ldr	r0, [r0, #20]
 80013b2:	4770      	bx	lr

080013b4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
 80013b4:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
 80013b8:	4770      	bx	lr

080013ba <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
 80013ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80013bc:	b923      	cbnz	r3, 80013c8 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0xe>
 80013be:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80013c0:	3800      	subs	r0, #0
 80013c2:	bf18      	it	ne
 80013c4:	2001      	movne	r0, #1
 80013c6:	4770      	bx	lr
 80013c8:	2001      	movs	r0, #1
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
 80013cc:	6880      	ldr	r0, [r0, #8]
 80013ce:	4770      	bx	lr

080013d0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
 80013d0:	4770      	bx	lr

080013d2 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
 80013d2:	b510      	push	{r4, lr}
 80013d4:	460c      	mov	r4, r1
    *data = videoInfo;
 80013d6:	3004      	adds	r0, #4
 80013d8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80013da:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
 80013e0:	4770      	bx	lr
	...

080013e4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
 80013e4:	b508      	push	{r3, lr}
    assert(0);
 80013e6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80013ea:	4b02      	ldr	r3, [pc, #8]	@ (80013f4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
 80013ec:	4a02      	ldr	r2, [pc, #8]	@ (80013f8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
 80013ee:	4803      	ldr	r0, [pc, #12]	@ (80013fc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
 80013f0:	f031 f88a 	bl	8032508 <__assert_func>
 80013f4:	08034de5 	.word	0x08034de5
 80013f8:	08033980 	.word	0x08033980
 80013fc:	080339db 	.word	0x080339db

08001400 <_ZN20HardwareMJPEGDecoderD0Ev>:
 8001400:	b510      	push	{r4, lr}
 8001402:	4604      	mov	r4, r0
 8001404:	2148      	movs	r1, #72	@ 0x48
 8001406:	f02f fea6 	bl	8031156 <_ZdlPvj>
 800140a:	4620      	mov	r0, r4
 800140c:	bd10      	pop	{r4, pc}
	...

08001410 <_ZN20HardwareMJPEGDecoderC1Ev>:
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 8001410:	2200      	movs	r2, #0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001412:	4b0e      	ldr	r3, [pc, #56]	@ (800144c <_ZN20HardwareMJPEGDecoderC1Ev+0x3c>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001414:	b510      	push	{r4, lr}
    semDecodingDone = SEM_CREATE();
 8001416:	4611      	mov	r1, r2
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001418:	4604      	mov	r4, r0
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 800141a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800141e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8001422:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001426:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 800142a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
    videoInfo.frame_width = 0;
 800142e:	e9c0 2203 	strd	r2, r2, [r0, #12]
    videoInfo.number_of_frames = 0;
 8001432:	e9c0 2201 	strd	r2, r2, [r0, #4]
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001436:	6003      	str	r3, [r0, #0]
 8001438:	63c2      	str	r2, [r0, #60]	@ 0x3c
 800143a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    semDecodingDone = SEM_CREATE();
 800143e:	2001      	movs	r0, #1
 8001440:	f007 fb69 	bl	8008b16 <osSemaphoreNew>
 8001444:	4b02      	ldr	r3, [pc, #8]	@ (8001450 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
 8001446:	6018      	str	r0, [r3, #0]
}
 8001448:	4620      	mov	r0, r4
 800144a:	bd10      	pop	{r4, pc}
 800144c:	08033c1c 	.word	0x08033c1c
 8001450:	20000704 	.word	0x20000704

08001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>:
{
 8001454:	b410      	push	{r4}
 8001456:	460c      	mov	r4, r1
 8001458:	4611      	mov	r1, r2
 800145a:	461a      	mov	r2, r3
    if (reader != 0)
 800145c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800145e:	b13b      	cbz	r3, 8001470 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x1c>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
 8001460:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8001462:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8001464:	1ae4      	subs	r4, r4, r3
        src = (const char*)movieData + offset;
 8001466:	4420      	add	r0, r4
}
 8001468:	f85d 4b04 	ldr.w	r4, [sp], #4
    return strncmp(src, str, num);
 800146c:	f031 ba5b 	b.w	8032926 <strncmp>
        src = (const char*)movieData + offset;
 8001470:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8001472:	e7f8      	b.n	8001466 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x12>

08001474 <_ZN20HardwareMJPEGDecoder6getU32Em>:
    if (reader != 0)
 8001474:	6b03      	ldr	r3, [r0, #48]	@ 0x30
{
 8001476:	b510      	push	{r4, lr}
    if (reader != 0)
 8001478:	b173      	cbz	r3, 8001498 <_ZN20HardwareMJPEGDecoder6getU32Em+0x24>
        const uint32_t index = offset - aviBufferStartOffset;
 800147a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 800147c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
 800147e:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 8001480:	1853      	adds	r3, r2, r1
 8001482:	7898      	ldrb	r0, [r3, #2]
 8001484:	785c      	ldrb	r4, [r3, #1]
 8001486:	0400      	lsls	r0, r0, #16
 8001488:	5c52      	ldrb	r2, [r2, r1]
 800148a:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
        val |= d[3] << 24;
 800148e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
 8001490:	4310      	orrs	r0, r2
        val |= d[3] << 24;
 8001492:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
}
 8001496:	bd10      	pop	{r4, pc}
        volatile const uint8_t* const d = movieData + offset;
 8001498:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800149a:	1853      	adds	r3, r2, r1
        val |= d[0];
 800149c:	5c52      	ldrb	r2, [r2, r1]
        val |= d[1] << 8;
 800149e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
 80014a0:	7898      	ldrb	r0, [r3, #2]
 80014a2:	0400      	lsls	r0, r0, #16
 80014a4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80014a8:	e7f1      	b.n	800148e <_ZN20HardwareMJPEGDecoder6getU32Em+0x1a>

080014aa <_ZN20HardwareMJPEGDecoder6getU16Em>:
    if (reader != 0)
 80014aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80014ac:	b143      	cbz	r3, 80014c0 <_ZN20HardwareMJPEGDecoder6getU16Em+0x16>
        const uint32_t index = offset - aviBufferStartOffset;
 80014ae:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80014b0:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
 80014b2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80014b4:	185a      	adds	r2, r3, r1
 80014b6:	7852      	ldrb	r2, [r2, #1]
 80014b8:	5c58      	ldrb	r0, [r3, r1]
 80014ba:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80014be:	4770      	bx	lr
        volatile const uint8_t* const d = movieData + offset;
 80014c0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80014c2:	185a      	adds	r2, r3, r1
        val |= d[0];
 80014c4:	5c58      	ldrb	r0, [r3, r1]
        val |= d[1] << 8;
 80014c6:	7853      	ldrb	r3, [r2, #1]
 80014c8:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>:
{
 80014d0:	b570      	push	{r4, r5, r6, lr}
 80014d2:	4604      	mov	r4, r0
    if (reader != 0)
 80014d4:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
 80014d6:	460d      	mov	r5, r1
 80014d8:	4616      	mov	r6, r2
    if (reader != 0)
 80014da:	b1d8      	cbz	r0, 8001514 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x44>
        if (length > aviBufferLength)
 80014dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80014de:	4293      	cmp	r3, r2
 80014e0:	d208      	bcs.n	80014f4 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x24>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e2:	2309      	movs	r3, #9
            assert(!"Buffer to small");
 80014e4:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
 80014ea:	4a0c      	ldr	r2, [pc, #48]	@ (800151c <_ZN20HardwareMJPEGDecoder8readDataEmm+0x4c>)
 80014ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001520 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x50>)
 80014ee:	480d      	ldr	r0, [pc, #52]	@ (8001524 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x54>)
 80014f0:	f031 f80a 	bl	8032508 <__assert_func>
        reader->seek(offset);
 80014f4:	6803      	ldr	r3, [r0, #0]
 80014f6:	68db      	ldr	r3, [r3, #12]
 80014f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
 80014fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80014fc:	4632      	mov	r2, r6
 80014fe:	6803      	ldr	r3, [r0, #0]
 8001500:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001502:	691b      	ldr	r3, [r3, #16]
 8001504:	4798      	blx	r3
 8001506:	b910      	cbnz	r0, 800150e <_ZN20HardwareMJPEGDecoder8readDataEmm+0x3e>
            lastError = AVI_ERROR_EOF_REACHED;
 8001508:	230d      	movs	r3, #13
 800150a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
 800150e:	6b60      	ldr	r0, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
 8001510:	63e5      	str	r5, [r4, #60]	@ 0x3c
}
 8001512:	bd70      	pop	{r4, r5, r6, pc}
    return movieData + offset;
 8001514:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8001516:	4408      	add	r0, r1
 8001518:	e7fb      	b.n	8001512 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x42>
 800151a:	bf00      	nop
 800151c:	08033a57 	.word	0x08033a57
 8001520:	08033a44 	.word	0x08033a44
 8001524:	080339db 	.word	0x080339db

08001528 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
{
 8001528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 800152c:	6943      	ldr	r3, [r0, #20]
{
 800152e:	4604      	mov	r4, r0
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001530:	b92b      	cbnz	r3, 800153e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x16>
 8001532:	21f6      	movs	r1, #246	@ 0xf6
 8001534:	4b21      	ldr	r3, [pc, #132]	@ (80015bc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x94>)
 8001536:	4a22      	ldr	r2, [pc, #136]	@ (80015c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x98>)
 8001538:	4822      	ldr	r0, [pc, #136]	@ (80015c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x9c>)
 800153a:	f030 ffe5 	bl	8032508 <__assert_func>
    readData(currentMovieOffset, 8);
 800153e:	2208      	movs	r2, #8
 8001540:	6981      	ldr	r1, [r0, #24]
 8001542:	f7ff ffc5 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001546:	69a1      	ldr	r1, [r4, #24]
 8001548:	4620      	mov	r0, r4
 800154a:	3104      	adds	r1, #4
 800154c:	f7ff ff92 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 8001550:	f243 0630 	movw	r6, #12336	@ 0x3030
 8001554:	f246 3764 	movw	r7, #25444	@ 0x6364
    while (currentMovieOffset + 8 + chunkSize < movieLength)
 8001558:	69a3      	ldr	r3, [r4, #24]
 800155a:	4418      	add	r0, r3
 800155c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800155e:	f100 0208 	add.w	r2, r0, #8
 8001562:	429a      	cmp	r2, r3
 8001564:	d306      	bcc.n	8001574 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x4c>
    frameNumber = 1;
 8001566:	2301      	movs	r3, #1
    return false;
 8001568:	2000      	movs	r0, #0
    frameNumber = 1;
 800156a:	6163      	str	r3, [r4, #20]
    currentMovieOffset = firstFrameOffset; /* start over */
 800156c:	6a23      	ldr	r3, [r4, #32]
 800156e:	61a3      	str	r3, [r4, #24]
}
 8001570:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        frameNumber++;
 8001574:	6963      	ldr	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001576:	f100 0109 	add.w	r1, r0, #9
        frameNumber++;
 800157a:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 800157c:	f021 0101 	bic.w	r1, r1, #1
        readData(currentMovieOffset, 8);
 8001580:	2208      	movs	r2, #8
        frameNumber++;
 8001582:	6163      	str	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001584:	61a1      	str	r1, [r4, #24]
        readData(currentMovieOffset, 8);
 8001586:	4620      	mov	r0, r4
 8001588:	f7ff ffa2 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
        uint32_t streamNo  = getU16(currentMovieOffset);
 800158c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 8001590:	4620      	mov	r0, r4
 8001592:	4649      	mov	r1, r9
 8001594:	f7ff ff89 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001598:	f109 0102 	add.w	r1, r9, #2
        uint32_t streamNo  = getU16(currentMovieOffset);
 800159c:	4680      	mov	r8, r0
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 800159e:	4620      	mov	r0, r4
 80015a0:	f7ff ff83 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        chunkSize = getU32(currentMovieOffset + 4);
 80015a4:	f109 0104 	add.w	r1, r9, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 80015a8:	4605      	mov	r5, r0
        chunkSize = getU32(currentMovieOffset + 4);
 80015aa:	4620      	mov	r0, r4
 80015ac:	f7ff ff62 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 80015b0:	45b0      	cmp	r8, r6
 80015b2:	d1d1      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
 80015b4:	42bd      	cmp	r5, r7
 80015b6:	d1cf      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
            return true;
 80015b8:	2001      	movs	r0, #1
 80015ba:	e7d9      	b.n	8001570 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x48>
 80015bc:	08033a99 	.word	0x08033a99
 80015c0:	08033ae2 	.word	0x08033ae2
 80015c4:	080339db 	.word	0x080339db

080015c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
    if (frameNumber == 0)
 80015c8:	2901      	cmp	r1, #1
 80015ca:	bf38      	it	cc
 80015cc:	2101      	movcc	r1, #1
    if (frameNumber > getNumberOfFrames())
 80015ce:	6803      	ldr	r3, [r0, #0]
{
 80015d0:	b570      	push	{r4, r5, r6, lr}
    if (frameNumber > getNumberOfFrames())
 80015d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015d4:	460d      	mov	r5, r1
{
 80015d6:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
 80015d8:	4798      	blx	r3
 80015da:	42a8      	cmp	r0, r5
 80015dc:	d204      	bcs.n	80015e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x20>
        frameNumber = getNumberOfFrames();
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	4620      	mov	r0, r4
 80015e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015e4:	4798      	blx	r3
 80015e6:	4605      	mov	r5, r0
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
 80015e8:	69e6      	ldr	r6, [r4, #28]
 80015ea:	1e6b      	subs	r3, r5, #1
 80015ec:	eb06 1603 	add.w	r6, r6, r3, lsl #4
    readData(offset, 16);
 80015f0:	2210      	movs	r2, #16
 80015f2:	f106 0108 	add.w	r1, r6, #8
 80015f6:	4620      	mov	r0, r4
 80015f8:	f7ff ff6a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
 80015fc:	4620      	mov	r0, r4
 80015fe:	f106 0110 	add.w	r1, r6, #16
 8001602:	f7ff ff37 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001606:	6a23      	ldr	r3, [r4, #32]
 8001608:	3b04      	subs	r3, #4
 800160a:	4403      	add	r3, r0
    this->frameNumber = frameNumber;
 800160c:	e9c4 5305 	strd	r5, r3, [r4, #20]
}
 8001610:	bd70      	pop	{r4, r5, r6, pc}
	...

08001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
    currentMovieOffset = 0;
 8001614:	2100      	movs	r1, #0
{
 8001616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800161a:	4604      	mov	r4, r0
    readData(0, 72);
 800161c:	2248      	movs	r2, #72	@ 0x48
    currentMovieOffset = 0;
 800161e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
 8001620:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    readData(0, 72);
 8001624:	f7ff ff54 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (compare(currentMovieOffset, "RIFF", 4))
 8001628:	69a6      	ldr	r6, [r4, #24]
 800162a:	2304      	movs	r3, #4
 800162c:	4631      	mov	r1, r6
 800162e:	4620      	mov	r0, r4
 8001630:	4a62      	ldr	r2, [pc, #392]	@ (80017bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a8>)
 8001632:	f7ff ff0f 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001636:	b148      	cbz	r0, 800164c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
        lastError = AVI_ERROR_NOT_RIFF;
 8001638:	2303      	movs	r3, #3
        assert(!"RIFF header not found");
 800163a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
 800163e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"RIFF header not found");
 8001642:	4a5f      	ldr	r2, [pc, #380]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 8001644:	4b5f      	ldr	r3, [pc, #380]	@ (80017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b0>)
        assert(!"AVI header not found");
 8001646:	4860      	ldr	r0, [pc, #384]	@ (80017c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>)
 8001648:	f030 ff5e 	bl	8032508 <__assert_func>
    currentMovieOffset += 8;
 800164c:	f106 0108 	add.w	r1, r6, #8
    if (compare(currentMovieOffset, "AVI ", 4))
 8001650:	2304      	movs	r3, #4
 8001652:	4620      	mov	r0, r4
 8001654:	4a5d      	ldr	r2, [pc, #372]	@ (80017cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>)
    currentMovieOffset += 8;
 8001656:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "AVI ", 4))
 8001658:	f7ff fefc 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800165c:	b138      	cbz	r0, 800166e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x5a>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 800165e:	2304      	movs	r3, #4
        assert(!"AVI header not found");
 8001660:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 8001664:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI header not found");
 8001668:	4a55      	ldr	r2, [pc, #340]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800166a:	4b59      	ldr	r3, [pc, #356]	@ (80017d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1bc>)
 800166c:	e7eb      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    currentMovieOffset += 4;
 800166e:	f106 010c 	add.w	r1, r6, #12
    if (compare(currentMovieOffset, "LIST", 4))
 8001672:	2304      	movs	r3, #4
 8001674:	4620      	mov	r0, r4
 8001676:	4a57      	ldr	r2, [pc, #348]	@ (80017d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c0>)
    currentMovieOffset += 4;
 8001678:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "LIST", 4))
 800167a:	f7ff feeb 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800167e:	4607      	mov	r7, r0
 8001680:	b138      	cbz	r0, 8001692 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x7e>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001682:	2305      	movs	r3, #5
        assert(!"AVI LIST not found");
 8001684:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001688:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI LIST not found");
 800168c:	4a4c      	ldr	r2, [pc, #304]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800168e:	4b52      	ldr	r3, [pc, #328]	@ (80017d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>)
 8001690:	e7d9      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
 8001692:	4620      	mov	r0, r4
 8001694:	f106 0110 	add.w	r1, r6, #16
 8001698:	f7ff feec 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    assert(aviListSize);
 800169c:	4605      	mov	r5, r0
 800169e:	b920      	cbnz	r0, 80016aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x96>
 80016a0:	f240 1153 	movw	r1, #339	@ 0x153
 80016a4:	4b4d      	ldr	r3, [pc, #308]	@ (80017dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c8>)
 80016a6:	4a46      	ldr	r2, [pc, #280]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 80016a8:	e7cd      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    uint32_t offset =  currentMovieOffset + 8;
 80016aa:	f106 0814 	add.w	r8, r6, #20
    if (compare(offset, "hdrl", 4))
 80016ae:	2304      	movs	r3, #4
 80016b0:	4641      	mov	r1, r8
 80016b2:	4620      	mov	r0, r4
 80016b4:	4a4a      	ldr	r2, [pc, #296]	@ (80017e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1cc>)
 80016b6:	f7ff fecd 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016ba:	2800      	cmp	r0, #0
 80016bc:	d049      	beq.n	8001752 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13e>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
 80016be:	2306      	movs	r3, #6
 80016c0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if (compare(offset, "avih", 4))
 80016c4:	2304      	movs	r3, #4
 80016c6:	4620      	mov	r0, r4
 80016c8:	4a46      	ldr	r2, [pc, #280]	@ (80017e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d0>)
 80016ca:	f106 0118 	add.w	r1, r6, #24
 80016ce:	f7ff fec1 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016d2:	2800      	cmp	r0, #0
 80016d4:	d03f      	beq.n	8001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x142>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
 80016d6:	2307      	movs	r3, #7
 80016d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
 80016dc:	4445      	add	r5, r8
    readData(listOffset, 12);
 80016de:	220c      	movs	r2, #12
 80016e0:	4629      	mov	r1, r5
 80016e2:	4620      	mov	r0, r4
 80016e4:	f7ff fef4 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
 80016e8:	4f3f      	ldr	r7, [pc, #252]	@ (80017e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d4>)
 80016ea:	f105 0608 	add.w	r6, r5, #8
 80016ee:	2304      	movs	r3, #4
 80016f0:	463a      	mov	r2, r7
 80016f2:	4631      	mov	r1, r6
 80016f4:	4620      	mov	r0, r4
 80016f6:	f7ff fead 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80016fe:	2800      	cmp	r0, #0
 8001700:	d048      	beq.n	8001794 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x180>
 8001702:	2b00      	cmp	r3, #0
 8001704:	d148      	bne.n	8001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x184>
 8001706:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001708:	42ab      	cmp	r3, r5
 800170a:	d849      	bhi.n	80017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x18c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 800170c:	f105 030c 	add.w	r3, r5, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001710:	3504      	adds	r5, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 8001712:	61a3      	str	r3, [r4, #24]
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001714:	4629      	mov	r1, r5
 8001716:	4620      	mov	r0, r4
 8001718:	f7ff feac 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 800171c:	4430      	add	r0, r6
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 800171e:	4629      	mov	r1, r5
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001720:	6260      	str	r0, [r4, #36]	@ 0x24
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 8001722:	4620      	mov	r0, r4
 8001724:	f7ff fea6 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    listOffset += listSize;
 8001728:	4406      	add	r6, r0
    readData(listOffset, 4);
 800172a:	2204      	movs	r2, #4
 800172c:	4631      	mov	r1, r6
 800172e:	4620      	mov	r0, r4
 8001730:	f7ff fece 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (!compare(listOffset, "idx1", 4))
 8001734:	2304      	movs	r3, #4
 8001736:	4631      	mov	r1, r6
 8001738:	4620      	mov	r0, r4
 800173a:	4a2c      	ldr	r2, [pc, #176]	@ (80017ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d8>)
 800173c:	f7ff fe8a 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001740:	2800      	cmp	r0, #0
 8001742:	d138      	bne.n	80017b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a2>
    frameNumber = 1; /* next frame number is 1 */
 8001744:	2301      	movs	r3, #1
 8001746:	6163      	str	r3, [r4, #20]
    firstFrameOffset = currentMovieOffset;
 8001748:	69a3      	ldr	r3, [r4, #24]
        indexOffset = listOffset;
 800174a:	61e6      	str	r6, [r4, #28]
    firstFrameOffset = currentMovieOffset;
 800174c:	6223      	str	r3, [r4, #32]
}
 800174e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bool foundFrame = true;
 8001752:	2701      	movs	r7, #1
 8001754:	e7b6      	b.n	80016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xb0>
    if (foundFrame)
 8001756:	2f00      	cmp	r7, #0
 8001758:	d0c0      	beq.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 800175a:	f106 0120 	add.w	r1, r6, #32
 800175e:	4620      	mov	r0, r4
 8001760:	f7ff fe88 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001764:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001768:	fbb0 f0f3 	udiv	r0, r0, r3
        videoInfo.number_of_frames = getU32(offset + 16);
 800176c:	f106 0130 	add.w	r1, r6, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 8001770:	6060      	str	r0, [r4, #4]
        videoInfo.number_of_frames = getU32(offset + 16);
 8001772:	4620      	mov	r0, r4
 8001774:	f7ff fe7e 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_width = getU32(offset + 32);
 8001778:	f106 0140 	add.w	r1, r6, #64	@ 0x40
        videoInfo.number_of_frames = getU32(offset + 16);
 800177c:	60a0      	str	r0, [r4, #8]
        videoInfo.frame_width = getU32(offset + 32);
 800177e:	4620      	mov	r0, r4
 8001780:	f7ff fe78 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_height = getU32(offset + 36);
 8001784:	f106 0144 	add.w	r1, r6, #68	@ 0x44
        videoInfo.frame_width = getU32(offset + 32);
 8001788:	60e0      	str	r0, [r4, #12]
        videoInfo.frame_height = getU32(offset + 36);
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff fe72 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001790:	6120      	str	r0, [r4, #16]
 8001792:	e7a3      	b.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    if (lastError != AVI_NO_ERROR)
 8001794:	2b00      	cmp	r3, #0
 8001796:	d0b9      	beq.n	800170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xf8>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
 8001798:	230a      	movs	r3, #10
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 800179a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return;
 800179e:	e7d6      	b.n	800174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13a>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
 80017a0:	1d29      	adds	r1, r5, #4
 80017a2:	4620      	mov	r0, r4
 80017a4:	f7ff fe66 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        listOffset += listSize;
 80017a8:	1985      	adds	r5, r0, r6
        readData(listOffset, 12);
 80017aa:	220c      	movs	r2, #12
 80017ac:	4629      	mov	r1, r5
 80017ae:	4620      	mov	r0, r4
 80017b0:	f7ff fe8e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
 80017b4:	e799      	b.n	80016ea <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 80017b6:	230b      	movs	r3, #11
 80017b8:	e7ef      	b.n	800179a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x186>
 80017ba:	bf00      	nop
 80017bc:	08033b15 	.word	0x08033b15
 80017c0:	08033b33 	.word	0x08033b33
 80017c4:	08033b1a 	.word	0x08033b1a
 80017c8:	080339db 	.word	0x080339db
 80017cc:	08033b60 	.word	0x08033b60
 80017d0:	08033b65 	.word	0x08033b65
 80017d4:	08033b7d 	.word	0x08033b7d
 80017d8:	08033b82 	.word	0x08033b82
 80017dc:	08033b98 	.word	0x08033b98
 80017e0:	08033ba4 	.word	0x08033ba4
 80017e4:	08033ba9 	.word	0x08033ba9
 80017e8:	08033bae 	.word	0x08033bae
 80017ec:	08033bb3 	.word	0x08033bb3

080017f0 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
    movieLength = length;
 80017f0:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
 80017f4:	2200      	movs	r2, #0
 80017f6:	6302      	str	r2, [r0, #48]	@ 0x30
    readVideoHeader();
 80017f8:	f7ff bf0c 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

080017fc <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
 80017fc:	b510      	push	{r4, lr}
    movieData = 0;
 80017fe:	2300      	movs	r3, #0
{
 8001800:	4604      	mov	r4, r0
    movieData = 0;
 8001802:	62e3      	str	r3, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
 8001804:	680b      	ldr	r3, [r1, #0]
    this->reader = &reader;
 8001806:	6321      	str	r1, [r4, #48]	@ 0x30
{
 8001808:	4608      	mov	r0, r1
    movieLength = reader.getDataLength();
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	4798      	blx	r3
 800180e:	62a0      	str	r0, [r4, #40]	@ 0x28
    readVideoHeader();
 8001810:	4620      	mov	r0, r4
}
 8001812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
 8001816:	f7ff befd 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
	...

0800181c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
 800181c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        FrameBufferAddress = output;
 800181e:	4c1d      	ldr	r4, [pc, #116]	@ (8001894 <JPEG_Decode_DMA+0x78>)
        JPEG_output_is_paused = 0;
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
 8001820:	4e1d      	ldr	r6, [pc, #116]	@ (8001898 <JPEG_Decode_DMA+0x7c>)
        FrameBufferAddress = output;
 8001822:	6023      	str	r3, [r4, #0]
        JPEG_output_is_paused = 0;
 8001824:	2400      	movs	r4, #0
 8001826:	4b1d      	ldr	r3, [pc, #116]	@ (800189c <JPEG_Decode_DMA+0x80>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001828:	4d1d      	ldr	r5, [pc, #116]	@ (80018a0 <JPEG_Decode_DMA+0x84>)
        JPEG_output_is_paused = 0;
 800182a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
 800182c:	4b1d      	ldr	r3, [pc, #116]	@ (80018a4 <JPEG_Decode_DMA+0x88>)
 800182e:	601c      	str	r4, [r3, #0]
        JPEG_InputImageIndex = 0;
 8001830:	4b1d      	ldr	r3, [pc, #116]	@ (80018a8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
 8001832:	6034      	str	r4, [r6, #0]
        JPEG_InputImageIndex = 0;
 8001834:	601c      	str	r4, [r3, #0]
        JPEG_InputImageAddress = (uint32_t)input;
 8001836:	4b1d      	ldr	r3, [pc, #116]	@ (80018ac <JPEG_Decode_DMA+0x90>)
 8001838:	6019      	str	r1, [r3, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
 800183a:	4b1d      	ldr	r3, [pc, #116]	@ (80018b0 <JPEG_Decode_DMA+0x94>)
 800183c:	601a      	str	r2, [r3, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800183e:	2201      	movs	r2, #1
        MCU_BlockIndex = 0;
 8001840:	4b1c      	ldr	r3, [pc, #112]	@ (80018b4 <JPEG_Decode_DMA+0x98>)
 8001842:	601c      	str	r4, [r3, #0]
        line_count = 0;
 8001844:	4b1c      	ldr	r3, [pc, #112]	@ (80018b8 <JPEG_Decode_DMA+0x9c>)
 8001846:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 8001848:	4b1c      	ldr	r3, [pc, #112]	@ (80018bc <JPEG_Decode_DMA+0xa0>)
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800184a:	765a      	strb	r2, [r3, #25]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 800184c:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 800184e:	e9c3 4402 	strd	r4, r4, [r3, #8]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001852:	1b12      	subs	r2, r2, r4
 8001854:	bf18      	it	ne
 8001856:	2201      	movne	r2, #1
 8001858:	761a      	strb	r2, [r3, #24]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800185a:	6832      	ldr	r2, [r6, #0]
 800185c:	261c      	movs	r6, #28
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 800185e:	e9c3 4404 	strd	r4, r4, [r3, #16]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 8001862:	e9c3 4409 	strd	r4, r4, [r3, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 8001866:	e9c3 440b 	strd	r4, r4, [r3, #44]	@ 0x2c
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186a:	701c      	strb	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].LastJob = false;
 800186c:	769c      	strb	r4, [r3, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186e:	771c      	strb	r4, [r3, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
 8001870:	869c      	strh	r4, [r3, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
 8001872:	f883 4036 	strb.w	r4, [r3, #54]	@ 0x36
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001876:	fb06 3302 	mla	r3, r6, r2, r3
 800187a:	68ea      	ldr	r2, [r5, #12]
 800187c:	f44f 75c0 	mov.w	r5, #384	@ 0x180
 8001880:	436a      	muls	r2, r5
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
 800188a:	f004 f88f 	bl	80059ac <HAL_JPEG_Decode_DMA>

        return 0;
    }
 800188e:	4620      	mov	r0, r4
 8001890:	b002      	add	sp, #8
 8001892:	bd70      	pop	{r4, r5, r6, pc}
 8001894:	20009f34 	.word	0x20009f34
 8001898:	20009f14 	.word	0x20009f14
 800189c:	20009f20 	.word	0x20009f20
 80018a0:	200006bc 	.word	0x200006bc
 80018a4:	20000700 	.word	0x20000700
 80018a8:	20009f30 	.word	0x20009f30
 80018ac:	20009f28 	.word	0x20009f28
 80018b0:	20009f2c 	.word	0x20009f2c
 80018b4:	20000708 	.word	0x20000708
 80018b8:	20009f10 	.word	0x20009f10
 80018bc:	20000004 	.word	0x20000004

080018c0 <HAL_JPEG_InfoReadyCallback>:
     */
    void HAL_JPEG_InfoReadyCallback(JPEG_HandleTypeDef* hjpeg, JPEG_ConfTypeDef* pInfo)
    {
        uint32_t hMCU, vMCU;

        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
 80018c0:	684b      	ldr	r3, [r1, #4]
 80018c2:	2b01      	cmp	r3, #1
 80018c4:	d10e      	bne.n	80018e4 <HAL_JPEG_InfoReadyCallback+0x24>
        {
            if ((pInfo->ImageWidth % 16) != 0)
 80018c6:	68cb      	ldr	r3, [r1, #12]
 80018c8:	071a      	lsls	r2, r3, #28
            {
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ca:	bf1e      	ittt	ne
 80018cc:	f023 030f 	bicne.w	r3, r3, #15
 80018d0:	3310      	addne	r3, #16
 80018d2:	60cb      	strne	r3, [r1, #12]
            }

            if ((pInfo->ImageHeight % 16) != 0)
 80018d4:	688b      	ldr	r3, [r1, #8]
 80018d6:	0718      	lsls	r0, r3, #28
 80018d8:	d003      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
            {
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
 80018da:	f023 030f 	bic.w	r3, r3, #15
 80018de:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
                }

                if ((pInfo->ImageHeight % 8) != 0)
                {
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018e0:	608b      	str	r3, [r1, #8]
                }
            }
        }
    }
 80018e2:	4770      	bx	lr
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d10d      	bne.n	8001904 <HAL_JPEG_InfoReadyCallback+0x44>
                if ((pInfo->ImageWidth % 16) != 0)
 80018e8:	68cb      	ldr	r3, [r1, #12]
 80018ea:	071a      	lsls	r2, r3, #28
 80018ec:	d003      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ee:	f023 030f 	bic.w	r3, r3, #15
 80018f2:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 80018f4:	60cb      	str	r3, [r1, #12]
                if ((pInfo->ImageHeight % 8) != 0)
 80018f6:	688b      	ldr	r3, [r1, #8]
 80018f8:	075a      	lsls	r2, r3, #29
 80018fa:	d0f2      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018fc:	f023 0307 	bic.w	r3, r3, #7
 8001900:	3308      	adds	r3, #8
 8001902:	e7ed      	b.n	80018e0 <HAL_JPEG_InfoReadyCallback+0x20>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
 8001904:	2b00      	cmp	r3, #0
 8001906:	d1ec      	bne.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                if ((pInfo->ImageWidth % 8) != 0)
 8001908:	68cb      	ldr	r3, [r1, #12]
 800190a:	0758      	lsls	r0, r3, #29
 800190c:	d0f3      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 800190e:	f023 0307 	bic.w	r3, r3, #7
 8001912:	3308      	adds	r3, #8
 8001914:	e7ee      	b.n	80018f4 <HAL_JPEG_InfoReadyCallback+0x34>
	...

08001918 <HAL_JPEG_GetDataCallback>:
     * @retval None
     */
    void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef* hjpeg, uint32_t NbDecodedData)
    {
        /* Input buffer has been consumed by the peripheral and to ask for a new data chunk if the operation (encoding/decoding) has not been complete yet. */
        JPEG_InputImageIndex += NbDecodedData;
 8001918:	4a0b      	ldr	r2, [pc, #44]	@ (8001948 <HAL_JPEG_GetDataCallback+0x30>)
    {
 800191a:	b430      	push	{r4, r5}
        JPEG_InputImageIndex += NbDecodedData;
 800191c:	6813      	ldr	r3, [r2, #0]
 800191e:	440b      	add	r3, r1
 8001920:	6013      	str	r3, [r2, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
 8001922:	4a0a      	ldr	r2, [pc, #40]	@ (800194c <HAL_JPEG_GetDataCallback+0x34>)
 8001924:	6812      	ldr	r2, [r2, #0]
 8001926:	4293      	cmp	r3, r2
 8001928:	d20c      	bcs.n	8001944 <HAL_JPEG_GetDataCallback+0x2c>
        {
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192a:	4c09      	ldr	r4, [pc, #36]	@ (8001950 <HAL_JPEG_GetDataCallback+0x38>)
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
 800192c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192e:	6825      	ldr	r5, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001930:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 8001934:	4429      	add	r1, r5
 8001936:	6021      	str	r1, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001938:	bf28      	it	cs
 800193a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
        }
    }
 800193e:	bc30      	pop	{r4, r5}
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001940:	f004 b89b 	b.w	8005a7a <HAL_JPEG_ConfigInputBuffer>
    }
 8001944:	bc30      	pop	{r4, r5}
 8001946:	4770      	bx	lr
 8001948:	20009f30 	.word	0x20009f30
 800194c:	20009f2c 	.word	0x20009f2c
 8001950:	20009f28 	.word	0x20009f28

08001954 <HAL_JPEG_DataReadyCallback>:
     * @param pDataOut: pointer to the output data buffer
     * @param OutDataLength: length of output buffer in bytes
     * @retval None
     */
    void HAL_JPEG_DataReadyCallback(JPEG_HandleTypeDef* hjpeg, uint8_t* pDataOut, uint32_t OutDataLength)
    {
 8001954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        line_count += MCU_HEIGHT_PIXELS;
 8001958:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 8001a8c <HAL_JPEG_DataReadyCallback+0x138>

        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800195c:	4c43      	ldr	r4, [pc, #268]	@ (8001a6c <HAL_JPEG_DataReadyCallback+0x118>)
        line_count += MCU_HEIGHT_PIXELS;
 800195e:	f8d8 3000 	ldr.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 8001962:	4d43      	ldr	r5, [pc, #268]	@ (8001a70 <HAL_JPEG_DataReadyCallback+0x11c>)
        line_count += MCU_HEIGHT_PIXELS;
 8001964:	3310      	adds	r3, #16
 8001966:	f8c8 3000 	str.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800196a:	231c      	movs	r3, #28
 800196c:	6821      	ldr	r1, [r4, #0]
 800196e:	f8df e120 	ldr.w	lr, [pc, #288]	@ 8001a90 <HAL_JPEG_DataReadyCallback+0x13c>
 8001972:	fb03 5101 	mla	r1, r3, r1, r5
 8001976:	f8de 9000 	ldr.w	r9, [lr]

        /* Increment framebuffer */
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800197a:	4e3e      	ldr	r6, [pc, #248]	@ (8001a74 <HAL_JPEG_DataReadyCallback+0x120>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800197c:	f8c1 9014 	str.w	r9, [r1, #20]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001980:	493d      	ldr	r1, [pc, #244]	@ (8001a78 <HAL_JPEG_DataReadyCallback+0x124>)
    {
 8001982:	4694      	mov	ip, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001984:	6809      	ldr	r1, [r1, #0]
 8001986:	6932      	ldr	r2, [r6, #16]
    {
 8001988:	4607      	mov	r7, r0
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800198a:	4351      	muls	r1, r2
 800198c:	eb09 1101 	add.w	r1, r9, r1, lsl #4

        /* Decode until we reach area to draw */
        if (line_count <= JPEG_ConvertorParams.startY)
 8001990:	f8d8 2000 	ldr.w	r2, [r8]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001994:	f8ce 1000 	str.w	r1, [lr]
        if (line_count <= JPEG_ConvertorParams.startY)
 8001998:	6971      	ldr	r1, [r6, #20]
 800199a:	4291      	cmp	r1, r2
 800199c:	d30b      	bcc.n	80019b6 <HAL_JPEG_DataReadyCallback+0x62>
        {
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800199e:	6821      	ldr	r1, [r4, #0]
 80019a0:	68f2      	ldr	r2, [r6, #12]
 80019a2:	fb03 5301 	mla	r3, r3, r1, r5
 80019a6:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 80019aa:	434a      	muls	r2, r1
 80019ac:	6859      	ldr	r1, [r3, #4]
        /* Signal Hardware Decoding to wake up */
        if (!DMA2D_reference->isDMARunning())
        {
            SEM_POST(semDecodingDone);
        }
    }
 80019ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 80019b2:	f004 b865 	b.w	8005a80 <HAL_JPEG_ConfigOutputBuffer>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019b6:	6822      	ldr	r2, [r4, #0]
 80019b8:	2001      	movs	r0, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019ba:	6821      	ldr	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019bc:	435a      	muls	r2, r3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019be:	fb03 5101 	mla	r1, r3, r1, r5
 80019c2:	f8c1 c008 	str.w	ip, [r1, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019c6:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019c8:	54a8      	strb	r0, [r5, r2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019ca:	6822      	ldr	r2, [r4, #0]
 80019cc:	fb03 5202 	mla	r2, r3, r2, r5
 80019d0:	6111      	str	r1, [r2, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
 80019d2:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 80019d4:	b11a      	cbz	r2, 80019de <HAL_JPEG_DataReadyCallback+0x8a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
 80019d6:	6822      	ldr	r2, [r4, #0]
 80019d8:	fb03 5302 	mla	r3, r3, r2, r5
 80019dc:	7618      	strb	r0, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
 80019de:	f8d8 3000 	ldr.w	r3, [r8]
 80019e2:	69b2      	ldr	r2, [r6, #24]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	d924      	bls.n	8001a32 <HAL_JPEG_DataReadyCallback+0xde>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
 80019e8:	221c      	movs	r2, #28
 80019ea:	6823      	ldr	r3, [r4, #0]
 80019ec:	fb02 5303 	mla	r3, r2, r3, r5
 80019f0:	2200      	movs	r2, #0
 80019f2:	769a      	strb	r2, [r3, #26]
            JPEG_OUT_Write_BufferIndex++;
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	3301      	adds	r3, #1
 80019f8:	6023      	str	r3, [r4, #0]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	2b01      	cmp	r3, #1
                JPEG_OUT_Write_BufferIndex = 0;
 80019fe:	bf88      	it	hi
 8001a00:	6022      	strhi	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
 8001a02:	221c      	movs	r2, #28
 8001a04:	6823      	ldr	r3, [r4, #0]
 8001a06:	4353      	muls	r3, r2
 8001a08:	5ceb      	ldrb	r3, [r5, r3]
 8001a0a:	b133      	cbz	r3, 8001a1a <HAL_JPEG_DataReadyCallback+0xc6>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a0c:	2102      	movs	r1, #2
 8001a0e:	4638      	mov	r0, r7
 8001a10:	f004 f800 	bl	8005a14 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
 8001a14:	2201      	movs	r2, #1
 8001a16:	4b19      	ldr	r3, [pc, #100]	@ (8001a7c <HAL_JPEG_DataReadyCallback+0x128>)
 8001a18:	601a      	str	r2, [r3, #0]
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001a1a:	211c      	movs	r1, #28
 8001a1c:	6823      	ldr	r3, [r4, #0]
 8001a1e:	68f2      	ldr	r2, [r6, #12]
 8001a20:	fb01 5303 	mla	r3, r1, r3, r5
 8001a24:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 8001a28:	4638      	mov	r0, r7
 8001a2a:	434a      	muls	r2, r1
 8001a2c:	6859      	ldr	r1, [r3, #4]
 8001a2e:	f004 f827 	bl	8005a80 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
 8001a32:	f8d8 3000 	ldr.w	r3, [r8]
 8001a36:	69b2      	ldr	r2, [r6, #24]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d80b      	bhi.n	8001a54 <HAL_JPEG_DataReadyCallback+0x100>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a3c:	221c      	movs	r2, #28
 8001a3e:	6823      	ldr	r3, [r4, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a40:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a42:	fb02 5503 	mla	r5, r2, r3, r5
 8001a46:	2301      	movs	r3, #1
            Jpeg_HWDecodingEnd = 1;
 8001a48:	4a0d      	ldr	r2, [pc, #52]	@ (8001a80 <HAL_JPEG_DataReadyCallback+0x12c>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a4a:	4638      	mov	r0, r7
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a4c:	76ab      	strb	r3, [r5, #26]
            Jpeg_HWDecodingEnd = 1;
 8001a4e:	6013      	str	r3, [r2, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a50:	f003 ffe0 	bl	8005a14 <HAL_JPEG_Pause>
     *
     * @return true if a DMA operation is currently in progress.
     */
    bool isDMARunning()
    {
        return isRunning;
 8001a54:	4b0b      	ldr	r3, [pc, #44]	@ (8001a84 <HAL_JPEG_DataReadyCallback+0x130>)
 8001a56:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
 8001a58:	7a1b      	ldrb	r3, [r3, #8]
 8001a5a:	b92b      	cbnz	r3, 8001a68 <HAL_JPEG_DataReadyCallback+0x114>
            SEM_POST(semDecodingDone);
 8001a5c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a88 <HAL_JPEG_DataReadyCallback+0x134>)
 8001a5e:	6818      	ldr	r0, [r3, #0]
    }
 8001a60:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            SEM_POST(semDecodingDone);
 8001a64:	f007 b8d4 	b.w	8008c10 <osSemaphoreRelease>
    }
 8001a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a6c:	20009f14 	.word	0x20009f14
 8001a70:	20000004 	.word	0x20000004
 8001a74:	200006bc 	.word	0x200006bc
 8001a78:	20009f0c 	.word	0x20009f0c
 8001a7c:	20009f20 	.word	0x20009f20
 8001a80:	20009f24 	.word	0x20009f24
 8001a84:	20009f18 	.word	0x20009f18
 8001a88:	20000704 	.word	0x20000704
 8001a8c:	20009f10 	.word	0x20009f10
 8001a90:	20009f34 	.word	0x20009f34

08001a94 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
 8001a94:	b672      	cpsid	i
     * @retval None
     */
    void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef* hjpeg)
    {
        __disable_irq();
        while (1)
 8001a96:	e7fe      	b.n	8001a96 <HAL_JPEG_ErrorCallback+0x2>

08001a98 <HAL_JPEG_DecodeCpltCallback>:
     * @param hjpeg: JPEG handle pointer
     * @retval None
     */
    void HAL_JPEG_DecodeCpltCallback(JPEG_HandleTypeDef* hjpeg)
    {
        Jpeg_HWDecodingEnd = 1;
 8001a98:	2201      	movs	r2, #1
 8001a9a:	4b01      	ldr	r3, [pc, #4]	@ (8001aa0 <HAL_JPEG_DecodeCpltCallback+0x8>)
 8001a9c:	601a      	str	r2, [r3, #0]
    }
 8001a9e:	4770      	bx	lr
 8001aa0:	20009f24 	.word	0x20009f24

08001aa4 <JPEG_OutputHandler>:
 * @brief  JPEG Ouput Data BackGround Postprocessing .
 * @param hjpeg: JPEG handle pointer
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
 8001aa4:	b538      	push	{r3, r4, r5, lr}
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aa6:	4d1c      	ldr	r5, [pc, #112]	@ (8001b18 <JPEG_OutputHandler+0x74>)
{
 8001aa8:	4604      	mov	r4, r0
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aaa:	682b      	ldr	r3, [r5, #0]
 8001aac:	b15b      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
 8001aae:	4b1b      	ldr	r3, [pc, #108]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	b143      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
    {
        /* Abort any ongoing operations */
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
 8001ab4:	f004 fbc6 	bl	8006244 <HAL_JPEG_GetState>
 8001ab8:	2804      	cmp	r0, #4
 8001aba:	d102      	bne.n	8001ac2 <JPEG_OutputHandler+0x1e>
        {
            HAL_JPEG_Abort(hjpeg);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f003 ffe2 	bl	8005a86 <HAL_JPEG_Abort>
        }
        return 1;
 8001ac2:	2001      	movs	r0, #1
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
}
 8001ac4:	bd38      	pop	{r3, r4, r5, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
 8001ac6:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <JPEG_OutputHandler+0x7c>)
 8001ac8:	6818      	ldr	r0, [r3, #0]
 8001aca:	7a03      	ldrb	r3, [r0, #8]
 8001acc:	b96b      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
 8001ace:	221c      	movs	r2, #28
 8001ad0:	4b14      	ldr	r3, [pc, #80]	@ (8001b24 <JPEG_OutputHandler+0x80>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4353      	muls	r3, r2
 8001ad6:	4a14      	ldr	r2, [pc, #80]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001ad8:	5cd3      	ldrb	r3, [r2, r3]
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d105      	bne.n	8001aea <JPEG_OutputHandler+0x46>
 8001ade:	4b0f      	ldr	r3, [pc, #60]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b913      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
        DMA2D_reference->start();
 8001ae4:	6803      	ldr	r3, [r0, #0]
 8001ae6:	691b      	ldr	r3, [r3, #16]
 8001ae8:	4798      	blx	r3
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001aea:	4a10      	ldr	r2, [pc, #64]	@ (8001b2c <JPEG_OutputHandler+0x88>)
 8001aec:	6813      	ldr	r3, [r2, #0]
 8001aee:	2b01      	cmp	r3, #1
 8001af0:	d106      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001af2:	211c      	movs	r1, #28
 8001af4:	4b0e      	ldr	r3, [pc, #56]	@ (8001b30 <JPEG_OutputHandler+0x8c>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	434b      	muls	r3, r1
 8001afa:	490b      	ldr	r1, [pc, #44]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001afc:	5ccb      	ldrb	r3, [r1, r3]
 8001afe:	b10b      	cbz	r3, 8001b04 <JPEG_OutputHandler+0x60>
    return 2;
 8001b00:	2002      	movs	r0, #2
 8001b02:	e7df      	b.n	8001ac4 <JPEG_OutputHandler+0x20>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001b04:	682b      	ldr	r3, [r5, #0]
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d1fa      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b0a:	2102      	movs	r1, #2
 8001b0c:	4620      	mov	r0, r4
        JPEG_output_is_paused = 0;
 8001b0e:	6013      	str	r3, [r2, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b10:	f004 fa44 	bl	8005f9c <HAL_JPEG_Resume>
 8001b14:	e7f4      	b.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001b16:	bf00      	nop
 8001b18:	20009f24 	.word	0x20009f24
 8001b1c:	200006fc 	.word	0x200006fc
 8001b20:	20009f18 	.word	0x20009f18
 8001b24:	20000700 	.word	0x20000700
 8001b28:	20000004 	.word	0x20000004
 8001b2c:	20009f20 	.word	0x20009f20
 8001b30:	20009f14 	.word	0x20009f14

08001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>:
{
 8001b34:	b570      	push	{r4, r5, r6, lr}
 8001b36:	4605      	mov	r5, r0
    if (length == 0)
 8001b38:	2a00      	cmp	r2, #0
 8001b3a:	d034      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
    if (outputBuffer) /* only decode if buffers are assigned. */
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d032      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001b40:	2402      	movs	r4, #2
 8001b42:	4819      	ldr	r0, [pc, #100]	@ (8001ba8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x74>)
 8001b44:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b46:	68ec      	ldr	r4, [r5, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001b48:	0726      	lsls	r6, r4, #28
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b4a:	f44f 66c8 	mov.w	r6, #1600	@ 0x640
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001b4e:	bf1c      	itt	ne
 8001b50:	f024 040f 	bicne.w	r4, r4, #15
 8001b54:	3410      	addne	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b56:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001b58:	0924      	lsrs	r4, r4, #4
 8001b5a:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b5c:	692c      	ldr	r4, [r5, #16]
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b5e:	6046      	str	r6, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b60:	f014 040f 	ands.w	r4, r4, #15
 8001b64:	bf18      	it	ne
 8001b66:	f1c4 0410 	rsbne	r4, r4, #16
 8001b6a:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
 8001b6c:	480f      	ldr	r0, [pc, #60]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b6e:	f7ff fe55 	bl	800181c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
 8001b72:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 8001b74:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x7c>)
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b76:	4d0d      	ldr	r5, [pc, #52]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b78:	4c0e      	ldr	r4, [pc, #56]	@ (8001bb4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x80>)
        DMA2D_reference = dma;
 8001b7a:	601a      	str	r2, [r3, #0]
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b7c:	4628      	mov	r0, r5
 8001b7e:	f7ff ff91 	bl	8001aa4 <JPEG_OutputHandler>
 8001b82:	6020      	str	r0, [r4, #0]
            if (JpegProcessing_End == 2)
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	2b02      	cmp	r3, #2
 8001b88:	d105      	bne.n	8001b96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x62>
                SEM_WAIT(semDecodingDone);
 8001b8a:	4b0b      	ldr	r3, [pc, #44]	@ (8001bb8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x84>)
 8001b8c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b90:	6818      	ldr	r0, [r3, #0]
 8001b92:	f007 f80f 	bl	8008bb4 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
 8001b96:	6823      	ldr	r3, [r4, #0]
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d1ef      	bne.n	8001b7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x48>
        Jpeg_HWDecodingEnd = 0;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	4a07      	ldr	r2, [pc, #28]	@ (8001bbc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x88>)
 8001ba0:	6013      	str	r3, [r2, #0]
        DMA2D_CopyBufferEnd = 0;
 8001ba2:	4a07      	ldr	r2, [pc, #28]	@ (8001bc0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x8c>)
 8001ba4:	6013      	str	r3, [r2, #0]
}
 8001ba6:	bd70      	pop	{r4, r5, r6, pc}
 8001ba8:	200006bc 	.word	0x200006bc
 8001bac:	20000464 	.word	0x20000464
 8001bb0:	20009f18 	.word	0x20009f18
 8001bb4:	20009f1c 	.word	0x20009f1c
 8001bb8:	20000704 	.word	0x20000704
 8001bbc:	20009f24 	.word	0x20009f24
 8001bc0:	200006fc 	.word	0x200006fc

08001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
{
 8001bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bc8:	4699      	mov	r9, r3
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bca:	6943      	ldr	r3, [r0, #20]
{
 8001bcc:	4604      	mov	r4, r0
 8001bce:	460f      	mov	r7, r1
 8001bd0:	4690      	mov	r8, r2
 8001bd2:	b085      	sub	sp, #20
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bd4:	b92b      	cbnz	r3, 8001be2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x1e>
 8001bd6:	21c2      	movs	r1, #194	@ 0xc2
 8001bd8:	4b28      	ldr	r3, [pc, #160]	@ (8001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb8>)
 8001bda:	4a29      	ldr	r2, [pc, #164]	@ (8001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>)
 8001bdc:	4829      	ldr	r0, [pc, #164]	@ (8001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>)
 8001bde:	f030 fc93 	bl	8032508 <__assert_func>
    readData(currentMovieOffset, 8);
 8001be2:	2208      	movs	r2, #8
 8001be4:	6981      	ldr	r1, [r0, #24]
 8001be6:	f7ff fc73 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bea:	69a6      	ldr	r6, [r4, #24]
 8001bec:	4620      	mov	r0, r4
 8001bee:	4631      	mov	r1, r6
 8001bf0:	f7ff fc5b 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf4:	1cb1      	adds	r1, r6, #2
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bf6:	4683      	mov	fp, r0
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	f7ff fc56 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001bfe:	1d31      	adds	r1, r6, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001c00:	4682      	mov	sl, r0
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c02:	4620      	mov	r0, r4
 8001c04:	f7ff fc36 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c08:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001c0a:	f106 0108 	add.w	r1, r6, #8
 8001c0e:	1842      	adds	r2, r0, r1
 8001c10:	429a      	cmp	r2, r3
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c12:	4605      	mov	r5, r0
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c14:	d226      	bcs.n	8001c64 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
 8001c16:	f243 0330 	movw	r3, #12336	@ 0x3030
 8001c1a:	459b      	cmp	fp, r3
 8001c1c:	d117      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c1e:	f246 3364 	movw	r3, #25444	@ 0x6364
 8001c22:	459a      	cmp	sl, r3
 8001c24:	d113      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c26:	b190      	cbz	r0, 8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c28:	4602      	mov	r2, r0
            currentMovieOffset += 8;
 8001c2a:	61a1      	str	r1, [r4, #24]
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f7ff fc4f 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c34:	4601      	mov	r1, r0
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c36:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8001c3a:	462a      	mov	r2, r5
 8001c3c:	463b      	mov	r3, r7
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f8cd 8000 	str.w	r8, [sp]
 8001c44:	f7ff ff76 	bl	8001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>
            frameNumber++;
 8001c48:	6963      	ldr	r3, [r4, #20]
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	6163      	str	r3, [r4, #20]
        currentMovieOffset += chunkSize;
 8001c4e:	69a3      	ldr	r3, [r4, #24]
 8001c50:	442b      	add	r3, r5
        if (chunkSize == 0) /* Empty frame - Skip */
 8001c52:	b905      	cbnz	r5, 8001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x92>
            currentMovieOffset += 8;
 8001c54:	3308      	adds	r3, #8
        if (currentMovieOffset == lastFrameEnd)
 8001c56:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c58:	3301      	adds	r3, #1
 8001c5a:	f023 0301 	bic.w	r3, r3, #1
        if (currentMovieOffset == lastFrameEnd)
 8001c5e:	4293      	cmp	r3, r2
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c60:	61a3      	str	r3, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
 8001c62:	d109      	bne.n	8001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb4>
        frameNumber = 1;
 8001c64:	2301      	movs	r3, #1
            isCurrentFrameLast = true;
 8001c66:	2001      	movs	r0, #1
        frameNumber = 1;
 8001c68:	6163      	str	r3, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
 8001c6a:	6a23      	ldr	r3, [r4, #32]
 8001c6c:	61a3      	str	r3, [r4, #24]
}
 8001c6e:	f080 0001 	eor.w	r0, r0, #1
 8001c72:	b005      	add	sp, #20
 8001c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        isCurrentFrameLast = false;
 8001c78:	2000      	movs	r0, #0
 8001c7a:	e7f8      	b.n	8001c6e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
 8001c7c:	08033a99 	.word	0x08033a99
 8001c80:	08033bb8 	.word	0x08033bb8
 8001c84:	080339db 	.word	0x080339db

08001c88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
 8001c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c8c:	4607      	mov	r7, r0
 8001c8e:	468b      	mov	fp, r1
 8001c90:	4691      	mov	r9, r2
    readData(currentMovieOffset, 8);
 8001c92:	6981      	ldr	r1, [r0, #24]
 8001c94:	2208      	movs	r2, #8
{
 8001c96:	4698      	mov	r8, r3
    readData(currentMovieOffset, 8);
 8001c98:	f7ff fc1a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001c9c:	69bc      	ldr	r4, [r7, #24]
 8001c9e:	4638      	mov	r0, r7
 8001ca0:	1d21      	adds	r1, r4, #4
 8001ca2:	f7ff fbe7 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001ca6:	f104 0108 	add.w	r1, r4, #8
 8001caa:	4602      	mov	r2, r0
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001cac:	4682      	mov	sl, r0
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cae:	4638      	mov	r0, r7
 8001cb0:	f7ff fc0e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cb4:	2302      	movs	r3, #2
 8001cb6:	4c34      	ldr	r4, [pc, #208]	@ (8001d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>)
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cb8:	68fa      	ldr	r2, [r7, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cba:	6123      	str	r3, [r4, #16]
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cbc:	4601      	mov	r1, r0
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001cbe:	0713      	lsls	r3, r2, #28
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cc0:	f44f 60c8 	mov.w	r0, #1600	@ 0x640
 8001cc4:	bf0e      	itee	eq
 8001cc6:	4613      	moveq	r3, r2
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001cc8:	f022 030f 	bicne.w	r3, r2, #15
 8001ccc:	3310      	addne	r3, #16
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cce:	6060      	str	r0, [r4, #4]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
 8001cd0:	f8bb 5006 	ldrh.w	r5, [fp, #6]
    JPEG_ConvertorParams.startY = area.y;
 8001cd4:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cd8:	6023      	str	r3, [r4, #0]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001cda:	091b      	lsrs	r3, r3, #4
 8001cdc:	60e3      	str	r3, [r4, #12]
 8001cde:	4405      	add	r5, r0
 8001ce0:	693b      	ldr	r3, [r7, #16]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001ce2:	b22d      	sxth	r5, r5
 8001ce4:	429d      	cmp	r5, r3
 8001ce6:	bf28      	it	cs
 8001ce8:	461d      	movcs	r5, r3
    JPEG_ConvertorParams.startX = area.x;
 8001cea:	f9bb 3000 	ldrsh.w	r3, [fp]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001cee:	61a5      	str	r5, [r4, #24]
 8001cf0:	462e      	mov	r6, r5
        return x + width;
 8001cf2:	f8bb 5004 	ldrh.w	r5, [fp, #4]
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001cf6:	ea4f 1c13 	mov.w	ip, r3, lsr #4
 8001cfa:	441d      	add	r5, r3
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001cfc:	b22d      	sxth	r5, r5
 8001cfe:	4295      	cmp	r5, r2
 8001d00:	bf28      	it	cs
 8001d02:	4615      	movcs	r5, r2
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d04:	f105 020f 	add.w	r2, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001d08:	6225      	str	r5, [r4, #32]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d0a:	0912      	lsrs	r2, r2, #4
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d0c:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.startY = area.y;
 8001d10:	6160      	str	r0, [r4, #20]
    JPEG_ConvertorParams.startX = area.x;
 8001d12:	61e3      	str	r3, [r4, #28]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d14:	62a2      	str	r2, [r4, #40]	@ 0x28
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d16:	bf18      	it	ne
 8001d18:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d1c:	eba2 020c 	sub.w	r2, r2, ip
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d20:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d24:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d28:	f000 000f 	and.w	r0, r0, #15
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d2c:	62e2      	str	r2, [r4, #44]	@ 0x2c
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d2e:	6323      	str	r3, [r4, #48]	@ 0x30
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d30:	6360      	str	r0, [r4, #52]	@ 0x34
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d32:	464b      	mov	r3, r9
 8001d34:	4652      	mov	r2, sl
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d36:	bf18      	it	ne
 8001d38:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d3c:	4813      	ldr	r0, [pc, #76]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d3e:	63a5      	str	r5, [r4, #56]	@ 0x38
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001d40:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d44:	63e6      	str	r6, [r4, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d46:	f7ff fd69 	bl	800181c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
 8001d4a:	4b11      	ldr	r3, [pc, #68]	@ (8001d90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x108>)
 8001d4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d4e:	4d0f      	ldr	r5, [pc, #60]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    DMA2D_reference = dma;
 8001d50:	601a      	str	r2, [r3, #0]
    FrameBufferWidth = framebuffer_width;
 8001d52:	4b10      	ldr	r3, [pc, #64]	@ (8001d94 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>)
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d54:	4c10      	ldr	r4, [pc, #64]	@ (8001d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x110>)
    FrameBufferWidth = framebuffer_width;
 8001d56:	f8c3 8000 	str.w	r8, [r3]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	f7ff fea2 	bl	8001aa4 <JPEG_OutputHandler>
 8001d60:	6020      	str	r0, [r4, #0]
        if (JpegProcessing_End == 2)
 8001d62:	6823      	ldr	r3, [r4, #0]
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	d105      	bne.n	8001d74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xec>
            SEM_WAIT(semDecodingDone);
 8001d68:	4b0c      	ldr	r3, [pc, #48]	@ (8001d9c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x114>)
 8001d6a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d6e:	6818      	ldr	r0, [r3, #0]
 8001d70:	f006 ff20 	bl	8008bb4 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
 8001d74:	6820      	ldr	r0, [r4, #0]
 8001d76:	2801      	cmp	r0, #1
 8001d78:	d1ef      	bne.n	8001d5a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xd2>
    Jpeg_HWDecodingEnd = 0;
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	4a08      	ldr	r2, [pc, #32]	@ (8001da0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x118>)
 8001d7e:	6013      	str	r3, [r2, #0]
    DMA2D_CopyBufferEnd = 0;
 8001d80:	4a08      	ldr	r2, [pc, #32]	@ (8001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11c>)
 8001d82:	6013      	str	r3, [r2, #0]
}
 8001d84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d88:	200006bc 	.word	0x200006bc
 8001d8c:	20000464 	.word	0x20000464
 8001d90:	20009f18 	.word	0x20009f18
 8001d94:	20009f0c 	.word	0x20009f0c
 8001d98:	20009f1c 	.word	0x20009f1c
 8001d9c:	20000704 	.word	0x20000704
 8001da0:	20009f24 	.word	0x20009f24
 8001da4:	200006fc 	.word	0x200006fc

08001da8 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001da8:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001daa:	f44f 75c0 	mov.w	r5, #384	@ 0x180
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dae:	f8df c08c 	ldr.w	ip, [pc, #140]	@ 8001e3c <DMA2D_CopyBuffer+0x94>
 8001db2:	6902      	ldr	r2, [r0, #16]
 8001db4:	f8dc e02c 	ldr.w	lr, [ip, #44]	@ 0x2c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001db8:	f8dc 1024 	ldr.w	r1, [ip, #36]	@ 0x24
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dbc:	ebae 0302 	sub.w	r3, lr, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
 8001dc0:	f8c0 e010 	str.w	lr, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dc4:	f04f 0e02 	mov.w	lr, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dc8:	440a      	add	r2, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dca:	f8dc 1010 	ldr.w	r1, [ip, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dce:	4355      	muls	r5, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd0:	434a      	muls	r2, r1
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dd2:	f8dc 4038 	ldr.w	r4, [ip, #56]	@ 0x38
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd6:	0111      	lsls	r1, r2, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dd8:	4a15      	ldr	r2, [pc, #84]	@ (8001e30 <DMA2D_CopyBuffer+0x88>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dda:	011f      	lsls	r7, r3, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ddc:	f8c2 e034 	str.w	lr, [r2, #52]	@ 0x34
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001de0:	ebc4 1303 	rsb	r3, r4, r3, lsl #4

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
 8001de4:	f890 e01a 	ldrb.w	lr, [r0, #26]
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
 8001de8:	f013 060f 	ands.w	r6, r3, #15
 8001dec:	bf18      	it	ne
 8001dee:	f1c6 0610 	rsbne	r6, r6, #16
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001df2:	041b      	lsls	r3, r3, #16
    if (job.LastJob)  /* Last line of frame */
 8001df4:	f1be 0f00 	cmp.w	lr, #0
 8001df8:	d016      	beq.n	8001e28 <DMA2D_CopyBuffer+0x80>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001dfa:	f8dc c03c 	ldr.w	ip, [ip, #60]	@ 0x3c
 8001dfe:	f1cc 0c10 	rsb	ip, ip, #16
 8001e02:	ea4c 0303 	orr.w	r3, ip, r3
    }
    else
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e06:	6453      	str	r3, [r2, #68]	@ 0x44
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e08:	6943      	ldr	r3, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e0a:	f504 7448 	add.w	r4, r4, #800	@ 0x320
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e0e:	440b      	add	r3, r1
 8001e10:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, scaledWidth);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e12:	4b08      	ldr	r3, [pc, #32]	@ (8001e34 <DMA2D_CopyBuffer+0x8c>)
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e14:	1be4      	subs	r4, r4, r7
 8001e16:	6414      	str	r4, [r2, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, scaledWidth);
 8001e18:	6116      	str	r6, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e1a:	61d3      	str	r3, [r2, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001e1c:	6843      	ldr	r3, [r0, #4]
 8001e1e:	442b      	add	r3, r5
 8001e20:	60d3      	str	r3, [r2, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001e22:	4b05      	ldr	r3, [pc, #20]	@ (8001e38 <DMA2D_CopyBuffer+0x90>)
 8001e24:	6013      	str	r3, [r2, #0]
}
 8001e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e28:	f043 0310 	orr.w	r3, r3, #16
 8001e2c:	e7eb      	b.n	8001e06 <DMA2D_CopyBuffer+0x5e>
 8001e2e:	bf00      	nop
 8001e30:	4002b000 	.word	0x4002b000
 8001e34:	ff09000b 	.word	0xff09000b
 8001e38:	00010201 	.word	0x00010201
 8001e3c:	200006bc 	.word	0x200006bc

08001e40 <DMA2D_CropBuffer>:
 * @brief  Configures external DMA2D job to copy and crop YCbCr data to an RGB cropping buffer
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e44:	6905      	ldr	r5, [r0, #16]
{
 8001e46:	4604      	mov	r4, r0
 8001e48:	4937      	ldr	r1, [pc, #220]	@ (8001f28 <DMA2D_CropBuffer+0xe8>)
 8001e4a:	b08b      	sub	sp, #44	@ 0x2c
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e4c:	2d00      	cmp	r5, #0
 8001e4e:	d166      	bne.n	8001f1e <DMA2D_CropBuffer+0xde>
 8001e50:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e52:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e54:	7e67      	ldrb	r7, [r4, #25]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e56:	3b01      	subs	r3, #1
 8001e58:	429d      	cmp	r5, r3
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e5a:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e5e:	7ea3      	ldrb	r3, [r4, #26]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e60:	bf14      	ite	ne
 8001e62:	f04f 0e00 	movne.w	lr, #0
 8001e66:	f8d1 e038 	ldreq.w	lr, [r1, #56]	@ 0x38
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e6a:	2f00      	cmp	r7, #0
 8001e6c:	bf14      	ite	ne
 8001e6e:	4640      	movne	r0, r8
 8001e70:	2000      	moveq	r0, #0
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d055      	beq.n	8001f22 <DMA2D_CropBuffer+0xe2>
 8001e76:	f8d1 c03c 	ldr.w	ip, [r1, #60]	@ 0x3c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001e7a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8001e7c:	f44f 76c0 	mov.w	r6, #384	@ 0x180
 8001e80:	eb05 0a03 	add.w	sl, r5, r3
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e84:	2332      	movs	r3, #50	@ 0x32
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e86:	f8d1 b010 	ldr.w	fp, [r1, #16]
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
                                   + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * MCU_HEIGHT_PIXELS;

    /* Update job and assert if more cropping is needed */
    job.MCU_drawn++;
 8001e8a:	3501      	adds	r5, #1
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e8c:	fb00 f90b 	mul.w	r9, r0, fp
 8001e90:	fb03 f309 	mul.w	r3, r3, r9
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
 8001e94:	fb02 f10b 	mul.w	r1, r2, fp
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e98:	fb0b 330a 	mla	r3, fp, sl, r3
    job.MCU_drawn++;
 8001e9c:	6125      	str	r5, [r4, #16]
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e9e:	eb01 1303 	add.w	r3, r1, r3, lsl #4
 8001ea2:	2500      	movs	r5, #0
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001ea4:	fb06 f60a 	mul.w	r6, r6, sl
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
 8001ea8:	eb01 1109 	add.w	r1, r1, r9, lsl #4
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
 8001eac:	f1b8 0f00 	cmp.w	r8, #0
 8001eb0:	d000      	beq.n	8001eb4 <DMA2D_CropBuffer+0x74>
 8001eb2:	b907      	cbnz	r7, 8001eb6 <DMA2D_CropBuffer+0x76>
    {
        job.DoCropping = false;
 8001eb4:	7625      	strb	r5, [r4, #24]
    }

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001eb6:	2701      	movs	r7, #1
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
 8001eb8:	f1c2 0210 	rsb	r2, r2, #16
 8001ebc:	eba2 020e 	sub.w	r2, r2, lr
 8001ec0:	f8ad 2018 	strh.w	r2, [sp, #24]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001ec4:	4a19      	ldr	r2, [pc, #100]	@ (8001f2c <DMA2D_CropBuffer+0xec>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ec6:	f1c0 0010 	rsb	r0, r0, #16
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001eca:	9207      	str	r2, [sp, #28]
    blitOp.dstLoopStride = 800;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ecc:	6962      	ldr	r2, [r4, #20]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ece:	eba0 000c 	sub.w	r0, r0, ip
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ed2:	441a      	add	r2, r3
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
 8001ed4:	4b16      	ldr	r3, [pc, #88]	@ (8001f30 <DMA2D_CropBuffer+0xf0>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ed6:	f8ad 001a 	strh.w	r0, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
 8001eda:	6818      	ldr	r0, [r3, #0]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
 8001edc:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
 8001ee0:	f88d 5022 	strb.w	r5, [sp, #34]	@ 0x22
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001ee4:	9701      	str	r7, [sp, #4]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001ee6:	4f13      	ldr	r7, [pc, #76]	@ (8001f34 <DMA2D_CropBuffer+0xf4>)
    DMA2D_reference->addToQueue(blitOp);
 8001ee8:	6803      	ldr	r3, [r0, #0]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001eea:	4439      	add	r1, r7
 8001eec:	9102      	str	r1, [sp, #8]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001eee:	9205      	str	r2, [sp, #20]
    DMA2D_reference->addToQueue(blitOp);
 8001ef0:	685b      	ldr	r3, [r3, #4]
        : color(0)
 8001ef2:	9504      	str	r5, [sp, #16]
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ef8:	2202      	movs	r2, #2
 8001efa:	4b0f      	ldr	r3, [pc, #60]	@ (8001f38 <DMA2D_CropBuffer+0xf8>)
 8001efc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
 8001efe:	f04f 1210 	mov.w	r2, #1048592	@ 0x100010
 8001f02:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, 0);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f04:	4a0d      	ldr	r2, [pc, #52]	@ (8001f3c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
 8001f06:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
 8001f08:	641d      	str	r5, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
 8001f0a:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f0c:	61da      	str	r2, [r3, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001f0e:	6862      	ldr	r2, [r4, #4]
 8001f10:	4432      	add	r2, r6
 8001f12:	60da      	str	r2, [r3, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001f14:	4a0a      	ldr	r2, [pc, #40]	@ (8001f40 <DMA2D_CropBuffer+0x100>)
 8001f16:	601a      	str	r2, [r3, #0]
}
 8001f18:	b00b      	add	sp, #44	@ 0x2c
 8001f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001f1e:	2200      	movs	r2, #0
 8001f20:	e797      	b.n	8001e52 <DMA2D_CropBuffer+0x12>
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001f22:	469c      	mov	ip, r3
 8001f24:	e7a9      	b.n	8001e7a <DMA2D_CropBuffer+0x3a>
 8001f26:	bf00      	nop
 8001f28:	200006bc 	.word	0x200006bc
 8001f2c:	03200010 	.word	0x03200010
 8001f30:	20009f18 	.word	0x20009f18
 8001f34:	2000070c 	.word	0x2000070c
 8001f38:	4002b000 	.word	0x4002b000
 8001f3c:	ff09000b 	.word	0xff09000b
 8001f40:	00010201 	.word	0x00010201

08001f44 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
 8001f44:	4b0d      	ldr	r3, [pc, #52]	@ (8001f7c <DMA2D_ExternalJobCompleted+0x38>)
 8001f46:	6902      	ldr	r2, [r0, #16]
 8001f48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d114      	bne.n	8001f78 <DMA2D_ExternalJobCompleted+0x34>
    {
        job.State = JPEG_BUFFER_EMPTY;
 8001f4e:	2200      	movs	r2, #0
        job.DataBufferSize = 0;
        job.DoCropping = false;
        job.FirstJob = false;

        JPEG_OUT_Read_BufferIndex++;
 8001f50:	4b0b      	ldr	r3, [pc, #44]	@ (8001f80 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
 8001f52:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
 8001f54:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
 8001f56:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
 8001f58:	3101      	adds	r1, #1
 8001f5a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f5c:	6819      	ldr	r1, [r3, #0]
        job.DoCropping = false;
 8001f5e:	8302      	strh	r2, [r0, #24]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f60:	2901      	cmp	r1, #1
        {
            JPEG_OUT_Read_BufferIndex = 0;
 8001f62:	bf88      	it	hi
 8001f64:	601a      	strhi	r2, [r3, #0]
        }

        /* Check if last line */
        if (job.LastJob)
 8001f66:	7e83      	ldrb	r3, [r0, #26]
 8001f68:	b113      	cbz	r3, 8001f70 <DMA2D_ExternalJobCompleted+0x2c>
        {
            DMA2D_CopyBufferEnd = 1;
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	4b05      	ldr	r3, [pc, #20]	@ (8001f84 <DMA2D_ExternalJobCompleted+0x40>)
 8001f6e:	601a      	str	r2, [r3, #0]
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
 8001f70:	4b05      	ldr	r3, [pc, #20]	@ (8001f88 <DMA2D_ExternalJobCompleted+0x44>)
 8001f72:	6818      	ldr	r0, [r3, #0]
 8001f74:	f006 be4c 	b.w	8008c10 <osSemaphoreRelease>
    }
}
 8001f78:	4770      	bx	lr
 8001f7a:	bf00      	nop
 8001f7c:	200006bc 	.word	0x200006bc
 8001f80:	20000700 	.word	0x20000700
 8001f84:	200006fc 	.word	0x200006fc
 8001f88:	20000704 	.word	0x20000704

08001f8c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f8c:	2101      	movs	r1, #1
{
 8001f8e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f90:	2200      	movs	r2, #0
 8001f92:	4608      	mov	r0, r1
 8001f94:	f006 fdbf 	bl	8008b16 <osSemaphoreNew>
 8001f98:	4b0a      	ldr	r3, [pc, #40]	@ (8001fc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001f9a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001f9c:	b928      	cbnz	r0, 8001faa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001f9e:	2128      	movs	r1, #40	@ 0x28
 8001fa0:	4b09      	ldr	r3, [pc, #36]	@ (8001fc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fa4:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001fa6:	f030 faaf 	bl	8032508 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2104      	movs	r1, #4
 8001fae:	2001      	movs	r0, #1
 8001fb0:	f006 fe56 	bl	8008c60 <osMessageQueueNew>
 8001fb4:	4b07      	ldr	r3, [pc, #28]	@ (8001fd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001fb6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fb8:	b918      	cbnz	r0, 8001fc2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001fba:	212c      	movs	r1, #44	@ 0x2c
 8001fbc:	4b06      	ldr	r3, [pc, #24]	@ (8001fd8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001fbe:	4a03      	ldr	r2, [pc, #12]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001fc0:	e7f0      	b.n	8001fa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001fc2:	bd08      	pop	{r3, pc}
 8001fc4:	20009f3c 	.word	0x20009f3c
 8001fc8:	08033c58 	.word	0x08033c58
 8001fcc:	08033ca1 	.word	0x08033ca1
 8001fd0:	08033cd0 	.word	0x08033cd0
 8001fd4:	20009f38 	.word	0x20009f38
 8001fd8:	08033d2f 	.word	0x08033d2f

08001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001fdc:	4b02      	ldr	r3, [pc, #8]	@ (8001fe8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001fde:	f04f 31ff 	mov.w	r1, #4294967295
 8001fe2:	6818      	ldr	r0, [r3, #0]
 8001fe4:	f006 bde6 	b.w	8008bb4 <osSemaphoreAcquire>
 8001fe8:	20009f3c 	.word	0x20009f3c

08001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001fec:	4b01      	ldr	r3, [pc, #4]	@ (8001ff4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001fee:	6818      	ldr	r0, [r3, #0]
 8001ff0:	f006 be0e 	b.w	8008c10 <osSemaphoreRelease>
 8001ff4:	20009f3c 	.word	0x20009f3c

08001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001ff8:	4b02      	ldr	r3, [pc, #8]	@ (8002004 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	6818      	ldr	r0, [r3, #0]
 8001ffe:	f006 bdd9 	b.w	8008bb4 <osSemaphoreAcquire>
 8002002:	bf00      	nop
 8002004:	20009f3c 	.word	0x20009f3c

08002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8002008:	f7ff bff0 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800200c:	2300      	movs	r3, #0
 800200e:	4803      	ldr	r0, [pc, #12]	@ (800201c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002010:	461a      	mov	r2, r3
 8002012:	4903      	ldr	r1, [pc, #12]	@ (8002020 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002014:	6800      	ldr	r0, [r0, #0]
 8002016:	f006 be62 	b.w	8008cde <osMessageQueuePut>
 800201a:	bf00      	nop
 800201c:	20009f38 	.word	0x20009f38
 8002020:	2000003c 	.word	0x2000003c

08002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 */
void OSWrappers::waitForVSync()
{
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002024:	2300      	movs	r3, #0
{
 8002026:	b513      	push	{r0, r1, r4, lr}
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002028:	4c07      	ldr	r4, [pc, #28]	@ (8002048 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800202a:	461a      	mov	r2, r3
 800202c:	a901      	add	r1, sp, #4
 800202e:	6820      	ldr	r0, [r4, #0]
 8002030:	f006 fe89 	bl	8008d46 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002034:	f04f 33ff 	mov.w	r3, #4294967295
 8002038:	2200      	movs	r2, #0
 800203a:	6820      	ldr	r0, [r4, #0]
 800203c:	a901      	add	r1, sp, #4
 800203e:	f006 fe82 	bl	8008d46 <osMessageQueueGet>
}
 8002042:	b002      	add	sp, #8
 8002044:	bd10      	pop	{r4, pc}
 8002046:	bf00      	nop
 8002048:	20009f38 	.word	0x20009f38

0800204c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
 800204c:	6803      	ldr	r3, [r0, #0]
 800204e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002050:	4718      	bx	r3

08002052 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8002052:	2001      	movs	r0, #1
 8002054:	4770      	bx	lr

08002056 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8002056:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800205a:	4770      	bx	lr

0800205c <_ZN8STM32DMAD1Ev>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
STM32DMA::~STM32DMA()
 8002060:	4b04      	ldr	r3, [pc, #16]	@ (8002074 <_ZN8STM32DMAD1Ev+0x18>)
 8002062:	6003      	str	r3, [r0, #0]
 8002064:	4b04      	ldr	r3, [pc, #16]	@ (8002078 <_ZN8STM32DMAD1Ev+0x1c>)
 8002066:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 800206a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800206e:	f3bf 8f6f 	isb	sy
}
 8002072:	4770      	bx	lr
 8002074:	08033ee0 	.word	0x08033ee0
 8002078:	e000e100 	.word	0xe000e100

0800207c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
}
 8002080:	f640 51a4 	movw	r1, #3492	@ 0xda4
 8002084:	f7ff ffea 	bl	800205c <_ZN8STM32DMAD1Ev>
 8002088:	4620      	mov	r0, r4
 800208a:	f02f f864 	bl	8031156 <_ZdlPvj>
 800208e:	4620      	mov	r0, r4
 8002090:	bd10      	pop	{r4, pc}
	...

08002094 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002094:	4b0f      	ldr	r3, [pc, #60]	@ (80020d4 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8002096:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002098:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800209c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020a0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80020a4:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80020a8:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80020ac:	9201      	str	r2, [sp, #4]
 80020ae:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80020b0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020b2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020b6:	661a      	str	r2, [r3, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80020b8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020ba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80020be:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80020c0:	4b05      	ldr	r3, [pc, #20]	@ (80020d8 <_ZN8STM32DMA10initializeEv+0x44>)
 80020c2:	4a06      	ldr	r2, [pc, #24]	@ (80020dc <_ZN8STM32DMA10initializeEv+0x48>)
 80020c4:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020c6:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80020ca:	4b05      	ldr	r3, [pc, #20]	@ (80020e0 <_ZN8STM32DMA10initializeEv+0x4c>)
 80020cc:	60da      	str	r2, [r3, #12]
}
 80020ce:	b002      	add	sp, #8
 80020d0:	4770      	bx	lr
 80020d2:	bf00      	nop
 80020d4:	46020c00 	.word	0x46020c00
 80020d8:	2000057c 	.word	0x2000057c
 80020dc:	08002331 	.word	0x08002331
 80020e0:	e000e100 	.word	0xe000e100

080020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80020e4:	b508      	push	{r3, lr}
    switch (format)
 80020e6:	280a      	cmp	r0, #10
 80020e8:	d809      	bhi.n	80020fe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80020ea:	e8df f000 	tbb	[pc, r0]
 80020ee:	1006      	.short	0x1006
 80020f0:	0808080e 	.word	0x0808080e
 80020f4:	10101008 	.word	0x10101008
 80020f8:	10          	.byte	0x10
 80020f9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80020fa:	2002      	movs	r0, #2
}
 80020fc:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80020fe:	2187      	movs	r1, #135	@ 0x87
 8002100:	4b04      	ldr	r3, [pc, #16]	@ (8002114 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8002102:	4a05      	ldr	r2, [pc, #20]	@ (8002118 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8002104:	4805      	ldr	r0, [pc, #20]	@ (800211c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8002106:	f030 f9ff 	bl	8032508 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800210a:	2000      	movs	r0, #0
 800210c:	e7f6      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800210e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8002110:	e7f4      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8002112:	bf00      	nop
 8002114:	08033d71 	.word	0x08033d71
 8002118:	08033d8c 	.word	0x08033d8c
 800211c:	08033dd7 	.word	0x08033dd7

08002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8002120:	b538      	push	{r3, r4, r5, lr}
 8002122:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002124:	7f88      	ldrb	r0, [r1, #30]
 8002126:	f7ff ffdd 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800212a:	8aa5      	ldrh	r5, [r4, #20]
 800212c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800212e:	4b16      	ldr	r3, [pc, #88]	@ (8002188 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002130:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002134:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002136:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002138:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213a:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800213c:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213e:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002140:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002142:	6825      	ldr	r5, [r4, #0]
 8002144:	2d08      	cmp	r5, #8
 8002146:	d10e      	bne.n	8002166 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002148:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800214a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800214c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800214e:	7f20      	ldrb	r0, [r4, #28]
 8002150:	4a0e      	ldr	r2, [pc, #56]	@ (800218c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8002152:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002156:	61da      	str	r2, [r3, #28]
        return color;
 8002158:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800215a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800215c:	4a0c      	ldr	r2, [pc, #48]	@ (8002190 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800215e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002160:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002162:	601a      	str	r2, [r3, #0]
    }
}
 8002164:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002166:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002168:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800216a:	611a      	str	r2, [r3, #16]
 800216c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800216e:	0a0a      	lsrs	r2, r1, #8
 8002170:	0948      	lsrs	r0, r1, #5
 8002172:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8002176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800217a:	4302      	orrs	r2, r0
 800217c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8002180:	430a      	orrs	r2, r1
 8002182:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002184:	4a03      	ldr	r2, [pc, #12]	@ (8002194 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002186:	e7ec      	b.n	8002162 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002188:	4002b000 	.word	0x4002b000
 800218c:	00010009 	.word	0x00010009
 8002190:	00020201 	.word	0x00020201
 8002194:	00030201 	.word	0x00030201

08002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002198:	b508      	push	{r3, lr}
    switch (format)
 800219a:	280b      	cmp	r0, #11
 800219c:	d80b      	bhi.n	80021b6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800219e:	e8df f000 	tbb	[pc, r0]
 80021a2:	1206      	.short	0x1206
 80021a4:	0a0a0a10 	.word	0x0a0a0a10
 80021a8:	0808080a 	.word	0x0808080a
 80021ac:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80021ae:	2002      	movs	r0, #2
}
 80021b0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80021b2:	2005      	movs	r0, #5
        break;
 80021b4:	e7fc      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80021b6:	2166      	movs	r1, #102	@ 0x66
 80021b8:	4b04      	ldr	r3, [pc, #16]	@ (80021cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80021ba:	4a05      	ldr	r2, [pc, #20]	@ (80021d0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80021bc:	4805      	ldr	r0, [pc, #20]	@ (80021d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80021be:	f030 f9a3 	bl	8032508 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80021c2:	2000      	movs	r0, #0
 80021c4:	e7f4      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80021c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80021c8:	e7f2      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80021ca:	bf00      	nop
 80021cc:	08033d71 	.word	0x08033d71
 80021d0:	08033e34 	.word	0x08033e34
 80021d4:	08033dd7 	.word	0x08033dd7

080021d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80021d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021dc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80021e0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021e2:	4640      	mov	r0, r8
 80021e4:	f7ff ffd8 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021e8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021ea:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021ec:	4638      	mov	r0, r7
 80021ee:	f7ff ffd3 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80021f2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021f4:	4638      	mov	r0, r7
 80021f6:	f7ff ff75 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021fa:	8aa1      	ldrh	r1, [r4, #20]
 80021fc:	8b62      	ldrh	r2, [r4, #26]
 80021fe:	4b44      	ldr	r3, [pc, #272]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002200:	1a52      	subs	r2, r2, r1
 8002202:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002204:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8002206:	8b22      	ldrh	r2, [r4, #24]
 8002208:	1a52      	subs	r2, r2, r1
 800220a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800220c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800220e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002210:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002214:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002216:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8002218:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800221a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800221c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800221e:	6820      	ldr	r0, [r4, #0]
 8002220:	2880      	cmp	r0, #128	@ 0x80
 8002222:	d028      	beq.n	8002276 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8002224:	7f22      	ldrb	r2, [r4, #28]
 8002226:	d80f      	bhi.n	8002248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8002228:	2820      	cmp	r0, #32
 800222a:	d067      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800222c:	2840      	cmp	r0, #64	@ 0x40
 800222e:	d065      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8002230:	2804      	cmp	r0, #4
 8002232:	d01a      	beq.n	800226a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002234:	4b36      	ldr	r3, [pc, #216]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002236:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800223a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800223e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002240:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8002242:	d061      	beq.n	8002308 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8002244:	4a33      	ldr	r2, [pc, #204]	@ (8002314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8002246:	e044      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8002248:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800224c:	d004      	beq.n	8002258 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800224e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8002252:	d1ef      	bne.n	8002234 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002254:	4830      	ldr	r0, [pc, #192]	@ (8002318 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002256:	e000      	b.n	800225a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002258:	4830      	ldr	r0, [pc, #192]	@ (800231c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800225a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800225e:	61da      	str	r2, [r3, #28]
 8002260:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002262:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002264:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002266:	6159      	str	r1, [r3, #20]
 8002268:	e032      	b.n	80022d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800226a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800226e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002272:	61da      	str	r2, [r3, #28]
 8002274:	e7f6      	b.n	8002264 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002276:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002278:	1d02      	adds	r2, r0, #4
 800227a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800227c:	7f22      	ldrb	r2, [r4, #28]
 800227e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8002282:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8002286:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002288:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800228a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800228c:	7801      	ldrb	r1, [r0, #0]
 800228e:	b141      	cbz	r1, 80022a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8002290:	2901      	cmp	r1, #1
 8002292:	d021      	beq.n	80022d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8002294:	f240 1111 	movw	r1, #273	@ 0x111
 8002298:	4b21      	ldr	r3, [pc, #132]	@ (8002320 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800229a:	4a22      	ldr	r2, [pc, #136]	@ (8002324 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800229c:	4822      	ldr	r0, [pc, #136]	@ (8002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800229e:	f030 f933 	bl	8032508 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022a2:	69da      	ldr	r2, [r3, #28]
 80022a4:	8841      	ldrh	r1, [r0, #2]
 80022a6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022aa:	3901      	subs	r1, #1
 80022ac:	f022 0210 	bic.w	r2, r2, #16
 80022b0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 80022b4:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022b6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80022b8:	4b15      	ldr	r3, [pc, #84]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80022ba:	69da      	ldr	r2, [r3, #28]
 80022bc:	f042 0220 	orr.w	r2, r2, #32
 80022c0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80022c2:	69da      	ldr	r2, [r3, #28]
 80022c4:	0692      	lsls	r2, r2, #26
 80022c6:	d4fc      	bmi.n	80022c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80022c8:	2210      	movs	r2, #16
 80022ca:	609a      	str	r2, [r3, #8]
            if (blend)
 80022cc:	2900      	cmp	r1, #0
 80022ce:	d0b9      	beq.n	8002244 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80022d0:	4a16      	ldr	r2, [pc, #88]	@ (800232c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80022d2:	601a      	str	r2, [r3, #0]
}
 80022d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80022d8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022dc:	69da      	ldr	r2, [r3, #28]
 80022de:	8840      	ldrh	r0, [r0, #2]
 80022e0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022e4:	f100 30ff 	add.w	r0, r0, #4294967295
 80022e8:	f022 0210 	bic.w	r2, r2, #16
 80022ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80022f0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80022f4:	bf18      	it	ne
 80022f6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022f8:	61da      	str	r2, [r3, #28]
                break;
 80022fa:	e7dd      	b.n	80022b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80022fc:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8002300:	4b03      	ldr	r3, [pc, #12]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002302:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8002306:	e7b4      	b.n	8002272 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002308:	f240 2201 	movw	r2, #513	@ 0x201
 800230c:	e7e1      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800230e:	bf00      	nop
 8002310:	4002b000 	.word	0x4002b000
 8002314:	00010201 	.word	0x00010201
 8002318:	00020009 	.word	0x00020009
 800231c:	0002000a 	.word	0x0002000a
 8002320:	08033e7e 	.word	0x08033e7e
 8002324:	08033e98 	.word	0x08033e98
 8002328:	08033dd7 	.word	0x08033dd7
 800232c:	00020201 	.word	0x00020201

08002330 <DMA2D_XferCpltCallback>:
 8002330:	4b02      	ldr	r3, [pc, #8]	@ (800233c <DMA2D_XferCpltCallback+0xc>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	695b      	ldr	r3, [r3, #20]
 800233a:	4718      	bx	r3
 800233c:	20082f08 	.word	0x20082f08

08002340 <_ZN8STM32DMA18externalJobExecuteEv>:
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
 8002340:	2301      	movs	r3, #1
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002342:	221c      	movs	r2, #28
 8002344:	4908      	ldr	r1, [pc, #32]	@ (8002368 <_ZN8STM32DMA18externalJobExecuteEv+0x28>)
        isRunning = true;
 8002346:	7203      	strb	r3, [r0, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002348:	6808      	ldr	r0, [r1, #0]
 800234a:	4b08      	ldr	r3, [pc, #32]	@ (800236c <_ZN8STM32DMA18externalJobExecuteEv+0x2c>)
 800234c:	fb02 3000 	mla	r0, r2, r0, r3
 8002350:	7e00      	ldrb	r0, [r0, #24]
 8002352:	b120      	cbz	r0, 800235e <_ZN8STM32DMA18externalJobExecuteEv+0x1e>
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 8002354:	6808      	ldr	r0, [r1, #0]
 8002356:	fb02 3000 	mla	r0, r2, r0, r3
 800235a:	f7ff bd71 	b.w	8001e40 <DMA2D_CropBuffer>
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 800235e:	6808      	ldr	r0, [r1, #0]
 8002360:	fb02 3000 	mla	r0, r2, r0, r3
 8002364:	f7ff bd20 	b.w	8001da8 <DMA2D_CopyBuffer>
 8002368:	20000700 	.word	0x20000700
 800236c:	20000004 	.word	0x20000004

08002370 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
 8002370:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
 8002374:	b510      	push	{r4, lr}
 8002376:	4604      	mov	r4, r0
        if (!started_by_external_job)
 8002378:	b9ab      	cbnz	r3, 80023a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x36>
            executeCompleted();
 800237a:	6803      	ldr	r3, [r0, #0]
 800237c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800237e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
 8002380:	221c      	movs	r2, #28
 8002382:	4b17      	ldr	r3, [pc, #92]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4353      	muls	r3, r2
 8002388:	4a16      	ldr	r2, [pc, #88]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 800238a:	5cd3      	ldrb	r3, [r2, r3]
 800238c:	2b01      	cmp	r3, #1
 800238e:	d109      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002390:	4a15      	ldr	r2, [pc, #84]	@ (80023e8 <_ZN8STM32DMA18signalDMAInterruptEv+0x78>)
 8002392:	6812      	ldr	r2, [r2, #0]
 8002394:	b932      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002396:	7a22      	ldrb	r2, [r4, #8]
 8002398:	b922      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                externalJobExecute();
 800239a:	4620      	mov	r0, r4
                started_by_external_job = true;
 800239c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                externalJobExecute();
 80023a0:	f7ff ffce 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 80023a4:	bd10      	pop	{r4, pc}
        if (isRunning)
 80023a6:	7a03      	ldrb	r3, [r0, #8]
 80023a8:	b14b      	cbz	r3, 80023be <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            isRunning = false;
 80023aa:	2300      	movs	r3, #0
 80023ac:	7203      	strb	r3, [r0, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 80023ae:	201c      	movs	r0, #28
 80023b0:	4b0b      	ldr	r3, [pc, #44]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 80023b2:	681a      	ldr	r2, [r3, #0]
 80023b4:	4b0b      	ldr	r3, [pc, #44]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 80023b6:	fb00 3002 	mla	r0, r0, r2, r3
 80023ba:	f7ff fdc3 	bl	8001f44 <DMA2D_ExternalJobCompleted>
            if (!queue.isEmpty() && isAllowed)
 80023be:	6860      	ldr	r0, [r4, #4]
 80023c0:	6803      	ldr	r3, [r0, #0]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4798      	blx	r3
 80023c6:	2800      	cmp	r0, #0
 80023c8:	d1ec      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 80023ca:	7a63      	ldrb	r3, [r4, #9]
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d0e9      	beq.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                execute();
 80023d0:	6823      	ldr	r3, [r4, #0]
                started_by_external_job = false;
 80023d2:	f884 0da0 	strb.w	r0, [r4, #3488]	@ 0xda0
                execute();
 80023d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023d8:	4620      	mov	r0, r4
    }
 80023da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 80023de:	4718      	bx	r3
 80023e0:	20000700 	.word	0x20000700
 80023e4:	20000004 	.word	0x20000004
 80023e8:	200006fc 	.word	0x200006fc

080023ec <_ZN8STM32DMA5startEv>:
    virtual void start()
 80023ec:	b510      	push	{r4, lr}
 80023ee:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
 80023f0:	6840      	ldr	r0, [r0, #4]
 80023f2:	6803      	ldr	r3, [r0, #0]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4798      	blx	r3
 80023f8:	b958      	cbnz	r0, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fa:	7a63      	ldrb	r3, [r4, #9]
 80023fc:	b14b      	cbz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fe:	7a23      	ldrb	r3, [r4, #8]
 8002400:	b93b      	cbnz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
                started_by_external_job = false;
 8002402:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4620      	mov	r0, r4
    }
 800240a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 800240e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002410:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
 8002412:	221c      	movs	r2, #28
 8002414:	4b07      	ldr	r3, [pc, #28]	@ (8002434 <_ZN8STM32DMA5startEv+0x48>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	4353      	muls	r3, r2
 800241a:	4a07      	ldr	r2, [pc, #28]	@ (8002438 <_ZN8STM32DMA5startEv+0x4c>)
 800241c:	5cd3      	ldrb	r3, [r2, r3]
 800241e:	2b01      	cmp	r3, #1
 8002420:	d106      	bne.n	8002430 <_ZN8STM32DMA5startEv+0x44>
 8002422:	7a22      	ldrb	r2, [r4, #8]
 8002424:	b922      	cbnz	r2, 8002430 <_ZN8STM32DMA5startEv+0x44>
            externalJobExecute();
 8002426:	4620      	mov	r0, r4
            started_by_external_job = true;
 8002428:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            externalJobExecute();
 800242c:	f7ff ff88 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 8002430:	bd10      	pop	{r4, pc}
 8002432:	bf00      	nop
 8002434:	20000700 	.word	0x20000700
 8002438:	20000004 	.word	0x20000004

0800243c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800243c:	b570      	push	{r4, r5, r6, lr}
 800243e:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002440:	2600      	movs	r6, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002442:	4625      	mov	r5, r4
 8002444:	4b0a      	ldr	r3, [pc, #40]	@ (8002470 <_ZN8STM32DMAC1Ev+0x34>)
 8002446:	300c      	adds	r0, #12
 8002448:	6060      	str	r0, [r4, #4]
 800244a:	7226      	strb	r6, [r4, #8]
 800244c:	7266      	strb	r6, [r4, #9]
 800244e:	f845 3b20 	str.w	r3, [r5], #32
 8002452:	2260      	movs	r2, #96	@ 0x60
 8002454:	4629      	mov	r1, r5
 8002456:	f009 fc31 	bl	800bcbc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800245a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 800245e:	60ee      	str	r6, [r5, #12]
 8002460:	3524      	adds	r5, #36	@ 0x24
 8002462:	429d      	cmp	r5, r3
 8002464:	d1fb      	bne.n	800245e <_ZN8STM32DMAC1Ev+0x22>
}
 8002466:	4620      	mov	r0, r4
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002468:	f884 6da0 	strb.w	r6, [r4, #3488]	@ 0xda0
}
 800246c:	bd70      	pop	{r4, r5, r6, pc}
 800246e:	bf00      	nop
 8002470:	08033ee0 	.word	0x08033ee0

08002474 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002474:	2001      	movs	r0, #1
 8002476:	4770      	bx	lr

08002478 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002478:	200c      	movs	r0, #12
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800247c:	230c      	movs	r3, #12
 800247e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002482:	3008      	adds	r0, #8
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002486:	230c      	movs	r3, #12
 8002488:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800248c:	3008      	adds	r0, #8
 800248e:	4770      	bx	lr

08002490 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002490:	2001      	movs	r0, #1
 8002492:	4770      	bx	lr

08002494 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002494:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8002498:	4770      	bx	lr

0800249a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800249a:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 800249e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024a2:	3008      	adds	r0, #8
 80024a4:	4770      	bx	lr

080024a6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024a6:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 80024aa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024ae:	3008      	adds	r0, #8
 80024b0:	4770      	bx	lr

080024b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80024b2:	2001      	movs	r0, #1
 80024b4:	4770      	bx	lr

080024b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80024b6:	2010      	movs	r0, #16
 80024b8:	4770      	bx	lr

080024ba <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024ba:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024be:	3008      	adds	r0, #8
 80024c0:	4770      	bx	lr

080024c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024c2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024c6:	3008      	adds	r0, #8
 80024c8:	4770      	bx	lr

080024ca <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoGameScreen1ScreenNoTransition();
 80024ca:	4608      	mov	r0, r1
 80024cc:	f000 be82 	b.w	80031d4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>

080024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80024d0:	b510      	push	{r4, lr}
 80024d2:	4604      	mov	r4, r0
 80024d4:	4b02      	ldr	r3, [pc, #8]	@ (80024e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024d6:	6003      	str	r3, [r0, #0]
 80024d8:	f008 fa3b 	bl	800a952 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80024dc:	4620      	mov	r0, r4
 80024de:	bd10      	pop	{r4, pc}
 80024e0:	08033f98 	.word	0x08033f98

080024e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80024e4:	b510      	push	{r4, lr}
 80024e6:	4604      	mov	r4, r0
 80024e8:	f7ff fff2 	bl	80024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024ec:	4620      	mov	r0, r4
 80024ee:	2114      	movs	r1, #20
 80024f0:	f02e fe31 	bl	8031156 <_ZdlPvj>
 80024f4:	4620      	mov	r0, r4
 80024f6:	bd10      	pop	{r4, pc}

080024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80024f8:	b510      	push	{r4, lr}
 80024fa:	4604      	mov	r4, r0
 80024fc:	4b02      	ldr	r3, [pc, #8]	@ (8002508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024fe:	6003      	str	r3, [r0, #0]
 8002500:	f008 fa27 	bl	800a952 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002504:	4620      	mov	r0, r4
 8002506:	bd10      	pop	{r4, pc}
 8002508:	08033f64 	.word	0x08033f64

0800250c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800250c:	b510      	push	{r4, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	f7ff fff2 	bl	80024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002514:	4620      	mov	r0, r4
 8002516:	f44f 719a 	mov.w	r1, #308	@ 0x134
 800251a:	f02e fe1c 	bl	8031156 <_ZdlPvj>
 800251e:	4620      	mov	r0, r4
 8002520:	bd10      	pop	{r4, pc}
	...

08002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002524:	b510      	push	{r4, lr}
 8002526:	4604      	mov	r4, r0
 8002528:	4b02      	ldr	r3, [pc, #8]	@ (8002534 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800252a:	6003      	str	r3, [r0, #0]
 800252c:	f008 fa11 	bl	800a952 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002530:	4620      	mov	r0, r4
 8002532:	bd10      	pop	{r4, pc}
 8002534:	08033f30 	.word	0x08033f30

08002538 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002538:	b510      	push	{r4, lr}
 800253a:	4604      	mov	r4, r0
 800253c:	f7ff fff2 	bl	8002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002540:	4620      	mov	r0, r4
 8002542:	2118      	movs	r1, #24
 8002544:	f02e fe07 	bl	8031156 <_ZdlPvj>
 8002548:	4620      	mov	r0, r4
 800254a:	bd10      	pop	{r4, pc}

0800254c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800254c:	b510      	push	{r4, lr}
 800254e:	4604      	mov	r4, r0
 8002550:	4b07      	ldr	r3, [pc, #28]	@ (8002570 <_ZN12FrontendHeapD1Ev+0x24>)
 8002552:	6003      	str	r3, [r0, #0]
 8002554:	f500 70b0 	add.w	r0, r0, #352	@ 0x160
 8002558:	f7ff ffba 	bl	80024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800255c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8002560:	f7ff ffca 	bl	80024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002564:	f104 0014 	add.w	r0, r4, #20
 8002568:	f7ff ffdc 	bl	8002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800256c:	4620      	mov	r0, r4
 800256e:	bd10      	pop	{r4, pc}
 8002570:	08033fcc 	.word	0x08033fcc

08002574 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002574:	b508      	push	{r3, lr}
 8002576:	4802      	ldr	r0, [pc, #8]	@ (8002580 <__tcf_0+0xc>)
 8002578:	f7ff ffe8 	bl	800254c <_ZN12FrontendHeapD1Ev>
 800257c:	bd08      	pop	{r3, pc}
 800257e:	bf00      	nop
 8002580:	2000b610 	.word	0x2000b610

08002584 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002584:	b510      	push	{r4, lr}
 8002586:	4604      	mov	r4, r0
 8002588:	f7ff ffe0 	bl	800254c <_ZN12FrontendHeapD1Ev>
 800258c:	4620      	mov	r0, r4
 800258e:	f44f 7135 	mov.w	r1, #724	@ 0x2d4
 8002592:	f02e fde0 	bl	8031156 <_ZdlPvj>
 8002596:	4620      	mov	r0, r4
 8002598:	bd10      	pop	{r4, pc}
	...

0800259c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 800259c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80025a0:	f000 fcb4 	bl	8002f0c <_ZN14BitmapDatabase11getInstanceEv>
 80025a4:	2400      	movs	r4, #0
 80025a6:	4605      	mov	r5, r0
 80025a8:	f000 fcb4 	bl	8002f14 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80025ac:	4623      	mov	r3, r4
 80025ae:	4601      	mov	r1, r0
 80025b0:	4622      	mov	r2, r4
 80025b2:	4628      	mov	r0, r5
 80025b4:	9400      	str	r4, [sp, #0]
 80025b6:	f00d fcf1 	bl	800ff9c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);

    display.setFrameBufferFormat(Bitmap::RGB565);
 80025ba:	4d28      	ldr	r5, [pc, #160]	@ (800265c <touchgfx_init+0xc0>)
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80025bc:	4a28      	ldr	r2, [pc, #160]	@ (8002660 <touchgfx_init+0xc4>)
 80025be:	4b29      	ldr	r3, [pc, #164]	@ (8002664 <touchgfx_init+0xc8>)
    Texts::setLanguage(0);
 80025c0:	4620      	mov	r0, r4
 80025c2:	601a      	str	r2, [r3, #0]
 80025c4:	f001 f8a2 	bl	800370c <_ZN8touchgfx5Texts11setLanguageEt>
    display.setFrameBufferFormat(Bitmap::RGB565);
 80025c8:	4621      	mov	r1, r4
 80025ca:	4628      	mov	r0, r5
 80025cc:	f022 fc84 	bl	8024ed8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 80025d0:	4b25      	ldr	r3, [pc, #148]	@ (8002668 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 80025d2:	4826      	ldr	r0, [pc, #152]	@ (800266c <touchgfx_init+0xd0>)
 80025d4:	60ab      	str	r3, [r5, #8]
 80025d6:	f00d fc49 	bl	800fe6c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 80025da:	4d25      	ldr	r5, [pc, #148]	@ (8002670 <touchgfx_init+0xd4>)
 80025dc:	e8d5 3faf 	lda	r3, [r5]
 80025e0:	07db      	lsls	r3, r3, #31
 80025e2:	d435      	bmi.n	8002650 <touchgfx_init+0xb4>
 80025e4:	4628      	mov	r0, r5
 80025e6:	f02e fdb8 	bl	803115a <__cxa_guard_acquire>
 80025ea:	b388      	cbz	r0, 8002650 <touchgfx_init+0xb4>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80025ec:	4c21      	ldr	r4, [pc, #132]	@ (8002674 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80025ee:	4b22      	ldr	r3, [pc, #136]	@ (8002678 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80025f0:	f504 76bc 	add.w	r6, r4, #376	@ 0x178
        : presenterStorage(pres),
 80025f4:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80025f8:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80025fc:	f504 77b0 	add.w	r7, r4, #352	@ 0x160
 8002600:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8002602:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002604:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002608:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800260a:	6126      	str	r6, [r4, #16]
 800260c:	f008 f9a2 	bl	800a954 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002610:	4b1a      	ldr	r3, [pc, #104]	@ (800267c <touchgfx_init+0xe0>)
 8002612:	4640      	mov	r0, r8
 8002614:	6163      	str	r3, [r4, #20]
 8002616:	f008 f99d 	bl	800a954 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800261a:	4b19      	ldr	r3, [pc, #100]	@ (8002680 <touchgfx_init+0xe4>)
 800261c:	4638      	mov	r0, r7
 800261e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002620:	f008 f998 	bl	800a954 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002624:	4b17      	ldr	r3, [pc, #92]	@ (8002684 <touchgfx_init+0xe8>)
 8002626:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800262a:	f8c4 3160 	str.w	r3, [r4, #352]	@ 0x160
 800262e:	f001 f97e 	bl	800392e <_ZN5ModelC1Ev>
 8002632:	4622      	mov	r2, r4
 8002634:	f504 71ba 	add.w	r1, r4, #372	@ 0x174
 8002638:	4630      	mov	r0, r6
 800263a:	f001 f8d3 	bl	80037e4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800263e:	4630      	mov	r0, r6
 8002640:	f000 fdc8 	bl	80031d4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8002644:	4810      	ldr	r0, [pc, #64]	@ (8002688 <touchgfx_init+0xec>)
 8002646:	f02f ff7d 	bl	8032544 <atexit>
 800264a:	4628      	mov	r0, r5
 800264c:	f02e fd91 	bl	8031172 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002650:	480e      	ldr	r0, [pc, #56]	@ (800268c <touchgfx_init+0xf0>)
}
 8002652:	b002      	add	sp, #8
 8002654:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002658:	f7fe bde8 	b.w	800122c <_ZN11TouchGFXHAL10initializeEv>
 800265c:	2000a014 	.word	0x2000a014
 8002660:	20009ff4 	.word	0x20009ff4
 8002664:	20082f64 	.word	0x20082f64
 8002668:	20009ff8 	.word	0x20009ff8
 800266c:	20000040 	.word	0x20000040
 8002670:	2000b60c 	.word	0x2000b60c
 8002674:	2000b610 	.word	0x2000b610
 8002678:	08033fcc 	.word	0x08033fcc
 800267c:	08033f30 	.word	0x08033f30
 8002680:	08033f64 	.word	0x08033f64
 8002684:	08033f98 	.word	0x08033f98
 8002688:	08002575 	.word	0x08002575
 800268c:	20009f40 	.word	0x20009f40

08002690 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8002690:	b508      	push	{r3, lr}
    nema_init();
 8002692:	f00e fa39 	bl	8010b08 <nema_init>
    nema_vg_init_stencil_pool(800, 480, 1);
 8002696:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800269a:	f44f 7048 	mov.w	r0, #800	@ 0x320
 800269e:	2201      	movs	r2, #1
 80026a0:	f016 fc96 	bl	8018fd0 <nema_vg_init_stencil_pool>
    nema_vg_handle_large_coords(1, 1);
}
 80026a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    nema_vg_handle_large_coords(1, 1);
 80026a8:	2101      	movs	r1, #1
 80026aa:	4608      	mov	r0, r1
 80026ac:	f01a ba4a 	b.w	801cb44 <nema_vg_handle_large_coords>

080026b0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80026b0:	4801      	ldr	r0, [pc, #4]	@ (80026b8 <touchgfx_taskEntry+0x8>)
 80026b2:	f008 bc5e 	b.w	800af72 <_ZN8touchgfx3HAL9taskEntryEv>
 80026b6:	bf00      	nop
 80026b8:	20009f40 	.word	0x20009f40

080026bc <_GLOBAL__sub_I_touchgfx_init>:
}
 80026bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
static STM32DMA dma;
 80026be:	4d13      	ldr	r5, [pc, #76]	@ (800270c <_GLOBAL__sub_I_touchgfx_init+0x50>)
{
public:

    STM32TouchController() {}
 80026c0:	4b13      	ldr	r3, [pc, #76]	@ (8002710 <_GLOBAL__sub_I_touchgfx_init+0x54>)
 80026c2:	4f14      	ldr	r7, [pc, #80]	@ (8002714 <_GLOBAL__sub_I_touchgfx_init+0x58>)
static LCDGPU2D display;
 80026c4:	4e14      	ldr	r6, [pc, #80]	@ (8002718 <_GLOBAL__sub_I_touchgfx_init+0x5c>)
static STM32DMA dma;
 80026c6:	4628      	mov	r0, r5
 80026c8:	603b      	str	r3, [r7, #0]
 80026ca:	f7ff feb7 	bl	800243c <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 80026ce:	4630      	mov	r0, r6
 80026d0:	f022 fbf4 	bl	8024ebc <_ZN8touchgfx8LCDGPU2DC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 80026d4:	4811      	ldr	r0, [pc, #68]	@ (800271c <_GLOBAL__sub_I_touchgfx_init+0x60>)
 80026d6:	f00b fdff 	bl	800e2d8 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 80026da:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80026de:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80026e2:	4c0f      	ldr	r4, [pc, #60]	@ (8002720 <_GLOBAL__sub_I_touchgfx_init+0x64>)
 80026e4:	e9cd 3200 	strd	r3, r2, [sp]
 80026e8:	4629      	mov	r1, r5
 80026ea:	463b      	mov	r3, r7
 80026ec:	4632      	mov	r2, r6
 80026ee:	4620      	mov	r0, r4
 80026f0:	f01e f9f6 	bl	8020ae0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80026f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002724 <_GLOBAL__sub_I_touchgfx_init+0x68>)
 80026f6:	6023      	str	r3, [r4, #0]
        : cc_consumed(0),
 80026f8:	2300      	movs	r3, #0
 80026fa:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
          cc_in(0)
 80026fe:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8002702:	4b09      	ldr	r3, [pc, #36]	@ (8002728 <_GLOBAL__sub_I_touchgfx_init+0x6c>)
 8002704:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 8002708:	b003      	add	sp, #12
 800270a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800270c:	2000a864 	.word	0x2000a864
 8002710:	08033724 	.word	0x08033724
 8002714:	2000b608 	.word	0x2000b608
 8002718:	2000a014 	.word	0x2000a014
 800271c:	20009ff8 	.word	0x20009ff8
 8002720:	20009f40 	.word	0x20009f40
 8002724:	080338b0 	.word	0x080338b0
 8002728:	080336e0 	.word	0x080336e0

0800272c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800272c:	4801      	ldr	r0, [pc, #4]	@ (8002734 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800272e:	f7ff bc95 	b.w	800205c <_ZN8STM32DMAD1Ev>
 8002732:	bf00      	nop
 8002734:	2000a864 	.word	0x2000a864

08002738 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static GPU2DVectorRenderer renderer;
 8002738:	4770      	bx	lr
	...

0800273c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800273c:	2290      	movs	r2, #144	@ 0x90
 800273e:	4b04      	ldr	r3, [pc, #16]	@ (8002750 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x14>)
 8002740:	f883 2376 	strb.w	r2, [r3, #886]	@ 0x376
 8002744:	f883 2387 	strb.w	r2, [r3, #903]	@ 0x387
 8002748:	f883 2384 	strb.w	r2, [r3, #900]	@ 0x384
void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
    NVIC_SetPriority(GPU2D_IRQn, 9);
}
 800274c:	4770      	bx	lr
 800274e:	bf00      	nop
 8002750:	e000e100 	.word	0xe000e100

08002754 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(GPU2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002754:	4a09      	ldr	r2, [pc, #36]	@ (800277c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002756:	490a      	ldr	r1, [pc, #40]	@ (8002780 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002758:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800275a:	480a      	ldr	r0, [pc, #40]	@ (8002784 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800275c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002760:	3b01      	subs	r3, #1
 8002762:	b29b      	uxth	r3, r3
 8002764:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002766:	6911      	ldr	r1, [r2, #16]
 8002768:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800276c:	3901      	subs	r1, #1
 800276e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002770:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002772:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002774:	f043 0301 	orr.w	r3, r3, #1
 8002778:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800277a:	4770      	bx	lr
 800277c:	40016800 	.word	0x40016800
 8002780:	2000b8e6 	.word	0x2000b8e6
 8002784:	2000b8e4 	.word	0x2000b8e4

08002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HALGPU2D::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002788:	4b01      	ldr	r3, [pc, #4]	@ (8002790 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800278a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800278e:	4770      	bx	lr
 8002790:	40016800 	.word	0x40016800

08002794 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002794:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002796:	4b02      	ldr	r3, [pc, #8]	@ (80027a0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 8002798:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800279c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800279e:	4770      	bx	lr
 80027a0:	40016800 	.word	0x40016800

080027a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027a4:	4770      	bx	lr

080027a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
 80027a6:	2324      	movs	r3, #36	@ 0x24
 80027a8:	fb03 0001 	mla	r0, r3, r1, r0
 80027ac:	2300      	movs	r3, #0
 80027ae:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
 80027b2:	4770      	bx	lr

080027b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
 80027b4:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 80027b8:	4770      	bx	lr

080027ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027ba:	b510      	push	{r4, lr}
 80027bc:	4604      	mov	r4, r0
 80027be:	2130      	movs	r1, #48	@ 0x30
 80027c0:	f02e fcc9 	bl	8031156 <_ZdlPvj>
 80027c4:	4620      	mov	r0, r4
 80027c6:	bd10      	pop	{r4, pc}

080027c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80027c8:	b538      	push	{r3, r4, r5, lr}
 80027ca:	4604      	mov	r4, r0
    HALGPU2D::initialize(8192);
 80027cc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027d0:	f01e f9ee 	bl	8020bb0 <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 80027d4:	6823      	ldr	r3, [r4, #0]
 80027d6:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80027d8:	f00a fc52 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
 80027dc:	4601      	mov	r1, r0
 80027de:	4620      	mov	r0, r4
 80027e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80027e2:	6823      	ldr	r3, [r4, #0]
 80027e4:	4a06      	ldr	r2, [pc, #24]	@ (8002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>)
 80027e6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80027ea:	4620      	mov	r0, r4
 80027ec:	2300      	movs	r3, #0
 80027ee:	4905      	ldr	r1, [pc, #20]	@ (8002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x3c>)
 80027f0:	47a8      	blx	r5
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
 80027f2:	6862      	ldr	r2, [r4, #4]
 80027f4:	4b04      	ldr	r3, [pc, #16]	@ (8002808 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x40>)
 80027f6:	645a      	str	r2, [r3, #68]	@ 0x44
        mjpegDecoders[index] = &decoder;
 80027f8:	4a04      	ldr	r2, [pc, #16]	@ (800280c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 80027fa:	6053      	str	r3, [r2, #4]
}
 80027fc:	bd38      	pop	{r3, r4, r5, pc}
 80027fe:	bf00      	nop
 8002800:	20140f28 	.word	0x20140f28
 8002804:	20085728 	.word	0x20085728
 8002808:	2000b91c 	.word	0x2000b91c
 800280c:	2000b8ec 	.word	0x2000b8ec

08002810 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
 8002810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002812:	4604      	mov	r4, r0
 8002814:	4610      	mov	r0, r2
        assert(handle < no_streams);
 8002816:	b129      	cbz	r1, 8002824 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
 8002818:	21a9      	movs	r1, #169	@ 0xa9
 800281a:	4b3e      	ldr	r3, [pc, #248]	@ (8002914 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x104>)
 800281c:	4a3e      	ldr	r2, [pc, #248]	@ (8002918 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x108>)
 800281e:	483f      	ldr	r0, [pc, #252]	@ (800291c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x10c>)
 8002820:	f02f fe72 	bl	8032508 <__assert_func>
        if (stream.isPlaying || stream.isShowingOneFrame)
 8002824:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8002828:	b91b      	cbnz	r3, 8002832 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x22>
 800282a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800282e:	2b00      	cmp	r3, #0
 8002830:	d06e      	beq.n	8002910 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x100>
            stream.isShowingOneFrame = false;
 8002832:	2700      	movs	r7, #0
        return vSyncForFrame;
 8002834:	4b3a      	ldr	r3, [pc, #232]	@ (8002920 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x110>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	f893 206b 	ldrb.w	r2, [r3, #107]	@ 0x6b
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 800283c:	6923      	ldr	r3, [r4, #16]
            stream.isShowingOneFrame = false;
 800283e:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 8002842:	4413      	add	r3, r2
 8002844:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
 8002846:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800284a:	2b00      	cmp	r3, #0
 800284c:	d05c      	beq.n	8002908 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf8>
                widget.invalidate();
 800284e:	6803      	ldr	r3, [r0, #0]
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
 8002850:	6865      	ldr	r5, [r4, #4]
                widget.invalidate();
 8002852:	695b      	ldr	r3, [r3, #20]
 8002854:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
 8002856:	69e6      	ldr	r6, [r4, #28]
 8002858:	682b      	ldr	r3, [r5, #0]
 800285a:	2e00      	cmp	r6, #0
 800285c:	d02d      	beq.n	80028ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xaa>
                    decoder->gotoFrame(stream.seek_to_frame);
 800285e:	4631      	mov	r1, r6
 8002860:	4628      	mov	r0, r5
 8002862:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002864:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
 8002866:	682b      	ldr	r3, [r5, #0]
 8002868:	4628      	mov	r0, r5
 800286a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800286c:	69e6      	ldr	r6, [r4, #28]
 800286e:	4798      	blx	r3
 8002870:	4286      	cmp	r6, r0
 8002872:	bf2c      	ite	cs
 8002874:	2600      	movcs	r6, #0
 8002876:	2601      	movcc	r6, #1
                    stream.seek_to_frame = 0;
 8002878:	61e7      	str	r7, [r4, #28]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 800287a:	682b      	ldr	r3, [r5, #0]
 800287c:	4628      	mov	r0, r5
 800287e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002880:	4798      	blx	r3
                stream.frameCount++;
 8002882:	68a3      	ldr	r3, [r4, #8]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 8002884:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
 8002886:	3301      	adds	r3, #1
 8002888:	60a3      	str	r3, [r4, #8]
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameNumber to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
 800288a:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800288e:	69a1      	ldr	r1, [r4, #24]
 8002890:	4353      	muls	r3, r2
 8002892:	68a2      	ldr	r2, [r4, #8]
 8002894:	434a      	muls	r2, r1
 8002896:	4293      	cmp	r3, r2
 8002898:	d938      	bls.n	800290c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xfc>
        {
            if (allowSkipFrames)
 800289a:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
 800289e:	b138      	cbz	r0, 80028b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa0>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
 80028a0:	1a9b      	subs	r3, r3, r2
 80028a2:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
 80028a6:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
 80028a8:	bf98      	it	ls
 80028aa:	f102 32ff 	addls.w	r2, r2, #4294967295
 80028ae:	6222      	str	r2, [r4, #32]
                }
            }
            return true;
 80028b0:	2301      	movs	r3, #1
            stream.doDecodeNextFrame = decodeForNextTick(stream);
 80028b2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
 80028b6:	4630      	mov	r0, r6
 80028b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    if (stream.skip_frames > 0)
 80028ba:	6a22      	ldr	r2, [r4, #32]
 80028bc:	b162      	cbz	r2, 80028d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xc8>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
 80028be:	e9d3 7309 	ldrd	r7, r3, [r3, #36]	@ 0x24
 80028c2:	4628      	mov	r0, r5
 80028c4:	4798      	blx	r3
 80028c6:	6a21      	ldr	r1, [r4, #32]
 80028c8:	4401      	add	r1, r0
 80028ca:	4628      	mov	r0, r5
 80028cc:	47b8      	blx	r7
                        stream.frameCount += stream.skip_frames;
 80028ce:	68a3      	ldr	r3, [r4, #8]
 80028d0:	6a22      	ldr	r2, [r4, #32]
                        stream.skip_frames = 0;
 80028d2:	6226      	str	r6, [r4, #32]
                        stream.frameCount += stream.skip_frames;
 80028d4:	4413      	add	r3, r2
 80028d6:	60a3      	str	r3, [r4, #8]
                    if (stream.repeat)
 80028d8:	f894 6027 	ldrb.w	r6, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
 80028dc:	682b      	ldr	r3, [r5, #0]
                    if (stream.repeat)
 80028de:	b126      	cbz	r6, 80028ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xda>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028e0:	4628      	mov	r0, r5
 80028e2:	699b      	ldr	r3, [r3, #24]
 80028e4:	4798      	blx	r3
 80028e6:	4606      	mov	r6, r0
 80028e8:	e7c7      	b.n	800287a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
 80028ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80028ec:	4628      	mov	r0, r5
 80028ee:	4798      	blx	r3
 80028f0:	682b      	ldr	r3, [r5, #0]
 80028f2:	4607      	mov	r7, r0
 80028f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028f6:	4628      	mov	r0, r5
 80028f8:	4798      	blx	r3
 80028fa:	4287      	cmp	r7, r0
 80028fc:	d201      	bcs.n	8002902 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf2>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028fe:	682b      	ldr	r3, [r5, #0]
 8002900:	e7ee      	b.n	80028e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd0>
                            stream.isPlaying = false;
 8002902:	f884 6025 	strb.w	r6, [r4, #37]	@ 0x25
 8002906:	e7b8      	b.n	800287a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
        bool hasMoreFrames = true;
 8002908:	2601      	movs	r6, #1
 800290a:	e7be      	b.n	800288a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x7a>
        }
        return false;
 800290c:	2300      	movs	r3, #0
 800290e:	e7d0      	b.n	80028b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa2>
        bool hasMoreFrames = true;
 8002910:	2601      	movs	r6, #1
 8002912:	e7d0      	b.n	80028b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa6>
 8002914:	08033fd8 	.word	0x08033fd8
 8002918:	08033fec 	.word	0x08033fec
 800291c:	0803411d 	.word	0x0803411d
 8002920:	20082f08 	.word	0x20082f08

08002924 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HALGPU2D::beginFrame();
 8002924:	f01e b86e 	b.w	8020a04 <_ZN8touchgfx8HALGPU2D10beginFrameEv>

08002928 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HALGPU2D::endFrame();
 8002928:	f01e b898 	b.w	8020a5c <_ZN8touchgfx8HALGPU2D8endFrameEv>

0800292c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HALGPU2D::flushFrameBuffer(rect);
 800292c:	f008 babe 	b.w	800aeac <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002930 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HALGPU2D::blockCopy(dest, src, numBytes);
 8002930:	f008 bc2d 	b.w	800b18e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002934 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
    virtual bool getIsPlaying(const Handle handle)
 8002934:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002936:	b131      	cbz	r1, 8002946 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x12>
 8002938:	f44f 7191 	mov.w	r1, #290	@ 0x122
 800293c:	4b03      	ldr	r3, [pc, #12]	@ (800294c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
 800293e:	4a04      	ldr	r2, [pc, #16]	@ (8002950 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
 8002940:	4804      	ldr	r0, [pc, #16]	@ (8002954 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
 8002942:	f02f fde1 	bl	8032508 <__assert_func>
    }
 8002946:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
 800294a:	bd08      	pop	{r3, pc}
 800294c:	08033fd8 	.word	0x08033fd8
 8002950:	08034162 	.word	0x08034162
 8002954:	0803411d 	.word	0x0803411d

08002958 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
 8002958:	b510      	push	{r4, lr}
        assert(handle < no_streams);
 800295a:	b131      	cbz	r1, 800296a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x12>
 800295c:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8002960:	4b05      	ldr	r3, [pc, #20]	@ (8002978 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
 8002962:	4a06      	ldr	r2, [pc, #24]	@ (800297c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
 8002964:	4806      	ldr	r0, [pc, #24]	@ (8002980 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x28>)
 8002966:	f02f fdcf 	bl	8032508 <__assert_func>
        mjpegDecoders[handle]->getVideoInfo(data);
 800296a:	6840      	ldr	r0, [r0, #4]
 800296c:	4611      	mov	r1, r2
    }
 800296e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->getVideoInfo(data);
 8002972:	6803      	ldr	r3, [r0, #0]
 8002974:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002976:	4718      	bx	r3
 8002978:	08033fd8 	.word	0x08033fd8
 800297c:	0803427c 	.word	0x0803427c
 8002980:	0803411d 	.word	0x0803411d

08002984 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
 8002984:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002986:	b131      	cbz	r1, 8002996 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x12>
 8002988:	f44f 718a 	mov.w	r1, #276	@ 0x114
 800298c:	4b03      	ldr	r3, [pc, #12]	@ (800299c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
 800298e:	4a04      	ldr	r2, [pc, #16]	@ (80029a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
 8002990:	4804      	ldr	r0, [pc, #16]	@ (80029a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
 8002992:	f02f fdb9 	bl	8032508 <__assert_func>
    }
 8002996:	68c0      	ldr	r0, [r0, #12]
 8002998:	bd08      	pop	{r3, pc}
 800299a:	bf00      	nop
 800299c:	08033fd8 	.word	0x08033fd8
 80029a0:	080343ba 	.word	0x080343ba
 80029a4:	0803411d 	.word	0x0803411d

080029a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
 80029a8:	b570      	push	{r4, r5, r6, lr}
 80029aa:	4604      	mov	r4, r0
        assert(handle < no_streams);
 80029ac:	b129      	cbz	r1, 80029ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x12>
 80029ae:	216e      	movs	r1, #110	@ 0x6e
 80029b0:	4b26      	ldr	r3, [pc, #152]	@ (8002a4c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa4>)
 80029b2:	4a27      	ldr	r2, [pc, #156]	@ (8002a50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa8>)
 80029b4:	4827      	ldr	r0, [pc, #156]	@ (8002a54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xac>)
 80029b6:	f02f fda7 	bl	8032508 <__assert_func>
        switch (cmd)
 80029ba:	2a05      	cmp	r2, #5
 80029bc:	d82b      	bhi.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 80029be:	e8df f002 	tbb	[pc, r2]
 80029c2:	2503      	.short	0x2503
 80029c4:	3f37302b 	.word	0x3f37302b
            if (mjpegDecoders[handle]->hasVideo())
 80029c8:	6840      	ldr	r0, [r0, #4]
 80029ca:	6803      	ldr	r3, [r0, #0]
 80029cc:	691b      	ldr	r3, [r3, #16]
 80029ce:	4798      	blx	r3
 80029d0:	b308      	cbz	r0, 8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                stream.isPlaying = true;
 80029d2:	2301      	movs	r3, #1
 80029d4:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
                stream.isShowingOneFrame = false;
 80029d8:	2300      	movs	r3, #0
 80029da:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
                stream.frameCount = 0;
 80029de:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
 80029e0:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
 80029e2:	f894 3027 	ldrb.w	r3, [r4, #39]	@ 0x27
 80029e6:	b9b3      	cbnz	r3, 8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                    MJPEGDecoder* const decoder = mjpegDecoders[handle];
 80029e8:	6864      	ldr	r4, [r4, #4]
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	4620      	mov	r0, r4
 80029ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029f0:	4798      	blx	r3
 80029f2:	6823      	ldr	r3, [r4, #0]
 80029f4:	4605      	mov	r5, r0
 80029f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80029f8:	4620      	mov	r0, r4
 80029fa:	4798      	blx	r3
 80029fc:	4285      	cmp	r5, r0
 80029fe:	d10a      	bne.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                        decoder->gotoNextFrame();
 8002a00:	6823      	ldr	r3, [r4, #0]
 8002a02:	4620      	mov	r0, r4
    }
 8002a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
 8002a08:	699b      	ldr	r3, [r3, #24]
 8002a0a:	4718      	bx	r3
            stream.isPlaying = false;
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a12:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
    }
 8002a16:	bd70      	pop	{r4, r5, r6, pc}
            stream.seek_to_frame = param;
 8002a18:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
 8002a1a:	2300      	movs	r3, #0
            stream.frameCount = 0;
 8002a1c:	60a3      	str	r3, [r4, #8]
            stream.tickCount = 0;
 8002a1e:	6123      	str	r3, [r4, #16]
            break;
 8002a20:	e7f9      	b.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
            stream.seek_to_frame = param;
 8002a22:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
 8002a24:	2301      	movs	r3, #1
 8002a26:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
 8002a2a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8002a2e:	e7f4      	b.n	8002a1a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x72>
            stream.isPlaying = false;
 8002a30:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
 8002a32:	2201      	movs	r2, #1
            stream.isPlaying = false;
 8002a34:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a38:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.seek_to_frame = 1;
 8002a3c:	61c2      	str	r2, [r0, #28]
 8002a3e:	e7ed      	b.n	8002a1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x74>
            stream.repeat = (param > 0);
 8002a40:	3b00      	subs	r3, #0
 8002a42:	bf18      	it	ne
 8002a44:	2301      	movne	r3, #1
 8002a46:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
 8002a4a:	e7e4      	b.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 8002a4c:	08033fd8 	.word	0x08033fd8
 8002a50:	080344ff 	.word	0x080344ff
 8002a54:	0803411d 	.word	0x0803411d

08002a58 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
 8002a58:	b570      	push	{r4, r5, r6, lr}
 8002a5a:	4604      	mov	r4, r0
        assert(handle < no_streams);
 8002a5c:	460d      	mov	r5, r1
 8002a5e:	b129      	cbz	r1, 8002a6c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x14>
 8002a60:	215e      	movs	r1, #94	@ 0x5e
 8002a62:	4b0d      	ldr	r3, [pc, #52]	@ (8002a98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x40>)
 8002a64:	4a0d      	ldr	r2, [pc, #52]	@ (8002a9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x44>)
 8002a66:	480e      	ldr	r0, [pc, #56]	@ (8002aa0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>)
 8002a68:	f02f fd4e 	bl	8032508 <__assert_func>
        mjpegDecoders[handle]->setVideoData(reader);
 8002a6c:	6840      	ldr	r0, [r0, #4]
 8002a6e:	4611      	mov	r1, r2
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	68db      	ldr	r3, [r3, #12]
 8002a74:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a76:	6860      	ldr	r0, [r4, #4]
 8002a78:	6803      	ldr	r3, [r0, #0]
 8002a7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a7c:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002a7e:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a80:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002a82:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002a84:	4629      	mov	r1, r5
 8002a86:	462b      	mov	r3, r5
 8002a88:	4620      	mov	r0, r4
 8002a8a:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002a8c:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002a90:	2201      	movs	r2, #1
    }
 8002a92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002a96:	4760      	bx	ip
 8002a98:	08033fd8 	.word	0x08033fd8
 8002a9c:	08034663 	.word	0x08034663
 8002aa0:	0803411d 	.word	0x0803411d

08002aa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
 8002aa4:	b570      	push	{r4, r5, r6, lr}
 8002aa6:	460d      	mov	r5, r1
 8002aa8:	4604      	mov	r4, r0
 8002aaa:	4611      	mov	r1, r2
 8002aac:	461a      	mov	r2, r3
        assert(handle < no_streams);
 8002aae:	b12d      	cbz	r5, 8002abc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x18>
 8002ab0:	214e      	movs	r1, #78	@ 0x4e
 8002ab2:	4b0d      	ldr	r3, [pc, #52]	@ (8002ae8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x44>)
 8002ab4:	4a0d      	ldr	r2, [pc, #52]	@ (8002aec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x48>)
 8002ab6:	480e      	ldr	r0, [pc, #56]	@ (8002af0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4c>)
 8002ab8:	f02f fd26 	bl	8032508 <__assert_func>
        mjpegDecoders[handle]->setVideoData(movie, length);
 8002abc:	6840      	ldr	r0, [r0, #4]
 8002abe:	6803      	ldr	r3, [r0, #0]
 8002ac0:	689b      	ldr	r3, [r3, #8]
 8002ac2:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ac4:	6860      	ldr	r0, [r4, #4]
 8002ac6:	6803      	ldr	r3, [r0, #0]
 8002ac8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002aca:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002acc:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ace:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002ad0:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002ad2:	4629      	mov	r1, r5
 8002ad4:	462b      	mov	r3, r5
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002ada:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002ade:	2201      	movs	r2, #1
    }
 8002ae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002ae4:	4760      	bx	ip
 8002ae6:	bf00      	nop
 8002ae8:	08033fd8 	.word	0x08033fd8
 8002aec:	08034799 	.word	0x08034799
 8002af0:	0803411d 	.word	0x0803411d

08002af4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
 8002af4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002af6:	b129      	cbz	r1, 8002b04 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x10>
 8002af8:	2140      	movs	r1, #64	@ 0x40
 8002afa:	4b05      	ldr	r3, [pc, #20]	@ (8002b10 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
 8002afc:	4a05      	ldr	r2, [pc, #20]	@ (8002b14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
 8002afe:	4806      	ldr	r0, [pc, #24]	@ (8002b18 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
 8002b00:	f02f fd02 	bl	8032508 <__assert_func>
        stream.frame_rate_video = video_frames;
 8002b04:	e9c0 3205 	strd	r3, r2, [r0, #20]
        stream.frameCount = 0;
 8002b08:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
 8002b0a:	6101      	str	r1, [r0, #16]
    }
 8002b0c:	bd08      	pop	{r3, pc}
 8002b0e:	bf00      	nop
 8002b10:	08033fd8 	.word	0x08033fd8
 8002b14:	08034904 	.word	0x08034904
 8002b18:	0803411d 	.word	0x0803411d

08002b1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
 8002b1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002b20:	4604      	mov	r4, r0
 8002b22:	4615      	mov	r5, r2
 8002b24:	461f      	mov	r7, r3
        assert(handle < no_streams);
 8002b26:	b129      	cbz	r1, 8002b34 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x18>
 8002b28:	21e9      	movs	r1, #233	@ 0xe9
 8002b2a:	4b18      	ldr	r3, [pc, #96]	@ (8002b8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
 8002b2c:	4a18      	ldr	r2, [pc, #96]	@ (8002b90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
 8002b2e:	4819      	ldr	r0, [pc, #100]	@ (8002b94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
 8002b30:	f02f fcea 	bl	8032508 <__assert_func>
        if (mjpegDecoders[handle]->hasVideo())
 8002b34:	6840      	ldr	r0, [r0, #4]
 8002b36:	6803      	ldr	r3, [r0, #0]
 8002b38:	691b      	ldr	r3, [r3, #16]
 8002b3a:	4798      	blx	r3
 8002b3c:	b310      	cbz	r0, 8002b84 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>
        return instance;
 8002b3e:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 8002b9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x80>
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
 8002b42:	2101      	movs	r1, #1
 8002b44:	f8d8 0000 	ldr.w	r0, [r8]
 8002b48:	f008 ffba 	bl	800bac0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8002b4c:	4606      	mov	r6, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
 8002b4e:	4639      	mov	r1, r7
 8002b50:	4668      	mov	r0, sp
 8002b52:	f00b fba7 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b56:	4b10      	ldr	r3, [pc, #64]	@ (8002b98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
 8002b58:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8002b5c:	881b      	ldrh	r3, [r3, #0]
 8002b5e:	f9bd 2000 	ldrsh.w	r2, [sp]
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b62:	6860      	ldr	r0, [r4, #4]
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b64:	fb03 2201 	mla	r2, r3, r1, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b68:	6801      	ldr	r1, [r0, #0]
 8002b6a:	eb06 0242 	add.w	r2, r6, r2, lsl #1
 8002b6e:	69cc      	ldr	r4, [r1, #28]
 8002b70:	4629      	mov	r1, r5
 8002b72:	47a0      	blx	r4
 8002b74:	f8d8 0000 	ldr.w	r0, [r8]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b78:	6803      	ldr	r3, [r0, #0]
 8002b7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
 8002b7c:	b002      	add	sp, #8
 8002b7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b82:	4718      	bx	r3
    }
 8002b84:	b002      	add	sp, #8
 8002b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b8a:	bf00      	nop
 8002b8c:	08033fd8 	.word	0x08033fd8
 8002b90:	08034a50 	.word	0x08034a50
 8002b94:	0803411d 	.word	0x0803411d
 8002b98:	20082f02 	.word	0x20082f02
 8002b9c:	20082f08 	.word	0x20082f08

08002ba0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
 8002ba0:	b508      	push	{r3, lr}
 8002ba2:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
 8002ba4:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
 8002ba8:	b130      	cbz	r0, 8002bb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x18>
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
 8002baa:	f240 116b 	movw	r1, #363	@ 0x16b
 8002bae:	4b07      	ldr	r3, [pc, #28]	@ (8002bcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
 8002bb0:	4a07      	ldr	r2, [pc, #28]	@ (8002bd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
 8002bb2:	4808      	ldr	r0, [pc, #32]	@ (8002bd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
 8002bb4:	f02f fca8 	bl	8032508 <__assert_func>
        streams[handle].isActive = true;
 8002bb8:	2201      	movs	r2, #1
 8002bba:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
 8002bbe:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
 8002bc2:	86c8      	strh	r0, [r1, #54]	@ 0x36
        bufferHeight = height;
 8002bc4:	8708      	strh	r0, [r1, #56]	@ 0x38
        buffer = videoBuffer;
 8002bc6:	6308      	str	r0, [r1, #48]	@ 0x30
    }
 8002bc8:	bd08      	pop	{r3, pc}
 8002bca:	bf00      	nop
 8002bcc:	08034b97 	.word	0x08034b97
 8002bd0:	08034bc7 	.word	0x08034bc7
 8002bd4:	0803411d 	.word	0x0803411d

08002bd8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8002c08 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x30>)
 8002bde:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8002be2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002be6:	f3bf 8f6f 	isb	sy
 8002bea:	2280      	movs	r2, #128	@ 0x80
 8002bec:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bf0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bf4:	f3bf 8f6f 	isb	sy
 8002bf8:	2210      	movs	r2, #16
 8002bfa:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bfe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002c02:	f3bf 8f6f 	isb	sy
}
 8002c06:	4770      	bx	lr
 8002c08:	e000e100 	.word	0xe000e100

08002c0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c0c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002c10:	4b03      	ldr	r3, [pc, #12]	@ (8002c20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x14>)
 8002c12:	60da      	str	r2, [r3, #12]
 8002c14:	2280      	movs	r2, #128	@ 0x80
 8002c16:	611a      	str	r2, [r3, #16]
 8002c18:	2210      	movs	r2, #16
 8002c1a:	611a      	str	r2, [r3, #16]
}
 8002c1c:	4770      	bx	lr
 8002c1e:	bf00      	nop
 8002c20:	e000e100 	.word	0xe000e100

08002c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002c24:	b510      	push	{r4, lr}
    static GPU2DVectorRenderer renderer;
 8002c26:	4c08      	ldr	r4, [pc, #32]	@ (8002c48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x24>)
 8002c28:	e8d4 3faf 	lda	r3, [r4]
 8002c2c:	07db      	lsls	r3, r3, #31
 8002c2e:	d409      	bmi.n	8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c30:	4620      	mov	r0, r4
 8002c32:	f02e fa92 	bl	803115a <__cxa_guard_acquire>
 8002c36:	b128      	cbz	r0, 8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c38:	4804      	ldr	r0, [pc, #16]	@ (8002c4c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x28>)
 8002c3a:	f02f fc83 	bl	8032544 <atexit>
 8002c3e:	4620      	mov	r0, r4
 8002c40:	f02e fa97 	bl	8031172 <__cxa_guard_release>
}
 8002c44:	4802      	ldr	r0, [pc, #8]	@ (8002c50 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x2c>)
 8002c46:	bd10      	pop	{r4, pc}
 8002c48:	2000b8e8 	.word	0x2000b8e8
 8002c4c:	08002739 	.word	0x08002739
 8002c50:	20000044 	.word	0x20000044

08002c54 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002c54:	b510      	push	{r4, lr}
 8002c56:	4c14      	ldr	r4, [pc, #80]	@ (8002ca8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002c58:	6823      	ldr	r3, [r4, #0]
 8002c5a:	b323      	cbz	r3, 8002ca6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002c5c:	4b13      	ldr	r3, [pc, #76]	@ (8002cac <HAL_LTDC_LineEventCallback+0x58>)
 8002c5e:	4a14      	ldr	r2, [pc, #80]	@ (8002cb0 <HAL_LTDC_LineEventCallback+0x5c>)
 8002c60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c62:	8811      	ldrh	r1, [r2, #0]
 8002c64:	428b      	cmp	r3, r1
 8002c66:	d113      	bne.n	8002c90 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002c68:	4b12      	ldr	r3, [pc, #72]	@ (8002cb4 <HAL_LTDC_LineEventCallback+0x60>)
 8002c6a:	8819      	ldrh	r1, [r3, #0]
 8002c6c:	f003 fc66 	bl	800653c <HAL_LTDC_ProgramLineEvent>
 8002c70:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002c72:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002c76:	3301      	adds	r3, #1
 8002c78:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002c7c:	f7ff f9c6 	bl	800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002c80:	6820      	ldr	r0, [r4, #0]
 8002c82:	f008 febb 	bl	800b9fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002c8a:	2000      	movs	r0, #0
 8002c8c:	f7fe ba60 	b.w	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002c90:	f003 fc54 	bl	800653c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002c94:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002c96:	6803      	ldr	r3, [r0, #0]
 8002c98:	6a1b      	ldr	r3, [r3, #32]
 8002c9a:	4798      	blx	r3
    }
 8002c9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	f7fe ba6f 	b.w	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002ca6:	bd10      	pop	{r4, pc}
 8002ca8:	20082f08 	.word	0x20082f08
 8002cac:	40016800 	.word	0x40016800
 8002cb0:	2000b8e6 	.word	0x2000b8e6
 8002cb4:	2000b8e4 	.word	0x2000b8e4

08002cb8 <_GLOBAL__sub_I_mjpegdecoder1>:
}
 8002cb8:	b508      	push	{r3, lr}
HardwareMJPEGDecoder mjpegdecoder1;
 8002cba:	480b      	ldr	r0, [pc, #44]	@ (8002ce8 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
 8002cbc:	f7fe fba8 	bl	8001410 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
 8002cc0:	4b0a      	ldr	r3, [pc, #40]	@ (8002cec <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
 8002cc2:	4a0b      	ldr	r2, [pc, #44]	@ (8002cf0 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
        Stream()
 8002cc4:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
 8002cc8:	601a      	str	r2, [r3, #0]
 8002cca:	2201      	movs	r2, #1
 8002ccc:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
 8002cd0:	2200      	movs	r2, #0
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd2:	e9c3 2201 	strd	r2, r2, [r3, #4]
        Stream()
 8002cd6:	6259      	str	r1, [r3, #36]	@ 0x24
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd8:	e9c3 2203 	strd	r2, r2, [r3, #12]
              frame_rate_video(0), frame_rate_ticks(0),
 8002cdc:	e9c3 2205 	strd	r2, r2, [r3, #20]
              seek_to_frame(0),
 8002ce0:	61da      	str	r2, [r3, #28]
              doDecodeNextFrame(false)
 8002ce2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
}
 8002ce6:	bd08      	pop	{r3, pc}
 8002ce8:	2000b91c 	.word	0x2000b91c
 8002cec:	2000b8ec 	.word	0x2000b8ec
 8002cf0:	08034ce8 	.word	0x08034ce8

08002cf4 <HAL_GPU2D_CommandListCpltCallback>:
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
{
    /* Prevent unused argument(s) compilation warning */
    UNUSED(hgpu2d);

    last_cl_id = CmdListID;
 8002cf4:	4b02      	ldr	r3, [pc, #8]	@ (8002d00 <HAL_GPU2D_CommandListCpltCallback+0xc>)
 8002cf6:	6019      	str	r1, [r3, #0]

    /* Return a token back to a semaphore */
    osSemaphoreRelease(nema_irq_sem);
 8002cf8:	4b02      	ldr	r3, [pc, #8]	@ (8002d04 <HAL_GPU2D_CommandListCpltCallback+0x10>)
 8002cfa:	6818      	ldr	r0, [r3, #0]
 8002cfc:	f005 bf88 	b.w	8008c10 <osSemaphoreRelease>
 8002d00:	20000048 	.word	0x20000048
 8002d04:	2000b964 	.word	0x2000b964

08002d08 <nema_reg_read>:

    return error_code;
}

uint32_t nema_reg_read(uint32_t reg)
{
 8002d08:	4601      	mov	r1, r0
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 8002d0a:	4801      	ldr	r0, [pc, #4]	@ (8002d10 <nema_reg_read+0x8>)
 8002d0c:	f001 bf10 	b.w	8004b30 <HAL_GPU2D_ReadRegister>
 8002d10:	20000570 	.word	0x20000570

08002d14 <nema_reg_write>:
}

void nema_reg_write(uint32_t reg, uint32_t value)
{
 8002d14:	460a      	mov	r2, r1
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 8002d16:	4601      	mov	r1, r0
 8002d18:	4801      	ldr	r0, [pc, #4]	@ (8002d20 <nema_reg_write+0xc>)
 8002d1a:	f001 bf0c 	b.w	8004b36 <HAL_GPU2D_WriteRegister>
 8002d1e:	bf00      	nop
 8002d20:	20000570 	.word	0x20000570

08002d24 <nema_wait_irq>:
}

int nema_wait_irq(void)
{
 8002d24:	b508      	push	{r3, lr}
    /* Wait indefinitely for a free semaphore */
    osSemaphoreAcquire(nema_irq_sem, osWaitForever);
 8002d26:	4b04      	ldr	r3, [pc, #16]	@ (8002d38 <nema_wait_irq+0x14>)
 8002d28:	f04f 31ff 	mov.w	r1, #4294967295
 8002d2c:	6818      	ldr	r0, [r3, #0]
 8002d2e:	f005 ff41 	bl	8008bb4 <osSemaphoreAcquire>

    return 0;
}
 8002d32:	2000      	movs	r0, #0
 8002d34:	bd08      	pop	{r3, pc}
 8002d36:	bf00      	nop
 8002d38:	2000b964 	.word	0x2000b964

08002d3c <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 8002d3c:	b538      	push	{r3, r4, r5, lr}
 8002d3e:	4604      	mov	r4, r0
    while (last_cl_id < cl_id)
 8002d40:	4d04      	ldr	r5, [pc, #16]	@ (8002d54 <nema_wait_irq_cl+0x18>)
 8002d42:	682b      	ldr	r3, [r5, #0]
 8002d44:	42a3      	cmp	r3, r4
 8002d46:	db01      	blt.n	8002d4c <nema_wait_irq_cl+0x10>
    {
        (void)nema_wait_irq();
    }

    return 0;
}
 8002d48:	2000      	movs	r0, #0
 8002d4a:	bd38      	pop	{r3, r4, r5, pc}
        (void)nema_wait_irq();
 8002d4c:	f7ff ffea 	bl	8002d24 <nema_wait_irq>
 8002d50:	e7f7      	b.n	8002d42 <nema_wait_irq_cl+0x6>
 8002d52:	bf00      	nop
 8002d54:	20000048 	.word	0x20000048

08002d58 <nema_host_free>:
    return 0;
}

void nema_host_free(void* ptr)
{
    tsi_free(ptr);
 8002d58:	f01a bd22 	b.w	801d7a0 <tsi_free>

08002d5c <nema_host_malloc>:
}

void* nema_host_malloc(unsigned size)
{
 8002d5c:	4601      	mov	r1, r0
    return tsi_malloc(size);
 8002d5e:	2000      	movs	r0, #0
 8002d60:	f01a bcc0 	b.w	801d6e4 <tsi_malloc_pool>

08002d64 <nema_buffer_create>:
}

nema_buffer_t nema_buffer_create(int size)
{
 8002d64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d66:	4604      	mov	r4, r0
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002d68:	2000      	movs	r0, #0
{
 8002d6a:	460e      	mov	r6, r1
    memset(&bo, 0, sizeof(bo));
 8002d6c:	9001      	str	r0, [sp, #4]
    bo.base_virt = tsi_malloc(size);
 8002d6e:	f01a fcb9 	bl	801d6e4 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002d72:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002d74:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002d78:	9600      	str	r6, [sp, #0]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 8002d7a:	b928      	cbnz	r0, 8002d88 <nema_buffer_create+0x24>
 8002d7c:	21a6      	movs	r1, #166	@ 0xa6
 8002d7e:	4b06      	ldr	r3, [pc, #24]	@ (8002d98 <nema_buffer_create+0x34>)
 8002d80:	4a06      	ldr	r2, [pc, #24]	@ (8002d9c <nema_buffer_create+0x38>)
 8002d82:	4807      	ldr	r0, [pc, #28]	@ (8002da0 <nema_buffer_create+0x3c>)
 8002d84:	f02f fbc0 	bl	8032508 <__assert_func>

    return bo;
 8002d88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002d8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002d90:	4620      	mov	r0, r4
 8002d92:	b004      	add	sp, #16
 8002d94:	bd70      	pop	{r4, r5, r6, pc}
 8002d96:	bf00      	nop
 8002d98:	08034d20 	.word	0x08034d20
 8002d9c:	08034e68 	.word	0x08034e68
 8002da0:	08034d67 	.word	0x08034d67

08002da4 <nema_sys_init>:
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da4:	2101      	movs	r1, #1
{
 8002da6:	b5f0      	push	{r4, r5, r6, r7, lr}
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da8:	2200      	movs	r2, #0
 8002daa:	4608      	mov	r0, r1
{
 8002dac:	b087      	sub	sp, #28
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002dae:	f005 feb2 	bl	8008b16 <osSemaphoreNew>
 8002db2:	4b21      	ldr	r3, [pc, #132]	@ (8002e38 <nema_sys_init+0x94>)
 8002db4:	6018      	str	r0, [r3, #0]
    assert(nema_irq_sem != NULL);
 8002db6:	b928      	cbnz	r0, 8002dc4 <nema_sys_init+0x20>
 8002db8:	2156      	movs	r1, #86	@ 0x56
 8002dba:	4b20      	ldr	r3, [pc, #128]	@ (8002e3c <nema_sys_init+0x98>)
 8002dbc:	4a20      	ldr	r2, [pc, #128]	@ (8002e40 <nema_sys_init+0x9c>)
    assert(error_code == 0);
 8002dbe:	4821      	ldr	r0, [pc, #132]	@ (8002e44 <nema_sys_init+0xa0>)
 8002dc0:	f02f fba2 	bl	8032508 <__assert_func>
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 8002dc4:	2701      	movs	r7, #1
 8002dc6:	2408      	movs	r4, #8
 8002dc8:	4a1f      	ldr	r2, [pc, #124]	@ (8002e48 <nema_sys_init+0xa4>)
 8002dca:	f44f 537c 	mov.w	r3, #16128	@ 0x3f00
 8002dce:	4611      	mov	r1, r2
 8002dd0:	2000      	movs	r0, #0
 8002dd2:	e9cd 7400 	strd	r7, r4, [sp]
 8002dd6:	f01a fc29 	bl	801d62c <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dda:	b118      	cbz	r0, 8002de4 <nema_sys_init+0x40>
 8002ddc:	215a      	movs	r1, #90	@ 0x5a
 8002dde:	4b1b      	ldr	r3, [pc, #108]	@ (8002e4c <nema_sys_init+0xa8>)
 8002de0:	4a17      	ldr	r2, [pc, #92]	@ (8002e40 <nema_sys_init+0x9c>)
 8002de2:	e7ec      	b.n	8002dbe <nema_sys_init+0x1a>
    error_code = tsi_malloc_init_pool_aligned(1, (void*)nemagfx_stencil_buffer_mem, (uintptr_t)nemagfx_stencil_buffer_mem, NEMAGFX_STENCIL_POOL_SIZE, 1, 8);
 8002de4:	4a1a      	ldr	r2, [pc, #104]	@ (8002e50 <nema_sys_init+0xac>)
 8002de6:	f44f 23be 	mov.w	r3, #389120	@ 0x5f000
 8002dea:	4611      	mov	r1, r2
 8002dec:	4638      	mov	r0, r7
 8002dee:	e9cd 7400 	strd	r7, r4, [sp]
 8002df2:	f01a fc1b 	bl	801d62c <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002df6:	4606      	mov	r6, r0
 8002df8:	b118      	cbz	r0, 8002e02 <nema_sys_init+0x5e>
 8002dfa:	215c      	movs	r1, #92	@ 0x5c
 8002dfc:	4b13      	ldr	r3, [pc, #76]	@ (8002e4c <nema_sys_init+0xa8>)
 8002dfe:	4a10      	ldr	r2, [pc, #64]	@ (8002e40 <nema_sys_init+0x9c>)
 8002e00:	e7dd      	b.n	8002dbe <nema_sys_init+0x1a>
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 8002e02:	ad02      	add	r5, sp, #8
 8002e04:	4c13      	ldr	r4, [pc, #76]	@ (8002e54 <nema_sys_init+0xb0>)
 8002e06:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002e0a:	4628      	mov	r0, r5
 8002e0c:	f7ff ffaa 	bl	8002d64 <nema_buffer_create>
 8002e10:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 8002e18:	b91a      	cbnz	r2, 8002e22 <nema_sys_init+0x7e>
 8002e1a:	2160      	movs	r1, #96	@ 0x60
 8002e1c:	4b0e      	ldr	r3, [pc, #56]	@ (8002e58 <nema_sys_init+0xb4>)
 8002e1e:	4a08      	ldr	r2, [pc, #32]	@ (8002e40 <nema_sys_init+0x9c>)
 8002e20:	e7cd      	b.n	8002dbe <nema_sys_init+0x1a>
    error_code = nema_rb_init(&ring_buffer_str, 1);
 8002e22:	4639      	mov	r1, r7
 8002e24:	4620      	mov	r0, r4
 8002e26:	f00d fc31 	bl	801068c <nema_rb_init>
    if (error_code < 0)
 8002e2a:	2800      	cmp	r0, #0
    last_cl_id = 0;
 8002e2c:	bfa4      	itt	ge
 8002e2e:	4b0b      	ldrge	r3, [pc, #44]	@ (8002e5c <nema_sys_init+0xb8>)
 8002e30:	601e      	strge	r6, [r3, #0]
}
 8002e32:	b007      	add	sp, #28
 8002e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e36:	bf00      	nop
 8002e38:	2000b964 	.word	0x2000b964
 8002e3c:	08034dc2 	.word	0x08034dc2
 8002e40:	08034e7b 	.word	0x08034e7b
 8002e44:	08034d67 	.word	0x08034d67
 8002e48:	2006a980 	.word	0x2006a980
 8002e4c:	08034dd7 	.word	0x08034dd7
 8002e50:	2000b980 	.word	0x2000b980
 8002e54:	2000b968 	.word	0x2000b968
 8002e58:	08034de7 	.word	0x08034de7
 8002e5c:	20000048 	.word	0x20000048

08002e60 <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 8002e60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002e62:	2300      	movs	r3, #0
{
 8002e64:	4604      	mov	r4, r0
 8002e66:	4608      	mov	r0, r1
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e68:	4611      	mov	r1, r2
{
 8002e6a:	4616      	mov	r6, r2
    memset(&bo, 0, sizeof(bo));
 8002e6c:	9301      	str	r3, [sp, #4]
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e6e:	f01a fc39 	bl	801d6e4 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002e72:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002e74:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002e78:	9600      	str	r6, [sp, #0]
    bo.fd        = 0;
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create_pool");
 8002e7a:	b928      	cbnz	r0, 8002e88 <nema_buffer_create_pool+0x28>
 8002e7c:	21b3      	movs	r1, #179	@ 0xb3
 8002e7e:	4b06      	ldr	r3, [pc, #24]	@ (8002e98 <nema_buffer_create_pool+0x38>)
 8002e80:	4a06      	ldr	r2, [pc, #24]	@ (8002e9c <nema_buffer_create_pool+0x3c>)
 8002e82:	4807      	ldr	r0, [pc, #28]	@ (8002ea0 <nema_buffer_create_pool+0x40>)
 8002e84:	f02f fb40 	bl	8032508 <__assert_func>

    return bo;
 8002e88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002e90:	4620      	mov	r0, r4
 8002e92:	b004      	add	sp, #16
 8002e94:	bd70      	pop	{r4, r5, r6, pc}
 8002e96:	bf00      	nop
 8002e98:	08034e04 	.word	0x08034e04
 8002e9c:	08034e50 	.word	0x08034e50
 8002ea0:	08034d67 	.word	0x08034d67

08002ea4 <nema_buffer_map>:

void* nema_buffer_map(nema_buffer_t* bo)
{
    return bo->base_virt;
}
 8002ea4:	6880      	ldr	r0, [r0, #8]
 8002ea6:	4770      	bx	lr

08002ea8 <nema_buffer_destroy>:
    UNUSED(bo);
}

void nema_buffer_destroy(nema_buffer_t* bo)
{
    if (bo->fd == -1)
 8002ea8:	6843      	ldr	r3, [r0, #4]
{
 8002eaa:	b510      	push	{r4, lr}
    if (bo->fd == -1)
 8002eac:	3301      	adds	r3, #1
{
 8002eae:	4604      	mov	r4, r0
    if (bo->fd == -1)
 8002eb0:	d009      	beq.n	8002ec6 <nema_buffer_destroy+0x1e>
    {
        return; /* Buffer weren't allocated! */
    }

    tsi_free(bo->base_virt);
 8002eb2:	6880      	ldr	r0, [r0, #8]
 8002eb4:	f01a fc74 	bl	801d7a0 <tsi_free>

    bo->base_virt = (void*)0;
 8002eb8:	2300      	movs	r3, #0
    bo->base_phys = 0;
 8002eba:	e9c4 3302 	strd	r3, r3, [r4, #8]
    bo->size      = 0;
 8002ebe:	6023      	str	r3, [r4, #0]
    bo->fd        = -1; /* Buffer not allocated */
 8002ec0:	f04f 33ff 	mov.w	r3, #4294967295
 8002ec4:	6063      	str	r3, [r4, #4]
}
 8002ec6:	bd10      	pop	{r4, pc}

08002ec8 <nema_buffer_flush>:
uintptr_t nema_buffer_phys(nema_buffer_t* bo)
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t* bo)
 8002ec8:	4770      	bx	lr

08002eca <nema_mutex_lock>:
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);
    /* USER CODE END nema_mutex_lock */

    return retval;
}
 8002eca:	2000      	movs	r0, #0
 8002ecc:	4770      	bx	lr

08002ece <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
 8002ece:	2000      	movs	r0, #0
 8002ed0:	4770      	bx	lr

08002ed2 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002ed2:	4770      	bx	lr

08002ed4 <_ZN23ApplicationFontProviderD0Ev>:
 8002ed4:	b510      	push	{r4, lr}
 8002ed6:	4604      	mov	r4, r0
 8002ed8:	2104      	movs	r1, #4
 8002eda:	f02e f93c 	bl	8031156 <_ZdlPvj>
 8002ede:	4620      	mov	r0, r4
 8002ee0:	bd10      	pop	{r4, pc}

08002ee2 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002ee2:	2901      	cmp	r1, #1
{
 8002ee4:	b508      	push	{r3, lr}
    switch (typography)
 8002ee6:	d006      	beq.n	8002ef6 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002ee8:	2902      	cmp	r1, #2
 8002eea:	d008      	beq.n	8002efe <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002eec:	b959      	cbnz	r1, 8002f06 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002eee:	f000 fc4b 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8002ef2:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002ef4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002ef6:	f000 fc47 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8002efa:	6840      	ldr	r0, [r0, #4]
 8002efc:	e7fa      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002efe:	f000 fc43 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8002f02:	6880      	ldr	r0, [r0, #8]
 8002f04:	e7f6      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002f06:	2000      	movs	r0, #0
 8002f08:	e7f4      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
	...

08002f0c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f0c:	4800      	ldr	r0, [pc, #0]	@ (8002f10 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f0e:	4770      	bx	lr
 8002f10:	08034ea0 	.word	0x08034ea0

08002f14 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f14:	2006      	movs	r0, #6
 8002f16:	4770      	bx	lr

08002f18 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f18:	b513      	push	{r0, r1, r4, lr}
 8002f1a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f1c:	b151      	cbz	r1, 8002f34 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f1e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f20:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f22:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f26:	aa01      	add	r2, sp, #4
 8002f28:	689c      	ldr	r4, [r3, #8]
 8002f2a:	f10d 0303 	add.w	r3, sp, #3
 8002f2e:	47a0      	blx	r4
        return glyph;
    }
 8002f30:	b002      	add	sp, #8
 8002f32:	bd10      	pop	{r4, pc}
            return 0;
 8002f34:	4608      	mov	r0, r1
 8002f36:	e7fb      	b.n	8002f30 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f38 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f38:	89c0      	ldrh	r0, [r0, #14]
 8002f3a:	4770      	bx	lr

08002f3c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f3c:	8a00      	ldrh	r0, [r0, #16]
 8002f3e:	4770      	bx	lr

08002f40 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f40:	88c0      	ldrh	r0, [r0, #6]
 8002f42:	4770      	bx	lr

08002f44 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f44:	8880      	ldrh	r0, [r0, #4]
 8002f46:	4770      	bx	lr

08002f48 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f48:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f4a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f4e:	4770      	bx	lr

08002f50 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f50:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f52:	09c0      	lsrs	r0, r0, #7
 8002f54:	4770      	bx	lr

08002f56 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f56:	2000      	movs	r0, #0
 8002f58:	4770      	bx	lr
	...

08002f5c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f5c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f64 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f60:	4770      	bx	lr
 8002f62:	bf00      	nop
 8002f64:	00000000 	.word	0x00000000

08002f68 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002f68:	4770      	bx	lr

08002f6a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002f6a:	4770      	bx	lr

08002f6c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002f6c:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002f70:	6808      	ldr	r0, [r1, #0]
 8002f72:	6849      	ldr	r1, [r1, #4]
 8002f74:	c303      	stmia	r3!, {r0, r1}
    }
 8002f76:	4770      	bx	lr

08002f78 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002f78:	4770      	bx	lr

08002f7a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002f7a:	4770      	bx	lr

08002f7c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002f7c:	6041      	str	r1, [r0, #4]
    }
 8002f7e:	4770      	bx	lr

08002f80 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002f80:	4770      	bx	lr
	...

08002f84 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f84:	4b06      	ldr	r3, [pc, #24]	@ (8002fa0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002f86:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002f8a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002f8e:	2300      	movs	r3, #0
 8002f90:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen1

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002f94:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002f98:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoGameScreen1ScreenNoTransition();
    }
 8002f9c:	4770      	bx	lr
 8002f9e:	bf00      	nop
 8002fa0:	08003045 	.word	0x08003045

08002fa4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002fa4:	2301      	movs	r3, #1
 8002fa6:	7203      	strb	r3, [r0, #8]
    }
 8002fa8:	4770      	bx	lr

08002faa <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002faa:	4770      	bx	lr

08002fac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002fac:	4770      	bx	lr

08002fae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002fae:	4603      	mov	r3, r0
 8002fb0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002fb2:	6841      	ldr	r1, [r0, #4]
 8002fb4:	68c2      	ldr	r2, [r0, #12]
 8002fb6:	689b      	ldr	r3, [r3, #8]
 8002fb8:	1054      	asrs	r4, r2, #1
 8002fba:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002fbe:	07d2      	lsls	r2, r2, #31
 8002fc0:	bf48      	it	mi
 8002fc2:	590a      	ldrmi	r2, [r1, r4]
    }
 8002fc4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002fc8:	bf48      	it	mi
 8002fca:	58d3      	ldrmi	r3, [r2, r3]
 8002fcc:	4718      	bx	r3

08002fce <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002fce:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002fd0:	6840      	ldr	r0, [r0, #4]
 8002fd2:	b130      	cbz	r0, 8002fe2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002fd4:	689a      	ldr	r2, [r3, #8]
 8002fd6:	b91a      	cbnz	r2, 8002fe0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002fd8:	68d8      	ldr	r0, [r3, #12]
 8002fda:	f000 0001 	and.w	r0, r0, #1
 8002fde:	4770      	bx	lr
 8002fe0:	2001      	movs	r0, #1
    }
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002fe4:	b510      	push	{r4, lr}
 8002fe6:	4604      	mov	r4, r0
 8002fe8:	210c      	movs	r1, #12
 8002fea:	f02e f8b4 	bl	8031156 <_ZdlPvj>
 8002fee:	4620      	mov	r0, r4
 8002ff0:	bd10      	pop	{r4, pc}

08002ff2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002ff2:	b510      	push	{r4, lr}
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	2110      	movs	r1, #16
 8002ff8:	f02e f8ad 	bl	8031156 <_ZdlPvj>
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	bd10      	pop	{r4, pc}

08003000 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003000:	b510      	push	{r4, lr}
 8003002:	4604      	mov	r4, r0
 8003004:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003008:	f02e f8a5 	bl	8031156 <_ZdlPvj>
 800300c:	4620      	mov	r0, r4
 800300e:	bd10      	pop	{r4, pc}

08003010 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003010:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003012:	f00a f835 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800301a:	6803      	ldr	r3, [r0, #0]
 800301c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800301e:	4718      	bx	r3

08003020 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003020:	b510      	push	{r4, lr}
 8003022:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003024:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003028:	b158      	cbz	r0, 8003042 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800302a:	6803      	ldr	r3, [r0, #0]
 800302c:	68db      	ldr	r3, [r3, #12]
 800302e:	4798      	blx	r3
 8003030:	b138      	cbz	r0, 8003042 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003032:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8003036:	6803      	ldr	r3, [r0, #0]
 8003038:	689b      	ldr	r3, [r3, #8]
 800303a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800303c:	2300      	movs	r3, #0
 800303e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8003042:	bd10      	pop	{r4, pc}

08003044 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl()
{
 8003044:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreen1View, GameScreen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003048:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800304c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800304e:	68b0      	ldr	r0, [r6, #8]
 8003050:	6803      	ldr	r3, [r0, #0]
 8003052:	6a1b      	ldr	r3, [r3, #32]
 8003054:	4798      	blx	r3
 8003056:	28e7      	cmp	r0, #231	@ 0xe7
 8003058:	d805      	bhi.n	8003066 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x22>
 800305a:	21a3      	movs	r1, #163	@ 0xa3
 800305c:	4b43      	ldr	r3, [pc, #268]	@ (800316c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x128>)
 800305e:	4a44      	ldr	r2, [pc, #272]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003060:	4844      	ldr	r0, [pc, #272]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
 8003062:	f02f fa51 	bl	8032508 <__assert_func>
 8003066:	6870      	ldr	r0, [r6, #4]
 8003068:	6803      	ldr	r3, [r0, #0]
 800306a:	6a1b      	ldr	r3, [r3, #32]
 800306c:	4798      	blx	r3
 800306e:	280f      	cmp	r0, #15
 8003070:	d803      	bhi.n	800307a <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x36>
 8003072:	21a4      	movs	r1, #164	@ 0xa4
 8003074:	4b40      	ldr	r3, [pc, #256]	@ (8003178 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x134>)
 8003076:	4a3e      	ldr	r2, [pc, #248]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003078:	e7f2      	b.n	8003060 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800307a:	68f0      	ldr	r0, [r6, #12]
 800307c:	6803      	ldr	r3, [r0, #0]
 800307e:	6a1b      	ldr	r3, [r3, #32]
 8003080:	4798      	blx	r3
 8003082:	280b      	cmp	r0, #11
 8003084:	d803      	bhi.n	800308e <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x4a>
 8003086:	21a5      	movs	r1, #165	@ 0xa5
 8003088:	4b3c      	ldr	r3, [pc, #240]	@ (800317c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x138>)
 800308a:	4a39      	ldr	r2, [pc, #228]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 800308c:	e7e8      	b.n	8003060 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800308e:	f009 fff7 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003092:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003184 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003096:	3004      	adds	r0, #4
 8003098:	f00a f817 	bl	800d0ca <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800309c:	f8d9 0000 	ldr.w	r0, [r9]
 80030a0:	b110      	cbz	r0, 80030a8 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80030a2:	6803      	ldr	r3, [r0, #0]
 80030a4:	68db      	ldr	r3, [r3, #12]
 80030a6:	4798      	blx	r3
    if (*currentTrans)
 80030a8:	f8d9 0000 	ldr.w	r0, [r9]
 80030ac:	b110      	cbz	r0, 80030b4 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80030ae:	6803      	ldr	r3, [r0, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	4798      	blx	r3
    if (*currentScreen)
 80030b4:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003188 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x144>
 80030b8:	f8d8 0000 	ldr.w	r0, [r8]
 80030bc:	b110      	cbz	r0, 80030c4 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80030be:	6803      	ldr	r3, [r0, #0]
 80030c0:	695b      	ldr	r3, [r3, #20]
 80030c2:	4798      	blx	r3
    if (*currentPresenter)
 80030c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030c8:	b110      	cbz	r0, 80030d0 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80030ca:	6803      	ldr	r3, [r0, #0]
 80030cc:	685b      	ldr	r3, [r3, #4]
 80030ce:	4798      	blx	r3
    if (*currentScreen)
 80030d0:	f8d8 0000 	ldr.w	r0, [r8]
 80030d4:	b110      	cbz	r0, 80030dc <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80030d6:	6803      	ldr	r3, [r0, #0]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	4798      	blx	r3
    if (*currentPresenter)
 80030dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030e0:	b110      	cbz	r0, 80030e8 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80030e2:	6803      	ldr	r3, [r0, #0]
 80030e4:	689b      	ldr	r3, [r3, #8]
 80030e6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030e8:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80030ea:	2100      	movs	r1, #0
 80030ec:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
 80030ee:	f04f 0b00 	mov.w	fp, #0
 80030f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030f4:	4798      	blx	r3
 80030f6:	4b22      	ldr	r3, [pc, #136]	@ (8003180 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x13c>)
 80030f8:	4604      	mov	r4, r0
 80030fa:	f8c0 b004 	str.w	fp, [r0, #4]
 80030fe:	f880 b008 	strb.w	fp, [r0, #8]
 8003102:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003104:	68b0      	ldr	r0, [r6, #8]
 8003106:	4659      	mov	r1, fp
 8003108:	6803      	ldr	r3, [r0, #0]
 800310a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800310c:	4798      	blx	r3
 800310e:	4605      	mov	r5, r0
 8003110:	f000 fbd2 	bl	80038b8 <_ZN15GameScreen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003114:	6870      	ldr	r0, [r6, #4]
 8003116:	4659      	mov	r1, fp
 8003118:	6803      	ldr	r3, [r0, #0]
 800311a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800311c:	4798      	blx	r3
 800311e:	4606      	mov	r6, r0
 8003120:	4629      	mov	r1, r5
 8003122:	f000 fb77 	bl	8003814 <_ZN20GameScreen1PresenterC1ER15GameScreen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003126:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003128:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800312c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003130:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003134:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003138:	682b      	ldr	r3, [r5, #0]
 800313a:	4628      	mov	r0, r5
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800313c:	f8c6 a008 	str.w	sl, [r6, #8]
 8003140:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003142:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003144:	4798      	blx	r3
    newPresenter->activate();
 8003146:	6833      	ldr	r3, [r6, #0]
 8003148:	4630      	mov	r0, r6
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800314e:	4621      	mov	r1, r4
 8003150:	4628      	mov	r0, r5
 8003152:	f00b ff87 	bl	800f064 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003156:	6823      	ldr	r3, [r4, #0]
 8003158:	4620      	mov	r0, r4
 800315a:	691b      	ldr	r3, [r3, #16]
 800315c:	4798      	blx	r3
    newTransition->invalidate();
 800315e:	4620      	mov	r0, r4
 8003160:	6823      	ldr	r3, [r4, #0]
 8003162:	695b      	ldr	r3, [r3, #20]
}
 8003164:	b001      	add	sp, #4
 8003166:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800316a:	4718      	bx	r3
 800316c:	08034f18 	.word	0x08034f18
 8003170:	08034fa6 	.word	0x08034fa6
 8003174:	08035080 	.word	0x08035080
 8003178:	080350c7 	.word	0x080350c7
 800317c:	0803516a 	.word	0x0803516a
 8003180:	08035284 	.word	0x08035284
 8003184:	20082f48 	.word	0x20082f48
 8003188:	20082f44 	.word	0x20082f44

0800318c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800318c:	b570      	push	{r4, r5, r6, lr}
 800318e:	4604      	mov	r4, r0
 8003190:	460d      	mov	r5, r1
 8003192:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8003194:	f00a f836 	bl	800d204 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 8003198:	2100      	movs	r1, #0
        instance = this;
 800319a:	4b0a      	ldr	r3, [pc, #40]	@ (80031c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x38>)
        : pobject(0), pmemfun(0)
 800319c:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
 80031a0:	601c      	str	r4, [r3, #0]
      model(m)
 80031a2:	4b09      	ldr	r3, [pc, #36]	@ (80031c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3c>)
          pendingScreenTransitionCallback(0)
 80031a4:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
 80031a8:	6023      	str	r3, [r4, #0]
 80031aa:	4b08      	ldr	r3, [pc, #32]	@ (80031cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>)
 80031ac:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
 80031b0:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
 80031b4:	4b06      	ldr	r3, [pc, #24]	@ (80031d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x44>)
 80031b6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80031b8:	6803      	ldr	r3, [r0, #0]
 80031ba:	689b      	ldr	r3, [r3, #8]
 80031bc:	4798      	blx	r3
}
 80031be:	4620      	mov	r0, r4
 80031c0:	bd70      	pop	{r4, r5, r6, pc}
 80031c2:	bf00      	nop
 80031c4:	20082f54 	.word	0x20082f54
 80031c8:	08035230 	.word	0x08035230
 80031cc:	08035218 	.word	0x08035218
 80031d0:	20082f08 	.word	0x20082f08

080031d4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031d4:	4b06      	ldr	r3, [pc, #24]	@ (80031f0 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv+0x1c>)
 80031d6:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031da:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031de:	2300      	movs	r3, #0
 80031e0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80031e4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031e8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031ec:	4770      	bx	lr
 80031ee:	bf00      	nop
 80031f0:	08003045 	.word	0x08003045

080031f4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80031f4:	2000      	movs	r0, #0
 80031f6:	4770      	bx	lr

080031f8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80031f8:	8081      	strh	r1, [r0, #4]
    }
 80031fa:	4770      	bx	lr

080031fc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80031fc:	80c1      	strh	r1, [r0, #6]
    }
 80031fe:	4770      	bx	lr

08003200 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003200:	8101      	strh	r1, [r0, #8]
    }
 8003202:	4770      	bx	lr

08003204 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003204:	8141      	strh	r1, [r0, #10]
    }
 8003206:	4770      	bx	lr

08003208 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003208:	4770      	bx	lr

0800320a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800320a:	4770      	bx	lr

0800320c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800320c:	4770      	bx	lr

0800320e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800320e:	4770      	bx	lr

08003210 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003210:	4770      	bx	lr

08003212 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003212:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8003214:	88c4      	ldrh	r4, [r0, #6]
 8003216:	6803      	ldr	r3, [r0, #0]
 8003218:	1b12      	subs	r2, r2, r4
 800321a:	8884      	ldrh	r4, [r0, #4]
 800321c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800321e:	1b09      	subs	r1, r1, r4
 8003220:	b212      	sxth	r2, r2
    }
 8003222:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003226:	b209      	sxth	r1, r1
 8003228:	4718      	bx	r3

0800322a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800322a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800322e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003230:	f04f 33ff 	mov.w	r3, #4294967295
 8003234:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003236:	6813      	ldr	r3, [r2, #0]
 8003238:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800323a:	6010      	str	r0, [r2, #0]
    }
 800323c:	4770      	bx	lr

0800323e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800323e:	4770      	bx	lr

08003240 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003240:	4770      	bx	lr

08003242 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003242:	4770      	bx	lr

08003244 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003244:	4770      	bx	lr

08003246 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003246:	4770      	bx	lr

08003248 <_ZN19GameScreen1ViewBase16Block1_1_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void Block1_1_Clicked()
    {
        // Override and implement this function in GameScreen1
    }
 8003248:	4770      	bx	lr

0800324a <_ZN19GameScreen1ViewBaseD1Ev>:
}

GameScreen1ViewBase::~GameScreen1ViewBase()
{

}
 800324a:	4770      	bx	lr

0800324c <_ZN19GameScreen1ViewBase11setupScreenEv>:

void GameScreen1ViewBase::setupScreen()
{

}
 800324c:	4770      	bx	lr

0800324e <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800324e:	4770      	bx	lr

08003250 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003250:	4603      	mov	r3, r0
 8003252:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003254:	6844      	ldr	r4, [r0, #4]
 8003256:	68c2      	ldr	r2, [r0, #12]
 8003258:	689b      	ldr	r3, [r3, #8]
 800325a:	1055      	asrs	r5, r2, #1
 800325c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003260:	07d2      	lsls	r2, r2, #31
 8003262:	bf48      	it	mi
 8003264:	5962      	ldrmi	r2, [r4, r5]
    }
 8003266:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003268:	bf48      	it	mi
 800326a:	58d3      	ldrmi	r3, [r2, r3]
 800326c:	4718      	bx	r3

0800326e <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800326e:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003270:	6840      	ldr	r0, [r0, #4]
 8003272:	b130      	cbz	r0, 8003282 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003274:	689a      	ldr	r2, [r3, #8]
 8003276:	b91a      	cbnz	r2, 8003280 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003278:	68d8      	ldr	r0, [r3, #12]
 800327a:	f000 0001 	and.w	r0, r0, #1
 800327e:	4770      	bx	lr
 8003280:	2001      	movs	r0, #1
    }
 8003282:	4770      	bx	lr

08003284 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003284:	b510      	push	{r4, lr}
 8003286:	4604      	mov	r4, r0
 8003288:	2110      	movs	r1, #16
 800328a:	f02d ff64 	bl	8031156 <_ZdlPvj>
 800328e:	4620      	mov	r0, r4
 8003290:	bd10      	pop	{r4, pc}

08003292 <_ZN19GameScreen1ViewBaseD0Ev>:
GameScreen1ViewBase::~GameScreen1ViewBase()
 8003292:	b510      	push	{r4, lr}
 8003294:	4604      	mov	r4, r0
}
 8003296:	21e4      	movs	r1, #228	@ 0xe4
 8003298:	f02d ff5d 	bl	8031156 <_ZdlPvj>
 800329c:	4620      	mov	r0, r4
 800329e:	bd10      	pop	{r4, pc}

080032a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80032a0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032a4:	b112      	cbz	r2, 80032ac <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80032a6:	6803      	ldr	r3, [r0, #0]
 80032a8:	695b      	ldr	r3, [r3, #20]
 80032aa:	4718      	bx	r3
    }
 80032ac:	4770      	bx	lr

080032ae <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Block1_1)
 80032ae:	f100 0298 	add.w	r2, r0, #152	@ 0x98
 80032b2:	428a      	cmp	r2, r1
 80032b4:	d102      	bne.n	80032bc <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Block1_1_Interaction
        //When Block1_1 clicked call virtual function
        //Call Block1_1_Clicked
        Block1_1_Clicked();
 80032b6:	6803      	ldr	r3, [r0, #0]
 80032b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032ba:	4718      	bx	r3
    }
}
 80032bc:	4770      	bx	lr

080032be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032be:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032c2:	b11a      	cbz	r2, 80032cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032c4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80032c8:	b102      	cbz	r2, 80032cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032ca:	6018      	str	r0, [r3, #0]
        }
    }
 80032cc:	4770      	bx	lr

080032ce <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80032ce:	b570      	push	{r4, r5, r6, lr}
 80032d0:	4604      	mov	r4, r0
 80032d2:	4615      	mov	r5, r2
        setX(x);
 80032d4:	6803      	ldr	r3, [r0, #0]
 80032d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d8:	4798      	blx	r3
        setY(y);
 80032da:	6823      	ldr	r3, [r4, #0]
 80032dc:	4629      	mov	r1, r5
 80032de:	4620      	mov	r0, r4
    }
 80032e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80032e4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80032e6:	4718      	bx	r3

080032e8 <_ZN19GameScreen1ViewBaseC1Ev>:
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032ec:	4604      	mov	r4, r0
        : presenter(0)
 80032ee:	2500      	movs	r5, #0
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f0:	4626      	mov	r6, r4
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032f2:	b086      	sub	sp, #24
 80032f4:	f00b fd0a 	bl	800ed0c <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f8:	4b45      	ldr	r3, [pc, #276]	@ (8003410 <_ZN19GameScreen1ViewBaseC1Ev+0x128>)
 80032fa:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032fc:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003300:	4b44      	ldr	r3, [pc, #272]	@ (8003414 <_ZN19GameScreen1ViewBaseC1Ev+0x12c>)
          touchable(false),
 8003302:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
 8003306:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 800330a:	23ff      	movs	r3, #255	@ 0xff
 800330c:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003310:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003314:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 8003318:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800331c:	4a3e      	ldr	r2, [pc, #248]	@ (8003418 <_ZN19GameScreen1ViewBaseC1Ev+0x130>)
 800331e:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
    {
        Image::setBitmap(bmp);
 8003322:	f10d 0a14 	add.w	sl, sp, #20
 8003326:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 800332a:	4651      	mov	r1, sl
        : Widget(), bitmap(bmp), alpha(255)
 800332c:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800332e:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 8003332:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 8003336:	4640      	mov	r0, r8
 8003338:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 800333c:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8003340:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 8003344:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 8003348:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 800334c:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 8003350:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 8003354:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 8003356:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003358:	f8ad 3014 	strh.w	r3, [sp, #20]
 800335c:	f008 fddb 	bl	800bf16 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003360:	4638      	mov	r0, r7
 8003362:	f008 fdb1 	bl	800bec8 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003366:	4b2d      	ldr	r3, [pc, #180]	@ (800341c <_ZN19GameScreen1ViewBaseC1Ev+0x134>)
        setXY(x, y);
 8003368:	462a      	mov	r2, r5
 800336a:	e9c4 3435 	strd	r3, r4, [r4, #212]	@ 0xd4
 800336e:	4b2c      	ldr	r3, [pc, #176]	@ (8003420 <_ZN19GameScreen1ViewBaseC1Ev+0x138>)
 8003370:	4629      	mov	r1, r5
 8003372:	e9c4 3537 	strd	r3, r5, [r4, #220]	@ 0xdc
 8003376:	4630      	mov	r0, r6
 8003378:	f7ff ffa9 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800337c:	4630      	mov	r0, r6
 800337e:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8003382:	f7ff ff3d 	bl	8003200 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003386:	4630      	mov	r0, r6
 8003388:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800338c:	f7ff ff3a 	bl	8003204 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003390:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003394:	f104 0904 	add.w	r9, r4, #4
 8003398:	66a3      	str	r3, [r4, #104]	@ 0x68
 800339a:	4631      	mov	r1, r6
 800339c:	4648      	mov	r0, r9
 800339e:	f007 faed 	bl	800a97c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackScreen.setXY(0, 0);
 80033a2:	462a      	mov	r2, r5
 80033a4:	4629      	mov	r1, r5
 80033a6:	4640      	mov	r0, r8
 80033a8:	f7ff ff91 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 80033ac:	2302      	movs	r3, #2
    BackScreen.setBitmap(touchgfx::Bitmap(BITMAP_BACKSCREEN_ID));
 80033ae:	4651      	mov	r1, sl
 80033b0:	4640      	mov	r0, r8
 80033b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033b6:	f008 fdae 	bl	800bf16 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033ba:	4641      	mov	r1, r8
 80033bc:	4648      	mov	r0, r9
 80033be:	f007 fadd 	bl	800a97c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_1.setXY(20, 19);
 80033c2:	4638      	mov	r0, r7
 80033c4:	2213      	movs	r2, #19
 80033c6:	2114      	movs	r1, #20
 80033c8:	f7ff ff81 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 80033cc:	2303      	movs	r3, #3
    Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80033ce:	4638      	mov	r0, r7
 80033d0:	f8ad 3010 	strh.w	r3, [sp, #16]
 80033d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033d8:	aa03      	add	r2, sp, #12
 80033da:	ab04      	add	r3, sp, #16
 80033dc:	a902      	add	r1, sp, #8
 80033de:	f8cd a000 	str.w	sl, [sp]
 80033e2:	f8ad 5008 	strh.w	r5, [sp, #8]
 80033e6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80033ea:	f008 fcc8 	bl	800bd7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80033ee:	f04f 1305 	mov.w	r3, #327685	@ 0x50005
 80033f2:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    Block1_1.setAction(buttonCallback);
 80033f6:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 80033fa:	4648      	mov	r0, r9
 80033fc:	4639      	mov	r1, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80033fe:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003402:	f007 fabb 	bl	800a97c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003406:	4620      	mov	r0, r4
 8003408:	b006      	add	sp, #24
 800340a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800340e:	bf00      	nop
 8003410:	080352c0 	.word	0x080352c0
 8003414:	08035a30 	.word	0x08035a30
 8003418:	08035b10 	.word	0x08035b10
 800341c:	080352a8 	.word	0x080352a8
 8003420:	080032af 	.word	0x080032af

08003424 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003424:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8003426:	4770      	bx	lr

08003428 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003428:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800342a:	4770      	bx	lr

0800342c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800342c:	4770      	bx	lr

0800342e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800342e:	888b      	ldrh	r3, [r1, #4]
 8003430:	69c0      	ldr	r0, [r0, #28]
 8003432:	0adb      	lsrs	r3, r3, #11
 8003434:	680a      	ldr	r2, [r1, #0]
 8003436:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800343a:	4410      	add	r0, r2
 800343c:	4770      	bx	lr

0800343e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800343e:	b510      	push	{r4, lr}
 8003440:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8003442:	b1ba      	cbz	r2, 8003474 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003444:	7b10      	ldrb	r0, [r2, #12]
 8003446:	b168      	cbz	r0, 8003464 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003448:	7b53      	ldrb	r3, [r2, #13]
 800344a:	7ad2      	ldrb	r2, [r2, #11]
 800344c:	021b      	lsls	r3, r3, #8
 800344e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003452:	431a      	orrs	r2, r3
 8003454:	6a23      	ldr	r3, [r4, #32]
 8003456:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800345a:	881a      	ldrh	r2, [r3, #0]
 800345c:	428a      	cmp	r2, r1
 800345e:	d102      	bne.n	8003466 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003460:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8003464:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003466:	d805      	bhi.n	8003474 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003468:	3801      	subs	r0, #1
 800346a:	b280      	uxth	r0, r0
 800346c:	3304      	adds	r3, #4
 800346e:	2800      	cmp	r0, #0
 8003470:	d1f3      	bne.n	800345a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003472:	e7f7      	b.n	8003464 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003474:	2000      	movs	r0, #0
 8003476:	e7f5      	b.n	8003464 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003478 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003478:	b510      	push	{r4, lr}
 800347a:	4604      	mov	r4, r0
 800347c:	212c      	movs	r1, #44	@ 0x2c
 800347e:	f02d fe6a 	bl	8031156 <_ZdlPvj>
 8003482:	4620      	mov	r0, r4
 8003484:	bd10      	pop	{r4, pc}
	...

08003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003488:	b530      	push	{r4, r5, lr}
 800348a:	4604      	mov	r4, r0
 800348c:	b08b      	sub	sp, #44	@ 0x2c
      arabicTable(formsTable)
 800348e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8003492:	9508      	str	r5, [sp, #32]
 8003494:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8003498:	9507      	str	r5, [sp, #28]
 800349a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800349e:	9506      	str	r5, [sp, #24]
 80034a0:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80034a4:	9505      	str	r5, [sp, #20]
 80034a6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80034aa:	9504      	str	r5, [sp, #16]
 80034ac:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80034b0:	9503      	str	r5, [sp, #12]
 80034b2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80034b6:	9502      	str	r5, [sp, #8]
 80034b8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80034bc:	9501      	str	r5, [sp, #4]
 80034be:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80034c2:	9500      	str	r5, [sp, #0]
 80034c4:	f00b fa28 	bl	800e918 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
}
 80034c8:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80034ca:	4b06      	ldr	r3, [pc, #24]	@ (80034e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80034cc:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80034ce:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80034d0:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80034d2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80034d4:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80034d6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80034d8:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80034da:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80034dc:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80034de:	b00b      	add	sp, #44	@ 0x2c
 80034e0:	bd30      	pop	{r4, r5, pc}
 80034e2:	bf00      	nop
 80034e4:	080352f8 	.word	0x080352f8

080034e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034e8:	4770      	bx	lr
	...

080034ec <_Z23getFont_verdana_10_4bppv>:
{
 80034ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034ee:	4d15      	ldr	r5, [pc, #84]	@ (8003544 <_Z23getFont_verdana_10_4bppv+0x58>)
{
 80034f0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034f2:	e8d5 4faf 	lda	r4, [r5]
 80034f6:	f014 0401 	ands.w	r4, r4, #1
 80034fa:	d120      	bne.n	800353e <_Z23getFont_verdana_10_4bppv+0x52>
 80034fc:	4628      	mov	r0, r5
 80034fe:	f02d fe2c 	bl	803115a <__cxa_guard_acquire>
 8003502:	b1e0      	cbz	r0, 800353e <_Z23getFont_verdana_10_4bppv+0x52>
 8003504:	233f      	movs	r3, #63	@ 0x3f
 8003506:	9309      	str	r3, [sp, #36]	@ 0x24
 8003508:	4b0f      	ldr	r3, [pc, #60]	@ (8003548 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800350a:	2201      	movs	r2, #1
 800350c:	9308      	str	r3, [sp, #32]
 800350e:	4b0f      	ldr	r3, [pc, #60]	@ (800354c <_Z23getFont_verdana_10_4bppv+0x60>)
 8003510:	490f      	ldr	r1, [pc, #60]	@ (8003550 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003512:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003516:	2304      	movs	r3, #4
 8003518:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800351c:	230a      	movs	r3, #10
 800351e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003522:	9300      	str	r3, [sp, #0]
 8003524:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003528:	480a      	ldr	r0, [pc, #40]	@ (8003554 <_Z23getFont_verdana_10_4bppv+0x68>)
 800352a:	940a      	str	r4, [sp, #40]	@ 0x28
 800352c:	9405      	str	r4, [sp, #20]
 800352e:	f7ff ffab 	bl	8003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003532:	4809      	ldr	r0, [pc, #36]	@ (8003558 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003534:	f02f f806 	bl	8032544 <atexit>
 8003538:	4628      	mov	r0, r5
 800353a:	f02d fe1a 	bl	8031172 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800353e:	4805      	ldr	r0, [pc, #20]	@ (8003554 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003540:	b00f      	add	sp, #60	@ 0x3c
 8003542:	bd30      	pop	{r4, r5, pc}
 8003544:	2006e880 	.word	0x2006e880
 8003548:	080388b0 	.word	0x080388b0
 800354c:	080388bc 	.word	0x080388bc
 8003550:	08038880 	.word	0x08038880
 8003554:	2006e884 	.word	0x2006e884
 8003558:	080034e9 	.word	0x080034e9

0800355c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800355c:	4770      	bx	lr
	...

08003560 <_Z23getFont_verdana_20_4bppv>:
{
 8003560:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003562:	4d15      	ldr	r5, [pc, #84]	@ (80035b8 <_Z23getFont_verdana_20_4bppv+0x58>)
{
 8003564:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003566:	e8d5 4faf 	lda	r4, [r5]
 800356a:	f014 0401 	ands.w	r4, r4, #1
 800356e:	d120      	bne.n	80035b2 <_Z23getFont_verdana_20_4bppv+0x52>
 8003570:	4628      	mov	r0, r5
 8003572:	f02d fdf2 	bl	803115a <__cxa_guard_acquire>
 8003576:	b1e0      	cbz	r0, 80035b2 <_Z23getFont_verdana_20_4bppv+0x52>
 8003578:	233f      	movs	r3, #63	@ 0x3f
 800357a:	9309      	str	r3, [sp, #36]	@ 0x24
 800357c:	4b0f      	ldr	r3, [pc, #60]	@ (80035bc <_Z23getFont_verdana_20_4bppv+0x5c>)
 800357e:	2201      	movs	r2, #1
 8003580:	9308      	str	r3, [sp, #32]
 8003582:	4b0f      	ldr	r3, [pc, #60]	@ (80035c0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8003584:	490f      	ldr	r1, [pc, #60]	@ (80035c4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003586:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800358a:	2304      	movs	r3, #4
 800358c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003590:	2314      	movs	r3, #20
 8003592:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003596:	9300      	str	r3, [sp, #0]
 8003598:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800359c:	480a      	ldr	r0, [pc, #40]	@ (80035c8 <_Z23getFont_verdana_20_4bppv+0x68>)
 800359e:	940a      	str	r4, [sp, #40]	@ 0x28
 80035a0:	9405      	str	r4, [sp, #20]
 80035a2:	f7ff ff71 	bl	8003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80035a6:	4809      	ldr	r0, [pc, #36]	@ (80035cc <_Z23getFont_verdana_20_4bppv+0x6c>)
 80035a8:	f02e ffcc 	bl	8032544 <atexit>
 80035ac:	4628      	mov	r0, r5
 80035ae:	f02d fde0 	bl	8031172 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80035b2:	4805      	ldr	r0, [pc, #20]	@ (80035c8 <_Z23getFont_verdana_20_4bppv+0x68>)
 80035b4:	b00f      	add	sp, #60	@ 0x3c
 80035b6:	bd30      	pop	{r4, r5, pc}
 80035b8:	2006e8b0 	.word	0x2006e8b0
 80035bc:	080388b4 	.word	0x080388b4
 80035c0:	080388c0 	.word	0x080388c0
 80035c4:	08038890 	.word	0x08038890
 80035c8:	2006e8b4 	.word	0x2006e8b4
 80035cc:	0800355d 	.word	0x0800355d

080035d0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035d0:	4770      	bx	lr
	...

080035d4 <_Z23getFont_verdana_40_4bppv>:
{
 80035d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035d6:	4d15      	ldr	r5, [pc, #84]	@ (800362c <_Z23getFont_verdana_40_4bppv+0x58>)
{
 80035d8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035da:	e8d5 4faf 	lda	r4, [r5]
 80035de:	f014 0401 	ands.w	r4, r4, #1
 80035e2:	d120      	bne.n	8003626 <_Z23getFont_verdana_40_4bppv+0x52>
 80035e4:	4628      	mov	r0, r5
 80035e6:	f02d fdb8 	bl	803115a <__cxa_guard_acquire>
 80035ea:	b1e0      	cbz	r0, 8003626 <_Z23getFont_verdana_40_4bppv+0x52>
 80035ec:	233f      	movs	r3, #63	@ 0x3f
 80035ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80035f0:	4b0f      	ldr	r3, [pc, #60]	@ (8003630 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80035f2:	2201      	movs	r2, #1
 80035f4:	9308      	str	r3, [sp, #32]
 80035f6:	4b0f      	ldr	r3, [pc, #60]	@ (8003634 <_Z23getFont_verdana_40_4bppv+0x60>)
 80035f8:	490f      	ldr	r1, [pc, #60]	@ (8003638 <_Z23getFont_verdana_40_4bppv+0x64>)
 80035fa:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80035fe:	2304      	movs	r3, #4
 8003600:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003604:	2328      	movs	r3, #40	@ 0x28
 8003606:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800360a:	9300      	str	r3, [sp, #0]
 800360c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003610:	480a      	ldr	r0, [pc, #40]	@ (800363c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003612:	940a      	str	r4, [sp, #40]	@ 0x28
 8003614:	9405      	str	r4, [sp, #20]
 8003616:	f7ff ff37 	bl	8003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800361a:	4809      	ldr	r0, [pc, #36]	@ (8003640 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800361c:	f02e ff92 	bl	8032544 <atexit>
 8003620:	4628      	mov	r0, r5
 8003622:	f02d fda6 	bl	8031172 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003626:	4805      	ldr	r0, [pc, #20]	@ (800363c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003628:	b00f      	add	sp, #60	@ 0x3c
 800362a:	bd30      	pop	{r4, r5, pc}
 800362c:	2006e8e0 	.word	0x2006e8e0
 8003630:	080388b8 	.word	0x080388b8
 8003634:	080388c4 	.word	0x080388c4
 8003638:	080388a0 	.word	0x080388a0
 800363c:	2006e8e4 	.word	0x2006e8e4
 8003640:	080035d1 	.word	0x080035d1

08003644 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003644:	2000      	movs	r0, #0
 8003646:	4770      	bx	lr

08003648 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003648:	2000      	movs	r0, #0
 800364a:	4770      	bx	lr

0800364c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800364c:	b40e      	push	{r1, r2, r3}
 800364e:	b503      	push	{r0, r1, lr}
 8003650:	ab03      	add	r3, sp, #12
 8003652:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003656:	2100      	movs	r1, #0
    va_start(pArg, text);
 8003658:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800365a:	f00a fc5d 	bl	800df18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800365e:	b002      	add	sp, #8
 8003660:	f85d eb04 	ldr.w	lr, [sp], #4
 8003664:	b003      	add	sp, #12
 8003666:	4770      	bx	lr

08003668 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003668:	b40c      	push	{r2, r3}
 800366a:	b507      	push	{r0, r1, r2, lr}
 800366c:	ab04      	add	r3, sp, #16
 800366e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003672:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003674:	f00a fc50 	bl	800df18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003678:	b003      	add	sp, #12
 800367a:	f85d eb04 	ldr.w	lr, [sp], #4
 800367e:	b002      	add	sp, #8
 8003680:	4770      	bx	lr
	...

08003684 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003684:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003686:	b510      	push	{r4, lr}
 8003688:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800368a:	b373      	cbz	r3, 80036ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800368c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800368e:	b92b      	cbnz	r3, 800369c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003690:	21c5      	movs	r1, #197	@ 0xc5
 8003692:	4b18      	ldr	r3, [pc, #96]	@ (80036f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003694:	4a18      	ldr	r2, [pc, #96]	@ (80036f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003696:	4819      	ldr	r0, [pc, #100]	@ (80036fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003698:	f02e ff36 	bl	8032508 <__assert_func>
            return buffer[pos];
 800369c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800369e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80036a2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80036a4:	b30b      	cbz	r3, 80036ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80036a6:	f00c f9a4 	bl	800f9f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80036aa:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80036ac:	2b01      	cmp	r3, #1
 80036ae:	d803      	bhi.n	80036b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80036b0:	21cb      	movs	r1, #203	@ 0xcb
 80036b2:	4b13      	ldr	r3, [pc, #76]	@ (8003700 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80036b4:	4a13      	ldr	r2, [pc, #76]	@ (8003704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80036b6:	e7ee      	b.n	8003696 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80036b8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80036ba:	f640 103f 	movw	r0, #2367	@ 0x93f
 80036be:	1c53      	adds	r3, r2, #1
 80036c0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80036c2:	4619      	mov	r1, r3
 80036c4:	2b09      	cmp	r3, #9
 80036c6:	bf88      	it	hi
 80036c8:	f1a3 010a 	subhi.w	r1, r3, #10
 80036cc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80036d0:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80036d2:	4281      	cmp	r1, r0
 80036d4:	d109      	bne.n	80036ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80036d6:	2b0a      	cmp	r3, #10
 80036d8:	bf28      	it	cs
 80036da:	2300      	movcs	r3, #0
 80036dc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
            return buffer[pos];
 80036e0:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80036e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80036e6:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80036e8:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80036ea:	4620      	mov	r0, r4
}
 80036ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80036f0:	f00c b882 	b.w	800f7f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80036f4:	08035358 	.word	0x08035358
 80036f8:	08035361 	.word	0x08035361
 80036fc:	0803540c 	.word	0x0803540c
 8003700:	08035456 	.word	0x08035456
 8003704:	08035464 	.word	0x08035464

08003708 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003708:	f00c b83d 	b.w	800f786 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800370c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800370c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800370e:	bb18      	cbnz	r0, 8003758 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003710:	4b12      	ldr	r3, [pc, #72]	@ (800375c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003712:	4813      	ldr	r0, [pc, #76]	@ (8003760 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003714:	681c      	ldr	r4, [r3, #0]
 8003716:	4913      	ldr	r1, [pc, #76]	@ (8003764 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003718:	b1b4      	cbz	r4, 8003748 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800371a:	6822      	ldr	r2, [r4, #0]
 800371c:	4422      	add	r2, r4
 800371e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003720:	6862      	ldr	r2, [r4, #4]
 8003722:	4422      	add	r2, r4
 8003724:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003726:	68a2      	ldr	r2, [r4, #8]
 8003728:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800372a:	2200      	movs	r2, #0
 800372c:	4b0e      	ldr	r3, [pc, #56]	@ (8003768 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800372e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003730:	f000 f82a 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8003734:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003736:	f000 f825 	bl	8003784 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800373a:	4b0c      	ldr	r3, [pc, #48]	@ (800376c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800373c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800373e:	4b0c      	ldr	r3, [pc, #48]	@ (8003770 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003740:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003742:	4b0c      	ldr	r3, [pc, #48]	@ (8003774 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003744:	8018      	strh	r0, [r3, #0]
    }
}
 8003746:	e007      	b.n	8003758 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003748:	4b0b      	ldr	r3, [pc, #44]	@ (8003778 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800374a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800374c:	4b0b      	ldr	r3, [pc, #44]	@ (800377c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800374e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003750:	4b0b      	ldr	r3, [pc, #44]	@ (8003780 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003752:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003754:	2c00      	cmp	r4, #0
 8003756:	d1e8      	bne.n	800372a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003758:	bd38      	pop	{r3, r4, r5, pc}
 800375a:	bf00      	nop
 800375c:	2006e91c 	.word	0x2006e91c
 8003760:	2006e914 	.word	0x2006e914
 8003764:	2006e910 	.word	0x2006e910
 8003768:	2006e918 	.word	0x2006e918
 800376c:	20082f58 	.word	0x20082f58
 8003770:	20082f60 	.word	0x20082f60
 8003774:	20082f5c 	.word	0x20082f5c
 8003778:	080388cc 	.word	0x080388cc
 800377c:	080388c8 	.word	0x080388c8
 8003780:	080388d0 	.word	0x080388d0

08003784 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8003784:	2000      	movs	r0, #0
 8003786:	4770      	bx	lr

08003788 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003788:	4800      	ldr	r0, [pc, #0]	@ (800378c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800378a:	4770      	bx	lr
 800378c:	2006e920 	.word	0x2006e920

08003790 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003790:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8003792:	f7ff fee5 	bl	8003560 <_Z23getFont_verdana_20_4bppv>
};
 8003796:	4c04      	ldr	r4, [pc, #16]	@ (80037a8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8003798:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800379a:	f7ff ff1b 	bl	80035d4 <_Z23getFont_verdana_40_4bppv>
};
 800379e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80037a0:	f7ff fea4 	bl	80034ec <_Z23getFont_verdana_10_4bppv>
};
 80037a4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80037a6:	bd10      	pop	{r4, pc}
 80037a8:	2006e920 	.word	0x2006e920

080037ac <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80037ac:	b510      	push	{r4, lr}
    pointArray = 0;
 80037ae:	2400      	movs	r4, #0
 80037b0:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80037b2:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80037b4:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80037b6:	601c      	str	r4, [r3, #0]
}
 80037b8:	bd10      	pop	{r4, pc}

080037ba <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80037ba:	4770      	bx	lr

080037bc <_ZN19FrontendApplicationD0Ev>:
 80037bc:	b510      	push	{r4, lr}
 80037be:	4604      	mov	r4, r0
 80037c0:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80037c4:	f02d fcc7 	bl	8031156 <_ZdlPvj>
 80037c8:	4620      	mov	r0, r4
 80037ca:	bd10      	pop	{r4, pc}

080037cc <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80037cc:	b510      	push	{r4, lr}
 80037ce:	4604      	mov	r4, r0
    {
        model.tick();
 80037d0:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80037d4:	f000 f8ae 	bl	8003934 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80037d8:	4620      	mov	r0, r4
    }
 80037da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80037de:	f009 bcd1 	b.w	800d184 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080037e4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80037e4:	b510      	push	{r4, lr}
 80037e6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80037e8:	f7ff fcd0 	bl	800318c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80037ec:	4b01      	ldr	r3, [pc, #4]	@ (80037f4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 80037ee:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 80037f0:	6023      	str	r3, [r4, #0]
}
 80037f2:	bd10      	pop	{r4, pc}
 80037f4:	08035540 	.word	0x08035540

080037f8 <_ZN20GameScreen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreen1Presenter() {}
 80037f8:	4770      	bx	lr

080037fa <_ZThn4_N20GameScreen1PresenterD1Ev>:
 80037fa:	3804      	subs	r0, #4
 80037fc:	4770      	bx	lr

080037fe <_ZN20GameScreen1Presenter10deactivateEv>:
}

void GameScreen1Presenter::activate()
{

}
 80037fe:	4770      	bx	lr

08003800 <_ZN20GameScreen1PresenterD0Ev>:
 8003800:	b510      	push	{r4, lr}
 8003802:	4604      	mov	r4, r0
 8003804:	2110      	movs	r1, #16
 8003806:	f02d fca6 	bl	8031156 <_ZdlPvj>
 800380a:	4620      	mov	r0, r4
 800380c:	bd10      	pop	{r4, pc}

0800380e <_ZThn4_N20GameScreen1PresenterD0Ev>:
 800380e:	f1a0 0004 	sub.w	r0, r0, #4
 8003812:	e7f5      	b.n	8003800 <_ZN20GameScreen1PresenterD0Ev>

08003814 <_ZN20GameScreen1PresenterC1ER15GameScreen1View>:
    ModelListener() : model(0) {}
 8003814:	2200      	movs	r2, #0
 8003816:	6082      	str	r2, [r0, #8]
    : view(v)
 8003818:	4a02      	ldr	r2, [pc, #8]	@ (8003824 <_ZN20GameScreen1PresenterC1ER15GameScreen1View+0x10>)
 800381a:	60c1      	str	r1, [r0, #12]
 800381c:	6002      	str	r2, [r0, #0]
 800381e:	3218      	adds	r2, #24
 8003820:	6042      	str	r2, [r0, #4]
}
 8003822:	4770      	bx	lr
 8003824:	08035594 	.word	0x08035594

08003828 <_ZN15GameScreen1View14tearDownScreenEv>:
}

void GameScreen1View::tearDownScreen()
{
    GameScreen1ViewBase::tearDownScreen();
}
 8003828:	4770      	bx	lr
	...

0800382c <_ZN15GameScreen1ViewD1Ev>:

class GameScreen1View : public GameScreen1ViewBase
{
public:
    GameScreen1View();
    virtual ~GameScreen1View() {}
 800382c:	b510      	push	{r4, lr}
 800382e:	4604      	mov	r4, r0
 8003830:	4b02      	ldr	r3, [pc, #8]	@ (800383c <_ZN15GameScreen1ViewD1Ev+0x10>)
 8003832:	6003      	str	r3, [r0, #0]
 8003834:	f7ff fd09 	bl	800324a <_ZN19GameScreen1ViewBaseD1Ev>
 8003838:	4620      	mov	r0, r4
 800383a:	bd10      	pop	{r4, pc}
 800383c:	080355bc 	.word	0x080355bc

08003840 <_ZN15GameScreen1ViewD0Ev>:
 8003840:	b510      	push	{r4, lr}
 8003842:	4604      	mov	r4, r0
 8003844:	f7ff fff2 	bl	800382c <_ZN15GameScreen1ViewD1Ev>
 8003848:	4620      	mov	r0, r4
 800384a:	21e8      	movs	r1, #232	@ 0xe8
 800384c:	f02d fc83 	bl	8031156 <_ZdlPvj>
 8003850:	4620      	mov	r0, r4
 8003852:	bd10      	pop	{r4, pc}

08003854 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>:
    GameScreen1View::block1_1_Cliecked_number++;
    if (GameScreen1View::block1_1_Cliecked_number == 5) GameScreen1View::block1_1_Cliecked_number = 0;
}

void GameScreen1View::updateBlockImage(touchgfx::ButtonWithIcon& blockImage, GameScreen1View::BlockState blockState)
{
 8003854:	b530      	push	{r4, r5, lr}
    switch (blockState)
    {
    case BlockState::Close:
        blockImage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 8003856:	680b      	ldr	r3, [r1, #0]
{
 8003858:	b087      	sub	sp, #28
        blockImage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 800385a:	6edd      	ldr	r5, [r3, #108]	@ 0x6c
{
 800385c:	460c      	mov	r4, r1
 800385e:	ab05      	add	r3, sp, #20
    switch (blockState)
 8003860:	2a04      	cmp	r2, #4
 8003862:	d827      	bhi.n	80038b4 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x60>
 8003864:	e8df f002 	tbb	[pc, r2]
 8003868:	221a0326 	.word	0x221a0326
 800386c:	24          	.byte	0x24
 800386d:	00          	.byte	0x00
 800386e:	2200      	movs	r2, #0
 8003870:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003874:	f8ad 200c 	strh.w	r2, [sp, #12]
 8003878:	2203      	movs	r2, #3
                              touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER2_ID),
                              touchgfx::Bitmap(BITMAP_INVALID),
                              touchgfx::Bitmap(BITMAP_INVALID));
        break;
    default:
        blockImage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 800387a:	4620      	mov	r0, r4
 800387c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8003880:	f8ad 2014 	strh.w	r2, [sp, #20]
 8003884:	9300      	str	r3, [sp, #0]
 8003886:	aa03      	add	r2, sp, #12
 8003888:	ab04      	add	r3, sp, #16
 800388a:	a902      	add	r1, sp, #8
 800388c:	47a8      	blx	r5
                              touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
                              touchgfx::Bitmap(BITMAP_INVALID),
                              touchgfx::Bitmap(BITMAP_INVALID));
        break;
    }
    blockImage.invalidate();
 800388e:	4620      	mov	r0, r4
 8003890:	6823      	ldr	r3, [r4, #0]
 8003892:	695b      	ldr	r3, [r3, #20]
}
 8003894:	b007      	add	sp, #28
 8003896:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    blockImage.invalidate();
 800389a:	4718      	bx	r3
 800389c:	2201      	movs	r2, #1
 800389e:	f8ad 2008 	strh.w	r2, [sp, #8]
 80038a2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80038a6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80038aa:	e7e6      	b.n	800387a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x26>
 80038ac:	2204      	movs	r2, #4
 80038ae:	e7f6      	b.n	800389e <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x4a>
 80038b0:	2205      	movs	r2, #5
 80038b2:	e7f4      	b.n	800389e <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x4a>
 80038b4:	2200      	movs	r2, #0
 80038b6:	e7f2      	b.n	800389e <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x4a>

080038b8 <_ZN15GameScreen1ViewC1Ev>:
GameScreen1View::GameScreen1View()
 80038b8:	b510      	push	{r4, lr}
 80038ba:	4604      	mov	r4, r0
 80038bc:	f7ff fd14 	bl	80032e8 <_ZN19GameScreen1ViewBaseC1Ev>
 80038c0:	4621      	mov	r1, r4
 80038c2:	4b06      	ldr	r3, [pc, #24]	@ (80038dc <_ZN15GameScreen1ViewC1Ev+0x24>)
    updateBlockImage(Block1_1, BlockState::CloseWithFlag);
 80038c4:	4620      	mov	r0, r4
GameScreen1View::GameScreen1View()
 80038c6:	f841 3b98 	str.w	r3, [r1], #152
    updateBlockImage(Block1_1, BlockState::CloseWithFlag);
 80038ca:	2201      	movs	r2, #1
 80038cc:	f7ff ffc2 	bl	8003854 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    GameScreen1View::block1_1_Cliecked_number = 0;
 80038d0:	2300      	movs	r3, #0
}
 80038d2:	4620      	mov	r0, r4
    GameScreen1View::block1_1_Cliecked_number = 0;
 80038d4:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
}
 80038d8:	bd10      	pop	{r4, pc}
 80038da:	bf00      	nop
 80038dc:	080355bc 	.word	0x080355bc

080038e0 <_ZN15GameScreen1View16Block1_1_ClickedEv>:
    if (GameScreen1View::block1_1_Cliecked_number == 0) updateBlockImage(Block1_1, BlockState::Close);
 80038e0:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
{
 80038e4:	b510      	push	{r4, lr}
 80038e6:	4604      	mov	r4, r0
    if (GameScreen1View::block1_1_Cliecked_number == 0) updateBlockImage(Block1_1, BlockState::Close);
 80038e8:	b96a      	cbnz	r2, 8003906 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x26>
 80038ea:	f100 0198 	add.w	r1, r0, #152	@ 0x98
    else if (GameScreen1View::block1_1_Cliecked_number == 4) updateBlockImage(Block1_1, BlockState::OpenNumber2);
 80038ee:	f7ff ffb1 	bl	8003854 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    GameScreen1View::block1_1_Cliecked_number++;
 80038f2:	f8d4 20e4 	ldr.w	r2, [r4, #228]	@ 0xe4
    if (GameScreen1View::block1_1_Cliecked_number == 5) GameScreen1View::block1_1_Cliecked_number = 0;
 80038f6:	2a04      	cmp	r2, #4
    GameScreen1View::block1_1_Cliecked_number++;
 80038f8:	f102 0301 	add.w	r3, r2, #1
    if (GameScreen1View::block1_1_Cliecked_number == 5) GameScreen1View::block1_1_Cliecked_number = 0;
 80038fc:	bf08      	it	eq
 80038fe:	2300      	moveq	r3, #0
 8003900:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
}
 8003904:	bd10      	pop	{r4, pc}
    else if (GameScreen1View::block1_1_Cliecked_number == 1) updateBlockImage(Block1_1, BlockState::CloseWithFlag);
 8003906:	3a01      	subs	r2, #1
 8003908:	2a03      	cmp	r2, #3
 800390a:	d8f2      	bhi.n	80038f2 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x12>
 800390c:	e8df f002 	tbb	[pc, r2]
 8003910:	0b090702 	.word	0x0b090702
 8003914:	2201      	movs	r2, #1
    else if (GameScreen1View::block1_1_Cliecked_number == 4) updateBlockImage(Block1_1, BlockState::OpenNumber2);
 8003916:	4620      	mov	r0, r4
 8003918:	f104 0198 	add.w	r1, r4, #152	@ 0x98
 800391c:	e7e7      	b.n	80038ee <_ZN15GameScreen1View16Block1_1_ClickedEv+0xe>
    else if (GameScreen1View::block1_1_Cliecked_number == 2) updateBlockImage(Block1_1, BlockState::OpenNumber0);
 800391e:	2202      	movs	r2, #2
 8003920:	e7f9      	b.n	8003916 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x36>
    else if (GameScreen1View::block1_1_Cliecked_number == 3) updateBlockImage(Block1_1, BlockState::OpenNumber1);
 8003922:	2203      	movs	r2, #3
 8003924:	e7f7      	b.n	8003916 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x36>
    else if (GameScreen1View::block1_1_Cliecked_number == 4) updateBlockImage(Block1_1, BlockState::OpenNumber2);
 8003926:	2204      	movs	r2, #4
 8003928:	e7f5      	b.n	8003916 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x36>

0800392a <_ZN15GameScreen1View11setupScreenEv>:
    GameScreen1ViewBase::setupScreen();
 800392a:	f7ff bc8f 	b.w	800324c <_ZN19GameScreen1ViewBase11setupScreenEv>

0800392e <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800392e:	2200      	movs	r2, #0
 8003930:	6002      	str	r2, [r0, #0]
{

}
 8003932:	4770      	bx	lr

08003934 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003934:	4770      	bx	lr

08003936 <MX66UW1G45G_EnableDTRMemoryMappedMode>:
  * @param  AddressWidth Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval XSPI memory status
  */
int32_t MX66UW1G45G_EnableDTRMemoryMappedMode(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode)
{
 8003936:	b510      	push	{r4, lr}
 8003938:	b096      	sub	sp, #88	@ 0x58
 800393a:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  XSPI_RegularCmdTypeDef s_command = {0};
 800393c:	224c      	movs	r2, #76	@ 0x4c
 800393e:	2100      	movs	r1, #0
 8003940:	a803      	add	r0, sp, #12
 8003942:	f02e ffe8 	bl	8032916 <memset>
  XSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003946:	2300      	movs	r3, #0
 8003948:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the read command */
  s_command.OperationType = HAL_XSPI_OPTYPE_READ_CFG;
 800394c:	2301      	movs	r3, #1
 800394e:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003950:	2304      	movs	r3, #4
  s_command.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003952:	f04f 0c08 	mov.w	ip, #8
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003956:	9305      	str	r3, [sp, #20]
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003958:	2310      	movs	r3, #16
 800395a:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction = MX66UW1G45G_OCTA_READ_DTR_CMD;
 800395e:	f64e 6311 	movw	r3, #60945	@ 0xee11
 8003962:	9304      	str	r3, [sp, #16]
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 8003964:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  s_command.AddressDTRMode = HAL_XSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003968:	f44f 6100 	mov.w	r1, #2048	@ 0x800
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 800396c:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 800396e:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003972:	e9cd 310a 	strd	r3, r1, [sp, #40]	@ 0x28
  s_command.AlternateBytesMode = HAL_XSPI_ALT_BYTES_NONE;
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 8003976:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  s_command.DataDTRMode = HAL_XSPI_DATA_DTR_ENABLE;
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 800397a:	f04f 6c00 	mov.w	ip, #134217728	@ 0x8000000
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 800397e:	9310      	str	r3, [sp, #64]	@ 0x40
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003980:	2306      	movs	r3, #6
 8003982:	e9cd c312 	strd	ip, r3, [sp, #72]	@ 0x48
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003986:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800398a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800398e:	4620      	mov	r0, r4
 8003990:	a902      	add	r1, sp, #8
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003992:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003994:	f004 fdd2 	bl	800853c <HAL_XSPI_Command>
 8003998:	b118      	cbz	r0, 80039a2 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX66UW1G45G_ERROR;
 800399a:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 800399e:	b016      	add	sp, #88	@ 0x58
 80039a0:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_XSPI_OPTYPE_WRITE_CFG;
 80039a2:	2302      	movs	r3, #2
 80039a4:	9302      	str	r3, [sp, #8]
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 80039a6:	f241 23ed 	movw	r3, #4845	@ 0x12ed
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;
 80039aa:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039ae:	f241 3288 	movw	r2, #5000	@ 0x1388
 80039b2:	4620      	mov	r0, r4
 80039b4:	a902      	add	r1, sp, #8
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 80039b6:	9304      	str	r3, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039b8:	f004 fdc0 	bl	800853c <HAL_XSPI_Command>
 80039bc:	2800      	cmp	r0, #0
 80039be:	d1ec      	bne.n	800399a <MX66UW1G45G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 80039c0:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 80039c2:	4669      	mov	r1, sp
 80039c4:	4620      	mov	r0, r4
 80039c6:	f004 fee6 	bl	8008796 <HAL_XSPI_MemoryMapped>
 80039ca:	3800      	subs	r0, #0
 80039cc:	bf18      	it	ne
 80039ce:	2001      	movne	r0, #1
 80039d0:	4240      	negs	r0, r0
 80039d2:	e7e4      	b.n	800399e <MX66UW1G45G_EnableDTRMemoryMappedMode+0x68>

080039d4 <MX66UW1G45G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_WriteEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 80039d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039d8:	460c      	mov	r4, r1
 80039da:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef s_command = {0};
 80039dc:	2100      	movs	r1, #0
{
 80039de:	4607      	mov	r7, r0
 80039e0:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 80039e2:	a806      	add	r0, sp, #24
 80039e4:	2250      	movs	r2, #80	@ 0x50
 80039e6:	f02e ff96 	bl	8032916 <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 80039ea:	2214      	movs	r2, #20
 80039ec:	2100      	movs	r1, #0
 80039ee:	a801      	add	r0, sp, #4
 80039f0:	f02e ff91 	bl	8032916 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 80039f4:	b934      	cbnz	r4, 8003a04 <MX66UW1G45G_WriteEnable+0x30>
 80039f6:	2e01      	cmp	r6, #1
 80039f8:	d164      	bne.n	8003ac4 <MX66UW1G45G_WriteEnable+0xf0>
  {
    return MX66UW1G45G_ERROR;
 80039fa:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 80039fe:	b01a      	add	sp, #104	@ 0x68
 8003a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003a04:	2304      	movs	r3, #4
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003a06:	1e71      	subs	r1, r6, #1
 8003a08:	424d      	negs	r5, r1
 8003a0a:	414d      	adcs	r5, r1
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003a0c:	2c00      	cmp	r4, #0
 8003a0e:	bf14      	ite	ne
 8003a10:	f04f 0801 	movne.w	r8, #1
 8003a14:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003a18:	9309      	str	r3, [sp, #36]	@ 0x24
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003a1a:	ea4f 03c5 	mov.w	r3, r5, lsl #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a1e:	930b      	str	r3, [sp, #44]	@ 0x2c
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003a20:	ea4f 1308 	mov.w	r3, r8, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003a24:	930a      	str	r3, [sp, #40]	@ 0x28
                              : MX66UW1G45G_OCTA_WRITE_ENABLE_CMD;
 8003a26:	f240 63f9 	movw	r3, #1785	@ 0x6f9
 8003a2a:	bf08      	it	eq
 8003a2c:	2306      	moveq	r3, #6
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a2e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a32:	4638      	mov	r0, r7
 8003a34:	a906      	add	r1, sp, #24
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003a36:	9308      	str	r3, [sp, #32]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a38:	f004 fd80 	bl	800853c <HAL_XSPI_Command>
 8003a3c:	2800      	cmp	r0, #0
 8003a3e:	d1dc      	bne.n	80039fa <MX66UW1G45G_WriteEnable+0x26>
                              : MX66UW1G45G_OCTA_READ_STATUS_REG_CMD;
 8003a40:	2c00      	cmp	r4, #0
 8003a42:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 8003a46:	bf08      	it	eq
 8003a48:	2305      	moveq	r3, #5
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003a4a:	9308      	str	r3, [sp, #32]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 8003a4c:	ea4f 2388 	mov.w	r3, r8, lsl #10
 8003a50:	930d      	str	r3, [sp, #52]	@ 0x34
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003a52:	ea4f 23c5 	mov.w	r3, r5, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a56:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003a58:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003a5c:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003a5e:	bf0c      	ite	eq
 8003a60:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003a64:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 8003a68:	9314      	str	r3, [sp, #80]	@ 0x50
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003a6a:	ea4f 63c5 	mov.w	r3, r5, lsl #27
  s_command.Address = 0U;
 8003a6e:	900c      	str	r0, [sp, #48]	@ 0x30
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003a70:	9316      	str	r3, [sp, #88]	@ 0x58
                              : ((Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a72:	d003      	beq.n	8003a7c <MX66UW1G45G_WriteEnable+0xa8>
 8003a74:	2e01      	cmp	r6, #1
 8003a76:	bf0c      	ite	eq
 8003a78:	2405      	moveq	r4, #5
 8003a7a:	2404      	movne	r4, #4
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a7c:	2e01      	cmp	r6, #1
 8003a7e:	bf0c      	ite	eq
 8003a80:	2302      	moveq	r3, #2
 8003a82:	2301      	movne	r3, #1
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a84:	076d      	lsls	r5, r5, #29
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a86:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a8a:	4638      	mov	r0, r7
 8003a8c:	a906      	add	r1, sp, #24
  s_command.DummyCycles = (Mode == MX66UW1G45G_SPI_MODE)
 8003a8e:	9417      	str	r4, [sp, #92]	@ 0x5c
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a90:	9315      	str	r3, [sp, #84]	@ 0x54
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a92:	9518      	str	r5, [sp, #96]	@ 0x60
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a94:	f004 fd52 	bl	800853c <HAL_XSPI_Command>
 8003a98:	2800      	cmp	r0, #0
 8003a9a:	d1ae      	bne.n	80039fa <MX66UW1G45G_WriteEnable+0x26>
  s_config.MatchValue = 2U;
 8003a9c:	2302      	movs	r3, #2
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a9e:	2210      	movs	r2, #16
  s_config.MatchMask = 2U;
 8003aa0:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003aa4:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_config.MatchMode = HAL_XSPI_MATCH_MODE_AND;
 8003aa8:	9003      	str	r0, [sp, #12]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003aaa:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003aae:	4638      	mov	r0, r7
 8003ab0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ab4:	a901      	add	r1, sp, #4
 8003ab6:	f004 fe19 	bl	80086ec <HAL_XSPI_AutoPolling>
 8003aba:	3800      	subs	r0, #0
 8003abc:	bf18      	it	ne
 8003abe:	2001      	movne	r0, #1
 8003ac0:	4240      	negs	r0, r0
 8003ac2:	e79c      	b.n	80039fe <MX66UW1G45G_WriteEnable+0x2a>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003ac4:	2301      	movs	r3, #1
 8003ac6:	e79e      	b.n	8003a06 <MX66UW1G45G_WriteEnable+0x32>

08003ac8 <MX66UW1G45G_WriteCfg2Register>:
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX66UW1G45G_WriteCfg2Register(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode,
                                      MX66UW1G45G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 8003ac8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003aca:	460e      	mov	r6, r1
 8003acc:	b095      	sub	sp, #84	@ 0x54
 8003ace:	4605      	mov	r5, r0
 8003ad0:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003ad2:	2100      	movs	r1, #0
 8003ad4:	2250      	movs	r2, #80	@ 0x50
 8003ad6:	4668      	mov	r0, sp
{
 8003ad8:	461f      	mov	r7, r3
  XSPI_RegularCmdTypeDef s_command = {0};
 8003ada:	f02e ff1c 	bl	8032916 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003ade:	b92e      	cbnz	r6, 8003aec <MX66UW1G45G_WriteCfg2Register+0x24>
 8003ae0:	2c01      	cmp	r4, #1
 8003ae2:	d145      	bne.n	8003b70 <MX66UW1G45G_WriteCfg2Register+0xa8>
  {
    return MX66UW1G45G_ERROR;
 8003ae4:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003ae8:	b015      	add	sp, #84	@ 0x54
 8003aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003aec:	2304      	movs	r3, #4
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003aee:	9303      	str	r3, [sp, #12]
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003af0:	1e63      	subs	r3, r4, #1
 8003af2:	425a      	negs	r2, r3
 8003af4:	415a      	adcs	r2, r3
 8003af6:	00d3      	lsls	r3, r2, #3
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003af8:	2e00      	cmp	r6, #0
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003afa:	9305      	str	r3, [sp, #20]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003afc:	bf14      	ite	ne
 8003afe:	2301      	movne	r3, #1
 8003b00:	2300      	moveq	r3, #0
 8003b02:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003b06:	9304      	str	r3, [sp, #16]
                              : MX66UW1G45G_OCTA_WRITE_CFG_REG2_CMD;
 8003b08:	f247 238d 	movw	r3, #29325	@ 0x728d
 8003b0c:	bf08      	it	eq
 8003b0e:	2372      	moveq	r3, #114	@ 0x72
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003b10:	9302      	str	r3, [sp, #8]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_1_LINE : HAL_XSPI_ADDRESS_8_LINES;
 8003b12:	bf0c      	ite	eq
 8003b14:	f44f 7380 	moveq.w	r3, #256	@ 0x100
 8003b18:	f44f 6380 	movne.w	r3, #1024	@ 0x400
 8003b1c:	9307      	str	r3, [sp, #28]
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003b1e:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003b22:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003b24:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003b28:	9308      	str	r3, [sp, #32]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003b2a:	bf0c      	ite	eq
 8003b2c:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003b30:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
                              : HAL_XSPI_DATA_DTR_DISABLE;
 8003b34:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.Address = WriteAddr;
 8003b38:	9706      	str	r7, [sp, #24]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003b3a:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003b3c:	9210      	str	r2, [sp, #64]	@ 0x40
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b3e:	d019      	beq.n	8003b74 <MX66UW1G45G_WriteCfg2Register+0xac>
 8003b40:	2c01      	cmp	r4, #1
 8003b42:	bf14      	ite	ne
 8003b44:	2301      	movne	r3, #1
 8003b46:	2302      	moveq	r3, #2
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b48:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b4c:	4669      	mov	r1, sp
 8003b4e:	4628      	mov	r0, r5
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b50:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b52:	f004 fcf3 	bl	800853c <HAL_XSPI_Command>
 8003b56:	2800      	cmp	r0, #0
 8003b58:	d1c4      	bne.n	8003ae4 <MX66UW1G45G_WriteCfg2Register+0x1c>
  if (HAL_XSPI_Transmit(Ctx, &Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b5a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b5e:	4628      	mov	r0, r5
 8003b60:	a91a      	add	r1, sp, #104	@ 0x68
 8003b62:	f004 fd7f 	bl	8008664 <HAL_XSPI_Transmit>
 8003b66:	3800      	subs	r0, #0
 8003b68:	bf18      	it	ne
 8003b6a:	2001      	movne	r0, #1
 8003b6c:	4240      	negs	r0, r0
 8003b6e:	e7bb      	b.n	8003ae8 <MX66UW1G45G_WriteCfg2Register+0x20>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b70:	2301      	movs	r3, #1
 8003b72:	e7bc      	b.n	8003aee <MX66UW1G45G_WriteCfg2Register+0x26>
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b74:	2301      	movs	r3, #1
 8003b76:	e7e7      	b.n	8003b48 <MX66UW1G45G_WriteCfg2Register+0x80>

08003b78 <MX66UW1G45G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003b78:	b570      	push	{r4, r5, r6, lr}
 8003b7a:	460d      	mov	r5, r1
 8003b7c:	b094      	sub	sp, #80	@ 0x50
 8003b7e:	4606      	mov	r6, r0
 8003b80:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003b82:	2100      	movs	r1, #0
 8003b84:	2250      	movs	r2, #80	@ 0x50
 8003b86:	4668      	mov	r0, sp
 8003b88:	f02e fec5 	bl	8032916 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003b8c:	bb05      	cbnz	r5, 8003bd0 <MX66UW1G45G_ResetEnable+0x58>
 8003b8e:	2c01      	cmp	r4, #1
 8003b90:	d020      	beq.n	8003bd4 <MX66UW1G45G_ResetEnable+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect =  HAL_XSPI_SELECT_IO_3_0;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b92:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b94:	1e62      	subs	r2, r4, #1
 8003b96:	4254      	negs	r4, r2
 8003b98:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b9a:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003b9c:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b9e:	bf14      	ite	ne
 8003ba0:	2301      	movne	r3, #1
 8003ba2:	2300      	moveq	r3, #0
 8003ba4:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003ba8:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_ENABLE_CMD
                              : MX66UW1G45G_OCTA_RESET_ENABLE_CMD;
 8003baa:	f246 6399 	movw	r3, #26265	@ 0x6699
 8003bae:	bf08      	it	eq
 8003bb0:	2366      	moveq	r3, #102	@ 0x66
  s_command.DummyCycles = 0U;
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;


  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bb2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003bb6:	4669      	mov	r1, sp
 8003bb8:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003bba:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003bbc:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003bbe:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bc0:	f004 fcbc 	bl	800853c <HAL_XSPI_Command>
 8003bc4:	3800      	subs	r0, #0
 8003bc6:	bf18      	it	ne
 8003bc8:	2001      	movne	r0, #1
 8003bca:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003bcc:	b014      	add	sp, #80	@ 0x50
 8003bce:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003bd0:	2304      	movs	r3, #4
 8003bd2:	e7df      	b.n	8003b94 <MX66UW1G45G_ResetEnable+0x1c>
    return MX66UW1G45G_ERROR;
 8003bd4:	f04f 30ff 	mov.w	r0, #4294967295
 8003bd8:	e7f8      	b.n	8003bcc <MX66UW1G45G_ResetEnable+0x54>

08003bda <MX66UW1G45G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetMemory(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003bda:	b570      	push	{r4, r5, r6, lr}
 8003bdc:	460d      	mov	r5, r1
 8003bde:	b094      	sub	sp, #80	@ 0x50
 8003be0:	4606      	mov	r6, r0
 8003be2:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003be4:	2100      	movs	r1, #0
 8003be6:	2250      	movs	r2, #80	@ 0x50
 8003be8:	4668      	mov	r0, sp
 8003bea:	f02e fe94 	bl	8032916 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003bee:	bb05      	cbnz	r5, 8003c32 <MX66UW1G45G_ResetMemory+0x58>
 8003bf0:	2c01      	cmp	r4, #1
 8003bf2:	d020      	beq.n	8003c36 <MX66UW1G45G_ResetMemory+0x5c>

  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003bf4:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003bf6:	1e62      	subs	r2, r4, #1
 8003bf8:	4254      	negs	r4, r2
 8003bfa:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003bfc:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003bfe:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003c00:	bf14      	ite	ne
 8003c02:	2301      	movne	r3, #1
 8003c04:	2300      	moveq	r3, #0
 8003c06:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003c0a:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_MEMORY_CMD
                              : MX66UW1G45G_OCTA_RESET_MEMORY_CMD;
 8003c0c:	f649 1366 	movw	r3, #39270	@ 0x9966
 8003c10:	bf08      	it	eq
 8003c12:	2399      	moveq	r3, #153	@ 0x99
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c14:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c18:	4669      	mov	r1, sp
 8003c1a:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003c1c:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003c1e:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003c20:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c22:	f004 fc8b 	bl	800853c <HAL_XSPI_Command>
 8003c26:	3800      	subs	r0, #0
 8003c28:	bf18      	it	ne
 8003c2a:	2001      	movne	r0, #1
 8003c2c:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003c2e:	b014      	add	sp, #80	@ 0x50
 8003c30:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003c32:	2304      	movs	r3, #4
 8003c34:	e7df      	b.n	8003bf6 <MX66UW1G45G_ResetMemory+0x1c>
    return MX66UW1G45G_ERROR;
 8003c36:	f04f 30ff 	mov.w	r0, #4294967295
 8003c3a:	e7f8      	b.n	8003c2e <MX66UW1G45G_ResetMemory+0x54>

08003c3c <SystemInit>:
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8003c3c:	2201      	movs	r2, #1
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8003c3e:	480e      	ldr	r0, [pc, #56]	@ (8003c78 <SystemInit+0x3c>)
 8003c40:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8003c44:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003c48:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  RCC->CR = RCC_CR_MSISON;
 8003c4c:	4b0b      	ldr	r3, [pc, #44]	@ (8003c7c <SystemInit+0x40>)
 8003c4e:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8003c50:	2200      	movs	r2, #0
 8003c52:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8003c54:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8003c56:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8003c58:	6819      	ldr	r1, [r3, #0]
 8003c5a:	f021 51a8 	bic.w	r1, r1, #352321536	@ 0x15000000
 8003c5e:	f421 2110 	bic.w	r1, r1, #589824	@ 0x90000
 8003c62:	6019      	str	r1, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8003c64:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8003c66:	6819      	ldr	r1, [r3, #0]
 8003c68:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
 8003c6c:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8003c6e:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003c70:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003c74:	6083      	str	r3, [r0, #8]
  #endif
}
 8003c76:	4770      	bx	lr
 8003c78:	e000ed00 	.word	0xe000ed00
 8003c7c:	46020c00 	.word	0x46020c00

08003c80 <HAL_Init>:
  */
HAL_StatusTypeDef HAL_Init(void)
{
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c80:	4a10      	ldr	r2, [pc, #64]	@ (8003cc4 <HAL_Init+0x44>)
{
 8003c82:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c84:	6813      	ldr	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c86:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c88:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c8c:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c8e:	f000 f84d 	bl	8003d2c <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8003c92:	f002 fd49 	bl	8006728 <HAL_RCC_GetSysClockFreq>
 8003c96:	4b0c      	ldr	r3, [pc, #48]	@ (8003cc8 <HAL_Init+0x48>)
 8003c98:	4a0c      	ldr	r2, [pc, #48]	@ (8003ccc <HAL_Init+0x4c>)
 8003c9a:	6a1b      	ldr	r3, [r3, #32]
 8003c9c:	f003 030f 	and.w	r3, r3, #15
 8003ca0:	5cd3      	ldrb	r3, [r2, r3]
 8003ca2:	40d8      	lsrs	r0, r3
 8003ca4:	4b0a      	ldr	r3, [pc, #40]	@ (8003cd0 <HAL_Init+0x50>)
 8003ca6:	6018      	str	r0, [r3, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8003ca8:	2004      	movs	r0, #4
 8003caa:	f000 f88f 	bl	8003dcc <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003cae:	2000      	movs	r0, #0
 8003cb0:	f7fd f86e 	bl	8000d90 <HAL_InitTick>
 8003cb4:	4604      	mov	r4, r0
 8003cb6:	b918      	cbnz	r0, 8003cc0 <HAL_Init+0x40>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8003cb8:	f7fc fd96 	bl	80007e8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003cbc:	4620      	mov	r0, r4
 8003cbe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003cc0:	2401      	movs	r4, #1
 8003cc2:	e7fb      	b.n	8003cbc <HAL_Init+0x3c>
 8003cc4:	40022000 	.word	0x40022000
 8003cc8:	46020c00 	.word	0x46020c00
 8003ccc:	08035634 	.word	0x08035634
 8003cd0:	2000004c 	.word	0x2000004c

08003cd4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8003cd4:	4a03      	ldr	r2, [pc, #12]	@ (8003ce4 <HAL_IncTick+0x10>)
 8003cd6:	4b04      	ldr	r3, [pc, #16]	@ (8003ce8 <HAL_IncTick+0x14>)
 8003cd8:	6811      	ldr	r1, [r2, #0]
 8003cda:	781b      	ldrb	r3, [r3, #0]
 8003cdc:	440b      	add	r3, r1
 8003cde:	6013      	str	r3, [r2, #0]
}
 8003ce0:	4770      	bx	lr
 8003ce2:	bf00      	nop
 8003ce4:	2006e92c 	.word	0x2006e92c
 8003ce8:	20000050 	.word	0x20000050

08003cec <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003cec:	4b01      	ldr	r3, [pc, #4]	@ (8003cf4 <HAL_GetTick+0x8>)
 8003cee:	6818      	ldr	r0, [r3, #0]
}
 8003cf0:	4770      	bx	lr
 8003cf2:	bf00      	nop
 8003cf4:	2006e92c 	.word	0x2006e92c

08003cf8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003cf8:	b538      	push	{r3, r4, r5, lr}
 8003cfa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003cfc:	f7ff fff6 	bl	8003cec <HAL_GetTick>
 8003d00:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003d02:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003d04:	bf1e      	ittt	ne
 8003d06:	4b04      	ldrne	r3, [pc, #16]	@ (8003d18 <HAL_Delay+0x20>)
 8003d08:	781b      	ldrbne	r3, [r3, #0]
 8003d0a:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8003d0c:	f7ff ffee 	bl	8003cec <HAL_GetTick>
 8003d10:	1b43      	subs	r3, r0, r5
 8003d12:	42a3      	cmp	r3, r4
 8003d14:	d3fa      	bcc.n	8003d0c <HAL_Delay+0x14>
  {
  }
}
 8003d16:	bd38      	pop	{r3, r4, r5, pc}
 8003d18:	20000050 	.word	0x20000050

08003d1c <HAL_SYSCFG_DisableSRAMCached>:
  *
  * @retval None
  */
void HAL_SYSCFG_DisableSRAMCached(void)
{
  CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_SRAMCACHED);
 8003d1c:	4a02      	ldr	r2, [pc, #8]	@ (8003d28 <HAL_SYSCFG_DisableSRAMCached+0xc>)
 8003d1e:	6853      	ldr	r3, [r2, #4]
 8003d20:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003d24:	6053      	str	r3, [r2, #4]
}
 8003d26:	4770      	bx	lr
 8003d28:	46000400 	.word	0x46000400

08003d2c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d2c:	4907      	ldr	r1, [pc, #28]	@ (8003d4c <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d2e:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d30:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d32:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003d36:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8003d3a:	0412      	lsls	r2, r2, #16
 8003d3c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003d3e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003d40:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003d44:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003d48:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003d4a:	4770      	bx	lr
 8003d4c:	e000ed00 	.word	0xe000ed00

08003d50 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003d50:	4b15      	ldr	r3, [pc, #84]	@ (8003da8 <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003d52:	b530      	push	{r4, r5, lr}
 8003d54:	68dc      	ldr	r4, [r3, #12]
 8003d56:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d5a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d5e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d60:	2b04      	cmp	r3, #4
 8003d62:	bf28      	it	cs
 8003d64:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d66:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d68:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d6c:	bf94      	ite	ls
 8003d6e:	2400      	movls	r4, #0
 8003d70:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d72:	fa05 f303 	lsl.w	r3, r5, r3
 8003d76:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003d7a:	40a5      	lsls	r5, r4
 8003d7c:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d80:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003d82:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d84:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d88:	bfac      	ite	ge
 8003d8a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d8e:	4a07      	ldrlt	r2, [pc, #28]	@ (8003dac <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d90:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003d94:	b2db      	uxtb	r3, r3
 8003d96:	bfab      	itete	ge
 8003d98:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d9c:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003da0:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003da4:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003da6:	bd30      	pop	{r4, r5, pc}
 8003da8:	e000ed00 	.word	0xe000ed00
 8003dac:	e000ed14 	.word	0xe000ed14

08003db0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003db0:	2800      	cmp	r0, #0
 8003db2:	db07      	blt.n	8003dc4 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003db4:	2301      	movs	r3, #1
 8003db6:	0941      	lsrs	r1, r0, #5
 8003db8:	4a03      	ldr	r2, [pc, #12]	@ (8003dc8 <HAL_NVIC_EnableIRQ+0x18>)
 8003dba:	f000 001f 	and.w	r0, r0, #31
 8003dbe:	4083      	lsls	r3, r0
 8003dc0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003dc4:	4770      	bx	lr
 8003dc6:	bf00      	nop
 8003dc8:	e000e100 	.word	0xe000e100

08003dcc <HAL_SYSTICK_CLKSourceConfig>:
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8003dcc:	2804      	cmp	r0, #4
 8003dce:	d818      	bhi.n	8003e02 <HAL_SYSTICK_CLKSourceConfig+0x36>
 8003dd0:	e8df f000 	tbb	[pc, r0]
 8003dd4:	1726180a 	.word	0x1726180a
 8003dd8:	03          	.byte	0x03
 8003dd9:	00          	.byte	0x00
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003dda:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003dde:	6913      	ldr	r3, [r2, #16]
 8003de0:	f043 0304 	orr.w	r3, r3, #4
 8003de4:	6113      	str	r3, [r2, #16]
      break;
 8003de6:	4770      	bx	lr
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003de8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003dec:	6913      	ldr	r3, [r2, #16]
 8003dee:	f023 0304 	bic.w	r3, r3, #4
 8003df2:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 8003df4:	4a11      	ldr	r2, [pc, #68]	@ (8003e3c <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003df6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003dfa:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
      break;
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003dfe:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
    default:
      /* Nothing to do */
      break;
  }
}
 8003e02:	4770      	bx	lr
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003e04:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003e08:	6913      	ldr	r3, [r2, #16]
 8003e0a:	f023 0304 	bic.w	r3, r3, #4
 8003e0e:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8003e10:	4a0a      	ldr	r2, [pc, #40]	@ (8003e3c <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003e12:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003e16:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003e1a:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003e1e:	e7ee      	b.n	8003dfe <HAL_SYSTICK_CLKSourceConfig+0x32>
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003e20:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003e24:	6913      	ldr	r3, [r2, #16]
 8003e26:	f023 0304 	bic.w	r3, r3, #4
 8003e2a:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003e2c:	4a03      	ldr	r2, [pc, #12]	@ (8003e3c <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003e2e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003e32:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003e36:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003e3a:	e7e0      	b.n	8003dfe <HAL_SYSTICK_CLKSourceConfig+0x32>
 8003e3c:	46020c00 	.word	0x46020c00

08003e40 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003e40:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003e42:	4604      	mov	r4, r0
 8003e44:	b908      	cbnz	r0, 8003e4a <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8003e46:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8003e48:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003e4a:	7f43      	ldrb	r3, [r0, #29]
 8003e4c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003e50:	b913      	cbnz	r3, 8003e58 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8003e52:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8003e54:	f7fc fce0 	bl	8000818 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8003e58:	2302      	movs	r3, #2
 8003e5a:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003e5c:	7923      	ldrb	r3, [r4, #4]
 8003e5e:	b9e3      	cbnz	r3, 8003e9a <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003e60:	6823      	ldr	r3, [r4, #0]
 8003e62:	4a13      	ldr	r2, [pc, #76]	@ (8003eb0 <HAL_CRC_Init+0x70>)
 8003e64:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003e66:	689a      	ldr	r2, [r3, #8]
 8003e68:	f022 0218 	bic.w	r2, r2, #24
 8003e6c:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003e6e:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003e70:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003e72:	b9d2      	cbnz	r2, 8003eaa <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003e74:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003e78:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003e7a:	689a      	ldr	r2, [r3, #8]
 8003e7c:	6961      	ldr	r1, [r4, #20]
 8003e7e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8003e82:	430a      	orrs	r2, r1
 8003e84:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003e86:	689a      	ldr	r2, [r3, #8]
 8003e88:	69a1      	ldr	r1, [r4, #24]
 8003e8a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003e8e:	430a      	orrs	r2, r1
 8003e90:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8003e92:	2301      	movs	r3, #1
  return HAL_OK;
 8003e94:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 8003e96:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8003e98:	e7d6      	b.n	8003e48 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003e9a:	4620      	mov	r0, r4
 8003e9c:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8003ea0:	f000 f808 	bl	8003eb4 <HAL_CRCEx_Polynomial_Set>
 8003ea4:	2800      	cmp	r0, #0
 8003ea6:	d0e2      	beq.n	8003e6e <HAL_CRC_Init+0x2e>
 8003ea8:	e7cd      	b.n	8003e46 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003eaa:	6922      	ldr	r2, [r4, #16]
 8003eac:	e7e4      	b.n	8003e78 <HAL_CRC_Init+0x38>
 8003eae:	bf00      	nop
 8003eb0:	04c11db7 	.word	0x04c11db7

08003eb4 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003eb4:	07cb      	lsls	r3, r1, #31
{
 8003eb6:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003eb8:	d50d      	bpl.n	8003ed6 <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003eba:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003ebc:	3b01      	subs	r3, #1
 8003ebe:	d31d      	bcc.n	8003efc <HAL_CRCEx_Polynomial_Set+0x48>
 8003ec0:	fa21 f403 	lsr.w	r4, r1, r3
 8003ec4:	07e4      	lsls	r4, r4, #31
 8003ec6:	d5f9      	bpl.n	8003ebc <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8003ec8:	2a10      	cmp	r2, #16
 8003eca:	d013      	beq.n	8003ef4 <HAL_CRCEx_Polynomial_Set+0x40>
 8003ecc:	2a10      	cmp	r2, #16
 8003ece:	d804      	bhi.n	8003eda <HAL_CRCEx_Polynomial_Set+0x26>
 8003ed0:	b13a      	cbz	r2, 8003ee2 <HAL_CRCEx_Polynomial_Set+0x2e>
 8003ed2:	2a08      	cmp	r2, #8
 8003ed4:	d010      	beq.n	8003ef8 <HAL_CRCEx_Polynomial_Set+0x44>
 8003ed6:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8003ed8:	e00b      	b.n	8003ef2 <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 8003eda:	2a18      	cmp	r2, #24
 8003edc:	d1fb      	bne.n	8003ed6 <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
 8003ede:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8003ee0:	d8f9      	bhi.n	8003ed6 <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003ee2:	6800      	ldr	r0, [r0, #0]
 8003ee4:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8003ee6:	6883      	ldr	r3, [r0, #8]
 8003ee8:	f023 0318 	bic.w	r3, r3, #24
 8003eec:	4313      	orrs	r3, r2
 8003eee:	6083      	str	r3, [r0, #8]
 8003ef0:	2000      	movs	r0, #0
}
 8003ef2:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 8003ef4:	2b07      	cmp	r3, #7
 8003ef6:	e7f3      	b.n	8003ee0 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 8003ef8:	2b0f      	cmp	r3, #15
 8003efa:	e7f1      	b.n	8003ee0 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
 8003efc:	2a10      	cmp	r2, #16
 8003efe:	d1e5      	bne.n	8003ecc <HAL_CRCEx_Polynomial_Set+0x18>
 8003f00:	e7e9      	b.n	8003ed6 <HAL_CRCEx_Polynomial_Set+0x22>

08003f02 <HAL_DCACHE_ErrorCallback>:
  * @brief  Error callback.
  * @param  hdcache Pointer to a DCACHE_HandleTypeDef structure that contains
  *                 the configuration information for the specified DCACHEx peripheral.
  * @retval None
  */
__weak void HAL_DCACHE_ErrorCallback(DCACHE_HandleTypeDef *hdcache)
 8003f02:	4770      	bx	lr

08003f04 <HAL_DCACHE_CleanByAddrCallback>:
__weak void HAL_DCACHE_CleanByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003f04:	4770      	bx	lr

08003f06 <HAL_DCACHE_InvalidateByAddrCallback>:
__weak void HAL_DCACHE_InvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003f06:	4770      	bx	lr

08003f08 <HAL_DCACHE_CleanAndInvalidateByAddrCallback>:
__weak void HAL_DCACHE_CleanAndInvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003f08:	4770      	bx	lr

08003f0a <HAL_DCACHE_InvalidateCompleteCallback>:
__weak void HAL_DCACHE_InvalidateCompleteCallback(DCACHE_HandleTypeDef *hdcache)
 8003f0a:	4770      	bx	lr

08003f0c <HAL_DCACHE_Enable>:
  if (hdcache == NULL)
 8003f0c:	4602      	mov	r2, r0
 8003f0e:	b150      	cbz	r0, 8003f26 <HAL_DCACHE_Enable+0x1a>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8003f10:	6801      	ldr	r1, [r0, #0]
 8003f12:	6848      	ldr	r0, [r1, #4]
 8003f14:	f010 0009 	ands.w	r0, r0, #9
 8003f18:	d107      	bne.n	8003f2a <HAL_DCACHE_Enable+0x1e>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003f1a:	6290      	str	r0, [r2, #40]	@ 0x28
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_EN);
 8003f1c:	680b      	ldr	r3, [r1, #0]
 8003f1e:	f043 0301 	orr.w	r3, r3, #1
 8003f22:	600b      	str	r3, [r1, #0]
 8003f24:	4770      	bx	lr
    return HAL_ERROR;
 8003f26:	2001      	movs	r0, #1
 8003f28:	4770      	bx	lr
    status =  HAL_BUSY;
 8003f2a:	2002      	movs	r0, #2
}
 8003f2c:	4770      	bx	lr
	...

08003f30 <HAL_DCACHE_Init>:
{
 8003f30:	b510      	push	{r4, lr}
  if (hdcache == NULL)
 8003f32:	4604      	mov	r4, r0
 8003f34:	b320      	cbz	r0, 8003f80 <HAL_DCACHE_Init+0x50>
  if (hdcache->State == HAL_DCACHE_STATE_RESET)
 8003f36:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8003f3a:	b983      	cbnz	r3, 8003f5e <HAL_DCACHE_Init+0x2e>
    hdcache->ErrorCallback                      = HAL_DCACHE_ErrorCallback;
 8003f3c:	4b11      	ldr	r3, [pc, #68]	@ (8003f84 <HAL_DCACHE_Init+0x54>)
 8003f3e:	6083      	str	r3, [r0, #8]
    hdcache->CleanByAddrCallback                = HAL_DCACHE_CleanByAddrCallback;
 8003f40:	4b11      	ldr	r3, [pc, #68]	@ (8003f88 <HAL_DCACHE_Init+0x58>)
 8003f42:	60c3      	str	r3, [r0, #12]
    hdcache->InvalidateByAddrCallback           = HAL_DCACHE_InvalidateByAddrCallback;
 8003f44:	4b11      	ldr	r3, [pc, #68]	@ (8003f8c <HAL_DCACHE_Init+0x5c>)
 8003f46:	6103      	str	r3, [r0, #16]
    hdcache->InvalidateCompleteCallback         = HAL_DCACHE_InvalidateCompleteCallback;
 8003f48:	4b11      	ldr	r3, [pc, #68]	@ (8003f90 <HAL_DCACHE_Init+0x60>)
 8003f4a:	6143      	str	r3, [r0, #20]
    hdcache->CleanAndInvalidateByAddrCallback   = HAL_DCACHE_CleanAndInvalidateByAddrCallback;
 8003f4c:	4b11      	ldr	r3, [pc, #68]	@ (8003f94 <HAL_DCACHE_Init+0x64>)
 8003f4e:	6183      	str	r3, [r0, #24]
    if (hdcache->MspInitCallback == NULL)
 8003f50:	69c3      	ldr	r3, [r0, #28]
 8003f52:	b90b      	cbnz	r3, 8003f58 <HAL_DCACHE_Init+0x28>
      hdcache->MspInitCallback = HAL_DCACHE_MspInit;
 8003f54:	4b10      	ldr	r3, [pc, #64]	@ (8003f98 <HAL_DCACHE_Init+0x68>)
 8003f56:	61c3      	str	r3, [r0, #28]
    hdcache->MspInitCallback(hdcache);
 8003f58:	4620      	mov	r0, r4
 8003f5a:	69e3      	ldr	r3, [r4, #28]
 8003f5c:	4798      	blx	r3
  hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003f5e:	2300      	movs	r3, #0
 8003f60:	62a3      	str	r3, [r4, #40]	@ 0x28
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003f62:	2301      	movs	r3, #1
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f64:	6822      	ldr	r2, [r4, #0]
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003f66:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f6a:	6813      	ldr	r3, [r2, #0]
 8003f6c:	6861      	ldr	r1, [r4, #4]
 8003f6e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003f72:	430b      	orrs	r3, r1
  status = HAL_DCACHE_Enable(hdcache);
 8003f74:	4620      	mov	r0, r4
}
 8003f76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f7a:	6013      	str	r3, [r2, #0]
  status = HAL_DCACHE_Enable(hdcache);
 8003f7c:	f7ff bfc6 	b.w	8003f0c <HAL_DCACHE_Enable>
}
 8003f80:	2001      	movs	r0, #1
 8003f82:	bd10      	pop	{r4, pc}
 8003f84:	08003f03 	.word	0x08003f03
 8003f88:	08003f05 	.word	0x08003f05
 8003f8c:	08003f07 	.word	0x08003f07
 8003f90:	08003f0b 	.word	0x08003f0b
 8003f94:	08003f09 	.word	0x08003f09
 8003f98:	08000849 	.word	0x08000849

08003f9c <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8003f9c:	b538      	push	{r3, r4, r5, lr}
 8003f9e:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8003fa0:	f7ff fea4 	bl	8003cec <HAL_GetTick>
 8003fa4:	4605      	mov	r5, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8003fa6:	2c00      	cmp	r4, #0
 8003fa8:	f000 81a2 	beq.w	80042f0 <HAL_DMA_Init+0x354>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003fac:	2300      	movs	r3, #0
 8003fae:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003fb2:	2302      	movs	r3, #2
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fb4:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003fb6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 8003fba:	6953      	ldr	r3, [r2, #20]
 8003fbc:	f043 0306 	orr.w	r3, r3, #6
 8003fc0:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 8003fc2:	6823      	ldr	r3, [r4, #0]
 8003fc4:	695a      	ldr	r2, [r3, #20]
 8003fc6:	07d2      	lsls	r2, r2, #31
 8003fc8:	f100 8187 	bmi.w	80042da <HAL_DMA_Init+0x33e>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8003fcc:	695a      	ldr	r2, [r3, #20]
 8003fce:	6a21      	ldr	r1, [r4, #32]
 8003fd0:	f422 0243 	bic.w	r2, r2, #12779520	@ 0xc30000
 8003fd4:	430a      	orrs	r2, r1
 8003fd6:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003fd8:	69e1      	ldr	r1, [r4, #28]
 8003fda:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fdc:	4daf      	ldr	r5, [pc, #700]	@ (800429c <HAL_DMA_Init+0x300>)
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003fde:	430a      	orrs	r2, r1
 8003fe0:	6921      	ldr	r1, [r4, #16]
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fe2:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003fe4:	ea42 0201 	orr.w	r2, r2, r1
 8003fe8:	69a1      	ldr	r1, [r4, #24]
 8003fea:	48ad      	ldr	r0, [pc, #692]	@ (80042a0 <HAL_DMA_Init+0x304>)
 8003fec:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003ff0:	f000 8087 	beq.w	8004102 <HAL_DMA_Init+0x166>
 8003ff4:	49ab      	ldr	r1, [pc, #684]	@ (80042a4 <HAL_DMA_Init+0x308>)
 8003ff6:	428b      	cmp	r3, r1
 8003ff8:	f000 8083 	beq.w	8004102 <HAL_DMA_Init+0x166>
 8003ffc:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004000:	3180      	adds	r1, #128	@ 0x80
 8004002:	428b      	cmp	r3, r1
 8004004:	d07d      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004006:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800400a:	428b      	cmp	r3, r1
 800400c:	d079      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800400e:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004012:	3180      	adds	r1, #128	@ 0x80
 8004014:	428b      	cmp	r3, r1
 8004016:	d074      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004018:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800401c:	428b      	cmp	r3, r1
 800401e:	d070      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004020:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004024:	3180      	adds	r1, #128	@ 0x80
 8004026:	428b      	cmp	r3, r1
 8004028:	d06b      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800402a:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800402e:	428b      	cmp	r3, r1
 8004030:	d067      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004032:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004036:	3180      	adds	r1, #128	@ 0x80
 8004038:	428b      	cmp	r3, r1
 800403a:	d062      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800403c:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004040:	428b      	cmp	r3, r1
 8004042:	d05e      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004044:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004048:	3180      	adds	r1, #128	@ 0x80
 800404a:	428b      	cmp	r3, r1
 800404c:	d059      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800404e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004052:	428b      	cmp	r3, r1
 8004054:	d055      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004056:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800405a:	3180      	adds	r1, #128	@ 0x80
 800405c:	428b      	cmp	r3, r1
 800405e:	d050      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004060:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004064:	428b      	cmp	r3, r1
 8004066:	d04c      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004068:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800406c:	3180      	adds	r1, #128	@ 0x80
 800406e:	428b      	cmp	r3, r1
 8004070:	d047      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004072:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004076:	428b      	cmp	r3, r1
 8004078:	d043      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800407a:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800407e:	3180      	adds	r1, #128	@ 0x80
 8004080:	428b      	cmp	r3, r1
 8004082:	d03e      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004084:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004088:	428b      	cmp	r3, r1
 800408a:	d03a      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800408c:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004090:	3180      	adds	r1, #128	@ 0x80
 8004092:	428b      	cmp	r3, r1
 8004094:	d035      	beq.n	8004102 <HAL_DMA_Init+0x166>
 8004096:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800409a:	428b      	cmp	r3, r1
 800409c:	d031      	beq.n	8004102 <HAL_DMA_Init+0x166>
 800409e:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040a2:	3180      	adds	r1, #128	@ 0x80
 80040a4:	428b      	cmp	r3, r1
 80040a6:	d02c      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040a8:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040ac:	428b      	cmp	r3, r1
 80040ae:	d028      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040b0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040b4:	3180      	adds	r1, #128	@ 0x80
 80040b6:	428b      	cmp	r3, r1
 80040b8:	d023      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040ba:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040be:	428b      	cmp	r3, r1
 80040c0:	d01f      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040c2:	4283      	cmp	r3, r0
 80040c4:	d01d      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040c6:	3180      	adds	r1, #128	@ 0x80
 80040c8:	428b      	cmp	r3, r1
 80040ca:	d01a      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040cc:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040d0:	3180      	adds	r1, #128	@ 0x80
 80040d2:	428b      	cmp	r3, r1
 80040d4:	d015      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040d6:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040da:	428b      	cmp	r3, r1
 80040dc:	d011      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040de:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040e2:	3180      	adds	r1, #128	@ 0x80
 80040e4:	428b      	cmp	r3, r1
 80040e6:	d00c      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040e8:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040ec:	428b      	cmp	r3, r1
 80040ee:	d008      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040f0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040f4:	3180      	adds	r1, #128	@ 0x80
 80040f6:	428b      	cmp	r3, r1
 80040f8:	d003      	beq.n	8004102 <HAL_DMA_Init+0x166>
 80040fa:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040fe:	428b      	cmp	r3, r1
 8004100:	d10d      	bne.n	800411e <HAL_DMA_Init+0x182>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 8004102:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8004104:	3901      	subs	r1, #1
 8004106:	0509      	lsls	r1, r1, #20
 8004108:	f001 717c 	and.w	r1, r1, #66060288	@ 0x3f00000
 800410c:	4311      	orrs	r1, r2
 800410e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8004110:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 8004112:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8004114:	3a01      	subs	r2, #1
 8004116:	0112      	lsls	r2, r2, #4
 8004118:	f402 727c 	and.w	r2, r2, #1008	@ 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800411c:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 800411e:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8004120:	f001 2180 	and.w	r1, r1, #2147516416	@ 0x80008000
 8004124:	430a      	orrs	r2, r1
 8004126:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 8004128:	68a1      	ldr	r1, [r4, #8]
 800412a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800412c:	4311      	orrs	r1, r2
 800412e:	6862      	ldr	r2, [r4, #4]
 8004130:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8004134:	4311      	orrs	r1, r2

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8004136:	68e2      	ldr	r2, [r4, #12]
 8004138:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800413c:	f040 80da 	bne.w	80042f4 <HAL_DMA_Init+0x358>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8004140:	42ab      	cmp	r3, r5
 8004142:	f000 8087 	beq.w	8004254 <HAL_DMA_Init+0x2b8>
 8004146:	4a57      	ldr	r2, [pc, #348]	@ (80042a4 <HAL_DMA_Init+0x308>)
 8004148:	4293      	cmp	r3, r2
 800414a:	f000 8083 	beq.w	8004254 <HAL_DMA_Init+0x2b8>
 800414e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004152:	3280      	adds	r2, #128	@ 0x80
 8004154:	4293      	cmp	r3, r2
 8004156:	d07d      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004158:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800415c:	4293      	cmp	r3, r2
 800415e:	d079      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004160:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004164:	3280      	adds	r2, #128	@ 0x80
 8004166:	4293      	cmp	r3, r2
 8004168:	d074      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800416a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800416e:	4293      	cmp	r3, r2
 8004170:	d070      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004172:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004176:	3280      	adds	r2, #128	@ 0x80
 8004178:	4293      	cmp	r3, r2
 800417a:	d06b      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800417c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004180:	4293      	cmp	r3, r2
 8004182:	d067      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004184:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004188:	3280      	adds	r2, #128	@ 0x80
 800418a:	4293      	cmp	r3, r2
 800418c:	d062      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800418e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004192:	4293      	cmp	r3, r2
 8004194:	d05e      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004196:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800419a:	3280      	adds	r2, #128	@ 0x80
 800419c:	4293      	cmp	r3, r2
 800419e:	d059      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041a0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041a4:	4293      	cmp	r3, r2
 80041a6:	d055      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041a8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041ac:	3280      	adds	r2, #128	@ 0x80
 80041ae:	4293      	cmp	r3, r2
 80041b0:	d050      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041b2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041b6:	4293      	cmp	r3, r2
 80041b8:	d04c      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041ba:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041be:	3280      	adds	r2, #128	@ 0x80
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d047      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041c4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041c8:	4293      	cmp	r3, r2
 80041ca:	d043      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041cc:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041d0:	3280      	adds	r2, #128	@ 0x80
 80041d2:	4293      	cmp	r3, r2
 80041d4:	d03e      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041d6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041da:	4293      	cmp	r3, r2
 80041dc:	d03a      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041de:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041e2:	3280      	adds	r2, #128	@ 0x80
 80041e4:	4293      	cmp	r3, r2
 80041e6:	d035      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041e8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041ec:	4293      	cmp	r3, r2
 80041ee:	d031      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041f0:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041f4:	3280      	adds	r2, #128	@ 0x80
 80041f6:	4293      	cmp	r3, r2
 80041f8:	d02c      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 80041fa:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041fe:	4293      	cmp	r3, r2
 8004200:	d028      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004202:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004206:	3280      	adds	r2, #128	@ 0x80
 8004208:	4293      	cmp	r3, r2
 800420a:	d023      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800420c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004210:	4293      	cmp	r3, r2
 8004212:	d01f      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004214:	4283      	cmp	r3, r0
 8004216:	d01d      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004218:	3280      	adds	r2, #128	@ 0x80
 800421a:	4293      	cmp	r3, r2
 800421c:	d01a      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800421e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004222:	3280      	adds	r2, #128	@ 0x80
 8004224:	4293      	cmp	r3, r2
 8004226:	d015      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004228:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800422c:	4293      	cmp	r3, r2
 800422e:	d011      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004230:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004234:	3280      	adds	r2, #128	@ 0x80
 8004236:	4293      	cmp	r3, r2
 8004238:	d00c      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800423a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800423e:	4293      	cmp	r3, r2
 8004240:	d008      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 8004242:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004246:	3280      	adds	r2, #128	@ 0x80
 8004248:	4293      	cmp	r3, r2
 800424a:	d003      	beq.n	8004254 <HAL_DMA_Init+0x2b8>
 800424c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004250:	4293      	cmp	r3, r2
 8004252:	d101      	bne.n	8004258 <HAL_DMA_Init+0x2bc>
    {
      tmpreg |= DMA_CTR2_DREQ;
 8004254:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 8004258:	6c5d      	ldr	r5, [r3, #68]	@ 0x44
 800425a:	4a13      	ldr	r2, [pc, #76]	@ (80042a8 <HAL_DMA_Init+0x30c>)

  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800425c:	4283      	cmp	r3, r0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 800425e:	ea02 0205 	and.w	r2, r2, r5
 8004262:	ea42 0201 	orr.w	r2, r2, r1
 8004266:	645a      	str	r2, [r3, #68]	@ 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 8004268:	f04f 0200 	mov.w	r2, #0
 800426c:	649a      	str	r2, [r3, #72]	@ 0x48
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800426e:	d028      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 8004270:	4a0e      	ldr	r2, [pc, #56]	@ (80042ac <HAL_DMA_Init+0x310>)
 8004272:	4293      	cmp	r3, r2
 8004274:	d025      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 8004276:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800427a:	3280      	adds	r2, #128	@ 0x80
 800427c:	4293      	cmp	r3, r2
 800427e:	d020      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 8004280:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004284:	4293      	cmp	r3, r2
 8004286:	d01c      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 8004288:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800428c:	3280      	adds	r2, #128	@ 0x80
 800428e:	4293      	cmp	r3, r2
 8004290:	d017      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 8004292:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004296:	4293      	cmp	r3, r2
 8004298:	d013      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 800429a:	e009      	b.n	80042b0 <HAL_DMA_Init+0x314>
 800429c:	40020050 	.word	0x40020050
 80042a0:	40020650 	.word	0x40020650
 80042a4:	50020050 	.word	0x50020050
 80042a8:	3c803180 	.word	0x3c803180
 80042ac:	50020650 	.word	0x50020650
 80042b0:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80042b4:	3280      	adds	r2, #128	@ 0x80
 80042b6:	4293      	cmp	r3, r2
 80042b8:	d003      	beq.n	80042c2 <HAL_DMA_Init+0x326>
 80042ba:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80042be:	4293      	cmp	r3, r2
 80042c0:	d102      	bne.n	80042c8 <HAL_DMA_Init+0x32c>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 80042c2:	2200      	movs	r2, #0
 80042c4:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 80042c6:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 80042c8:	2000      	movs	r0, #0
 80042ca:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdma->Mode = hdma->Init.Mode;
 80042cc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80042ce:	65a0      	str	r0, [r4, #88]	@ 0x58
  hdma->Mode = hdma->Init.Mode;
 80042d0:	6523      	str	r3, [r4, #80]	@ 0x50
  hdma->State = HAL_DMA_STATE_READY;
 80042d2:	2301      	movs	r3, #1
 80042d4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
  return HAL_OK;
 80042d8:	e00b      	b.n	80042f2 <HAL_DMA_Init+0x356>
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80042da:	f7ff fd07 	bl	8003cec <HAL_GetTick>
 80042de:	1b40      	subs	r0, r0, r5
 80042e0:	2805      	cmp	r0, #5
 80042e2:	f67f ae6e 	bls.w	8003fc2 <HAL_DMA_Init+0x26>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80042e6:	2310      	movs	r3, #16
 80042e8:	65a3      	str	r3, [r4, #88]	@ 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 80042ea:	2303      	movs	r3, #3
 80042ec:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 80042f0:	2001      	movs	r0, #1
}
 80042f2:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 80042f4:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 80042f8:	bf08      	it	eq
 80042fa:	f441 7100 	orreq.w	r1, r1, #512	@ 0x200
 80042fe:	e7ab      	b.n	8004258 <HAL_DMA_Init+0x2bc>

08004300 <HAL_DMA_Start_IT>:
{
 8004300:	b530      	push	{r4, r5, lr}
  if (hdma == NULL)
 8004302:	2800      	cmp	r0, #0
 8004304:	d036      	beq.n	8004374 <HAL_DMA_Start_IT+0x74>
  __HAL_LOCK(hdma);
 8004306:	f890 404c 	ldrb.w	r4, [r0, #76]	@ 0x4c
 800430a:	2c01      	cmp	r4, #1
 800430c:	d034      	beq.n	8004378 <HAL_DMA_Start_IT+0x78>
 800430e:	2401      	movs	r4, #1
 8004310:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
  if (hdma->State == HAL_DMA_STATE_READY)
 8004314:	f890 4054 	ldrb.w	r4, [r0, #84]	@ 0x54
 8004318:	2c01      	cmp	r4, #1
 800431a:	f04f 0400 	mov.w	r4, #0
 800431e:	d125      	bne.n	800436c <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8004320:	2502      	movs	r5, #2
 8004322:	f880 5054 	strb.w	r5, [r0, #84]	@ 0x54
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004326:	6584      	str	r4, [r0, #88]	@ 0x58
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 8004328:	6804      	ldr	r4, [r0, #0]
 800432a:	b29b      	uxth	r3, r3
 800432c:	6ca5      	ldr	r5, [r4, #72]	@ 0x48
 800432e:	0c2d      	lsrs	r5, r5, #16
 8004330:	042d      	lsls	r5, r5, #16
 8004332:	431d      	orrs	r5, r3
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8004334:	f44f 43fe 	mov.w	r3, #32512	@ 0x7f00
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 8004338:	64a5      	str	r5, [r4, #72]	@ 0x48
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 800433a:	60e3      	str	r3, [r4, #12]
  hdma->Instance->CSAR = SrcAddress;
 800433c:	64e1      	str	r1, [r4, #76]	@ 0x4c
  hdma->Instance->CDAR = DstAddress;
 800433e:	6522      	str	r2, [r4, #80]	@ 0x50
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 8004340:	6963      	ldr	r3, [r4, #20]
 8004342:	f443 43ba 	orr.w	r3, r3, #23808	@ 0x5d00
 8004346:	6163      	str	r3, [r4, #20]
    if (hdma->XferHalfCpltCallback != NULL)
 8004348:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 800434a:	b11b      	cbz	r3, 8004354 <HAL_DMA_Start_IT+0x54>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 800434c:	6963      	ldr	r3, [r4, #20]
 800434e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004352:	6163      	str	r3, [r4, #20]
    if (hdma->XferSuspendCallback != NULL)
 8004354:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8004356:	b11b      	cbz	r3, 8004360 <HAL_DMA_Start_IT+0x60>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8004358:	6963      	ldr	r3, [r4, #20]
 800435a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800435e:	6163      	str	r3, [r4, #20]
  return HAL_OK;
 8004360:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 8004362:	6963      	ldr	r3, [r4, #20]
 8004364:	f043 0301 	orr.w	r3, r3, #1
 8004368:	6163      	str	r3, [r4, #20]
}
 800436a:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800436c:	2340      	movs	r3, #64	@ 0x40
    __HAL_UNLOCK(hdma);
 800436e:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004372:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 8004374:	2001      	movs	r0, #1
 8004376:	e7f8      	b.n	800436a <HAL_DMA_Start_IT+0x6a>
  __HAL_LOCK(hdma);
 8004378:	2002      	movs	r0, #2
 800437a:	e7f6      	b.n	800436a <HAL_DMA_Start_IT+0x6a>

0800437c <HAL_DMA_Abort>:
{
 800437c:	b538      	push	{r3, r4, r5, lr}
 800437e:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8004380:	f7ff fcb4 	bl	8003cec <HAL_GetTick>
 8004384:	4605      	mov	r5, r0
  if (hdma == NULL)
 8004386:	b144      	cbz	r4, 800439a <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8004388:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800438c:	2b02      	cmp	r3, #2
 800438e:	d006      	beq.n	800439e <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004390:	2320      	movs	r3, #32
 8004392:	65a3      	str	r3, [r4, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004394:	2300      	movs	r3, #0
 8004396:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    return HAL_ERROR;
 800439a:	2001      	movs	r0, #1
}
 800439c:	bd38      	pop	{r3, r4, r5, pc}
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 800439e:	6822      	ldr	r2, [r4, #0]
 80043a0:	6953      	ldr	r3, [r2, #20]
 80043a2:	f043 0304 	orr.w	r3, r3, #4
 80043a6:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 80043a8:	2305      	movs	r3, #5
 80043aa:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 80043ae:	6823      	ldr	r3, [r4, #0]
 80043b0:	691a      	ldr	r2, [r3, #16]
 80043b2:	0490      	lsls	r0, r2, #18
 80043b4:	d519      	bpl.n	80043ea <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 80043b6:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80043b8:	6d21      	ldr	r1, [r4, #80]	@ 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 80043ba:	f042 0202 	orr.w	r2, r2, #2
 80043be:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 80043c0:	2204      	movs	r2, #4
 80043c2:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80043c6:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 80043ca:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 80043cc:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80043ce:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80043d0:	bf48      	it	mi
 80043d2:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
    hdma->State = HAL_DMA_STATE_READY;
 80043d4:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 80043d8:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80043dc:	bf42      	ittt	mi
 80043de:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 80043e0:	2200      	movmi	r2, #0
 80043e2:	649a      	strmi	r2, [r3, #72]	@ 0x48
    __HAL_UNLOCK(hdma);
 80043e4:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
  return HAL_OK;
 80043e8:	e7d8      	b.n	800439c <HAL_DMA_Abort+0x20>
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80043ea:	f7ff fc7f 	bl	8003cec <HAL_GetTick>
 80043ee:	1b40      	subs	r0, r0, r5
 80043f0:	2805      	cmp	r0, #5
 80043f2:	d9dc      	bls.n	80043ae <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 80043f4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80043f6:	f043 0310 	orr.w	r3, r3, #16
 80043fa:	65a3      	str	r3, [r4, #88]	@ 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 80043fc:	2303      	movs	r3, #3
 80043fe:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004402:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8004404:	061d      	lsls	r5, r3, #24
 8004406:	d5c5      	bpl.n	8004394 <HAL_DMA_Abort+0x18>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004408:	2201      	movs	r2, #1
 800440a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800440c:	731a      	strb	r2, [r3, #12]
        __HAL_UNLOCK(hdma);
 800440e:	e7c1      	b.n	8004394 <HAL_DMA_Abort+0x18>

08004410 <HAL_DMA_Abort_IT>:
  if (hdma == NULL)
 8004410:	b128      	cbz	r0, 800441e <HAL_DMA_Abort_IT+0xe>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8004412:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8004416:	2b02      	cmp	r3, #2
 8004418:	d003      	beq.n	8004422 <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800441a:	2320      	movs	r3, #32
 800441c:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 800441e:	2001      	movs	r0, #1
 8004420:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 8004422:	2304      	movs	r3, #4
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 8004424:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004426:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 800442a:	6953      	ldr	r3, [r2, #20]
  return HAL_OK;
 800442c:	2000      	movs	r0, #0
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 800442e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8004432:	f043 0304 	orr.w	r3, r3, #4
 8004436:	6153      	str	r3, [r2, #20]
}
 8004438:	4770      	bx	lr

0800443a <HAL_DMA_IRQHandler>:
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800443a:	2101      	movs	r1, #1
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 800443c:	6803      	ldr	r3, [r0, #0]
{
 800443e:	b510      	push	{r4, lr}
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004440:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
 8004444:	f022 020f 	bic.w	r2, r2, #15
{
 8004448:	4604      	mov	r4, r0
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 800444a:	68d0      	ldr	r0, [r2, #12]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800444c:	f3c3 020b 	ubfx	r2, r3, #0, #12
 8004450:	3a50      	subs	r2, #80	@ 0x50
 8004452:	f3c2 12c4 	ubfx	r2, r2, #7, #5
 8004456:	fa01 f202 	lsl.w	r2, r1, r2
  if (global_active_flag_ns == 0U)
 800445a:	4202      	tst	r2, r0
 800445c:	f000 80ab 	beq.w	80045b6 <HAL_DMA_IRQHandler+0x17c>
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U))
 8004460:	691a      	ldr	r2, [r3, #16]
 8004462:	0550      	lsls	r0, r2, #21
 8004464:	d508      	bpl.n	8004478 <HAL_DMA_IRQHandler+0x3e>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 8004466:	695a      	ldr	r2, [r3, #20]
 8004468:	0552      	lsls	r2, r2, #21
 800446a:	d505      	bpl.n	8004478 <HAL_DMA_IRQHandler+0x3e>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 800446c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004470:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 8004472:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004474:	430a      	orrs	r2, r1
 8004476:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U))
 8004478:	691a      	ldr	r2, [r3, #16]
 800447a:	0510      	lsls	r0, r2, #20
 800447c:	d509      	bpl.n	8004492 <HAL_DMA_IRQHandler+0x58>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 800447e:	695a      	ldr	r2, [r3, #20]
 8004480:	0511      	lsls	r1, r2, #20
 8004482:	d506      	bpl.n	8004492 <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 8004484:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004488:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 800448a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800448c:	f042 0202 	orr.w	r2, r2, #2
 8004490:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U))
 8004492:	691a      	ldr	r2, [r3, #16]
 8004494:	04d2      	lsls	r2, r2, #19
 8004496:	d509      	bpl.n	80044ac <HAL_DMA_IRQHandler+0x72>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8004498:	695a      	ldr	r2, [r3, #20]
 800449a:	04d0      	lsls	r0, r2, #19
 800449c:	d506      	bpl.n	80044ac <HAL_DMA_IRQHandler+0x72>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 800449e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80044a2:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 80044a4:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 80044a6:	f042 0204 	orr.w	r2, r2, #4
 80044aa:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U))
 80044ac:	691a      	ldr	r2, [r3, #16]
 80044ae:	0451      	lsls	r1, r2, #17
 80044b0:	d509      	bpl.n	80044c6 <HAL_DMA_IRQHandler+0x8c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 80044b2:	695a      	ldr	r2, [r3, #20]
 80044b4:	0452      	lsls	r2, r2, #17
 80044b6:	d506      	bpl.n	80044c6 <HAL_DMA_IRQHandler+0x8c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 80044b8:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80044bc:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 80044be:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 80044c0:	f042 0208 	orr.w	r2, r2, #8
 80044c4:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U))
 80044c6:	691a      	ldr	r2, [r3, #16]
 80044c8:	0590      	lsls	r0, r2, #22
 80044ca:	d509      	bpl.n	80044e0 <HAL_DMA_IRQHandler+0xa6>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 80044cc:	695a      	ldr	r2, [r3, #20]
 80044ce:	0591      	lsls	r1, r2, #22
 80044d0:	d506      	bpl.n	80044e0 <HAL_DMA_IRQHandler+0xa6>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 80044d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80044d6:	60da      	str	r2, [r3, #12]
      if (hdma->XferHalfCpltCallback != NULL)
 80044d8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80044da:	b10b      	cbz	r3, 80044e0 <HAL_DMA_IRQHandler+0xa6>
        hdma->XferHalfCpltCallback(hdma);
 80044dc:	4620      	mov	r0, r4
 80044de:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U))
 80044e0:	6823      	ldr	r3, [r4, #0]
 80044e2:	691a      	ldr	r2, [r3, #16]
 80044e4:	0492      	lsls	r2, r2, #18
 80044e6:	d52e      	bpl.n	8004546 <HAL_DMA_IRQHandler+0x10c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 80044e8:	695a      	ldr	r2, [r3, #20]
 80044ea:	0490      	lsls	r0, r2, #18
 80044ec:	d52b      	bpl.n	8004546 <HAL_DMA_IRQHandler+0x10c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 80044ee:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80044f2:	60da      	str	r2, [r3, #12]
      if (hdma->State == HAL_DMA_STATE_ABORT)
 80044f4:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
 80044f8:	2a04      	cmp	r2, #4
 80044fa:	d11d      	bne.n	8004538 <HAL_DMA_IRQHandler+0xfe>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 80044fc:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80044fe:	6d21      	ldr	r1, [r4, #80]	@ 0x50
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8004500:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004504:	615a      	str	r2, [r3, #20]
        hdma->Instance->CCR |= DMA_CCR_RESET;
 8004506:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004508:	0609      	lsls	r1, r1, #24
        hdma->Instance->CCR |= DMA_CCR_RESET;
 800450a:	f042 0202 	orr.w	r2, r2, #2
 800450e:	615a      	str	r2, [r3, #20]
        hdma->State = HAL_DMA_STATE_READY;
 8004510:	f04f 0201 	mov.w	r2, #1
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004514:	bf48      	it	mi
 8004516:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
        hdma->State = HAL_DMA_STATE_READY;
 8004518:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800451c:	bf42      	ittt	mi
 800451e:	730a      	strbmi	r2, [r1, #12]
          hdma->Instance->CBR1 = 0U;
 8004520:	2200      	movmi	r2, #0
 8004522:	649a      	strmi	r2, [r3, #72]	@ 0x48
        __HAL_UNLOCK(hdma);
 8004524:	2300      	movs	r3, #0
 8004526:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
        if (hdma->XferAbortCallback != NULL)
 800452a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
    if (hdma->XferErrorCallback != NULL)
 800452c:	2b00      	cmp	r3, #0
 800452e:	d042      	beq.n	80045b6 <HAL_DMA_IRQHandler+0x17c>
      hdma->XferErrorCallback(hdma);
 8004530:	4620      	mov	r0, r4
}
 8004532:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hdma->XferErrorCallback(hdma);
 8004536:	4718      	bx	r3
        hdma->State = HAL_DMA_STATE_SUSPEND;
 8004538:	2305      	movs	r3, #5
 800453a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if (hdma->XferSuspendCallback != NULL)
 800453e:	6f23      	ldr	r3, [r4, #112]	@ 0x70
 8004540:	b10b      	cbz	r3, 8004546 <HAL_DMA_IRQHandler+0x10c>
          hdma->XferSuspendCallback(hdma);
 8004542:	4620      	mov	r0, r4
 8004544:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U))
 8004546:	6823      	ldr	r3, [r4, #0]
 8004548:	691a      	ldr	r2, [r3, #16]
 800454a:	05d2      	lsls	r2, r2, #23
 800454c:	d518      	bpl.n	8004580 <HAL_DMA_IRQHandler+0x146>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 800454e:	695a      	ldr	r2, [r3, #20]
 8004550:	05d0      	lsls	r0, r2, #23
 8004552:	d515      	bpl.n	8004580 <HAL_DMA_IRQHandler+0x146>
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004554:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8004556:	0611      	lsls	r1, r2, #24
 8004558:	d526      	bpl.n	80045a8 <HAL_DMA_IRQHandler+0x16e>
        if (hdma->Instance->CLLR == 0U)
 800455a:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
 800455c:	b932      	cbnz	r2, 800456c <HAL_DMA_IRQHandler+0x132>
          if (hdma->Instance->CBR1 == 0U)
 800455e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004560:	b922      	cbnz	r2, 800456c <HAL_DMA_IRQHandler+0x132>
            hdma->State = HAL_DMA_STATE_READY;
 8004562:	2201      	movs	r2, #1
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004564:	6f61      	ldr	r1, [r4, #116]	@ 0x74
            hdma->State = HAL_DMA_STATE_READY;
 8004566:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800456a:	730a      	strb	r2, [r1, #12]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 800456c:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8004570:	60da      	str	r2, [r3, #12]
      __HAL_UNLOCK(hdma);
 8004572:	2300      	movs	r3, #0
 8004574:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      if (hdma->XferCpltCallback != NULL)
 8004578:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800457a:	b10b      	cbz	r3, 8004580 <HAL_DMA_IRQHandler+0x146>
        hdma->XferCpltCallback(hdma);
 800457c:	4620      	mov	r0, r4
 800457e:	4798      	blx	r3
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004580:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8004582:	b1c3      	cbz	r3, 80045b6 <HAL_DMA_IRQHandler+0x17c>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004584:	6822      	ldr	r2, [r4, #0]
 8004586:	6953      	ldr	r3, [r2, #20]
 8004588:	f043 0302 	orr.w	r3, r3, #2
 800458c:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_READY;
 800458e:	2301      	movs	r3, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004590:	6d22      	ldr	r2, [r4, #80]	@ 0x50
    hdma->State = HAL_DMA_STATE_READY;
 8004592:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004596:	0612      	lsls	r2, r2, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004598:	bf44      	itt	mi
 800459a:	6f62      	ldrmi	r2, [r4, #116]	@ 0x74
 800459c:	7313      	strbmi	r3, [r2, #12]
    __HAL_UNLOCK(hdma);
 800459e:	2300      	movs	r3, #0
 80045a0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    if (hdma->XferErrorCallback != NULL)
 80045a4:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 80045a6:	e7c1      	b.n	800452c <HAL_DMA_IRQHandler+0xf2>
        if (hdma->Instance->CBR1 == 0U)
 80045a8:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80045aa:	2a00      	cmp	r2, #0
 80045ac:	d1de      	bne.n	800456c <HAL_DMA_IRQHandler+0x132>
          hdma->State = HAL_DMA_STATE_READY;
 80045ae:	2201      	movs	r2, #1
 80045b0:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 80045b4:	e7da      	b.n	800456c <HAL_DMA_IRQHandler+0x132>
}
 80045b6:	bd10      	pop	{r4, pc}

080045b8 <HAL_DMA_GetError>:
  return hdma->ErrorCode;
 80045b8:	6d80      	ldr	r0, [r0, #88]	@ 0x58
}
 80045ba:	4770      	bx	lr

080045bc <HAL_DMA_ConfigChannelAttributes>:
  if (hdma == NULL)
 80045bc:	b1d0      	cbz	r0, 80045f4 <HAL_DMA_ConfigChannelAttributes+0x38>
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 80045be:	06cb      	lsls	r3, r1, #27
 80045c0:	d401      	bmi.n	80045c6 <HAL_DMA_ConfigChannelAttributes+0xa>
  return HAL_OK;
 80045c2:	2000      	movs	r0, #0
 80045c4:	4770      	bx	lr
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 80045c6:	6803      	ldr	r3, [r0, #0]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045c8:	2001      	movs	r0, #1
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 80045ca:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 80045d2:	f022 020f 	bic.w	r2, r2, #15
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 80045d6:	f001 0111 	and.w	r1, r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045da:	3b50      	subs	r3, #80	@ 0x50
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 80045dc:	2911      	cmp	r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045de:	f3c3 13c4 	ubfx	r3, r3, #7, #5
      p_dma_instance->PRIVCFGR |= channel_idx;
 80045e2:	6851      	ldr	r1, [r2, #4]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045e4:	fa00 f303 	lsl.w	r3, r0, r3
      p_dma_instance->PRIVCFGR |= channel_idx;
 80045e8:	bf0c      	ite	eq
 80045ea:	430b      	orreq	r3, r1
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 80045ec:	ea21 0303 	bicne.w	r3, r1, r3
 80045f0:	6053      	str	r3, [r2, #4]
 80045f2:	e7e6      	b.n	80045c2 <HAL_DMA_ConfigChannelAttributes+0x6>
    return HAL_ERROR;
 80045f4:	2001      	movs	r0, #1
}
 80045f6:	4770      	bx	lr

080045f8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80045f8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80045fa:	4604      	mov	r4, r0
 80045fc:	2800      	cmp	r0, #0
 80045fe:	d036      	beq.n	800466e <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004600:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
 8004604:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004608:	b91b      	cbnz	r3, 8004612 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800460a:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800460e:	f7fc f947 	bl	80008a0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004612:	2302      	movs	r3, #2
 8004614:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004618:	6823      	ldr	r3, [r4, #0]
 800461a:	69e0      	ldr	r0, [r4, #28]
 800461c:	6819      	ldr	r1, [r3, #0]
 800461e:	6862      	ldr	r2, [r4, #4]
 8004620:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
 8004624:	4302      	orrs	r2, r0
 8004626:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 800462a:	430a      	orrs	r2, r1
 800462c:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 800462e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004630:	69a0      	ldr	r0, [r4, #24]
 8004632:	68a2      	ldr	r2, [r4, #8]
 8004634:	f421 7183 	bic.w	r1, r1, #262	@ 0x106
 8004638:	4302      	orrs	r2, r0
 800463a:	f021 0101 	bic.w	r1, r1, #1
 800463e:	430a      	orrs	r2, r1
 8004640:	635a      	str	r2, [r3, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004642:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004644:	68e1      	ldr	r1, [r4, #12]
 8004646:	0c12      	lsrs	r2, r2, #16
 8004648:	0412      	lsls	r2, r2, #16
 800464a:	430a      	orrs	r2, r1
 800464c:	641a      	str	r2, [r3, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 800464e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004650:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8004654:	0552      	lsls	r2, r2, #21
 8004656:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
 800465a:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800465e:	430a      	orrs	r2, r1
 8004660:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004662:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004664:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004666:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004668:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
 800466c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800466e:	2001      	movs	r0, #1
 8004670:	e7fc      	b.n	800466c <HAL_DMA2D_Init+0x74>

08004672 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004672:	4770      	bx	lr

08004674 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004674:	4770      	bx	lr

08004676 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004676:	6803      	ldr	r3, [r0, #0]
{
 8004678:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800467a:	685e      	ldr	r6, [r3, #4]
{
 800467c:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800467e:	07f2      	lsls	r2, r6, #31
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004680:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004682:	d514      	bpl.n	80046ae <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004684:	05e9      	lsls	r1, r5, #23
 8004686:	d512      	bpl.n	80046ae <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004688:	681a      	ldr	r2, [r3, #0]
 800468a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800468e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004690:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 8004692:	f042 0201 	orr.w	r2, r2, #1
 8004696:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004698:	2201      	movs	r2, #1
 800469a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800469c:	2304      	movs	r3, #4
 800469e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046a2:	2300      	movs	r3, #0
 80046a4:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 80046a8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80046aa:	b103      	cbz	r3, 80046ae <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80046ac:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80046ae:	06b2      	lsls	r2, r6, #26
 80046b0:	d516      	bpl.n	80046e0 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80046b2:	04ab      	lsls	r3, r5, #18
 80046b4:	d514      	bpl.n	80046e0 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80046b6:	6823      	ldr	r3, [r4, #0]
 80046b8:	681a      	ldr	r2, [r3, #0]
 80046ba:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80046be:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80046c0:	2220      	movs	r2, #32
 80046c2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80046c4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046c6:	f043 0302 	orr.w	r3, r3, #2
 80046ca:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80046cc:	2304      	movs	r3, #4
 80046ce:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046d2:	2300      	movs	r3, #0
 80046d4:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 80046d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80046da:	b10b      	cbz	r3, 80046e0 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80046dc:	4620      	mov	r0, r4
 80046de:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80046e0:	0730      	lsls	r0, r6, #28
 80046e2:	d516      	bpl.n	8004712 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80046e4:	0529      	lsls	r1, r5, #20
 80046e6:	d514      	bpl.n	8004712 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80046e8:	6823      	ldr	r3, [r4, #0]
 80046ea:	681a      	ldr	r2, [r3, #0]
 80046ec:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80046f0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80046f2:	2208      	movs	r2, #8
 80046f4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80046f6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046f8:	f043 0304 	orr.w	r3, r3, #4
 80046fc:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80046fe:	2304      	movs	r3, #4
 8004700:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 8004704:	2300      	movs	r3, #0
 8004706:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 800470a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800470c:	b10b      	cbz	r3, 8004712 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800470e:	4620      	mov	r0, r4
 8004710:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004712:	0772      	lsls	r2, r6, #29
 8004714:	d50b      	bpl.n	800472e <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004716:	056b      	lsls	r3, r5, #21
 8004718:	d509      	bpl.n	800472e <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800471a:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800471c:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800471e:	681a      	ldr	r2, [r3, #0]
 8004720:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004724:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004726:	2204      	movs	r2, #4
 8004728:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800472a:	f7ff ffa2 	bl	8004672 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800472e:	07b0      	lsls	r0, r6, #30
 8004730:	d514      	bpl.n	800475c <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004732:	05a9      	lsls	r1, r5, #22
 8004734:	d512      	bpl.n	800475c <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004736:	6823      	ldr	r3, [r4, #0]
 8004738:	681a      	ldr	r2, [r3, #0]
 800473a:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800473e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004740:	2202      	movs	r2, #2
 8004742:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004744:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004746:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004748:	2301      	movs	r3, #1
 800474a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800474e:	2300      	movs	r3, #0
 8004750:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
 8004754:	6a23      	ldr	r3, [r4, #32]
 8004756:	b10b      	cbz	r3, 800475c <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004758:	4620      	mov	r0, r4
 800475a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800475c:	06f2      	lsls	r2, r6, #27
 800475e:	d513      	bpl.n	8004788 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004760:	04eb      	lsls	r3, r5, #19
 8004762:	d511      	bpl.n	8004788 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004764:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004766:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004768:	681a      	ldr	r2, [r3, #0]
 800476a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800476e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004770:	2210      	movs	r2, #16
 8004772:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004774:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004776:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004778:	2301      	movs	r3, #1
 800477a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800477e:	2300      	movs	r3, #0
 8004780:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004784:	f7ff ff76 	bl	8004674 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004788:	bd70      	pop	{r4, r5, r6, pc}
	...

0800478c <DMA_List_GetCLLRNodeInfo.isra.0>:
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 800478c:	0783      	lsls	r3, r0, #30
 800478e:	d506      	bpl.n	800479e <DMA_List_GetCLLRNodeInfo.isra.0+0x12>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 8004790:	b109      	cbz	r1, 8004796 <DMA_List_GetCLLRNodeInfo.isra.0+0xa>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 8004792:	4b06      	ldr	r3, [pc, #24]	@ (80047ac <DMA_List_GetCLLRNodeInfo.isra.0+0x20>)
 8004794:	600b      	str	r3, [r1, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 8004796:	b10a      	cbz	r2, 800479c <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 8004798:	2307      	movs	r3, #7
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 800479a:	6013      	str	r3, [r2, #0]
    }
  }
}
 800479c:	4770      	bx	lr
    if (cllr_mask != NULL)
 800479e:	b109      	cbz	r1, 80047a4 <DMA_List_GetCLLRNodeInfo.isra.0+0x18>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 80047a0:	4b03      	ldr	r3, [pc, #12]	@ (80047b0 <DMA_List_GetCLLRNodeInfo.isra.0+0x24>)
 80047a2:	600b      	str	r3, [r1, #0]
    if (cllr_offset != NULL)
 80047a4:	2a00      	cmp	r2, #0
 80047a6:	d0f9      	beq.n	800479c <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 80047a8:	2305      	movs	r3, #5
 80047aa:	e7f6      	b.n	800479a <DMA_List_GetCLLRNodeInfo.isra.0+0xe>
 80047ac:	fe010000 	.word	0xfe010000
 80047b0:	f8010000 	.word	0xf8010000

080047b4 <HAL_DMAEx_List_Start_IT>:
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 80047b4:	4603      	mov	r3, r0
{
 80047b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 80047b8:	2800      	cmp	r0, #0
 80047ba:	d04b      	beq.n	8004854 <HAL_DMAEx_List_Start_IT+0xa0>
 80047bc:	6f42      	ldr	r2, [r0, #116]	@ 0x74
 80047be:	2a00      	cmp	r2, #0
 80047c0:	d048      	beq.n	8004854 <HAL_DMAEx_List_Start_IT+0xa0>
  dma_state = hdma->State;
 80047c2:	f890 1054 	ldrb.w	r1, [r0, #84]	@ 0x54
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 80047c6:	6804      	ldr	r4, [r0, #0]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 80047c8:	2901      	cmp	r1, #1
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 80047ca:	6960      	ldr	r0, [r4, #20]
  dma_state = hdma->State;
 80047cc:	b2cd      	uxtb	r5, r1
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 80047ce:	d003      	beq.n	80047d8 <HAL_DMAEx_List_Start_IT+0x24>
 80047d0:	2d02      	cmp	r5, #2
 80047d2:	d13a      	bne.n	800484a <HAL_DMAEx_List_Start_IT+0x96>
 80047d4:	03c1      	lsls	r1, r0, #15
 80047d6:	d538      	bpl.n	800484a <HAL_DMAEx_List_Start_IT+0x96>
    if (hdma->State == HAL_DMA_STATE_READY)
 80047d8:	f893 1054 	ldrb.w	r1, [r3, #84]	@ 0x54
 80047dc:	2901      	cmp	r1, #1
 80047de:	b2cd      	uxtb	r5, r1
 80047e0:	d12c      	bne.n	800483c <HAL_DMAEx_List_Start_IT+0x88>
      __HAL_LOCK(hdma);
 80047e2:	f893 104c 	ldrb.w	r1, [r3, #76]	@ 0x4c
 80047e6:	2002      	movs	r0, #2
 80047e8:	2901      	cmp	r1, #1
 80047ea:	d02c      	beq.n	8004846 <HAL_DMAEx_List_Start_IT+0x92>
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 80047ec:	2100      	movs	r1, #0
      hdma->State                  = HAL_DMA_STATE_BUSY;
 80047ee:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
      __HAL_LOCK(hdma);
 80047f2:	f883 504c 	strb.w	r5, [r3, #76]	@ 0x4c
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 80047f6:	7310      	strb	r0, [r2, #12]
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 80047f8:	6599      	str	r1, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 80047fa:	6111      	str	r1, [r2, #16]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80047fc:	6961      	ldr	r1, [r4, #20]
 80047fe:	f441 41ba 	orr.w	r1, r1, #23808	@ 0x5d00
 8004802:	6161      	str	r1, [r4, #20]
      if (hdma->XferHalfCpltCallback != NULL)
 8004804:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 8004806:	b119      	cbz	r1, 8004810 <HAL_DMAEx_List_Start_IT+0x5c>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8004808:	6961      	ldr	r1, [r4, #20]
 800480a:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 800480e:	6161      	str	r1, [r4, #20]
      if (hdma->XferSuspendCallback != NULL)
 8004810:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004812:	b11b      	cbz	r3, 800481c <HAL_DMAEx_List_Start_IT+0x68>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8004814:	6963      	ldr	r3, [r4, #20]
 8004816:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800481a:	6163      	str	r3, [r4, #20]
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 800481c:	6815      	ldr	r5, [r2, #0]
 800481e:	a901      	add	r1, sp, #4
 8004820:	6a28      	ldr	r0, [r5, #32]
 8004822:	2200      	movs	r2, #0
 8004824:	f7ff ffb2 	bl	800478c <DMA_List_GetCLLRNodeInfo.isra.0>
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 8004828:	0c2b      	lsrs	r3, r5, #16
 800482a:	041b      	lsls	r3, r3, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 800482c:	f025 0503 	bic.w	r5, r5, #3
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 8004830:	6023      	str	r3, [r4, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 8004832:	042d      	lsls	r5, r5, #16
 8004834:	9b01      	ldr	r3, [sp, #4]
 8004836:	0c2d      	lsrs	r5, r5, #16
 8004838:	431d      	orrs	r5, r3
 800483a:	67e5      	str	r5, [r4, #124]	@ 0x7c
  return HAL_OK;
 800483c:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 800483e:	6963      	ldr	r3, [r4, #20]
 8004840:	f043 0301 	orr.w	r3, r3, #1
 8004844:	6163      	str	r3, [r4, #20]
}
 8004846:	b003      	add	sp, #12
 8004848:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800484a:	2240      	movs	r2, #64	@ 0x40
 800484c:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 800484e:	2200      	movs	r2, #0
 8004850:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 8004854:	2001      	movs	r0, #1
 8004856:	e7f6      	b.n	8004846 <HAL_DMAEx_List_Start_IT+0x92>

08004858 <HAL_DMAEx_ConfigDataHandling>:
  if ((hdma == NULL) || (pConfigDataHandling == NULL))
 8004858:	b1b0      	cbz	r0, 8004888 <HAL_DMAEx_ConfigDataHandling+0x30>
 800485a:	b1a9      	cbz	r1, 8004888 <HAL_DMAEx_ConfigDataHandling+0x30>
  if (hdma->State == HAL_DMA_STATE_READY)
 800485c:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8004860:	2b01      	cmp	r3, #1
 8004862:	d10c      	bne.n	800487e <HAL_DMAEx_ConfigDataHandling+0x26>
    MODIFY_REG(hdma->Instance->CTR1, (DMA_CTR1_DHX | DMA_CTR1_DBX | DMA_CTR1_SBX | DMA_CTR1_PAM),
 8004864:	e9d1 1300 	ldrd	r1, r3, [r1]
 8004868:	6800      	ldr	r0, [r0, #0]
 800486a:	430b      	orrs	r3, r1
 800486c:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800486e:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 8004872:	f422 5260 	bic.w	r2, r2, #14336	@ 0x3800
 8004876:	4313      	orrs	r3, r2
 8004878:	6403      	str	r3, [r0, #64]	@ 0x40
  return HAL_OK;
 800487a:	2000      	movs	r0, #0
 800487c:	4770      	bx	lr
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800487e:	2340      	movs	r3, #64	@ 0x40
 8004880:	6583      	str	r3, [r0, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004882:	2300      	movs	r3, #0
 8004884:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
    return HAL_ERROR;
 8004888:	2001      	movs	r0, #1
}
 800488a:	4770      	bx	lr

0800488c <HAL_DMAEx_GetFifoLevel>:
  return ((hdma->Instance->CSR & DMA_CSR_FIFOL) >> DMA_CSR_FIFOL_Pos);
 800488c:	6803      	ldr	r3, [r0, #0]
 800488e:	6918      	ldr	r0, [r3, #16]
}
 8004890:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8004894:	4770      	bx	lr
	...

08004898 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8004898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800489c:	4b81      	ldr	r3, [pc, #516]	@ (8004aa4 <HAL_GPIO_Init+0x20c>)
{
 800489e:	b085      	sub	sp, #20
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 80048a0:	ea03 2390 	and.w	r3, r3, r0, lsr #10
 80048a4:	9303      	str	r3, [sp, #12]
 80048a6:	4b80      	ldr	r3, [pc, #512]	@ (8004aa8 <HAL_GPIO_Init+0x210>)
  uint32_t position = 0U;
 80048a8:	2200      	movs	r2, #0
 80048aa:	9302      	str	r3, [sp, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 80048ac:	f04f 0e03 	mov.w	lr, #3
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80048b0:	4603      	mov	r3, r0
        EXTI->EXTICR[position >> 2U] = tmp;

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 80048b2:	4f7e      	ldr	r7, [pc, #504]	@ (8004aac <HAL_GPIO_Init+0x214>)
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80048b4:	680e      	ldr	r6, [r1, #0]
 80048b6:	fa36 f402 	lsrs.w	r4, r6, r2
 80048ba:	d102      	bne.n	80048c2 <HAL_GPIO_Init+0x2a>
        EXTI->IMR1 = tmp;
      }
    }
    position++;
  }
}
 80048bc:	b005      	add	sp, #20
 80048be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 80048c2:	2401      	movs	r4, #1
 80048c4:	fa04 fc02 	lsl.w	ip, r4, r2
    if (iocurrent != 0U)
 80048c8:	ea1c 0406 	ands.w	r4, ip, r6
 80048cc:	9401      	str	r4, [sp, #4]
 80048ce:	f000 808e 	beq.w	80049ee <HAL_GPIO_Init+0x156>
      if (GPIOx == LPGPIO1)
 80048d2:	4c77      	ldr	r4, [pc, #476]	@ (8004ab0 <HAL_GPIO_Init+0x218>)
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80048d4:	684d      	ldr	r5, [r1, #4]
      if (GPIOx == LPGPIO1)
 80048d6:	42a0      	cmp	r0, r4
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80048d8:	f025 0810 	bic.w	r8, r5, #16
      if (GPIOx == LPGPIO1)
 80048dc:	f040 808c 	bne.w	80049f8 <HAL_GPIO_Init+0x160>
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048e0:	260f      	movs	r6, #15
        tmp = GPIOx->MODER;
 80048e2:	6804      	ldr	r4, [r0, #0]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80048e4:	f005 0301 	and.w	r3, r5, #1
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 80048e8:	ea24 040c 	bic.w	r4, r4, ip
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80048ec:	4093      	lsls	r3, r2
 80048ee:	4323      	orrs	r3, r4
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80048f0:	9c02      	ldr	r4, [sp, #8]
        GPIOx->MODER = tmp;
 80048f2:	6003      	str	r3, [r0, #0]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80048f4:	6864      	ldr	r4, [r4, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 80048f6:	9b02      	ldr	r3, [sp, #8]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048f8:	f004 0c07 	and.w	ip, r4, #7
 80048fc:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004900:	fa06 fa0c 	lsl.w	sl, r6, ip
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 8004904:	260b      	movs	r6, #11
 8004906:	fa06 fc0c 	lsl.w	ip, r6, ip
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 800490a:	2602      	movs	r6, #2
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 800490c:	681b      	ldr	r3, [r3, #0]
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 800490e:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8004912:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 8004916:	f8d9 b020 	ldr.w	fp, [r9, #32]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 800491a:	ea2b 0a0a 	bic.w	sl, fp, sl
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 800491e:	ea4c 0c0a 	orr.w	ip, ip, sl
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 8004922:	f8c9 c020 	str.w	ip, [r9, #32]
        tmp = p_gpio->MODER;
 8004926:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 800492a:	ea4f 0c44 	mov.w	ip, r4, lsl #1
 800492e:	fa0e fa0c 	lsl.w	sl, lr, ip
 8004932:	ea29 090a 	bic.w	r9, r9, sl
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004936:	fa06 fc0c 	lsl.w	ip, r6, ip
 800493a:	ea4c 0c09 	orr.w	ip, ip, r9
        p_gpio->MODER = tmp;
 800493e:	f8c3 c000 	str.w	ip, [r3]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004942:	f108 38ff 	add.w	r8, r8, #4294967295
 8004946:	f1b8 0f01 	cmp.w	r8, #1
 800494a:	f240 8082 	bls.w	8004a52 <HAL_GPIO_Init+0x1ba>
      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 800494e:	2d03      	cmp	r5, #3
 8004950:	d04d      	beq.n	80049ee <HAL_GPIO_Init+0x156>
        tmp = p_gpio->PUPDR;
 8004952:	f8d3 800c 	ldr.w	r8, [r3, #12]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004956:	688e      	ldr	r6, [r1, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004958:	0064      	lsls	r4, r4, #1
 800495a:	fa0e fc04 	lsl.w	ip, lr, r4
 800495e:	ea28 0c0c 	bic.w	ip, r8, ip
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004962:	fa06 f404 	lsl.w	r4, r6, r4
 8004966:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->PUPDR = tmp;
 800496a:	60dc      	str	r4, [r3, #12]
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800496c:	00ec      	lsls	r4, r5, #3
 800496e:	d53e      	bpl.n	80049ee <HAL_GPIO_Init+0x156>
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004970:	260f      	movs	r6, #15
 8004972:	f022 0c03 	bic.w	ip, r2, #3
 8004976:	f10c 4c8c 	add.w	ip, ip, #1174405120	@ 0x46000000
 800497a:	f002 0403 	and.w	r4, r2, #3
 800497e:	f50c 3c08 	add.w	ip, ip, #139264	@ 0x22000
 8004982:	00e4      	lsls	r4, r4, #3
        tmp = EXTI->EXTICR[position >> 2U];
 8004984:	f8dc 9060 	ldr.w	r9, [ip, #96]	@ 0x60
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004988:	fa06 f804 	lsl.w	r8, r6, r4
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800498c:	9e03      	ldr	r6, [sp, #12]
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800498e:	ea29 0808 	bic.w	r8, r9, r8
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004992:	fa06 f404 	lsl.w	r4, r6, r4
        tmp &= ~((uint32_t)iocurrent);
 8004996:	9e01      	ldr	r6, [sp, #4]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004998:	ea44 0408 	orr.w	r4, r4, r8
        EXTI->EXTICR[position >> 2U] = tmp;
 800499c:	f8cc 4060 	str.w	r4, [ip, #96]	@ 0x60
        tmp &= ~((uint32_t)iocurrent);
 80049a0:	ea6f 0c06 	mvn.w	ip, r6
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80049a4:	02ee      	lsls	r6, r5, #11
          tmp |= iocurrent;
 80049a6:	bf48      	it	mi
 80049a8:	9e01      	ldrmi	r6, [sp, #4]
        tmp = EXTI->RTSR1;
 80049aa:	683c      	ldr	r4, [r7, #0]
          tmp |= iocurrent;
 80049ac:	bf4c      	ite	mi
 80049ae:	4334      	orrmi	r4, r6
        tmp &= ~((uint32_t)iocurrent);
 80049b0:	ea0c 0404 	andpl.w	r4, ip, r4
        EXTI->RTSR1 = tmp;
 80049b4:	603c      	str	r4, [r7, #0]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80049b6:	02ae      	lsls	r6, r5, #10
        tmp = EXTI->FTSR1;
 80049b8:	687c      	ldr	r4, [r7, #4]
          tmp |= iocurrent;
 80049ba:	bf4a      	itet	mi
 80049bc:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80049be:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80049c2:	4334      	orrmi	r4, r6
        EXTI->FTSR1 = tmp;
 80049c4:	607c      	str	r4, [r7, #4]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80049c6:	03ae      	lsls	r6, r5, #14
        tmp = EXTI->EMR1;
 80049c8:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
          tmp |= iocurrent;
 80049cc:	bf4a      	itet	mi
 80049ce:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80049d0:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80049d4:	4334      	orrmi	r4, r6
        EXTI->EMR1 = tmp;
 80049d6:	f8c7 4084 	str.w	r4, [r7, #132]	@ 0x84
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80049da:	03ed      	lsls	r5, r5, #15
        tmp = EXTI->IMR1;
 80049dc:	f8d7 4080 	ldr.w	r4, [r7, #128]	@ 0x80
          tmp |= iocurrent;
 80049e0:	bf4a      	itet	mi
 80049e2:	9d01      	ldrmi	r5, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80049e4:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80049e8:	432c      	orrmi	r4, r5
        EXTI->IMR1 = tmp;
 80049ea:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
    position++;
 80049ee:	9c02      	ldr	r4, [sp, #8]
 80049f0:	3201      	adds	r2, #1
 80049f2:	3408      	adds	r4, #8
 80049f4:	9402      	str	r4, [sp, #8]
 80049f6:	e75d      	b.n	80048b4 <HAL_GPIO_Init+0x1c>
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80049f8:	ea4f 0942 	mov.w	r9, r2, lsl #1
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80049fc:	fa0e f409 	lsl.w	r4, lr, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a00:	f005 0c03 	and.w	ip, r5, #3
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004a04:	f1b8 0f02 	cmp.w	r8, #2
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a08:	ea6f 0404 	mvn.w	r4, r4
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a0c:	fa0c fc09 	lsl.w	ip, ip, r9
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004a10:	d13e      	bne.n	8004a90 <HAL_GPIO_Init+0x1f8>
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a12:	260f      	movs	r6, #15
        tmp = GPIOx->AFR[position >> 3U];
 8004a14:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a18:	f002 0907 	and.w	r9, r2, #7
 8004a1c:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8004a20:	ea4f 0989 	mov.w	r9, r9, lsl #2
        tmp = GPIOx->AFR[position >> 3U];
 8004a24:	f8d8 a020 	ldr.w	sl, [r8, #32]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a28:	fa06 fb09 	lsl.w	fp, r6, r9
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a2c:	690e      	ldr	r6, [r1, #16]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a2e:	ea2a 0a0b 	bic.w	sl, sl, fp
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a32:	f006 0b0f 	and.w	fp, r6, #15
 8004a36:	fa0b fb09 	lsl.w	fp, fp, r9
 8004a3a:	ea4b 0b0a 	orr.w	fp, fp, sl
        GPIOx->AFR[position >> 3U] = tmp;
 8004a3e:	f8c8 b020 	str.w	fp, [r8, #32]
        tmp = p_gpio->MODER;
 8004a42:	f8d3 8000 	ldr.w	r8, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a46:	ea04 0808 	and.w	r8, r4, r8
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a4a:	ea48 040c 	orr.w	r4, r8, ip
        p_gpio->MODER = tmp;
 8004a4e:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a50:	4614      	mov	r4, r2
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a52:	68ce      	ldr	r6, [r1, #12]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a54:	ea4f 0844 	mov.w	r8, r4, lsl #1
 8004a58:	fa0e f908 	lsl.w	r9, lr, r8
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a5c:	fa06 f808 	lsl.w	r8, r6, r8
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004a60:	2601      	movs	r6, #1
        tmp = p_gpio->OSPEEDR;
 8004a62:	f8d3 c008 	ldr.w	ip, [r3, #8]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a66:	ea2c 0c09 	bic.w	ip, ip, r9
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a6a:	ea48 080c 	orr.w	r8, r8, ip
        p_gpio->OSPEEDR = tmp;
 8004a6e:	f8c3 8008 	str.w	r8, [r3, #8]
        tmp = p_gpio->OTYPER;
 8004a72:	f8d3 8004 	ldr.w	r8, [r3, #4]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004a76:	fa06 fc04 	lsl.w	ip, r6, r4
 8004a7a:	ea28 080c 	bic.w	r8, r8, ip
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 8004a7e:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8004a82:	fa0c fc04 	lsl.w	ip, ip, r4
 8004a86:	ea4c 0c08 	orr.w	ip, ip, r8
        p_gpio->OTYPER = tmp;
 8004a8a:	f8c3 c004 	str.w	ip, [r3, #4]
 8004a8e:	e75e      	b.n	800494e <HAL_GPIO_Init+0xb6>
        tmp = p_gpio->MODER;
 8004a90:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a94:	ea04 0409 	and.w	r4, r4, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a98:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->MODER = tmp;
 8004a9c:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a9e:	4614      	mov	r4, r2
 8004aa0:	e74f      	b.n	8004942 <HAL_GPIO_Init+0xaa>
 8004aa2:	bf00      	nop
 8004aa4:	002f7f7f 	.word	0x002f7f7f
 8004aa8:	08035644 	.word	0x08035644
 8004aac:	46022000 	.word	0x46022000
 8004ab0:	46020000 	.word	0x46020000

08004ab4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0U)
 8004ab4:	6903      	ldr	r3, [r0, #16]
 8004ab6:	4219      	tst	r1, r3
  {
    bitstatus = GPIO_PIN_RESET;
  }

  return bitstatus;
}
 8004ab8:	bf14      	ite	ne
 8004aba:	2001      	movne	r0, #1
 8004abc:	2000      	moveq	r0, #0
 8004abe:	4770      	bx	lr

08004ac0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004ac0:	b10a      	cbz	r2, 8004ac6 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004ac2:	6181      	str	r1, [r0, #24]
 8004ac4:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 8004ac6:	6281      	str	r1, [r0, #40]	@ 0x28
  }
}
 8004ac8:	4770      	bx	lr

08004aca <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004aca:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004acc:	ea01 0203 	and.w	r2, r1, r3
 8004ad0:	ea21 0103 	bic.w	r1, r1, r3
 8004ad4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004ad8:	6181      	str	r1, [r0, #24]
}
 8004ada:	4770      	bx	lr

08004adc <HAL_GPIO_EXTI_Rising_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8004adc:	4770      	bx	lr
	...

08004ae0 <HAL_GPIO_EXTI_IRQHandler>:
{
 8004ae0:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004ae2:	4d08      	ldr	r5, [pc, #32]	@ (8004b04 <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8004ae4:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004ae6:	68eb      	ldr	r3, [r5, #12]
 8004ae8:	4203      	tst	r3, r0
 8004aea:	d002      	beq.n	8004af2 <HAL_GPIO_EXTI_IRQHandler+0x12>
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8004aec:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8004aee:	f7ff fff5 	bl	8004adc <HAL_GPIO_EXTI_Rising_Callback>
  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8004af2:	692b      	ldr	r3, [r5, #16]
 8004af4:	421c      	tst	r4, r3
 8004af6:	d003      	beq.n	8004b00 <HAL_GPIO_EXTI_IRQHandler+0x20>
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004af8:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8004afa:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004afc:	f7fc fb1e 	bl	800113c <HAL_GPIO_EXTI_Falling_Callback>
}
 8004b00:	bd38      	pop	{r3, r4, r5, pc}
 8004b02:	bf00      	nop
 8004b04:	46022000 	.word	0x46022000

08004b08 <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8004b08:	b510      	push	{r4, lr}
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8004b0a:	4604      	mov	r4, r0
 8004b0c:	b170      	cbz	r0, 8004b2c <HAL_GPU2D_Init+0x24>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8004b0e:	7943      	ldrb	r3, [r0, #5]
 8004b10:	b93b      	cbnz	r3, 8004b22 <HAL_GPU2D_Init+0x1a>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8004b12:	f7fb fee9 	bl	80008e8 <HAL_GPU2D_MspInit>
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004b16:	2000      	movs	r0, #0

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8004b18:	f44f 7380 	mov.w	r3, #256	@ 0x100
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004b1c:	60a0      	str	r0, [r4, #8]
  __HAL_UNLOCK(hgpu2d);
 8004b1e:	80a3      	strh	r3, [r4, #4]

  return HAL_OK;
}
 8004b20:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hgpu2d);
 8004b22:	7903      	ldrb	r3, [r0, #4]
 8004b24:	2b01      	cmp	r3, #1
 8004b26:	d1f6      	bne.n	8004b16 <HAL_GPU2D_Init+0xe>
 8004b28:	2002      	movs	r0, #2
 8004b2a:	e7f9      	b.n	8004b20 <HAL_GPU2D_Init+0x18>
    return HAL_ERROR;
 8004b2c:	2001      	movs	r0, #1
 8004b2e:	e7f7      	b.n	8004b20 <HAL_GPU2D_Init+0x18>

08004b30 <HAL_GPU2D_ReadRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8004b30:	6803      	ldr	r3, [r0, #0]
 8004b32:	58c8      	ldr	r0, [r1, r3]

  return value;
}
 8004b34:	4770      	bx	lr

08004b36 <HAL_GPU2D_WriteRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004b36:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8004b38:	2000      	movs	r0, #0
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004b3a:	50ca      	str	r2, [r1, r3]
}
 8004b3c:	4770      	bx	lr

08004b3e <HAL_GPU2D_IRQHandler>:
  *                the configuration information for the GPU2D.
  * @retval None
  */
void HAL_GPU2D_IRQHandler(GPU2D_HandleTypeDef *hgpu2d)
{
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004b3e:	6802      	ldr	r2, [r0, #0]
{
 8004b40:	b508      	push	{r3, lr}
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004b42:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8

  /* Command List Complete Interrupt management */
  if ((isr_flags & GPU2D_FLAG_CLC) != 0U)
 8004b46:	07c9      	lsls	r1, r1, #31
 8004b48:	d50a      	bpl.n	8004b60 <HAL_GPU2D_IRQHandler+0x22>
  {
    uint32_t last_cl_id;

    /* Clear the completion flag */
    __HAL_GPU2D_CLEAR_FLAG(hgpu2d, GPU2D_FLAG_CLC);
 8004b4a:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8
 8004b4e:	f021 0101 	bic.w	r1, r1, #1
 8004b52:	f8c2 10f8 	str.w	r1, [r2, #248]	@ 0xf8

    last_cl_id = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_CLID);
 8004b56:	6803      	ldr	r3, [r0, #0]
 8004b58:	f8d3 1148 	ldr.w	r1, [r3, #328]	@ 0x148
    if (hgpu2d->CommandListCpltCallback != NULL)
    {
      hgpu2d->CommandListCpltCallback(hgpu2d, last_cl_id);
    }
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    HAL_GPU2D_CommandListCpltCallback(hgpu2d, last_cl_id);
 8004b5c:	f7fe f8ca 	bl	8002cf4 <HAL_GPU2D_CommandListCpltCallback>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
  }
}
 8004b60:	bd08      	pop	{r3, pc}

08004b62 <HAL_GPU2D_ErrorCallback>:
            the HAL_GPU2D_ErrorCallback can be implemented in the user file.
            The default implementation stops the execution as an error is considered
            fatal and non recoverable.
   */

  for (;;)
 8004b62:	e7fe      	b.n	8004b62 <HAL_GPU2D_ErrorCallback>

08004b64 <HAL_GPU2D_ER_IRQHandler>:
{
 8004b64:	b508      	push	{r3, lr}
  HAL_GPU2D_ErrorCallback(hgpu2d);
 8004b66:	f7ff fffc 	bl	8004b62 <HAL_GPU2D_ErrorCallback>
}
 8004b6a:	bd08      	pop	{r3, pc}

08004b6c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004b6c:	6803      	ldr	r3, [r0, #0]
 8004b6e:	699a      	ldr	r2, [r3, #24]
 8004b70:	0791      	lsls	r1, r2, #30
  {
    hi2c->Instance->TXDR = 0x00U;
 8004b72:	bf44      	itt	mi
 8004b74:	2200      	movmi	r2, #0
 8004b76:	629a      	strmi	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004b78:	699a      	ldr	r2, [r3, #24]
 8004b7a:	07d2      	lsls	r2, r2, #31
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004b7c:	bf5e      	ittt	pl
 8004b7e:	699a      	ldrpl	r2, [r3, #24]
 8004b80:	f042 0201 	orrpl.w	r2, r2, #1
 8004b84:	619a      	strpl	r2, [r3, #24]
  }
}
 8004b86:	4770      	bx	lr

08004b88 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004b88:	b530      	push	{r4, r5, lr}
 8004b8a:	9d03      	ldr	r5, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b8c:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b8e:	432b      	orrs	r3, r5
 8004b90:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b94:	4a06      	ldr	r2, [pc, #24]	@ (8004bb0 <I2C_TransferConfig+0x28>)
 8004b96:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b98:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8004b9c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b9e:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004ba2:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004ba6:	ea20 0002 	bic.w	r0, r0, r2
 8004baa:	4303      	orrs	r3, r0
 8004bac:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004bae:	bd30      	pop	{r4, r5, pc}
 8004bb0:	03ff63ff 	.word	0x03ff63ff

08004bb4 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004bb4:	6803      	ldr	r3, [r0, #0]
{
 8004bb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004bba:	699c      	ldr	r4, [r3, #24]
{
 8004bbc:	4605      	mov	r5, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004bbe:	f014 0410 	ands.w	r4, r4, #16
{
 8004bc2:	460f      	mov	r7, r1
 8004bc4:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004bc6:	d06f      	beq.n	8004ca8 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004bc8:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004bca:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004bcc:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004bce:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004bd0:	682b      	ldr	r3, [r5, #0]
 8004bd2:	699a      	ldr	r2, [r3, #24]
 8004bd4:	0690      	lsls	r0, r2, #26
 8004bd6:	d461      	bmi.n	8004c9c <I2C_IsErrorOccurred+0xe8>
 8004bd8:	f1b8 0f00 	cmp.w	r8, #0
 8004bdc:	d035      	beq.n	8004c4a <I2C_IsErrorOccurred+0x96>
    status = HAL_ERROR;
 8004bde:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8004be0:	f044 0404 	orr.w	r4, r4, #4
  itflag = hi2c->Instance->ISR;
 8004be4:	682e      	ldr	r6, [r5, #0]
 8004be6:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004be8:	05d9      	lsls	r1, r3, #23
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004bea:	bf41      	itttt	mi
 8004bec:	f44f 7280 	movmi.w	r2, #256	@ 0x100
    status = HAL_ERROR;
 8004bf0:	2001      	movmi	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004bf2:	61f2      	strmi	r2, [r6, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8004bf4:	f044 0401 	orrmi.w	r4, r4, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004bf8:	055a      	lsls	r2, r3, #21
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004bfa:	bf41      	itttt	mi
 8004bfc:	f44f 6280 	movmi.w	r2, #1024	@ 0x400
    status = HAL_ERROR;
 8004c00:	2001      	movmi	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8004c02:	f044 0408 	orrmi.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004c06:	61f2      	strmi	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004c08:	059b      	lsls	r3, r3, #22
 8004c0a:	d54f      	bpl.n	8004cac <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004c0c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004c10:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004c14:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004c16:	4628      	mov	r0, r5
 8004c18:	f7ff ffa8 	bl	8004b6c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004c1c:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004c1e:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004c20:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004c24:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004c28:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004c2c:	f023 0301 	bic.w	r3, r3, #1
 8004c30:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004c32:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004c34:	4323      	orrs	r3, r4
 8004c36:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004c38:	2320      	movs	r3, #32
 8004c3a:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c3e:	2300      	movs	r3, #0
 8004c40:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004c44:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004c48:	e032      	b.n	8004cb0 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004c4a:	1c7a      	adds	r2, r7, #1
 8004c4c:	d0c1      	beq.n	8004bd2 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004c4e:	f7ff f84d 	bl	8003cec <HAL_GetTick>
 8004c52:	1b80      	subs	r0, r0, r6
 8004c54:	42b8      	cmp	r0, r7
 8004c56:	d801      	bhi.n	8004c5c <I2C_IsErrorOccurred+0xa8>
 8004c58:	2f00      	cmp	r7, #0
 8004c5a:	d1b9      	bne.n	8004bd0 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004c5c:	682b      	ldr	r3, [r5, #0]
 8004c5e:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004c60:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004c64:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004c66:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004c68:	0400      	lsls	r0, r0, #16
 8004c6a:	d50a      	bpl.n	8004c82 <I2C_IsErrorOccurred+0xce>
 8004c6c:	0449      	lsls	r1, r1, #17
 8004c6e:	d408      	bmi.n	8004c82 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004c70:	2a20      	cmp	r2, #32
 8004c72:	d006      	beq.n	8004c82 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004c74:	685a      	ldr	r2, [r3, #4]
 8004c76:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c7a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004c7c:	f7ff f836 	bl	8003cec <HAL_GetTick>
 8004c80:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004c82:	682b      	ldr	r3, [r5, #0]
 8004c84:	699b      	ldr	r3, [r3, #24]
 8004c86:	069b      	lsls	r3, r3, #26
 8004c88:	d4a2      	bmi.n	8004bd0 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004c8a:	f7ff f82f 	bl	8003cec <HAL_GetTick>
 8004c8e:	1b80      	subs	r0, r0, r6
 8004c90:	2819      	cmp	r0, #25
 8004c92:	d9f6      	bls.n	8004c82 <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004c94:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004c96:	f04f 0801 	mov.w	r8, #1
 8004c9a:	e799      	b.n	8004bd0 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004c9c:	f1b8 0f00 	cmp.w	r8, #0
 8004ca0:	d19d      	bne.n	8004bde <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004ca2:	2220      	movs	r2, #32
 8004ca4:	61da      	str	r2, [r3, #28]
 8004ca6:	e79a      	b.n	8004bde <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004ca8:	4620      	mov	r0, r4
 8004caa:	e79b      	b.n	8004be4 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004cac:	2800      	cmp	r0, #0
 8004cae:	d1b2      	bne.n	8004c16 <I2C_IsErrorOccurred+0x62>
}
 8004cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004cb4 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004cb4:	b570      	push	{r4, r5, r6, lr}
 8004cb6:	4604      	mov	r4, r0
 8004cb8:	460d      	mov	r5, r1
 8004cba:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004cbc:	6823      	ldr	r3, [r4, #0]
 8004cbe:	699b      	ldr	r3, [r3, #24]
 8004cc0:	079b      	lsls	r3, r3, #30
 8004cc2:	d501      	bpl.n	8004cc8 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004cc4:	2000      	movs	r0, #0
 8004cc6:	e01f      	b.n	8004d08 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cc8:	4632      	mov	r2, r6
 8004cca:	4629      	mov	r1, r5
 8004ccc:	4620      	mov	r0, r4
 8004cce:	f7ff ff71 	bl	8004bb4 <I2C_IsErrorOccurred>
 8004cd2:	b9c0      	cbnz	r0, 8004d06 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8004cd4:	1c6a      	adds	r2, r5, #1
 8004cd6:	d0f1      	beq.n	8004cbc <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cd8:	f7ff f808 	bl	8003cec <HAL_GetTick>
 8004cdc:	1b80      	subs	r0, r0, r6
 8004cde:	42a8      	cmp	r0, r5
 8004ce0:	d801      	bhi.n	8004ce6 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004ce2:	2d00      	cmp	r5, #0
 8004ce4:	d1ea      	bne.n	8004cbc <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8004ce6:	6823      	ldr	r3, [r4, #0]
 8004ce8:	699b      	ldr	r3, [r3, #24]
 8004cea:	f013 0302 	ands.w	r3, r3, #2
 8004cee:	d1e5      	bne.n	8004cbc <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004cf0:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
 8004cf2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004cf6:	f042 0220 	orr.w	r2, r2, #32
 8004cfa:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004cfc:	2220      	movs	r2, #32
 8004cfe:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d02:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004d06:	2001      	movs	r0, #1
}
 8004d08:	bd70      	pop	{r4, r5, r6, pc}

08004d0a <I2C_WaitOnFlagUntilTimeout>:
{
 8004d0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d0e:	4604      	mov	r4, r0
 8004d10:	460f      	mov	r7, r1
 8004d12:	4616      	mov	r6, r2
 8004d14:	461d      	mov	r5, r3
 8004d16:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004d1a:	6823      	ldr	r3, [r4, #0]
 8004d1c:	699b      	ldr	r3, [r3, #24]
 8004d1e:	ea37 0303 	bics.w	r3, r7, r3
 8004d22:	bf0c      	ite	eq
 8004d24:	2301      	moveq	r3, #1
 8004d26:	2300      	movne	r3, #0
 8004d28:	42b3      	cmp	r3, r6
 8004d2a:	d001      	beq.n	8004d30 <I2C_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8004d2c:	2000      	movs	r0, #0
 8004d2e:	e025      	b.n	8004d7c <I2C_WaitOnFlagUntilTimeout+0x72>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d30:	4642      	mov	r2, r8
 8004d32:	4629      	mov	r1, r5
 8004d34:	4620      	mov	r0, r4
 8004d36:	f7ff ff3d 	bl	8004bb4 <I2C_IsErrorOccurred>
 8004d3a:	b9f0      	cbnz	r0, 8004d7a <I2C_WaitOnFlagUntilTimeout+0x70>
    if (Timeout != HAL_MAX_DELAY)
 8004d3c:	1c6b      	adds	r3, r5, #1
 8004d3e:	d0ec      	beq.n	8004d1a <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d40:	f7fe ffd4 	bl	8003cec <HAL_GetTick>
 8004d44:	eba0 0008 	sub.w	r0, r0, r8
 8004d48:	42a8      	cmp	r0, r5
 8004d4a:	d801      	bhi.n	8004d50 <I2C_WaitOnFlagUntilTimeout+0x46>
 8004d4c:	2d00      	cmp	r5, #0
 8004d4e:	d1e4      	bne.n	8004d1a <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004d50:	6823      	ldr	r3, [r4, #0]
 8004d52:	699b      	ldr	r3, [r3, #24]
 8004d54:	ea37 0303 	bics.w	r3, r7, r3
 8004d58:	bf0c      	ite	eq
 8004d5a:	2301      	moveq	r3, #1
 8004d5c:	2300      	movne	r3, #0
 8004d5e:	42b3      	cmp	r3, r6
 8004d60:	d1db      	bne.n	8004d1a <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d62:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004d64:	f043 0320 	orr.w	r3, r3, #32
 8004d68:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004d6a:	2320      	movs	r3, #32
 8004d6c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d70:	2300      	movs	r3, #0
 8004d72:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
 8004d76:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004d7a:	2001      	movs	r0, #1
}
 8004d7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d80 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004d80:	b570      	push	{r4, r5, r6, lr}
 8004d82:	4604      	mov	r4, r0
 8004d84:	460d      	mov	r5, r1
 8004d86:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004d88:	6823      	ldr	r3, [r4, #0]
 8004d8a:	699b      	ldr	r3, [r3, #24]
 8004d8c:	069b      	lsls	r3, r3, #26
 8004d8e:	d501      	bpl.n	8004d94 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004d90:	2000      	movs	r0, #0
 8004d92:	e01d      	b.n	8004dd0 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d94:	4632      	mov	r2, r6
 8004d96:	4629      	mov	r1, r5
 8004d98:	4620      	mov	r0, r4
 8004d9a:	f7ff ff0b 	bl	8004bb4 <I2C_IsErrorOccurred>
 8004d9e:	b9b0      	cbnz	r0, 8004dce <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004da0:	f7fe ffa4 	bl	8003cec <HAL_GetTick>
 8004da4:	1b80      	subs	r0, r0, r6
 8004da6:	42a8      	cmp	r0, r5
 8004da8:	d801      	bhi.n	8004dae <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004daa:	2d00      	cmp	r5, #0
 8004dac:	d1ec      	bne.n	8004d88 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8004dae:	6823      	ldr	r3, [r4, #0]
 8004db0:	699b      	ldr	r3, [r3, #24]
 8004db2:	f013 0320 	ands.w	r3, r3, #32
 8004db6:	d1e7      	bne.n	8004d88 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004db8:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8004dba:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004dbe:	f042 0220 	orr.w	r2, r2, #32
 8004dc2:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004dc4:	2220      	movs	r2, #32
 8004dc6:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dca:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004dce:	2001      	movs	r0, #1
}
 8004dd0:	bd70      	pop	{r4, r5, r6, pc}

08004dd2 <HAL_I2C_Init>:
{
 8004dd2:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004dd4:	4604      	mov	r4, r0
 8004dd6:	2800      	cmp	r0, #0
 8004dd8:	d04e      	beq.n	8004e78 <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004dda:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8004dde:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004de2:	b91b      	cbnz	r3, 8004dec <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8004de4:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8004de8:	f7fb fe32 	bl	8000a50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004dec:	2324      	movs	r3, #36	@ 0x24
 8004dee:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004df2:	6823      	ldr	r3, [r4, #0]
 8004df4:	681a      	ldr	r2, [r3, #0]
 8004df6:	f022 0201 	bic.w	r2, r2, #1
 8004dfa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004dfc:	6862      	ldr	r2, [r4, #4]
 8004dfe:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004e02:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004e04:	689a      	ldr	r2, [r3, #8]
 8004e06:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004e0a:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004e0c:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004e10:	2901      	cmp	r1, #1
 8004e12:	d106      	bne.n	8004e22 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004e14:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004e18:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004e1a:	685a      	ldr	r2, [r3, #4]
 8004e1c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004e20:	e007      	b.n	8004e32 <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004e22:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004e26:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004e28:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004e2a:	d1f6      	bne.n	8004e1a <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004e2c:	685a      	ldr	r2, [r3, #4]
 8004e2e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004e32:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004e34:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e36:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004e38:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8004e3c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004e40:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8004e42:	68da      	ldr	r2, [r3, #12]
 8004e44:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004e48:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004e4a:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004e4e:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004e50:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004e52:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004e56:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004e58:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004e5c:	430a      	orrs	r2, r1
 8004e5e:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004e60:	681a      	ldr	r2, [r3, #0]
 8004e62:	f042 0201 	orr.w	r2, r2, #1
 8004e66:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004e68:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e6a:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004e6c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004e70:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e72:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004e76:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e78:	2001      	movs	r0, #1
 8004e7a:	e7fc      	b.n	8004e76 <HAL_I2C_Init+0xa4>

08004e7c <HAL_I2C_Mem_Write>:
{
 8004e7c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e80:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e82:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004e86:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e88:	2b20      	cmp	r3, #32
{
 8004e8a:	460f      	mov	r7, r1
 8004e8c:	4616      	mov	r6, r2
 8004e8e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004e92:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e96:	f040 80c6 	bne.w	8005026 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004e9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e9c:	b113      	cbz	r3, 8004ea4 <HAL_I2C_Mem_Write+0x28>
 8004e9e:	f1ba 0f00 	cmp.w	sl, #0
 8004ea2:	d106      	bne.n	8004eb2 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004ea4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004ea8:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004eaa:	2001      	movs	r0, #1
}
 8004eac:	b003      	add	sp, #12
 8004eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004eb2:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004eb6:	2b01      	cmp	r3, #1
 8004eb8:	f000 80b5 	beq.w	8005026 <HAL_I2C_Mem_Write+0x1aa>
 8004ebc:	f04f 0b01 	mov.w	fp, #1
 8004ec0:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004ec4:	f7fe ff12 	bl	8003cec <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004ec8:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8004eca:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004ecc:	9000      	str	r0, [sp, #0]
 8004ece:	465a      	mov	r2, fp
 8004ed0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004ed4:	4620      	mov	r0, r4
 8004ed6:	f7ff ff18 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 8004eda:	2800      	cmp	r0, #0
 8004edc:	d1e5      	bne.n	8004eaa <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004ede:	2321      	movs	r3, #33	@ 0x21
 8004ee0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004ee4:	2340      	movs	r3, #64	@ 0x40
 8004ee6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004eea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004eec:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 8004eee:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004ef0:	4b4e      	ldr	r3, [pc, #312]	@ (800502c <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferISR   = NULL;
 8004ef2:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004ef4:	4639      	mov	r1, r7
 8004ef6:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8004ef8:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004efc:	fa5f f289 	uxtb.w	r2, r9
 8004f00:	9300      	str	r3, [sp, #0]
 8004f02:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004f06:	f7ff fe3f 	bl	8004b88 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f0a:	462a      	mov	r2, r5
 8004f0c:	4641      	mov	r1, r8
 8004f0e:	4620      	mov	r0, r4
 8004f10:	f7ff fed0 	bl	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f14:	bb18      	cbnz	r0, 8004f5e <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004f16:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f1a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004f1c:	d115      	bne.n	8004f4a <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f1e:	b2f6      	uxtb	r6, r6
 8004f20:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004f22:	2200      	movs	r2, #0
 8004f24:	4643      	mov	r3, r8
 8004f26:	2180      	movs	r1, #128	@ 0x80
 8004f28:	4620      	mov	r0, r4
 8004f2a:	9500      	str	r5, [sp, #0]
 8004f2c:	f7ff feed 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 8004f30:	b9a8      	cbnz	r0, 8004f5e <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004f32:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f34:	b29b      	uxth	r3, r3
 8004f36:	2bff      	cmp	r3, #255	@ 0xff
 8004f38:	d815      	bhi.n	8004f66 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004f3a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f3c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8004f40:	b292      	uxth	r2, r2
 8004f42:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f44:	9000      	str	r0, [sp, #0]
 8004f46:	b2d2      	uxtb	r2, r2
 8004f48:	e012      	b.n	8004f70 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004f4a:	0a32      	lsrs	r2, r6, #8
 8004f4c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f4e:	4641      	mov	r1, r8
 8004f50:	462a      	mov	r2, r5
 8004f52:	4620      	mov	r0, r4
 8004f54:	f7ff feae 	bl	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f58:	b908      	cbnz	r0, 8004f5e <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f5a:	6823      	ldr	r3, [r4, #0]
 8004f5c:	e7df      	b.n	8004f1e <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8004f5e:	2300      	movs	r3, #0
 8004f60:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004f64:	e7a1      	b.n	8004eaa <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f66:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004f68:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f6c:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004f6e:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f70:	4639      	mov	r1, r7
 8004f72:	4620      	mov	r0, r4
 8004f74:	f7ff fe08 	bl	8004b88 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f78:	462a      	mov	r2, r5
 8004f7a:	4641      	mov	r1, r8
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	f7ff fe99 	bl	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f82:	2800      	cmp	r0, #0
 8004f84:	d191      	bne.n	8004eaa <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8004f86:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004f88:	6822      	ldr	r2, [r4, #0]
 8004f8a:	f813 1b01 	ldrb.w	r1, [r3], #1
 8004f8e:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004f90:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004f92:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f94:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004f96:	3b01      	subs	r3, #1
 8004f98:	b29b      	uxth	r3, r3
 8004f9a:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f9c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f9e:	3a01      	subs	r2, #1
 8004fa0:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004fa2:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8004fa4:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004fa6:	b1b3      	cbz	r3, 8004fd6 <HAL_I2C_Mem_Write+0x15a>
 8004fa8:	b9aa      	cbnz	r2, 8004fd6 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004faa:	4643      	mov	r3, r8
 8004fac:	2180      	movs	r1, #128	@ 0x80
 8004fae:	4620      	mov	r0, r4
 8004fb0:	9500      	str	r5, [sp, #0]
 8004fb2:	f7ff feaa 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 8004fb6:	2800      	cmp	r0, #0
 8004fb8:	f47f af77 	bne.w	8004eaa <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004fbc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004fbe:	b29b      	uxth	r3, r3
 8004fc0:	2bff      	cmp	r3, #255	@ 0xff
 8004fc2:	d928      	bls.n	8005016 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004fc4:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004fc6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004fca:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004fcc:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fce:	4639      	mov	r1, r7
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	f7ff fdd9 	bl	8004b88 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004fd6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004fd8:	b29b      	uxth	r3, r3
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d1cc      	bne.n	8004f78 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004fde:	462a      	mov	r2, r5
 8004fe0:	4641      	mov	r1, r8
 8004fe2:	4620      	mov	r0, r4
 8004fe4:	f7ff fecc 	bl	8004d80 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004fe8:	2800      	cmp	r0, #0
 8004fea:	f47f af5e 	bne.w	8004eaa <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004fee:	2120      	movs	r1, #32
 8004ff0:	6823      	ldr	r3, [r4, #0]
 8004ff2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004ff4:	685a      	ldr	r2, [r3, #4]
 8004ff6:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004ffa:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004ffe:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005002:	f022 0201 	bic.w	r2, r2, #1
 8005006:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005008:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800500c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005010:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005014:	e74a      	b.n	8004eac <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005016:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005018:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 800501c:	b292      	uxth	r2, r2
 800501e:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005020:	9000      	str	r0, [sp, #0]
 8005022:	b2d2      	uxtb	r2, r2
 8005024:	e7d3      	b.n	8004fce <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8005026:	2002      	movs	r0, #2
 8005028:	e740      	b.n	8004eac <HAL_I2C_Mem_Write+0x30>
 800502a:	bf00      	nop
 800502c:	80002000 	.word	0x80002000

08005030 <HAL_I2C_Mem_Read>:
{
 8005030:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005034:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005036:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 800503a:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800503c:	2b20      	cmp	r3, #32
{
 800503e:	460f      	mov	r7, r1
 8005040:	4616      	mov	r6, r2
 8005042:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8005046:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800504a:	f040 80c9 	bne.w	80051e0 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 800504e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005050:	b113      	cbz	r3, 8005058 <HAL_I2C_Mem_Read+0x28>
 8005052:	f1ba 0f00 	cmp.w	sl, #0
 8005056:	d106      	bne.n	8005066 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005058:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800505c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 800505e:	2001      	movs	r0, #1
}
 8005060:	b003      	add	sp, #12
 8005062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005066:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 800506a:	2b01      	cmp	r3, #1
 800506c:	f000 80b8 	beq.w	80051e0 <HAL_I2C_Mem_Read+0x1b0>
 8005070:	f04f 0b01 	mov.w	fp, #1
 8005074:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005078:	f7fe fe38 	bl	8003cec <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800507c:	2319      	movs	r3, #25
 800507e:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005080:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005082:	465a      	mov	r2, fp
 8005084:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005088:	4620      	mov	r0, r4
 800508a:	f7ff fe3e 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 800508e:	4603      	mov	r3, r0
 8005090:	2800      	cmp	r0, #0
 8005092:	d1e4      	bne.n	800505e <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005094:	2222      	movs	r2, #34	@ 0x22
 8005096:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800509a:	2240      	movs	r2, #64	@ 0x40
 800509c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80050a0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050a2:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 80050a4:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80050a6:	4a4f      	ldr	r2, [pc, #316]	@ (80051e4 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferISR   = NULL;
 80050a8:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80050aa:	4639      	mov	r1, r7
 80050ac:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 80050ae:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80050b2:	9200      	str	r2, [sp, #0]
 80050b4:	fa5f f289 	uxtb.w	r2, r9
 80050b8:	f7ff fd66 	bl	8004b88 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050bc:	462a      	mov	r2, r5
 80050be:	4641      	mov	r1, r8
 80050c0:	4620      	mov	r0, r4
 80050c2:	f7ff fdf7 	bl	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout>
 80050c6:	bb20      	cbnz	r0, 8005112 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80050c8:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80050cc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80050ce:	d116      	bne.n	80050fe <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80050d0:	b2f6      	uxtb	r6, r6
 80050d2:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80050d4:	2200      	movs	r2, #0
 80050d6:	4643      	mov	r3, r8
 80050d8:	2140      	movs	r1, #64	@ 0x40
 80050da:	4620      	mov	r0, r4
 80050dc:	9500      	str	r5, [sp, #0]
 80050de:	f7ff fe14 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 80050e2:	b9b0      	cbnz	r0, 8005112 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80050e4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80050e6:	b29b      	uxth	r3, r3
 80050e8:	2bff      	cmp	r3, #255	@ 0xff
 80050ea:	4b3f      	ldr	r3, [pc, #252]	@ (80051e8 <HAL_I2C_Mem_Read+0x1b8>)
 80050ec:	d815      	bhi.n	800511a <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 80050ee:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80050f0:	b292      	uxth	r2, r2
 80050f2:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050f4:	9300      	str	r3, [sp, #0]
 80050f6:	b2d2      	uxtb	r2, r2
 80050f8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80050fc:	e012      	b.n	8005124 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80050fe:	0a32      	lsrs	r2, r6, #8
 8005100:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005102:	4641      	mov	r1, r8
 8005104:	462a      	mov	r2, r5
 8005106:	4620      	mov	r0, r4
 8005108:	f7ff fdd4 	bl	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout>
 800510c:	b908      	cbnz	r0, 8005112 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800510e:	6823      	ldr	r3, [r4, #0]
 8005110:	e7de      	b.n	80050d0 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005112:	2300      	movs	r3, #0
 8005114:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005118:	e7a1      	b.n	800505e <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800511a:	22ff      	movs	r2, #255	@ 0xff
 800511c:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800511e:	9300      	str	r3, [sp, #0]
 8005120:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005124:	4639      	mov	r1, r7
 8005126:	4620      	mov	r0, r4
 8005128:	f7ff fd2e 	bl	8004b88 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 800512c:	4643      	mov	r3, r8
 800512e:	2200      	movs	r2, #0
 8005130:	2104      	movs	r1, #4
 8005132:	4620      	mov	r0, r4
 8005134:	9500      	str	r5, [sp, #0]
 8005136:	f7ff fde8 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 800513a:	2800      	cmp	r0, #0
 800513c:	d18f      	bne.n	800505e <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800513e:	6823      	ldr	r3, [r4, #0]
 8005140:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005142:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005144:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005146:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005148:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 800514a:	3301      	adds	r3, #1
 800514c:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800514e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005150:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005152:	3b01      	subs	r3, #1
 8005154:	b29b      	uxth	r3, r3
 8005156:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005158:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800515a:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800515c:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 800515e:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005160:	b1b3      	cbz	r3, 8005190 <HAL_I2C_Mem_Read+0x160>
 8005162:	b9aa      	cbnz	r2, 8005190 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005164:	4643      	mov	r3, r8
 8005166:	2180      	movs	r1, #128	@ 0x80
 8005168:	4620      	mov	r0, r4
 800516a:	9500      	str	r5, [sp, #0]
 800516c:	f7ff fdcd 	bl	8004d0a <I2C_WaitOnFlagUntilTimeout>
 8005170:	2800      	cmp	r0, #0
 8005172:	f47f af74 	bne.w	800505e <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005176:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005178:	b29b      	uxth	r3, r3
 800517a:	2bff      	cmp	r3, #255	@ 0xff
 800517c:	d928      	bls.n	80051d0 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800517e:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005180:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005184:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005186:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005188:	4639      	mov	r1, r7
 800518a:	4620      	mov	r0, r4
 800518c:	f7ff fcfc 	bl	8004b88 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005190:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005192:	b29b      	uxth	r3, r3
 8005194:	2b00      	cmp	r3, #0
 8005196:	d1c9      	bne.n	800512c <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005198:	462a      	mov	r2, r5
 800519a:	4641      	mov	r1, r8
 800519c:	4620      	mov	r0, r4
 800519e:	f7ff fdef 	bl	8004d80 <I2C_WaitOnSTOPFlagUntilTimeout>
 80051a2:	2800      	cmp	r0, #0
 80051a4:	f47f af5b 	bne.w	800505e <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80051a8:	2120      	movs	r1, #32
 80051aa:	6823      	ldr	r3, [r4, #0]
 80051ac:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80051ae:	685a      	ldr	r2, [r3, #4]
 80051b0:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 80051b4:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 80051b8:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 80051bc:	f022 0201 	bic.w	r2, r2, #1
 80051c0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80051c2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80051c6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80051ca:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 80051ce:	e747      	b.n	8005060 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 80051d0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80051d2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 80051d6:	b292      	uxth	r2, r2
 80051d8:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80051da:	9000      	str	r0, [sp, #0]
 80051dc:	b2d2      	uxtb	r2, r2
 80051de:	e7d3      	b.n	8005188 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 80051e0:	2002      	movs	r0, #2
 80051e2:	e73d      	b.n	8005060 <HAL_I2C_Mem_Read+0x30>
 80051e4:	80002000 	.word	0x80002000
 80051e8:	80002400 	.word	0x80002400

080051ec <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80051ec:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80051ee:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80051f2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80051f4:	2a20      	cmp	r2, #32
 80051f6:	b2d4      	uxtb	r4, r2
 80051f8:	d11c      	bne.n	8005234 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80051fa:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80051fe:	2a01      	cmp	r2, #1
 8005200:	d018      	beq.n	8005234 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005202:	2224      	movs	r2, #36	@ 0x24
 8005204:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005208:	6802      	ldr	r2, [r0, #0]
 800520a:	6810      	ldr	r0, [r2, #0]
 800520c:	f020 0001 	bic.w	r0, r0, #1
 8005210:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005212:	6810      	ldr	r0, [r2, #0]
 8005214:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8005218:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 800521a:	6810      	ldr	r0, [r2, #0]
 800521c:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800521e:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005220:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005222:	6811      	ldr	r1, [r2, #0]
 8005224:	f041 0101 	orr.w	r1, r1, #1
 8005228:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800522a:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800522e:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005232:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005234:	2002      	movs	r0, #2
 8005236:	e7fc      	b.n	8005232 <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005238 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005238:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800523a:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 800523e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005240:	2a20      	cmp	r2, #32
 8005242:	b2d4      	uxtb	r4, r2
 8005244:	d11b      	bne.n	800527e <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005246:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 800524a:	2a01      	cmp	r2, #1
 800524c:	d017      	beq.n	800527e <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800524e:	2224      	movs	r2, #36	@ 0x24
 8005250:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005254:	6802      	ldr	r2, [r0, #0]
 8005256:	6810      	ldr	r0, [r2, #0]
 8005258:	f020 0001 	bic.w	r0, r0, #1
 800525c:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800525e:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005260:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005264:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005268:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 800526a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 800526c:	6811      	ldr	r1, [r2, #0]
 800526e:	f041 0101 	orr.w	r1, r1, #1
 8005272:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005274:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005278:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 800527c:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 800527e:	2002      	movs	r0, #2
 8005280:	e7fc      	b.n	800527c <HAL_I2CEx_ConfigDigitalFilter+0x44>
	...

08005284 <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 8005284:	4601      	mov	r1, r0

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 8005286:	4a06      	ldr	r2, [pc, #24]	@ (80052a0 <HAL_ICACHE_ConfigAssociativityMode+0x1c>)
 8005288:	6810      	ldr	r0, [r2, #0]
 800528a:	f010 0001 	ands.w	r0, r0, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 800528e:	bf09      	itett	eq
 8005290:	6813      	ldreq	r3, [r2, #0]
    status = HAL_ERROR;
 8005292:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 8005294:	f023 0304 	biceq.w	r3, r3, #4
 8005298:	430b      	orreq	r3, r1
 800529a:	bf08      	it	eq
 800529c:	6013      	streq	r3, [r2, #0]
  }

  return status;
}
 800529e:	4770      	bx	lr
 80052a0:	40030400 	.word	0x40030400

080052a4 <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 80052a4:	4a03      	ldr	r2, [pc, #12]	@ (80052b4 <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 80052a6:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 80052a8:	6813      	ldr	r3, [r2, #0]
 80052aa:	f043 0301 	orr.w	r3, r3, #1
 80052ae:	6013      	str	r3, [r2, #0]
}
 80052b0:	4770      	bx	lr
 80052b2:	bf00      	nop
 80052b4:	40030400 	.word	0x40030400

080052b8 <JPEG_Bits_To_SizeCodes>:
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(const uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode,
                                                uint32_t *LastK)
{
 80052b8:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Figure C.1: Generation of table of Huffman code sizes */
  j = 0;
  for (k = 0; k < 16UL; k++)
  {
    i = (uint32_t)Bits[k];
 80052ba:	2401      	movs	r4, #1
  j = 0;
 80052bc:	2500      	movs	r5, #0
    i = (uint32_t)Bits[k];
 80052be:	7807      	ldrb	r7, [r0, #0]
    if ((j + i) > 256UL)
 80052c0:	194e      	adds	r6, r1, r5
 80052c2:	443d      	add	r5, r7
 80052c4:	194f      	adds	r7, r1, r5
    {
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
 80052c6:	42be      	cmp	r6, r7
 80052c8:	d112      	bne.n	80052f0 <JPEG_Bits_To_SizeCodes+0x38>
  for (k = 0; k < 16UL; k++)
 80052ca:	2c10      	cmp	r4, #16
 80052cc:	d108      	bne.n	80052e0 <JPEG_Bits_To_SizeCodes+0x28>
      Huffsize[j] = (uint8_t) k + 1U;
      j++;
      i--;
    }
  }
  Huffsize[j] = 0;
 80052ce:	2400      	movs	r4, #0
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if (si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 80052d0:	2601      	movs	r6, #1
  Huffsize[j] = 0;
 80052d2:	554c      	strb	r4, [r1, r5]
  *LastK = j;
 80052d4:	601d      	str	r5, [r3, #0]
  j = 0;
 80052d6:	4623      	mov	r3, r4
  si = Huffsize[0];
 80052d8:	780d      	ldrb	r5, [r1, #0]
  while (Huffsize[j] != 0U)
 80052da:	5cc8      	ldrb	r0, [r1, r3]
 80052dc:	b9d8      	cbnz	r0, 8005316 <JPEG_Bits_To_SizeCodes+0x5e>
    code <<= 1;
    si++;
  }
  /* Return function status */
  return HAL_OK;
}
 80052de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = (uint32_t)Bits[k];
 80052e0:	5d07      	ldrb	r7, [r0, r4]
    if ((j + i) > 256UL)
 80052e2:	3401      	adds	r4, #1
 80052e4:	19ee      	adds	r6, r5, r7
 80052e6:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 80052ea:	d9e9      	bls.n	80052c0 <JPEG_Bits_To_SizeCodes+0x8>
      return HAL_ERROR;
 80052ec:	2001      	movs	r0, #1
 80052ee:	e7f6      	b.n	80052de <JPEG_Bits_To_SizeCodes+0x26>
      Huffsize[j] = (uint8_t) k + 1U;
 80052f0:	f806 4b01 	strb.w	r4, [r6], #1
      i--;
 80052f4:	e7e7      	b.n	80052c6 <JPEG_Bits_To_SizeCodes+0xe>
      Huffcode[j] = code;
 80052f6:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
      j++;
 80052fa:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[j]) == si)
 80052fc:	5cc8      	ldrb	r0, [r1, r3]
 80052fe:	19dc      	adds	r4, r3, r7
 8005300:	42a8      	cmp	r0, r5
 8005302:	d0f8      	beq.n	80052f6 <JPEG_Bits_To_SizeCodes+0x3e>
    if (si > 31UL)
 8005304:	2d1f      	cmp	r5, #31
 8005306:	d8f1      	bhi.n	80052ec <JPEG_Bits_To_SizeCodes+0x34>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005308:	fa06 f005 	lsl.w	r0, r6, r5
 800530c:	42a0      	cmp	r0, r4
 800530e:	d9ed      	bls.n	80052ec <JPEG_Bits_To_SizeCodes+0x34>
    code <<= 1;
 8005310:	0064      	lsls	r4, r4, #1
    si++;
 8005312:	3501      	adds	r5, #1
 8005314:	e7e1      	b.n	80052da <JPEG_Bits_To_SizeCodes+0x22>
 8005316:	1ae7      	subs	r7, r4, r3
 8005318:	e7f0      	b.n	80052fc <JPEG_Bits_To_SizeCodes+0x44>

0800531a <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
 800531a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800531c:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
 8005320:	460d      	mov	r5, r1
  uint32_t k;
  uint32_t i;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 8005322:	ab01      	add	r3, sp, #4
 8005324:	aa43      	add	r2, sp, #268	@ 0x10c
 8005326:	a902      	add	r1, sp, #8
{
 8005328:	4604      	mov	r4, r0
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 800532a:	f7ff ffc5 	bl	80052b8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 800532e:	b938      	cbnz	r0, 8005340 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>
 8005330:	9e01      	ldr	r6, [sp, #4]
 8005332:	460b      	mov	r3, r1
 8005334:	360f      	adds	r6, #15
 8005336:	f104 010f 	add.w	r1, r4, #15
 800533a:	4434      	add	r4, r6
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
 800533c:	42a1      	cmp	r1, r4
 800533e:	d102      	bne.n	8005346 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2c>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005340:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
 8005344:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = DC_BitsValsTable->HuffVal[k];
 8005346:	f811 6f01 	ldrb.w	r6, [r1, #1]!
    if (i >= JPEG_DC_HUFF_TABLE_SIZE)
 800534a:	2e0b      	cmp	r6, #11
 800534c:	d80a      	bhi.n	8005364 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4a>
      DC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 800534e:	f852 cb04 	ldr.w	ip, [r2], #4
 8005352:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 8005356:	f8c7 c00c 	str.w	ip, [r7, #12]
      DC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 800535a:	f813 7b01 	ldrb.w	r7, [r3], #1
 800535e:	3f01      	subs	r7, #1
 8005360:	55af      	strb	r7, [r5, r6]
      k++;
 8005362:	e7eb      	b.n	800533c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x22>
      return HAL_ERROR; /* Huffman Table overflow error*/
 8005364:	2001      	movs	r0, #1
 8005366:	e7eb      	b.n	8005340 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>

08005368 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
 8005368:	4603      	mov	r3, r0
 800536a:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 800536c:	681c      	ldr	r4, [r3, #0]
{
 800536e:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005370:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
 8005374:	429a      	cmp	r2, r3
{
 8005376:	b091      	sub	sp, #68	@ 0x44
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005378:	d127      	bne.n	80053ca <JPEG_Set_HuffDC_Mem+0x62>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 800537a:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
    return HAL_ERROR;
  }

  if (HuffTableDC != NULL)
  {
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
 800537e:	a901      	add	r1, sp, #4
 8005380:	f7ff ffcb 	bl	800531a <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
 8005384:	b9f8      	cbnz	r0, 80053c6 <JPEG_Set_HuffDC_Mem+0x5e>
    {
      return  error;
    }
    addressDef = address;
    *addressDef = 0x0FFF0FFF;
 8005386:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 800538a:	aa01      	add	r2, sp, #4
    addressDef++;
    *addressDef = 0x0FFF0FFF;
 800538c:	4615      	mov	r5, r2
    *addressDef = 0x0FFF0FFF;
 800538e:	6023      	str	r3, [r4, #0]
    *addressDef = 0x0FFF0FFF;
 8005390:	f1a4 0618 	sub.w	r6, r4, #24
 8005394:	6063      	str	r3, [r4, #4]
    i = JPEG_DC_HUFF_TABLE_SIZE;
    while (i > 1UL)
    {
      i--;
      address --;
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005396:	7ad1      	ldrb	r1, [r2, #11]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005398:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800539c:	0209      	lsls	r1, r1, #8
 800539e:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
 80053a2:	4319      	orrs	r1, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053a4:	7a93      	ldrb	r3, [r2, #10]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 80053a6:	f895 7034 	ldrb.w	r7, [r5, #52]	@ 0x34
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053aa:	021b      	lsls	r3, r3, #8
 80053ac:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80053b0:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 80053b2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80053b6:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 80053ba:	42b4      	cmp	r4, r6
 80053bc:	f1a2 0202 	sub.w	r2, r2, #2
 80053c0:	f1a5 0508 	sub.w	r5, r5, #8
 80053c4:	d1e7      	bne.n	8005396 <JPEG_Set_HuffDC_Mem+0x2e>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 80053c6:	b011      	add	sp, #68	@ 0x44
 80053c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
 80053ca:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
 80053ce:	429a      	cmp	r2, r3
 80053d0:	d102      	bne.n	80053d8 <JPEG_Set_HuffDC_Mem+0x70>
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 80053d2:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
  if (HuffTableDC != NULL)
 80053d6:	e7d2      	b.n	800537e <JPEG_Set_HuffDC_Mem+0x16>
    return HAL_ERROR;
 80053d8:	2001      	movs	r0, #1
 80053da:	e7f4      	b.n	80053c6 <JPEG_Set_HuffDC_Mem+0x5e>

080053dc <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
 80053dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 80053e0:	6804      	ldr	r4, [r0, #0]
{
 80053e2:	460e      	mov	r6, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 80053e4:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
 80053e8:	429a      	cmp	r2, r3
{
 80053ea:	f6ad 0d38 	subw	sp, sp, #2104	@ 0x838
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 80053ee:	d14b      	bne.n	8005488 <JPEG_Set_HuffAC_Mem+0xac>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 80053f0:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80053f4:	466b      	mov	r3, sp
 80053f6:	4630      	mov	r0, r6
 80053f8:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
 80053fc:	a901      	add	r1, sp, #4
 80053fe:	f7ff ff5b 	bl	80052b8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 8005402:	2800      	cmp	r0, #0
 8005404:	d13c      	bne.n	8005480 <JPEG_Set_HuffAC_Mem+0xa4>
 8005406:	4617      	mov	r7, r2
      i = (msb * 10UL) + lsb - 1UL;
 8005408:	f04f 0e0a 	mov.w	lr, #10
 800540c:	9b00      	ldr	r3, [sp, #0]
 800540e:	460d      	mov	r5, r1
 8005410:	330f      	adds	r3, #15
 8005412:	f106 0c0f 	add.w	ip, r6, #15
 8005416:	18f1      	adds	r1, r6, r3
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 8005418:	ae42      	add	r6, sp, #264	@ 0x108
  while (k < lastK)
 800541a:	4561      	cmp	r1, ip
 800541c:	d13b      	bne.n	8005496 <JPEG_Set_HuffAC_Mem+0xba>
    /* Locations 162:175 of each AC table contain information used internally by the core */

    addressDef = address;
    for (i = 0; i < 3UL; i++)
    {
      *addressDef = 0x0FFF0FFF;
 800541e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 8005422:	a942      	add	r1, sp, #264	@ 0x108
    addressDef++;
    *addressDef = 0x0FD30FD2;
    addressDef++;
    *addressDef = 0x0FD50FD4;
    addressDef++;
    *addressDef = 0x0FD70FD6;
 8005424:	460d      	mov	r5, r1
      *addressDef = 0x0FFF0FFF;
 8005426:	6023      	str	r3, [r4, #0]
 8005428:	6063      	str	r3, [r4, #4]
 800542a:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD10FD0;
 800542c:	f103 33d1 	add.w	r3, r3, #3520188881	@ 0xd1d1d1d1
 8005430:	f103 232e 	add.w	r3, r3, #771763712	@ 0x2e002e00
 8005434:	60e3      	str	r3, [r4, #12]
    *addressDef = 0x0FD30FD2;
 8005436:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 800543a:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
 800543c:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 8005440:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
 8005442:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 8005446:	61a3      	str	r3, [r4, #24]
    /* end of Locations 162:175  */


    i = JPEG_AC_HUFF_TABLE_SIZE;
    while (i > 1UL)
 8005448:	f5a4 76a2 	sub.w	r6, r4, #324	@ 0x144
    {
      i--;
      address--;
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800544c:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005450:	f895 3328 	ldrb.w	r3, [r5, #808]	@ 0x328
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005454:	0212      	lsls	r2, r2, #8
 8005456:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
 800545a:	431a      	orrs	r2, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800545c:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005460:	f895 7324 	ldrb.w	r7, [r5, #804]	@ 0x324
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005464:	021b      	lsls	r3, r3, #8
 8005466:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800546a:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 800546c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005470:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 8005474:	42b4      	cmp	r4, r6
 8005476:	f1a1 0102 	sub.w	r1, r1, #2
 800547a:	f1a5 0508 	sub.w	r5, r5, #8
 800547e:	d1e5      	bne.n	800544c <JPEG_Set_HuffAC_Mem+0x70>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005480:	f60d 0d38 	addw	sp, sp, #2104	@ 0x838
 8005484:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
 8005488:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
 800548c:	429a      	cmp	r2, r3
 800548e:	d10f      	bne.n	80054b0 <JPEG_Set_HuffAC_Mem+0xd4>
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005490:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  if (HuffTableAC != NULL)
 8005494:	e7ae      	b.n	80053f4 <JPEG_Set_HuffAC_Mem+0x18>
    i = AC_BitsValsTable->HuffVal[k];
 8005496:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (i == 0UL)
 800549a:	b15b      	cbz	r3, 80054b4 <JPEG_Set_HuffAC_Mem+0xd8>
    else if (i == 0xF0UL) /* i = 0xF0 ZRL code*/
 800549c:	2bf0      	cmp	r3, #240	@ 0xf0
 800549e:	d015      	beq.n	80054cc <JPEG_Set_HuffAC_Mem+0xf0>
      msb = (i & 0xF0UL) >> 4;
 80054a0:	091a      	lsrs	r2, r3, #4
      lsb = (i & 0x0FUL);
 80054a2:	f003 030f 	and.w	r3, r3, #15
      i = (msb * 10UL) + lsb - 1UL;
 80054a6:	3b01      	subs	r3, #1
 80054a8:	fb0e 3302 	mla	r3, lr, r2, r3
    if (i >= JPEG_AC_HUFF_TABLE_SIZE)
 80054ac:	2ba1      	cmp	r3, #161	@ 0xa1
 80054ae:	d902      	bls.n	80054b6 <JPEG_Set_HuffAC_Mem+0xda>
    return HAL_ERROR;
 80054b0:	2001      	movs	r0, #1
 80054b2:	e7e5      	b.n	8005480 <JPEG_Set_HuffAC_Mem+0xa4>
      i = JPEG_AC_HUFF_TABLE_SIZE - 2UL; /*i = 0x00 EOB code*/
 80054b4:	23a0      	movs	r3, #160	@ 0xa0
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80054b6:	f857 8b04 	ldr.w	r8, [r7], #4
 80054ba:	eb06 0283 	add.w	r2, r6, r3, lsl #2
 80054be:	f8c2 80a4 	str.w	r8, [r2, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 80054c2:	f815 2b01 	ldrb.w	r2, [r5], #1
 80054c6:	3a01      	subs	r2, #1
 80054c8:	54f2      	strb	r2, [r6, r3]
      k++;
 80054ca:	e7a6      	b.n	800541a <JPEG_Set_HuffAC_Mem+0x3e>
      i = JPEG_AC_HUFF_TABLE_SIZE - 1UL;
 80054cc:	23a1      	movs	r3, #161	@ 0xa1
 80054ce:	e7f2      	b.n	80054b6 <JPEG_Set_HuffAC_Mem+0xda>

080054d0 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
 80054d0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80054d2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80054d6:	6543      	str	r3, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80054d8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 80054da:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80054dc:	f002 0203 	and.w	r2, r2, #3
 80054e0:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 80054e2:	685a      	ldr	r2, [r3, #4]
 80054e4:	bf0c      	ite	eq
 80054e6:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
 80054ea:	f022 0208 	bicne.w	r2, r2, #8
 80054ee:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80054f0:	681a      	ldr	r2, [r3, #0]
 80054f2:	f022 0201 	bic.w	r2, r2, #1
 80054f6:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80054f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054fa:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 80054fe:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Disable All DMA requests */
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005500:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005502:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005506:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005508:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800550a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800550e:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005510:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005512:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005516:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005518:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800551a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 800551e:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
 8005520:	681a      	ldr	r2, [r3, #0]
 8005522:	f042 0201 	orr.w	r2, r2, #1
 8005526:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005528:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 800552a:	f002 020c 	and.w	r2, r2, #12
 800552e:	2a08      	cmp	r2, #8
 8005530:	d104      	bne.n	800553c <JPEG_Init_Process+0x6c>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
 8005532:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005534:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
  {
    /*Enable End Of Conversation, and End Of Header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005538:	631a      	str	r2, [r3, #48]	@ 0x30
  }
  else
  {
    /* Nothing to do */
  }
}
 800553a:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 800553c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 800553e:	f002 020c 	and.w	r2, r2, #12
 8005542:	2a0c      	cmp	r2, #12
 8005544:	d1f9      	bne.n	800553a <JPEG_Init_Process+0x6a>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005546:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005548:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 800554c:	e7f4      	b.n	8005538 <JPEG_Init_Process+0x68>
	...

08005550 <JPEG_DMA_StartProcess>:
  * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
  *         the configuration information for JPEG module
  * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING
  */
static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg)
{
 8005550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 8005552:	6a83      	ldr	r3, [r0, #40]	@ 0x28
{
 8005554:	4604      	mov	r4, r0
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 8005556:	2b03      	cmp	r3, #3
 8005558:	d92a      	bls.n	80055b0 <JPEG_DMA_StartProcess+0x60>
 800555a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800555c:	2903      	cmp	r1, #3
 800555e:	d927      	bls.n	80055b0 <JPEG_DMA_StartProcess+0x60>
  {
    return HAL_ERROR;
  }
  /* Reset Ending DMA internal context flag*/
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 8005560:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  /* Disable DMA In/Out Request*/
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);

  /* Set the JPEG DMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005562:	4d34      	ldr	r5, [pc, #208]	@ (8005634 <JPEG_DMA_StartProcess+0xe4>)
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 8005564:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005568:	6542      	str	r2, [r0, #84]	@ 0x54
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800556a:	6802      	ldr	r2, [r0, #0]
  /* Set the DMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 800556c:	4e32      	ldr	r6, [pc, #200]	@ (8005638 <JPEG_DMA_StartProcess+0xe8>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800556e:	6b10      	ldr	r0, [r2, #48]	@ 0x30

  /* Set the JPEG DMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005570:	4f32      	ldr	r7, [pc, #200]	@ (800563c <JPEG_DMA_StartProcess+0xec>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 8005572:	f420 50c0 	bic.w	r0, r0, #6144	@ 0x1800
 8005576:	6310      	str	r0, [r2, #48]	@ 0x30
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005578:	6b20      	ldr	r0, [r4, #48]	@ 0x30

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 800557a:	f021 0103 	bic.w	r1, r1, #3
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 800557e:	6605      	str	r5, [r0, #96]	@ 0x60
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005580:	6b65      	ldr	r5, [r4, #52]	@ 0x34
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 8005582:	6686      	str	r6, [r0, #104]	@ 0x68
  hjpeg->hdmaout->XferErrorCallback = JPEG_DMAErrorCallback;
 8005584:	66ae      	str	r6, [r5, #104]	@ 0x68
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 8005586:	4e2e      	ldr	r6, [pc, #184]	@ (8005640 <JPEG_DMA_StartProcess+0xf0>)
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005588:	662f      	str	r7, [r5, #96]	@ 0x60
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 800558a:	66ee      	str	r6, [r5, #108]	@ 0x6c
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 800558c:	62e1      	str	r1, [r4, #44]	@ 0x2c

  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800558e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005590:	f023 0303 	bic.w	r3, r3, #3
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005594:	0609      	lsls	r1, r1, #24
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005596:	62a3      	str	r3, [r4, #40]	@ 0x28
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005598:	d516      	bpl.n	80055c8 <JPEG_DMA_StartProcess+0x78>
  {
    if (hjpeg->hdmain->LinkedListQueue != NULL)
 800559a:	6f41      	ldr	r1, [r0, #116]	@ 0x74
 800559c:	b151      	cbz	r1, 80055b4 <JPEG_DMA_StartProcess+0x64>
    {
      /* Set DMA data size */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 800559e:	6809      	ldr	r1, [r1, #0]

      /* Set DMA source address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;

      /* Set DMA destination address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 80055a0:	3240      	adds	r2, #64	@ 0x40
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 80055a2:	608b      	str	r3, [r1, #8]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 80055a4:	69a3      	ldr	r3, [r4, #24]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 80055a6:	610a      	str	r2, [r1, #16]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 80055a8:	60cb      	str	r3, [r1, #12]

      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmain) != HAL_OK)
 80055aa:	f7ff f903 	bl	80047b4 <HAL_DMAEx_List_Start_IT>
 80055ae:	b1a8      	cbz	r0, 80055dc <JPEG_DMA_StartProcess+0x8c>
    return HAL_ERROR;
 80055b0:	2001      	movs	r0, #1

  /* Enable JPEG In/Out DMA requests*/
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);

  return HAL_OK;
}
 80055b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hjpeg->State = HAL_JPEG_STATE_READY;
 80055b4:	2301      	movs	r3, #1
 80055b6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055ba:	6d23      	ldr	r3, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 80055bc:	f884 104c 	strb.w	r1, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055c0:	f043 0304 	orr.w	r3, r3, #4
 80055c4:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 80055c6:	e7f3      	b.n	80055b0 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 80055c8:	69a1      	ldr	r1, [r4, #24]
 80055ca:	3240      	adds	r2, #64	@ 0x40
 80055cc:	f7fe fe98 	bl	8004300 <HAL_DMA_Start_IT>
 80055d0:	b120      	cbz	r0, 80055dc <JPEG_DMA_StartProcess+0x8c>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055d2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80055d4:	f043 0304 	orr.w	r3, r3, #4
 80055d8:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 80055da:	e7e9      	b.n	80055b0 <JPEG_DMA_StartProcess+0x60>
  if ((hjpeg->hdmaout->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80055dc:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80055de:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 80055e0:	061b      	lsls	r3, r3, #24
 80055e2:	d51e      	bpl.n	8005622 <JPEG_DMA_StartProcess+0xd2>
    if (hjpeg->hdmaout->LinkedListQueue != NULL)
 80055e4:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 80055e6:	b193      	cbz	r3, 800560e <JPEG_DMA_StartProcess+0xbe>
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->OutDataLength;
 80055e8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	609a      	str	r2, [r3, #8]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DOR;
 80055ee:	6822      	ldr	r2, [r4, #0]
 80055f0:	3244      	adds	r2, #68	@ 0x44
 80055f2:	60da      	str	r2, [r3, #12]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegOutBuffPtr;
 80055f4:	69e2      	ldr	r2, [r4, #28]
 80055f6:	611a      	str	r2, [r3, #16]
      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmaout) != HAL_OK)
 80055f8:	f7ff f8dc 	bl	80047b4 <HAL_DMAEx_List_Start_IT>
 80055fc:	2800      	cmp	r0, #0
 80055fe:	d1d7      	bne.n	80055b0 <JPEG_DMA_StartProcess+0x60>
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 8005600:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
 8005602:	2000      	movs	r0, #0
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 8005604:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005606:	f443 53c0 	orr.w	r3, r3, #6144	@ 0x1800
 800560a:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 800560c:	e7d1      	b.n	80055b2 <JPEG_DMA_StartProcess+0x62>
      hjpeg->State = HAL_JPEG_STATE_READY;
 800560e:	2201      	movs	r2, #1
 8005610:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005614:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 8005616:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800561a:	f042 0204 	orr.w	r2, r2, #4
 800561e:	6522      	str	r2, [r4, #80]	@ 0x50
      return HAL_ERROR;
 8005620:	e7c6      	b.n	80055b0 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 8005622:	6821      	ldr	r1, [r4, #0]
 8005624:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005626:	69e2      	ldr	r2, [r4, #28]
 8005628:	3144      	adds	r1, #68	@ 0x44
 800562a:	f7fe fe69 	bl	8004300 <HAL_DMA_Start_IT>
 800562e:	2800      	cmp	r0, #0
 8005630:	d0e6      	beq.n	8005600 <JPEG_DMA_StartProcess+0xb0>
 8005632:	e7ce      	b.n	80055d2 <JPEG_DMA_StartProcess+0x82>
 8005634:	08005c65 	.word	0x08005c65
 8005638:	08005b57 	.word	0x08005b57
 800563c:	08006103 	.word	0x08006103
 8005640:	080060f5 	.word	0x080060f5

08005644 <HAL_JPEG_Init>:
{
 8005644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg == NULL)
 8005646:	4605      	mov	r5, r0
 8005648:	2800      	cmp	r0, #0
 800564a:	f000 80f6 	beq.w	800583a <HAL_JPEG_Init+0x1f6>
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
 800564e:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
 8005652:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005656:	b91b      	cbnz	r3, 8005660 <HAL_JPEG_Init+0x1c>
    hjpeg->Lock = HAL_UNLOCKED;
 8005658:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
 800565c:	f7fb fa42 	bl	8000ae4 <HAL_JPEG_MspInit>
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 8005660:	2302      	movs	r3, #2
  __HAL_JPEG_ENABLE(hjpeg);
 8005662:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 8005664:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
 8005668:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800566a:	4a87      	ldr	r2, [pc, #540]	@ (8005888 <HAL_JPEG_Init+0x244>)
 800566c:	f043 0301 	orr.w	r3, r3, #1
 8005670:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005672:	6823      	ldr	r3, [r4, #0]
  address = (hjpeg->Instance->DHTMEM + 3);
 8005674:	f504 715b 	add.w	r1, r4, #876	@ 0x36c
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005678:	f023 0301 	bic.w	r3, r3, #1
 800567c:	6023      	str	r3, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 800567e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005680:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 8005684:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
 8005688:	6323      	str	r3, [r4, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 800568a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800568c:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
 8005690:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005692:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005694:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005698:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 800569a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800569c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80056a0:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 80056a2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80056a4:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80056a8:	63a3      	str	r3, [r4, #56]	@ 0x38
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
 80056aa:	4b78      	ldr	r3, [pc, #480]	@ (800588c <HAL_JPEG_Init+0x248>)
 80056ac:	63eb      	str	r3, [r5, #60]	@ 0x3c
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
 80056ae:	4b78      	ldr	r3, [pc, #480]	@ (8005890 <HAL_JPEG_Init+0x24c>)
 80056b0:	642b      	str	r3, [r5, #64]	@ 0x40
  hjpeg->QuantTable2 = NULL;
 80056b2:	2300      	movs	r3, #0
  hjpeg->QuantTable3 = NULL;
 80056b4:	e9c5 3311 	strd	r3, r3, [r5, #68]	@ 0x44
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056b8:	7b93      	ldrb	r3, [r2, #14]
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056ba:	7bd6      	ldrb	r6, [r2, #15]
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056bc:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056be:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableDC0->Bits[index - 4UL] & 0xFFUL);
 80056c2:	7b16      	ldrb	r6, [r2, #12]
  while (index > 3UL)
 80056c4:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableDC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 80056c6:	4333      	orrs	r3, r6
 80056c8:	7c56      	ldrb	r6, [r2, #17]
 80056ca:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056ce:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 80056d2:	4281      	cmp	r1, r0
 80056d4:	d1f0      	bne.n	80056b8 <HAL_JPEG_Init+0x74>
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056d6:	4a6f      	ldr	r2, [pc, #444]	@ (8005894 <HAL_JPEG_Init+0x250>)
  address = (hjpeg->Instance->DHTMEM + 10UL);
 80056d8:	f504 7162 	add.w	r1, r4, #904	@ 0x388
 80056dc:	4610      	mov	r0, r2
 80056de:	460e      	mov	r6, r1
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056e0:	4b6d      	ldr	r3, [pc, #436]	@ (8005898 <HAL_JPEG_Init+0x254>)
 80056e2:	f504 775e 	add.w	r7, r4, #888	@ 0x378
 80056e6:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 80056ea:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80056ee:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
 80056f2:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80056f6:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056fa:	7b83      	ldrb	r3, [r0, #14]
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056fc:	f890 c00f 	ldrb.w	ip, [r0, #15]
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005700:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005702:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
               ((uint32_t)HuffTableAC0->Bits[index - 4UL] & 0xFFUL);
 8005706:	f890 c00c 	ldrb.w	ip, [r0, #12]
  while (index > 3UL)
 800570a:	3804      	subs	r0, #4
               (((uint32_t)HuffTableAC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 800570c:	ea43 030c 	orr.w	r3, r3, ip
 8005710:	f890 c011 	ldrb.w	ip, [r0, #17]
 8005714:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005718:	f846 3904 	str.w	r3, [r6], #-4
  while (index > 3UL)
 800571c:	42be      	cmp	r6, r7
 800571e:	d1ec      	bne.n	80056fa <HAL_JPEG_Init+0xb6>
  value = *address & 0xFFFF0000U;
 8005720:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
 8005724:	f504 6085 	add.w	r0, r4, #1064	@ 0x428
  value = *address & 0xFFFF0000U;
 8005728:	0c1b      	lsrs	r3, r3, #16
 800572a:	041b      	lsls	r3, r3, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) |
 800572c:	f443 437a 	orr.w	r3, r3, #64000	@ 0xfa00
 8005730:	f043 03f9 	orr.w	r3, r3, #249	@ 0xf9
  *address = value;
 8005734:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 8005738:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 800573c:	f892 60af 	ldrb.w	r6, [r2, #175]	@ 0xaf
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 8005740:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005742:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
 8005746:	f892 60ac 	ldrb.w	r6, [r2, #172]	@ 0xac
  while (index > 3UL)
 800574a:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
 800574c:	4333      	orrs	r3, r6
 800574e:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
 8005752:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005756:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
 800575a:	4281      	cmp	r1, r0
 800575c:	d1ec      	bne.n	8005738 <HAL_JPEG_Init+0xf4>
  value = *address & 0x0000FFFFU;
 800575e:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 8005762:	4a4e      	ldr	r2, [pc, #312]	@ (800589c <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFU;
 8005764:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) |
 8005766:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
 800576a:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 800576e:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  address = (hjpeg->Instance->DHTMEM + 102);
 8005772:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
  value = *address & 0xFFFF0000U;
 8005776:	4013      	ands	r3, r2
  *address = value;
 8005778:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 800577c:	2301      	movs	r3, #1
 800577e:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
 8005782:	f04f 3301 	mov.w	r3, #16843009	@ 0x1010101
 8005786:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 800578a:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
  value = *address & 0x0000FFFFUL;
 800578e:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005792:	f504 608b 	add.w	r0, r4, #1112	@ 0x458
  value = *address & 0x0000FFFFUL;
 8005796:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005798:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 800579c:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
 80057a0:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 80057a4:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) |
 80057a6:	f443 6330 	orr.w	r3, r3, #2816	@ 0xb00
 80057aa:	f043 030a 	orr.w	r3, r3, #10
  *address = value;
 80057ae:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 80057b2:	4b3b      	ldr	r3, [pc, #236]	@ (80058a0 <HAL_JPEG_Init+0x25c>)
 80057b4:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
 80057b8:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80057bc:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
 80057c0:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 80057c4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) |
 80057c6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
 80057ca:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
 80057ce:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 80057d2:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
 80057d4:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 80057d8:	f043 0302 	orr.w	r3, r3, #2
  *address = value;
 80057dc:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 80057e0:	4b30      	ldr	r3, [pc, #192]	@ (80058a4 <HAL_JPEG_Init+0x260>)
 80057e2:	4a31      	ldr	r2, [pc, #196]	@ (80058a8 <HAL_JPEG_Init+0x264>)
 80057e4:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 80057e8:	4b30      	ldr	r3, [pc, #192]	@ (80058ac <HAL_JPEG_Init+0x268>)
 80057ea:	f8c4 3450 	str.w	r3, [r4, #1104]	@ 0x450
 80057ee:	4b30      	ldr	r3, [pc, #192]	@ (80058b0 <HAL_JPEG_Init+0x26c>)
 80057f0:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
 80057f4:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 80057f8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) |
 80057fa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 80057fe:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 8005802:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005806:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 800580a:	041b      	lsls	r3, r3, #16
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 800580c:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
 8005810:	f892 60ae 	ldrb.w	r6, [r2, #174]	@ 0xae
  while (index > 3UL)
 8005814:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 8005816:	4333      	orrs	r3, r6
 8005818:	f892 60b3 	ldrb.w	r6, [r2, #179]	@ 0xb3
 800581c:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005820:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 8005824:	4281      	cmp	r1, r0
 8005826:	d1ec      	bne.n	8005802 <HAL_JPEG_Init+0x1be>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
 8005828:	4628      	mov	r0, r5
 800582a:	491a      	ldr	r1, [pc, #104]	@ (8005894 <HAL_JPEG_Init+0x250>)
 800582c:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
 8005830:	f7ff fdd4 	bl	80053dc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 8005834:	b118      	cbz	r0, 800583e <HAL_JPEG_Init+0x1fa>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
 8005836:	2301      	movs	r3, #1
 8005838:	652b      	str	r3, [r5, #80]	@ 0x50
    return HAL_ERROR;
 800583a:	2001      	movs	r0, #1
}
 800583c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
 800583e:	4628      	mov	r0, r5
 8005840:	4919      	ldr	r1, [pc, #100]	@ (80058a8 <HAL_JPEG_Init+0x264>)
 8005842:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
 8005846:	f7ff fdc9 	bl	80053dc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 800584a:	2800      	cmp	r0, #0
 800584c:	d1f3      	bne.n	8005836 <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
 800584e:	4628      	mov	r0, r5
 8005850:	490d      	ldr	r1, [pc, #52]	@ (8005888 <HAL_JPEG_Init+0x244>)
 8005852:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
 8005856:	f7ff fd87 	bl	8005368 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
 800585a:	2800      	cmp	r0, #0
 800585c:	d1eb      	bne.n	8005836 <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
 800585e:	4628      	mov	r0, r5
 8005860:	4914      	ldr	r1, [pc, #80]	@ (80058b4 <HAL_JPEG_Init+0x270>)
 8005862:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
 8005866:	f7ff fd7f 	bl	8005368 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
 800586a:	2800      	cmp	r0, #0
 800586c:	d1e3      	bne.n	8005836 <HAL_JPEG_Init+0x1f2>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 800586e:	6863      	ldr	r3, [r4, #4]
 8005870:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005874:	6063      	str	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
 8005876:	2301      	movs	r3, #1
  hjpeg->JpegInCount = 0;
 8005878:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
 800587a:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
 800587c:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
 8005880:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
 8005882:	6568      	str	r0, [r5, #84]	@ 0x54
  return HAL_OK;
 8005884:	e7da      	b.n	800583c <HAL_JPEG_Init+0x1f8>
 8005886:	bf00      	nop
 8005888:	08035904 	.word	0x08035904
 800588c:	08035704 	.word	0x08035704
 8005890:	080356c4 	.word	0x080356c4
 8005894:	08035836 	.word	0x08035836
 8005898:	0b0a0908 	.word	0x0b0a0908
 800589c:	ffff0000 	.word	0xffff0000
 80058a0:	09080706 	.word	0x09080706
 80058a4:	01000404 	.word	0x01000404
 80058a8:	08035784 	.word	0x08035784
 80058ac:	05070403 	.word	0x05070403
 80058b0:	04040201 	.word	0x04040201
 80058b4:	080358e8 	.word	0x080358e8

080058b8 <HAL_JPEG_GetInfo>:
{
 80058b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ((hjpeg == NULL) || (pInfo == NULL))
 80058bc:	2800      	cmp	r0, #0
 80058be:	d070      	beq.n	80059a2 <HAL_JPEG_GetInfo+0xea>
 80058c0:	2900      	cmp	r1, #0
 80058c2:	d06e      	beq.n	80059a2 <HAL_JPEG_GetInfo+0xea>
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
 80058c4:	6804      	ldr	r4, [r0, #0]
 80058c6:	6863      	ldr	r3, [r4, #4]
 80058c8:	f003 0303 	and.w	r3, r3, #3
 80058cc:	2b02      	cmp	r3, #2
 80058ce:	d048      	beq.n	8005962 <HAL_JPEG_GetInfo+0xaa>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
 80058d0:	6863      	ldr	r3, [r4, #4]
 80058d2:	f013 0303 	ands.w	r3, r3, #3
 80058d6:	d005      	beq.n	80058e4 <HAL_JPEG_GetInfo+0x2c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
 80058d8:	6863      	ldr	r3, [r4, #4]
 80058da:	f003 0303 	and.w	r3, r3, #3
 80058de:	2b03      	cmp	r3, #3
 80058e0:	d15f      	bne.n	80059a2 <HAL_JPEG_GetInfo+0xea>
 80058e2:	2330      	movs	r3, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 80058e4:	6862      	ldr	r2, [r4, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
 80058e6:	600b      	str	r3, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 80058e8:	0c12      	lsrs	r2, r2, #16
 80058ea:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058ec:	68e2      	ldr	r2, [r4, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058ee:	f023 0320 	bic.w	r3, r3, #32
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058f2:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058f4:	2b10      	cmp	r3, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058f6:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058f8:	d13e      	bne.n	8005978 <HAL_JPEG_GetInfo+0xc0>
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 80058fa:	6925      	ldr	r5, [r4, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 80058fc:	6963      	ldr	r3, [r4, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 80058fe:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 8005902:	69a2      	ldr	r2, [r4, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005904:	2d01      	cmp	r5, #1
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 8005906:	ea4f 1313 	mov.w	r3, r3, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 800590a:	ea4f 1212 	mov.w	r2, r2, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 800590e:	d12a      	bne.n	8005966 <HAL_JPEG_GetInfo+0xae>
 8005910:	4313      	orrs	r3, r2
 8005912:	f013 0f0f 	tst.w	r3, #15
 8005916:	bf0c      	ite	eq
 8005918:	2301      	moveq	r3, #1
 800591a:	2300      	movne	r3, #0
 800591c:	005b      	lsls	r3, r3, #1
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
 800591e:	604b      	str	r3, [r1, #4]
  *         the configuration information for JPEG module
  * @retval JPEG image quality from 1 to 100.
  */
static uint32_t JPEG_GetQuality(const JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
 8005920:	2300      	movs	r3, #0
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 8005922:	f04f 0e64 	mov.w	lr, #100	@ 0x64
  i = 0;
 8005926:	461d      	mov	r5, r3
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
 8005928:	f241 3888 	movw	r8, #5000	@ 0x1388
 800592c:	f8df c078 	ldr.w	ip, [pc, #120]	@ 80059a8 <HAL_JPEG_GetInfo+0xf0>
 8005930:	3450      	adds	r4, #80	@ 0x50
    quantRow = *tableAddress;
 8005932:	2600      	movs	r6, #0
 8005934:	f854 9005 	ldr.w	r9, [r4, r5]
    for (j = 0; j < 4UL; j++)
 8005938:	eb05 070c 	add.w	r7, r5, ip
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
 800593c:	fa29 f206 	lsr.w	r2, r9, r6
 8005940:	b2d2      	uxtb	r2, r2
      if (quantVal == 1UL)
 8005942:	2a01      	cmp	r2, #1
 8005944:	d11a      	bne.n	800597c <HAL_JPEG_GetInfo+0xc4>
        quality += 100UL;
 8005946:	3364      	adds	r3, #100	@ 0x64
    for (j = 0; j < 4UL; j++)
 8005948:	3608      	adds	r6, #8
 800594a:	2e20      	cmp	r6, #32
 800594c:	f107 0701 	add.w	r7, r7, #1
 8005950:	d1f4      	bne.n	800593c <HAL_JPEG_GetInfo+0x84>
        }
      }
    }

    i += 4UL;
 8005952:	3504      	adds	r5, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
 8005954:	2d40      	cmp	r5, #64	@ 0x40
 8005956:	d1ec      	bne.n	8005932 <HAL_JPEG_GetInfo+0x7a>
  return HAL_OK;
 8005958:	2000      	movs	r0, #0
    tableAddress ++;
  }

  return (quality / 64UL);
 800595a:	099b      	lsrs	r3, r3, #6
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
 800595c:	610b      	str	r3, [r1, #16]
}
 800595e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005962:	2310      	movs	r3, #16
 8005964:	e7be      	b.n	80058e4 <HAL_JPEG_GetInfo+0x2c>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005966:	2d03      	cmp	r5, #3
 8005968:	d106      	bne.n	8005978 <HAL_JPEG_GetInfo+0xc0>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 800596a:	4313      	orrs	r3, r2
 800596c:	f013 0f0f 	tst.w	r3, #15
 8005970:	bf0c      	ite	eq
 8005972:	2301      	moveq	r3, #1
 8005974:	2300      	movne	r3, #0
 8005976:	e7d2      	b.n	800591e <HAL_JPEG_GetInfo+0x66>
 8005978:	2300      	movs	r3, #0
 800597a:	e7d0      	b.n	800591e <HAL_JPEG_GetInfo+0x66>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 800597c:	fb0e fb02 	mul.w	fp, lr, r2
 8005980:	f897 a000 	ldrb.w	sl, [r7]
 8005984:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005986:	f812 a00a 	ldrb.w	sl, [r2, sl]
 800598a:	fbbb f2fa 	udiv	r2, fp, sl
        if (scale <= 100UL)
 800598e:	2a64      	cmp	r2, #100	@ 0x64
          quality += 5000UL / scale;
 8005990:	bf8d      	iteet	hi
 8005992:	fbb8 f2f2 	udivhi	r2, r8, r2
          quality += (200UL - scale) / 2UL;
 8005996:	f1c2 02c8 	rsbls	r2, r2, #200	@ 0xc8
 800599a:	eb03 0352 	addls.w	r3, r3, r2, lsr #1
          quality += 5000UL / scale;
 800599e:	189b      	addhi	r3, r3, r2
 80059a0:	e7d2      	b.n	8005948 <HAL_JPEG_GetInfo+0x90>
    return HAL_ERROR;
 80059a2:	2001      	movs	r0, #1
 80059a4:	e7db      	b.n	800595e <HAL_JPEG_GetInfo+0xa6>
 80059a6:	bf00      	nop
 80059a8:	08035744 	.word	0x08035744

080059ac <HAL_JPEG_Decode_DMA>:
{
 80059ac:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
 80059ae:	4604      	mov	r4, r0
 80059b0:	b348      	cbz	r0, 8005a06 <HAL_JPEG_Decode_DMA+0x5a>
 80059b2:	b341      	cbz	r1, 8005a06 <HAL_JPEG_Decode_DMA+0x5a>
 80059b4:	b33b      	cbz	r3, 8005a06 <HAL_JPEG_Decode_DMA+0x5a>
  __HAL_LOCK(hjpeg);
 80059b6:	f890 504c 	ldrb.w	r5, [r0, #76]	@ 0x4c
 80059ba:	2d01      	cmp	r5, #1
 80059bc:	d028      	beq.n	8005a10 <HAL_JPEG_Decode_DMA+0x64>
 80059be:	2501      	movs	r5, #1
 80059c0:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
 80059c4:	f890 504d 	ldrb.w	r5, [r0, #77]	@ 0x4d
 80059c8:	2d01      	cmp	r5, #1
 80059ca:	d11e      	bne.n	8005a0a <HAL_JPEG_Decode_DMA+0x5e>
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
 80059cc:	2504      	movs	r5, #4
 80059ce:	f880 504d 	strb.w	r5, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 80059d2:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 80059d4:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 80059d8:	f025 050f 	bic.w	r5, r5, #15
 80059dc:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 80059de:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->OutDataLength = OutDataLength;
 80059e0:	9b04      	ldr	r3, [sp, #16]
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 80059e2:	f045 050e 	orr.w	r5, r5, #14
 80059e6:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
 80059e8:	2500      	movs	r5, #0
    hjpeg->InDataLength = InDataLength;
 80059ea:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 80059ec:	6205      	str	r5, [r0, #32]
    hjpeg->OutDataLength = OutDataLength;
 80059ee:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->JpegOutCount = 0;
 80059f0:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
 80059f2:	f7ff fd6d 	bl	80054d0 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
 80059f6:	f7ff fdab 	bl	8005550 <JPEG_DMA_StartProcess>
 80059fa:	b128      	cbz	r0, 8005a08 <HAL_JPEG_Decode_DMA+0x5c>
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 80059fc:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
 80059fe:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005a02:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 8005a06:	2001      	movs	r0, #1
}
 8005a08:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
 8005a0a:	2300      	movs	r3, #0
 8005a0c:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
 8005a10:	2002      	movs	r0, #2
 8005a12:	e7f9      	b.n	8005a08 <HAL_JPEG_Decode_DMA+0x5c>

08005a14 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005a14:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005a16:	f003 030c 	and.w	r3, r3, #12
 8005a1a:	2b0c      	cmp	r3, #12
 8005a1c:	d117      	bne.n	8005a4e <HAL_JPEG_Pause+0x3a>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005a1e:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005a22:	bf1f      	itttt	ne
 8005a24:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005a26:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005a2a:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_IDMA;
 8005a2c:	f44f 6300 	movne.w	r3, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005a30:	0789      	lsls	r1, r1, #30
 8005a32:	d505      	bpl.n	8005a40 <HAL_JPEG_Pause+0x2c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a34:	6d42      	ldr	r2, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_ODMA;
 8005a36:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a3a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005a3e:	6542      	str	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
 8005a40:	6801      	ldr	r1, [r0, #0]
 8005a42:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005a44:	ea22 0303 	bic.w	r3, r2, r3
 8005a48:	630b      	str	r3, [r1, #48]	@ 0x30
}
 8005a4a:	2000      	movs	r0, #0
 8005a4c:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005a4e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005a50:	f003 030c 	and.w	r3, r3, #12
 8005a54:	2b08      	cmp	r3, #8
 8005a56:	d1f8      	bne.n	8005a4a <HAL_JPEG_Pause+0x36>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005a58:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005a5c:	bf1f      	itttt	ne
 8005a5e:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005a60:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005a64:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8005a66:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005a68:	078a      	lsls	r2, r1, #30
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a6a:	bf41      	itttt	mi
 8005a6c:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a6e:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a72:	f442 5200 	orrmi.w	r2, r2, #8192	@ 0x2000
 8005a76:	6542      	strmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a78:	e7e2      	b.n	8005a40 <HAL_JPEG_Pause+0x2c>

08005a7a <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
 8005a7a:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
 8005a7c:	6282      	str	r2, [r0, #40]	@ 0x28
}
 8005a7e:	4770      	bx	lr

08005a80 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
 8005a80:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
 8005a82:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
 8005a84:	4770      	bx	lr

08005a86 <HAL_JPEG_Abort>:
{
 8005a86:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
 8005a88:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a8a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005a8c:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a8e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8005a92:	f023 030f 	bic.w	r3, r3, #15
 8005a96:	6543      	str	r3, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005a98:	f002 030c 	and.w	r3, r2, #12
 8005a9c:	2b0c      	cmp	r3, #12
 8005a9e:	d117      	bne.n	8005ad0 <HAL_JPEG_Abort+0x4a>
    if (HAL_DMA_Abort(hjpeg->hdmaout) != HAL_OK)
 8005aa0:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005aa2:	f7fe fc6b 	bl	800437c <HAL_DMA_Abort>
 8005aa6:	b138      	cbz	r0, 8005ab8 <HAL_JPEG_Abort+0x32>
      if (hjpeg->hdmaout->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005aa8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005aaa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005aac:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005aae:	bf02      	ittt	eq
 8005ab0:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005ab2:	f043 0304 	orreq.w	r3, r3, #4
 8005ab6:	6523      	streq	r3, [r4, #80]	@ 0x50
    if (HAL_DMA_Abort(hjpeg->hdmain) != HAL_OK)
 8005ab8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005aba:	f7fe fc5f 	bl	800437c <HAL_DMA_Abort>
 8005abe:	b138      	cbz	r0, 8005ad0 <HAL_JPEG_Abort+0x4a>
      if (hjpeg->hdmain->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005ac0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005ac2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005ac4:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005ac6:	bf02      	ittt	eq
 8005ac8:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005aca:	f043 0304 	orreq.w	r3, r3, #4
 8005ace:	6523      	streq	r3, [r4, #80]	@ 0x50
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005ad0:	6822      	ldr	r2, [r4, #0]
 8005ad2:	6813      	ldr	r3, [r2, #0]
 8005ad4:	f023 0301 	bic.w	r3, r3, #1
 8005ad8:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8005ada:	f7fe f907 	bl	8003cec <HAL_GetTick>
 8005ade:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
 8005ae0:	6823      	ldr	r3, [r4, #0]
 8005ae2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005ae4:	061b      	lsls	r3, r3, #24
 8005ae6:	d50c      	bpl.n	8005b02 <HAL_JPEG_Abort+0x7c>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
 8005ae8:	f7fe f900 	bl	8003cec <HAL_GetTick>
 8005aec:	1b40      	subs	r0, r0, r5
 8005aee:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005af2:	d9f5      	bls.n	8005ae0 <HAL_JPEG_Abort+0x5a>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
 8005af4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005af6:	f043 0308 	orr.w	r3, r3, #8
 8005afa:	6523      	str	r3, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005afc:	2306      	movs	r3, #6
 8005afe:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005b02:	6823      	ldr	r3, [r4, #0]
 8005b04:	2001      	movs	r0, #1
 8005b06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b08:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005b0c:	631a      	str	r2, [r3, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005b0e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b10:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005b14:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005b16:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b18:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005b1c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005b1e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b20:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005b24:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005b26:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005b28:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005b2c:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
 8005b2e:	2300      	movs	r3, #0
 8005b30:	6223      	str	r3, [r4, #32]
  hjpeg->JpegOutCount = 0;
 8005b32:	6263      	str	r3, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
 8005b34:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005b36:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8005b3a:	6562      	str	r2, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
 8005b3c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8005b3e:	b12a      	cbz	r2, 8005b4c <HAL_JPEG_Abort+0xc6>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005b40:	2206      	movs	r2, #6
 8005b42:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    __HAL_UNLOCK(hjpeg);
 8005b46:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
 8005b4a:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005b4c:	f884 004d 	strb.w	r0, [r4, #77]	@ 0x4d
    return HAL_OK;
 8005b50:	4618      	mov	r0, r3
 8005b52:	e7f8      	b.n	8005b46 <HAL_JPEG_Abort+0xc0>

08005b54 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
 8005b54:	4770      	bx	lr

08005b56 <JPEG_DMAErrorCallback>:
{
 8005b56:	b510      	push	{r4, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005b58:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 8005b5a:	f7fe fd2d 	bl	80045b8 <HAL_DMA_GetError>
 8005b5e:	b1b0      	cbz	r0, 8005b8e <JPEG_DMAErrorCallback+0x38>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005b60:	6823      	ldr	r3, [r4, #0]
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b62:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005b64:	681a      	ldr	r2, [r3, #0]
 8005b66:	f022 0201 	bic.w	r2, r2, #1
 8005b6a:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005b6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b6e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005b72:	631a      	str	r2, [r3, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005b74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b76:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005b7a:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005b7c:	2301      	movs	r3, #1
 8005b7e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005b82:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005b84:	f043 0304 	orr.w	r3, r3, #4
 8005b88:	6523      	str	r3, [r4, #80]	@ 0x50
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b8a:	f7fb ff83 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005b8e:	bd10      	pop	{r4, pc}

08005b90 <JPEG_ReadInputData>:
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b90:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
 8005b92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b94:	4604      	mov	r4, r0
 8005b96:	460d      	mov	r5, r1
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b98:	b922      	cbnz	r2, 8005ba4 <JPEG_ReadInputData+0x14>
    (void) HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_INPUT);
 8005b9a:	2101      	movs	r1, #1
 8005b9c:	f7ff ff3a 	bl	8005a14 <HAL_JPEG_Pause>
  uint32_t nb_bytes = 0;
 8005ba0:	2200      	movs	r2, #0
 8005ba2:	e004      	b.n	8005bae <JPEG_ReadInputData+0x1e>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005ba4:	6a03      	ldr	r3, [r0, #32]
 8005ba6:	429a      	cmp	r2, r3
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005ba8:	6a03      	ldr	r3, [r0, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005baa:	d922      	bls.n	8005bf2 <JPEG_ReadInputData+0x62>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005bac:	1ad2      	subs	r2, r2, r3
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
 8005bae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005bb0:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005bb4:	d11c      	bne.n	8005bf0 <JPEG_ReadInputData+0x60>
 8005bb6:	b1da      	cbz	r2, 8005bf0 <JPEG_ReadInputData+0x60>
    if (nb_words >= nbRequestWords)
 8005bb8:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
 8005bbc:	69a1      	ldr	r1, [r4, #24]
    nb_words = nb_bytes / 4UL;
 8005bbe:	ea4f 0692 	mov.w	r6, r2, lsr #2
    if (nb_words >= nbRequestWords)
 8005bc2:	d826      	bhi.n	8005c12 <JPEG_ReadInputData+0x82>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bc4:	6827      	ldr	r7, [r4, #0]
        input_count = hjpeg->JpegInCount;
 8005bc6:	6a26      	ldr	r6, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005bc8:	3301      	adds	r3, #1
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bca:	1988      	adds	r0, r1, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bcc:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bce:	f890 c001 	ldrb.w	ip, [r0, #1]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bd2:	5d8e      	ldrb	r6, [r1, r6]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bd4:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005bd6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bd8:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005bdc:	4332      	orrs	r2, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bde:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005be2:	643a      	str	r2, [r7, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
 8005be4:	6a22      	ldr	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005be6:	429d      	cmp	r5, r3
        hjpeg->JpegInCount += 4UL;
 8005be8:	f102 0204 	add.w	r2, r2, #4
 8005bec:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005bee:	d1ea      	bne.n	8005bc6 <JPEG_ReadInputData+0x36>
}
 8005bf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
 8005bf2:	429a      	cmp	r2, r3
 8005bf4:	d1d4      	bne.n	8005ba0 <JPEG_ReadInputData+0x10>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005bf6:	6a01      	ldr	r1, [r0, #32]
 8005bf8:	f7fb fe8e 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
 8005bfc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005bfe:	2b04      	cmp	r3, #4
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005c00:	bf82      	ittt	hi
 8005c02:	3303      	addhi	r3, #3
 8005c04:	f023 0303 	bichi.w	r3, r3, #3
 8005c08:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005c0a:	2300      	movs	r3, #0
    nb_bytes = hjpeg->InDataLength;
 8005c0c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005c0e:	6223      	str	r3, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
 8005c10:	e7cd      	b.n	8005bae <JPEG_ReadInputData+0x1e>
      if (nb_words > 0UL)
 8005c12:	2a03      	cmp	r2, #3
 8005c14:	d916      	bls.n	8005c44 <JPEG_ReadInputData+0xb4>
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005c16:	6827      	ldr	r7, [r4, #0]
          input_count = hjpeg->JpegInCount;
 8005c18:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005c1a:	3301      	adds	r3, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005c1c:	1948      	adds	r0, r1, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005c1e:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005c20:	f890 c001 	ldrb.w	ip, [r0, #1]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005c24:	5d4d      	ldrb	r5, [r1, r5]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005c26:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005c28:	78c0      	ldrb	r0, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005c2a:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005c2e:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005c30:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005c34:	643a      	str	r2, [r7, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
 8005c36:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005c38:	429e      	cmp	r6, r3
          hjpeg->JpegInCount += 4UL;
 8005c3a:	f102 0204 	add.w	r2, r2, #4
 8005c3e:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005c40:	d1ea      	bne.n	8005c18 <JPEG_ReadInputData+0x88>
 8005c42:	e7d5      	b.n	8005bf0 <JPEG_ReadInputData+0x60>
        for (index = 0; index < nb_bytes; index++)
 8005c44:	4618      	mov	r0, r3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005c46:	6a25      	ldr	r5, [r4, #32]
 8005c48:	00c6      	lsls	r6, r0, #3
 8005c4a:	5d4d      	ldrb	r5, [r1, r5]
        for (index = 0; index < nb_bytes; index++)
 8005c4c:	3001      	adds	r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005c4e:	40b5      	lsls	r5, r6
 8005c50:	432b      	orrs	r3, r5
          hjpeg->JpegInCount++;
 8005c52:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005c54:	4282      	cmp	r2, r0
          hjpeg->JpegInCount++;
 8005c56:	f105 0501 	add.w	r5, r5, #1
 8005c5a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005c5c:	d1f3      	bne.n	8005c46 <JPEG_ReadInputData+0xb6>
        hjpeg->Instance->DIR = dataword;
 8005c5e:	6822      	ldr	r2, [r4, #0]
 8005c60:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8005c62:	e7c5      	b.n	8005bf0 <JPEG_ReadInputData+0x60>

08005c64 <JPEG_DMAInCpltCallback>:
{
 8005c64:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005c66:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005c68:	6822      	ldr	r2, [r4, #0]
 8005c6a:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 8005c6c:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8005c70:	6311      	str	r1, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8005c72:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8005c74:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8005c78:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8005c7c:	0409      	lsls	r1, r1, #16
 8005c7e:	0c09      	lsrs	r1, r1, #16
 8005c80:	290c      	cmp	r1, #12
 8005c82:	d12d      	bne.n	8005ce0 <JPEG_DMAInCpltCallback+0x7c>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c84:	6b11      	ldr	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c86:	6803      	ldr	r3, [r0, #0]
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c88:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 8005c8c:	6311      	str	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c8e:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8005c90:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8005c92:	f7fe fdfb 	bl	800488c <HAL_DMAEx_GetFifoLevel>
 8005c96:	b2b6      	uxth	r6, r6
 8005c98:	1bad      	subs	r5, r5, r6
 8005c9a:	1a2d      	subs	r5, r5, r0
 8005c9c:	6225      	str	r5, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005c9e:	4620      	mov	r0, r4
 8005ca0:	6a21      	ldr	r1, [r4, #32]
 8005ca2:	f7fb fe39 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= 4UL)
 8005ca6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005ca8:	6822      	ldr	r2, [r4, #0]
    if (hjpeg->InDataLength >= 4UL)
 8005caa:	2b03      	cmp	r3, #3
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005cac:	bf82      	ittt	hi
 8005cae:	3303      	addhi	r3, #3
 8005cb0:	f023 0303 	bichi.w	r3, r3, #3
 8005cb4:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
 8005cb6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005cb8:	04db      	lsls	r3, r3, #19
 8005cba:	d417      	bmi.n	8005cec <JPEG_DMAInCpltCallback+0x88>
 8005cbc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005cbe:	b1ab      	cbz	r3, 8005cec <JPEG_DMAInCpltCallback+0x88>
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005cc0:	69a1      	ldr	r1, [r4, #24]
 8005cc2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005cc4:	3240      	adds	r2, #64	@ 0x40
 8005cc6:	f7fe fb1b 	bl	8004300 <HAL_DMA_Start_IT>
 8005cca:	b150      	cbz	r0, 8005ce2 <JPEG_DMAInCpltCallback+0x7e>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005ccc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        HAL_JPEG_ErrorCallback(hjpeg);
 8005cce:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005cd0:	f043 0304 	orr.w	r3, r3, #4
 8005cd4:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005cd6:	2306      	movs	r3, #6
 8005cd8:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
 8005cdc:	f7fb feda 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005ce0:	bd70      	pop	{r4, r5, r6, pc}
      JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005ce2:	6822      	ldr	r2, [r4, #0]
 8005ce4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005ce6:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8005cea:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005cec:	6822      	ldr	r2, [r4, #0]
 8005cee:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005cf0:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005cf4:	6313      	str	r3, [r2, #48]	@ 0x30
 8005cf6:	e7f3      	b.n	8005ce0 <JPEG_DMAInCpltCallback+0x7c>

08005cf8 <JPEG_StoreOutputData>:
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cf8:	6a42      	ldr	r2, [r0, #36]	@ 0x24
{
 8005cfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cfc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8005cfe:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8005d02:	4293      	cmp	r3, r2
{
 8005d04:	4604      	mov	r4, r0
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005d06:	d32a      	bcc.n	8005d5e <JPEG_StoreOutputData+0x66>
    for (index = 0; index < nbOutputWords; index++)
 8005d08:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005d0a:	6823      	ldr	r3, [r4, #0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d0c:	69e5      	ldr	r5, [r4, #28]
      dataword = hjpeg->Instance->DOR;
 8005d0e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d10:	6a60      	ldr	r0, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005d12:	3201      	adds	r2, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d14:	542b      	strb	r3, [r5, r0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d16:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d18:	69e0      	ldr	r0, [r4, #28]
    for (index = 0; index < nbOutputWords; index++)
 8005d1a:	4291      	cmp	r1, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d1c:	4428      	add	r0, r5
 8005d1e:	ea4f 2513 	mov.w	r5, r3, lsr #8
 8005d22:	7045      	strb	r5, [r0, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005d24:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d26:	69e0      	ldr	r0, [r4, #28]
 8005d28:	4428      	add	r0, r5
 8005d2a:	ea4f 4513 	mov.w	r5, r3, lsr #16
 8005d2e:	7085      	strb	r5, [r0, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005d30:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d32:	69e0      	ldr	r0, [r4, #28]
 8005d34:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8005d38:	4428      	add	r0, r5
 8005d3a:	70c3      	strb	r3, [r0, #3]
      hjpeg->JpegOutCount += 4UL;
 8005d3c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d3e:	f103 0304 	add.w	r3, r3, #4
 8005d42:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005d44:	d1e1      	bne.n	8005d0a <JPEG_StoreOutputData+0x12>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005d46:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d48:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005d4a:	429a      	cmp	r2, r3
 8005d4c:	d106      	bne.n	8005d5c <JPEG_StoreOutputData+0x64>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d4e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d50:	69e1      	ldr	r1, [r4, #28]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d52:	4620      	mov	r0, r4
 8005d54:	f7fb fdfe 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005d58:	2300      	movs	r3, #0
 8005d5a:	6263      	str	r3, [r4, #36]	@ 0x24
}
 8005d5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
 8005d5e:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8005d60:	4293      	cmp	r3, r2
 8005d62:	d9fb      	bls.n	8005d5c <JPEG_StoreOutputData+0x64>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005d64:	6a42      	ldr	r2, [r0, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005d66:	2000      	movs	r0, #0
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005d68:	1a9b      	subs	r3, r3, r2
 8005d6a:	089a      	lsrs	r2, r3, #2
    for (index = 0; index < nb_words; index++)
 8005d6c:	4290      	cmp	r0, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d6e:	69e1      	ldr	r1, [r4, #28]
    for (index = 0; index < nb_words; index++)
 8005d70:	d105      	bne.n	8005d7e <JPEG_StoreOutputData+0x86>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005d72:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005d74:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d76:	429f      	cmp	r7, r3
 8005d78:	d119      	bne.n	8005dae <JPEG_StoreOutputData+0xb6>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d7a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d7c:	e7e9      	b.n	8005d52 <JPEG_StoreOutputData+0x5a>
      dataword = hjpeg->Instance->DOR;
 8005d7e:	6823      	ldr	r3, [r4, #0]
    for (index = 0; index < nb_words; index++)
 8005d80:	3001      	adds	r0, #1
      dataword = hjpeg->Instance->DOR;
 8005d82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d84:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d86:	554b      	strb	r3, [r1, r5]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d88:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d8a:	69e1      	ldr	r1, [r4, #28]
 8005d8c:	4429      	add	r1, r5
 8005d8e:	0a1d      	lsrs	r5, r3, #8
 8005d90:	704d      	strb	r5, [r1, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005d92:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d94:	69e1      	ldr	r1, [r4, #28]
 8005d96:	4429      	add	r1, r5
 8005d98:	0c1d      	lsrs	r5, r3, #16
 8005d9a:	708d      	strb	r5, [r1, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005d9c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d9e:	69e1      	ldr	r1, [r4, #28]
 8005da0:	0e1b      	lsrs	r3, r3, #24
 8005da2:	4429      	add	r1, r5
 8005da4:	70cb      	strb	r3, [r1, #3]
      hjpeg->JpegOutCount += 4UL;
 8005da6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005da8:	3304      	adds	r3, #4
 8005daa:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005dac:	e7de      	b.n	8005d6c <JPEG_StoreOutputData+0x74>
      for (index = 0; index < nb_bytes; index++)
 8005dae:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005db0:	6823      	ldr	r3, [r4, #0]
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005db2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
 8005db4:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005db6:	1b78      	subs	r0, r7, r5
      for (index = 0; index < nb_bytes; index++)
 8005db8:	4282      	cmp	r2, r0
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005dba:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
 8005dbc:	d114      	bne.n	8005de8 <JPEG_StoreOutputData+0xf0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005dbe:	4620      	mov	r0, r4
 8005dc0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005dc2:	f7fb fdc7 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005dc6:	2300      	movs	r3, #0
 8005dc8:	6263      	str	r3, [r4, #36]	@ 0x24
      nb_bytes = 4UL - nb_bytes;
 8005dca:	1d2b      	adds	r3, r5, #4
 8005dcc:	1bdb      	subs	r3, r3, r7
      for (index = nb_bytes; index < 4UL; index++)
 8005dce:	2b03      	cmp	r3, #3
 8005dd0:	d8c4      	bhi.n	8005d5c <JPEG_StoreOutputData+0x64>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
 8005dd2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005dd4:	00da      	lsls	r2, r3, #3
 8005dd6:	69e0      	ldr	r0, [r4, #28]
 8005dd8:	fa26 f202 	lsr.w	r2, r6, r2
 8005ddc:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
 8005dde:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005de0:	3301      	adds	r3, #1
        hjpeg->JpegOutCount++;
 8005de2:	3201      	adds	r2, #1
 8005de4:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005de6:	e7f2      	b.n	8005dce <JPEG_StoreOutputData+0xd6>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005de8:	f002 0303 	and.w	r3, r2, #3
 8005dec:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
 8005df0:	00db      	lsls	r3, r3, #3
 8005df2:	fa26 f303 	lsr.w	r3, r6, r3
 8005df6:	f801 300c 	strb.w	r3, [r1, ip]
        hjpeg->JpegOutCount++;
 8005dfa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005dfc:	3201      	adds	r2, #1
        hjpeg->JpegOutCount++;
 8005dfe:	3301      	adds	r3, #1
 8005e00:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005e02:	e7d9      	b.n	8005db8 <JPEG_StoreOutputData+0xc0>

08005e04 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e04:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005e06:	b510      	push	{r4, lr}
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e08:	f003 0303 	and.w	r3, r3, #3
 8005e0c:	2b02      	cmp	r3, #2
{
 8005e0e:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e10:	d114      	bne.n	8005e3c <JPEG_Process+0x38>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 8005e12:	6803      	ldr	r3, [r0, #0]
 8005e14:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005e16:	065b      	lsls	r3, r3, #25
 8005e18:	d510      	bpl.n	8005e3c <JPEG_Process+0x38>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8005e1a:	1d01      	adds	r1, r0, #4
 8005e1c:	f7ff fd4c 	bl	80058b8 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8005e20:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005e22:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 8005e24:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005e26:	f7fb fd4b 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 8005e2a:	6823      	ldr	r3, [r4, #0]
 8005e2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005e2e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005e32:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 8005e34:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005e36:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005e3a:	639a      	str	r2, [r3, #56]	@ 0x38
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
 8005e3c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e3e:	04d9      	lsls	r1, r3, #19
 8005e40:	d407      	bmi.n	8005e52 <JPEG_Process+0x4e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
 8005e42:	6823      	ldr	r3, [r4, #0]
 8005e44:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e46:	0792      	lsls	r2, r2, #30
 8005e48:	d542      	bpl.n	8005ed0 <JPEG_Process+0xcc>
      JPEG_ReadInputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005e4a:	2104      	movs	r1, #4
      JPEG_ReadInputData(hjpeg, 1);
 8005e4c:	4620      	mov	r0, r4
 8005e4e:	f7ff fe9f 	bl	8005b90 <JPEG_ReadInputData>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005e52:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e54:	0499      	lsls	r1, r3, #18
 8005e56:	d407      	bmi.n	8005e68 <JPEG_Process+0x64>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
 8005e58:	6823      	ldr	r3, [r4, #0]
 8005e5a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e5c:	0712      	lsls	r2, r2, #28
 8005e5e:	d53c      	bpl.n	8005eda <JPEG_Process+0xd6>
      JPEG_StoreOutputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005e60:	2104      	movs	r1, #4
      JPEG_StoreOutputData(hjpeg, 1);
 8005e62:	4620      	mov	r0, r4
 8005e64:	f7ff ff48 	bl	8005cf8 <JPEG_StoreOutputData>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
 8005e68:	6823      	ldr	r3, [r4, #0]
 8005e6a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e6c:	f002 0238 	and.w	r2, r2, #56	@ 0x38
 8005e70:	2a20      	cmp	r2, #32
 8005e72:	d13a      	bne.n	8005eea <JPEG_Process+0xe6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005e74:	681a      	ldr	r2, [r3, #0]
 8005e76:	f022 0201 	bic.w	r2, r2, #1
 8005e7a:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005e7c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005e7e:	f002 020c 	and.w	r2, r2, #12
 8005e82:	2a08      	cmp	r2, #8
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005e84:	bf02      	ittt	eq
 8005e86:	6b1a      	ldreq	r2, [r3, #48]	@ 0x30
 8005e88:	f022 027e 	biceq.w	r2, r2, #126	@ 0x7e
 8005e8c:	631a      	streq	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005e8e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005e90:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005e94:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
 8005e96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e98:	b133      	cbz	r3, 8005ea8 <JPEG_Process+0xa4>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005e9a:	4620      	mov	r0, r4
 8005e9c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e9e:	69e1      	ldr	r1, [r4, #28]
 8005ea0:	f7fb fd58 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005ea4:	2300      	movs	r3, #0
 8005ea6:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005ea8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005eaa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005eac:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005eb0:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005eb4:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005eb6:	2200      	movs	r2, #0
 8005eb8:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005ebc:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005ebe:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005ec0:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005ec2:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005ec6:	d10d      	bne.n	8005ee4 <JPEG_Process+0xe0>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005ec8:	f7fb fde6 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
 8005ecc:	2001      	movs	r0, #1
}
 8005ece:	bd10      	pop	{r4, pc}
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
 8005ed0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005ed2:	0758      	lsls	r0, r3, #29
 8005ed4:	d5bd      	bpl.n	8005e52 <JPEG_Process+0x4e>
      JPEG_ReadInputData(hjpeg, 1);
 8005ed6:	2101      	movs	r1, #1
 8005ed8:	e7b8      	b.n	8005e4c <JPEG_Process+0x48>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005eda:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005edc:	06db      	lsls	r3, r3, #27
 8005ede:	d5c3      	bpl.n	8005e68 <JPEG_Process+0x64>
      JPEG_StoreOutputData(hjpeg, 1);
 8005ee0:	2101      	movs	r1, #1
 8005ee2:	e7be      	b.n	8005e62 <JPEG_Process+0x5e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005ee4:	f7ff fe36 	bl	8005b54 <HAL_JPEG_EncodeCpltCallback>
 8005ee8:	e7f0      	b.n	8005ecc <JPEG_Process+0xc8>
  return JPEG_PROCESS_ONGOING;
 8005eea:	2000      	movs	r0, #0
 8005eec:	e7ef      	b.n	8005ece <JPEG_Process+0xca>

08005eee <JPEG_DMA_PollResidualData>:
{
 8005eee:	b570      	push	{r4, r5, r6, lr}
 8005ef0:	4604      	mov	r4, r0
 8005ef2:	2610      	movs	r6, #16
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005ef4:	6d65      	ldr	r5, [r4, #84]	@ 0x54
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005ef6:	6823      	ldr	r3, [r4, #0]
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005ef8:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
 8005efc:	d122      	bne.n	8005f44 <JPEG_DMA_PollResidualData+0x56>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005efe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f00:	06d0      	lsls	r0, r2, #27
 8005f02:	d51f      	bpl.n	8005f44 <JPEG_DMA_PollResidualData+0x56>
        dataOut = hjpeg->Instance->DOR;
 8005f04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
 8005f06:	69e1      	ldr	r1, [r4, #28]
 8005f08:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f0a:	548b      	strb	r3, [r1, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
 8005f0c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005f0e:	69e2      	ldr	r2, [r4, #28]
 8005f10:	440a      	add	r2, r1
 8005f12:	0a19      	lsrs	r1, r3, #8
 8005f14:	7051      	strb	r1, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
 8005f16:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005f18:	69e2      	ldr	r2, [r4, #28]
 8005f1a:	440a      	add	r2, r1
 8005f1c:	0c19      	lsrs	r1, r3, #16
 8005f1e:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
 8005f20:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005f22:	69e2      	ldr	r2, [r4, #28]
 8005f24:	0e1b      	lsrs	r3, r3, #24
 8005f26:	440a      	add	r2, r1
 8005f28:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
 8005f2a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005f2c:	3304      	adds	r3, #4
 8005f2e:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 8005f30:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f32:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005f34:	429a      	cmp	r2, r3
 8005f36:	d105      	bne.n	8005f44 <JPEG_DMA_PollResidualData+0x56>
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005f38:	4620      	mov	r0, r4
 8005f3a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f3c:	69e1      	ldr	r1, [r4, #28]
 8005f3e:	f7fb fd09 	bl	8001954 <HAL_JPEG_DataReadyCallback>
          hjpeg->JpegOutCount = 0;
 8005f42:	6265      	str	r5, [r4, #36]	@ 0x24
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
 8005f44:	3e01      	subs	r6, #1
 8005f46:	d1d5      	bne.n	8005ef4 <JPEG_DMA_PollResidualData+0x6>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005f48:	6823      	ldr	r3, [r4, #0]
  tmpContext = hjpeg->Context;
 8005f4a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005f4c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8005f4e:	06c9      	lsls	r1, r1, #27
 8005f50:	d501      	bpl.n	8005f56 <JPEG_DMA_PollResidualData+0x68>
 8005f52:	0492      	lsls	r2, r2, #18
 8005f54:	d41e      	bmi.n	8005f94 <JPEG_DMA_PollResidualData+0xa6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005f56:	681a      	ldr	r2, [r3, #0]
 8005f58:	f022 0201 	bic.w	r2, r2, #1
 8005f5c:	601a      	str	r2, [r3, #0]
    if (hjpeg->JpegOutCount > 0UL)
 8005f5e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005f60:	b133      	cbz	r3, 8005f70 <JPEG_DMA_PollResidualData+0x82>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005f62:	4620      	mov	r0, r4
 8005f64:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f66:	69e1      	ldr	r1, [r4, #28]
 8005f68:	f7fb fcf4 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005f6c:	2300      	movs	r3, #0
 8005f6e:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005f70:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f72:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f74:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f78:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005f7c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005f7e:	2200      	movs	r2, #0
 8005f80:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f84:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f86:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f88:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f8a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f8e:	d102      	bne.n	8005f96 <JPEG_DMA_PollResidualData+0xa8>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f90:	f7fb fd82 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 8005f94:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005f96:	f7ff fddd 	bl	8005b54 <HAL_JPEG_EncodeCpltCallback>
}
 8005f9a:	e7fb      	b.n	8005f94 <JPEG_DMA_PollResidualData+0xa6>

08005f9c <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f9c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005f9e:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005fa0:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
{
 8005fa4:	4604      	mov	r4, r0
 8005fa6:	460d      	mov	r5, r1
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005fa8:	d033      	beq.n	8006012 <HAL_JPEG_Resume+0x76>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005faa:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005fac:	f003 030c 	and.w	r3, r3, #12
 8005fb0:	2b0c      	cmp	r3, #12
 8005fb2:	d13c      	bne.n	800602e <HAL_JPEG_Resume+0x92>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005fb4:	f011 0601 	ands.w	r6, r1, #1
 8005fb8:	d00a      	beq.n	8005fd0 <HAL_JPEG_Resume+0x34>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8005fba:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005fbc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005fc0:	6543      	str	r3, [r0, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005fc2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005fc4:	f023 0303 	bic.w	r3, r3, #3
 8005fc8:	6283      	str	r3, [r0, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
 8005fca:	b99b      	cbnz	r3, 8005ff4 <HAL_JPEG_Resume+0x58>
      mask |= JPEG_DMA_IDMA;
 8005fcc:	f44f 6600 	mov.w	r6, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005fd0:	07a8      	lsls	r0, r5, #30
 8005fd2:	d509      	bpl.n	8005fe8 <HAL_JPEG_Resume+0x4c>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005fd4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005fd6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005fda:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 8005fdc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005fde:	0419      	lsls	r1, r3, #16
 8005fe0:	d519      	bpl.n	8006016 <HAL_JPEG_Resume+0x7a>
        JPEG_DMA_PollResidualData(hjpeg);
 8005fe2:	4620      	mov	r0, r4
 8005fe4:	f7ff ff83 	bl	8005eee <JPEG_DMA_PollResidualData>
    JPEG_ENABLE_DMA(hjpeg, mask);
 8005fe8:	6822      	ldr	r2, [r4, #0]
 8005fea:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005fec:	4333      	orrs	r3, r6
 8005fee:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005ff0:	2000      	movs	r0, #0
}
 8005ff2:	bd70      	pop	{r4, r5, r6, pc}
        if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005ff4:	6802      	ldr	r2, [r0, #0]
 8005ff6:	6981      	ldr	r1, [r0, #24]
 8005ff8:	3240      	adds	r2, #64	@ 0x40
 8005ffa:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8005ffc:	f7fe f980 	bl	8004300 <HAL_DMA_Start_IT>
 8006000:	2800      	cmp	r0, #0
 8006002:	d0e3      	beq.n	8005fcc <HAL_JPEG_Resume+0x30>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8006004:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8006006:	f043 0304 	orr.w	r3, r3, #4
 800600a:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 800600c:	2306      	movs	r3, #6
 800600e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 8006012:	2001      	movs	r0, #1
 8006014:	e7ed      	b.n	8005ff2 <HAL_JPEG_Resume+0x56>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 8006016:	6821      	ldr	r1, [r4, #0]
 8006018:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800601a:	69e2      	ldr	r2, [r4, #28]
 800601c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800601e:	3144      	adds	r1, #68	@ 0x44
 8006020:	f7fe f96e 	bl	8004300 <HAL_DMA_Start_IT>
 8006024:	2800      	cmp	r0, #0
 8006026:	d1ed      	bne.n	8006004 <HAL_JPEG_Resume+0x68>
        mask |= JPEG_DMA_ODMA;
 8006028:	f446 5680 	orr.w	r6, r6, #4096	@ 0x1000
 800602c:	e7dc      	b.n	8005fe8 <HAL_JPEG_Resume+0x4c>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 800602e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006030:	f003 030c 	and.w	r3, r3, #12
 8006034:	2b08      	cmp	r3, #8
 8006036:	d1db      	bne.n	8005ff0 <HAL_JPEG_Resume+0x54>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8006038:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 800603c:	bf1f      	itttt	ne
 800603e:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8006040:	f423 5380 	bicne.w	r3, r3, #4096	@ 0x1000
 8006044:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8006046:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8006048:	078a      	lsls	r2, r1, #30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 800604a:	bf48      	it	mi
 800604c:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 800604e:	6801      	ldr	r1, [r0, #0]
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8006050:	bf44      	itt	mi
 8006052:	f422 5200 	bicmi.w	r2, r2, #8192	@ 0x2000
 8006056:	6542      	strmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006058:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 800605a:	bf48      	it	mi
 800605c:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006060:	4313      	orrs	r3, r2
 8006062:	630b      	str	r3, [r1, #48]	@ 0x30
 8006064:	e7c4      	b.n	8005ff0 <HAL_JPEG_Resume+0x54>

08006066 <JPEG_DMA_EndProcess>:
{
 8006066:	b570      	push	{r4, r5, r6, lr}
 8006068:	4604      	mov	r4, r0
  hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hjpeg->hdmaout);
 800606a:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800606c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800606e:	6803      	ldr	r3, [r0, #0]
 8006070:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8006072:	f7fe fc0b 	bl	800488c <HAL_DMAEx_GetFifoLevel>
 8006076:	b2b6      	uxth	r6, r6
 8006078:	1bad      	subs	r5, r5, r6
 800607a:	1a2d      	subs	r5, r5, r0
 800607c:	6265      	str	r5, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 800607e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006080:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006082:	429a      	cmp	r2, r3
 8006084:	d106      	bne.n	8006094 <JPEG_DMA_EndProcess+0x2e>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8006086:	4620      	mov	r0, r4
 8006088:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800608a:	69e1      	ldr	r1, [r4, #28]
 800608c:	f7fb fc62 	bl	8001954 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
 8006090:	2300      	movs	r3, #0
 8006092:	6263      	str	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
 8006094:	6823      	ldr	r3, [r4, #0]
 8006096:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 8006098:	f015 0510 	ands.w	r5, r5, #16
 800609c:	d122      	bne.n	80060e4 <JPEG_DMA_EndProcess+0x7e>
    if (hjpeg->JpegOutCount > 0UL)
 800609e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80060a0:	b12b      	cbz	r3, 80060ae <JPEG_DMA_EndProcess+0x48>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80060a2:	4620      	mov	r0, r4
 80060a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80060a6:	69e1      	ldr	r1, [r4, #28]
 80060a8:	f7fb fc54 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 80060ac:	6265      	str	r5, [r4, #36]	@ 0x24
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80060ae:	6822      	ldr	r2, [r4, #0]
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 80060b0:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80060b2:	6813      	ldr	r3, [r2, #0]
 80060b4:	f023 0301 	bic.w	r3, r3, #1
 80060b8:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
 80060ba:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 80060bc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80060be:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 80060c2:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 80060c6:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 80060c8:	2200      	movs	r2, #0
 80060ca:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 80060ce:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80060d0:	2b02      	cmp	r3, #2
    hjpeg->State = HAL_JPEG_STATE_READY;
 80060d2:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80060d6:	d102      	bne.n	80060de <JPEG_DMA_EndProcess+0x78>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 80060d8:	f7fb fcde 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 80060dc:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 80060de:	f7ff fd39 	bl	8005b54 <HAL_JPEG_EncodeCpltCallback>
 80060e2:	e7fb      	b.n	80060dc <JPEG_DMA_EndProcess+0x76>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 80060e4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060e6:	049b      	lsls	r3, r3, #18
 80060e8:	d4f8      	bmi.n	80060dc <JPEG_DMA_EndProcess+0x76>
    JPEG_DMA_PollResidualData(hjpeg);
 80060ea:	4620      	mov	r0, r4
}
 80060ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    JPEG_DMA_PollResidualData(hjpeg);
 80060f0:	f7ff befd 	b.w	8005eee <JPEG_DMA_PollResidualData>

080060f4 <JPEG_DMAOutAbortCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80060f4:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 80060f6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80060f8:	041b      	lsls	r3, r3, #16
 80060fa:	d501      	bpl.n	8006100 <JPEG_DMAOutAbortCallback+0xc>
    JPEG_DMA_EndProcess(hjpeg);
 80060fc:	f7ff bfb3 	b.w	8006066 <JPEG_DMA_EndProcess>
}
 8006100:	4770      	bx	lr

08006102 <JPEG_DMAOutCpltCallback>:
{
 8006102:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006104:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8006106:	6823      	ldr	r3, [r4, #0]
 8006108:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800610a:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 800610e:	6319      	str	r1, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8006110:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8006112:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8006116:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 800611a:	0409      	lsls	r1, r1, #16
 800611c:	0c09      	lsrs	r1, r1, #16
 800611e:	290c      	cmp	r1, #12
 8006120:	d129      	bne.n	8006176 <JPEG_DMAOutCpltCallback+0x74>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
 8006122:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8006124:	0689      	lsls	r1, r1, #26
 8006126:	d42c      	bmi.n	8006182 <JPEG_DMAOutCpltCallback+0x80>
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006128:	6b19      	ldr	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 800612a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 800612c:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 8006130:	6319      	str	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8006132:	6803      	ldr	r3, [r0, #0]
 8006134:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8006136:	f7fe fba9 	bl	800488c <HAL_DMAEx_GetFifoLevel>
 800613a:	b2b6      	uxth	r6, r6
 800613c:	1bad      	subs	r5, r5, r6
 800613e:	1a2d      	subs	r5, r5, r0
 8006140:	6265      	str	r5, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8006142:	4620      	mov	r0, r4
 8006144:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006146:	69e1      	ldr	r1, [r4, #28]
 8006148:	f7fb fc04 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 800614c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800614e:	049b      	lsls	r3, r3, #18
 8006150:	d417      	bmi.n	8006182 <JPEG_DMAOutCpltCallback+0x80>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 8006152:	6821      	ldr	r1, [r4, #0]
 8006154:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006156:	69e2      	ldr	r2, [r4, #28]
 8006158:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800615a:	3144      	adds	r1, #68	@ 0x44
 800615c:	f7fe f8d0 	bl	8004300 <HAL_DMA_Start_IT>
 8006160:	b150      	cbz	r0, 8006178 <JPEG_DMAOutCpltCallback+0x76>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8006162:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          HAL_JPEG_ErrorCallback(hjpeg);
 8006164:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8006166:	f043 0304 	orr.w	r3, r3, #4
 800616a:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 800616c:	2306      	movs	r3, #6
 800616e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
 8006172:	f7fb fc8f 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8006176:	bd70      	pop	{r4, r5, r6, pc}
        JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006178:	6822      	ldr	r2, [r4, #0]
 800617a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800617c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8006180:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8006182:	6822      	ldr	r2, [r4, #0]
 8006184:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8006186:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 800618a:	6313      	str	r3, [r2, #48]	@ 0x30
 800618c:	e7f3      	b.n	8006176 <JPEG_DMAOutCpltCallback+0x74>

0800618e <HAL_JPEG_IRQHandler>:
{
 800618e:	b510      	push	{r4, lr}
  switch (hjpeg->State)
 8006190:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
{
 8006194:	4604      	mov	r4, r0
  switch (hjpeg->State)
 8006196:	3b03      	subs	r3, #3
 8006198:	2b01      	cmp	r3, #1
 800619a:	d852      	bhi.n	8006242 <HAL_JPEG_IRQHandler+0xb4>
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 800619c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800619e:	f003 030c 	and.w	r3, r3, #12
 80061a2:	2b08      	cmp	r3, #8
 80061a4:	d103      	bne.n	80061ae <HAL_JPEG_IRQHandler+0x20>
}
 80061a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        (void) JPEG_Process(hjpeg);
 80061aa:	f7ff be2b 	b.w	8005e04 <JPEG_Process>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 80061ae:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80061b0:	f003 030c 	and.w	r3, r3, #12
 80061b4:	2b0c      	cmp	r3, #12
 80061b6:	d144      	bne.n	8006242 <HAL_JPEG_IRQHandler+0xb4>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80061b8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80061ba:	f003 0303 	and.w	r3, r3, #3
 80061be:	2b02      	cmp	r3, #2
 80061c0:	d114      	bne.n	80061ec <HAL_JPEG_IRQHandler+0x5e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 80061c2:	6803      	ldr	r3, [r0, #0]
 80061c4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80061c6:	0659      	lsls	r1, r3, #25
 80061c8:	d510      	bpl.n	80061ec <HAL_JPEG_IRQHandler+0x5e>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 80061ca:	1d01      	adds	r1, r0, #4
 80061cc:	f7ff fb74 	bl	80058b8 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 80061d0:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 80061d2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 80061d4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 80061d6:	f7fb fb73 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 80061da:	6823      	ldr	r3, [r4, #0]
 80061dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80061de:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80061e2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 80061e4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80061e6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80061ea:	639a      	str	r2, [r3, #56]	@ 0x38
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
 80061ec:	6823      	ldr	r3, [r4, #0]
 80061ee:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80061f0:	0692      	lsls	r2, r2, #26
 80061f2:	d526      	bpl.n	8006242 <HAL_JPEG_IRQHandler+0xb4>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80061f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 80061f6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80061f8:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 80061fc:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
 80061fe:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8006200:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006204:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8006206:	681a      	ldr	r2, [r3, #0]
 8006208:	f022 0201 	bic.w	r2, r2, #1
 800620c:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 800620e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006210:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8006214:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8006216:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006218:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 800621c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 800621e:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8006222:	2b02      	cmp	r3, #2
 8006224:	d101      	bne.n	800622a <HAL_JPEG_IRQHandler+0x9c>
      (void) HAL_DMA_Abort(hjpeg->hdmain);
 8006226:	f7fe f8a9 	bl	800437c <HAL_DMA_Abort>
    if (hjpeg->hdmaout->State == HAL_DMA_STATE_BUSY)
 800622a:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800622c:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8006230:	2b02      	cmp	r3, #2
 8006232:	d101      	bne.n	8006238 <HAL_JPEG_IRQHandler+0xaa>
      (void) HAL_DMA_Abort(hjpeg->hdmaout);
 8006234:	f7fe f8a2 	bl	800437c <HAL_DMA_Abort>
    JPEG_DMA_EndProcess(hjpeg);
 8006238:	4620      	mov	r0, r4
}
 800623a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    JPEG_DMA_EndProcess(hjpeg);
 800623e:	f7ff bf12 	b.w	8006066 <JPEG_DMA_EndProcess>
}
 8006242:	bd10      	pop	{r4, pc}

08006244 <HAL_JPEG_GetState>:
  return hjpeg->State;
 8006244:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
 8006248:	4770      	bx	lr

0800624a <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800624a:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800624c:	01d2      	lsls	r2, r2, #7
 800624e:	3284      	adds	r2, #132	@ 0x84
 8006250:	1883      	adds	r3, r0, r2
{
 8006252:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006254:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006256:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006258:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800625a:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 800625e:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006260:	68c5      	ldr	r5, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006262:	680e      	ldr	r6, [r1, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006264:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8006268:	f106 0c01 	add.w	ip, r6, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800626c:	f3c7 470b 	ubfx	r7, r7, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006270:	4465      	add	r5, ip
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006272:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006274:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006278:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800627a:	68c7      	ldr	r7, [r0, #12]
 800627c:	68cd      	ldr	r5, [r1, #12]
 800627e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006282:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006284:	689d      	ldr	r5, [r3, #8]
 8006286:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 800628a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800628c:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8006290:	688d      	ldr	r5, [r1, #8]
 8006292:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 8006296:	3501      	adds	r5, #1
 8006298:	4465      	add	r5, ip
 800629a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800629e:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80062a0:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80062a2:	f8d1 c010 	ldr.w	ip, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80062a6:	f025 0507 	bic.w	r5, r5, #7
 80062aa:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80062ac:	f8c3 c010 	str.w	ip, [r3, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80062b0:	698f      	ldr	r7, [r1, #24]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80062b2:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80062b6:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80062ba:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80062be:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80062c2:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80062c6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80062ca:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80062cc:	695d      	ldr	r5, [r3, #20]
 80062ce:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80062d2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80062d4:	694d      	ldr	r5, [r1, #20]
 80062d6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80062d8:	69dd      	ldr	r5, [r3, #28]
 80062da:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80062de:	f025 0507 	bic.w	r5, r5, #7
 80062e2:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80062e4:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80062e8:	433d      	orrs	r5, r7
 80062ea:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 80062ec:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 80062ee:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80062f0:	f1bc 0f00 	cmp.w	ip, #0
 80062f4:	d024      	beq.n	8006340 <LTDC_SetConfig+0xf6>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80062f6:	f1bc 0f01 	cmp.w	ip, #1
 80062fa:	d023      	beq.n	8006344 <LTDC_SetConfig+0xfa>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80062fc:	f1ac 0502 	sub.w	r5, ip, #2
 8006300:	2d02      	cmp	r5, #2
 8006302:	d921      	bls.n	8006348 <LTDC_SetConfig+0xfe>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8006304:	f1bc 0f07 	cmp.w	ip, #7
 8006308:	bf14      	ite	ne
 800630a:	2501      	movne	r5, #1
 800630c:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800630e:	6adf      	ldr	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006310:	1ba4      	subs	r4, r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006312:	f007 27e0 	and.w	r7, r7, #3758153728	@ 0xe000e000
 8006316:	62df      	str	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006318:	6a8f      	ldr	r7, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800631a:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800631c:	436f      	muls	r7, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800631e:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006320:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 8006324:	62dc      	str	r4, [r3, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006326:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006328:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800632a:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 800632e:	f024 0407 	bic.w	r4, r4, #7
 8006332:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006334:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006336:	5883      	ldr	r3, [r0, r2]
 8006338:	f043 0301 	orr.w	r3, r3, #1
 800633c:	5083      	str	r3, [r0, r2]
}
 800633e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmp = 4U;
 8006340:	2504      	movs	r5, #4
 8006342:	e7e4      	b.n	800630e <LTDC_SetConfig+0xc4>
    tmp = 3U;
 8006344:	2503      	movs	r5, #3
 8006346:	e7e2      	b.n	800630e <LTDC_SetConfig+0xc4>
    tmp = 2U;
 8006348:	2502      	movs	r5, #2
 800634a:	e7e0      	b.n	800630e <LTDC_SetConfig+0xc4>

0800634c <HAL_LTDC_Init>:
{
 800634c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800634e:	4604      	mov	r4, r0
 8006350:	2800      	cmp	r0, #0
 8006352:	d063      	beq.n	800641c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006354:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8006358:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800635c:	b91b      	cbnz	r3, 8006366 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800635e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006362:	f7fa fc49 	bl	8000bf8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006366:	2302      	movs	r3, #2
 8006368:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800636c:	6823      	ldr	r3, [r4, #0]
 800636e:	699a      	ldr	r2, [r3, #24]
 8006370:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8006374:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006376:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800637a:	4302      	orrs	r2, r0
 800637c:	68e0      	ldr	r0, [r4, #12]
 800637e:	6999      	ldr	r1, [r3, #24]
 8006380:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006382:	6920      	ldr	r0, [r4, #16]
 8006384:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006386:	430a      	orrs	r2, r1
 8006388:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800638a:	689a      	ldr	r2, [r3, #8]
 800638c:	4924      	ldr	r1, [pc, #144]	@ (8006420 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800638e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006390:	400a      	ands	r2, r1
 8006392:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006394:	689a      	ldr	r2, [r3, #8]
 8006396:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800639a:	69a0      	ldr	r0, [r4, #24]
 800639c:	4302      	orrs	r2, r0
 800639e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80063a0:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80063a2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80063a4:	400a      	ands	r2, r1
 80063a6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80063a8:	68da      	ldr	r2, [r3, #12]
 80063aa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80063ae:	6a20      	ldr	r0, [r4, #32]
 80063b0:	4302      	orrs	r2, r0
 80063b2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80063b4:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80063b6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80063b8:	400a      	ands	r2, r1
 80063ba:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80063bc:	691a      	ldr	r2, [r3, #16]
 80063be:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80063c2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80063c4:	4302      	orrs	r2, r0
 80063c6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80063c8:	695a      	ldr	r2, [r3, #20]
 80063ca:	400a      	ands	r2, r1
 80063cc:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80063ce:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80063d0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80063d2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80063d6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80063d8:	430a      	orrs	r2, r1
 80063da:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80063dc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80063de:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80063e2:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80063e6:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80063ea:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80063ec:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80063ee:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80063f2:	432a      	orrs	r2, r5
 80063f4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80063f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80063fc:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80063fe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006400:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006402:	f042 0206 	orr.w	r2, r2, #6
 8006406:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006408:	699a      	ldr	r2, [r3, #24]
 800640a:	f042 0201 	orr.w	r2, r2, #1
 800640e:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8006410:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006412:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8006416:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800641a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800641c:	2001      	movs	r0, #1
 800641e:	e7fc      	b.n	800641a <HAL_LTDC_Init+0xce>
 8006420:	f000f800 	.word	0xf000f800

08006424 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8006424:	4770      	bx	lr

08006426 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8006426:	4770      	bx	lr

08006428 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006428:	6803      	ldr	r3, [r0, #0]
{
 800642a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800642c:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 800642e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006430:	0772      	lsls	r2, r6, #29
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006432:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006434:	d514      	bpl.n	8006460 <HAL_LTDC_IRQHandler+0x38>
 8006436:	0769      	lsls	r1, r5, #29
 8006438:	d512      	bpl.n	8006460 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800643a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800643c:	f022 0204 	bic.w	r2, r2, #4
 8006440:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006442:	2204      	movs	r2, #4
 8006444:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006446:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800644a:	f043 0301 	orr.w	r3, r3, #1
 800644e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8006452:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006454:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006458:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800645c:	f7ff ffe2 	bl	8006424 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006460:	07b2      	lsls	r2, r6, #30
 8006462:	d516      	bpl.n	8006492 <HAL_LTDC_IRQHandler+0x6a>
 8006464:	07ab      	lsls	r3, r5, #30
 8006466:	d514      	bpl.n	8006492 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006468:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800646a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800646c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800646e:	f022 0202 	bic.w	r2, r2, #2
 8006472:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006474:	2202      	movs	r2, #2
 8006476:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006478:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800647c:	4313      	orrs	r3, r2
 800647e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006482:	2304      	movs	r3, #4
 8006484:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006488:	2300      	movs	r3, #0
 800648a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800648e:	f7ff ffc9 	bl	8006424 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006492:	07f0      	lsls	r0, r6, #31
 8006494:	d510      	bpl.n	80064b8 <HAL_LTDC_IRQHandler+0x90>
 8006496:	07e9      	lsls	r1, r5, #31
 8006498:	d50e      	bpl.n	80064b8 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800649a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 800649c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800649e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80064a0:	f022 0201 	bic.w	r2, r2, #1
 80064a4:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80064a6:	2201      	movs	r2, #1
 80064a8:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80064aa:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80064ac:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80064b0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80064b4:	f7fc fbce 	bl	8002c54 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80064b8:	0732      	lsls	r2, r6, #28
 80064ba:	d511      	bpl.n	80064e0 <HAL_LTDC_IRQHandler+0xb8>
 80064bc:	072b      	lsls	r3, r5, #28
 80064be:	d50f      	bpl.n	80064e0 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80064c0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80064c2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80064c4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80064c6:	f022 0208 	bic.w	r2, r2, #8
 80064ca:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80064cc:	2208      	movs	r2, #8
 80064ce:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80064d0:	2301      	movs	r3, #1
 80064d2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80064d6:	2300      	movs	r3, #0
 80064d8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80064dc:	f7ff ffa3 	bl	8006426 <HAL_LTDC_ReloadEventCallback>
}
 80064e0:	bd70      	pop	{r4, r5, r6, pc}

080064e2 <HAL_LTDC_ConfigLayer>:
{
 80064e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80064e6:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 80064ea:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
 80064ec:	2b01      	cmp	r3, #1
{
 80064ee:	460f      	mov	r7, r1
 80064f0:	4694      	mov	ip, r2
 80064f2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80064f6:	d01f      	beq.n	8006538 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064f8:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 80064fa:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064fe:	460d      	mov	r5, r1
 8006500:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8006504:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006508:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800650c:	3438      	adds	r4, #56	@ 0x38
 800650e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006510:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006512:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006514:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006516:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006518:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800651a:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800651c:	4630      	mov	r0, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800651e:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006520:	4662      	mov	r2, ip
 8006522:	4639      	mov	r1, r7
 8006524:	f7ff fe91 	bl	800624a <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 8006528:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800652a:	6833      	ldr	r3, [r6, #0]
 800652c:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006530:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006534:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8006538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800653c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800653c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8006540:	4603      	mov	r3, r0
  __HAL_LOCK(hltdc);
 8006542:	2a01      	cmp	r2, #1
 8006544:	f04f 0002 	mov.w	r0, #2
 8006548:	d012      	beq.n	8006570 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800654a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800654c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006550:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8006552:	f020 0001 	bic.w	r0, r0, #1
 8006556:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006558:	4806      	ldr	r0, [pc, #24]	@ (8006574 <HAL_LTDC_ProgramLineEvent+0x38>)
 800655a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800655c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800655e:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006560:	f041 0101 	orr.w	r1, r1, #1
 8006564:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006566:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8006568:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 800656c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8006570:	4770      	bx	lr
 8006572:	bf00      	nop
 8006574:	40016800 	.word	0x40016800

08006578 <HAL_PWREx_ControlVoltageScaling>:

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 8006578:	4b1d      	ldr	r3, [pc, #116]	@ (80065f0 <HAL_PWREx_ControlVoltageScaling+0x78>)
 800657a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800657c:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 8006580:	4282      	cmp	r2, r0
 8006582:	d108      	bne.n	8006596 <HAL_PWREx_ControlVoltageScaling+0x1e>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006584:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006588:	d903      	bls.n	8006592 <HAL_PWREx_ControlVoltageScaling+0x1a>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 800658a:	68da      	ldr	r2, [r3, #12]
 800658c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006590:	60da      	str	r2, [r3, #12]
    }

    return HAL_OK;
 8006592:	2000      	movs	r0, #0
 8006594:	4770      	bx	lr
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006596:	68da      	ldr	r2, [r3, #12]
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006598:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 800659c:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 80065a0:	ea42 0200 	orr.w	r2, r2, r0
 80065a4:	bf88      	it	hi
 80065a6:	f442 2280 	orrhi.w	r2, r2, #262144	@ 0x40000
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 80065aa:	60da      	str	r2, [r3, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 80065ac:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80065b0:	4b10      	ldr	r3, [pc, #64]	@ (80065f4 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 80065b2:	2132      	movs	r1, #50	@ 0x32
 80065b4:	681b      	ldr	r3, [r3, #0]
 80065b6:	fbb3 f3f2 	udiv	r3, r3, r2
 80065ba:	434b      	muls	r3, r1
 80065bc:	fbb3 f3f2 	udiv	r3, r3, r2
 80065c0:	3301      	adds	r3, #1
 80065c2:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 80065c4:	490a      	ldr	r1, [pc, #40]	@ (80065f0 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80065c6:	68c8      	ldr	r0, [r1, #12]
 80065c8:	0400      	lsls	r0, r0, #16
 80065ca:	d404      	bmi.n	80065d6 <HAL_PWREx_ControlVoltageScaling+0x5e>
 80065cc:	b90a      	cbnz	r2, 80065d2 <HAL_PWREx_ControlVoltageScaling+0x5a>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 80065ce:	2003      	movs	r0, #3
  }

  return HAL_OK;
}
 80065d0:	4770      	bx	lr
    timeout--;
 80065d2:	3a01      	subs	r2, #1
 80065d4:	e7f7      	b.n	80065c6 <HAL_PWREx_ControlVoltageScaling+0x4e>
  if (timeout != 0U)
 80065d6:	2a00      	cmp	r2, #0
 80065d8:	d0f9      	beq.n	80065ce <HAL_PWREx_ControlVoltageScaling+0x56>
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 80065da:	4a05      	ldr	r2, [pc, #20]	@ (80065f0 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80065dc:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80065de:	0409      	lsls	r1, r1, #16
 80065e0:	d403      	bmi.n	80065ea <HAL_PWREx_ControlVoltageScaling+0x72>
 80065e2:	2b00      	cmp	r3, #0
 80065e4:	d0f3      	beq.n	80065ce <HAL_PWREx_ControlVoltageScaling+0x56>
      timeout--;
 80065e6:	3b01      	subs	r3, #1
 80065e8:	e7f8      	b.n	80065dc <HAL_PWREx_ControlVoltageScaling+0x64>
  if (timeout == 0U)
 80065ea:	2b00      	cmp	r3, #0
 80065ec:	d1d1      	bne.n	8006592 <HAL_PWREx_ControlVoltageScaling+0x1a>
 80065ee:	e7ee      	b.n	80065ce <HAL_PWREx_ControlVoltageScaling+0x56>
 80065f0:	46020800 	.word	0x46020800
 80065f4:	2000004c 	.word	0x2000004c

080065f8 <HAL_PWREx_GetVoltageRange>:
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 80065f8:	4b02      	ldr	r3, [pc, #8]	@ (8006604 <HAL_PWREx_GetVoltageRange+0xc>)
 80065fa:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
}
 80065fc:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
 8006600:	4770      	bx	lr
 8006602:	bf00      	nop
 8006604:	46020800 	.word	0x46020800

08006608 <HAL_PWREx_ConfigSupply>:

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006608:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800660c:	4b12      	ldr	r3, [pc, #72]	@ (8006658 <HAL_PWREx_ConfigSupply+0x50>)
 800660e:	2132      	movs	r1, #50	@ 0x32
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	fbb3 f3f2 	udiv	r3, r3, r2
 8006616:	434b      	muls	r3, r1
 8006618:	fbb3 f3f2 	udiv	r3, r3, r2
 800661c:	4a0f      	ldr	r2, [pc, #60]	@ (800665c <HAL_PWREx_ConfigSupply+0x54>)
 800661e:	3301      	adds	r3, #1

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006620:	6891      	ldr	r1, [r2, #8]
  if (SupplySource == PWR_LDO_SUPPLY)
 8006622:	b950      	cbnz	r0, 800663a <HAL_PWREx_ConfigSupply+0x32>
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006624:	f021 0102 	bic.w	r1, r1, #2
 8006628:	6091      	str	r1, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 800662a:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 800662c:	0788      	lsls	r0, r1, #30
 800662e:	d50e      	bpl.n	800664e <HAL_PWREx_ConfigSupply+0x46>
 8006630:	b90b      	cbnz	r3, 8006636 <HAL_PWREx_ConfigSupply+0x2e>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 8006632:	2003      	movs	r0, #3
 8006634:	4770      	bx	lr
      timeout--;
 8006636:	3b01      	subs	r3, #1
 8006638:	e7f7      	b.n	800662a <HAL_PWREx_ConfigSupply+0x22>
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 800663a:	f041 0102 	orr.w	r1, r1, #2
 800663e:	6091      	str	r1, [r2, #8]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 8006640:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006642:	0789      	lsls	r1, r1, #30
 8006644:	d403      	bmi.n	800664e <HAL_PWREx_ConfigSupply+0x46>
 8006646:	2b00      	cmp	r3, #0
 8006648:	d0f3      	beq.n	8006632 <HAL_PWREx_ConfigSupply+0x2a>
      timeout--;
 800664a:	3b01      	subs	r3, #1
 800664c:	e7f8      	b.n	8006640 <HAL_PWREx_ConfigSupply+0x38>
  if (timeout == 0U)
 800664e:	2b00      	cmp	r3, #0
 8006650:	d0ef      	beq.n	8006632 <HAL_PWREx_ConfigSupply+0x2a>
  }

  return HAL_OK;
 8006652:	2000      	movs	r0, #0
}
 8006654:	4770      	bx	lr
 8006656:	bf00      	nop
 8006658:	2000004c 	.word	0x2000004c
 800665c:	46020800 	.word	0x46020800

08006660 <HAL_PWREx_DisableUCPDDeadBattery>:
  *         initialized before doing the disable).
  * @retval None.
  */
void HAL_PWREx_DisableUCPDDeadBattery(void)
{
  SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 8006660:	4a02      	ldr	r2, [pc, #8]	@ (800666c <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 8006662:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 8006664:	f043 0301 	orr.w	r3, r3, #1
 8006668:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 800666a:	4770      	bx	lr
 800666c:	46020800 	.word	0x46020800

08006670 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8006670:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 8006672:	4d2b      	ldr	r5, [pc, #172]	@ (8006720 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
{
 8006674:	4604      	mov	r4, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 8006676:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800667a:	075b      	lsls	r3, r3, #29
 800667c:	d518      	bpl.n	80066b0 <RCC_SetFlashLatencyFromMSIRange+0x40>
  {
    vos = HAL_PWREx_GetVoltageRange();
 800667e:	f7ff ffbb 	bl	80065f8 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 8006682:	f420 3380 	bic.w	r3, r0, #65536	@ 0x10000
 8006686:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800668a:	d126      	bne.n	80066da <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {

    if (msirange < RCC_MSIRANGE_1)
 800668c:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006690:	bf2c      	ite	cs
 8006692:	2000      	movcs	r0, #0
 8006694:	2001      	movcc	r0, #1
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8006696:	4a23      	ldr	r2, [pc, #140]	@ (8006724 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8006698:	6813      	ldr	r3, [r2, #0]
 800669a:	f023 030f 	bic.w	r3, r3, #15
 800669e:	4303      	orrs	r3, r0
 80066a0:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 80066a2:	6813      	ldr	r3, [r2, #0]
 80066a4:	f003 030f 	and.w	r3, r3, #15
 80066a8:	1a18      	subs	r0, r3, r0
 80066aa:	bf18      	it	ne
 80066ac:	2001      	movne	r0, #1
 80066ae:	e01b      	b.n	80066e8 <RCC_SetFlashLatencyFromMSIRange+0x78>
    __HAL_RCC_PWR_CLK_ENABLE();
 80066b0:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80066b4:	f043 0304 	orr.w	r3, r3, #4
 80066b8:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80066bc:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80066c0:	f003 0304 	and.w	r3, r3, #4
 80066c4:	9301      	str	r3, [sp, #4]
 80066c6:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 80066c8:	f7ff ff96 	bl	80065f8 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 80066cc:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80066d0:	f023 0304 	bic.w	r3, r3, #4
 80066d4:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80066d8:	e7d3      	b.n	8006682 <RCC_SetFlashLatencyFromMSIRange+0x12>
    if (msirange < RCC_MSIRANGE_1)
 80066da:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 80066de:	d205      	bcs.n	80066ec <RCC_SetFlashLatencyFromMSIRange+0x7c>
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 80066e0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80066e4:	d015      	beq.n	8006712 <RCC_SetFlashLatencyFromMSIRange+0xa2>
        return HAL_ERROR;
 80066e6:	2001      	movs	r0, #1
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 80066e8:	b003      	add	sp, #12
 80066ea:	bd30      	pop	{r4, r5, pc}
      if (msirange > RCC_MSIRANGE_2)
 80066ec:	f1b4 5f00 	cmp.w	r4, #536870912	@ 0x20000000
 80066f0:	d906      	bls.n	8006700 <RCC_SetFlashLatencyFromMSIRange+0x90>
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 80066f2:	b980      	cbnz	r0, 8006716 <RCC_SetFlashLatencyFromMSIRange+0xa6>
          if (msirange > RCC_MSIRANGE_3)
 80066f4:	f1b4 5f40 	cmp.w	r4, #805306368	@ 0x30000000
 80066f8:	bf8c      	ite	hi
 80066fa:	2000      	movhi	r0, #0
 80066fc:	2001      	movls	r0, #1
 80066fe:	e7ca      	b.n	8006696 <RCC_SetFlashLatencyFromMSIRange+0x26>
        if (msirange == RCC_MSIRANGE_1)
 8006700:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006704:	d109      	bne.n	800671a <RCC_SetFlashLatencyFromMSIRange+0xaa>
          latency = FLASH_LATENCY_1; /* 1WS */
 8006706:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800670a:	bf14      	ite	ne
 800670c:	2002      	movne	r0, #2
 800670e:	2001      	moveq	r0, #1
 8006710:	e7c1      	b.n	8006696 <RCC_SetFlashLatencyFromMSIRange+0x26>
        latency = FLASH_LATENCY_3; /* 3WS */
 8006712:	2003      	movs	r0, #3
 8006714:	e7bf      	b.n	8006696 <RCC_SetFlashLatencyFromMSIRange+0x26>
      latency = FLASH_LATENCY_0; /* 0WS */
 8006716:	2000      	movs	r0, #0
 8006718:	e7bd      	b.n	8006696 <RCC_SetFlashLatencyFromMSIRange+0x26>
          latency = FLASH_LATENCY_1; /* 1WS */
 800671a:	2001      	movs	r0, #1
 800671c:	e7bb      	b.n	8006696 <RCC_SetFlashLatencyFromMSIRange+0x26>
 800671e:	bf00      	nop
 8006720:	46020c00 	.word	0x46020c00
 8006724:	40022000 	.word	0x40022000

08006728 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006728:	4a40      	ldr	r2, [pc, #256]	@ (800682c <HAL_RCC_GetSysClockFreq+0x104>)
{
 800672a:	b510      	push	{r4, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800672c:	69d3      	ldr	r3, [r2, #28]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 800672e:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006730:	f013 030c 	ands.w	r3, r3, #12
 8006734:	d005      	beq.n	8006742 <HAL_RCC_GetSysClockFreq+0x1a>
 8006736:	2b0c      	cmp	r3, #12
 8006738:	d148      	bne.n	80067cc <HAL_RCC_GetSysClockFreq+0xa4>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 800673a:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 800673e:	2901      	cmp	r1, #1
 8006740:	d144      	bne.n	80067cc <HAL_RCC_GetSysClockFreq+0xa4>
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 8006742:	6891      	ldr	r1, [r2, #8]
 8006744:	0209      	lsls	r1, r1, #8
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8006746:	bf54      	ite	pl
 8006748:	f8d2 20f4 	ldrpl.w	r2, [r2, #244]	@ 0xf4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 800674c:	6892      	ldrmi	r2, [r2, #8]
    msirange = MSIRangeTable[msirange];
 800674e:	4938      	ldr	r1, [pc, #224]	@ (8006830 <HAL_RCC_GetSysClockFreq+0x108>)
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8006750:	bf54      	ite	pl
 8006752:	f3c2 3203 	ubfxpl	r2, r2, #12, #4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 8006756:	0f12      	lsrmi	r2, r2, #28
    msirange = MSIRangeTable[msirange];
 8006758:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 800675c:	2b00      	cmp	r3, #0
 800675e:	d063      	beq.n	8006828 <HAL_RCC_GetSysClockFreq+0x100>
  uint32_t sysclockfreq = 0U;
 8006760:	2000      	movs	r0, #0
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8006762:	2b0c      	cmp	r3, #12
 8006764:	d15e      	bne.n	8006824 <HAL_RCC_GetSysClockFreq+0xfc>
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8006766:	4931      	ldr	r1, [pc, #196]	@ (800682c <HAL_RCC_GetSysClockFreq+0x104>)
 8006768:	eddf 5a32 	vldr	s11, [pc, #200]	@ 8006834 <HAL_RCC_GetSysClockFreq+0x10c>
 800676c:	6a88      	ldr	r0, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 800676e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8006770:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8006772:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8006776:	3301      	adds	r3, #1
 8006778:	ee07 3a90 	vmov	s15, r3
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800677c:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 800677e:	f3c4 1400 	ubfx	r4, r4, #4, #1
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006782:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 8006786:	4363      	muls	r3, r4
 8006788:	ee07 3a10 	vmov	s14, r3
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 800678c:	f000 0003 	and.w	r0, r0, #3
    switch (pllsource)
 8006790:	2802      	cmp	r0, #2
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006792:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    switch (pllsource)
 8006796:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800679a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 800679e:	d021      	beq.n	80067e4 <HAL_RCC_GetSysClockFreq+0xbc>
 80067a0:	2803      	cmp	r0, #3
 80067a2:	d01f      	beq.n	80067e4 <HAL_RCC_GetSysClockFreq+0xbc>
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067a4:	ee06 2a90 	vmov	s13, r2
 80067a8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80067ac:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80067ae:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 80067b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80067b6:	ee07 3a90 	vmov	s15, r3
 80067ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80067be:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80067c2:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067c6:	ee67 7a85 	vmul.f32	s15, s15, s10
        break;
 80067ca:	e01c      	b.n	8006806 <HAL_RCC_GetSysClockFreq+0xde>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80067cc:	69d2      	ldr	r2, [r2, #28]
 80067ce:	f002 020c 	and.w	r2, r2, #12
 80067d2:	2a04      	cmp	r2, #4
 80067d4:	d004      	beq.n	80067e0 <HAL_RCC_GetSysClockFreq+0xb8>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 80067d6:	2b08      	cmp	r3, #8
 80067d8:	d025      	beq.n	8006826 <HAL_RCC_GetSysClockFreq+0xfe>
  uint32_t sysclockfreq = 0U;
 80067da:	2000      	movs	r0, #0
  uint32_t msirange = 0U;
 80067dc:	2200      	movs	r2, #0
 80067de:	e7c0      	b.n	8006762 <HAL_RCC_GetSysClockFreq+0x3a>
    sysclockfreq = HSI_VALUE;
 80067e0:	4815      	ldr	r0, [pc, #84]	@ (8006838 <HAL_RCC_GetSysClockFreq+0x110>)
 80067e2:	e7fb      	b.n	80067dc <HAL_RCC_GetSysClockFreq+0xb4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067e4:	ed9f 5a15 	vldr	s10, [pc, #84]	@ 800683c <HAL_RCC_GetSysClockFreq+0x114>
 80067e8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80067ea:	eec5 6a27 	vdiv.f32	s13, s10, s15
 80067ee:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80067f2:	ee07 3a90 	vmov	s15, r3
 80067f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80067fa:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80067fe:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006802:	ee67 7aa6 	vmul.f32	s15, s15, s13
    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 8006806:	4b09      	ldr	r3, [pc, #36]	@ (800682c <HAL_RCC_GetSysClockFreq+0x104>)
 8006808:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800680a:	f3c3 6306 	ubfx	r3, r3, #24, #7
 800680e:	3301      	adds	r3, #1
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 8006810:	ee07 3a10 	vmov	s14, r3
 8006814:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006818:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800681c:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8006820:	ee17 0a90 	vmov	r0, s15
}
 8006824:	bd10      	pop	{r4, pc}
    sysclockfreq = HSE_VALUE;
 8006826:	4a04      	ldr	r2, [pc, #16]	@ (8006838 <HAL_RCC_GetSysClockFreq+0x110>)
  uint32_t msirange = 0U;
 8006828:	4610      	mov	r0, r2
 800682a:	e7fb      	b.n	8006824 <HAL_RCC_GetSysClockFreq+0xfc>
 800682c:	46020c00 	.word	0x46020c00
 8006830:	080355ec 	.word	0x080355ec
 8006834:	39000000 	.word	0x39000000
 8006838:	00f42400 	.word	0x00f42400
 800683c:	4b742400 	.word	0x4b742400

08006840 <HAL_RCC_ClockConfig>:
{
 8006840:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006844:	460d      	mov	r5, r1
  if (pRCC_ClkInitStruct == NULL)
 8006846:	4604      	mov	r4, r0
 8006848:	b918      	cbnz	r0, 8006852 <HAL_RCC_ClockConfig+0x12>
    return HAL_ERROR;
 800684a:	2001      	movs	r0, #1
}
 800684c:	b002      	add	sp, #8
 800684e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006852:	4a9c      	ldr	r2, [pc, #624]	@ (8006ac4 <HAL_RCC_ClockConfig+0x284>)
 8006854:	6813      	ldr	r3, [r2, #0]
 8006856:	f003 030f 	and.w	r3, r3, #15
 800685a:	428b      	cmp	r3, r1
 800685c:	d36e      	bcc.n	800693c <HAL_RCC_ClockConfig+0xfc>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 800685e:	6823      	ldr	r3, [r4, #0]
 8006860:	06d8      	lsls	r0, r3, #27
 8006862:	d477      	bmi.n	8006954 <HAL_RCC_ClockConfig+0x114>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006864:	0719      	lsls	r1, r3, #28
 8006866:	d50d      	bpl.n	8006884 <HAL_RCC_ClockConfig+0x44>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006868:	4997      	ldr	r1, [pc, #604]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 800686a:	6920      	ldr	r0, [r4, #16]
 800686c:	6a0a      	ldr	r2, [r1, #32]
 800686e:	0912      	lsrs	r2, r2, #4
 8006870:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006874:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8006876:	bf81      	itttt	hi
 8006878:	6a0a      	ldrhi	r2, [r1, #32]
 800687a:	f422 62e0 	bichi.w	r2, r2, #1792	@ 0x700
 800687e:	ea42 1200 	orrhi.w	r2, r2, r0, lsl #4
 8006882:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006884:	075a      	lsls	r2, r3, #29
 8006886:	d50b      	bpl.n	80068a0 <HAL_RCC_ClockConfig+0x60>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006888:	498f      	ldr	r1, [pc, #572]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 800688a:	68e0      	ldr	r0, [r4, #12]
 800688c:	6a0a      	ldr	r2, [r1, #32]
 800688e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006892:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006894:	bf81      	itttt	hi
 8006896:	6a0a      	ldrhi	r2, [r1, #32]
 8006898:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 800689c:	4302      	orrhi	r2, r0
 800689e:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80068a0:	079f      	lsls	r7, r3, #30
 80068a2:	d50b      	bpl.n	80068bc <HAL_RCC_ClockConfig+0x7c>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 80068a4:	4988      	ldr	r1, [pc, #544]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 80068a6:	68a0      	ldr	r0, [r4, #8]
 80068a8:	6a0a      	ldr	r2, [r1, #32]
 80068aa:	f002 020f 	and.w	r2, r2, #15
 80068ae:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 80068b0:	bf81      	itttt	hi
 80068b2:	6a0a      	ldrhi	r2, [r1, #32]
 80068b4:	f022 020f 	bichi.w	r2, r2, #15
 80068b8:	4302      	orrhi	r2, r0
 80068ba:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80068bc:	07de      	lsls	r6, r3, #31
 80068be:	d456      	bmi.n	800696e <HAL_RCC_ClockConfig+0x12e>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80068c0:	6822      	ldr	r2, [r4, #0]
 80068c2:	0790      	lsls	r0, r2, #30
 80068c4:	f100 80d8 	bmi.w	8006a78 <HAL_RCC_ClockConfig+0x238>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80068c8:	497e      	ldr	r1, [pc, #504]	@ (8006ac4 <HAL_RCC_ClockConfig+0x284>)
 80068ca:	680b      	ldr	r3, [r1, #0]
 80068cc:	f003 030f 	and.w	r3, r3, #15
 80068d0:	42ab      	cmp	r3, r5
 80068d2:	f200 80de 	bhi.w	8006a92 <HAL_RCC_ClockConfig+0x252>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80068d6:	0750      	lsls	r0, r2, #29
 80068d8:	f100 80e7 	bmi.w	8006aaa <HAL_RCC_ClockConfig+0x26a>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80068dc:	0711      	lsls	r1, r2, #28
 80068de:	d50d      	bpl.n	80068fc <HAL_RCC_ClockConfig+0xbc>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 80068e0:	4979      	ldr	r1, [pc, #484]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 80068e2:	6920      	ldr	r0, [r4, #16]
 80068e4:	6a0b      	ldr	r3, [r1, #32]
 80068e6:	091b      	lsrs	r3, r3, #4
 80068e8:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80068ec:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 80068ee:	bf3f      	itttt	cc
 80068f0:	6a0b      	ldrcc	r3, [r1, #32]
 80068f2:	f423 63e0 	biccc.w	r3, r3, #1792	@ 0x700
 80068f6:	ea43 1300 	orrcc.w	r3, r3, r0, lsl #4
 80068fa:	620b      	strcc	r3, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 80068fc:	06d3      	lsls	r3, r2, #27
 80068fe:	d50b      	bpl.n	8006918 <HAL_RCC_ClockConfig+0xd8>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8006900:	4a71      	ldr	r2, [pc, #452]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 8006902:	6961      	ldr	r1, [r4, #20]
 8006904:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8006906:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800690a:	4299      	cmp	r1, r3
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 800690c:	bf3f      	itttt	cc
 800690e:	6a53      	ldrcc	r3, [r2, #36]	@ 0x24
 8006910:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006914:	430b      	orrcc	r3, r1
 8006916:	6253      	strcc	r3, [r2, #36]	@ 0x24
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006918:	f7ff ff06 	bl	8006728 <HAL_RCC_GetSysClockFreq>
 800691c:	4b6a      	ldr	r3, [pc, #424]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 800691e:	4a6b      	ldr	r2, [pc, #428]	@ (8006acc <HAL_RCC_ClockConfig+0x28c>)
 8006920:	6a1b      	ldr	r3, [r3, #32]
 8006922:	f003 030f 	and.w	r3, r3, #15
 8006926:	5cd3      	ldrb	r3, [r2, r3]
 8006928:	40d8      	lsrs	r0, r3
 800692a:	4b69      	ldr	r3, [pc, #420]	@ (8006ad0 <HAL_RCC_ClockConfig+0x290>)
 800692c:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 800692e:	4b69      	ldr	r3, [pc, #420]	@ (8006ad4 <HAL_RCC_ClockConfig+0x294>)
 8006930:	6818      	ldr	r0, [r3, #0]
}
 8006932:	b002      	add	sp, #8
 8006934:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  status = HAL_InitTick(uwTickPrio);
 8006938:	f7fa ba2a 	b.w	8000d90 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800693c:	6813      	ldr	r3, [r2, #0]
 800693e:	f023 030f 	bic.w	r3, r3, #15
 8006942:	430b      	orrs	r3, r1
 8006944:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006946:	6813      	ldr	r3, [r2, #0]
 8006948:	f003 030f 	and.w	r3, r3, #15
 800694c:	428b      	cmp	r3, r1
 800694e:	f47f af7c 	bne.w	800684a <HAL_RCC_ClockConfig+0xa>
 8006952:	e784      	b.n	800685e <HAL_RCC_ClockConfig+0x1e>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8006954:	495c      	ldr	r1, [pc, #368]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 8006956:	6960      	ldr	r0, [r4, #20]
 8006958:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800695a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800695e:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 8006960:	bf81      	itttt	hi
 8006962:	6a4a      	ldrhi	r2, [r1, #36]	@ 0x24
 8006964:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006968:	4302      	orrhi	r2, r0
 800696a:	624a      	strhi	r2, [r1, #36]	@ 0x24
 800696c:	e77a      	b.n	8006864 <HAL_RCC_ClockConfig+0x24>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800696e:	6862      	ldr	r2, [r4, #4]
 8006970:	4b55      	ldr	r3, [pc, #340]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 8006972:	2a03      	cmp	r2, #3
 8006974:	d14e      	bne.n	8006a14 <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006976:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800697a:	0751      	lsls	r1, r2, #29
 800697c:	d43d      	bmi.n	80069fa <HAL_RCC_ClockConfig+0x1ba>
        pwrclkchanged = SET;
 800697e:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 8006980:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006984:	f042 0204 	orr.w	r2, r2, #4
 8006988:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 800698c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006990:	f003 0304 	and.w	r3, r3, #4
 8006994:	9301      	str	r3, [sp, #4]
 8006996:	9b01      	ldr	r3, [sp, #4]
      tickstart = HAL_GetTick();
 8006998:	f7fd f9a8 	bl	8003cec <HAL_GetTick>
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 800699c:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 8006ad8 <HAL_RCC_ClockConfig+0x298>
      tickstart = HAL_GetTick();
 80069a0:	4606      	mov	r6, r0
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 80069a2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80069a6:	035a      	lsls	r2, r3, #13
 80069a8:	d429      	bmi.n	80069fe <HAL_RCC_ClockConfig+0x1be>
      if (pwrclkchanged == SET)
 80069aa:	4b47      	ldr	r3, [pc, #284]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 80069ac:	b12f      	cbz	r7, 80069ba <HAL_RCC_ClockConfig+0x17a>
        __HAL_RCC_PWR_CLK_DISABLE();
 80069ae:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80069b2:	f022 0204 	bic.w	r2, r2, #4
 80069b6:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80069c0:	f43f af43 	beq.w	800684a <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80069c4:	4e40      	ldr	r6, [pc, #256]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 80069c6:	6862      	ldr	r2, [r4, #4]
 80069c8:	69f3      	ldr	r3, [r6, #28]
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069ca:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80069ce:	f023 0303 	bic.w	r3, r3, #3
 80069d2:	4313      	orrs	r3, r2
 80069d4:	61f3      	str	r3, [r6, #28]
    tickstart = HAL_GetTick();
 80069d6:	f7fd f989 	bl	8003cec <HAL_GetTick>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80069da:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 80069dc:	4607      	mov	r7, r0
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80069de:	2b03      	cmp	r3, #3
 80069e0:	d125      	bne.n	8006a2e <HAL_RCC_ClockConfig+0x1ee>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80069e2:	69f3      	ldr	r3, [r6, #28]
 80069e4:	f003 030c 	and.w	r3, r3, #12
 80069e8:	2b0c      	cmp	r3, #12
 80069ea:	f43f af69 	beq.w	80068c0 <HAL_RCC_ClockConfig+0x80>
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069ee:	f7fd f97d 	bl	8003cec <HAL_GetTick>
 80069f2:	1bc0      	subs	r0, r0, r7
 80069f4:	4540      	cmp	r0, r8
 80069f6:	d9f4      	bls.n	80069e2 <HAL_RCC_ClockConfig+0x1a2>
 80069f8:	e00a      	b.n	8006a10 <HAL_RCC_ClockConfig+0x1d0>
    FlagStatus  pwrclkchanged = RESET;
 80069fa:	2700      	movs	r7, #0
 80069fc:	e7cc      	b.n	8006998 <HAL_RCC_ClockConfig+0x158>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 80069fe:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006a02:	045b      	lsls	r3, r3, #17
 8006a04:	d4d1      	bmi.n	80069aa <HAL_RCC_ClockConfig+0x16a>
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 8006a06:	f7fd f971 	bl	8003cec <HAL_GetTick>
 8006a0a:	1b80      	subs	r0, r0, r6
 8006a0c:	2802      	cmp	r0, #2
 8006a0e:	d9f6      	bls.n	80069fe <HAL_RCC_ClockConfig+0x1be>
            return HAL_TIMEOUT;
 8006a10:	2003      	movs	r0, #3
 8006a12:	e71b      	b.n	800684c <HAL_RCC_ClockConfig+0xc>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a14:	2a02      	cmp	r2, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006a16:	681b      	ldr	r3, [r3, #0]
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a18:	d102      	bne.n	8006a20 <HAL_RCC_ClockConfig+0x1e0>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006a1a:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 8006a1e:	e7cf      	b.n	80069c0 <HAL_RCC_ClockConfig+0x180>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8006a20:	b912      	cbnz	r2, 8006a28 <HAL_RCC_ClockConfig+0x1e8>
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006a22:	f013 0f04 	tst.w	r3, #4
 8006a26:	e7cb      	b.n	80069c0 <HAL_RCC_ClockConfig+0x180>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006a28:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 8006a2c:	e7c8      	b.n	80069c0 <HAL_RCC_ClockConfig+0x180>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a2e:	2b02      	cmp	r3, #2
 8006a30:	d10b      	bne.n	8006a4a <HAL_RCC_ClockConfig+0x20a>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8006a32:	69f3      	ldr	r3, [r6, #28]
 8006a34:	f003 030c 	and.w	r3, r3, #12
 8006a38:	2b08      	cmp	r3, #8
 8006a3a:	f43f af41 	beq.w	80068c0 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a3e:	f7fd f955 	bl	8003cec <HAL_GetTick>
 8006a42:	1bc0      	subs	r0, r0, r7
 8006a44:	4540      	cmp	r0, r8
 8006a46:	d9f4      	bls.n	8006a32 <HAL_RCC_ClockConfig+0x1f2>
 8006a48:	e7e2      	b.n	8006a10 <HAL_RCC_ClockConfig+0x1d0>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8006a4a:	b97b      	cbnz	r3, 8006a6c <HAL_RCC_ClockConfig+0x22c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8006a4c:	69f3      	ldr	r3, [r6, #28]
 8006a4e:	f013 0f0c 	tst.w	r3, #12
 8006a52:	f43f af35 	beq.w	80068c0 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a56:	f7fd f949 	bl	8003cec <HAL_GetTick>
 8006a5a:	1bc0      	subs	r0, r0, r7
 8006a5c:	4540      	cmp	r0, r8
 8006a5e:	d9f5      	bls.n	8006a4c <HAL_RCC_ClockConfig+0x20c>
 8006a60:	e7d6      	b.n	8006a10 <HAL_RCC_ClockConfig+0x1d0>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a62:	f7fd f943 	bl	8003cec <HAL_GetTick>
 8006a66:	1bc0      	subs	r0, r0, r7
 8006a68:	4540      	cmp	r0, r8
 8006a6a:	d8d1      	bhi.n	8006a10 <HAL_RCC_ClockConfig+0x1d0>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8006a6c:	69f3      	ldr	r3, [r6, #28]
 8006a6e:	f003 030c 	and.w	r3, r3, #12
 8006a72:	2b04      	cmp	r3, #4
 8006a74:	d1f5      	bne.n	8006a62 <HAL_RCC_ClockConfig+0x222>
 8006a76:	e723      	b.n	80068c0 <HAL_RCC_ClockConfig+0x80>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006a78:	4913      	ldr	r1, [pc, #76]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 8006a7a:	68a0      	ldr	r0, [r4, #8]
 8006a7c:	6a0b      	ldr	r3, [r1, #32]
 8006a7e:	f003 030f 	and.w	r3, r3, #15
 8006a82:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006a84:	bf3f      	itttt	cc
 8006a86:	6a0b      	ldrcc	r3, [r1, #32]
 8006a88:	f023 030f 	biccc.w	r3, r3, #15
 8006a8c:	4303      	orrcc	r3, r0
 8006a8e:	620b      	strcc	r3, [r1, #32]
 8006a90:	e71a      	b.n	80068c8 <HAL_RCC_ClockConfig+0x88>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006a92:	680b      	ldr	r3, [r1, #0]
 8006a94:	f023 030f 	bic.w	r3, r3, #15
 8006a98:	432b      	orrs	r3, r5
 8006a9a:	600b      	str	r3, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a9c:	680b      	ldr	r3, [r1, #0]
 8006a9e:	f003 030f 	and.w	r3, r3, #15
 8006aa2:	42ab      	cmp	r3, r5
 8006aa4:	f47f aed1 	bne.w	800684a <HAL_RCC_ClockConfig+0xa>
 8006aa8:	e715      	b.n	80068d6 <HAL_RCC_ClockConfig+0x96>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006aaa:	4907      	ldr	r1, [pc, #28]	@ (8006ac8 <HAL_RCC_ClockConfig+0x288>)
 8006aac:	68e0      	ldr	r0, [r4, #12]
 8006aae:	6a0b      	ldr	r3, [r1, #32]
 8006ab0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006ab4:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006ab6:	bf3f      	itttt	cc
 8006ab8:	6a0b      	ldrcc	r3, [r1, #32]
 8006aba:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006abe:	4303      	orrcc	r3, r0
 8006ac0:	620b      	strcc	r3, [r1, #32]
 8006ac2:	e70b      	b.n	80068dc <HAL_RCC_ClockConfig+0x9c>
 8006ac4:	40022000 	.word	0x40022000
 8006ac8:	46020c00 	.word	0x46020c00
 8006acc:	08035634 	.word	0x08035634
 8006ad0:	2000004c 	.word	0x2000004c
 8006ad4:	20000054 	.word	0x20000054
 8006ad8:	46020800 	.word	0x46020800

08006adc <HAL_RCC_GetHCLKFreq>:
{
 8006adc:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006ade:	f7ff fe23 	bl	8006728 <HAL_RCC_GetSysClockFreq>
 8006ae2:	4b05      	ldr	r3, [pc, #20]	@ (8006af8 <HAL_RCC_GetHCLKFreq+0x1c>)
 8006ae4:	4a05      	ldr	r2, [pc, #20]	@ (8006afc <HAL_RCC_GetHCLKFreq+0x20>)
 8006ae6:	6a1b      	ldr	r3, [r3, #32]
 8006ae8:	f003 030f 	and.w	r3, r3, #15
 8006aec:	5cd3      	ldrb	r3, [r2, r3]
 8006aee:	40d8      	lsrs	r0, r3
 8006af0:	4b03      	ldr	r3, [pc, #12]	@ (8006b00 <HAL_RCC_GetHCLKFreq+0x24>)
 8006af2:	6018      	str	r0, [r3, #0]
}
 8006af4:	bd08      	pop	{r3, pc}
 8006af6:	bf00      	nop
 8006af8:	46020c00 	.word	0x46020c00
 8006afc:	08035634 	.word	0x08035634
 8006b00:	2000004c 	.word	0x2000004c

08006b04 <HAL_RCC_OscConfig>:
{
 8006b04:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if (pRCC_OscInitStruct == NULL)
 8006b08:	4604      	mov	r4, r0
 8006b0a:	2800      	cmp	r0, #0
 8006b0c:	d039      	beq.n	8006b82 <HAL_RCC_OscConfig+0x7e>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b0e:	4ba3      	ldr	r3, [pc, #652]	@ (8006d9c <HAL_RCC_OscConfig+0x298>)
 8006b10:	69de      	ldr	r6, [r3, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006b12:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006b14:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b16:	f006 060c 	and.w	r6, r6, #12
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006b1a:	06d8      	lsls	r0, r3, #27
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006b1c:	f007 0703 	and.w	r7, r7, #3
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006b20:	f140 809a 	bpl.w	8006c58 <HAL_RCC_OscConfig+0x154>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006b24:	69e3      	ldr	r3, [r4, #28]
 8006b26:	b11e      	cbz	r6, 8006b30 <HAL_RCC_OscConfig+0x2c>
 8006b28:	2e0c      	cmp	r6, #12
 8006b2a:	d175      	bne.n	8006c18 <HAL_RCC_OscConfig+0x114>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 8006b2c:	2f01      	cmp	r7, #1
 8006b2e:	d173      	bne.n	8006c18 <HAL_RCC_OscConfig+0x114>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8006b30:	b33b      	cbz	r3, 8006b82 <HAL_RCC_OscConfig+0x7e>
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8006b32:	4d9a      	ldr	r5, [pc, #616]	@ (8006d9c <HAL_RCC_OscConfig+0x298>)
 8006b34:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8006b36:	68ab      	ldr	r3, [r5, #8]
 8006b38:	0219      	lsls	r1, r3, #8
 8006b3a:	bf56      	itet	pl
 8006b3c:	f8d5 30f4 	ldrpl.w	r3, [r5, #244]	@ 0xf4
 8006b40:	68ab      	ldrmi	r3, [r5, #8]
 8006b42:	041b      	lslpl	r3, r3, #16
 8006b44:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8006b48:	4298      	cmp	r0, r3
 8006b4a:	d938      	bls.n	8006bbe <HAL_RCC_OscConfig+0xba>
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006b4c:	b1ae      	cbz	r6, 8006b7a <HAL_RCC_OscConfig+0x76>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006b4e:	68ab      	ldr	r3, [r5, #8]
 8006b50:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006b54:	60ab      	str	r3, [r5, #8]
 8006b56:	68ab      	ldr	r3, [r5, #8]
 8006b58:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006b5a:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006b5e:	430b      	orrs	r3, r1
 8006b60:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b62:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006b66:	6a22      	ldr	r2, [r4, #32]
 8006b68:	d20d      	bcs.n	8006b86 <HAL_RCC_OscConfig+0x82>
 8006b6a:	2900      	cmp	r1, #0
 8006b6c:	68eb      	ldr	r3, [r5, #12]
 8006b6e:	da1a      	bge.n	8006ba6 <HAL_RCC_OscConfig+0xa2>
 8006b70:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006b74:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006b78:	e009      	b.n	8006b8e <HAL_RCC_OscConfig+0x8a>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006b7a:	f7ff fd79 	bl	8006670 <RCC_SetFlashLatencyFromMSIRange>
 8006b7e:	2800      	cmp	r0, #0
 8006b80:	d0e5      	beq.n	8006b4e <HAL_RCC_OscConfig+0x4a>
    return HAL_ERROR;
 8006b82:	2001      	movs	r0, #1
 8006b84:	e00c      	b.n	8006ba0 <HAL_RCC_OscConfig+0x9c>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b86:	68eb      	ldr	r3, [r5, #12]
 8006b88:	f023 031f 	bic.w	r3, r3, #31
 8006b8c:	4313      	orrs	r3, r2
 8006b8e:	60eb      	str	r3, [r5, #12]
        (void) HAL_RCC_GetHCLKFreq();
 8006b90:	f7ff ffa4 	bl	8006adc <HAL_RCC_GetHCLKFreq>
        status = HAL_InitTick(uwTickPrio);
 8006b94:	4b82      	ldr	r3, [pc, #520]	@ (8006da0 <HAL_RCC_OscConfig+0x29c>)
 8006b96:	6818      	ldr	r0, [r3, #0]
 8006b98:	f7fa f8fa 	bl	8000d90 <HAL_InitTick>
        if (status != HAL_OK)
 8006b9c:	2800      	cmp	r0, #0
 8006b9e:	d05b      	beq.n	8006c58 <HAL_RCC_OscConfig+0x154>
}
 8006ba0:	b004      	add	sp, #16
 8006ba2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006ba6:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006baa:	bf2b      	itete	cs
 8006bac:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006bb0:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006bb4:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006bb8:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006bbc:	e7e7      	b.n	8006b8e <HAL_RCC_OscConfig+0x8a>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006bbe:	68ab      	ldr	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bc0:	f1b0 4f40 	cmp.w	r0, #3221225472	@ 0xc0000000
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006bc4:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006bc8:	60ab      	str	r3, [r5, #8]
 8006bca:	68ab      	ldr	r3, [r5, #8]
 8006bcc:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006bd0:	ea43 0300 	orr.w	r3, r3, r0
 8006bd4:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bd6:	6a22      	ldr	r2, [r4, #32]
 8006bd8:	68eb      	ldr	r3, [r5, #12]
 8006bda:	d30a      	bcc.n	8006bf2 <HAL_RCC_OscConfig+0xee>
 8006bdc:	f023 031f 	bic.w	r3, r3, #31
 8006be0:	4313      	orrs	r3, r2
 8006be2:	60eb      	str	r3, [r5, #12]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006be4:	2e00      	cmp	r6, #0
 8006be6:	d1d3      	bne.n	8006b90 <HAL_RCC_OscConfig+0x8c>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006be8:	f7ff fd42 	bl	8006670 <RCC_SetFlashLatencyFromMSIRange>
 8006bec:	2800      	cmp	r0, #0
 8006bee:	d0cf      	beq.n	8006b90 <HAL_RCC_OscConfig+0x8c>
 8006bf0:	e7c7      	b.n	8006b82 <HAL_RCC_OscConfig+0x7e>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bf2:	2800      	cmp	r0, #0
 8006bf4:	da04      	bge.n	8006c00 <HAL_RCC_OscConfig+0xfc>
 8006bf6:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006bfa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006bfe:	e7f0      	b.n	8006be2 <HAL_RCC_OscConfig+0xde>
 8006c00:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006c04:	bf2b      	itete	cs
 8006c06:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006c0a:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006c0e:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006c12:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006c16:	e7e4      	b.n	8006be2 <HAL_RCC_OscConfig+0xde>
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8006c18:	4d60      	ldr	r5, [pc, #384]	@ (8006d9c <HAL_RCC_OscConfig+0x298>)
 8006c1a:	2b00      	cmp	r3, #0
 8006c1c:	d074      	beq.n	8006d08 <HAL_RCC_OscConfig+0x204>
        __HAL_RCC_MSI_ENABLE();
 8006c1e:	682b      	ldr	r3, [r5, #0]
 8006c20:	f043 0301 	orr.w	r3, r3, #1
 8006c24:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c26:	f7fd f861 	bl	8003cec <HAL_GetTick>
 8006c2a:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006c2c:	682b      	ldr	r3, [r5, #0]
 8006c2e:	075a      	lsls	r2, r3, #29
 8006c30:	d54e      	bpl.n	8006cd0 <HAL_RCC_OscConfig+0x1cc>
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006c32:	68ab      	ldr	r3, [r5, #8]
 8006c34:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006c38:	60ab      	str	r3, [r5, #8]
 8006c3a:	68ab      	ldr	r3, [r5, #8]
 8006c3c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006c3e:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006c42:	430b      	orrs	r3, r1
 8006c44:	60ab      	str	r3, [r5, #8]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006c46:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006c4a:	6a22      	ldr	r2, [r4, #32]
 8006c4c:	68eb      	ldr	r3, [r5, #12]
 8006c4e:	d347      	bcc.n	8006ce0 <HAL_RCC_OscConfig+0x1dc>
 8006c50:	f023 031f 	bic.w	r3, r3, #31
 8006c54:	4313      	orrs	r3, r2
 8006c56:	60eb      	str	r3, [r5, #12]
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006c58:	6823      	ldr	r3, [r4, #0]
 8006c5a:	07dd      	lsls	r5, r3, #31
 8006c5c:	d465      	bmi.n	8006d2a <HAL_RCC_OscConfig+0x226>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006c5e:	6823      	ldr	r3, [r4, #0]
 8006c60:	0798      	lsls	r0, r3, #30
 8006c62:	f100 80bd 	bmi.w	8006de0 <HAL_RCC_OscConfig+0x2dc>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006c66:	6823      	ldr	r3, [r4, #0]
 8006c68:	0718      	lsls	r0, r3, #28
 8006c6a:	f140 8138 	bpl.w	8006ede <HAL_RCC_OscConfig+0x3da>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006c6e:	4b4b      	ldr	r3, [pc, #300]	@ (8006d9c <HAL_RCC_OscConfig+0x298>)
 8006c70:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c74:	0751      	lsls	r1, r2, #29
 8006c76:	f100 80f1 	bmi.w	8006e5c <HAL_RCC_OscConfig+0x358>
      pwrclkchanged = SET;
 8006c7a:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006c7c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c80:	f042 0204 	orr.w	r2, r2, #4
 8006c84:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006c88:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006c8c:	f003 0304 	and.w	r3, r3, #4
 8006c90:	9301      	str	r3, [sp, #4]
 8006c92:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006c94:	4d43      	ldr	r5, [pc, #268]	@ (8006da4 <HAL_RCC_OscConfig+0x2a0>)
 8006c96:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006c98:	07da      	lsls	r2, r3, #31
 8006c9a:	f140 80e1 	bpl.w	8006e60 <HAL_RCC_OscConfig+0x35c>
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8006c9e:	6963      	ldr	r3, [r4, #20]
 8006ca0:	4d3e      	ldr	r5, [pc, #248]	@ (8006d9c <HAL_RCC_OscConfig+0x298>)
 8006ca2:	2b00      	cmp	r3, #0
 8006ca4:	f040 80ed 	bne.w	8006e82 <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_LSI_DISABLE();
 8006ca8:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006cac:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006cb0:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006cb4:	f7fd f81a 	bl	8003cec <HAL_GetTick>
 8006cb8:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006cba:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006cbe:	011b      	lsls	r3, r3, #4
 8006cc0:	f140 8105 	bpl.w	8006ece <HAL_RCC_OscConfig+0x3ca>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006cc4:	f7fd f812 	bl	8003cec <HAL_GetTick>
 8006cc8:	1b80      	subs	r0, r0, r6
 8006cca:	2805      	cmp	r0, #5
 8006ccc:	d9f5      	bls.n	8006cba <HAL_RCC_OscConfig+0x1b6>
 8006cce:	e005      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006cd0:	f7fd f80c 	bl	8003cec <HAL_GetTick>
 8006cd4:	eba0 0008 	sub.w	r0, r0, r8
 8006cd8:	2802      	cmp	r0, #2
 8006cda:	d9a7      	bls.n	8006c2c <HAL_RCC_OscConfig+0x128>
            return HAL_TIMEOUT;
 8006cdc:	2003      	movs	r0, #3
 8006cde:	e75f      	b.n	8006ba0 <HAL_RCC_OscConfig+0x9c>
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006ce0:	2900      	cmp	r1, #0
 8006ce2:	da04      	bge.n	8006cee <HAL_RCC_OscConfig+0x1ea>
 8006ce4:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006ce8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006cec:	e7b3      	b.n	8006c56 <HAL_RCC_OscConfig+0x152>
 8006cee:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006cf2:	d304      	bcc.n	8006cfe <HAL_RCC_OscConfig+0x1fa>
 8006cf4:	f423 43f8 	bic.w	r3, r3, #31744	@ 0x7c00
 8006cf8:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 8006cfc:	e7ab      	b.n	8006c56 <HAL_RCC_OscConfig+0x152>
 8006cfe:	f423 2378 	bic.w	r3, r3, #1015808	@ 0xf8000
 8006d02:	ea43 33c2 	orr.w	r3, r3, r2, lsl #15
 8006d06:	e7a6      	b.n	8006c56 <HAL_RCC_OscConfig+0x152>
        __HAL_RCC_MSI_DISABLE();
 8006d08:	682b      	ldr	r3, [r5, #0]
 8006d0a:	f023 0301 	bic.w	r3, r3, #1
 8006d0e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006d10:	f7fc ffec 	bl	8003cec <HAL_GetTick>
 8006d14:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8006d16:	682b      	ldr	r3, [r5, #0]
 8006d18:	075b      	lsls	r3, r3, #29
 8006d1a:	d59d      	bpl.n	8006c58 <HAL_RCC_OscConfig+0x154>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006d1c:	f7fc ffe6 	bl	8003cec <HAL_GetTick>
 8006d20:	eba0 0008 	sub.w	r0, r0, r8
 8006d24:	2802      	cmp	r0, #2
 8006d26:	d9f6      	bls.n	8006d16 <HAL_RCC_OscConfig+0x212>
 8006d28:	e7d8      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 8006d2a:	2e08      	cmp	r6, #8
 8006d2c:	6863      	ldr	r3, [r4, #4]
 8006d2e:	d003      	beq.n	8006d38 <HAL_RCC_OscConfig+0x234>
 8006d30:	2e0c      	cmp	r6, #12
 8006d32:	d104      	bne.n	8006d3e <HAL_RCC_OscConfig+0x23a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8006d34:	2f03      	cmp	r7, #3
 8006d36:	d102      	bne.n	8006d3e <HAL_RCC_OscConfig+0x23a>
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8006d38:	2b00      	cmp	r3, #0
 8006d3a:	d190      	bne.n	8006c5e <HAL_RCC_OscConfig+0x15a>
 8006d3c:	e721      	b.n	8006b82 <HAL_RCC_OscConfig+0x7e>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006d3e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006d42:	4d16      	ldr	r5, [pc, #88]	@ (8006d9c <HAL_RCC_OscConfig+0x298>)
 8006d44:	d113      	bne.n	8006d6e <HAL_RCC_OscConfig+0x26a>
 8006d46:	682b      	ldr	r3, [r5, #0]
 8006d48:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006d4c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006d4e:	f7fc ffcd 	bl	8003cec <HAL_GetTick>
 8006d52:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006d54:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8006d9c <HAL_RCC_OscConfig+0x298>
 8006d58:	f8d8 3000 	ldr.w	r3, [r8]
 8006d5c:	0399      	lsls	r1, r3, #14
 8006d5e:	f53f af7e 	bmi.w	8006c5e <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006d62:	f7fc ffc3 	bl	8003cec <HAL_GetTick>
 8006d66:	1b40      	subs	r0, r0, r5
 8006d68:	2864      	cmp	r0, #100	@ 0x64
 8006d6a:	d9f5      	bls.n	8006d58 <HAL_RCC_OscConfig+0x254>
 8006d6c:	e7b6      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006d6e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006d72:	d108      	bne.n	8006d86 <HAL_RCC_OscConfig+0x282>
 8006d74:	682b      	ldr	r3, [r5, #0]
 8006d76:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d7a:	602b      	str	r3, [r5, #0]
 8006d7c:	682b      	ldr	r3, [r5, #0]
 8006d7e:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8006d82:	602b      	str	r3, [r5, #0]
 8006d84:	e7df      	b.n	8006d46 <HAL_RCC_OscConfig+0x242>
 8006d86:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8006d8a:	d10d      	bne.n	8006da8 <HAL_RCC_OscConfig+0x2a4>
 8006d8c:	682b      	ldr	r3, [r5, #0]
 8006d8e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d92:	602b      	str	r3, [r5, #0]
 8006d94:	682b      	ldr	r3, [r5, #0]
 8006d96:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006d9a:	e7f2      	b.n	8006d82 <HAL_RCC_OscConfig+0x27e>
 8006d9c:	46020c00 	.word	0x46020c00
 8006da0:	20000054 	.word	0x20000054
 8006da4:	46020800 	.word	0x46020800
 8006da8:	682a      	ldr	r2, [r5, #0]
 8006daa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006dae:	602a      	str	r2, [r5, #0]
 8006db0:	682a      	ldr	r2, [r5, #0]
 8006db2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006db6:	602a      	str	r2, [r5, #0]
 8006db8:	682a      	ldr	r2, [r5, #0]
 8006dba:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8006dbe:	602a      	str	r2, [r5, #0]
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	d1c4      	bne.n	8006d4e <HAL_RCC_OscConfig+0x24a>
        tickstart = HAL_GetTick();
 8006dc4:	f7fc ff92 	bl	8003cec <HAL_GetTick>
 8006dc8:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8006dca:	682b      	ldr	r3, [r5, #0]
 8006dcc:	039a      	lsls	r2, r3, #14
 8006dce:	f57f af46 	bpl.w	8006c5e <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006dd2:	f7fc ff8b 	bl	8003cec <HAL_GetTick>
 8006dd6:	eba0 0008 	sub.w	r0, r0, r8
 8006dda:	2864      	cmp	r0, #100	@ 0x64
 8006ddc:	d9f5      	bls.n	8006dca <HAL_RCC_OscConfig+0x2c6>
 8006dde:	e77d      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8006de0:	2e04      	cmp	r6, #4
 8006de2:	68e3      	ldr	r3, [r4, #12]
 8006de4:	d003      	beq.n	8006dee <HAL_RCC_OscConfig+0x2ea>
 8006de6:	2e0c      	cmp	r6, #12
 8006de8:	d10d      	bne.n	8006e06 <HAL_RCC_OscConfig+0x302>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8006dea:	2f02      	cmp	r7, #2
 8006dec:	d10b      	bne.n	8006e06 <HAL_RCC_OscConfig+0x302>
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	f43f aec7 	beq.w	8006b82 <HAL_RCC_OscConfig+0x7e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006df4:	4aa9      	ldr	r2, [pc, #676]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006df6:	6921      	ldr	r1, [r4, #16]
 8006df8:	6913      	ldr	r3, [r2, #16]
 8006dfa:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006dfe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006e02:	6113      	str	r3, [r2, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006e04:	e72f      	b.n	8006c66 <HAL_RCC_OscConfig+0x162>
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8006e06:	4da5      	ldr	r5, [pc, #660]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006e08:	b1bb      	cbz	r3, 8006e3a <HAL_RCC_OscConfig+0x336>
        __HAL_RCC_HSI_ENABLE();
 8006e0a:	682b      	ldr	r3, [r5, #0]
 8006e0c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006e10:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e12:	f7fc ff6b 	bl	8003cec <HAL_GetTick>
 8006e16:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006e18:	682b      	ldr	r3, [r5, #0]
 8006e1a:	055b      	lsls	r3, r3, #21
 8006e1c:	d507      	bpl.n	8006e2e <HAL_RCC_OscConfig+0x32a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006e1e:	692b      	ldr	r3, [r5, #16]
 8006e20:	6922      	ldr	r2, [r4, #16]
 8006e22:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006e26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006e2a:	612b      	str	r3, [r5, #16]
 8006e2c:	e71b      	b.n	8006c66 <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006e2e:	f7fc ff5d 	bl	8003cec <HAL_GetTick>
 8006e32:	1b80      	subs	r0, r0, r6
 8006e34:	2802      	cmp	r0, #2
 8006e36:	d9ef      	bls.n	8006e18 <HAL_RCC_OscConfig+0x314>
 8006e38:	e750      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI_DISABLE();
 8006e3a:	682b      	ldr	r3, [r5, #0]
 8006e3c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006e40:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e42:	f7fc ff53 	bl	8003cec <HAL_GetTick>
 8006e46:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8006e48:	682b      	ldr	r3, [r5, #0]
 8006e4a:	055f      	lsls	r7, r3, #21
 8006e4c:	f57f af0b 	bpl.w	8006c66 <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006e50:	f7fc ff4c 	bl	8003cec <HAL_GetTick>
 8006e54:	1b80      	subs	r0, r0, r6
 8006e56:	2802      	cmp	r0, #2
 8006e58:	d9f6      	bls.n	8006e48 <HAL_RCC_OscConfig+0x344>
 8006e5a:	e73f      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    FlagStatus  pwrclkchanged = RESET;
 8006e5c:	2700      	movs	r7, #0
 8006e5e:	e719      	b.n	8006c94 <HAL_RCC_OscConfig+0x190>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006e60:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e62:	f043 0301 	orr.w	r3, r3, #1
 8006e66:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006e68:	f7fc ff40 	bl	8003cec <HAL_GetTick>
 8006e6c:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006e6e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e70:	07db      	lsls	r3, r3, #31
 8006e72:	f53f af14 	bmi.w	8006c9e <HAL_RCC_OscConfig+0x19a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006e76:	f7fc ff39 	bl	8003cec <HAL_GetTick>
 8006e7a:	1b80      	subs	r0, r0, r6
 8006e7c:	2802      	cmp	r0, #2
 8006e7e:	d9f6      	bls.n	8006e6e <HAL_RCC_OscConfig+0x36a>
 8006e80:	e72c      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
      uint32_t bdcr_temp = RCC->BDCR;
 8006e82:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 8006e86:	69a1      	ldr	r1, [r4, #24]
 8006e88:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8006e8c:	4291      	cmp	r1, r2
 8006e8e:	d010      	beq.n	8006eb2 <HAL_RCC_OscConfig+0x3ae>
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8006e90:	f003 6240 	and.w	r2, r3, #201326592	@ 0xc000000
 8006e94:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8006e98:	f43f ae73 	beq.w	8006b82 <HAL_RCC_OscConfig+0x7e>
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 8006e9c:	0158      	lsls	r0, r3, #5
 8006e9e:	d46c      	bmi.n	8006f7a <HAL_RCC_OscConfig+0x476>
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 8006ea0:	4a7e      	ldr	r2, [pc, #504]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006ea2:	69a1      	ldr	r1, [r4, #24]
 8006ea4:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8006ea8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006eac:	430b      	orrs	r3, r1
 8006eae:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      __HAL_RCC_LSI_ENABLE();
 8006eb2:	4d7a      	ldr	r5, [pc, #488]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006eb4:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006eb8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8006ebc:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006ec0:	f7fc ff14 	bl	8003cec <HAL_GetTick>
 8006ec4:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8006ec6:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006eca:	011a      	lsls	r2, r3, #4
 8006ecc:	d568      	bpl.n	8006fa0 <HAL_RCC_OscConfig+0x49c>
    if (pwrclkchanged == SET)
 8006ece:	b137      	cbz	r7, 8006ede <HAL_RCC_OscConfig+0x3da>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006ed0:	4a72      	ldr	r2, [pc, #456]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006ed2:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8006ed6:	f023 0304 	bic.w	r3, r3, #4
 8006eda:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006ede:	6823      	ldr	r3, [r4, #0]
 8006ee0:	075d      	lsls	r5, r3, #29
 8006ee2:	f140 80a7 	bpl.w	8007034 <HAL_RCC_OscConfig+0x530>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006ee6:	4b6d      	ldr	r3, [pc, #436]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006ee8:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006eec:	0750      	lsls	r0, r2, #29
 8006eee:	d45d      	bmi.n	8006fac <HAL_RCC_OscConfig+0x4a8>
      pwrclkchanged = SET;
 8006ef0:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006ef2:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006ef6:	f042 0204 	orr.w	r2, r2, #4
 8006efa:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006efe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006f02:	f003 0304 	and.w	r3, r3, #4
 8006f06:	9302      	str	r3, [sp, #8]
 8006f08:	9b02      	ldr	r3, [sp, #8]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006f0a:	4d65      	ldr	r5, [pc, #404]	@ (80070a0 <HAL_RCC_OscConfig+0x59c>)
 8006f0c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f0e:	07d9      	lsls	r1, r3, #31
 8006f10:	d54e      	bpl.n	8006fb0 <HAL_RCC_OscConfig+0x4ac>
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 8006f12:	68a3      	ldr	r3, [r4, #8]
 8006f14:	4d61      	ldr	r5, [pc, #388]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006f16:	f013 0f01 	tst.w	r3, #1
 8006f1a:	d159      	bne.n	8006fd0 <HAL_RCC_OscConfig+0x4cc>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006f1c:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006f20:	f022 0201 	bic.w	r2, r2, #1
 8006f24:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006f28:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006f2c:	f022 0204 	bic.w	r2, r2, #4
 8006f30:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	d15a      	bne.n	8006fee <HAL_RCC_OscConfig+0x4ea>
      tickstart = HAL_GetTick();
 8006f38:	f7fc fed8 	bl	8003cec <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f3c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006f40:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8006f42:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f46:	079a      	lsls	r2, r3, #30
 8006f48:	f100 80a0 	bmi.w	800708c <HAL_RCC_OscConfig+0x588>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 8006f4c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f50:	061b      	lsls	r3, r3, #24
 8006f52:	d567      	bpl.n	8007024 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f54:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006f58:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f5c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006f60:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8006f64:	4d4d      	ldr	r5, [pc, #308]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006f66:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f6a:	0518      	lsls	r0, r3, #20
 8006f6c:	d55a      	bpl.n	8007024 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f6e:	f7fc febd 	bl	8003cec <HAL_GetTick>
 8006f72:	1b80      	subs	r0, r0, r6
 8006f74:	4540      	cmp	r0, r8
 8006f76:	d9f6      	bls.n	8006f66 <HAL_RCC_OscConfig+0x462>
 8006f78:	e6b0      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
          __HAL_RCC_LSI_DISABLE();
 8006f7a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f7e:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006f82:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
          tickstart = HAL_GetTick();
 8006f86:	f7fc feb1 	bl	8003cec <HAL_GetTick>
 8006f8a:	4606      	mov	r6, r0
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006f8c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f90:	0119      	lsls	r1, r3, #4
 8006f92:	d585      	bpl.n	8006ea0 <HAL_RCC_OscConfig+0x39c>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f94:	f7fc feaa 	bl	8003cec <HAL_GetTick>
 8006f98:	1b80      	subs	r0, r0, r6
 8006f9a:	2805      	cmp	r0, #5
 8006f9c:	d9f6      	bls.n	8006f8c <HAL_RCC_OscConfig+0x488>
 8006f9e:	e69d      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006fa0:	f7fc fea4 	bl	8003cec <HAL_GetTick>
 8006fa4:	1b80      	subs	r0, r0, r6
 8006fa6:	2805      	cmp	r0, #5
 8006fa8:	d98d      	bls.n	8006ec6 <HAL_RCC_OscConfig+0x3c2>
 8006faa:	e697      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    FlagStatus pwrclkchanged = RESET;
 8006fac:	2700      	movs	r7, #0
 8006fae:	e7ac      	b.n	8006f0a <HAL_RCC_OscConfig+0x406>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006fb0:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006fb2:	f043 0301 	orr.w	r3, r3, #1
 8006fb6:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006fb8:	f7fc fe98 	bl	8003cec <HAL_GetTick>
 8006fbc:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006fbe:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006fc0:	07da      	lsls	r2, r3, #31
 8006fc2:	d4a6      	bmi.n	8006f12 <HAL_RCC_OscConfig+0x40e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006fc4:	f7fc fe92 	bl	8003cec <HAL_GetTick>
 8006fc8:	1b80      	subs	r0, r0, r6
 8006fca:	2802      	cmp	r0, #2
 8006fcc:	d9f7      	bls.n	8006fbe <HAL_RCC_OscConfig+0x4ba>
 8006fce:	e685      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 8006fd0:	f013 0f04 	tst.w	r3, #4
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006fd4:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006fd8:	bf1e      	ittt	ne
 8006fda:	f043 0304 	orrne.w	r3, r3, #4
 8006fde:	f8c5 30f0 	strne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006fe2:	f8d5 30f0 	ldrne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006fe6:	f043 0301 	orr.w	r3, r3, #1
 8006fea:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006fee:	f7fc fe7d 	bl	8003cec <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ff2:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006ff6:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8006ff8:	4e28      	ldr	r6, [pc, #160]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8006ffa:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8006ffe:	079b      	lsls	r3, r3, #30
 8007000:	d527      	bpl.n	8007052 <HAL_RCC_OscConfig+0x54e>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8007002:	68a3      	ldr	r3, [r4, #8]
 8007004:	f013 0f80 	tst.w	r3, #128	@ 0x80
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007008:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 800700c:	d02d      	beq.n	800706a <HAL_RCC_OscConfig+0x566>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800700e:	f241 3888 	movw	r8, #5000	@ 0x1388
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007012:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007016:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 800701a:	4e20      	ldr	r6, [pc, #128]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 800701c:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007020:	0518      	lsls	r0, r3, #20
 8007022:	d51c      	bpl.n	800705e <HAL_RCC_OscConfig+0x55a>
    if (pwrclkchanged == SET)
 8007024:	b137      	cbz	r7, 8007034 <HAL_RCC_OscConfig+0x530>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007026:	4a1d      	ldr	r2, [pc, #116]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8007028:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 800702c:	f023 0304 	bic.w	r3, r3, #4
 8007030:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8007034:	6823      	ldr	r3, [r4, #0]
 8007036:	0699      	lsls	r1, r3, #26
 8007038:	d434      	bmi.n	80070a4 <HAL_RCC_OscConfig+0x5a0>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 800703a:	6823      	ldr	r3, [r4, #0]
 800703c:	061a      	lsls	r2, r3, #24
 800703e:	d454      	bmi.n	80070ea <HAL_RCC_OscConfig+0x5e6>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 8007040:	6823      	ldr	r3, [r4, #0]
 8007042:	0658      	lsls	r0, r3, #25
 8007044:	d474      	bmi.n	8007130 <HAL_RCC_OscConfig+0x62c>
  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007046:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8007048:	2900      	cmp	r1, #0
 800704a:	f040 80c1 	bne.w	80071d0 <HAL_RCC_OscConfig+0x6cc>
  return HAL_OK;
 800704e:	2000      	movs	r0, #0
 8007050:	e5a6      	b.n	8006ba0 <HAL_RCC_OscConfig+0x9c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007052:	f7fc fe4b 	bl	8003cec <HAL_GetTick>
 8007056:	1b40      	subs	r0, r0, r5
 8007058:	4540      	cmp	r0, r8
 800705a:	d9ce      	bls.n	8006ffa <HAL_RCC_OscConfig+0x4f6>
 800705c:	e63e      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800705e:	f7fc fe45 	bl	8003cec <HAL_GetTick>
 8007062:	1b40      	subs	r0, r0, r5
 8007064:	4540      	cmp	r0, r8
 8007066:	d9d9      	bls.n	800701c <HAL_RCC_OscConfig+0x518>
 8007068:	e638      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800706a:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 800706e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007072:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8007076:	4e09      	ldr	r6, [pc, #36]	@ (800709c <HAL_RCC_OscConfig+0x598>)
 8007078:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 800707c:	0519      	lsls	r1, r3, #20
 800707e:	d5d1      	bpl.n	8007024 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007080:	f7fc fe34 	bl	8003cec <HAL_GetTick>
 8007084:	1b40      	subs	r0, r0, r5
 8007086:	4540      	cmp	r0, r8
 8007088:	d9f6      	bls.n	8007078 <HAL_RCC_OscConfig+0x574>
 800708a:	e627      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800708c:	f7fc fe2e 	bl	8003cec <HAL_GetTick>
 8007090:	1b80      	subs	r0, r0, r6
 8007092:	4540      	cmp	r0, r8
 8007094:	f67f af55 	bls.w	8006f42 <HAL_RCC_OscConfig+0x43e>
 8007098:	e620      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
 800709a:	bf00      	nop
 800709c:	46020c00 	.word	0x46020c00
 80070a0:	46020800 	.word	0x46020800
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 80070a4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80070a6:	4d9b      	ldr	r5, [pc, #620]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
 80070a8:	b17b      	cbz	r3, 80070ca <HAL_RCC_OscConfig+0x5c6>
      __HAL_RCC_HSI48_ENABLE();
 80070aa:	682b      	ldr	r3, [r5, #0]
 80070ac:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80070b0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070b2:	f7fc fe1b 	bl	8003cec <HAL_GetTick>
 80070b6:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 80070b8:	682b      	ldr	r3, [r5, #0]
 80070ba:	049b      	lsls	r3, r3, #18
 80070bc:	d4bd      	bmi.n	800703a <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80070be:	f7fc fe15 	bl	8003cec <HAL_GetTick>
 80070c2:	1b80      	subs	r0, r0, r6
 80070c4:	2802      	cmp	r0, #2
 80070c6:	d9f7      	bls.n	80070b8 <HAL_RCC_OscConfig+0x5b4>
 80070c8:	e608      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSI48_DISABLE();
 80070ca:	682b      	ldr	r3, [r5, #0]
 80070cc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80070d0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070d2:	f7fc fe0b 	bl	8003cec <HAL_GetTick>
 80070d6:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 80070d8:	682b      	ldr	r3, [r5, #0]
 80070da:	049f      	lsls	r7, r3, #18
 80070dc:	d5ad      	bpl.n	800703a <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80070de:	f7fc fe05 	bl	8003cec <HAL_GetTick>
 80070e2:	1b80      	subs	r0, r0, r6
 80070e4:	2802      	cmp	r0, #2
 80070e6:	d9f7      	bls.n	80070d8 <HAL_RCC_OscConfig+0x5d4>
 80070e8:	e5f8      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 80070ea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80070ec:	4d89      	ldr	r5, [pc, #548]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
 80070ee:	b17b      	cbz	r3, 8007110 <HAL_RCC_OscConfig+0x60c>
      __HAL_RCC_SHSI_ENABLE();
 80070f0:	682b      	ldr	r3, [r5, #0]
 80070f2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80070f6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070f8:	f7fc fdf8 	bl	8003cec <HAL_GetTick>
 80070fc:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 80070fe:	682b      	ldr	r3, [r5, #0]
 8007100:	0419      	lsls	r1, r3, #16
 8007102:	d49d      	bmi.n	8007040 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 8007104:	f7fc fdf2 	bl	8003cec <HAL_GetTick>
 8007108:	1b80      	subs	r0, r0, r6
 800710a:	2802      	cmp	r0, #2
 800710c:	d9f7      	bls.n	80070fe <HAL_RCC_OscConfig+0x5fa>
 800710e:	e5e5      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_SHSI_DISABLE();
 8007110:	682b      	ldr	r3, [r5, #0]
 8007112:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007116:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007118:	f7fc fde8 	bl	8003cec <HAL_GetTick>
 800711c:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 800711e:	682b      	ldr	r3, [r5, #0]
 8007120:	041a      	lsls	r2, r3, #16
 8007122:	d58d      	bpl.n	8007040 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 8007124:	f7fc fde2 	bl	8003cec <HAL_GetTick>
 8007128:	1b80      	subs	r0, r0, r6
 800712a:	2802      	cmp	r0, #2
 800712c:	d9f7      	bls.n	800711e <HAL_RCC_OscConfig+0x61a>
 800712e:	e5d5      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 8007130:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8007132:	4d78      	ldr	r5, [pc, #480]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
 8007134:	2b00      	cmp	r3, #0
 8007136:	d03a      	beq.n	80071ae <HAL_RCC_OscConfig+0x6aa>
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 8007138:	68ab      	ldr	r3, [r5, #8]
 800713a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800713e:	60ab      	str	r3, [r5, #8]
 8007140:	68ab      	ldr	r3, [r5, #8]
 8007142:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007144:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8007148:	4313      	orrs	r3, r2
 800714a:	60ab      	str	r3, [r5, #8]
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 800714c:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 8007150:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8007154:	d316      	bcc.n	8007184 <HAL_RCC_OscConfig+0x680>
 8007156:	68eb      	ldr	r3, [r5, #12]
 8007158:	f023 031f 	bic.w	r3, r3, #31
 800715c:	4313      	orrs	r3, r2
 800715e:	60eb      	str	r3, [r5, #12]
      __HAL_RCC_MSIK_ENABLE();
 8007160:	4d6c      	ldr	r5, [pc, #432]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
 8007162:	682b      	ldr	r3, [r5, #0]
 8007164:	f043 0310 	orr.w	r3, r3, #16
 8007168:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800716a:	f7fc fdbf 	bl	8003cec <HAL_GetTick>
 800716e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 8007170:	682b      	ldr	r3, [r5, #0]
 8007172:	069b      	lsls	r3, r3, #26
 8007174:	f53f af67 	bmi.w	8007046 <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007178:	f7fc fdb8 	bl	8003cec <HAL_GetTick>
 800717c:	1b80      	subs	r0, r0, r6
 800717e:	2802      	cmp	r0, #2
 8007180:	d9f6      	bls.n	8007170 <HAL_RCC_OscConfig+0x66c>
 8007182:	e5ab      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007184:	2b00      	cmp	r3, #0
 8007186:	da05      	bge.n	8007194 <HAL_RCC_OscConfig+0x690>
 8007188:	68eb      	ldr	r3, [r5, #12]
 800718a:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 800718e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007192:	e7e4      	b.n	800715e <HAL_RCC_OscConfig+0x65a>
 8007194:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007198:	68eb      	ldr	r3, [r5, #12]
 800719a:	bf2b      	itete	cs
 800719c:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 80071a0:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 80071a4:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 80071a8:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 80071ac:	e7d7      	b.n	800715e <HAL_RCC_OscConfig+0x65a>
      __HAL_RCC_MSIK_DISABLE();
 80071ae:	682b      	ldr	r3, [r5, #0]
 80071b0:	f023 0310 	bic.w	r3, r3, #16
 80071b4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80071b6:	f7fc fd99 	bl	8003cec <HAL_GetTick>
 80071ba:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 80071bc:	682b      	ldr	r3, [r5, #0]
 80071be:	069f      	lsls	r7, r3, #26
 80071c0:	f57f af41 	bpl.w	8007046 <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 80071c4:	f7fc fd92 	bl	8003cec <HAL_GetTick>
 80071c8:	1b80      	subs	r0, r0, r6
 80071ca:	2802      	cmp	r0, #2
 80071cc:	d9f6      	bls.n	80071bc <HAL_RCC_OscConfig+0x6b8>
 80071ce:	e585      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80071d0:	4d50      	ldr	r5, [pc, #320]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
 80071d2:	69eb      	ldr	r3, [r5, #28]
 80071d4:	f003 030c 	and.w	r3, r3, #12
 80071d8:	2b0c      	cmp	r3, #12
 80071da:	f000 80a1 	beq.w	8007320 <HAL_RCC_OscConfig+0x81c>
        __HAL_RCC_PLL_DISABLE();
 80071de:	682b      	ldr	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80071e0:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
 80071e2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80071e6:	602b      	str	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80071e8:	f040 8081 	bne.w	80072ee <HAL_RCC_OscConfig+0x7ea>
        tickstart = HAL_GetTick();
 80071ec:	f7fc fd7e 	bl	8003cec <HAL_GetTick>
 80071f0:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80071f2:	6829      	ldr	r1, [r5, #0]
 80071f4:	f011 7100 	ands.w	r1, r1, #33554432	@ 0x2000000
 80071f8:	d16d      	bne.n	80072d6 <HAL_RCC_OscConfig+0x7d2>
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80071fa:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80071fe:	075e      	lsls	r6, r3, #29
 8007200:	d40c      	bmi.n	800721c <HAL_RCC_OscConfig+0x718>
          pwrclkchanged = SET;
 8007202:	2101      	movs	r1, #1
          __HAL_RCC_PWR_CLK_ENABLE();
 8007204:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007208:	f043 0304 	orr.w	r3, r3, #4
 800720c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007210:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007214:	f003 0304 	and.w	r3, r3, #4
 8007218:	9303      	str	r3, [sp, #12]
 800721a:	9b03      	ldr	r3, [sp, #12]
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 800721c:	4d3e      	ldr	r5, [pc, #248]	@ (8007318 <HAL_RCC_OscConfig+0x814>)
 800721e:	68ee      	ldr	r6, [r5, #12]
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007220:	68eb      	ldr	r3, [r5, #12]
 8007222:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007226:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 8007228:	4b3a      	ldr	r3, [pc, #232]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
 800722a:	6c67      	ldr	r7, [r4, #68]	@ 0x44
 800722c:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 800722e:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8007230:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 8007234:	433a      	orrs	r2, r7
 8007236:	f020 0003 	bic.w	r0, r0, #3
 800723a:	4302      	orrs	r2, r0
 800723c:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800723e:	3801      	subs	r0, #1
 8007240:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8007244:	629a      	str	r2, [r3, #40]	@ 0x28
 8007246:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8007248:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
 800724a:	4834      	ldr	r0, [pc, #208]	@ (800731c <HAL_RCC_OscConfig+0x818>)
 800724c:	3a01      	subs	r2, #1
 800724e:	4038      	ands	r0, r7
 8007250:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007254:	4302      	orrs	r2, r0
 8007256:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8007258:	3801      	subs	r0, #1
 800725a:	0240      	lsls	r0, r0, #9
 800725c:	b280      	uxth	r0, r0
 800725e:	4302      	orrs	r2, r0
 8007260:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8007262:	3801      	subs	r0, #1
 8007264:	0400      	lsls	r0, r0, #16
 8007266:	f400 00fe 	and.w	r0, r0, #8323072	@ 0x7f0000
 800726a:	4302      	orrs	r2, r0
 800726c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800726e:	3801      	subs	r0, #1
 8007270:	0600      	lsls	r0, r0, #24
 8007272:	f000 40fe 	and.w	r0, r0, #2130706432	@ 0x7f000000
 8007276:	4302      	orrs	r2, r0
 8007278:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_RCC_PLL_FRACN_DISABLE();
 800727a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800727c:	f022 0210 	bic.w	r2, r2, #16
 8007280:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8007282:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007284:	00d2      	lsls	r2, r2, #3
 8007286:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007288:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800728a:	f042 0210 	orr.w	r2, r2, #16
 800728e:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 8007290:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007292:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007294:	f022 020c 	bic.w	r2, r2, #12
 8007298:	4302      	orrs	r2, r0
 800729a:	629a      	str	r2, [r3, #40]	@ 0x28
        if (pwrboosten == SET)
 800729c:	0370      	lsls	r0, r6, #13
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 800729e:	bf42      	ittt	mi
 80072a0:	68ea      	ldrmi	r2, [r5, #12]
 80072a2:	f442 2280 	orrmi.w	r2, r2, #262144	@ 0x40000
 80072a6:	60ea      	strmi	r2, [r5, #12]
        if (pwrclkchanged == SET)
 80072a8:	b129      	cbz	r1, 80072b6 <HAL_RCC_OscConfig+0x7b2>
          __HAL_RCC_PWR_CLK_DISABLE();
 80072aa:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80072ae:	f022 0204 	bic.w	r2, r2, #4
 80072b2:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
        __HAL_RCC_PLL_ENABLE();
 80072b6:	681a      	ldr	r2, [r3, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80072b8:	4c16      	ldr	r4, [pc, #88]	@ (8007314 <HAL_RCC_OscConfig+0x810>)
        __HAL_RCC_PLL_ENABLE();
 80072ba:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 80072be:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80072c0:	f7fc fd14 	bl	8003cec <HAL_GetTick>
 80072c4:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80072c6:	6823      	ldr	r3, [r4, #0]
 80072c8:	019a      	lsls	r2, r3, #6
 80072ca:	d50a      	bpl.n	80072e2 <HAL_RCC_OscConfig+0x7de>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80072cc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80072ce:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80072d2:	62a3      	str	r3, [r4, #40]	@ 0x28
 80072d4:	e6bb      	b.n	800704e <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072d6:	f7fc fd09 	bl	8003cec <HAL_GetTick>
 80072da:	1b80      	subs	r0, r0, r6
 80072dc:	2802      	cmp	r0, #2
 80072de:	d988      	bls.n	80071f2 <HAL_RCC_OscConfig+0x6ee>
 80072e0:	e4fc      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072e2:	f7fc fd03 	bl	8003cec <HAL_GetTick>
 80072e6:	1b40      	subs	r0, r0, r5
 80072e8:	2802      	cmp	r0, #2
 80072ea:	d9ec      	bls.n	80072c6 <HAL_RCC_OscConfig+0x7c2>
 80072ec:	e4f6      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
        tickstart = HAL_GetTick();
 80072ee:	f7fc fcfd 	bl	8003cec <HAL_GetTick>
 80072f2:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80072f4:	682b      	ldr	r3, [r5, #0]
 80072f6:	019b      	lsls	r3, r3, #6
 80072f8:	d406      	bmi.n	8007308 <HAL_RCC_OscConfig+0x804>
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 80072fa:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80072fc:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8007300:	f023 0303 	bic.w	r3, r3, #3
 8007304:	62ab      	str	r3, [r5, #40]	@ 0x28
 8007306:	e6a2      	b.n	800704e <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007308:	f7fc fcf0 	bl	8003cec <HAL_GetTick>
 800730c:	1b00      	subs	r0, r0, r4
 800730e:	2802      	cmp	r0, #2
 8007310:	d9f0      	bls.n	80072f4 <HAL_RCC_OscConfig+0x7f0>
 8007312:	e4e3      	b.n	8006cdc <HAL_RCC_OscConfig+0x1d8>
 8007314:	46020c00 	.word	0x46020c00
 8007318:	46020800 	.word	0x46020800
 800731c:	80800000 	.word	0x80800000
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007320:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLL1CFGR;
 8007322:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 8007324:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007326:	f43f ac2c 	beq.w	8006b82 <HAL_RCC_OscConfig+0x7e>
 800732a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 800732c:	f002 0103 	and.w	r1, r2, #3
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007330:	4281      	cmp	r1, r0
 8007332:	f47f ac26 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007336:	6c21      	ldr	r1, [r4, #64]	@ 0x40
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 8007338:	f3c2 2003 	ubfx	r0, r2, #8, #4
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 800733c:	3901      	subs	r1, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 800733e:	4288      	cmp	r0, r1
 8007340:	f47f ac1f 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007344:	6c61      	ldr	r1, [r4, #68]	@ 0x44
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8007346:	f402 4270 	and.w	r2, r2, #61440	@ 0xf000
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 800734a:	428a      	cmp	r2, r1
 800734c:	f47f ac19 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007350:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8007352:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8007356:	3a01      	subs	r2, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8007358:	4291      	cmp	r1, r2
 800735a:	f47f ac12 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800735e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 8007360:	f3c3 2146 	ubfx	r1, r3, #9, #7
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007364:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007366:	4291      	cmp	r1, r2
 8007368:	f47f ac0b 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 800736c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 800736e:	f3c3 4106 	ubfx	r1, r3, #16, #7
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007372:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007374:	4291      	cmp	r1, r2
 8007376:	f47f ac04 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 800737a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 800737c:	f3c3 6306 	ubfx	r3, r3, #24, #7
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007380:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007382:	4293      	cmp	r3, r2
 8007384:	f47f abfd 	bne.w	8006b82 <HAL_RCC_OscConfig+0x7e>
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8007388:	4b0d      	ldr	r3, [pc, #52]	@ (80073c0 <HAL_RCC_OscConfig+0x8bc>)
 800738a:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 800738c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800738e:	f3c2 02cc 	ubfx	r2, r2, #3, #13
 8007392:	428a      	cmp	r2, r1
 8007394:	f43f ae5b 	beq.w	800704e <HAL_RCC_OscConfig+0x54a>
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007398:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800739a:	f022 0210 	bic.w	r2, r2, #16
 800739e:	629a      	str	r2, [r3, #40]	@ 0x28
        tickstart = HAL_GetTick();
 80073a0:	f7fc fca4 	bl	8003cec <HAL_GetTick>
 80073a4:	4605      	mov	r5, r0
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 80073a6:	f7fc fca1 	bl	8003cec <HAL_GetTick>
 80073aa:	42a8      	cmp	r0, r5
 80073ac:	d0fb      	beq.n	80073a6 <HAL_RCC_OscConfig+0x8a2>
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 80073ae:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80073b0:	4b03      	ldr	r3, [pc, #12]	@ (80073c0 <HAL_RCC_OscConfig+0x8bc>)
 80073b2:	00d2      	lsls	r2, r2, #3
 80073b4:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 80073b6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80073b8:	f042 0210 	orr.w	r2, r2, #16
 80073bc:	629a      	str	r2, [r3, #40]	@ 0x28
 80073be:	e646      	b.n	800704e <HAL_RCC_OscConfig+0x54a>
 80073c0:	46020c00 	.word	0x46020c00

080073c4 <HAL_RCC_GetPCLK1Freq>:
{
 80073c4:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 80073c6:	f7ff fb89 	bl	8006adc <HAL_RCC_GetHCLKFreq>
 80073ca:	4b04      	ldr	r3, [pc, #16]	@ (80073dc <HAL_RCC_GetPCLK1Freq+0x18>)
 80073cc:	4a04      	ldr	r2, [pc, #16]	@ (80073e0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80073ce:	6a1b      	ldr	r3, [r3, #32]
 80073d0:	f3c3 1302 	ubfx	r3, r3, #4, #3
 80073d4:	5cd3      	ldrb	r3, [r2, r3]
}
 80073d6:	40d8      	lsrs	r0, r3
 80073d8:	bd08      	pop	{r3, pc}
 80073da:	bf00      	nop
 80073dc:	46020c00 	.word	0x46020c00
 80073e0:	0803562c 	.word	0x0803562c

080073e4 <HAL_RCC_GetClockConfig>:
  pRCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | \
 80073e4:	231f      	movs	r3, #31
 80073e6:	6003      	str	r3, [r0, #0]
  pRCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 80073e8:	4b0d      	ldr	r3, [pc, #52]	@ (8007420 <HAL_RCC_GetClockConfig+0x3c>)
 80073ea:	69da      	ldr	r2, [r3, #28]
 80073ec:	f002 0203 	and.w	r2, r2, #3
 80073f0:	6042      	str	r2, [r0, #4]
  pRCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_HPRE);
 80073f2:	6a1a      	ldr	r2, [r3, #32]
 80073f4:	f002 020f 	and.w	r2, r2, #15
 80073f8:	6082      	str	r2, [r0, #8]
  pRCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PPRE1);
 80073fa:	6a1a      	ldr	r2, [r3, #32]
 80073fc:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007400:	60c2      	str	r2, [r0, #12]
  pRCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4);
 8007402:	6a1a      	ldr	r2, [r3, #32]
 8007404:	0912      	lsrs	r2, r2, #4
 8007406:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800740a:	6102      	str	r2, [r0, #16]
  pRCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CFGR3 & RCC_CFGR3_PPRE3);
 800740c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800740e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8007412:	6143      	str	r3, [r0, #20]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007414:	4b03      	ldr	r3, [pc, #12]	@ (8007424 <HAL_RCC_GetClockConfig+0x40>)
 8007416:	681b      	ldr	r3, [r3, #0]
 8007418:	f003 030f 	and.w	r3, r3, #15
 800741c:	600b      	str	r3, [r1, #0]
}
 800741e:	4770      	bx	lr
 8007420:	46020c00 	.word	0x46020c00
 8007424:	40022000 	.word	0x40022000

08007428 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 8007428:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 800742a:	4c33      	ldr	r4, [pc, #204]	@ (80074f8 <RCCEx_PLL2_Config+0xd0>)
{
 800742c:	4605      	mov	r5, r0
  __HAL_RCC_PLL2_DISABLE();
 800742e:	6823      	ldr	r3, [r4, #0]
 8007430:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007434:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8007436:	f7fc fc59 	bl	8003cec <HAL_GetTick>
 800743a:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800743c:	6823      	ldr	r3, [r4, #0]
 800743e:	011a      	lsls	r2, r3, #4
 8007440:	d44d      	bmi.n	80074de <RCCEx_PLL2_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 8007442:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007444:	6829      	ldr	r1, [r5, #0]
 8007446:	686a      	ldr	r2, [r5, #4]
 8007448:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800744c:	f023 0303 	bic.w	r3, r3, #3
 8007450:	3a01      	subs	r2, #1
 8007452:	430b      	orrs	r3, r1
 8007454:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007458:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800745a:	68ab      	ldr	r3, [r5, #8]
 800745c:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 800745e:	4a27      	ldr	r2, [pc, #156]	@ (80074fc <RCCEx_PLL2_Config+0xd4>)
 8007460:	3b01      	subs	r3, #1
 8007462:	400a      	ands	r2, r1
 8007464:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007468:	4313      	orrs	r3, r2
 800746a:	68ea      	ldr	r2, [r5, #12]
 800746c:	3a01      	subs	r2, #1
 800746e:	0252      	lsls	r2, r2, #9
 8007470:	b292      	uxth	r2, r2
 8007472:	4313      	orrs	r3, r2
 8007474:	692a      	ldr	r2, [r5, #16]
 8007476:	3a01      	subs	r2, #1
 8007478:	0412      	lsls	r2, r2, #16
 800747a:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 800747e:	4313      	orrs	r3, r2
 8007480:	696a      	ldr	r2, [r5, #20]
 8007482:	3a01      	subs	r2, #1
 8007484:	0612      	lsls	r2, r2, #24
 8007486:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 800748a:	4313      	orrs	r3, r2
 800748c:	63e3      	str	r3, [r4, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 800748e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007490:	69aa      	ldr	r2, [r5, #24]
 8007492:	f023 030c 	bic.w	r3, r3, #12
 8007496:	4313      	orrs	r3, r2
 8007498:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 800749a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800749c:	6a2a      	ldr	r2, [r5, #32]
 800749e:	4313      	orrs	r3, r2
 80074a0:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 80074a2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80074a4:	f023 0310 	bic.w	r3, r3, #16
 80074a8:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 80074aa:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80074ac:	69ea      	ldr	r2, [r5, #28]
 80074ae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80074b2:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80074b6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80074ba:	6423      	str	r3, [r4, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 80074bc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80074be:	4d0e      	ldr	r5, [pc, #56]	@ (80074f8 <RCCEx_PLL2_Config+0xd0>)
  __HAL_RCC_PLL2FRACN_ENABLE();
 80074c0:	f043 0310 	orr.w	r3, r3, #16
 80074c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
  __HAL_RCC_PLL2_ENABLE();
 80074c6:	6823      	ldr	r3, [r4, #0]
 80074c8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80074cc:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80074ce:	f7fc fc0d 	bl	8003cec <HAL_GetTick>
 80074d2:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80074d4:	682b      	ldr	r3, [r5, #0]
 80074d6:	011b      	lsls	r3, r3, #4
 80074d8:	d508      	bpl.n	80074ec <RCCEx_PLL2_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80074da:	2000      	movs	r0, #0
 80074dc:	e005      	b.n	80074ea <RCCEx_PLL2_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80074de:	f7fc fc05 	bl	8003cec <HAL_GetTick>
 80074e2:	1b80      	subs	r0, r0, r6
 80074e4:	2802      	cmp	r0, #2
 80074e6:	d9a9      	bls.n	800743c <RCCEx_PLL2_Config+0x14>
      return HAL_TIMEOUT;
 80074e8:	2003      	movs	r0, #3

}
 80074ea:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80074ec:	f7fc fbfe 	bl	8003cec <HAL_GetTick>
 80074f0:	1b00      	subs	r0, r0, r4
 80074f2:	2802      	cmp	r0, #2
 80074f4:	d9ee      	bls.n	80074d4 <RCCEx_PLL2_Config+0xac>
 80074f6:	e7f7      	b.n	80074e8 <RCCEx_PLL2_Config+0xc0>
 80074f8:	46020c00 	.word	0x46020c00
 80074fc:	80800000 	.word	0x80800000

08007500 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 8007500:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 8007502:	4c33      	ldr	r4, [pc, #204]	@ (80075d0 <RCCEx_PLL3_Config+0xd0>)
{
 8007504:	4605      	mov	r5, r0
  __HAL_RCC_PLL3_DISABLE();
 8007506:	6823      	ldr	r3, [r4, #0]
 8007508:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800750c:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 800750e:	f7fc fbed 	bl	8003cec <HAL_GetTick>
 8007512:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8007514:	6823      	ldr	r3, [r4, #0]
 8007516:	009a      	lsls	r2, r3, #2
 8007518:	d44d      	bmi.n	80075b6 <RCCEx_PLL3_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 800751a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800751c:	6829      	ldr	r1, [r5, #0]
 800751e:	686a      	ldr	r2, [r5, #4]
 8007520:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8007524:	f023 0303 	bic.w	r3, r3, #3
 8007528:	3a01      	subs	r2, #1
 800752a:	430b      	orrs	r3, r1
 800752c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007530:	6323      	str	r3, [r4, #48]	@ 0x30
 8007532:	68ab      	ldr	r3, [r5, #8]
 8007534:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8007536:	4a27      	ldr	r2, [pc, #156]	@ (80075d4 <RCCEx_PLL3_Config+0xd4>)
 8007538:	3b01      	subs	r3, #1
 800753a:	400a      	ands	r2, r1
 800753c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007540:	4313      	orrs	r3, r2
 8007542:	68ea      	ldr	r2, [r5, #12]
 8007544:	3a01      	subs	r2, #1
 8007546:	0252      	lsls	r2, r2, #9
 8007548:	b292      	uxth	r2, r2
 800754a:	4313      	orrs	r3, r2
 800754c:	692a      	ldr	r2, [r5, #16]
 800754e:	3a01      	subs	r2, #1
 8007550:	0412      	lsls	r2, r2, #16
 8007552:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8007556:	4313      	orrs	r3, r2
 8007558:	696a      	ldr	r2, [r5, #20]
 800755a:	3a01      	subs	r2, #1
 800755c:	0612      	lsls	r2, r2, #24
 800755e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007562:	4313      	orrs	r3, r2
 8007564:	6463      	str	r3, [r4, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 8007566:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007568:	69aa      	ldr	r2, [r5, #24]
 800756a:	f023 030c 	bic.w	r3, r3, #12
 800756e:	4313      	orrs	r3, r2
 8007570:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 8007572:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007574:	6a2a      	ldr	r2, [r5, #32]
 8007576:	4313      	orrs	r3, r2
 8007578:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 800757a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800757c:	f023 0310 	bic.w	r3, r3, #16
 8007580:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8007582:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8007584:	69ea      	ldr	r2, [r5, #28]
 8007586:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800758a:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800758e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007592:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007594:	6b23      	ldr	r3, [r4, #48]	@ 0x30

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007596:	4d0e      	ldr	r5, [pc, #56]	@ (80075d0 <RCCEx_PLL3_Config+0xd0>)
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007598:	f043 0310 	orr.w	r3, r3, #16
 800759c:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_RCC_PLL3_ENABLE();
 800759e:	6823      	ldr	r3, [r4, #0]
 80075a0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80075a4:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80075a6:	f7fc fba1 	bl	8003cec <HAL_GetTick>
 80075aa:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80075ac:	682b      	ldr	r3, [r5, #0]
 80075ae:	009b      	lsls	r3, r3, #2
 80075b0:	d508      	bpl.n	80075c4 <RCCEx_PLL3_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80075b2:	2000      	movs	r0, #0
 80075b4:	e005      	b.n	80075c2 <RCCEx_PLL3_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80075b6:	f7fc fb99 	bl	8003cec <HAL_GetTick>
 80075ba:	1b80      	subs	r0, r0, r6
 80075bc:	2802      	cmp	r0, #2
 80075be:	d9a9      	bls.n	8007514 <RCCEx_PLL3_Config+0x14>
      return HAL_TIMEOUT;
 80075c0:	2003      	movs	r0, #3
}
 80075c2:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80075c4:	f7fc fb92 	bl	8003cec <HAL_GetTick>
 80075c8:	1b00      	subs	r0, r0, r4
 80075ca:	2802      	cmp	r0, #2
 80075cc:	d9ee      	bls.n	80075ac <RCCEx_PLL3_Config+0xac>
 80075ce:	e7f7      	b.n	80075c0 <RCCEx_PLL3_Config+0xc0>
 80075d0:	46020c00 	.word	0x46020c00
 80075d4:	80800000 	.word	0x80800000

080075d8 <HAL_RCCEx_PeriphCLKConfig>:
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80075d8:	6803      	ldr	r3, [r0, #0]
{
 80075da:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80075de:	07da      	lsls	r2, r3, #31
{
 80075e0:	4605      	mov	r5, r0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80075e2:	d508      	bpl.n	80075f6 <HAL_RCCEx_PeriphCLKConfig+0x1e>
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 80075e4:	49a5      	ldr	r1, [pc, #660]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075e6:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80075e8:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075ec:	f022 0203 	bic.w	r2, r2, #3
 80075f0:	4302      	orrs	r2, r0
 80075f2:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80075f6:	079f      	lsls	r7, r3, #30
 80075f8:	d508      	bpl.n	800760c <HAL_RCCEx_PeriphCLKConfig+0x34>
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 80075fa:	49a0      	ldr	r1, [pc, #640]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075fc:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 80075fe:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007602:	f022 020c 	bic.w	r2, r2, #12
 8007606:	4302      	orrs	r2, r0
 8007608:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 800760c:	075e      	lsls	r6, r3, #29
 800760e:	d508      	bpl.n	8007622 <HAL_RCCEx_PeriphCLKConfig+0x4a>
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8007610:	499a      	ldr	r1, [pc, #616]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007612:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007614:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007618:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 800761c:	4302      	orrs	r2, r0
 800761e:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8007622:	071c      	lsls	r4, r3, #28
 8007624:	d508      	bpl.n	8007638 <HAL_RCCEx_PeriphCLKConfig+0x60>
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 8007626:	4995      	ldr	r1, [pc, #596]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007628:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 800762a:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800762e:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8007632:	4302      	orrs	r2, r0
 8007634:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8007638:	06d8      	lsls	r0, r3, #27
 800763a:	d508      	bpl.n	800764e <HAL_RCCEx_PeriphCLKConfig+0x76>
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 800763c:	498f      	ldr	r1, [pc, #572]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800763e:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 8007640:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007644:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8007648:	4302      	orrs	r2, r0
 800764a:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 800764e:	0099      	lsls	r1, r3, #2
 8007650:	d508      	bpl.n	8007664 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 8007652:	498a      	ldr	r1, [pc, #552]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007654:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 8007656:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800765a:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800765e:	4302      	orrs	r2, r0
 8007660:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007664:	069a      	lsls	r2, r3, #26
 8007666:	d508      	bpl.n	800767a <HAL_RCCEx_PeriphCLKConfig+0xa2>
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 8007668:	4984      	ldr	r1, [pc, #528]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800766a:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 800766c:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007670:	f022 0207 	bic.w	r2, r2, #7
 8007674:	4302      	orrs	r2, r0
 8007676:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800767a:	065f      	lsls	r7, r3, #25
 800767c:	d508      	bpl.n	8007690 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 800767e:	497f      	ldr	r1, [pc, #508]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007680:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 8007682:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007686:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800768a:	4302      	orrs	r2, r0
 800768c:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007690:	061e      	lsls	r6, r3, #24
 8007692:	d508      	bpl.n	80076a6 <HAL_RCCEx_PeriphCLKConfig+0xce>
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 8007694:	4979      	ldr	r1, [pc, #484]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007696:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 8007698:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800769c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80076a0:	4302      	orrs	r2, r0
 80076a2:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 80076a6:	05dc      	lsls	r4, r3, #23
 80076a8:	d508      	bpl.n	80076bc <HAL_RCCEx_PeriphCLKConfig+0xe4>
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 80076aa:	4974      	ldr	r1, [pc, #464]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076ac:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 80076ae:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80076b2:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80076b6:	4302      	orrs	r2, r0
 80076b8:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80076bc:	0258      	lsls	r0, r3, #9
 80076be:	d508      	bpl.n	80076d2 <HAL_RCCEx_PeriphCLKConfig+0xfa>
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 80076c0:	496e      	ldr	r1, [pc, #440]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076c2:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 80076c4:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80076c8:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 80076cc:	4302      	orrs	r2, r0
 80076ce:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 80076d2:	0059      	lsls	r1, r3, #1
 80076d4:	d508      	bpl.n	80076e8 <HAL_RCCEx_PeriphCLKConfig+0x110>
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 80076d6:	4969      	ldr	r1, [pc, #420]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076d8:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 80076da:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80076de:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 80076e2:	4302      	orrs	r2, r0
 80076e4:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 80076e8:	2b00      	cmp	r3, #0
 80076ea:	da09      	bge.n	8007700 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 80076ec:	4963      	ldr	r1, [pc, #396]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076ee:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 80076f2:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80076f6:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 80076fa:	4302      	orrs	r2, r0
 80076fc:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8007700:	059a      	lsls	r2, r3, #22
 8007702:	d509      	bpl.n	8007718 <HAL_RCCEx_PeriphCLKConfig+0x140>
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 8007704:	495d      	ldr	r1, [pc, #372]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007706:	f8d5 0084 	ldr.w	r0, [r5, #132]	@ 0x84
 800770a:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800770e:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8007712:	4302      	orrs	r2, r0
 8007714:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8007718:	055f      	lsls	r7, r3, #21
 800771a:	d509      	bpl.n	8007730 <HAL_RCCEx_PeriphCLKConfig+0x158>
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 800771c:	4957      	ldr	r1, [pc, #348]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800771e:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 8007722:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007726:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 800772a:	4302      	orrs	r2, r0
 800772c:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 8007730:	051e      	lsls	r6, r3, #20
 8007732:	d509      	bpl.n	8007748 <HAL_RCCEx_PeriphCLKConfig+0x170>
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 8007734:	4951      	ldr	r1, [pc, #324]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007736:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 800773a:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800773e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8007742:	4302      	orrs	r2, r0
 8007744:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8007748:	049c      	lsls	r4, r3, #18
 800774a:	d527      	bpl.n	800779c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    switch (pPeriphClkInit->Sai1ClockSelection)
 800774c:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 8007750:	2b40      	cmp	r3, #64	@ 0x40
 8007752:	d025      	beq.n	80077a0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8007754:	d814      	bhi.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8007756:	b34b      	cbz	r3, 80077ac <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8007758:	2b20      	cmp	r3, #32
 800775a:	d02f      	beq.n	80077bc <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800775c:	2601      	movs	r6, #1
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 800775e:	682b      	ldr	r3, [r5, #0]
 8007760:	0458      	lsls	r0, r3, #17
 8007762:	d50b      	bpl.n	800777c <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    switch (pPeriphClkInit->Sai2ClockSelection)
 8007764:	f8d5 30a0 	ldr.w	r3, [r5, #160]	@ 0xa0
 8007768:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800776c:	d058      	beq.n	8007820 <HAL_RCCEx_PeriphCLKConfig+0x248>
 800776e:	d82a      	bhi.n	80077c6 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8007770:	2b00      	cmp	r3, #0
 8007772:	d05b      	beq.n	800782c <HAL_RCCEx_PeriphCLKConfig+0x254>
 8007774:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007778:	d05e      	beq.n	8007838 <HAL_RCCEx_PeriphCLKConfig+0x260>
 800777a:	2601      	movs	r6, #1
 800777c:	4634      	mov	r4, r6
 800777e:	e035      	b.n	80077ec <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007780:	2b60      	cmp	r3, #96	@ 0x60
 8007782:	d001      	beq.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 8007784:	2b80      	cmp	r3, #128	@ 0x80
 8007786:	d1e9      	bne.n	800775c <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8007788:	4a3c      	ldr	r2, [pc, #240]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800778a:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
 800778e:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007792:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 8007796:	430b      	orrs	r3, r1
 8007798:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 800779c:	2600      	movs	r6, #0
 800779e:	e7de      	b.n	800775e <HAL_RCCEx_PeriphCLKConfig+0x186>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80077a0:	4a36      	ldr	r2, [pc, #216]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80077a2:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80077a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80077a8:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 80077aa:	e7ed      	b.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80077ac:	f105 0008 	add.w	r0, r5, #8
 80077b0:	f7ff fe3a 	bl	8007428 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077b4:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 80077b6:	2800      	cmp	r0, #0
 80077b8:	d1d1      	bne.n	800775e <HAL_RCCEx_PeriphCLKConfig+0x186>
 80077ba:	e7e5      	b.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077bc:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80077c0:	f7ff fe9e 	bl	8007500 <RCCEx_PLL3_Config>
 80077c4:	e7f6      	b.n	80077b4 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (pPeriphClkInit->Sai2ClockSelection)
 80077c6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80077ca:	d002      	beq.n	80077d2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80077cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80077d0:	d1d3      	bne.n	800777a <HAL_RCCEx_PeriphCLKConfig+0x1a2>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80077d2:	4634      	mov	r4, r6
    if (ret == HAL_OK)
 80077d4:	2c00      	cmp	r4, #0
 80077d6:	d134      	bne.n	8007842 <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 80077d8:	4a28      	ldr	r2, [pc, #160]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80077da:	f8d5 10a0 	ldr.w	r1, [r5, #160]	@ 0xa0
 80077de:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 80077e2:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 80077e6:	430b      	orrs	r3, r1
 80077e8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 80077ec:	682b      	ldr	r3, [r5, #0]
 80077ee:	0419      	lsls	r1, r3, #16
 80077f0:	d50a      	bpl.n	8007808 <HAL_RCCEx_PeriphCLKConfig+0x230>
    switch (pPeriphClkInit->AdcDacClockSelection)
 80077f2:	f8d5 30b4 	ldr.w	r3, [r5, #180]	@ 0xb4
 80077f6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80077fa:	d036      	beq.n	800786a <HAL_RCCEx_PeriphCLKConfig+0x292>
 80077fc:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007800:	d821      	bhi.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 8007802:	b332      	cbz	r2, 8007852 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007804:	2601      	movs	r6, #1
 8007806:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 8007808:	682b      	ldr	r3, [r5, #0]
 800780a:	03da      	lsls	r2, r3, #15
 800780c:	d548      	bpl.n	80078a0 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 800780e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007812:	2b04      	cmp	r3, #4
 8007814:	d85a      	bhi.n	80078cc <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8007816:	e8df f003 	tbb	[pc, r3]
 800781a:	3338      	.short	0x3338
 800781c:	3853      	.short	0x3853
 800781e:	38          	.byte	0x38
 800781f:	00          	.byte	0x00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007820:	4a16      	ldr	r2, [pc, #88]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007822:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007824:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007828:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 800782a:	e7d2      	b.n	80077d2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800782c:	f105 0008 	add.w	r0, r5, #8
 8007830:	f7ff fdfa 	bl	8007428 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007834:	4604      	mov	r4, r0
        break;
 8007836:	e7cd      	b.n	80077d4 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007838:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 800783c:	f7ff fe60 	bl	8007500 <RCCEx_PLL3_Config>
 8007840:	e7f8      	b.n	8007834 <HAL_RCCEx_PeriphCLKConfig+0x25c>
 8007842:	4626      	mov	r6, r4
 8007844:	e7d2      	b.n	80077ec <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->AdcDacClockSelection)
 8007846:	f5b2 4f80 	cmp.w	r2, #16384	@ 0x4000
 800784a:	d002      	beq.n	8007852 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 800784c:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007850:	d1d8      	bne.n	8007804 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    if (ret == HAL_OK)
 8007852:	b984      	cbnz	r4, 8007876 <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 8007854:	4a09      	ldr	r2, [pc, #36]	@ (800787c <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007856:	f8d5 10b4 	ldr.w	r1, [r5, #180]	@ 0xb4
 800785a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 800785e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007862:	430b      	orrs	r3, r1
 8007864:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8007868:	e7ce      	b.n	8007808 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800786a:	f105 0008 	add.w	r0, r5, #8
 800786e:	f7ff fddb 	bl	8007428 <RCCEx_PLL2_Config>
 8007872:	4604      	mov	r4, r0
        break;
 8007874:	e7ed      	b.n	8007852 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007876:	4626      	mov	r6, r4
 8007878:	e7c6      	b.n	8007808 <HAL_RCCEx_PeriphCLKConfig+0x230>
 800787a:	bf00      	nop
 800787c:	46020c00 	.word	0x46020c00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007880:	4a69      	ldr	r2, [pc, #420]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007882:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007884:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007888:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 800788a:	bb14      	cbnz	r4, 80078d2 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 800788c:	4a66      	ldr	r2, [pc, #408]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800788e:	f8d5 1094 	ldr.w	r1, [r5, #148]	@ 0x94
 8007892:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007896:	f023 0307 	bic.w	r3, r3, #7
 800789a:	430b      	orrs	r3, r1
 800789c:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 80078a0:	682b      	ldr	r3, [r5, #0]
 80078a2:	039b      	lsls	r3, r3, #14
 80078a4:	d529      	bpl.n	80078fa <HAL_RCCEx_PeriphCLKConfig+0x322>
    switch (pPeriphClkInit->Adf1ClockSelection)
 80078a6:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80078aa:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80078ae:	d07d      	beq.n	80079ac <HAL_RCCEx_PeriphCLKConfig+0x3d4>
 80078b0:	d811      	bhi.n	80078d6 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 80078b2:	b1b3      	cbz	r3, 80078e2 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80078b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80078b8:	d072      	beq.n	80079a0 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 80078ba:	2601      	movs	r6, #1
 80078bc:	4634      	mov	r4, r6
 80078be:	e01c      	b.n	80078fa <HAL_RCCEx_PeriphCLKConfig+0x322>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80078c0:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80078c4:	f7ff fe1c 	bl	8007500 <RCCEx_PLL3_Config>
 80078c8:	4604      	mov	r4, r0
        break;
 80078ca:	e7de      	b.n	800788a <HAL_RCCEx_PeriphCLKConfig+0x2b2>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 80078cc:	2601      	movs	r6, #1
 80078ce:	4634      	mov	r4, r6
 80078d0:	e7e6      	b.n	80078a0 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 80078d2:	4626      	mov	r6, r4
 80078d4:	e7e4      	b.n	80078a0 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Adf1ClockSelection)
 80078d6:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80078da:	d002      	beq.n	80078e2 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80078dc:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80078e0:	d1eb      	bne.n	80078ba <HAL_RCCEx_PeriphCLKConfig+0x2e2>
    if (ret == HAL_OK)
 80078e2:	2c00      	cmp	r4, #0
 80078e4:	d168      	bne.n	80079b8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 80078e6:	4a50      	ldr	r2, [pc, #320]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80078e8:	f8d5 1098 	ldr.w	r1, [r5, #152]	@ 0x98
 80078ec:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80078f0:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80078f4:	430b      	orrs	r3, r1
 80078f6:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80078fa:	682b      	ldr	r3, [r5, #0]
 80078fc:	035f      	lsls	r7, r3, #13
 80078fe:	d53c      	bpl.n	800797a <HAL_RCCEx_PeriphCLKConfig+0x3a2>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007900:	4b49      	ldr	r3, [pc, #292]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007902:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007906:	0750      	lsls	r0, r2, #29
 8007908:	d458      	bmi.n	80079bc <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      pwrclkchanged = SET;
 800790a:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800790c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007910:	f042 0204 	orr.w	r2, r2, #4
 8007914:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8007918:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800791c:	f003 0304 	and.w	r3, r3, #4
 8007920:	9301      	str	r3, [sp, #4]
 8007922:	9b01      	ldr	r3, [sp, #4]
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8007924:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 8007a2c <HAL_RCCEx_PeriphCLKConfig+0x454>
 8007928:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 800792c:	f043 0301 	orr.w	r3, r3, #1
 8007930:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
    tickstart = HAL_GetTick();
 8007934:	f7fc f9da 	bl	8003cec <HAL_GetTick>
 8007938:	4681      	mov	r9, r0
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 800793a:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 800793e:	07d9      	lsls	r1, r3, #31
 8007940:	d53e      	bpl.n	80079c0 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    if (ret == HAL_OK)
 8007942:	2c00      	cmp	r4, #0
 8007944:	d16d      	bne.n	8007a22 <HAL_RCCEx_PeriphCLKConfig+0x44a>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8007946:	4b38      	ldr	r3, [pc, #224]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007948:	f8d5 20d0 	ldr.w	r2, [r5, #208]	@ 0xd0
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 800794c:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007950:	f411 7140 	ands.w	r1, r1, #768	@ 0x300
 8007954:	d13d      	bne.n	80079d2 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 8007956:	4a34      	ldr	r2, [pc, #208]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007958:	f8d5 10d0 	ldr.w	r1, [r5, #208]	@ 0xd0
 800795c:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8007960:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007964:	430b      	orrs	r3, r1
 8007966:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    if (pwrclkchanged == SET)
 800796a:	b137      	cbz	r7, 800797a <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      __HAL_RCC_PWR_CLK_DISABLE();
 800796c:	4a2e      	ldr	r2, [pc, #184]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800796e:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8007972:	f023 0304 	bic.w	r3, r3, #4
 8007976:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 800797a:	682b      	ldr	r3, [r5, #0]
 800797c:	02df      	lsls	r7, r3, #11
 800797e:	d567      	bpl.n	8007a50 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->IclkClockSelection)
 8007980:	f8d5 30ac 	ldr.w	r3, [r5, #172]	@ 0xac
 8007984:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007988:	f000 8165 	beq.w	8007c56 <HAL_RCCEx_PeriphCLKConfig+0x67e>
 800798c:	d850      	bhi.n	8007a30 <HAL_RCCEx_PeriphCLKConfig+0x458>
 800798e:	2b00      	cmp	r3, #0
 8007990:	d051      	beq.n	8007a36 <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007992:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8007996:	f000 8158 	beq.w	8007c4a <HAL_RCCEx_PeriphCLKConfig+0x672>
 800799a:	2601      	movs	r6, #1
 800799c:	4634      	mov	r4, r6
 800799e:	e057      	b.n	8007a50 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80079a0:	4a21      	ldr	r2, [pc, #132]	@ (8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80079a2:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80079a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80079a8:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80079aa:	e79a      	b.n	80078e2 <HAL_RCCEx_PeriphCLKConfig+0x30a>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80079ac:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80079b0:	f7ff fda6 	bl	8007500 <RCCEx_PLL3_Config>
 80079b4:	4604      	mov	r4, r0
        break;
 80079b6:	e794      	b.n	80078e2 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80079b8:	4626      	mov	r6, r4
 80079ba:	e79e      	b.n	80078fa <HAL_RCCEx_PeriphCLKConfig+0x322>
    FlagStatus       pwrclkchanged = RESET;
 80079bc:	2700      	movs	r7, #0
 80079be:	e7b1      	b.n	8007924 <HAL_RCCEx_PeriphCLKConfig+0x34c>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80079c0:	f7fc f994 	bl	8003cec <HAL_GetTick>
 80079c4:	eba0 0009 	sub.w	r0, r0, r9
 80079c8:	2802      	cmp	r0, #2
 80079ca:	d9b6      	bls.n	800793a <HAL_RCCEx_PeriphCLKConfig+0x362>
        ret = HAL_TIMEOUT;
 80079cc:	2603      	movs	r6, #3
 80079ce:	4634      	mov	r4, r6
 80079d0:	e7cb      	b.n	800796a <HAL_RCCEx_PeriphCLKConfig+0x392>
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80079d2:	4291      	cmp	r1, r2
 80079d4:	d011      	beq.n	80079fa <HAL_RCCEx_PeriphCLKConfig+0x422>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80079d6:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_FORCE();
 80079da:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80079de:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 80079e2:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 80079e6:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 80079ea:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 80079ee:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 80079f2:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        RCC->BDCR = tmpregister;
 80079f6:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 80079fa:	07d2      	lsls	r2, r2, #31
 80079fc:	d5ab      	bpl.n	8007956 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        tickstart = HAL_GetTick();
 80079fe:	f7fc f975 	bl	8003cec <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007a02:	f241 3a88 	movw	sl, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8007a06:	4680      	mov	r8, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007a08:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 8007a28 <HAL_RCCEx_PeriphCLKConfig+0x450>
 8007a0c:	f8d9 30f0 	ldr.w	r3, [r9, #240]	@ 0xf0
 8007a10:	079b      	lsls	r3, r3, #30
 8007a12:	d4a0      	bmi.n	8007956 <HAL_RCCEx_PeriphCLKConfig+0x37e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007a14:	f7fc f96a 	bl	8003cec <HAL_GetTick>
 8007a18:	eba0 0008 	sub.w	r0, r0, r8
 8007a1c:	4550      	cmp	r0, sl
 8007a1e:	d9f5      	bls.n	8007a0c <HAL_RCCEx_PeriphCLKConfig+0x434>
 8007a20:	e7d4      	b.n	80079cc <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8007a22:	4626      	mov	r6, r4
 8007a24:	e7a1      	b.n	800796a <HAL_RCCEx_PeriphCLKConfig+0x392>
 8007a26:	bf00      	nop
 8007a28:	46020c00 	.word	0x46020c00
 8007a2c:	46020800 	.word	0x46020800
    switch (pPeriphClkInit->IclkClockSelection)
 8007a30:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 8007a34:	d1b1      	bne.n	800799a <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    if (ret == HAL_OK)
 8007a36:	2c00      	cmp	r4, #0
 8007a38:	f040 8113 	bne.w	8007c62 <HAL_RCCEx_PeriphCLKConfig+0x68a>
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 8007a3c:	4ab8      	ldr	r2, [pc, #736]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a3e:	f8d5 10ac 	ldr.w	r1, [r5, #172]	@ 0xac
 8007a42:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007a46:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8007a4a:	430b      	orrs	r3, r1
 8007a4c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007a50:	682b      	ldr	r3, [r5, #0]
 8007a52:	0318      	lsls	r0, r3, #12
 8007a54:	d513      	bpl.n	8007a7e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (pPeriphClkInit->RngClockSelection)
 8007a56:	f8d5 10a4 	ldr.w	r1, [r5, #164]	@ 0xa4
 8007a5a:	f431 5280 	bics.w	r2, r1, #4096	@ 0x1000
 8007a5e:	d003      	beq.n	8007a68 <HAL_RCCEx_PeriphCLKConfig+0x490>
 8007a60:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
 8007a64:	f040 80ff 	bne.w	8007c66 <HAL_RCCEx_PeriphCLKConfig+0x68e>
    if (ret == HAL_OK)
 8007a68:	2c00      	cmp	r4, #0
 8007a6a:	f040 80ff 	bne.w	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x694>
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8007a6e:	48ac      	ldr	r0, [pc, #688]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a70:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
 8007a74:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007a78:	430a      	orrs	r2, r1
 8007a7a:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 8007a7e:	04d9      	lsls	r1, r3, #19
 8007a80:	d509      	bpl.n	8007a96 <HAL_RCCEx_PeriphCLKConfig+0x4be>
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 8007a82:	49a7      	ldr	r1, [pc, #668]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a84:	f8d5 00a8 	ldr.w	r0, [r5, #168]	@ 0xa8
 8007a88:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007a8c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007a90:	4302      	orrs	r2, r0
 8007a92:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 8007a96:	029a      	lsls	r2, r3, #10
 8007a98:	d510      	bpl.n	8007abc <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 8007a9a:	f8d5 00b0 	ldr.w	r0, [r5, #176]	@ 0xb0
 8007a9e:	49a0      	ldr	r1, [pc, #640]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007aa0:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007aa4:	bf02      	ittt	eq
 8007aa6:	6a8a      	ldreq	r2, [r1, #40]	@ 0x28
 8007aa8:	f442 3280 	orreq.w	r2, r2, #65536	@ 0x10000
 8007aac:	628a      	streq	r2, [r1, #40]	@ 0x28
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 8007aae:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007ab2:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007ab6:	4302      	orrs	r2, r0
 8007ab8:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8007abc:	021f      	lsls	r7, r3, #8
 8007abe:	d509      	bpl.n	8007ad4 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8007ac0:	4997      	ldr	r1, [pc, #604]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ac2:	f8d5 00c4 	ldr.w	r0, [r5, #196]	@ 0xc4
 8007ac6:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007aca:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007ace:	4302      	orrs	r2, r0
 8007ad0:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8007ad4:	01d8      	lsls	r0, r3, #7
 8007ad6:	d509      	bpl.n	8007aec <HAL_RCCEx_PeriphCLKConfig+0x514>
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8007ad8:	4991      	ldr	r1, [pc, #580]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ada:	f8d5 00c8 	ldr.w	r0, [r5, #200]	@ 0xc8
 8007ade:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007ae2:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007ae6:	4302      	orrs	r2, r0
 8007ae8:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8007aec:	0199      	lsls	r1, r3, #6
 8007aee:	d509      	bpl.n	8007b04 <HAL_RCCEx_PeriphCLKConfig+0x52c>
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8007af0:	498b      	ldr	r1, [pc, #556]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007af2:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 8007af6:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007afa:	f022 0218 	bic.w	r2, r2, #24
 8007afe:	4302      	orrs	r2, r0
 8007b00:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007b04:	015a      	lsls	r2, r3, #5
 8007b06:	d517      	bpl.n	8007b38 <HAL_RCCEx_PeriphCLKConfig+0x560>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 8007b08:	f8d5 30bc 	ldr.w	r3, [r5, #188]	@ 0xbc
 8007b0c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007b10:	f040 80ae 	bne.w	8007c70 <HAL_RCCEx_PeriphCLKConfig+0x698>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007b14:	4a82      	ldr	r2, [pc, #520]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b16:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007b18:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007b1c:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007b1e:	2c00      	cmp	r4, #0
 8007b20:	f040 80b0 	bne.w	8007c84 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8007b24:	4a7e      	ldr	r2, [pc, #504]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b26:	f8d5 10bc 	ldr.w	r1, [r5, #188]	@ 0xbc
 8007b2a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007b2e:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007b32:	430b      	orrs	r3, r1
 8007b34:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 8007b38:	686b      	ldr	r3, [r5, #4]
 8007b3a:	07db      	lsls	r3, r3, #31
 8007b3c:	d510      	bpl.n	8007b60 <HAL_RCCEx_PeriphCLKConfig+0x588>
    switch (pPeriphClkInit->HspiClockSelection)
 8007b3e:	f8d5 30c0 	ldr.w	r3, [r5, #192]	@ 0xc0
 8007b42:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007b46:	f000 80b9 	beq.w	8007cbc <HAL_RCCEx_PeriphCLKConfig+0x6e4>
 8007b4a:	f200 809d 	bhi.w	8007c88 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
 8007b4e:	2b00      	cmp	r3, #0
 8007b50:	f000 80a8 	beq.w	8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007b54:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007b58:	f000 809f 	beq.w	8007c9a <HAL_RCCEx_PeriphCLKConfig+0x6c2>
 8007b5c:	2601      	movs	r6, #1
 8007b5e:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 8007b60:	682b      	ldr	r3, [r5, #0]
 8007b62:	011f      	lsls	r7, r3, #4
 8007b64:	d50e      	bpl.n	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
    switch (pPeriphClkInit->Fdcan1ClockSelection)
 8007b66:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8007b6a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007b6e:	f000 80ad 	beq.w	8007ccc <HAL_RCCEx_PeriphCLKConfig+0x6f4>
 8007b72:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007b76:	f000 80ba 	beq.w	8007cee <HAL_RCCEx_PeriphCLKConfig+0x716>
 8007b7a:	2b00      	cmp	r3, #0
 8007b7c:	f000 80ab 	beq.w	8007cd6 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007b80:	2601      	movs	r6, #1
 8007b82:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 8007b84:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007b88:	00d8      	lsls	r0, r3, #3
 8007b8a:	d509      	bpl.n	8007ba0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 8007b8c:	4a64      	ldr	r2, [pc, #400]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b8e:	f8d5 00b8 	ldr.w	r0, [r5, #184]	@ 0xb8
 8007b92:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007b96:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007b9a:	4303      	orrs	r3, r0
 8007b9c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007ba0:	0789      	lsls	r1, r1, #30
 8007ba2:	d51a      	bpl.n	8007bda <HAL_RCCEx_PeriphCLKConfig+0x602>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007ba4:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 8007ba8:	2b00      	cmp	r3, #0
 8007baa:	f000 80a8 	beq.w	8007cfe <HAL_RCCEx_PeriphCLKConfig+0x726>
 8007bae:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007bb2:	f040 80a9 	bne.w	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x730>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007bb6:	f105 0008 	add.w	r0, r5, #8
 8007bba:	f7ff fc35 	bl	8007428 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007bbe:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007bc0:	2800      	cmp	r0, #0
 8007bc2:	f040 80a4 	bne.w	8007d0e <HAL_RCCEx_PeriphCLKConfig+0x736>
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8007bc6:	4a56      	ldr	r2, [pc, #344]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bc8:	f8d5 10d4 	ldr.w	r1, [r5, #212]	@ 0xd4
 8007bcc:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007bd0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007bd4:	430b      	orrs	r3, r1
 8007bd6:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8007bda:	686b      	ldr	r3, [r5, #4]
 8007bdc:	075a      	lsls	r2, r3, #29
 8007bde:	d514      	bpl.n	8007c0a <HAL_RCCEx_PeriphCLKConfig+0x632>
    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8007be0:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
 8007be4:	b923      	cbnz	r3, 8007bf0 <HAL_RCCEx_PeriphCLKConfig+0x618>
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007be6:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007bea:	f7ff fc89 	bl	8007500 <RCCEx_PLL3_Config>
 8007bee:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007bf0:	2c00      	cmp	r4, #0
 8007bf2:	f040 808e 	bne.w	8007d12 <HAL_RCCEx_PeriphCLKConfig+0x73a>
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 8007bf6:	4a4a      	ldr	r2, [pc, #296]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bf8:	f8d5 10d8 	ldr.w	r1, [r5, #216]	@ 0xd8
 8007bfc:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007c00:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007c04:	430b      	orrs	r3, r1
 8007c06:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 8007c0a:	686b      	ldr	r3, [r5, #4]
 8007c0c:	071b      	lsls	r3, r3, #28
 8007c0e:	d517      	bpl.n	8007c40 <HAL_RCCEx_PeriphCLKConfig+0x668>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007c10:	f8d5 20dc 	ldr.w	r2, [r5, #220]	@ 0xdc
 8007c14:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8007c18:	d009      	beq.n	8007c2e <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007c1a:	d87c      	bhi.n	8007d16 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8007c1c:	b13a      	cbz	r2, 8007c2e <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007c1e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8007c22:	d17b      	bne.n	8007d1c <HAL_RCCEx_PeriphCLKConfig+0x744>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007c24:	493e      	ldr	r1, [pc, #248]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c26:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8007c28:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007c2c:	628b      	str	r3, [r1, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c2e:	b944      	cbnz	r4, 8007c42 <HAL_RCCEx_PeriphCLKConfig+0x66a>
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 8007c30:	493b      	ldr	r1, [pc, #236]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c32:	f8d1 30e4 	ldr.w	r3, [r1, #228]	@ 0xe4
 8007c36:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8007c3a:	4313      	orrs	r3, r2
 8007c3c:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 8007c40:	4634      	mov	r4, r6
}
 8007c42:	4620      	mov	r0, r4
 8007c44:	b002      	add	sp, #8
 8007c46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c4a:	f105 0008 	add.w	r0, r5, #8
 8007c4e:	f7ff fbeb 	bl	8007428 <RCCEx_PLL2_Config>
 8007c52:	4604      	mov	r4, r0
        break;
 8007c54:	e6ef      	b.n	8007a36 <HAL_RCCEx_PeriphCLKConfig+0x45e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c56:	4a32      	ldr	r2, [pc, #200]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c58:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c5a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c5e:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007c60:	e6e9      	b.n	8007a36 <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007c62:	4626      	mov	r6, r4
 8007c64:	e6f4      	b.n	8007a50 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->RngClockSelection)
 8007c66:	2601      	movs	r6, #1
 8007c68:	4634      	mov	r4, r6
 8007c6a:	e708      	b.n	8007a7e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8007c6c:	4626      	mov	r6, r4
 8007c6e:	e706      	b.n	8007a7e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 8007c70:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007c74:	f47f af53 	bne.w	8007b1e <HAL_RCCEx_PeriphCLKConfig+0x546>
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c78:	f105 0008 	add.w	r0, r5, #8
 8007c7c:	f7ff fbd4 	bl	8007428 <RCCEx_PLL2_Config>
 8007c80:	4604      	mov	r4, r0
 8007c82:	e74c      	b.n	8007b1e <HAL_RCCEx_PeriphCLKConfig+0x546>
 8007c84:	4626      	mov	r6, r4
 8007c86:	e757      	b.n	8007b38 <HAL_RCCEx_PeriphCLKConfig+0x560>
    switch (pPeriphClkInit->HspiClockSelection)
 8007c88:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8007c8c:	f47f af66 	bne.w	8007b5c <HAL_RCCEx_PeriphCLKConfig+0x584>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c90:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007c94:	f7ff fc34 	bl	8007500 <RCCEx_PLL3_Config>
 8007c98:	e014      	b.n	8007cc4 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c9a:	4a21      	ldr	r2, [pc, #132]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c9c:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c9e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007ca2:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007ca4:	b984      	cbnz	r4, 8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x6f0>
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 8007ca6:	4a1e      	ldr	r2, [pc, #120]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ca8:	f8d5 10c0 	ldr.w	r1, [r5, #192]	@ 0xc0
 8007cac:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007cb0:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8007cb4:	430b      	orrs	r3, r1
 8007cb6:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8007cba:	e751      	b.n	8007b60 <HAL_RCCEx_PeriphCLKConfig+0x588>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007cbc:	f105 0008 	add.w	r0, r5, #8
 8007cc0:	f7ff fbb2 	bl	8007428 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007cc4:	4604      	mov	r4, r0
        break;
 8007cc6:	e7ed      	b.n	8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007cc8:	4626      	mov	r6, r4
 8007cca:	e749      	b.n	8007b60 <HAL_RCCEx_PeriphCLKConfig+0x588>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ccc:	4a14      	ldr	r2, [pc, #80]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007cce:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007cd0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007cd4:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007cd6:	b984      	cbnz	r4, 8007cfa <HAL_RCCEx_PeriphCLKConfig+0x722>
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 8007cd8:	4a11      	ldr	r2, [pc, #68]	@ (8007d20 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007cda:	f8d5 1090 	ldr.w	r1, [r5, #144]	@ 0x90
 8007cde:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007ce2:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8007ce6:	430b      	orrs	r3, r1
 8007ce8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8007cec:	e74a      	b.n	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007cee:	f105 0008 	add.w	r0, r5, #8
 8007cf2:	f7ff fb99 	bl	8007428 <RCCEx_PLL2_Config>
 8007cf6:	4604      	mov	r4, r0
        break;
 8007cf8:	e7ed      	b.n	8007cd6 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007cfa:	4626      	mov	r6, r4
 8007cfc:	e742      	b.n	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007cfe:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007d02:	f7ff fbfd 	bl	8007500 <RCCEx_PLL3_Config>
 8007d06:	e75a      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007d08:	2601      	movs	r6, #1
 8007d0a:	4634      	mov	r4, r6
 8007d0c:	e765      	b.n	8007bda <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007d0e:	4606      	mov	r6, r0
 8007d10:	e763      	b.n	8007bda <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007d12:	4626      	mov	r6, r4
 8007d14:	e779      	b.n	8007c0a <HAL_RCCEx_PeriphCLKConfig+0x632>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007d16:	f1b2 4f40 	cmp.w	r2, #3221225472	@ 0xc0000000
 8007d1a:	e782      	b.n	8007c22 <HAL_RCCEx_PeriphCLKConfig+0x64a>
 8007d1c:	2401      	movs	r4, #1
 8007d1e:	e790      	b.n	8007c42 <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8007d20:	46020c00 	.word	0x46020c00

08007d24 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007d24:	4770      	bx	lr
	...

08007d28 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007d28:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007d2c:	2b01      	cmp	r3, #1
 8007d2e:	d145      	bne.n	8007dbc <HAL_TIM_Base_Start_IT+0x94>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007d30:	2302      	movs	r3, #2
 8007d32:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007d36:	6803      	ldr	r3, [r0, #0]
 8007d38:	68da      	ldr	r2, [r3, #12]
 8007d3a:	f042 0201 	orr.w	r2, r2, #1
 8007d3e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007d40:	4a1f      	ldr	r2, [pc, #124]	@ (8007dc0 <HAL_TIM_Base_Start_IT+0x98>)
 8007d42:	4293      	cmp	r3, r2
 8007d44:	d02c      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d46:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d4a:	4293      	cmp	r3, r2
 8007d4c:	d028      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d4e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007d52:	d025      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d54:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007d58:	d022      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d5a:	4a1a      	ldr	r2, [pc, #104]	@ (8007dc4 <HAL_TIM_Base_Start_IT+0x9c>)
 8007d5c:	4293      	cmp	r3, r2
 8007d5e:	d01f      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d60:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d64:	4293      	cmp	r3, r2
 8007d66:	d01b      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d68:	4a17      	ldr	r2, [pc, #92]	@ (8007dc8 <HAL_TIM_Base_Start_IT+0xa0>)
 8007d6a:	4293      	cmp	r3, r2
 8007d6c:	d018      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d6e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d72:	4293      	cmp	r3, r2
 8007d74:	d014      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d76:	4a15      	ldr	r2, [pc, #84]	@ (8007dcc <HAL_TIM_Base_Start_IT+0xa4>)
 8007d78:	4293      	cmp	r3, r2
 8007d7a:	d011      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d7c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d80:	4293      	cmp	r3, r2
 8007d82:	d00d      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d84:	4a12      	ldr	r2, [pc, #72]	@ (8007dd0 <HAL_TIM_Base_Start_IT+0xa8>)
 8007d86:	4293      	cmp	r3, r2
 8007d88:	d00a      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d8a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d8e:	4293      	cmp	r3, r2
 8007d90:	d006      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d92:	4a10      	ldr	r2, [pc, #64]	@ (8007dd4 <HAL_TIM_Base_Start_IT+0xac>)
 8007d94:	4293      	cmp	r3, r2
 8007d96:	d003      	beq.n	8007da0 <HAL_TIM_Base_Start_IT+0x78>
 8007d98:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d9c:	4293      	cmp	r3, r2
 8007d9e:	d107      	bne.n	8007db0 <HAL_TIM_Base_Start_IT+0x88>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007da0:	6899      	ldr	r1, [r3, #8]
 8007da2:	4a0d      	ldr	r2, [pc, #52]	@ (8007dd8 <HAL_TIM_Base_Start_IT+0xb0>)
 8007da4:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007da6:	2a06      	cmp	r2, #6
 8007da8:	d006      	beq.n	8007db8 <HAL_TIM_Base_Start_IT+0x90>
 8007daa:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8007dae:	d003      	beq.n	8007db8 <HAL_TIM_Base_Start_IT+0x90>
    {
      __HAL_TIM_ENABLE(htim);
 8007db0:	681a      	ldr	r2, [r3, #0]
 8007db2:	f042 0201 	orr.w	r2, r2, #1
 8007db6:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007db8:	2000      	movs	r0, #0
 8007dba:	4770      	bx	lr
    return HAL_ERROR;
 8007dbc:	2001      	movs	r0, #1
}
 8007dbe:	4770      	bx	lr
 8007dc0:	40012c00 	.word	0x40012c00
 8007dc4:	40000400 	.word	0x40000400
 8007dc8:	40000800 	.word	0x40000800
 8007dcc:	40000c00 	.word	0x40000c00
 8007dd0:	40013400 	.word	0x40013400
 8007dd4:	40014000 	.word	0x40014000
 8007dd8:	00010007 	.word	0x00010007

08007ddc <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007ddc:	4770      	bx	lr

08007dde <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007dde:	4770      	bx	lr

08007de0 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007de0:	4770      	bx	lr

08007de2 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007de2:	4770      	bx	lr

08007de4 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007de4:	6803      	ldr	r3, [r0, #0]
{
 8007de6:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007de8:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007dea:	691e      	ldr	r6, [r3, #16]
{
 8007dec:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007dee:	07b2      	lsls	r2, r6, #30
 8007df0:	d50e      	bpl.n	8007e10 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007df2:	07a9      	lsls	r1, r5, #30
 8007df4:	d50c      	bpl.n	8007e10 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007df6:	f06f 0202 	mvn.w	r2, #2
 8007dfa:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007dfc:	2201      	movs	r2, #1
 8007dfe:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007e00:	699b      	ldr	r3, [r3, #24]
 8007e02:	079a      	lsls	r2, r3, #30
 8007e04:	f000 80a4 	beq.w	8007f50 <HAL_TIM_IRQHandler+0x16c>
          HAL_TIM_IC_CaptureCallback(htim);
 8007e08:	f7ff ffe9 	bl	8007dde <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e0c:	2300      	movs	r3, #0
 8007e0e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007e10:	0773      	lsls	r3, r6, #29
 8007e12:	d511      	bpl.n	8007e38 <HAL_TIM_IRQHandler+0x54>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007e14:	0768      	lsls	r0, r5, #29
 8007e16:	d50f      	bpl.n	8007e38 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007e18:	f06f 0204 	mvn.w	r2, #4
 8007e1c:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e1e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007e20:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007e22:	2202      	movs	r2, #2
 8007e24:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007e26:	699b      	ldr	r3, [r3, #24]
 8007e28:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007e2c:	f000 8096 	beq.w	8007f5c <HAL_TIM_IRQHandler+0x178>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e30:	f7ff ffd5 	bl	8007dde <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e34:	2300      	movs	r3, #0
 8007e36:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007e38:	0731      	lsls	r1, r6, #28
 8007e3a:	d510      	bpl.n	8007e5e <HAL_TIM_IRQHandler+0x7a>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007e3c:	072a      	lsls	r2, r5, #28
 8007e3e:	d50e      	bpl.n	8007e5e <HAL_TIM_IRQHandler+0x7a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007e40:	f06f 0208 	mvn.w	r2, #8
 8007e44:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e46:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007e48:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007e4a:	2204      	movs	r2, #4
 8007e4c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007e4e:	69db      	ldr	r3, [r3, #28]
 8007e50:	079b      	lsls	r3, r3, #30
 8007e52:	f000 8089 	beq.w	8007f68 <HAL_TIM_IRQHandler+0x184>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e56:	f7ff ffc2 	bl	8007dde <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e5a:	2300      	movs	r3, #0
 8007e5c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007e5e:	06f1      	lsls	r1, r6, #27
 8007e60:	d510      	bpl.n	8007e84 <HAL_TIM_IRQHandler+0xa0>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007e62:	06ea      	lsls	r2, r5, #27
 8007e64:	d50e      	bpl.n	8007e84 <HAL_TIM_IRQHandler+0xa0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007e66:	f06f 0210 	mvn.w	r2, #16
 8007e6a:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e6c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007e6e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007e70:	2208      	movs	r2, #8
 8007e72:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007e74:	69db      	ldr	r3, [r3, #28]
 8007e76:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007e7a:	d07b      	beq.n	8007f74 <HAL_TIM_IRQHandler+0x190>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e7c:	f7ff ffaf 	bl	8007dde <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e80:	2300      	movs	r3, #0
 8007e82:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007e84:	07f3      	lsls	r3, r6, #31
 8007e86:	d508      	bpl.n	8007e9a <HAL_TIM_IRQHandler+0xb6>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8007e88:	07e8      	lsls	r0, r5, #31
 8007e8a:	d506      	bpl.n	8007e9a <HAL_TIM_IRQHandler+0xb6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e8c:	f06f 0201 	mvn.w	r2, #1
 8007e90:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e92:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e94:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e96:	f7f8 fc9b 	bl	80007d0 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8007e9a:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
 8007e9e:	d008      	beq.n	8007eb2 <HAL_TIM_IRQHandler+0xce>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007ea0:	0629      	lsls	r1, r5, #24
 8007ea2:	d506      	bpl.n	8007eb2 <HAL_TIM_IRQHandler+0xce>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007ea4:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007ea8:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_BreakCallback(htim);
 8007eaa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007eac:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007eae:	f000 f952 	bl	8008156 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8007eb2:	05f2      	lsls	r2, r6, #23
 8007eb4:	d508      	bpl.n	8007ec8 <HAL_TIM_IRQHandler+0xe4>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007eb6:	062b      	lsls	r3, r5, #24
 8007eb8:	d506      	bpl.n	8007ec8 <HAL_TIM_IRQHandler+0xe4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007eba:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007ebe:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_Break2Callback(htim);
 8007ec0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007ec2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8007ec4:	f000 f948 	bl	8008158 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007ec8:	0670      	lsls	r0, r6, #25
 8007eca:	d508      	bpl.n	8007ede <HAL_TIM_IRQHandler+0xfa>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007ecc:	0669      	lsls	r1, r5, #25
 8007ece:	d506      	bpl.n	8007ede <HAL_TIM_IRQHandler+0xfa>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007ed0:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007ed4:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_TriggerCallback(htim);
 8007ed6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007ed8:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007eda:	f7ff ff82 	bl	8007de2 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007ede:	06b2      	lsls	r2, r6, #26
 8007ee0:	d508      	bpl.n	8007ef4 <HAL_TIM_IRQHandler+0x110>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007ee2:	06ab      	lsls	r3, r5, #26
 8007ee4:	d506      	bpl.n	8007ef4 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007ee6:	f06f 0220 	mvn.w	r2, #32
 8007eea:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_CommutCallback(htim);
 8007eec:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007eee:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8007ef0:	f000 f930 	bl	8008154 <HAL_TIMEx_CommutCallback>
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8007ef4:	02f0      	lsls	r0, r6, #11
 8007ef6:	d508      	bpl.n	8007f0a <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8007ef8:	02e9      	lsls	r1, r5, #11
 8007efa:	d506      	bpl.n	8007f0a <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007efc:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8007f00:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007f02:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007f04:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007f06:	f000 f928 	bl	800815a <HAL_TIMEx_EncoderIndexCallback>
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8007f0a:	02b2      	lsls	r2, r6, #10
 8007f0c:	d508      	bpl.n	8007f20 <HAL_TIM_IRQHandler+0x13c>
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8007f0e:	02ab      	lsls	r3, r5, #10
 8007f10:	d506      	bpl.n	8007f20 <HAL_TIM_IRQHandler+0x13c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007f12:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8007f16:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007f18:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007f1a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007f1c:	f000 f91e 	bl	800815c <HAL_TIMEx_DirectionChangeCallback>
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8007f20:	0270      	lsls	r0, r6, #9
 8007f22:	d508      	bpl.n	8007f36 <HAL_TIM_IRQHandler+0x152>
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8007f24:	0269      	lsls	r1, r5, #9
 8007f26:	d506      	bpl.n	8007f36 <HAL_TIM_IRQHandler+0x152>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007f28:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8007f2c:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007f2e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007f30:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007f32:	f000 f914 	bl	800815e <HAL_TIMEx_IndexErrorCallback>
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8007f36:	0232      	lsls	r2, r6, #8
 8007f38:	d522      	bpl.n	8007f80 <HAL_TIM_IRQHandler+0x19c>
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8007f3a:	022b      	lsls	r3, r5, #8
 8007f3c:	d520      	bpl.n	8007f80 <HAL_TIM_IRQHandler+0x19c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007f3e:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8007f42:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007f44:	4620      	mov	r0, r4
}
 8007f46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007f4a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007f4c:	f000 b908 	b.w	8008160 <HAL_TIMEx_TransitionErrorCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f50:	f7ff ff44 	bl	8007ddc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f54:	4620      	mov	r0, r4
 8007f56:	f7ff ff43 	bl	8007de0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f5a:	e757      	b.n	8007e0c <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f5c:	f7ff ff3e 	bl	8007ddc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f60:	4620      	mov	r0, r4
 8007f62:	f7ff ff3d 	bl	8007de0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f66:	e765      	b.n	8007e34 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f68:	f7ff ff38 	bl	8007ddc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f6c:	4620      	mov	r0, r4
 8007f6e:	f7ff ff37 	bl	8007de0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f72:	e772      	b.n	8007e5a <HAL_TIM_IRQHandler+0x76>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f74:	f7ff ff32 	bl	8007ddc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f78:	4620      	mov	r0, r4
 8007f7a:	f7ff ff31 	bl	8007de0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f7e:	e77f      	b.n	8007e80 <HAL_TIM_IRQHandler+0x9c>
}
 8007f80:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f84 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f84:	4a53      	ldr	r2, [pc, #332]	@ (80080d4 <TIM_Base_SetConfig+0x150>)
  tmpcr1 = TIMx->CR1;
 8007f86:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f88:	4290      	cmp	r0, r2
 8007f8a:	d025      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007f8c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f90:	4290      	cmp	r0, r2
 8007f92:	d021      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007f94:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007f98:	d01e      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007f9a:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007f9e:	d01b      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fa0:	4a4d      	ldr	r2, [pc, #308]	@ (80080d8 <TIM_Base_SetConfig+0x154>)
 8007fa2:	4290      	cmp	r0, r2
 8007fa4:	d018      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fa6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007faa:	4290      	cmp	r0, r2
 8007fac:	d014      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fae:	4a4b      	ldr	r2, [pc, #300]	@ (80080dc <TIM_Base_SetConfig+0x158>)
 8007fb0:	4290      	cmp	r0, r2
 8007fb2:	d011      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fb4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fb8:	4290      	cmp	r0, r2
 8007fba:	d00d      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fbc:	4a48      	ldr	r2, [pc, #288]	@ (80080e0 <TIM_Base_SetConfig+0x15c>)
 8007fbe:	4290      	cmp	r0, r2
 8007fc0:	d00a      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fc2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fc6:	4290      	cmp	r0, r2
 8007fc8:	d006      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fca:	4a46      	ldr	r2, [pc, #280]	@ (80080e4 <TIM_Base_SetConfig+0x160>)
 8007fcc:	4290      	cmp	r0, r2
 8007fce:	d003      	beq.n	8007fd8 <TIM_Base_SetConfig+0x54>
 8007fd0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fd4:	4290      	cmp	r0, r2
 8007fd6:	d12c      	bne.n	8008032 <TIM_Base_SetConfig+0xae>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007fd8:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007fda:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007fde:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007fe0:	4a3c      	ldr	r2, [pc, #240]	@ (80080d4 <TIM_Base_SetConfig+0x150>)
 8007fe2:	4290      	cmp	r0, r2
 8007fe4:	d03a      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8007fe6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fea:	4290      	cmp	r0, r2
 8007fec:	d036      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8007fee:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007ff2:	d033      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8007ff4:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007ff8:	d030      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8007ffa:	4a37      	ldr	r2, [pc, #220]	@ (80080d8 <TIM_Base_SetConfig+0x154>)
 8007ffc:	4290      	cmp	r0, r2
 8007ffe:	d02d      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008000:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008004:	4290      	cmp	r0, r2
 8008006:	d029      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008008:	4a34      	ldr	r2, [pc, #208]	@ (80080dc <TIM_Base_SetConfig+0x158>)
 800800a:	4290      	cmp	r0, r2
 800800c:	d026      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 800800e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008012:	4290      	cmp	r0, r2
 8008014:	d022      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008016:	4a32      	ldr	r2, [pc, #200]	@ (80080e0 <TIM_Base_SetConfig+0x15c>)
 8008018:	4290      	cmp	r0, r2
 800801a:	d01f      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 800801c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008020:	4290      	cmp	r0, r2
 8008022:	d01b      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008024:	4a2f      	ldr	r2, [pc, #188]	@ (80080e4 <TIM_Base_SetConfig+0x160>)
 8008026:	4290      	cmp	r0, r2
 8008028:	d018      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 800802a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800802e:	4290      	cmp	r0, r2
 8008030:	d014      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008032:	4a2d      	ldr	r2, [pc, #180]	@ (80080e8 <TIM_Base_SetConfig+0x164>)
 8008034:	4290      	cmp	r0, r2
 8008036:	d011      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008038:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800803c:	4290      	cmp	r0, r2
 800803e:	d00d      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008040:	4a2a      	ldr	r2, [pc, #168]	@ (80080ec <TIM_Base_SetConfig+0x168>)
 8008042:	4290      	cmp	r0, r2
 8008044:	d00a      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008046:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800804a:	4290      	cmp	r0, r2
 800804c:	d006      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 800804e:	4a28      	ldr	r2, [pc, #160]	@ (80080f0 <TIM_Base_SetConfig+0x16c>)
 8008050:	4290      	cmp	r0, r2
 8008052:	d003      	beq.n	800805c <TIM_Base_SetConfig+0xd8>
 8008054:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008058:	4290      	cmp	r0, r2
 800805a:	d103      	bne.n	8008064 <TIM_Base_SetConfig+0xe0>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800805c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800805e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008062:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008064:	694a      	ldr	r2, [r1, #20]
 8008066:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800806a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800806c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800806e:	688b      	ldr	r3, [r1, #8]
 8008070:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008072:	680b      	ldr	r3, [r1, #0]
 8008074:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008076:	4b17      	ldr	r3, [pc, #92]	@ (80080d4 <TIM_Base_SetConfig+0x150>)
 8008078:	4298      	cmp	r0, r3
 800807a:	d01f      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 800807c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008080:	4298      	cmp	r0, r3
 8008082:	d01b      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 8008084:	4b17      	ldr	r3, [pc, #92]	@ (80080e4 <TIM_Base_SetConfig+0x160>)
 8008086:	4298      	cmp	r0, r3
 8008088:	d018      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 800808a:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800808e:	4298      	cmp	r0, r3
 8008090:	d014      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 8008092:	4b15      	ldr	r3, [pc, #84]	@ (80080e8 <TIM_Base_SetConfig+0x164>)
 8008094:	4298      	cmp	r0, r3
 8008096:	d011      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 8008098:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800809c:	4298      	cmp	r0, r3
 800809e:	d00d      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 80080a0:	4b12      	ldr	r3, [pc, #72]	@ (80080ec <TIM_Base_SetConfig+0x168>)
 80080a2:	4298      	cmp	r0, r3
 80080a4:	d00a      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 80080a6:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80080aa:	4298      	cmp	r0, r3
 80080ac:	d006      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 80080ae:	4b10      	ldr	r3, [pc, #64]	@ (80080f0 <TIM_Base_SetConfig+0x16c>)
 80080b0:	4298      	cmp	r0, r3
 80080b2:	d003      	beq.n	80080bc <TIM_Base_SetConfig+0x138>
 80080b4:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80080b8:	4298      	cmp	r0, r3
 80080ba:	d101      	bne.n	80080c0 <TIM_Base_SetConfig+0x13c>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80080bc:	690b      	ldr	r3, [r1, #16]
 80080be:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80080c0:	2301      	movs	r3, #1
 80080c2:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80080c4:	6903      	ldr	r3, [r0, #16]
 80080c6:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80080c8:	bf42      	ittt	mi
 80080ca:	6903      	ldrmi	r3, [r0, #16]
 80080cc:	f023 0301 	bicmi.w	r3, r3, #1
 80080d0:	6103      	strmi	r3, [r0, #16]
  }
}
 80080d2:	4770      	bx	lr
 80080d4:	40012c00 	.word	0x40012c00
 80080d8:	40000400 	.word	0x40000400
 80080dc:	40000800 	.word	0x40000800
 80080e0:	40000c00 	.word	0x40000c00
 80080e4:	40013400 	.word	0x40013400
 80080e8:	40014000 	.word	0x40014000
 80080ec:	40014400 	.word	0x40014400
 80080f0:	40014800 	.word	0x40014800

080080f4 <HAL_TIM_Base_Init>:
{
 80080f4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80080f6:	4604      	mov	r4, r0
 80080f8:	b350      	cbz	r0, 8008150 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 80080fa:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80080fe:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8008102:	b91b      	cbnz	r3, 800810c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8008104:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008108:	f7ff fe0c 	bl	8007d24 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800810c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800810e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8008110:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008114:	1d21      	adds	r1, r4, #4
 8008116:	f7ff ff35 	bl	8007f84 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800811a:	2301      	movs	r3, #1
  return HAL_OK;
 800811c:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800811e:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008122:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8008126:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800812a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800812e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8008132:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8008136:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800813a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800813e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008142:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 8008146:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 800814a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800814e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008150:	2001      	movs	r0, #1
 8008152:	e7fc      	b.n	800814e <HAL_TIM_Base_Init+0x5a>

08008154 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8008154:	4770      	bx	lr

08008156 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8008156:	4770      	bx	lr

08008158 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8008158:	4770      	bx	lr

0800815a <HAL_TIMEx_EncoderIndexCallback>:
/**
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
 800815a:	4770      	bx	lr

0800815c <HAL_TIMEx_DirectionChangeCallback>:
/**
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
 800815c:	4770      	bx	lr

0800815e <HAL_TIMEx_IndexErrorCallback>:
/**
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
 800815e:	4770      	bx	lr

08008160 <HAL_TIMEx_TransitionErrorCallback>:
/**
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
 8008160:	4770      	bx	lr
	...

08008164 <XSPI_ConfigCmd>:
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 8008164:	6802      	ldr	r2, [r0, #0]
{
 8008166:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 800816a:	6813      	ldr	r3, [r2, #0]
 800816c:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008170:	6013      	str	r3, [r2, #0]

  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008172:	4b7e      	ldr	r3, [pc, #504]	@ (800836c <XSPI_ConfigCmd+0x208>)
 8008174:	429a      	cmp	r2, r3
 8008176:	d00d      	beq.n	8008194 <XSPI_ConfigCmd+0x30>
 8008178:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800817c:	429a      	cmp	r2, r3
 800817e:	d009      	beq.n	8008194 <XSPI_ConfigCmd+0x30>
 8008180:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008184:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008188:	429a      	cmp	r2, r3
 800818a:	d003      	beq.n	8008194 <XSPI_ConfigCmd+0x30>
 800818c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008190:	429a      	cmp	r2, r3
 8008192:	d15c      	bne.n	800824e <XSPI_ConfigCmd+0xea>
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 8008194:	6883      	ldr	r3, [r0, #8]
 8008196:	b92b      	cbnz	r3, 80081a4 <XSPI_ConfigCmd+0x40>
    {
      assert_param(IS_OCTOSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, OCTOSPI_CR_MSEL, pCmd->IOSelect);
 8008198:	6813      	ldr	r3, [r2, #0]
 800819a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
    {
      assert_param(IS_HSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 800819e:	684c      	ldr	r4, [r1, #4]
 80081a0:	4323      	orrs	r3, r4
 80081a2:	6013      	str	r3, [r2, #0]
  {
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
    return HAL_ERROR;
  }

  if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 80081a4:	680b      	ldr	r3, [r1, #0]
 80081a6:	2b02      	cmp	r3, #2
 80081a8:	d165      	bne.n	8008276 <XSPI_ConfigCmd+0x112>
  {
    ccr_reg = &(hxspi->Instance->WCCR);
 80081aa:	f502 74c0 	add.w	r4, r2, #384	@ 0x180
    tcr_reg = &(hxspi->Instance->WTCR);
 80081ae:	f502 76c4 	add.w	r6, r2, #392	@ 0x188
    ir_reg  = &(hxspi->Instance->WIR);
 80081b2:	f502 75c8 	add.w	r5, r2, #400	@ 0x190
    abr_reg = &(hxspi->Instance->WABR);
 80081b6:	f502 7cd0 	add.w	ip, r2, #416	@ 0x1a0
    ir_reg  = &(hxspi->Instance->IR);
    abr_reg = &(hxspi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (pCmd->DQSMode | pCmd->SIOOMode);
 80081ba:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	@ 0x48
 80081be:	433b      	orrs	r3, r7
 80081c0:	6023      	str	r3, [r4, #0]

  if (pCmd->AlternateBytesMode != HAL_XSPI_ALT_BYTES_NONE)
 80081c2:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 80081c4:	b16b      	cbz	r3, 80081e2 <XSPI_ConfigCmd+0x7e>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = pCmd->AlternateBytes;
 80081c6:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 80081c8:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (XSPI_CCR_ABMODE | XSPI_CCR_ABDTR | XSPI_CCR_ABSIZE),
 80081cc:	6b4f      	ldr	r7, [r1, #52]	@ 0x34
 80081ce:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 80081d0:	f8d4 c000 	ldr.w	ip, [r4]
 80081d4:	433b      	orrs	r3, r7
 80081d6:	6b0f      	ldr	r7, [r1, #48]	@ 0x30
 80081d8:	433b      	orrs	r3, r7
 80081da:	f42c 177c 	bic.w	r7, ip, #4128768	@ 0x3f0000
 80081de:	433b      	orrs	r3, r7
 80081e0:	6023      	str	r3, [r4, #0]
               (pCmd->AlternateBytesMode | pCmd->AlternateBytesDTRMode | pCmd->AlternateBytesWidth));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), XSPI_TCR_DCYC, pCmd->DummyCycles);
 80081e2:	6833      	ldr	r3, [r6, #0]
 80081e4:	6c4f      	ldr	r7, [r1, #68]	@ 0x44
 80081e6:	f023 031f 	bic.w	r3, r3, #31
 80081ea:	433b      	orrs	r3, r7
 80081ec:	6033      	str	r3, [r6, #0]

  if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80081ee:	f8d1 e038 	ldr.w	lr, [r1, #56]	@ 0x38
 80081f2:	f1be 0f00 	cmp.w	lr, #0
 80081f6:	d004      	beq.n	8008202 <XSPI_ConfigCmd+0x9e>
  {
    if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 80081f8:	680b      	ldr	r3, [r1, #0]
 80081fa:	b913      	cbnz	r3, 8008202 <XSPI_ConfigCmd+0x9e>
    {
      /* Configure the DLR register with the number of data */
      hxspi->Instance->DLR = (pCmd->DataLength - 1U);
 80081fc:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 80081fe:	3b01      	subs	r3, #1
 8008200:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }

  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 8008202:	68cb      	ldr	r3, [r1, #12]
  {
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 8008204:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 8008208:	2b00      	cmp	r3, #0
 800820a:	f000 808e 	beq.w	800832a <XSPI_ConfigCmd+0x1c6>
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800820e:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 8008212:	f1b9 0f00 	cmp.w	r9, #0
 8008216:	d05e      	beq.n	80082d6 <XSPI_ConfigCmd+0x172>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008218:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800821c:	f1be 0f00 	cmp.w	lr, #0
 8008220:	d03d      	beq.n	800829e <XSPI_ConfigCmd+0x13a>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008222:	ea4e 0303 	orr.w	r3, lr, r3
 8008226:	ea43 0309 	orr.w	r3, r3, r9
 800822a:	ea43 0308 	orr.w	r3, r3, r8
 800822e:	ea43 030c 	orr.w	r3, r3, ip
 8008232:	433b      	orrs	r3, r7
 8008234:	4333      	orrs	r3, r6
 8008236:	6c0e      	ldr	r6, [r1, #64]	@ 0x40
 8008238:	6820      	ldr	r0, [r4, #0]
 800823a:	4333      	orrs	r3, r6
 800823c:	4e4c      	ldr	r6, [pc, #304]	@ (8008370 <XSPI_ConfigCmd+0x20c>)
 800823e:	4006      	ands	r6, r0
 8008240:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
            (pCmd->InstructionDTRMode == HAL_XSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 8008242:	6023      	str	r3, [r4, #0]
        }
      }
      /* Configure the IR register with the instruction value */
      *ir_reg = pCmd->Instruction;
 8008244:	688b      	ldr	r3, [r1, #8]
 8008246:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
                   (pCmd->AddressMode | pCmd->AddressDTRMode | pCmd->AddressWidth));
      }

      /* Configure the AR register with the instruction value */
      hxspi->Instance->AR = pCmd->Address;
 8008248:	698b      	ldr	r3, [r1, #24]
 800824a:	6493      	str	r3, [r2, #72]	@ 0x48
 800824c:	e057      	b.n	80082fe <XSPI_ConfigCmd+0x19a>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800824e:	4b49      	ldr	r3, [pc, #292]	@ (8008374 <XSPI_ConfigCmd+0x210>)
 8008250:	429a      	cmp	r2, r3
 8008252:	d003      	beq.n	800825c <XSPI_ConfigCmd+0xf8>
 8008254:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008258:	429a      	cmp	r2, r3
 800825a:	d106      	bne.n	800826a <XSPI_ConfigCmd+0x106>
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800825c:	6883      	ldr	r3, [r0, #8]
 800825e:	2b00      	cmp	r3, #0
 8008260:	d1a0      	bne.n	80081a4 <XSPI_ConfigCmd+0x40>
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 8008262:	6813      	ldr	r3, [r2, #0]
 8008264:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8008268:	e799      	b.n	800819e <XSPI_ConfigCmd+0x3a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800826a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 800826c:	f043 0308 	orr.w	r3, r3, #8
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008270:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 8008272:	2001      	movs	r0, #1
 8008274:	e044      	b.n	8008300 <XSPI_ConfigCmd+0x19c>
  else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG)
 8008276:	2b03      	cmp	r3, #3
    ccr_reg = &(hxspi->Instance->WPCCR);
 8008278:	bf01      	itttt	eq
 800827a:	f502 74a0 	addeq.w	r4, r2, #320	@ 0x140
    tcr_reg = &(hxspi->Instance->WPTCR);
 800827e:	f502 76a4 	addeq.w	r6, r2, #328	@ 0x148
    ir_reg  = &(hxspi->Instance->WPIR);
 8008282:	f502 75a8 	addeq.w	r5, r2, #336	@ 0x150
    abr_reg = &(hxspi->Instance->WPABR);
 8008286:	f502 7cb0 	addeq.w	ip, r2, #352	@ 0x160
    ccr_reg = &(hxspi->Instance->CCR);
 800828a:	bf1f      	itttt	ne
 800828c:	f502 7480 	addne.w	r4, r2, #256	@ 0x100
    tcr_reg = &(hxspi->Instance->TCR);
 8008290:	f502 7684 	addne.w	r6, r2, #264	@ 0x108
    ir_reg  = &(hxspi->Instance->IR);
 8008294:	f502 7588 	addne.w	r5, r2, #272	@ 0x110
    abr_reg = &(hxspi->Instance->ABR);
 8008298:	f502 7c90 	addne.w	ip, r2, #288	@ 0x120
 800829c:	e78d      	b.n	80081ba <XSPI_ConfigCmd+0x56>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800829e:	ea43 0309 	orr.w	r3, r3, r9
 80082a2:	f8d4 e000 	ldr.w	lr, [r4]
 80082a6:	ea43 0308 	orr.w	r3, r3, r8
 80082aa:	ea43 030c 	orr.w	r3, r3, ip
 80082ae:	433b      	orrs	r3, r7
 80082b0:	f42e 5e7c 	bic.w	lr, lr, #16128	@ 0x3f00
 80082b4:	4333      	orrs	r3, r6
 80082b6:	f02e 0e3f 	bic.w	lr, lr, #63	@ 0x3f
 80082ba:	ea43 030e 	orr.w	r3, r3, lr
 80082be:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 80082c0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80082c2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80082c6:	d1bd      	bne.n	8008244 <XSPI_ConfigCmd+0xe0>
 80082c8:	694b      	ldr	r3, [r1, #20]
 80082ca:	2b08      	cmp	r3, #8
 80082cc:	d1ba      	bne.n	8008244 <XSPI_ConfigCmd+0xe0>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082ce:	6823      	ldr	r3, [r4, #0]
 80082d0:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80082d4:	e7b5      	b.n	8008242 <XSPI_ConfigCmd+0xde>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 80082d6:	6822      	ldr	r2, [r4, #0]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80082d8:	f1be 0f00 	cmp.w	lr, #0
 80082dc:	d012      	beq.n	8008304 <XSPI_ConfigCmd+0x1a0>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 80082de:	ea4e 0303 	orr.w	r3, lr, r3
 80082e2:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 80082e4:	ea43 0308 	orr.w	r3, r3, r8
 80082e8:	ea43 030c 	orr.w	r3, r3, ip
 80082ec:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80082f0:	4303      	orrs	r3, r0
 80082f2:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 80082f6:	4313      	orrs	r3, r2
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082f8:	6023      	str	r3, [r4, #0]
      *ir_reg = pCmd->Instruction;
 80082fa:	688b      	ldr	r3, [r1, #8]
 80082fc:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80082fe:	2000      	movs	r0, #0
    }
  }

  return status;
}
 8008300:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE),
 8008304:	ea43 0308 	orr.w	r3, r3, r8
 8008308:	ea43 030c 	orr.w	r3, r3, ip
 800830c:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8008310:	4313      	orrs	r3, r2
 8008312:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 8008314:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008316:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800831a:	d1ee      	bne.n	80082fa <XSPI_ConfigCmd+0x196>
 800831c:	694b      	ldr	r3, [r1, #20]
 800831e:	2b08      	cmp	r3, #8
 8008320:	d1eb      	bne.n	80082fa <XSPI_ConfigCmd+0x196>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 8008322:	6823      	ldr	r3, [r4, #0]
 8008324:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8008328:	e7e6      	b.n	80082f8 <XSPI_ConfigCmd+0x194>
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800832a:	f1b9 0f00 	cmp.w	r9, #0
 800832e:	d01b      	beq.n	8008368 <XSPI_ConfigCmd+0x204>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008330:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008334:	f1be 0f00 	cmp.w	lr, #0
 8008338:	d00d      	beq.n	8008356 <XSPI_ConfigCmd+0x1f2>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE |
 800833a:	ea4e 0309 	orr.w	r3, lr, r9
 800833e:	6825      	ldr	r5, [r4, #0]
 8008340:	4303      	orrs	r3, r0
 8008342:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 8008344:	4333      	orrs	r3, r6
 8008346:	4303      	orrs	r3, r0
 8008348:	f025 6070 	bic.w	r0, r5, #251658240	@ 0xf000000
 800834c:	f420 507c 	bic.w	r0, r0, #16128	@ 0x3f00
 8008350:	4303      	orrs	r3, r0
 8008352:	6023      	str	r3, [r4, #0]
 8008354:	e778      	b.n	8008248 <XSPI_ConfigCmd+0xe4>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
 8008356:	6823      	ldr	r3, [r4, #0]
 8008358:	ea40 0009 	orr.w	r0, r0, r9
 800835c:	4330      	orrs	r0, r6
 800835e:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8008362:	4318      	orrs	r0, r3
 8008364:	6020      	str	r0, [r4, #0]
 8008366:	e76f      	b.n	8008248 <XSPI_ConfigCmd+0xe4>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008368:	2308      	movs	r3, #8
 800836a:	e781      	b.n	8008270 <XSPI_ConfigCmd+0x10c>
 800836c:	420d1400 	.word	0x420d1400
 8008370:	f0ffc0c0 	.word	0xf0ffc0c0
 8008374:	420d3400 	.word	0x420d3400

08008378 <XSPI_WaitFlagStateUntilTimeout>:
{
 8008378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800837c:	4604      	mov	r4, r0
 800837e:	460e      	mov	r6, r1
 8008380:	4615      	mov	r5, r2
 8008382:	461f      	mov	r7, r3
 8008384:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 8008388:	6822      	ldr	r2, [r4, #0]
 800838a:	6a13      	ldr	r3, [r2, #32]
 800838c:	4233      	tst	r3, r6
 800838e:	bf14      	ite	ne
 8008390:	2301      	movne	r3, #1
 8008392:	2300      	moveq	r3, #0
 8008394:	42ab      	cmp	r3, r5
 8008396:	d101      	bne.n	800839c <XSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008398:	2000      	movs	r0, #0
 800839a:	e012      	b.n	80083c2 <XSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800839c:	f1b8 3fff 	cmp.w	r8, #4294967295
 80083a0:	d0f3      	beq.n	800838a <XSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80083a2:	f7fb fca3 	bl	8003cec <HAL_GetTick>
 80083a6:	1bc0      	subs	r0, r0, r7
 80083a8:	4540      	cmp	r0, r8
 80083aa:	d802      	bhi.n	80083b2 <XSPI_WaitFlagStateUntilTimeout+0x3a>
 80083ac:	f1b8 0f00 	cmp.w	r8, #0
 80083b0:	d1ea      	bne.n	8008388 <XSPI_WaitFlagStateUntilTimeout+0x10>
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 80083b2:	f44f 7300 	mov.w	r3, #512	@ 0x200
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 80083b6:	2003      	movs	r0, #3
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 80083b8:	6563      	str	r3, [r4, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 80083ba:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80083bc:	f043 0301 	orr.w	r3, r3, #1
 80083c0:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 80083c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080083c8 <HAL_XSPI_Init>:
{
 80083c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80083cc:	f7fb fc8e 	bl	8003cec <HAL_GetTick>
 80083d0:	4605      	mov	r5, r0
  if (hxspi == NULL)
 80083d2:	2c00      	cmp	r4, #0
 80083d4:	f000 80a8 	beq.w	8008528 <HAL_XSPI_Init+0x160>
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 80083d8:	2300      	movs	r3, #0
 80083da:	65a3      	str	r3, [r4, #88]	@ 0x58
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 80083dc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80083de:	2b00      	cmp	r3, #0
 80083e0:	f040 8094 	bne.w	800850c <HAL_XSPI_Init+0x144>
      HAL_XSPI_MspInit(hxspi);
 80083e4:	4620      	mov	r0, r4
 80083e6:	f7f8 fab7 	bl	8000958 <HAL_XSPI_MspInit>
  hxspi->Timeout = Timeout;
 80083ea:	f241 3388 	movw	r3, #5000	@ 0x1388
      MODIFY_REG(hxspi->Instance->DCR1,
 80083ee:	68e1      	ldr	r1, [r4, #12]
  hxspi->Timeout = Timeout;
 80083f0:	65e3      	str	r3, [r4, #92]	@ 0x5c
      MODIFY_REG(hxspi->Instance->DCR1,
 80083f2:	69e3      	ldr	r3, [r4, #28]
 80083f4:	6822      	ldr	r2, [r4, #0]
 80083f6:	4319      	orrs	r1, r3
 80083f8:	6923      	ldr	r3, [r4, #16]
 80083fa:	6890      	ldr	r0, [r2, #8]
 80083fc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8008400:	4b4a      	ldr	r3, [pc, #296]	@ (800852c <HAL_XSPI_Init+0x164>)
 8008402:	4003      	ands	r3, r0
 8008404:	4319      	orrs	r1, r3
 8008406:	6963      	ldr	r3, [r4, #20]
 8008408:	3b01      	subs	r3, #1
 800840a:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800840e:	6091      	str	r1, [r2, #8]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008410:	4947      	ldr	r1, [pc, #284]	@ (8008530 <HAL_XSPI_Init+0x168>)
 8008412:	428a      	cmp	r2, r1
 8008414:	d00c      	beq.n	8008430 <HAL_XSPI_Init+0x68>
 8008416:	4b47      	ldr	r3, [pc, #284]	@ (8008534 <HAL_XSPI_Init+0x16c>)
 8008418:	429a      	cmp	r2, r3
 800841a:	d009      	beq.n	8008430 <HAL_XSPI_Init+0x68>
 800841c:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008420:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008424:	429a      	cmp	r2, r3
 8008426:	d003      	beq.n	8008430 <HAL_XSPI_Init+0x68>
 8008428:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800842c:	429a      	cmp	r2, r3
 800842e:	d105      	bne.n	800843c <HAL_XSPI_Init+0x74>
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 8008430:	6893      	ldr	r3, [r2, #8]
 8008432:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8008434:	f023 0308 	bic.w	r3, r3, #8
 8008438:	4303      	orrs	r3, r0
 800843a:	6093      	str	r3, [r2, #8]
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 800843c:	68d3      	ldr	r3, [r2, #12]
 800843e:	6a20      	ldr	r0, [r4, #32]
 8008440:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8008444:	4303      	orrs	r3, r0
 8008446:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 8008448:	6913      	ldr	r3, [r2, #16]
 800844a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800844c:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8008450:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008454:	428a      	cmp	r2, r1
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 8008456:	6113      	str	r3, [r2, #16]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008458:	d00c      	beq.n	8008474 <HAL_XSPI_Init+0xac>
 800845a:	4b36      	ldr	r3, [pc, #216]	@ (8008534 <HAL_XSPI_Init+0x16c>)
 800845c:	429a      	cmp	r2, r3
 800845e:	d009      	beq.n	8008474 <HAL_XSPI_Init+0xac>
 8008460:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008464:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008468:	429a      	cmp	r2, r3
 800846a:	d003      	beq.n	8008474 <HAL_XSPI_Init+0xac>
 800846c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008470:	429a      	cmp	r2, r3
 8008472:	d105      	bne.n	8008480 <HAL_XSPI_Init+0xb8>
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 8008474:	6913      	ldr	r3, [r2, #16]
 8008476:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8008478:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800847c:	430b      	orrs	r3, r1
 800847e:	6113      	str	r3, [r2, #16]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 8008480:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 8008482:	6861      	ldr	r1, [r4, #4]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 8008484:	6153      	str	r3, [r2, #20]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 8008486:	6813      	ldr	r3, [r2, #0]
 8008488:	3901      	subs	r1, #1
 800848a:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800848e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8008492:	6013      	str	r3, [r2, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008494:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008498:	2200      	movs	r2, #0
 800849a:	9300      	str	r3, [sp, #0]
 800849c:	2120      	movs	r1, #32
 800849e:	462b      	mov	r3, r5
 80084a0:	4620      	mov	r0, r4
 80084a2:	f7ff ff69 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80084a6:	2800      	cmp	r0, #0
 80084a8:	d13c      	bne.n	8008524 <HAL_XSPI_Init+0x15c>
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 80084aa:	6822      	ldr	r2, [r4, #0]
 80084ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80084ae:	68d3      	ldr	r3, [r2, #12]
 80084b0:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80084b4:	430b      	orrs	r3, r1
 80084b6:	60d3      	str	r3, [r2, #12]
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80084b8:	4b1f      	ldr	r3, [pc, #124]	@ (8008538 <HAL_XSPI_Init+0x170>)
 80084ba:	429a      	cmp	r2, r3
 80084bc:	d028      	beq.n	8008510 <HAL_XSPI_Init+0x148>
 80084be:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80084c2:	429a      	cmp	r2, r3
 80084c4:	d024      	beq.n	8008510 <HAL_XSPI_Init+0x148>
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 80084c6:	6823      	ldr	r3, [r4, #0]
 80084c8:	68a1      	ldr	r1, [r4, #8]
 80084ca:	681a      	ldr	r2, [r3, #0]
 80084cc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80084d0:	430a      	orrs	r2, r1
 80084d2:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 80084d4:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 80084d8:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 80084dc:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 80084e0:	4302      	orrs	r2, r0
 80084e2:	430a      	orrs	r2, r1
 80084e4:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        HAL_XSPI_ENABLE(hxspi);
 80084e8:	681a      	ldr	r2, [r3, #0]
 80084ea:	f042 0201 	orr.w	r2, r2, #1
 80084ee:	601a      	str	r2, [r3, #0]
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 80084f0:	69a2      	ldr	r2, [r4, #24]
 80084f2:	2a02      	cmp	r2, #2
 80084f4:	d103      	bne.n	80084fe <HAL_XSPI_Init+0x136>
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 80084f6:	689a      	ldr	r2, [r3, #8]
 80084f8:	f042 0202 	orr.w	r2, r2, #2
 80084fc:	609a      	str	r2, [r3, #8]
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80084fe:	68e3      	ldr	r3, [r4, #12]
 8008500:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 8008504:	bf0c      	ite	eq
 8008506:	2301      	moveq	r3, #1
          hxspi->State = HAL_XSPI_STATE_READY;
 8008508:	2302      	movne	r3, #2
 800850a:	6563      	str	r3, [r4, #84]	@ 0x54
  HAL_StatusTypeDef status = HAL_OK;
 800850c:	2000      	movs	r0, #0
 800850e:	e009      	b.n	8008524 <HAL_XSPI_Init+0x15c>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008510:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 8008512:	2200      	movs	r2, #0
 8008514:	9300      	str	r3, [sp, #0]
 8008516:	2120      	movs	r1, #32
 8008518:	462b      	mov	r3, r5
 800851a:	4620      	mov	r0, r4
 800851c:	f7ff ff2c 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
          if (status != HAL_OK)
 8008520:	2800      	cmp	r0, #0
 8008522:	d0d0      	beq.n	80084c6 <HAL_XSPI_Init+0xfe>
}
 8008524:	b003      	add	sp, #12
 8008526:	bd30      	pop	{r4, r5, pc}
    status = HAL_ERROR;
 8008528:	2001      	movs	r0, #1
 800852a:	e7fb      	b.n	8008524 <HAL_XSPI_Init+0x15c>
 800852c:	f8e0c0fc 	.word	0xf8e0c0fc
 8008530:	420d1400 	.word	0x420d1400
 8008534:	520d1400 	.word	0x520d1400
 8008538:	420d3400 	.word	0x420d3400

0800853c <HAL_XSPI_Command>:
{
 800853c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008540:	4604      	mov	r4, r0
 8008542:	4690      	mov	r8, r2
 8008544:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 8008546:	f7fb fbd1 	bl	8003cec <HAL_GetTick>
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800854a:	68a2      	ldr	r2, [r4, #8]
  uint32_t tickstart = HAL_GetTick();
 800854c:	4607      	mov	r7, r0
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800854e:	6825      	ldr	r5, [r4, #0]
 8008550:	4b42      	ldr	r3, [pc, #264]	@ (800865c <HAL_XSPI_Command+0x120>)
 8008552:	bb02      	cbnz	r2, 8008596 <HAL_XSPI_Command+0x5a>
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008554:	429d      	cmp	r5, r3
 8008556:	d037      	beq.n	80085c8 <HAL_XSPI_Command+0x8c>
 8008558:	4a41      	ldr	r2, [pc, #260]	@ (8008660 <HAL_XSPI_Command+0x124>)
 800855a:	4295      	cmp	r5, r2
 800855c:	d01b      	beq.n	8008596 <HAL_XSPI_Command+0x5a>
 800855e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8008562:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8008566:	4295      	cmp	r5, r2
 8008568:	d015      	beq.n	8008596 <HAL_XSPI_Command+0x5a>
 800856a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800856e:	4295      	cmp	r5, r2
 8008570:	d011      	beq.n	8008596 <HAL_XSPI_Command+0x5a>
    else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008572:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8008576:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800857a:	4295      	cmp	r5, r2
 800857c:	d00b      	beq.n	8008596 <HAL_XSPI_Command+0x5a>
 800857e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008582:	4295      	cmp	r5, r2
 8008584:	d007      	beq.n	8008596 <HAL_XSPI_Command+0x5a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 8008586:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008588:	f043 0308 	orr.w	r3, r3, #8
      return HAL_ERROR;
 800858c:	2001      	movs	r0, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800858e:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 8008590:	b002      	add	sp, #8
 8008592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008596:	429d      	cmp	r5, r3
 8008598:	d016      	beq.n	80085c8 <HAL_XSPI_Command+0x8c>
 800859a:	4b31      	ldr	r3, [pc, #196]	@ (8008660 <HAL_XSPI_Command+0x124>)
 800859c:	429d      	cmp	r5, r3
 800859e:	d013      	beq.n	80085c8 <HAL_XSPI_Command+0x8c>
 80085a0:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80085a4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80085a8:	429d      	cmp	r5, r3
 80085aa:	d00d      	beq.n	80085c8 <HAL_XSPI_Command+0x8c>
 80085ac:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80085b0:	429d      	cmp	r5, r3
 80085b2:	d009      	beq.n	80085c8 <HAL_XSPI_Command+0x8c>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80085b4:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80085b8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80085bc:	429d      	cmp	r5, r3
 80085be:	d003      	beq.n	80085c8 <HAL_XSPI_Command+0x8c>
 80085c0:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80085c4:	429d      	cmp	r5, r3
 80085c6:	d1de      	bne.n	8008586 <HAL_XSPI_Command+0x4a>
  state = hxspi->State;
 80085c8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 80085ca:	2b02      	cmp	r3, #2
 80085cc:	d105      	bne.n	80085da <HAL_XSPI_Command+0x9e>
 80085ce:	68e3      	ldr	r3, [r4, #12]
 80085d0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80085d4:	d107      	bne.n	80085e6 <HAL_XSPI_Command+0xaa>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80085d6:	2310      	movs	r3, #16
 80085d8:	e7d8      	b.n	800858c <HAL_XSPI_Command+0x50>
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 80085da:	2b14      	cmp	r3, #20
 80085dc:	d121      	bne.n	8008622 <HAL_XSPI_Command+0xe6>
      ((state == HAL_XSPI_STATE_READ_CMD_CFG)  && ((pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG) ||
 80085de:	6833      	ldr	r3, [r6, #0]
 80085e0:	3b02      	subs	r3, #2
 80085e2:	2b01      	cmp	r3, #1
 80085e4:	d8f7      	bhi.n	80085d6 <HAL_XSPI_Command+0x9a>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80085e6:	463b      	mov	r3, r7
 80085e8:	2200      	movs	r2, #0
 80085ea:	2120      	movs	r1, #32
 80085ec:	4620      	mov	r0, r4
 80085ee:	f8cd 8000 	str.w	r8, [sp]
 80085f2:	f7ff fec1 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80085f6:	bb78      	cbnz	r0, 8008658 <HAL_XSPI_Command+0x11c>
      hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 80085f8:	65a0      	str	r0, [r4, #88]	@ 0x58
      status = XSPI_ConfigCmd(hxspi, pCmd);
 80085fa:	4631      	mov	r1, r6
 80085fc:	4620      	mov	r0, r4
 80085fe:	f7ff fdb1 	bl	8008164 <XSPI_ConfigCmd>
      if (status == HAL_OK)
 8008602:	2800      	cmp	r0, #0
 8008604:	d1c4      	bne.n	8008590 <HAL_XSPI_Command+0x54>
        if (pCmd->DataMode == HAL_XSPI_DATA_NONE)
 8008606:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8008608:	b99b      	cbnz	r3, 8008632 <HAL_XSPI_Command+0xf6>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 800860a:	463b      	mov	r3, r7
 800860c:	2201      	movs	r2, #1
 800860e:	2102      	movs	r1, #2
 8008610:	4620      	mov	r0, r4
 8008612:	f8cd 8000 	str.w	r8, [sp]
 8008616:	f7ff feaf 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800861a:	2202      	movs	r2, #2
 800861c:	6823      	ldr	r3, [r4, #0]
 800861e:	625a      	str	r2, [r3, #36]	@ 0x24
 8008620:	e7b6      	b.n	8008590 <HAL_XSPI_Command+0x54>
                                                   (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG))) ||
 8008622:	2b24      	cmp	r3, #36	@ 0x24
 8008624:	d1d7      	bne.n	80085d6 <HAL_XSPI_Command+0x9a>
      ((state == HAL_XSPI_STATE_WRITE_CMD_CFG) &&
 8008626:	6833      	ldr	r3, [r6, #0]
 8008628:	f023 0302 	bic.w	r3, r3, #2
 800862c:	2b01      	cmp	r3, #1
 800862e:	d1d2      	bne.n	80085d6 <HAL_XSPI_Command+0x9a>
 8008630:	e7d9      	b.n	80085e6 <HAL_XSPI_Command+0xaa>
          if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 8008632:	6833      	ldr	r3, [r6, #0]
 8008634:	b90b      	cbnz	r3, 800863a <HAL_XSPI_Command+0xfe>
              hxspi->State = HAL_XSPI_STATE_CMD_CFG;
 8008636:	2304      	movs	r3, #4
 8008638:	e005      	b.n	8008646 <HAL_XSPI_Command+0x10a>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_READ_CFG)
 800863a:	2b01      	cmp	r3, #1
 800863c:	d105      	bne.n	800864a <HAL_XSPI_Command+0x10e>
            if (hxspi->State == HAL_XSPI_STATE_WRITE_CMD_CFG)
 800863e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008640:	2b24      	cmp	r3, #36	@ 0x24
 8008642:	d0f8      	beq.n	8008636 <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_READ_CMD_CFG;
 8008644:	2314      	movs	r3, #20
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 8008646:	6563      	str	r3, [r4, #84]	@ 0x54
 8008648:	e7a2      	b.n	8008590 <HAL_XSPI_Command+0x54>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 800864a:	2b02      	cmp	r3, #2
 800864c:	d1a0      	bne.n	8008590 <HAL_XSPI_Command+0x54>
            if (hxspi->State == HAL_XSPI_STATE_READ_CMD_CFG)
 800864e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008650:	2b14      	cmp	r3, #20
 8008652:	d0f0      	beq.n	8008636 <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 8008654:	2324      	movs	r3, #36	@ 0x24
 8008656:	e7f6      	b.n	8008646 <HAL_XSPI_Command+0x10a>
      status = HAL_BUSY;
 8008658:	2002      	movs	r0, #2
 800865a:	e799      	b.n	8008590 <HAL_XSPI_Command+0x54>
 800865c:	420d1400 	.word	0x420d1400
 8008660:	520d1400 	.word	0x520d1400

08008664 <HAL_XSPI_Transmit>:
{
 8008664:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008668:	4604      	mov	r4, r0
 800866a:	4688      	mov	r8, r1
 800866c:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 800866e:	f7fb fb3d 	bl	8003cec <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 8008672:	6827      	ldr	r7, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8008674:	4605      	mov	r5, r0
  if (pData == NULL)
 8008676:	f1b8 0f00 	cmp.w	r8, #0
 800867a:	d103      	bne.n	8008684 <HAL_XSPI_Transmit+0x20>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800867c:	2308      	movs	r3, #8
    status = HAL_ERROR;
 800867e:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008680:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008682:	e02e      	b.n	80086e2 <HAL_XSPI_Transmit+0x7e>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008684:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008686:	2b04      	cmp	r3, #4
 8008688:	d12e      	bne.n	80086e8 <HAL_XSPI_Transmit+0x84>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 800868a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 800868c:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008690:	3301      	adds	r3, #1
 8008692:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 8008694:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008696:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008698:	683b      	ldr	r3, [r7, #0]
 800869a:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800869e:	603b      	str	r3, [r7, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_FT, SET, tickstart, Timeout);
 80086a0:	462b      	mov	r3, r5
 80086a2:	2201      	movs	r2, #1
 80086a4:	2104      	movs	r1, #4
 80086a6:	4620      	mov	r0, r4
 80086a8:	9600      	str	r6, [sp, #0]
 80086aa:	f7ff fe65 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 80086ae:	b9c0      	cbnz	r0, 80086e2 <HAL_XSPI_Transmit+0x7e>
        *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 80086b0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086b2:	781b      	ldrb	r3, [r3, #0]
 80086b4:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
        hxspi->pBuffPtr++;
 80086b8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086ba:	3301      	adds	r3, #1
 80086bc:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 80086be:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80086c0:	3b01      	subs	r3, #1
 80086c2:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 80086c4:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80086c6:	2b00      	cmp	r3, #0
 80086c8:	d1ea      	bne.n	80086a0 <HAL_XSPI_Transmit+0x3c>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 80086ca:	462b      	mov	r3, r5
 80086cc:	2201      	movs	r2, #1
 80086ce:	2102      	movs	r1, #2
 80086d0:	4620      	mov	r0, r4
 80086d2:	9600      	str	r6, [sp, #0]
 80086d4:	f7ff fe50 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80086d8:	b918      	cbnz	r0, 80086e2 <HAL_XSPI_Transmit+0x7e>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 80086da:	2302      	movs	r3, #2
 80086dc:	6822      	ldr	r2, [r4, #0]
 80086de:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 80086e0:	6563      	str	r3, [r4, #84]	@ 0x54
}
 80086e2:	b002      	add	sp, #8
 80086e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80086e8:	2310      	movs	r3, #16
 80086ea:	e7c8      	b.n	800867e <HAL_XSPI_Transmit+0x1a>

080086ec <HAL_XSPI_AutoPolling>:
{
 80086ec:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80086f0:	4604      	mov	r4, r0
 80086f2:	460e      	mov	r6, r1
 80086f4:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80086f6:	f7fb faf9 	bl	8003cec <HAL_GetTick>
  uint32_t addr_reg = hxspi->Instance->AR;
 80086fa:	6823      	ldr	r3, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80086fc:	4682      	mov	sl, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 80086fe:	f8d3 8048 	ldr.w	r8, [r3, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 8008702:	f8d3 9110 	ldr.w	r9, [r3, #272]	@ 0x110
  if ((hxspi->State == HAL_XSPI_STATE_CMD_CFG) && (pCfg->AutomaticStop == HAL_XSPI_AUTOMATIC_STOP_ENABLE))
 8008706:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008708:	2b04      	cmp	r3, #4
 800870a:	d13e      	bne.n	800878a <HAL_XSPI_AutoPolling+0x9e>
 800870c:	68f3      	ldr	r3, [r6, #12]
 800870e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8008712:	d13a      	bne.n	800878a <HAL_XSPI_AutoPolling+0x9e>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008714:	4603      	mov	r3, r0
 8008716:	2200      	movs	r2, #0
 8008718:	2120      	movs	r1, #32
 800871a:	4620      	mov	r0, r4
 800871c:	9700      	str	r7, [sp, #0]
 800871e:	f7ff fe2b 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008722:	2800      	cmp	r0, #0
 8008724:	d135      	bne.n	8008792 <HAL_XSPI_AutoPolling+0xa6>
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008726:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 800872a:	6825      	ldr	r5, [r4, #0]
 800872c:	6833      	ldr	r3, [r6, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800872e:	4311      	orrs	r1, r2
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 8008730:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      WRITE_REG(hxspi->Instance->PSMKR, pCfg->MatchMask);
 8008734:	6873      	ldr	r3, [r6, #4]
 8008736:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
      WRITE_REG(hxspi->Instance->PIR,   pCfg->IntervalTime);
 800873a:	6933      	ldr	r3, [r6, #16]
 800873c:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008740:	682b      	ldr	r3, [r5, #0]
 8008742:	f023 5343 	bic.w	r3, r3, #817889280	@ 0x30c00000
 8008746:	4319      	orrs	r1, r3
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008748:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800874a:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800874e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008752:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008754:	d111      	bne.n	800877a <HAL_XSPI_AutoPolling+0x8e>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 8008756:	f8c5 8048 	str.w	r8, [r5, #72]	@ 0x48
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_SM, SET, tickstart, Timeout);
 800875a:	4653      	mov	r3, sl
 800875c:	2201      	movs	r2, #1
 800875e:	2108      	movs	r1, #8
 8008760:	4620      	mov	r0, r4
 8008762:	9700      	str	r7, [sp, #0]
 8008764:	f7ff fe08 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008768:	b920      	cbnz	r0, 8008774 <HAL_XSPI_AutoPolling+0x88>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_SM);
 800876a:	2208      	movs	r2, #8
 800876c:	6823      	ldr	r3, [r4, #0]
 800876e:	625a      	str	r2, [r3, #36]	@ 0x24
        hxspi->State = HAL_XSPI_STATE_READY;
 8008770:	2302      	movs	r3, #2
 8008772:	6563      	str	r3, [r4, #84]	@ 0x54
}
 8008774:	b002      	add	sp, #8
 8008776:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 800877a:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 800877e:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 8008782:	d1e8      	bne.n	8008756 <HAL_XSPI_AutoPolling+0x6a>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 8008784:	f8c5 9110 	str.w	r9, [r5, #272]	@ 0x110
 8008788:	e7e7      	b.n	800875a <HAL_XSPI_AutoPolling+0x6e>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800878a:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800878c:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800878e:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008790:	e7f0      	b.n	8008774 <HAL_XSPI_AutoPolling+0x88>
      status = HAL_BUSY;
 8008792:	2002      	movs	r0, #2
 8008794:	e7ee      	b.n	8008774 <HAL_XSPI_AutoPolling+0x88>

08008796 <HAL_XSPI_MemoryMapped>:
{
 8008796:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008798:	4604      	mov	r4, r0
 800879a:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 800879c:	f7fb faa6 	bl	8003cec <HAL_GetTick>
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 80087a0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 80087a2:	4603      	mov	r3, r0
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 80087a4:	2a04      	cmp	r2, #4
 80087a6:	d121      	bne.n	80087ec <HAL_XSPI_MemoryMapped+0x56>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 80087a8:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80087aa:	2120      	movs	r1, #32
 80087ac:	9200      	str	r2, [sp, #0]
 80087ae:	4620      	mov	r0, r4
 80087b0:	2200      	movs	r2, #0
 80087b2:	f7ff fde1 	bl	8008378 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80087b6:	b9b8      	cbnz	r0, 80087e8 <HAL_XSPI_MemoryMapped+0x52>
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 80087b8:	2388      	movs	r3, #136	@ 0x88
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 80087ba:	6829      	ldr	r1, [r5, #0]
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 80087bc:	6822      	ldr	r2, [r4, #0]
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 80087be:	2908      	cmp	r1, #8
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 80087c0:	6563      	str	r3, [r4, #84]	@ 0x54
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 80087c2:	d108      	bne.n	80087d6 <HAL_XSPI_MemoryMapped+0x40>
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 80087c4:	686b      	ldr	r3, [r5, #4]
 80087c6:	f8c2 3130 	str.w	r3, [r2, #304]	@ 0x130
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TO);
 80087ca:	2310      	movs	r3, #16
 80087cc:	6253      	str	r3, [r2, #36]	@ 0x24
        HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TO);
 80087ce:	6813      	ldr	r3, [r2, #0]
 80087d0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80087d4:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_TCEN | XSPI_CR_FMODE),
 80087d6:	6813      	ldr	r3, [r2, #0]
 80087d8:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 80087dc:	f023 0308 	bic.w	r3, r3, #8
 80087e0:	430b      	orrs	r3, r1
 80087e2:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 80087e6:	6013      	str	r3, [r2, #0]
}
 80087e8:	b003      	add	sp, #12
 80087ea:	bd30      	pop	{r4, r5, pc}
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80087ec:	2310      	movs	r3, #16
    status = HAL_ERROR;
 80087ee:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80087f0:	65a3      	str	r3, [r4, #88]	@ 0x58
 80087f2:	e7f9      	b.n	80087e8 <HAL_XSPI_MemoryMapped+0x52>

080087f4 <HAL_XSPI_ErrorCallback>:
__weak void HAL_XSPI_ErrorCallback(XSPI_HandleTypeDef *hxspi)
 80087f4:	4770      	bx	lr

080087f6 <HAL_XSPI_AbortCpltCallback>:
__weak void HAL_XSPI_AbortCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087f6:	4770      	bx	lr

080087f8 <XSPI_DMAAbortCplt>:
{
 80087f8:	b508      	push	{r3, lr}
  hxspi->XferCount = 0;
 80087fa:	2300      	movs	r3, #0
  XSPI_HandleTypeDef *hxspi = (XSPI_HandleTypeDef *)(hdma->Parent);
 80087fc:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  hxspi->XferCount = 0;
 80087fe:	6483      	str	r3, [r0, #72]	@ 0x48
  if (hxspi->State == HAL_XSPI_STATE_ABORT)
 8008800:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8008802:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008806:	d114      	bne.n	8008832 <XSPI_DMAAbortCplt+0x3a>
    if (HAL_XSPI_GET_FLAG(hxspi, HAL_XSPI_FLAG_BUSY) != RESET)
 8008808:	6803      	ldr	r3, [r0, #0]
 800880a:	6a1a      	ldr	r2, [r3, #32]
 800880c:	f012 0f20 	tst.w	r2, #32
 8008810:	f04f 0202 	mov.w	r2, #2
 8008814:	d009      	beq.n	800882a <XSPI_DMAAbortCplt+0x32>
      HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 8008816:	625a      	str	r2, [r3, #36]	@ 0x24
      HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TC);
 8008818:	681a      	ldr	r2, [r3, #0]
 800881a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 800881e:	601a      	str	r2, [r3, #0]
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 8008820:	681a      	ldr	r2, [r3, #0]
 8008822:	f042 0202 	orr.w	r2, r2, #2
 8008826:	601a      	str	r2, [r3, #0]
}
 8008828:	bd08      	pop	{r3, pc}
      hxspi->State = HAL_XSPI_STATE_READY;
 800882a:	6542      	str	r2, [r0, #84]	@ 0x54
      HAL_XSPI_AbortCpltCallback(hxspi);
 800882c:	f7ff ffe3 	bl	80087f6 <HAL_XSPI_AbortCpltCallback>
 8008830:	e7fa      	b.n	8008828 <XSPI_DMAAbortCplt+0x30>
    hxspi->State = HAL_XSPI_STATE_READY;
 8008832:	2302      	movs	r3, #2
 8008834:	6543      	str	r3, [r0, #84]	@ 0x54
    HAL_XSPI_ErrorCallback(hxspi);
 8008836:	f7ff ffdd 	bl	80087f4 <HAL_XSPI_ErrorCallback>
}
 800883a:	e7f5      	b.n	8008828 <XSPI_DMAAbortCplt+0x30>

0800883c <HAL_XSPI_FifoThresholdCallback>:
__weak void HAL_XSPI_FifoThresholdCallback(XSPI_HandleTypeDef *hxspi)
 800883c:	4770      	bx	lr

0800883e <HAL_XSPI_CmdCpltCallback>:
__weak void HAL_XSPI_CmdCpltCallback(XSPI_HandleTypeDef *hxspi)
 800883e:	4770      	bx	lr

08008840 <HAL_XSPI_RxCpltCallback>:
__weak void HAL_XSPI_RxCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008840:	4770      	bx	lr

08008842 <HAL_XSPI_TxCpltCallback>:
__weak void HAL_XSPI_TxCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008842:	4770      	bx	lr

08008844 <HAL_XSPI_StatusMatchCallback>:
__weak void HAL_XSPI_StatusMatchCallback(XSPI_HandleTypeDef *hxspi)
 8008844:	4770      	bx	lr

08008846 <HAL_XSPI_TimeOutCallback>:
__weak void HAL_XSPI_TimeOutCallback(XSPI_HandleTypeDef *hxspi)
 8008846:	4770      	bx	lr

08008848 <HAL_XSPI_IRQHandler>:
{
 8008848:	b570      	push	{r4, r5, r6, lr}
 800884a:	4604      	mov	r4, r0
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 800884c:	6803      	ldr	r3, [r0, #0]
  uint32_t flag           = hxspi->Instance->SR;
 800884e:	6a1a      	ldr	r2, [r3, #32]
  uint32_t itsource       = hxspi->Instance->CR;
 8008850:	6818      	ldr	r0, [r3, #0]
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 8008852:	0755      	lsls	r5, r2, #29
  uint32_t currentstate   = hxspi->State;
 8008854:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 8008856:	d51f      	bpl.n	8008898 <HAL_XSPI_IRQHandler+0x50>
 8008858:	0346      	lsls	r6, r0, #13
 800885a:	d51d      	bpl.n	8008898 <HAL_XSPI_IRQHandler+0x50>
    if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 800885c:	2918      	cmp	r1, #24
 800885e:	d114      	bne.n	800888a <HAL_XSPI_IRQHandler+0x42>
      *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008860:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008862:	7812      	ldrb	r2, [r2, #0]
 8008864:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
      hxspi->pBuffPtr++;
 8008868:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800886a:	3301      	adds	r3, #1
 800886c:	6423      	str	r3, [r4, #64]	@ 0x40
      hxspi->XferCount--;
 800886e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008870:	3b01      	subs	r3, #1
 8008872:	64a3      	str	r3, [r4, #72]	@ 0x48
    if (hxspi->XferCount == 0U)
 8008874:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008876:	b923      	cbnz	r3, 8008882 <HAL_XSPI_IRQHandler+0x3a>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_FT);
 8008878:	6822      	ldr	r2, [r4, #0]
 800887a:	6813      	ldr	r3, [r2, #0]
 800887c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008880:	6013      	str	r3, [r2, #0]
    HAL_XSPI_FifoThresholdCallback(hxspi);
 8008882:	4620      	mov	r0, r4
 8008884:	f7ff ffda 	bl	800883c <HAL_XSPI_FifoThresholdCallback>
}
 8008888:	bd70      	pop	{r4, r5, r6, pc}
    else if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 800888a:	2928      	cmp	r1, #40	@ 0x28
 800888c:	d1f2      	bne.n	8008874 <HAL_XSPI_IRQHandler+0x2c>
      *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 800888e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008890:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008894:	7013      	strb	r3, [r2, #0]
 8008896:	e7e7      	b.n	8008868 <HAL_XSPI_IRQHandler+0x20>
  else if (((flag & HAL_XSPI_FLAG_TC) != 0U) && ((itsource & HAL_XSPI_IT_TC) != 0U))
 8008898:	0795      	lsls	r5, r2, #30
 800889a:	d53e      	bpl.n	800891a <HAL_XSPI_IRQHandler+0xd2>
 800889c:	0386      	lsls	r6, r0, #14
 800889e:	d53c      	bpl.n	800891a <HAL_XSPI_IRQHandler+0xd2>
    if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 80088a0:	2928      	cmp	r1, #40	@ 0x28
 80088a2:	d11d      	bne.n	80088e0 <HAL_XSPI_IRQHandler+0x98>
      if ((hxspi->XferCount > 0U) && ((flag & XSPI_SR_FLEVEL) != 0U))
 80088a4:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 80088a6:	b169      	cbz	r1, 80088c4 <HAL_XSPI_IRQHandler+0x7c>
 80088a8:	f412 4ffe 	tst.w	r2, #32512	@ 0x7f00
 80088ac:	d00a      	beq.n	80088c4 <HAL_XSPI_IRQHandler+0x7c>
        *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 80088ae:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80088b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80088b4:	7013      	strb	r3, [r2, #0]
        hxspi->pBuffPtr++;
 80088b6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80088b8:	3301      	adds	r3, #1
 80088ba:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 80088bc:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80088be:	3b01      	subs	r3, #1
 80088c0:	64a3      	str	r3, [r4, #72]	@ 0x48
 80088c2:	e7e1      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
      else if (hxspi->XferCount == 0U)
 80088c4:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80088c6:	2a00      	cmp	r2, #0
 80088c8:	d1de      	bne.n	8008888 <HAL_XSPI_IRQHandler+0x40>
        hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 80088ca:	2102      	movs	r1, #2
 80088cc:	6259      	str	r1, [r3, #36]	@ 0x24
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088ce:	681a      	ldr	r2, [r3, #0]
        HAL_XSPI_RxCpltCallback(hxspi);
 80088d0:	4620      	mov	r0, r4
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088d2:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 80088d6:	601a      	str	r2, [r3, #0]
        hxspi->State = HAL_XSPI_STATE_READY;
 80088d8:	6561      	str	r1, [r4, #84]	@ 0x54
        HAL_XSPI_RxCpltCallback(hxspi);
 80088da:	f7ff ffb1 	bl	8008840 <HAL_XSPI_RxCpltCallback>
 80088de:	e7d3      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
      hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 80088e0:	2002      	movs	r0, #2
 80088e2:	6258      	str	r0, [r3, #36]	@ 0x24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088e4:	681a      	ldr	r2, [r3, #0]
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 80088e6:	2918      	cmp	r1, #24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088e8:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 80088ec:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 80088ee:	6560      	str	r0, [r4, #84]	@ 0x54
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 80088f0:	d103      	bne.n	80088fa <HAL_XSPI_IRQHandler+0xb2>
        HAL_XSPI_TxCpltCallback(hxspi);
 80088f2:	4620      	mov	r0, r4
 80088f4:	f7ff ffa5 	bl	8008842 <HAL_XSPI_TxCpltCallback>
 80088f8:	e7c6      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_BUSY_CMD)
 80088fa:	2908      	cmp	r1, #8
 80088fc:	d103      	bne.n	8008906 <HAL_XSPI_IRQHandler+0xbe>
        HAL_XSPI_CmdCpltCallback(hxspi);
 80088fe:	4620      	mov	r0, r4
 8008900:	f7ff ff9d 	bl	800883e <HAL_XSPI_CmdCpltCallback>
 8008904:	e7c0      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_ABORT)
 8008906:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 800890a:	d1bd      	bne.n	8008888 <HAL_XSPI_IRQHandler+0x40>
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 800890c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
          HAL_XSPI_AbortCpltCallback(hxspi);
 800890e:	4620      	mov	r0, r4
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008910:	2b00      	cmp	r3, #0
 8008912:	d13b      	bne.n	800898c <HAL_XSPI_IRQHandler+0x144>
          HAL_XSPI_AbortCpltCallback(hxspi);
 8008914:	f7ff ff6f 	bl	80087f6 <HAL_XSPI_AbortCpltCallback>
 8008918:	e7b6      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_SM) != 0U) && ((itsource & HAL_XSPI_IT_SM) != 0U))
 800891a:	0715      	lsls	r5, r2, #28
 800891c:	d510      	bpl.n	8008940 <HAL_XSPI_IRQHandler+0xf8>
 800891e:	0301      	lsls	r1, r0, #12
 8008920:	d50e      	bpl.n	8008940 <HAL_XSPI_IRQHandler+0xf8>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_SM;
 8008922:	2208      	movs	r2, #8
 8008924:	625a      	str	r2, [r3, #36]	@ 0x24
    if ((hxspi->Instance->CR & XSPI_CR_APMS) != 0U)
 8008926:	681a      	ldr	r2, [r3, #0]
 8008928:	0252      	lsls	r2, r2, #9
 800892a:	d505      	bpl.n	8008938 <HAL_XSPI_IRQHandler+0xf0>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_SM | HAL_XSPI_IT_TE);
 800892c:	681a      	ldr	r2, [r3, #0]
 800892e:	f422 2210 	bic.w	r2, r2, #589824	@ 0x90000
 8008932:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 8008934:	2302      	movs	r3, #2
 8008936:	6563      	str	r3, [r4, #84]	@ 0x54
    HAL_XSPI_StatusMatchCallback(hxspi);
 8008938:	4620      	mov	r0, r4
 800893a:	f7ff ff83 	bl	8008844 <HAL_XSPI_StatusMatchCallback>
 800893e:	e7a3      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_TE) != 0U) && ((itsource & HAL_XSPI_IT_TE) != 0U))
 8008940:	07d6      	lsls	r6, r2, #31
 8008942:	d528      	bpl.n	8008996 <HAL_XSPI_IRQHandler+0x14e>
 8008944:	03c5      	lsls	r5, r0, #15
 8008946:	d526      	bpl.n	8008996 <HAL_XSPI_IRQHandler+0x14e>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 8008948:	2201      	movs	r2, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 800894a:	2502      	movs	r5, #2
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 800894c:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_DISABLE_IT(hxspi, (HAL_XSPI_IT_TO | HAL_XSPI_IT_SM | HAL_XSPI_IT_FT | HAL_XSPI_IT_TC | HAL_XSPI_IT_TE));
 800894e:	681a      	ldr	r2, [r3, #0]
 8008950:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 8008954:	601a      	str	r2, [r3, #0]
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 8008956:	65a5      	str	r5, [r4, #88]	@ 0x58
    if ((hxspi->Instance->CR & XSPI_CR_DMAEN) != 0U)
 8008958:	681a      	ldr	r2, [r3, #0]
 800895a:	0750      	lsls	r0, r2, #29
 800895c:	d519      	bpl.n	8008992 <HAL_XSPI_IRQHandler+0x14a>
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 800895e:	681a      	ldr	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008960:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8008962:	4e13      	ldr	r6, [pc, #76]	@ (80089b0 <HAL_XSPI_IRQHandler+0x168>)
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 8008964:	f022 0204 	bic.w	r2, r2, #4
 8008968:	601a      	str	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 800896a:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmatx) != HAL_OK)
 800896c:	f7fb fd50 	bl	8004410 <HAL_DMA_Abort_IT>
 8008970:	b118      	cbz	r0, 800897a <HAL_XSPI_IRQHandler+0x132>
        HAL_XSPI_ErrorCallback(hxspi);
 8008972:	4620      	mov	r0, r4
        hxspi->State = HAL_XSPI_STATE_READY;
 8008974:	6565      	str	r5, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 8008976:	f7ff ff3d 	bl	80087f4 <HAL_XSPI_ErrorCallback>
      hxspi->hdmarx->XferAbortCallback = XSPI_DMAAbortCplt;
 800897a:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800897c:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmarx) != HAL_OK)
 800897e:	f7fb fd47 	bl	8004410 <HAL_DMA_Abort_IT>
 8008982:	2800      	cmp	r0, #0
 8008984:	d080      	beq.n	8008888 <HAL_XSPI_IRQHandler+0x40>
        hxspi->State = HAL_XSPI_STATE_READY;
 8008986:	2302      	movs	r3, #2
 8008988:	6563      	str	r3, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 800898a:	4620      	mov	r0, r4
 800898c:	f7ff ff32 	bl	80087f4 <HAL_XSPI_ErrorCallback>
 8008990:	e77a      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
      hxspi->State = HAL_XSPI_STATE_READY;
 8008992:	6565      	str	r5, [r4, #84]	@ 0x54
      HAL_XSPI_ErrorCallback(hxspi);
 8008994:	e7f9      	b.n	800898a <HAL_XSPI_IRQHandler+0x142>
  else if (((flag & HAL_XSPI_FLAG_TO) != 0U) && ((itsource & HAL_XSPI_IT_TO) != 0U))
 8008996:	06d1      	lsls	r1, r2, #27
 8008998:	f57f af76 	bpl.w	8008888 <HAL_XSPI_IRQHandler+0x40>
 800899c:	02c2      	lsls	r2, r0, #11
 800899e:	f57f af73 	bpl.w	8008888 <HAL_XSPI_IRQHandler+0x40>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 80089a2:	2210      	movs	r2, #16
    HAL_XSPI_TimeOutCallback(hxspi);
 80089a4:	4620      	mov	r0, r4
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 80089a6:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_TimeOutCallback(hxspi);
 80089a8:	f7ff ff4d 	bl	8008846 <HAL_XSPI_TimeOutCallback>
}
 80089ac:	e76c      	b.n	8008888 <HAL_XSPI_IRQHandler+0x40>
 80089ae:	bf00      	nop
 80089b0:	080087f9 	.word	0x080087f9

080089b4 <IRQ_Context>:
#endif

/*
  Determine if CPU executes from interrupt context or if interrupts are masked.
*/
__STATIC_INLINE uint32_t IRQ_Context (void) {
 80089b4:	b510      	push	{r4, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80089b6:	f3ef 8405 	mrs	r4, IPSR
  uint32_t irq;
  BaseType_t state;

  irq = 0U;

  if (IS_IRQ_MODE()) {
 80089ba:	b114      	cbz	r4, 80089c2 <IRQ_Context+0xe>
    /* Called from interrupt context */
    irq = 1U;
 80089bc:	2401      	movs	r4, #1
    }
  }

  /* Return context, 0: thread context, 1: IRQ context */
  return (irq);
}
 80089be:	4620      	mov	r0, r4
 80089c0:	bd10      	pop	{r4, pc}
    state = xTaskGetSchedulerState();
 80089c2:	f001 fc51 	bl	800a268 <xTaskGetSchedulerState>
    if (state != taskSCHEDULER_NOT_STARTED) {
 80089c6:	2801      	cmp	r0, #1
 80089c8:	d0f9      	beq.n	80089be <IRQ_Context+0xa>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 80089ca:	f3ef 8310 	mrs	r3, PRIMASK
      if (IS_IRQ_MASKED()) {
 80089ce:	2b00      	cmp	r3, #0
 80089d0:	d1f4      	bne.n	80089bc <IRQ_Context+0x8>
 */
__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80089d2:	f3ef 8411 	mrs	r4, BASEPRI
 80089d6:	3c00      	subs	r4, #0
 80089d8:	bf18      	it	ne
 80089da:	2401      	movne	r4, #1
  return (irq);
 80089dc:	e7ef      	b.n	80089be <IRQ_Context+0xa>

080089de <SysTick_Handler>:
void SysTick_Handler (void) {
 80089de:	b508      	push	{r3, lr}
  SysTick->CTRL;
 80089e0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80089e4:	691b      	ldr	r3, [r3, #16]
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80089e6:	f001 fc3f 	bl	800a268 <xTaskGetSchedulerState>
 80089ea:	2801      	cmp	r0, #1
 80089ec:	d003      	beq.n	80089f6 <SysTick_Handler+0x18>
}
 80089ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80089f2:	f000 ba7d 	b.w	8008ef0 <xPortSysTickHandler>
}
 80089f6:	bd08      	pop	{r3, pc}

080089f8 <osKernelInitialize>:
/* ==== Kernel Management Functions ==== */

/*
  Initialize the RTOS Kernel.
*/
osStatus_t osKernelInitialize (void) {
 80089f8:	b508      	push	{r3, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 80089fa:	f7ff ffdb 	bl	80089b4 <IRQ_Context>
 80089fe:	b948      	cbnz	r0, 8008a14 <osKernelInitialize+0x1c>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 8008a00:	f001 fc32 	bl	800a268 <xTaskGetSchedulerState>

    /* Initialize if scheduler not started and not initialized before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 8008a04:	2801      	cmp	r0, #1
    state = xTaskGetSchedulerState();
 8008a06:	4603      	mov	r3, r0
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 8008a08:	d107      	bne.n	8008a1a <osKernelInitialize+0x22>
 8008a0a:	4a05      	ldr	r2, [pc, #20]	@ (8008a20 <osKernelInitialize+0x28>)
 8008a0c:	6810      	ldr	r0, [r2, #0]
 8008a0e:	b920      	cbnz	r0, 8008a1a <osKernelInitialize+0x22>
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        /* Initialize the memory regions when using heap_5 variant */
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008a10:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return execution status */
  return (stat);
}
 8008a12:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8008a14:	f06f 0005 	mvn.w	r0, #5
 8008a18:	e7fb      	b.n	8008a12 <osKernelInitialize+0x1a>
      stat = osError;
 8008a1a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008a1e:	e7f8      	b.n	8008a12 <osKernelInitialize+0x1a>
 8008a20:	2006eff0 	.word	0x2006eff0

08008a24 <osKernelStart>:
}

/*
  Start the RTOS Kernel scheduler.
*/
osStatus_t osKernelStart (void) {
 8008a24:	b510      	push	{r4, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 8008a26:	f7ff ffc5 	bl	80089b4 <IRQ_Context>
 8008a2a:	4604      	mov	r4, r0
 8008a2c:	b978      	cbnz	r0, 8008a4e <osKernelStart+0x2a>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 8008a2e:	f001 fc1b 	bl	800a268 <xTaskGetSchedulerState>

    /* Start scheduler if initialized and not started before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelReady)) {
 8008a32:	2801      	cmp	r0, #1
 8008a34:	d10e      	bne.n	8008a54 <osKernelStart+0x30>
 8008a36:	4b09      	ldr	r3, [pc, #36]	@ (8008a5c <osKernelStart+0x38>)
 8008a38:	681a      	ldr	r2, [r3, #0]
 8008a3a:	2a01      	cmp	r2, #1
 8008a3c:	d10a      	bne.n	8008a54 <osKernelStart+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008a3e:	4a08      	ldr	r2, [pc, #32]	@ (8008a60 <osKernelStart+0x3c>)
 8008a40:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to ensure correct API flow */
      KernelState = osKernelRunning;
 8008a42:	2202      	movs	r2, #2
 8008a44:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008a46:	f001 fab1 	bl	8009fac <vTaskStartScheduler>
      stat = osOK;
 8008a4a:	4620      	mov	r0, r4
    }
  }

  /* Return execution status */
  return (stat);
}
 8008a4c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008a4e:	f06f 0005 	mvn.w	r0, #5
 8008a52:	e7fb      	b.n	8008a4c <osKernelStart+0x28>
      stat = osError;
 8008a54:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008a58:	e7f8      	b.n	8008a4c <osKernelStart+0x28>
 8008a5a:	bf00      	nop
 8008a5c:	2006eff0 	.word	0x2006eff0
 8008a60:	e000ed00 	.word	0xe000ed00

08008a64 <osThreadNew>:
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008a64:	2300      	movs	r3, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008a66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a68:	b087      	sub	sp, #28
 8008a6a:	4606      	mov	r6, r0
 8008a6c:	460f      	mov	r7, r1
 8008a6e:	4614      	mov	r4, r2
  hTask = NULL;
 8008a70:	9305      	str	r3, [sp, #20]

  if ((IRQ_Context() == 0U) && (func != NULL)) {
 8008a72:	f7ff ff9f 	bl	80089b4 <IRQ_Context>
 8008a76:	b9d8      	cbnz	r0, 8008ab0 <osThreadNew+0x4c>
 8008a78:	b1d6      	cbz	r6, 8008ab0 <osThreadNew+0x4c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008a7a:	2c00      	cmp	r4, #0
 8008a7c:	d02f      	beq.n	8008ade <osThreadNew+0x7a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008a7e:	69a5      	ldr	r5, [r4, #24]
 8008a80:	2d00      	cmp	r5, #0
 8008a82:	bf08      	it	eq
 8008a84:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008a86:	1e6b      	subs	r3, r5, #1
 8008a88:	2b37      	cmp	r3, #55	@ 0x37
 8008a8a:	46ae      	mov	lr, r5
 8008a8c:	d811      	bhi.n	8008ab2 <osThreadNew+0x4e>
 8008a8e:	6863      	ldr	r3, [r4, #4]
 8008a90:	07db      	lsls	r3, r3, #31
 8008a92:	d40e      	bmi.n	8008ab2 <osThreadNew+0x4e>
        /* Invalid priority or unsupported osThreadJoinable attribute used */
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008a94:	6963      	ldr	r3, [r4, #20]
 8008a96:	b173      	cbz	r3, 8008ab6 <osThreadNew+0x52>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008a98:	089a      	lsrs	r2, r3, #2
      if (attr->name != NULL) {
 8008a9a:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a9c:	e9d4 c002 	ldrd	ip, r0, [r4, #8]
 8008aa0:	f1bc 0f00 	cmp.w	ip, #0
 8008aa4:	d009      	beq.n	8008aba <osThreadNew+0x56>
 8008aa6:	285f      	cmp	r0, #95	@ 0x5f
 8008aa8:	d902      	bls.n	8008ab0 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008aaa:	6920      	ldr	r0, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008aac:	b100      	cbz	r0, 8008ab0 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008aae:	b9db      	cbnz	r3, 8008ae8 <osThreadNew+0x84>
      }
    }
  }

  /* Return thread ID */
  return ((osThreadId_t)hTask);
 8008ab0:	9805      	ldr	r0, [sp, #20]
}
 8008ab2:	b007      	add	sp, #28
 8008ab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008ab6:	2280      	movs	r2, #128	@ 0x80
 8008ab8:	e7ef      	b.n	8008a9a <osThreadNew+0x36>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008aba:	2800      	cmp	r0, #0
 8008abc:	d1f8      	bne.n	8008ab0 <osThreadNew+0x4c>
      if (mem == 0) {
 8008abe:	6923      	ldr	r3, [r4, #16]
 8008ac0:	2b00      	cmp	r3, #0
 8008ac2:	d1f5      	bne.n	8008ab0 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (configSTACK_DEPTH_TYPE)stack, argument, prio, &hTask) != pdPASS) {
 8008ac4:	ab05      	add	r3, sp, #20
 8008ac6:	e9cd e300 	strd	lr, r3, [sp]
 8008aca:	4630      	mov	r0, r6
 8008acc:	463b      	mov	r3, r7
 8008ace:	b292      	uxth	r2, r2
 8008ad0:	f001 f8bd 	bl	8009c4e <xTaskCreate>
 8008ad4:	2801      	cmp	r0, #1
            hTask = NULL;
 8008ad6:	bf1c      	itt	ne
 8008ad8:	2300      	movne	r3, #0
 8008ada:	9305      	strne	r3, [sp, #20]
 8008adc:	e7e8      	b.n	8008ab0 <osThreadNew+0x4c>
    name = NULL;
 8008ade:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8008ae0:	f04f 0e18 	mov.w	lr, #24
    stack = configMINIMAL_STACK_SIZE;
 8008ae4:	2280      	movs	r2, #128	@ 0x80
 8008ae6:	e7ed      	b.n	8008ac4 <osThreadNew+0x60>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008ae8:	e9cd 0c01 	strd	r0, ip, [sp, #4]
 8008aec:	463b      	mov	r3, r7
 8008aee:	4630      	mov	r0, r6
 8008af0:	9500      	str	r5, [sp, #0]
 8008af2:	f001 f886 	bl	8009c02 <xTaskCreateStatic>
 8008af6:	9005      	str	r0, [sp, #20]
 8008af8:	e7da      	b.n	8008ab0 <osThreadNew+0x4c>

08008afa <osDelay>:
/* ==== Generic Wait Functions ==== */

/*
  Wait for Timeout (Time Delay).
*/
osStatus_t osDelay (uint32_t ticks) {
 8008afa:	b510      	push	{r4, lr}
 8008afc:	4604      	mov	r4, r0
  osStatus_t stat;

  if (IRQ_Context() != 0U) {
 8008afe:	f7ff ff59 	bl	80089b4 <IRQ_Context>
 8008b02:	b928      	cbnz	r0, 8008b10 <osDelay+0x16>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008b04:	b114      	cbz	r4, 8008b0c <osDelay+0x12>
      vTaskDelay(ticks);
 8008b06:	4620      	mov	r0, r4
 8008b08:	f001 fa1c 	bl	8009f44 <vTaskDelay>
    stat = osOK;
 8008b0c:	2000      	movs	r0, #0
    }
  }

  /* Return execution status */
  return (stat);
}
 8008b0e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008b10:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8008b14:	e7fb      	b.n	8008b0e <osDelay+0x14>

08008b16 <osSemaphoreNew>:
/* ==== Semaphore Management Functions ==== */

/*
  Create and Initialize a Semaphore object.
*/
osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008b16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b18:	4604      	mov	r4, r0
 8008b1a:	460e      	mov	r6, r1
 8008b1c:	4615      	mov	r5, r2
  SemaphoreHandle_t hSemaphore;
  int32_t mem;

  hSemaphore = NULL;

  if ((IRQ_Context() == 0U) && (max_count > 0U) && (initial_count <= max_count)) {
 8008b1e:	f7ff ff49 	bl	80089b4 <IRQ_Context>
 8008b22:	b940      	cbnz	r0, 8008b36 <osSemaphoreNew+0x20>
 8008b24:	b13c      	cbz	r4, 8008b36 <osSemaphoreNew+0x20>
 8008b26:	42b4      	cmp	r4, r6
 8008b28:	d305      	bcc.n	8008b36 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008b2a:	b155      	cbz	r5, 8008b42 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008b2c:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008b30:	b12b      	cbz	r3, 8008b3e <osSemaphoreNew+0x28>
 8008b32:	2a4f      	cmp	r2, #79	@ 0x4f
 8008b34:	d825      	bhi.n	8008b82 <osSemaphoreNew+0x6c>
  hSemaphore = NULL;
 8008b36:	2400      	movs	r4, #0
    }
  }

  /* Return semaphore ID */
  return ((osSemaphoreId_t)hSemaphore);
}
 8008b38:	4620      	mov	r0, r4
 8008b3a:	b002      	add	sp, #8
 8008b3c:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008b3e:	2a00      	cmp	r2, #0
 8008b40:	d1f9      	bne.n	8008b36 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8008b42:	2c01      	cmp	r4, #1
 8008b44:	d008      	beq.n	8008b58 <osSemaphoreNew+0x42>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008b46:	4620      	mov	r0, r4
 8008b48:	4631      	mov	r1, r6
 8008b4a:	f000 fc18 	bl	800937e <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008b4e:	4604      	mov	r4, r0
 8008b50:	2800      	cmp	r0, #0
 8008b52:	d0f0      	beq.n	8008b36 <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008b54:	b975      	cbnz	r5, 8008b74 <osSemaphoreNew+0x5e>
 8008b56:	e7ef      	b.n	8008b38 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8008b58:	2203      	movs	r2, #3
 8008b5a:	2100      	movs	r1, #0
 8008b5c:	2001      	movs	r0, #1
 8008b5e:	f000 fbd1 	bl	8009304 <xQueueGenericCreate>
 8008b62:	e017      	b.n	8008b94 <osSemaphoreNew+0x7e>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008b64:	4620      	mov	r0, r4
 8008b66:	461a      	mov	r2, r3
 8008b68:	4631      	mov	r1, r6
 8008b6a:	f000 fbf5 	bl	8009358 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008b6e:	4604      	mov	r4, r0
 8008b70:	2800      	cmp	r0, #0
 8008b72:	d0e0      	beq.n	8008b36 <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008b74:	6829      	ldr	r1, [r5, #0]
 8008b76:	2900      	cmp	r1, #0
 8008b78:	d0de      	beq.n	8008b38 <osSemaphoreNew+0x22>
          vQueueAddToRegistry (hSemaphore, attr->name);
 8008b7a:	4620      	mov	r0, r4
 8008b7c:	f000 fe6c 	bl	8009858 <vQueueAddToRegistry>
 8008b80:	e7da      	b.n	8008b38 <osSemaphoreNew+0x22>
      if (max_count == 1U) {
 8008b82:	2c01      	cmp	r4, #1
 8008b84:	d1ee      	bne.n	8008b64 <osSemaphoreNew+0x4e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008b86:	2203      	movs	r2, #3
 8008b88:	4601      	mov	r1, r0
 8008b8a:	9200      	str	r2, [sp, #0]
 8008b8c:	4602      	mov	r2, r0
 8008b8e:	4620      	mov	r0, r4
 8008b90:	f000 fb8d 	bl	80092ae <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008b94:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008b96:	2800      	cmp	r0, #0
 8008b98:	d0cd      	beq.n	8008b36 <osSemaphoreNew+0x20>
 8008b9a:	2e00      	cmp	r6, #0
 8008b9c:	d0da      	beq.n	8008b54 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008b9e:	2300      	movs	r3, #0
 8008ba0:	461a      	mov	r2, r3
 8008ba2:	4619      	mov	r1, r3
 8008ba4:	f000 fbfa 	bl	800939c <xQueueGenericSend>
 8008ba8:	2801      	cmp	r0, #1
 8008baa:	d0d3      	beq.n	8008b54 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8008bac:	4620      	mov	r0, r4
 8008bae:	f000 fe91 	bl	80098d4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008bb2:	e7c0      	b.n	8008b36 <osSemaphoreNew+0x20>

08008bb4 <osSemaphoreAcquire>:

/*
  Acquire a Semaphore token or timeout if no tokens are available.
*/
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008bb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008bb6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008bb8:	4605      	mov	r5, r0
 8008bba:	b918      	cbnz	r0, 8008bc4 <osSemaphoreAcquire+0x10>
    stat = osErrorParameter;
 8008bbc:	f06f 0003 	mvn.w	r0, #3
    }
  }

  /* Return execution status */
  return (stat);
}
 8008bc0:	b003      	add	sp, #12
 8008bc2:	bd30      	pop	{r4, r5, pc}
  else if (IRQ_Context() != 0U) {
 8008bc4:	f7ff fef6 	bl	80089b4 <IRQ_Context>
 8008bc8:	b1b8      	cbz	r0, 8008bfa <osSemaphoreAcquire+0x46>
    if (timeout != 0U) {
 8008bca:	2c00      	cmp	r4, #0
 8008bcc:	d1f6      	bne.n	8008bbc <osSemaphoreAcquire+0x8>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008bce:	4621      	mov	r1, r4
 8008bd0:	4628      	mov	r0, r5
 8008bd2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008bd4:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008bd6:	f000 fe01 	bl	80097dc <xQueueReceiveFromISR>
 8008bda:	2801      	cmp	r0, #1
 8008bdc:	d002      	beq.n	8008be4 <osSemaphoreAcquire+0x30>
        stat = osErrorResource;
 8008bde:	f06f 0002 	mvn.w	r0, #2
 8008be2:	e7ed      	b.n	8008bc0 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008be4:	9b01      	ldr	r3, [sp, #4]
 8008be6:	b90b      	cbnz	r3, 8008bec <osSemaphoreAcquire+0x38>
  stat = osOK;
 8008be8:	2000      	movs	r0, #0
 8008bea:	e7e9      	b.n	8008bc0 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008bec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008bf0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bf4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008bf8:	e7f6      	b.n	8008be8 <osSemaphoreAcquire+0x34>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008bfa:	4621      	mov	r1, r4
 8008bfc:	4628      	mov	r0, r5
 8008bfe:	f000 fd58 	bl	80096b2 <xQueueSemaphoreTake>
 8008c02:	2801      	cmp	r0, #1
 8008c04:	d0f0      	beq.n	8008be8 <osSemaphoreAcquire+0x34>
      if (timeout != 0U) {
 8008c06:	2c00      	cmp	r4, #0
 8008c08:	d0e9      	beq.n	8008bde <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008c0a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008c0e:	e7d7      	b.n	8008bc0 <osSemaphoreAcquire+0xc>

08008c10 <osSemaphoreRelease>:

/*
  Release a Semaphore token up to the initial maximum count.
*/
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008c10:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008c12:	4604      	mov	r4, r0
 8008c14:	b308      	cbz	r0, 8008c5a <osSemaphoreRelease+0x4a>
    stat = osErrorParameter;
  }
  else if (IRQ_Context() != 0U) {
 8008c16:	f7ff fecd 	bl	80089b4 <IRQ_Context>
 8008c1a:	4603      	mov	r3, r0
 8008c1c:	b1a8      	cbz	r0, 8008c4a <osSemaphoreRelease+0x3a>
    yield = pdFALSE;
 8008c1e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008c20:	4620      	mov	r0, r4
 8008c22:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008c24:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008c26:	f000 fc8b 	bl	8009540 <xQueueGiveFromISR>
 8008c2a:	2801      	cmp	r0, #1
 8008c2c:	d003      	beq.n	8008c36 <osSemaphoreRelease+0x26>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008c2e:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008c32:	b002      	add	sp, #8
 8008c34:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008c36:	9b01      	ldr	r3, [sp, #4]
 8008c38:	b12b      	cbz	r3, 8008c46 <osSemaphoreRelease+0x36>
 8008c3a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c42:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
  stat = osOK;
 8008c46:	2000      	movs	r0, #0
 8008c48:	e7f3      	b.n	8008c32 <osSemaphoreRelease+0x22>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008c4a:	4602      	mov	r2, r0
 8008c4c:	4601      	mov	r1, r0
 8008c4e:	4620      	mov	r0, r4
 8008c50:	f000 fba4 	bl	800939c <xQueueGenericSend>
 8008c54:	2801      	cmp	r0, #1
 8008c56:	d0f6      	beq.n	8008c46 <osSemaphoreRelease+0x36>
 8008c58:	e7e9      	b.n	8008c2e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008c5a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008c5e:	e7e8      	b.n	8008c32 <osSemaphoreRelease+0x22>

08008c60 <osMessageQueueNew>:

  Limitations:
  - The memory for control block and and message data must be provided in the
    osThreadAttr_t structure in order to allocate object statically.
*/
osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008c60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c62:	4605      	mov	r5, r0
 8008c64:	460e      	mov	r6, r1
 8008c66:	4614      	mov	r4, r2
  QueueHandle_t hQueue;
  int32_t mem;

  hQueue = NULL;

  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008c68:	f7ff fea4 	bl	80089b4 <IRQ_Context>
 8008c6c:	b118      	cbz	r0, 8008c76 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008c6e:	2500      	movs	r5, #0

  }

  /* Return message queue ID */
  return ((osMessageQueueId_t)hQueue);
}
 8008c70:	4628      	mov	r0, r5
 8008c72:	b003      	add	sp, #12
 8008c74:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008c76:	2d00      	cmp	r5, #0
 8008c78:	d0f9      	beq.n	8008c6e <osMessageQueueNew+0xe>
 8008c7a:	2e00      	cmp	r6, #0
 8008c7c:	d0f7      	beq.n	8008c6e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008c7e:	b31c      	cbz	r4, 8008cc8 <osMessageQueueNew+0x68>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c80:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008c84:	b1c3      	cbz	r3, 8008cb8 <osMessageQueueNew+0x58>
 8008c86:	2a4f      	cmp	r2, #79	@ 0x4f
 8008c88:	d9f1      	bls.n	8008c6e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c8a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c8c:	2a00      	cmp	r2, #0
 8008c8e:	d0ee      	beq.n	8008c6e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c90:	fb06 f105 	mul.w	r1, r6, r5
 8008c94:	6967      	ldr	r7, [r4, #20]
 8008c96:	428f      	cmp	r7, r1
 8008c98:	d3e9      	bcc.n	8008c6e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008c9a:	9000      	str	r0, [sp, #0]
 8008c9c:	4631      	mov	r1, r6
 8008c9e:	4628      	mov	r0, r5
 8008ca0:	f000 fb05 	bl	80092ae <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008ca4:	4605      	mov	r5, r0
 8008ca6:	2800      	cmp	r0, #0
 8008ca8:	d0e1      	beq.n	8008c6e <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008caa:	6821      	ldr	r1, [r4, #0]
 8008cac:	2900      	cmp	r1, #0
 8008cae:	d0df      	beq.n	8008c70 <osMessageQueueNew+0x10>
        vQueueAddToRegistry (hQueue, attr->name);
 8008cb0:	4628      	mov	r0, r5
 8008cb2:	f000 fdd1 	bl	8009858 <vQueueAddToRegistry>
 8008cb6:	e7db      	b.n	8008c70 <osMessageQueueNew+0x10>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008cb8:	2a00      	cmp	r2, #0
 8008cba:	d1d8      	bne.n	8008c6e <osMessageQueueNew+0xe>
 8008cbc:	6923      	ldr	r3, [r4, #16]
 8008cbe:	2b00      	cmp	r3, #0
 8008cc0:	d1d5      	bne.n	8008c6e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008cc2:	6963      	ldr	r3, [r4, #20]
 8008cc4:	2b00      	cmp	r3, #0
 8008cc6:	d1d2      	bne.n	8008c6e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008cc8:	4628      	mov	r0, r5
 8008cca:	2200      	movs	r2, #0
 8008ccc:	4631      	mov	r1, r6
 8008cce:	f000 fb19 	bl	8009304 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008cd2:	4605      	mov	r5, r0
 8008cd4:	2800      	cmp	r0, #0
 8008cd6:	d0ca      	beq.n	8008c6e <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008cd8:	2c00      	cmp	r4, #0
 8008cda:	d1e6      	bne.n	8008caa <osMessageQueueNew+0x4a>
 8008cdc:	e7c8      	b.n	8008c70 <osMessageQueueNew+0x10>

08008cde <osMessageQueuePut>:
  Put a Message into a Queue or timeout if Queue is full.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008cde:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008ce0:	461c      	mov	r4, r3
 8008ce2:	4605      	mov	r5, r0
 8008ce4:	460e      	mov	r6, r1

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008ce6:	f7ff fe65 	bl	80089b4 <IRQ_Context>
 8008cea:	4603      	mov	r3, r0
 8008cec:	b1d0      	cbz	r0, 8008d24 <osMessageQueuePut+0x46>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008cee:	b33d      	cbz	r5, 8008d40 <osMessageQueuePut+0x62>
 8008cf0:	b336      	cbz	r6, 8008d40 <osMessageQueuePut+0x62>
 8008cf2:	bb2c      	cbnz	r4, 8008d40 <osMessageQueuePut+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008cf4:	4623      	mov	r3, r4
 8008cf6:	4631      	mov	r1, r6
 8008cf8:	4628      	mov	r0, r5
 8008cfa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008cfc:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008cfe:	f000 fbd6 	bl	80094ae <xQueueGenericSendFromISR>
 8008d02:	2801      	cmp	r0, #1
 8008d04:	d003      	beq.n	8008d0e <osMessageQueuePut+0x30>
        stat = osErrorResource;
 8008d06:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008d0a:	b002      	add	sp, #8
 8008d0c:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008d0e:	9b01      	ldr	r3, [sp, #4]
 8008d10:	b90b      	cbnz	r3, 8008d16 <osMessageQueuePut+0x38>
  stat = osOK;
 8008d12:	2000      	movs	r0, #0
 8008d14:	e7f9      	b.n	8008d0a <osMessageQueuePut+0x2c>
        portYIELD_FROM_ISR (yield);
 8008d16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d22:	e7f6      	b.n	8008d12 <osMessageQueuePut+0x34>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d24:	b165      	cbz	r5, 8008d40 <osMessageQueuePut+0x62>
 8008d26:	b15e      	cbz	r6, 8008d40 <osMessageQueuePut+0x62>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d28:	4622      	mov	r2, r4
 8008d2a:	4631      	mov	r1, r6
 8008d2c:	4628      	mov	r0, r5
 8008d2e:	f000 fb35 	bl	800939c <xQueueGenericSend>
 8008d32:	2801      	cmp	r0, #1
 8008d34:	d0ed      	beq.n	8008d12 <osMessageQueuePut+0x34>
        if (timeout != 0U) {
 8008d36:	2c00      	cmp	r4, #0
 8008d38:	d0e5      	beq.n	8008d06 <osMessageQueuePut+0x28>
          stat = osErrorTimeout;
 8008d3a:	f06f 0001 	mvn.w	r0, #1
 8008d3e:	e7e4      	b.n	8008d0a <osMessageQueuePut+0x2c>
      stat = osErrorParameter;
 8008d40:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008d44:	e7e1      	b.n	8008d0a <osMessageQueuePut+0x2c>

08008d46 <osMessageQueueGet>:
  Get a Message from a Queue or timeout if Queue is empty.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008d46:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008d48:	4605      	mov	r5, r0
 8008d4a:	460e      	mov	r6, r1
 8008d4c:	461c      	mov	r4, r3

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008d4e:	f7ff fe31 	bl	80089b4 <IRQ_Context>
 8008d52:	b1c8      	cbz	r0, 8008d88 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008d54:	b335      	cbz	r5, 8008da4 <osMessageQueueGet+0x5e>
 8008d56:	b32e      	cbz	r6, 8008da4 <osMessageQueueGet+0x5e>
 8008d58:	bb24      	cbnz	r4, 8008da4 <osMessageQueueGet+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008d5a:	4631      	mov	r1, r6
 8008d5c:	4628      	mov	r0, r5
 8008d5e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008d60:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008d62:	f000 fd3b 	bl	80097dc <xQueueReceiveFromISR>
 8008d66:	2801      	cmp	r0, #1
 8008d68:	d003      	beq.n	8008d72 <osMessageQueueGet+0x2c>
        stat = osErrorResource;
 8008d6a:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008d6e:	b002      	add	sp, #8
 8008d70:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008d72:	9b01      	ldr	r3, [sp, #4]
 8008d74:	b90b      	cbnz	r3, 8008d7a <osMessageQueueGet+0x34>
  stat = osOK;
 8008d76:	2000      	movs	r0, #0
 8008d78:	e7f9      	b.n	8008d6e <osMessageQueueGet+0x28>
        portYIELD_FROM_ISR (yield);
 8008d7a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d7e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d82:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d86:	e7f6      	b.n	8008d76 <osMessageQueueGet+0x30>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d88:	b165      	cbz	r5, 8008da4 <osMessageQueueGet+0x5e>
 8008d8a:	b15e      	cbz	r6, 8008da4 <osMessageQueueGet+0x5e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d8c:	4622      	mov	r2, r4
 8008d8e:	4631      	mov	r1, r6
 8008d90:	4628      	mov	r0, r5
 8008d92:	f000 fc12 	bl	80095ba <xQueueReceive>
 8008d96:	2801      	cmp	r0, #1
 8008d98:	d0ed      	beq.n	8008d76 <osMessageQueueGet+0x30>
        if (timeout != 0U) {
 8008d9a:	2c00      	cmp	r4, #0
 8008d9c:	d0e5      	beq.n	8008d6a <osMessageQueueGet+0x24>
          stat = osErrorTimeout;
 8008d9e:	f06f 0001 	mvn.w	r0, #1
 8008da2:	e7e4      	b.n	8008d6e <osMessageQueueGet+0x28>
      stat = osErrorParameter;
 8008da4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008da8:	e7e1      	b.n	8008d6e <osMessageQueueGet+0x28>
	...

08008dac <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008dac:	4b03      	ldr	r3, [pc, #12]	@ (8008dbc <vApplicationGetIdleTaskMemory+0x10>)
 8008dae:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008db0:	4b03      	ldr	r3, [pc, #12]	@ (8008dc0 <vApplicationGetIdleTaskMemory+0x14>)
 8008db2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008db4:	2380      	movs	r3, #128	@ 0x80
 8008db6:	6013      	str	r3, [r2, #0]
}
 8008db8:	4770      	bx	lr
 8008dba:	bf00      	nop
 8008dbc:	2006ef90 	.word	0x2006ef90
 8008dc0:	2006ed90 	.word	0x2006ed90

08008dc4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008dc4:	4b03      	ldr	r3, [pc, #12]	@ (8008dd4 <vApplicationGetTimerTaskMemory+0x10>)
 8008dc6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008dc8:	4b03      	ldr	r3, [pc, #12]	@ (8008dd8 <vApplicationGetTimerTaskMemory+0x14>)
 8008dca:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008dcc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008dd0:	6013      	str	r3, [r2, #0]
}
 8008dd2:	4770      	bx	lr
 8008dd4:	2006ed30 	.word	0x2006ed30
 8008dd8:	2006e930 	.word	0x2006e930

08008ddc <vListInitialise>:
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008ddc:	f04f 32ff 	mov.w	r2, #4294967295
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008de0:	f100 0308 	add.w	r3, r0, #8

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008de4:	e9c0 2302 	strd	r2, r3, [r0, #8]
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008de8:	6043      	str	r3, [r0, #4]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008dea:	6103      	str	r3, [r0, #16]

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008dec:	2300      	movs	r3, #0
 8008dee:	6003      	str	r3, [r0, #0]

    /* Write known values into the list if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008df0:	4770      	bx	lr

08008df2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 8008df2:	2300      	movs	r3, #0
 8008df4:	6103      	str	r3, [r0, #16]

    /* Write known values into the list item if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008df6:	4770      	bx	lr

08008df8 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 8008df8:	b530      	push	{r4, r5, lr}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008dfa:	680c      	ldr	r4, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 8008dfc:	1c63      	adds	r3, r4, #1
 8008dfe:	d10a      	bne.n	8008e16 <vListInsert+0x1e>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
 8008e00:	6903      	ldr	r3, [r0, #16]
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 8008e02:	685a      	ldr	r2, [r3, #4]
 8008e04:	604a      	str	r2, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008e06:	6091      	str	r1, [r2, #8]
    pxNewListItem->pxPrevious = pxIterator;
 8008e08:	608b      	str	r3, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 8008e0a:	6059      	str	r1, [r3, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
 8008e0c:	6803      	ldr	r3, [r0, #0]
    pxNewListItem->pxContainer = pxList;
 8008e0e:	6108      	str	r0, [r1, #16]
    ( pxList->uxNumberOfItems )++;
 8008e10:	3301      	adds	r3, #1
 8008e12:	6003      	str	r3, [r0, #0]
}
 8008e14:	bd30      	pop	{r4, r5, pc}
        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008e16:	f100 0208 	add.w	r2, r0, #8
 8008e1a:	4613      	mov	r3, r2
 8008e1c:	6852      	ldr	r2, [r2, #4]
 8008e1e:	6815      	ldr	r5, [r2, #0]
 8008e20:	42a5      	cmp	r5, r4
 8008e22:	d9fa      	bls.n	8008e1a <vListInsert+0x22>
 8008e24:	e7ed      	b.n	8008e02 <vListInsert+0xa>

08008e26 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 8008e26:	6903      	ldr	r3, [r0, #16]

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008e28:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008e2c:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008e2e:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 8008e30:	6859      	ldr	r1, [r3, #4]
 8008e32:	4281      	cmp	r1, r0
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008e34:	bf08      	it	eq
 8008e36:	605a      	streq	r2, [r3, #4]
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 8008e38:	2200      	movs	r2, #0
 8008e3a:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems )--;
 8008e3c:	681a      	ldr	r2, [r3, #0]
 8008e3e:	3a01      	subs	r2, #1
 8008e40:	601a      	str	r2, [r3, #0]

    return pxList->uxNumberOfItems;
 8008e42:	6818      	ldr	r0, [r3, #0]
}
 8008e44:	4770      	bx	lr
	...

08008e48 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    volatile uint32_t ulDummy = 0UL;
 8008e48:	2300      	movs	r3, #0
{
 8008e4a:	b507      	push	{r0, r1, r2, lr}
    volatile uint32_t ulDummy = 0UL;
 8008e4c:	9301      	str	r3, [sp, #4]
    /* A function that implements a task must not exit or attempt to return to
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
 8008e4e:	4b07      	ldr	r3, [pc, #28]	@ (8008e6c <prvTaskExitError+0x24>)
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	3301      	adds	r3, #1
 8008e54:	d002      	beq.n	8008e5c <prvTaskExitError+0x14>
 8008e56:	f000 f905 	bl	8009064 <ulSetInterruptMask>
 8008e5a:	e7fe      	b.n	8008e5a <prvTaskExitError+0x12>
    portDISABLE_INTERRUPTS();
 8008e5c:	f000 f902 	bl	8009064 <ulSetInterruptMask>

    while( ulDummy == 0 )
 8008e60:	9b01      	ldr	r3, [sp, #4]
 8008e62:	2b00      	cmp	r3, #0
 8008e64:	d0fc      	beq.n	8008e60 <prvTaskExitError+0x18>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
 8008e66:	b003      	add	sp, #12
 8008e68:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e6c:	20000058 	.word	0x20000058

08008e70 <vPortSetupTimerInterrupt>:
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e70:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008e74:	2300      	movs	r3, #0
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e76:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e7a:	6113      	str	r3, [r2, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008e7c:	6193      	str	r3, [r2, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e7e:	4b04      	ldr	r3, [pc, #16]	@ (8008e90 <vPortSetupTimerInterrupt+0x20>)
 8008e80:	681b      	ldr	r3, [r3, #0]
 8008e82:	fbb3 f3f1 	udiv	r3, r3, r1
 8008e86:	3b01      	subs	r3, #1
 8008e88:	6153      	str	r3, [r2, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 8008e8a:	2307      	movs	r3, #7
 8008e8c:	6113      	str	r3, [r2, #16]
}
 8008e8e:	4770      	bx	lr
 8008e90:	2000004c 	.word	0x2000004c

08008e94 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e94:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e98:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008ea0:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008ea4:	f3bf 8f6f 	isb	sy
}
 8008ea8:	4770      	bx	lr
	...

08008eac <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008eac:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
 8008eae:	f000 f8d9 	bl	8009064 <ulSetInterruptMask>
    ulCriticalNesting++;
 8008eb2:	4a04      	ldr	r2, [pc, #16]	@ (8008ec4 <vPortEnterCritical+0x18>)
 8008eb4:	6813      	ldr	r3, [r2, #0]
 8008eb6:	3301      	adds	r3, #1
 8008eb8:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008eba:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008ebe:	f3bf 8f6f 	isb	sy
}
 8008ec2:	bd08      	pop	{r3, pc}
 8008ec4:	20000058 	.word	0x20000058

08008ec8 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008ec8:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
 8008eca:	4b08      	ldr	r3, [pc, #32]	@ (8008eec <vPortExitCritical+0x24>)
 8008ecc:	681a      	ldr	r2, [r3, #0]
 8008ece:	b912      	cbnz	r2, 8008ed6 <vPortExitCritical+0xe>
 8008ed0:	f000 f8c8 	bl	8009064 <ulSetInterruptMask>
 8008ed4:	e7fe      	b.n	8008ed4 <vPortExitCritical+0xc>
    ulCriticalNesting--;
 8008ed6:	681a      	ldr	r2, [r3, #0]
 8008ed8:	3a01      	subs	r2, #1
 8008eda:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
 8008edc:	6818      	ldr	r0, [r3, #0]
 8008ede:	b918      	cbnz	r0, 8008ee8 <vPortExitCritical+0x20>
    {
        portENABLE_INTERRUPTS();
    }
}
 8008ee0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        portENABLE_INTERRUPTS();
 8008ee4:	f000 b8c9 	b.w	800907a <vClearInterruptMask>
}
 8008ee8:	bd08      	pop	{r3, pc}
 8008eea:	bf00      	nop
 8008eec:	20000058 	.word	0x20000058

08008ef0 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
 8008ef0:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 8008ef2:	f000 f8b7 	bl	8009064 <ulSetInterruptMask>
 8008ef6:	4604      	mov	r4, r0
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
 8008ef8:	f000 fee6 	bl	8009cc8 <xTaskIncrementTick>
 8008efc:	b128      	cbz	r0, 8008f0a <xPortSysTickHandler+0x1a>
        {
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008efe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f02:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f06:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008f0a:	4620      	mov	r0, r4
}
 8008f0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008f10:	f000 b8b3 	b.w	800907a <vClearInterruptMask>

08008f14 <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
 8008f14:	b508      	push	{r3, lr}
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ 6 ];
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
 8008f16:	6983      	ldr	r3, [r0, #24]

    switch( ucSVCNumber )
 8008f18:	f813 3c02 	ldrb.w	r3, [r3, #-2]
 8008f1c:	2b02      	cmp	r3, #2
 8008f1e:	d111      	bne.n	8008f44 <vPortSVCHandler_C+0x30>
        *( portCPACR ) |= ( ( portCPACR_CP10_VALUE << portCPACR_CP10_POS ) |
 8008f20:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f24:	f8d3 2d88 	ldr.w	r2, [r3, #3464]	@ 0xd88
 8008f28:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8008f2c:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
        *( portFPCCR ) |= ( portFPCCR_ASPEN_MASK | portFPCCR_LSPEN_MASK );
 8008f30:	f8d3 2f34 	ldr.w	r2, [r3, #3892]	@ 0xf34
 8008f34:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
 8008f38:	f8c3 2f34 	str.w	r2, [r3, #3892]	@ 0xf34

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
 8008f3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            vRestoreContextOfFirstTask();
 8008f40:	f000 b85e 	b.w	8009000 <vRestoreContextOfFirstTask>
            configASSERT( pdFALSE );
 8008f44:	f000 f88e 	bl	8009064 <ulSetInterruptMask>
 8008f48:	e7fe      	b.n	8008f48 <vPortSVCHandler_C+0x34>
	...

08008f4c <pxPortInitialiseStack>:
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
#endif /* configENABLE_MPU */
/* *INDENT-ON* */
{
 8008f4c:	b510      	push	{r4, lr}
            #endif /* configENABLE_TRUSTZONE */
        }
    #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
 8008f4e:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
 8008f52:	e940 2402 	strd	r2, r4, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008f56:	4a18      	ldr	r2, [pc, #96]	@ (8008fb8 <pxPortInitialiseStack+0x6c>)
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f58:	f04f 3412 	mov.w	r4, #303174162	@ 0x12121212
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008f5c:	f840 2c0c 	str.w	r2, [r0, #-12]
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f60:	f04f 3203 	mov.w	r2, #50529027	@ 0x3030303
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f64:	f04f 3c02 	mov.w	ip, #33686018	@ 0x2020202
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f68:	e940 2405 	strd	r2, r4, [r0, #-20]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f6c:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
 8008f70:	f840 3c20 	str.w	r3, [r0, #-32]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f74:	e940 2c07 	strd	r2, ip, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f78:	f04f 3310 	mov.w	r3, #269488144	@ 0x10101010
 8008f7c:	f04f 3211 	mov.w	r2, #286331153	@ 0x11111111
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f80:	f04f 3409 	mov.w	r4, #151587081	@ 0x9090909
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f84:	e940 320a 	strd	r3, r2, [r0, #-40]	@ 0x28
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f88:	f04f 3308 	mov.w	r3, #134744072	@ 0x8080808
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f8c:	f04f 3c07 	mov.w	ip, #117901063	@ 0x7070707
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f90:	e940 340c 	strd	r3, r4, [r0, #-48]	@ 0x30
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f94:	f04f 3306 	mov.w	r3, #101058054	@ 0x6060606
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f98:	f04f 3205 	mov.w	r2, #84215045	@ 0x5050505
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f9c:	e940 3c0e 	strd	r3, ip, [r0, #-56]	@ 0x38
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008fa0:	f04f 3304 	mov.w	r3, #67372036	@ 0x4040404
 8008fa4:	e940 3210 	strd	r3, r2, [r0, #-64]	@ 0x40
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN */
 8008fa8:	f06f 0343 	mvn.w	r3, #67	@ 0x43
 8008fac:	f840 3c44 	str.w	r3, [r0, #-68]
                    }
                }
            #endif /* configENABLE_MPU */

            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack; /* Slot used to hold this task's PSPLIM value. */
 8008fb0:	f840 1d48 	str.w	r1, [r0, #-72]!
            #endif /* configENABLE_TRUSTZONE */
        }
    #endif /* portPRELOAD_REGISTERS */

    return pxTopOfStack;
}
 8008fb4:	bd10      	pop	{r4, pc}
 8008fb6:	bf00      	nop
 8008fb8:	08008e49 	.word	0x08008e49

08008fbc <xPortStartScheduler>:
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
    /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008fbc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008fc0:	b510      	push	{r4, lr}
    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
 8008fc2:	2400      	movs	r4, #0
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008fc4:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008fc8:	f442 027f 	orr.w	r2, r2, #16711680	@ 0xff0000
 8008fcc:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 8008fd0:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008fd4:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8008fd8:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    vPortSetupTimerInterrupt();
 8008fdc:	f7ff ff48 	bl	8008e70 <vPortSetupTimerInterrupt>
    ulCriticalNesting = 0;
 8008fe0:	4b04      	ldr	r3, [pc, #16]	@ (8008ff4 <xPortStartScheduler+0x38>)
 8008fe2:	601c      	str	r4, [r3, #0]

    /* Start the first task. */
    vStartFirstTask();
 8008fe4:	f000 f82c 	bl	8009040 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
 8008fe8:	f001 f824 	bl	800a034 <vTaskSwitchContext>
    prvTaskExitError();
 8008fec:	f7ff ff2c 	bl	8008e48 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
 8008ff0:	4620      	mov	r0, r4
 8008ff2:	bd10      	pop	{r4, pc}
 8008ff4:	20000058 	.word	0x20000058
	...

08009000 <vRestoreContextOfFirstTask>:
 * header files. */
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009000:	4a0b      	ldr	r2, [pc, #44]	@ (8009030 <pxCurrentTCBConst2>)
 8009002:	6811      	ldr	r1, [r2, #0]
 8009004:	6808      	ldr	r0, [r1, #0]
 8009006:	c806      	ldmia	r0!, {r1, r2}
 8009008:	f381 880b 	msr	PSPLIM, r1
 800900c:	2102      	movs	r1, #2
 800900e:	f381 8814 	msr	CONTROL, r1
 8009012:	3020      	adds	r0, #32
 8009014:	f380 8809 	msr	PSP, r0
 8009018:	f3bf 8f6f 	isb	sy
 800901c:	f04f 0000 	mov.w	r0, #0
 8009020:	f380 8811 	msr	BASEPRI, r0
 8009024:	4710      	bx	r2
 8009026:	bf00      	nop
 8009028:	f3af 8000 	nop.w
 800902c:	f3af 8000 	nop.w

08009030 <pxCurrentTCBConst2>:
 8009030:	2006f52c 	.word	0x2006f52c
	...

08009040 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009040:	4807      	ldr	r0, [pc, #28]	@ (8009060 <xVTORConst>)
 8009042:	6800      	ldr	r0, [r0, #0]
 8009044:	6800      	ldr	r0, [r0, #0]
 8009046:	f380 8808 	msr	MSP, r0
 800904a:	b662      	cpsie	i
 800904c:	b661      	cpsie	f
 800904e:	f3bf 8f4f 	dsb	sy
 8009052:	f3bf 8f6f 	isb	sy
 8009056:	df02      	svc	2
 8009058:	bf00      	nop
 800905a:	bf00      	nop
 800905c:	f3af 8000 	nop.w

08009060 <xVTORConst>:
 8009060:	e000ed08 	.word	0xe000ed08

08009064 <ulSetInterruptMask>:
}
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009064:	f3ef 8011 	mrs	r0, BASEPRI
 8009068:	f04f 0150 	mov.w	r1, #80	@ 0x50
 800906c:	f381 8811 	msr	BASEPRI, r1
 8009070:	f3bf 8f4f 	dsb	sy
 8009074:	f3bf 8f6f 	isb	sy
 8009078:	4770      	bx	lr

0800907a <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800907a:	f380 8811 	msr	BASEPRI, r0
 800907e:	f3bf 8f4f 	dsb	sy
 8009082:	f3bf 8f6f 	isb	sy
 8009086:	4770      	bx	lr
	...

08009090 <PendSV_Handler>:
}
/*-----------------------------------------------------------*/

void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009090:	f3ef 8009 	mrs	r0, PSP
 8009094:	f01e 0f10 	tst.w	lr, #16
 8009098:	bf08      	it	eq
 800909a:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800909e:	f3ef 820b 	mrs	r2, PSPLIM
 80090a2:	4673      	mov	r3, lr
 80090a4:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 80090a8:	4a11      	ldr	r2, [pc, #68]	@ (80090f0 <pxCurrentTCBConst>)
 80090aa:	6811      	ldr	r1, [r2, #0]
 80090ac:	6008      	str	r0, [r1, #0]
 80090ae:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80090b2:	f380 8811 	msr	BASEPRI, r0
 80090b6:	f3bf 8f4f 	dsb	sy
 80090ba:	f3bf 8f6f 	isb	sy
 80090be:	f000 ffb9 	bl	800a034 <vTaskSwitchContext>
 80090c2:	f04f 0000 	mov.w	r0, #0
 80090c6:	f380 8811 	msr	BASEPRI, r0
 80090ca:	4a09      	ldr	r2, [pc, #36]	@ (80090f0 <pxCurrentTCBConst>)
 80090cc:	6811      	ldr	r1, [r2, #0]
 80090ce:	6808      	ldr	r0, [r1, #0]
 80090d0:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 80090d4:	f013 0f10 	tst.w	r3, #16
 80090d8:	bf08      	it	eq
 80090da:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80090de:	f382 880b 	msr	PSPLIM, r2
 80090e2:	f380 8809 	msr	PSP, r0
 80090e6:	4718      	bx	r3
 80090e8:	f3af 8000 	nop.w
 80090ec:	f3af 8000 	nop.w

080090f0 <pxCurrentTCBConst>:
 80090f0:	2006f52c 	.word	0x2006f52c
	...

08009100 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009100:	f01e 0f04 	tst.w	lr, #4
 8009104:	bf0c      	ite	eq
 8009106:	f3ef 8008 	mrseq	r0, MSP
 800910a:	f3ef 8009 	mrsne	r0, PSP
 800910e:	4904      	ldr	r1, [pc, #16]	@ (8009120 <svchandler_address_const>)
 8009110:	4708      	bx	r1
 8009112:	bf00      	nop
 8009114:	f3af 8000 	nop.w
 8009118:	f3af 8000 	nop.w
 800911c:	f3af 8000 	nop.w

08009120 <svchandler_address_const>:
 8009120:	08008f15 	.word	0x08008f15

08009124 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 8009124:	b510      	push	{r4, lr}
 8009126:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8009128:	f7ff fec0 	bl	8008eac <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 800912c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 800912e:	f7ff fecb 	bl	8008ec8 <vPortExitCritical>

    return xReturn;
}
 8009132:	fab4 f084 	clz	r0, r4
 8009136:	0940      	lsrs	r0, r0, #5
 8009138:	bd10      	pop	{r4, pc}

0800913a <prvCopyDataToQueue>:
{
 800913a:	b570      	push	{r4, r5, r6, lr}
 800913c:	4616      	mov	r6, r2
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800913e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 8009140:	4604      	mov	r4, r0
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009142:	6b85      	ldr	r5, [r0, #56]	@ 0x38
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009144:	b942      	cbnz	r2, 8009158 <prvCopyDataToQueue+0x1e>
                if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009146:	6806      	ldr	r6, [r0, #0]
 8009148:	b99e      	cbnz	r6, 8009172 <prvCopyDataToQueue+0x38>
                    xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800914a:	6880      	ldr	r0, [r0, #8]
 800914c:	f001 f8e2 	bl	800a314 <xTaskPriorityDisinherit>
                    pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009150:	60a6      	str	r6, [r4, #8]
    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009152:	3501      	adds	r5, #1
 8009154:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8009156:	bd70      	pop	{r4, r5, r6, pc}
    else if( xPosition == queueSEND_TO_BACK )
 8009158:	b96e      	cbnz	r6, 8009176 <prvCopyDataToQueue+0x3c>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800915a:	6840      	ldr	r0, [r0, #4]
 800915c:	f029 fcbd 	bl	8032ada <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009160:	6863      	ldr	r3, [r4, #4]
 8009162:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009164:	4413      	add	r3, r2
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009166:	68a2      	ldr	r2, [r4, #8]
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009168:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800916a:	4293      	cmp	r3, r2
            pxQueue->pcWriteTo = pxQueue->pcHead;
 800916c:	bf24      	itt	cs
 800916e:	6823      	ldrcs	r3, [r4, #0]
 8009170:	6063      	strcs	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 8009172:	2000      	movs	r0, #0
 8009174:	e7ed      	b.n	8009152 <prvCopyDataToQueue+0x18>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009176:	68c0      	ldr	r0, [r0, #12]
 8009178:	f029 fcaf 	bl	8032ada <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800917c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800917e:	68e3      	ldr	r3, [r4, #12]
 8009180:	4251      	negs	r1, r2
 8009182:	1a9b      	subs	r3, r3, r2
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009184:	6822      	ldr	r2, [r4, #0]
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009186:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009188:	4293      	cmp	r3, r2
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800918a:	bf3e      	ittt	cc
 800918c:	68a3      	ldrcc	r3, [r4, #8]
 800918e:	185b      	addcc	r3, r3, r1
 8009190:	60e3      	strcc	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 8009192:	2e02      	cmp	r6, #2
 8009194:	d1ed      	bne.n	8009172 <prvCopyDataToQueue+0x38>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009196:	b10d      	cbz	r5, 800919c <prvCopyDataToQueue+0x62>
                --uxMessagesWaiting;
 8009198:	3d01      	subs	r5, #1
 800919a:	e7ea      	b.n	8009172 <prvCopyDataToQueue+0x38>
    BaseType_t xReturn = pdFALSE;
 800919c:	4628      	mov	r0, r5
 800919e:	e7d8      	b.n	8009152 <prvCopyDataToQueue+0x18>

080091a0 <prvCopyDataFromQueue>:
{
 80091a0:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80091a2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 80091a4:	4608      	mov	r0, r1
 80091a6:	b410      	push	{r4}
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80091a8:	b16a      	cbz	r2, 80091c6 <prvCopyDataFromQueue+0x26>
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091aa:	68dc      	ldr	r4, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80091ac:	6899      	ldr	r1, [r3, #8]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091ae:	4414      	add	r4, r2
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80091b0:	428c      	cmp	r4, r1
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80091b2:	bf28      	it	cs
 80091b4:	6819      	ldrcs	r1, [r3, #0]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091b6:	60dc      	str	r4, [r3, #12]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80091b8:	bf28      	it	cs
 80091ba:	60d9      	strcs	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80091bc:	68d9      	ldr	r1, [r3, #12]
}
 80091be:	f85d 4b04 	ldr.w	r4, [sp], #4
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80091c2:	f029 bc8a 	b.w	8032ada <memcpy>
}
 80091c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80091ca:	4770      	bx	lr

080091cc <prvUnlockQueue>:
{
 80091cc:	b570      	push	{r4, r5, r6, lr}
 80091ce:	4604      	mov	r4, r0
    taskENTER_CRITICAL();
 80091d0:	f7ff fe6c 	bl	8008eac <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 80091d4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091d8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
        int8_t cTxLock = pxQueue->cTxLock;
 80091dc:	b26d      	sxtb	r5, r5
        while( cTxLock > queueLOCKED_UNMODIFIED )
 80091de:	2d00      	cmp	r5, #0
 80091e0:	dc14      	bgt.n	800920c <prvUnlockQueue+0x40>
        pxQueue->cTxLock = queueUNLOCKED;
 80091e2:	23ff      	movs	r3, #255	@ 0xff
 80091e4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
    taskEXIT_CRITICAL();
 80091e8:	f7ff fe6e 	bl	8008ec8 <vPortExitCritical>
    taskENTER_CRITICAL();
 80091ec:	f7ff fe5e 	bl	8008eac <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 80091f0:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091f4:	f104 0610 	add.w	r6, r4, #16
        int8_t cRxLock = pxQueue->cRxLock;
 80091f8:	b26d      	sxtb	r5, r5
        while( cRxLock > queueLOCKED_UNMODIFIED )
 80091fa:	2d00      	cmp	r5, #0
 80091fc:	dc12      	bgt.n	8009224 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 80091fe:	23ff      	movs	r3, #255	@ 0xff
 8009200:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8009204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    taskEXIT_CRITICAL();
 8009208:	f7ff be5e 	b.w	8008ec8 <vPortExitCritical>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800920c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800920e:	2b00      	cmp	r3, #0
 8009210:	d0e7      	beq.n	80091e2 <prvUnlockQueue+0x16>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009212:	4630      	mov	r0, r6
 8009214:	f000 ff88 	bl	800a128 <xTaskRemoveFromEventList>
 8009218:	b108      	cbz	r0, 800921e <prvUnlockQueue+0x52>
                            vTaskMissedYield();
 800921a:	f001 f81f 	bl	800a25c <vTaskMissedYield>
            --cTxLock;
 800921e:	3d01      	subs	r5, #1
 8009220:	b26d      	sxtb	r5, r5
 8009222:	e7dc      	b.n	80091de <prvUnlockQueue+0x12>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009224:	6923      	ldr	r3, [r4, #16]
 8009226:	2b00      	cmp	r3, #0
 8009228:	d0e9      	beq.n	80091fe <prvUnlockQueue+0x32>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800922a:	4630      	mov	r0, r6
 800922c:	f000 ff7c 	bl	800a128 <xTaskRemoveFromEventList>
 8009230:	b108      	cbz	r0, 8009236 <prvUnlockQueue+0x6a>
                    vTaskMissedYield();
 8009232:	f001 f813 	bl	800a25c <vTaskMissedYield>
                --cRxLock;
 8009236:	3d01      	subs	r5, #1
 8009238:	b26d      	sxtb	r5, r5
 800923a:	e7de      	b.n	80091fa <prvUnlockQueue+0x2e>

0800923c <xQueueGenericReset>:
{
 800923c:	b570      	push	{r4, r5, r6, lr}
 800923e:	460e      	mov	r6, r1
    configASSERT( pxQueue );
 8009240:	4604      	mov	r4, r0
 8009242:	b910      	cbnz	r0, 800924a <xQueueGenericReset+0xe>
 8009244:	f7ff ff0e 	bl	8009064 <ulSetInterruptMask>
 8009248:	e7fe      	b.n	8009248 <xQueueGenericReset+0xc>
        ( pxQueue->uxLength >= 1U ) &&
 800924a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
    if( ( pxQueue != NULL ) &&
 800924c:	b365      	cbz	r5, 80092a8 <xQueueGenericReset+0x6c>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 800924e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009250:	fba3 3505 	umull	r3, r5, r3, r5
 8009254:	bb45      	cbnz	r5, 80092a8 <xQueueGenericReset+0x6c>
        taskENTER_CRITICAL();
 8009256:	f7ff fe29 	bl	8008eac <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800925a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800925e:	434b      	muls	r3, r1
 8009260:	6822      	ldr	r2, [r4, #0]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009262:	63a5      	str	r5, [r4, #56]	@ 0x38
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009264:	18d0      	adds	r0, r2, r3
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009266:	1a5b      	subs	r3, r3, r1
            pxQueue->pcWriteTo = pxQueue->pcHead;
 8009268:	6062      	str	r2, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800926a:	441a      	add	r2, r3
            pxQueue->cRxLock = queueUNLOCKED;
 800926c:	23ff      	movs	r3, #255	@ 0xff
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800926e:	60a0      	str	r0, [r4, #8]
            pxQueue->cRxLock = queueUNLOCKED;
 8009270:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009274:	60e2      	str	r2, [r4, #12]
            pxQueue->cTxLock = queueUNLOCKED;
 8009276:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
            if( xNewQueue == pdFALSE )
 800927a:	b966      	cbnz	r6, 8009296 <xQueueGenericReset+0x5a>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800927c:	6923      	ldr	r3, [r4, #16]
 800927e:	b133      	cbz	r3, 800928e <xQueueGenericReset+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009280:	f104 0010 	add.w	r0, r4, #16
 8009284:	f000 ff50 	bl	800a128 <xTaskRemoveFromEventList>
 8009288:	b108      	cbz	r0, 800928e <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 800928a:	f7ff fe03 	bl	8008e94 <vPortYield>
        taskEXIT_CRITICAL();
 800928e:	f7ff fe1b 	bl	8008ec8 <vPortExitCritical>
}
 8009292:	2001      	movs	r0, #1
 8009294:	bd70      	pop	{r4, r5, r6, pc}
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009296:	f104 0010 	add.w	r0, r4, #16
 800929a:	f7ff fd9f 	bl	8008ddc <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800929e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80092a2:	f7ff fd9b 	bl	8008ddc <vListInitialise>
 80092a6:	e7f2      	b.n	800928e <xQueueGenericReset+0x52>
    configASSERT( xReturn != pdFAIL );
 80092a8:	f7ff fedc 	bl	8009064 <ulSetInterruptMask>
 80092ac:	e7fe      	b.n	80092ac <xQueueGenericReset+0x70>

080092ae <xQueueGenericCreateStatic>:
    {
 80092ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80092b0:	460d      	mov	r5, r1
        configASSERT( pxStaticQueue );
 80092b2:	461c      	mov	r4, r3
 80092b4:	b913      	cbnz	r3, 80092bc <xQueueGenericCreateStatic+0xe>
 80092b6:	f7ff fed5 	bl	8009064 <ulSetInterruptMask>
 80092ba:	e7fe      	b.n	80092ba <xQueueGenericCreateStatic+0xc>
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 80092bc:	b108      	cbz	r0, 80092c2 <xQueueGenericCreateStatic+0x14>
            ( pxStaticQueue != NULL ) &&
 80092be:	b11a      	cbz	r2, 80092c8 <xQueueGenericCreateStatic+0x1a>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 80092c0:	b921      	cbnz	r1, 80092cc <xQueueGenericCreateStatic+0x1e>
            configASSERT( pxNewQueue );
 80092c2:	f7ff fecf 	bl	8009064 <ulSetInterruptMask>
 80092c6:	e7fe      	b.n	80092c6 <xQueueGenericCreateStatic+0x18>
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 80092c8:	2900      	cmp	r1, #0
 80092ca:	d1fa      	bne.n	80092c2 <xQueueGenericCreateStatic+0x14>
                    volatile size_t xSize = sizeof( StaticQueue_t );
 80092cc:	2350      	movs	r3, #80	@ 0x50
 80092ce:	9301      	str	r3, [sp, #4]
                    configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 80092d0:	9b01      	ldr	r3, [sp, #4]
 80092d2:	2b50      	cmp	r3, #80	@ 0x50
 80092d4:	d002      	beq.n	80092dc <xQueueGenericCreateStatic+0x2e>
 80092d6:	f7ff fec5 	bl	8009064 <ulSetInterruptMask>
 80092da:	e7fe      	b.n	80092da <xQueueGenericCreateStatic+0x2c>
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092dc:	2101      	movs	r1, #1
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80092de:	2d00      	cmp	r5, #0
 80092e0:	bf08      	it	eq
 80092e2:	4622      	moveq	r2, r4
    pxNewQueue->uxItemSize = uxItemSize;
 80092e4:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092e8:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092ec:	4620      	mov	r0, r4
 80092ee:	6022      	str	r2, [r4, #0]
                    ( void ) xSize;                             /* Keeps lint quiet when configASSERT() is not defined. */
 80092f0:	9b01      	ldr	r3, [sp, #4]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092f2:	f7ff ffa3 	bl	800923c <xQueueGenericReset>
    }
 80092f6:	4620      	mov	r0, r4
            pxNewQueue->ucQueueType = ucQueueType;
 80092f8:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80092fc:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    }
 8009300:	b003      	add	sp, #12
 8009302:	bd30      	pop	{r4, r5, pc}

08009304 <xQueueGenericCreate>:
    {
 8009304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009308:	460d      	mov	r5, r1
 800930a:	4617      	mov	r7, r2
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800930c:	4606      	mov	r6, r0
 800930e:	b300      	cbz	r0, 8009352 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 8009310:	fba1 3800 	umull	r3, r8, r1, r0
 8009314:	f1b8 0f00 	cmp.w	r8, #0
 8009318:	d11b      	bne.n	8009352 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 800931a:	4348      	muls	r0, r1
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 800931c:	f110 0f51 	cmn.w	r0, #81	@ 0x51
 8009320:	d817      	bhi.n	8009352 <xQueueGenericCreate+0x4e>
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009322:	3050      	adds	r0, #80	@ 0x50
 8009324:	f001 fa30 	bl	800a788 <pvPortMalloc>
            if( pxNewQueue != NULL )
 8009328:	4604      	mov	r4, r0
 800932a:	b168      	cbz	r0, 8009348 <xQueueGenericCreate+0x44>
                        pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800932c:	f880 8046 	strb.w	r8, [r0, #70]	@ 0x46
    if( uxItemSize == ( UBaseType_t ) 0 )
 8009330:	b16d      	cbz	r5, 800934e <xQueueGenericCreate+0x4a>
                pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009332:	f100 0350 	add.w	r3, r0, #80	@ 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009336:	2101      	movs	r1, #1
 8009338:	4620      	mov	r0, r4
    pxNewQueue->uxItemSize = uxItemSize;
 800933a:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800933e:	6023      	str	r3, [r4, #0]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009340:	f7ff ff7c 	bl	800923c <xQueueGenericReset>
            pxNewQueue->ucQueueType = ucQueueType;
 8009344:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
    }
 8009348:	4620      	mov	r0, r4
 800934a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800934e:	4603      	mov	r3, r0
 8009350:	e7f1      	b.n	8009336 <xQueueGenericCreate+0x32>
            configASSERT( pxNewQueue );
 8009352:	f7ff fe87 	bl	8009064 <ulSetInterruptMask>
 8009356:	e7fe      	b.n	8009356 <xQueueGenericCreate+0x52>

08009358 <xQueueCreateCountingSemaphoreStatic>:
    {
 8009358:	b513      	push	{r0, r1, r4, lr}
 800935a:	4613      	mov	r3, r2
 800935c:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 800935e:	b158      	cbz	r0, 8009378 <xQueueCreateCountingSemaphoreStatic+0x20>
 8009360:	4288      	cmp	r0, r1
 8009362:	d309      	bcc.n	8009378 <xQueueCreateCountingSemaphoreStatic+0x20>
            xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009364:	2202      	movs	r2, #2
 8009366:	9200      	str	r2, [sp, #0]
 8009368:	2200      	movs	r2, #0
 800936a:	4611      	mov	r1, r2
 800936c:	f7ff ff9f 	bl	80092ae <xQueueGenericCreateStatic>
            if( xHandle != NULL )
 8009370:	b100      	cbz	r0, 8009374 <xQueueCreateCountingSemaphoreStatic+0x1c>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009372:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009374:	b002      	add	sp, #8
 8009376:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009378:	f7ff fe74 	bl	8009064 <ulSetInterruptMask>
 800937c:	e7fe      	b.n	800937c <xQueueCreateCountingSemaphoreStatic+0x24>

0800937e <xQueueCreateCountingSemaphore>:
    {
 800937e:	b510      	push	{r4, lr}
 8009380:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 8009382:	b140      	cbz	r0, 8009396 <xQueueCreateCountingSemaphore+0x18>
 8009384:	4288      	cmp	r0, r1
 8009386:	d306      	bcc.n	8009396 <xQueueCreateCountingSemaphore+0x18>
            xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009388:	2202      	movs	r2, #2
 800938a:	2100      	movs	r1, #0
 800938c:	f7ff ffba 	bl	8009304 <xQueueGenericCreate>
            if( xHandle != NULL )
 8009390:	b100      	cbz	r0, 8009394 <xQueueCreateCountingSemaphore+0x16>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009392:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009394:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009396:	f7ff fe65 	bl	8009064 <ulSetInterruptMask>
 800939a:	e7fe      	b.n	800939a <xQueueCreateCountingSemaphore+0x1c>

0800939c <xQueueGenericSend>:
{
 800939c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80093a0:	460f      	mov	r7, r1
 80093a2:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 80093a4:	4604      	mov	r4, r0
{
 80093a6:	9201      	str	r2, [sp, #4]
    configASSERT( pxQueue );
 80093a8:	b910      	cbnz	r0, 80093b0 <xQueueGenericSend+0x14>
 80093aa:	f7ff fe5b 	bl	8009064 <ulSetInterruptMask>
 80093ae:	e7fe      	b.n	80093ae <xQueueGenericSend+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093b0:	b921      	cbnz	r1, 80093bc <xQueueGenericSend+0x20>
 80093b2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80093b4:	b113      	cbz	r3, 80093bc <xQueueGenericSend+0x20>
 80093b6:	f7ff fe55 	bl	8009064 <ulSetInterruptMask>
 80093ba:	e7fe      	b.n	80093ba <xQueueGenericSend+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80093bc:	2e02      	cmp	r6, #2
 80093be:	d105      	bne.n	80093cc <xQueueGenericSend+0x30>
 80093c0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093c2:	2b01      	cmp	r3, #1
 80093c4:	d002      	beq.n	80093cc <xQueueGenericSend+0x30>
 80093c6:	f7ff fe4d 	bl	8009064 <ulSetInterruptMask>
 80093ca:	e7fe      	b.n	80093ca <xQueueGenericSend+0x2e>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80093cc:	f000 ff4c 	bl	800a268 <xTaskGetSchedulerState>
 80093d0:	4605      	mov	r5, r0
 80093d2:	b1f0      	cbz	r0, 8009412 <xQueueGenericSend+0x76>
 80093d4:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 80093d6:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 80093da:	f7ff fd67 	bl	8008eac <vPortEnterCritical>
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093de:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80093e0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093e2:	429a      	cmp	r2, r3
 80093e4:	d301      	bcc.n	80093ea <xQueueGenericSend+0x4e>
 80093e6:	2e02      	cmp	r6, #2
 80093e8:	d119      	bne.n	800941e <xQueueGenericSend+0x82>
                        xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093ea:	4632      	mov	r2, r6
 80093ec:	4639      	mov	r1, r7
 80093ee:	4620      	mov	r0, r4
 80093f0:	f7ff fea3 	bl	800913a <prvCopyDataToQueue>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80093f6:	b11b      	cbz	r3, 8009400 <xQueueGenericSend+0x64>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093f8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80093fc:	f000 fe94 	bl	800a128 <xTaskRemoveFromEventList>
 8009400:	b108      	cbz	r0, 8009406 <xQueueGenericSend+0x6a>
                                queueYIELD_IF_USING_PREEMPTION();
 8009402:	f7ff fd47 	bl	8008e94 <vPortYield>
                taskEXIT_CRITICAL();
 8009406:	f7ff fd5f 	bl	8008ec8 <vPortExitCritical>
                return pdPASS;
 800940a:	2001      	movs	r0, #1
}
 800940c:	b004      	add	sp, #16
 800940e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009412:	9b01      	ldr	r3, [sp, #4]
 8009414:	2b00      	cmp	r3, #0
 8009416:	d0de      	beq.n	80093d6 <xQueueGenericSend+0x3a>
 8009418:	f7ff fe24 	bl	8009064 <ulSetInterruptMask>
 800941c:	e7fe      	b.n	800941c <xQueueGenericSend+0x80>
                if( xTicksToWait == ( TickType_t ) 0 )
 800941e:	9b01      	ldr	r3, [sp, #4]
 8009420:	b91b      	cbnz	r3, 800942a <xQueueGenericSend+0x8e>
                    taskEXIT_CRITICAL();
 8009422:	f7ff fd51 	bl	8008ec8 <vPortExitCritical>
                    return errQUEUE_FULL;
 8009426:	2000      	movs	r0, #0
 8009428:	e7f0      	b.n	800940c <xQueueGenericSend+0x70>
                else if( xEntryTimeSet == pdFALSE )
 800942a:	b915      	cbnz	r5, 8009432 <xQueueGenericSend+0x96>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800942c:	a802      	add	r0, sp, #8
 800942e:	f000 fed9 	bl	800a1e4 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 8009432:	f7ff fd49 	bl	8008ec8 <vPortExitCritical>
        vTaskSuspendAll();
 8009436:	f000 fc39 	bl	8009cac <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 800943a:	f7ff fd37 	bl	8008eac <vPortEnterCritical>
 800943e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009442:	2bff      	cmp	r3, #255	@ 0xff
 8009444:	bf08      	it	eq
 8009446:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800944a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800944e:	2bff      	cmp	r3, #255	@ 0xff
 8009450:	bf08      	it	eq
 8009452:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8009456:	f7ff fd37 	bl	8008ec8 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800945a:	a901      	add	r1, sp, #4
 800945c:	a802      	add	r0, sp, #8
 800945e:	f000 fecd 	bl	800a1fc <xTaskCheckForTimeOut>
 8009462:	b9f0      	cbnz	r0, 80094a2 <xQueueGenericSend+0x106>

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8009464:	f7ff fd22 	bl	8008eac <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009468:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800946a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800946c:	429a      	cmp	r2, r3
 800946e:	d10f      	bne.n	8009490 <xQueueGenericSend+0xf4>
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 8009470:	f7ff fd2a 	bl	8008ec8 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009474:	9901      	ldr	r1, [sp, #4]
 8009476:	f104 0010 	add.w	r0, r4, #16
 800947a:	f000 fe19 	bl	800a0b0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800947e:	4620      	mov	r0, r4
 8009480:	f7ff fea4 	bl	80091cc <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009484:	f000 fcd0 	bl	8009e28 <xTaskResumeAll>
 8009488:	b948      	cbnz	r0, 800949e <xQueueGenericSend+0x102>
                    portYIELD_WITHIN_API();
 800948a:	f7ff fd03 	bl	8008e94 <vPortYield>
 800948e:	e006      	b.n	800949e <xQueueGenericSend+0x102>
    taskEXIT_CRITICAL();
 8009490:	f7ff fd1a 	bl	8008ec8 <vPortExitCritical>
                prvUnlockQueue( pxQueue );
 8009494:	4620      	mov	r0, r4
 8009496:	f7ff fe99 	bl	80091cc <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800949a:	f000 fcc5 	bl	8009e28 <xTaskResumeAll>
 800949e:	2501      	movs	r5, #1
 80094a0:	e79b      	b.n	80093da <xQueueGenericSend+0x3e>
            prvUnlockQueue( pxQueue );
 80094a2:	4620      	mov	r0, r4
 80094a4:	f7ff fe92 	bl	80091cc <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 80094a8:	f000 fcbe 	bl	8009e28 <xTaskResumeAll>
            return errQUEUE_FULL;
 80094ac:	e7bb      	b.n	8009426 <xQueueGenericSend+0x8a>

080094ae <xQueueGenericSendFromISR>:
{
 80094ae:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80094b2:	4689      	mov	r9, r1
 80094b4:	4617      	mov	r7, r2
 80094b6:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 80094b8:	4604      	mov	r4, r0
 80094ba:	b910      	cbnz	r0, 80094c2 <xQueueGenericSendFromISR+0x14>
 80094bc:	f7ff fdd2 	bl	8009064 <ulSetInterruptMask>
 80094c0:	e7fe      	b.n	80094c0 <xQueueGenericSendFromISR+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094c2:	b921      	cbnz	r1, 80094ce <xQueueGenericSendFromISR+0x20>
 80094c4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80094c6:	b113      	cbz	r3, 80094ce <xQueueGenericSendFromISR+0x20>
 80094c8:	f7ff fdcc 	bl	8009064 <ulSetInterruptMask>
 80094cc:	e7fe      	b.n	80094cc <xQueueGenericSendFromISR+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80094ce:	2e02      	cmp	r6, #2
 80094d0:	d105      	bne.n	80094de <xQueueGenericSendFromISR+0x30>
 80094d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80094d4:	2b01      	cmp	r3, #1
 80094d6:	d002      	beq.n	80094de <xQueueGenericSendFromISR+0x30>
 80094d8:	f7ff fdc4 	bl	8009064 <ulSetInterruptMask>
 80094dc:	e7fe      	b.n	80094dc <xQueueGenericSendFromISR+0x2e>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80094de:	f7ff fdc1 	bl	8009064 <ulSetInterruptMask>
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80094e2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80094e4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80094e6:	4680      	mov	r8, r0
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80094e8:	429a      	cmp	r2, r3
 80094ea:	d301      	bcc.n	80094f0 <xQueueGenericSendFromISR+0x42>
 80094ec:	2e02      	cmp	r6, #2
 80094ee:	d125      	bne.n	800953c <xQueueGenericSendFromISR+0x8e>
            const int8_t cTxLock = pxQueue->cTxLock;
 80094f0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094f4:	4632      	mov	r2, r6
 80094f6:	4649      	mov	r1, r9
 80094f8:	4620      	mov	r0, r4
            const int8_t cTxLock = pxQueue->cTxLock;
 80094fa:	b26d      	sxtb	r5, r5
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094fc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094fe:	f7ff fe1c 	bl	800913a <prvCopyDataToQueue>
            if( cTxLock == queueUNLOCKED )
 8009502:	1c6b      	adds	r3, r5, #1
 8009504:	d110      	bne.n	8009528 <xQueueGenericSendFromISR+0x7a>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009506:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009508:	b13b      	cbz	r3, 800951a <xQueueGenericSendFromISR+0x6c>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800950a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800950e:	f000 fe0b 	bl	800a128 <xTaskRemoveFromEventList>
 8009512:	b110      	cbz	r0, 800951a <xQueueGenericSendFromISR+0x6c>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009514:	b10f      	cbz	r7, 800951a <xQueueGenericSendFromISR+0x6c>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009516:	2301      	movs	r3, #1
 8009518:	603b      	str	r3, [r7, #0]
            xReturn = pdPASS;
 800951a:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800951c:	4640      	mov	r0, r8
 800951e:	f7ff fdac 	bl	800907a <vClearInterruptMask>
}
 8009522:	4620      	mov	r0, r4
 8009524:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009528:	2d7f      	cmp	r5, #127	@ 0x7f
 800952a:	d102      	bne.n	8009532 <xQueueGenericSendFromISR+0x84>
 800952c:	f7ff fd9a 	bl	8009064 <ulSetInterruptMask>
 8009530:	e7fe      	b.n	8009530 <xQueueGenericSendFromISR+0x82>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009532:	3501      	adds	r5, #1
 8009534:	b26d      	sxtb	r5, r5
 8009536:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800953a:	e7ee      	b.n	800951a <xQueueGenericSendFromISR+0x6c>
            xReturn = errQUEUE_FULL;
 800953c:	2400      	movs	r4, #0
 800953e:	e7ed      	b.n	800951c <xQueueGenericSendFromISR+0x6e>

08009540 <xQueueGiveFromISR>:
{
 8009540:	b570      	push	{r4, r5, r6, lr}
 8009542:	460d      	mov	r5, r1
    configASSERT( pxQueue );
 8009544:	4604      	mov	r4, r0
 8009546:	b910      	cbnz	r0, 800954e <xQueueGiveFromISR+0xe>
 8009548:	f7ff fd8c 	bl	8009064 <ulSetInterruptMask>
 800954c:	e7fe      	b.n	800954c <xQueueGiveFromISR+0xc>
    configASSERT( pxQueue->uxItemSize == 0 );
 800954e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009550:	b113      	cbz	r3, 8009558 <xQueueGiveFromISR+0x18>
 8009552:	f7ff fd87 	bl	8009064 <ulSetInterruptMask>
 8009556:	e7fe      	b.n	8009556 <xQueueGiveFromISR+0x16>
    configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009558:	6803      	ldr	r3, [r0, #0]
 800955a:	b923      	cbnz	r3, 8009566 <xQueueGiveFromISR+0x26>
 800955c:	6883      	ldr	r3, [r0, #8]
 800955e:	b113      	cbz	r3, 8009566 <xQueueGiveFromISR+0x26>
 8009560:	f7ff fd80 	bl	8009064 <ulSetInterruptMask>
 8009564:	e7fe      	b.n	8009564 <xQueueGiveFromISR+0x24>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009566:	f7ff fd7d 	bl	8009064 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800956a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        if( uxMessagesWaiting < pxQueue->uxLength )
 800956c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800956e:	4606      	mov	r6, r0
        if( uxMessagesWaiting < pxQueue->uxLength )
 8009570:	4293      	cmp	r3, r2
 8009572:	d920      	bls.n	80095b6 <xQueueGiveFromISR+0x76>
            const int8_t cTxLock = pxQueue->cTxLock;
 8009574:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009578:	3201      	adds	r2, #1
            if( cTxLock == queueUNLOCKED )
 800957a:	29ff      	cmp	r1, #255	@ 0xff
            const int8_t cTxLock = pxQueue->cTxLock;
 800957c:	b24b      	sxtb	r3, r1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800957e:	63a2      	str	r2, [r4, #56]	@ 0x38
            if( cTxLock == queueUNLOCKED )
 8009580:	d10f      	bne.n	80095a2 <xQueueGiveFromISR+0x62>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009582:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009584:	b13b      	cbz	r3, 8009596 <xQueueGiveFromISR+0x56>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009586:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800958a:	f000 fdcd 	bl	800a128 <xTaskRemoveFromEventList>
 800958e:	b110      	cbz	r0, 8009596 <xQueueGiveFromISR+0x56>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009590:	b10d      	cbz	r5, 8009596 <xQueueGiveFromISR+0x56>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009592:	2301      	movs	r3, #1
 8009594:	602b      	str	r3, [r5, #0]
            xReturn = pdPASS;
 8009596:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009598:	4630      	mov	r0, r6
 800959a:	f7ff fd6e 	bl	800907a <vClearInterruptMask>
}
 800959e:	4620      	mov	r0, r4
 80095a0:	bd70      	pop	{r4, r5, r6, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 80095a2:	2b7f      	cmp	r3, #127	@ 0x7f
 80095a4:	d102      	bne.n	80095ac <xQueueGiveFromISR+0x6c>
 80095a6:	f7ff fd5d 	bl	8009064 <ulSetInterruptMask>
 80095aa:	e7fe      	b.n	80095aa <xQueueGiveFromISR+0x6a>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80095ac:	3301      	adds	r3, #1
 80095ae:	b25b      	sxtb	r3, r3
 80095b0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80095b4:	e7ef      	b.n	8009596 <xQueueGiveFromISR+0x56>
            xReturn = errQUEUE_FULL;
 80095b6:	2400      	movs	r4, #0
 80095b8:	e7ee      	b.n	8009598 <xQueueGiveFromISR+0x58>

080095ba <xQueueReceive>:
{
 80095ba:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80095be:	460e      	mov	r6, r1
    configASSERT( ( pxQueue ) );
 80095c0:	4604      	mov	r4, r0
{
 80095c2:	9201      	str	r2, [sp, #4]
    configASSERT( ( pxQueue ) );
 80095c4:	b910      	cbnz	r0, 80095cc <xQueueReceive+0x12>
 80095c6:	f7ff fd4d 	bl	8009064 <ulSetInterruptMask>
 80095ca:	e7fe      	b.n	80095ca <xQueueReceive+0x10>
    configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80095cc:	b921      	cbnz	r1, 80095d8 <xQueueReceive+0x1e>
 80095ce:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80095d0:	b113      	cbz	r3, 80095d8 <xQueueReceive+0x1e>
 80095d2:	f7ff fd47 	bl	8009064 <ulSetInterruptMask>
 80095d6:	e7fe      	b.n	80095d6 <xQueueReceive+0x1c>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80095d8:	f000 fe46 	bl	800a268 <xTaskGetSchedulerState>
 80095dc:	4605      	mov	r5, r0
 80095de:	b1d8      	cbz	r0, 8009618 <xQueueReceive+0x5e>
 80095e0:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 80095e2:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 80095e6:	f7ff fc61 	bl	8008eac <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095ea:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80095ec:	b1d7      	cbz	r7, 8009624 <xQueueReceive+0x6a>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095ee:	4631      	mov	r1, r6
 80095f0:	4620      	mov	r0, r4
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095f2:	3f01      	subs	r7, #1
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095f4:	f7ff fdd4 	bl	80091a0 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095f8:	63a7      	str	r7, [r4, #56]	@ 0x38
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095fa:	6923      	ldr	r3, [r4, #16]
 80095fc:	b133      	cbz	r3, 800960c <xQueueReceive+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095fe:	f104 0010 	add.w	r0, r4, #16
 8009602:	f000 fd91 	bl	800a128 <xTaskRemoveFromEventList>
 8009606:	b108      	cbz	r0, 800960c <xQueueReceive+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 8009608:	f7ff fc44 	bl	8008e94 <vPortYield>
                taskEXIT_CRITICAL();
 800960c:	f7ff fc5c 	bl	8008ec8 <vPortExitCritical>
                return pdPASS;
 8009610:	2001      	movs	r0, #1
}
 8009612:	b004      	add	sp, #16
 8009614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009618:	9b01      	ldr	r3, [sp, #4]
 800961a:	2b00      	cmp	r3, #0
 800961c:	d0e1      	beq.n	80095e2 <xQueueReceive+0x28>
 800961e:	f7ff fd21 	bl	8009064 <ulSetInterruptMask>
 8009622:	e7fe      	b.n	8009622 <xQueueReceive+0x68>
                if( xTicksToWait == ( TickType_t ) 0 )
 8009624:	9b01      	ldr	r3, [sp, #4]
 8009626:	b91b      	cbnz	r3, 8009630 <xQueueReceive+0x76>
                    taskEXIT_CRITICAL();
 8009628:	f7ff fc4e 	bl	8008ec8 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 800962c:	2000      	movs	r0, #0
 800962e:	e7f0      	b.n	8009612 <xQueueReceive+0x58>
                else if( xEntryTimeSet == pdFALSE )
 8009630:	b915      	cbnz	r5, 8009638 <xQueueReceive+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 8009632:	a802      	add	r0, sp, #8
 8009634:	f000 fdd6 	bl	800a1e4 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 8009638:	f7ff fc46 	bl	8008ec8 <vPortExitCritical>
        vTaskSuspendAll();
 800963c:	f000 fb36 	bl	8009cac <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 8009640:	f7ff fc34 	bl	8008eac <vPortEnterCritical>
 8009644:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009648:	2bff      	cmp	r3, #255	@ 0xff
 800964a:	bf08      	it	eq
 800964c:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8009650:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009654:	2bff      	cmp	r3, #255	@ 0xff
 8009656:	bf08      	it	eq
 8009658:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800965c:	f7ff fc34 	bl	8008ec8 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009660:	a901      	add	r1, sp, #4
 8009662:	a802      	add	r0, sp, #8
 8009664:	f000 fdca 	bl	800a1fc <xTaskCheckForTimeOut>
 8009668:	b9c0      	cbnz	r0, 800969c <xQueueReceive+0xe2>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800966a:	4620      	mov	r0, r4
 800966c:	f7ff fd5a 	bl	8009124 <prvIsQueueEmpty>
 8009670:	b170      	cbz	r0, 8009690 <xQueueReceive+0xd6>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009672:	9901      	ldr	r1, [sp, #4]
 8009674:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009678:	f000 fd1a 	bl	800a0b0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800967c:	4620      	mov	r0, r4
 800967e:	f7ff fda5 	bl	80091cc <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009682:	f000 fbd1 	bl	8009e28 <xTaskResumeAll>
 8009686:	b908      	cbnz	r0, 800968c <xQueueReceive+0xd2>
                    portYIELD_WITHIN_API();
 8009688:	f7ff fc04 	bl	8008e94 <vPortYield>
 800968c:	2501      	movs	r5, #1
 800968e:	e7aa      	b.n	80095e6 <xQueueReceive+0x2c>
                prvUnlockQueue( pxQueue );
 8009690:	4620      	mov	r0, r4
 8009692:	f7ff fd9b 	bl	80091cc <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009696:	f000 fbc7 	bl	8009e28 <xTaskResumeAll>
 800969a:	e7f7      	b.n	800968c <xQueueReceive+0xd2>
            prvUnlockQueue( pxQueue );
 800969c:	4620      	mov	r0, r4
 800969e:	f7ff fd95 	bl	80091cc <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 80096a2:	f000 fbc1 	bl	8009e28 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096a6:	4620      	mov	r0, r4
 80096a8:	f7ff fd3c 	bl	8009124 <prvIsQueueEmpty>
 80096ac:	2800      	cmp	r0, #0
 80096ae:	d0ed      	beq.n	800968c <xQueueReceive+0xd2>
 80096b0:	e7bc      	b.n	800962c <xQueueReceive+0x72>

080096b2 <xQueueSemaphoreTake>:
{
 80096b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096b4:	b085      	sub	sp, #20
    configASSERT( ( pxQueue ) );
 80096b6:	4604      	mov	r4, r0
{
 80096b8:	9101      	str	r1, [sp, #4]
    configASSERT( ( pxQueue ) );
 80096ba:	b910      	cbnz	r0, 80096c2 <xQueueSemaphoreTake+0x10>
 80096bc:	f7ff fcd2 	bl	8009064 <ulSetInterruptMask>
 80096c0:	e7fe      	b.n	80096c0 <xQueueSemaphoreTake+0xe>
    configASSERT( pxQueue->uxItemSize == 0 );
 80096c2:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80096c4:	b115      	cbz	r5, 80096cc <xQueueSemaphoreTake+0x1a>
 80096c6:	f7ff fccd 	bl	8009064 <ulSetInterruptMask>
 80096ca:	e7fe      	b.n	80096ca <xQueueSemaphoreTake+0x18>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80096cc:	f000 fdcc 	bl	800a268 <xTaskGetSchedulerState>
 80096d0:	4606      	mov	r6, r0
 80096d2:	b1e0      	cbz	r0, 800970e <xQueueSemaphoreTake+0x5c>
 80096d4:	462e      	mov	r6, r5
        prvLockQueue( pxQueue );
 80096d6:	2700      	movs	r7, #0
        taskENTER_CRITICAL();
 80096d8:	f7ff fbe8 	bl	8008eac <vPortEnterCritical>
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80096dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80096de:	b1e3      	cbz	r3, 800971a <xQueueSemaphoreTake+0x68>
                pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80096e0:	3b01      	subs	r3, #1
 80096e2:	63a3      	str	r3, [r4, #56]	@ 0x38
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096e4:	6823      	ldr	r3, [r4, #0]
 80096e6:	b913      	cbnz	r3, 80096ee <xQueueSemaphoreTake+0x3c>
                            pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80096e8:	f000 fe98 	bl	800a41c <pvTaskIncrementMutexHeldCount>
 80096ec:	60a0      	str	r0, [r4, #8]
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096ee:	6923      	ldr	r3, [r4, #16]
 80096f0:	b133      	cbz	r3, 8009700 <xQueueSemaphoreTake+0x4e>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096f2:	f104 0010 	add.w	r0, r4, #16
 80096f6:	f000 fd17 	bl	800a128 <xTaskRemoveFromEventList>
 80096fa:	b108      	cbz	r0, 8009700 <xQueueSemaphoreTake+0x4e>
                        queueYIELD_IF_USING_PREEMPTION();
 80096fc:	f7ff fbca 	bl	8008e94 <vPortYield>
                taskEXIT_CRITICAL();
 8009700:	f7ff fbe2 	bl	8008ec8 <vPortExitCritical>
                return pdPASS;
 8009704:	2001      	movs	r0, #1
}
 8009706:	b005      	add	sp, #20
 8009708:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800970a:	4635      	mov	r5, r6
 800970c:	e7e3      	b.n	80096d6 <xQueueSemaphoreTake+0x24>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800970e:	9b01      	ldr	r3, [sp, #4]
 8009710:	2b00      	cmp	r3, #0
 8009712:	d0fa      	beq.n	800970a <xQueueSemaphoreTake+0x58>
 8009714:	f7ff fca6 	bl	8009064 <ulSetInterruptMask>
 8009718:	e7fe      	b.n	8009718 <xQueueSemaphoreTake+0x66>
                if( xTicksToWait == ( TickType_t ) 0 )
 800971a:	9b01      	ldr	r3, [sp, #4]
 800971c:	b923      	cbnz	r3, 8009728 <xQueueSemaphoreTake+0x76>
                            configASSERT( xInheritanceOccurred == pdFALSE );
 800971e:	2d00      	cmp	r5, #0
 8009720:	d058      	beq.n	80097d4 <xQueueSemaphoreTake+0x122>
 8009722:	f7ff fc9f 	bl	8009064 <ulSetInterruptMask>
 8009726:	e7fe      	b.n	8009726 <xQueueSemaphoreTake+0x74>
                else if( xEntryTimeSet == pdFALSE )
 8009728:	b916      	cbnz	r6, 8009730 <xQueueSemaphoreTake+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800972a:	a802      	add	r0, sp, #8
 800972c:	f000 fd5a 	bl	800a1e4 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 8009730:	f7ff fbca 	bl	8008ec8 <vPortExitCritical>
        vTaskSuspendAll();
 8009734:	f000 faba 	bl	8009cac <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 8009738:	f7ff fbb8 	bl	8008eac <vPortEnterCritical>
 800973c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009740:	2bff      	cmp	r3, #255	@ 0xff
 8009742:	bf08      	it	eq
 8009744:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8009748:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800974c:	2bff      	cmp	r3, #255	@ 0xff
 800974e:	bf08      	it	eq
 8009750:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8009754:	f7ff fbb8 	bl	8008ec8 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009758:	a901      	add	r1, sp, #4
 800975a:	a802      	add	r0, sp, #8
 800975c:	f000 fd4e 	bl	800a1fc <xTaskCheckForTimeOut>
 8009760:	bb10      	cbnz	r0, 80097a8 <xQueueSemaphoreTake+0xf6>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009762:	4620      	mov	r0, r4
 8009764:	f7ff fcde 	bl	8009124 <prvIsQueueEmpty>
 8009768:	b1c0      	cbz	r0, 800979c <xQueueSemaphoreTake+0xea>
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800976a:	6823      	ldr	r3, [r4, #0]
 800976c:	b93b      	cbnz	r3, 800977e <xQueueSemaphoreTake+0xcc>
                            taskENTER_CRITICAL();
 800976e:	f7ff fb9d 	bl	8008eac <vPortEnterCritical>
                                xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009772:	68a0      	ldr	r0, [r4, #8]
 8009774:	f000 fd88 	bl	800a288 <xTaskPriorityInherit>
 8009778:	4605      	mov	r5, r0
                            taskEXIT_CRITICAL();
 800977a:	f7ff fba5 	bl	8008ec8 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800977e:	9901      	ldr	r1, [sp, #4]
 8009780:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009784:	f000 fc94 	bl	800a0b0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 8009788:	4620      	mov	r0, r4
 800978a:	f7ff fd1f 	bl	80091cc <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800978e:	f000 fb4b 	bl	8009e28 <xTaskResumeAll>
 8009792:	b908      	cbnz	r0, 8009798 <xQueueSemaphoreTake+0xe6>
                    portYIELD_WITHIN_API();
 8009794:	f7ff fb7e 	bl	8008e94 <vPortYield>
 8009798:	2601      	movs	r6, #1
 800979a:	e79d      	b.n	80096d8 <xQueueSemaphoreTake+0x26>
                prvUnlockQueue( pxQueue );
 800979c:	4620      	mov	r0, r4
 800979e:	f7ff fd15 	bl	80091cc <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 80097a2:	f000 fb41 	bl	8009e28 <xTaskResumeAll>
 80097a6:	e7f7      	b.n	8009798 <xQueueSemaphoreTake+0xe6>
            prvUnlockQueue( pxQueue );
 80097a8:	4620      	mov	r0, r4
 80097aa:	f7ff fd0f 	bl	80091cc <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 80097ae:	f000 fb3b 	bl	8009e28 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80097b2:	4620      	mov	r0, r4
 80097b4:	f7ff fcb6 	bl	8009124 <prvIsQueueEmpty>
 80097b8:	2800      	cmp	r0, #0
 80097ba:	d0ed      	beq.n	8009798 <xQueueSemaphoreTake+0xe6>
                        if( xInheritanceOccurred != pdFALSE )
 80097bc:	b165      	cbz	r5, 80097d8 <xQueueSemaphoreTake+0x126>
                            taskENTER_CRITICAL();
 80097be:	f7ff fb75 	bl	8008eac <vPortEnterCritical>
        if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80097c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80097c4:	b119      	cbz	r1, 80097ce <xQueueSemaphoreTake+0x11c>
            uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80097c6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80097c8:	6819      	ldr	r1, [r3, #0]
 80097ca:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
                                vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80097ce:	68a0      	ldr	r0, [r4, #8]
 80097d0:	f000 fdde 	bl	800a390 <vTaskPriorityDisinheritAfterTimeout>
                            taskEXIT_CRITICAL();
 80097d4:	f7ff fb78 	bl	8008ec8 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 80097d8:	2000      	movs	r0, #0
 80097da:	e794      	b.n	8009706 <xQueueSemaphoreTake+0x54>

080097dc <xQueueReceiveFromISR>:
{
 80097dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097e0:	4689      	mov	r9, r1
 80097e2:	4690      	mov	r8, r2
    configASSERT( pxQueue );
 80097e4:	4604      	mov	r4, r0
 80097e6:	b910      	cbnz	r0, 80097ee <xQueueReceiveFromISR+0x12>
 80097e8:	f7ff fc3c 	bl	8009064 <ulSetInterruptMask>
 80097ec:	e7fe      	b.n	80097ec <xQueueReceiveFromISR+0x10>
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80097ee:	b921      	cbnz	r1, 80097fa <xQueueReceiveFromISR+0x1e>
 80097f0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80097f2:	b113      	cbz	r3, 80097fa <xQueueReceiveFromISR+0x1e>
 80097f4:	f7ff fc36 	bl	8009064 <ulSetInterruptMask>
 80097f8:	e7fe      	b.n	80097f8 <xQueueReceiveFromISR+0x1c>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097fa:	f7ff fc33 	bl	8009064 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097fe:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009800:	4607      	mov	r7, r0
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009802:	b1c6      	cbz	r6, 8009836 <xQueueReceiveFromISR+0x5a>
            const int8_t cRxLock = pxQueue->cRxLock;
 8009804:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009808:	4649      	mov	r1, r9
 800980a:	4620      	mov	r0, r4
            const int8_t cRxLock = pxQueue->cRxLock;
 800980c:	b26d      	sxtb	r5, r5
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 800980e:	f7ff fcc7 	bl	80091a0 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009812:	3e01      	subs	r6, #1
            if( cRxLock == queueUNLOCKED )
 8009814:	1c6b      	adds	r3, r5, #1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009816:	63a6      	str	r6, [r4, #56]	@ 0x38
            if( cRxLock == queueUNLOCKED )
 8009818:	d113      	bne.n	8009842 <xQueueReceiveFromISR+0x66>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800981a:	6923      	ldr	r3, [r4, #16]
 800981c:	b153      	cbz	r3, 8009834 <xQueueReceiveFromISR+0x58>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800981e:	f104 0010 	add.w	r0, r4, #16
 8009822:	f000 fc81 	bl	800a128 <xTaskRemoveFromEventList>
 8009826:	b128      	cbz	r0, 8009834 <xQueueReceiveFromISR+0x58>
                        if( pxHigherPriorityTaskWoken != NULL )
 8009828:	f1b8 0f00 	cmp.w	r8, #0
 800982c:	d002      	beq.n	8009834 <xQueueReceiveFromISR+0x58>
                            *pxHigherPriorityTaskWoken = pdTRUE;
 800982e:	2301      	movs	r3, #1
 8009830:	f8c8 3000 	str.w	r3, [r8]
            xReturn = pdPASS;
 8009834:	2601      	movs	r6, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009836:	4638      	mov	r0, r7
 8009838:	f7ff fc1f 	bl	800907a <vClearInterruptMask>
}
 800983c:	4630      	mov	r0, r6
 800983e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cRxLock != queueINT8_MAX );
 8009842:	2d7f      	cmp	r5, #127	@ 0x7f
 8009844:	d102      	bne.n	800984c <xQueueReceiveFromISR+0x70>
 8009846:	f7ff fc0d 	bl	8009064 <ulSetInterruptMask>
 800984a:	e7fe      	b.n	800984a <xQueueReceiveFromISR+0x6e>
                pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800984c:	3501      	adds	r5, #1
 800984e:	b26d      	sxtb	r5, r5
 8009850:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8009854:	e7ee      	b.n	8009834 <xQueueReceiveFromISR+0x58>
	...

08009858 <vQueueAddToRegistry>:

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueAddToRegistry( QueueHandle_t xQueue,
                              const char * pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
    {
 8009858:	b570      	push	{r4, r5, r6, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800985a:	b910      	cbnz	r0, 8009862 <vQueueAddToRegistry+0xa>
 800985c:	f7ff fc02 	bl	8009064 <ulSetInterruptMask>
 8009860:	e7fe      	b.n	8009860 <vQueueAddToRegistry+0x8>

        QueueRegistryItem_t * pxEntryToWrite = NULL;

        if( pcQueueName != NULL )
 8009862:	b1b9      	cbz	r1, 8009894 <vQueueAddToRegistry+0x3c>
        QueueRegistryItem_t * pxEntryToWrite = NULL;
 8009864:	2300      	movs	r3, #0
 8009866:	4a0c      	ldr	r2, [pc, #48]	@ (8009898 <vQueueAddToRegistry+0x40>)
        {
            /* See if there is an empty space in the registry.  A NULL name denotes
             * a free slot. */
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009868:	461c      	mov	r4, r3
 800986a:	4615      	mov	r5, r2
            {
                /* Replace an existing entry if the queue is already in the registry. */
                if( xQueue == xQueueRegistry[ ux ].xHandle )
 800986c:	6856      	ldr	r6, [r2, #4]
 800986e:	4286      	cmp	r6, r0
 8009870:	d104      	bne.n	800987c <vQueueAddToRegistry+0x24>
                {
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009872:	eb05 03c4 	add.w	r3, r5, r4, lsl #3

        if( pxEntryToWrite != NULL )
        {
            /* Store the information on this queue. */
            pxEntryToWrite->pcQueueName = pcQueueName;
            pxEntryToWrite->xHandle = xQueue;
 8009876:	e9c3 1000 	strd	r1, r0, [r3]

            traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
        }
    }
 800987a:	e00b      	b.n	8009894 <vQueueAddToRegistry+0x3c>
                else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL ) )
 800987c:	b91b      	cbnz	r3, 8009886 <vQueueAddToRegistry+0x2e>
 800987e:	6816      	ldr	r6, [r2, #0]
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009880:	2e00      	cmp	r6, #0
 8009882:	bf08      	it	eq
 8009884:	4613      	moveq	r3, r2
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009886:	3401      	adds	r4, #1
 8009888:	2c08      	cmp	r4, #8
 800988a:	f102 0208 	add.w	r2, r2, #8
 800988e:	d1ed      	bne.n	800986c <vQueueAddToRegistry+0x14>
        if( pxEntryToWrite != NULL )
 8009890:	2b00      	cmp	r3, #0
 8009892:	d1f0      	bne.n	8009876 <vQueueAddToRegistry+0x1e>
    }
 8009894:	bd70      	pop	{r4, r5, r6, pc}
 8009896:	bf00      	nop
 8009898:	2006eff4 	.word	0x2006eff4

0800989c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueUnregisterQueue( QueueHandle_t xQueue )
    {
 800989c:	b510      	push	{r4, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800989e:	b910      	cbnz	r0, 80098a6 <vQueueUnregisterQueue+0xa>
 80098a0:	f7ff fbe0 	bl	8009064 <ulSetInterruptMask>
 80098a4:	e7fe      	b.n	80098a4 <vQueueUnregisterQueue+0x8>

        /* See if the handle of the queue being unregistered in actually in the
         * registry. */
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80098a6:	2300      	movs	r3, #0
        {
            if( xQueueRegistry[ ux ].xHandle == xQueue )
 80098a8:	4a08      	ldr	r2, [pc, #32]	@ (80098cc <vQueueUnregisterQueue+0x30>)
 80098aa:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80098ae:	00dc      	lsls	r4, r3, #3
 80098b0:	4288      	cmp	r0, r1
 80098b2:	d106      	bne.n	80098c2 <vQueueUnregisterQueue+0x26>
            {
                /* Set the name to NULL to show that this slot if free again. */
                xQueueRegistry[ ux ].pcQueueName = NULL;
 80098b4:	2100      	movs	r1, #0
 80098b6:	4a06      	ldr	r2, [pc, #24]	@ (80098d0 <vQueueUnregisterQueue+0x34>)
 80098b8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

                /* Set the handle to NULL to ensure the same queue handle cannot
                 * appear in the registry twice if it is added, removed, then
                 * added again. */
                xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80098bc:	4422      	add	r2, r4
 80098be:	6051      	str	r1, [r2, #4]
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80098c0:	bd10      	pop	{r4, pc}
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80098c2:	3301      	adds	r3, #1
 80098c4:	2b08      	cmp	r3, #8
 80098c6:	d1f0      	bne.n	80098aa <vQueueUnregisterQueue+0xe>
 80098c8:	e7fa      	b.n	80098c0 <vQueueUnregisterQueue+0x24>
 80098ca:	bf00      	nop
 80098cc:	2006eff8 	.word	0x2006eff8
 80098d0:	2006eff4 	.word	0x2006eff4

080098d4 <vQueueDelete>:
{
 80098d4:	b510      	push	{r4, lr}
    configASSERT( pxQueue );
 80098d6:	4604      	mov	r4, r0
 80098d8:	b910      	cbnz	r0, 80098e0 <vQueueDelete+0xc>
 80098da:	f7ff fbc3 	bl	8009064 <ulSetInterruptMask>
 80098de:	e7fe      	b.n	80098de <vQueueDelete+0xa>
            vQueueUnregisterQueue( pxQueue );
 80098e0:	f7ff ffdc 	bl	800989c <vQueueUnregisterQueue>
            if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80098e4:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 80098e8:	b923      	cbnz	r3, 80098f4 <vQueueDelete+0x20>
                vPortFree( pxQueue );
 80098ea:	4620      	mov	r0, r4
}
 80098ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                vPortFree( pxQueue );
 80098f0:	f000 bfda 	b.w	800a8a8 <vPortFree>
}
 80098f4:	bd10      	pop	{r4, pc}

080098f6 <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
 80098f6:	b570      	push	{r4, r5, r6, lr}
 80098f8:	4604      	mov	r4, r0
 80098fa:	460d      	mov	r5, r1
 80098fc:	4616      	mov	r6, r2
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
 80098fe:	f7ff fad5 	bl	8008eac <vPortEnterCritical>
 8009902:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009906:	2bff      	cmp	r3, #255	@ 0xff
 8009908:	bf04      	itt	eq
 800990a:	2300      	moveq	r3, #0
 800990c:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8009910:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009914:	2bff      	cmp	r3, #255	@ 0xff
 8009916:	bf04      	itt	eq
 8009918:	2300      	moveq	r3, #0
 800991a:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800991e:	f7ff fad3 	bl	8008ec8 <vPortExitCritical>

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009922:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009924:	b92b      	cbnz	r3, 8009932 <vQueueWaitForMessageRestricted+0x3c>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009926:	4632      	mov	r2, r6
 8009928:	4629      	mov	r1, r5
 800992a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800992e:	f000 fbd3 	bl	800a0d8 <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
 8009932:	4620      	mov	r0, r4
    }
 8009934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvUnlockQueue( pxQueue );
 8009938:	f7ff bc48 	b.w	80091cc <prvUnlockQueue>

0800993c <prvAddNewTaskToReadyList>:
    }
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
{
 800993c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009940:	4604      	mov	r4, r0
    /* Ensure interrupts don't access the task lists while the lists are being
     * updated. */
    taskENTER_CRITICAL();
 8009942:	f7ff fab3 	bl	8008eac <vPortEnterCritical>
    {
        uxCurrentNumberOfTasks++;
 8009946:	4b30      	ldr	r3, [pc, #192]	@ (8009a08 <prvAddNewTaskToReadyList+0xcc>)

        if( pxCurrentTCB == NULL )
 8009948:	4e30      	ldr	r6, [pc, #192]	@ (8009a0c <prvAddNewTaskToReadyList+0xd0>)
        uxCurrentNumberOfTasks++;
 800994a:	681a      	ldr	r2, [r3, #0]
 800994c:	4f30      	ldr	r7, [pc, #192]	@ (8009a10 <prvAddNewTaskToReadyList+0xd4>)
 800994e:	3201      	adds	r2, #1
 8009950:	601a      	str	r2, [r3, #0]
        if( pxCurrentTCB == NULL )
 8009952:	6835      	ldr	r5, [r6, #0]
 8009954:	2d00      	cmp	r5, #0
 8009956:	d14a      	bne.n	80099ee <prvAddNewTaskToReadyList+0xb2>
        {
            /* There are no other tasks, or all the other tasks are in
             * the suspended state - make this the current task. */
            pxCurrentTCB = pxNewTCB;
 8009958:	6034      	str	r4, [r6, #0]

            if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800995a:	681b      	ldr	r3, [r3, #0]
 800995c:	2b01      	cmp	r3, #1
 800995e:	d11f      	bne.n	80099a0 <prvAddNewTaskToReadyList+0x64>
 8009960:	46b8      	mov	r8, r7
{
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009962:	4640      	mov	r0, r8
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009964:	3501      	adds	r5, #1
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009966:	f7ff fa39 	bl	8008ddc <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800996a:	2d38      	cmp	r5, #56	@ 0x38
 800996c:	f108 0814 	add.w	r8, r8, #20
 8009970:	d1f7      	bne.n	8009962 <prvAddNewTaskToReadyList+0x26>
    }

    vListInitialise( &xDelayedTaskList1 );
 8009972:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009a38 <prvAddNewTaskToReadyList+0xfc>
    vListInitialise( &xDelayedTaskList2 );
 8009976:	4d27      	ldr	r5, [pc, #156]	@ (8009a14 <prvAddNewTaskToReadyList+0xd8>)
    vListInitialise( &xDelayedTaskList1 );
 8009978:	4640      	mov	r0, r8
 800997a:	f7ff fa2f 	bl	8008ddc <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 800997e:	4628      	mov	r0, r5
 8009980:	f7ff fa2c 	bl	8008ddc <vListInitialise>
    vListInitialise( &xPendingReadyList );
 8009984:	4824      	ldr	r0, [pc, #144]	@ (8009a18 <prvAddNewTaskToReadyList+0xdc>)
 8009986:	f7ff fa29 	bl	8008ddc <vListInitialise>

    #if ( INCLUDE_vTaskDelete == 1 )
        {
            vListInitialise( &xTasksWaitingTermination );
 800998a:	4824      	ldr	r0, [pc, #144]	@ (8009a1c <prvAddNewTaskToReadyList+0xe0>)
 800998c:	f7ff fa26 	bl	8008ddc <vListInitialise>
        }
    #endif /* INCLUDE_vTaskDelete */

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            vListInitialise( &xSuspendedTaskList );
 8009990:	4823      	ldr	r0, [pc, #140]	@ (8009a20 <prvAddNewTaskToReadyList+0xe4>)
 8009992:	f7ff fa23 	bl	8008ddc <vListInitialise>
        }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
 8009996:	4b23      	ldr	r3, [pc, #140]	@ (8009a24 <prvAddNewTaskToReadyList+0xe8>)
 8009998:	f8c3 8000 	str.w	r8, [r3]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800999c:	4b22      	ldr	r3, [pc, #136]	@ (8009a28 <prvAddNewTaskToReadyList+0xec>)
 800999e:	601d      	str	r5, [r3, #0]
        uxTaskNumber++;
 80099a0:	4a22      	ldr	r2, [pc, #136]	@ (8009a2c <prvAddNewTaskToReadyList+0xf0>)
        prvAddTaskToReadyList( pxNewTCB );
 80099a2:	1d20      	adds	r0, r4, #4
        uxTaskNumber++;
 80099a4:	6813      	ldr	r3, [r2, #0]
 80099a6:	3301      	adds	r3, #1
 80099a8:	6013      	str	r3, [r2, #0]
        prvAddTaskToReadyList( pxNewTCB );
 80099aa:	4a21      	ldr	r2, [pc, #132]	@ (8009a30 <prvAddNewTaskToReadyList+0xf4>)
                pxNewTCB->uxTCBNumber = uxTaskNumber;
 80099ac:	6463      	str	r3, [r4, #68]	@ 0x44
        prvAddTaskToReadyList( pxNewTCB );
 80099ae:	6811      	ldr	r1, [r2, #0]
 80099b0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80099b2:	428b      	cmp	r3, r1
 80099b4:	bf88      	it	hi
 80099b6:	6013      	strhi	r3, [r2, #0]
 80099b8:	2214      	movs	r2, #20
 80099ba:	4353      	muls	r3, r2
 80099bc:	18f9      	adds	r1, r7, r3
 80099be:	684a      	ldr	r2, [r1, #4]
 80099c0:	6895      	ldr	r5, [r2, #8]
 80099c2:	60a2      	str	r2, [r4, #8]
 80099c4:	60e5      	str	r5, [r4, #12]
 80099c6:	6068      	str	r0, [r5, #4]
 80099c8:	6090      	str	r0, [r2, #8]
 80099ca:	58fa      	ldr	r2, [r7, r3]
 80099cc:	6161      	str	r1, [r4, #20]
 80099ce:	3201      	adds	r2, #1
 80099d0:	50fa      	str	r2, [r7, r3]
    taskEXIT_CRITICAL();
 80099d2:	f7ff fa79 	bl	8008ec8 <vPortExitCritical>
    if( xSchedulerRunning != pdFALSE )
 80099d6:	4b17      	ldr	r3, [pc, #92]	@ (8009a34 <prvAddNewTaskToReadyList+0xf8>)
 80099d8:	681b      	ldr	r3, [r3, #0]
 80099da:	b19b      	cbz	r3, 8009a04 <prvAddNewTaskToReadyList+0xc8>
        if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80099dc:	6833      	ldr	r3, [r6, #0]
 80099de:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80099e0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80099e2:	429a      	cmp	r2, r3
 80099e4:	d20e      	bcs.n	8009a04 <prvAddNewTaskToReadyList+0xc8>
}
 80099e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            taskYIELD_IF_USING_PREEMPTION();
 80099ea:	f7ff ba53 	b.w	8008e94 <vPortYield>
            if( xSchedulerRunning == pdFALSE )
 80099ee:	4b11      	ldr	r3, [pc, #68]	@ (8009a34 <prvAddNewTaskToReadyList+0xf8>)
 80099f0:	681a      	ldr	r2, [r3, #0]
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099f2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
            if( xSchedulerRunning == pdFALSE )
 80099f4:	2a00      	cmp	r2, #0
 80099f6:	d1d3      	bne.n	80099a0 <prvAddNewTaskToReadyList+0x64>
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099f8:	6832      	ldr	r2, [r6, #0]
 80099fa:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80099fc:	429a      	cmp	r2, r3
                    pxCurrentTCB = pxNewTCB;
 80099fe:	bf98      	it	ls
 8009a00:	6034      	strls	r4, [r6, #0]
 8009a02:	e7cd      	b.n	80099a0 <prvAddNewTaskToReadyList+0x64>
}
 8009a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a08:	2006f058 	.word	0x2006f058
 8009a0c:	2006f52c 	.word	0x2006f52c
 8009a10:	2006f0cc 	.word	0x2006f0cc
 8009a14:	2006f0a4 	.word	0x2006f0a4
 8009a18:	2006f088 	.word	0x2006f088
 8009a1c:	2006f074 	.word	0x2006f074
 8009a20:	2006f05c 	.word	0x2006f05c
 8009a24:	2006f0a0 	.word	0x2006f0a0
 8009a28:	2006f09c 	.word	0x2006f09c
 8009a2c:	2006f03c 	.word	0x2006f03c
 8009a30:	2006f050 	.word	0x2006f050
 8009a34:	2006f04c 	.word	0x2006f04c
 8009a38:	2006f0b8 	.word	0x2006f0b8

08009a3c <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 8009a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a3e:	4606      	mov	r6, r0
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 8009a40:	4b1a      	ldr	r3, [pc, #104]	@ (8009aac <prvAddCurrentTaskToDelayedList+0x70>)
        }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a42:	4c1b      	ldr	r4, [pc, #108]	@ (8009ab0 <prvAddCurrentTaskToDelayedList+0x74>)
    const TickType_t xConstTickCount = xTickCount;
 8009a44:	681d      	ldr	r5, [r3, #0]
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a46:	6820      	ldr	r0, [r4, #0]
{
 8009a48:	460f      	mov	r7, r1
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a4a:	3004      	adds	r0, #4
 8009a4c:	f7ff f9eb 	bl	8008e26 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a50:	1c73      	adds	r3, r6, #1
 8009a52:	d113      	bne.n	8009a7c <prvAddCurrentTaskToDelayedList+0x40>
 8009a54:	b197      	cbz	r7, 8009a7c <prvAddCurrentTaskToDelayedList+0x40>
            {
                /* Add the task to the suspended task list instead of a delayed task
                 * list to ensure it is not woken by a timing event.  It will block
                 * indefinitely. */
                listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a56:	4b17      	ldr	r3, [pc, #92]	@ (8009ab4 <prvAddCurrentTaskToDelayedList+0x78>)
 8009a58:	6821      	ldr	r1, [r4, #0]
 8009a5a:	685a      	ldr	r2, [r3, #4]
 8009a5c:	608a      	str	r2, [r1, #8]
 8009a5e:	6890      	ldr	r0, [r2, #8]
 8009a60:	6821      	ldr	r1, [r4, #0]
 8009a62:	60c8      	str	r0, [r1, #12]
 8009a64:	6821      	ldr	r1, [r4, #0]
 8009a66:	3104      	adds	r1, #4
 8009a68:	6041      	str	r1, [r0, #4]
 8009a6a:	6821      	ldr	r1, [r4, #0]
 8009a6c:	3104      	adds	r1, #4
 8009a6e:	6091      	str	r1, [r2, #8]
 8009a70:	6822      	ldr	r2, [r4, #0]
 8009a72:	6153      	str	r3, [r2, #20]
 8009a74:	681a      	ldr	r2, [r3, #0]
 8009a76:	3201      	adds	r2, #1
 8009a78:	601a      	str	r2, [r3, #0]

            /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
            ( void ) xCanBlockIndefinitely;
        }
    #endif /* INCLUDE_vTaskSuspend */
}
 8009a7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a7c:	6823      	ldr	r3, [r4, #0]
 8009a7e:	19ad      	adds	r5, r5, r6
 8009a80:	605d      	str	r5, [r3, #4]
                if( xTimeToWake < xConstTickCount )
 8009a82:	d307      	bcc.n	8009a94 <prvAddCurrentTaskToDelayedList+0x58>
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a84:	4b0c      	ldr	r3, [pc, #48]	@ (8009ab8 <prvAddCurrentTaskToDelayedList+0x7c>)
 8009a86:	6818      	ldr	r0, [r3, #0]
 8009a88:	6821      	ldr	r1, [r4, #0]
}
 8009a8a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a8e:	3104      	adds	r1, #4
 8009a90:	f7ff b9b2 	b.w	8008df8 <vListInsert>
                    vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a94:	4b09      	ldr	r3, [pc, #36]	@ (8009abc <prvAddCurrentTaskToDelayedList+0x80>)
 8009a96:	6818      	ldr	r0, [r3, #0]
 8009a98:	6821      	ldr	r1, [r4, #0]
 8009a9a:	3104      	adds	r1, #4
 8009a9c:	f7ff f9ac 	bl	8008df8 <vListInsert>
                    if( xTimeToWake < xNextTaskUnblockTime )
 8009aa0:	4b07      	ldr	r3, [pc, #28]	@ (8009ac0 <prvAddCurrentTaskToDelayedList+0x84>)
 8009aa2:	681a      	ldr	r2, [r3, #0]
 8009aa4:	42aa      	cmp	r2, r5
                        xNextTaskUnblockTime = xTimeToWake;
 8009aa6:	bf88      	it	hi
 8009aa8:	601d      	strhi	r5, [r3, #0]
}
 8009aaa:	e7e6      	b.n	8009a7a <prvAddCurrentTaskToDelayedList+0x3e>
 8009aac:	2006f054 	.word	0x2006f054
 8009ab0:	2006f52c 	.word	0x2006f52c
 8009ab4:	2006f05c 	.word	0x2006f05c
 8009ab8:	2006f09c 	.word	0x2006f09c
 8009abc:	2006f0a0 	.word	0x2006f0a0
 8009ac0:	2006f038 	.word	0x2006f038

08009ac4 <prvResetNextTaskUnblockTime>:
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ac4:	4a06      	ldr	r2, [pc, #24]	@ (8009ae0 <prvResetNextTaskUnblockTime+0x1c>)
 8009ac6:	6813      	ldr	r3, [r2, #0]
 8009ac8:	6819      	ldr	r1, [r3, #0]
 8009aca:	4b06      	ldr	r3, [pc, #24]	@ (8009ae4 <prvResetNextTaskUnblockTime+0x20>)
 8009acc:	b919      	cbnz	r1, 8009ad6 <prvResetNextTaskUnblockTime+0x12>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009ace:	f04f 32ff 	mov.w	r2, #4294967295
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009ad2:	601a      	str	r2, [r3, #0]
}
 8009ad4:	4770      	bx	lr
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009ad6:	6812      	ldr	r2, [r2, #0]
 8009ad8:	68d2      	ldr	r2, [r2, #12]
 8009ada:	6812      	ldr	r2, [r2, #0]
 8009adc:	e7f9      	b.n	8009ad2 <prvResetNextTaskUnblockTime+0xe>
 8009ade:	bf00      	nop
 8009ae0:	2006f0a0 	.word	0x2006f0a0
 8009ae4:	2006f038 	.word	0x2006f038

08009ae8 <prvDeleteTCB>:
    {
 8009ae8:	b510      	push	{r4, lr}
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009aea:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
    {
 8009aee:	4604      	mov	r4, r0
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009af0:	b93b      	cbnz	r3, 8009b02 <prvDeleteTCB+0x1a>
                    vPortFreeStack( pxTCB->pxStack );
 8009af2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009af4:	f000 fed8 	bl	800a8a8 <vPortFree>
                    vPortFree( pxTCB );
 8009af8:	4620      	mov	r0, r4
    }
 8009afa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    vPortFree( pxTCB );
 8009afe:	f000 bed3 	b.w	800a8a8 <vPortFree>
                else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009b02:	2b01      	cmp	r3, #1
 8009b04:	d0f9      	beq.n	8009afa <prvDeleteTCB+0x12>
                    configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB );
 8009b06:	2b02      	cmp	r3, #2
 8009b08:	d002      	beq.n	8009b10 <prvDeleteTCB+0x28>
 8009b0a:	f7ff faab 	bl	8009064 <ulSetInterruptMask>
 8009b0e:	e7fe      	b.n	8009b0e <prvDeleteTCB+0x26>
    }
 8009b10:	bd10      	pop	{r4, pc}
	...

08009b14 <prvIdleTask>:
{
 8009b14:	b580      	push	{r7, lr}
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009b16:	4c10      	ldr	r4, [pc, #64]	@ (8009b58 <prvIdleTask+0x44>)
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b18:	4f10      	ldr	r7, [pc, #64]	@ (8009b5c <prvIdleTask+0x48>)
                    --uxCurrentNumberOfTasks;
 8009b1a:	4d11      	ldr	r5, [pc, #68]	@ (8009b60 <prvIdleTask+0x4c>)
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009b1c:	6823      	ldr	r3, [r4, #0]
 8009b1e:	b943      	cbnz	r3, 8009b32 <prvIdleTask+0x1e>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009b20:	4b10      	ldr	r3, [pc, #64]	@ (8009b64 <prvIdleTask+0x50>)
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	2b01      	cmp	r3, #1
 8009b26:	d901      	bls.n	8009b2c <prvIdleTask+0x18>
                    taskYIELD();
 8009b28:	f7ff f9b4 	bl	8008e94 <vPortYield>
                vApplicationIdleHook();
 8009b2c:	f7f6 fbce 	bl	80002cc <vApplicationIdleHook>
        prvCheckTasksWaitingTermination();
 8009b30:	e7f3      	b.n	8009b1a <prvIdleTask+0x6>
                taskENTER_CRITICAL();
 8009b32:	f7ff f9bb 	bl	8008eac <vPortEnterCritical>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b36:	68fb      	ldr	r3, [r7, #12]
 8009b38:	68de      	ldr	r6, [r3, #12]
                    ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b3a:	1d30      	adds	r0, r6, #4
 8009b3c:	f7ff f973 	bl	8008e26 <uxListRemove>
                    --uxCurrentNumberOfTasks;
 8009b40:	682b      	ldr	r3, [r5, #0]
 8009b42:	3b01      	subs	r3, #1
 8009b44:	602b      	str	r3, [r5, #0]
                    --uxDeletedTasksWaitingCleanUp;
 8009b46:	6823      	ldr	r3, [r4, #0]
 8009b48:	3b01      	subs	r3, #1
 8009b4a:	6023      	str	r3, [r4, #0]
                taskEXIT_CRITICAL();
 8009b4c:	f7ff f9bc 	bl	8008ec8 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 8009b50:	4630      	mov	r0, r6
 8009b52:	f7ff ffc9 	bl	8009ae8 <prvDeleteTCB>
 8009b56:	e7e1      	b.n	8009b1c <prvIdleTask+0x8>
 8009b58:	2006f070 	.word	0x2006f070
 8009b5c:	2006f074 	.word	0x2006f074
 8009b60:	2006f058 	.word	0x2006f058
 8009b64:	2006f0cc 	.word	0x2006f0cc

08009b68 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b6c:	460d      	mov	r5, r1
 8009b6e:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	@ 0x28
 8009b72:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b74:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b76:	4680      	mov	r8, r0
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b78:	4632      	mov	r2, r6
 8009b7a:	21a5      	movs	r1, #165	@ 0xa5
 8009b7c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b7e:	4699      	mov	r9, r3
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b80:	f028 fec9 	bl	8032916 <memset>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b84:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
    if( pcName != NULL )
 8009b88:	b195      	cbz	r5, 8009bb0 <prvInitialiseNewTask.constprop.0+0x48>
 8009b8a:	1e6b      	subs	r3, r5, #1
 8009b8c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009b90:	350f      	adds	r5, #15
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b92:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009b96:	f802 1f01 	strb.w	r1, [r2, #1]!
            if( pcName[ x ] == ( char ) 0x00 )
 8009b9a:	b109      	cbz	r1, 8009ba0 <prvInitialiseNewTask.constprop.0+0x38>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b9c:	42ab      	cmp	r3, r5
 8009b9e:	d1f8      	bne.n	8009b92 <prvInitialiseNewTask.constprop.0+0x2a>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009ba0:	2300      	movs	r3, #0
 8009ba2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
    configASSERT( uxPriority < configMAX_PRIORITIES );
 8009ba6:	2f37      	cmp	r7, #55	@ 0x37
 8009ba8:	d905      	bls.n	8009bb6 <prvInitialiseNewTask.constprop.0+0x4e>
 8009baa:	f7ff fa5b 	bl	8009064 <ulSetInterruptMask>
 8009bae:	e7fe      	b.n	8009bae <prvInitialiseNewTask.constprop.0+0x46>
        pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009bb0:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009bb4:	e7f7      	b.n	8009ba6 <prvInitialiseNewTask.constprop.0+0x3e>
            pxNewTCB->uxMutexesHeld = 0;
 8009bb6:	2500      	movs	r5, #0
    pxNewTCB->uxPriority = uxPriority;
 8009bb8:	62e7      	str	r7, [r4, #44]	@ 0x2c
            pxNewTCB->uxBasePriority = uxPriority;
 8009bba:	64e7      	str	r7, [r4, #76]	@ 0x4c
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009bbc:	1d20      	adds	r0, r4, #4
            pxNewTCB->uxMutexesHeld = 0;
 8009bbe:	6525      	str	r5, [r4, #80]	@ 0x50
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009bc0:	f7ff f917 	bl	8008df2 <vListInitialiseItem>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009bc4:	3e04      	subs	r6, #4
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009bc6:	f104 0018 	add.w	r0, r4, #24
 8009bca:	f7ff f912 	bl	8008df2 <vListInitialiseItem>
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bce:	f1c7 0738 	rsb	r7, r7, #56	@ 0x38
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009bd2:	eb0b 0006 	add.w	r0, fp, r6
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009bd6:	464b      	mov	r3, r9
 8009bd8:	4642      	mov	r2, r8
 8009bda:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009bdc:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bde:	61a7      	str	r7, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009be0:	6264      	str	r4, [r4, #36]	@ 0x24
            pxNewTCB->pxTaskTag = NULL;
 8009be2:	6565      	str	r5, [r4, #84]	@ 0x54
            memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
 8009be4:	65a5      	str	r5, [r4, #88]	@ 0x58
            memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
 8009be6:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009bea:	f020 0007 	bic.w	r0, r0, #7
 8009bee:	f7ff f9ad 	bl	8008f4c <pxPortInitialiseStack>
 8009bf2:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 8009bf4:	f1ba 0f00 	cmp.w	sl, #0
 8009bf8:	d001      	beq.n	8009bfe <prvInitialiseNewTask.constprop.0+0x96>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bfa:	f8ca 4000 	str.w	r4, [sl]
}
 8009bfe:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009c02 <xTaskCreateStatic>:
    {
 8009c02:	b570      	push	{r4, r5, r6, lr}
 8009c04:	b086      	sub	sp, #24
 8009c06:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
        configASSERT( puxStackBuffer != NULL );
 8009c0a:	b915      	cbnz	r5, 8009c12 <xTaskCreateStatic+0x10>
 8009c0c:	f7ff fa2a 	bl	8009064 <ulSetInterruptMask>
 8009c10:	e7fe      	b.n	8009c10 <xTaskCreateStatic+0xe>
        configASSERT( pxTaskBuffer != NULL );
 8009c12:	b914      	cbnz	r4, 8009c1a <xTaskCreateStatic+0x18>
 8009c14:	f7ff fa26 	bl	8009064 <ulSetInterruptMask>
 8009c18:	e7fe      	b.n	8009c18 <xTaskCreateStatic+0x16>
                volatile size_t xSize = sizeof( StaticTask_t );
 8009c1a:	2660      	movs	r6, #96	@ 0x60
 8009c1c:	9605      	str	r6, [sp, #20]
                configASSERT( xSize == sizeof( TCB_t ) );
 8009c1e:	9e05      	ldr	r6, [sp, #20]
 8009c20:	2e60      	cmp	r6, #96	@ 0x60
 8009c22:	d002      	beq.n	8009c2a <xTaskCreateStatic+0x28>
 8009c24:	f7ff fa1e 	bl	8009064 <ulSetInterruptMask>
 8009c28:	e7fe      	b.n	8009c28 <xTaskCreateStatic+0x26>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c2a:	6325      	str	r5, [r4, #48]	@ 0x30
                    pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c2c:	2502      	movs	r5, #2
 8009c2e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c32:	ad04      	add	r5, sp, #16
 8009c34:	9501      	str	r5, [sp, #4]
 8009c36:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009c38:	9402      	str	r4, [sp, #8]
 8009c3a:	9500      	str	r5, [sp, #0]
                ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c3c:	9e05      	ldr	r6, [sp, #20]
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c3e:	f7ff ff93 	bl	8009b68 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009c42:	4620      	mov	r0, r4
 8009c44:	f7ff fe7a 	bl	800993c <prvAddNewTaskToReadyList>
    }
 8009c48:	9804      	ldr	r0, [sp, #16]
 8009c4a:	b006      	add	sp, #24
 8009c4c:	bd70      	pop	{r4, r5, r6, pc}

08009c4e <xTaskCreate>:
    {
 8009c4e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c52:	4607      	mov	r7, r0
 8009c54:	b085      	sub	sp, #20
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c56:	0090      	lsls	r0, r2, #2
    {
 8009c58:	4688      	mov	r8, r1
 8009c5a:	4616      	mov	r6, r2
 8009c5c:	4699      	mov	r9, r3
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c5e:	f000 fd93 	bl	800a788 <pvPortMalloc>
                if( pxStack != NULL )
 8009c62:	4605      	mov	r5, r0
 8009c64:	b920      	cbnz	r0, 8009c70 <xTaskCreate+0x22>
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c66:	f04f 30ff 	mov.w	r0, #4294967295
    }
 8009c6a:	b005      	add	sp, #20
 8009c6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c70:	2060      	movs	r0, #96	@ 0x60
 8009c72:	f000 fd89 	bl	800a788 <pvPortMalloc>
                    if( pxNewTCB != NULL )
 8009c76:	4604      	mov	r4, r0
 8009c78:	b198      	cbz	r0, 8009ca2 <xTaskCreate+0x54>
                    pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c7a:	2300      	movs	r3, #0
 8009c7c:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c80:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
                        pxNewTCB->pxStack = pxStack;
 8009c82:	6305      	str	r5, [r0, #48]	@ 0x30
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c84:	9301      	str	r3, [sp, #4]
 8009c86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009c88:	4632      	mov	r2, r6
 8009c8a:	4641      	mov	r1, r8
 8009c8c:	9002      	str	r0, [sp, #8]
 8009c8e:	9300      	str	r3, [sp, #0]
 8009c90:	4638      	mov	r0, r7
 8009c92:	464b      	mov	r3, r9
 8009c94:	f7ff ff68 	bl	8009b68 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009c98:	4620      	mov	r0, r4
 8009c9a:	f7ff fe4f 	bl	800993c <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 8009c9e:	2001      	movs	r0, #1
 8009ca0:	e7e3      	b.n	8009c6a <xTaskCreate+0x1c>
                        vPortFreeStack( pxStack );
 8009ca2:	4628      	mov	r0, r5
 8009ca4:	f000 fe00 	bl	800a8a8 <vPortFree>
        if( pxNewTCB != NULL )
 8009ca8:	e7dd      	b.n	8009c66 <xTaskCreate+0x18>
	...

08009cac <vTaskSuspendAll>:
    ++uxSchedulerSuspended;
 8009cac:	4a02      	ldr	r2, [pc, #8]	@ (8009cb8 <vTaskSuspendAll+0xc>)
 8009cae:	6813      	ldr	r3, [r2, #0]
 8009cb0:	3301      	adds	r3, #1
 8009cb2:	6013      	str	r3, [r2, #0]
}
 8009cb4:	4770      	bx	lr
 8009cb6:	bf00      	nop
 8009cb8:	2006f034 	.word	0x2006f034

08009cbc <xTaskGetTickCount>:
        xTicks = xTickCount;
 8009cbc:	4b01      	ldr	r3, [pc, #4]	@ (8009cc4 <xTaskGetTickCount+0x8>)
 8009cbe:	6818      	ldr	r0, [r3, #0]
}
 8009cc0:	4770      	bx	lr
 8009cc2:	bf00      	nop
 8009cc4:	2006f054 	.word	0x2006f054

08009cc8 <xTaskIncrementTick>:
{
 8009cc8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ccc:	4b4b      	ldr	r3, [pc, #300]	@ (8009dfc <xTaskIncrementTick+0x134>)
 8009cce:	681b      	ldr	r3, [r3, #0]
 8009cd0:	2b00      	cmp	r3, #0
 8009cd2:	f040 808d 	bne.w	8009df0 <xTaskIncrementTick+0x128>
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009cd6:	4b4a      	ldr	r3, [pc, #296]	@ (8009e00 <xTaskIncrementTick+0x138>)
 8009cd8:	681c      	ldr	r4, [r3, #0]
 8009cda:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 8009cdc:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009cde:	b98c      	cbnz	r4, 8009d04 <xTaskIncrementTick+0x3c>
            taskSWITCH_DELAYED_LISTS();
 8009ce0:	4b48      	ldr	r3, [pc, #288]	@ (8009e04 <xTaskIncrementTick+0x13c>)
 8009ce2:	681a      	ldr	r2, [r3, #0]
 8009ce4:	6812      	ldr	r2, [r2, #0]
 8009ce6:	b112      	cbz	r2, 8009cee <xTaskIncrementTick+0x26>
 8009ce8:	f7ff f9bc 	bl	8009064 <ulSetInterruptMask>
 8009cec:	e7fe      	b.n	8009cec <xTaskIncrementTick+0x24>
 8009cee:	4a46      	ldr	r2, [pc, #280]	@ (8009e08 <xTaskIncrementTick+0x140>)
 8009cf0:	6819      	ldr	r1, [r3, #0]
 8009cf2:	6810      	ldr	r0, [r2, #0]
 8009cf4:	6018      	str	r0, [r3, #0]
 8009cf6:	6011      	str	r1, [r2, #0]
 8009cf8:	4a44      	ldr	r2, [pc, #272]	@ (8009e0c <xTaskIncrementTick+0x144>)
 8009cfa:	6813      	ldr	r3, [r2, #0]
 8009cfc:	3301      	adds	r3, #1
 8009cfe:	6013      	str	r3, [r2, #0]
 8009d00:	f7ff fee0 	bl	8009ac4 <prvResetNextTaskUnblockTime>
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009d04:	f8df c114 	ldr.w	ip, [pc, #276]	@ 8009e1c <xTaskIncrementTick+0x154>
    BaseType_t xSwitchRequired = pdFALSE;
 8009d08:	2000      	movs	r0, #0
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009d0a:	f8dc 3000 	ldr.w	r3, [ip]
 8009d0e:	4a40      	ldr	r2, [pc, #256]	@ (8009e10 <xTaskIncrementTick+0x148>)
 8009d10:	429c      	cmp	r4, r3
 8009d12:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8009e20 <xTaskIncrementTick+0x158>
 8009d16:	d20f      	bcs.n	8009d38 <xTaskIncrementTick+0x70>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009d18:	2114      	movs	r1, #20
 8009d1a:	f8d8 3000 	ldr.w	r3, [r8]
 8009d1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d20:	434b      	muls	r3, r1
 8009d22:	58d3      	ldr	r3, [r2, r3]
                    xSwitchRequired = pdTRUE;
 8009d24:	2b02      	cmp	r3, #2
                if( xYieldPending != pdFALSE )
 8009d26:	4b3b      	ldr	r3, [pc, #236]	@ (8009e14 <xTaskIncrementTick+0x14c>)
                    xSwitchRequired = pdTRUE;
 8009d28:	bf28      	it	cs
 8009d2a:	2001      	movcs	r0, #1
                if( xYieldPending != pdFALSE )
 8009d2c:	681b      	ldr	r3, [r3, #0]
                    xSwitchRequired = pdTRUE;
 8009d2e:	2b00      	cmp	r3, #0
 8009d30:	bf18      	it	ne
 8009d32:	2001      	movne	r0, #1
}
 8009d34:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d38:	f8df e0c8 	ldr.w	lr, [pc, #200]	@ 8009e04 <xTaskIncrementTick+0x13c>
                    prvAddTaskToReadyList( pxTCB );
 8009d3c:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 8009e24 <xTaskIncrementTick+0x15c>
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d40:	f8de 3000 	ldr.w	r3, [lr]
 8009d44:	681b      	ldr	r3, [r3, #0]
 8009d46:	b923      	cbnz	r3, 8009d52 <xTaskIncrementTick+0x8a>
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d48:	f04f 33ff 	mov.w	r3, #4294967295
 8009d4c:	f8cc 3000 	str.w	r3, [ip]
                    break;
 8009d50:	e7e2      	b.n	8009d18 <xTaskIncrementTick+0x50>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d52:	f8de 3000 	ldr.w	r3, [lr]
 8009d56:	68db      	ldr	r3, [r3, #12]
 8009d58:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009d5a:	6859      	ldr	r1, [r3, #4]
                    if( xConstTickCount < xItemValue )
 8009d5c:	428c      	cmp	r4, r1
 8009d5e:	d202      	bcs.n	8009d66 <xTaskIncrementTick+0x9e>
                        xNextTaskUnblockTime = xItemValue;
 8009d60:	f8cc 1000 	str.w	r1, [ip]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
 8009d64:	e7d8      	b.n	8009d18 <xTaskIncrementTick+0x50>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009d66:	695d      	ldr	r5, [r3, #20]
 8009d68:	e9d3 1602 	ldrd	r1, r6, [r3, #8]
 8009d6c:	608e      	str	r6, [r1, #8]
 8009d6e:	6071      	str	r1, [r6, #4]
 8009d70:	6869      	ldr	r1, [r5, #4]
 8009d72:	1d1f      	adds	r7, r3, #4
 8009d74:	42b9      	cmp	r1, r7
 8009d76:	f04f 0100 	mov.w	r1, #0
 8009d7a:	bf08      	it	eq
 8009d7c:	606e      	streq	r6, [r5, #4]
 8009d7e:	6159      	str	r1, [r3, #20]
 8009d80:	6829      	ldr	r1, [r5, #0]
 8009d82:	3901      	subs	r1, #1
 8009d84:	6029      	str	r1, [r5, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009d86:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 8009d88:	b17d      	cbz	r5, 8009daa <xTaskIncrementTick+0xe2>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009d8a:	e9d3 1607 	ldrd	r1, r6, [r3, #28]
 8009d8e:	608e      	str	r6, [r1, #8]
 8009d90:	6071      	str	r1, [r6, #4]
 8009d92:	6869      	ldr	r1, [r5, #4]
 8009d94:	f103 0a18 	add.w	sl, r3, #24
 8009d98:	4551      	cmp	r1, sl
 8009d9a:	f04f 0100 	mov.w	r1, #0
 8009d9e:	bf08      	it	eq
 8009da0:	606e      	streq	r6, [r5, #4]
 8009da2:	6299      	str	r1, [r3, #40]	@ 0x28
 8009da4:	6829      	ldr	r1, [r5, #0]
 8009da6:	3901      	subs	r1, #1
 8009da8:	6029      	str	r1, [r5, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009daa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8009dac:	f8d9 5000 	ldr.w	r5, [r9]
 8009db0:	42a9      	cmp	r1, r5
 8009db2:	f04f 0514 	mov.w	r5, #20
 8009db6:	fb05 f501 	mul.w	r5, r5, r1
 8009dba:	eb02 0a05 	add.w	sl, r2, r5
 8009dbe:	f8da 6004 	ldr.w	r6, [sl, #4]
 8009dc2:	bf88      	it	hi
 8009dc4:	f8c9 1000 	strhi.w	r1, [r9]
 8009dc8:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8009dcc:	609e      	str	r6, [r3, #8]
 8009dce:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009dd2:	f8cb 7004 	str.w	r7, [fp, #4]
 8009dd6:	60b7      	str	r7, [r6, #8]
 8009dd8:	f8c3 a014 	str.w	sl, [r3, #20]
 8009ddc:	5953      	ldr	r3, [r2, r5]
 8009dde:	3301      	adds	r3, #1
 8009de0:	5153      	str	r3, [r2, r5]
                            if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009de2:	f8d8 3000 	ldr.w	r3, [r8]
 8009de6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                                xSwitchRequired = pdTRUE;
 8009de8:	4299      	cmp	r1, r3
 8009dea:	bf28      	it	cs
 8009dec:	2001      	movcs	r0, #1
 8009dee:	e7a7      	b.n	8009d40 <xTaskIncrementTick+0x78>
        ++xPendedTicks;
 8009df0:	4a09      	ldr	r2, [pc, #36]	@ (8009e18 <xTaskIncrementTick+0x150>)
    BaseType_t xSwitchRequired = pdFALSE;
 8009df2:	2000      	movs	r0, #0
        ++xPendedTicks;
 8009df4:	6813      	ldr	r3, [r2, #0]
 8009df6:	3301      	adds	r3, #1
 8009df8:	6013      	str	r3, [r2, #0]
 8009dfa:	e79b      	b.n	8009d34 <xTaskIncrementTick+0x6c>
 8009dfc:	2006f034 	.word	0x2006f034
 8009e00:	2006f054 	.word	0x2006f054
 8009e04:	2006f0a0 	.word	0x2006f0a0
 8009e08:	2006f09c 	.word	0x2006f09c
 8009e0c:	2006f040 	.word	0x2006f040
 8009e10:	2006f0cc 	.word	0x2006f0cc
 8009e14:	2006f044 	.word	0x2006f044
 8009e18:	2006f048 	.word	0x2006f048
 8009e1c:	2006f038 	.word	0x2006f038
 8009e20:	2006f52c 	.word	0x2006f52c
 8009e24:	2006f050 	.word	0x2006f050

08009e28 <xTaskResumeAll>:
{
 8009e28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    configASSERT( uxSchedulerSuspended );
 8009e2c:	4c3d      	ldr	r4, [pc, #244]	@ (8009f24 <xTaskResumeAll+0xfc>)
 8009e2e:	6823      	ldr	r3, [r4, #0]
 8009e30:	b913      	cbnz	r3, 8009e38 <xTaskResumeAll+0x10>
 8009e32:	f7ff f917 	bl	8009064 <ulSetInterruptMask>
 8009e36:	e7fe      	b.n	8009e36 <xTaskResumeAll+0xe>
    taskENTER_CRITICAL();
 8009e38:	f7ff f838 	bl	8008eac <vPortEnterCritical>
        --uxSchedulerSuspended;
 8009e3c:	6823      	ldr	r3, [r4, #0]
 8009e3e:	3b01      	subs	r3, #1
 8009e40:	6023      	str	r3, [r4, #0]
        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e42:	6823      	ldr	r3, [r4, #0]
 8009e44:	b12b      	cbz	r3, 8009e52 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 8009e46:	2400      	movs	r4, #0
    taskEXIT_CRITICAL();
 8009e48:	f7ff f83e 	bl	8008ec8 <vPortExitCritical>
}
 8009e4c:	4620      	mov	r0, r4
 8009e4e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009e52:	4a35      	ldr	r2, [pc, #212]	@ (8009f28 <xTaskResumeAll+0x100>)
 8009e54:	6812      	ldr	r2, [r2, #0]
 8009e56:	2a00      	cmp	r2, #0
 8009e58:	d0f5      	beq.n	8009e46 <xTaskResumeAll+0x1e>
                    prvAddTaskToReadyList( pxTCB );
 8009e5a:	f04f 0c14 	mov.w	ip, #20
                        xYieldPending = pdTRUE;
 8009e5e:	f04f 0901 	mov.w	r9, #1
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e62:	4e32      	ldr	r6, [pc, #200]	@ (8009f2c <xTaskResumeAll+0x104>)
                    prvAddTaskToReadyList( pxTCB );
 8009e64:	4f32      	ldr	r7, [pc, #200]	@ (8009f30 <xTaskResumeAll+0x108>)
 8009e66:	4933      	ldr	r1, [pc, #204]	@ (8009f34 <xTaskResumeAll+0x10c>)
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e68:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 8009f40 <xTaskResumeAll+0x118>
                        xYieldPending = pdTRUE;
 8009e6c:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 8009f3c <xTaskResumeAll+0x114>
 8009e70:	e03e      	b.n	8009ef0 <xTaskResumeAll+0xc8>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e72:	68f3      	ldr	r3, [r6, #12]
 8009e74:	68db      	ldr	r3, [r3, #12]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009e76:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8009e78:	e9d3 2407 	ldrd	r2, r4, [r3, #28]
 8009e7c:	6094      	str	r4, [r2, #8]
 8009e7e:	6062      	str	r2, [r4, #4]
 8009e80:	6842      	ldr	r2, [r0, #4]
 8009e82:	f103 0518 	add.w	r5, r3, #24
 8009e86:	42aa      	cmp	r2, r5
 8009e88:	f04f 0200 	mov.w	r2, #0
 8009e8c:	bf08      	it	eq
 8009e8e:	6044      	streq	r4, [r0, #4]
 8009e90:	629a      	str	r2, [r3, #40]	@ 0x28
 8009e92:	6802      	ldr	r2, [r0, #0]
 8009e94:	3a01      	subs	r2, #1
 8009e96:	6002      	str	r2, [r0, #0]
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009e98:	6958      	ldr	r0, [r3, #20]
 8009e9a:	e9d3 2402 	ldrd	r2, r4, [r3, #8]
 8009e9e:	6094      	str	r4, [r2, #8]
 8009ea0:	6062      	str	r2, [r4, #4]
 8009ea2:	6842      	ldr	r2, [r0, #4]
 8009ea4:	1d1d      	adds	r5, r3, #4
 8009ea6:	42aa      	cmp	r2, r5
 8009ea8:	6802      	ldr	r2, [r0, #0]
 8009eaa:	bf08      	it	eq
 8009eac:	6044      	streq	r4, [r0, #4]
 8009eae:	3a01      	subs	r2, #1
 8009eb0:	6002      	str	r2, [r0, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009eb2:	6838      	ldr	r0, [r7, #0]
 8009eb4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009eb6:	4282      	cmp	r2, r0
 8009eb8:	fb0c f002 	mul.w	r0, ip, r2
 8009ebc:	eb01 0a00 	add.w	sl, r1, r0
 8009ec0:	f8da 4004 	ldr.w	r4, [sl, #4]
 8009ec4:	bf88      	it	hi
 8009ec6:	603a      	strhi	r2, [r7, #0]
 8009ec8:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8009ecc:	609c      	str	r4, [r3, #8]
 8009ece:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009ed2:	f8cb 5004 	str.w	r5, [fp, #4]
 8009ed6:	60a5      	str	r5, [r4, #8]
 8009ed8:	580c      	ldr	r4, [r1, r0]
 8009eda:	f8c3 a014 	str.w	sl, [r3, #20]
 8009ede:	3401      	adds	r4, #1
 8009ee0:	500c      	str	r4, [r1, r0]
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009ee2:	f8de 0000 	ldr.w	r0, [lr]
 8009ee6:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8009ee8:	4282      	cmp	r2, r0
 8009eea:	d301      	bcc.n	8009ef0 <xTaskResumeAll+0xc8>
                        xYieldPending = pdTRUE;
 8009eec:	f8c8 9000 	str.w	r9, [r8]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ef0:	6832      	ldr	r2, [r6, #0]
 8009ef2:	2a00      	cmp	r2, #0
 8009ef4:	d1bd      	bne.n	8009e72 <xTaskResumeAll+0x4a>
                if( pxTCB != NULL )
 8009ef6:	b10b      	cbz	r3, 8009efc <xTaskResumeAll+0xd4>
                    prvResetNextTaskUnblockTime();
 8009ef8:	f7ff fde4 	bl	8009ac4 <prvResetNextTaskUnblockTime>
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009efc:	4d0e      	ldr	r5, [pc, #56]	@ (8009f38 <xTaskResumeAll+0x110>)
 8009efe:	682c      	ldr	r4, [r5, #0]
                    if( xPendedCounts > ( TickType_t ) 0U )
 8009f00:	b144      	cbz	r4, 8009f14 <xTaskResumeAll+0xec>
                                xYieldPending = pdTRUE;
 8009f02:	2701      	movs	r7, #1
 8009f04:	4e0d      	ldr	r6, [pc, #52]	@ (8009f3c <xTaskResumeAll+0x114>)
                            if( xTaskIncrementTick() != pdFALSE )
 8009f06:	f7ff fedf 	bl	8009cc8 <xTaskIncrementTick>
 8009f0a:	b100      	cbz	r0, 8009f0e <xTaskResumeAll+0xe6>
                                xYieldPending = pdTRUE;
 8009f0c:	6037      	str	r7, [r6, #0]
                        } while( xPendedCounts > ( TickType_t ) 0U );
 8009f0e:	3c01      	subs	r4, #1
 8009f10:	d1f9      	bne.n	8009f06 <xTaskResumeAll+0xde>
                        xPendedTicks = 0;
 8009f12:	602c      	str	r4, [r5, #0]
                if( xYieldPending != pdFALSE )
 8009f14:	4b09      	ldr	r3, [pc, #36]	@ (8009f3c <xTaskResumeAll+0x114>)
 8009f16:	681b      	ldr	r3, [r3, #0]
 8009f18:	2b00      	cmp	r3, #0
 8009f1a:	d094      	beq.n	8009e46 <xTaskResumeAll+0x1e>
                    taskYIELD_IF_USING_PREEMPTION();
 8009f1c:	f7fe ffba 	bl	8008e94 <vPortYield>
                            xAlreadyYielded = pdTRUE;
 8009f20:	2401      	movs	r4, #1
 8009f22:	e791      	b.n	8009e48 <xTaskResumeAll+0x20>
 8009f24:	2006f034 	.word	0x2006f034
 8009f28:	2006f058 	.word	0x2006f058
 8009f2c:	2006f088 	.word	0x2006f088
 8009f30:	2006f050 	.word	0x2006f050
 8009f34:	2006f0cc 	.word	0x2006f0cc
 8009f38:	2006f048 	.word	0x2006f048
 8009f3c:	2006f044 	.word	0x2006f044
 8009f40:	2006f52c 	.word	0x2006f52c

08009f44 <vTaskDelay>:
    {
 8009f44:	b508      	push	{r3, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 8009f46:	b918      	cbnz	r0, 8009f50 <vTaskDelay+0xc>
    }
 8009f48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            portYIELD_WITHIN_API();
 8009f4c:	f7fe bfa2 	b.w	8008e94 <vPortYield>
            configASSERT( uxSchedulerSuspended == 0 );
 8009f50:	4b07      	ldr	r3, [pc, #28]	@ (8009f70 <vTaskDelay+0x2c>)
 8009f52:	6819      	ldr	r1, [r3, #0]
 8009f54:	b111      	cbz	r1, 8009f5c <vTaskDelay+0x18>
 8009f56:	f7ff f885 	bl	8009064 <ulSetInterruptMask>
 8009f5a:	e7fe      	b.n	8009f5a <vTaskDelay+0x16>
            vTaskSuspendAll();
 8009f5c:	f7ff fea6 	bl	8009cac <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f60:	f7ff fd6c 	bl	8009a3c <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 8009f64:	f7ff ff60 	bl	8009e28 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 8009f68:	2800      	cmp	r0, #0
 8009f6a:	d0ed      	beq.n	8009f48 <vTaskDelay+0x4>
    }
 8009f6c:	bd08      	pop	{r3, pc}
 8009f6e:	bf00      	nop
 8009f70:	2006f034 	.word	0x2006f034

08009f74 <vTaskSetApplicationTaskTag>:
    {
 8009f74:	b538      	push	{r3, r4, r5, lr}
 8009f76:	460d      	mov	r5, r1
        if( xTask == NULL )
 8009f78:	4604      	mov	r4, r0
 8009f7a:	b908      	cbnz	r0, 8009f80 <vTaskSetApplicationTaskTag+0xc>
            xTCB = ( TCB_t * ) pxCurrentTCB;
 8009f7c:	4b04      	ldr	r3, [pc, #16]	@ (8009f90 <vTaskSetApplicationTaskTag+0x1c>)
 8009f7e:	681c      	ldr	r4, [r3, #0]
        taskENTER_CRITICAL();
 8009f80:	f7fe ff94 	bl	8008eac <vPortEnterCritical>
            xTCB->pxTaskTag = pxHookFunction;
 8009f84:	6565      	str	r5, [r4, #84]	@ 0x54
    }
 8009f86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        taskEXIT_CRITICAL();
 8009f8a:	f7fe bf9d 	b.w	8008ec8 <vPortExitCritical>
 8009f8e:	bf00      	nop
 8009f90:	2006f52c 	.word	0x2006f52c

08009f94 <xTaskCallApplicationTaskHook>:
    {
 8009f94:	4603      	mov	r3, r0
 8009f96:	4608      	mov	r0, r1
        if( xTask == NULL )
 8009f98:	b90b      	cbnz	r3, 8009f9e <xTaskCallApplicationTaskHook+0xa>
            xTCB = pxCurrentTCB;
 8009f9a:	4b03      	ldr	r3, [pc, #12]	@ (8009fa8 <xTaskCallApplicationTaskHook+0x14>)
 8009f9c:	681b      	ldr	r3, [r3, #0]
        if( xTCB->pxTaskTag != NULL )
 8009f9e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009fa0:	b103      	cbz	r3, 8009fa4 <xTaskCallApplicationTaskHook+0x10>
            xReturn = xTCB->pxTaskTag( pvParameter );
 8009fa2:	4718      	bx	r3
    }
 8009fa4:	4618      	mov	r0, r3
 8009fa6:	4770      	bx	lr
 8009fa8:	2006f52c 	.word	0x2006f52c

08009fac <vTaskStartScheduler>:
{
 8009fac:	b530      	push	{r4, r5, lr}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 8009fae:	2400      	movs	r4, #0
{
 8009fb0:	b089      	sub	sp, #36	@ 0x24
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009fb2:	aa07      	add	r2, sp, #28
 8009fb4:	a906      	add	r1, sp, #24
 8009fb6:	a805      	add	r0, sp, #20
            StackType_t * pxIdleTaskStackBuffer = NULL;
 8009fb8:	e9cd 4405 	strd	r4, r4, [sp, #20]
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009fbc:	f7fe fef6 	bl	8008dac <vApplicationGetIdleTaskMemory>
            xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 8009fc0:	9b05      	ldr	r3, [sp, #20]
 8009fc2:	9a07      	ldr	r2, [sp, #28]
 8009fc4:	9302      	str	r3, [sp, #8]
 8009fc6:	9b06      	ldr	r3, [sp, #24]
 8009fc8:	4913      	ldr	r1, [pc, #76]	@ (800a018 <vTaskStartScheduler+0x6c>)
 8009fca:	e9cd 4300 	strd	r4, r3, [sp]
 8009fce:	4813      	ldr	r0, [pc, #76]	@ (800a01c <vTaskStartScheduler+0x70>)
 8009fd0:	4623      	mov	r3, r4
 8009fd2:	f7ff fe16 	bl	8009c02 <xTaskCreateStatic>
            if( xIdleTaskHandle != NULL )
 8009fd6:	b1a8      	cbz	r0, 800a004 <vTaskStartScheduler+0x58>
                xReturn = xTimerCreateTimerTask();
 8009fd8:	f000 fb84 	bl	800a6e4 <xTimerCreateTimerTask>
    if( xReturn == pdPASS )
 8009fdc:	2801      	cmp	r0, #1
                xReturn = xTimerCreateTimerTask();
 8009fde:	4605      	mov	r5, r0
    if( xReturn == pdPASS )
 8009fe0:	d114      	bne.n	800a00c <vTaskStartScheduler+0x60>
        portDISABLE_INTERRUPTS();
 8009fe2:	f7ff f83f 	bl	8009064 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009fe6:	f04f 32ff 	mov.w	r2, #4294967295
 8009fea:	4b0d      	ldr	r3, [pc, #52]	@ (800a020 <vTaskStartScheduler+0x74>)
        traceTASK_SWITCHED_IN();
 8009fec:	4621      	mov	r1, r4
        xNextTaskUnblockTime = portMAX_DELAY;
 8009fee:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 8009ff0:	4b0c      	ldr	r3, [pc, #48]	@ (800a024 <vTaskStartScheduler+0x78>)
 8009ff2:	601d      	str	r5, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009ff4:	4b0c      	ldr	r3, [pc, #48]	@ (800a028 <vTaskStartScheduler+0x7c>)
 8009ff6:	601c      	str	r4, [r3, #0]
        traceTASK_SWITCHED_IN();
 8009ff8:	4b0c      	ldr	r3, [pc, #48]	@ (800a02c <vTaskStartScheduler+0x80>)
 8009ffa:	6818      	ldr	r0, [r3, #0]
 8009ffc:	f7ff ffca 	bl	8009f94 <xTaskCallApplicationTaskHook>
        if( xPortStartScheduler() != pdFALSE )
 800a000:	f7fe ffdc 	bl	8008fbc <xPortStartScheduler>
    ( void ) uxTopUsedPriority;
 800a004:	4b0a      	ldr	r3, [pc, #40]	@ (800a030 <vTaskStartScheduler+0x84>)
 800a006:	681b      	ldr	r3, [r3, #0]
}
 800a008:	b009      	add	sp, #36	@ 0x24
 800a00a:	bd30      	pop	{r4, r5, pc}
        configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a00c:	3501      	adds	r5, #1
 800a00e:	d1f9      	bne.n	800a004 <vTaskStartScheduler+0x58>
 800a010:	f7ff f828 	bl	8009064 <ulSetInterruptMask>
 800a014:	e7fe      	b.n	800a014 <vTaskStartScheduler+0x68>
 800a016:	bf00      	nop
 800a018:	08035920 	.word	0x08035920
 800a01c:	08009b15 	.word	0x08009b15
 800a020:	2006f038 	.word	0x2006f038
 800a024:	2006f04c 	.word	0x2006f04c
 800a028:	2006f054 	.word	0x2006f054
 800a02c:	2006f52c 	.word	0x2006f52c
 800a030:	2000005c 	.word	0x2000005c

0800a034 <vTaskSwitchContext>:
{
 800a034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a036:	4b19      	ldr	r3, [pc, #100]	@ (800a09c <vTaskSwitchContext+0x68>)
 800a038:	681a      	ldr	r2, [r3, #0]
 800a03a:	4b19      	ldr	r3, [pc, #100]	@ (800a0a0 <vTaskSwitchContext+0x6c>)
 800a03c:	b112      	cbz	r2, 800a044 <vTaskSwitchContext+0x10>
        xYieldPending = pdTRUE;
 800a03e:	2201      	movs	r2, #1
 800a040:	601a      	str	r2, [r3, #0]
}
 800a042:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a044:	2714      	movs	r7, #20
        traceTASK_SWITCHED_OUT();
 800a046:	4c17      	ldr	r4, [pc, #92]	@ (800a0a4 <vTaskSwitchContext+0x70>)
        xYieldPending = pdFALSE;
 800a048:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a04a:	4e17      	ldr	r6, [pc, #92]	@ (800a0a8 <vTaskSwitchContext+0x74>)
        traceTASK_SWITCHED_OUT();
 800a04c:	2101      	movs	r1, #1
 800a04e:	6820      	ldr	r0, [r4, #0]
 800a050:	f7ff ffa0 	bl	8009f94 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a054:	6832      	ldr	r2, [r6, #0]
 800a056:	4915      	ldr	r1, [pc, #84]	@ (800a0ac <vTaskSwitchContext+0x78>)
 800a058:	fb07 f302 	mul.w	r3, r7, r2
 800a05c:	58cd      	ldr	r5, [r1, r3]
 800a05e:	18c8      	adds	r0, r1, r3
 800a060:	b1b5      	cbz	r5, 800a090 <vTaskSwitchContext+0x5c>
 800a062:	6845      	ldr	r5, [r0, #4]
 800a064:	3308      	adds	r3, #8
 800a066:	686d      	ldr	r5, [r5, #4]
 800a068:	440b      	add	r3, r1
 800a06a:	429d      	cmp	r5, r3
 800a06c:	bf08      	it	eq
 800a06e:	686b      	ldreq	r3, [r5, #4]
 800a070:	6045      	str	r5, [r0, #4]
 800a072:	bf08      	it	eq
 800a074:	6043      	streq	r3, [r0, #4]
 800a076:	2314      	movs	r3, #20
 800a078:	fb03 1102 	mla	r1, r3, r2, r1
 800a07c:	684b      	ldr	r3, [r1, #4]
        traceTASK_SWITCHED_IN();
 800a07e:	2100      	movs	r1, #0
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a080:	68db      	ldr	r3, [r3, #12]
 800a082:	6023      	str	r3, [r4, #0]
 800a084:	6032      	str	r2, [r6, #0]
        traceTASK_SWITCHED_IN();
 800a086:	6820      	ldr	r0, [r4, #0]
}
 800a088:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        traceTASK_SWITCHED_IN();
 800a08c:	f7ff bf82 	b.w	8009f94 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a090:	b912      	cbnz	r2, 800a098 <vTaskSwitchContext+0x64>
 800a092:	f7fe ffe7 	bl	8009064 <ulSetInterruptMask>
 800a096:	e7fe      	b.n	800a096 <vTaskSwitchContext+0x62>
 800a098:	3a01      	subs	r2, #1
 800a09a:	e7dd      	b.n	800a058 <vTaskSwitchContext+0x24>
 800a09c:	2006f034 	.word	0x2006f034
 800a0a0:	2006f044 	.word	0x2006f044
 800a0a4:	2006f52c 	.word	0x2006f52c
 800a0a8:	2006f050 	.word	0x2006f050
 800a0ac:	2006f0cc 	.word	0x2006f0cc

0800a0b0 <vTaskPlaceOnEventList>:
{
 800a0b0:	b510      	push	{r4, lr}
 800a0b2:	460c      	mov	r4, r1
    configASSERT( pxEventList );
 800a0b4:	b910      	cbnz	r0, 800a0bc <vTaskPlaceOnEventList+0xc>
 800a0b6:	f7fe ffd5 	bl	8009064 <ulSetInterruptMask>
 800a0ba:	e7fe      	b.n	800a0ba <vTaskPlaceOnEventList+0xa>
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0bc:	4b05      	ldr	r3, [pc, #20]	@ (800a0d4 <vTaskPlaceOnEventList+0x24>)
 800a0be:	6819      	ldr	r1, [r3, #0]
 800a0c0:	3118      	adds	r1, #24
 800a0c2:	f7fe fe99 	bl	8008df8 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a0c6:	4620      	mov	r0, r4
}
 800a0c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a0cc:	2101      	movs	r1, #1
 800a0ce:	f7ff bcb5 	b.w	8009a3c <prvAddCurrentTaskToDelayedList>
 800a0d2:	bf00      	nop
 800a0d4:	2006f52c 	.word	0x2006f52c

0800a0d8 <vTaskPlaceOnEventListRestricted>:
    {
 800a0d8:	b570      	push	{r4, r5, r6, lr}
 800a0da:	460c      	mov	r4, r1
 800a0dc:	4611      	mov	r1, r2
        configASSERT( pxEventList );
 800a0de:	b910      	cbnz	r0, 800a0e6 <vTaskPlaceOnEventListRestricted+0xe>
 800a0e0:	f7fe ffc0 	bl	8009064 <ulSetInterruptMask>
 800a0e4:	e7fe      	b.n	800a0e4 <vTaskPlaceOnEventListRestricted+0xc>
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0e6:	4b0f      	ldr	r3, [pc, #60]	@ (800a124 <vTaskPlaceOnEventListRestricted+0x4c>)
 800a0e8:	6842      	ldr	r2, [r0, #4]
 800a0ea:	681d      	ldr	r5, [r3, #0]
 800a0ec:	6896      	ldr	r6, [r2, #8]
 800a0ee:	61ea      	str	r2, [r5, #28]
 800a0f0:	681d      	ldr	r5, [r3, #0]
            xTicksToWait = portMAX_DELAY;
 800a0f2:	2900      	cmp	r1, #0
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0f4:	622e      	str	r6, [r5, #32]
 800a0f6:	681d      	ldr	r5, [r3, #0]
 800a0f8:	f105 0518 	add.w	r5, r5, #24
 800a0fc:	6075      	str	r5, [r6, #4]
 800a0fe:	681d      	ldr	r5, [r3, #0]
 800a100:	681b      	ldr	r3, [r3, #0]
 800a102:	f105 0518 	add.w	r5, r5, #24
 800a106:	6095      	str	r5, [r2, #8]
 800a108:	6298      	str	r0, [r3, #40]	@ 0x28
 800a10a:	6803      	ldr	r3, [r0, #0]
 800a10c:	f103 0301 	add.w	r3, r3, #1
 800a110:	6003      	str	r3, [r0, #0]
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a112:	bf08      	it	eq
 800a114:	4620      	moveq	r0, r4
    }
 800a116:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a11a:	bf18      	it	ne
 800a11c:	f04f 30ff 	movne.w	r0, #4294967295
 800a120:	f7ff bc8c 	b.w	8009a3c <prvAddCurrentTaskToDelayedList>
 800a124:	2006f52c 	.word	0x2006f52c

0800a128 <xTaskRemoveFromEventList>:
{
 800a128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a12a:	68c3      	ldr	r3, [r0, #12]
 800a12c:	68db      	ldr	r3, [r3, #12]
    configASSERT( pxUnblockedTCB );
 800a12e:	b913      	cbnz	r3, 800a136 <xTaskRemoveFromEventList+0xe>
 800a130:	f7fe ff98 	bl	8009064 <ulSetInterruptMask>
 800a134:	e7fe      	b.n	800a134 <xTaskRemoveFromEventList+0xc>
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800a136:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a138:	e9d3 0107 	ldrd	r0, r1, [r3, #28]
 800a13c:	6081      	str	r1, [r0, #8]
 800a13e:	6048      	str	r0, [r1, #4]
 800a140:	6850      	ldr	r0, [r2, #4]
 800a142:	f103 0418 	add.w	r4, r3, #24
 800a146:	42a0      	cmp	r0, r4
 800a148:	bf08      	it	eq
 800a14a:	6051      	streq	r1, [r2, #4]
 800a14c:	2100      	movs	r1, #0
 800a14e:	6299      	str	r1, [r3, #40]	@ 0x28
 800a150:	6811      	ldr	r1, [r2, #0]
 800a152:	3901      	subs	r1, #1
 800a154:	6011      	str	r1, [r2, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a156:	4a1d      	ldr	r2, [pc, #116]	@ (800a1cc <xTaskRemoveFromEventList+0xa4>)
 800a158:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a15a:	6812      	ldr	r2, [r2, #0]
 800a15c:	2a00      	cmp	r2, #0
 800a15e:	d129      	bne.n	800a1b4 <xTaskRemoveFromEventList+0x8c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 800a160:	e9d3 4002 	ldrd	r4, r0, [r3, #8]
 800a164:	695a      	ldr	r2, [r3, #20]
 800a166:	60a0      	str	r0, [r4, #8]
 800a168:	6044      	str	r4, [r0, #4]
 800a16a:	6854      	ldr	r4, [r2, #4]
 800a16c:	1d1d      	adds	r5, r3, #4
 800a16e:	42ac      	cmp	r4, r5
 800a170:	bf08      	it	eq
 800a172:	6050      	streq	r0, [r2, #4]
 800a174:	6810      	ldr	r0, [r2, #0]
 800a176:	3801      	subs	r0, #1
 800a178:	6010      	str	r0, [r2, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 800a17a:	4a15      	ldr	r2, [pc, #84]	@ (800a1d0 <xTaskRemoveFromEventList+0xa8>)
 800a17c:	6810      	ldr	r0, [r2, #0]
 800a17e:	4281      	cmp	r1, r0
 800a180:	bf88      	it	hi
 800a182:	6011      	strhi	r1, [r2, #0]
 800a184:	2214      	movs	r2, #20
 800a186:	434a      	muls	r2, r1
 800a188:	4812      	ldr	r0, [pc, #72]	@ (800a1d4 <xTaskRemoveFromEventList+0xac>)
 800a18a:	1886      	adds	r6, r0, r2
 800a18c:	6874      	ldr	r4, [r6, #4]
 800a18e:	68a7      	ldr	r7, [r4, #8]
 800a190:	609c      	str	r4, [r3, #8]
 800a192:	60df      	str	r7, [r3, #12]
 800a194:	607d      	str	r5, [r7, #4]
 800a196:	60a5      	str	r5, [r4, #8]
 800a198:	615e      	str	r6, [r3, #20]
 800a19a:	5883      	ldr	r3, [r0, r2]
 800a19c:	3301      	adds	r3, #1
 800a19e:	5083      	str	r3, [r0, r2]
    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a1a0:	4b0d      	ldr	r3, [pc, #52]	@ (800a1d8 <xTaskRemoveFromEventList+0xb0>)
 800a1a2:	681b      	ldr	r3, [r3, #0]
 800a1a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a1a6:	4299      	cmp	r1, r3
        xYieldPending = pdTRUE;
 800a1a8:	bf85      	ittet	hi
 800a1aa:	2001      	movhi	r0, #1
 800a1ac:	4b0b      	ldrhi	r3, [pc, #44]	@ (800a1dc <xTaskRemoveFromEventList+0xb4>)
        xReturn = pdFALSE;
 800a1ae:	2000      	movls	r0, #0
        xYieldPending = pdTRUE;
 800a1b0:	6018      	strhi	r0, [r3, #0]
}
 800a1b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a1b4:	4a0a      	ldr	r2, [pc, #40]	@ (800a1e0 <xTaskRemoveFromEventList+0xb8>)
 800a1b6:	6850      	ldr	r0, [r2, #4]
 800a1b8:	6885      	ldr	r5, [r0, #8]
 800a1ba:	61d8      	str	r0, [r3, #28]
 800a1bc:	621d      	str	r5, [r3, #32]
 800a1be:	606c      	str	r4, [r5, #4]
 800a1c0:	6084      	str	r4, [r0, #8]
 800a1c2:	629a      	str	r2, [r3, #40]	@ 0x28
 800a1c4:	6813      	ldr	r3, [r2, #0]
 800a1c6:	3301      	adds	r3, #1
 800a1c8:	6013      	str	r3, [r2, #0]
 800a1ca:	e7e9      	b.n	800a1a0 <xTaskRemoveFromEventList+0x78>
 800a1cc:	2006f034 	.word	0x2006f034
 800a1d0:	2006f050 	.word	0x2006f050
 800a1d4:	2006f0cc 	.word	0x2006f0cc
 800a1d8:	2006f52c 	.word	0x2006f52c
 800a1dc:	2006f044 	.word	0x2006f044
 800a1e0:	2006f088 	.word	0x2006f088

0800a1e4 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a1e4:	4b03      	ldr	r3, [pc, #12]	@ (800a1f4 <vTaskInternalSetTimeOutState+0x10>)
 800a1e6:	681b      	ldr	r3, [r3, #0]
 800a1e8:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 800a1ea:	4b03      	ldr	r3, [pc, #12]	@ (800a1f8 <vTaskInternalSetTimeOutState+0x14>)
 800a1ec:	681b      	ldr	r3, [r3, #0]
 800a1ee:	6043      	str	r3, [r0, #4]
}
 800a1f0:	4770      	bx	lr
 800a1f2:	bf00      	nop
 800a1f4:	2006f040 	.word	0x2006f040
 800a1f8:	2006f054 	.word	0x2006f054

0800a1fc <xTaskCheckForTimeOut>:
{
 800a1fc:	b570      	push	{r4, r5, r6, lr}
 800a1fe:	460d      	mov	r5, r1
    configASSERT( pxTimeOut );
 800a200:	4604      	mov	r4, r0
 800a202:	b910      	cbnz	r0, 800a20a <xTaskCheckForTimeOut+0xe>
 800a204:	f7fe ff2e 	bl	8009064 <ulSetInterruptMask>
 800a208:	e7fe      	b.n	800a208 <xTaskCheckForTimeOut+0xc>
    configASSERT( pxTicksToWait );
 800a20a:	b911      	cbnz	r1, 800a212 <xTaskCheckForTimeOut+0x16>
 800a20c:	f7fe ff2a 	bl	8009064 <ulSetInterruptMask>
 800a210:	e7fe      	b.n	800a210 <xTaskCheckForTimeOut+0x14>
    taskENTER_CRITICAL();
 800a212:	f7fe fe4b 	bl	8008eac <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 800a216:	4b0f      	ldr	r3, [pc, #60]	@ (800a254 <xTaskCheckForTimeOut+0x58>)
 800a218:	6819      	ldr	r1, [r3, #0]
            if( *pxTicksToWait == portMAX_DELAY )
 800a21a:	682b      	ldr	r3, [r5, #0]
 800a21c:	1c5a      	adds	r2, r3, #1
 800a21e:	d017      	beq.n	800a250 <xTaskCheckForTimeOut+0x54>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a220:	480d      	ldr	r0, [pc, #52]	@ (800a258 <xTaskCheckForTimeOut+0x5c>)
 800a222:	6826      	ldr	r6, [r4, #0]
 800a224:	6800      	ldr	r0, [r0, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a226:	6862      	ldr	r2, [r4, #4]
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a228:	4286      	cmp	r6, r0
 800a22a:	d008      	beq.n	800a23e <xTaskCheckForTimeOut+0x42>
 800a22c:	428a      	cmp	r2, r1
 800a22e:	d806      	bhi.n	800a23e <xTaskCheckForTimeOut+0x42>
            *pxTicksToWait = ( TickType_t ) 0;
 800a230:	2300      	movs	r3, #0
            xReturn = pdTRUE;
 800a232:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 800a234:	602b      	str	r3, [r5, #0]
    taskEXIT_CRITICAL();
 800a236:	f7fe fe47 	bl	8008ec8 <vPortExitCritical>
}
 800a23a:	4620      	mov	r0, r4
 800a23c:	bd70      	pop	{r4, r5, r6, pc}
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a23e:	1a88      	subs	r0, r1, r2
        else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a240:	4283      	cmp	r3, r0
 800a242:	d9f5      	bls.n	800a230 <xTaskCheckForTimeOut+0x34>
            *pxTicksToWait -= xElapsedTime;
 800a244:	1a5b      	subs	r3, r3, r1
 800a246:	4413      	add	r3, r2
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a248:	4620      	mov	r0, r4
            *pxTicksToWait -= xElapsedTime;
 800a24a:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a24c:	f7ff ffca 	bl	800a1e4 <vTaskInternalSetTimeOutState>
                xReturn = pdFALSE;
 800a250:	2400      	movs	r4, #0
 800a252:	e7f0      	b.n	800a236 <xTaskCheckForTimeOut+0x3a>
 800a254:	2006f054 	.word	0x2006f054
 800a258:	2006f040 	.word	0x2006f040

0800a25c <vTaskMissedYield>:
    xYieldPending = pdTRUE;
 800a25c:	2201      	movs	r2, #1
 800a25e:	4b01      	ldr	r3, [pc, #4]	@ (800a264 <vTaskMissedYield+0x8>)
 800a260:	601a      	str	r2, [r3, #0]
}
 800a262:	4770      	bx	lr
 800a264:	2006f044 	.word	0x2006f044

0800a268 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 800a268:	4b05      	ldr	r3, [pc, #20]	@ (800a280 <xTaskGetSchedulerState+0x18>)
 800a26a:	681b      	ldr	r3, [r3, #0]
 800a26c:	b133      	cbz	r3, 800a27c <xTaskGetSchedulerState+0x14>
            if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a26e:	4b05      	ldr	r3, [pc, #20]	@ (800a284 <xTaskGetSchedulerState+0x1c>)
 800a270:	6818      	ldr	r0, [r3, #0]
 800a272:	fab0 f080 	clz	r0, r0
 800a276:	0940      	lsrs	r0, r0, #5
 800a278:	0040      	lsls	r0, r0, #1
 800a27a:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 800a27c:	2001      	movs	r0, #1
    }
 800a27e:	4770      	bx	lr
 800a280:	2006f04c 	.word	0x2006f04c
 800a284:	2006f034 	.word	0x2006f034

0800a288 <xTaskPriorityInherit>:
    {
 800a288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if( pxMutexHolder != NULL )
 800a28a:	4604      	mov	r4, r0
 800a28c:	2800      	cmp	r0, #0
 800a28e:	d02e      	beq.n	800a2ee <xTaskPriorityInherit+0x66>
            if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a290:	4d1d      	ldr	r5, [pc, #116]	@ (800a308 <xTaskPriorityInherit+0x80>)
 800a292:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a294:	682a      	ldr	r2, [r5, #0]
 800a296:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a298:	4293      	cmp	r3, r2
 800a29a:	d22d      	bcs.n	800a2f8 <xTaskPriorityInherit+0x70>
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a29c:	6982      	ldr	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a29e:	4e1b      	ldr	r6, [pc, #108]	@ (800a30c <xTaskPriorityInherit+0x84>)
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2a0:	2a00      	cmp	r2, #0
                    listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2a2:	bfa1      	itttt	ge
 800a2a4:	682a      	ldrge	r2, [r5, #0]
 800a2a6:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a2a8:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a2ac:	6182      	strge	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a2ae:	2214      	movs	r2, #20
 800a2b0:	fb02 6303 	mla	r3, r2, r3, r6
 800a2b4:	6942      	ldr	r2, [r0, #20]
 800a2b6:	429a      	cmp	r2, r3
 800a2b8:	d11a      	bne.n	800a2f0 <xTaskPriorityInherit+0x68>
                    if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2ba:	1d07      	adds	r7, r0, #4
 800a2bc:	4638      	mov	r0, r7
 800a2be:	f7fe fdb2 	bl	8008e26 <uxListRemove>
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2c2:	682b      	ldr	r3, [r5, #0]
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a2c4:	4a12      	ldr	r2, [pc, #72]	@ (800a310 <xTaskPriorityInherit+0x88>)
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a2c8:	6811      	ldr	r1, [r2, #0]
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2ca:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a2cc:	428b      	cmp	r3, r1
 800a2ce:	bf88      	it	hi
 800a2d0:	6013      	strhi	r3, [r2, #0]
 800a2d2:	2214      	movs	r2, #20
 800a2d4:	4353      	muls	r3, r2
 800a2d6:	18f1      	adds	r1, r6, r3
 800a2d8:	684a      	ldr	r2, [r1, #4]
 800a2da:	6890      	ldr	r0, [r2, #8]
 800a2dc:	60a2      	str	r2, [r4, #8]
 800a2de:	60e0      	str	r0, [r4, #12]
 800a2e0:	6047      	str	r7, [r0, #4]
 800a2e2:	6097      	str	r7, [r2, #8]
 800a2e4:	58f2      	ldr	r2, [r6, r3]
 800a2e6:	6161      	str	r1, [r4, #20]
 800a2e8:	3201      	adds	r2, #1
 800a2ea:	50f2      	str	r2, [r6, r3]
                xReturn = pdTRUE;
 800a2ec:	2001      	movs	r0, #1
    }
 800a2ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2f0:	682b      	ldr	r3, [r5, #0]
 800a2f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2f4:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a2f6:	e7f9      	b.n	800a2ec <xTaskPriorityInherit+0x64>
                if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a2f8:	682b      	ldr	r3, [r5, #0]
 800a2fa:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a2fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2fe:	4298      	cmp	r0, r3
 800a300:	bf2c      	ite	cs
 800a302:	2000      	movcs	r0, #0
 800a304:	2001      	movcc	r0, #1
 800a306:	e7f2      	b.n	800a2ee <xTaskPriorityInherit+0x66>
 800a308:	2006f52c 	.word	0x2006f52c
 800a30c:	2006f0cc 	.word	0x2006f0cc
 800a310:	2006f050 	.word	0x2006f050

0800a314 <xTaskPriorityDisinherit>:
    {
 800a314:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a316:	4604      	mov	r4, r0
 800a318:	b908      	cbnz	r0, 800a31e <xTaskPriorityDisinherit+0xa>
        BaseType_t xReturn = pdFALSE;
 800a31a:	2000      	movs	r0, #0
    }
 800a31c:	bd70      	pop	{r4, r5, r6, pc}
            configASSERT( pxTCB == pxCurrentTCB );
 800a31e:	4b19      	ldr	r3, [pc, #100]	@ (800a384 <xTaskPriorityDisinherit+0x70>)
 800a320:	681b      	ldr	r3, [r3, #0]
 800a322:	4283      	cmp	r3, r0
 800a324:	d002      	beq.n	800a32c <xTaskPriorityDisinherit+0x18>
 800a326:	f7fe fe9d 	bl	8009064 <ulSetInterruptMask>
 800a32a:	e7fe      	b.n	800a32a <xTaskPriorityDisinherit+0x16>
            configASSERT( pxTCB->uxMutexesHeld );
 800a32c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a32e:	b913      	cbnz	r3, 800a336 <xTaskPriorityDisinherit+0x22>
 800a330:	f7fe fe98 	bl	8009064 <ulSetInterruptMask>
 800a334:	e7fe      	b.n	800a334 <xTaskPriorityDisinherit+0x20>
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a336:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a338:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
            ( pxTCB->uxMutexesHeld )--;
 800a33a:	3b01      	subs	r3, #1
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a33c:	4291      	cmp	r1, r2
            ( pxTCB->uxMutexesHeld )--;
 800a33e:	6503      	str	r3, [r0, #80]	@ 0x50
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a340:	d0eb      	beq.n	800a31a <xTaskPriorityDisinherit+0x6>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a342:	2b00      	cmp	r3, #0
 800a344:	d1e9      	bne.n	800a31a <xTaskPriorityDisinherit+0x6>
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a346:	1d05      	adds	r5, r0, #4
 800a348:	4628      	mov	r0, r5
 800a34a:	f7fe fd6c 	bl	8008e26 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a34e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a350:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a354:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 800a356:	4a0c      	ldr	r2, [pc, #48]	@ (800a388 <xTaskPriorityDisinherit+0x74>)
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a358:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxTCB );
 800a35a:	6811      	ldr	r1, [r2, #0]
 800a35c:	428b      	cmp	r3, r1
 800a35e:	f04f 0114 	mov.w	r1, #20
 800a362:	bf88      	it	hi
 800a364:	6013      	strhi	r3, [r2, #0]
 800a366:	434b      	muls	r3, r1
 800a368:	4a08      	ldr	r2, [pc, #32]	@ (800a38c <xTaskPriorityDisinherit+0x78>)
 800a36a:	18d0      	adds	r0, r2, r3
 800a36c:	6841      	ldr	r1, [r0, #4]
 800a36e:	688e      	ldr	r6, [r1, #8]
 800a370:	60a1      	str	r1, [r4, #8]
 800a372:	60e6      	str	r6, [r4, #12]
 800a374:	6075      	str	r5, [r6, #4]
 800a376:	608d      	str	r5, [r1, #8]
 800a378:	58d1      	ldr	r1, [r2, r3]
 800a37a:	6160      	str	r0, [r4, #20]
 800a37c:	3101      	adds	r1, #1
                    xReturn = pdTRUE;
 800a37e:	2001      	movs	r0, #1
                    prvAddTaskToReadyList( pxTCB );
 800a380:	50d1      	str	r1, [r2, r3]
        return xReturn;
 800a382:	e7cb      	b.n	800a31c <xTaskPriorityDisinherit+0x8>
 800a384:	2006f52c 	.word	0x2006f52c
 800a388:	2006f050 	.word	0x2006f050
 800a38c:	2006f0cc 	.word	0x2006f0cc

0800a390 <vTaskPriorityDisinheritAfterTimeout>:
    {
 800a390:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a392:	4604      	mov	r4, r0
 800a394:	2800      	cmp	r0, #0
 800a396:	d03a      	beq.n	800a40e <vTaskPriorityDisinheritAfterTimeout+0x7e>
            configASSERT( pxTCB->uxMutexesHeld );
 800a398:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a39a:	b912      	cbnz	r2, 800a3a2 <vTaskPriorityDisinheritAfterTimeout+0x12>
 800a39c:	f7fe fe62 	bl	8009064 <ulSetInterruptMask>
 800a3a0:	e7fe      	b.n	800a3a0 <vTaskPriorityDisinheritAfterTimeout+0x10>
            if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a3a2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a3a4:	4299      	cmp	r1, r3
 800a3a6:	bf38      	it	cc
 800a3a8:	4619      	movcc	r1, r3
            if( pxTCB->uxPriority != uxPriorityToUse )
 800a3aa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a3ac:	428b      	cmp	r3, r1
 800a3ae:	d02e      	beq.n	800a40e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a3b0:	2a01      	cmp	r2, #1
 800a3b2:	d12c      	bne.n	800a40e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                    configASSERT( pxTCB != pxCurrentTCB );
 800a3b4:	4a16      	ldr	r2, [pc, #88]	@ (800a410 <vTaskPriorityDisinheritAfterTimeout+0x80>)
 800a3b6:	6812      	ldr	r2, [r2, #0]
 800a3b8:	4282      	cmp	r2, r0
 800a3ba:	d102      	bne.n	800a3c2 <vTaskPriorityDisinheritAfterTimeout+0x32>
 800a3bc:	f7fe fe52 	bl	8009064 <ulSetInterruptMask>
 800a3c0:	e7fe      	b.n	800a3c0 <vTaskPriorityDisinheritAfterTimeout+0x30>
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a3c2:	6982      	ldr	r2, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3c4:	4d13      	ldr	r5, [pc, #76]	@ (800a414 <vTaskPriorityDisinheritAfterTimeout+0x84>)
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a3c6:	2a00      	cmp	r2, #0
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3c8:	f04f 0214 	mov.w	r2, #20
 800a3cc:	fb02 5303 	mla	r3, r2, r3, r5
 800a3d0:	6942      	ldr	r2, [r0, #20]
                    pxTCB->uxPriority = uxPriorityToUse;
 800a3d2:	62c1      	str	r1, [r0, #44]	@ 0x2c
                        listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3d4:	bfa4      	itt	ge
 800a3d6:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a3da:	6181      	strge	r1, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3dc:	429a      	cmp	r2, r3
 800a3de:	d116      	bne.n	800a40e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                        if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a3e0:	1d06      	adds	r6, r0, #4
 800a3e2:	4630      	mov	r0, r6
 800a3e4:	f7fe fd1f 	bl	8008e26 <uxListRemove>
                        prvAddTaskToReadyList( pxTCB );
 800a3e8:	4a0b      	ldr	r2, [pc, #44]	@ (800a418 <vTaskPriorityDisinheritAfterTimeout+0x88>)
 800a3ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a3ec:	6811      	ldr	r1, [r2, #0]
 800a3ee:	428b      	cmp	r3, r1
 800a3f0:	bf88      	it	hi
 800a3f2:	6013      	strhi	r3, [r2, #0]
 800a3f4:	2214      	movs	r2, #20
 800a3f6:	4353      	muls	r3, r2
 800a3f8:	18e9      	adds	r1, r5, r3
 800a3fa:	684a      	ldr	r2, [r1, #4]
 800a3fc:	6890      	ldr	r0, [r2, #8]
 800a3fe:	60a2      	str	r2, [r4, #8]
 800a400:	60e0      	str	r0, [r4, #12]
 800a402:	6046      	str	r6, [r0, #4]
 800a404:	6096      	str	r6, [r2, #8]
 800a406:	58ea      	ldr	r2, [r5, r3]
 800a408:	6161      	str	r1, [r4, #20]
 800a40a:	3201      	adds	r2, #1
 800a40c:	50ea      	str	r2, [r5, r3]
    }
 800a40e:	bd70      	pop	{r4, r5, r6, pc}
 800a410:	2006f52c 	.word	0x2006f52c
 800a414:	2006f0cc 	.word	0x2006f0cc
 800a418:	2006f050 	.word	0x2006f050

0800a41c <pvTaskIncrementMutexHeldCount>:
        if( pxCurrentTCB != NULL )
 800a41c:	4b04      	ldr	r3, [pc, #16]	@ (800a430 <pvTaskIncrementMutexHeldCount+0x14>)
 800a41e:	681a      	ldr	r2, [r3, #0]
 800a420:	b11a      	cbz	r2, 800a42a <pvTaskIncrementMutexHeldCount+0xe>
            ( pxCurrentTCB->uxMutexesHeld )++;
 800a422:	6819      	ldr	r1, [r3, #0]
 800a424:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a426:	3201      	adds	r2, #1
 800a428:	650a      	str	r2, [r1, #80]	@ 0x50
        return pxCurrentTCB;
 800a42a:	6818      	ldr	r0, [r3, #0]
    }
 800a42c:	4770      	bx	lr
 800a42e:	bf00      	nop
 800a430:	2006f52c 	.word	0x2006f52c

0800a434 <prvInsertTimerInActiveList>:
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

        if( xNextExpiryTime <= xTimeNow )
 800a434:	4291      	cmp	r1, r2
    {
 800a436:	b508      	push	{r3, lr}
        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a438:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a43a:	6100      	str	r0, [r0, #16]
        if( xNextExpiryTime <= xTimeNow )
 800a43c:	d80a      	bhi.n	800a454 <prvInsertTimerInActiveList+0x20>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a43e:	1ad2      	subs	r2, r2, r3
 800a440:	6983      	ldr	r3, [r0, #24]
 800a442:	429a      	cmp	r2, r3
 800a444:	d20d      	bcs.n	800a462 <prvInsertTimerInActiveList+0x2e>
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a446:	4b08      	ldr	r3, [pc, #32]	@ (800a468 <prvInsertTimerInActiveList+0x34>)
 800a448:	1d01      	adds	r1, r0, #4
                 * its expiry time and should be processed immediately. */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a44a:	6818      	ldr	r0, [r3, #0]
 800a44c:	f7fe fcd4 	bl	8008df8 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 800a450:	2000      	movs	r0, #0
            }
        }

        return xProcessTimerNow;
    }
 800a452:	bd08      	pop	{r3, pc}
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a454:	429a      	cmp	r2, r3
 800a456:	d201      	bcs.n	800a45c <prvInsertTimerInActiveList+0x28>
 800a458:	4299      	cmp	r1, r3
 800a45a:	d202      	bcs.n	800a462 <prvInsertTimerInActiveList+0x2e>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a45c:	4b03      	ldr	r3, [pc, #12]	@ (800a46c <prvInsertTimerInActiveList+0x38>)
 800a45e:	1d01      	adds	r1, r0, #4
 800a460:	e7f3      	b.n	800a44a <prvInsertTimerInActiveList+0x16>
                xProcessTimerNow = pdTRUE;
 800a462:	2001      	movs	r0, #1
        return xProcessTimerNow;
 800a464:	e7f5      	b.n	800a452 <prvInsertTimerInActiveList+0x1e>
 800a466:	bf00      	nop
 800a468:	2006f62c 	.word	0x2006f62c
 800a46c:	2006f630 	.word	0x2006f630

0800a470 <prvReloadTimer>:
    {
 800a470:	b570      	push	{r4, r5, r6, lr}
 800a472:	4604      	mov	r4, r0
 800a474:	460d      	mov	r5, r1
 800a476:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 800a478:	69a1      	ldr	r1, [r4, #24]
 800a47a:	462b      	mov	r3, r5
 800a47c:	4632      	mov	r2, r6
 800a47e:	4620      	mov	r0, r4
 800a480:	4429      	add	r1, r5
 800a482:	f7ff ffd7 	bl	800a434 <prvInsertTimerInActiveList>
 800a486:	b900      	cbnz	r0, 800a48a <prvReloadTimer+0x1a>
    }
 800a488:	bd70      	pop	{r4, r5, r6, pc}
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a48a:	69a3      	ldr	r3, [r4, #24]
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a48c:	4620      	mov	r0, r4
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a48e:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a490:	6a23      	ldr	r3, [r4, #32]
 800a492:	4798      	blx	r3
 800a494:	e7f0      	b.n	800a478 <prvReloadTimer+0x8>
	...

0800a498 <prvProcessExpiredTimer>:
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a498:	4b0e      	ldr	r3, [pc, #56]	@ (800a4d4 <prvProcessExpiredTimer+0x3c>)
    {
 800a49a:	b570      	push	{r4, r5, r6, lr}
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a49c:	681b      	ldr	r3, [r3, #0]
    {
 800a49e:	4605      	mov	r5, r0
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4a0:	68db      	ldr	r3, [r3, #12]
    {
 800a4a2:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4a4:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a4a6:	1d20      	adds	r0, r4, #4
 800a4a8:	f7fe fcbd 	bl	8008e26 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a4ac:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a4b0:	075a      	lsls	r2, r3, #29
 800a4b2:	d509      	bpl.n	800a4c8 <prvProcessExpiredTimer+0x30>
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 800a4b4:	4632      	mov	r2, r6
 800a4b6:	4629      	mov	r1, r5
 800a4b8:	4620      	mov	r0, r4
 800a4ba:	f7ff ffd9 	bl	800a470 <prvReloadTimer>
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a4be:	4620      	mov	r0, r4
 800a4c0:	6a23      	ldr	r3, [r4, #32]
    }
 800a4c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a4c6:	4718      	bx	r3
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a4c8:	f023 0301 	bic.w	r3, r3, #1
 800a4cc:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a4d0:	e7f5      	b.n	800a4be <prvProcessExpiredTimer+0x26>
 800a4d2:	bf00      	nop
 800a4d4:	2006f630 	.word	0x2006f630

0800a4d8 <prvSampleTimeNow>:
    {
 800a4d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a4da:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 800a4dc:	f7ff fbee 	bl	8009cbc <xTaskGetTickCount>
        if( xTimeNow < xLastTime )
 800a4e0:	4e0d      	ldr	r6, [pc, #52]	@ (800a518 <prvSampleTimeNow+0x40>)
        xTimeNow = xTaskGetTickCount();
 800a4e2:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 800a4e4:	6833      	ldr	r3, [r6, #0]
 800a4e6:	4283      	cmp	r3, r0
 800a4e8:	d909      	bls.n	800a4fe <prvSampleTimeNow+0x26>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a4ea:	4f0c      	ldr	r7, [pc, #48]	@ (800a51c <prvSampleTimeNow+0x44>)
 800a4ec:	683b      	ldr	r3, [r7, #0]
 800a4ee:	681a      	ldr	r2, [r3, #0]
 800a4f0:	b952      	cbnz	r2, 800a508 <prvSampleTimeNow+0x30>
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 800a4f2:	4a0b      	ldr	r2, [pc, #44]	@ (800a520 <prvSampleTimeNow+0x48>)
 800a4f4:	6811      	ldr	r1, [r2, #0]
        pxOverflowTimerList = pxTemp;
 800a4f6:	6013      	str	r3, [r2, #0]
        pxCurrentTimerList = pxOverflowTimerList;
 800a4f8:	6039      	str	r1, [r7, #0]
            *pxTimerListsWereSwitched = pdTRUE;
 800a4fa:	2301      	movs	r3, #1
 800a4fc:	e000      	b.n	800a500 <prvSampleTimeNow+0x28>
 800a4fe:	2300      	movs	r3, #0
    }
 800a500:	4620      	mov	r0, r4
            *pxTimerListsWereSwitched = pdTRUE;
 800a502:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 800a504:	6034      	str	r4, [r6, #0]
    }
 800a506:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a508:	68db      	ldr	r3, [r3, #12]
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 800a50a:	f04f 31ff 	mov.w	r1, #4294967295
 800a50e:	6818      	ldr	r0, [r3, #0]
 800a510:	f7ff ffc2 	bl	800a498 <prvProcessExpiredTimer>
 800a514:	e7ea      	b.n	800a4ec <prvSampleTimeNow+0x14>
 800a516:	bf00      	nop
 800a518:	2006f620 	.word	0x2006f620
 800a51c:	2006f630 	.word	0x2006f630
 800a520:	2006f62c 	.word	0x2006f62c

0800a524 <prvTimerTask>:
    {
 800a524:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a528:	4f51      	ldr	r7, [pc, #324]	@ (800a670 <prvTimerTask+0x14c>)
 800a52a:	4e52      	ldr	r6, [pc, #328]	@ (800a674 <prvTimerTask+0x150>)
    {
 800a52c:	b086      	sub	sp, #24
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a52e:	683b      	ldr	r3, [r7, #0]
 800a530:	f8d3 8000 	ldr.w	r8, [r3]
 800a534:	f1b8 0f00 	cmp.w	r8, #0
 800a538:	d032      	beq.n	800a5a0 <prvTimerTask+0x7c>
 800a53a:	2400      	movs	r4, #0
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a53c:	68db      	ldr	r3, [r3, #12]
 800a53e:	f8d3 8000 	ldr.w	r8, [r3]
        vTaskSuspendAll();
 800a542:	f7ff fbb3 	bl	8009cac <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a546:	a802      	add	r0, sp, #8
 800a548:	f7ff ffc6 	bl	800a4d8 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 800a54c:	9b02      	ldr	r3, [sp, #8]
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a54e:	4605      	mov	r5, r0
            if( xTimerListsWereSwitched == pdFALSE )
 800a550:	2b00      	cmp	r3, #0
 800a552:	d13a      	bne.n	800a5ca <prvTimerTask+0xa6>
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a554:	bb34      	cbnz	r4, 800a5a4 <prvTimerTask+0x80>
 800a556:	4540      	cmp	r0, r8
 800a558:	d32a      	bcc.n	800a5b0 <prvTimerTask+0x8c>
                    ( void ) xTaskResumeAll();
 800a55a:	f7ff fc65 	bl	8009e28 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800a55e:	4629      	mov	r1, r5
 800a560:	4640      	mov	r0, r8
 800a562:	f7ff ff99 	bl	800a498 <prvProcessExpiredTimer>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a566:	2200      	movs	r2, #0
 800a568:	6830      	ldr	r0, [r6, #0]
 800a56a:	a902      	add	r1, sp, #8
 800a56c:	f7ff f825 	bl	80095ba <xQueueReceive>
 800a570:	2800      	cmp	r0, #0
 800a572:	d0dc      	beq.n	800a52e <prvTimerTask+0xa>
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a574:	9b02      	ldr	r3, [sp, #8]
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a576:	9804      	ldr	r0, [sp, #16]
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a578:	2b00      	cmp	r3, #0
 800a57a:	db29      	blt.n	800a5d0 <prvTimerTask+0xac>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a57c:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a57e:	6963      	ldr	r3, [r4, #20]
 800a580:	bb6b      	cbnz	r3, 800a5de <prvTimerTask+0xba>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a582:	a801      	add	r0, sp, #4
 800a584:	f7ff ffa8 	bl	800a4d8 <prvSampleTimeNow>
                switch( xMessage.xMessageID )
 800a588:	9b02      	ldr	r3, [sp, #8]
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a58a:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 800a58c:	3b01      	subs	r3, #1
 800a58e:	2b08      	cmp	r3, #8
 800a590:	d8e9      	bhi.n	800a566 <prvTimerTask+0x42>
 800a592:	e8df f003 	tbb	[pc, r3]
 800a596:	2828      	.short	0x2828
 800a598:	2865524b 	.word	0x2865524b
 800a59c:	4b28      	.short	0x4b28
 800a59e:	52          	.byte	0x52
 800a59f:	00          	.byte	0x00
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5a0:	2401      	movs	r4, #1
 800a5a2:	e7ce      	b.n	800a542 <prvTimerTask+0x1e>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a5a4:	4b34      	ldr	r3, [pc, #208]	@ (800a678 <prvTimerTask+0x154>)
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	681c      	ldr	r4, [r3, #0]
 800a5aa:	fab4 f484 	clz	r4, r4
 800a5ae:	0964      	lsrs	r4, r4, #5
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5b0:	4622      	mov	r2, r4
 800a5b2:	6830      	ldr	r0, [r6, #0]
 800a5b4:	eba8 0105 	sub.w	r1, r8, r5
 800a5b8:	f7ff f99d 	bl	80098f6 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 800a5bc:	f7ff fc34 	bl	8009e28 <xTaskResumeAll>
 800a5c0:	2800      	cmp	r0, #0
 800a5c2:	d1d0      	bne.n	800a566 <prvTimerTask+0x42>
                        portYIELD_WITHIN_API();
 800a5c4:	f7fe fc66 	bl	8008e94 <vPortYield>
 800a5c8:	e7cd      	b.n	800a566 <prvTimerTask+0x42>
                ( void ) xTaskResumeAll();
 800a5ca:	f7ff fc2d 	bl	8009e28 <xTaskResumeAll>
    }
 800a5ce:	e7ca      	b.n	800a566 <prvTimerTask+0x42>
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a5d0:	9b03      	ldr	r3, [sp, #12]
 800a5d2:	9905      	ldr	r1, [sp, #20]
 800a5d4:	4798      	blx	r3
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a5d6:	9b02      	ldr	r3, [sp, #8]
 800a5d8:	2b00      	cmp	r3, #0
 800a5da:	dbc4      	blt.n	800a566 <prvTimerTask+0x42>
 800a5dc:	e7ce      	b.n	800a57c <prvTimerTask+0x58>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a5de:	1d20      	adds	r0, r4, #4
 800a5e0:	f7fe fc21 	bl	8008e26 <uxListRemove>
 800a5e4:	e7cd      	b.n	800a582 <prvTimerTask+0x5e>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5e6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5ea:	69a1      	ldr	r1, [r4, #24]
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5ec:	f043 0301 	orr.w	r3, r3, #1
 800a5f0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5f4:	9b03      	ldr	r3, [sp, #12]
 800a5f6:	4602      	mov	r2, r0
 800a5f8:	4419      	add	r1, r3
 800a5fa:	4620      	mov	r0, r4
 800a5fc:	f7ff ff1a 	bl	800a434 <prvInsertTimerInActiveList>
 800a600:	2800      	cmp	r0, #0
 800a602:	d0b0      	beq.n	800a566 <prvTimerTask+0x42>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a604:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a608:	0759      	lsls	r1, r3, #29
 800a60a:	d50a      	bpl.n	800a622 <prvTimerTask+0xfe>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 800a60c:	69a3      	ldr	r3, [r4, #24]
 800a60e:	9903      	ldr	r1, [sp, #12]
 800a610:	462a      	mov	r2, r5
 800a612:	4620      	mov	r0, r4
 800a614:	4419      	add	r1, r3
 800a616:	f7ff ff2b 	bl	800a470 <prvReloadTimer>
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a61a:	4620      	mov	r0, r4
 800a61c:	6a23      	ldr	r3, [r4, #32]
 800a61e:	4798      	blx	r3
 800a620:	e7a1      	b.n	800a566 <prvTimerTask+0x42>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a622:	f023 0301 	bic.w	r3, r3, #1
 800a626:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a62a:	e7f6      	b.n	800a61a <prvTimerTask+0xf6>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a62c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                                    pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a630:	f023 0301 	bic.w	r3, r3, #1
 800a634:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a638:	e795      	b.n	800a566 <prvTimerTask+0x42>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a63a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a63e:	f043 0301 	orr.w	r3, r3, #1
 800a642:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a646:	9903      	ldr	r1, [sp, #12]
 800a648:	61a1      	str	r1, [r4, #24]
                        configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a64a:	b911      	cbnz	r1, 800a652 <prvTimerTask+0x12e>
 800a64c:	f7fe fd0a 	bl	8009064 <ulSetInterruptMask>
 800a650:	e7fe      	b.n	800a650 <prvTimerTask+0x12c>
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a652:	4603      	mov	r3, r0
 800a654:	4602      	mov	r2, r0
 800a656:	4401      	add	r1, r0
 800a658:	4620      	mov	r0, r4
 800a65a:	f7ff feeb 	bl	800a434 <prvInsertTimerInActiveList>
                        break;
 800a65e:	e782      	b.n	800a566 <prvTimerTask+0x42>
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a660:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a664:	079a      	lsls	r2, r3, #30
 800a666:	d4e3      	bmi.n	800a630 <prvTimerTask+0x10c>
                                    vPortFree( pxTimer );
 800a668:	4620      	mov	r0, r4
 800a66a:	f000 f91d 	bl	800a8a8 <vPortFree>
 800a66e:	e77a      	b.n	800a566 <prvTimerTask+0x42>
 800a670:	2006f630 	.word	0x2006f630
 800a674:	2006f628 	.word	0x2006f628
 800a678:	2006f62c 	.word	0x2006f62c

0800a67c <prvCheckForValidListAndQueue>:
    }
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 800a67c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
        {
            if( xTimerQueue == NULL )
 800a67e:	4c11      	ldr	r4, [pc, #68]	@ (800a6c4 <prvCheckForValidListAndQueue+0x48>)
        taskENTER_CRITICAL();
 800a680:	f7fe fc14 	bl	8008eac <vPortEnterCritical>
            if( xTimerQueue == NULL )
 800a684:	6825      	ldr	r5, [r4, #0]
 800a686:	b9bd      	cbnz	r5, 800a6b8 <prvCheckForValidListAndQueue+0x3c>
            {
                vListInitialise( &xActiveTimerList1 );
 800a688:	4f0f      	ldr	r7, [pc, #60]	@ (800a6c8 <prvCheckForValidListAndQueue+0x4c>)
                vListInitialise( &xActiveTimerList2 );
 800a68a:	4e10      	ldr	r6, [pc, #64]	@ (800a6cc <prvCheckForValidListAndQueue+0x50>)
                vListInitialise( &xActiveTimerList1 );
 800a68c:	4638      	mov	r0, r7
 800a68e:	f7fe fba5 	bl	8008ddc <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 800a692:	4630      	mov	r0, r6
 800a694:	f7fe fba2 	bl	8008ddc <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 800a698:	4b0d      	ldr	r3, [pc, #52]	@ (800a6d0 <prvCheckForValidListAndQueue+0x54>)
                        /* The timer queue is allocated statically in case
                         * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
                        PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                                                                          /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
                        PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a69a:	2110      	movs	r1, #16
                pxCurrentTimerList = &xActiveTimerList1;
 800a69c:	601f      	str	r7, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 800a69e:	4b0d      	ldr	r3, [pc, #52]	@ (800a6d4 <prvCheckForValidListAndQueue+0x58>)
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a6a0:	200a      	movs	r0, #10
                pxOverflowTimerList = &xActiveTimerList2;
 800a6a2:	601e      	str	r6, [r3, #0]
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a6a4:	4a0c      	ldr	r2, [pc, #48]	@ (800a6d8 <prvCheckForValidListAndQueue+0x5c>)
 800a6a6:	4b0d      	ldr	r3, [pc, #52]	@ (800a6dc <prvCheckForValidListAndQueue+0x60>)
 800a6a8:	9500      	str	r5, [sp, #0]
 800a6aa:	f7fe fe00 	bl	80092ae <xQueueGenericCreateStatic>
 800a6ae:	6020      	str	r0, [r4, #0]
                    }
                #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */

                #if ( configQUEUE_REGISTRY_SIZE > 0 )
                    {
                        if( xTimerQueue != NULL )
 800a6b0:	b110      	cbz	r0, 800a6b8 <prvCheckForValidListAndQueue+0x3c>
                        {
                            vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a6b2:	490b      	ldr	r1, [pc, #44]	@ (800a6e0 <prvCheckForValidListAndQueue+0x64>)
 800a6b4:	f7ff f8d0 	bl	8009858 <vQueueAddToRegistry>
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    }
 800a6b8:	b003      	add	sp, #12
 800a6ba:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        taskEXIT_CRITICAL();
 800a6be:	f7fe bc03 	b.w	8008ec8 <vPortExitCritical>
 800a6c2:	bf00      	nop
 800a6c4:	2006f628 	.word	0x2006f628
 800a6c8:	2006f648 	.word	0x2006f648
 800a6cc:	2006f634 	.word	0x2006f634
 800a6d0:	2006f630 	.word	0x2006f630
 800a6d4:	2006f62c 	.word	0x2006f62c
 800a6d8:	2006f580 	.word	0x2006f580
 800a6dc:	2006f530 	.word	0x2006f530
 800a6e0:	08035925 	.word	0x08035925

0800a6e4 <xTimerCreateTimerTask>:
    {
 800a6e4:	b510      	push	{r4, lr}
 800a6e6:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 800a6e8:	f7ff ffc8 	bl	800a67c <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 800a6ec:	4b0f      	ldr	r3, [pc, #60]	@ (800a72c <xTimerCreateTimerTask+0x48>)
 800a6ee:	681b      	ldr	r3, [r3, #0]
 800a6f0:	b1b3      	cbz	r3, 800a720 <xTimerCreateTimerTask+0x3c>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 800a6f2:	2400      	movs	r4, #0
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6f4:	aa07      	add	r2, sp, #28
 800a6f6:	a906      	add	r1, sp, #24
 800a6f8:	a805      	add	r0, sp, #20
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 800a6fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6fe:	f7fe fb61 	bl	8008dc4 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 800a702:	9b05      	ldr	r3, [sp, #20]
 800a704:	9a07      	ldr	r2, [sp, #28]
 800a706:	9302      	str	r3, [sp, #8]
 800a708:	9b06      	ldr	r3, [sp, #24]
 800a70a:	4909      	ldr	r1, [pc, #36]	@ (800a730 <xTimerCreateTimerTask+0x4c>)
 800a70c:	9301      	str	r3, [sp, #4]
 800a70e:	2302      	movs	r3, #2
 800a710:	4808      	ldr	r0, [pc, #32]	@ (800a734 <xTimerCreateTimerTask+0x50>)
 800a712:	9300      	str	r3, [sp, #0]
 800a714:	4623      	mov	r3, r4
 800a716:	f7ff fa74 	bl	8009c02 <xTaskCreateStatic>
 800a71a:	4b07      	ldr	r3, [pc, #28]	@ (800a738 <xTimerCreateTimerTask+0x54>)
 800a71c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 800a71e:	b910      	cbnz	r0, 800a726 <xTimerCreateTimerTask+0x42>
        configASSERT( xReturn );
 800a720:	f7fe fca0 	bl	8009064 <ulSetInterruptMask>
 800a724:	e7fe      	b.n	800a724 <xTimerCreateTimerTask+0x40>
    }
 800a726:	2001      	movs	r0, #1
 800a728:	b008      	add	sp, #32
 800a72a:	bd10      	pop	{r4, pc}
 800a72c:	2006f628 	.word	0x2006f628
 800a730:	0803592a 	.word	0x0803592a
 800a734:	0800a525 	.word	0x0800a525
 800a738:	2006f624 	.word	0x2006f624

0800a73c <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 800a73c:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a73e:	4b10      	ldr	r3, [pc, #64]	@ (800a780 <prvInsertBlockIntoFreeList+0x44>)
 800a740:	461a      	mov	r2, r3
 800a742:	681b      	ldr	r3, [r3, #0]
 800a744:	4283      	cmp	r3, r0
 800a746:	d3fb      	bcc.n	800a740 <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a748:	6854      	ldr	r4, [r2, #4]
 800a74a:	1911      	adds	r1, r2, r4
 800a74c:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a74e:	bf01      	itttt	eq
 800a750:	6841      	ldreq	r1, [r0, #4]
 800a752:	4610      	moveq	r0, r2
 800a754:	1909      	addeq	r1, r1, r4
 800a756:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a758:	6844      	ldr	r4, [r0, #4]
 800a75a:	1901      	adds	r1, r0, r4
 800a75c:	428b      	cmp	r3, r1
 800a75e:	d10c      	bne.n	800a77a <prvInsertBlockIntoFreeList+0x3e>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 800a760:	4908      	ldr	r1, [pc, #32]	@ (800a784 <prvInsertBlockIntoFreeList+0x48>)
 800a762:	6809      	ldr	r1, [r1, #0]
 800a764:	428b      	cmp	r3, r1
 800a766:	d003      	beq.n	800a770 <prvInsertBlockIntoFreeList+0x34>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a768:	6859      	ldr	r1, [r3, #4]
 800a76a:	4421      	add	r1, r4
 800a76c:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a76e:	6819      	ldr	r1, [r3, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 800a770:	4290      	cmp	r0, r2
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800a772:	6001      	str	r1, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a774:	bf18      	it	ne
 800a776:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 800a778:	bd10      	pop	{r4, pc}
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a77a:	4619      	mov	r1, r3
 800a77c:	e7f8      	b.n	800a770 <prvInsertBlockIntoFreeList+0x34>
 800a77e:	bf00      	nop
 800a780:	2006f674 	.word	0x2006f674
 800a784:	2006f670 	.word	0x2006f670

0800a788 <pvPortMalloc>:
{
 800a788:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a78c:	4605      	mov	r5, r0
    vTaskSuspendAll();
 800a78e:	f7ff fa8d 	bl	8009cac <vTaskSuspendAll>
        if( pxEnd == NULL )
 800a792:	493c      	ldr	r1, [pc, #240]	@ (800a884 <pvPortMalloc+0xfc>)
 800a794:	4c3c      	ldr	r4, [pc, #240]	@ (800a888 <pvPortMalloc+0x100>)
 800a796:	680b      	ldr	r3, [r1, #0]
 800a798:	b9f3      	cbnz	r3, 800a7d8 <pvPortMalloc+0x50>
    xStart.xBlockSize = ( size_t ) 0;
 800a79a:	2000      	movs	r0, #0
    uxAddress = ( size_t ) ucHeap;
 800a79c:	4a3b      	ldr	r2, [pc, #236]	@ (800a88c <pvPortMalloc+0x104>)
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a79e:	0756      	lsls	r6, r2, #29
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a7a0:	bf1d      	ittte	ne
 800a7a2:	3207      	addne	r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a7a4:	4b3a      	ldrne	r3, [pc, #232]	@ (800a890 <pvPortMalloc+0x108>)
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a7a6:	f022 0207 	bicne.w	r2, r2, #7
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a7aa:	4b3a      	ldreq	r3, [pc, #232]	@ (800a894 <pvPortMalloc+0x10c>)
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a7ac:	bf18      	it	ne
 800a7ae:	1a9b      	subne	r3, r3, r2
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a7b0:	4413      	add	r3, r2
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a7b2:	4e39      	ldr	r6, [pc, #228]	@ (800a898 <pvPortMalloc+0x110>)
    uxAddress -= xHeapStructSize;
 800a7b4:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a7b6:	f023 0307 	bic.w	r3, r3, #7
    xStart.xBlockSize = ( size_t ) 0;
 800a7ba:	6070      	str	r0, [r6, #4]
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a7bc:	6032      	str	r2, [r6, #0]
    pxEnd->pxNextFreeBlock = NULL;
 800a7be:	e9c3 0000 	strd	r0, r0, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a7c2:	1a98      	subs	r0, r3, r2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a7c4:	e9c2 3000 	strd	r3, r0, [r2]
    pxEnd = ( void * ) uxAddress;
 800a7c8:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a7ca:	4b34      	ldr	r3, [pc, #208]	@ (800a89c <pvPortMalloc+0x114>)
 800a7cc:	6018      	str	r0, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a7ce:	4b34      	ldr	r3, [pc, #208]	@ (800a8a0 <pvPortMalloc+0x118>)
 800a7d0:	6018      	str	r0, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a7d2:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800a7d6:	6023      	str	r3, [r4, #0]
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a7d8:	6827      	ldr	r7, [r4, #0]
 800a7da:	ea17 0405 	ands.w	r4, r7, r5
 800a7de:	d14b      	bne.n	800a878 <pvPortMalloc+0xf0>
            if( ( xWantedSize > 0 ) &&
 800a7e0:	1e6b      	subs	r3, r5, #1
 800a7e2:	330a      	adds	r3, #10
 800a7e4:	d808      	bhi.n	800a7f8 <pvPortMalloc+0x70>
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a7e6:	0768      	lsls	r0, r5, #29
                xWantedSize += xHeapStructSize;
 800a7e8:	f105 0208 	add.w	r2, r5, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a7ec:	d00b      	beq.n	800a806 <pvPortMalloc+0x7e>
                    if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) ) )
 800a7ee:	f022 0307 	bic.w	r3, r2, #7
 800a7f2:	3308      	adds	r3, #8
 800a7f4:	4293      	cmp	r3, r2
 800a7f6:	d807      	bhi.n	800a808 <pvPortMalloc+0x80>
    ( void ) xTaskResumeAll();
 800a7f8:	f7ff fb16 	bl	8009e28 <xTaskResumeAll>
    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a7fc:	0763      	lsls	r3, r4, #29
 800a7fe:	d03d      	beq.n	800a87c <pvPortMalloc+0xf4>
 800a800:	f7fe fc30 	bl	8009064 <ulSetInterruptMask>
 800a804:	e7fe      	b.n	800a804 <pvPortMalloc+0x7c>
 800a806:	4613      	mov	r3, r2
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a808:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800a8a0 <pvPortMalloc+0x118>
 800a80c:	f8d8 6000 	ldr.w	r6, [r8]
 800a810:	429e      	cmp	r6, r3
 800a812:	d331      	bcc.n	800a878 <pvPortMalloc+0xf0>
                pxBlock = xStart.pxNextFreeBlock;
 800a814:	4a20      	ldr	r2, [pc, #128]	@ (800a898 <pvPortMalloc+0x110>)
 800a816:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a818:	6868      	ldr	r0, [r5, #4]
 800a81a:	4298      	cmp	r0, r3
 800a81c:	d201      	bcs.n	800a822 <pvPortMalloc+0x9a>
 800a81e:	682c      	ldr	r4, [r5, #0]
 800a820:	b984      	cbnz	r4, 800a844 <pvPortMalloc+0xbc>
                if( pxBlock != pxEnd )
 800a822:	6809      	ldr	r1, [r1, #0]
 800a824:	42a9      	cmp	r1, r5
 800a826:	d027      	beq.n	800a878 <pvPortMalloc+0xf0>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a828:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a82a:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a82c:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a82e:	1ac2      	subs	r2, r0, r3
 800a830:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a832:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a836:	d90c      	bls.n	800a852 <pvPortMalloc+0xca>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a838:	18e8      	adds	r0, r5, r3
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a83a:	0741      	lsls	r1, r0, #29
 800a83c:	d005      	beq.n	800a84a <pvPortMalloc+0xc2>
 800a83e:	f7fe fc11 	bl	8009064 <ulSetInterruptMask>
 800a842:	e7fe      	b.n	800a842 <pvPortMalloc+0xba>
 800a844:	462a      	mov	r2, r5
 800a846:	4625      	mov	r5, r4
 800a848:	e7e6      	b.n	800a818 <pvPortMalloc+0x90>
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a84a:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 800a84c:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a84e:	f7ff ff75 	bl	800a73c <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 800a852:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a854:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a856:	4911      	ldr	r1, [pc, #68]	@ (800a89c <pvPortMalloc+0x114>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a858:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a85a:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 800a85c:	4a11      	ldr	r2, [pc, #68]	@ (800a8a4 <pvPortMalloc+0x11c>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a85e:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 800a860:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 800a862:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a864:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 800a866:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a86a:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a86e:	bf38      	it	cc
 800a870:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a872:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 800a874:	6013      	str	r3, [r2, #0]
 800a876:	e7bf      	b.n	800a7f8 <pvPortMalloc+0x70>
    void * pvReturn = NULL;
 800a878:	2400      	movs	r4, #0
 800a87a:	e7bd      	b.n	800a7f8 <pvPortMalloc+0x70>
}
 800a87c:	4620      	mov	r0, r4
 800a87e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a882:	bf00      	nop
 800a884:	2006f670 	.word	0x2006f670
 800a888:	2006f65c 	.word	0x2006f65c
 800a88c:	2006f67c 	.word	0x2006f67c
 800a890:	20082efc 	.word	0x20082efc
 800a894:	00013880 	.word	0x00013880
 800a898:	2006f674 	.word	0x2006f674
 800a89c:	2006f668 	.word	0x2006f668
 800a8a0:	2006f66c 	.word	0x2006f66c
 800a8a4:	2006f664 	.word	0x2006f664

0800a8a8 <vPortFree>:
{
 800a8a8:	b510      	push	{r4, lr}
    if( pv != NULL )
 800a8aa:	4604      	mov	r4, r0
 800a8ac:	b330      	cbz	r0, 800a8fc <vPortFree+0x54>
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a8ae:	4a14      	ldr	r2, [pc, #80]	@ (800a900 <vPortFree+0x58>)
 800a8b0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a8b4:	6812      	ldr	r2, [r2, #0]
 800a8b6:	4213      	tst	r3, r2
 800a8b8:	d102      	bne.n	800a8c0 <vPortFree+0x18>
 800a8ba:	f7fe fbd3 	bl	8009064 <ulSetInterruptMask>
 800a8be:	e7fe      	b.n	800a8be <vPortFree+0x16>
        configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a8c0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a8c4:	b111      	cbz	r1, 800a8cc <vPortFree+0x24>
 800a8c6:	f7fe fbcd 	bl	8009064 <ulSetInterruptMask>
 800a8ca:	e7fe      	b.n	800a8ca <vPortFree+0x22>
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a8cc:	ea23 0302 	bic.w	r3, r3, r2
 800a8d0:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 800a8d4:	f7ff f9ea 	bl	8009cac <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a8d8:	4a0a      	ldr	r2, [pc, #40]	@ (800a904 <vPortFree+0x5c>)
 800a8da:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a8de:	6811      	ldr	r1, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a8e0:	f1a4 0008 	sub.w	r0, r4, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a8e4:	440b      	add	r3, r1
 800a8e6:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a8e8:	f7ff ff28 	bl	800a73c <prvInsertBlockIntoFreeList>
}
 800a8ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    xNumberOfSuccessfulFrees++;
 800a8f0:	4a05      	ldr	r2, [pc, #20]	@ (800a908 <vPortFree+0x60>)
 800a8f2:	6813      	ldr	r3, [r2, #0]
 800a8f4:	3301      	adds	r3, #1
 800a8f6:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 800a8f8:	f7ff ba96 	b.w	8009e28 <xTaskResumeAll>
}
 800a8fc:	bd10      	pop	{r4, pc}
 800a8fe:	bf00      	nop
 800a900:	2006f65c 	.word	0x2006f65c
 800a904:	2006f66c 	.word	0x2006f66c
 800a908:	2006f660 	.word	0x2006f660

0800a90c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a90c:	8880      	ldrh	r0, [r0, #4]
 800a90e:	4770      	bx	lr

0800a910 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a910:	b570      	push	{r4, r5, r6, lr}
 800a912:	6803      	ldr	r3, [r0, #0]
 800a914:	4605      	mov	r5, r0
 800a916:	460c      	mov	r4, r1
 800a918:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a91a:	2100      	movs	r1, #0
 800a91c:	4798      	blx	r3
 800a91e:	682b      	ldr	r3, [r5, #0]
 800a920:	4606      	mov	r6, r0
 800a922:	6a1b      	ldr	r3, [r3, #32]
 800a924:	4628      	mov	r0, r5
 800a926:	4798      	blx	r3
 800a928:	1ba4      	subs	r4, r4, r6
 800a92a:	b2a4      	uxth	r4, r4
 800a92c:	fbb4 f0f0 	udiv	r0, r4, r0
 800a930:	bd70      	pop	{r4, r5, r6, pc}

0800a932 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a932:	2300      	movs	r3, #0
 800a934:	8083      	strh	r3, [r0, #4]
 800a936:	4770      	bx	lr

0800a938 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a938:	b510      	push	{r4, lr}
 800a93a:	4604      	mov	r4, r0
 800a93c:	6803      	ldr	r3, [r0, #0]
 800a93e:	8881      	ldrh	r1, [r0, #4]
 800a940:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a942:	4798      	blx	r3
 800a944:	88a3      	ldrh	r3, [r4, #4]
 800a946:	3301      	adds	r3, #1
 800a948:	80a3      	strh	r3, [r4, #4]
 800a94a:	bd10      	pop	{r4, pc}

0800a94c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a94c:	6803      	ldr	r3, [r0, #0]
 800a94e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a950:	4718      	bx	r3

0800a952 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a952:	4770      	bx	lr

0800a954 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a954:	4a02      	ldr	r2, [pc, #8]	@ (800a960 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a956:	6002      	str	r2, [r0, #0]
 800a958:	2200      	movs	r2, #0
 800a95a:	8082      	strh	r2, [r0, #4]
 800a95c:	4770      	bx	lr
 800a95e:	bf00      	nop
 800a960:	0803593c 	.word	0x0803593c

0800a964 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a964:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a966:	4770      	bx	lr

0800a968 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a968:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a96a:	2000      	movs	r0, #0
 800a96c:	b12b      	cbz	r3, 800a97a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a96e:	b920      	cbnz	r0, 800a97a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a970:	1a5a      	subs	r2, r3, r1
 800a972:	4250      	negs	r0, r2
 800a974:	4150      	adcs	r0, r2
 800a976:	699b      	ldr	r3, [r3, #24]
 800a978:	e7f8      	b.n	800a96c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a97a:	4770      	bx	lr

0800a97c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a97c:	2300      	movs	r3, #0
 800a97e:	6148      	str	r0, [r1, #20]
 800a980:	618b      	str	r3, [r1, #24]
 800a982:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a984:	b913      	cbnz	r3, 800a98c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a986:	6281      	str	r1, [r0, #40]	@ 0x28
 800a988:	4770      	bx	lr
 800a98a:	4613      	mov	r3, r2
 800a98c:	699a      	ldr	r2, [r3, #24]
 800a98e:	2a00      	cmp	r2, #0
 800a990:	d1fb      	bne.n	800a98a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a992:	6199      	str	r1, [r3, #24]
 800a994:	4770      	bx	lr

0800a996 <_ZN8touchgfx9Container9removeAllEv>:
 800a996:	2200      	movs	r2, #0
 800a998:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a99a:	b123      	cbz	r3, 800a9a6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a99c:	6999      	ldr	r1, [r3, #24]
 800a99e:	6281      	str	r1, [r0, #40]	@ 0x28
 800a9a0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a9a4:	e7f8      	b.n	800a998 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a9a6:	4770      	bx	lr

0800a9a8 <_ZN8touchgfx9Container6unlinkEv>:
 800a9a8:	2300      	movs	r3, #0
 800a9aa:	6283      	str	r3, [r0, #40]	@ 0x28
 800a9ac:	4770      	bx	lr

0800a9ae <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a9ae:	2200      	movs	r2, #0
 800a9b0:	8002      	strh	r2, [r0, #0]
 800a9b2:	8042      	strh	r2, [r0, #2]
 800a9b4:	8082      	strh	r2, [r0, #4]
 800a9b6:	80c2      	strh	r2, [r0, #6]
 800a9b8:	4770      	bx	lr

0800a9ba <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a9ba:	b570      	push	{r4, r5, r6, lr}
 800a9bc:	460d      	mov	r5, r1
 800a9be:	4616      	mov	r6, r2
 800a9c0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a9c2:	b13c      	cbz	r4, 800a9d4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a9c4:	6823      	ldr	r3, [r4, #0]
 800a9c6:	4620      	mov	r0, r4
 800a9c8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a9ca:	4632      	mov	r2, r6
 800a9cc:	4629      	mov	r1, r5
 800a9ce:	4798      	blx	r3
 800a9d0:	69a4      	ldr	r4, [r4, #24]
 800a9d2:	e7f6      	b.n	800a9c2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a9d4:	bd70      	pop	{r4, r5, r6, pc}

0800a9d6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a9d6:	b538      	push	{r3, r4, r5, lr}
 800a9d8:	460d      	mov	r5, r1
 800a9da:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a9dc:	b134      	cbz	r4, 800a9ec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a9de:	682b      	ldr	r3, [r5, #0]
 800a9e0:	4621      	mov	r1, r4
 800a9e2:	689b      	ldr	r3, [r3, #8]
 800a9e4:	4628      	mov	r0, r5
 800a9e6:	4798      	blx	r3
 800a9e8:	69a4      	ldr	r4, [r4, #24]
 800a9ea:	e7f7      	b.n	800a9dc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a9ec:	bd38      	pop	{r3, r4, r5, pc}

0800a9ee <_ZN8touchgfx9ContainerD1Ev>:
 800a9ee:	4770      	bx	lr

0800a9f0 <_ZN8touchgfx9ContainerD0Ev>:
 800a9f0:	b510      	push	{r4, lr}
 800a9f2:	4604      	mov	r4, r0
 800a9f4:	212c      	movs	r1, #44	@ 0x2c
 800a9f6:	f026 fbae 	bl	8031156 <_ZdlPvj>
 800a9fa:	4620      	mov	r0, r4
 800a9fc:	bd10      	pop	{r4, pc}

0800a9fe <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a9fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa00:	b19b      	cbz	r3, 800aa2a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa02:	428b      	cmp	r3, r1
 800aa04:	d109      	bne.n	800aa1a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aa06:	2100      	movs	r1, #0
 800aa08:	699a      	ldr	r2, [r3, #24]
 800aa0a:	6159      	str	r1, [r3, #20]
 800aa0c:	6282      	str	r2, [r0, #40]	@ 0x28
 800aa0e:	b902      	cbnz	r2, 800aa12 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aa10:	4770      	bx	lr
 800aa12:	6199      	str	r1, [r3, #24]
 800aa14:	4770      	bx	lr
 800aa16:	4613      	mov	r3, r2
 800aa18:	b13a      	cbz	r2, 800aa2a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa1a:	699a      	ldr	r2, [r3, #24]
 800aa1c:	428a      	cmp	r2, r1
 800aa1e:	d1fa      	bne.n	800aa16 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aa20:	698a      	ldr	r2, [r1, #24]
 800aa22:	619a      	str	r2, [r3, #24]
 800aa24:	2300      	movs	r3, #0
 800aa26:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aa2a:	4770      	bx	lr

0800aa2c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aa2c:	b410      	push	{r4}
 800aa2e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa30:	4604      	mov	r4, r0
 800aa32:	b92b      	cbnz	r3, 800aa40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aa34:	6803      	ldr	r3, [r0, #0]
 800aa36:	4611      	mov	r1, r2
 800aa38:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aa3e:	4718      	bx	r3
 800aa40:	b941      	cbnz	r1, 800aa54 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aa42:	6193      	str	r3, [r2, #24]
 800aa44:	6282      	str	r2, [r0, #40]	@ 0x28
 800aa46:	6154      	str	r4, [r2, #20]
 800aa48:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aa4c:	4770      	bx	lr
 800aa4e:	4603      	mov	r3, r0
 800aa50:	2800      	cmp	r0, #0
 800aa52:	d0f9      	beq.n	800aa48 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aa54:	4299      	cmp	r1, r3
 800aa56:	6998      	ldr	r0, [r3, #24]
 800aa58:	d1f9      	bne.n	800aa4e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aa5a:	6190      	str	r0, [r2, #24]
 800aa5c:	618a      	str	r2, [r1, #24]
 800aa5e:	e7f2      	b.n	800aa46 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aa60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aa60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa64:	461f      	mov	r7, r3
 800aa66:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800aa6a:	460d      	mov	r5, r1
 800aa6c:	4616      	mov	r6, r2
 800aa6e:	b103      	cbz	r3, 800aa72 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aa70:	6038      	str	r0, [r7, #0]
 800aa72:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa74:	b314      	cbz	r4, 800aabc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800aa76:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aa7a:	b1eb      	cbz	r3, 800aab8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa7c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aa80:	428d      	cmp	r5, r1
 800aa82:	db19      	blt.n	800aab8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa84:	8923      	ldrh	r3, [r4, #8]
 800aa86:	b289      	uxth	r1, r1
 800aa88:	440b      	add	r3, r1
 800aa8a:	b21b      	sxth	r3, r3
 800aa8c:	429d      	cmp	r5, r3
 800aa8e:	da13      	bge.n	800aab8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa90:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aa94:	4296      	cmp	r6, r2
 800aa96:	db0f      	blt.n	800aab8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa98:	8963      	ldrh	r3, [r4, #10]
 800aa9a:	b292      	uxth	r2, r2
 800aa9c:	4413      	add	r3, r2
 800aa9e:	b21b      	sxth	r3, r3
 800aaa0:	429e      	cmp	r6, r3
 800aaa2:	da09      	bge.n	800aab8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aaa4:	6823      	ldr	r3, [r4, #0]
 800aaa6:	1ab2      	subs	r2, r6, r2
 800aaa8:	1a69      	subs	r1, r5, r1
 800aaaa:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800aaae:	b212      	sxth	r2, r2
 800aab0:	463b      	mov	r3, r7
 800aab2:	b209      	sxth	r1, r1
 800aab4:	4620      	mov	r0, r4
 800aab6:	47c0      	blx	r8
 800aab8:	69a4      	ldr	r4, [r4, #24]
 800aaba:	e7db      	b.n	800aa74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800aabc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aac0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800aac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aac4:	4c6c      	ldr	r4, [pc, #432]	@ (800ac78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800aac6:	b0a1      	sub	sp, #132	@ 0x84
 800aac8:	6824      	ldr	r4, [r4, #0]
 800aaca:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800aacc:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800aad0:	2400      	movs	r4, #0
 800aad2:	802c      	strh	r4, [r5, #0]
 800aad4:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800aad6:	4606      	mov	r6, r0
 800aad8:	802c      	strh	r4, [r5, #0]
 800aada:	601c      	str	r4, [r3, #0]
 800aadc:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800aae0:	9303      	str	r3, [sp, #12]
 800aae2:	f7ff ffbd 	bl	800aa60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aae6:	f1b9 0f03 	cmp.w	r9, #3
 800aaea:	f340 80bf 	ble.w	800ac6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800aaee:	4631      	mov	r1, r6
 800aaf0:	a80c      	add	r0, sp, #48	@ 0x30
 800aaf2:	f003 fbd7 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aaf6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800aafa:	9306      	str	r3, [sp, #24]
 800aafc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ab00:	9307      	str	r3, [sp, #28]
 800ab02:	9b03      	ldr	r3, [sp, #12]
 800ab04:	f8d3 a000 	ldr.w	sl, [r3]
 800ab08:	f1ba 0f00 	cmp.w	sl, #0
 800ab0c:	f000 80b1 	beq.w	800ac72 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ab10:	4651      	mov	r1, sl
 800ab12:	a810      	add	r0, sp, #64	@ 0x40
 800ab14:	f003 fbc6 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab18:	2002      	movs	r0, #2
 800ab1a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800ab1e:	9b01      	ldr	r3, [sp, #4]
 800ab20:	fb91 f1f0 	sdiv	r1, r1, r0
 800ab24:	9a06      	ldr	r2, [sp, #24]
 800ab26:	189d      	adds	r5, r3, r2
 800ab28:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800ab2c:	9a07      	ldr	r2, [sp, #28]
 800ab2e:	4419      	add	r1, r3
 800ab30:	9b02      	ldr	r3, [sp, #8]
 800ab32:	1a6d      	subs	r5, r5, r1
 800ab34:	4413      	add	r3, r2
 800ab36:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800ab3a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800ab3e:	fb92 f2f0 	sdiv	r2, r2, r0
 800ab42:	440a      	add	r2, r1
 800ab44:	1a9b      	subs	r3, r3, r2
 800ab46:	435b      	muls	r3, r3
 800ab48:	fb05 3505 	mla	r5, r5, r5, r3
 800ab4c:	4f4b      	ldr	r7, [pc, #300]	@ (800ac7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800ab4e:	ac10      	add	r4, sp, #64	@ 0x40
 800ab50:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab52:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab54:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab58:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab5c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ab60:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ab64:	2303      	movs	r3, #3
 800ab66:	f1b9 0f0c 	cmp.w	r9, #12
 800ab6a:	bfda      	itte	le
 800ab6c:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ab70:	fb92 f8f3 	sdivle	r8, r2, r3
 800ab74:	4698      	movgt	r8, r3
 800ab76:	2400      	movs	r4, #0
 800ab78:	f8cd 9000 	str.w	r9, [sp]
 800ab7c:	1c63      	adds	r3, r4, #1
 800ab7e:	9308      	str	r3, [sp, #32]
 800ab80:	9b00      	ldr	r3, [sp, #0]
 800ab82:	f04f 0b00 	mov.w	fp, #0
 800ab86:	fb93 f3f8 	sdiv	r3, r3, r8
 800ab8a:	f004 0401 	and.w	r4, r4, #1
 800ab8e:	aa10      	add	r2, sp, #64	@ 0x40
 800ab90:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ab94:	b29b      	uxth	r3, r3
 800ab96:	3404      	adds	r4, #4
 800ab98:	9304      	str	r3, [sp, #16]
 800ab9a:	9a04      	ldr	r2, [sp, #16]
 800ab9c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aba0:	fb13 f302 	smulbb	r3, r3, r2
 800aba4:	9a01      	ldr	r2, [sp, #4]
 800aba6:	b29b      	uxth	r3, r3
 800aba8:	1899      	adds	r1, r3, r2
 800abaa:	9305      	str	r3, [sp, #20]
 800abac:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800abb0:	b209      	sxth	r1, r1
 800abb2:	4299      	cmp	r1, r3
 800abb4:	db4d      	blt.n	800ac52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abb6:	8932      	ldrh	r2, [r6, #8]
 800abb8:	4413      	add	r3, r2
 800abba:	b21b      	sxth	r3, r3
 800abbc:	4299      	cmp	r1, r3
 800abbe:	da48      	bge.n	800ac52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abc0:	9b04      	ldr	r3, [sp, #16]
 800abc2:	6827      	ldr	r7, [r4, #0]
 800abc4:	fb17 f703 	smulbb	r7, r7, r3
 800abc8:	9b02      	ldr	r3, [sp, #8]
 800abca:	b2bf      	uxth	r7, r7
 800abcc:	18fa      	adds	r2, r7, r3
 800abce:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800abd2:	b212      	sxth	r2, r2
 800abd4:	429a      	cmp	r2, r3
 800abd6:	db3c      	blt.n	800ac52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abd8:	8970      	ldrh	r0, [r6, #10]
 800abda:	4403      	add	r3, r0
 800abdc:	b21b      	sxth	r3, r3
 800abde:	429a      	cmp	r2, r3
 800abe0:	da37      	bge.n	800ac52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abe2:	2300      	movs	r3, #0
 800abe4:	4630      	mov	r0, r6
 800abe6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800abe8:	ab0b      	add	r3, sp, #44	@ 0x2c
 800abea:	f7ff ff39 	bl	800aa60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800abee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800abf0:	b37a      	cbz	r2, 800ac52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abf2:	4552      	cmp	r2, sl
 800abf4:	d02d      	beq.n	800ac52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abf6:	4611      	mov	r1, r2
 800abf8:	a80e      	add	r0, sp, #56	@ 0x38
 800abfa:	9209      	str	r2, [sp, #36]	@ 0x24
 800abfc:	f003 fb52 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ac00:	f04f 0e02 	mov.w	lr, #2
 800ac04:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800ac08:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800ac0c:	fb91 f1fe 	sdiv	r1, r1, lr
 800ac10:	fb9c fcfe 	sdiv	ip, ip, lr
 800ac14:	9a06      	ldr	r2, [sp, #24]
 800ac16:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800ac1a:	9b01      	ldr	r3, [sp, #4]
 800ac1c:	4401      	add	r1, r0
 800ac1e:	4413      	add	r3, r2
 800ac20:	1a58      	subs	r0, r3, r1
 800ac22:	9a07      	ldr	r2, [sp, #28]
 800ac24:	9b02      	ldr	r3, [sp, #8]
 800ac26:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800ac2a:	4413      	add	r3, r2
 800ac2c:	448c      	add	ip, r1
 800ac2e:	eba3 030c 	sub.w	r3, r3, ip
 800ac32:	435b      	muls	r3, r3
 800ac34:	fb00 3300 	mla	r3, r0, r0, r3
 800ac38:	42ab      	cmp	r3, r5
 800ac3a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ac3c:	d208      	bcs.n	800ac50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800ac3e:	461d      	mov	r5, r3
 800ac40:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800ac42:	9803      	ldr	r0, [sp, #12]
 800ac44:	6001      	str	r1, [r0, #0]
 800ac46:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ac48:	9805      	ldr	r0, [sp, #20]
 800ac4a:	8008      	strh	r0, [r1, #0]
 800ac4c:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ac4e:	800f      	strh	r7, [r1, #0]
 800ac50:	4692      	mov	sl, r2
 800ac52:	f10b 0b01 	add.w	fp, fp, #1
 800ac56:	f1bb 0f04 	cmp.w	fp, #4
 800ac5a:	f104 0408 	add.w	r4, r4, #8
 800ac5e:	d19c      	bne.n	800ab9a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800ac60:	9b00      	ldr	r3, [sp, #0]
 800ac62:	9c08      	ldr	r4, [sp, #32]
 800ac64:	444b      	add	r3, r9
 800ac66:	4544      	cmp	r4, r8
 800ac68:	9300      	str	r3, [sp, #0]
 800ac6a:	d187      	bne.n	800ab7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800ac6c:	b021      	add	sp, #132	@ 0x84
 800ac6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac72:	f04f 35ff 	mov.w	r5, #4294967295
 800ac76:	e769      	b.n	800ab4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ac78:	20082f08 	.word	0x20082f08
 800ac7c:	080335a8 	.word	0x080335a8

0800ac80 <_ZN8touchgfx4RectaNERKS0_>:
 800ac80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac84:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ac88:	888c      	ldrh	r4, [r1, #4]
 800ac8a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ac8e:	443c      	add	r4, r7
 800ac90:	b2a4      	uxth	r4, r4
 800ac92:	fa0f f884 	sxth.w	r8, r4
 800ac96:	45c1      	cmp	r9, r8
 800ac98:	da2f      	bge.n	800acfa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac9a:	8882      	ldrh	r2, [r0, #4]
 800ac9c:	444a      	add	r2, r9
 800ac9e:	b292      	uxth	r2, r2
 800aca0:	fa0f fe82 	sxth.w	lr, r2
 800aca4:	4577      	cmp	r7, lr
 800aca6:	da28      	bge.n	800acfa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aca8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800acac:	88cb      	ldrh	r3, [r1, #6]
 800acae:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800acb2:	442b      	add	r3, r5
 800acb4:	b21b      	sxth	r3, r3
 800acb6:	429e      	cmp	r6, r3
 800acb8:	da1f      	bge.n	800acfa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800acba:	88c3      	ldrh	r3, [r0, #6]
 800acbc:	4433      	add	r3, r6
 800acbe:	b29b      	uxth	r3, r3
 800acc0:	fa0f fc83 	sxth.w	ip, r3
 800acc4:	4565      	cmp	r5, ip
 800acc6:	da18      	bge.n	800acfa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800acc8:	454f      	cmp	r7, r9
 800acca:	bfb8      	it	lt
 800accc:	464f      	movlt	r7, r9
 800acce:	42b5      	cmp	r5, r6
 800acd0:	bfb8      	it	lt
 800acd2:	4635      	movlt	r5, r6
 800acd4:	45f0      	cmp	r8, lr
 800acd6:	bfd8      	it	le
 800acd8:	4622      	movle	r2, r4
 800acda:	1bd2      	subs	r2, r2, r7
 800acdc:	8082      	strh	r2, [r0, #4]
 800acde:	884a      	ldrh	r2, [r1, #2]
 800ace0:	88c9      	ldrh	r1, [r1, #6]
 800ace2:	8007      	strh	r7, [r0, #0]
 800ace4:	440a      	add	r2, r1
 800ace6:	b292      	uxth	r2, r2
 800ace8:	b211      	sxth	r1, r2
 800acea:	458c      	cmp	ip, r1
 800acec:	bfa8      	it	ge
 800acee:	4613      	movge	r3, r2
 800acf0:	1b5b      	subs	r3, r3, r5
 800acf2:	80c3      	strh	r3, [r0, #6]
 800acf4:	8045      	strh	r5, [r0, #2]
 800acf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800acfa:	2300      	movs	r3, #0
 800acfc:	8003      	strh	r3, [r0, #0]
 800acfe:	8043      	strh	r3, [r0, #2]
 800ad00:	8083      	strh	r3, [r0, #4]
 800ad02:	80c3      	strh	r3, [r0, #6]
 800ad04:	e7f7      	b.n	800acf6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ad06:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ad0a:	2b00      	cmp	r3, #0
 800ad0c:	dd06      	ble.n	800ad1c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ad0e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ad12:	2800      	cmp	r0, #0
 800ad14:	bfcc      	ite	gt
 800ad16:	2000      	movgt	r0, #0
 800ad18:	2001      	movle	r0, #1
 800ad1a:	4770      	bx	lr
 800ad1c:	2001      	movs	r0, #1
 800ad1e:	4770      	bx	lr

0800ad20 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ad20:	2300      	movs	r3, #0
 800ad22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad26:	4604      	mov	r4, r0
 800ad28:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800ad2a:	8003      	strh	r3, [r0, #0]
 800ad2c:	8043      	strh	r3, [r0, #2]
 800ad2e:	8083      	strh	r3, [r0, #4]
 800ad30:	80c3      	strh	r3, [r0, #6]
 800ad32:	2d00      	cmp	r5, #0
 800ad34:	d040      	beq.n	800adb8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ad36:	1d28      	adds	r0, r5, #4
 800ad38:	f7ff ffe5 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad3c:	b988      	cbnz	r0, 800ad62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ad3e:	4620      	mov	r0, r4
 800ad40:	f7ff ffe1 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad44:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ad48:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ad4c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ad50:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ad54:	b138      	cbz	r0, 800ad66 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ad56:	8022      	strh	r2, [r4, #0]
 800ad58:	8063      	strh	r3, [r4, #2]
 800ad5a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ad5e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ad62:	69ad      	ldr	r5, [r5, #24]
 800ad64:	e7e5      	b.n	800ad32 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ad66:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ad6a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ad6e:	4290      	cmp	r0, r2
 800ad70:	4607      	mov	r7, r0
 800ad72:	bfa8      	it	ge
 800ad74:	4617      	movge	r7, r2
 800ad76:	4299      	cmp	r1, r3
 800ad78:	460e      	mov	r6, r1
 800ad7a:	bfa8      	it	ge
 800ad7c:	461e      	movge	r6, r3
 800ad7e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ad82:	4472      	add	r2, lr
 800ad84:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ad88:	4440      	add	r0, r8
 800ad8a:	4471      	add	r1, lr
 800ad8c:	4463      	add	r3, ip
 800ad8e:	b200      	sxth	r0, r0
 800ad90:	b212      	sxth	r2, r2
 800ad92:	b209      	sxth	r1, r1
 800ad94:	b21b      	sxth	r3, r3
 800ad96:	4290      	cmp	r0, r2
 800ad98:	bfac      	ite	ge
 800ad9a:	ebc7 0200 	rsbge	r2, r7, r0
 800ad9e:	ebc7 0202 	rsblt	r2, r7, r2
 800ada2:	4299      	cmp	r1, r3
 800ada4:	bfac      	ite	ge
 800ada6:	ebc6 0301 	rsbge	r3, r6, r1
 800adaa:	ebc6 0303 	rsblt	r3, r6, r3
 800adae:	8027      	strh	r7, [r4, #0]
 800adb0:	8066      	strh	r6, [r4, #2]
 800adb2:	80a2      	strh	r2, [r4, #4]
 800adb4:	80e3      	strh	r3, [r4, #6]
 800adb6:	e7d4      	b.n	800ad62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800adb8:	4620      	mov	r0, r4
 800adba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800adbe <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800adbe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800adc2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800adc6:	b383      	cbz	r3, 800ae2a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800adc8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800adca:	b374      	cbz	r4, 800ae2a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800adcc:	f9b1 5000 	ldrsh.w	r5, [r1]
 800add0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800add4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800add8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800addc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ade0:	b303      	cbz	r3, 800ae24 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ade2:	4668      	mov	r0, sp
 800ade4:	1d21      	adds	r1, r4, #4
 800ade6:	f8ad 5000 	strh.w	r5, [sp]
 800adea:	f8ad 6002 	strh.w	r6, [sp, #2]
 800adee:	f8ad 7004 	strh.w	r7, [sp, #4]
 800adf2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800adf6:	f7ff ff43 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800adfa:	4668      	mov	r0, sp
 800adfc:	f7ff ff83 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae00:	b980      	cbnz	r0, 800ae24 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae02:	f8bd 3000 	ldrh.w	r3, [sp]
 800ae06:	88a2      	ldrh	r2, [r4, #4]
 800ae08:	4669      	mov	r1, sp
 800ae0a:	1a9b      	subs	r3, r3, r2
 800ae0c:	f8ad 3000 	strh.w	r3, [sp]
 800ae10:	88e2      	ldrh	r2, [r4, #6]
 800ae12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ae16:	4620      	mov	r0, r4
 800ae18:	1a9b      	subs	r3, r3, r2
 800ae1a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae1e:	6823      	ldr	r3, [r4, #0]
 800ae20:	689b      	ldr	r3, [r3, #8]
 800ae22:	4798      	blx	r3
 800ae24:	69a4      	ldr	r4, [r4, #24]
 800ae26:	2c00      	cmp	r4, #0
 800ae28:	d1d8      	bne.n	800addc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ae2a:	b002      	add	sp, #8
 800ae2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae30 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ae30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae32:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ae36:	460d      	mov	r5, r1
 800ae38:	4616      	mov	r6, r2
 800ae3a:	b323      	cbz	r3, 800ae86 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ae3c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ae3e:	b314      	cbz	r4, 800ae86 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ae40:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ae44:	b1eb      	cbz	r3, 800ae82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ae46:	466b      	mov	r3, sp
 800ae48:	6828      	ldr	r0, [r5, #0]
 800ae4a:	6869      	ldr	r1, [r5, #4]
 800ae4c:	c303      	stmia	r3!, {r0, r1}
 800ae4e:	4668      	mov	r0, sp
 800ae50:	1d21      	adds	r1, r4, #4
 800ae52:	f7ff ff15 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800ae56:	4668      	mov	r0, sp
 800ae58:	f7ff ff55 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae5c:	b988      	cbnz	r0, 800ae82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ae5e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ae62:	88a2      	ldrh	r2, [r4, #4]
 800ae64:	4669      	mov	r1, sp
 800ae66:	1a9b      	subs	r3, r3, r2
 800ae68:	f8ad 3000 	strh.w	r3, [sp]
 800ae6c:	88e2      	ldrh	r2, [r4, #6]
 800ae6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ae72:	4620      	mov	r0, r4
 800ae74:	1a9b      	subs	r3, r3, r2
 800ae76:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae7a:	6823      	ldr	r3, [r4, #0]
 800ae7c:	4632      	mov	r2, r6
 800ae7e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ae80:	4798      	blx	r3
 800ae82:	69a4      	ldr	r4, [r4, #24]
 800ae84:	e7db      	b.n	800ae3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ae86:	b002      	add	sp, #8
 800ae88:	bd70      	pop	{r4, r5, r6, pc}

0800ae8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ae8a:	b513      	push	{r0, r1, r4, lr}
 800ae8c:	6803      	ldr	r3, [r0, #0]
 800ae8e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800ae92:	2300      	movs	r3, #0
 800ae94:	e9cd 3300 	strd	r3, r3, [sp]
 800ae98:	466b      	mov	r3, sp
 800ae9a:	47a0      	blx	r4
 800ae9c:	b002      	add	sp, #8
 800ae9e:	bd10      	pop	{r4, pc}

0800aea0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800aea0:	2301      	movs	r3, #1
 800aea2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aea6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800aeaa:	4770      	bx	lr

0800aeac <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800aeac:	2301      	movs	r3, #1
 800aeae:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aeb2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800aeb6:	4770      	bx	lr

0800aeb8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800aeb8:	2201      	movs	r2, #1
 800aeba:	6843      	ldr	r3, [r0, #4]
 800aebc:	725a      	strb	r2, [r3, #9]
 800aebe:	6840      	ldr	r0, [r0, #4]
 800aec0:	6803      	ldr	r3, [r0, #0]
 800aec2:	691b      	ldr	r3, [r3, #16]
 800aec4:	4718      	bx	r3

0800aec6 <_ZN8touchgfx3HAL8flushDMAEv>:
 800aec6:	6840      	ldr	r0, [r0, #4]
 800aec8:	6803      	ldr	r3, [r0, #0]
 800aeca:	689b      	ldr	r3, [r3, #8]
 800aecc:	4718      	bx	r3

0800aece <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800aece:	b530      	push	{r4, r5, lr}
 800aed0:	b08b      	sub	sp, #44	@ 0x2c
 800aed2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800aed6:	6804      	ldr	r4, [r0, #0]
 800aed8:	9509      	str	r5, [sp, #36]	@ 0x24
 800aeda:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800aede:	9508      	str	r5, [sp, #32]
 800aee0:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800aee4:	9507      	str	r5, [sp, #28]
 800aee6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800aeea:	9506      	str	r5, [sp, #24]
 800aeec:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800aef0:	9505      	str	r5, [sp, #20]
 800aef2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800aef6:	9504      	str	r5, [sp, #16]
 800aef8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800aefc:	9503      	str	r5, [sp, #12]
 800aefe:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800af02:	9502      	str	r5, [sp, #8]
 800af04:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800af08:	e9cd 3500 	strd	r3, r5, [sp]
 800af0c:	4613      	mov	r3, r2
 800af0e:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800af10:	2200      	movs	r2, #0
 800af12:	47a0      	blx	r4
 800af14:	b00b      	add	sp, #44	@ 0x2c
 800af16:	bd30      	pop	{r4, r5, pc}

0800af18 <_ZN8touchgfx3HAL10beginFrameEv>:
 800af18:	4b04      	ldr	r3, [pc, #16]	@ (800af2c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800af1a:	781b      	ldrb	r3, [r3, #0]
 800af1c:	b123      	cbz	r3, 800af28 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800af1e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800af22:	f080 0001 	eor.w	r0, r0, #1
 800af26:	4770      	bx	lr
 800af28:	2001      	movs	r0, #1
 800af2a:	4770      	bx	lr
 800af2c:	20082f06 	.word	0x20082f06

0800af30 <_ZN8touchgfx3HAL8endFrameEv>:
 800af30:	b510      	push	{r4, lr}
 800af32:	4604      	mov	r4, r0
 800af34:	6840      	ldr	r0, [r0, #4]
 800af36:	6803      	ldr	r3, [r0, #0]
 800af38:	689b      	ldr	r3, [r3, #8]
 800af3a:	4798      	blx	r3
 800af3c:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800af40:	b113      	cbz	r3, 800af48 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800af42:	2301      	movs	r3, #1
 800af44:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800af48:	bd10      	pop	{r4, pc}

0800af4a <_ZN8touchgfx3HAL10initializeEv>:
 800af4a:	b510      	push	{r4, lr}
 800af4c:	4604      	mov	r4, r0
 800af4e:	f7f7 f81d 	bl	8001f8c <_ZN8touchgfx10OSWrappers10initializeEv>
 800af52:	f7f6 f8fb 	bl	800114c <_ZN8touchgfx4GPIO4initEv>
 800af56:	6860      	ldr	r0, [r4, #4]
 800af58:	6803      	ldr	r3, [r0, #0]
 800af5a:	68db      	ldr	r3, [r3, #12]
 800af5c:	4798      	blx	r3
 800af5e:	68e0      	ldr	r0, [r4, #12]
 800af60:	6803      	ldr	r3, [r0, #0]
 800af62:	689b      	ldr	r3, [r3, #8]
 800af64:	4798      	blx	r3
 800af66:	6823      	ldr	r3, [r4, #0]
 800af68:	4620      	mov	r0, r4
 800af6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800af6e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800af70:	4718      	bx	r3

0800af72 <_ZN8touchgfx3HAL9taskEntryEv>:
 800af72:	4604      	mov	r4, r0
 800af74:	b508      	push	{r3, lr}
 800af76:	6803      	ldr	r3, [r0, #0]
 800af78:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800af7c:	4798      	blx	r3
 800af7e:	6823      	ldr	r3, [r4, #0]
 800af80:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800af82:	4620      	mov	r0, r4
 800af84:	4798      	blx	r3
 800af86:	f7f7 f84d 	bl	8002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800af8a:	6823      	ldr	r3, [r4, #0]
 800af8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800af8e:	e7f8      	b.n	800af82 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800af90 <_ZN8touchgfx3HAL4tickEv>:
 800af90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800af92:	6803      	ldr	r3, [r0, #0]
 800af94:	4604      	mov	r4, r0
 800af96:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800af9a:	4798      	blx	r3
 800af9c:	4d59      	ldr	r5, [pc, #356]	@ (800b104 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800af9e:	2800      	cmp	r0, #0
 800afa0:	f000 8095 	beq.w	800b0ce <_ZN8touchgfx3HAL4tickEv+0x13e>
 800afa4:	2600      	movs	r6, #0
 800afa6:	2001      	movs	r0, #1
 800afa8:	f7f6 f8d2 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800afac:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800afb0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800afb4:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800afb8:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800afbc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800afc0:	b133      	cbz	r3, 800afd0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800afc2:	6823      	ldr	r3, [r4, #0]
 800afc4:	4620      	mov	r0, r4
 800afc6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800afca:	4798      	blx	r3
 800afcc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800afd0:	2601      	movs	r6, #1
 800afd2:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800afd6:	6862      	ldr	r2, [r4, #4]
 800afd8:	f083 0301 	eor.w	r3, r3, #1
 800afdc:	7253      	strb	r3, [r2, #9]
 800afde:	702e      	strb	r6, [r5, #0]
 800afe0:	f002 f84e 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
 800afe4:	6803      	ldr	r3, [r0, #0]
 800afe6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800afe8:	4798      	blx	r3
 800afea:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800afee:	b90b      	cbnz	r3, 800aff4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800aff0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800aff4:	f002 f844 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
 800aff8:	6803      	ldr	r3, [r0, #0]
 800affa:	695b      	ldr	r3, [r3, #20]
 800affc:	4798      	blx	r3
 800affe:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b000:	6803      	ldr	r3, [r0, #0]
 800b002:	691b      	ldr	r3, [r3, #16]
 800b004:	4798      	blx	r3
 800b006:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b00a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800b00e:	3b01      	subs	r3, #1
 800b010:	b2db      	uxtb	r3, r3
 800b012:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b016:	b10a      	cbz	r2, 800b01c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b018:	2b00      	cmp	r3, #0
 800b01a:	d1eb      	bne.n	800aff4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b01c:	4a3a      	ldr	r2, [pc, #232]	@ (800b108 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b01e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b022:	7813      	ldrb	r3, [r2, #0]
 800b024:	3301      	adds	r3, #1
 800b026:	b25b      	sxtb	r3, r3
 800b028:	4299      	cmp	r1, r3
 800b02a:	7013      	strb	r3, [r2, #0]
 800b02c:	dc10      	bgt.n	800b050 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b02e:	2300      	movs	r3, #0
 800b030:	68e0      	ldr	r0, [r4, #12]
 800b032:	7013      	strb	r3, [r2, #0]
 800b034:	6803      	ldr	r3, [r0, #0]
 800b036:	aa03      	add	r2, sp, #12
 800b038:	68db      	ldr	r3, [r3, #12]
 800b03a:	a902      	add	r1, sp, #8
 800b03c:	4798      	blx	r3
 800b03e:	6823      	ldr	r3, [r4, #0]
 800b040:	2800      	cmp	r0, #0
 800b042:	d050      	beq.n	800b0e6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b044:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b048:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800b04c:	4620      	mov	r0, r4
 800b04e:	4798      	blx	r3
 800b050:	2300      	movs	r3, #0
 800b052:	6960      	ldr	r0, [r4, #20]
 800b054:	f88d 3007 	strb.w	r3, [sp, #7]
 800b058:	b158      	cbz	r0, 800b072 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b05a:	6803      	ldr	r3, [r0, #0]
 800b05c:	f10d 0107 	add.w	r1, sp, #7
 800b060:	68db      	ldr	r3, [r3, #12]
 800b062:	4798      	blx	r3
 800b064:	b128      	cbz	r0, 800b072 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b066:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b068:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b06c:	6803      	ldr	r3, [r0, #0]
 800b06e:	68db      	ldr	r3, [r3, #12]
 800b070:	4798      	blx	r3
 800b072:	f104 001c 	add.w	r0, r4, #28
 800b076:	f005 f98f 	bl	8010398 <_ZN8touchgfx8Gestures4tickEv>
 800b07a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b07e:	b30b      	cbz	r3, 800b0c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b080:	6920      	ldr	r0, [r4, #16]
 800b082:	6803      	ldr	r3, [r0, #0]
 800b084:	691b      	ldr	r3, [r3, #16]
 800b086:	4798      	blx	r3
 800b088:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b08a:	4606      	mov	r6, r0
 800b08c:	b903      	cbnz	r3, 800b090 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b08e:	6760      	str	r0, [r4, #116]	@ 0x74
 800b090:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b092:	4a1e      	ldr	r2, [pc, #120]	@ (800b10c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b094:	1af3      	subs	r3, r6, r3
 800b096:	4293      	cmp	r3, r2
 800b098:	d914      	bls.n	800b0c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b09a:	6920      	ldr	r0, [r4, #16]
 800b09c:	6803      	ldr	r3, [r0, #0]
 800b09e:	699b      	ldr	r3, [r3, #24]
 800b0a0:	4798      	blx	r3
 800b0a2:	2264      	movs	r2, #100	@ 0x64
 800b0a4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b0a6:	1af3      	subs	r3, r6, r3
 800b0a8:	fbb3 f3f2 	udiv	r3, r3, r2
 800b0ac:	fbb0 f0f3 	udiv	r0, r0, r3
 800b0b0:	2800      	cmp	r0, #0
 800b0b2:	dc1d      	bgt.n	800b0f0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b0b4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b0b8:	6920      	ldr	r0, [r4, #16]
 800b0ba:	2100      	movs	r1, #0
 800b0bc:	6803      	ldr	r3, [r0, #0]
 800b0be:	69db      	ldr	r3, [r3, #28]
 800b0c0:	4798      	blx	r3
 800b0c2:	6766      	str	r6, [r4, #116]	@ 0x74
 800b0c4:	f001 ffdc 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
 800b0c8:	6803      	ldr	r3, [r0, #0]
 800b0ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b0cc:	4798      	blx	r3
 800b0ce:	6823      	ldr	r3, [r4, #0]
 800b0d0:	4620      	mov	r0, r4
 800b0d2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800b0d6:	4798      	blx	r3
 800b0d8:	2001      	movs	r0, #1
 800b0da:	f7f6 f853 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b0de:	2300      	movs	r3, #0
 800b0e0:	702b      	strb	r3, [r5, #0]
 800b0e2:	b004      	add	sp, #16
 800b0e4:	bd70      	pop	{r4, r5, r6, pc}
 800b0e6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b0ea:	4620      	mov	r0, r4
 800b0ec:	4798      	blx	r3
 800b0ee:	e7af      	b.n	800b050 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b0f0:	2863      	cmp	r0, #99	@ 0x63
 800b0f2:	bfcb      	itete	gt
 800b0f4:	2300      	movgt	r3, #0
 800b0f6:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b0fa:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b0fe:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b102:	e7d9      	b.n	800b0b8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b104:	20082f0c 	.word	0x20082f0c
 800b108:	20082f0d 	.word	0x20082f0d
 800b10c:	05f5e100 	.word	0x05f5e100

0800b110 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b110:	b510      	push	{r4, lr}
 800b112:	4604      	mov	r4, r0
 800b114:	f7f6 ff6a 	bl	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b118:	2200      	movs	r2, #0
 800b11a:	6863      	ldr	r3, [r4, #4]
 800b11c:	729a      	strb	r2, [r3, #10]
 800b11e:	bd10      	pop	{r4, pc}

0800b120 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b120:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b122:	301c      	adds	r0, #28
 800b124:	f005 b936 	b.w	8010394 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b128 <_ZN8touchgfx3HAL5touchEll>:
 800b128:	b530      	push	{r4, r5, lr}
 800b12a:	4604      	mov	r4, r0
 800b12c:	b087      	sub	sp, #28
 800b12e:	a804      	add	r0, sp, #16
 800b130:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b134:	f001 fd8c 	bl	800cc50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b138:	9b04      	ldr	r3, [sp, #16]
 800b13a:	a906      	add	r1, sp, #24
 800b13c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b140:	9b05      	ldr	r3, [sp, #20]
 800b142:	a803      	add	r0, sp, #12
 800b144:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b148:	f001 fdd4 	bl	800ccf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b14c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b150:	f104 001c 	add.w	r0, r4, #28
 800b154:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b158:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b15c:	b189      	cbz	r1, 800b182 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b15e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b162:	9300      	str	r3, [sp, #0]
 800b164:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b168:	4613      	mov	r3, r2
 800b16a:	462a      	mov	r2, r5
 800b16c:	f005 f922 	bl	80103b4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b170:	b128      	cbz	r0, 800b17e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b172:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b176:	6623      	str	r3, [r4, #96]	@ 0x60
 800b178:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b17c:	6663      	str	r3, [r4, #100]	@ 0x64
 800b17e:	b007      	add	sp, #28
 800b180:	bd30      	pop	{r4, r5, pc}
 800b182:	f005 f957 	bl	8010434 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b186:	2301      	movs	r3, #1
 800b188:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b18c:	e7f1      	b.n	800b172 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b18e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b18e:	b510      	push	{r4, lr}
 800b190:	2b00      	cmp	r3, #0
 800b192:	d046      	beq.n	800b222 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b194:	ea81 0002 	eor.w	r0, r1, r2
 800b198:	07c4      	lsls	r4, r0, #31
 800b19a:	d508      	bpl.n	800b1ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b19c:	440b      	add	r3, r1
 800b19e:	3a01      	subs	r2, #1
 800b1a0:	428b      	cmp	r3, r1
 800b1a2:	d93e      	bls.n	800b222 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b1a4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b1a8:	f801 0b01 	strb.w	r0, [r1], #1
 800b1ac:	e7f8      	b.n	800b1a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b1ae:	07d0      	lsls	r0, r2, #31
 800b1b0:	bf42      	ittt	mi
 800b1b2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b1b6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b1ba:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b1be:	2b01      	cmp	r3, #1
 800b1c0:	d911      	bls.n	800b1e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b1c2:	ea81 0402 	eor.w	r4, r1, r2
 800b1c6:	07a4      	lsls	r4, r4, #30
 800b1c8:	4610      	mov	r0, r2
 800b1ca:	d022      	beq.n	800b212 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b1cc:	f023 0401 	bic.w	r4, r3, #1
 800b1d0:	440c      	add	r4, r1
 800b1d2:	428c      	cmp	r4, r1
 800b1d4:	4602      	mov	r2, r0
 800b1d6:	d904      	bls.n	800b1e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b1d8:	8812      	ldrh	r2, [r2, #0]
 800b1da:	3002      	adds	r0, #2
 800b1dc:	f821 2b02 	strh.w	r2, [r1], #2
 800b1e0:	e7f7      	b.n	800b1d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b1e2:	f003 0301 	and.w	r3, r3, #1
 800b1e6:	f023 0003 	bic.w	r0, r3, #3
 800b1ea:	4408      	add	r0, r1
 800b1ec:	4288      	cmp	r0, r1
 800b1ee:	4614      	mov	r4, r2
 800b1f0:	d904      	bls.n	800b1fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b1f2:	6824      	ldr	r4, [r4, #0]
 800b1f4:	3204      	adds	r2, #4
 800b1f6:	f841 4b04 	str.w	r4, [r1], #4
 800b1fa:	e7f7      	b.n	800b1ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b1fc:	f003 0303 	and.w	r3, r3, #3
 800b200:	440b      	add	r3, r1
 800b202:	3a01      	subs	r2, #1
 800b204:	428b      	cmp	r3, r1
 800b206:	d90c      	bls.n	800b222 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b208:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b20c:	f801 0b01 	strb.w	r0, [r1], #1
 800b210:	e7f8      	b.n	800b204 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b212:	0790      	lsls	r0, r2, #30
 800b214:	d0e7      	beq.n	800b1e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b216:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b21a:	3b02      	subs	r3, #2
 800b21c:	f821 0b02 	strh.w	r0, [r1], #2
 800b220:	e7e1      	b.n	800b1e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b222:	2001      	movs	r0, #1
 800b224:	bd10      	pop	{r4, pc}

0800b226 <_ZN8touchgfx3HAL7noTouchEv>:
 800b226:	b510      	push	{r4, lr}
 800b228:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b22c:	4604      	mov	r4, r0
 800b22e:	b153      	cbz	r3, 800b246 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b230:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b234:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b238:	2101      	movs	r1, #1
 800b23a:	301c      	adds	r0, #28
 800b23c:	f005 f8fa 	bl	8010434 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b240:	2300      	movs	r3, #0
 800b242:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b246:	bd10      	pop	{r4, pc}

0800b248 <_ZN8touchgfx3HAL3lcdEv>:
 800b248:	4b04      	ldr	r3, [pc, #16]	@ (800b25c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b250:	b10a      	cbz	r2, 800b256 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800b252:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b254:	b900      	cbnz	r0, 800b258 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800b256:	6898      	ldr	r0, [r3, #8]
 800b258:	4770      	bx	lr
 800b25a:	bf00      	nop
 800b25c:	20082f08 	.word	0x20082f08

0800b260 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b260:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b264:	4604      	mov	r4, r0
 800b266:	2000      	movs	r0, #0
 800b268:	b085      	sub	sp, #20
 800b26a:	ad04      	add	r5, sp, #16
 800b26c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b270:	69a0      	ldr	r0, [r4, #24]
 800b272:	4699      	mov	r9, r3
 800b274:	6806      	ldr	r6, [r0, #0]
 800b276:	9501      	str	r5, [sp, #4]
 800b278:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b27c:	460f      	mov	r7, r1
 800b27e:	9500      	str	r5, [sp, #0]
 800b280:	6835      	ldr	r5, [r6, #0]
 800b282:	4690      	mov	r8, r2
 800b284:	47a8      	blx	r5
 800b286:	4d10      	ldr	r5, [pc, #64]	@ (800b2c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b288:	4606      	mov	r6, r0
 800b28a:	f8a5 9000 	strh.w	r9, [r5]
 800b28e:	f7ff ffdb 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b292:	6803      	ldr	r3, [r0, #0]
 800b294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b296:	4798      	blx	r3
 800b298:	b128      	cbz	r0, 800b2a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b29a:	2801      	cmp	r0, #1
 800b29c:	d00b      	beq.n	800b2b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b29e:	4630      	mov	r0, r6
 800b2a0:	b005      	add	sp, #20
 800b2a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b2a6:	882b      	ldrh	r3, [r5, #0]
 800b2a8:	fb08 7203 	mla	r2, r8, r3, r7
 800b2ac:	9b03      	ldr	r3, [sp, #12]
 800b2ae:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b2b2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b2b4:	e7f3      	b.n	800b29e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b2b6:	882a      	ldrh	r2, [r5, #0]
 800b2b8:	9b03      	ldr	r3, [sp, #12]
 800b2ba:	fb08 7202 	mla	r2, r8, r2, r7
 800b2be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b2c2:	1a9a      	subs	r2, r3, r2
 800b2c4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b2c6:	e7ea      	b.n	800b29e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b2c8:	20082f02 	.word	0x20082f02

0800b2cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b2cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2ce:	b08b      	sub	sp, #44	@ 0x2c
 800b2d0:	4617      	mov	r7, r2
 800b2d2:	4604      	mov	r4, r0
 800b2d4:	460e      	mov	r6, r1
 800b2d6:	461d      	mov	r5, r3
 800b2d8:	f7ff ffb6 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b2dc:	6803      	ldr	r3, [r0, #0]
 800b2de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2e0:	4798      	blx	r3
 800b2e2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b2e6:	9007      	str	r0, [sp, #28]
 800b2e8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b2ec:	4b0d      	ldr	r3, [pc, #52]	@ (800b324 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b2ee:	6822      	ldr	r2, [r4, #0]
 800b2f0:	881b      	ldrh	r3, [r3, #0]
 800b2f2:	4631      	mov	r1, r6
 800b2f4:	9306      	str	r3, [sp, #24]
 800b2f6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b2fa:	4620      	mov	r0, r4
 800b2fc:	9305      	str	r3, [sp, #20]
 800b2fe:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b302:	9304      	str	r3, [sp, #16]
 800b304:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b308:	9303      	str	r3, [sp, #12]
 800b30a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b30e:	9302      	str	r3, [sp, #8]
 800b310:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b314:	e9cd 5300 	strd	r5, r3, [sp]
 800b318:	463b      	mov	r3, r7
 800b31a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800b31c:	2200      	movs	r2, #0
 800b31e:	47a8      	blx	r5
 800b320:	b00b      	add	sp, #44	@ 0x2c
 800b322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b324:	20082f02 	.word	0x20082f02

0800b328 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b328:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b32c:	4698      	mov	r8, r3
 800b32e:	6803      	ldr	r3, [r0, #0]
 800b330:	b08b      	sub	sp, #44	@ 0x2c
 800b332:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800b334:	4b14      	ldr	r3, [pc, #80]	@ (800b388 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b336:	4617      	mov	r7, r2
 800b338:	f8b3 9000 	ldrh.w	r9, [r3]
 800b33c:	460e      	mov	r6, r1
 800b33e:	4604      	mov	r4, r0
 800b340:	f7ff ff82 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b344:	6803      	ldr	r3, [r0, #0]
 800b346:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b348:	4798      	blx	r3
 800b34a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b34e:	2200      	movs	r2, #0
 800b350:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b354:	2302      	movs	r3, #2
 800b356:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b35a:	2301      	movs	r3, #1
 800b35c:	9305      	str	r3, [sp, #20]
 800b35e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b362:	4631      	mov	r1, r6
 800b364:	9304      	str	r3, [sp, #16]
 800b366:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b36a:	4620      	mov	r0, r4
 800b36c:	9303      	str	r3, [sp, #12]
 800b36e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b372:	9302      	str	r3, [sp, #8]
 800b374:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b378:	e9cd 8300 	strd	r8, r3, [sp]
 800b37c:	463b      	mov	r3, r7
 800b37e:	47a8      	blx	r5
 800b380:	b00b      	add	sp, #44	@ 0x2c
 800b382:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b386:	bf00      	nop
 800b388:	20082f02 	.word	0x20082f02

0800b38c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b38c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b390:	4698      	mov	r8, r3
 800b392:	6803      	ldr	r3, [r0, #0]
 800b394:	b087      	sub	sp, #28
 800b396:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800b398:	4b10      	ldr	r3, [pc, #64]	@ (800b3dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b39a:	460e      	mov	r6, r1
 800b39c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b3a0:	4617      	mov	r7, r2
 800b3a2:	4604      	mov	r4, r0
 800b3a4:	f7ff ff50 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b3a8:	6803      	ldr	r3, [r0, #0]
 800b3aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3ac:	4798      	blx	r3
 800b3ae:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b3b2:	f8cd 900c 	str.w	r9, [sp, #12]
 800b3b6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b3ba:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b3be:	463a      	mov	r2, r7
 800b3c0:	9302      	str	r3, [sp, #8]
 800b3c2:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b3c6:	4631      	mov	r1, r6
 800b3c8:	9301      	str	r3, [sp, #4]
 800b3ca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b3ce:	4620      	mov	r0, r4
 800b3d0:	9300      	str	r3, [sp, #0]
 800b3d2:	4643      	mov	r3, r8
 800b3d4:	47a8      	blx	r5
 800b3d6:	b007      	add	sp, #28
 800b3d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3dc:	20082f02 	.word	0x20082f02

0800b3e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b3e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3e4:	4604      	mov	r4, r0
 800b3e6:	b08f      	sub	sp, #60	@ 0x3c
 800b3e8:	4610      	mov	r0, r2
 800b3ea:	460d      	mov	r5, r1
 800b3ec:	4691      	mov	r9, r2
 800b3ee:	461e      	mov	r6, r3
 800b3f0:	f004 fd54 	bl	800fe9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b3f4:	2800      	cmp	r0, #0
 800b3f6:	f000 809d 	beq.w	800b534 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b3fa:	6823      	ldr	r3, [r4, #0]
 800b3fc:	4620      	mov	r0, r4
 800b3fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b400:	4798      	blx	r3
 800b402:	6823      	ldr	r3, [r4, #0]
 800b404:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800b598 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b408:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b40a:	4620      	mov	r0, r4
 800b40c:	4798      	blx	r3
 800b40e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b59c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b412:	f8bb 3000 	ldrh.w	r3, [fp]
 800b416:	4f5d      	ldr	r7, [pc, #372]	@ (800b58c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b418:	9301      	str	r3, [sp, #4]
 800b41a:	f8ba 3000 	ldrh.w	r3, [sl]
 800b41e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b422:	9302      	str	r3, [sp, #8]
 800b424:	883b      	ldrh	r3, [r7, #0]
 800b426:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b42a:	9303      	str	r3, [sp, #12]
 800b42c:	4b58      	ldr	r3, [pc, #352]	@ (800b590 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b42e:	4640      	mov	r0, r8
 800b430:	881a      	ldrh	r2, [r3, #0]
 800b432:	9305      	str	r3, [sp, #20]
 800b434:	9204      	str	r2, [sp, #16]
 800b436:	f004 fdc5 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b43a:	8038      	strh	r0, [r7, #0]
 800b43c:	4640      	mov	r0, r8
 800b43e:	f004 fdf5 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b442:	9b05      	ldr	r3, [sp, #20]
 800b444:	b280      	uxth	r0, r0
 800b446:	8018      	strh	r0, [r3, #0]
 800b448:	4b52      	ldr	r3, [pc, #328]	@ (800b594 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b44a:	781b      	ldrb	r3, [r3, #0]
 800b44c:	2b00      	cmp	r3, #0
 800b44e:	d174      	bne.n	800b53a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b450:	883b      	ldrh	r3, [r7, #0]
 800b452:	f8aa 0000 	strh.w	r0, [sl]
 800b456:	f8ab 3000 	strh.w	r3, [fp]
 800b45a:	4648      	mov	r0, r9
 800b45c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b460:	f004 fd1c 	bl	800fe9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b464:	2200      	movs	r2, #0
 800b466:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b46a:	4611      	mov	r1, r2
 800b46c:	4628      	mov	r0, r5
 800b46e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b472:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b476:	f7f7 ff2a 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 800b47a:	2301      	movs	r3, #1
 800b47c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b480:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b484:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b488:	2b00      	cmp	r3, #0
 800b48a:	dd5c      	ble.n	800b546 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b48c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b490:	2b00      	cmp	r3, #0
 800b492:	dd58      	ble.n	800b546 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b494:	462a      	mov	r2, r5
 800b496:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b49a:	ab0a      	add	r3, sp, #40	@ 0x28
 800b49c:	6851      	ldr	r1, [r2, #4]
 800b49e:	c303      	stmia	r3!, {r0, r1}
 800b4a0:	4631      	mov	r1, r6
 800b4a2:	a80a      	add	r0, sp, #40	@ 0x28
 800b4a4:	f7ff fbec 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800b4a8:	2100      	movs	r1, #0
 800b4aa:	4b38      	ldr	r3, [pc, #224]	@ (800b58c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b4ac:	910c      	str	r1, [sp, #48]	@ 0x30
 800b4ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4b2:	4b37      	ldr	r3, [pc, #220]	@ (800b590 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4b4:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b4b8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b4bc:	aa0a      	add	r2, sp, #40	@ 0x28
 800b4be:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b4c2:	ab08      	add	r3, sp, #32
 800b4c4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b4c8:	e883 0003 	stmia.w	r3, {r0, r1}
 800b4cc:	4618      	mov	r0, r3
 800b4ce:	a90c      	add	r1, sp, #48	@ 0x30
 800b4d0:	f7ff fbd6 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800b4d4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b4d6:	2b00      	cmp	r3, #0
 800b4d8:	d13c      	bne.n	800b554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b4da:	2000      	movs	r0, #0
 800b4dc:	2600      	movs	r6, #0
 800b4de:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b4e2:	696b      	ldr	r3, [r5, #20]
 800b4e4:	682a      	ldr	r2, [r5, #0]
 800b4e6:	616e      	str	r6, [r5, #20]
 800b4e8:	9305      	str	r3, [sp, #20]
 800b4ea:	6892      	ldr	r2, [r2, #8]
 800b4ec:	a908      	add	r1, sp, #32
 800b4ee:	4628      	mov	r0, r5
 800b4f0:	4790      	blx	r2
 800b4f2:	9b05      	ldr	r3, [sp, #20]
 800b4f4:	4652      	mov	r2, sl
 800b4f6:	616b      	str	r3, [r5, #20]
 800b4f8:	4649      	mov	r1, r9
 800b4fa:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b4fe:	4628      	mov	r0, r5
 800b500:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b504:	f7f7 fee3 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 800b508:	9a01      	ldr	r2, [sp, #4]
 800b50a:	4b23      	ldr	r3, [pc, #140]	@ (800b598 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b50c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b510:	801a      	strh	r2, [r3, #0]
 800b512:	9a02      	ldr	r2, [sp, #8]
 800b514:	4b21      	ldr	r3, [pc, #132]	@ (800b59c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b516:	4620      	mov	r0, r4
 800b518:	801a      	strh	r2, [r3, #0]
 800b51a:	9a03      	ldr	r2, [sp, #12]
 800b51c:	4b1b      	ldr	r3, [pc, #108]	@ (800b58c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b51e:	801a      	strh	r2, [r3, #0]
 800b520:	4b1b      	ldr	r3, [pc, #108]	@ (800b590 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b522:	9a04      	ldr	r2, [sp, #16]
 800b524:	801a      	strh	r2, [r3, #0]
 800b526:	6823      	ldr	r3, [r4, #0]
 800b528:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b52a:	4798      	blx	r3
 800b52c:	6823      	ldr	r3, [r4, #0]
 800b52e:	4620      	mov	r0, r4
 800b530:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b532:	4798      	blx	r3
 800b534:	b00f      	add	sp, #60	@ 0x3c
 800b536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b53a:	883b      	ldrh	r3, [r7, #0]
 800b53c:	f8ab 0000 	strh.w	r0, [fp]
 800b540:	f8aa 3000 	strh.w	r3, [sl]
 800b544:	e789      	b.n	800b45a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b546:	462a      	mov	r2, r5
 800b548:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b54c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b54e:	6851      	ldr	r1, [r2, #4]
 800b550:	c303      	stmia	r3!, {r0, r1}
 800b552:	e7a9      	b.n	800b4a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b554:	a807      	add	r0, sp, #28
 800b556:	f004 fe73 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b55a:	4606      	mov	r6, r0
 800b55c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b55e:	6803      	ldr	r3, [r0, #0]
 800b560:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b562:	4798      	blx	r3
 800b564:	4286      	cmp	r6, r0
 800b566:	d1b8      	bne.n	800b4da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b568:	f7ff fe6e 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b56c:	6803      	ldr	r3, [r0, #0]
 800b56e:	4606      	mov	r6, r0
 800b570:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b572:	a807      	add	r0, sp, #28
 800b574:	9305      	str	r3, [sp, #20]
 800b576:	f004 fe63 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b57a:	9b05      	ldr	r3, [sp, #20]
 800b57c:	4601      	mov	r1, r0
 800b57e:	4630      	mov	r0, r6
 800b580:	4798      	blx	r3
 800b582:	f080 0001 	eor.w	r0, r0, #1
 800b586:	b2c0      	uxtb	r0, r0
 800b588:	e7a8      	b.n	800b4dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b58a:	bf00      	nop
 800b58c:	20082efc 	.word	0x20082efc
 800b590:	20082efe 	.word	0x20082efe
 800b594:	20082f00 	.word	0x20082f00
 800b598:	20082f02 	.word	0x20082f02
 800b59c:	20082f04 	.word	0x20082f04

0800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b5a0:	b510      	push	{r4, lr}
 800b5a2:	4b07      	ldr	r3, [pc, #28]	@ (800b5c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b5a4:	4604      	mov	r4, r0
 800b5a6:	781b      	ldrb	r3, [r3, #0]
 800b5a8:	b13b      	cbz	r3, 800b5ba <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b5aa:	6803      	ldr	r3, [r0, #0]
 800b5ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b5ae:	4798      	blx	r3
 800b5b0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b5b2:	4283      	cmp	r3, r0
 800b5b4:	d101      	bne.n	800b5ba <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b5b6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b5b8:	bd10      	pop	{r4, pc}
 800b5ba:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b5bc:	e7fc      	b.n	800b5b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b5be:	bf00      	nop
 800b5c0:	20082f06 	.word	0x20082f06

0800b5c4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b5c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5c8:	461d      	mov	r5, r3
 800b5ca:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b5ce:	2400      	movs	r4, #0
 800b5d0:	b08a      	sub	sp, #40	@ 0x28
 800b5d2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b5d6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b5da:	4690      	mov	r8, r2
 800b5dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b5e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b5e4:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b5e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b5ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b5f0:	4607      	mov	r7, r0
 800b5f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b5f6:	9404      	str	r4, [sp, #16]
 800b5f8:	f88d 4020 	strb.w	r4, [sp, #32]
 800b5fc:	f7ff ffd0 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b600:	fb06 8505 	mla	r5, r6, r5, r8
 800b604:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b608:	6878      	ldr	r0, [r7, #4]
 800b60a:	9505      	str	r5, [sp, #20]
 800b60c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b610:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b614:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b618:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b61c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b620:	6803      	ldr	r3, [r0, #0]
 800b622:	a901      	add	r1, sp, #4
 800b624:	685b      	ldr	r3, [r3, #4]
 800b626:	4798      	blx	r3
 800b628:	b00a      	add	sp, #40	@ 0x28
 800b62a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b62e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b62e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b632:	2400      	movs	r4, #0
 800b634:	461d      	mov	r5, r3
 800b636:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b63a:	4691      	mov	r9, r2
 800b63c:	b08b      	sub	sp, #44	@ 0x2c
 800b63e:	4688      	mov	r8, r1
 800b640:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b644:	4607      	mov	r7, r0
 800b646:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b64a:	9404      	str	r4, [sp, #16]
 800b64c:	f7ff ffa8 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b650:	fb06 9505 	mla	r5, r6, r5, r9
 800b654:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b658:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b65c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b660:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b664:	6878      	ldr	r0, [r7, #4]
 800b666:	9505      	str	r5, [sp, #20]
 800b668:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b66c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b670:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b674:	f8cd 8010 	str.w	r8, [sp, #16]
 800b678:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b67c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b680:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b684:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b688:	6803      	ldr	r3, [r0, #0]
 800b68a:	a901      	add	r1, sp, #4
 800b68c:	685b      	ldr	r3, [r3, #4]
 800b68e:	4798      	blx	r3
 800b690:	b00b      	add	sp, #44	@ 0x2c
 800b692:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b698 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b69c:	4698      	mov	r8, r3
 800b69e:	2300      	movs	r3, #0
 800b6a0:	b08a      	sub	sp, #40	@ 0x28
 800b6a2:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b6a6:	4606      	mov	r6, r0
 800b6a8:	2d0b      	cmp	r5, #11
 800b6aa:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b6ae:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b6b2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b6b6:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b6ba:	9304      	str	r3, [sp, #16]
 800b6bc:	d137      	bne.n	800b72e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b6be:	2380      	movs	r3, #128	@ 0x80
 800b6c0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6c4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b6c8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b6cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6d0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b6d4:	4630      	mov	r0, r6
 800b6d6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6da:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b6de:	9203      	str	r2, [sp, #12]
 800b6e0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6e4:	f7ff ff5c 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6e8:	2c0b      	cmp	r4, #11
 800b6ea:	bf8c      	ite	hi
 800b6ec:	2100      	movhi	r1, #0
 800b6ee:	4b1b      	ldrls	r3, [pc, #108]	@ (800b75c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b6f0:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b6f4:	bf98      	it	ls
 800b6f6:	5d19      	ldrbls	r1, [r3, r4]
 800b6f8:	fb02 8307 	mla	r3, r2, r7, r8
 800b6fc:	10c9      	asrs	r1, r1, #3
 800b6fe:	fb01 0003 	mla	r0, r1, r3, r0
 800b702:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b706:	9005      	str	r0, [sp, #20]
 800b708:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b70c:	2300      	movs	r3, #0
 800b70e:	6870      	ldr	r0, [r6, #4]
 800b710:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b714:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b718:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b71c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b720:	6803      	ldr	r3, [r0, #0]
 800b722:	a901      	add	r1, sp, #4
 800b724:	685b      	ldr	r3, [r3, #4]
 800b726:	4798      	blx	r3
 800b728:	b00a      	add	sp, #40	@ 0x28
 800b72a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b72e:	2d02      	cmp	r5, #2
 800b730:	d109      	bne.n	800b746 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b732:	28ff      	cmp	r0, #255	@ 0xff
 800b734:	d105      	bne.n	800b742 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b736:	f1bc 0f00 	cmp.w	ip, #0
 800b73a:	bf14      	ite	ne
 800b73c:	2340      	movne	r3, #64	@ 0x40
 800b73e:	2320      	moveq	r3, #32
 800b740:	e7be      	b.n	800b6c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b742:	2340      	movs	r3, #64	@ 0x40
 800b744:	e7bc      	b.n	800b6c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b746:	28ff      	cmp	r0, #255	@ 0xff
 800b748:	d105      	bne.n	800b756 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b74a:	f1bc 0f00 	cmp.w	ip, #0
 800b74e:	bf14      	ite	ne
 800b750:	2304      	movne	r3, #4
 800b752:	2301      	moveq	r3, #1
 800b754:	e7b4      	b.n	800b6c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b756:	2304      	movs	r3, #4
 800b758:	e7b2      	b.n	800b6c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b75a:	bf00      	nop
 800b75c:	080359f8 	.word	0x080359f8

0800b760 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b764:	b08b      	sub	sp, #44	@ 0x2c
 800b766:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b76a:	461d      	mov	r5, r3
 800b76c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b770:	bf14      	ite	ne
 800b772:	2308      	movne	r3, #8
 800b774:	2302      	moveq	r3, #2
 800b776:	2400      	movs	r4, #0
 800b778:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b77c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b780:	4688      	mov	r8, r1
 800b782:	4693      	mov	fp, r2
 800b784:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b788:	9404      	str	r4, [sp, #16]
 800b78a:	4607      	mov	r7, r0
 800b78c:	f7ff ff08 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b790:	2e0b      	cmp	r6, #11
 800b792:	bf98      	it	ls
 800b794:	4b15      	ldrls	r3, [pc, #84]	@ (800b7ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b796:	fb05 b50a 	mla	r5, r5, sl, fp
 800b79a:	bf98      	it	ls
 800b79c:	5d9c      	ldrbls	r4, [r3, r6]
 800b79e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b7a2:	10e4      	asrs	r4, r4, #3
 800b7a4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7a8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b7ac:	fb04 0405 	mla	r4, r4, r5, r0
 800b7b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7b4:	2300      	movs	r3, #0
 800b7b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b7ba:	6878      	ldr	r0, [r7, #4]
 800b7bc:	9405      	str	r4, [sp, #20]
 800b7be:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7c2:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b7c6:	f8cd 8010 	str.w	r8, [sp, #16]
 800b7ca:	f88d 9020 	strb.w	r9, [sp, #32]
 800b7ce:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b7d2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b7d6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b7da:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b7de:	6803      	ldr	r3, [r0, #0]
 800b7e0:	a901      	add	r1, sp, #4
 800b7e2:	685b      	ldr	r3, [r3, #4]
 800b7e4:	4798      	blx	r3
 800b7e6:	b00b      	add	sp, #44	@ 0x2c
 800b7e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7ec:	080359f8 	.word	0x080359f8

0800b7f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b7f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7f4:	461e      	mov	r6, r3
 800b7f6:	4b0a      	ldr	r3, [pc, #40]	@ (800b820 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b7f8:	460f      	mov	r7, r1
 800b7fa:	881d      	ldrh	r5, [r3, #0]
 800b7fc:	4690      	mov	r8, r2
 800b7fe:	f7ff fd23 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b802:	6803      	ldr	r3, [r0, #0]
 800b804:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b806:	4798      	blx	r3
 800b808:	280b      	cmp	r0, #11
 800b80a:	bf8e      	itee	hi
 800b80c:	2400      	movhi	r4, #0
 800b80e:	4b05      	ldrls	r3, [pc, #20]	@ (800b824 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b810:	5c1c      	ldrbls	r4, [r3, r0]
 800b812:	fb08 7005 	mla	r0, r8, r5, r7
 800b816:	10e4      	asrs	r4, r4, #3
 800b818:	fb04 6000 	mla	r0, r4, r0, r6
 800b81c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b820:	20082f02 	.word	0x20082f02
 800b824:	080359f8 	.word	0x080359f8

0800b828 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b828:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b82a:	2500      	movs	r5, #0
 800b82c:	b08b      	sub	sp, #44	@ 0x2c
 800b82e:	461f      	mov	r7, r3
 800b830:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b834:	4604      	mov	r4, r0
 800b836:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b83a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b83e:	4616      	mov	r6, r2
 800b840:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b844:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b848:	9504      	str	r5, [sp, #16]
 800b84a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b84e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b852:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b856:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b85a:	f88d 3020 	strb.w	r3, [sp, #32]
 800b85e:	f7ff fe9f 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b862:	463a      	mov	r2, r7
 800b864:	4631      	mov	r1, r6
 800b866:	4603      	mov	r3, r0
 800b868:	4620      	mov	r0, r4
 800b86a:	f7ff ffc1 	bl	800b7f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b86e:	4b0e      	ldr	r3, [pc, #56]	@ (800b8a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b870:	9005      	str	r0, [sp, #20]
 800b872:	881b      	ldrh	r3, [r3, #0]
 800b874:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b878:	f7ff fce6 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b87c:	6803      	ldr	r3, [r0, #0]
 800b87e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b880:	4798      	blx	r3
 800b882:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b884:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b888:	9304      	str	r3, [sp, #16]
 800b88a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b88e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b892:	6860      	ldr	r0, [r4, #4]
 800b894:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b898:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b89c:	6803      	ldr	r3, [r0, #0]
 800b89e:	a901      	add	r1, sp, #4
 800b8a0:	685b      	ldr	r3, [r3, #4]
 800b8a2:	4798      	blx	r3
 800b8a4:	b00b      	add	sp, #44	@ 0x2c
 800b8a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8a8:	20082f02 	.word	0x20082f02

0800b8ac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b8ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8ae:	b08d      	sub	sp, #52	@ 0x34
 800b8b0:	466b      	mov	r3, sp
 800b8b2:	e883 0006 	stmia.w	r3, {r1, r2}
 800b8b6:	2300      	movs	r3, #0
 800b8b8:	2501      	movs	r5, #1
 800b8ba:	9306      	str	r3, [sp, #24]
 800b8bc:	6803      	ldr	r3, [r0, #0]
 800b8be:	9503      	str	r5, [sp, #12]
 800b8c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b8c2:	4604      	mov	r4, r0
 800b8c4:	f8bd 6000 	ldrh.w	r6, [sp]
 800b8c8:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b8cc:	4798      	blx	r3
 800b8ce:	463a      	mov	r2, r7
 800b8d0:	4631      	mov	r1, r6
 800b8d2:	4603      	mov	r3, r0
 800b8d4:	4620      	mov	r0, r4
 800b8d6:	f7ff ff8b 	bl	800b7f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b8da:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b8dc:	9004      	str	r0, [sp, #16]
 800b8de:	9307      	str	r3, [sp, #28]
 800b8e0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b8e4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b8e8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b8ec:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b8f0:	4b0e      	ldr	r3, [pc, #56]	@ (800b92c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b8f2:	881b      	ldrh	r3, [r3, #0]
 800b8f4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b8f8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b8fc:	f7ff fca4 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b900:	6803      	ldr	r3, [r0, #0]
 800b902:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b904:	4798      	blx	r3
 800b906:	23ff      	movs	r3, #255	@ 0xff
 800b908:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b90c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b910:	6860      	ldr	r0, [r4, #4]
 800b912:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b916:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b91a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b91e:	6803      	ldr	r3, [r0, #0]
 800b920:	a903      	add	r1, sp, #12
 800b922:	685b      	ldr	r3, [r3, #4]
 800b924:	4798      	blx	r3
 800b926:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b928:	b00d      	add	sp, #52	@ 0x34
 800b92a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b92c:	20082f02 	.word	0x20082f02

0800b930 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b934:	b08c      	sub	sp, #48	@ 0x30
 800b936:	466d      	mov	r5, sp
 800b938:	461e      	mov	r6, r3
 800b93a:	2300      	movs	r3, #0
 800b93c:	e885 0006 	stmia.w	r5, {r1, r2}
 800b940:	2501      	movs	r5, #1
 800b942:	9306      	str	r3, [sp, #24]
 800b944:	6803      	ldr	r3, [r0, #0]
 800b946:	9503      	str	r5, [sp, #12]
 800b948:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b94a:	4604      	mov	r4, r0
 800b94c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b950:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b954:	4798      	blx	r3
 800b956:	4642      	mov	r2, r8
 800b958:	4639      	mov	r1, r7
 800b95a:	4603      	mov	r3, r0
 800b95c:	4620      	mov	r0, r4
 800b95e:	f7ff ff47 	bl	800b7f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b962:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b966:	9004      	str	r0, [sp, #16]
 800b968:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b96c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b970:	9607      	str	r6, [sp, #28]
 800b972:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b976:	4b10      	ldr	r3, [pc, #64]	@ (800b9b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b978:	881b      	ldrh	r3, [r3, #0]
 800b97a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b97e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b980:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b984:	f7ff fc60 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 800b988:	6803      	ldr	r3, [r0, #0]
 800b98a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b98c:	4798      	blx	r3
 800b98e:	23ff      	movs	r3, #255	@ 0xff
 800b990:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b994:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b998:	6860      	ldr	r0, [r4, #4]
 800b99a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b99e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b9a2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b9a6:	6803      	ldr	r3, [r0, #0]
 800b9a8:	a903      	add	r1, sp, #12
 800b9aa:	685b      	ldr	r3, [r3, #4]
 800b9ac:	4798      	blx	r3
 800b9ae:	4630      	mov	r0, r6
 800b9b0:	b00c      	add	sp, #48	@ 0x30
 800b9b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9b6:	bf00      	nop
 800b9b8:	20082f02 	.word	0x20082f02

0800b9bc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b9bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9be:	b085      	sub	sp, #20
 800b9c0:	ac02      	add	r4, sp, #8
 800b9c2:	e884 0006 	stmia.w	r4, {r1, r2}
 800b9c6:	4605      	mov	r5, r0
 800b9c8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b9cc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b9d0:	f7ff fde6 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9d4:	463a      	mov	r2, r7
 800b9d6:	4603      	mov	r3, r0
 800b9d8:	4631      	mov	r1, r6
 800b9da:	4628      	mov	r0, r5
 800b9dc:	f7ff ff08 	bl	800b7f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9e0:	4a05      	ldr	r2, [pc, #20]	@ (800b9f8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b9e2:	682b      	ldr	r3, [r5, #0]
 800b9e4:	8812      	ldrh	r2, [r2, #0]
 800b9e6:	9200      	str	r2, [sp, #0]
 800b9e8:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b9ea:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b9ee:	4603      	mov	r3, r0
 800b9f0:	4628      	mov	r0, r5
 800b9f2:	47b0      	blx	r6
 800b9f4:	b005      	add	sp, #20
 800b9f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9f8:	20082f02 	.word	0x20082f02

0800b9fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b9fc:	b570      	push	{r4, r5, r6, lr}
 800b9fe:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800ba02:	4604      	mov	r4, r0
 800ba04:	b19b      	cbz	r3, 800ba2e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ba06:	2002      	movs	r0, #2
 800ba08:	f7f5 fbd6 	bl	80011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ba0c:	2300      	movs	r3, #0
 800ba0e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ba12:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800ba16:	6823      	ldr	r3, [r4, #0]
 800ba18:	4620      	mov	r0, r4
 800ba1a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800ba1e:	f7ff fdbf 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba22:	462b      	mov	r3, r5
 800ba24:	4601      	mov	r1, r0
 800ba26:	4620      	mov	r0, r4
 800ba28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba2c:	4718      	bx	r3
 800ba2e:	bd70      	pop	{r4, r5, r6, pc}

0800ba30 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800ba30:	b570      	push	{r4, r5, r6, lr}
 800ba32:	4605      	mov	r5, r0
 800ba34:	460c      	mov	r4, r1
 800ba36:	2003      	movs	r0, #3
 800ba38:	b149      	cbz	r1, 800ba4e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800ba3a:	f7f5 fb89 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ba3e:	6928      	ldr	r0, [r5, #16]
 800ba40:	b168      	cbz	r0, 800ba5e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba42:	2101      	movs	r1, #1
 800ba44:	6803      	ldr	r3, [r0, #0]
 800ba46:	695b      	ldr	r3, [r3, #20]
 800ba48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba4c:	4718      	bx	r3
 800ba4e:	f7f5 fb99 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ba52:	6928      	ldr	r0, [r5, #16]
 800ba54:	b118      	cbz	r0, 800ba5e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba56:	6803      	ldr	r3, [r0, #0]
 800ba58:	4621      	mov	r1, r4
 800ba5a:	695b      	ldr	r3, [r3, #20]
 800ba5c:	e7f4      	b.n	800ba48 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800ba5e:	bd70      	pop	{r4, r5, r6, pc}

0800ba60 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ba60:	b538      	push	{r3, r4, r5, lr}
 800ba62:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800ba66:	4604      	mov	r4, r0
 800ba68:	428b      	cmp	r3, r1
 800ba6a:	460d      	mov	r5, r1
 800ba6c:	d006      	beq.n	800ba7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ba6e:	6803      	ldr	r3, [r0, #0]
 800ba70:	b929      	cbnz	r1, 800ba7e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ba72:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800ba76:	4798      	blx	r3
 800ba78:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800ba7c:	bd38      	pop	{r3, r4, r5, pc}
 800ba7e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ba82:	e7f8      	b.n	800ba76 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800ba84 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ba84:	b510      	push	{r4, lr}
 800ba86:	4b0d      	ldr	r3, [pc, #52]	@ (800babc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800ba88:	4604      	mov	r4, r0
 800ba8a:	781b      	ldrb	r3, [r3, #0]
 800ba8c:	b95b      	cbnz	r3, 800baa6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba8e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ba92:	2b02      	cmp	r3, #2
 800ba94:	d007      	beq.n	800baa6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba96:	6840      	ldr	r0, [r0, #4]
 800ba98:	f000 f91c 	bl	800bcd4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ba9c:	b118      	cbz	r0, 800baa6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba9e:	6862      	ldr	r2, [r4, #4]
 800baa0:	7a53      	ldrb	r3, [r2, #9]
 800baa2:	2b00      	cmp	r3, #0
 800baa4:	d0fc      	beq.n	800baa0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800baa6:	f7f6 fa99 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800baaa:	4620      	mov	r0, r4
 800baac:	2100      	movs	r1, #0
 800baae:	f7ff ffd7 	bl	800ba60 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bab2:	4620      	mov	r0, r4
 800bab4:	f7ff fd74 	bl	800b5a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bab8:	bd10      	pop	{r4, pc}
 800baba:	bf00      	nop
 800babc:	20082f06 	.word	0x20082f06

0800bac0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bac0:	b570      	push	{r4, r5, r6, lr}
 800bac2:	4604      	mov	r4, r0
 800bac4:	6803      	ldr	r3, [r0, #0]
 800bac6:	b919      	cbnz	r1, 800bad0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bacc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bace:	4718      	bx	r3
 800bad0:	2200      	movs	r2, #0
 800bad2:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800bad6:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800bada:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800badc:	4798      	blx	r3
 800bade:	2101      	movs	r1, #1
 800bae0:	4605      	mov	r5, r0
 800bae2:	6863      	ldr	r3, [r4, #4]
 800bae4:	4620      	mov	r0, r4
 800bae6:	7299      	strb	r1, [r3, #10]
 800bae8:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800baec:	f7ff ffb8 	bl	800ba60 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800baf0:	4628      	mov	r0, r5
 800baf2:	bd70      	pop	{r4, r5, r6, pc}

0800baf4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800baf4:	2000      	movs	r0, #0
 800baf6:	4770      	bx	lr

0800baf8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800baf8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bafc:	1a13      	subs	r3, r2, r0
 800bafe:	4258      	negs	r0, r3
 800bb00:	4158      	adcs	r0, r3
 800bb02:	4770      	bx	lr

0800bb04 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bb04:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bb08:	1a9b      	subs	r3, r3, r2
 800bb0a:	2b00      	cmp	r3, #0
 800bb0c:	bfdc      	itt	le
 800bb0e:	6882      	ldrle	r2, [r0, #8]
 800bb10:	189b      	addle	r3, r3, r2
 800bb12:	2b01      	cmp	r3, #1
 800bb14:	bfcc      	ite	gt
 800bb16:	2000      	movgt	r0, #0
 800bb18:	2001      	movle	r0, #1
 800bb1a:	4770      	bx	lr

0800bb1c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bb1c:	6902      	ldr	r2, [r0, #16]
 800bb1e:	6843      	ldr	r3, [r0, #4]
 800bb20:	2024      	movs	r0, #36	@ 0x24
 800bb22:	fb00 3002 	mla	r0, r0, r2, r3
 800bb26:	4770      	bx	lr

0800bb28 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bb28:	6803      	ldr	r3, [r0, #0]
 800bb2a:	691b      	ldr	r3, [r3, #16]
 800bb2c:	4718      	bx	r3

0800bb2e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bb2e:	2301      	movs	r3, #1
 800bb30:	b570      	push	{r4, r5, r6, lr}
 800bb32:	7203      	strb	r3, [r0, #8]
 800bb34:	4604      	mov	r4, r0
 800bb36:	6840      	ldr	r0, [r0, #4]
 800bb38:	6803      	ldr	r3, [r0, #0]
 800bb3a:	699b      	ldr	r3, [r3, #24]
 800bb3c:	4798      	blx	r3
 800bb3e:	6803      	ldr	r3, [r0, #0]
 800bb40:	4605      	mov	r5, r0
 800bb42:	2b40      	cmp	r3, #64	@ 0x40
 800bb44:	d00c      	beq.n	800bb60 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb46:	d810      	bhi.n	800bb6a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bb48:	2b04      	cmp	r3, #4
 800bb4a:	d01d      	beq.n	800bb88 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bb4c:	d804      	bhi.n	800bb58 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bb4e:	2b01      	cmp	r3, #1
 800bb50:	d006      	beq.n	800bb60 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb52:	2b02      	cmp	r3, #2
 800bb54:	d02c      	beq.n	800bbb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bb56:	bd70      	pop	{r4, r5, r6, pc}
 800bb58:	2b08      	cmp	r3, #8
 800bb5a:	d01d      	beq.n	800bb98 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bb5c:	2b20      	cmp	r3, #32
 800bb5e:	d1fa      	bne.n	800bb56 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bb60:	6823      	ldr	r3, [r4, #0]
 800bb62:	4620      	mov	r0, r4
 800bb64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bb66:	4798      	blx	r3
 800bb68:	e013      	b.n	800bb92 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bb6a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bb6e:	d0f7      	beq.n	800bb60 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb70:	d804      	bhi.n	800bb7c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bb72:	2b80      	cmp	r3, #128	@ 0x80
 800bb74:	d0f4      	beq.n	800bb60 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb76:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bb7a:	e7f0      	b.n	800bb5e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bb7c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bb80:	d0ee      	beq.n	800bb60 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb82:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bb86:	e7e5      	b.n	800bb54 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bb88:	6823      	ldr	r3, [r4, #0]
 800bb8a:	7f01      	ldrb	r1, [r0, #28]
 800bb8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb8e:	4620      	mov	r0, r4
 800bb90:	4798      	blx	r3
 800bb92:	6823      	ldr	r3, [r4, #0]
 800bb94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bb96:	e006      	b.n	800bba6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bb98:	6823      	ldr	r3, [r4, #0]
 800bb9a:	7f01      	ldrb	r1, [r0, #28]
 800bb9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb9e:	4620      	mov	r0, r4
 800bba0:	4798      	blx	r3
 800bba2:	6823      	ldr	r3, [r4, #0]
 800bba4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bba6:	4629      	mov	r1, r5
 800bba8:	4620      	mov	r0, r4
 800bbaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbae:	4718      	bx	r3
 800bbb0:	6823      	ldr	r3, [r4, #0]
 800bbb2:	4620      	mov	r0, r4
 800bbb4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bbb6:	4798      	blx	r3
 800bbb8:	e7f3      	b.n	800bba2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bbba <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bbba:	4770      	bx	lr

0800bbbc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bbbc:	4770      	bx	lr

0800bbbe <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bbbe:	4770      	bx	lr

0800bbc0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bbc0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bbc4:	1ad2      	subs	r2, r2, r3
 800bbc6:	2a00      	cmp	r2, #0
 800bbc8:	b510      	push	{r4, lr}
 800bbca:	bfdc      	itt	le
 800bbcc:	6884      	ldrle	r4, [r0, #8]
 800bbce:	1912      	addle	r2, r2, r4
 800bbd0:	2a01      	cmp	r2, #1
 800bbd2:	dd16      	ble.n	800bc02 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bbd4:	2424      	movs	r4, #36	@ 0x24
 800bbd6:	6842      	ldr	r2, [r0, #4]
 800bbd8:	fb04 2303 	mla	r3, r4, r3, r2
 800bbdc:	f101 0220 	add.w	r2, r1, #32
 800bbe0:	f851 4b04 	ldr.w	r4, [r1], #4
 800bbe4:	4291      	cmp	r1, r2
 800bbe6:	f843 4b04 	str.w	r4, [r3], #4
 800bbea:	d1f9      	bne.n	800bbe0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bbec:	780a      	ldrb	r2, [r1, #0]
 800bbee:	701a      	strb	r2, [r3, #0]
 800bbf0:	68c3      	ldr	r3, [r0, #12]
 800bbf2:	6882      	ldr	r2, [r0, #8]
 800bbf4:	3301      	adds	r3, #1
 800bbf6:	429a      	cmp	r2, r3
 800bbf8:	bfd8      	it	le
 800bbfa:	1a9b      	suble	r3, r3, r2
 800bbfc:	f3bf 8f5b 	dmb	ish
 800bc00:	60c3      	str	r3, [r0, #12]
 800bc02:	bd10      	pop	{r4, pc}

0800bc04 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bc04:	6903      	ldr	r3, [r0, #16]
 800bc06:	6882      	ldr	r2, [r0, #8]
 800bc08:	3301      	adds	r3, #1
 800bc0a:	429a      	cmp	r2, r3
 800bc0c:	bfd8      	it	le
 800bc0e:	1a9b      	suble	r3, r3, r2
 800bc10:	f3bf 8f5b 	dmb	ish
 800bc14:	6103      	str	r3, [r0, #16]
 800bc16:	4770      	bx	lr

0800bc18 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bc18:	b570      	push	{r4, r5, r6, lr}
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	460e      	mov	r6, r1
 800bc1e:	6860      	ldr	r0, [r4, #4]
 800bc20:	6803      	ldr	r3, [r0, #0]
 800bc22:	685b      	ldr	r3, [r3, #4]
 800bc24:	4798      	blx	r3
 800bc26:	2800      	cmp	r0, #0
 800bc28:	d1f9      	bne.n	800bc1e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bc2a:	4d0d      	ldr	r5, [pc, #52]	@ (800bc60 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bc2c:	6828      	ldr	r0, [r5, #0]
 800bc2e:	6803      	ldr	r3, [r0, #0]
 800bc30:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bc32:	4798      	blx	r3
 800bc34:	f7f6 f9e0 	bl	8001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bc38:	6828      	ldr	r0, [r5, #0]
 800bc3a:	2101      	movs	r1, #1
 800bc3c:	f7ff ff10 	bl	800ba60 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc40:	6860      	ldr	r0, [r4, #4]
 800bc42:	4631      	mov	r1, r6
 800bc44:	6803      	ldr	r3, [r0, #0]
 800bc46:	689b      	ldr	r3, [r3, #8]
 800bc48:	4798      	blx	r3
 800bc4a:	6823      	ldr	r3, [r4, #0]
 800bc4c:	4620      	mov	r0, r4
 800bc4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc50:	4798      	blx	r3
 800bc52:	6828      	ldr	r0, [r5, #0]
 800bc54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc58:	6803      	ldr	r3, [r0, #0]
 800bc5a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800bc5c:	4718      	bx	r3
 800bc5e:	bf00      	nop
 800bc60:	20082f08 	.word	0x20082f08

0800bc64 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bc64:	b508      	push	{r3, lr}
 800bc66:	f7f6 f9b9 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bc6e:	f7f6 b9bd 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bc72 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bc72:	b510      	push	{r4, lr}
 800bc74:	4604      	mov	r4, r0
 800bc76:	2114      	movs	r1, #20
 800bc78:	f025 fa6d 	bl	8031156 <_ZdlPvj>
 800bc7c:	4620      	mov	r0, r4
 800bc7e:	bd10      	pop	{r4, pc}

0800bc80 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bc80:	b570      	push	{r4, r5, r6, lr}
 800bc82:	4604      	mov	r4, r0
 800bc84:	6840      	ldr	r0, [r0, #4]
 800bc86:	6803      	ldr	r3, [r0, #0]
 800bc88:	681b      	ldr	r3, [r3, #0]
 800bc8a:	4798      	blx	r3
 800bc8c:	4605      	mov	r5, r0
 800bc8e:	b930      	cbnz	r0, 800bc9e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc90:	7a23      	ldrb	r3, [r4, #8]
 800bc92:	b123      	cbz	r3, 800bc9e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc94:	6860      	ldr	r0, [r4, #4]
 800bc96:	6803      	ldr	r3, [r0, #0]
 800bc98:	695b      	ldr	r3, [r3, #20]
 800bc9a:	4798      	blx	r3
 800bc9c:	7225      	strb	r5, [r4, #8]
 800bc9e:	6860      	ldr	r0, [r4, #4]
 800bca0:	6803      	ldr	r3, [r0, #0]
 800bca2:	681b      	ldr	r3, [r3, #0]
 800bca4:	4798      	blx	r3
 800bca6:	b928      	cbnz	r0, 800bcb4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bca8:	6823      	ldr	r3, [r4, #0]
 800bcaa:	4620      	mov	r0, r4
 800bcac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bcb2:	4718      	bx	r3
 800bcb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcb8:	f7f6 b9a6 	b.w	8002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bcbc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bcbc:	6082      	str	r2, [r0, #8]
 800bcbe:	2200      	movs	r2, #0
 800bcc0:	b510      	push	{r4, lr}
 800bcc2:	4c03      	ldr	r4, [pc, #12]	@ (800bcd0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bcc4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bcc8:	e9c0 4100 	strd	r4, r1, [r0]
 800bccc:	bd10      	pop	{r4, pc}
 800bcce:	bf00      	nop
 800bcd0:	08035a0c 	.word	0x08035a0c

0800bcd4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bcd4:	6840      	ldr	r0, [r0, #4]
 800bcd6:	6803      	ldr	r3, [r0, #0]
 800bcd8:	681b      	ldr	r3, [r3, #0]
 800bcda:	4718      	bx	r3

0800bcdc <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bcdc:	2300      	movs	r3, #0
 800bcde:	8083      	strh	r3, [r0, #4]
 800bce0:	80c3      	strh	r3, [r0, #6]
 800bce2:	8003      	strh	r3, [r0, #0]
 800bce4:	8043      	strh	r3, [r0, #2]
 800bce6:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800bcea:	2bff      	cmp	r3, #255	@ 0xff
 800bcec:	bf01      	itttt	eq
 800bcee:	890b      	ldrheq	r3, [r1, #8]
 800bcf0:	8083      	strheq	r3, [r0, #4]
 800bcf2:	894b      	ldrheq	r3, [r1, #10]
 800bcf4:	80c3      	strheq	r3, [r0, #6]
 800bcf6:	4770      	bx	lr

0800bcf8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bcf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bcfa:	4604      	mov	r4, r0
 800bcfc:	466b      	mov	r3, sp
 800bcfe:	6808      	ldr	r0, [r1, #0]
 800bd00:	6849      	ldr	r1, [r1, #4]
 800bd02:	c303      	stmia	r3!, {r0, r1}
 800bd04:	6823      	ldr	r3, [r4, #0]
 800bd06:	4669      	mov	r1, sp
 800bd08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bd0a:	4620      	mov	r0, r4
 800bd0c:	4798      	blx	r3
 800bd0e:	4b08      	ldr	r3, [pc, #32]	@ (800bd30 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bd10:	681b      	ldr	r3, [r3, #0]
 800bd12:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bd16:	b10a      	cbz	r2, 800bd1c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bd18:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bd1a:	b900      	cbnz	r0, 800bd1e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800bd1c:	6898      	ldr	r0, [r3, #8]
 800bd1e:	6803      	ldr	r3, [r0, #0]
 800bd20:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bd22:	6a1d      	ldr	r5, [r3, #32]
 800bd24:	4669      	mov	r1, sp
 800bd26:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800bd2a:	47a8      	blx	r5
 800bd2c:	b003      	add	sp, #12
 800bd2e:	bd30      	pop	{r4, r5, pc}
 800bd30:	20082f08 	.word	0x20082f08

0800bd34 <_ZN8touchgfx3BoxD1Ev>:
 800bd34:	4770      	bx	lr

0800bd36 <_ZN8touchgfx3BoxD0Ev>:
 800bd36:	b510      	push	{r4, lr}
 800bd38:	4604      	mov	r4, r0
 800bd3a:	212c      	movs	r1, #44	@ 0x2c
 800bd3c:	f025 fa0b 	bl	8031156 <_ZdlPvj>
 800bd40:	4620      	mov	r0, r4
 800bd42:	bd10      	pop	{r4, pc}

0800bd44 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800bd44:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800bd48:	b12a      	cbz	r2, 800bd56 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bd4a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bd4e:	b112      	cbz	r2, 800bd56 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bd50:	6803      	ldr	r3, [r0, #0]
 800bd52:	695b      	ldr	r3, [r3, #20]
 800bd54:	4718      	bx	r3
 800bd56:	4770      	bx	lr

0800bd58 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800bd58:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800bd5c:	4770      	bx	lr

0800bd5e <_ZNK8touchgfx6Button17invalidateContentEv>:
 800bd5e:	b508      	push	{r3, lr}
 800bd60:	f890 3032 	ldrb.w	r3, [r0, #50]	@ 0x32
 800bd64:	b10b      	cbz	r3, 800bd6a <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
 800bd66:	f7f7 fa9b 	bl	80032a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800bd6a:	bd08      	pop	{r3, pc}

0800bd6c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 800bd6c:	4770      	bx	lr

0800bd6e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800bd6e:	4770      	bx	lr

0800bd70 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800bd70:	b510      	push	{r4, lr}
 800bd72:	4604      	mov	r4, r0
 800bd74:	213c      	movs	r1, #60	@ 0x3c
 800bd76:	f025 f9ee 	bl	8031156 <_ZdlPvj>
 800bd7a:	4620      	mov	r0, r4
 800bd7c:	bd10      	pop	{r4, pc}

0800bd7e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800bd7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd82:	461c      	mov	r4, r3
 800bd84:	4606      	mov	r6, r0
 800bd86:	9f06      	ldr	r7, [sp, #24]
 800bd88:	f004 fbd5 	bl	8010536 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800bd8c:	8823      	ldrh	r3, [r4, #0]
 800bd8e:	f04f 0802 	mov.w	r8, #2
 800bd92:	86b3      	strh	r3, [r6, #52]	@ 0x34
 800bd94:	883b      	ldrh	r3, [r7, #0]
 800bd96:	4638      	mov	r0, r7
 800bd98:	86f3      	strh	r3, [r6, #54]	@ 0x36
 800bd9a:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800bd9e:	f004 f911 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bda2:	fb95 f5f8 	sdiv	r5, r5, r8
 800bda6:	fb90 f0f8 	sdiv	r0, r0, r8
 800bdaa:	b2ad      	uxth	r5, r5
 800bdac:	1a2d      	subs	r5, r5, r0
 800bdae:	8735      	strh	r5, [r6, #56]	@ 0x38
 800bdb0:	4638      	mov	r0, r7
 800bdb2:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800bdb6:	f004 f939 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bdba:	fb94 f4f8 	sdiv	r4, r4, r8
 800bdbe:	fb90 f0f8 	sdiv	r0, r0, r8
 800bdc2:	b2a4      	uxth	r4, r4
 800bdc4:	1a24      	subs	r4, r4, r0
 800bdc6:	8774      	strh	r4, [r6, #58]	@ 0x3a
 800bdc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bdcc <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800bdcc:	b510      	push	{r4, lr}
 800bdce:	4604      	mov	r4, r0
 800bdd0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800bdd2:	b150      	cbz	r0, 800bdea <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bdd4:	6803      	ldr	r3, [r0, #0]
 800bdd6:	68db      	ldr	r3, [r3, #12]
 800bdd8:	4798      	blx	r3
 800bdda:	b130      	cbz	r0, 800bdea <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bddc:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800bdde:	4621      	mov	r1, r4
 800bde0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bde4:	6803      	ldr	r3, [r0, #0]
 800bde6:	689b      	ldr	r3, [r3, #8]
 800bde8:	4718      	bx	r3
 800bdea:	bd10      	pop	{r4, pc}

0800bdec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800bdec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdf0:	4604      	mov	r4, r0
 800bdf2:	b08c      	sub	sp, #48	@ 0x30
 800bdf4:	460d      	mov	r5, r1
 800bdf6:	f004 fbd1 	bl	801059c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800bdfa:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800bdfe:	2b00      	cmp	r3, #0
 800be00:	d05d      	beq.n	800bebe <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800be02:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800be04:	a805      	add	r0, sp, #20
 800be06:	f8ad 3014 	strh.w	r3, [sp, #20]
 800be0a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 800be0e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 800be12:	f004 f8d7 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be16:	4606      	mov	r6, r0
 800be18:	a805      	add	r0, sp, #20
 800be1a:	f004 f907 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800be1e:	6869      	ldr	r1, [r5, #4]
 800be20:	f8ad 001e 	strh.w	r0, [sp, #30]
 800be24:	6828      	ldr	r0, [r5, #0]
 800be26:	ab08      	add	r3, sp, #32
 800be28:	ad08      	add	r5, sp, #32
 800be2a:	c303      	stmia	r3!, {r0, r1}
 800be2c:	a906      	add	r1, sp, #24
 800be2e:	4628      	mov	r0, r5
 800be30:	f8ad 8018 	strh.w	r8, [sp, #24]
 800be34:	f8ad 701a 	strh.w	r7, [sp, #26]
 800be38:	f8ad 601c 	strh.w	r6, [sp, #28]
 800be3c:	f7fe ff20 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800be40:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800be44:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800be48:	429a      	cmp	r2, r3
 800be4a:	d035      	beq.n	800beb8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be4c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 800be50:	2b00      	cmp	r3, #0
 800be52:	dd31      	ble.n	800beb8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be54:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 800be58:	2b00      	cmp	r3, #0
 800be5a:	dd2d      	ble.n	800beb8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be5c:	2300      	movs	r3, #0
 800be5e:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 800be62:	6823      	ldr	r3, [r4, #0]
 800be64:	a90a      	add	r1, sp, #40	@ 0x28
 800be66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be68:	4620      	mov	r0, r4
 800be6a:	4798      	blx	r3
 800be6c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800be70:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 800be72:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800be76:	1a9b      	subs	r3, r3, r2
 800be78:	f8ad 3020 	strh.w	r3, [sp, #32]
 800be7c:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 800be7e:	1ac9      	subs	r1, r1, r3
 800be80:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800be84:	490f      	ldr	r1, [pc, #60]	@ (800bec4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800be86:	6809      	ldr	r1, [r1, #0]
 800be88:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 800be8c:	b108      	cbz	r0, 800be92 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800be8e:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 800be90:	b900      	cbnz	r0, 800be94 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800be92:	6888      	ldr	r0, [r1, #8]
 800be94:	2601      	movs	r6, #1
 800be96:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 800be9a:	440b      	add	r3, r1
 800be9c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 800bea0:	b21b      	sxth	r3, r3
 800bea2:	440a      	add	r2, r1
 800bea4:	6801      	ldr	r1, [r0, #0]
 800bea6:	9602      	str	r6, [sp, #8]
 800bea8:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800beac:	b212      	sxth	r2, r2
 800beae:	e9cd 5400 	strd	r5, r4, [sp]
 800beb2:	688c      	ldr	r4, [r1, #8]
 800beb4:	a905      	add	r1, sp, #20
 800beb6:	47a0      	blx	r4
 800beb8:	b00c      	add	sp, #48	@ 0x30
 800beba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bebe:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800bec0:	e7a0      	b.n	800be04 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800bec2:	bf00      	nop
 800bec4:	20082f08 	.word	0x20082f08

0800bec8 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800bec8:	2101      	movs	r1, #1
 800beca:	2200      	movs	r2, #0
 800becc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800bed0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800bed4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bed8:	b510      	push	{r4, lr}
 800beda:	4c0d      	ldr	r4, [pc, #52]	@ (800bf10 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800bedc:	8082      	strh	r2, [r0, #4]
 800bede:	80c2      	strh	r2, [r0, #6]
 800bee0:	8102      	strh	r2, [r0, #8]
 800bee2:	8142      	strh	r2, [r0, #10]
 800bee4:	8182      	strh	r2, [r0, #12]
 800bee6:	81c2      	strh	r2, [r0, #14]
 800bee8:	8202      	strh	r2, [r0, #16]
 800beea:	8242      	strh	r2, [r0, #18]
 800beec:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bef0:	61c2      	str	r2, [r0, #28]
 800bef2:	8402      	strh	r2, [r0, #32]
 800bef4:	8442      	strh	r2, [r0, #34]	@ 0x22
 800bef6:	6282      	str	r2, [r0, #40]	@ 0x28
 800bef8:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800befc:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800befe:	8601      	strh	r1, [r0, #48]	@ 0x30
 800bf00:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800bf04:	6004      	str	r4, [r0, #0]
 800bf06:	8681      	strh	r1, [r0, #52]	@ 0x34
 800bf08:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800bf0a:	8702      	strh	r2, [r0, #56]	@ 0x38
 800bf0c:	8742      	strh	r2, [r0, #58]	@ 0x3a
 800bf0e:	bd10      	pop	{r4, pc}
 800bf10:	08035a98 	.word	0x08035a98

0800bf14 <_ZN8touchgfx5ImageD1Ev>:
 800bf14:	4770      	bx	lr

0800bf16 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800bf16:	b570      	push	{r4, r5, r6, lr}
 800bf18:	880b      	ldrh	r3, [r1, #0]
 800bf1a:	4604      	mov	r4, r0
 800bf1c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800bf1e:	4608      	mov	r0, r1
 800bf20:	460d      	mov	r5, r1
 800bf22:	f004 f84f 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf26:	4606      	mov	r6, r0
 800bf28:	4628      	mov	r0, r5
 800bf2a:	f004 f87f 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bf2e:	4605      	mov	r5, r0
 800bf30:	6823      	ldr	r3, [r4, #0]
 800bf32:	4631      	mov	r1, r6
 800bf34:	4620      	mov	r0, r4
 800bf36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bf38:	4798      	blx	r3
 800bf3a:	6823      	ldr	r3, [r4, #0]
 800bf3c:	4629      	mov	r1, r5
 800bf3e:	4620      	mov	r0, r4
 800bf40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf44:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bf46:	4718      	bx	r3

0800bf48 <_ZN8touchgfx5ImageD0Ev>:
 800bf48:	b510      	push	{r4, lr}
 800bf4a:	4604      	mov	r4, r0
 800bf4c:	212c      	movs	r1, #44	@ 0x2c
 800bf4e:	f025 f902 	bl	8031156 <_ZdlPvj>
 800bf52:	4620      	mov	r0, r4
 800bf54:	bd10      	pop	{r4, pc}

0800bf56 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800bf56:	b510      	push	{r4, lr}
 800bf58:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800bf5c:	4604      	mov	r4, r0
 800bf5e:	2bff      	cmp	r3, #255	@ 0xff
 800bf60:	d006      	beq.n	800bf70 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800bf62:	2300      	movs	r3, #0
 800bf64:	8003      	strh	r3, [r0, #0]
 800bf66:	8043      	strh	r3, [r0, #2]
 800bf68:	8083      	strh	r3, [r0, #4]
 800bf6a:	80c3      	strh	r3, [r0, #6]
 800bf6c:	4620      	mov	r0, r4
 800bf6e:	bd10      	pop	{r4, pc}
 800bf70:	3126      	adds	r1, #38	@ 0x26
 800bf72:	f004 f88f 	bl	8010094 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800bf76:	e7f9      	b.n	800bf6c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800bf78 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800bf78:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800bf7c:	b12a      	cbz	r2, 800bf8a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf7e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bf82:	b112      	cbz	r2, 800bf8a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf84:	6803      	ldr	r3, [r0, #0]
 800bf86:	695b      	ldr	r3, [r3, #20]
 800bf88:	4718      	bx	r3
 800bf8a:	4770      	bx	lr

0800bf8c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800bf8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf90:	4604      	mov	r4, r0
 800bf92:	2500      	movs	r5, #0
 800bf94:	f854 3b26 	ldr.w	r3, [r4], #38
 800bf98:	b088      	sub	sp, #32
 800bf9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf9c:	460f      	mov	r7, r1
 800bf9e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800bfa2:	a904      	add	r1, sp, #16
 800bfa4:	4606      	mov	r6, r0
 800bfa6:	4798      	blx	r3
 800bfa8:	4620      	mov	r0, r4
 800bfaa:	f004 f80b 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bfae:	4680      	mov	r8, r0
 800bfb0:	4620      	mov	r0, r4
 800bfb2:	f004 f83b 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bfb6:	9506      	str	r5, [sp, #24]
 800bfb8:	ad06      	add	r5, sp, #24
 800bfba:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bfbe:	4639      	mov	r1, r7
 800bfc0:	4628      	mov	r0, r5
 800bfc2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800bfc6:	f7fe fe5b 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800bfca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800bfce:	2b00      	cmp	r3, #0
 800bfd0:	dd19      	ble.n	800c006 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bfd2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800bfd6:	2b00      	cmp	r3, #0
 800bfd8:	dd15      	ble.n	800c006 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bfda:	4b0c      	ldr	r3, [pc, #48]	@ (800c00c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800bfdc:	681b      	ldr	r3, [r3, #0]
 800bfde:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bfe2:	b10a      	cbz	r2, 800bfe8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800bfe4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bfe6:	b900      	cbnz	r0, 800bfea <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800bfe8:	6898      	ldr	r0, [r3, #8]
 800bfea:	2701      	movs	r7, #1
 800bfec:	6801      	ldr	r1, [r0, #0]
 800bfee:	9702      	str	r7, [sp, #8]
 800bff0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800bff4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800bff8:	e9cd 5600 	strd	r5, r6, [sp]
 800bffc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c000:	688d      	ldr	r5, [r1, #8]
 800c002:	4621      	mov	r1, r4
 800c004:	47a8      	blx	r5
 800c006:	b008      	add	sp, #32
 800c008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c00c:	20082f08 	.word	0x20082f08

0800c010 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c010:	b510      	push	{r4, lr}
 800c012:	6803      	ldr	r3, [r0, #0]
 800c014:	460c      	mov	r4, r1
 800c016:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c018:	4798      	blx	r3
 800c01a:	1b03      	subs	r3, r0, r4
 800c01c:	4258      	negs	r0, r3
 800c01e:	4158      	adcs	r0, r3
 800c020:	bd10      	pop	{r4, pc}
	...

0800c024 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c024:	4b01      	ldr	r3, [pc, #4]	@ (800c02c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c026:	6019      	str	r1, [r3, #0]
 800c028:	4770      	bx	lr
 800c02a:	bf00      	nop
 800c02c:	20082f10 	.word	0x20082f10

0800c030 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c034:	4696      	mov	lr, r2
 800c036:	4614      	mov	r4, r2
 800c038:	4605      	mov	r5, r0
 800c03a:	460e      	mov	r6, r1
 800c03c:	461f      	mov	r7, r3
 800c03e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c042:	b097      	sub	sp, #92	@ 0x5c
 800c044:	f10d 0c1c 	add.w	ip, sp, #28
 800c048:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c04c:	f8de 3000 	ldr.w	r3, [lr]
 800c050:	f104 0e14 	add.w	lr, r4, #20
 800c054:	f8cc 3000 	str.w	r3, [ip]
 800c058:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c05c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c060:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c064:	f8de 3000 	ldr.w	r3, [lr]
 800c068:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c06c:	f8cc 3000 	str.w	r3, [ip]
 800c070:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c074:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c078:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c07c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c080:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c084:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c088:	f8de 3000 	ldr.w	r3, [lr]
 800c08c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c08e:	f8cc 3000 	str.w	r3, [ip]
 800c092:	9201      	str	r2, [sp, #4]
 800c094:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c098:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c09a:	682b      	ldr	r3, [r5, #0]
 800c09c:	9200      	str	r2, [sp, #0]
 800c09e:	f8cd 8008 	str.w	r8, [sp, #8]
 800c0a2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c0a6:	aa07      	add	r2, sp, #28
 800c0a8:	463b      	mov	r3, r7
 800c0aa:	4631      	mov	r1, r6
 800c0ac:	4628      	mov	r0, r5
 800c0ae:	47d8      	blx	fp
 800c0b0:	46a6      	mov	lr, r4
 800c0b2:	f10d 0c1c 	add.w	ip, sp, #28
 800c0b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c0ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c0be:	f8de 3000 	ldr.w	r3, [lr]
 800c0c2:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c0c6:	f8cc 3000 	str.w	r3, [ip]
 800c0ca:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c0ce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c0d2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c0d6:	f8de 3000 	ldr.w	r3, [lr]
 800c0da:	343c      	adds	r4, #60	@ 0x3c
 800c0dc:	f8cc 3000 	str.w	r3, [ip]
 800c0e0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c0e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c0e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c0ea:	6823      	ldr	r3, [r4, #0]
 800c0ec:	4631      	mov	r1, r6
 800c0ee:	f8cc 3000 	str.w	r3, [ip]
 800c0f2:	682b      	ldr	r3, [r5, #0]
 800c0f4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c0f8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c0fa:	f8cd 8008 	str.w	r8, [sp, #8]
 800c0fe:	9201      	str	r2, [sp, #4]
 800c100:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c102:	4628      	mov	r0, r5
 800c104:	9200      	str	r2, [sp, #0]
 800c106:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c108:	aa07      	add	r2, sp, #28
 800c10a:	463b      	mov	r3, r7
 800c10c:	47a0      	blx	r4
 800c10e:	b017      	add	sp, #92	@ 0x5c
 800c110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c114 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c118:	b08d      	sub	sp, #52	@ 0x34
 800c11a:	4688      	mov	r8, r1
 800c11c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c11e:	f8d3 c000 	ldr.w	ip, [r3]
 800c122:	680f      	ldr	r7, [r1, #0]
 800c124:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c128:	eba7 070c 	sub.w	r7, r7, ip
 800c12c:	42bc      	cmp	r4, r7
 800c12e:	bfa8      	it	ge
 800c130:	463c      	movge	r4, r7
 800c132:	ee07 4a90 	vmov	s15, r4
 800c136:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c13a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c13e:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c142:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c146:	edd3 6a07 	vldr	s13, [r3, #28]
 800c14a:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c14e:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c152:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c156:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c15a:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c15e:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c162:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c166:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c168:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c16c:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c170:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c174:	eb09 0e0c 	add.w	lr, r9, ip
 800c178:	4571      	cmp	r1, lr
 800c17a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c17e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c182:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c186:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c18a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c18e:	f340 808c 	ble.w	800c2aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c192:	eba1 060e 	sub.w	r6, r1, lr
 800c196:	fb96 f5f4 	sdiv	r5, r6, r4
 800c19a:	ee07 5a10 	vmov	s14, r5
 800c19e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c1a2:	2d00      	cmp	r5, #0
 800c1a4:	fb04 6615 	mls	r6, r4, r5, r6
 800c1a8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c1ac:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c1b0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c1b4:	dd12      	ble.n	800c1dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c1b6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c1ba:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c1be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c1c2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c1c6:	bf14      	ite	ne
 800c1c8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c1cc:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c1d0:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c1d4:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c1d8:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c1dc:	fb05 f204 	mul.w	r2, r5, r4
 800c1e0:	1abf      	subs	r7, r7, r2
 800c1e2:	4494      	add	ip, r2
 800c1e4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c1e8:	4411      	add	r1, r2
 800c1ea:	eb09 020c 	add.w	r2, r9, ip
 800c1ee:	443a      	add	r2, r7
 800c1f0:	b209      	sxth	r1, r1
 800c1f2:	428a      	cmp	r2, r1
 800c1f4:	bfc4      	itt	gt
 800c1f6:	eba1 0209 	subgt.w	r2, r1, r9
 800c1fa:	eba2 070c 	subgt.w	r7, r2, ip
 800c1fe:	2f00      	cmp	r7, #0
 800c200:	dd50      	ble.n	800c2a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c202:	fb97 f1f4 	sdiv	r1, r7, r4
 800c206:	fb04 7211 	mls	r2, r4, r1, r7
 800c20a:	b90a      	cbnz	r2, 800c210 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c20c:	4622      	mov	r2, r4
 800c20e:	3901      	subs	r1, #1
 800c210:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c214:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c218:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c21c:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c220:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c224:	ee17 7a90 	vmov	r7, s15
 800c228:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c22c:	eef0 6a42 	vmov.f32	s13, s4
 800c230:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c234:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c238:	ee17 ca90 	vmov	ip, s15
 800c23c:	eeb0 7a61 	vmov.f32	s14, s3
 800c240:	6840      	ldr	r0, [r0, #4]
 800c242:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c246:	f8d0 a000 	ldr.w	sl, [r0]
 800c24a:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c24c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c24e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c252:	9008      	str	r0, [sp, #32]
 800c254:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c256:	695b      	ldr	r3, [r3, #20]
 800c258:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c25c:	fb9c fcf4 	sdiv	ip, ip, r4
 800c260:	445b      	add	r3, fp
 800c262:	9307      	str	r3, [sp, #28]
 800c264:	ee16 3a90 	vmov	r3, s13
 800c268:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c26c:	fb0c 3306 	mla	r3, ip, r6, r3
 800c270:	fb97 f7f4 	sdiv	r7, r7, r4
 800c274:	9302      	str	r3, [sp, #8]
 800c276:	ee17 3a10 	vmov	r3, s14
 800c27a:	2900      	cmp	r1, #0
 800c27c:	bfcc      	ite	gt
 800c27e:	46a1      	movgt	r9, r4
 800c280:	4691      	movle	r9, r2
 800c282:	44b6      	add	lr, r6
 800c284:	fb04 e505 	mla	r5, r4, r5, lr
 800c288:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c28c:	fb07 3706 	mla	r7, r7, r6, r3
 800c290:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c294:	e9cd 4700 	strd	r4, r7, [sp]
 800c298:	eba9 0306 	sub.w	r3, r9, r6
 800c29c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c2a0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c2a2:	47a0      	blx	r4
 800c2a4:	b00d      	add	sp, #52	@ 0x34
 800c2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2aa:	2500      	movs	r5, #0
 800c2ac:	462e      	mov	r6, r5
 800c2ae:	e799      	b.n	800c1e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c2b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2b4:	461d      	mov	r5, r3
 800c2b6:	b0db      	sub	sp, #364	@ 0x16c
 800c2b8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c2bc:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c2be:	930a      	str	r3, [sp, #40]	@ 0x28
 800c2c0:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c2c4:	9009      	str	r0, [sp, #36]	@ 0x24
 800c2c6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c2c8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c2cc:	4614      	mov	r4, r2
 800c2ce:	9310      	str	r3, [sp, #64]	@ 0x40
 800c2d0:	6803      	ldr	r3, [r0, #0]
 800c2d2:	4629      	mov	r1, r5
 800c2d4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c2d6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c2da:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c2de:	47b8      	blx	r7
 800c2e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c2e2:	6058      	str	r0, [r3, #4]
 800c2e4:	2800      	cmp	r0, #0
 800c2e6:	f000 83a1 	beq.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2ea:	ed94 7a02 	vldr	s14, [r4, #8]
 800c2ee:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c2f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2f6:	682b      	ldr	r3, [r5, #0]
 800c2f8:	9314      	str	r3, [sp, #80]	@ 0x50
 800c2fa:	686b      	ldr	r3, [r5, #4]
 800c2fc:	9315      	str	r3, [sp, #84]	@ 0x54
 800c2fe:	4bc1      	ldr	r3, [pc, #772]	@ (800c604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c300:	7819      	ldrb	r1, [r3, #0]
 800c302:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c306:	2900      	cmp	r1, #0
 800c308:	bf16      	itet	ne
 800c30a:	4619      	movne	r1, r3
 800c30c:	4611      	moveq	r1, r2
 800c30e:	4613      	movne	r3, r2
 800c310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c314:	9116      	str	r1, [sp, #88]	@ 0x58
 800c316:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c31a:	f240 8387 	bls.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c31e:	ed94 7a07 	vldr	s14, [r4, #28]
 800c322:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c32a:	f240 837f 	bls.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c32e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c332:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c33a:	f240 8377 	bls.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c33e:	6822      	ldr	r2, [r4, #0]
 800c340:	4bb1      	ldr	r3, [pc, #708]	@ (800c608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c342:	429a      	cmp	r2, r3
 800c344:	f2c0 8372 	blt.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c348:	49b0      	ldr	r1, [pc, #704]	@ (800c60c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c34a:	6963      	ldr	r3, [r4, #20]
 800c34c:	428a      	cmp	r2, r1
 800c34e:	f300 836d 	bgt.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c352:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c356:	48ae      	ldr	r0, [pc, #696]	@ (800c610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c358:	33ff      	adds	r3, #255	@ 0xff
 800c35a:	4283      	cmp	r3, r0
 800c35c:	f200 8366 	bhi.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c360:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c362:	4dac      	ldr	r5, [pc, #688]	@ (800c614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c364:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c368:	33ff      	adds	r3, #255	@ 0xff
 800c36a:	42ab      	cmp	r3, r5
 800c36c:	f200 835e 	bhi.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c370:	6862      	ldr	r2, [r4, #4]
 800c372:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c376:	33ff      	adds	r3, #255	@ 0xff
 800c378:	4283      	cmp	r3, r0
 800c37a:	f200 8357 	bhi.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c37e:	69a1      	ldr	r1, [r4, #24]
 800c380:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c384:	33ff      	adds	r3, #255	@ 0xff
 800c386:	4283      	cmp	r3, r0
 800c388:	f200 8350 	bhi.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c38c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c38e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c392:	30ff      	adds	r0, #255	@ 0xff
 800c394:	42a8      	cmp	r0, r5
 800c396:	f200 8349 	bhi.w	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c39a:	428a      	cmp	r2, r1
 800c39c:	f280 8110 	bge.w	800c5c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c3a0:	429a      	cmp	r2, r3
 800c3a2:	f300 8119 	bgt.w	800c5d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c3a6:	4299      	cmp	r1, r3
 800c3a8:	f280 811d 	bge.w	800c5e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c3ac:	2502      	movs	r5, #2
 800c3ae:	2701      	movs	r7, #1
 800c3b0:	46a9      	mov	r9, r5
 800c3b2:	46b8      	mov	r8, r7
 800c3b4:	f04f 0a00 	mov.w	sl, #0
 800c3b8:	4621      	mov	r1, r4
 800c3ba:	a849      	add	r0, sp, #292	@ 0x124
 800c3bc:	f003 fb38 	bl	800fa30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c3c0:	4622      	mov	r2, r4
 800c3c2:	4653      	mov	r3, sl
 800c3c4:	a949      	add	r1, sp, #292	@ 0x124
 800c3c6:	f8cd 9000 	str.w	r9, [sp]
 800c3ca:	a819      	add	r0, sp, #100	@ 0x64
 800c3cc:	f003 fc62 	bl	800fc94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3d0:	4622      	mov	r2, r4
 800c3d2:	4653      	mov	r3, sl
 800c3d4:	a949      	add	r1, sp, #292	@ 0x124
 800c3d6:	f8cd 8000 	str.w	r8, [sp]
 800c3da:	a829      	add	r0, sp, #164	@ 0xa4
 800c3dc:	f003 fc5a 	bl	800fc94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3e0:	4643      	mov	r3, r8
 800c3e2:	4622      	mov	r2, r4
 800c3e4:	a949      	add	r1, sp, #292	@ 0x124
 800c3e6:	f8cd 9000 	str.w	r9, [sp]
 800c3ea:	a839      	add	r0, sp, #228	@ 0xe4
 800c3ec:	f003 fc52 	bl	800fc94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3f0:	42af      	cmp	r7, r5
 800c3f2:	bfb5      	itete	lt
 800c3f4:	2300      	movlt	r3, #0
 800c3f6:	2301      	movge	r3, #1
 800c3f8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800c3fa:	930e      	strge	r3, [sp, #56]	@ 0x38
 800c3fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c3fe:	af12      	add	r7, sp, #72	@ 0x48
 800c400:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c404:	bfb9      	ittee	lt
 800c406:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800c408:	ac19      	addlt	r4, sp, #100	@ 0x64
 800c40a:	ad19      	addge	r5, sp, #100	@ 0x64
 800c40c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800c40e:	e887 0003 	stmia.w	r7, {r0, r1}
 800c412:	b928      	cbnz	r0, 800c420 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c414:	4b80      	ldr	r3, [pc, #512]	@ (800c618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c416:	6818      	ldr	r0, [r3, #0]
 800c418:	6803      	ldr	r3, [r0, #0]
 800c41a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c41c:	4798      	blx	r3
 800c41e:	6038      	str	r0, [r7, #0]
 800c420:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c422:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c426:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c42a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800c42c:	930c      	str	r3, [sp, #48]	@ 0x30
 800c42e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c430:	6963      	ldr	r3, [r4, #20]
 800c432:	440b      	add	r3, r1
 800c434:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c438:	4408      	add	r0, r1
 800c43a:	b200      	sxth	r0, r0
 800c43c:	4283      	cmp	r3, r0
 800c43e:	900d      	str	r0, [sp, #52]	@ 0x34
 800c440:	f280 80dd 	bge.w	800c5fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c444:	428b      	cmp	r3, r1
 800c446:	da08      	bge.n	800c45a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c448:	2a00      	cmp	r2, #0
 800c44a:	dd06      	ble.n	800c45a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c44c:	1acb      	subs	r3, r1, r3
 800c44e:	429a      	cmp	r2, r3
 800c450:	f2c0 80e4 	blt.w	800c61c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c454:	2b00      	cmp	r3, #0
 800c456:	f300 80e2 	bgt.w	800c61e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c45a:	6967      	ldr	r7, [r4, #20]
 800c45c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c45e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c462:	443b      	add	r3, r7
 800c464:	461f      	mov	r7, r3
 800c466:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c468:	1bdf      	subs	r7, r3, r7
 800c46a:	4297      	cmp	r7, r2
 800c46c:	bfa8      	it	ge
 800c46e:	4617      	movge	r7, r2
 800c470:	2f00      	cmp	r7, #0
 800c472:	f340 8166 	ble.w	800c742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c476:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c478:	6829      	ldr	r1, [r5, #0]
 800c47a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c47e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c482:	4411      	add	r1, r2
 800c484:	4299      	cmp	r1, r3
 800c486:	6820      	ldr	r0, [r4, #0]
 800c488:	dd1a      	ble.n	800c4c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c48a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c48e:	4402      	add	r2, r0
 800c490:	440b      	add	r3, r1
 800c492:	b21b      	sxth	r3, r3
 800c494:	429a      	cmp	r2, r3
 800c496:	dc13      	bgt.n	800c4c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c498:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c49a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c49c:	a912      	add	r1, sp, #72	@ 0x48
 800c49e:	681b      	ldr	r3, [r3, #0]
 800c4a0:	9206      	str	r2, [sp, #24]
 800c4a2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c4a4:	9500      	str	r5, [sp, #0]
 800c4a6:	9205      	str	r2, [sp, #20]
 800c4a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c4aa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c4ac:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c4b0:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c4b2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c4b6:	aa49      	add	r2, sp, #292	@ 0x124
 800c4b8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c4bc:	4623      	mov	r3, r4
 800c4be:	47c8      	blx	r9
 800c4c0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c4c4:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c4c8:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c4cc:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c4d0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c4d4:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c4d8:	ed94 6a08 	vldr	s12, [r4, #32]
 800c4dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c4e0:	edd4 6a07 	vldr	s13, [r4, #28]
 800c4e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c4e8:	441a      	add	r2, r3
 800c4ea:	6963      	ldr	r3, [r4, #20]
 800c4ec:	68a1      	ldr	r1, [r4, #8]
 800c4ee:	3301      	adds	r3, #1
 800c4f0:	6163      	str	r3, [r4, #20]
 800c4f2:	69a3      	ldr	r3, [r4, #24]
 800c4f4:	6022      	str	r2, [r4, #0]
 800c4f6:	3b01      	subs	r3, #1
 800c4f8:	61a3      	str	r3, [r4, #24]
 800c4fa:	6923      	ldr	r3, [r4, #16]
 800c4fc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c500:	440b      	add	r3, r1
 800c502:	68e1      	ldr	r1, [r4, #12]
 800c504:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c508:	428b      	cmp	r3, r1
 800c50a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c50e:	6123      	str	r3, [r4, #16]
 800c510:	db15      	blt.n	800c53e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c512:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c516:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c51a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c51e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c522:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c526:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c52a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c52e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c532:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c536:	3201      	adds	r2, #1
 800c538:	1a5b      	subs	r3, r3, r1
 800c53a:	6022      	str	r2, [r4, #0]
 800c53c:	6123      	str	r3, [r4, #16]
 800c53e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c542:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c546:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c54a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c54e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c552:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c556:	ed95 6a08 	vldr	s12, [r5, #32]
 800c55a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c55e:	edd5 6a07 	vldr	s13, [r5, #28]
 800c562:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c566:	441a      	add	r2, r3
 800c568:	696b      	ldr	r3, [r5, #20]
 800c56a:	68a9      	ldr	r1, [r5, #8]
 800c56c:	3301      	adds	r3, #1
 800c56e:	616b      	str	r3, [r5, #20]
 800c570:	69ab      	ldr	r3, [r5, #24]
 800c572:	602a      	str	r2, [r5, #0]
 800c574:	3b01      	subs	r3, #1
 800c576:	61ab      	str	r3, [r5, #24]
 800c578:	692b      	ldr	r3, [r5, #16]
 800c57a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c57e:	440b      	add	r3, r1
 800c580:	68e9      	ldr	r1, [r5, #12]
 800c582:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c586:	428b      	cmp	r3, r1
 800c588:	edc5 6a07 	vstr	s13, [r5, #28]
 800c58c:	612b      	str	r3, [r5, #16]
 800c58e:	db15      	blt.n	800c5bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800c590:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c594:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c598:	edc5 6a07 	vstr	s13, [r5, #28]
 800c59c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c5a0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c5a4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c5a8:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c5ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c5b0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c5b4:	3201      	adds	r2, #1
 800c5b6:	1a5b      	subs	r3, r3, r1
 800c5b8:	602a      	str	r2, [r5, #0]
 800c5ba:	612b      	str	r3, [r5, #16]
 800c5bc:	3f01      	subs	r7, #1
 800c5be:	e757      	b.n	800c470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800c5c0:	4299      	cmp	r1, r3
 800c5c2:	dc13      	bgt.n	800c5ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800c5c4:	429a      	cmp	r2, r3
 800c5c6:	da14      	bge.n	800c5f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800c5c8:	2502      	movs	r5, #2
 800c5ca:	2703      	movs	r7, #3
 800c5cc:	46a9      	mov	r9, r5
 800c5ce:	f04f 0800 	mov.w	r8, #0
 800c5d2:	f04f 0a01 	mov.w	sl, #1
 800c5d6:	e6ef      	b.n	800c3b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c5d8:	2501      	movs	r5, #1
 800c5da:	2700      	movs	r7, #0
 800c5dc:	46a9      	mov	r9, r5
 800c5de:	46b8      	mov	r8, r7
 800c5e0:	f04f 0a02 	mov.w	sl, #2
 800c5e4:	e6e8      	b.n	800c3b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c5e6:	2501      	movs	r5, #1
 800c5e8:	2702      	movs	r7, #2
 800c5ea:	e6e1      	b.n	800c3b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800c5ec:	2500      	movs	r5, #0
 800c5ee:	2701      	movs	r7, #1
 800c5f0:	e7f4      	b.n	800c5dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800c5f2:	2702      	movs	r7, #2
 800c5f4:	2503      	movs	r5, #3
 800c5f6:	f04f 0900 	mov.w	r9, #0
 800c5fa:	46b8      	mov	r8, r7
 800c5fc:	e7e9      	b.n	800c5d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800c5fe:	4613      	mov	r3, r2
 800c600:	e728      	b.n	800c454 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800c602:	bf00      	nop
 800c604:	20082f00 	.word	0x20082f00
 800c608:	fffd8f01 	.word	0xfffd8f01
 800c60c:	00027100 	.word	0x00027100
 800c610:	0004e1ff 	.word	0x0004e1ff
 800c614:	0004e1fe 	.word	0x0004e1fe
 800c618:	20082f08 	.word	0x20082f08
 800c61c:	4613      	mov	r3, r2
 800c61e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800c622:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800c626:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800c62a:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800c62e:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800c632:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800c636:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800c63a:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800c63e:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800c642:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800c646:	469e      	mov	lr, r3
 800c648:	469c      	mov	ip, r3
 800c64a:	f04f 0900 	mov.w	r9, #0
 800c64e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c650:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800c652:	9111      	str	r1, [sp, #68]	@ 0x44
 800c654:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800c658:	f1bc 0f00 	cmp.w	ip, #0
 800c65c:	d147      	bne.n	800c6ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800c65e:	eb03 0c07 	add.w	ip, r3, r7
 800c662:	1ad7      	subs	r7, r2, r3
 800c664:	f1b9 0f00 	cmp.w	r9, #0
 800c668:	d009      	beq.n	800c67e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800c66a:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800c66e:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800c672:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800c676:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800c67a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800c67c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800c67e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c682:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c686:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c68a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c68e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c692:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c696:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c69a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c69e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c6a2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c6a6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c6aa:	f04f 0800 	mov.w	r8, #0
 800c6ae:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c6b0:	9111      	str	r1, [sp, #68]	@ 0x44
 800c6b2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c6b6:	f1be 0f00 	cmp.w	lr, #0
 800c6ba:	d031      	beq.n	800c720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800c6bc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c6be:	4450      	add	r0, sl
 800c6c0:	4431      	add	r1, r6
 800c6c2:	4549      	cmp	r1, r9
 800c6c4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c6c8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c6cc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c6d0:	db08      	blt.n	800c6e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800c6d2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c6d6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c6da:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c6de:	3001      	adds	r0, #1
 800c6e0:	eba1 0109 	sub.w	r1, r1, r9
 800c6e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c6e8:	f04f 0801 	mov.w	r8, #1
 800c6ec:	e7e3      	b.n	800c6b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800c6ee:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c6f0:	4450      	add	r0, sl
 800c6f2:	4431      	add	r1, r6
 800c6f4:	4541      	cmp	r1, r8
 800c6f6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c6fa:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c6fe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c702:	db08      	blt.n	800c716 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800c704:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c708:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c70c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c710:	3001      	adds	r0, #1
 800c712:	eba1 0108 	sub.w	r1, r1, r8
 800c716:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c71a:	f04f 0901 	mov.w	r9, #1
 800c71e:	e79b      	b.n	800c658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800c720:	449c      	add	ip, r3
 800c722:	1aff      	subs	r7, r7, r3
 800c724:	f1b8 0f00 	cmp.w	r8, #0
 800c728:	d009      	beq.n	800c73e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800c72a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c72e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c732:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c736:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c73a:	9019      	str	r0, [sp, #100]	@ 0x64
 800c73c:	911d      	str	r1, [sp, #116]	@ 0x74
 800c73e:	1ad2      	subs	r2, r2, r3
 800c740:	e68b      	b.n	800c45a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c742:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c744:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800c746:	2b00      	cmp	r3, #0
 800c748:	f000 80d1 	beq.w	800c8ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800c74c:	ad19      	add	r5, sp, #100	@ 0x64
 800c74e:	ac39      	add	r4, sp, #228	@ 0xe4
 800c750:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c752:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c756:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c75a:	930c      	str	r3, [sp, #48]	@ 0x30
 800c75c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c75e:	6963      	ldr	r3, [r4, #20]
 800c760:	440b      	add	r3, r1
 800c762:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c766:	4408      	add	r0, r1
 800c768:	b200      	sxth	r0, r0
 800c76a:	4283      	cmp	r3, r0
 800c76c:	900d      	str	r0, [sp, #52]	@ 0x34
 800c76e:	f280 80c1 	bge.w	800c8f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800c772:	428b      	cmp	r3, r1
 800c774:	da08      	bge.n	800c788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c776:	2a00      	cmp	r2, #0
 800c778:	dd06      	ble.n	800c788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c77a:	1acb      	subs	r3, r1, r3
 800c77c:	429a      	cmp	r2, r3
 800c77e:	f2c0 80bb 	blt.w	800c8f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800c782:	2b00      	cmp	r3, #0
 800c784:	f300 80b9 	bgt.w	800c8fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800c788:	6967      	ldr	r7, [r4, #20]
 800c78a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c78c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c790:	443b      	add	r3, r7
 800c792:	461f      	mov	r7, r3
 800c794:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c796:	1bdf      	subs	r7, r3, r7
 800c798:	4297      	cmp	r7, r2
 800c79a:	bfa8      	it	ge
 800c79c:	4617      	movge	r7, r2
 800c79e:	2f00      	cmp	r7, #0
 800c7a0:	f340 813c 	ble.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800c7a4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c7a6:	6829      	ldr	r1, [r5, #0]
 800c7a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c7ac:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c7b0:	4411      	add	r1, r2
 800c7b2:	4299      	cmp	r1, r3
 800c7b4:	6820      	ldr	r0, [r4, #0]
 800c7b6:	dd1a      	ble.n	800c7ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c7b8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c7bc:	4402      	add	r2, r0
 800c7be:	440b      	add	r3, r1
 800c7c0:	b21b      	sxth	r3, r3
 800c7c2:	429a      	cmp	r2, r3
 800c7c4:	dc13      	bgt.n	800c7ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c7c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c7c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c7ca:	a912      	add	r1, sp, #72	@ 0x48
 800c7cc:	681b      	ldr	r3, [r3, #0]
 800c7ce:	9206      	str	r2, [sp, #24]
 800c7d0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c7d2:	9500      	str	r5, [sp, #0]
 800c7d4:	9205      	str	r2, [sp, #20]
 800c7d6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c7d8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c7da:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c7de:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c7e0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c7e4:	aa49      	add	r2, sp, #292	@ 0x124
 800c7e6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c7ea:	4623      	mov	r3, r4
 800c7ec:	47c8      	blx	r9
 800c7ee:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c7f2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c7f6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c7fa:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c7fe:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c802:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c806:	ed94 6a08 	vldr	s12, [r4, #32]
 800c80a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c80e:	edd4 6a07 	vldr	s13, [r4, #28]
 800c812:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c816:	441a      	add	r2, r3
 800c818:	6963      	ldr	r3, [r4, #20]
 800c81a:	68a1      	ldr	r1, [r4, #8]
 800c81c:	3301      	adds	r3, #1
 800c81e:	6163      	str	r3, [r4, #20]
 800c820:	69a3      	ldr	r3, [r4, #24]
 800c822:	6022      	str	r2, [r4, #0]
 800c824:	3b01      	subs	r3, #1
 800c826:	61a3      	str	r3, [r4, #24]
 800c828:	6923      	ldr	r3, [r4, #16]
 800c82a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c82e:	440b      	add	r3, r1
 800c830:	68e1      	ldr	r1, [r4, #12]
 800c832:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c836:	428b      	cmp	r3, r1
 800c838:	edc4 6a07 	vstr	s13, [r4, #28]
 800c83c:	6123      	str	r3, [r4, #16]
 800c83e:	db15      	blt.n	800c86c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800c840:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c844:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c848:	edc4 6a07 	vstr	s13, [r4, #28]
 800c84c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c850:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c854:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c858:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c85c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c860:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c864:	3201      	adds	r2, #1
 800c866:	1a5b      	subs	r3, r3, r1
 800c868:	6022      	str	r2, [r4, #0]
 800c86a:	6123      	str	r3, [r4, #16]
 800c86c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c870:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c874:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c878:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c87c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c880:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c884:	ed95 6a08 	vldr	s12, [r5, #32]
 800c888:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c88c:	edd5 6a07 	vldr	s13, [r5, #28]
 800c890:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c894:	441a      	add	r2, r3
 800c896:	696b      	ldr	r3, [r5, #20]
 800c898:	68a9      	ldr	r1, [r5, #8]
 800c89a:	3301      	adds	r3, #1
 800c89c:	616b      	str	r3, [r5, #20]
 800c89e:	69ab      	ldr	r3, [r5, #24]
 800c8a0:	602a      	str	r2, [r5, #0]
 800c8a2:	3b01      	subs	r3, #1
 800c8a4:	61ab      	str	r3, [r5, #24]
 800c8a6:	692b      	ldr	r3, [r5, #16]
 800c8a8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c8ac:	440b      	add	r3, r1
 800c8ae:	68e9      	ldr	r1, [r5, #12]
 800c8b0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c8b4:	428b      	cmp	r3, r1
 800c8b6:	edc5 6a07 	vstr	s13, [r5, #28]
 800c8ba:	612b      	str	r3, [r5, #16]
 800c8bc:	db15      	blt.n	800c8ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800c8be:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c8c2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c8c6:	edc5 6a07 	vstr	s13, [r5, #28]
 800c8ca:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c8ce:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c8d2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c8d6:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c8da:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c8de:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c8e2:	3201      	adds	r2, #1
 800c8e4:	1a5b      	subs	r3, r3, r1
 800c8e6:	602a      	str	r2, [r5, #0]
 800c8e8:	612b      	str	r3, [r5, #16]
 800c8ea:	3f01      	subs	r7, #1
 800c8ec:	e757      	b.n	800c79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800c8ee:	ad39      	add	r5, sp, #228	@ 0xe4
 800c8f0:	ac19      	add	r4, sp, #100	@ 0x64
 800c8f2:	e72d      	b.n	800c750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800c8f4:	4613      	mov	r3, r2
 800c8f6:	e744      	b.n	800c782 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800c8f8:	4613      	mov	r3, r2
 800c8fa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800c8fe:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800c902:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800c906:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800c90a:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800c90e:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800c912:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800c916:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800c91a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800c91e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800c922:	469e      	mov	lr, r3
 800c924:	461f      	mov	r7, r3
 800c926:	f04f 0900 	mov.w	r9, #0
 800c92a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800c92c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800c930:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800c932:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800c936:	960e      	str	r6, [sp, #56]	@ 0x38
 800c938:	2f00      	cmp	r7, #0
 800c93a:	d146      	bne.n	800c9ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800c93c:	449c      	add	ip, r3
 800c93e:	1ad7      	subs	r7, r2, r3
 800c940:	f1b9 0f00 	cmp.w	r9, #0
 800c944:	d009      	beq.n	800c95a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800c946:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800c94a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800c94e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800c952:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800c956:	9039      	str	r0, [sp, #228]	@ 0xe4
 800c958:	913d      	str	r1, [sp, #244]	@ 0xf4
 800c95a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c95e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c962:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c966:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c96a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c96e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c972:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c976:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c97a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c97e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c982:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c986:	f04f 0800 	mov.w	r8, #0
 800c98a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c98c:	910e      	str	r1, [sp, #56]	@ 0x38
 800c98e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c992:	f1be 0f00 	cmp.w	lr, #0
 800c996:	d030      	beq.n	800c9fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800c998:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c99a:	4450      	add	r0, sl
 800c99c:	4431      	add	r1, r6
 800c99e:	4549      	cmp	r1, r9
 800c9a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c9a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c9a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c9ac:	db08      	blt.n	800c9c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800c9ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c9b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c9b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c9ba:	3001      	adds	r0, #1
 800c9bc:	eba1 0109 	sub.w	r1, r1, r9
 800c9c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c9c4:	f04f 0801 	mov.w	r8, #1
 800c9c8:	e7e3      	b.n	800c992 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800c9ca:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c9cc:	4450      	add	r0, sl
 800c9ce:	4431      	add	r1, r6
 800c9d0:	4541      	cmp	r1, r8
 800c9d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c9d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c9da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c9de:	db08      	blt.n	800c9f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800c9e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c9e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c9e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c9ec:	3001      	adds	r0, #1
 800c9ee:	eba1 0108 	sub.w	r1, r1, r8
 800c9f2:	3f01      	subs	r7, #1
 800c9f4:	f04f 0901 	mov.w	r9, #1
 800c9f8:	e79e      	b.n	800c938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800c9fa:	449c      	add	ip, r3
 800c9fc:	1aff      	subs	r7, r7, r3
 800c9fe:	f1b8 0f00 	cmp.w	r8, #0
 800ca02:	d009      	beq.n	800ca18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ca04:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ca08:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ca0c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ca10:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ca14:	9019      	str	r0, [sp, #100]	@ 0x64
 800ca16:	911d      	str	r1, [sp, #116]	@ 0x74
 800ca18:	1ad2      	subs	r2, r2, r3
 800ca1a:	e6b5      	b.n	800c788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ca1c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ca1e:	681b      	ldr	r3, [r3, #0]
 800ca20:	b923      	cbnz	r3, 800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca22:	4b04      	ldr	r3, [pc, #16]	@ (800ca34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ca24:	6818      	ldr	r0, [r3, #0]
 800ca26:	6803      	ldr	r3, [r0, #0]
 800ca28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ca2a:	4798      	blx	r3
 800ca2c:	b05b      	add	sp, #364	@ 0x16c
 800ca2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca32:	bf00      	nop
 800ca34:	20082f08 	.word	0x20082f08

0800ca38 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ca38:	2b03      	cmp	r3, #3
 800ca3a:	d818      	bhi.n	800ca6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800ca3c:	e8df f003 	tbb	[pc, r3]
 800ca40:	130d0602 	.word	0x130d0602
 800ca44:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ca48:	1850      	adds	r0, r2, r1
 800ca4a:	4770      	bx	lr
 800ca4c:	8803      	ldrh	r3, [r0, #0]
 800ca4e:	8880      	ldrh	r0, [r0, #4]
 800ca50:	4418      	add	r0, r3
 800ca52:	b200      	sxth	r0, r0
 800ca54:	1a80      	subs	r0, r0, r2
 800ca56:	3801      	subs	r0, #1
 800ca58:	4770      	bx	lr
 800ca5a:	8803      	ldrh	r3, [r0, #0]
 800ca5c:	8880      	ldrh	r0, [r0, #4]
 800ca5e:	4418      	add	r0, r3
 800ca60:	b200      	sxth	r0, r0
 800ca62:	1a40      	subs	r0, r0, r1
 800ca64:	e7f7      	b.n	800ca56 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ca66:	f9b0 0000 	ldrsh.w	r0, [r0]
 800ca6a:	4410      	add	r0, r2
 800ca6c:	4770      	bx	lr
 800ca6e:	2000      	movs	r0, #0
 800ca70:	4770      	bx	lr

0800ca72 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ca72:	2b03      	cmp	r3, #3
 800ca74:	d817      	bhi.n	800caa6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800ca76:	e8df f003 	tbb	[pc, r3]
 800ca7a:	0602      	.short	0x0602
 800ca7c:	1009      	.short	0x1009
 800ca7e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ca82:	1850      	adds	r0, r2, r1
 800ca84:	4770      	bx	lr
 800ca86:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ca8a:	e7fa      	b.n	800ca82 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ca8c:	8843      	ldrh	r3, [r0, #2]
 800ca8e:	88c0      	ldrh	r0, [r0, #6]
 800ca90:	4418      	add	r0, r3
 800ca92:	b200      	sxth	r0, r0
 800ca94:	1a80      	subs	r0, r0, r2
 800ca96:	3801      	subs	r0, #1
 800ca98:	4770      	bx	lr
 800ca9a:	8843      	ldrh	r3, [r0, #2]
 800ca9c:	88c0      	ldrh	r0, [r0, #6]
 800ca9e:	4418      	add	r0, r3
 800caa0:	b200      	sxth	r0, r0
 800caa2:	1a40      	subs	r0, r0, r1
 800caa4:	e7f7      	b.n	800ca96 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800caa6:	2000      	movs	r0, #0
 800caa8:	4770      	bx	lr
	...

0800caac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800caac:	2200      	movs	r2, #0
 800caae:	4b01      	ldr	r3, [pc, #4]	@ (800cab4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800cab0:	601a      	str	r2, [r3, #0]
 800cab2:	4770      	bx	lr
 800cab4:	20082f10 	.word	0x20082f10

0800cab8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800cab8:	4603      	mov	r3, r0
 800caba:	b1c8      	cbz	r0, 800caf0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800cabc:	0c02      	lsrs	r2, r0, #16
 800cabe:	0412      	lsls	r2, r2, #16
 800cac0:	b9a2      	cbnz	r2, 800caec <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800cac2:	0403      	lsls	r3, r0, #16
 800cac4:	2010      	movs	r0, #16
 800cac6:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800caca:	bf04      	itt	eq
 800cacc:	021b      	lsleq	r3, r3, #8
 800cace:	3008      	addeq	r0, #8
 800cad0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800cad4:	bf04      	itt	eq
 800cad6:	011b      	lsleq	r3, r3, #4
 800cad8:	3004      	addeq	r0, #4
 800cada:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800cade:	bf04      	itt	eq
 800cae0:	009b      	lsleq	r3, r3, #2
 800cae2:	3002      	addeq	r0, #2
 800cae4:	2b00      	cmp	r3, #0
 800cae6:	db04      	blt.n	800caf2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800cae8:	3001      	adds	r0, #1
 800caea:	4770      	bx	lr
 800caec:	2000      	movs	r0, #0
 800caee:	e7ea      	b.n	800cac6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800caf0:	2020      	movs	r0, #32
 800caf2:	4770      	bx	lr

0800caf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800caf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800caf8:	b087      	sub	sp, #28
 800cafa:	460d      	mov	r5, r1
 800cafc:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800cb00:	4616      	mov	r6, r2
 800cb02:	4698      	mov	r8, r3
 800cb04:	4601      	mov	r1, r0
 800cb06:	b120      	cbz	r0, 800cb12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cb08:	b11a      	cbz	r2, 800cb12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cb0a:	2d1f      	cmp	r5, #31
 800cb0c:	d801      	bhi.n	800cb12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cb0e:	2b1f      	cmp	r3, #31
 800cb10:	d904      	bls.n	800cb1c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800cb12:	2000      	movs	r0, #0
 800cb14:	6038      	str	r0, [r7, #0]
 800cb16:	b007      	add	sp, #28
 800cb18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb1c:	b97d      	cbnz	r5, 800cb3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800cb1e:	b143      	cbz	r3, 800cb32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800cb20:	4602      	mov	r2, r0
 800cb22:	e9cd 4700 	strd	r4, r7, [sp]
 800cb26:	462b      	mov	r3, r5
 800cb28:	4641      	mov	r1, r8
 800cb2a:	4630      	mov	r0, r6
 800cb2c:	f7ff ffe2 	bl	800caf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb30:	e7f1      	b.n	800cb16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb32:	f04f 33ff 	mov.w	r3, #4294967295
 800cb36:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800cb3a:	603b      	str	r3, [r7, #0]
 800cb3c:	e7eb      	b.n	800cb16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb3e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800cb42:	d106      	bne.n	800cb52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800cb44:	4346      	muls	r6, r0
 800cb46:	fbb6 f0f4 	udiv	r0, r6, r4
 800cb4a:	fb04 6610 	mls	r6, r4, r0, r6
 800cb4e:	603e      	str	r6, [r7, #0]
 800cb50:	e7e1      	b.n	800cb16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb52:	fa00 fb05 	lsl.w	fp, r0, r5
 800cb56:	fbbb f9f4 	udiv	r9, fp, r4
 800cb5a:	2201      	movs	r2, #1
 800cb5c:	fb0a f309 	mul.w	r3, sl, r9
 800cb60:	40aa      	lsls	r2, r5
 800cb62:	3a01      	subs	r2, #1
 800cb64:	4016      	ands	r6, r2
 800cb66:	4630      	mov	r0, r6
 800cb68:	9303      	str	r3, [sp, #12]
 800cb6a:	f7ff ffa5 	bl	800cab8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb6e:	462b      	mov	r3, r5
 800cb70:	460a      	mov	r2, r1
 800cb72:	e9cd 4700 	strd	r4, r7, [sp]
 800cb76:	4601      	mov	r1, r0
 800cb78:	4630      	mov	r0, r6
 800cb7a:	f7ff ffbb 	bl	800caf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb7e:	fb04 b919 	mls	r9, r4, r9, fp
 800cb82:	4606      	mov	r6, r0
 800cb84:	4648      	mov	r0, r9
 800cb86:	eb05 0108 	add.w	r1, r5, r8
 800cb8a:	f7ff ff95 	bl	800cab8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb8e:	ab05      	add	r3, sp, #20
 800cb90:	e9cd 4300 	strd	r4, r3, [sp]
 800cb94:	464a      	mov	r2, r9
 800cb96:	4603      	mov	r3, r0
 800cb98:	4650      	mov	r0, sl
 800cb9a:	f7ff ffab 	bl	800caf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb9e:	6839      	ldr	r1, [r7, #0]
 800cba0:	9a05      	ldr	r2, [sp, #20]
 800cba2:	9b03      	ldr	r3, [sp, #12]
 800cba4:	4411      	add	r1, r2
 800cba6:	fbb1 f2f4 	udiv	r2, r1, r4
 800cbaa:	fb04 1412 	mls	r4, r4, r2, r1
 800cbae:	18d3      	adds	r3, r2, r3
 800cbb0:	441e      	add	r6, r3
 800cbb2:	4430      	add	r0, r6
 800cbb4:	603c      	str	r4, [r7, #0]
 800cbb6:	e7ae      	b.n	800cb16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800cbb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800cbb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbbc:	b085      	sub	sp, #20
 800cbbe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800cbc0:	f1b0 0900 	subs.w	r9, r0, #0
 800cbc4:	461d      	mov	r5, r3
 800cbc6:	bfbf      	itttt	lt
 800cbc8:	6823      	ldrlt	r3, [r4, #0]
 800cbca:	f1c9 0900 	rsblt	r9, r9, #0
 800cbce:	425b      	neglt	r3, r3
 800cbd0:	6023      	strlt	r3, [r4, #0]
 800cbd2:	bfb4      	ite	lt
 800cbd4:	f04f 36ff 	movlt.w	r6, #4294967295
 800cbd8:	2601      	movge	r6, #1
 800cbda:	2a00      	cmp	r2, #0
 800cbdc:	4617      	mov	r7, r2
 800cbde:	da04      	bge.n	800cbea <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cbe0:	6823      	ldr	r3, [r4, #0]
 800cbe2:	4257      	negs	r7, r2
 800cbe4:	425b      	negs	r3, r3
 800cbe6:	4276      	negs	r6, r6
 800cbe8:	6023      	str	r3, [r4, #0]
 800cbea:	2d00      	cmp	r5, #0
 800cbec:	4638      	mov	r0, r7
 800cbee:	bfba      	itte	lt
 800cbf0:	426d      	neglt	r5, r5
 800cbf2:	f04f 38ff 	movlt.w	r8, #4294967295
 800cbf6:	f04f 0801 	movge.w	r8, #1
 800cbfa:	f7ff ff5d 	bl	800cab8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cbfe:	ab03      	add	r3, sp, #12
 800cc00:	e9cd 5300 	strd	r5, r3, [sp]
 800cc04:	463a      	mov	r2, r7
 800cc06:	4603      	mov	r3, r0
 800cc08:	4648      	mov	r0, r9
 800cc0a:	f7ff ff73 	bl	800caf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cc0e:	6823      	ldr	r3, [r4, #0]
 800cc10:	9a03      	ldr	r2, [sp, #12]
 800cc12:	4546      	cmp	r6, r8
 800cc14:	441a      	add	r2, r3
 800cc16:	fb92 f3f5 	sdiv	r3, r2, r5
 800cc1a:	4418      	add	r0, r3
 800cc1c:	fb05 2313 	mls	r3, r5, r3, r2
 800cc20:	bf18      	it	ne
 800cc22:	4240      	negne	r0, r0
 800cc24:	1c72      	adds	r2, r6, #1
 800cc26:	6023      	str	r3, [r4, #0]
 800cc28:	d105      	bne.n	800cc36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cc2a:	2b00      	cmp	r3, #0
 800cc2c:	f1c3 0200 	rsb	r2, r3, #0
 800cc30:	db0b      	blt.n	800cc4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cc32:	6022      	str	r2, [r4, #0]
 800cc34:	e006      	b.n	800cc44 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cc36:	2e01      	cmp	r6, #1
 800cc38:	d104      	bne.n	800cc44 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cc3a:	2b00      	cmp	r3, #0
 800cc3c:	da02      	bge.n	800cc44 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cc3e:	442b      	add	r3, r5
 800cc40:	3801      	subs	r0, #1
 800cc42:	6023      	str	r3, [r4, #0]
 800cc44:	b005      	add	sp, #20
 800cc46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cc4a:	3801      	subs	r0, #1
 800cc4c:	1b52      	subs	r2, r2, r5
 800cc4e:	e7f0      	b.n	800cc32 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800cc50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cc50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cc54:	4c1c      	ldr	r4, [pc, #112]	@ (800ccc8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cc56:	4605      	mov	r5, r0
 800cc58:	69a3      	ldr	r3, [r4, #24]
 800cc5a:	6807      	ldr	r7, [r0, #0]
 800cc5c:	b92b      	cbnz	r3, 800cc6a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cc5e:	6840      	ldr	r0, [r0, #4]
 800cc60:	e9c5 7000 	strd	r7, r0, [r5]
 800cc64:	b004      	add	sp, #16
 800cc66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc6a:	f04f 0802 	mov.w	r8, #2
 800cc6e:	fb93 f1f8 	sdiv	r1, r3, r8
 800cc72:	68a2      	ldr	r2, [r4, #8]
 800cc74:	ae04      	add	r6, sp, #16
 800cc76:	440a      	add	r2, r1
 800cc78:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cc7c:	69e1      	ldr	r1, [r4, #28]
 800cc7e:	463a      	mov	r2, r7
 800cc80:	9600      	str	r6, [sp, #0]
 800cc82:	6820      	ldr	r0, [r4, #0]
 800cc84:	f7ff ff98 	bl	800cbb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc88:	69a3      	ldr	r3, [r4, #24]
 800cc8a:	4607      	mov	r7, r0
 800cc8c:	686a      	ldr	r2, [r5, #4]
 800cc8e:	6a21      	ldr	r1, [r4, #32]
 800cc90:	9600      	str	r6, [sp, #0]
 800cc92:	6860      	ldr	r0, [r4, #4]
 800cc94:	f7ff ff90 	bl	800cbb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc98:	69a3      	ldr	r3, [r4, #24]
 800cc9a:	6962      	ldr	r2, [r4, #20]
 800cc9c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cca0:	4442      	add	r2, r8
 800cca2:	9203      	str	r2, [sp, #12]
 800cca4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cca6:	682a      	ldr	r2, [r5, #0]
 800cca8:	4407      	add	r7, r0
 800ccaa:	9600      	str	r6, [sp, #0]
 800ccac:	68e0      	ldr	r0, [r4, #12]
 800ccae:	f7ff ff83 	bl	800cbb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ccb2:	9600      	str	r6, [sp, #0]
 800ccb4:	4680      	mov	r8, r0
 800ccb6:	69a3      	ldr	r3, [r4, #24]
 800ccb8:	686a      	ldr	r2, [r5, #4]
 800ccba:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800ccbc:	6920      	ldr	r0, [r4, #16]
 800ccbe:	f7ff ff7b 	bl	800cbb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ccc2:	4440      	add	r0, r8
 800ccc4:	e7cc      	b.n	800cc60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ccc6:	bf00      	nop
 800ccc8:	20082f14 	.word	0x20082f14

0800cccc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cccc:	4b07      	ldr	r3, [pc, #28]	@ (800ccec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ccce:	781b      	ldrb	r3, [r3, #0]
 800ccd0:	2b01      	cmp	r3, #1
 800ccd2:	d109      	bne.n	800cce8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ccd4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ccd8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ccdc:	8003      	strh	r3, [r0, #0]
 800ccde:	4b04      	ldr	r3, [pc, #16]	@ (800ccf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cce0:	881b      	ldrh	r3, [r3, #0]
 800cce2:	3b01      	subs	r3, #1
 800cce4:	1a9b      	subs	r3, r3, r2
 800cce6:	800b      	strh	r3, [r1, #0]
 800cce8:	4770      	bx	lr
 800ccea:	bf00      	nop
 800ccec:	20082f00 	.word	0x20082f00
 800ccf0:	20082efc 	.word	0x20082efc

0800ccf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ccf4:	b510      	push	{r4, lr}
 800ccf6:	4b07      	ldr	r3, [pc, #28]	@ (800cd14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ccf8:	781b      	ldrb	r3, [r3, #0]
 800ccfa:	2b01      	cmp	r3, #1
 800ccfc:	d108      	bne.n	800cd10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ccfe:	4b06      	ldr	r3, [pc, #24]	@ (800cd18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800cd00:	880c      	ldrh	r4, [r1, #0]
 800cd02:	881b      	ldrh	r3, [r3, #0]
 800cd04:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cd08:	3b01      	subs	r3, #1
 800cd0a:	1b1b      	subs	r3, r3, r4
 800cd0c:	8003      	strh	r3, [r0, #0]
 800cd0e:	800a      	strh	r2, [r1, #0]
 800cd10:	bd10      	pop	{r4, pc}
 800cd12:	bf00      	nop
 800cd14:	20082f00 	.word	0x20082f00
 800cd18:	20082efc 	.word	0x20082efc

0800cd1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cd1c:	b510      	push	{r4, lr}
 800cd1e:	4b0a      	ldr	r3, [pc, #40]	@ (800cd48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cd20:	781b      	ldrb	r3, [r3, #0]
 800cd22:	2b01      	cmp	r3, #1
 800cd24:	d10e      	bne.n	800cd44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cd26:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800cd2a:	8843      	ldrh	r3, [r0, #2]
 800cd2c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd30:	18ca      	adds	r2, r1, r3
 800cd32:	4b06      	ldr	r3, [pc, #24]	@ (800cd4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800cd34:	8044      	strh	r4, [r0, #2]
 800cd36:	881b      	ldrh	r3, [r3, #0]
 800cd38:	1a9b      	subs	r3, r3, r2
 800cd3a:	8003      	strh	r3, [r0, #0]
 800cd3c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd40:	8081      	strh	r1, [r0, #4]
 800cd42:	80c3      	strh	r3, [r0, #6]
 800cd44:	bd10      	pop	{r4, pc}
 800cd46:	bf00      	nop
 800cd48:	20082f00 	.word	0x20082f00
 800cd4c:	20082efc 	.word	0x20082efc

0800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cd50:	4b08      	ldr	r3, [pc, #32]	@ (800cd74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800cd52:	781b      	ldrb	r3, [r3, #0]
 800cd54:	2b01      	cmp	r3, #1
 800cd56:	d10c      	bne.n	800cd72 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800cd58:	8803      	ldrh	r3, [r0, #0]
 800cd5a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800cd5e:	8842      	ldrh	r2, [r0, #2]
 800cd60:	8002      	strh	r2, [r0, #0]
 800cd62:	185a      	adds	r2, r3, r1
 800cd64:	4b04      	ldr	r3, [pc, #16]	@ (800cd78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cd66:	881b      	ldrh	r3, [r3, #0]
 800cd68:	1a9b      	subs	r3, r3, r2
 800cd6a:	8043      	strh	r3, [r0, #2]
 800cd6c:	88c3      	ldrh	r3, [r0, #6]
 800cd6e:	80c1      	strh	r1, [r0, #6]
 800cd70:	8083      	strh	r3, [r0, #4]
 800cd72:	4770      	bx	lr
 800cd74:	20082f00 	.word	0x20082f00
 800cd78:	20082efc 	.word	0x20082efc

0800cd7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800cd7c:	b510      	push	{r4, lr}
 800cd7e:	4b07      	ldr	r3, [pc, #28]	@ (800cd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cd80:	781b      	ldrb	r3, [r3, #0]
 800cd82:	2b01      	cmp	r3, #1
 800cd84:	d108      	bne.n	800cd98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cd86:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cd8a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd8e:	8003      	strh	r3, [r0, #0]
 800cd90:	8893      	ldrh	r3, [r2, #4]
 800cd92:	3b01      	subs	r3, #1
 800cd94:	1b1b      	subs	r3, r3, r4
 800cd96:	800b      	strh	r3, [r1, #0]
 800cd98:	bd10      	pop	{r4, pc}
 800cd9a:	bf00      	nop
 800cd9c:	20082f00 	.word	0x20082f00

0800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cda0:	b510      	push	{r4, lr}
 800cda2:	4b0a      	ldr	r3, [pc, #40]	@ (800cdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cda4:	460a      	mov	r2, r1
 800cda6:	781b      	ldrb	r3, [r3, #0]
 800cda8:	2b01      	cmp	r3, #1
 800cdaa:	d10d      	bne.n	800cdc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cdac:	8881      	ldrh	r1, [r0, #4]
 800cdae:	8803      	ldrh	r3, [r0, #0]
 800cdb0:	440b      	add	r3, r1
 800cdb2:	4601      	mov	r1, r0
 800cdb4:	3b01      	subs	r3, #1
 800cdb6:	f821 3b02 	strh.w	r3, [r1], #2
 800cdba:	f7ff ffdf 	bl	800cd7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cdbe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cdc2:	88c2      	ldrh	r2, [r0, #6]
 800cdc4:	80c3      	strh	r3, [r0, #6]
 800cdc6:	8082      	strh	r2, [r0, #4]
 800cdc8:	bd10      	pop	{r4, pc}
 800cdca:	bf00      	nop
 800cdcc:	20082f00 	.word	0x20082f00

0800cdd0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cdd0:	2100      	movs	r1, #0
 800cdd2:	4b06      	ldr	r3, [pc, #24]	@ (800cdec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cdd4:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800cdd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cddc:	4b04      	ldr	r3, [pc, #16]	@ (800cdf0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cdde:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800cde2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cde6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800cdea:	4770      	bx	lr
 800cdec:	20082efc 	.word	0x20082efc
 800cdf0:	20082efe 	.word	0x20082efe

0800cdf4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cdf4:	4b03      	ldr	r3, [pc, #12]	@ (800ce04 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cdf6:	6818      	ldr	r0, [r3, #0]
 800cdf8:	b110      	cbz	r0, 800ce00 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cdfa:	6803      	ldr	r3, [r0, #0]
 800cdfc:	699b      	ldr	r3, [r3, #24]
 800cdfe:	4718      	bx	r3
 800ce00:	4770      	bx	lr
 800ce02:	bf00      	nop
 800ce04:	20082f44 	.word	0x20082f44

0800ce08 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800ce08:	4770      	bx	lr
	...

0800ce0c <_ZN8touchgfx11Application4drawEv>:
 800ce0c:	b507      	push	{r0, r1, r2, lr}
 800ce0e:	2100      	movs	r1, #0
 800ce10:	4b08      	ldr	r3, [pc, #32]	@ (800ce34 <_ZN8touchgfx11Application4drawEv+0x28>)
 800ce12:	9100      	str	r1, [sp, #0]
 800ce14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce18:	4b07      	ldr	r3, [pc, #28]	@ (800ce38 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ce1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ce1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce22:	4669      	mov	r1, sp
 800ce24:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ce28:	6803      	ldr	r3, [r0, #0]
 800ce2a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ce2c:	4798      	blx	r3
 800ce2e:	b003      	add	sp, #12
 800ce30:	f85d fb04 	ldr.w	pc, [sp], #4
 800ce34:	20082efc 	.word	0x20082efc
 800ce38:	20082efe 	.word	0x20082efe

0800ce3c <_ZN8touchgfx11Application10invalidateEv>:
 800ce3c:	2100      	movs	r1, #0
 800ce3e:	4b09      	ldr	r3, [pc, #36]	@ (800ce64 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800ce40:	b082      	sub	sp, #8
 800ce42:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce46:	4b08      	ldr	r3, [pc, #32]	@ (800ce68 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800ce48:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ce4c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce50:	9100      	str	r1, [sp, #0]
 800ce52:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ce56:	6803      	ldr	r3, [r0, #0]
 800ce58:	aa02      	add	r2, sp, #8
 800ce5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ce5c:	e912 0006 	ldmdb	r2, {r1, r2}
 800ce60:	b002      	add	sp, #8
 800ce62:	4718      	bx	r3
 800ce64:	20082efc 	.word	0x20082efc
 800ce68:	20082efe 	.word	0x20082efe

0800ce6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ce6c:	4b03      	ldr	r3, [pc, #12]	@ (800ce7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ce6e:	6818      	ldr	r0, [r3, #0]
 800ce70:	b110      	cbz	r0, 800ce78 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ce72:	6803      	ldr	r3, [r0, #0]
 800ce74:	69db      	ldr	r3, [r3, #28]
 800ce76:	4718      	bx	r3
 800ce78:	4770      	bx	lr
 800ce7a:	bf00      	nop
 800ce7c:	20082f44 	.word	0x20082f44

0800ce80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ce80:	4b03      	ldr	r3, [pc, #12]	@ (800ce90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ce82:	6818      	ldr	r0, [r3, #0]
 800ce84:	b110      	cbz	r0, 800ce8c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ce86:	6803      	ldr	r3, [r0, #0]
 800ce88:	6a1b      	ldr	r3, [r3, #32]
 800ce8a:	4718      	bx	r3
 800ce8c:	4770      	bx	lr
 800ce8e:	bf00      	nop
 800ce90:	20082f44 	.word	0x20082f44

0800ce94 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ce94:	2300      	movs	r3, #0
 800ce96:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ce9a:	4770      	bx	lr

0800ce9c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ce9c:	4b03      	ldr	r3, [pc, #12]	@ (800ceac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ce9e:	6818      	ldr	r0, [r3, #0]
 800cea0:	b110      	cbz	r0, 800cea8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800cea2:	6803      	ldr	r3, [r0, #0]
 800cea4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800cea6:	4718      	bx	r3
 800cea8:	4770      	bx	lr
 800ceaa:	bf00      	nop
 800ceac:	20082f44 	.word	0x20082f44

0800ceb0 <_ZN8touchgfx11ApplicationD1Ev>:
 800ceb0:	4770      	bx	lr

0800ceb2 <_ZN8touchgfx11ApplicationD0Ev>:
 800ceb2:	b510      	push	{r4, lr}
 800ceb4:	4604      	mov	r4, r0
 800ceb6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800ceba:	f024 f94c 	bl	8031156 <_ZdlPvj>
 800cebe:	4620      	mov	r0, r4
 800cec0:	bd10      	pop	{r4, pc}

0800cec2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cec2:	b510      	push	{r4, lr}
 800cec4:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cec8:	888a      	ldrh	r2, [r1, #4]
 800ceca:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cece:	4422      	add	r2, r4
 800ced0:	b212      	sxth	r2, r2
 800ced2:	4293      	cmp	r3, r2
 800ced4:	da15      	bge.n	800cf02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ced6:	8882      	ldrh	r2, [r0, #4]
 800ced8:	4413      	add	r3, r2
 800ceda:	b21b      	sxth	r3, r3
 800cedc:	429c      	cmp	r4, r3
 800cede:	da10      	bge.n	800cf02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cee0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cee4:	88c9      	ldrh	r1, [r1, #6]
 800cee6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ceea:	4419      	add	r1, r3
 800ceec:	b209      	sxth	r1, r1
 800ceee:	428a      	cmp	r2, r1
 800cef0:	da07      	bge.n	800cf02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cef2:	88c0      	ldrh	r0, [r0, #6]
 800cef4:	4410      	add	r0, r2
 800cef6:	b200      	sxth	r0, r0
 800cef8:	4283      	cmp	r3, r0
 800cefa:	bfac      	ite	ge
 800cefc:	2000      	movge	r0, #0
 800cefe:	2001      	movlt	r0, #1
 800cf00:	bd10      	pop	{r4, pc}
 800cf02:	2000      	movs	r0, #0
 800cf04:	e7fc      	b.n	800cf00 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cf06 <_ZN8touchgfx4Rect10restrictToEss>:
 800cf06:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cf0a:	b510      	push	{r4, lr}
 800cf0c:	2b00      	cmp	r3, #0
 800cf0e:	da04      	bge.n	800cf1a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cf10:	8884      	ldrh	r4, [r0, #4]
 800cf12:	4423      	add	r3, r4
 800cf14:	8083      	strh	r3, [r0, #4]
 800cf16:	2300      	movs	r3, #0
 800cf18:	8003      	strh	r3, [r0, #0]
 800cf1a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cf1e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cf22:	1b09      	subs	r1, r1, r4
 800cf24:	428b      	cmp	r3, r1
 800cf26:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cf2a:	bfc8      	it	gt
 800cf2c:	8081      	strhgt	r1, [r0, #4]
 800cf2e:	2b00      	cmp	r3, #0
 800cf30:	da04      	bge.n	800cf3c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800cf32:	88c1      	ldrh	r1, [r0, #6]
 800cf34:	440b      	add	r3, r1
 800cf36:	80c3      	strh	r3, [r0, #6]
 800cf38:	2300      	movs	r3, #0
 800cf3a:	8043      	strh	r3, [r0, #2]
 800cf3c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cf40:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cf44:	1a52      	subs	r2, r2, r1
 800cf46:	4293      	cmp	r3, r2
 800cf48:	bfc8      	it	gt
 800cf4a:	80c2      	strhgt	r2, [r0, #6]
 800cf4c:	bd10      	pop	{r4, pc}
	...

0800cf50 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cf50:	b510      	push	{r4, lr}
 800cf52:	460c      	mov	r4, r1
 800cf54:	4b0f      	ldr	r3, [pc, #60]	@ (800cf94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cf56:	4620      	mov	r0, r4
 800cf58:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf5c:	4b0e      	ldr	r3, [pc, #56]	@ (800cf98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cf5e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cf62:	f7ff ffd0 	bl	800cf06 <_ZN8touchgfx4Rect10restrictToEss>
 800cf66:	4b0d      	ldr	r3, [pc, #52]	@ (800cf9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cf68:	6818      	ldr	r0, [r3, #0]
 800cf6a:	b190      	cbz	r0, 800cf92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cf6c:	6803      	ldr	r3, [r0, #0]
 800cf6e:	4621      	mov	r1, r4
 800cf70:	689b      	ldr	r3, [r3, #8]
 800cf72:	4798      	blx	r3
 800cf74:	4b0a      	ldr	r3, [pc, #40]	@ (800cfa0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cf76:	6818      	ldr	r0, [r3, #0]
 800cf78:	b118      	cbz	r0, 800cf82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cf7a:	6803      	ldr	r3, [r0, #0]
 800cf7c:	4621      	mov	r1, r4
 800cf7e:	689b      	ldr	r3, [r3, #8]
 800cf80:	4798      	blx	r3
 800cf82:	4b08      	ldr	r3, [pc, #32]	@ (800cfa4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cf84:	4621      	mov	r1, r4
 800cf86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf8a:	6818      	ldr	r0, [r3, #0]
 800cf8c:	6803      	ldr	r3, [r0, #0]
 800cf8e:	69db      	ldr	r3, [r3, #28]
 800cf90:	4718      	bx	r3
 800cf92:	bd10      	pop	{r4, pc}
 800cf94:	20082efe 	.word	0x20082efe
 800cf98:	20082efc 	.word	0x20082efc
 800cf9c:	20082f44 	.word	0x20082f44
 800cfa0:	20082f40 	.word	0x20082f40
 800cfa4:	20082f08 	.word	0x20082f08

0800cfa8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cfa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfaa:	4606      	mov	r6, r0
 800cfac:	4608      	mov	r0, r1
 800cfae:	460f      	mov	r7, r1
 800cfb0:	f7fd fea9 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cfb4:	b9e8      	cbnz	r0, 800cff2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfb6:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cfba:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cfbe:	42a5      	cmp	r5, r4
 800cfc0:	db17      	blt.n	800cff2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfc2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cfc6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cfca:	429a      	cmp	r2, r3
 800cfcc:	db11      	blt.n	800cff2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfce:	88b9      	ldrh	r1, [r7, #4]
 800cfd0:	440d      	add	r5, r1
 800cfd2:	88b1      	ldrh	r1, [r6, #4]
 800cfd4:	b22d      	sxth	r5, r5
 800cfd6:	440c      	add	r4, r1
 800cfd8:	b224      	sxth	r4, r4
 800cfda:	42a5      	cmp	r5, r4
 800cfdc:	dc09      	bgt.n	800cff2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfde:	88f8      	ldrh	r0, [r7, #6]
 800cfe0:	4410      	add	r0, r2
 800cfe2:	88f2      	ldrh	r2, [r6, #6]
 800cfe4:	b200      	sxth	r0, r0
 800cfe6:	4413      	add	r3, r2
 800cfe8:	b21b      	sxth	r3, r3
 800cfea:	4298      	cmp	r0, r3
 800cfec:	bfcc      	ite	gt
 800cfee:	2000      	movgt	r0, #0
 800cff0:	2001      	movle	r0, #1
 800cff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cff4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cff6:	4604      	mov	r4, r0
 800cff8:	4608      	mov	r0, r1
 800cffa:	460d      	mov	r5, r1
 800cffc:	f7fd fe83 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d000:	b978      	cbnz	r0, 800d022 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d002:	4620      	mov	r0, r4
 800d004:	f7fd fe7f 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d008:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d00c:	b150      	cbz	r0, 800d024 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d00e:	8026      	strh	r6, [r4, #0]
 800d010:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d014:	8063      	strh	r3, [r4, #2]
 800d016:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d01a:	80a3      	strh	r3, [r4, #4]
 800d01c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d020:	80e3      	strh	r3, [r4, #6]
 800d022:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d024:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d028:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d02c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d030:	42b1      	cmp	r1, r6
 800d032:	460f      	mov	r7, r1
 800d034:	bfa8      	it	ge
 800d036:	4637      	movge	r7, r6
 800d038:	4293      	cmp	r3, r2
 800d03a:	4618      	mov	r0, r3
 800d03c:	bfa8      	it	ge
 800d03e:	4610      	movge	r0, r2
 800d040:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d044:	88ed      	ldrh	r5, [r5, #6]
 800d046:	4466      	add	r6, ip
 800d048:	442a      	add	r2, r5
 800d04a:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d04e:	88e5      	ldrh	r5, [r4, #6]
 800d050:	4461      	add	r1, ip
 800d052:	442b      	add	r3, r5
 800d054:	b236      	sxth	r6, r6
 800d056:	b209      	sxth	r1, r1
 800d058:	b212      	sxth	r2, r2
 800d05a:	b21b      	sxth	r3, r3
 800d05c:	428e      	cmp	r6, r1
 800d05e:	bfac      	ite	ge
 800d060:	ebc7 0106 	rsbge	r1, r7, r6
 800d064:	ebc7 0101 	rsblt	r1, r7, r1
 800d068:	429a      	cmp	r2, r3
 800d06a:	bfac      	ite	ge
 800d06c:	ebc0 0202 	rsbge	r2, r0, r2
 800d070:	ebc0 0203 	rsblt	r2, r0, r3
 800d074:	8027      	strh	r7, [r4, #0]
 800d076:	8060      	strh	r0, [r4, #2]
 800d078:	80a1      	strh	r1, [r4, #4]
 800d07a:	80e2      	strh	r2, [r4, #6]
 800d07c:	e7d1      	b.n	800d022 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d080 <_ZN8touchgfx11Application11getInstanceEv>:
 800d080:	4b01      	ldr	r3, [pc, #4]	@ (800d088 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d082:	6818      	ldr	r0, [r3, #0]
 800d084:	4770      	bx	lr
 800d086:	bf00      	nop
 800d088:	20082f54 	.word	0x20082f54

0800d08c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800d08c:	2300      	movs	r3, #0
 800d08e:	b510      	push	{r4, lr}
 800d090:	4604      	mov	r4, r0
 800d092:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800d096:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d09a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d09e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d0a2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800d0a6:	429a      	cmp	r2, r3
 800d0a8:	d90e      	bls.n	800d0c8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800d0aa:	18e2      	adds	r2, r4, r3
 800d0ac:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800d0b0:	b122      	cbz	r2, 800d0bc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800d0b2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800d0b6:	6803      	ldr	r3, [r0, #0]
 800d0b8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d0ba:	4798      	blx	r3
 800d0bc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d0c0:	3301      	adds	r3, #1
 800d0c2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d0c6:	e7ea      	b.n	800d09e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800d0c8:	bd10      	pop	{r4, pc}

0800d0ca <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800d0ca:	2300      	movs	r3, #0
 800d0cc:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800d0d0:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d0d4:	30a4      	adds	r0, #164	@ 0xa4
 800d0d6:	f802 3b01 	strb.w	r3, [r2], #1
 800d0da:	4282      	cmp	r2, r0
 800d0dc:	d1fb      	bne.n	800d0d6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800d0de:	4770      	bx	lr

0800d0e0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d0e0:	b570      	push	{r4, r5, r6, lr}
 800d0e2:	4c0b      	ldr	r4, [pc, #44]	@ (800d110 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800d0e4:	4605      	mov	r5, r0
 800d0e6:	6820      	ldr	r0, [r4, #0]
 800d0e8:	460e      	mov	r6, r1
 800d0ea:	b110      	cbz	r0, 800d0f2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800d0ec:	6803      	ldr	r3, [r0, #0]
 800d0ee:	695b      	ldr	r3, [r3, #20]
 800d0f0:	4798      	blx	r3
 800d0f2:	1d28      	adds	r0, r5, #4
 800d0f4:	f7ff ffe9 	bl	800d0ca <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d0f8:	6026      	str	r6, [r4, #0]
 800d0fa:	6833      	ldr	r3, [r6, #0]
 800d0fc:	4630      	mov	r0, r6
 800d0fe:	68db      	ldr	r3, [r3, #12]
 800d100:	4798      	blx	r3
 800d102:	682b      	ldr	r3, [r5, #0]
 800d104:	4628      	mov	r0, r5
 800d106:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d10a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d10c:	4718      	bx	r3
 800d10e:	bf00      	nop
 800d110:	20082f44 	.word	0x20082f44

0800d114 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800d114:	2300      	movs	r3, #0
 800d116:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d118:	461a      	mov	r2, r3
 800d11a:	461c      	mov	r4, r3
 800d11c:	461d      	mov	r5, r3
 800d11e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800d122:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800d126:	459c      	cmp	ip, r3
 800d128:	dd1a      	ble.n	800d160 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800d12a:	18c6      	adds	r6, r0, r3
 800d12c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800d130:	b16e      	cbz	r6, 800d14e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800d132:	429a      	cmp	r2, r3
 800d134:	d008      	beq.n	800d148 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800d136:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800d13a:	fa1f fe82 	uxth.w	lr, r2
 800d13e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800d142:	1887      	adds	r7, r0, r2
 800d144:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800d148:	3201      	adds	r2, #1
 800d14a:	3301      	adds	r3, #1
 800d14c:	e7eb      	b.n	800d126 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800d14e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800d152:	4299      	cmp	r1, r3
 800d154:	bfa8      	it	ge
 800d156:	3501      	addge	r5, #1
 800d158:	429e      	cmp	r6, r3
 800d15a:	bfc8      	it	gt
 800d15c:	3401      	addgt	r4, #1
 800d15e:	e7f4      	b.n	800d14a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800d160:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800d164:	1b49      	subs	r1, r1, r5
 800d166:	1b1b      	subs	r3, r3, r4
 800d168:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800d16c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d170:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d174:	4293      	cmp	r3, r2
 800d176:	dd03      	ble.n	800d180 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800d178:	3b01      	subs	r3, #1
 800d17a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d17e:	e7f7      	b.n	800d170 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800d180:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d184 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d184:	b570      	push	{r4, r5, r6, lr}
 800d186:	4d16      	ldr	r5, [pc, #88]	@ (800d1e0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800d188:	4604      	mov	r4, r0
 800d18a:	6828      	ldr	r0, [r5, #0]
 800d18c:	b140      	cbz	r0, 800d1a0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d18e:	7a03      	ldrb	r3, [r0, #8]
 800d190:	b933      	cbnz	r3, 800d1a0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d192:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d196:	6803      	ldr	r3, [r0, #0]
 800d198:	689b      	ldr	r3, [r3, #8]
 800d19a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d19e:	4718      	bx	r3
 800d1a0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800d1a4:	4e0f      	ldr	r6, [pc, #60]	@ (800d1e4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800d1a6:	b973      	cbnz	r3, 800d1c6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d1a8:	b168      	cbz	r0, 800d1c6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d1aa:	7a03      	ldrb	r3, [r0, #8]
 800d1ac:	b15b      	cbz	r3, 800d1c6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d1ae:	6830      	ldr	r0, [r6, #0]
 800d1b0:	b110      	cbz	r0, 800d1b8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800d1b2:	6803      	ldr	r3, [r0, #0]
 800d1b4:	691b      	ldr	r3, [r3, #16]
 800d1b6:	4798      	blx	r3
 800d1b8:	6828      	ldr	r0, [r5, #0]
 800d1ba:	6803      	ldr	r3, [r0, #0]
 800d1bc:	68db      	ldr	r3, [r3, #12]
 800d1be:	4798      	blx	r3
 800d1c0:	2301      	movs	r3, #1
 800d1c2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d1c6:	3404      	adds	r4, #4
 800d1c8:	4620      	mov	r0, r4
 800d1ca:	f7ff ff5f 	bl	800d08c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800d1ce:	4620      	mov	r0, r4
 800d1d0:	f7ff ffa0 	bl	800d114 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d1d4:	6830      	ldr	r0, [r6, #0]
 800d1d6:	b110      	cbz	r0, 800d1de <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800d1d8:	6803      	ldr	r3, [r0, #0]
 800d1da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d1dc:	e7dd      	b.n	800d19a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800d1de:	bd70      	pop	{r4, r5, r6, pc}
 800d1e0:	20082f48 	.word	0x20082f48
 800d1e4:	20082f44 	.word	0x20082f44

0800d1e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d1e8:	4603      	mov	r3, r0
 800d1ea:	2200      	movs	r2, #0
 800d1ec:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800d1f0:	801a      	strh	r2, [r3, #0]
 800d1f2:	805a      	strh	r2, [r3, #2]
 800d1f4:	809a      	strh	r2, [r3, #4]
 800d1f6:	80da      	strh	r2, [r3, #6]
 800d1f8:	3308      	adds	r3, #8
 800d1fa:	428b      	cmp	r3, r1
 800d1fc:	d1f8      	bne.n	800d1f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d1fe:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800d202:	4770      	bx	lr

0800d204 <_ZN8touchgfx11ApplicationC1Ev>:
 800d204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d206:	4606      	mov	r6, r0
 800d208:	4604      	mov	r4, r0
 800d20a:	2500      	movs	r5, #0
 800d20c:	4b1b      	ldr	r3, [pc, #108]	@ (800d27c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d20e:	22a8      	movs	r2, #168	@ 0xa8
 800d210:	f846 3b04 	str.w	r3, [r6], #4
 800d214:	2100      	movs	r1, #0
 800d216:	4630      	mov	r0, r6
 800d218:	f025 fb7d 	bl	8032916 <memset>
 800d21c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800d220:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d224:	f7ff ffe0 	bl	800d1e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d228:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d22c:	f7ff ffdc 	bl	800d1e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d230:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800d234:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800d238:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800d23c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800d240:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800d244:	490e      	ldr	r1, [pc, #56]	@ (800d280 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d246:	480f      	ldr	r0, [pc, #60]	@ (800d284 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d248:	f003 f832 	bl	80102b0 <CRC_Lock>
 800d24c:	4f0e      	ldr	r7, [pc, #56]	@ (800d288 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d24e:	4b0f      	ldr	r3, [pc, #60]	@ (800d28c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d250:	b158      	cbz	r0, 800d26a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d252:	801d      	strh	r5, [r3, #0]
 800d254:	2300      	movs	r3, #0
 800d256:	4a0e      	ldr	r2, [pc, #56]	@ (800d290 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d258:	4630      	mov	r0, r6
 800d25a:	6013      	str	r3, [r2, #0]
 800d25c:	4a0d      	ldr	r2, [pc, #52]	@ (800d294 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d25e:	603b      	str	r3, [r7, #0]
 800d260:	6013      	str	r3, [r2, #0]
 800d262:	f7ff ff32 	bl	800d0ca <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d266:	4620      	mov	r0, r4
 800d268:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d26a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800d26e:	2002      	movs	r0, #2
 800d270:	801a      	strh	r2, [r3, #0]
 800d272:	6038      	str	r0, [r7, #0]
 800d274:	f001 fd82 	bl	800ed7c <_ZN8touchgfx6Screen4drawEv>
 800d278:	e7ec      	b.n	800d254 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d27a:	bf00      	nop
 800d27c:	08035b7c 	.word	0x08035b7c
 800d280:	b5e8b5cd 	.word	0xb5e8b5cd
 800d284:	f407a5c2 	.word	0xf407a5c2
 800d288:	20082f44 	.word	0x20082f44
 800d28c:	20000060 	.word	0x20000060
 800d290:	20082f54 	.word	0x20082f54
 800d294:	20082f48 	.word	0x20082f48

0800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d298:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800d29c:	b510      	push	{r4, lr}
 800d29e:	3b01      	subs	r3, #1
 800d2a0:	b29b      	uxth	r3, r3
 800d2a2:	428b      	cmp	r3, r1
 800d2a4:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800d2a8:	d908      	bls.n	800d2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d2aa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d2ae:	681a      	ldr	r2, [r3, #0]
 800d2b0:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d2b4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d2b8:	685a      	ldr	r2, [r3, #4]
 800d2ba:	6062      	str	r2, [r4, #4]
 800d2bc:	bd10      	pop	{r4, pc}
	...

0800d2c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2c4:	4b8f      	ldr	r3, [pc, #572]	@ (800d504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d2c6:	b08f      	sub	sp, #60	@ 0x3c
 800d2c8:	ac0a      	add	r4, sp, #40	@ 0x28
 800d2ca:	e884 0006 	stmia.w	r4, {r1, r2}
 800d2ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d2d2:	4b8d      	ldr	r3, [pc, #564]	@ (800d508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d2d4:	4683      	mov	fp, r0
 800d2d6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d2da:	4620      	mov	r0, r4
 800d2dc:	f7ff fe13 	bl	800cf06 <_ZN8touchgfx4Rect10restrictToEss>
 800d2e0:	4620      	mov	r0, r4
 800d2e2:	f7fd fd10 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2e6:	2800      	cmp	r0, #0
 800d2e8:	d16a      	bne.n	800d3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d2ea:	9403      	str	r4, [sp, #12]
 800d2ec:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d2f0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d2f4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d2f8:	35a4      	adds	r5, #164	@ 0xa4
 800d2fa:	9301      	str	r3, [sp, #4]
 800d2fc:	b15c      	cbz	r4, 800d316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d2fe:	4629      	mov	r1, r5
 800d300:	9803      	ldr	r0, [sp, #12]
 800d302:	f7ff fe51 	bl	800cfa8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d306:	3c01      	subs	r4, #1
 800d308:	b118      	cbz	r0, 800d312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d30a:	b2a1      	uxth	r1, r4
 800d30c:	9801      	ldr	r0, [sp, #4]
 800d30e:	f7ff ffc3 	bl	800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d312:	3d08      	subs	r5, #8
 800d314:	e7f2      	b.n	800d2fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d316:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800d31a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d31e:	9302      	str	r3, [sp, #8]
 800d320:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d324:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800d328:	f8cd a010 	str.w	sl, [sp, #16]
 800d32c:	9306      	str	r3, [sp, #24]
 800d32e:	445c      	add	r4, fp
 800d330:	2500      	movs	r5, #0
 800d332:	4626      	mov	r6, r4
 800d334:	462f      	mov	r7, r5
 800d336:	f8cd a014 	str.w	sl, [sp, #20]
 800d33a:	9b05      	ldr	r3, [sp, #20]
 800d33c:	2b00      	cmp	r3, #0
 800d33e:	d073      	beq.n	800d428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d340:	9903      	ldr	r1, [sp, #12]
 800d342:	4630      	mov	r0, r6
 800d344:	f7ff fdbd 	bl	800cec2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d348:	b350      	cbz	r0, 800d3a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d34a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800d34e:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d352:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800d356:	45e6      	cmp	lr, ip
 800d358:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d35c:	db33      	blt.n	800d3c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d35e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d362:	88b3      	ldrh	r3, [r6, #4]
 800d364:	4472      	add	r2, lr
 800d366:	4463      	add	r3, ip
 800d368:	b212      	sxth	r2, r2
 800d36a:	b21b      	sxth	r3, r3
 800d36c:	429a      	cmp	r2, r3
 800d36e:	dc2a      	bgt.n	800d3c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d370:	88f3      	ldrh	r3, [r6, #6]
 800d372:	fa1f f289 	uxth.w	r2, r9
 800d376:	4413      	add	r3, r2
 800d378:	b29b      	uxth	r3, r3
 800d37a:	45c8      	cmp	r8, r9
 800d37c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d380:	fa1f fc88 	uxth.w	ip, r8
 800d384:	fa0f fe83 	sxth.w	lr, r3
 800d388:	db0f      	blt.n	800d3aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d38a:	eba3 030c 	sub.w	r3, r3, ip
 800d38e:	1ac9      	subs	r1, r1, r3
 800d390:	b209      	sxth	r1, r1
 800d392:	2900      	cmp	r1, #0
 800d394:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d398:	dd12      	ble.n	800d3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d39a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d39e:	4605      	mov	r5, r0
 800d3a0:	9b05      	ldr	r3, [sp, #20]
 800d3a2:	3e08      	subs	r6, #8
 800d3a4:	3b01      	subs	r3, #1
 800d3a6:	9305      	str	r3, [sp, #20]
 800d3a8:	e7c7      	b.n	800d33a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d3aa:	4461      	add	r1, ip
 800d3ac:	b209      	sxth	r1, r1
 800d3ae:	4571      	cmp	r1, lr
 800d3b0:	dc38      	bgt.n	800d424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3b2:	eba2 020c 	sub.w	r2, r2, ip
 800d3b6:	b212      	sxth	r2, r2
 800d3b8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d3bc:	2a00      	cmp	r2, #0
 800d3be:	dcee      	bgt.n	800d39e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d3c0:	b00f      	add	sp, #60	@ 0x3c
 800d3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3c6:	45c8      	cmp	r8, r9
 800d3c8:	db2c      	blt.n	800d424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3ca:	88f3      	ldrh	r3, [r6, #6]
 800d3cc:	4499      	add	r9, r3
 800d3ce:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d3d2:	fa0f f989 	sxth.w	r9, r9
 800d3d6:	4498      	add	r8, r3
 800d3d8:	fa0f f888 	sxth.w	r8, r8
 800d3dc:	45c1      	cmp	r9, r8
 800d3de:	db21      	blt.n	800d424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3e0:	88b3      	ldrh	r3, [r6, #4]
 800d3e2:	fa1f f28c 	uxth.w	r2, ip
 800d3e6:	4413      	add	r3, r2
 800d3e8:	b29b      	uxth	r3, r3
 800d3ea:	45e6      	cmp	lr, ip
 800d3ec:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d3f0:	fa1f f88e 	uxth.w	r8, lr
 800d3f4:	fa0f f983 	sxth.w	r9, r3
 800d3f8:	db0a      	blt.n	800d410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d3fa:	eba3 0308 	sub.w	r3, r3, r8
 800d3fe:	1ac9      	subs	r1, r1, r3
 800d400:	b209      	sxth	r1, r1
 800d402:	2900      	cmp	r1, #0
 800d404:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d408:	ddda      	ble.n	800d3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d40a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d40e:	e7c6      	b.n	800d39e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d410:	4441      	add	r1, r8
 800d412:	b209      	sxth	r1, r1
 800d414:	4549      	cmp	r1, r9
 800d416:	dc05      	bgt.n	800d424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d418:	eba2 0208 	sub.w	r2, r2, r8
 800d41c:	b212      	sxth	r2, r2
 800d41e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d422:	e7cb      	b.n	800d3bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d424:	4607      	mov	r7, r0
 800d426:	e7bb      	b.n	800d3a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d428:	2d00      	cmp	r5, #0
 800d42a:	d181      	bne.n	800d330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d42c:	2f00      	cmp	r7, #0
 800d42e:	f000 81de 	beq.w	800d7ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d432:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d436:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d43a:	b2b3      	uxth	r3, r6
 800d43c:	9305      	str	r3, [sp, #20]
 800d43e:	9a05      	ldr	r2, [sp, #20]
 800d440:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d444:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d448:	4413      	add	r3, r2
 800d44a:	b2ba      	uxth	r2, r7
 800d44c:	4492      	add	sl, r2
 800d44e:	b29b      	uxth	r3, r3
 800d450:	fa1f fa8a 	uxth.w	sl, sl
 800d454:	fa0f f883 	sxth.w	r8, r3
 800d458:	fa0f f98a 	sxth.w	r9, sl
 800d45c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d460:	9b04      	ldr	r3, [sp, #16]
 800d462:	2b00      	cmp	r3, #0
 800d464:	d052      	beq.n	800d50c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d466:	9903      	ldr	r1, [sp, #12]
 800d468:	4620      	mov	r0, r4
 800d46a:	f7ff fd2a 	bl	800cec2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d46e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d472:	b1c0      	cbz	r0, 800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d474:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d478:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d47c:	4576      	cmp	r6, lr
 800d47e:	dc22      	bgt.n	800d4c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d480:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d484:	44f4      	add	ip, lr
 800d486:	fa0f fc8c 	sxth.w	ip, ip
 800d48a:	45e0      	cmp	r8, ip
 800d48c:	db1b      	blt.n	800d4c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d48e:	428f      	cmp	r7, r1
 800d490:	fa1f fc81 	uxth.w	ip, r1
 800d494:	88e1      	ldrh	r1, [r4, #6]
 800d496:	dc0d      	bgt.n	800d4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d498:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d49c:	eba1 010c 	sub.w	r1, r1, ip
 800d4a0:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d4a4:	80e1      	strh	r1, [r4, #6]
 800d4a6:	4628      	mov	r0, r5
 800d4a8:	9904      	ldr	r1, [sp, #16]
 800d4aa:	3c08      	subs	r4, #8
 800d4ac:	3901      	subs	r1, #1
 800d4ae:	9104      	str	r1, [sp, #16]
 800d4b0:	4605      	mov	r5, r0
 800d4b2:	e7d3      	b.n	800d45c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d4b4:	4461      	add	r1, ip
 800d4b6:	b209      	sxth	r1, r1
 800d4b8:	4549      	cmp	r1, r9
 800d4ba:	dcf5      	bgt.n	800d4a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4bc:	eba2 0c0c 	sub.w	ip, r2, ip
 800d4c0:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d4c4:	e7ef      	b.n	800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4c6:	428f      	cmp	r7, r1
 800d4c8:	dcee      	bgt.n	800d4a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4ca:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d4ce:	4461      	add	r1, ip
 800d4d0:	b209      	sxth	r1, r1
 800d4d2:	4589      	cmp	r9, r1
 800d4d4:	dbe8      	blt.n	800d4a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4d6:	4576      	cmp	r6, lr
 800d4d8:	fa1f fc8e 	uxth.w	ip, lr
 800d4dc:	88a1      	ldrh	r1, [r4, #4]
 800d4de:	dc07      	bgt.n	800d4f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d4e0:	eba3 0c0c 	sub.w	ip, r3, ip
 800d4e4:	eba1 010c 	sub.w	r1, r1, ip
 800d4e8:	f8a4 8000 	strh.w	r8, [r4]
 800d4ec:	80a1      	strh	r1, [r4, #4]
 800d4ee:	e7da      	b.n	800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4f0:	4461      	add	r1, ip
 800d4f2:	b209      	sxth	r1, r1
 800d4f4:	4588      	cmp	r8, r1
 800d4f6:	dbd7      	blt.n	800d4a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4f8:	9905      	ldr	r1, [sp, #20]
 800d4fa:	eba1 0c0c 	sub.w	ip, r1, ip
 800d4fe:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d502:	e7d0      	b.n	800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d504:	20082efe 	.word	0x20082efe
 800d508:	20082efc 	.word	0x20082efc
 800d50c:	2d00      	cmp	r5, #0
 800d50e:	f000 816e 	beq.w	800d7ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d512:	9b06      	ldr	r3, [sp, #24]
 800d514:	445b      	add	r3, fp
 800d516:	461c      	mov	r4, r3
 800d518:	9b02      	ldr	r3, [sp, #8]
 800d51a:	3301      	adds	r3, #1
 800d51c:	f000 8167 	beq.w	800d7ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d520:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d524:	4629      	mov	r1, r5
 800d526:	9803      	ldr	r0, [sp, #12]
 800d528:	f7ff fd3e 	bl	800cfa8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d52c:	b120      	cbz	r0, 800d538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d52e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d532:	9801      	ldr	r0, [sp, #4]
 800d534:	f7ff feb0 	bl	800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d538:	9903      	ldr	r1, [sp, #12]
 800d53a:	4628      	mov	r0, r5
 800d53c:	f7ff fcc1 	bl	800cec2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d540:	2800      	cmp	r0, #0
 800d542:	f000 809c 	beq.w	800d67e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d546:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d54a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d54e:	fa1f f189 	uxth.w	r1, r9
 800d552:	eb01 0c03 	add.w	ip, r1, r3
 800d556:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d55a:	fa1f fa8c 	uxth.w	sl, ip
 800d55e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d562:	9309      	str	r3, [sp, #36]	@ 0x24
 800d564:	b283      	uxth	r3, r0
 800d566:	eb03 050c 	add.w	r5, r3, ip
 800d56a:	b2ad      	uxth	r5, r5
 800d56c:	9505      	str	r5, [sp, #20]
 800d56e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d572:	4548      	cmp	r0, r9
 800d574:	9504      	str	r5, [sp, #16]
 800d576:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d57a:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d57e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d582:	f340 8099 	ble.w	800d6b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d586:	1a5b      	subs	r3, r3, r1
 800d588:	b29b      	uxth	r3, r3
 800d58a:	4596      	cmp	lr, r2
 800d58c:	fa0f f08a 	sxth.w	r0, sl
 800d590:	b21e      	sxth	r6, r3
 800d592:	dd2e      	ble.n	800d5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d594:	9f02      	ldr	r7, [sp, #8]
 800d596:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d59a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d59e:	9f04      	ldr	r7, [sp, #16]
 800d5a0:	fa1f fe8e 	uxth.w	lr, lr
 800d5a4:	1a3f      	subs	r7, r7, r0
 800d5a6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d5aa:	b292      	uxth	r2, r2
 800d5ac:	ebae 0102 	sub.w	r1, lr, r2
 800d5b0:	44a6      	add	lr, r4
 800d5b2:	4402      	add	r2, r0
 800d5b4:	b289      	uxth	r1, r1
 800d5b6:	fa0f fe8e 	sxth.w	lr, lr
 800d5ba:	b212      	sxth	r2, r2
 800d5bc:	b20d      	sxth	r5, r1
 800d5be:	ebae 0202 	sub.w	r2, lr, r2
 800d5c2:	436f      	muls	r7, r5
 800d5c4:	4372      	muls	r2, r6
 800d5c6:	4297      	cmp	r7, r2
 800d5c8:	db09      	blt.n	800d5de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d5ca:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d5ce:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d5d2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d5d6:	449c      	add	ip, r3
 800d5d8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d5dc:	e686      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5de:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d5e2:	4421      	add	r1, r4
 800d5e4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d5e8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d5ec:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d5f0:	e67c      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5f2:	9f04      	ldr	r7, [sp, #16]
 800d5f4:	42b8      	cmp	r0, r7
 800d5f6:	da27      	bge.n	800d648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d5f8:	9902      	ldr	r1, [sp, #8]
 800d5fa:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d5fe:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d602:	eb05 010e 	add.w	r1, r5, lr
 800d606:	fa1f f881 	uxth.w	r8, r1
 800d60a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d60e:	fa0f f988 	sxth.w	r9, r8
 800d612:	4411      	add	r1, r2
 800d614:	eba1 0108 	sub.w	r1, r1, r8
 800d618:	b289      	uxth	r1, r1
 800d61a:	fa0f f881 	sxth.w	r8, r1
 800d61e:	eba2 020e 	sub.w	r2, r2, lr
 800d622:	1a3f      	subs	r7, r7, r0
 800d624:	4372      	muls	r2, r6
 800d626:	fb08 f707 	mul.w	r7, r8, r7
 800d62a:	42ba      	cmp	r2, r7
 800d62c:	dc06      	bgt.n	800d63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d62e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d632:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d636:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d63a:	e7ca      	b.n	800d5d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d63c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d640:	4429      	add	r1, r5
 800d642:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d646:	e651      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d648:	9805      	ldr	r0, [sp, #20]
 800d64a:	2d06      	cmp	r5, #6
 800d64c:	ebaa 0000 	sub.w	r0, sl, r0
 800d650:	b280      	uxth	r0, r0
 800d652:	fa0f fe80 	sxth.w	lr, r0
 800d656:	d817      	bhi.n	800d688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d658:	9b04      	ldr	r3, [sp, #16]
 800d65a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d65e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d662:	1c6b      	adds	r3, r5, #1
 800d664:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d668:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d66c:	9b01      	ldr	r3, [sp, #4]
 800d66e:	9801      	ldr	r0, [sp, #4]
 800d670:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d674:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d678:	805a      	strh	r2, [r3, #2]
 800d67a:	809e      	strh	r6, [r3, #4]
 800d67c:	80d9      	strh	r1, [r3, #6]
 800d67e:	9b02      	ldr	r3, [sp, #8]
 800d680:	3c08      	subs	r4, #8
 800d682:	3b01      	subs	r3, #1
 800d684:	9302      	str	r3, [sp, #8]
 800d686:	e747      	b.n	800d518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d688:	9a02      	ldr	r2, [sp, #8]
 800d68a:	45b6      	cmp	lr, r6
 800d68c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d690:	db0d      	blt.n	800d6ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d692:	449c      	add	ip, r3
 800d694:	fa1f fc8c 	uxth.w	ip, ip
 800d698:	445a      	add	r2, fp
 800d69a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d69e:	448c      	add	ip, r1
 800d6a0:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d6a4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d6a8:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d6ac:	e61e      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d6ae:	445a      	add	r2, fp
 800d6b0:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d6b4:	4484      	add	ip, r0
 800d6b6:	e78f      	b.n	800d5d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d6b8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d6bc:	fa1f f18e 	uxth.w	r1, lr
 800d6c0:	eb01 0806 	add.w	r8, r1, r6
 800d6c4:	b293      	uxth	r3, r2
 800d6c6:	fa1f f888 	uxth.w	r8, r8
 800d6ca:	9306      	str	r3, [sp, #24]
 800d6cc:	fa0f f388 	sxth.w	r3, r8
 800d6d0:	9307      	str	r3, [sp, #28]
 800d6d2:	9f06      	ldr	r7, [sp, #24]
 800d6d4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d6d8:	4596      	cmp	lr, r2
 800d6da:	443b      	add	r3, r7
 800d6dc:	b29b      	uxth	r3, r3
 800d6de:	9308      	str	r3, [sp, #32]
 800d6e0:	da24      	bge.n	800d72c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d6e2:	9905      	ldr	r1, [sp, #20]
 800d6e4:	eba3 0308 	sub.w	r3, r3, r8
 800d6e8:	ebaa 0401 	sub.w	r4, sl, r1
 800d6ec:	b2a4      	uxth	r4, r4
 800d6ee:	b29b      	uxth	r3, r3
 800d6f0:	b225      	sxth	r5, r4
 800d6f2:	b219      	sxth	r1, r3
 800d6f4:	eba2 020e 	sub.w	r2, r2, lr
 800d6f8:	eba9 0000 	sub.w	r0, r9, r0
 800d6fc:	436a      	muls	r2, r5
 800d6fe:	4348      	muls	r0, r1
 800d700:	4282      	cmp	r2, r0
 800d702:	9a02      	ldr	r2, [sp, #8]
 800d704:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d708:	445a      	add	r2, fp
 800d70a:	dc06      	bgt.n	800d71a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d70c:	9b07      	ldr	r3, [sp, #28]
 800d70e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d712:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d716:	44a4      	add	ip, r4
 800d718:	e75e      	b.n	800d5d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d71a:	9904      	ldr	r1, [sp, #16]
 800d71c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d720:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d724:	4433      	add	r3, r6
 800d726:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d72a:	e5df      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d72c:	9f06      	ldr	r7, [sp, #24]
 800d72e:	9b04      	ldr	r3, [sp, #16]
 800d730:	1bc9      	subs	r1, r1, r7
 800d732:	fa0f f78a 	sxth.w	r7, sl
 800d736:	b289      	uxth	r1, r1
 800d738:	429f      	cmp	r7, r3
 800d73a:	fa0f fe81 	sxth.w	lr, r1
 800d73e:	dd24      	ble.n	800d78a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 800d740:	9a05      	ldr	r2, [sp, #20]
 800d742:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d746:	ebaa 0202 	sub.w	r2, sl, r2
 800d74a:	9d07      	ldr	r5, [sp, #28]
 800d74c:	b292      	uxth	r2, r2
 800d74e:	eba5 0a03 	sub.w	sl, r5, r3
 800d752:	b214      	sxth	r4, r2
 800d754:	eba9 0000 	sub.w	r0, r9, r0
 800d758:	fb0e f000 	mul.w	r0, lr, r0
 800d75c:	fb04 fa0a 	mul.w	sl, r4, sl
 800d760:	9b02      	ldr	r3, [sp, #8]
 800d762:	4550      	cmp	r0, sl
 800d764:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800d768:	445b      	add	r3, fp
 800d76a:	db03      	blt.n	800d774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 800d76c:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d770:	4494      	add	ip, r2
 800d772:	e731      	b.n	800d5d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d774:	9a04      	ldr	r2, [sp, #16]
 800d776:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d77a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d77e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d782:	4431      	add	r1, r6
 800d784:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d788:	e75b      	b.n	800d642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d78a:	9b08      	ldr	r3, [sp, #32]
 800d78c:	2d06      	cmp	r5, #6
 800d78e:	eba3 0308 	sub.w	r3, r3, r8
 800d792:	b29b      	uxth	r3, r3
 800d794:	b218      	sxth	r0, r3
 800d796:	d813      	bhi.n	800d7c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 800d798:	9b07      	ldr	r3, [sp, #28]
 800d79a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800d79e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800d7a2:	1c6b      	adds	r3, r5, #1
 800d7a4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d7a8:	9b01      	ldr	r3, [sp, #4]
 800d7aa:	9901      	ldr	r1, [sp, #4]
 800d7ac:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d7b0:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d7b4:	805a      	strh	r2, [r3, #2]
 800d7b6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d7b8:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d7bc:	809a      	strh	r2, [r3, #4]
 800d7be:	e75e      	b.n	800d67e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d7c0:	9c02      	ldr	r4, [sp, #8]
 800d7c2:	4570      	cmp	r0, lr
 800d7c4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d7c8:	db0d      	blt.n	800d7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 800d7ca:	4431      	add	r1, r6
 800d7cc:	9b06      	ldr	r3, [sp, #24]
 800d7ce:	b289      	uxth	r1, r1
 800d7d0:	445c      	add	r4, fp
 800d7d2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d7d6:	4419      	add	r1, r3
 800d7d8:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d7dc:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800d7e0:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800d7e4:	e582      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d7e6:	445c      	add	r4, fp
 800d7e8:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800d7ec:	e79a      	b.n	800d724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d7ee:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800d7f2:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d7f6:	1e65      	subs	r5, r4, #1
 800d7f8:	b2ad      	uxth	r5, r5
 800d7fa:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d7fe:	42b5      	cmp	r5, r6
 800d800:	d044      	beq.n	800d88c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 800d802:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800d806:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800d80a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800d80e:	4282      	cmp	r2, r0
 800d810:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800d814:	d11f      	bne.n	800d856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d816:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800d81a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d81e:	459c      	cmp	ip, r3
 800d820:	d119      	bne.n	800d856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d822:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800d826:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d82a:	19d8      	adds	r0, r3, r7
 800d82c:	b200      	sxth	r0, r0
 800d82e:	4288      	cmp	r0, r1
 800d830:	d109      	bne.n	800d846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800d832:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800d836:	4413      	add	r3, r2
 800d838:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800d83c:	4629      	mov	r1, r5
 800d83e:	9801      	ldr	r0, [sp, #4]
 800d840:	f7ff fd2a 	bl	800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d844:	e003      	b.n	800d84e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d846:	4411      	add	r1, r2
 800d848:	b209      	sxth	r1, r1
 800d84a:	42b9      	cmp	r1, r7
 800d84c:	d0f3      	beq.n	800d836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 800d84e:	3d01      	subs	r5, #1
 800d850:	b2ad      	uxth	r5, r5
 800d852:	3c08      	subs	r4, #8
 800d854:	e7d3      	b.n	800d7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800d856:	42b9      	cmp	r1, r7
 800d858:	d1f9      	bne.n	800d84e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d85a:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800d85e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d862:	4299      	cmp	r1, r3
 800d864:	d1f3      	bne.n	800d84e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d866:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d86a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d86e:	181f      	adds	r7, r3, r0
 800d870:	b23f      	sxth	r7, r7
 800d872:	42ba      	cmp	r2, r7
 800d874:	d105      	bne.n	800d882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 800d876:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800d87a:	440b      	add	r3, r1
 800d87c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d880:	e7dc      	b.n	800d83c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 800d882:	440a      	add	r2, r1
 800d884:	b212      	sxth	r2, r2
 800d886:	4290      	cmp	r0, r2
 800d888:	d1e1      	bne.n	800d84e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d88a:	e7f6      	b.n	800d87a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 800d88c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800d890:	2e07      	cmp	r6, #7
 800d892:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d896:	d812      	bhi.n	800d8be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d898:	1c75      	adds	r5, r6, #1
 800d89a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800d89e:	9d01      	ldr	r5, [sp, #4]
 800d8a0:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d8a4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800d8a8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800d8ac:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800d8b0:	442c      	add	r4, r5
 800d8b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d8b6:	8061      	strh	r1, [r4, #2]
 800d8b8:	80a2      	strh	r2, [r4, #4]
 800d8ba:	80e3      	strh	r3, [r4, #6]
 800d8bc:	e580      	b.n	800d3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d8be:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800d8c2:	f04f 37ff 	mov.w	r7, #4294967295
 800d8c6:	2500      	movs	r5, #0
 800d8c8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d8cc:	3e01      	subs	r6, #1
 800d8ce:	445c      	add	r4, fp
 800d8d0:	9305      	str	r3, [sp, #20]
 800d8d2:	1e72      	subs	r2, r6, #1
 800d8d4:	4691      	mov	r9, r2
 800d8d6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d8da:	9302      	str	r3, [sp, #8]
 800d8dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d8e0:	9304      	str	r3, [sp, #16]
 800d8e2:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800d8e6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d8ea:	bf16      	itet	ne
 800d8ec:	9905      	ldrne	r1, [sp, #20]
 800d8ee:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d8f2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d8f6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d8fa:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d8fe:	6818      	ldr	r0, [r3, #0]
 800d900:	fb18 f801 	smulbb	r8, r8, r1
 800d904:	6859      	ldr	r1, [r3, #4]
 800d906:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d90a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d90e:	4671      	mov	r1, lr
 800d910:	a80c      	add	r0, sp, #48	@ 0x30
 800d912:	9207      	str	r2, [sp, #28]
 800d914:	9306      	str	r3, [sp, #24]
 800d916:	f7ff fb6d 	bl	800cff4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d91a:	f04f 0c08 	mov.w	ip, #8
 800d91e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d922:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d926:	9b04      	ldr	r3, [sp, #16]
 800d928:	9a02      	ldr	r2, [sp, #8]
 800d92a:	fb10 f001 	smulbb	r0, r0, r1
 800d92e:	fb02 8803 	mla	r8, r2, r3, r8
 800d932:	eba0 0108 	sub.w	r1, r0, r8
 800d936:	fb90 f0fc 	sdiv	r0, r0, ip
 800d93a:	4288      	cmp	r0, r1
 800d93c:	dc20      	bgt.n	800d980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d93e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d942:	4551      	cmp	r1, sl
 800d944:	da03      	bge.n	800d94e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d946:	b1d9      	cbz	r1, 800d980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d948:	468a      	mov	sl, r1
 800d94a:	464f      	mov	r7, r9
 800d94c:	4635      	mov	r5, r6
 800d94e:	f109 39ff 	add.w	r9, r9, #4294967295
 800d952:	f119 0f02 	cmn.w	r9, #2
 800d956:	d1c6      	bne.n	800d8e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 800d958:	4616      	mov	r6, r2
 800d95a:	3201      	adds	r2, #1
 800d95c:	f1a4 0408 	sub.w	r4, r4, #8
 800d960:	d1b7      	bne.n	800d8d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800d962:	9b01      	ldr	r3, [sp, #4]
 800d964:	b2ac      	uxth	r4, r5
 800d966:	00ed      	lsls	r5, r5, #3
 800d968:	1958      	adds	r0, r3, r5
 800d96a:	1c7b      	adds	r3, r7, #1
 800d96c:	d10b      	bne.n	800d986 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d96e:	4601      	mov	r1, r0
 800d970:	9803      	ldr	r0, [sp, #12]
 800d972:	f7ff fb3f 	bl	800cff4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d976:	4621      	mov	r1, r4
 800d978:	9801      	ldr	r0, [sp, #4]
 800d97a:	f7ff fc8d 	bl	800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d97e:	e4b5      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d980:	464f      	mov	r7, r9
 800d982:	4635      	mov	r5, r6
 800d984:	e7ed      	b.n	800d962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d986:	9b01      	ldr	r3, [sp, #4]
 800d988:	00ff      	lsls	r7, r7, #3
 800d98a:	19d9      	adds	r1, r3, r7
 800d98c:	f7ff fb32 	bl	800cff4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d990:	9b03      	ldr	r3, [sp, #12]
 800d992:	445f      	add	r7, fp
 800d994:	cb03      	ldmia	r3!, {r0, r1}
 800d996:	445d      	add	r5, fp
 800d998:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800d99c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800d9a0:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d9a4:	9b03      	ldr	r3, [sp, #12]
 800d9a6:	6869      	ldr	r1, [r5, #4]
 800d9a8:	c303      	stmia	r3!, {r0, r1}
 800d9aa:	e7e4      	b.n	800d976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d9ac <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d9ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9b0:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800d9b4:	b09b      	sub	sp, #108	@ 0x6c
 800d9b6:	4604      	mov	r4, r0
 800d9b8:	4630      	mov	r0, r6
 800d9ba:	f7fd f9a4 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9be:	4605      	mov	r5, r0
 800d9c0:	b948      	cbnz	r0, 800d9d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d9c2:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d9c6:	6823      	ldr	r3, [r4, #0]
 800d9c8:	4620      	mov	r0, r4
 800d9ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d9cc:	4798      	blx	r3
 800d9ce:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800d9d2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800d9d6:	4bc6      	ldr	r3, [pc, #792]	@ (800dcf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d9d8:	681b      	ldr	r3, [r3, #0]
 800d9da:	2b00      	cmp	r3, #0
 800d9dc:	d03f      	beq.n	800da5e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d9de:	4dc5      	ldr	r5, [pc, #788]	@ (800dcf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d9e0:	4628      	mov	r0, r5
 800d9e2:	f7fd f990 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9e6:	4606      	mov	r6, r0
 800d9e8:	2800      	cmp	r0, #0
 800d9ea:	d138      	bne.n	800da5e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d9ec:	4628      	mov	r0, r5
 800d9ee:	f7ff f995 	bl	800cd1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d9f2:	6823      	ldr	r3, [r4, #0]
 800d9f4:	6829      	ldr	r1, [r5, #0]
 800d9f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d9f8:	686a      	ldr	r2, [r5, #4]
 800d9fa:	4620      	mov	r0, r4
 800d9fc:	4798      	blx	r3
 800d9fe:	802e      	strh	r6, [r5, #0]
 800da00:	806e      	strh	r6, [r5, #2]
 800da02:	80ae      	strh	r6, [r5, #4]
 800da04:	80ee      	strh	r6, [r5, #6]
 800da06:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800da0a:	4dbb      	ldr	r5, [pc, #748]	@ (800dcf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800da0c:	4640      	mov	r0, r8
 800da0e:	f7ff fbeb 	bl	800d1e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800da12:	882e      	ldrh	r6, [r5, #0]
 800da14:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800da18:	4633      	mov	r3, r6
 800da1a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800da1e:	42bb      	cmp	r3, r7
 800da20:	d224      	bcs.n	800da6c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da22:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800da26:	2907      	cmp	r1, #7
 800da28:	d816      	bhi.n	800da58 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800da2a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800da2e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800da32:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800da36:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800da3a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800da3e:	1c4a      	adds	r2, r1, #1
 800da40:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800da44:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800da48:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800da4c:	f8a2 a002 	strh.w	sl, [r2, #2]
 800da50:	f8a2 e004 	strh.w	lr, [r2, #4]
 800da54:	f8a2 c006 	strh.w	ip, [r2, #6]
 800da58:	3301      	adds	r3, #1
 800da5a:	b29b      	uxth	r3, r3
 800da5c:	e7df      	b.n	800da1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800da5e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800da62:	2b00      	cmp	r3, #0
 800da64:	d1cf      	bne.n	800da06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800da66:	b01b      	add	sp, #108	@ 0x6c
 800da68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da6c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800da70:	42b3      	cmp	r3, r6
 800da72:	d90c      	bls.n	800da8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800da74:	6822      	ldr	r2, [r4, #0]
 800da76:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800da7a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800da7c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800da80:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800da84:	4620      	mov	r0, r4
 800da86:	3601      	adds	r6, #1
 800da88:	47b8      	blx	r7
 800da8a:	b2b6      	uxth	r6, r6
 800da8c:	e7ee      	b.n	800da6c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da8e:	4a9b      	ldr	r2, [pc, #620]	@ (800dcfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800da90:	6813      	ldr	r3, [r2, #0]
 800da92:	4691      	mov	r9, r2
 800da94:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800da98:	2b01      	cmp	r3, #1
 800da9a:	f040 80e2 	bne.w	800dc62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800da9e:	2600      	movs	r6, #0
 800daa0:	8829      	ldrh	r1, [r5, #0]
 800daa2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800daa6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800daaa:	33ae      	adds	r3, #174	@ 0xae
 800daac:	428f      	cmp	r7, r1
 800daae:	f103 0308 	add.w	r3, r3, #8
 800dab2:	dd0a      	ble.n	800daca <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800dab4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800dab8:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800dabc:	3101      	adds	r1, #1
 800dabe:	4402      	add	r2, r0
 800dac0:	b212      	sxth	r2, r2
 800dac2:	4296      	cmp	r6, r2
 800dac4:	bfb8      	it	lt
 800dac6:	4616      	movlt	r6, r2
 800dac8:	e7f0      	b.n	800daac <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800daca:	4b8d      	ldr	r3, [pc, #564]	@ (800dd00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800dacc:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800dcfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800dad0:	881b      	ldrh	r3, [r3, #0]
 800dad2:	2b0f      	cmp	r3, #15
 800dad4:	bf88      	it	hi
 800dad6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800dada:	f04f 0300 	mov.w	r3, #0
 800dade:	bf98      	it	ls
 800dae0:	f04f 0b01 	movls.w	fp, #1
 800dae4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800dae8:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800daec:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800daf0:	4b82      	ldr	r3, [pc, #520]	@ (800dcfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800daf2:	4438      	add	r0, r7
 800daf4:	b207      	sxth	r7, r0
 800daf6:	6818      	ldr	r0, [r3, #0]
 800daf8:	42b7      	cmp	r7, r6
 800dafa:	6803      	ldr	r3, [r0, #0]
 800dafc:	f280 8083 	bge.w	800dc06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800db00:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800db04:	4798      	blx	r3
 800db06:	eb07 030b 	add.w	r3, r7, fp
 800db0a:	4298      	cmp	r0, r3
 800db0c:	da07      	bge.n	800db1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800db0e:	42b0      	cmp	r0, r6
 800db10:	da05      	bge.n	800db1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800db12:	4287      	cmp	r7, r0
 800db14:	dd6c      	ble.n	800dbf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800db16:	2f00      	cmp	r7, #0
 800db18:	dd6a      	ble.n	800dbf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800db1a:	4630      	mov	r0, r6
 800db1c:	e004      	b.n	800db28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800db1e:	4287      	cmp	r7, r0
 800db20:	dcfb      	bgt.n	800db1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800db22:	42b0      	cmp	r0, r6
 800db24:	bfa8      	it	ge
 800db26:	4630      	movge	r0, r6
 800db28:	2200      	movs	r2, #0
 800db2a:	4b76      	ldr	r3, [pc, #472]	@ (800dd04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800db2c:	1bc0      	subs	r0, r0, r7
 800db2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800db32:	f8ad 7016 	strh.w	r7, [sp, #22]
 800db36:	882f      	ldrh	r7, [r5, #0]
 800db38:	f8ad 2014 	strh.w	r2, [sp, #20]
 800db3c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db40:	f8ad 001a 	strh.w	r0, [sp, #26]
 800db44:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800db48:	42bb      	cmp	r3, r7
 800db4a:	d9cd      	bls.n	800dae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800db4c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800db50:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800db54:	ab07      	add	r3, sp, #28
 800db56:	6851      	ldr	r1, [r2, #4]
 800db58:	c303      	stmia	r3!, {r0, r1}
 800db5a:	a905      	add	r1, sp, #20
 800db5c:	a807      	add	r0, sp, #28
 800db5e:	f7ff f9b0 	bl	800cec2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800db62:	2800      	cmp	r0, #0
 800db64:	d04c      	beq.n	800dc00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800db66:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800db6a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800db6e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800db72:	4686      	mov	lr, r0
 800db74:	4290      	cmp	r0, r2
 800db76:	4450      	add	r0, sl
 800db78:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800db7c:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800db80:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db84:	bfb8      	it	lt
 800db86:	4696      	movlt	lr, r2
 800db88:	4452      	add	r2, sl
 800db8a:	4299      	cmp	r1, r3
 800db8c:	b280      	uxth	r0, r0
 800db8e:	b292      	uxth	r2, r2
 800db90:	468c      	mov	ip, r1
 800db92:	9302      	str	r3, [sp, #8]
 800db94:	bfb8      	it	lt
 800db96:	469c      	movlt	ip, r3
 800db98:	fa0f fa82 	sxth.w	sl, r2
 800db9c:	b203      	sxth	r3, r0
 800db9e:	4553      	cmp	r3, sl
 800dba0:	bfb8      	it	lt
 800dba2:	4602      	movlt	r2, r0
 800dba4:	eba2 020e 	sub.w	r2, r2, lr
 800dba8:	f8ad 2020 	strh.w	r2, [sp, #32]
 800dbac:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800dbb0:	9b02      	ldr	r3, [sp, #8]
 800dbb2:	4411      	add	r1, r2
 800dbb4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800dbb8:	b289      	uxth	r1, r1
 800dbba:	4413      	add	r3, r2
 800dbbc:	b29b      	uxth	r3, r3
 800dbbe:	b208      	sxth	r0, r1
 800dbc0:	b21a      	sxth	r2, r3
 800dbc2:	4290      	cmp	r0, r2
 800dbc4:	bfb8      	it	lt
 800dbc6:	460b      	movlt	r3, r1
 800dbc8:	eba3 030c 	sub.w	r3, r3, ip
 800dbcc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800dbd0:	f8ad e01c 	strh.w	lr, [sp, #28]
 800dbd4:	f8ad c01e 	strh.w	ip, [sp, #30]
 800dbd8:	a807      	add	r0, sp, #28
 800dbda:	f7fd f894 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dbde:	b920      	cbnz	r0, 800dbea <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800dbe0:	6823      	ldr	r3, [r4, #0]
 800dbe2:	a907      	add	r1, sp, #28
 800dbe4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dbe6:	4620      	mov	r0, r4
 800dbe8:	4798      	blx	r3
 800dbea:	3701      	adds	r7, #1
 800dbec:	b2bf      	uxth	r7, r7
 800dbee:	e7a9      	b.n	800db44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800dbf0:	f8d9 0000 	ldr.w	r0, [r9]
 800dbf4:	2101      	movs	r1, #1
 800dbf6:	6803      	ldr	r3, [r0, #0]
 800dbf8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800dbfc:	4798      	blx	r3
 800dbfe:	e773      	b.n	800dae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800dc00:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800dc04:	e7e8      	b.n	800dbd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800dc06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dc08:	4798      	blx	r3
 800dc0a:	4b3f      	ldr	r3, [pc, #252]	@ (800dd08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800dc0c:	781b      	ldrb	r3, [r3, #0]
 800dc0e:	2b00      	cmp	r3, #0
 800dc10:	f43f af29 	beq.w	800da66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dc14:	2300      	movs	r3, #0
 800dc16:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800dc1a:	882b      	ldrh	r3, [r5, #0]
 800dc1c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800dc20:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800dc24:	42ab      	cmp	r3, r5
 800dc26:	f4bf af1e 	bcs.w	800da66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dc2a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800dc2e:	2907      	cmp	r1, #7
 800dc30:	d814      	bhi.n	800dc5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800dc32:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800dc36:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800dc3a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800dc3e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800dc42:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800dc46:	1c4a      	adds	r2, r1, #1
 800dc48:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800dc4c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800dc50:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dc54:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dc58:	8097      	strh	r7, [r2, #4]
 800dc5a:	80d6      	strh	r6, [r2, #6]
 800dc5c:	3301      	adds	r3, #1
 800dc5e:	b29b      	uxth	r3, r3
 800dc60:	e7e0      	b.n	800dc24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800dc62:	2b02      	cmp	r3, #2
 800dc64:	f040 8133 	bne.w	800dece <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800dc68:	4b28      	ldr	r3, [pc, #160]	@ (800dd0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800dc6a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800dc6e:	781b      	ldrb	r3, [r3, #0]
 800dc70:	2b01      	cmp	r3, #1
 800dc72:	f000 8098 	beq.w	800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dc76:	882a      	ldrh	r2, [r5, #0]
 800dc78:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800dc7c:	3201      	adds	r2, #1
 800dc7e:	b292      	uxth	r2, r2
 800dc80:	2900      	cmp	r1, #0
 800dc82:	d0c2      	beq.n	800dc0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dc84:	4694      	mov	ip, r2
 800dc86:	f04f 0900 	mov.w	r9, #0
 800dc8a:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800dc8e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800dc92:	441e      	add	r6, r3
 800dc94:	b236      	sxth	r6, r6
 800dc96:	fa1f f38c 	uxth.w	r3, ip
 800dc9a:	4299      	cmp	r1, r3
 800dc9c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800dca0:	f240 80bf 	bls.w	800de22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800dca4:	4427      	add	r7, r4
 800dca6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800dcaa:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800dcae:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800dcb2:	4283      	cmp	r3, r0
 800dcb4:	f340 80a1 	ble.w	800ddfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800dcb8:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800dcbc:	46e1      	mov	r9, ip
 800dcbe:	4406      	add	r6, r0
 800dcc0:	b236      	sxth	r6, r6
 800dcc2:	429e      	cmp	r6, r3
 800dcc4:	bfa8      	it	ge
 800dcc6:	461e      	movge	r6, r3
 800dcc8:	f10c 0c01 	add.w	ip, ip, #1
 800dccc:	e7e3      	b.n	800dc96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800dcce:	d10a      	bne.n	800dce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800dcd0:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800dcd4:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800dcd8:	4562      	cmp	r2, ip
 800dcda:	bfb8      	it	lt
 800dcdc:	4662      	movlt	r2, ip
 800dcde:	4288      	cmp	r0, r1
 800dce0:	bfb8      	it	lt
 800dce2:	461f      	movlt	r7, r3
 800dce4:	e087      	b.n	800ddf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dce6:	428a      	cmp	r2, r1
 800dce8:	bfb8      	it	lt
 800dcea:	460a      	movlt	r2, r1
 800dcec:	e083      	b.n	800ddf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dcee:	bf00      	nop
 800dcf0:	20082f40 	.word	0x20082f40
 800dcf4:	20082f4c 	.word	0x20082f4c
 800dcf8:	20000060 	.word	0x20000060
 800dcfc:	20082f08 	.word	0x20082f08
 800dd00:	20082efe 	.word	0x20082efe
 800dd04:	20082efc 	.word	0x20082efc
 800dd08:	20082f06 	.word	0x20082f06
 800dd0c:	20082f00 	.word	0x20082f00
 800dd10:	19a1      	adds	r1, r4, r6
 800dd12:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800dd16:	ab07      	add	r3, sp, #28
 800dd18:	6849      	ldr	r1, [r1, #4]
 800dd1a:	c303      	stmia	r3!, {r0, r1}
 800dd1c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dd20:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dd24:	2b13      	cmp	r3, #19
 800dd26:	bfd8      	it	le
 800dd28:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800dd2c:	440b      	add	r3, r1
 800dd2e:	1a9b      	subs	r3, r3, r2
 800dd30:	a807      	add	r0, sp, #28
 800dd32:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dd36:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dd3a:	f7ff f809 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dd3e:	a807      	add	r0, sp, #28
 800dd40:	f7fc ffe1 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd44:	bb78      	cbnz	r0, 800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd46:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800dd4a:	f8d9 0000 	ldr.w	r0, [r9]
 800dd4e:	f1bc 0f14 	cmp.w	ip, #20
 800dd52:	bfa8      	it	ge
 800dd54:	f04f 0c14 	movge.w	ip, #20
 800dd58:	f8d0 e000 	ldr.w	lr, [r0]
 800dd5c:	fa1f fc8c 	uxth.w	ip, ip
 800dd60:	f8cd c000 	str.w	ip, [sp]
 800dd64:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800dd68:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dd6c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dd70:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dd74:	47d8      	blx	fp
 800dd76:	4683      	mov	fp, r0
 800dd78:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dd7c:	a807      	add	r0, sp, #28
 800dd7e:	f7fe ffcd 	bl	800cd1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dd82:	6823      	ldr	r3, [r4, #0]
 800dd84:	4620      	mov	r0, r4
 800dd86:	4426      	add	r6, r4
 800dd88:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dd8a:	a907      	add	r1, sp, #28
 800dd8c:	4798      	blx	r3
 800dd8e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd92:	eba0 000b 	sub.w	r0, r0, fp
 800dd96:	b200      	sxth	r0, r0
 800dd98:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800dd9c:	b918      	cbnz	r0, 800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd9e:	b2b9      	uxth	r1, r7
 800dda0:	4650      	mov	r0, sl
 800dda2:	f7ff fa79 	bl	800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dda6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800ddaa:	f1bb 0f00 	cmp.w	fp, #0
 800ddae:	f43f af2c 	beq.w	800dc0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800ddb2:	2700      	movs	r7, #0
 800ddb4:	882b      	ldrh	r3, [r5, #0]
 800ddb6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800ddba:	3301      	adds	r3, #1
 800ddbc:	b29b      	uxth	r3, r3
 800ddbe:	b299      	uxth	r1, r3
 800ddc0:	458b      	cmp	fp, r1
 800ddc2:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800ddc6:	d9a3      	bls.n	800dd10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800ddc8:	4426      	add	r6, r4
 800ddca:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800ddce:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ddd2:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800ddd6:	4408      	add	r0, r1
 800ddd8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800dddc:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800dde0:	b200      	sxth	r0, r0
 800dde2:	4461      	add	r1, ip
 800dde4:	b209      	sxth	r1, r1
 800dde6:	4288      	cmp	r0, r1
 800dde8:	f6bf af71 	bge.w	800dcce <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800ddec:	4584      	cmp	ip, r0
 800ddee:	4662      	mov	r2, ip
 800ddf0:	461f      	mov	r7, r3
 800ddf2:	bfb8      	it	lt
 800ddf4:	4602      	movlt	r2, r0
 800ddf6:	3301      	adds	r3, #1
 800ddf8:	e7e1      	b.n	800ddbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800ddfa:	d10e      	bne.n	800de1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800ddfc:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800de00:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800de04:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800de08:	4473      	add	r3, lr
 800de0a:	b21b      	sxth	r3, r3
 800de0c:	429e      	cmp	r6, r3
 800de0e:	bfa8      	it	ge
 800de10:	461e      	movge	r6, r3
 800de12:	4287      	cmp	r7, r0
 800de14:	bfb8      	it	lt
 800de16:	46e1      	movlt	r9, ip
 800de18:	e756      	b.n	800dcc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800de1a:	4286      	cmp	r6, r0
 800de1c:	bfa8      	it	ge
 800de1e:	4606      	movge	r6, r0
 800de20:	e752      	b.n	800dcc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800de22:	eb0a 0007 	add.w	r0, sl, r7
 800de26:	4427      	add	r7, r4
 800de28:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800de2c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800de30:	f1bb 0f13 	cmp.w	fp, #19
 800de34:	bfde      	ittt	le
 800de36:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800de3a:	445e      	addle	r6, fp
 800de3c:	b236      	sxthle	r6, r6
 800de3e:	f7fc ff62 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de42:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800de46:	2800      	cmp	r0, #0
 800de48:	f47f af1a 	bne.w	800dc80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800de4c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800de50:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de54:	1ab6      	subs	r6, r6, r2
 800de56:	2e14      	cmp	r6, #20
 800de58:	bfa8      	it	ge
 800de5a:	2614      	movge	r6, #20
 800de5c:	4828      	ldr	r0, [pc, #160]	@ (800df00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800de5e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800de62:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800de66:	6800      	ldr	r0, [r0, #0]
 800de68:	f8ad 101c 	strh.w	r1, [sp, #28]
 800de6c:	f8ad 201e 	strh.w	r2, [sp, #30]
 800de70:	f8ad 3020 	strh.w	r3, [sp, #32]
 800de74:	f8d0 c000 	ldr.w	ip, [r0]
 800de78:	b2b6      	uxth	r6, r6
 800de7a:	fa1f fb8b 	uxth.w	fp, fp
 800de7e:	455e      	cmp	r6, fp
 800de80:	bf94      	ite	ls
 800de82:	9600      	strls	r6, [sp, #0]
 800de84:	f8cd b000 	strhi.w	fp, [sp]
 800de88:	b292      	uxth	r2, r2
 800de8a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800de8e:	b29b      	uxth	r3, r3
 800de90:	b289      	uxth	r1, r1
 800de92:	47b0      	blx	r6
 800de94:	6823      	ldr	r3, [r4, #0]
 800de96:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de9a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de9c:	a907      	add	r1, sp, #28
 800de9e:	4620      	mov	r0, r4
 800dea0:	4798      	blx	r3
 800dea2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800dea6:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800deaa:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800deae:	1a5b      	subs	r3, r3, r1
 800deb0:	440a      	add	r2, r1
 800deb2:	b21b      	sxth	r3, r3
 800deb4:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800deb8:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800debc:	2b00      	cmp	r3, #0
 800debe:	f47f aeda 	bne.w	800dc76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800dec2:	fa1f f189 	uxth.w	r1, r9
 800dec6:	4650      	mov	r0, sl
 800dec8:	f7ff f9e6 	bl	800d298 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800decc:	e6d3      	b.n	800dc76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800dece:	882e      	ldrh	r6, [r5, #0]
 800ded0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800ded4:	42b3      	cmp	r3, r6
 800ded6:	f67f ae98 	bls.w	800dc0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800deda:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800dede:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800dee2:	ab07      	add	r3, sp, #28
 800dee4:	6851      	ldr	r1, [r2, #4]
 800dee6:	c303      	stmia	r3!, {r0, r1}
 800dee8:	a807      	add	r0, sp, #28
 800deea:	f7fc ff0c 	bl	800ad06 <_ZNK8touchgfx4Rect7isEmptyEv>
 800deee:	b920      	cbnz	r0, 800defa <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800def0:	6823      	ldr	r3, [r4, #0]
 800def2:	a907      	add	r1, sp, #28
 800def4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800def6:	4620      	mov	r0, r4
 800def8:	4798      	blx	r3
 800defa:	3601      	adds	r6, #1
 800defc:	b2b6      	uxth	r6, r6
 800defe:	e7e7      	b.n	800ded0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800df00:	20082f08 	.word	0x20082f08

0800df04 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800df04:	2200      	movs	r2, #0
 800df06:	4b03      	ldr	r3, [pc, #12]	@ (800df14 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800df08:	801a      	strh	r2, [r3, #0]
 800df0a:	805a      	strh	r2, [r3, #2]
 800df0c:	809a      	strh	r2, [r3, #4]
 800df0e:	80da      	strh	r2, [r3, #6]
 800df10:	4770      	bx	lr
 800df12:	bf00      	nop
 800df14:	20082f4c 	.word	0x20082f4c

0800df18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800df18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df1c:	4606      	mov	r6, r0
 800df1e:	b09d      	sub	sp, #116	@ 0x74
 800df20:	a803      	add	r0, sp, #12
 800df22:	4614      	mov	r4, r2
 800df24:	468a      	mov	sl, r1
 800df26:	461d      	mov	r5, r3
 800df28:	f001 f8a2 	bl	800f070 <_ZN8touchgfx12TextProviderC1Ev>
 800df2c:	6833      	ldr	r3, [r6, #0]
 800df2e:	4630      	mov	r0, r6
 800df30:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800df32:	4798      	blx	r3
 800df34:	6833      	ldr	r3, [r6, #0]
 800df36:	4607      	mov	r7, r0
 800df38:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800df3a:	4630      	mov	r0, r6
 800df3c:	4798      	blx	r3
 800df3e:	462a      	mov	r2, r5
 800df40:	2500      	movs	r5, #0
 800df42:	9000      	str	r0, [sp, #0]
 800df44:	4621      	mov	r1, r4
 800df46:	463b      	mov	r3, r7
 800df48:	a803      	add	r0, sp, #12
 800df4a:	f001 f8e4 	bl	800f116 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df4e:	462c      	mov	r4, r5
 800df50:	46a9      	mov	r9, r5
 800df52:	46a8      	mov	r8, r5
 800df54:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800df58:	2300      	movs	r3, #0
 800df5a:	9302      	str	r3, [sp, #8]
 800df5c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800df60:	429c      	cmp	r4, r3
 800df62:	d002      	beq.n	800df6a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800df64:	455c      	cmp	r4, fp
 800df66:	bf18      	it	ne
 800df68:	4625      	movne	r5, r4
 800df6a:	ab02      	add	r3, sp, #8
 800df6c:	4632      	mov	r2, r6
 800df6e:	4651      	mov	r1, sl
 800df70:	a803      	add	r0, sp, #12
 800df72:	f001 fbbf 	bl	800f6f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df76:	4604      	mov	r4, r0
 800df78:	b108      	cbz	r0, 800df7e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800df7a:	280a      	cmp	r0, #10
 800df7c:	d10a      	bne.n	800df94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800df7e:	45c1      	cmp	r9, r8
 800df80:	bf38      	it	cc
 800df82:	46c1      	movcc	r9, r8
 800df84:	f04f 0800 	mov.w	r8, #0
 800df88:	2c00      	cmp	r4, #0
 800df8a:	d1e5      	bne.n	800df58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df8c:	4648      	mov	r0, r9
 800df8e:	b01d      	add	sp, #116	@ 0x74
 800df90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df94:	9a02      	ldr	r2, [sp, #8]
 800df96:	2a00      	cmp	r2, #0
 800df98:	d0de      	beq.n	800df58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df9a:	7b57      	ldrb	r7, [r2, #13]
 800df9c:	6833      	ldr	r3, [r6, #0]
 800df9e:	007f      	lsls	r7, r7, #1
 800dfa0:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800dfa4:	7a97      	ldrb	r7, [r2, #10]
 800dfa6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800dfa8:	4307      	orrs	r7, r0
 800dfaa:	4629      	mov	r1, r5
 800dfac:	4630      	mov	r0, r6
 800dfae:	8894      	ldrh	r4, [r2, #4]
 800dfb0:	4798      	blx	r3
 800dfb2:	4438      	add	r0, r7
 800dfb4:	4480      	add	r8, r0
 800dfb6:	fa1f f888 	uxth.w	r8, r8
 800dfba:	e7e5      	b.n	800df88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800dfbc <_ZNK8touchgfx4Font12getCharWidthEt>:
 800dfbc:	b508      	push	{r3, lr}
 800dfbe:	6803      	ldr	r3, [r0, #0]
 800dfc0:	68db      	ldr	r3, [r3, #12]
 800dfc2:	4798      	blx	r3
 800dfc4:	b128      	cbz	r0, 800dfd2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800dfc6:	7b43      	ldrb	r3, [r0, #13]
 800dfc8:	7a80      	ldrb	r0, [r0, #10]
 800dfca:	005b      	lsls	r3, r3, #1
 800dfcc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dfd0:	4318      	orrs	r0, r3
 800dfd2:	bd08      	pop	{r3, pc}

0800dfd4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dfd4:	b40e      	push	{r1, r2, r3}
 800dfd6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfd8:	4605      	mov	r5, r0
 800dfda:	b09e      	sub	sp, #120	@ 0x78
 800dfdc:	ab23      	add	r3, sp, #140	@ 0x8c
 800dfde:	f853 4b04 	ldr.w	r4, [r3], #4
 800dfe2:	a805      	add	r0, sp, #20
 800dfe4:	9303      	str	r3, [sp, #12]
 800dfe6:	f001 f843 	bl	800f070 <_ZN8touchgfx12TextProviderC1Ev>
 800dfea:	682b      	ldr	r3, [r5, #0]
 800dfec:	4628      	mov	r0, r5
 800dfee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dff0:	4798      	blx	r3
 800dff2:	682b      	ldr	r3, [r5, #0]
 800dff4:	4606      	mov	r6, r0
 800dff6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dff8:	4628      	mov	r0, r5
 800dffa:	4798      	blx	r3
 800dffc:	4621      	mov	r1, r4
 800dffe:	2400      	movs	r4, #0
 800e000:	4633      	mov	r3, r6
 800e002:	9000      	str	r0, [sp, #0]
 800e004:	9a03      	ldr	r2, [sp, #12]
 800e006:	ae1e      	add	r6, sp, #120	@ 0x78
 800e008:	a805      	add	r0, sp, #20
 800e00a:	f001 f884 	bl	800f116 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e00e:	f846 4d68 	str.w	r4, [r6, #-104]!
 800e012:	4633      	mov	r3, r6
 800e014:	462a      	mov	r2, r5
 800e016:	4621      	mov	r1, r4
 800e018:	a805      	add	r0, sp, #20
 800e01a:	f001 fb6b 	bl	800f6f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e01e:	b1f0      	cbz	r0, 800e05e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800e020:	280a      	cmp	r0, #10
 800e022:	d018      	beq.n	800e056 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800e024:	9f04      	ldr	r7, [sp, #16]
 800e026:	b1b7      	cbz	r7, 800e056 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800e028:	7b78      	ldrb	r0, [r7, #13]
 800e02a:	7a3b      	ldrb	r3, [r7, #8]
 800e02c:	00c1      	lsls	r1, r0, #3
 800e02e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800e032:	4319      	orrs	r1, r3
 800e034:	0643      	lsls	r3, r0, #25
 800e036:	bf44      	itt	mi
 800e038:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800e03c:	b219      	sxthmi	r1, r3
 800e03e:	0100      	lsls	r0, r0, #4
 800e040:	79fb      	ldrb	r3, [r7, #7]
 800e042:	88ea      	ldrh	r2, [r5, #6]
 800e044:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e048:	4303      	orrs	r3, r0
 800e04a:	4413      	add	r3, r2
 800e04c:	1a5b      	subs	r3, r3, r1
 800e04e:	b21b      	sxth	r3, r3
 800e050:	429c      	cmp	r4, r3
 800e052:	bfb8      	it	lt
 800e054:	461c      	movlt	r4, r3
 800e056:	4633      	mov	r3, r6
 800e058:	462a      	mov	r2, r5
 800e05a:	2100      	movs	r1, #0
 800e05c:	e7dc      	b.n	800e018 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800e05e:	b2a0      	uxth	r0, r4
 800e060:	b01e      	add	sp, #120	@ 0x78
 800e062:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e066:	b003      	add	sp, #12
 800e068:	4770      	bx	lr

0800e06a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800e06a:	7a43      	ldrb	r3, [r0, #9]
 800e06c:	8880      	ldrh	r0, [r0, #4]
 800e06e:	4418      	add	r0, r3
 800e070:	b280      	uxth	r0, r0
 800e072:	4770      	bx	lr

0800e074 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800e074:	6803      	ldr	r3, [r0, #0]
 800e076:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e078:	4718      	bx	r3

0800e07a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800e07a:	b40e      	push	{r1, r2, r3}
 800e07c:	b570      	push	{r4, r5, r6, lr}
 800e07e:	4604      	mov	r4, r0
 800e080:	b09d      	sub	sp, #116	@ 0x74
 800e082:	ab21      	add	r3, sp, #132	@ 0x84
 800e084:	f853 5b04 	ldr.w	r5, [r3], #4
 800e088:	a803      	add	r0, sp, #12
 800e08a:	9302      	str	r3, [sp, #8]
 800e08c:	f000 fff0 	bl	800f070 <_ZN8touchgfx12TextProviderC1Ev>
 800e090:	6823      	ldr	r3, [r4, #0]
 800e092:	4620      	mov	r0, r4
 800e094:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e096:	4798      	blx	r3
 800e098:	6823      	ldr	r3, [r4, #0]
 800e09a:	4606      	mov	r6, r0
 800e09c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e09e:	4620      	mov	r0, r4
 800e0a0:	4798      	blx	r3
 800e0a2:	4633      	mov	r3, r6
 800e0a4:	9000      	str	r0, [sp, #0]
 800e0a6:	9a02      	ldr	r2, [sp, #8]
 800e0a8:	4629      	mov	r1, r5
 800e0aa:	a803      	add	r0, sp, #12
 800e0ac:	f001 f833 	bl	800f116 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e0b0:	a803      	add	r0, sp, #12
 800e0b2:	f001 fba1 	bl	800f7f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e0b6:	2401      	movs	r4, #1
 800e0b8:	b2a3      	uxth	r3, r4
 800e0ba:	b140      	cbz	r0, 800e0ce <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800e0bc:	280a      	cmp	r0, #10
 800e0be:	bf08      	it	eq
 800e0c0:	3301      	addeq	r3, #1
 800e0c2:	a803      	add	r0, sp, #12
 800e0c4:	bf08      	it	eq
 800e0c6:	b21c      	sxtheq	r4, r3
 800e0c8:	f001 fb96 	bl	800f7f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e0cc:	e7f4      	b.n	800e0b8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800e0ce:	4618      	mov	r0, r3
 800e0d0:	b01d      	add	sp, #116	@ 0x74
 800e0d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0d6:	b003      	add	sp, #12
 800e0d8:	4770      	bx	lr

0800e0da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e0da:	b40e      	push	{r1, r2, r3}
 800e0dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0de:	4604      	mov	r4, r0
 800e0e0:	b09e      	sub	sp, #120	@ 0x78
 800e0e2:	ab23      	add	r3, sp, #140	@ 0x8c
 800e0e4:	f853 5b04 	ldr.w	r5, [r3], #4
 800e0e8:	a805      	add	r0, sp, #20
 800e0ea:	9303      	str	r3, [sp, #12]
 800e0ec:	f000 ffc0 	bl	800f070 <_ZN8touchgfx12TextProviderC1Ev>
 800e0f0:	6823      	ldr	r3, [r4, #0]
 800e0f2:	4620      	mov	r0, r4
 800e0f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e0f6:	4798      	blx	r3
 800e0f8:	6823      	ldr	r3, [r4, #0]
 800e0fa:	4606      	mov	r6, r0
 800e0fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e0fe:	4620      	mov	r0, r4
 800e100:	4798      	blx	r3
 800e102:	4633      	mov	r3, r6
 800e104:	4629      	mov	r1, r5
 800e106:	9000      	str	r0, [sp, #0]
 800e108:	9a03      	ldr	r2, [sp, #12]
 800e10a:	a805      	add	r0, sp, #20
 800e10c:	f001 f803 	bl	800f116 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e110:	2100      	movs	r1, #0
 800e112:	ad1e      	add	r5, sp, #120	@ 0x78
 800e114:	f845 1d68 	str.w	r1, [r5, #-104]!
 800e118:	462b      	mov	r3, r5
 800e11a:	4622      	mov	r2, r4
 800e11c:	a805      	add	r0, sp, #20
 800e11e:	f001 fae9 	bl	800f6f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e122:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800e126:	b1d8      	cbz	r0, 800e160 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800e128:	280a      	cmp	r0, #10
 800e12a:	d012      	beq.n	800e152 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e12c:	9804      	ldr	r0, [sp, #16]
 800e12e:	b180      	cbz	r0, 800e152 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e130:	7b47      	ldrb	r7, [r0, #13]
 800e132:	88e2      	ldrh	r2, [r4, #6]
 800e134:	00fb      	lsls	r3, r7, #3
 800e136:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e13a:	7a03      	ldrb	r3, [r0, #8]
 800e13c:	430b      	orrs	r3, r1
 800e13e:	0679      	lsls	r1, r7, #25
 800e140:	bf44      	itt	mi
 800e142:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e146:	b21b      	sxthmi	r3, r3
 800e148:	1ad3      	subs	r3, r2, r3
 800e14a:	b21b      	sxth	r3, r3
 800e14c:	429e      	cmp	r6, r3
 800e14e:	bfa8      	it	ge
 800e150:	461e      	movge	r6, r3
 800e152:	462b      	mov	r3, r5
 800e154:	4622      	mov	r2, r4
 800e156:	2100      	movs	r1, #0
 800e158:	a805      	add	r0, sp, #20
 800e15a:	f001 facb 	bl	800f6f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e15e:	e7e2      	b.n	800e126 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800e160:	4630      	mov	r0, r6
 800e162:	b01e      	add	sp, #120	@ 0x78
 800e164:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e168:	b003      	add	sp, #12
 800e16a:	4770      	bx	lr

0800e16c <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e16c:	b513      	push	{r0, r1, r4, lr}
 800e16e:	2400      	movs	r4, #0
 800e170:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e174:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e178:	6803      	ldr	r3, [r0, #0]
 800e17a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e17e:	9400      	str	r4, [sp, #0]
 800e180:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e184:	691b      	ldr	r3, [r3, #16]
 800e186:	4669      	mov	r1, sp
 800e188:	4798      	blx	r3
 800e18a:	b002      	add	sp, #8
 800e18c:	bd10      	pop	{r4, pc}

0800e18e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e18e:	b538      	push	{r3, r4, r5, lr}
 800e190:	460c      	mov	r4, r1
 800e192:	4605      	mov	r5, r0
 800e194:	680b      	ldr	r3, [r1, #0]
 800e196:	68db      	ldr	r3, [r3, #12]
 800e198:	4798      	blx	r3
 800e19a:	6823      	ldr	r3, [r4, #0]
 800e19c:	4620      	mov	r0, r4
 800e19e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e1a0:	4629      	mov	r1, r5
 800e1a2:	4798      	blx	r3
 800e1a4:	4628      	mov	r0, r5
 800e1a6:	bd38      	pop	{r3, r4, r5, pc}

0800e1a8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e1a8:	b410      	push	{r4}
 800e1aa:	880a      	ldrh	r2, [r1, #0]
 800e1ac:	8884      	ldrh	r4, [r0, #4]
 800e1ae:	4422      	add	r2, r4
 800e1b0:	800a      	strh	r2, [r1, #0]
 800e1b2:	88c4      	ldrh	r4, [r0, #6]
 800e1b4:	884a      	ldrh	r2, [r1, #2]
 800e1b6:	4422      	add	r2, r4
 800e1b8:	804a      	strh	r2, [r1, #2]
 800e1ba:	6940      	ldr	r0, [r0, #20]
 800e1bc:	b120      	cbz	r0, 800e1c8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e1be:	6803      	ldr	r3, [r0, #0]
 800e1c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e1c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e1c6:	4718      	bx	r3
 800e1c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e1cc:	4770      	bx	lr

0800e1ce <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e1ce:	b570      	push	{r4, r5, r6, lr}
 800e1d0:	460c      	mov	r4, r1
 800e1d2:	8882      	ldrh	r2, [r0, #4]
 800e1d4:	880b      	ldrh	r3, [r1, #0]
 800e1d6:	4605      	mov	r5, r0
 800e1d8:	4413      	add	r3, r2
 800e1da:	800b      	strh	r3, [r1, #0]
 800e1dc:	88c2      	ldrh	r2, [r0, #6]
 800e1de:	884b      	ldrh	r3, [r1, #2]
 800e1e0:	4413      	add	r3, r2
 800e1e2:	804b      	strh	r3, [r1, #2]
 800e1e4:	1d01      	adds	r1, r0, #4
 800e1e6:	4620      	mov	r0, r4
 800e1e8:	f7fc fd4a 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800e1ec:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1f0:	2b00      	cmp	r3, #0
 800e1f2:	dd0b      	ble.n	800e20c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1f4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1f8:	2b00      	cmp	r3, #0
 800e1fa:	dd07      	ble.n	800e20c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1fc:	6968      	ldr	r0, [r5, #20]
 800e1fe:	b128      	cbz	r0, 800e20c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e200:	6803      	ldr	r3, [r0, #0]
 800e202:	4621      	mov	r1, r4
 800e204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e208:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e20a:	4718      	bx	r3
 800e20c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e210 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e210:	b570      	push	{r4, r5, r6, lr}
 800e212:	460c      	mov	r4, r1
 800e214:	8882      	ldrh	r2, [r0, #4]
 800e216:	880b      	ldrh	r3, [r1, #0]
 800e218:	4605      	mov	r5, r0
 800e21a:	4413      	add	r3, r2
 800e21c:	800b      	strh	r3, [r1, #0]
 800e21e:	88c2      	ldrh	r2, [r0, #6]
 800e220:	884b      	ldrh	r3, [r1, #2]
 800e222:	4413      	add	r3, r2
 800e224:	804b      	strh	r3, [r1, #2]
 800e226:	1d01      	adds	r1, r0, #4
 800e228:	4620      	mov	r0, r4
 800e22a:	f7fc fd29 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800e22e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e232:	2b00      	cmp	r3, #0
 800e234:	dd19      	ble.n	800e26a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e236:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e23a:	2b00      	cmp	r3, #0
 800e23c:	dd15      	ble.n	800e26a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e23e:	6968      	ldr	r0, [r5, #20]
 800e240:	b128      	cbz	r0, 800e24e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e242:	6803      	ldr	r3, [r0, #0]
 800e244:	4621      	mov	r1, r4
 800e246:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e24a:	691b      	ldr	r3, [r3, #16]
 800e24c:	4718      	bx	r3
 800e24e:	4b07      	ldr	r3, [pc, #28]	@ (800e26c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e250:	681b      	ldr	r3, [r3, #0]
 800e252:	3304      	adds	r3, #4
 800e254:	429d      	cmp	r5, r3
 800e256:	d108      	bne.n	800e26a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e258:	f7fe ff12 	bl	800d080 <_ZN8touchgfx11Application11getInstanceEv>
 800e25c:	6803      	ldr	r3, [r0, #0]
 800e25e:	6821      	ldr	r1, [r4, #0]
 800e260:	6862      	ldr	r2, [r4, #4]
 800e262:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e264:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e268:	4718      	bx	r3
 800e26a:	bd70      	pop	{r4, r5, r6, pc}
 800e26c:	20082f44 	.word	0x20082f44

0800e270 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e270:	b570      	push	{r4, r5, r6, lr}
 800e272:	4604      	mov	r4, r0
 800e274:	4616      	mov	r6, r2
 800e276:	460d      	mov	r5, r1
 800e278:	b901      	cbnz	r1, 800e27c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e27a:	b192      	cbz	r2, 800e2a2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e27c:	6823      	ldr	r3, [r4, #0]
 800e27e:	4620      	mov	r0, r4
 800e280:	699b      	ldr	r3, [r3, #24]
 800e282:	4798      	blx	r3
 800e284:	88e2      	ldrh	r2, [r4, #6]
 800e286:	88a1      	ldrh	r1, [r4, #4]
 800e288:	4432      	add	r2, r6
 800e28a:	4429      	add	r1, r5
 800e28c:	4620      	mov	r0, r4
 800e28e:	b212      	sxth	r2, r2
 800e290:	b209      	sxth	r1, r1
 800e292:	f7f5 f81c 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 800e296:	6823      	ldr	r3, [r4, #0]
 800e298:	4620      	mov	r0, r4
 800e29a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e29e:	699b      	ldr	r3, [r3, #24]
 800e2a0:	4718      	bx	r3
 800e2a2:	bd70      	pop	{r4, r5, r6, pc}

0800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e2a4:	b510      	push	{r4, lr}
 800e2a6:	2300      	movs	r3, #0
 800e2a8:	4604      	mov	r4, r0
 800e2aa:	4608      	mov	r0, r1
 800e2ac:	8023      	strh	r3, [r4, #0]
 800e2ae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e2b2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e2b6:	8063      	strh	r3, [r4, #2]
 800e2b8:	6803      	ldr	r3, [r0, #0]
 800e2ba:	80a1      	strh	r1, [r4, #4]
 800e2bc:	80e2      	strh	r2, [r4, #6]
 800e2be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e2c0:	4621      	mov	r1, r4
 800e2c2:	4798      	blx	r3
 800e2c4:	4620      	mov	r0, r4
 800e2c6:	bd10      	pop	{r4, pc}

0800e2c8 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 800e2c8:	4770      	bx	lr

0800e2ca <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 800e2ca:	b510      	push	{r4, lr}
 800e2cc:	4604      	mov	r4, r0
 800e2ce:	211c      	movs	r1, #28
 800e2d0:	f022 ff41 	bl	8031156 <_ZdlPvj>
 800e2d4:	4620      	mov	r0, r4
 800e2d6:	bd10      	pop	{r4, pc}

0800e2d8 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 800e2d8:	4a04      	ldr	r2, [pc, #16]	@ (800e2ec <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 800e2da:	6002      	str	r2, [r0, #0]
 800e2dc:	2200      	movs	r2, #0
 800e2de:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e2e2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e2e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e2ea:	4770      	bx	lr
 800e2ec:	08035bd0 	.word	0x08035bd0

0800e2f0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 800e2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2f4:	4604      	mov	r4, r0
 800e2f6:	4696      	mov	lr, r2
 800e2f8:	8b22      	ldrh	r2, [r4, #24]
 800e2fa:	b087      	sub	sp, #28
 800e2fc:	9105      	str	r1, [sp, #20]
 800e2fe:	1c51      	adds	r1, r2, #1
 800e300:	6880      	ldr	r0, [r0, #8]
 800e302:	8321      	strh	r1, [r4, #24]
 800e304:	2101      	movs	r1, #1
 800e306:	5481      	strb	r1, [r0, r2]
 800e308:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e30c:	8b60      	ldrh	r0, [r4, #26]
 800e30e:	ee06 2a90 	vmov	s13, r2
 800e312:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e316:	68e2      	ldr	r2, [r4, #12]
 800e318:	1845      	adds	r5, r0, r1
 800e31a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e31e:	8365      	strh	r5, [r4, #26]
 800e320:	edc2 6a00 	vstr	s13, [r2]
 800e324:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e328:	8b60      	ldrh	r0, [r4, #26]
 800e32a:	ee07 2a10 	vmov	s14, r2
 800e32e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e332:	68e2      	ldr	r2, [r4, #12]
 800e334:	1845      	adds	r5, r0, r1
 800e336:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e33a:	8365      	strh	r5, [r4, #26]
 800e33c:	ed82 7a00 	vstr	s14, [r2]
 800e340:	f8be 2000 	ldrh.w	r2, [lr]
 800e344:	1d18      	adds	r0, r3, #4
 800e346:	9203      	str	r2, [sp, #12]
 800e348:	2200      	movs	r2, #0
 800e34a:	4689      	mov	r9, r1
 800e34c:	4613      	mov	r3, r2
 800e34e:	4694      	mov	ip, r2
 800e350:	460d      	mov	r5, r1
 800e352:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800e356:	9201      	str	r2, [sp, #4]
 800e358:	9202      	str	r2, [sp, #8]
 800e35a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 800e35e:	9e05      	ldr	r6, [sp, #20]
 800e360:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800e364:	f108 0701 	add.w	r7, r8, #1
 800e368:	428e      	cmp	r6, r1
 800e36a:	b2bf      	uxth	r7, r7
 800e36c:	eb0a 0b08 	add.w	fp, sl, r8
 800e370:	f340 80b6 	ble.w	800e4e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 800e374:	9b03      	ldr	r3, [sp, #12]
 800e376:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e37a:	fa43 fb05 	asr.w	fp, r3, r5
 800e37e:	f00b 0b01 	and.w	fp, fp, #1
 800e382:	fa5f f38b 	uxtb.w	r3, fp
 800e386:	9304      	str	r3, [sp, #16]
 800e388:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e38c:	f1bb 0f00 	cmp.w	fp, #0
 800e390:	d057      	beq.n	800e442 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 800e392:	ee07 ca90 	vmov	s15, ip
 800e396:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 800e39a:	ee07 3a90 	vmov	s15, r3
 800e39e:	8327      	strh	r7, [r4, #24]
 800e3a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e3a4:	f1b9 0f00 	cmp.w	r9, #0
 800e3a8:	d028      	beq.n	800e3fc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 800e3aa:	f04f 0602 	mov.w	r6, #2
 800e3ae:	f80a 6008 	strb.w	r6, [sl, r8]
 800e3b2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3b6:	68e7      	ldr	r7, [r4, #12]
 800e3b8:	f108 0901 	add.w	r9, r8, #1
 800e3bc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3c0:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3c4:	edc7 5a00 	vstr	s11, [r7]
 800e3c8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3cc:	68e7      	ldr	r7, [r4, #12]
 800e3ce:	f108 0901 	add.w	r9, r8, #1
 800e3d2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3d6:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3da:	edc7 7a00 	vstr	s15, [r7]
 800e3de:	3501      	adds	r5, #1
 800e3e0:	2d10      	cmp	r5, #16
 800e3e2:	d106      	bne.n	800e3f2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 800e3e4:	9d02      	ldr	r5, [sp, #8]
 800e3e6:	3501      	adds	r5, #1
 800e3e8:	9502      	str	r5, [sp, #8]
 800e3ea:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 800e3ee:	9503      	str	r5, [sp, #12]
 800e3f0:	2500      	movs	r5, #0
 800e3f2:	3101      	adds	r1, #1
 800e3f4:	3004      	adds	r0, #4
 800e3f6:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e3fa:	e7ae      	b.n	800e35a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 800e3fc:	ed9d 5a01 	vldr	s10, [sp, #4]
 800e400:	f04f 0605 	mov.w	r6, #5
 800e404:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e408:	f80a 6008 	strb.w	r6, [sl, r8]
 800e40c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e410:	68e7      	ldr	r7, [r4, #12]
 800e412:	f108 0901 	add.w	r9, r8, #1
 800e416:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e41a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e41e:	ed87 5a00 	vstr	s10, [r7]
 800e422:	ee05 2a10 	vmov	s10, r2
 800e426:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e42a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e42e:	68e7      	ldr	r7, [r4, #12]
 800e430:	f108 0901 	add.w	r9, r8, #1
 800e434:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e438:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e43c:	ed87 5a00 	vstr	s10, [r7]
 800e440:	e7b7      	b.n	800e3b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 800e442:	f1b9 0f00 	cmp.w	r9, #0
 800e446:	d147      	bne.n	800e4d8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 800e448:	eddd 7a01 	vldr	s15, [sp, #4]
 800e44c:	f04f 0605 	mov.w	r6, #5
 800e450:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e454:	8327      	strh	r7, [r4, #24]
 800e456:	f80a 6008 	strb.w	r6, [sl, r8]
 800e45a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e45e:	68e7      	ldr	r7, [r4, #12]
 800e460:	f108 0901 	add.w	r9, r8, #1
 800e464:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e468:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e46c:	edc7 7a00 	vstr	s15, [r7]
 800e470:	ee07 2a90 	vmov	s15, r2
 800e474:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e478:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e47c:	68e7      	ldr	r7, [r4, #12]
 800e47e:	9e01      	ldr	r6, [sp, #4]
 800e480:	f108 0901 	add.w	r9, r8, #1
 800e484:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e488:	4466      	add	r6, ip
 800e48a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e48e:	edc7 7a00 	vstr	s15, [r7]
 800e492:	ee07 6a90 	vmov	s15, r6
 800e496:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e49a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e49e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e4a2:	68e7      	ldr	r7, [r4, #12]
 800e4a4:	f108 0901 	add.w	r9, r8, #1
 800e4a8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e4ac:	441a      	add	r2, r3
 800e4ae:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e4b2:	edc7 7a00 	vstr	s15, [r7]
 800e4b6:	ee07 2a90 	vmov	s15, r2
 800e4ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4be:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e4c2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e4c6:	68e7      	ldr	r7, [r4, #12]
 800e4c8:	f108 0901 	add.w	r9, r8, #1
 800e4cc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e4d0:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e4d4:	edc7 7a00 	vstr	s15, [r7]
 800e4d8:	461a      	mov	r2, r3
 800e4da:	f8cd c004 	str.w	ip, [sp, #4]
 800e4de:	e77e      	b.n	800e3de <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 800e4e0:	f1b9 0f00 	cmp.w	r9, #0
 800e4e4:	d028      	beq.n	800e538 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e4e6:	ee07 ca90 	vmov	s15, ip
 800e4ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4ee:	eef4 6a67 	vcmp.f32	s13, s15
 800e4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4f6:	d108      	bne.n	800e50a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 800e4f8:	ee07 3a90 	vmov	s15, r3
 800e4fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e500:	eeb4 7a67 	vcmp.f32	s14, s15
 800e504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e508:	d016      	beq.n	800e538 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e50a:	2302      	movs	r3, #2
 800e50c:	8327      	strh	r7, [r4, #24]
 800e50e:	f88b 3000 	strb.w	r3, [fp]
 800e512:	8b62      	ldrh	r2, [r4, #26]
 800e514:	68e3      	ldr	r3, [r4, #12]
 800e516:	1c51      	adds	r1, r2, #1
 800e518:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e51c:	8361      	strh	r1, [r4, #26]
 800e51e:	edc3 6a00 	vstr	s13, [r3]
 800e522:	8b62      	ldrh	r2, [r4, #26]
 800e524:	68e3      	ldr	r3, [r4, #12]
 800e526:	1c51      	adds	r1, r2, #1
 800e528:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e52c:	8361      	strh	r1, [r4, #26]
 800e52e:	ed83 7a00 	vstr	s14, [r3]
 800e532:	b007      	add	sp, #28
 800e534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e538:	eddd 7a01 	vldr	s15, [sp, #4]
 800e53c:	2305      	movs	r3, #5
 800e53e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e542:	8327      	strh	r7, [r4, #24]
 800e544:	f88b 3000 	strb.w	r3, [fp]
 800e548:	8b61      	ldrh	r1, [r4, #26]
 800e54a:	68e3      	ldr	r3, [r4, #12]
 800e54c:	1c4d      	adds	r5, r1, #1
 800e54e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e552:	8365      	strh	r5, [r4, #26]
 800e554:	edc3 7a00 	vstr	s15, [r3]
 800e558:	ee07 2a90 	vmov	s15, r2
 800e55c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e560:	8b61      	ldrh	r1, [r4, #26]
 800e562:	68e3      	ldr	r3, [r4, #12]
 800e564:	1c4d      	adds	r5, r1, #1
 800e566:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e56a:	8365      	strh	r5, [r4, #26]
 800e56c:	edc3 7a00 	vstr	s15, [r3]
 800e570:	e7cf      	b.n	800e512 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

0800e574 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 800e574:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e578:	b08e      	sub	sp, #56	@ 0x38
 800e57a:	4604      	mov	r4, r0
 800e57c:	4688      	mov	r8, r1
 800e57e:	4615      	mov	r5, r2
 800e580:	4699      	mov	r9, r3
 800e582:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 800e584:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 800e588:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 800e58a:	f7f4 fb4b 	bl	8002c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 800e58e:	6060      	str	r0, [r4, #4]
 800e590:	f1b9 0f00 	cmp.w	r9, #0
 800e594:	f000 80e8 	beq.w	800e768 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e598:	2800      	cmp	r0, #0
 800e59a:	f000 80e5 	beq.w	800e768 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e59e:	a805      	add	r0, sp, #20
 800e5a0:	f000 f8f9 	bl	800e796 <_ZN8touchgfx9Matrix3x3C1Ev>
 800e5a4:	6833      	ldr	r3, [r6, #0]
 800e5a6:	4630      	mov	r0, r6
 800e5a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800e5aa:	4798      	blx	r3
 800e5ac:	a805      	add	r0, sp, #20
 800e5ae:	eef0 0a40 	vmov.f32	s1, s0
 800e5b2:	f000 f8f4 	bl	800e79e <_ZN8touchgfx9Matrix3x35scaleEff>
 800e5b6:	6860      	ldr	r0, [r4, #4]
 800e5b8:	f1ba 0f03 	cmp.w	sl, #3
 800e5bc:	d83b      	bhi.n	800e636 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 800e5be:	e8df f00a 	tbb	[pc, sl]
 800e5c2:	1002      	.short	0x1002
 800e5c4:	9f71      	.short	0x9f71
 800e5c6:	6803      	ldr	r3, [r0, #0]
 800e5c8:	462a      	mov	r2, r5
 800e5ca:	689b      	ldr	r3, [r3, #8]
 800e5cc:	4641      	mov	r1, r8
 800e5ce:	4798      	blx	r3
 800e5d0:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e5d4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e5d8:	ee07 7a90 	vmov	s15, r7
 800e5dc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800e5e0:	e026      	b.n	800e630 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 800e5e2:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800e5e6:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e5ea:	8869      	ldrh	r1, [r5, #2]
 800e5ec:	1a9b      	subs	r3, r3, r2
 800e5ee:	1a5b      	subs	r3, r3, r1
 800e5f0:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e5f4:	882b      	ldrh	r3, [r5, #0]
 800e5f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e5fa:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e5fe:	88ab      	ldrh	r3, [r5, #4]
 800e600:	aa03      	add	r2, sp, #12
 800e602:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e606:	6803      	ldr	r3, [r0, #0]
 800e608:	4641      	mov	r1, r8
 800e60a:	689b      	ldr	r3, [r3, #8]
 800e60c:	4798      	blx	r3
 800e60e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 800e770 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 800e612:	a805      	add	r0, sp, #20
 800e614:	f000 f8e8 	bl	800e7e8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e618:	ee07 7a90 	vmov	s15, r7
 800e61c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e620:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e622:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e626:	1a9b      	subs	r3, r3, r2
 800e628:	ee00 3a10 	vmov	s0, r3
 800e62c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800e630:	a805      	add	r0, sp, #20
 800e632:	f000 f927 	bl	800e884 <_ZN8touchgfx9Matrix3x39translateEff>
 800e636:	2500      	movs	r5, #0
 800e638:	6860      	ldr	r0, [r4, #4]
 800e63a:	a905      	add	r1, sp, #20
 800e63c:	6803      	ldr	r3, [r0, #0]
 800e63e:	f109 0602 	add.w	r6, r9, #2
 800e642:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e644:	4798      	blx	r3
 800e646:	6860      	ldr	r0, [r4, #4]
 800e648:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e64a:	6803      	ldr	r3, [r0, #0]
 800e64c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 800e650:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e652:	4798      	blx	r3
 800e654:	6860      	ldr	r0, [r4, #4]
 800e656:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 800e65a:	6803      	ldr	r3, [r0, #0]
 800e65c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e65e:	4798      	blx	r3
 800e660:	6860      	ldr	r0, [r4, #4]
 800e662:	2101      	movs	r1, #1
 800e664:	6803      	ldr	r3, [r0, #0]
 800e666:	68db      	ldr	r3, [r3, #12]
 800e668:	4798      	blx	r3
 800e66a:	f8b9 7000 	ldrh.w	r7, [r9]
 800e66e:	f104 0310 	add.w	r3, r4, #16
 800e672:	61a5      	str	r5, [r4, #24]
 800e674:	f104 0208 	add.w	r2, r4, #8
 800e678:	f104 0114 	add.w	r1, r4, #20
 800e67c:	f104 000c 	add.w	r0, r4, #12
 800e680:	f7f5 f894 	bl	80037ac <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 800e684:	42af      	cmp	r7, r5
 800e686:	dd60      	ble.n	800e74a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 800e688:	8831      	ldrh	r1, [r6, #0]
 800e68a:	1cb2      	adds	r2, r6, #2
 800e68c:	f101 030f 	add.w	r3, r1, #15
 800e690:	f3c3 1307 	ubfx	r3, r3, #4, #8
 800e694:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e698:	4620      	mov	r0, r4
 800e69a:	f7ff fe29 	bl	800e2f0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 800e69e:	3501      	adds	r5, #1
 800e6a0:	4606      	mov	r6, r0
 800e6a2:	e7ef      	b.n	800e684 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 800e6a4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e6a8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e6ac:	8829      	ldrh	r1, [r5, #0]
 800e6ae:	1a9b      	subs	r3, r3, r2
 800e6b0:	1a5b      	subs	r3, r3, r1
 800e6b2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e6b6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e6ba:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e6be:	886d      	ldrh	r5, [r5, #2]
 800e6c0:	1a5b      	subs	r3, r3, r1
 800e6c2:	1b5b      	subs	r3, r3, r5
 800e6c4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e6c8:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e6cc:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e6d0:	6803      	ldr	r3, [r0, #0]
 800e6d2:	aa03      	add	r2, sp, #12
 800e6d4:	689b      	ldr	r3, [r3, #8]
 800e6d6:	4641      	mov	r1, r8
 800e6d8:	4798      	blx	r3
 800e6da:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 800e774 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 800e6de:	a805      	add	r0, sp, #20
 800e6e0:	f000 f882 	bl	800e7e8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e6e4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e6e8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e6ea:	1a9b      	subs	r3, r3, r2
 800e6ec:	ee00 3a90 	vmov	s1, r3
 800e6f0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e6f4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e6f8:	1bdb      	subs	r3, r3, r7
 800e6fa:	ee00 3a10 	vmov	s0, r3
 800e6fe:	e795      	b.n	800e62c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 800e700:	886b      	ldrh	r3, [r5, #2]
 800e702:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e706:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e70a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e70e:	8829      	ldrh	r1, [r5, #0]
 800e710:	1a9b      	subs	r3, r3, r2
 800e712:	1a5b      	subs	r3, r3, r1
 800e714:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e718:	88eb      	ldrh	r3, [r5, #6]
 800e71a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e71e:	f8ad 3010 	strh.w	r3, [sp, #16]
 800e722:	6803      	ldr	r3, [r0, #0]
 800e724:	aa03      	add	r2, sp, #12
 800e726:	689b      	ldr	r3, [r3, #8]
 800e728:	4641      	mov	r1, r8
 800e72a:	4798      	blx	r3
 800e72c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 800e778 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 800e730:	a805      	add	r0, sp, #20
 800e732:	f000 f859 	bl	800e7e8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e736:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e73a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e73e:	1bdb      	subs	r3, r3, r7
 800e740:	ee00 3a90 	vmov	s1, r3
 800e744:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e748:	e748      	b.n	800e5dc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 800e74a:	2100      	movs	r1, #0
 800e74c:	6860      	ldr	r0, [r4, #4]
 800e74e:	8b22      	ldrh	r2, [r4, #24]
 800e750:	6803      	ldr	r3, [r0, #0]
 800e752:	9101      	str	r1, [sp, #4]
 800e754:	8b61      	ldrh	r1, [r4, #26]
 800e756:	9100      	str	r1, [sp, #0]
 800e758:	6a1d      	ldr	r5, [r3, #32]
 800e75a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 800e75e:	47a8      	blx	r5
 800e760:	6860      	ldr	r0, [r4, #4]
 800e762:	6803      	ldr	r3, [r0, #0]
 800e764:	69db      	ldr	r3, [r3, #28]
 800e766:	4798      	blx	r3
 800e768:	b00e      	add	sp, #56	@ 0x38
 800e76a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e76e:	bf00      	nop
 800e770:	42b40000 	.word	0x42b40000
 800e774:	43340000 	.word	0x43340000
 800e778:	43870000 	.word	0x43870000

0800e77c <_ZN8touchgfx9Matrix3x35resetEv>:
 800e77c:	2300      	movs	r3, #0
 800e77e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e782:	6043      	str	r3, [r0, #4]
 800e784:	6002      	str	r2, [r0, #0]
 800e786:	6083      	str	r3, [r0, #8]
 800e788:	60c3      	str	r3, [r0, #12]
 800e78a:	6102      	str	r2, [r0, #16]
 800e78c:	6143      	str	r3, [r0, #20]
 800e78e:	6183      	str	r3, [r0, #24]
 800e790:	61c3      	str	r3, [r0, #28]
 800e792:	6202      	str	r2, [r0, #32]
 800e794:	4770      	bx	lr

0800e796 <_ZN8touchgfx9Matrix3x3C1Ev>:
 800e796:	b508      	push	{r3, lr}
 800e798:	f7ff fff0 	bl	800e77c <_ZN8touchgfx9Matrix3x35resetEv>
 800e79c:	bd08      	pop	{r3, pc}

0800e79e <_ZN8touchgfx9Matrix3x35scaleEff>:
 800e79e:	edd0 7a00 	vldr	s15, [r0]
 800e7a2:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e7a6:	edc0 7a00 	vstr	s15, [r0]
 800e7aa:	edd0 7a01 	vldr	s15, [r0, #4]
 800e7ae:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e7b2:	edc0 7a01 	vstr	s15, [r0, #4]
 800e7b6:	edd0 7a02 	vldr	s15, [r0, #8]
 800e7ba:	ee27 0a80 	vmul.f32	s0, s15, s0
 800e7be:	edd0 7a03 	vldr	s15, [r0, #12]
 800e7c2:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e7c6:	edc0 7a03 	vstr	s15, [r0, #12]
 800e7ca:	edd0 7a04 	vldr	s15, [r0, #16]
 800e7ce:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e7d2:	edc0 7a04 	vstr	s15, [r0, #16]
 800e7d6:	edd0 7a05 	vldr	s15, [r0, #20]
 800e7da:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800e7de:	ed80 0a02 	vstr	s0, [r0, #8]
 800e7e2:	edc0 0a05 	vstr	s1, [r0, #20]
 800e7e6:	4770      	bx	lr

0800e7e8 <_ZN8touchgfx9Matrix3x36rotateEf>:
 800e7e8:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800e87c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 800e7ec:	ee20 0a27 	vmul.f32	s0, s0, s15
 800e7f0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 800e880 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 800e7f4:	b510      	push	{r4, lr}
 800e7f6:	ed2d 8b02 	vpush	{d8}
 800e7fa:	eec0 8a27 	vdiv.f32	s17, s0, s15
 800e7fe:	eeb0 0a68 	vmov.f32	s0, s17
 800e802:	4604      	mov	r4, r0
 800e804:	f022 fe0e 	bl	8031424 <cosf>
 800e808:	eeb0 8a40 	vmov.f32	s16, s0
 800e80c:	eeb0 0a68 	vmov.f32	s0, s17
 800e810:	f022 fe54 	bl	80314bc <sinf>
 800e814:	edd4 6a03 	vldr	s13, [r4, #12]
 800e818:	edd4 4a00 	vldr	s9, [r4]
 800e81c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 800e820:	ed94 7a04 	vldr	s14, [r4, #16]
 800e824:	eee8 7a24 	vfma.f32	s15, s16, s9
 800e828:	ed94 5a01 	vldr	s10, [r4, #4]
 800e82c:	edc4 7a00 	vstr	s15, [r4]
 800e830:	ee60 7a47 	vnmul.f32	s15, s0, s14
 800e834:	eee8 7a05 	vfma.f32	s15, s16, s10
 800e838:	edc4 7a01 	vstr	s15, [r4, #4]
 800e83c:	edd4 7a05 	vldr	s15, [r4, #20]
 800e840:	edd4 5a02 	vldr	s11, [r4, #8]
 800e844:	ee20 6a67 	vnmul.f32	s12, s0, s15
 800e848:	ee66 6a88 	vmul.f32	s13, s13, s16
 800e84c:	ee27 7a08 	vmul.f32	s14, s14, s16
 800e850:	ee67 7a88 	vmul.f32	s15, s15, s16
 800e854:	eea8 6a25 	vfma.f32	s12, s16, s11
 800e858:	ecbd 8b02 	vpop	{d8}
 800e85c:	eee0 6a24 	vfma.f32	s13, s0, s9
 800e860:	eea0 7a05 	vfma.f32	s14, s0, s10
 800e864:	eee0 7a25 	vfma.f32	s15, s0, s11
 800e868:	ed84 6a02 	vstr	s12, [r4, #8]
 800e86c:	edc4 6a03 	vstr	s13, [r4, #12]
 800e870:	ed84 7a04 	vstr	s14, [r4, #16]
 800e874:	edc4 7a05 	vstr	s15, [r4, #20]
 800e878:	bd10      	pop	{r4, pc}
 800e87a:	bf00      	nop
 800e87c:	40490fdb 	.word	0x40490fdb
 800e880:	43340000 	.word	0x43340000

0800e884 <_ZN8touchgfx9Matrix3x39translateEff>:
 800e884:	ed90 6a06 	vldr	s12, [r0, #24]
 800e888:	edd0 7a00 	vldr	s15, [r0]
 800e88c:	eee6 7a00 	vfma.f32	s15, s12, s0
 800e890:	edd0 6a07 	vldr	s13, [r0, #28]
 800e894:	edc0 7a00 	vstr	s15, [r0]
 800e898:	edd0 7a01 	vldr	s15, [r0, #4]
 800e89c:	eee6 7a80 	vfma.f32	s15, s13, s0
 800e8a0:	ed90 7a08 	vldr	s14, [r0, #32]
 800e8a4:	edc0 7a01 	vstr	s15, [r0, #4]
 800e8a8:	edd0 7a02 	vldr	s15, [r0, #8]
 800e8ac:	eee7 7a00 	vfma.f32	s15, s14, s0
 800e8b0:	edc0 7a02 	vstr	s15, [r0, #8]
 800e8b4:	edd0 7a03 	vldr	s15, [r0, #12]
 800e8b8:	eee6 7a20 	vfma.f32	s15, s12, s1
 800e8bc:	edc0 7a03 	vstr	s15, [r0, #12]
 800e8c0:	edd0 7a04 	vldr	s15, [r0, #16]
 800e8c4:	eee6 7aa0 	vfma.f32	s15, s13, s1
 800e8c8:	edc0 7a04 	vstr	s15, [r0, #16]
 800e8cc:	edd0 7a05 	vldr	s15, [r0, #20]
 800e8d0:	eee7 7a20 	vfma.f32	s15, s14, s1
 800e8d4:	edc0 7a05 	vstr	s15, [r0, #20]
 800e8d8:	4770      	bx	lr

0800e8da <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>:
 800e8da:	ed91 0a01 	vldr	s0, [r1, #4]
 800e8de:	edd0 6a01 	vldr	s13, [r0, #4]
 800e8e2:	edd0 0a04 	vldr	s1, [r0, #16]
 800e8e6:	edd1 7a00 	vldr	s15, [r1]
 800e8ea:	ed90 7a03 	vldr	s14, [r0, #12]
 800e8ee:	ee60 0a20 	vmul.f32	s1, s0, s1
 800e8f2:	ee20 0a26 	vmul.f32	s0, s0, s13
 800e8f6:	edd0 6a00 	vldr	s13, [r0]
 800e8fa:	eee7 0a27 	vfma.f32	s1, s14, s15
 800e8fe:	eea6 0aa7 	vfma.f32	s0, s13, s15
 800e902:	ed90 7a05 	vldr	s14, [r0, #20]
 800e906:	edd0 7a02 	vldr	s15, [r0, #8]
 800e90a:	ee70 0a87 	vadd.f32	s1, s1, s14
 800e90e:	ee30 0a27 	vadd.f32	s0, s0, s15
 800e912:	b084      	sub	sp, #16
 800e914:	b004      	add	sp, #16
 800e916:	4770      	bx	lr

0800e918 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800e918:	b530      	push	{r4, r5, lr}
 800e91a:	8083      	strh	r3, [r0, #4]
 800e91c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e920:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e924:	80c3      	strh	r3, [r0, #6]
 800e926:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800e92a:	6141      	str	r1, [r0, #20]
 800e92c:	7203      	strb	r3, [r0, #8]
 800e92e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e932:	8302      	strh	r2, [r0, #24]
 800e934:	7243      	strb	r3, [r0, #9]
 800e936:	7a83      	ldrb	r3, [r0, #10]
 800e938:	f365 0306 	bfi	r3, r5, #0, #7
 800e93c:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800e940:	f365 13c7 	bfi	r3, r5, #7, #1
 800e944:	7283      	strb	r3, [r0, #10]
 800e946:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800e94a:	72c3      	strb	r3, [r0, #11]
 800e94c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800e950:	7303      	strb	r3, [r0, #12]
 800e952:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800e956:	81c3      	strh	r3, [r0, #14]
 800e958:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e95c:	8203      	strh	r3, [r0, #16]
 800e95e:	4b01      	ldr	r3, [pc, #4]	@ (800e964 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800e960:	6003      	str	r3, [r0, #0]
 800e962:	bd30      	pop	{r4, r5, pc}
 800e964:	08035be4 	.word	0x08035be4

0800e968 <_ZNK8touchgfx9ConstFont4findEt>:
 800e968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e96a:	6944      	ldr	r4, [r0, #20]
 800e96c:	b3bc      	cbz	r4, 800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e96e:	88a3      	ldrh	r3, [r4, #4]
 800e970:	8b02      	ldrh	r2, [r0, #24]
 800e972:	1acb      	subs	r3, r1, r3
 800e974:	f102 32ff 	add.w	r2, r2, #4294967295
 800e978:	d431      	bmi.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e97a:	4293      	cmp	r3, r2
 800e97c:	dd0c      	ble.n	800e998 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e97e:	230e      	movs	r3, #14
 800e980:	fb03 4302 	mla	r3, r3, r2, r4
 800e984:	889b      	ldrh	r3, [r3, #4]
 800e986:	1a5b      	subs	r3, r3, r1
 800e988:	1ad3      	subs	r3, r2, r3
 800e98a:	429a      	cmp	r2, r3
 800e98c:	db27      	blt.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e98e:	2b00      	cmp	r3, #0
 800e990:	bfbc      	itt	lt
 800e992:	2302      	movlt	r3, #2
 800e994:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e998:	2500      	movs	r5, #0
 800e99a:	260e      	movs	r6, #14
 800e99c:	4295      	cmp	r5, r2
 800e99e:	dc1e      	bgt.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9a0:	fb06 4003 	mla	r0, r6, r3, r4
 800e9a4:	8887      	ldrh	r7, [r0, #4]
 800e9a6:	42b9      	cmp	r1, r7
 800e9a8:	d01a      	beq.n	800e9e0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e9aa:	d20d      	bcs.n	800e9c8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e9ac:	1e5a      	subs	r2, r3, #1
 800e9ae:	4295      	cmp	r5, r2
 800e9b0:	dc15      	bgt.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9b2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e9b6:	1a5b      	subs	r3, r3, r1
 800e9b8:	1ad3      	subs	r3, r2, r3
 800e9ba:	429a      	cmp	r2, r3
 800e9bc:	db0f      	blt.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9be:	429d      	cmp	r5, r3
 800e9c0:	ddec      	ble.n	800e99c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e9c2:	1953      	adds	r3, r2, r5
 800e9c4:	105b      	asrs	r3, r3, #1
 800e9c6:	e7e9      	b.n	800e99c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e9c8:	1c5d      	adds	r5, r3, #1
 800e9ca:	42aa      	cmp	r2, r5
 800e9cc:	db07      	blt.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9ce:	8a43      	ldrh	r3, [r0, #18]
 800e9d0:	1acb      	subs	r3, r1, r3
 800e9d2:	442b      	add	r3, r5
 800e9d4:	429d      	cmp	r5, r3
 800e9d6:	dc02      	bgt.n	800e9de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9d8:	429a      	cmp	r2, r3
 800e9da:	dadf      	bge.n	800e99c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e9dc:	e7f1      	b.n	800e9c2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e9de:	2000      	movs	r0, #0
 800e9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e9e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e9e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9e4:	4604      	mov	r4, r0
 800e9e6:	4617      	mov	r7, r2
 800e9e8:	461e      	mov	r6, r3
 800e9ea:	b911      	cbnz	r1, 800e9f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e9ec:	2500      	movs	r5, #0
 800e9ee:	4628      	mov	r0, r5
 800e9f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9f2:	290a      	cmp	r1, #10
 800e9f4:	d0fa      	beq.n	800e9ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9f6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e9fa:	4291      	cmp	r1, r2
 800e9fc:	d0f6      	beq.n	800e9ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9fe:	f242 020b 	movw	r2, #8203	@ 0x200b
 800ea02:	4291      	cmp	r1, r2
 800ea04:	d0f2      	beq.n	800e9ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ea06:	f7ff ffaf 	bl	800e968 <_ZNK8touchgfx9ConstFont4findEt>
 800ea0a:	4605      	mov	r5, r0
 800ea0c:	b950      	cbnz	r0, 800ea24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800ea0e:	6823      	ldr	r3, [r4, #0]
 800ea10:	4620      	mov	r0, r4
 800ea12:	691b      	ldr	r3, [r3, #16]
 800ea14:	4798      	blx	r3
 800ea16:	4601      	mov	r1, r0
 800ea18:	4620      	mov	r0, r4
 800ea1a:	f7ff ffa5 	bl	800e968 <_ZNK8touchgfx9ConstFont4findEt>
 800ea1e:	4605      	mov	r5, r0
 800ea20:	2800      	cmp	r0, #0
 800ea22:	d0e3      	beq.n	800e9ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ea24:	6823      	ldr	r3, [r4, #0]
 800ea26:	4629      	mov	r1, r5
 800ea28:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ea2a:	4620      	mov	r0, r4
 800ea2c:	4798      	blx	r3
 800ea2e:	6038      	str	r0, [r7, #0]
 800ea30:	6823      	ldr	r3, [r4, #0]
 800ea32:	4620      	mov	r0, r4
 800ea34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ea36:	4798      	blx	r3
 800ea38:	7030      	strb	r0, [r6, #0]
 800ea3a:	e7d8      	b.n	800e9ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800ea3c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800ea3c:	2000      	movs	r0, #0
 800ea3e:	4770      	bx	lr

0800ea40 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800ea40:	2001      	movs	r0, #1
 800ea42:	4770      	bx	lr

0800ea44 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800ea44:	2002      	movs	r0, #2
 800ea46:	4770      	bx	lr

0800ea48 <_ZN8touchgfx6ScreenD1Ev>:
 800ea48:	4770      	bx	lr

0800ea4a <_ZN8touchgfx12GestureEventD1Ev>:
 800ea4a:	4770      	bx	lr

0800ea4c <_ZN8touchgfx9DragEventD1Ev>:
 800ea4c:	4770      	bx	lr

0800ea4e <_ZN8touchgfx10ClickEventD1Ev>:
 800ea4e:	4770      	bx	lr

0800ea50 <_ZN8touchgfx10ClickEventD0Ev>:
 800ea50:	b510      	push	{r4, lr}
 800ea52:	4604      	mov	r4, r0
 800ea54:	210c      	movs	r1, #12
 800ea56:	f022 fb7e 	bl	8031156 <_ZdlPvj>
 800ea5a:	4620      	mov	r0, r4
 800ea5c:	bd10      	pop	{r4, pc}

0800ea5e <_ZN8touchgfx9DragEventD0Ev>:
 800ea5e:	b510      	push	{r4, lr}
 800ea60:	4604      	mov	r4, r0
 800ea62:	2110      	movs	r1, #16
 800ea64:	f022 fb77 	bl	8031156 <_ZdlPvj>
 800ea68:	4620      	mov	r0, r4
 800ea6a:	bd10      	pop	{r4, pc}

0800ea6c <_ZN8touchgfx12GestureEventD0Ev>:
 800ea6c:	b510      	push	{r4, lr}
 800ea6e:	4604      	mov	r4, r0
 800ea70:	210c      	movs	r1, #12
 800ea72:	f022 fb70 	bl	8031156 <_ZdlPvj>
 800ea76:	4620      	mov	r0, r4
 800ea78:	bd10      	pop	{r4, pc}

0800ea7a <_ZN8touchgfx6ScreenD0Ev>:
 800ea7a:	b510      	push	{r4, lr}
 800ea7c:	4604      	mov	r4, r0
 800ea7e:	213c      	movs	r1, #60	@ 0x3c
 800ea80:	f022 fb69 	bl	8031156 <_ZdlPvj>
 800ea84:	4620      	mov	r0, r4
 800ea86:	bd10      	pop	{r4, pc}

0800ea88 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ea88:	b530      	push	{r4, r5, lr}
 800ea8a:	460d      	mov	r5, r1
 800ea8c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800ea8e:	b087      	sub	sp, #28
 800ea90:	4604      	mov	r4, r0
 800ea92:	b301      	cbz	r1, 800ead6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ea94:	a801      	add	r0, sp, #4
 800ea96:	f7ff fc05 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea9a:	892a      	ldrh	r2, [r5, #8]
 800ea9c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800eaa0:	7928      	ldrb	r0, [r5, #4]
 800eaa2:	1ad2      	subs	r2, r2, r3
 800eaa4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800eaa6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800eaaa:	441a      	add	r2, r3
 800eaac:	896b      	ldrh	r3, [r5, #10]
 800eaae:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800eab2:	f88d 0010 	strb.w	r0, [sp, #16]
 800eab6:	1b5b      	subs	r3, r3, r5
 800eab8:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800eaba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800eabc:	442b      	add	r3, r5
 800eabe:	4d07      	ldr	r5, [pc, #28]	@ (800eadc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800eac0:	f8ad 1012 	strh.w	r1, [sp, #18]
 800eac4:	9503      	str	r5, [sp, #12]
 800eac6:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eaca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eace:	6803      	ldr	r3, [r0, #0]
 800ead0:	a903      	add	r1, sp, #12
 800ead2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ead4:	4798      	blx	r3
 800ead6:	b007      	add	sp, #28
 800ead8:	bd30      	pop	{r4, r5, pc}
 800eada:	bf00      	nop
 800eadc:	08035c74 	.word	0x08035c74

0800eae0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800eae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eae4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800eae6:	b08a      	sub	sp, #40	@ 0x28
 800eae8:	4604      	mov	r4, r0
 800eaea:	460d      	mov	r5, r1
 800eaec:	b113      	cbz	r3, 800eaf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800eaee:	790b      	ldrb	r3, [r1, #4]
 800eaf0:	2b00      	cmp	r3, #0
 800eaf2:	d044      	beq.n	800eb7e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eaf4:	f104 0804 	add.w	r8, r4, #4
 800eaf8:	4641      	mov	r1, r8
 800eafa:	a803      	add	r0, sp, #12
 800eafc:	f7ff fbd2 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb00:	792b      	ldrb	r3, [r5, #4]
 800eb02:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800eb06:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800eb0a:	b983      	cbnz	r3, 800eb2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800eb0c:	892a      	ldrh	r2, [r5, #8]
 800eb0e:	88e9      	ldrh	r1, [r5, #6]
 800eb10:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800eb14:	1b92      	subs	r2, r2, r6
 800eb16:	1bc9      	subs	r1, r1, r7
 800eb18:	9301      	str	r3, [sp, #4]
 800eb1a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800eb1e:	9300      	str	r3, [sp, #0]
 800eb20:	b212      	sxth	r2, r2
 800eb22:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800eb26:	b209      	sxth	r1, r1
 800eb28:	4640      	mov	r0, r8
 800eb2a:	f7fb ffc9 	bl	800aac0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800eb2e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800eb30:	b329      	cbz	r1, 800eb7e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eb32:	a805      	add	r0, sp, #20
 800eb34:	f7ff fbb6 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb38:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800eb3c:	792b      	ldrb	r3, [r5, #4]
 800eb3e:	1abf      	subs	r7, r7, r2
 800eb40:	88ea      	ldrh	r2, [r5, #6]
 800eb42:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800eb44:	4417      	add	r7, r2
 800eb46:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800eb48:	f88d 3020 	strb.w	r3, [sp, #32]
 800eb4c:	4417      	add	r7, r2
 800eb4e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800eb52:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800eb56:	1ab6      	subs	r6, r6, r2
 800eb58:	892a      	ldrh	r2, [r5, #8]
 800eb5a:	a907      	add	r1, sp, #28
 800eb5c:	4416      	add	r6, r2
 800eb5e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800eb60:	4416      	add	r6, r2
 800eb62:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800eb66:	2600      	movs	r6, #0
 800eb68:	4a06      	ldr	r2, [pc, #24]	@ (800eb84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800eb6a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800eb6e:	9207      	str	r2, [sp, #28]
 800eb70:	6803      	ldr	r3, [r0, #0]
 800eb72:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800eb74:	4798      	blx	r3
 800eb76:	792b      	ldrb	r3, [r5, #4]
 800eb78:	b10b      	cbz	r3, 800eb7e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eb7a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800eb7e:	b00a      	add	sp, #40	@ 0x28
 800eb80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb84:	08035c4c 	.word	0x08035c4c

0800eb88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800eb88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb8c:	460c      	mov	r4, r1
 800eb8e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800eb90:	b088      	sub	sp, #32
 800eb92:	4605      	mov	r5, r0
 800eb94:	2900      	cmp	r1, #0
 800eb96:	d06d      	beq.n	800ec74 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800eb98:	4668      	mov	r0, sp
 800eb9a:	f7ff fb83 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb9e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800eba0:	88e3      	ldrh	r3, [r4, #6]
 800eba2:	f9bd 8000 	ldrsh.w	r8, [sp]
 800eba6:	440b      	add	r3, r1
 800eba8:	b21b      	sxth	r3, r3
 800ebaa:	4543      	cmp	r3, r8
 800ebac:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800ebb0:	db31      	blt.n	800ec16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebb2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800ebb6:	44c4      	add	ip, r8
 800ebb8:	fa0f fc8c 	sxth.w	ip, ip
 800ebbc:	4563      	cmp	r3, ip
 800ebbe:	da2a      	bge.n	800ec16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebc0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800ebc2:	8926      	ldrh	r6, [r4, #8]
 800ebc4:	4416      	add	r6, r2
 800ebc6:	b236      	sxth	r6, r6
 800ebc8:	42be      	cmp	r6, r7
 800ebca:	db24      	blt.n	800ec16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebcc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800ebd0:	4438      	add	r0, r7
 800ebd2:	b200      	sxth	r0, r0
 800ebd4:	4286      	cmp	r6, r0
 800ebd6:	da1e      	bge.n	800ec16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebd8:	8963      	ldrh	r3, [r4, #10]
 800ebda:	4419      	add	r1, r3
 800ebdc:	b209      	sxth	r1, r1
 800ebde:	4541      	cmp	r1, r8
 800ebe0:	db08      	blt.n	800ebf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ebe2:	4561      	cmp	r1, ip
 800ebe4:	da06      	bge.n	800ebf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ebe6:	89a3      	ldrh	r3, [r4, #12]
 800ebe8:	441a      	add	r2, r3
 800ebea:	b212      	sxth	r2, r2
 800ebec:	42ba      	cmp	r2, r7
 800ebee:	db01      	blt.n	800ebf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ebf0:	4282      	cmp	r2, r0
 800ebf2:	db10      	blt.n	800ec16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebf4:	4b21      	ldr	r3, [pc, #132]	@ (800ec7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800ebf6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ebf8:	9304      	str	r3, [sp, #16]
 800ebfa:	2302      	movs	r3, #2
 800ebfc:	f88d 3014 	strb.w	r3, [sp, #20]
 800ec00:	2300      	movs	r3, #0
 800ec02:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ec06:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ec0a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ec0e:	6803      	ldr	r3, [r0, #0]
 800ec10:	a904      	add	r1, sp, #16
 800ec12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ec14:	4798      	blx	r3
 800ec16:	1d29      	adds	r1, r5, #4
 800ec18:	a802      	add	r0, sp, #8
 800ec1a:	f7ff fb43 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec1e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ec22:	88e0      	ldrh	r0, [r4, #6]
 800ec24:	eba3 0808 	sub.w	r8, r3, r8
 800ec28:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ec2c:	7921      	ldrb	r1, [r4, #4]
 800ec2e:	1bdf      	subs	r7, r3, r7
 800ec30:	b2bb      	uxth	r3, r7
 800ec32:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800ec36:	fa1f f888 	uxth.w	r8, r8
 800ec3a:	8922      	ldrh	r2, [r4, #8]
 800ec3c:	8967      	ldrh	r7, [r4, #10]
 800ec3e:	89a4      	ldrh	r4, [r4, #12]
 800ec40:	4440      	add	r0, r8
 800ec42:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800ec44:	4460      	add	r0, ip
 800ec46:	441a      	add	r2, r3
 800ec48:	44b8      	add	r8, r7
 800ec4a:	4423      	add	r3, r4
 800ec4c:	4c0c      	ldr	r4, [pc, #48]	@ (800ec80 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800ec4e:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ec52:	4433      	add	r3, r6
 800ec54:	4432      	add	r2, r6
 800ec56:	44e0      	add	r8, ip
 800ec58:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ec5a:	f88d 1014 	strb.w	r1, [sp, #20]
 800ec5e:	9404      	str	r4, [sp, #16]
 800ec60:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ec64:	f8ad 801a 	strh.w	r8, [sp, #26]
 800ec68:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ec6c:	6803      	ldr	r3, [r0, #0]
 800ec6e:	a904      	add	r1, sp, #16
 800ec70:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ec72:	4798      	blx	r3
 800ec74:	b008      	add	sp, #32
 800ec76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec7a:	bf00      	nop
 800ec7c:	08035c4c 	.word	0x08035c4c
 800ec80:	08035c60 	.word	0x08035c60

0800ec84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ec84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec86:	4604      	mov	r4, r0
 800ec88:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ec8c:	3201      	adds	r2, #1
 800ec8e:	d112      	bne.n	800ecb6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ec90:	2500      	movs	r5, #0
 800ec92:	9500      	str	r5, [sp, #0]
 800ec94:	466d      	mov	r5, sp
 800ec96:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ec9a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ec9e:	6803      	ldr	r3, [r0, #0]
 800eca0:	f8ad 1004 	strh.w	r1, [sp, #4]
 800eca4:	f8ad 2006 	strh.w	r2, [sp, #6]
 800eca8:	4629      	mov	r1, r5
 800ecaa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ecac:	4798      	blx	r3
 800ecae:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ecb2:	e884 0003 	stmia.w	r4, {r0, r1}
 800ecb6:	4620      	mov	r0, r4
 800ecb8:	b003      	add	sp, #12
 800ecba:	bd30      	pop	{r4, r5, pc}

0800ecbc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ecbc:	b513      	push	{r0, r1, r4, lr}
 800ecbe:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ecc2:	4604      	mov	r4, r0
 800ecc4:	3301      	adds	r3, #1
 800ecc6:	d109      	bne.n	800ecdc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ecc8:	4601      	mov	r1, r0
 800ecca:	4668      	mov	r0, sp
 800eccc:	f7ff faea 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ecd0:	f8bd 3000 	ldrh.w	r3, [sp]
 800ecd4:	8423      	strh	r3, [r4, #32]
 800ecd6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ecda:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ecdc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ece0:	b002      	add	sp, #8
 800ece2:	bd10      	pop	{r4, pc}

0800ece4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ece4:	b513      	push	{r0, r1, r4, lr}
 800ece6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800ecea:	4604      	mov	r4, r0
 800ecec:	3301      	adds	r3, #1
 800ecee:	d109      	bne.n	800ed04 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ecf0:	4601      	mov	r1, r0
 800ecf2:	4668      	mov	r0, sp
 800ecf4:	f7ff fad6 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ecf8:	f8bd 3000 	ldrh.w	r3, [sp]
 800ecfc:	8423      	strh	r3, [r4, #32]
 800ecfe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ed02:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ed04:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800ed08:	b002      	add	sp, #8
 800ed0a:	bd10      	pop	{r4, pc}

0800ed0c <_ZN8touchgfx6ScreenC1Ev>:
 800ed0c:	b570      	push	{r4, r5, r6, lr}
 800ed0e:	4605      	mov	r5, r0
 800ed10:	4b16      	ldr	r3, [pc, #88]	@ (800ed6c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800ed12:	2101      	movs	r1, #1
 800ed14:	f845 3b04 	str.w	r3, [r5], #4
 800ed18:	2300      	movs	r3, #0
 800ed1a:	4604      	mov	r4, r0
 800ed1c:	8103      	strh	r3, [r0, #8]
 800ed1e:	8143      	strh	r3, [r0, #10]
 800ed20:	8183      	strh	r3, [r0, #12]
 800ed22:	81c3      	strh	r3, [r0, #14]
 800ed24:	8203      	strh	r3, [r0, #16]
 800ed26:	8243      	strh	r3, [r0, #18]
 800ed28:	8283      	strh	r3, [r0, #20]
 800ed2a:	82c3      	strh	r3, [r0, #22]
 800ed2c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800ed30:	6203      	str	r3, [r0, #32]
 800ed32:	8483      	strh	r3, [r0, #36]	@ 0x24
 800ed34:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ed36:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800ed3a:	4a0d      	ldr	r2, [pc, #52]	@ (800ed70 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ed3c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800ed40:	6343      	str	r3, [r0, #52]	@ 0x34
 800ed42:	4b0c      	ldr	r3, [pc, #48]	@ (800ed74 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ed44:	6042      	str	r2, [r0, #4]
 800ed46:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ed4a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800ed4c:	4a0a      	ldr	r2, [pc, #40]	@ (800ed78 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ed4e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800ed52:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800ed56:	f9b2 1000 	ldrsh.w	r1, [r2]
 800ed5a:	4628      	mov	r0, r5
 800ed5c:	4798      	blx	r3
 800ed5e:	6863      	ldr	r3, [r4, #4]
 800ed60:	4628      	mov	r0, r5
 800ed62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ed64:	4631      	mov	r1, r6
 800ed66:	4798      	blx	r3
 800ed68:	4620      	mov	r0, r4
 800ed6a:	bd70      	pop	{r4, r5, r6, pc}
 800ed6c:	08035c88 	.word	0x08035c88
 800ed70:	08035970 	.word	0x08035970
 800ed74:	20082efe 	.word	0x20082efe
 800ed78:	20082efc 	.word	0x20082efc

0800ed7c <_ZN8touchgfx6Screen4drawEv>:
 800ed7c:	b507      	push	{r0, r1, r2, lr}
 800ed7e:	2100      	movs	r1, #0
 800ed80:	4b08      	ldr	r3, [pc, #32]	@ (800eda4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ed82:	9100      	str	r1, [sp, #0]
 800ed84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed88:	4b07      	ldr	r3, [pc, #28]	@ (800eda8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800ed8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ed8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ed92:	4669      	mov	r1, sp
 800ed94:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ed98:	6803      	ldr	r3, [r0, #0]
 800ed9a:	689b      	ldr	r3, [r3, #8]
 800ed9c:	4798      	blx	r3
 800ed9e:	b003      	add	sp, #12
 800eda0:	f85d fb04 	ldr.w	pc, [sp], #4
 800eda4:	20082efc 	.word	0x20082efc
 800eda8:	20082efe 	.word	0x20082efe

0800edac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800edac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edb0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800edb4:	b089      	sub	sp, #36	@ 0x24
 800edb6:	2b00      	cmp	r3, #0
 800edb8:	4680      	mov	r8, r0
 800edba:	460c      	mov	r4, r1
 800edbc:	4615      	mov	r5, r2
 800edbe:	dd0e      	ble.n	800edde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800edc0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800edc4:	2b00      	cmp	r3, #0
 800edc6:	dd0a      	ble.n	800edde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800edc8:	4628      	mov	r0, r5
 800edca:	f7ff ff5b 	bl	800ec84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800edce:	4621      	mov	r1, r4
 800edd0:	f7fe f877 	bl	800cec2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800edd4:	69eb      	ldr	r3, [r5, #28]
 800edd6:	b928      	cbnz	r0, 800ede4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800edd8:	461d      	mov	r5, r3
 800edda:	2b00      	cmp	r3, #0
 800eddc:	d1f4      	bne.n	800edc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800edde:	b009      	add	sp, #36	@ 0x24
 800ede0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ede4:	ae04      	add	r6, sp, #16
 800ede6:	2b00      	cmp	r3, #0
 800ede8:	f000 80b5 	beq.w	800ef56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800edec:	682b      	ldr	r3, [r5, #0]
 800edee:	4629      	mov	r1, r5
 800edf0:	68db      	ldr	r3, [r3, #12]
 800edf2:	a802      	add	r0, sp, #8
 800edf4:	4798      	blx	r3
 800edf6:	4628      	mov	r0, r5
 800edf8:	f7ff ff60 	bl	800ecbc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800edfc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800ee00:	4407      	add	r7, r0
 800ee02:	4628      	mov	r0, r5
 800ee04:	f7ff ff6e 	bl	800ece4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ee08:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ee0c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ee10:	4418      	add	r0, r3
 800ee12:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ee16:	4621      	mov	r1, r4
 800ee18:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ee1c:	b23f      	sxth	r7, r7
 800ee1e:	4630      	mov	r0, r6
 800ee20:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ee24:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ee28:	f8ad 7010 	strh.w	r7, [sp, #16]
 800ee2c:	f7fb ff28 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800ee30:	4628      	mov	r0, r5
 800ee32:	f7ff ff27 	bl	800ec84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ee36:	4602      	mov	r2, r0
 800ee38:	e896 0003 	ldmia.w	r6, {r0, r1}
 800ee3c:	ab06      	add	r3, sp, #24
 800ee3e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ee42:	4611      	mov	r1, r2
 800ee44:	4618      	mov	r0, r3
 800ee46:	f7fb ff1b 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800ee4a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ee4e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ee52:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800ee56:	4299      	cmp	r1, r3
 800ee58:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800ee5c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800ee60:	d10b      	bne.n	800ee7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee62:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee66:	4552      	cmp	r2, sl
 800ee68:	d107      	bne.n	800ee7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee6a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800ee6e:	455a      	cmp	r2, fp
 800ee70:	d103      	bne.n	800ee7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee72:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ee76:	454a      	cmp	r2, r9
 800ee78:	d06d      	beq.n	800ef56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ee7a:	f1bb 0f00 	cmp.w	fp, #0
 800ee7e:	dd65      	ble.n	800ef4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee80:	f1b9 0f00 	cmp.w	r9, #0
 800ee84:	dd62      	ble.n	800ef4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee86:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee8a:	fa1f f08a 	uxth.w	r0, sl
 800ee8e:	4552      	cmp	r2, sl
 800ee90:	9000      	str	r0, [sp, #0]
 800ee92:	da12      	bge.n	800eeba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800ee94:	9301      	str	r3, [sp, #4]
 800ee96:	9b00      	ldr	r3, [sp, #0]
 800ee98:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ee9c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800eea0:	1a9a      	subs	r2, r3, r2
 800eea2:	f8ad 1010 	strh.w	r1, [sp, #16]
 800eea6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800eeaa:	f8ad 2016 	strh.w	r2, [sp, #22]
 800eeae:	69ea      	ldr	r2, [r5, #28]
 800eeb0:	4631      	mov	r1, r6
 800eeb2:	4640      	mov	r0, r8
 800eeb4:	f7ff ff7a 	bl	800edac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eeb8:	9b01      	ldr	r3, [sp, #4]
 800eeba:	f9b4 2000 	ldrsh.w	r2, [r4]
 800eebe:	b29f      	uxth	r7, r3
 800eec0:	429a      	cmp	r2, r3
 800eec2:	da0d      	bge.n	800eee0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800eec4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800eec8:	1aba      	subs	r2, r7, r2
 800eeca:	f8ad a012 	strh.w	sl, [sp, #18]
 800eece:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eed2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800eed6:	69ea      	ldr	r2, [r5, #28]
 800eed8:	4631      	mov	r1, r6
 800eeda:	4640      	mov	r0, r8
 800eedc:	f7ff ff66 	bl	800edac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eee0:	8822      	ldrh	r2, [r4, #0]
 800eee2:	88a3      	ldrh	r3, [r4, #4]
 800eee4:	445f      	add	r7, fp
 800eee6:	4413      	add	r3, r2
 800eee8:	b29b      	uxth	r3, r3
 800eeea:	b2bf      	uxth	r7, r7
 800eeec:	b23a      	sxth	r2, r7
 800eeee:	b219      	sxth	r1, r3
 800eef0:	4291      	cmp	r1, r2
 800eef2:	dd0d      	ble.n	800ef10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800eef4:	1bdb      	subs	r3, r3, r7
 800eef6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800eefa:	f8ad a012 	strh.w	sl, [sp, #18]
 800eefe:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ef02:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ef06:	69ea      	ldr	r2, [r5, #28]
 800ef08:	4631      	mov	r1, r6
 800ef0a:	4640      	mov	r0, r8
 800ef0c:	f7ff ff4e 	bl	800edac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef10:	88e2      	ldrh	r2, [r4, #6]
 800ef12:	8863      	ldrh	r3, [r4, #2]
 800ef14:	4413      	add	r3, r2
 800ef16:	9a00      	ldr	r2, [sp, #0]
 800ef18:	b29b      	uxth	r3, r3
 800ef1a:	444a      	add	r2, r9
 800ef1c:	fa1f f982 	uxth.w	r9, r2
 800ef20:	fa0f f289 	sxth.w	r2, r9
 800ef24:	b219      	sxth	r1, r3
 800ef26:	428a      	cmp	r2, r1
 800ef28:	da15      	bge.n	800ef56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ef2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ef2e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ef32:	eba3 0309 	sub.w	r3, r3, r9
 800ef36:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ef3a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ef3e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ef42:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef46:	69ea      	ldr	r2, [r5, #28]
 800ef48:	4631      	mov	r1, r6
 800ef4a:	e001      	b.n	800ef50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800ef4c:	4621      	mov	r1, r4
 800ef4e:	69ea      	ldr	r2, [r5, #28]
 800ef50:	4640      	mov	r0, r8
 800ef52:	f7ff ff2b 	bl	800edac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef56:	4628      	mov	r0, r5
 800ef58:	f7ff fe94 	bl	800ec84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ef5c:	4633      	mov	r3, r6
 800ef5e:	4602      	mov	r2, r0
 800ef60:	6861      	ldr	r1, [r4, #4]
 800ef62:	6820      	ldr	r0, [r4, #0]
 800ef64:	c303      	stmia	r3!, {r0, r1}
 800ef66:	4611      	mov	r1, r2
 800ef68:	4630      	mov	r0, r6
 800ef6a:	f7fb fe89 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800ef6e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ef72:	2b00      	cmp	r3, #0
 800ef74:	f77f af33 	ble.w	800edde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef78:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ef7c:	2b00      	cmp	r3, #0
 800ef7e:	f77f af2e 	ble.w	800edde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef82:	4628      	mov	r0, r5
 800ef84:	f7ff fe9a 	bl	800ecbc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ef88:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800ef8c:	1a18      	subs	r0, r3, r0
 800ef8e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ef92:	4628      	mov	r0, r5
 800ef94:	f7ff fea6 	bl	800ece4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ef98:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ef9c:	4631      	mov	r1, r6
 800ef9e:	1a18      	subs	r0, r3, r0
 800efa0:	f8ad 0012 	strh.w	r0, [sp, #18]
 800efa4:	682b      	ldr	r3, [r5, #0]
 800efa6:	4628      	mov	r0, r5
 800efa8:	689b      	ldr	r3, [r3, #8]
 800efaa:	4798      	blx	r3
 800efac:	e717      	b.n	800edde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800efae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800efae:	b570      	push	{r4, r5, r6, lr}
 800efb0:	2300      	movs	r3, #0
 800efb2:	460c      	mov	r4, r1
 800efb4:	b086      	sub	sp, #24
 800efb6:	1d06      	adds	r6, r0, #4
 800efb8:	4631      	mov	r1, r6
 800efba:	4605      	mov	r5, r0
 800efbc:	a802      	add	r0, sp, #8
 800efbe:	9301      	str	r3, [sp, #4]
 800efc0:	f7ff f970 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800efc4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800efc8:	8822      	ldrh	r2, [r4, #0]
 800efca:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800efce:	1ad2      	subs	r2, r2, r3
 800efd0:	8863      	ldrh	r3, [r4, #2]
 800efd2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800efd6:	1a5b      	subs	r3, r3, r1
 800efd8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800efdc:	f8ad 2010 	strh.w	r2, [sp, #16]
 800efe0:	f8ad 0014 	strh.w	r0, [sp, #20]
 800efe4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800efe8:	aa01      	add	r2, sp, #4
 800efea:	a904      	add	r1, sp, #16
 800efec:	4630      	mov	r0, r6
 800efee:	f8ad 3012 	strh.w	r3, [sp, #18]
 800eff2:	f7fb ff1d 	bl	800ae30 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800eff6:	9a01      	ldr	r2, [sp, #4]
 800eff8:	b11a      	cbz	r2, 800f002 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800effa:	4621      	mov	r1, r4
 800effc:	4628      	mov	r0, r5
 800effe:	f7ff fed5 	bl	800edac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f002:	b006      	add	sp, #24
 800f004:	bd70      	pop	{r4, r5, r6, pc}

0800f006 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f006:	b530      	push	{r4, r5, lr}
 800f008:	4602      	mov	r2, r0
 800f00a:	b085      	sub	sp, #20
 800f00c:	460d      	mov	r5, r1
 800f00e:	466b      	mov	r3, sp
 800f010:	4604      	mov	r4, r0
 800f012:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f016:	6851      	ldr	r1, [r2, #4]
 800f018:	c303      	stmia	r3!, {r0, r1}
 800f01a:	4629      	mov	r1, r5
 800f01c:	4668      	mov	r0, sp
 800f01e:	f7fb fe2f 	bl	800ac80 <_ZN8touchgfx4RectaNERKS0_>
 800f022:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f026:	b12b      	cbz	r3, 800f034 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f028:	4669      	mov	r1, sp
 800f02a:	4620      	mov	r0, r4
 800f02c:	f7ff ffbf 	bl	800efae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f030:	b005      	add	sp, #20
 800f032:	bd30      	pop	{r4, r5, pc}
 800f034:	3404      	adds	r4, #4
 800f036:	4621      	mov	r1, r4
 800f038:	a802      	add	r0, sp, #8
 800f03a:	f7ff f933 	bl	800e2a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f03e:	f8bd 3000 	ldrh.w	r3, [sp]
 800f042:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f046:	4669      	mov	r1, sp
 800f048:	1a9b      	subs	r3, r3, r2
 800f04a:	f8ad 3000 	strh.w	r3, [sp]
 800f04e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f052:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f056:	4620      	mov	r0, r4
 800f058:	1a9b      	subs	r3, r3, r2
 800f05a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f05e:	f7fb feae 	bl	800adbe <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f062:	e7e5      	b.n	800f030 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f064 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f064:	460b      	mov	r3, r1
 800f066:	680a      	ldr	r2, [r1, #0]
 800f068:	1d01      	adds	r1, r0, #4
 800f06a:	6992      	ldr	r2, [r2, #24]
 800f06c:	4618      	mov	r0, r3
 800f06e:	4710      	bx	r2

0800f070 <_ZN8touchgfx12TextProviderC1Ev>:
 800f070:	b538      	push	{r3, r4, r5, lr}
 800f072:	2500      	movs	r5, #0
 800f074:	2302      	movs	r3, #2
 800f076:	4604      	mov	r4, r0
 800f078:	e9c0 5500 	strd	r5, r5, [r0]
 800f07c:	7403      	strb	r3, [r0, #16]
 800f07e:	6145      	str	r5, [r0, #20]
 800f080:	7605      	strb	r5, [r0, #24]
 800f082:	83c5      	strh	r5, [r0, #30]
 800f084:	8405      	strh	r5, [r0, #32]
 800f086:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f088:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f08a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f08c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f090:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f094:	220e      	movs	r2, #14
 800f096:	4629      	mov	r1, r5
 800f098:	304c      	adds	r0, #76	@ 0x4c
 800f09a:	f023 fc3c 	bl	8032916 <memset>
 800f09e:	2301      	movs	r3, #1
 800f0a0:	4620      	mov	r0, r4
 800f0a2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f0a6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f0aa:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f0ae:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f0b2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f0b6:	f7f4 fb27 	bl	8003708 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f0ba:	4620      	mov	r0, r4
 800f0bc:	bd38      	pop	{r3, r4, r5, pc}

0800f0be <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f0be:	b530      	push	{r4, r5, lr}
 800f0c0:	2500      	movs	r5, #0
 800f0c2:	2401      	movs	r4, #1
 800f0c4:	6843      	ldr	r3, [r0, #4]
 800f0c6:	b913      	cbnz	r3, 800f0ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f0c8:	6803      	ldr	r3, [r0, #0]
 800f0ca:	b313      	cbz	r3, 800f112 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f0cc:	6043      	str	r3, [r0, #4]
 800f0ce:	7e03      	ldrb	r3, [r0, #24]
 800f0d0:	b143      	cbz	r3, 800f0e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f0d2:	6943      	ldr	r3, [r0, #20]
 800f0d4:	b12b      	cbz	r3, 800f0e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f0d6:	881a      	ldrh	r2, [r3, #0]
 800f0d8:	b11a      	cbz	r2, 800f0e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f0da:	1c9a      	adds	r2, r3, #2
 800f0dc:	6142      	str	r2, [r0, #20]
 800f0de:	8818      	ldrh	r0, [r3, #0]
 800f0e0:	bd30      	pop	{r4, r5, pc}
 800f0e2:	7605      	strb	r5, [r0, #24]
 800f0e4:	6843      	ldr	r3, [r0, #4]
 800f0e6:	8819      	ldrh	r1, [r3, #0]
 800f0e8:	b199      	cbz	r1, 800f112 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f0ea:	1c9a      	adds	r2, r3, #2
 800f0ec:	2902      	cmp	r1, #2
 800f0ee:	6042      	str	r2, [r0, #4]
 800f0f0:	d1f5      	bne.n	800f0de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f0f2:	7c03      	ldrb	r3, [r0, #16]
 800f0f4:	2b01      	cmp	r3, #1
 800f0f6:	d8e5      	bhi.n	800f0c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0f8:	1c5a      	adds	r2, r3, #1
 800f0fa:	7402      	strb	r2, [r0, #16]
 800f0fc:	3302      	adds	r3, #2
 800f0fe:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f102:	6143      	str	r3, [r0, #20]
 800f104:	2b00      	cmp	r3, #0
 800f106:	d0dd      	beq.n	800f0c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f108:	881b      	ldrh	r3, [r3, #0]
 800f10a:	2b00      	cmp	r3, #0
 800f10c:	d0da      	beq.n	800f0c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f10e:	7604      	strb	r4, [r0, #24]
 800f110:	e7d8      	b.n	800f0c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f112:	2000      	movs	r0, #0
 800f114:	e7e4      	b.n	800f0e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f116 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f116:	6001      	str	r1, [r0, #0]
 800f118:	2100      	movs	r1, #0
 800f11a:	b430      	push	{r4, r5}
 800f11c:	6041      	str	r1, [r0, #4]
 800f11e:	6815      	ldr	r5, [r2, #0]
 800f120:	6085      	str	r5, [r0, #8]
 800f122:	6852      	ldr	r2, [r2, #4]
 800f124:	6443      	str	r3, [r0, #68]	@ 0x44
 800f126:	9b02      	ldr	r3, [sp, #8]
 800f128:	60c2      	str	r2, [r0, #12]
 800f12a:	7401      	strb	r1, [r0, #16]
 800f12c:	6141      	str	r1, [r0, #20]
 800f12e:	7601      	strb	r1, [r0, #24]
 800f130:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f132:	8401      	strh	r1, [r0, #32]
 800f134:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800f138:	6483      	str	r3, [r0, #72]	@ 0x48
 800f13a:	bc30      	pop	{r4, r5}
 800f13c:	f7f4 bae4 	b.w	8003708 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f140 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f140:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f142:	4605      	mov	r5, r0
 800f144:	4608      	mov	r0, r1
 800f146:	b1e9      	cbz	r1, 800f184 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f148:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800f14c:	460b      	mov	r3, r1
 800f14e:	4622      	mov	r2, r4
 800f150:	f101 0708 	add.w	r7, r1, #8
 800f154:	4626      	mov	r6, r4
 800f156:	6818      	ldr	r0, [r3, #0]
 800f158:	6859      	ldr	r1, [r3, #4]
 800f15a:	3308      	adds	r3, #8
 800f15c:	c603      	stmia	r6!, {r0, r1}
 800f15e:	42bb      	cmp	r3, r7
 800f160:	4634      	mov	r4, r6
 800f162:	d1f7      	bne.n	800f154 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f164:	6818      	ldr	r0, [r3, #0]
 800f166:	6030      	str	r0, [r6, #0]
 800f168:	4610      	mov	r0, r2
 800f16a:	889b      	ldrh	r3, [r3, #4]
 800f16c:	80b3      	strh	r3, [r6, #4]
 800f16e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800f172:	015b      	lsls	r3, r3, #5
 800f174:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f178:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800f17c:	430b      	orrs	r3, r1
 800f17e:	425b      	negs	r3, r3
 800f180:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800f184:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f186 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f186:	b538      	push	{r3, r4, r5, lr}
 800f188:	460c      	mov	r4, r1
 800f18a:	6811      	ldr	r1, [r2, #0]
 800f18c:	4610      	mov	r0, r2
 800f18e:	68cd      	ldr	r5, [r1, #12]
 800f190:	4619      	mov	r1, r3
 800f192:	47a8      	blx	r5
 800f194:	2800      	cmp	r0, #0
 800f196:	bf08      	it	eq
 800f198:	4620      	moveq	r0, r4
 800f19a:	bd38      	pop	{r3, r4, r5, pc}

0800f19c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f19c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f19e:	4604      	mov	r4, r0
 800f1a0:	4615      	mov	r5, r2
 800f1a2:	4608      	mov	r0, r1
 800f1a4:	b93a      	cbnz	r2, 800f1b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f1a6:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f1aa:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800f1ae:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800f1b2:	4628      	mov	r0, r5
 800f1b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f1b6:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800f1ba:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f1be:	8893      	ldrh	r3, [r2, #4]
 800f1c0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f1c4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f1c8:	79ee      	ldrb	r6, [r5, #7]
 800f1ca:	4316      	orrs	r6, r2
 800f1cc:	19da      	adds	r2, r3, r7
 800f1ce:	b291      	uxth	r1, r2
 800f1d0:	291d      	cmp	r1, #29
 800f1d2:	b2b7      	uxth	r7, r6
 800f1d4:	d879      	bhi.n	800f2ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f1d6:	2201      	movs	r2, #1
 800f1d8:	408a      	lsls	r2, r1
 800f1da:	4974      	ldr	r1, [pc, #464]	@ (800f3ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>)
 800f1dc:	10f6      	asrs	r6, r6, #3
 800f1de:	420a      	tst	r2, r1
 800f1e0:	d12d      	bne.n	800f23e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 800f1e2:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800f1e6:	d070      	beq.n	800f2ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f1e8:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800f1ec:	462b      	mov	r3, r5
 800f1ee:	f105 0e08 	add.w	lr, r5, #8
 800f1f2:	4615      	mov	r5, r2
 800f1f4:	4694      	mov	ip, r2
 800f1f6:	6818      	ldr	r0, [r3, #0]
 800f1f8:	6859      	ldr	r1, [r3, #4]
 800f1fa:	3308      	adds	r3, #8
 800f1fc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f200:	4573      	cmp	r3, lr
 800f202:	4662      	mov	r2, ip
 800f204:	d1f6      	bne.n	800f1f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800f206:	6818      	ldr	r0, [r3, #0]
 800f208:	f8cc 0000 	str.w	r0, [ip]
 800f20c:	889b      	ldrh	r3, [r3, #4]
 800f20e:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f212:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800f216:	b2b3      	uxth	r3, r6
 800f218:	1aca      	subs	r2, r1, r3
 800f21a:	b292      	uxth	r2, r2
 800f21c:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800f220:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800f224:	10d2      	asrs	r2, r2, #3
 800f226:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800f22a:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800f22e:	4302      	orrs	r2, r0
 800f230:	1bcf      	subs	r7, r1, r7
 800f232:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800f236:	1afb      	subs	r3, r7, r3
 800f238:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f23c:	e7b9      	b.n	800f1b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f23e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f240:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f244:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800f246:	f640 6333 	movw	r3, #3635	@ 0xe33
 800f24a:	4299      	cmp	r1, r3
 800f24c:	d110      	bne.n	800f270 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd4>
 800f24e:	6803      	ldr	r3, [r0, #0]
 800f250:	68db      	ldr	r3, [r3, #12]
 800f252:	4798      	blx	r3
 800f254:	7b41      	ldrb	r1, [r0, #13]
 800f256:	00cb      	lsls	r3, r1, #3
 800f258:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f25c:	7a03      	ldrb	r3, [r0, #8]
 800f25e:	0648      	lsls	r0, r1, #25
 800f260:	ea43 0302 	orr.w	r3, r3, r2
 800f264:	bf44      	itt	mi
 800f266:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f26a:	b21b      	sxthmi	r3, r3
 800f26c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f270:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800f274:	462a      	mov	r2, r5
 800f276:	443b      	add	r3, r7
 800f278:	4433      	add	r3, r6
 800f27a:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800f27e:	f105 0c08 	add.w	ip, r5, #8
 800f282:	4635      	mov	r5, r6
 800f284:	b29b      	uxth	r3, r3
 800f286:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f28a:	4637      	mov	r7, r6
 800f28c:	6810      	ldr	r0, [r2, #0]
 800f28e:	6851      	ldr	r1, [r2, #4]
 800f290:	3208      	adds	r2, #8
 800f292:	c703      	stmia	r7!, {r0, r1}
 800f294:	4562      	cmp	r2, ip
 800f296:	463e      	mov	r6, r7
 800f298:	d1f7      	bne.n	800f28a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xee>
 800f29a:	6810      	ldr	r0, [r2, #0]
 800f29c:	6038      	str	r0, [r7, #0]
 800f29e:	8892      	ldrh	r2, [r2, #4]
 800f2a0:	80ba      	strh	r2, [r7, #4]
 800f2a2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f2a6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f2aa:	10db      	asrs	r3, r3, #3
 800f2ac:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f2b0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f2b4:	4313      	orrs	r3, r2
 800f2b6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f2ba:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800f2be:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800f2c2:	1a9b      	subs	r3, r3, r2
 800f2c4:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800f2c8:	e773      	b.n	800f1b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f2ca:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800f2ce:	f023 0204 	bic.w	r2, r3, #4
 800f2d2:	428a      	cmp	r2, r1
 800f2d4:	d003      	beq.n	800f2de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f2d6:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800f2da:	4293      	cmp	r3, r2
 800f2dc:	d120      	bne.n	800f320 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x184>
 800f2de:	3b01      	subs	r3, #1
 800f2e0:	4602      	mov	r2, r0
 800f2e2:	b29b      	uxth	r3, r3
 800f2e4:	4629      	mov	r1, r5
 800f2e6:	4620      	mov	r0, r4
 800f2e8:	f7ff ff4d 	bl	800f186 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f2ec:	7b41      	ldrb	r1, [r0, #13]
 800f2ee:	00cb      	lsls	r3, r1, #3
 800f2f0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f2f4:	7a03      	ldrb	r3, [r0, #8]
 800f2f6:	0649      	lsls	r1, r1, #25
 800f2f8:	ea43 0302 	orr.w	r3, r3, r2
 800f2fc:	bf44      	itt	mi
 800f2fe:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f302:	b21b      	sxthmi	r3, r3
 800f304:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f308:	7b6b      	ldrb	r3, [r5, #13]
 800f30a:	7aaa      	ldrb	r2, [r5, #10]
 800f30c:	005b      	lsls	r3, r3, #1
 800f30e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f312:	4313      	orrs	r3, r2
 800f314:	115a      	asrs	r2, r3, #5
 800f316:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f31a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f31e:	e036      	b.n	800f38e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 800f320:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f324:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800f328:	7a2a      	ldrb	r2, [r5, #8]
 800f32a:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f32e:	ea42 0201 	orr.w	r2, r2, r1
 800f332:	f640 6109 	movw	r1, #3593	@ 0xe09
 800f336:	bf1c      	itt	ne
 800f338:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800f33c:	b212      	sxthne	r2, r2
 800f33e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f342:	f023 0210 	bic.w	r2, r3, #16
 800f346:	428a      	cmp	r2, r1
 800f348:	d003      	beq.n	800f352 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 800f34a:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f34e:	4293      	cmp	r3, r2
 800f350:	d12a      	bne.n	800f3a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20c>
 800f352:	7b6e      	ldrb	r6, [r5, #13]
 800f354:	4629      	mov	r1, r5
 800f356:	0076      	lsls	r6, r6, #1
 800f358:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f35c:	7aae      	ldrb	r6, [r5, #10]
 800f35e:	4316      	orrs	r6, r2
 800f360:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f364:	4293      	cmp	r3, r2
 800f366:	bf18      	it	ne
 800f368:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f36c:	4602      	mov	r2, r0
 800f36e:	bf14      	ite	ne
 800f370:	b29b      	uxthne	r3, r3
 800f372:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800f376:	4620      	mov	r0, r4
 800f378:	f7ff ff05 	bl	800f186 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f37c:	7b43      	ldrb	r3, [r0, #13]
 800f37e:	7a82      	ldrb	r2, [r0, #10]
 800f380:	005b      	lsls	r3, r3, #1
 800f382:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f386:	4313      	orrs	r3, r2
 800f388:	1af6      	subs	r6, r6, r3
 800f38a:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800f38e:	7b69      	ldrb	r1, [r5, #13]
 800f390:	00cb      	lsls	r3, r1, #3
 800f392:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f396:	7a2b      	ldrb	r3, [r5, #8]
 800f398:	4313      	orrs	r3, r2
 800f39a:	064a      	lsls	r2, r1, #25
 800f39c:	bf44      	itt	mi
 800f39e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f3a2:	b21b      	sxthmi	r3, r3
 800f3a4:	1bdb      	subs	r3, r3, r7
 800f3a6:	e747      	b.n	800f238 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 800f3a8:	2300      	movs	r3, #0
 800f3aa:	e7b6      	b.n	800f31a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x17e>
 800f3ac:	3fc00079 	.word	0x3fc00079

0800f3b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800f3b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3b4:	4604      	mov	r4, r0
 800f3b6:	b942      	cbnz	r2, 800f3ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800f3b8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f3bc:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800f3c0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800f3c4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f3c8:	e047      	b.n	800f45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f3ca:	7b51      	ldrb	r1, [r2, #13]
 800f3cc:	8893      	ldrh	r3, [r2, #4]
 800f3ce:	010d      	lsls	r5, r1, #4
 800f3d0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800f3d4:	79d5      	ldrb	r5, [r2, #7]
 800f3d6:	4305      	orrs	r5, r0
 800f3d8:	2d04      	cmp	r5, #4
 800f3da:	bfcc      	ite	gt
 800f3dc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800f3e0:	f04f 0e01 	movle.w	lr, #1
 800f3e4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800f3e8:	f200 80ab 	bhi.w	800f542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800f3ec:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800f3f0:	4283      	cmp	r3, r0
 800f3f2:	d216      	bcs.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3f4:	f240 605b 	movw	r0, #1627	@ 0x65b
 800f3f8:	4283      	cmp	r3, r0
 800f3fa:	d859      	bhi.n	800f4b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800f3fc:	f240 6057 	movw	r0, #1623	@ 0x657
 800f400:	4283      	cmp	r3, r0
 800f402:	d20e      	bcs.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f404:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f408:	d24a      	bcs.n	800f4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800f40a:	f240 604e 	movw	r0, #1614	@ 0x64e
 800f40e:	4283      	cmp	r3, r0
 800f410:	d207      	bcs.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f412:	f240 601a 	movw	r0, #1562	@ 0x61a
 800f416:	4283      	cmp	r3, r0
 800f418:	d02a      	beq.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f41a:	d821      	bhi.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800f41c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800f420:	d35b      	bcc.n	800f4da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f422:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800f426:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f42a:	f040 80d0 	bne.w	800f5ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f42e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800f432:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f436:	f040 80ca 	bne.w	800f5ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f43a:	00cb      	lsls	r3, r1, #3
 800f43c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f440:	7a13      	ldrb	r3, [r2, #8]
 800f442:	0649      	lsls	r1, r1, #25
 800f444:	ea43 0300 	orr.w	r3, r3, r0
 800f448:	bf44      	itt	mi
 800f44a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f44e:	b21b      	sxthmi	r3, r3
 800f450:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f454:	1b5d      	subs	r5, r3, r5
 800f456:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f45a:	4610      	mov	r0, r2
 800f45c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f460:	f240 604b 	movw	r0, #1611	@ 0x64b
 800f464:	4283      	cmp	r3, r0
 800f466:	d338      	bcc.n	800f4da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f468:	f240 604c 	movw	r0, #1612	@ 0x64c
 800f46c:	4283      	cmp	r3, r0
 800f46e:	d9d8      	bls.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f470:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800f474:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800f478:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f47c:	f040 80f2 	bne.w	800f664 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f480:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f484:	f040 80ee 	bne.w	800f664 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f488:	00cb      	lsls	r3, r1, #3
 800f48a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f48e:	7a13      	ldrb	r3, [r2, #8]
 800f490:	064e      	lsls	r6, r1, #25
 800f492:	ea43 0300 	orr.w	r3, r3, r0
 800f496:	bf44      	itt	mi
 800f498:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f49c:	b21b      	sxthmi	r3, r3
 800f49e:	e7d9      	b.n	800f454 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800f4a0:	f240 6054 	movw	r0, #1620	@ 0x654
 800f4a4:	4283      	cmp	r3, r0
 800f4a6:	d8e3      	bhi.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4a8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f4ac:	d9e0      	bls.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4ae:	e7b8      	b.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4b0:	f240 6074 	movw	r0, #1652	@ 0x674
 800f4b4:	4283      	cmp	r3, r0
 800f4b6:	d0b4      	beq.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4b8:	d82d      	bhi.n	800f516 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800f4ba:	f240 605e 	movw	r0, #1630	@ 0x65e
 800f4be:	4283      	cmp	r3, r0
 800f4c0:	d804      	bhi.n	800f4cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800f4c2:	f240 605d 	movw	r0, #1629	@ 0x65d
 800f4c6:	4283      	cmp	r3, r0
 800f4c8:	d3d2      	bcc.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4ca:	e7aa      	b.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4cc:	f240 605f 	movw	r0, #1631	@ 0x65f
 800f4d0:	4283      	cmp	r3, r0
 800f4d2:	d0cd      	beq.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4d4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800f4d8:	d0a3      	beq.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4da:	00cb      	lsls	r3, r1, #3
 800f4dc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f4e0:	7a13      	ldrb	r3, [r2, #8]
 800f4e2:	0649      	lsls	r1, r1, #25
 800f4e4:	ea43 0300 	orr.w	r3, r3, r0
 800f4e8:	bf44      	itt	mi
 800f4ea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f4ee:	b21b      	sxthmi	r3, r3
 800f4f0:	1b5d      	subs	r5, r3, r5
 800f4f2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f4f6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f4fa:	7b53      	ldrb	r3, [r2, #13]
 800f4fc:	015b      	lsls	r3, r3, #5
 800f4fe:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f502:	7993      	ldrb	r3, [r2, #6]
 800f504:	430b      	orrs	r3, r1
 800f506:	2105      	movs	r1, #5
 800f508:	005b      	lsls	r3, r3, #1
 800f50a:	fb93 f3f1 	sdiv	r3, r3, r1
 800f50e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800f512:	440b      	add	r3, r1
 800f514:	e756      	b.n	800f3c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800f516:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800f51a:	4283      	cmp	r3, r0
 800f51c:	d809      	bhi.n	800f532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800f51e:	f240 60df 	movw	r0, #1759	@ 0x6df
 800f522:	4283      	cmp	r3, r0
 800f524:	f4bf af7d 	bcs.w	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f528:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800f52c:	2b05      	cmp	r3, #5
 800f52e:	d8d4      	bhi.n	800f4da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f530:	e777      	b.n	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f532:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800f536:	4283      	cmp	r3, r0
 800f538:	d09a      	beq.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f53a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800f53e:	4283      	cmp	r3, r0
 800f540:	e7ca      	b.n	800f4d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800f542:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800f546:	d22b      	bcs.n	800f5a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800f548:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800f54c:	4283      	cmp	r3, r0
 800f54e:	d28f      	bcs.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f550:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800f554:	4283      	cmp	r3, r0
 800f556:	d816      	bhi.n	800f586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800f558:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800f55c:	4283      	cmp	r3, r0
 800f55e:	f4bf af60 	bcs.w	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f562:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800f566:	4283      	cmp	r3, r0
 800f568:	d80a      	bhi.n	800f580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800f56a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800f56e:	4283      	cmp	r3, r0
 800f570:	f4bf af57 	bcs.w	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f574:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800f578:	4283      	cmp	r3, r0
 800f57a:	f43f af79 	beq.w	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f57e:	e7ac      	b.n	800f4da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f580:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800f584:	e7f8      	b.n	800f578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800f586:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800f58a:	4283      	cmp	r3, r0
 800f58c:	d802      	bhi.n	800f594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800f58e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800f592:	e798      	b.n	800f4c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800f594:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800f598:	4283      	cmp	r3, r0
 800f59a:	f47f af42 	bne.w	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f59e:	e767      	b.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f5a0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800f5a4:	4283      	cmp	r3, r0
 800f5a6:	f43f af63 	beq.w	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f5aa:	d802      	bhi.n	800f5b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800f5ac:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800f5b0:	e7f2      	b.n	800f598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800f5b2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800f5b6:	4283      	cmp	r3, r0
 800f5b8:	d805      	bhi.n	800f5c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800f5ba:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800f5be:	4283      	cmp	r3, r0
 800f5c0:	f4ff af2f 	bcc.w	800f422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f5c4:	e754      	b.n	800f470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f5c6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800f5ca:	4283      	cmp	r3, r0
 800f5cc:	e7af      	b.n	800f52e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800f5ce:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f5d2:	4617      	mov	r7, r2
 800f5d4:	4666      	mov	r6, ip
 800f5d6:	f102 0808 	add.w	r8, r2, #8
 800f5da:	46e6      	mov	lr, ip
 800f5dc:	6838      	ldr	r0, [r7, #0]
 800f5de:	6879      	ldr	r1, [r7, #4]
 800f5e0:	3708      	adds	r7, #8
 800f5e2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800f5e6:	4547      	cmp	r7, r8
 800f5e8:	46f4      	mov	ip, lr
 800f5ea:	d1f6      	bne.n	800f5da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800f5ec:	6838      	ldr	r0, [r7, #0]
 800f5ee:	f8ce 0000 	str.w	r0, [lr]
 800f5f2:	88b9      	ldrh	r1, [r7, #4]
 800f5f4:	f8ae 1004 	strh.w	r1, [lr, #4]
 800f5f8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f5fc:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f600:	d009      	beq.n	800f616 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800f602:	7b51      	ldrb	r1, [r2, #13]
 800f604:	7992      	ldrb	r2, [r2, #6]
 800f606:	0149      	lsls	r1, r1, #5
 800f608:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f60c:	4311      	orrs	r1, r2
 800f60e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f612:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f616:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f61a:	b2ad      	uxth	r5, r5
 800f61c:	d00d      	beq.n	800f63a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800f61e:	442b      	add	r3, r5
 800f620:	b29b      	uxth	r3, r3
 800f622:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f626:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f62a:	10db      	asrs	r3, r3, #3
 800f62c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f630:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f634:	4313      	orrs	r3, r2
 800f636:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f63a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f63e:	00cb      	lsls	r3, r1, #3
 800f640:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f644:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f648:	064f      	lsls	r7, r1, #25
 800f64a:	ea43 0302 	orr.w	r3, r3, r2
 800f64e:	bf44      	itt	mi
 800f650:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f654:	b21b      	sxthmi	r3, r3
 800f656:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f65a:	1b5b      	subs	r3, r3, r5
 800f65c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f660:	4632      	mov	r2, r6
 800f662:	e6fa      	b.n	800f45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f664:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f668:	4617      	mov	r7, r2
 800f66a:	4666      	mov	r6, ip
 800f66c:	f102 0908 	add.w	r9, r2, #8
 800f670:	46e0      	mov	r8, ip
 800f672:	6838      	ldr	r0, [r7, #0]
 800f674:	6879      	ldr	r1, [r7, #4]
 800f676:	3708      	adds	r7, #8
 800f678:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800f67c:	454f      	cmp	r7, r9
 800f67e:	46c4      	mov	ip, r8
 800f680:	d1f6      	bne.n	800f670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800f682:	6838      	ldr	r0, [r7, #0]
 800f684:	f8c8 0000 	str.w	r0, [r8]
 800f688:	88b9      	ldrh	r1, [r7, #4]
 800f68a:	f8a8 1004 	strh.w	r1, [r8, #4]
 800f68e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f692:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f696:	d009      	beq.n	800f6ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800f698:	7b51      	ldrb	r1, [r2, #13]
 800f69a:	7992      	ldrb	r2, [r2, #6]
 800f69c:	0149      	lsls	r1, r1, #5
 800f69e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f6a2:	4311      	orrs	r1, r2
 800f6a4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f6a8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f6ac:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f6b0:	d00e      	beq.n	800f6d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800f6b2:	eba3 030e 	sub.w	r3, r3, lr
 800f6b6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f6ba:	b29b      	uxth	r3, r3
 800f6bc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f6c0:	10db      	asrs	r3, r3, #3
 800f6c2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f6c6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f6ca:	4313      	orrs	r3, r2
 800f6cc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f6d0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f6d4:	00cb      	lsls	r3, r1, #3
 800f6d6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f6da:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f6de:	0648      	lsls	r0, r1, #25
 800f6e0:	ea43 0302 	orr.w	r3, r3, r2
 800f6e4:	bf44      	itt	mi
 800f6e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f6ea:	b21b      	sxthmi	r3, r3
 800f6ec:	1b5d      	subs	r5, r3, r5
 800f6ee:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f6f2:	e7b5      	b.n	800f660 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800f6f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f6f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6f8:	461e      	mov	r6, r3
 800f6fa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f6fc:	4604      	mov	r4, r0
 800f6fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f702:	4617      	mov	r7, r2
 800f704:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f708:	f7f3 ffbc 	bl	8003684 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f70c:	4605      	mov	r5, r0
 800f70e:	b918      	cbnz	r0, 800f718 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800f710:	6030      	str	r0, [r6, #0]
 800f712:	4628      	mov	r0, r5
 800f714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f718:	683b      	ldr	r3, [r7, #0]
 800f71a:	4601      	mov	r1, r0
 800f71c:	68db      	ldr	r3, [r3, #12]
 800f71e:	4638      	mov	r0, r7
 800f720:	4798      	blx	r3
 800f722:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f726:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f72a:	4602      	mov	r2, r0
 800f72c:	6030      	str	r0, [r6, #0]
 800f72e:	d213      	bcs.n	800f758 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800f730:	4643      	mov	r3, r8
 800f732:	4639      	mov	r1, r7
 800f734:	4620      	mov	r0, r4
 800f736:	f7ff fe3b 	bl	800f3b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f73a:	6030      	str	r0, [r6, #0]
 800f73c:	6833      	ldr	r3, [r6, #0]
 800f73e:	b143      	cbz	r3, 800f752 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800f740:	7b5a      	ldrb	r2, [r3, #13]
 800f742:	7a9b      	ldrb	r3, [r3, #10]
 800f744:	0052      	lsls	r2, r2, #1
 800f746:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f74a:	4313      	orrs	r3, r2
 800f74c:	bf0c      	ite	eq
 800f74e:	2301      	moveq	r3, #1
 800f750:	2300      	movne	r3, #0
 800f752:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f756:	e7dc      	b.n	800f712 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800f758:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f75c:	b29b      	uxth	r3, r3
 800f75e:	2b7f      	cmp	r3, #127	@ 0x7f
 800f760:	d804      	bhi.n	800f76c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800f762:	4639      	mov	r1, r7
 800f764:	4620      	mov	r0, r4
 800f766:	f7ff fd19 	bl	800f19c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f76a:	e7e6      	b.n	800f73a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f76c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f770:	2b00      	cmp	r3, #0
 800f772:	d0e3      	beq.n	800f73c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f774:	f640 1302 	movw	r3, #2306	@ 0x902
 800f778:	429d      	cmp	r5, r3
 800f77a:	d1df      	bne.n	800f73c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f77c:	4601      	mov	r1, r0
 800f77e:	4620      	mov	r0, r4
 800f780:	f7ff fcde 	bl	800f140 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f784:	e7d9      	b.n	800f73a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800f786 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f786:	b510      	push	{r4, lr}
 800f788:	4604      	mov	r4, r0
 800f78a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800f78e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f790:	b1f1      	cbz	r1, 800f7d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f792:	2b0a      	cmp	r3, #10
 800f794:	d02f      	beq.n	800f7f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f796:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800f798:	3901      	subs	r1, #1
 800f79a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f79e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800f7a0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800f7a4:	1c51      	adds	r1, r2, #1
 800f7a6:	b289      	uxth	r1, r1
 800f7a8:	2901      	cmp	r1, #1
 800f7aa:	bf84      	itt	hi
 800f7ac:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f7b0:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800f7b2:	f103 0201 	add.w	r2, r3, #1
 800f7b6:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f7b8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f7ba:	bf98      	it	ls
 800f7bc:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800f7be:	4413      	add	r3, r2
 800f7c0:	b29b      	uxth	r3, r3
 800f7c2:	2b09      	cmp	r3, #9
 800f7c4:	bf88      	it	hi
 800f7c6:	3b0a      	subhi	r3, #10
 800f7c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f7cc:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f7ce:	e7dc      	b.n	800f78a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f7d0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f7d2:	2b0a      	cmp	r3, #10
 800f7d4:	d00f      	beq.n	800f7f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f7d6:	4620      	mov	r0, r4
 800f7d8:	f7ff fc71 	bl	800f0be <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f7dc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f7de:	1c5a      	adds	r2, r3, #1
 800f7e0:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f7e2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f7e4:	4413      	add	r3, r2
 800f7e6:	b29b      	uxth	r3, r3
 800f7e8:	2b09      	cmp	r3, #9
 800f7ea:	bf88      	it	hi
 800f7ec:	3b0a      	subhi	r3, #10
 800f7ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f7f2:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f7f4:	e7ec      	b.n	800f7d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f7f6:	bd10      	pop	{r4, pc}

0800f7f8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f7f8:	b538      	push	{r3, r4, r5, lr}
 800f7fa:	4604      	mov	r4, r0
 800f7fc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f7fe:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800f802:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800f804:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800f806:	3a01      	subs	r2, #1
 800f808:	8702      	strh	r2, [r0, #56]	@ 0x38
 800f80a:	1c5a      	adds	r2, r3, #1
 800f80c:	b292      	uxth	r2, r2
 800f80e:	2a09      	cmp	r2, #9
 800f810:	bf86      	itte	hi
 800f812:	3b09      	subhi	r3, #9
 800f814:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800f816:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800f818:	f7ff ffb5 	bl	800f786 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f81c:	8c23      	ldrh	r3, [r4, #32]
 800f81e:	2b01      	cmp	r3, #1
 800f820:	bf9c      	itt	ls
 800f822:	3301      	addls	r3, #1
 800f824:	8423      	strhls	r3, [r4, #32]
 800f826:	8be3      	ldrh	r3, [r4, #30]
 800f828:	b90b      	cbnz	r3, 800f82e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800f82a:	2302      	movs	r3, #2
 800f82c:	83e3      	strh	r3, [r4, #30]
 800f82e:	8be3      	ldrh	r3, [r4, #30]
 800f830:	4628      	mov	r0, r5
 800f832:	3b01      	subs	r3, #1
 800f834:	b29b      	uxth	r3, r3
 800f836:	83e3      	strh	r3, [r4, #30]
 800f838:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f83c:	8365      	strh	r5, [r4, #26]
 800f83e:	bd38      	pop	{r3, r4, r5, pc}

0800f840 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f840:	428a      	cmp	r2, r1
 800f842:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f846:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800f848:	d931      	bls.n	800f8ae <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800f84a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800f84c:	1a54      	subs	r4, r2, r1
 800f84e:	19ee      	adds	r6, r5, r7
 800f850:	3e01      	subs	r6, #1
 800f852:	fa1f fe84 	uxth.w	lr, r4
 800f856:	b2b4      	uxth	r4, r6
 800f858:	eba4 090e 	sub.w	r9, r4, lr
 800f85c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800f860:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800f864:	fa1f f989 	uxth.w	r9, r9
 800f868:	2c09      	cmp	r4, #9
 800f86a:	4626      	mov	r6, r4
 800f86c:	bf88      	it	hi
 800f86e:	f1a4 060a 	subhi.w	r6, r4, #10
 800f872:	f1bc 0f00 	cmp.w	ip, #0
 800f876:	bf08      	it	eq
 800f878:	f04f 0c02 	moveq.w	ip, #2
 800f87c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f880:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f884:	3c01      	subs	r4, #1
 800f886:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800f88a:	fa1f fc8c 	uxth.w	ip, ip
 800f88e:	b2a4      	uxth	r4, r4
 800f890:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f894:	454c      	cmp	r4, r9
 800f896:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800f89a:	d1e5      	bne.n	800f868 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f89c:	eba5 050e 	sub.w	r5, r5, lr
 800f8a0:	eb0e 0408 	add.w	r4, lr, r8
 800f8a4:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f8a6:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800f8aa:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800f8ae:	250a      	movs	r5, #10
 800f8b0:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800f8b2:	1a64      	subs	r4, r4, r1
 800f8b4:	4439      	add	r1, r7
 800f8b6:	b289      	uxth	r1, r1
 800f8b8:	2909      	cmp	r1, #9
 800f8ba:	bf88      	it	hi
 800f8bc:	390a      	subhi	r1, #10
 800f8be:	8704      	strh	r4, [r0, #56]	@ 0x38
 800f8c0:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f8c2:	b18a      	cbz	r2, 800f8e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f8c4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800f8c6:	3a01      	subs	r2, #1
 800f8c8:	3101      	adds	r1, #1
 800f8ca:	b292      	uxth	r2, r2
 800f8cc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f8d0:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f8d2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f8d4:	b901      	cbnz	r1, 800f8d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f8d6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f8d8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f8da:	3901      	subs	r1, #1
 800f8dc:	b289      	uxth	r1, r1
 800f8de:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f8e0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f8e4:	844c      	strh	r4, [r1, #34]	@ 0x22
 800f8e6:	e7ec      	b.n	800f8c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f8e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f8ec:	f7ff bf4b 	b.w	800f786 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f8f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f8f0:	b570      	push	{r4, r5, r6, lr}
 800f8f2:	2500      	movs	r5, #0
 800f8f4:	4295      	cmp	r5, r2
 800f8f6:	d011      	beq.n	800f91c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f8f8:	8bc4      	ldrh	r4, [r0, #30]
 800f8fa:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f8fe:	4414      	add	r4, r2
 800f900:	3c01      	subs	r4, #1
 800f902:	1b64      	subs	r4, r4, r5
 800f904:	b2a4      	uxth	r4, r4
 800f906:	2c01      	cmp	r4, #1
 800f908:	bf88      	it	hi
 800f90a:	3c02      	subhi	r4, #2
 800f90c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f910:	8b64      	ldrh	r4, [r4, #26]
 800f912:	42b4      	cmp	r4, r6
 800f914:	d117      	bne.n	800f946 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f916:	3501      	adds	r5, #1
 800f918:	b2ad      	uxth	r5, r5
 800f91a:	e7eb      	b.n	800f8f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f91c:	2400      	movs	r4, #0
 800f91e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f922:	4413      	add	r3, r2
 800f924:	b2a2      	uxth	r2, r4
 800f926:	429a      	cmp	r2, r3
 800f928:	da0f      	bge.n	800f94a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f92a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800f92c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f930:	4432      	add	r2, r6
 800f932:	b292      	uxth	r2, r2
 800f934:	2a09      	cmp	r2, #9
 800f936:	bf88      	it	hi
 800f938:	3a0a      	subhi	r2, #10
 800f93a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f93e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800f940:	3401      	adds	r4, #1
 800f942:	42aa      	cmp	r2, r5
 800f944:	d0ee      	beq.n	800f924 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f946:	2000      	movs	r0, #0
 800f948:	bd70      	pop	{r4, r5, r6, pc}
 800f94a:	2001      	movs	r0, #1
 800f94c:	e7fc      	b.n	800f948 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f94e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f94e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f952:	4605      	mov	r5, r0
 800f954:	4616      	mov	r6, r2
 800f956:	1c8c      	adds	r4, r1, #2
 800f958:	8809      	ldrh	r1, [r1, #0]
 800f95a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f95e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f962:	42b3      	cmp	r3, r6
 800f964:	d124      	bne.n	800f9b0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f966:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f96a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f96e:	f001 070f 	and.w	r7, r1, #15
 800f972:	f8cd 8000 	str.w	r8, [sp]
 800f976:	464b      	mov	r3, r9
 800f978:	4652      	mov	r2, sl
 800f97a:	4621      	mov	r1, r4
 800f97c:	4628      	mov	r0, r5
 800f97e:	f7ff ffb7 	bl	800f8f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f982:	4683      	mov	fp, r0
 800f984:	b168      	cbz	r0, 800f9a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f986:	eb0a 0109 	add.w	r1, sl, r9
 800f98a:	4441      	add	r1, r8
 800f98c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f990:	463a      	mov	r2, r7
 800f992:	4649      	mov	r1, r9
 800f994:	4628      	mov	r0, r5
 800f996:	f7ff ff53 	bl	800f840 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f99a:	4658      	mov	r0, fp
 800f99c:	b003      	add	sp, #12
 800f99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9a2:	eb07 010a 	add.w	r1, r7, sl
 800f9a6:	4449      	add	r1, r9
 800f9a8:	4441      	add	r1, r8
 800f9aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f9ae:	e7d2      	b.n	800f956 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f9b0:	f04f 0b00 	mov.w	fp, #0
 800f9b4:	e7f1      	b.n	800f99a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f9b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f9b6:	b570      	push	{r4, r5, r6, lr}
 800f9b8:	8810      	ldrh	r0, [r2, #0]
 800f9ba:	4298      	cmp	r0, r3
 800f9bc:	d817      	bhi.n	800f9ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f9be:	1e48      	subs	r0, r1, #1
 800f9c0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f9c4:	4298      	cmp	r0, r3
 800f9c6:	d312      	bcc.n	800f9ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f9c8:	2400      	movs	r4, #0
 800f9ca:	428c      	cmp	r4, r1
 800f9cc:	d20f      	bcs.n	800f9ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f9ce:	1860      	adds	r0, r4, r1
 800f9d0:	1040      	asrs	r0, r0, #1
 800f9d2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f9d6:	0085      	lsls	r5, r0, #2
 800f9d8:	42b3      	cmp	r3, r6
 800f9da:	d902      	bls.n	800f9e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f9dc:	3001      	adds	r0, #1
 800f9de:	b284      	uxth	r4, r0
 800f9e0:	e7f3      	b.n	800f9ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f9e2:	d201      	bcs.n	800f9e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f9e4:	b281      	uxth	r1, r0
 800f9e6:	e7f0      	b.n	800f9ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f9e8:	442a      	add	r2, r5
 800f9ea:	8850      	ldrh	r0, [r2, #2]
 800f9ec:	bd70      	pop	{r4, r5, r6, pc}
 800f9ee:	2000      	movs	r0, #0
 800f9f0:	e7fc      	b.n	800f9ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f9f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f9f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9f6:	4604      	mov	r4, r0
 800f9f8:	260b      	movs	r6, #11
 800f9fa:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800f9fc:	886f      	ldrh	r7, [r5, #2]
 800f9fe:	087f      	lsrs	r7, r7, #1
 800fa00:	3e01      	subs	r6, #1
 800fa02:	d013      	beq.n	800fa2c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800fa04:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800fa06:	462a      	mov	r2, r5
 800fa08:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fa0c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800fa10:	4639      	mov	r1, r7
 800fa12:	4643      	mov	r3, r8
 800fa14:	4620      	mov	r0, r4
 800fa16:	f7ff ffce 	bl	800f9b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800fa1a:	b138      	cbz	r0, 800fa2c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800fa1c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800fa20:	4642      	mov	r2, r8
 800fa22:	4620      	mov	r0, r4
 800fa24:	f7ff ff93 	bl	800f94e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800fa28:	2800      	cmp	r0, #0
 800fa2a:	d1e9      	bne.n	800fa00 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800fa2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800fa30:	b570      	push	{r4, r5, r6, lr}
 800fa32:	694a      	ldr	r2, [r1, #20]
 800fa34:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800fa36:	684b      	ldr	r3, [r1, #4]
 800fa38:	1b54      	subs	r4, r2, r5
 800fa3a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800fa3c:	f000 8107 	beq.w	800fc4e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 800fa40:	1b9b      	subs	r3, r3, r6
 800fa42:	d003      	beq.n	800fa4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fa44:	2210      	movs	r2, #16
 800fa46:	4363      	muls	r3, r4
 800fa48:	fb93 f3f2 	sdiv	r3, r3, r2
 800fa4c:	680c      	ldr	r4, [r1, #0]
 800fa4e:	698a      	ldr	r2, [r1, #24]
 800fa50:	1b65      	subs	r5, r4, r5
 800fa52:	f000 80fe 	beq.w	800fc52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 800fa56:	1b92      	subs	r2, r2, r6
 800fa58:	d003      	beq.n	800fa62 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fa5a:	2410      	movs	r4, #16
 800fa5c:	436a      	muls	r2, r5
 800fa5e:	fb92 f2f4 	sdiv	r2, r2, r4
 800fa62:	1a9b      	subs	r3, r3, r2
 800fa64:	ee07 3a90 	vmov	s15, r3
 800fa68:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 800fc90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 800fa6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fa74:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fa78:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800fa7c:	460a      	mov	r2, r1
 800fa7e:	eeb1 6a43 	vneg.f32	s12, s6
 800fa82:	4603      	mov	r3, r0
 800fa84:	f100 040c 	add.w	r4, r0, #12
 800fa88:	edd2 7a02 	vldr	s15, [r2, #8]
 800fa8c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800fa90:	ece3 6a01 	vstmia	r3!, {s13}
 800fa94:	edd2 7a03 	vldr	s15, [r2, #12]
 800fa98:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa9c:	edc3 7a02 	vstr	s15, [r3, #8]
 800faa0:	edd2 7a04 	vldr	s15, [r2, #16]
 800faa4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800faa8:	429c      	cmp	r4, r3
 800faaa:	edc3 7a05 	vstr	s15, [r3, #20]
 800faae:	f102 0214 	add.w	r2, r2, #20
 800fab2:	d1e9      	bne.n	800fa88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800fab4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fab6:	698b      	ldr	r3, [r1, #24]
 800fab8:	edd0 4a02 	vldr	s9, [r0, #8]
 800fabc:	1a9b      	subs	r3, r3, r2
 800fabe:	ee07 3a90 	vmov	s15, r3
 800fac2:	684b      	ldr	r3, [r1, #4]
 800fac4:	edd0 3a00 	vldr	s7, [r0]
 800fac8:	1a9b      	subs	r3, r3, r2
 800faca:	edd0 6a01 	vldr	s13, [r0, #4]
 800face:	ee07 3a10 	vmov	s14, r3
 800fad2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fad6:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800fada:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fade:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800fae2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fae6:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800faea:	ee27 7a04 	vmul.f32	s14, s14, s8
 800faee:	eee6 7a87 	vfma.f32	s15, s13, s14
 800faf2:	ee67 7a83 	vmul.f32	s15, s15, s6
 800faf6:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800fafa:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fafc:	694a      	ldr	r2, [r1, #20]
 800fafe:	ed90 5a05 	vldr	s10, [r0, #20]
 800fb02:	1b13      	subs	r3, r2, r4
 800fb04:	ee07 3a10 	vmov	s14, r3
 800fb08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb0c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb10:	680b      	ldr	r3, [r1, #0]
 800fb12:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800fb16:	1b1b      	subs	r3, r3, r4
 800fb18:	ee07 3a10 	vmov	s14, r3
 800fb1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb20:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb24:	eee6 4a87 	vfma.f32	s9, s13, s14
 800fb28:	ee64 4a86 	vmul.f32	s9, s9, s12
 800fb2c:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800fb30:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fb32:	698b      	ldr	r3, [r1, #24]
 800fb34:	ed90 2a03 	vldr	s4, [r0, #12]
 800fb38:	1a9b      	subs	r3, r3, r2
 800fb3a:	ee06 3a90 	vmov	s13, r3
 800fb3e:	684b      	ldr	r3, [r1, #4]
 800fb40:	edd0 5a04 	vldr	s11, [r0, #16]
 800fb44:	1a9b      	subs	r3, r3, r2
 800fb46:	ee07 3a10 	vmov	s14, r3
 800fb4a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fb4e:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800fb52:	ee66 6a84 	vmul.f32	s13, s13, s8
 800fb56:	ee32 5a45 	vsub.f32	s10, s4, s10
 800fb5a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb5e:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800fb62:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb66:	eee5 6a87 	vfma.f32	s13, s11, s14
 800fb6a:	ee66 6a83 	vmul.f32	s13, s13, s6
 800fb6e:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800fb72:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fb74:	694a      	ldr	r2, [r1, #20]
 800fb76:	ed90 1a07 	vldr	s2, [r0, #28]
 800fb7a:	1b13      	subs	r3, r2, r4
 800fb7c:	ee07 3a10 	vmov	s14, r3
 800fb80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb84:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb88:	680b      	ldr	r3, [r1, #0]
 800fb8a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800fb8e:	1b1b      	subs	r3, r3, r4
 800fb90:	ee07 3a10 	vmov	s14, r3
 800fb94:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb98:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb9c:	eea5 5a87 	vfma.f32	s10, s11, s14
 800fba0:	ee25 5a06 	vmul.f32	s10, s10, s12
 800fba4:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800fba8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fbaa:	698b      	ldr	r3, [r1, #24]
 800fbac:	edd0 5a08 	vldr	s11, [r0, #32]
 800fbb0:	1a9b      	subs	r3, r3, r2
 800fbb2:	ee07 3a10 	vmov	s14, r3
 800fbb6:	684b      	ldr	r3, [r1, #4]
 800fbb8:	edd0 2a06 	vldr	s5, [r0, #24]
 800fbbc:	1a9b      	subs	r3, r3, r2
 800fbbe:	ee01 3a90 	vmov	s3, r3
 800fbc2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fbc6:	ee31 1a65 	vsub.f32	s2, s2, s11
 800fbca:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fbce:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800fbd2:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800fbd6:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800fbda:	ee61 1a84 	vmul.f32	s3, s3, s8
 800fbde:	eea1 7a21 	vfma.f32	s14, s2, s3
 800fbe2:	ee27 7a03 	vmul.f32	s14, s14, s6
 800fbe6:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fbea:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fbec:	694a      	ldr	r2, [r1, #20]
 800fbee:	1b13      	subs	r3, r2, r4
 800fbf0:	ee03 3a10 	vmov	s6, r3
 800fbf4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fbf8:	ee23 3a04 	vmul.f32	s6, s6, s8
 800fbfc:	680b      	ldr	r3, [r1, #0]
 800fbfe:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800fc02:	1b1b      	subs	r3, r3, r4
 800fc04:	ee03 3a10 	vmov	s6, r3
 800fc08:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fc0c:	ee23 4a04 	vmul.f32	s8, s6, s8
 800fc10:	eee1 5a04 	vfma.f32	s11, s2, s8
 800fc14:	ee25 6a86 	vmul.f32	s12, s11, s12
 800fc18:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800fc1c:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800fc20:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800fc24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc28:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800fc2c:	dd13      	ble.n	800fc56 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800fc2e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fc32:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800fc36:	eee3 7a87 	vfma.f32	s15, s7, s14
 800fc3a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fc3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc42:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fc44:	dd15      	ble.n	800fc72 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800fc46:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fc4a:	6403      	str	r3, [r0, #64]	@ 0x40
 800fc4c:	bd70      	pop	{r4, r5, r6, pc}
 800fc4e:	4623      	mov	r3, r4
 800fc50:	e6fc      	b.n	800fa4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fc52:	462a      	mov	r2, r5
 800fc54:	e705      	b.n	800fa62 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fc56:	d502      	bpl.n	800fc5e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 800fc58:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fc5c:	e7e9      	b.n	800fc32 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 800fc5e:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800fc62:	eea3 2a85 	vfma.f32	s4, s7, s10
 800fc66:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800fc6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc6e:	dade      	bge.n	800fc2e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 800fc70:	e7f2      	b.n	800fc58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 800fc72:	d502      	bpl.n	800fc7a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 800fc74:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fc78:	e7e7      	b.n	800fc4a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 800fc7a:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800fc7e:	eee3 4a86 	vfma.f32	s9, s7, s12
 800fc82:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800fc86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc8a:	dadc      	bge.n	800fc46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 800fc8c:	e7f2      	b.n	800fc74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 800fc8e:	bf00      	nop
 800fc90:	3d800000 	.word	0x3d800000

0800fc94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800fc94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc98:	2714      	movs	r7, #20
 800fc9a:	435f      	muls	r7, r3
 800fc9c:	eb02 0c07 	add.w	ip, r2, r7
 800fca0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800fca4:	f115 0e0f 	adds.w	lr, r5, #15
 800fca8:	f100 80a2 	bmi.w	800fdf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800fcac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800fcb0:	2614      	movs	r6, #20
 800fcb2:	9c08      	ldr	r4, [sp, #32]
 800fcb4:	f8c0 e014 	str.w	lr, [r0, #20]
 800fcb8:	4366      	muls	r6, r4
 800fcba:	eb02 0806 	add.w	r8, r2, r6
 800fcbe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800fcc2:	f115 040f 	adds.w	r4, r5, #15
 800fcc6:	f100 809f 	bmi.w	800fe08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800fcca:	1124      	asrs	r4, r4, #4
 800fccc:	eba4 040e 	sub.w	r4, r4, lr
 800fcd0:	6184      	str	r4, [r0, #24]
 800fcd2:	2c00      	cmp	r4, #0
 800fcd4:	f000 808a 	beq.w	800fdec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800fcd8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800fcdc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800fce0:	5995      	ldr	r5, [r2, r6]
 800fce2:	eba4 0809 	sub.w	r8, r4, r9
 800fce6:	59d4      	ldr	r4, [r2, r7]
 800fce8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800fcec:	eba5 0a04 	sub.w	sl, r5, r4
 800fcf0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800fcf4:	fb0e fe05 	mul.w	lr, lr, r5
 800fcf8:	fb0a ee19 	mls	lr, sl, r9, lr
 800fcfc:	fb08 e404 	mla	r4, r8, r4, lr
 800fd00:	3c01      	subs	r4, #1
 800fd02:	19a4      	adds	r4, r4, r6
 800fd04:	f100 808c 	bmi.w	800fe20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800fd08:	fb94 fef6 	sdiv	lr, r4, r6
 800fd0c:	fb06 441e 	mls	r4, r6, lr, r4
 800fd10:	f8c0 e000 	str.w	lr, [r0]
 800fd14:	6104      	str	r4, [r0, #16]
 800fd16:	2d00      	cmp	r5, #0
 800fd18:	f2c0 8095 	blt.w	800fe46 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800fd1c:	fb95 f4f6 	sdiv	r4, r5, r6
 800fd20:	fb06 5514 	mls	r5, r6, r4, r5
 800fd24:	6044      	str	r4, [r0, #4]
 800fd26:	6085      	str	r5, [r0, #8]
 800fd28:	60c6      	str	r6, [r0, #12]
 800fd2a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800fd2e:	6945      	ldr	r5, [r0, #20]
 800fd30:	59d2      	ldr	r2, [r2, r7]
 800fd32:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800fd36:	ee07 4a10 	vmov	s14, r4
 800fd3a:	6804      	ldr	r4, [r0, #0]
 800fd3c:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 800fe68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800fd40:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800fd44:	ee07 2a90 	vmov	s15, r2
 800fd48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd50:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800fd54:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd58:	ee27 7a26 	vmul.f32	s14, s14, s13
 800fd5c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fd60:	edd3 6a00 	vldr	s13, [r3]
 800fd64:	eee6 6a07 	vfma.f32	s13, s12, s14
 800fd68:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800fd6c:	eee6 6a27 	vfma.f32	s13, s12, s15
 800fd70:	edc0 6a07 	vstr	s13, [r0, #28]
 800fd74:	edd0 6a01 	vldr	s13, [r0, #4]
 800fd78:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800fd7c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd80:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fd84:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fd88:	ed80 6a08 	vstr	s12, [r0, #32]
 800fd8c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800fd8e:	6242      	str	r2, [r0, #36]	@ 0x24
 800fd90:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800fd94:	ed93 6a03 	vldr	s12, [r3, #12]
 800fd98:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fd9c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fda0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800fda4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800fda8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fdac:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800fdb0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fdb4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800fdb8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fdba:	6302      	str	r2, [r0, #48]	@ 0x30
 800fdbc:	ed93 6a06 	vldr	s12, [r3, #24]
 800fdc0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800fdc4:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fdc8:	eeb0 7a46 	vmov.f32	s14, s12
 800fdcc:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800fdd0:	eea6 7a27 	vfma.f32	s14, s12, s15
 800fdd4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fdd8:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800fddc:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800fde0:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fde4:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800fde8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800fdea:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fdec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fdf0:	2410      	movs	r4, #16
 800fdf2:	f1c5 0501 	rsb	r5, r5, #1
 800fdf6:	f015 050f 	ands.w	r5, r5, #15
 800fdfa:	fb9e fef4 	sdiv	lr, lr, r4
 800fdfe:	bf18      	it	ne
 800fe00:	2501      	movne	r5, #1
 800fe02:	ebae 0e05 	sub.w	lr, lr, r5
 800fe06:	e753      	b.n	800fcb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800fe08:	f04f 0910 	mov.w	r9, #16
 800fe0c:	f1c5 0501 	rsb	r5, r5, #1
 800fe10:	f015 050f 	ands.w	r5, r5, #15
 800fe14:	fb94 f4f9 	sdiv	r4, r4, r9
 800fe18:	bf18      	it	ne
 800fe1a:	2501      	movne	r5, #1
 800fe1c:	1b64      	subs	r4, r4, r5
 800fe1e:	e755      	b.n	800fccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800fe20:	4264      	negs	r4, r4
 800fe22:	fb94 fef6 	sdiv	lr, r4, r6
 800fe26:	fb06 441e 	mls	r4, r6, lr, r4
 800fe2a:	f1ce 0800 	rsb	r8, lr, #0
 800fe2e:	f8c0 8000 	str.w	r8, [r0]
 800fe32:	6104      	str	r4, [r0, #16]
 800fe34:	2c00      	cmp	r4, #0
 800fe36:	f43f af6e 	beq.w	800fd16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800fe3a:	ea6f 0e0e 	mvn.w	lr, lr
 800fe3e:	1b34      	subs	r4, r6, r4
 800fe40:	f8c0 e000 	str.w	lr, [r0]
 800fe44:	e766      	b.n	800fd14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800fe46:	426d      	negs	r5, r5
 800fe48:	fb95 f4f6 	sdiv	r4, r5, r6
 800fe4c:	fb06 5514 	mls	r5, r6, r4, r5
 800fe50:	f1c4 0e00 	rsb	lr, r4, #0
 800fe54:	f8c0 e004 	str.w	lr, [r0, #4]
 800fe58:	6085      	str	r5, [r0, #8]
 800fe5a:	2d00      	cmp	r5, #0
 800fe5c:	f43f af64 	beq.w	800fd28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800fe60:	43e4      	mvns	r4, r4
 800fe62:	1b75      	subs	r5, r6, r5
 800fe64:	6044      	str	r4, [r0, #4]
 800fe66:	e75e      	b.n	800fd26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800fe68:	3d800000 	.word	0x3d800000

0800fe6c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fe6c:	4b01      	ldr	r3, [pc, #4]	@ (800fe74 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fe6e:	6018      	str	r0, [r3, #0]
 800fe70:	4770      	bx	lr
 800fe72:	bf00      	nop
 800fe74:	20082f68 	.word	0x20082f68

0800fe78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fe78:	4b06      	ldr	r3, [pc, #24]	@ (800fe94 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fe7a:	881a      	ldrh	r2, [r3, #0]
 800fe7c:	4282      	cmp	r2, r0
 800fe7e:	d807      	bhi.n	800fe90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fe80:	4b05      	ldr	r3, [pc, #20]	@ (800fe98 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fe82:	881b      	ldrh	r3, [r3, #0]
 800fe84:	4413      	add	r3, r2
 800fe86:	4298      	cmp	r0, r3
 800fe88:	bfac      	ite	ge
 800fe8a:	2000      	movge	r0, #0
 800fe8c:	2001      	movlt	r0, #1
 800fe8e:	4770      	bx	lr
 800fe90:	2000      	movs	r0, #0
 800fe92:	4770      	bx	lr
 800fe94:	20082f88 	.word	0x20082f88
 800fe98:	20082f8c 	.word	0x20082f8c

0800fe9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fe9c:	b508      	push	{r3, lr}
 800fe9e:	4601      	mov	r1, r0
 800fea0:	f7ff ffea 	bl	800fe78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fea4:	b118      	cbz	r0, 800feae <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fea6:	4b02      	ldr	r3, [pc, #8]	@ (800feb0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fea8:	681b      	ldr	r3, [r3, #0]
 800feaa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800feae:	bd08      	pop	{r3, pc}
 800feb0:	20082f6c 	.word	0x20082f6c

0800feb4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800feb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800feb6:	4c24      	ldr	r4, [pc, #144]	@ (800ff48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800feb8:	6823      	ldr	r3, [r4, #0]
 800feba:	2b00      	cmp	r3, #0
 800febc:	d042      	beq.n	800ff44 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800febe:	4a23      	ldr	r2, [pc, #140]	@ (800ff4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fec0:	4d23      	ldr	r5, [pc, #140]	@ (800ff50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fec2:	8811      	ldrh	r1, [r2, #0]
 800fec4:	f8b5 c000 	ldrh.w	ip, [r5]
 800fec8:	4822      	ldr	r0, [pc, #136]	@ (800ff54 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800feca:	4461      	add	r1, ip
 800fecc:	1c4a      	adds	r2, r1, #1
 800fece:	f022 0201 	bic.w	r2, r2, #1
 800fed2:	008f      	lsls	r7, r1, #2
 800fed4:	0412      	lsls	r2, r2, #16
 800fed6:	19de      	adds	r6, r3, r7
 800fed8:	0c12      	lsrs	r2, r2, #16
 800feda:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fede:	6006      	str	r6, [r0, #0]
 800fee0:	4e1d      	ldr	r6, [pc, #116]	@ (800ff58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fee2:	19da      	adds	r2, r3, r7
 800fee4:	6032      	str	r2, [r6, #0]
 800fee6:	220e      	movs	r2, #14
 800fee8:	fb02 f20c 	mul.w	r2, r2, ip
 800feec:	3203      	adds	r2, #3
 800feee:	f022 0203 	bic.w	r2, r2, #3
 800fef2:	443a      	add	r2, r7
 800fef4:	4f19      	ldr	r7, [pc, #100]	@ (800ff5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fef6:	4413      	add	r3, r2
 800fef8:	603b      	str	r3, [r7, #0]
 800fefa:	2300      	movs	r3, #0
 800fefc:	4f18      	ldr	r7, [pc, #96]	@ (800ff60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fefe:	469c      	mov	ip, r3
 800ff00:	803b      	strh	r3, [r7, #0]
 800ff02:	4f18      	ldr	r7, [pc, #96]	@ (800ff64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800ff04:	683f      	ldr	r7, [r7, #0]
 800ff06:	1aba      	subs	r2, r7, r2
 800ff08:	4f17      	ldr	r7, [pc, #92]	@ (800ff68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800ff0a:	603a      	str	r2, [r7, #0]
 800ff0c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800ff10:	4a16      	ldr	r2, [pc, #88]	@ (800ff6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800ff12:	8013      	strh	r3, [r2, #0]
 800ff14:	428b      	cmp	r3, r1
 800ff16:	d10d      	bne.n	800ff34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800ff18:	2300      	movs	r3, #0
 800ff1a:	240e      	movs	r4, #14
 800ff1c:	882d      	ldrh	r5, [r5, #0]
 800ff1e:	6830      	ldr	r0, [r6, #0]
 800ff20:	429d      	cmp	r5, r3
 800ff22:	d90f      	bls.n	800ff44 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800ff24:	fb04 0203 	mla	r2, r4, r3, r0
 800ff28:	7b11      	ldrb	r1, [r2, #12]
 800ff2a:	3301      	adds	r3, #1
 800ff2c:	f36f 1145 	bfc	r1, #5, #1
 800ff30:	7311      	strb	r1, [r2, #12]
 800ff32:	e7f5      	b.n	800ff20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800ff34:	6822      	ldr	r2, [r4, #0]
 800ff36:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800ff3a:	6802      	ldr	r2, [r0, #0]
 800ff3c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800ff40:	3301      	adds	r3, #1
 800ff42:	e7e7      	b.n	800ff14 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800ff44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff46:	bf00      	nop
 800ff48:	20082f6c 	.word	0x20082f6c
 800ff4c:	20082f88 	.word	0x20082f88
 800ff50:	20082f8c 	.word	0x20082f8c
 800ff54:	20082f80 	.word	0x20082f80
 800ff58:	20082f70 	.word	0x20082f70
 800ff5c:	20082f78 	.word	0x20082f78
 800ff60:	20082f8a 	.word	0x20082f8a
 800ff64:	20082f74 	.word	0x20082f74
 800ff68:	20082f84 	.word	0x20082f84
 800ff6c:	20082f7c 	.word	0x20082f7c

0800ff70 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ff70:	4b06      	ldr	r3, [pc, #24]	@ (800ff8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800ff72:	681b      	ldr	r3, [r3, #0]
 800ff74:	b943      	cbnz	r3, 800ff88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff76:	b139      	cbz	r1, 800ff88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff78:	4b05      	ldr	r3, [pc, #20]	@ (800ff90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800ff7a:	801a      	strh	r2, [r3, #0]
 800ff7c:	4b05      	ldr	r3, [pc, #20]	@ (800ff94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800ff7e:	6019      	str	r1, [r3, #0]
 800ff80:	4b05      	ldr	r3, [pc, #20]	@ (800ff98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800ff82:	6018      	str	r0, [r3, #0]
 800ff84:	f7ff bf96 	b.w	800feb4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ff88:	4770      	bx	lr
 800ff8a:	bf00      	nop
 800ff8c:	20082f78 	.word	0x20082f78
 800ff90:	20082f8c 	.word	0x20082f8c
 800ff94:	20082f74 	.word	0x20082f74
 800ff98:	20082f6c 	.word	0x20082f6c

0800ff9c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ff9c:	b470      	push	{r4, r5, r6}
 800ff9e:	4c07      	ldr	r4, [pc, #28]	@ (800ffbc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ffa0:	4605      	mov	r5, r0
 800ffa2:	6826      	ldr	r6, [r4, #0]
 800ffa4:	4610      	mov	r0, r2
 800ffa6:	9a03      	ldr	r2, [sp, #12]
 800ffa8:	b936      	cbnz	r6, 800ffb8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ffaa:	6025      	str	r5, [r4, #0]
 800ffac:	4c04      	ldr	r4, [pc, #16]	@ (800ffc0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ffae:	8021      	strh	r1, [r4, #0]
 800ffb0:	bc70      	pop	{r4, r5, r6}
 800ffb2:	4619      	mov	r1, r3
 800ffb4:	f7ff bfdc 	b.w	800ff70 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ffb8:	bc70      	pop	{r4, r5, r6}
 800ffba:	4770      	bx	lr
 800ffbc:	20082f90 	.word	0x20082f90
 800ffc0:	20082f88 	.word	0x20082f88

0800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ffc4:	4a12      	ldr	r2, [pc, #72]	@ (8010010 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800ffc6:	8803      	ldrh	r3, [r0, #0]
 800ffc8:	8812      	ldrh	r2, [r2, #0]
 800ffca:	4293      	cmp	r3, r2
 800ffcc:	d207      	bcs.n	800ffde <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800ffce:	2114      	movs	r1, #20
 800ffd0:	4a10      	ldr	r2, [pc, #64]	@ (8010014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800ffd2:	6812      	ldr	r2, [r2, #0]
 800ffd4:	fb01 2303 	mla	r3, r1, r3, r2
 800ffd8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800ffdc:	4770      	bx	lr
 800ffde:	490e      	ldr	r1, [pc, #56]	@ (8010018 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ffe0:	8809      	ldrh	r1, [r1, #0]
 800ffe2:	4411      	add	r1, r2
 800ffe4:	428b      	cmp	r3, r1
 800ffe6:	da04      	bge.n	800fff2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800ffe8:	1a9b      	subs	r3, r3, r2
 800ffea:	4a0c      	ldr	r2, [pc, #48]	@ (801001c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800ffec:	210e      	movs	r1, #14
 800ffee:	6812      	ldr	r2, [r2, #0]
 800fff0:	e7f0      	b.n	800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800fff2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800fff6:	4293      	cmp	r3, r2
 800fff8:	d108      	bne.n	801000c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800fffa:	4b09      	ldr	r3, [pc, #36]	@ (8010020 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800fffc:	781b      	ldrb	r3, [r3, #0]
 800fffe:	b91b      	cbnz	r3, 8010008 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010000:	4b08      	ldr	r3, [pc, #32]	@ (8010024 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010002:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010006:	4770      	bx	lr
 8010008:	4b07      	ldr	r3, [pc, #28]	@ (8010028 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801000a:	e7fa      	b.n	8010002 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801000c:	2000      	movs	r0, #0
 801000e:	4770      	bx	lr
 8010010:	20082f88 	.word	0x20082f88
 8010014:	20082f90 	.word	0x20082f90
 8010018:	20082f8c 	.word	0x20082f8c
 801001c:	20082f70 	.word	0x20082f70
 8010020:	20082f00 	.word	0x20082f00
 8010024:	20082f02 	.word	0x20082f02
 8010028:	20082f04 	.word	0x20082f04

0801002c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801002c:	4a12      	ldr	r2, [pc, #72]	@ (8010078 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801002e:	8803      	ldrh	r3, [r0, #0]
 8010030:	8812      	ldrh	r2, [r2, #0]
 8010032:	4293      	cmp	r3, r2
 8010034:	d207      	bcs.n	8010046 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8010036:	2114      	movs	r1, #20
 8010038:	4a10      	ldr	r2, [pc, #64]	@ (801007c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801003a:	6812      	ldr	r2, [r2, #0]
 801003c:	fb01 2303 	mla	r3, r1, r3, r2
 8010040:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8010044:	4770      	bx	lr
 8010046:	490e      	ldr	r1, [pc, #56]	@ (8010080 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010048:	8809      	ldrh	r1, [r1, #0]
 801004a:	4411      	add	r1, r2
 801004c:	428b      	cmp	r3, r1
 801004e:	da04      	bge.n	801005a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8010050:	1a9b      	subs	r3, r3, r2
 8010052:	4a0c      	ldr	r2, [pc, #48]	@ (8010084 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010054:	210e      	movs	r1, #14
 8010056:	6812      	ldr	r2, [r2, #0]
 8010058:	e7f0      	b.n	801003c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801005a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801005e:	4293      	cmp	r3, r2
 8010060:	d108      	bne.n	8010074 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8010062:	4b09      	ldr	r3, [pc, #36]	@ (8010088 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010064:	781b      	ldrb	r3, [r3, #0]
 8010066:	b91b      	cbnz	r3, 8010070 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8010068:	4b08      	ldr	r3, [pc, #32]	@ (801008c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801006a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801006e:	4770      	bx	lr
 8010070:	4b07      	ldr	r3, [pc, #28]	@ (8010090 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010072:	e7fa      	b.n	801006a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8010074:	2000      	movs	r0, #0
 8010076:	4770      	bx	lr
 8010078:	20082f88 	.word	0x20082f88
 801007c:	20082f90 	.word	0x20082f90
 8010080:	20082f8c 	.word	0x20082f8c
 8010084:	20082f70 	.word	0x20082f70
 8010088:	20082f00 	.word	0x20082f00
 801008c:	20082f04 	.word	0x20082f04
 8010090:	20082f02 	.word	0x20082f02

08010094 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010094:	b530      	push	{r4, r5, lr}
 8010096:	4a22      	ldr	r2, [pc, #136]	@ (8010120 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010098:	880b      	ldrh	r3, [r1, #0]
 801009a:	8812      	ldrh	r2, [r2, #0]
 801009c:	4293      	cmp	r3, r2
 801009e:	d213      	bcs.n	80100c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80100a0:	2114      	movs	r1, #20
 80100a2:	4a20      	ldr	r2, [pc, #128]	@ (8010124 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80100a4:	6812      	ldr	r2, [r2, #0]
 80100a6:	fb01 2303 	mla	r3, r1, r3, r2
 80100aa:	8a1a      	ldrh	r2, [r3, #16]
 80100ac:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80100b0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80100b4:	8a5b      	ldrh	r3, [r3, #18]
 80100b6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80100ba:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80100be:	8004      	strh	r4, [r0, #0]
 80100c0:	8041      	strh	r1, [r0, #2]
 80100c2:	8082      	strh	r2, [r0, #4]
 80100c4:	80c3      	strh	r3, [r0, #6]
 80100c6:	e024      	b.n	8010112 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 80100c8:	4917      	ldr	r1, [pc, #92]	@ (8010128 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80100ca:	8809      	ldrh	r1, [r1, #0]
 80100cc:	4411      	add	r1, r2
 80100ce:	428b      	cmp	r3, r1
 80100d0:	da10      	bge.n	80100f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 80100d2:	1a9b      	subs	r3, r3, r2
 80100d4:	220e      	movs	r2, #14
 80100d6:	4353      	muls	r3, r2
 80100d8:	4a14      	ldr	r2, [pc, #80]	@ (801012c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80100da:	6811      	ldr	r1, [r2, #0]
 80100dc:	18ca      	adds	r2, r1, r3
 80100de:	5ecd      	ldrsh	r5, [r1, r3]
 80100e0:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 80100e4:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 80100e8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80100ec:	8005      	strh	r5, [r0, #0]
 80100ee:	8044      	strh	r4, [r0, #2]
 80100f0:	8081      	strh	r1, [r0, #4]
 80100f2:	e7e7      	b.n	80100c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80100f4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80100f8:	4293      	cmp	r3, r2
 80100fa:	d10b      	bne.n	8010114 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80100fc:	4b0c      	ldr	r3, [pc, #48]	@ (8010130 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80100fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010102:	4b0c      	ldr	r3, [pc, #48]	@ (8010134 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010104:	8081      	strh	r1, [r0, #4]
 8010106:	f9b3 2000 	ldrsh.w	r2, [r3]
 801010a:	2300      	movs	r3, #0
 801010c:	80c2      	strh	r2, [r0, #6]
 801010e:	8003      	strh	r3, [r0, #0]
 8010110:	8043      	strh	r3, [r0, #2]
 8010112:	bd30      	pop	{r4, r5, pc}
 8010114:	2300      	movs	r3, #0
 8010116:	8003      	strh	r3, [r0, #0]
 8010118:	8043      	strh	r3, [r0, #2]
 801011a:	8083      	strh	r3, [r0, #4]
 801011c:	e7d2      	b.n	80100c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801011e:	bf00      	nop
 8010120:	20082f88 	.word	0x20082f88
 8010124:	20082f90 	.word	0x20082f90
 8010128:	20082f8c 	.word	0x20082f8c
 801012c:	20082f70 	.word	0x20082f70
 8010130:	20082efc 	.word	0x20082efc
 8010134:	20082efe 	.word	0x20082efe

08010138 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010138:	4a12      	ldr	r2, [pc, #72]	@ (8010184 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801013a:	8803      	ldrh	r3, [r0, #0]
 801013c:	8811      	ldrh	r1, [r2, #0]
 801013e:	428b      	cmp	r3, r1
 8010140:	d20b      	bcs.n	801015a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8010142:	4a11      	ldr	r2, [pc, #68]	@ (8010188 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010144:	6812      	ldr	r2, [r2, #0]
 8010146:	b112      	cbz	r2, 801014e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010148:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801014c:	b9c0      	cbnz	r0, 8010180 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801014e:	4a0f      	ldr	r2, [pc, #60]	@ (801018c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010150:	6811      	ldr	r1, [r2, #0]
 8010152:	2214      	movs	r2, #20
 8010154:	4353      	muls	r3, r2
 8010156:	58c8      	ldr	r0, [r1, r3]
 8010158:	4770      	bx	lr
 801015a:	4a0d      	ldr	r2, [pc, #52]	@ (8010190 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801015c:	8812      	ldrh	r2, [r2, #0]
 801015e:	440a      	add	r2, r1
 8010160:	4293      	cmp	r3, r2
 8010162:	da04      	bge.n	801016e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8010164:	4a08      	ldr	r2, [pc, #32]	@ (8010188 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010166:	6812      	ldr	r2, [r2, #0]
 8010168:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801016c:	4770      	bx	lr
 801016e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010172:	4293      	cmp	r3, r2
 8010174:	d103      	bne.n	801017e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010176:	4b07      	ldr	r3, [pc, #28]	@ (8010194 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010178:	681b      	ldr	r3, [r3, #0]
 801017a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801017c:	4770      	bx	lr
 801017e:	2000      	movs	r0, #0
 8010180:	4770      	bx	lr
 8010182:	bf00      	nop
 8010184:	20082f88 	.word	0x20082f88
 8010188:	20082f6c 	.word	0x20082f6c
 801018c:	20082f90 	.word	0x20082f90
 8010190:	20082f8c 	.word	0x20082f8c
 8010194:	20082f08 	.word	0x20082f08

08010198 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010198:	4b24      	ldr	r3, [pc, #144]	@ (801022c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801019a:	8802      	ldrh	r2, [r0, #0]
 801019c:	8818      	ldrh	r0, [r3, #0]
 801019e:	4282      	cmp	r2, r0
 80101a0:	d221      	bcs.n	80101e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80101a2:	4b23      	ldr	r3, [pc, #140]	@ (8010230 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80101a4:	6819      	ldr	r1, [r3, #0]
 80101a6:	2314      	movs	r3, #20
 80101a8:	fb03 1302 	mla	r3, r3, r2, r1
 80101ac:	6858      	ldr	r0, [r3, #4]
 80101ae:	2800      	cmp	r0, #0
 80101b0:	d03a      	beq.n	8010228 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80101b2:	4920      	ldr	r1, [pc, #128]	@ (8010234 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80101b4:	6809      	ldr	r1, [r1, #0]
 80101b6:	2900      	cmp	r1, #0
 80101b8:	d036      	beq.n	8010228 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80101ba:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80101be:	2900      	cmp	r1, #0
 80101c0:	d032      	beq.n	8010228 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80101c2:	891a      	ldrh	r2, [r3, #8]
 80101c4:	8958      	ldrh	r0, [r3, #10]
 80101c6:	4350      	muls	r0, r2
 80101c8:	7c5a      	ldrb	r2, [r3, #17]
 80101ca:	7cdb      	ldrb	r3, [r3, #19]
 80101cc:	0952      	lsrs	r2, r2, #5
 80101ce:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80101d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80101d6:	2b0b      	cmp	r3, #11
 80101d8:	bf18      	it	ne
 80101da:	0040      	lslne	r0, r0, #1
 80101dc:	3003      	adds	r0, #3
 80101de:	f020 0003 	bic.w	r0, r0, #3
 80101e2:	4408      	add	r0, r1
 80101e4:	4770      	bx	lr
 80101e6:	4b14      	ldr	r3, [pc, #80]	@ (8010238 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80101e8:	881b      	ldrh	r3, [r3, #0]
 80101ea:	4403      	add	r3, r0
 80101ec:	429a      	cmp	r2, r3
 80101ee:	da1a      	bge.n	8010226 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80101f0:	210e      	movs	r1, #14
 80101f2:	4b12      	ldr	r3, [pc, #72]	@ (801023c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80101f4:	1a10      	subs	r0, r2, r0
 80101f6:	681b      	ldr	r3, [r3, #0]
 80101f8:	fb01 3000 	mla	r0, r1, r0, r3
 80101fc:	7b03      	ldrb	r3, [r0, #12]
 80101fe:	f003 031f 	and.w	r3, r3, #31
 8010202:	2b0b      	cmp	r3, #11
 8010204:	d10b      	bne.n	801021e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8010206:	8903      	ldrh	r3, [r0, #8]
 8010208:	8940      	ldrh	r0, [r0, #10]
 801020a:	4358      	muls	r0, r3
 801020c:	4b09      	ldr	r3, [pc, #36]	@ (8010234 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801020e:	3003      	adds	r0, #3
 8010210:	6819      	ldr	r1, [r3, #0]
 8010212:	f020 0303 	bic.w	r3, r0, #3
 8010216:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801021a:	4418      	add	r0, r3
 801021c:	4770      	bx	lr
 801021e:	2b0d      	cmp	r3, #13
 8010220:	d101      	bne.n	8010226 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010222:	300d      	adds	r0, #13
 8010224:	4770      	bx	lr
 8010226:	2000      	movs	r0, #0
 8010228:	4770      	bx	lr
 801022a:	bf00      	nop
 801022c:	20082f88 	.word	0x20082f88
 8010230:	20082f90 	.word	0x20082f90
 8010234:	20082f6c 	.word	0x20082f6c
 8010238:	20082f8c 	.word	0x20082f8c
 801023c:	20082f70 	.word	0x20082f70

08010240 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010240:	b510      	push	{r4, lr}
 8010242:	4a17      	ldr	r2, [pc, #92]	@ (80102a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8010244:	8803      	ldrh	r3, [r0, #0]
 8010246:	8812      	ldrh	r2, [r2, #0]
 8010248:	4293      	cmp	r3, r2
 801024a:	d20c      	bcs.n	8010266 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801024c:	2114      	movs	r1, #20
 801024e:	4a15      	ldr	r2, [pc, #84]	@ (80102a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010250:	6812      	ldr	r2, [r2, #0]
 8010252:	fb01 2303 	mla	r3, r1, r3, r2
 8010256:	7c58      	ldrb	r0, [r3, #17]
 8010258:	0942      	lsrs	r2, r0, #5
 801025a:	7cd8      	ldrb	r0, [r3, #19]
 801025c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010260:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010264:	bd10      	pop	{r4, pc}
 8010266:	4910      	ldr	r1, [pc, #64]	@ (80102a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010268:	8809      	ldrh	r1, [r1, #0]
 801026a:	4411      	add	r1, r2
 801026c:	428b      	cmp	r3, r1
 801026e:	da09      	bge.n	8010284 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010270:	210e      	movs	r1, #14
 8010272:	1a9b      	subs	r3, r3, r2
 8010274:	4a0d      	ldr	r2, [pc, #52]	@ (80102ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010276:	6812      	ldr	r2, [r2, #0]
 8010278:	fb01 2303 	mla	r3, r1, r3, r2
 801027c:	7b18      	ldrb	r0, [r3, #12]
 801027e:	f000 001f 	and.w	r0, r0, #31
 8010282:	e7ef      	b.n	8010264 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010284:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010288:	4293      	cmp	r3, r2
 801028a:	d106      	bne.n	801029a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801028c:	f7fa ffdc 	bl	800b248 <_ZN8touchgfx3HAL3lcdEv>
 8010290:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010294:	6803      	ldr	r3, [r0, #0]
 8010296:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010298:	4718      	bx	r3
 801029a:	2000      	movs	r0, #0
 801029c:	e7e2      	b.n	8010264 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801029e:	bf00      	nop
 80102a0:	20082f88 	.word	0x20082f88
 80102a4:	20082f90 	.word	0x20082f90
 80102a8:	20082f8c 	.word	0x20082f8c
 80102ac:	20082f70 	.word	0x20082f70

080102b0 <CRC_Lock>:
 80102b0:	b530      	push	{r4, r5, lr}
 80102b2:	4a2d      	ldr	r2, [pc, #180]	@ (8010368 <CRC_Lock+0xb8>)
 80102b4:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80102b8:	6813      	ldr	r3, [r2, #0]
 80102ba:	f023 0301 	bic.w	r3, r3, #1
 80102be:	6013      	str	r3, [r2, #0]
 80102c0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80102c4:	4b29      	ldr	r3, [pc, #164]	@ (801036c <CRC_Lock+0xbc>)
 80102c6:	681c      	ldr	r4, [r3, #0]
 80102c8:	4014      	ands	r4, r2
 80102ca:	42ac      	cmp	r4, r5
 80102cc:	d005      	beq.n	80102da <CRC_Lock+0x2a>
 80102ce:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80102d2:	681c      	ldr	r4, [r3, #0]
 80102d4:	4014      	ands	r4, r2
 80102d6:	42ac      	cmp	r4, r5
 80102d8:	d125      	bne.n	8010326 <CRC_Lock+0x76>
 80102da:	4b25      	ldr	r3, [pc, #148]	@ (8010370 <CRC_Lock+0xc0>)
 80102dc:	681b      	ldr	r3, [r3, #0]
 80102de:	2b00      	cmp	r3, #0
 80102e0:	d139      	bne.n	8010356 <CRC_Lock+0xa6>
 80102e2:	4b24      	ldr	r3, [pc, #144]	@ (8010374 <CRC_Lock+0xc4>)
 80102e4:	681a      	ldr	r2, [r3, #0]
 80102e6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80102ea:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80102ee:	d00d      	beq.n	801030c <CRC_Lock+0x5c>
 80102f0:	f240 4483 	movw	r4, #1155	@ 0x483
 80102f4:	681a      	ldr	r2, [r3, #0]
 80102f6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80102fa:	42a2      	cmp	r2, r4
 80102fc:	d006      	beq.n	801030c <CRC_Lock+0x5c>
 80102fe:	f240 4285 	movw	r2, #1157	@ 0x485
 8010302:	681b      	ldr	r3, [r3, #0]
 8010304:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010308:	4293      	cmp	r3, r2
 801030a:	d124      	bne.n	8010356 <CRC_Lock+0xa6>
 801030c:	2201      	movs	r2, #1
 801030e:	4b1a      	ldr	r3, [pc, #104]	@ (8010378 <CRC_Lock+0xc8>)
 8010310:	601a      	str	r2, [r3, #0]
 8010312:	681a      	ldr	r2, [r3, #0]
 8010314:	2a00      	cmp	r2, #0
 8010316:	d1fc      	bne.n	8010312 <CRC_Lock+0x62>
 8010318:	4b18      	ldr	r3, [pc, #96]	@ (801037c <CRC_Lock+0xcc>)
 801031a:	6018      	str	r0, [r3, #0]
 801031c:	6818      	ldr	r0, [r3, #0]
 801031e:	1a43      	subs	r3, r0, r1
 8010320:	4258      	negs	r0, r3
 8010322:	4158      	adcs	r0, r3
 8010324:	e00e      	b.n	8010344 <CRC_Lock+0x94>
 8010326:	681b      	ldr	r3, [r3, #0]
 8010328:	4013      	ands	r3, r2
 801032a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801032e:	4293      	cmp	r3, r2
 8010330:	d111      	bne.n	8010356 <CRC_Lock+0xa6>
 8010332:	f240 4286 	movw	r2, #1158	@ 0x486
 8010336:	4b12      	ldr	r3, [pc, #72]	@ (8010380 <CRC_Lock+0xd0>)
 8010338:	681b      	ldr	r3, [r3, #0]
 801033a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801033e:	4293      	cmp	r3, r2
 8010340:	d001      	beq.n	8010346 <CRC_Lock+0x96>
 8010342:	2000      	movs	r0, #0
 8010344:	bd30      	pop	{r4, r5, pc}
 8010346:	2201      	movs	r2, #1
 8010348:	4b0e      	ldr	r3, [pc, #56]	@ (8010384 <CRC_Lock+0xd4>)
 801034a:	601a      	str	r2, [r3, #0]
 801034c:	681a      	ldr	r2, [r3, #0]
 801034e:	2a00      	cmp	r2, #0
 8010350:	d1fc      	bne.n	801034c <CRC_Lock+0x9c>
 8010352:	4b0d      	ldr	r3, [pc, #52]	@ (8010388 <CRC_Lock+0xd8>)
 8010354:	e7e1      	b.n	801031a <CRC_Lock+0x6a>
 8010356:	2201      	movs	r2, #1
 8010358:	4b0c      	ldr	r3, [pc, #48]	@ (801038c <CRC_Lock+0xdc>)
 801035a:	601a      	str	r2, [r3, #0]
 801035c:	681a      	ldr	r2, [r3, #0]
 801035e:	2a00      	cmp	r2, #0
 8010360:	d1fc      	bne.n	801035c <CRC_Lock+0xac>
 8010362:	4b0b      	ldr	r3, [pc, #44]	@ (8010390 <CRC_Lock+0xe0>)
 8010364:	e7d9      	b.n	801031a <CRC_Lock+0x6a>
 8010366:	bf00      	nop
 8010368:	e0002000 	.word	0xe0002000
 801036c:	e000ed00 	.word	0xe000ed00
 8010370:	e0042000 	.word	0xe0042000
 8010374:	5c001000 	.word	0x5c001000
 8010378:	58024c08 	.word	0x58024c08
 801037c:	58024c00 	.word	0x58024c00
 8010380:	46008ff0 	.word	0x46008ff0
 8010384:	46024c08 	.word	0x46024c08
 8010388:	46024c00 	.word	0x46024c00
 801038c:	40023008 	.word	0x40023008
 8010390:	40023000 	.word	0x40023000

08010394 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8010394:	6101      	str	r1, [r0, #16]
 8010396:	4770      	bx	lr

08010398 <_ZN8touchgfx8Gestures4tickEv>:
 8010398:	7b83      	ldrb	r3, [r0, #14]
 801039a:	b14b      	cbz	r3, 80103b0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801039c:	8903      	ldrh	r3, [r0, #8]
 801039e:	3301      	adds	r3, #1
 80103a0:	b29b      	uxth	r3, r3
 80103a2:	2b07      	cmp	r3, #7
 80103a4:	8103      	strh	r3, [r0, #8]
 80103a6:	bf81      	itttt	hi
 80103a8:	2300      	movhi	r3, #0
 80103aa:	8143      	strhhi	r3, [r0, #10]
 80103ac:	8183      	strhhi	r3, [r0, #12]
 80103ae:	7383      	strbhi	r3, [r0, #14]
 80103b0:	4770      	bx	lr
	...

080103b4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80103b4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80103b8:	4698      	mov	r8, r3
 80103ba:	4604      	mov	r4, r0
 80103bc:	8883      	ldrh	r3, [r0, #4]
 80103be:	460e      	mov	r6, r1
 80103c0:	88c1      	ldrh	r1, [r0, #6]
 80103c2:	2000      	movs	r0, #0
 80103c4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80103c8:	eba8 0303 	sub.w	r3, r8, r3
 80103cc:	b21b      	sxth	r3, r3
 80103ce:	4617      	mov	r7, r2
 80103d0:	4a17      	ldr	r2, [pc, #92]	@ (8010430 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80103d2:	2b00      	cmp	r3, #0
 80103d4:	bfb8      	it	lt
 80103d6:	425b      	neglt	r3, r3
 80103d8:	9200      	str	r2, [sp, #0]
 80103da:	8aa2      	ldrh	r2, [r4, #20]
 80103dc:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80103e0:	b21b      	sxth	r3, r3
 80103e2:	4293      	cmp	r3, r2
 80103e4:	f88d 0004 	strb.w	r0, [sp, #4]
 80103e8:	f8ad 1008 	strh.w	r1, [sp, #8]
 80103ec:	f8ad 800a 	strh.w	r8, [sp, #10]
 80103f0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80103f4:	dc07      	bgt.n	8010406 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80103f6:	1a69      	subs	r1, r5, r1
 80103f8:	b209      	sxth	r1, r1
 80103fa:	2900      	cmp	r1, #0
 80103fc:	bfb8      	it	lt
 80103fe:	4249      	neglt	r1, r1
 8010400:	b209      	sxth	r1, r1
 8010402:	428a      	cmp	r2, r1
 8010404:	da10      	bge.n	8010428 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8010406:	6920      	ldr	r0, [r4, #16]
 8010408:	4669      	mov	r1, sp
 801040a:	6803      	ldr	r3, [r0, #0]
 801040c:	eba8 0606 	sub.w	r6, r8, r6
 8010410:	685b      	ldr	r3, [r3, #4]
 8010412:	4798      	blx	r3
 8010414:	2300      	movs	r3, #0
 8010416:	2001      	movs	r0, #1
 8010418:	1bef      	subs	r7, r5, r7
 801041a:	8123      	strh	r3, [r4, #8]
 801041c:	8166      	strh	r6, [r4, #10]
 801041e:	81a7      	strh	r7, [r4, #12]
 8010420:	f8a4 8004 	strh.w	r8, [r4, #4]
 8010424:	80e5      	strh	r5, [r4, #6]
 8010426:	73a0      	strb	r0, [r4, #14]
 8010428:	b004      	add	sp, #16
 801042a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801042e:	bf00      	nop
 8010430:	08035c60 	.word	0x08035c60

08010434 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8010434:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010436:	461e      	mov	r6, r3
 8010438:	1e4b      	subs	r3, r1, #1
 801043a:	2b01      	cmp	r3, #1
 801043c:	b085      	sub	sp, #20
 801043e:	4604      	mov	r4, r0
 8010440:	460d      	mov	r5, r1
 8010442:	4617      	mov	r7, r2
 8010444:	d84b      	bhi.n	80104de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8010446:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801044a:	1cd3      	adds	r3, r2, #3
 801044c:	b29b      	uxth	r3, r3
 801044e:	2b06      	cmp	r3, #6
 8010450:	d916      	bls.n	8010480 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8010452:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80104f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010456:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801045a:	f8cd c004 	str.w	ip, [sp, #4]
 801045e:	f04f 0c00 	mov.w	ip, #0
 8010462:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010466:	6900      	ldr	r0, [r0, #16]
 8010468:	f8ad 100c 	strh.w	r1, [sp, #12]
 801046c:	f88d c008 	strb.w	ip, [sp, #8]
 8010470:	f8ad 200a 	strh.w	r2, [sp, #10]
 8010474:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010478:	6803      	ldr	r3, [r0, #0]
 801047a:	a901      	add	r1, sp, #4
 801047c:	689b      	ldr	r3, [r3, #8]
 801047e:	4798      	blx	r3
 8010480:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8010484:	1cd3      	adds	r3, r2, #3
 8010486:	b29b      	uxth	r3, r3
 8010488:	2b06      	cmp	r3, #6
 801048a:	d916      	bls.n	80104ba <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801048c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80104f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010490:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010494:	f8cd c004 	str.w	ip, [sp, #4]
 8010498:	f04f 0c01 	mov.w	ip, #1
 801049c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80104a0:	6920      	ldr	r0, [r4, #16]
 80104a2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80104a6:	f88d c008 	strb.w	ip, [sp, #8]
 80104aa:	f8ad 200a 	strh.w	r2, [sp, #10]
 80104ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80104b2:	6803      	ldr	r3, [r0, #0]
 80104b4:	a901      	add	r1, sp, #4
 80104b6:	689b      	ldr	r3, [r3, #8]
 80104b8:	4798      	blx	r3
 80104ba:	4b0d      	ldr	r3, [pc, #52]	@ (80104f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80104bc:	6920      	ldr	r0, [r4, #16]
 80104be:	9301      	str	r3, [sp, #4]
 80104c0:	2300      	movs	r3, #0
 80104c2:	f88d 5008 	strb.w	r5, [sp, #8]
 80104c6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80104ca:	f8ad 600c 	strh.w	r6, [sp, #12]
 80104ce:	f8ad 300e 	strh.w	r3, [sp, #14]
 80104d2:	6803      	ldr	r3, [r0, #0]
 80104d4:	a901      	add	r1, sp, #4
 80104d6:	681b      	ldr	r3, [r3, #0]
 80104d8:	4798      	blx	r3
 80104da:	b005      	add	sp, #20
 80104dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80104de:	2900      	cmp	r1, #0
 80104e0:	d1eb      	bne.n	80104ba <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80104e2:	80a2      	strh	r2, [r4, #4]
 80104e4:	80c6      	strh	r6, [r0, #6]
 80104e6:	60a1      	str	r1, [r4, #8]
 80104e8:	81a1      	strh	r1, [r4, #12]
 80104ea:	73a1      	strb	r1, [r4, #14]
 80104ec:	e7e5      	b.n	80104ba <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80104ee:	bf00      	nop
 80104f0:	08035c4c 	.word	0x08035c4c
 80104f4:	08035c74 	.word	0x08035c74

080104f8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80104f8:	790b      	ldrb	r3, [r1, #4]
 80104fa:	b570      	push	{r4, r5, r6, lr}
 80104fc:	2b00      	cmp	r3, #0
 80104fe:	bf0c      	ite	eq
 8010500:	2301      	moveq	r3, #1
 8010502:	2300      	movne	r3, #0
 8010504:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8010508:	4604      	mov	r4, r0
 801050a:	460e      	mov	r6, r1
 801050c:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8010510:	d109      	bne.n	8010526 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8010512:	b14d      	cbz	r5, 8010528 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8010514:	7933      	ldrb	r3, [r6, #4]
 8010516:	2b01      	cmp	r3, #1
 8010518:	d10c      	bne.n	8010534 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801051a:	6823      	ldr	r3, [r4, #0]
 801051c:	4620      	mov	r0, r4
 801051e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010522:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010524:	4718      	bx	r3
 8010526:	b12d      	cbz	r5, 8010534 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8010528:	6823      	ldr	r3, [r4, #0]
 801052a:	4620      	mov	r0, r4
 801052c:	695b      	ldr	r3, [r3, #20]
 801052e:	4798      	blx	r3
 8010530:	2d00      	cmp	r5, #0
 8010532:	d1ef      	bne.n	8010514 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8010534:	bd70      	pop	{r4, r5, r6, pc}

08010536 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8010536:	b570      	push	{r4, r5, r6, lr}
 8010538:	4605      	mov	r5, r0
 801053a:	880b      	ldrh	r3, [r1, #0]
 801053c:	4604      	mov	r4, r0
 801053e:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8010540:	8813      	ldrh	r3, [r2, #0]
 8010542:	f825 3f30 	strh.w	r3, [r5, #48]!
 8010546:	4628      	mov	r0, r5
 8010548:	f7ff fd3c 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801054c:	4606      	mov	r6, r0
 801054e:	4628      	mov	r0, r5
 8010550:	f7ff fd6c 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010554:	4605      	mov	r5, r0
 8010556:	6823      	ldr	r3, [r4, #0]
 8010558:	4631      	mov	r1, r6
 801055a:	4620      	mov	r0, r4
 801055c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801055e:	4798      	blx	r3
 8010560:	6823      	ldr	r3, [r4, #0]
 8010562:	4629      	mov	r1, r5
 8010564:	4620      	mov	r0, r4
 8010566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801056a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801056c:	4718      	bx	r3

0801056e <_ZNK8touchgfx6Button12getSolidRectEv>:
 801056e:	b510      	push	{r4, lr}
 8010570:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8010574:	4604      	mov	r4, r0
 8010576:	2bff      	cmp	r3, #255	@ 0xff
 8010578:	d006      	beq.n	8010588 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801057a:	2300      	movs	r3, #0
 801057c:	8003      	strh	r3, [r0, #0]
 801057e:	8043      	strh	r3, [r0, #2]
 8010580:	8083      	strh	r3, [r0, #4]
 8010582:	80c3      	strh	r3, [r0, #6]
 8010584:	4620      	mov	r0, r4
 8010586:	bd10      	pop	{r4, pc}
 8010588:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801058c:	b11b      	cbz	r3, 8010596 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801058e:	3130      	adds	r1, #48	@ 0x30
 8010590:	f7ff fd80 	bl	8010094 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010594:	e7f6      	b.n	8010584 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010596:	312e      	adds	r1, #46	@ 0x2e
 8010598:	e7fa      	b.n	8010590 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0801059c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801059c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105a0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80105a4:	b08a      	sub	sp, #40	@ 0x28
 80105a6:	4604      	mov	r4, r0
 80105a8:	4688      	mov	r8, r1
 80105aa:	2b00      	cmp	r3, #0
 80105ac:	d066      	beq.n	801067c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80105ae:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80105b0:	a805      	add	r0, sp, #20
 80105b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80105b6:	f7ff fd05 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80105ba:	4607      	mov	r7, r0
 80105bc:	a805      	add	r0, sp, #20
 80105be:	f7ff fd35 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80105c2:	2300      	movs	r3, #0
 80105c4:	f9b8 6000 	ldrsh.w	r6, [r8]
 80105c8:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80105cc:	9306      	str	r3, [sp, #24]
 80105ce:	4432      	add	r2, r6
 80105d0:	b292      	uxth	r2, r2
 80105d2:	fa0f fc82 	sxth.w	ip, r2
 80105d6:	459c      	cmp	ip, r3
 80105d8:	dd52      	ble.n	8010680 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105da:	42b7      	cmp	r7, r6
 80105dc:	dd50      	ble.n	8010680 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105de:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80105e2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80105e6:	442b      	add	r3, r5
 80105e8:	b29b      	uxth	r3, r3
 80105ea:	b219      	sxth	r1, r3
 80105ec:	2900      	cmp	r1, #0
 80105ee:	dd47      	ble.n	8010680 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105f0:	42a8      	cmp	r0, r5
 80105f2:	dd45      	ble.n	8010680 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105f4:	4567      	cmp	r7, ip
 80105f6:	bfb8      	it	lt
 80105f8:	b2ba      	uxthlt	r2, r7
 80105fa:	4288      	cmp	r0, r1
 80105fc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8010600:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8010604:	bfb8      	it	lt
 8010606:	b283      	uxthlt	r3, r0
 8010608:	1b92      	subs	r2, r2, r6
 801060a:	1b5b      	subs	r3, r3, r5
 801060c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010610:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010614:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010618:	f8ad 501a 	strh.w	r5, [sp, #26]
 801061c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8010620:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010624:	429a      	cmp	r2, r3
 8010626:	d026      	beq.n	8010676 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010628:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801062c:	2b00      	cmp	r3, #0
 801062e:	dd22      	ble.n	8010676 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010630:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010634:	2b00      	cmp	r3, #0
 8010636:	dd1e      	ble.n	8010676 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010638:	2300      	movs	r3, #0
 801063a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801063e:	6823      	ldr	r3, [r4, #0]
 8010640:	a908      	add	r1, sp, #32
 8010642:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010644:	4620      	mov	r0, r4
 8010646:	4798      	blx	r3
 8010648:	4b0f      	ldr	r3, [pc, #60]	@ (8010688 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801064a:	681b      	ldr	r3, [r3, #0]
 801064c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010650:	b10a      	cbz	r2, 8010656 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8010652:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8010654:	b900      	cbnz	r0, 8010658 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8010656:	6898      	ldr	r0, [r3, #8]
 8010658:	2501      	movs	r5, #1
 801065a:	6801      	ldr	r1, [r0, #0]
 801065c:	9502      	str	r5, [sp, #8]
 801065e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8010662:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8010666:	9401      	str	r4, [sp, #4]
 8010668:	ac06      	add	r4, sp, #24
 801066a:	9400      	str	r4, [sp, #0]
 801066c:	688c      	ldr	r4, [r1, #8]
 801066e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010672:	a905      	add	r1, sp, #20
 8010674:	47a0      	blx	r4
 8010676:	b00a      	add	sp, #40	@ 0x28
 8010678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801067c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801067e:	e797      	b.n	80105b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010680:	2300      	movs	r3, #0
 8010682:	9307      	str	r3, [sp, #28]
 8010684:	e7ca      	b.n	801061c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8010686:	bf00      	nop
 8010688:	20082f08 	.word	0x20082f08

0801068c <nema_rb_init>:
 801068c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010690:	6805      	ldr	r5, [r0, #0]
 8010692:	4f23      	ldr	r7, [pc, #140]	@ (8010720 <nema_rb_init+0x94>)
 8010694:	2d00      	cmp	r5, #0
 8010696:	603d      	str	r5, [r7, #0]
 8010698:	dd3c      	ble.n	8010714 <nema_rb_init+0x88>
 801069a:	f8df c090 	ldr.w	ip, [pc, #144]	@ 801072c <nema_rb_init+0xa0>
 801069e:	10ab      	asrs	r3, r5, #2
 80106a0:	3b04      	subs	r3, #4
 80106a2:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 8010730 <nema_rb_init+0xa4>
 80106a6:	6886      	ldr	r6, [r0, #8]
 80106a8:	4c1e      	ldr	r4, [pc, #120]	@ (8010724 <nema_rb_init+0x98>)
 80106aa:	f8cc 3000 	str.w	r3, [ip]
 80106ae:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 8010734 <nema_rb_init+0xa8>
 80106b2:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 80106b6:	f8ce 0000 	str.w	r0, [lr]
 80106ba:	6026      	str	r6, [r4, #0]
 80106bc:	f8c8 c000 	str.w	ip, [r8]
 80106c0:	b329      	cbz	r1, 801070e <nema_rb_init+0x82>
 80106c2:	2400      	movs	r4, #0
 80106c4:	f8df e070 	ldr.w	lr, [pc, #112]	@ 8010738 <nema_rb_init+0xac>
 80106c8:	4917      	ldr	r1, [pc, #92]	@ (8010728 <nema_rb_init+0x9c>)
 80106ca:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80106ce:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 80106d2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80106d6:	e9c3 1502 	strd	r1, r5, [r3, #8]
 80106da:	f8c3 c004 	str.w	ip, [r3, #4]
 80106de:	f7f2 fbf3 	bl	8002ec8 <nema_buffer_flush>
 80106e2:	4621      	mov	r1, r4
 80106e4:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 80106e8:	f7f2 fb14 	bl	8002d14 <nema_reg_write>
 80106ec:	f8d8 1000 	ldr.w	r1, [r8]
 80106f0:	20ec      	movs	r0, #236	@ 0xec
 80106f2:	f041 0106 	orr.w	r1, r1, #6
 80106f6:	f7f2 fb0d 	bl	8002d14 <nema_reg_write>
 80106fa:	f8d8 1000 	ldr.w	r1, [r8]
 80106fe:	20f0      	movs	r0, #240	@ 0xf0
 8010700:	f7f2 fb08 	bl	8002d14 <nema_reg_write>
 8010704:	6839      	ldr	r1, [r7, #0]
 8010706:	20f4      	movs	r0, #244	@ 0xf4
 8010708:	f7f2 fb04 	bl	8002d14 <nema_reg_write>
 801070c:	4621      	mov	r1, r4
 801070e:	4608      	mov	r0, r1
 8010710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010714:	2004      	movs	r0, #4
 8010716:	f000 fa25 	bl	8010b64 <nema_set_error>
 801071a:	f04f 31ff 	mov.w	r1, #4294967295
 801071e:	e7f6      	b.n	801070e <nema_rb_init+0x82>
 8010720:	20082fa4 	.word	0x20082fa4
 8010724:	20082f9c 	.word	0x20082f9c
 8010728:	ff0000f4 	.word	0xff0000f4
 801072c:	20082fa0 	.word	0x20082fa0
 8010730:	20082f94 	.word	0x20082f94
 8010734:	20082f98 	.word	0x20082f98
 8010738:	ff0000f0 	.word	0xff0000f0

0801073c <nema_rb_submit_cmdlist2>:
 801073c:	2900      	cmp	r1, #0
 801073e:	d074      	beq.n	801082a <nema_rb_submit_cmdlist2+0xee>
 8010740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010744:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 8010840 <nema_rb_submit_cmdlist2+0x104>
 8010748:	4b39      	ldr	r3, [pc, #228]	@ (8010830 <nema_rb_submit_cmdlist2+0xf4>)
 801074a:	f8d8 2000 	ldr.w	r2, [r8]
 801074e:	681d      	ldr	r5, [r3, #0]
 8010750:	6913      	ldr	r3, [r2, #16]
 8010752:	468c      	mov	ip, r1
 8010754:	4c37      	ldr	r4, [pc, #220]	@ (8010834 <nema_rb_submit_cmdlist2+0xf8>)
 8010756:	1d19      	adds	r1, r3, #4
 8010758:	42a9      	cmp	r1, r5
 801075a:	6824      	ldr	r4, [r4, #0]
 801075c:	db0a      	blt.n	8010774 <nema_rb_submit_cmdlist2+0x38>
 801075e:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8010762:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010766:	6913      	ldr	r3, [r2, #16]
 8010768:	3301      	adds	r3, #1
 801076a:	429d      	cmp	r5, r3
 801076c:	6113      	str	r3, [r2, #16]
 801076e:	dc59      	bgt.n	8010824 <nema_rb_submit_cmdlist2+0xe8>
 8010770:	2300      	movs	r3, #0
 8010772:	6113      	str	r3, [r2, #16]
 8010774:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8010778:	f04f 0e00 	mov.w	lr, #0
 801077c:	e009      	b.n	8010792 <nema_rb_submit_cmdlist2+0x56>
 801077e:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010782:	6913      	ldr	r3, [r2, #16]
 8010784:	3301      	adds	r3, #1
 8010786:	429d      	cmp	r5, r3
 8010788:	6113      	str	r3, [r2, #16]
 801078a:	bfdc      	itt	le
 801078c:	2300      	movle	r3, #0
 801078e:	f8c2 e010 	strle.w	lr, [r2, #16]
 8010792:	f013 0703 	ands.w	r7, r3, #3
 8010796:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 801079a:	d1f0      	bne.n	801077e <nema_rb_submit_cmdlist2+0x42>
 801079c:	23f0      	movs	r3, #240	@ 0xf0
 801079e:	6033      	str	r3, [r6, #0]
 80107a0:	6913      	ldr	r3, [r2, #16]
 80107a2:	3301      	adds	r3, #1
 80107a4:	429d      	cmp	r5, r3
 80107a6:	bfd3      	iteet	le
 80107a8:	4623      	movle	r3, r4
 80107aa:	6113      	strgt	r3, [r2, #16]
 80107ac:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 80107b0:	6117      	strle	r7, [r2, #16]
 80107b2:	6018      	str	r0, [r3, #0]
 80107b4:	6913      	ldr	r3, [r2, #16]
 80107b6:	3301      	adds	r3, #1
 80107b8:	429d      	cmp	r5, r3
 80107ba:	dd2f      	ble.n	801081c <nema_rb_submit_cmdlist2+0xe0>
 80107bc:	6113      	str	r3, [r2, #16]
 80107be:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80107c2:	491d      	ldr	r1, [pc, #116]	@ (8010838 <nema_rb_submit_cmdlist2+0xfc>)
 80107c4:	4610      	mov	r0, r2
 80107c6:	6019      	str	r1, [r3, #0]
 80107c8:	6913      	ldr	r3, [r2, #16]
 80107ca:	3301      	adds	r3, #1
 80107cc:	429d      	cmp	r5, r3
 80107ce:	bfd3      	iteet	le
 80107d0:	2300      	movle	r3, #0
 80107d2:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 80107d6:	6113      	strgt	r3, [r2, #16]
 80107d8:	6113      	strle	r3, [r2, #16]
 80107da:	f8c4 c000 	str.w	ip, [r4]
 80107de:	6913      	ldr	r3, [r2, #16]
 80107e0:	3301      	adds	r3, #1
 80107e2:	429d      	cmp	r5, r3
 80107e4:	bfd8      	it	le
 80107e6:	2300      	movle	r3, #0
 80107e8:	6113      	str	r3, [r2, #16]
 80107ea:	f7f2 fb6d 	bl	8002ec8 <nema_buffer_flush>
 80107ee:	4a13      	ldr	r2, [pc, #76]	@ (801083c <nema_rb_submit_cmdlist2+0x100>)
 80107f0:	f8d8 3000 	ldr.w	r3, [r8]
 80107f4:	6811      	ldr	r1, [r2, #0]
 80107f6:	691b      	ldr	r3, [r3, #16]
 80107f8:	20ec      	movs	r0, #236	@ 0xec
 80107fa:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80107fe:	f041 0104 	orr.w	r1, r1, #4
 8010802:	f7f2 fa87 	bl	8002d14 <nema_reg_write>
 8010806:	f8d8 3000 	ldr.w	r3, [r8]
 801080a:	6958      	ldr	r0, [r3, #20]
 801080c:	3001      	adds	r0, #1
 801080e:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8010812:	bfa8      	it	ge
 8010814:	2000      	movge	r0, #0
 8010816:	6158      	str	r0, [r3, #20]
 8010818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801081c:	2100      	movs	r1, #0
 801081e:	4623      	mov	r3, r4
 8010820:	6111      	str	r1, [r2, #16]
 8010822:	e7ce      	b.n	80107c2 <nema_rb_submit_cmdlist2+0x86>
 8010824:	2b00      	cmp	r3, #0
 8010826:	d19c      	bne.n	8010762 <nema_rb_submit_cmdlist2+0x26>
 8010828:	e7a4      	b.n	8010774 <nema_rb_submit_cmdlist2+0x38>
 801082a:	f04f 30ff 	mov.w	r0, #4294967295
 801082e:	4770      	bx	lr
 8010830:	20082fa0 	.word	0x20082fa0
 8010834:	20082f9c 	.word	0x20082f9c
 8010838:	000200f4 	.word	0x000200f4
 801083c:	20082f98 	.word	0x20082f98
 8010840:	20082f94 	.word	0x20082f94

08010844 <nema_rb_submit_cmdlist>:
 8010844:	68c0      	ldr	r0, [r0, #12]
 8010846:	f7ff bf79 	b.w	801073c <nema_rb_submit_cmdlist2>
 801084a:	bf00      	nop

0801084c <nema_rb_inline_cmd>:
 801084c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801084e:	4e21      	ldr	r6, [pc, #132]	@ (80108d4 <nema_rb_inline_cmd+0x88>)
 8010850:	4b21      	ldr	r3, [pc, #132]	@ (80108d8 <nema_rb_inline_cmd+0x8c>)
 8010852:	6832      	ldr	r2, [r6, #0]
 8010854:	681d      	ldr	r5, [r3, #0]
 8010856:	6913      	ldr	r3, [r2, #16]
 8010858:	4c20      	ldr	r4, [pc, #128]	@ (80108dc <nema_rb_inline_cmd+0x90>)
 801085a:	1c5f      	adds	r7, r3, #1
 801085c:	42af      	cmp	r7, r5
 801085e:	6824      	ldr	r4, [r4, #0]
 8010860:	db24      	blt.n	80108ac <nema_rb_inline_cmd+0x60>
 8010862:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 8010866:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 801086a:	6913      	ldr	r3, [r2, #16]
 801086c:	3301      	adds	r3, #1
 801086e:	429d      	cmp	r5, r3
 8010870:	6113      	str	r3, [r2, #16]
 8010872:	dc17      	bgt.n	80108a4 <nema_rb_inline_cmd+0x58>
 8010874:	2700      	movs	r7, #0
 8010876:	4623      	mov	r3, r4
 8010878:	6117      	str	r7, [r2, #16]
 801087a:	6018      	str	r0, [r3, #0]
 801087c:	6913      	ldr	r3, [r2, #16]
 801087e:	3301      	adds	r3, #1
 8010880:	429d      	cmp	r5, r3
 8010882:	bfd3      	iteet	le
 8010884:	2300      	movle	r3, #0
 8010886:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 801088a:	6113      	strgt	r3, [r2, #16]
 801088c:	6113      	strle	r3, [r2, #16]
 801088e:	6021      	str	r1, [r4, #0]
 8010890:	6913      	ldr	r3, [r2, #16]
 8010892:	3301      	adds	r3, #1
 8010894:	429d      	cmp	r5, r3
 8010896:	bfd8      	it	le
 8010898:	2300      	movle	r3, #0
 801089a:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 801089e:	6113      	str	r3, [r2, #16]
 80108a0:	d107      	bne.n	80108b2 <nema_rb_inline_cmd+0x66>
 80108a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80108a4:	2b00      	cmp	r3, #0
 80108a6:	d1de      	bne.n	8010866 <nema_rb_inline_cmd+0x1a>
 80108a8:	4623      	mov	r3, r4
 80108aa:	e7e6      	b.n	801087a <nema_rb_inline_cmd+0x2e>
 80108ac:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80108b0:	e7e3      	b.n	801087a <nema_rb_inline_cmd+0x2e>
 80108b2:	4610      	mov	r0, r2
 80108b4:	f7f2 fb08 	bl	8002ec8 <nema_buffer_flush>
 80108b8:	6833      	ldr	r3, [r6, #0]
 80108ba:	4a09      	ldr	r2, [pc, #36]	@ (80108e0 <nema_rb_inline_cmd+0x94>)
 80108bc:	691b      	ldr	r3, [r3, #16]
 80108be:	6811      	ldr	r1, [r2, #0]
 80108c0:	20ec      	movs	r0, #236	@ 0xec
 80108c2:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80108c6:	f041 0104 	orr.w	r1, r1, #4
 80108ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80108ce:	f7f2 ba21 	b.w	8002d14 <nema_reg_write>
 80108d2:	bf00      	nop
 80108d4:	20082f94 	.word	0x20082f94
 80108d8:	20082fa0 	.word	0x20082fa0
 80108dc:	20082f9c 	.word	0x20082f9c
 80108e0:	20082f98 	.word	0x20082f98

080108e4 <nema_rb_force_flush>:
 80108e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108e6:	4e36      	ldr	r6, [pc, #216]	@ (80109c0 <nema_rb_force_flush+0xdc>)
 80108e8:	4b36      	ldr	r3, [pc, #216]	@ (80109c4 <nema_rb_force_flush+0xe0>)
 80108ea:	6830      	ldr	r0, [r6, #0]
 80108ec:	6819      	ldr	r1, [r3, #0]
 80108ee:	6903      	ldr	r3, [r0, #16]
 80108f0:	4a35      	ldr	r2, [pc, #212]	@ (80109c8 <nema_rb_force_flush+0xe4>)
 80108f2:	1d1c      	adds	r4, r3, #4
 80108f4:	428c      	cmp	r4, r1
 80108f6:	6812      	ldr	r2, [r2, #0]
 80108f8:	db0a      	blt.n	8010910 <nema_rb_force_flush+0x2c>
 80108fa:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 80108fe:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8010902:	6903      	ldr	r3, [r0, #16]
 8010904:	3301      	adds	r3, #1
 8010906:	4299      	cmp	r1, r3
 8010908:	6103      	str	r3, [r0, #16]
 801090a:	dc51      	bgt.n	80109b0 <nema_rb_force_flush+0xcc>
 801090c:	2300      	movs	r3, #0
 801090e:	6103      	str	r3, [r0, #16]
 8010910:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8010914:	2700      	movs	r7, #0
 8010916:	e008      	b.n	801092a <nema_rb_force_flush+0x46>
 8010918:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 801091c:	6903      	ldr	r3, [r0, #16]
 801091e:	3301      	adds	r3, #1
 8010920:	4299      	cmp	r1, r3
 8010922:	6103      	str	r3, [r0, #16]
 8010924:	bfdc      	itt	le
 8010926:	2300      	movle	r3, #0
 8010928:	6107      	strle	r7, [r0, #16]
 801092a:	f013 0c03 	ands.w	ip, r3, #3
 801092e:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 8010932:	d1f1      	bne.n	8010918 <nema_rb_force_flush+0x34>
 8010934:	4d25      	ldr	r5, [pc, #148]	@ (80109cc <nema_rb_force_flush+0xe8>)
 8010936:	4f26      	ldr	r7, [pc, #152]	@ (80109d0 <nema_rb_force_flush+0xec>)
 8010938:	6025      	str	r5, [r4, #0]
 801093a:	6904      	ldr	r4, [r0, #16]
 801093c:	683d      	ldr	r5, [r7, #0]
 801093e:	3401      	adds	r4, #1
 8010940:	42a1      	cmp	r1, r4
 8010942:	bfd8      	it	le
 8010944:	4614      	movle	r4, r2
 8010946:	f103 0304 	add.w	r3, r3, #4
 801094a:	bfc8      	it	gt
 801094c:	6104      	strgt	r4, [r0, #16]
 801094e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8010952:	bfcc      	ite	gt
 8010954:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 8010958:	f8c0 c010 	strle.w	ip, [r0, #16]
 801095c:	6023      	str	r3, [r4, #0]
 801095e:	6903      	ldr	r3, [r0, #16]
 8010960:	3301      	adds	r3, #1
 8010962:	4299      	cmp	r1, r3
 8010964:	dd27      	ble.n	80109b6 <nema_rb_force_flush+0xd2>
 8010966:	6103      	str	r3, [r0, #16]
 8010968:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801096c:	4c19      	ldr	r4, [pc, #100]	@ (80109d4 <nema_rb_force_flush+0xf0>)
 801096e:	601c      	str	r4, [r3, #0]
 8010970:	6903      	ldr	r3, [r0, #16]
 8010972:	3301      	adds	r3, #1
 8010974:	4299      	cmp	r1, r3
 8010976:	bfd5      	itete	le
 8010978:	2300      	movle	r3, #0
 801097a:	6103      	strgt	r3, [r0, #16]
 801097c:	6103      	strle	r3, [r0, #16]
 801097e:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 8010982:	4b15      	ldr	r3, [pc, #84]	@ (80109d8 <nema_rb_force_flush+0xf4>)
 8010984:	681b      	ldr	r3, [r3, #0]
 8010986:	6013      	str	r3, [r2, #0]
 8010988:	6903      	ldr	r3, [r0, #16]
 801098a:	3301      	adds	r3, #1
 801098c:	4299      	cmp	r1, r3
 801098e:	bfd8      	it	le
 8010990:	2300      	movle	r3, #0
 8010992:	6103      	str	r3, [r0, #16]
 8010994:	f7f2 fa98 	bl	8002ec8 <nema_buffer_flush>
 8010998:	6833      	ldr	r3, [r6, #0]
 801099a:	6839      	ldr	r1, [r7, #0]
 801099c:	691b      	ldr	r3, [r3, #16]
 801099e:	20ec      	movs	r0, #236	@ 0xec
 80109a0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80109a4:	f041 0104 	orr.w	r1, r1, #4
 80109a8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80109ac:	f7f2 b9b2 	b.w	8002d14 <nema_reg_write>
 80109b0:	2b00      	cmp	r3, #0
 80109b2:	d1a4      	bne.n	80108fe <nema_rb_force_flush+0x1a>
 80109b4:	e7ac      	b.n	8010910 <nema_rb_force_flush+0x2c>
 80109b6:	2400      	movs	r4, #0
 80109b8:	4613      	mov	r3, r2
 80109ba:	6104      	str	r4, [r0, #16]
 80109bc:	e7d6      	b.n	801096c <nema_rb_force_flush+0x88>
 80109be:	bf00      	nop
 80109c0:	20082f94 	.word	0x20082f94
 80109c4:	20082fa0 	.word	0x20082fa0
 80109c8:	20082f9c 	.word	0x20082f9c
 80109cc:	ff0000f0 	.word	0xff0000f0
 80109d0:	20082f98 	.word	0x20082f98
 80109d4:	ff0000f4 	.word	0xff0000f4
 80109d8:	20082fa4 	.word	0x20082fa4

080109dc <nema_rb_submit_cl_id>:
 80109dc:	b510      	push	{r4, lr}
 80109de:	1e04      	subs	r4, r0, #0
 80109e0:	dd40      	ble.n	8010a64 <nema_rb_submit_cl_id+0x88>
 80109e2:	2000      	movs	r0, #0
 80109e4:	f7f2 fa71 	bl	8002eca <nema_mutex_lock>
 80109e8:	4621      	mov	r1, r4
 80109ea:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 80109ee:	f7ff ff2d 	bl	801084c <nema_rb_inline_cmd>
 80109f2:	4a1d      	ldr	r2, [pc, #116]	@ (8010a68 <nema_rb_submit_cl_id+0x8c>)
 80109f4:	4b1d      	ldr	r3, [pc, #116]	@ (8010a6c <nema_rb_submit_cl_id+0x90>)
 80109f6:	6812      	ldr	r2, [r2, #0]
 80109f8:	6818      	ldr	r0, [r3, #0]
 80109fa:	6913      	ldr	r3, [r2, #16]
 80109fc:	1c59      	adds	r1, r3, #1
 80109fe:	4281      	cmp	r1, r0
 8010a00:	db0e      	blt.n	8010a20 <nema_rb_submit_cl_id+0x44>
 8010a02:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8010a06:	491a      	ldr	r1, [pc, #104]	@ (8010a70 <nema_rb_submit_cl_id+0x94>)
 8010a08:	6809      	ldr	r1, [r1, #0]
 8010a0a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8010a0e:	6913      	ldr	r3, [r2, #16]
 8010a10:	3301      	adds	r3, #1
 8010a12:	4298      	cmp	r0, r3
 8010a14:	6113      	str	r3, [r2, #16]
 8010a16:	dc21      	bgt.n	8010a5c <nema_rb_submit_cl_id+0x80>
 8010a18:	2400      	movs	r4, #0
 8010a1a:	460b      	mov	r3, r1
 8010a1c:	6114      	str	r4, [r2, #16]
 8010a1e:	e003      	b.n	8010a28 <nema_rb_submit_cl_id+0x4c>
 8010a20:	4913      	ldr	r1, [pc, #76]	@ (8010a70 <nema_rb_submit_cl_id+0x94>)
 8010a22:	6809      	ldr	r1, [r1, #0]
 8010a24:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8010a28:	24f8      	movs	r4, #248	@ 0xf8
 8010a2a:	601c      	str	r4, [r3, #0]
 8010a2c:	6913      	ldr	r3, [r2, #16]
 8010a2e:	3301      	adds	r3, #1
 8010a30:	4298      	cmp	r0, r3
 8010a32:	bfd5      	itete	le
 8010a34:	2300      	movle	r3, #0
 8010a36:	6113      	strgt	r3, [r2, #16]
 8010a38:	6113      	strle	r3, [r2, #16]
 8010a3a:	eb01 0183 	addgt.w	r1, r1, r3, lsl #2
 8010a3e:	2301      	movs	r3, #1
 8010a40:	600b      	str	r3, [r1, #0]
 8010a42:	6913      	ldr	r3, [r2, #16]
 8010a44:	3301      	adds	r3, #1
 8010a46:	4298      	cmp	r0, r3
 8010a48:	bfd8      	it	le
 8010a4a:	2300      	movle	r3, #0
 8010a4c:	6113      	str	r3, [r2, #16]
 8010a4e:	f7ff ff49 	bl	80108e4 <nema_rb_force_flush>
 8010a52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a56:	2000      	movs	r0, #0
 8010a58:	f7f2 ba39 	b.w	8002ece <nema_mutex_unlock>
 8010a5c:	2b00      	cmp	r3, #0
 8010a5e:	d1d4      	bne.n	8010a0a <nema_rb_submit_cl_id+0x2e>
 8010a60:	460b      	mov	r3, r1
 8010a62:	e7e1      	b.n	8010a28 <nema_rb_submit_cl_id+0x4c>
 8010a64:	bd10      	pop	{r4, pc}
 8010a66:	bf00      	nop
 8010a68:	20082f94 	.word	0x20082f94
 8010a6c:	20082fa0 	.word	0x20082fa0
 8010a70:	20082f9c 	.word	0x20082f9c

08010a74 <init_nema_regs>:
 8010a74:	b538      	push	{r3, r4, r5, lr}
 8010a76:	2100      	movs	r1, #0
 8010a78:	20e8      	movs	r0, #232	@ 0xe8
 8010a7a:	f7f2 f94b 	bl	8002d14 <nema_reg_write>
 8010a7e:	2100      	movs	r1, #0
 8010a80:	20fc      	movs	r0, #252	@ 0xfc
 8010a82:	f7f2 f947 	bl	8002d14 <nema_reg_write>
 8010a86:	2101      	movs	r1, #1
 8010a88:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8010a8c:	f7f2 f942 	bl	8002d14 <nema_reg_write>
 8010a90:	2000      	movs	r0, #0
 8010a92:	f001 fd35 	bl	8012500 <nema_set_interrupt_ctrl>
 8010a96:	f00d fa9d 	bl	801dfd4 <nema_blender_init>
 8010a9a:	2100      	movs	r1, #0
 8010a9c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010aa0:	f00d f9a4 	bl	801ddec <nema_cl_add_cmd>
 8010aa4:	f04f 31ff 	mov.w	r1, #4294967295
 8010aa8:	f44f 7001 	mov.w	r0, #516	@ 0x204
 8010aac:	f00d f99e 	bl	801ddec <nema_cl_add_cmd>
 8010ab0:	f001 fa92 	bl	8011fd8 <nema_readHwConfig>
 8010ab4:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8010ab8:	d015      	beq.n	8010ae6 <init_nema_regs+0x72>
 8010aba:	2007      	movs	r0, #7
 8010abc:	f001 fc20 	bl	8012300 <nema_set_depth_ctrl>
 8010ac0:	2300      	movs	r3, #0
 8010ac2:	4c10      	ldr	r4, [pc, #64]	@ (8010b04 <init_nema_regs+0x90>)
 8010ac4:	7820      	ldrb	r0, [r4, #0]
 8010ac6:	7063      	strb	r3, [r4, #1]
 8010ac8:	f001 fa98 	bl	8011ffc <nema_enable_tiling>
 8010acc:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8010ad0:	2500      	movs	r5, #0
 8010ad2:	6962      	ldr	r2, [r4, #20]
 8010ad4:	430b      	orrs	r3, r1
 8010ad6:	4313      	orrs	r3, r2
 8010ad8:	e9c4 5303 	strd	r5, r3, [r4, #12]
 8010adc:	f001 fa8a 	bl	8011ff4 <nema_readHwConfigH>
 8010ae0:	0583      	lsls	r3, r0, #22
 8010ae2:	d403      	bmi.n	8010aec <init_nema_regs+0x78>
 8010ae4:	bd38      	pop	{r3, r4, r5, pc}
 8010ae6:	4c07      	ldr	r4, [pc, #28]	@ (8010b04 <init_nema_regs+0x90>)
 8010ae8:	70a0      	strb	r0, [r4, #2]
 8010aea:	e7ef      	b.n	8010acc <init_nema_regs+0x58>
 8010aec:	4629      	mov	r1, r5
 8010aee:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8010af2:	f7f2 f90f 	bl	8002d14 <nema_reg_write>
 8010af6:	4629      	mov	r1, r5
 8010af8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010afc:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8010b00:	f7f2 b908 	b.w	8002d14 <nema_reg_write>
 8010b04:	20000064 	.word	0x20000064

08010b08 <nema_init>:
 8010b08:	b510      	push	{r4, lr}
 8010b0a:	f7f2 f94b 	bl	8002da4 <nema_sys_init>
 8010b0e:	1e04      	subs	r4, r0, #0
 8010b10:	db11      	blt.n	8010b36 <nema_init+0x2e>
 8010b12:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8010b16:	f7f2 f8f7 	bl	8002d08 <nema_reg_read>
 8010b1a:	4b10      	ldr	r3, [pc, #64]	@ (8010b5c <nema_init+0x54>)
 8010b1c:	4298      	cmp	r0, r3
 8010b1e:	d114      	bne.n	8010b4a <nema_init+0x42>
 8010b20:	f00d f870 	bl	801dc04 <nema_cl_unbind>
 8010b24:	22d0      	movs	r2, #208	@ 0xd0
 8010b26:	2100      	movs	r1, #0
 8010b28:	480d      	ldr	r0, [pc, #52]	@ (8010b60 <nema_init+0x58>)
 8010b2a:	f021 fef4 	bl	8032916 <memset>
 8010b2e:	b14c      	cbz	r4, 8010b44 <nema_init+0x3c>
 8010b30:	2400      	movs	r4, #0
 8010b32:	4620      	mov	r0, r4
 8010b34:	bd10      	pop	{r4, pc}
 8010b36:	4a0a      	ldr	r2, [pc, #40]	@ (8010b60 <nema_init+0x58>)
 8010b38:	4620      	mov	r0, r4
 8010b3a:	6993      	ldr	r3, [r2, #24]
 8010b3c:	f043 0301 	orr.w	r3, r3, #1
 8010b40:	6193      	str	r3, [r2, #24]
 8010b42:	bd10      	pop	{r4, pc}
 8010b44:	f7ff ff96 	bl	8010a74 <init_nema_regs>
 8010b48:	e7f3      	b.n	8010b32 <nema_init+0x2a>
 8010b4a:	4a05      	ldr	r2, [pc, #20]	@ (8010b60 <nema_init+0x58>)
 8010b4c:	f04f 34ff 	mov.w	r4, #4294967295
 8010b50:	6993      	ldr	r3, [r2, #24]
 8010b52:	f043 0302 	orr.w	r3, r3, #2
 8010b56:	6193      	str	r3, [r2, #24]
 8010b58:	e7eb      	b.n	8010b32 <nema_init+0x2a>
 8010b5a:	bf00      	nop
 8010b5c:	86362000 	.word	0x86362000
 8010b60:	20000064 	.word	0x20000064

08010b64 <nema_set_error>:
 8010b64:	4a02      	ldr	r2, [pc, #8]	@ (8010b70 <nema_set_error+0xc>)
 8010b66:	6993      	ldr	r3, [r2, #24]
 8010b68:	4318      	orrs	r0, r3
 8010b6a:	6190      	str	r0, [r2, #24]
 8010b6c:	4770      	bx	lr
 8010b6e:	bf00      	nop
 8010b70:	20000064 	.word	0x20000064

08010b74 <nema_bind_tex>:
 8010b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010b78:	1c44      	adds	r4, r0, #1
 8010b7a:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010b7e:	f89d 6028 	ldrb.w	r6, [sp, #40]	@ 0x28
 8010b82:	d029      	beq.n	8010bd8 <nema_bind_tex+0x64>
 8010b84:	4698      	mov	r8, r3
 8010b86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b88:	4617      	mov	r7, r2
 8010b8a:	3301      	adds	r3, #1
 8010b8c:	4689      	mov	r9, r1
 8010b8e:	4604      	mov	r4, r0
 8010b90:	d035      	beq.n	8010bfe <nema_bind_tex+0x8a>
 8010b92:	b31c      	cbz	r4, 8010bdc <nema_bind_tex+0x68>
 8010b94:	4d50      	ldr	r5, [pc, #320]	@ (8010cd8 <nema_bind_tex+0x164>)
 8010b96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b98:	2201      	movs	r2, #1
 8010b9a:	0436      	lsls	r6, r6, #16
 8010b9c:	b29b      	uxth	r3, r3
 8010b9e:	ea46 660a 	orr.w	r6, r6, sl, lsl #24
 8010ba2:	431e      	orrs	r6, r3
 8010ba4:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8010ba8:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8010bac:	2003      	movs	r0, #3
 8010bae:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8010bb0:	e9c5 970c 	strd	r9, r7, [r5, #48]	@ 0x30
 8010bb4:	f8c5 8038 	str.w	r8, [r5, #56]	@ 0x38
 8010bb8:	642a      	str	r2, [r5, #64]	@ 0x40
 8010bba:	f00d f8bb 	bl	801dd34 <nema_cl_get_space>
 8010bbe:	b158      	cbz	r0, 8010bd8 <nema_bind_tex+0x64>
 8010bc0:	0124      	lsls	r4, r4, #4
 8010bc2:	e9c0 4900 	strd	r4, r9, [r0]
 8010bc6:	1d23      	adds	r3, r4, #4
 8010bc8:	6083      	str	r3, [r0, #8]
 8010bca:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 8010bcc:	3408      	adds	r4, #8
 8010bce:	e9c0 3403 	strd	r3, r4, [r0, #12]
 8010bd2:	ea47 4708 	orr.w	r7, r7, r8, lsl #16
 8010bd6:	6147      	str	r7, [r0, #20]
 8010bd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010bdc:	f00a 037f 	and.w	r3, sl, #127	@ 0x7f
 8010be0:	2b12      	cmp	r3, #18
 8010be2:	d03d      	beq.n	8010c60 <nema_bind_tex+0xec>
 8010be4:	f1a3 0216 	sub.w	r2, r3, #22
 8010be8:	2a01      	cmp	r2, #1
 8010bea:	d939      	bls.n	8010c60 <nema_bind_tex+0xec>
 8010bec:	3b4c      	subs	r3, #76	@ 0x4c
 8010bee:	2b01      	cmp	r3, #1
 8010bf0:	d96a      	bls.n	8010cc8 <nema_bind_tex+0x154>
 8010bf2:	4d39      	ldr	r5, [pc, #228]	@ (8010cd8 <nema_bind_tex+0x164>)
 8010bf4:	7868      	ldrb	r0, [r5, #1]
 8010bf6:	f001 fa01 	bl	8011ffc <nema_enable_tiling>
 8010bfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010bfc:	e7cc      	b.n	8010b98 <nema_bind_tex+0x24>
 8010bfe:	06f3      	lsls	r3, r6, #27
 8010c00:	f00a 017f 	and.w	r1, sl, #127	@ 0x7f
 8010c04:	d434      	bmi.n	8010c70 <nema_bind_tex+0xfc>
 8010c06:	4613      	mov	r3, r2
 8010c08:	f1a1 020b 	sub.w	r2, r1, #11
 8010c0c:	2a42      	cmp	r2, #66	@ 0x42
 8010c0e:	d84f      	bhi.n	8010cb0 <nema_bind_tex+0x13c>
 8010c10:	e8df f002 	tbb	[pc, r2]
 8010c14:	4e4e3535 	.word	0x4e4e3535
 8010c18:	484e4e4e 	.word	0x484e4e4e
 8010c1c:	224e4e4e 	.word	0x224e4e4e
 8010c20:	4e4e4e22 	.word	0x4e4e4e22
 8010c24:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c28:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c2c:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c30:	35343c35 	.word	0x35343c35
 8010c34:	4e4e343c 	.word	0x4e4e343c
 8010c38:	4e3c3c4e 	.word	0x4e3c3c4e
 8010c3c:	4e34344e 	.word	0x4e34344e
 8010c40:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c44:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c48:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c4c:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c50:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c54:	424e      	.short	0x424e
 8010c56:	42          	.byte	0x42
 8010c57:	00          	.byte	0x00
 8010c58:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c5e:	bb2c      	cbnz	r4, 8010cac <nema_bind_tex+0x138>
 8010c60:	2301      	movs	r3, #1
 8010c62:	4d1d      	ldr	r5, [pc, #116]	@ (8010cd8 <nema_bind_tex+0x164>)
 8010c64:	4618      	mov	r0, r3
 8010c66:	702b      	strb	r3, [r5, #0]
 8010c68:	f001 f9c8 	bl	8011ffc <nema_enable_tiling>
 8010c6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c6e:	e793      	b.n	8010b98 <nema_bind_tex+0x24>
 8010c70:	1cd3      	adds	r3, r2, #3
 8010c72:	bf48      	it	mi
 8010c74:	1d93      	addmi	r3, r2, #6
 8010c76:	f023 0303 	bic.w	r3, r3, #3
 8010c7a:	e7c5      	b.n	8010c08 <nema_bind_tex+0x94>
 8010c7c:	009b      	lsls	r3, r3, #2
 8010c7e:	1dda      	adds	r2, r3, #7
 8010c80:	d407      	bmi.n	8010c92 <nema_bind_tex+0x11e>
 8010c82:	10d3      	asrs	r3, r2, #3
 8010c84:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c86:	2c00      	cmp	r4, #0
 8010c88:	d0a8      	beq.n	8010bdc <nema_bind_tex+0x68>
 8010c8a:	e783      	b.n	8010b94 <nema_bind_tex+0x20>
 8010c8c:	005b      	lsls	r3, r3, #1
 8010c8e:	1dda      	adds	r2, r3, #7
 8010c90:	d5f7      	bpl.n	8010c82 <nema_bind_tex+0x10e>
 8010c92:	f103 020e 	add.w	r2, r3, #14
 8010c96:	e7f4      	b.n	8010c82 <nema_bind_tex+0x10e>
 8010c98:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c9e:	2c00      	cmp	r4, #0
 8010ca0:	d09c      	beq.n	8010bdc <nema_bind_tex+0x68>
 8010ca2:	e777      	b.n	8010b94 <nema_bind_tex+0x20>
 8010ca4:	005b      	lsls	r3, r3, #1
 8010ca6:	9309      	str	r3, [sp, #36]	@ 0x24
 8010ca8:	2c00      	cmp	r4, #0
 8010caa:	d0d9      	beq.n	8010c60 <nema_bind_tex+0xec>
 8010cac:	4d0a      	ldr	r5, [pc, #40]	@ (8010cd8 <nema_bind_tex+0x164>)
 8010cae:	e773      	b.n	8010b98 <nema_bind_tex+0x24>
 8010cb0:	3904      	subs	r1, #4
 8010cb2:	2949      	cmp	r1, #73	@ 0x49
 8010cb4:	bf8e      	itee	hi
 8010cb6:	2204      	movhi	r2, #4
 8010cb8:	4a08      	ldrls	r2, [pc, #32]	@ (8010cdc <nema_bind_tex+0x168>)
 8010cba:	5652      	ldrsbls	r2, [r2, r1]
 8010cbc:	fb02 f303 	mul.w	r3, r2, r3
 8010cc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8010cc2:	2c00      	cmp	r4, #0
 8010cc4:	d08a      	beq.n	8010bdc <nema_bind_tex+0x68>
 8010cc6:	e765      	b.n	8010b94 <nema_bind_tex+0x20>
 8010cc8:	2301      	movs	r3, #1
 8010cca:	4d03      	ldr	r5, [pc, #12]	@ (8010cd8 <nema_bind_tex+0x164>)
 8010ccc:	4618      	mov	r0, r3
 8010cce:	702b      	strb	r3, [r5, #0]
 8010cd0:	f001 f9a8 	bl	8012024 <nema_enable_tiling_2x2>
 8010cd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010cd6:	e75f      	b.n	8010b98 <nema_bind_tex+0x24>
 8010cd8:	20000064 	.word	0x20000064
 8010cdc:	08035cb4 	.word	0x08035cb4

08010ce0 <nema_set_tex_color>:
 8010ce0:	4601      	mov	r1, r0
 8010ce2:	201c      	movs	r0, #28
 8010ce4:	f00d b882 	b.w	801ddec <nema_cl_add_cmd>

08010ce8 <nema_set_const_reg>:
 8010ce8:	3080      	adds	r0, #128	@ 0x80
 8010cea:	0080      	lsls	r0, r0, #2
 8010cec:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 8010cf0:	d900      	bls.n	8010cf4 <nema_set_const_reg+0xc>
 8010cf2:	4770      	bx	lr
 8010cf4:	f00d b87a 	b.w	801ddec <nema_cl_add_cmd>

08010cf8 <nema_set_clip>:
 8010cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010cfa:	460c      	mov	r4, r1
 8010cfc:	4607      	mov	r7, r0
 8010cfe:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d02:	4d0c      	ldr	r5, [pc, #48]	@ (8010d34 <nema_set_clip+0x3c>)
 8010d04:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8010d08:	b289      	uxth	r1, r1
 8010d0a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8010d0e:	19d6      	adds	r6, r2, r7
 8010d10:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d14:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8010d18:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8010d1c:	441c      	add	r4, r3
 8010d1e:	f00d f865 	bl	801ddec <nema_cl_add_cmd>
 8010d22:	b2b1      	uxth	r1, r6
 8010d24:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010d28:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d2c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010d30:	f00d b85c 	b.w	801ddec <nema_cl_add_cmd>
 8010d34:	20000064 	.word	0x20000064

08010d38 <nema_set_clip2>:
 8010d38:	b570      	push	{r4, r5, r6, lr}
 8010d3a:	460d      	mov	r5, r1
 8010d3c:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d40:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010d44:	b289      	uxth	r1, r1
 8010d46:	1814      	adds	r4, r2, r0
 8010d48:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010d4c:	f44f 70ac 	mov.w	r0, #344	@ 0x158
 8010d50:	441d      	add	r5, r3
 8010d52:	f00d f84b 	bl	801ddec <nema_cl_add_cmd>
 8010d56:	b2a1      	uxth	r1, r4
 8010d58:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d5c:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010d60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d64:	f00d b842 	b.w	801ddec <nema_cl_add_cmd>

08010d68 <nema_supports_clip2>:
 8010d68:	b508      	push	{r3, lr}
 8010d6a:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010d6e:	f7f1 ffcb 	bl	8002d08 <nema_reg_read>
 8010d72:	3000      	adds	r0, #0
 8010d74:	bf18      	it	ne
 8010d76:	2001      	movne	r0, #1
 8010d78:	bd08      	pop	{r3, pc}
 8010d7a:	bf00      	nop

08010d7c <nema_set_clip_temp>:
 8010d7c:	b570      	push	{r4, r5, r6, lr}
 8010d7e:	460d      	mov	r5, r1
 8010d80:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d84:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010d88:	b289      	uxth	r1, r1
 8010d8a:	1814      	adds	r4, r2, r0
 8010d8c:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010d90:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d94:	441d      	add	r5, r3
 8010d96:	f00d f829 	bl	801ddec <nema_cl_add_cmd>
 8010d9a:	b2a1      	uxth	r1, r4
 8010d9c:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010da0:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010da4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010da8:	f00d b820 	b.w	801ddec <nema_cl_add_cmd>

08010dac <nema_set_clip_pop>:
 8010dac:	b538      	push	{r3, r4, r5, lr}
 8010dae:	4d0d      	ldr	r5, [pc, #52]	@ (8010de4 <nema_set_clip_pop+0x38>)
 8010db0:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010db4:	e9d5 3207 	ldrd	r3, r2, [r5, #28]
 8010db8:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8010dbc:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
 8010dc0:	b289      	uxth	r1, r1
 8010dc2:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010dc6:	e9d5 4509 	ldrd	r4, r5, [r5, #36]	@ 0x24
 8010dca:	441c      	add	r4, r3
 8010dcc:	4415      	add	r5, r2
 8010dce:	f00d f80d 	bl	801ddec <nema_cl_add_cmd>
 8010dd2:	b2a1      	uxth	r1, r4
 8010dd4:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010dd8:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010ddc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010de0:	f00d b804 	b.w	801ddec <nema_cl_add_cmd>
 8010de4:	20000064 	.word	0x20000064

08010de8 <nema_enable_gradient>:
 8010de8:	2800      	cmp	r0, #0
 8010dea:	bf14      	ite	ne
 8010dec:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8010df0:	2100      	moveq	r1, #0
 8010df2:	b410      	push	{r4}
 8010df4:	4a05      	ldr	r2, [pc, #20]	@ (8010e0c <nema_enable_gradient+0x24>)
 8010df6:	6950      	ldr	r0, [r2, #20]
 8010df8:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 8010dfc:	4323      	orrs	r3, r4
 8010dfe:	4303      	orrs	r3, r0
 8010e00:	430b      	orrs	r3, r1
 8010e02:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8010e06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e0a:	4770      	bx	lr
 8010e0c:	20000064 	.word	0x20000064

08010e10 <nema_stride_size>:
 8010e10:	06cb      	lsls	r3, r1, #27
 8010e12:	d504      	bpl.n	8010e1e <nema_stride_size+0xe>
 8010e14:	1cd3      	adds	r3, r2, #3
 8010e16:	bf48      	it	mi
 8010e18:	1d93      	addmi	r3, r2, #6
 8010e1a:	f023 0203 	bic.w	r2, r3, #3
 8010e1e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8010e22:	f1a0 030b 	sub.w	r3, r0, #11
 8010e26:	2b42      	cmp	r3, #66	@ 0x42
 8010e28:	d839      	bhi.n	8010e9e <nema_stride_size+0x8e>
 8010e2a:	e8df f003 	tbb	[pc, r3]
 8010e2e:	3232      	.short	0x3232
 8010e30:	38383838 	.word	0x38383838
 8010e34:	38382538 	.word	0x38382538
 8010e38:	38222238 	.word	0x38222238
 8010e3c:	38383838 	.word	0x38383838
 8010e40:	38383838 	.word	0x38383838
 8010e44:	38383838 	.word	0x38383838
 8010e48:	2c323838 	.word	0x2c323838
 8010e4c:	272c3227 	.word	0x272c3227
 8010e50:	2c383838 	.word	0x2c383838
 8010e54:	2738382c 	.word	0x2738382c
 8010e58:	38383827 	.word	0x38383827
 8010e5c:	38383838 	.word	0x38383838
 8010e60:	38383838 	.word	0x38383838
 8010e64:	38383838 	.word	0x38383838
 8010e68:	38383838 	.word	0x38383838
 8010e6c:	22383838 	.word	0x22383838
 8010e70:	22          	.byte	0x22
 8010e71:	00          	.byte	0x00
 8010e72:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8010e76:	4770      	bx	lr
 8010e78:	0050      	lsls	r0, r2, #1
 8010e7a:	4770      	bx	lr
 8010e7c:	0090      	lsls	r0, r2, #2
 8010e7e:	1dc2      	adds	r2, r0, #7
 8010e80:	d404      	bmi.n	8010e8c <nema_stride_size+0x7c>
 8010e82:	10d0      	asrs	r0, r2, #3
 8010e84:	4770      	bx	lr
 8010e86:	0050      	lsls	r0, r2, #1
 8010e88:	1dc2      	adds	r2, r0, #7
 8010e8a:	d5fa      	bpl.n	8010e82 <nema_stride_size+0x72>
 8010e8c:	f100 020e 	add.w	r2, r0, #14
 8010e90:	e7f7      	b.n	8010e82 <nema_stride_size+0x72>
 8010e92:	1dd0      	adds	r0, r2, #7
 8010e94:	bf48      	it	mi
 8010e96:	f102 000e 	addmi.w	r0, r2, #14
 8010e9a:	10c0      	asrs	r0, r0, #3
 8010e9c:	4770      	bx	lr
 8010e9e:	3804      	subs	r0, #4
 8010ea0:	2849      	cmp	r0, #73	@ 0x49
 8010ea2:	bf8e      	itee	hi
 8010ea4:	2004      	movhi	r0, #4
 8010ea6:	4b02      	ldrls	r3, [pc, #8]	@ (8010eb0 <nema_stride_size+0xa0>)
 8010ea8:	5618      	ldrsbls	r0, [r3, r0]
 8010eaa:	fb00 f002 	mul.w	r0, r0, r2
 8010eae:	4770      	bx	lr
 8010eb0:	08035cb4 	.word	0x08035cb4

08010eb4 <nema_rgba>:
 8010eb4:	061b      	lsls	r3, r3, #24
 8010eb6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010eba:	4318      	orrs	r0, r3
 8010ebc:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8010ec0:	4770      	bx	lr
 8010ec2:	bf00      	nop

08010ec4 <nema_bind_src_tex>:
 8010ec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ec8:	9c06      	ldr	r4, [sp, #24]
 8010eca:	460e      	mov	r6, r1
 8010ecc:	1c61      	adds	r1, r4, #1
 8010ece:	4605      	mov	r5, r0
 8010ed0:	4617      	mov	r7, r2
 8010ed2:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8010ed6:	d022      	beq.n	8010f1e <nema_bind_src_tex+0x5a>
 8010ed8:	2201      	movs	r2, #1
 8010eda:	0400      	lsls	r0, r0, #16
 8010edc:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8010fc8 <nema_bind_src_tex+0x104>
 8010ee0:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8010ee4:	b2a4      	uxth	r4, r4
 8010ee6:	4323      	orrs	r3, r4
 8010ee8:	2003      	movs	r0, #3
 8010eea:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 8010eee:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8010ef2:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8010ef6:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 8010efa:	f00c ff1b 	bl	801dd34 <nema_cl_get_space>
 8010efe:	b160      	cbz	r0, 8010f1a <nema_bind_src_tex+0x56>
 8010f00:	2110      	movs	r1, #16
 8010f02:	2214      	movs	r2, #20
 8010f04:	2318      	movs	r3, #24
 8010f06:	e9c0 1500 	strd	r1, r5, [r0]
 8010f0a:	6082      	str	r2, [r0, #8]
 8010f0c:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8010f10:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8010f14:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010f18:	6146      	str	r6, [r0, #20]
 8010f1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f1e:	06c2      	lsls	r2, r0, #27
 8010f20:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8010f24:	d428      	bmi.n	8010f78 <nema_bind_src_tex+0xb4>
 8010f26:	4634      	mov	r4, r6
 8010f28:	f1a1 020b 	sub.w	r2, r1, #11
 8010f2c:	2a42      	cmp	r2, #66	@ 0x42
 8010f2e:	d83f      	bhi.n	8010fb0 <nema_bind_src_tex+0xec>
 8010f30:	e8df f002 	tbb	[pc, r2]
 8010f34:	3e3e3636 	.word	0x3e3e3636
 8010f38:	3c3e3e3e 	.word	0x3c3e3e3e
 8010f3c:	283e3e3e 	.word	0x283e3e3e
 8010f40:	3e3e3e28 	.word	0x3e3e3e28
 8010f44:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f48:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f4c:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f50:	36302b36 	.word	0x36302b36
 8010f54:	3e3e302b 	.word	0x3e3e302b
 8010f58:	3e2b2b3e 	.word	0x3e2b2b3e
 8010f5c:	3e30303e 	.word	0x3e30303e
 8010f60:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f64:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f68:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f6c:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f70:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f74:	283e      	.short	0x283e
 8010f76:	28          	.byte	0x28
 8010f77:	00          	.byte	0x00
 8010f78:	1cf4      	adds	r4, r6, #3
 8010f7a:	bf48      	it	mi
 8010f7c:	1db4      	addmi	r4, r6, #6
 8010f7e:	f024 0403 	bic.w	r4, r4, #3
 8010f82:	e7d1      	b.n	8010f28 <nema_bind_src_tex+0x64>
 8010f84:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010f88:	e7a6      	b.n	8010ed8 <nema_bind_src_tex+0x14>
 8010f8a:	0062      	lsls	r2, r4, #1
 8010f8c:	1dd4      	adds	r4, r2, #7
 8010f8e:	d404      	bmi.n	8010f9a <nema_bind_src_tex+0xd6>
 8010f90:	10e4      	asrs	r4, r4, #3
 8010f92:	e7a1      	b.n	8010ed8 <nema_bind_src_tex+0x14>
 8010f94:	00a2      	lsls	r2, r4, #2
 8010f96:	1dd4      	adds	r4, r2, #7
 8010f98:	d5fa      	bpl.n	8010f90 <nema_bind_src_tex+0xcc>
 8010f9a:	f102 040e 	add.w	r4, r2, #14
 8010f9e:	e7f7      	b.n	8010f90 <nema_bind_src_tex+0xcc>
 8010fa0:	1de2      	adds	r2, r4, #7
 8010fa2:	bf48      	it	mi
 8010fa4:	f104 020e 	addmi.w	r2, r4, #14
 8010fa8:	10d4      	asrs	r4, r2, #3
 8010faa:	e795      	b.n	8010ed8 <nema_bind_src_tex+0x14>
 8010fac:	0064      	lsls	r4, r4, #1
 8010fae:	e793      	b.n	8010ed8 <nema_bind_src_tex+0x14>
 8010fb0:	3904      	subs	r1, #4
 8010fb2:	2949      	cmp	r1, #73	@ 0x49
 8010fb4:	bf8e      	itee	hi
 8010fb6:	2204      	movhi	r2, #4
 8010fb8:	4a02      	ldrls	r2, [pc, #8]	@ (8010fc4 <nema_bind_src_tex+0x100>)
 8010fba:	5652      	ldrsbls	r2, [r2, r1]
 8010fbc:	fb02 f404 	mul.w	r4, r2, r4
 8010fc0:	e78a      	b.n	8010ed8 <nema_bind_src_tex+0x14>
 8010fc2:	bf00      	nop
 8010fc4:	08035cb4 	.word	0x08035cb4
 8010fc8:	20000064 	.word	0x20000064

08010fcc <nema_bind_dst_tex>:
 8010fcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010fd0:	9d08      	ldr	r5, [sp, #32]
 8010fd2:	4699      	mov	r9, r3
 8010fd4:	4617      	mov	r7, r2
 8010fd6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8010fda:	1c6b      	adds	r3, r5, #1
 8010fdc:	4680      	mov	r8, r0
 8010fde:	460e      	mov	r6, r1
 8010fe0:	d031      	beq.n	8011046 <nema_bind_dst_tex+0x7a>
 8010fe2:	2a12      	cmp	r2, #18
 8010fe4:	d00e      	beq.n	8011004 <nema_bind_dst_tex+0x38>
 8010fe6:	f1a2 0316 	sub.w	r3, r2, #22
 8010fea:	2b01      	cmp	r3, #1
 8010fec:	d90a      	bls.n	8011004 <nema_bind_dst_tex+0x38>
 8010fee:	3a4c      	subs	r2, #76	@ 0x4c
 8010ff0:	2a01      	cmp	r2, #1
 8010ff2:	f240 80b7 	bls.w	8011164 <nema_bind_dst_tex+0x198>
 8010ff6:	4c6e      	ldr	r4, [pc, #440]	@ (80111b0 <nema_bind_dst_tex+0x1e4>)
 8010ff8:	7860      	ldrb	r0, [r4, #1]
 8010ffa:	f000 ffff 	bl	8011ffc <nema_enable_tiling>
 8010ffe:	e007      	b.n	8011010 <nema_bind_dst_tex+0x44>
 8011000:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8011004:	2301      	movs	r3, #1
 8011006:	4c6a      	ldr	r4, [pc, #424]	@ (80111b0 <nema_bind_dst_tex+0x1e4>)
 8011008:	4618      	mov	r0, r3
 801100a:	7023      	strb	r3, [r4, #0]
 801100c:	f000 fff6 	bl	8011ffc <nema_enable_tiling>
 8011010:	2201      	movs	r2, #1
 8011012:	b2ad      	uxth	r5, r5
 8011014:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8011018:	2003      	movs	r0, #3
 801101a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 801101c:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8011020:	63a7      	str	r7, [r4, #56]	@ 0x38
 8011022:	6422      	str	r2, [r4, #64]	@ 0x40
 8011024:	f00c fe86 	bl	801dd34 <nema_cl_get_space>
 8011028:	b158      	cbz	r0, 8011042 <nema_bind_dst_tex+0x76>
 801102a:	2100      	movs	r1, #0
 801102c:	2204      	movs	r2, #4
 801102e:	2308      	movs	r3, #8
 8011030:	e9c0 1800 	strd	r1, r8, [r0]
 8011034:	6082      	str	r2, [r0, #8]
 8011036:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8011038:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 801103c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011040:	6146      	str	r6, [r0, #20]
 8011042:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011046:	f1a2 030b 	sub.w	r3, r2, #11
 801104a:	2b42      	cmp	r3, #66	@ 0x42
 801104c:	f200 80a6 	bhi.w	801119c <nema_bind_dst_tex+0x1d0>
 8011050:	a101      	add	r1, pc, #4	@ (adr r1, 8011058 <nema_bind_dst_tex+0x8c>)
 8011052:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8011056:	bf00      	nop
 8011058:	0801118f 	.word	0x0801118f
 801105c:	0801118f 	.word	0x0801118f
 8011060:	0801119d 	.word	0x0801119d
 8011064:	0801119d 	.word	0x0801119d
 8011068:	0801119d 	.word	0x0801119d
 801106c:	0801119d 	.word	0x0801119d
 8011070:	0801119d 	.word	0x0801119d
 8011074:	08011199 	.word	0x08011199
 8011078:	0801119d 	.word	0x0801119d
 801107c:	0801119d 	.word	0x0801119d
 8011080:	0801119d 	.word	0x0801119d
 8011084:	08011001 	.word	0x08011001
 8011088:	08011001 	.word	0x08011001
 801108c:	0801119d 	.word	0x0801119d
 8011090:	0801119d 	.word	0x0801119d
 8011094:	0801119d 	.word	0x0801119d
 8011098:	0801119d 	.word	0x0801119d
 801109c:	0801119d 	.word	0x0801119d
 80110a0:	0801119d 	.word	0x0801119d
 80110a4:	0801119d 	.word	0x0801119d
 80110a8:	0801119d 	.word	0x0801119d
 80110ac:	0801119d 	.word	0x0801119d
 80110b0:	0801119d 	.word	0x0801119d
 80110b4:	0801119d 	.word	0x0801119d
 80110b8:	0801119d 	.word	0x0801119d
 80110bc:	0801119d 	.word	0x0801119d
 80110c0:	0801119d 	.word	0x0801119d
 80110c4:	0801119d 	.word	0x0801119d
 80110c8:	0801118f 	.word	0x0801118f
 80110cc:	08011179 	.word	0x08011179
 80110d0:	08011183 	.word	0x08011183
 80110d4:	0801118f 	.word	0x0801118f
 80110d8:	08011179 	.word	0x08011179
 80110dc:	08011183 	.word	0x08011183
 80110e0:	0801119d 	.word	0x0801119d
 80110e4:	0801119d 	.word	0x0801119d
 80110e8:	0801119d 	.word	0x0801119d
 80110ec:	08011179 	.word	0x08011179
 80110f0:	08011179 	.word	0x08011179
 80110f4:	0801119d 	.word	0x0801119d
 80110f8:	0801119d 	.word	0x0801119d
 80110fc:	08011183 	.word	0x08011183
 8011100:	08011183 	.word	0x08011183
 8011104:	0801119d 	.word	0x0801119d
 8011108:	0801119d 	.word	0x0801119d
 801110c:	0801119d 	.word	0x0801119d
 8011110:	0801119d 	.word	0x0801119d
 8011114:	0801119d 	.word	0x0801119d
 8011118:	0801119d 	.word	0x0801119d
 801111c:	0801119d 	.word	0x0801119d
 8011120:	0801119d 	.word	0x0801119d
 8011124:	0801119d 	.word	0x0801119d
 8011128:	0801119d 	.word	0x0801119d
 801112c:	0801119d 	.word	0x0801119d
 8011130:	0801119d 	.word	0x0801119d
 8011134:	0801119d 	.word	0x0801119d
 8011138:	0801119d 	.word	0x0801119d
 801113c:	0801119d 	.word	0x0801119d
 8011140:	0801119d 	.word	0x0801119d
 8011144:	0801119d 	.word	0x0801119d
 8011148:	0801119d 	.word	0x0801119d
 801114c:	0801119d 	.word	0x0801119d
 8011150:	0801119d 	.word	0x0801119d
 8011154:	0801119d 	.word	0x0801119d
 8011158:	0801119d 	.word	0x0801119d
 801115c:	08011173 	.word	0x08011173
 8011160:	08011173 	.word	0x08011173
 8011164:	2301      	movs	r3, #1
 8011166:	4c12      	ldr	r4, [pc, #72]	@ (80111b0 <nema_bind_dst_tex+0x1e4>)
 8011168:	4618      	mov	r0, r3
 801116a:	7023      	strb	r3, [r4, #0]
 801116c:	f000 ff5a 	bl	8012024 <nema_enable_tiling_2x2>
 8011170:	e74e      	b.n	8011010 <nema_bind_dst_tex+0x44>
 8011172:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8011176:	e734      	b.n	8010fe2 <nema_bind_dst_tex+0x16>
 8011178:	0073      	lsls	r3, r6, #1
 801117a:	1ddd      	adds	r5, r3, #7
 801117c:	d404      	bmi.n	8011188 <nema_bind_dst_tex+0x1bc>
 801117e:	10ed      	asrs	r5, r5, #3
 8011180:	e72f      	b.n	8010fe2 <nema_bind_dst_tex+0x16>
 8011182:	00b3      	lsls	r3, r6, #2
 8011184:	1ddd      	adds	r5, r3, #7
 8011186:	d5fa      	bpl.n	801117e <nema_bind_dst_tex+0x1b2>
 8011188:	f103 050e 	add.w	r5, r3, #14
 801118c:	e7f7      	b.n	801117e <nema_bind_dst_tex+0x1b2>
 801118e:	1df5      	adds	r5, r6, #7
 8011190:	d5f5      	bpl.n	801117e <nema_bind_dst_tex+0x1b2>
 8011192:	f106 050e 	add.w	r5, r6, #14
 8011196:	e7f2      	b.n	801117e <nema_bind_dst_tex+0x1b2>
 8011198:	0075      	lsls	r5, r6, #1
 801119a:	e733      	b.n	8011004 <nema_bind_dst_tex+0x38>
 801119c:	1f13      	subs	r3, r2, #4
 801119e:	2b49      	cmp	r3, #73	@ 0x49
 80111a0:	bf8e      	itee	hi
 80111a2:	2504      	movhi	r5, #4
 80111a4:	4903      	ldrls	r1, [pc, #12]	@ (80111b4 <nema_bind_dst_tex+0x1e8>)
 80111a6:	56cd      	ldrsbls	r5, [r1, r3]
 80111a8:	fb05 f506 	mul.w	r5, r5, r6
 80111ac:	e719      	b.n	8010fe2 <nema_bind_dst_tex+0x16>
 80111ae:	bf00      	nop
 80111b0:	20000064 	.word	0x20000064
 80111b4:	08035cb4 	.word	0x08035cb4

080111b8 <nema_bind_lut_tex>:
 80111b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111bc:	f1a3 040b 	sub.w	r4, r3, #11
 80111c0:	2c2a      	cmp	r4, #42	@ 0x2a
 80111c2:	469a      	mov	sl, r3
 80111c4:	4680      	mov	r8, r0
 80111c6:	460e      	mov	r6, r1
 80111c8:	4617      	mov	r7, r2
 80111ca:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80111ce:	f89d 502c 	ldrb.w	r5, [sp, #44]	@ 0x2c
 80111d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80111d4:	d84a      	bhi.n	801126c <nema_bind_lut_tex+0xb4>
 80111d6:	4a27      	ldr	r2, [pc, #156]	@ (8011274 <nema_bind_lut_tex+0xbc>)
 80111d8:	f832 b014 	ldrh.w	fp, [r2, r4, lsl #1]
 80111dc:	465a      	mov	r2, fp
 80111de:	2101      	movs	r1, #1
 80111e0:	4c25      	ldr	r4, [pc, #148]	@ (8011278 <nema_bind_lut_tex+0xc0>)
 80111e2:	061b      	lsls	r3, r3, #24
 80111e4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80111e8:	6663      	str	r3, [r4, #100]	@ 0x64
 80111ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80111ec:	2003      	movs	r0, #3
 80111ee:	e9c4 3216 	strd	r3, r2, [r4, #88]	@ 0x58
 80111f2:	6621      	str	r1, [r4, #96]	@ 0x60
 80111f4:	66a1      	str	r1, [r4, #104]	@ 0x68
 80111f6:	f00c fd9d 	bl	801dd34 <nema_cl_get_space>
 80111fa:	b170      	cbz	r0, 801121a <nema_bind_lut_tex+0x62>
 80111fc:	2220      	movs	r2, #32
 80111fe:	f04f 0c24 	mov.w	ip, #36	@ 0x24
 8011202:	2128      	movs	r1, #40	@ 0x28
 8011204:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011206:	f8c0 c008 	str.w	ip, [r0, #8]
 801120a:	e9c0 2300 	strd	r2, r3, [r0]
 801120e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8011210:	f44b 3280 	orr.w	r2, fp, #65536	@ 0x10000
 8011214:	e9c0 3103 	strd	r3, r1, [r0, #12]
 8011218:	6142      	str	r2, [r0, #20]
 801121a:	f1b9 3fff 	cmp.w	r9, #4294967295
 801121e:	d106      	bne.n	801122e <nema_bind_lut_tex+0x76>
 8011220:	4632      	mov	r2, r6
 8011222:	4629      	mov	r1, r5
 8011224:	f00a 007f 	and.w	r0, sl, #127	@ 0x7f
 8011228:	f7ff fdf2 	bl	8010e10 <nema_stride_size>
 801122c:	4681      	mov	r9, r0
 801122e:	2201      	movs	r2, #1
 8011230:	042d      	lsls	r5, r5, #16
 8011232:	ea45 630a 	orr.w	r3, r5, sl, lsl #24
 8011236:	fa1f f989 	uxth.w	r9, r9
 801123a:	ea43 0309 	orr.w	r3, r3, r9
 801123e:	2003      	movs	r0, #3
 8011240:	6523      	str	r3, [r4, #80]	@ 0x50
 8011242:	e9c4 8611 	strd	r8, r6, [r4, #68]	@ 0x44
 8011246:	64e7      	str	r7, [r4, #76]	@ 0x4c
 8011248:	6562      	str	r2, [r4, #84]	@ 0x54
 801124a:	f00c fd73 	bl	801dd34 <nema_cl_get_space>
 801124e:	b158      	cbz	r0, 8011268 <nema_bind_lut_tex+0xb0>
 8011250:	2110      	movs	r1, #16
 8011252:	2214      	movs	r2, #20
 8011254:	2318      	movs	r3, #24
 8011256:	e9c0 1800 	strd	r1, r8, [r0]
 801125a:	6082      	str	r2, [r0, #8]
 801125c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801125e:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8011262:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011266:	6146      	str	r6, [r0, #20]
 8011268:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801126c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8011270:	4693      	mov	fp, r2
 8011272:	e7b4      	b.n	80111de <nema_bind_lut_tex+0x26>
 8011274:	08035d00 	.word	0x08035d00
 8011278:	20000064 	.word	0x20000064

0801127c <nema_set_gradient>:
 801127c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011280:	ed2d 8b0c 	vpush	{d8-d13}
 8011284:	eeb0 da60 	vmov.f32	s26, s1
 8011288:	b08d      	sub	sp, #52	@ 0x34
 801128a:	eef0 ca41 	vmov.f32	s25, s2
 801128e:	eeb0 ca61 	vmov.f32	s24, s3
 8011292:	eef0 ba42 	vmov.f32	s23, s4
 8011296:	eeb0 ba62 	vmov.f32	s22, s5
 801129a:	eef0 aa43 	vmov.f32	s21, s6
 801129e:	eeb0 aa63 	vmov.f32	s20, s7
 80112a2:	eef0 9a44 	vmov.f32	s19, s8
 80112a6:	eeb0 9a64 	vmov.f32	s18, s9
 80112aa:	eef0 8a45 	vmov.f32	s17, s10
 80112ae:	eeb0 8a65 	vmov.f32	s16, s11
 80112b2:	f000 fb25 	bl	8011900 <nema_f2fx>
 80112b6:	eeb0 0a4d 	vmov.f32	s0, s26
 80112ba:	4604      	mov	r4, r0
 80112bc:	f000 fb20 	bl	8011900 <nema_f2fx>
 80112c0:	eeb0 0a6c 	vmov.f32	s0, s25
 80112c4:	4605      	mov	r5, r0
 80112c6:	f000 fb1b 	bl	8011900 <nema_f2fx>
 80112ca:	eeb0 0a4c 	vmov.f32	s0, s24
 80112ce:	4606      	mov	r6, r0
 80112d0:	f000 fb16 	bl	8011900 <nema_f2fx>
 80112d4:	eeb0 0a6b 	vmov.f32	s0, s23
 80112d8:	4607      	mov	r7, r0
 80112da:	f000 fb11 	bl	8011900 <nema_f2fx>
 80112de:	eeb0 0a4b 	vmov.f32	s0, s22
 80112e2:	900b      	str	r0, [sp, #44]	@ 0x2c
 80112e4:	f000 fb0c 	bl	8011900 <nema_f2fx>
 80112e8:	eeb0 0a6a 	vmov.f32	s0, s21
 80112ec:	4680      	mov	r8, r0
 80112ee:	f000 fb07 	bl	8011900 <nema_f2fx>
 80112f2:	eeb0 0a4a 	vmov.f32	s0, s20
 80112f6:	4681      	mov	r9, r0
 80112f8:	f000 fb02 	bl	8011900 <nema_f2fx>
 80112fc:	eeb0 0a69 	vmov.f32	s0, s19
 8011300:	4682      	mov	sl, r0
 8011302:	f000 fafd 	bl	8011900 <nema_f2fx>
 8011306:	eeb0 0a49 	vmov.f32	s0, s18
 801130a:	4683      	mov	fp, r0
 801130c:	f000 faf8 	bl	8011900 <nema_f2fx>
 8011310:	eeb0 0a68 	vmov.f32	s0, s17
 8011314:	900a      	str	r0, [sp, #40]	@ 0x28
 8011316:	f000 faf3 	bl	8011900 <nema_f2fx>
 801131a:	eeb0 0a48 	vmov.f32	s0, s16
 801131e:	9009      	str	r0, [sp, #36]	@ 0x24
 8011320:	f000 faee 	bl	8011900 <nema_f2fx>
 8011324:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011326:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011328:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801132a:	9100      	str	r1, [sp, #0]
 801132c:	9007      	str	r0, [sp, #28]
 801132e:	9206      	str	r2, [sp, #24]
 8011330:	e9cd b304 	strd	fp, r3, [sp, #16]
 8011334:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 8011338:	f8cd 8004 	str.w	r8, [sp, #4]
 801133c:	463b      	mov	r3, r7
 801133e:	4632      	mov	r2, r6
 8011340:	4629      	mov	r1, r5
 8011342:	4620      	mov	r0, r4
 8011344:	f000 ffe2 	bl	801230c <nema_set_gradient_fx>
 8011348:	b00d      	add	sp, #52	@ 0x34
 801134a:	ecbd 8b0c 	vpop	{d8-d13}
 801134e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011352:	bf00      	nop

08011354 <nema_fill_rect>:
 8011354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011358:	4604      	mov	r4, r0
 801135a:	460d      	mov	r5, r1
 801135c:	4616      	mov	r6, r2
 801135e:	461f      	mov	r7, r3
 8011360:	9806      	ldr	r0, [sp, #24]
 8011362:	f001 f81f 	bl	80123a4 <nema_set_raster_color>
 8011366:	463b      	mov	r3, r7
 8011368:	4632      	mov	r2, r6
 801136a:	4629      	mov	r1, r5
 801136c:	4620      	mov	r0, r4
 801136e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011372:	f001 b859 	b.w	8012428 <nema_raster_rect>
 8011376:	bf00      	nop

08011378 <nema_blit>:
 8011378:	ee07 0a90 	vmov	s15, r0
 801137c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011380:	ee07 1a90 	vmov	s15, r1
 8011384:	b500      	push	{lr}
 8011386:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801138a:	b083      	sub	sp, #12
 801138c:	e9cd 0100 	strd	r0, r1, [sp]
 8011390:	f000 ff56 	bl	8012240 <nema_set_matrix_translate>
 8011394:	e9dd 0100 	ldrd	r0, r1, [sp]
 8011398:	4a03      	ldr	r2, [pc, #12]	@ (80113a8 <nema_blit+0x30>)
 801139a:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 801139e:	b003      	add	sp, #12
 80113a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80113a4:	f001 b840 	b.w	8012428 <nema_raster_rect>
 80113a8:	20000064 	.word	0x20000064

080113ac <nema_blit_rotate>:
 80113ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113ae:	2600      	movs	r6, #0
 80113b0:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 80113b4:	4b68      	ldr	r3, [pc, #416]	@ (8011558 <nema_blit_rotate+0x1ac>)
 80113b6:	b08b      	sub	sp, #44	@ 0x2c
 80113b8:	3a01      	subs	r2, #1
 80113ba:	9607      	str	r6, [sp, #28]
 80113bc:	9608      	str	r6, [sp, #32]
 80113be:	9709      	str	r7, [sp, #36]	@ 0x24
 80113c0:	4604      	mov	r4, r0
 80113c2:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 80113c6:	460d      	mov	r5, r1
 80113c8:	2a0e      	cmp	r2, #14
 80113ca:	f200 80b0 	bhi.w	801152e <nema_blit_rotate+0x182>
 80113ce:	e8df f002 	tbb	[pc, r2]
 80113d2:	4730      	.short	0x4730
 80113d4:	9a836f58 	.word	0x9a836f58
 80113d8:	6f089a08 	.word	0x6f089a08
 80113dc:	ae584783 	.word	0xae584783
 80113e0:	30          	.byte	0x30
 80113e1:	00          	.byte	0x00
 80113e2:	1970      	adds	r0, r6, r5
 80113e4:	ee07 0a10 	vmov	s14, r0
 80113e8:	1938      	adds	r0, r7, r4
 80113ea:	4631      	mov	r1, r6
 80113ec:	ee07 0a90 	vmov	s15, r0
 80113f0:	2200      	movs	r2, #0
 80113f2:	463e      	mov	r6, r7
 80113f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80113fc:	460f      	mov	r7, r1
 80113fe:	4b57      	ldr	r3, [pc, #348]	@ (801155c <nema_blit_rotate+0x1b0>)
 8011400:	9201      	str	r2, [sp, #4]
 8011402:	9205      	str	r2, [sp, #20]
 8011404:	9302      	str	r3, [sp, #8]
 8011406:	9304      	str	r3, [sp, #16]
 8011408:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8011560 <nema_blit_rotate+0x1b4>
 801140c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8011410:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011414:	a801      	add	r0, sp, #4
 8011416:	ed8d 7a03 	vstr	s14, [sp, #12]
 801141a:	edcd 7a06 	vstr	s15, [sp, #24]
 801141e:	f000 fe55 	bl	80120cc <nema_set_matrix>
 8011422:	463b      	mov	r3, r7
 8011424:	4632      	mov	r2, r6
 8011426:	4629      	mov	r1, r5
 8011428:	4620      	mov	r0, r4
 801142a:	f000 fffd 	bl	8012428 <nema_raster_rect>
 801142e:	b00b      	add	sp, #44	@ 0x2c
 8011430:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011432:	ee07 4a90 	vmov	s15, r4
 8011436:	4630      	mov	r0, r6
 8011438:	442e      	add	r6, r5
 801143a:	2300      	movs	r3, #0
 801143c:	ee07 6a10 	vmov	s14, r6
 8011440:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011444:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011448:	4944      	ldr	r1, [pc, #272]	@ (801155c <nema_blit_rotate+0x1b0>)
 801144a:	463e      	mov	r6, r7
 801144c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011450:	9301      	str	r3, [sp, #4]
 8011452:	4607      	mov	r7, r0
 8011454:	9305      	str	r3, [sp, #20]
 8011456:	9102      	str	r1, [sp, #8]
 8011458:	9204      	str	r2, [sp, #16]
 801145a:	eef1 7a67 	vneg.f32	s15, s15
 801145e:	e7d3      	b.n	8011408 <nema_blit_rotate+0x5c>
 8011460:	4b3e      	ldr	r3, [pc, #248]	@ (801155c <nema_blit_rotate+0x1b0>)
 8011462:	2200      	movs	r2, #0
 8011464:	9301      	str	r3, [sp, #4]
 8011466:	9305      	str	r3, [sp, #20]
 8011468:	1833      	adds	r3, r6, r0
 801146a:	ee07 3a90 	vmov	s15, r3
 801146e:	1878      	adds	r0, r7, r1
 8011470:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011474:	ee07 0a90 	vmov	s15, r0
 8011478:	9202      	str	r2, [sp, #8]
 801147a:	9204      	str	r2, [sp, #16]
 801147c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011480:	e7c2      	b.n	8011408 <nema_blit_rotate+0x5c>
 8011482:	ee07 5a10 	vmov	s14, r5
 8011486:	4630      	mov	r0, r6
 8011488:	193e      	adds	r6, r7, r4
 801148a:	2300      	movs	r3, #0
 801148c:	ee07 6a90 	vmov	s15, r6
 8011490:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011494:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011498:	4a30      	ldr	r2, [pc, #192]	@ (801155c <nema_blit_rotate+0x1b0>)
 801149a:	463e      	mov	r6, r7
 801149c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114a0:	4607      	mov	r7, r0
 80114a2:	9301      	str	r3, [sp, #4]
 80114a4:	9305      	str	r3, [sp, #20]
 80114a6:	9102      	str	r1, [sp, #8]
 80114a8:	eeb1 7a47 	vneg.f32	s14, s14
 80114ac:	9204      	str	r2, [sp, #16]
 80114ae:	e7ab      	b.n	8011408 <nema_blit_rotate+0x5c>
 80114b0:	ee07 4a90 	vmov	s15, r4
 80114b4:	1978      	adds	r0, r7, r5
 80114b6:	2300      	movs	r3, #0
 80114b8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80114bc:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 80114c0:	ee07 0a90 	vmov	s15, r0
 80114c4:	4a25      	ldr	r2, [pc, #148]	@ (801155c <nema_blit_rotate+0x1b0>)
 80114c6:	9101      	str	r1, [sp, #4]
 80114c8:	9302      	str	r3, [sp, #8]
 80114ca:	9304      	str	r3, [sp, #16]
 80114cc:	eeb1 7a47 	vneg.f32	s14, s14
 80114d0:	9205      	str	r2, [sp, #20]
 80114d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114d6:	e797      	b.n	8011408 <nema_blit_rotate+0x5c>
 80114d8:	ee07 5a90 	vmov	s15, r5
 80114dc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80114e0:	ee07 0a90 	vmov	s15, r0
 80114e4:	4631      	mov	r1, r6
 80114e6:	2200      	movs	r2, #0
 80114e8:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80114ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114f0:	463e      	mov	r6, r7
 80114f2:	eeb1 7a47 	vneg.f32	s14, s14
 80114f6:	460f      	mov	r7, r1
 80114f8:	eef1 7a67 	vneg.f32	s15, s15
 80114fc:	9201      	str	r2, [sp, #4]
 80114fe:	9205      	str	r2, [sp, #20]
 8011500:	9302      	str	r3, [sp, #8]
 8011502:	9304      	str	r3, [sp, #16]
 8011504:	e780      	b.n	8011408 <nema_blit_rotate+0x5c>
 8011506:	ee07 5a90 	vmov	s15, r5
 801150a:	1830      	adds	r0, r6, r0
 801150c:	2300      	movs	r3, #0
 801150e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011512:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011516:	ee07 0a10 	vmov	s14, r0
 801151a:	4910      	ldr	r1, [pc, #64]	@ (801155c <nema_blit_rotate+0x1b0>)
 801151c:	9302      	str	r3, [sp, #8]
 801151e:	9101      	str	r1, [sp, #4]
 8011520:	9304      	str	r3, [sp, #16]
 8011522:	9205      	str	r2, [sp, #20]
 8011524:	eef1 7a67 	vneg.f32	s15, s15
 8011528:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801152c:	e76c      	b.n	8011408 <nema_blit_rotate+0x5c>
 801152e:	ee07 0a90 	vmov	s15, r0
 8011532:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011536:	ee07 1a90 	vmov	s15, r1
 801153a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801153e:	2300      	movs	r3, #0
 8011540:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011544:	9201      	str	r2, [sp, #4]
 8011546:	9205      	str	r2, [sp, #20]
 8011548:	9302      	str	r3, [sp, #8]
 801154a:	9304      	str	r3, [sp, #16]
 801154c:	eeb1 7a47 	vneg.f32	s14, s14
 8011550:	eef1 7a67 	vneg.f32	s15, s15
 8011554:	e758      	b.n	8011408 <nema_blit_rotate+0x5c>
 8011556:	bf00      	nop
 8011558:	20000064 	.word	0x20000064
 801155c:	bf800000 	.word	0xbf800000
 8011560:	00000000 	.word	0x00000000

08011564 <nema_blit_tri_fit>:
 8011564:	2803      	cmp	r0, #3
 8011566:	d801      	bhi.n	801156c <nema_blit_tri_fit+0x8>
 8011568:	2903      	cmp	r1, #3
 801156a:	d900      	bls.n	801156e <nema_blit_tri_fit+0xa>
 801156c:	4770      	bx	lr
 801156e:	2a03      	cmp	r2, #3
 8011570:	d8fc      	bhi.n	801156c <nema_blit_tri_fit+0x8>
 8011572:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011576:	460c      	mov	r4, r1
 8011578:	493b      	ldr	r1, [pc, #236]	@ (8011668 <nema_blit_tri_fit+0x104>)
 801157a:	4603      	mov	r3, r0
 801157c:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 8011580:	ee07 0a90 	vmov	s15, r0
 8011584:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011588:	ee07 1a90 	vmov	s15, r1
 801158c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011590:	b08a      	sub	sp, #40	@ 0x28
 8011592:	f04f 0c00 	mov.w	ip, #0
 8011596:	edcd 7a08 	vstr	s15, [sp, #32]
 801159a:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801159e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80115a2:	ed8d 7a03 	vstr	s14, [sp, #12]
 80115a6:	ed8d 7a04 	vstr	s14, [sp, #16]
 80115aa:	ee12 8a10 	vmov	r8, s4
 80115ae:	ee11 9a90 	vmov	r9, s3
 80115b2:	ee11 aa10 	vmov	sl, s2
 80115b6:	ee10 6a10 	vmov	r6, s0
 80115ba:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 80115be:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 80115c2:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 80115c6:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 80115ca:	f8cd c008 	str.w	ip, [sp, #8]
 80115ce:	f8cd c014 	str.w	ip, [sp, #20]
 80115d2:	f8cd c018 	str.w	ip, [sp, #24]
 80115d6:	f8cd c01c 	str.w	ip, [sp, #28]
 80115da:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 80115de:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 80115e2:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 80115e6:	ed12 7a04 	vldr	s14, [r2, #-16]
 80115ea:	ed54 4a04 	vldr	s9, [r4, #-16]
 80115ee:	ed13 2a04 	vldr	s4, [r3, #-16]
 80115f2:	eef0 5a62 	vmov.f32	s11, s5
 80115f6:	ee05 8a10 	vmov	s10, r8
 80115fa:	ee03 9a10 	vmov	s6, r9
 80115fe:	eef0 3a46 	vmov.f32	s7, s12
 8011602:	eeb0 1a46 	vmov.f32	s2, s12
 8011606:	ee12 7a90 	vmov	r7, s5
 801160a:	ee02 aa90 	vmov	s5, sl
 801160e:	ee10 5a90 	vmov	r5, s1
 8011612:	f000 f8d1 	bl	80117b8 <nema_interpolate_tx_ty>
 8011616:	ee00 6a10 	vmov	s0, r6
 801161a:	f000 f971 	bl	8011900 <nema_f2fx>
 801161e:	ee00 5a10 	vmov	s0, r5
 8011622:	4604      	mov	r4, r0
 8011624:	f000 f96c 	bl	8011900 <nema_f2fx>
 8011628:	ee00 aa10 	vmov	s0, sl
 801162c:	4605      	mov	r5, r0
 801162e:	f000 f967 	bl	8011900 <nema_f2fx>
 8011632:	ee00 9a10 	vmov	s0, r9
 8011636:	4606      	mov	r6, r0
 8011638:	f000 f962 	bl	8011900 <nema_f2fx>
 801163c:	ee00 8a10 	vmov	s0, r8
 8011640:	4681      	mov	r9, r0
 8011642:	f000 f95d 	bl	8011900 <nema_f2fx>
 8011646:	ee00 7a10 	vmov	s0, r7
 801164a:	4680      	mov	r8, r0
 801164c:	f000 f958 	bl	8011900 <nema_f2fx>
 8011650:	464b      	mov	r3, r9
 8011652:	e9cd 8000 	strd	r8, r0, [sp]
 8011656:	4632      	mov	r2, r6
 8011658:	4629      	mov	r1, r5
 801165a:	4620      	mov	r0, r4
 801165c:	f000 fea8 	bl	80123b0 <nema_raster_triangle_fx>
 8011660:	b00a      	add	sp, #40	@ 0x28
 8011662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011666:	bf00      	nop
 8011668:	20000064 	.word	0x20000064

0801166c <nema_blit_quad_fit>:
 801166c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011670:	ed2d 8b08 	vpush	{d8-d11}
 8011674:	4b2b      	ldr	r3, [pc, #172]	@ (8011724 <nema_blit_quad_fit+0xb8>)
 8011676:	b08e      	sub	sp, #56	@ 0x38
 8011678:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 801167c:	aa05      	add	r2, sp, #20
 801167e:	eef0 ba40 	vmov.f32	s23, s0
 8011682:	eeb0 ba60 	vmov.f32	s22, s1
 8011686:	eef0 aa41 	vmov.f32	s21, s2
 801168a:	eeb0 aa61 	vmov.f32	s20, s3
 801168e:	eef0 9a42 	vmov.f32	s19, s4
 8011692:	eeb0 9a62 	vmov.f32	s18, s5
 8011696:	eef0 8a43 	vmov.f32	s17, s6
 801169a:	eeb0 8a63 	vmov.f32	s16, s7
 801169e:	f000 fb33 	bl	8011d08 <nema_mat3x3_quad_to_rect>
 80116a2:	b120      	cbz	r0, 80116ae <nema_blit_quad_fit+0x42>
 80116a4:	b00e      	add	sp, #56	@ 0x38
 80116a6:	ecbd 8b08 	vpop	{d8-d11}
 80116aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80116ae:	a805      	add	r0, sp, #20
 80116b0:	f000 fd0c 	bl	80120cc <nema_set_matrix>
 80116b4:	eeb0 0a6b 	vmov.f32	s0, s23
 80116b8:	f000 f922 	bl	8011900 <nema_f2fx>
 80116bc:	eeb0 0a4b 	vmov.f32	s0, s22
 80116c0:	4604      	mov	r4, r0
 80116c2:	f000 f91d 	bl	8011900 <nema_f2fx>
 80116c6:	eeb0 0a6a 	vmov.f32	s0, s21
 80116ca:	4605      	mov	r5, r0
 80116cc:	f000 f918 	bl	8011900 <nema_f2fx>
 80116d0:	eeb0 0a4a 	vmov.f32	s0, s20
 80116d4:	4606      	mov	r6, r0
 80116d6:	f000 f913 	bl	8011900 <nema_f2fx>
 80116da:	eeb0 0a69 	vmov.f32	s0, s19
 80116de:	4607      	mov	r7, r0
 80116e0:	f000 f90e 	bl	8011900 <nema_f2fx>
 80116e4:	eeb0 0a49 	vmov.f32	s0, s18
 80116e8:	4682      	mov	sl, r0
 80116ea:	f000 f909 	bl	8011900 <nema_f2fx>
 80116ee:	eeb0 0a68 	vmov.f32	s0, s17
 80116f2:	4680      	mov	r8, r0
 80116f4:	f000 f904 	bl	8011900 <nema_f2fx>
 80116f8:	eeb0 0a48 	vmov.f32	s0, s16
 80116fc:	4681      	mov	r9, r0
 80116fe:	f000 f8ff 	bl	8011900 <nema_f2fx>
 8011702:	f8cd a000 	str.w	sl, [sp]
 8011706:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801170a:	f8cd 8004 	str.w	r8, [sp, #4]
 801170e:	463b      	mov	r3, r7
 8011710:	4632      	mov	r2, r6
 8011712:	4629      	mov	r1, r5
 8011714:	4620      	mov	r0, r4
 8011716:	f000 feb1 	bl	801247c <nema_raster_quad_fx>
 801171a:	b00e      	add	sp, #56	@ 0x38
 801171c:	ecbd 8b08 	vpop	{d8-d11}
 8011720:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011724:	20000064 	.word	0x20000064

08011728 <nema_interpolate_rect_colors>:
 8011728:	b410      	push	{r4}
 801172a:	9803      	ldr	r0, [sp, #12]
 801172c:	e9dd 1401 	ldrd	r1, r4, [sp, #4]
 8011730:	edd0 2a00 	vldr	s5, [r0]
 8011734:	edd4 7a00 	vldr	s15, [r4]
 8011738:	ed91 0a00 	vldr	s0, [r1]
 801173c:	ee72 2ae7 	vsub.f32	s5, s5, s15
 8011740:	ee37 2ac0 	vsub.f32	s4, s15, s0
 8011744:	ee07 3a90 	vmov	s15, r3
 8011748:	ed94 3a01 	vldr	s6, [r4, #4]
 801174c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011750:	ed94 4a02 	vldr	s8, [r4, #8]
 8011754:	ed94 5a03 	vldr	s10, [r4, #12]
 8011758:	edd0 3a01 	vldr	s7, [r0, #4]
 801175c:	edd1 0a01 	vldr	s1, [r1, #4]
 8011760:	edd0 4a02 	vldr	s9, [r0, #8]
 8011764:	edd0 5a03 	vldr	s11, [r0, #12]
 8011768:	edd1 1a03 	vldr	s3, [r1, #12]
 801176c:	ed91 1a02 	vldr	s2, [r1, #8]
 8011770:	ee07 2a90 	vmov	s15, r2
 8011774:	ee73 3ac3 	vsub.f32	s7, s7, s6
 8011778:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801177c:	ee74 4ac4 	vsub.f32	s9, s9, s8
 8011780:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011784:	ee33 3a60 	vsub.f32	s6, s6, s1
 8011788:	ee35 5a61 	vsub.f32	s10, s10, s3
 801178c:	ee34 4a41 	vsub.f32	s8, s8, s2
 8011790:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011794:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011798:	eec3 3a87 	vdiv.f32	s7, s7, s14
 801179c:	ee83 3a27 	vdiv.f32	s6, s6, s15
 80117a0:	eec4 4a87 	vdiv.f32	s9, s9, s14
 80117a4:	eec5 5a87 	vdiv.f32	s11, s11, s14
 80117a8:	ee85 5a27 	vdiv.f32	s10, s10, s15
 80117ac:	ee84 4a27 	vdiv.f32	s8, s8, s15
 80117b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80117b4:	f7ff bd62 	b.w	801127c <nema_set_gradient>

080117b8 <nema_interpolate_tx_ty>:
 80117b8:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 80117bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117c0:	d407      	bmi.n	80117d2 <nema_interpolate_tx_ty+0x1a>
 80117c2:	eddf 7a40 	vldr	s15, [pc, #256]	@ 80118c4 <nema_interpolate_tx_ty+0x10c>
 80117c6:	eeb4 1ae7 	vcmpe.f32	s2, s15
 80117ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117ce:	d807      	bhi.n	80117e0 <nema_interpolate_tx_ty+0x28>
 80117d0:	4770      	bx	lr
 80117d2:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 80118c8 <nema_interpolate_tx_ty+0x110>
 80117d6:	eeb4 1ae7 	vcmpe.f32	s2, s15
 80117da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117de:	daf7      	bge.n	80117d0 <nema_interpolate_tx_ty+0x18>
 80117e0:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 80117e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117e8:	d45b      	bmi.n	80118a2 <nema_interpolate_tx_ty+0xea>
 80117ea:	eddf 7a36 	vldr	s15, [pc, #216]	@ 80118c4 <nema_interpolate_tx_ty+0x10c>
 80117ee:	eef4 3ae7 	vcmpe.f32	s7, s15
 80117f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117f6:	d9eb      	bls.n	80117d0 <nema_interpolate_tx_ty+0x18>
 80117f8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80117fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011800:	d457      	bmi.n	80118b2 <nema_interpolate_tx_ty+0xfa>
 8011802:	eddf 7a30 	vldr	s15, [pc, #192]	@ 80118c4 <nema_interpolate_tx_ty+0x10c>
 8011806:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801180a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801180e:	d9df      	bls.n	80117d0 <nema_interpolate_tx_ty+0x18>
 8011810:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8011814:	b570      	push	{r4, r5, r6, lr}
 8011816:	ee15 3a90 	vmov	r3, s11
 801181a:	ee13 2a10 	vmov	r2, s6
 801181e:	eec7 5a86 	vdiv.f32	s11, s15, s12
 8011822:	ee87 3a81 	vdiv.f32	s6, s15, s2
 8011826:	ee15 4a10 	vmov	r4, s10
 801182a:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 801182e:	ee63 1a21 	vmul.f32	s3, s6, s3
 8011832:	ee23 2a02 	vmul.f32	s4, s6, s4
 8011836:	ee25 4a04 	vmul.f32	s8, s10, s8
 801183a:	ee65 4a24 	vmul.f32	s9, s10, s9
 801183e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011842:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011846:	b092      	sub	sp, #72	@ 0x48
 8011848:	a809      	add	r0, sp, #36	@ 0x24
 801184a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 801184e:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 8011852:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 8011856:	920d      	str	r2, [sp, #52]	@ 0x34
 8011858:	930e      	str	r3, [sp, #56]	@ 0x38
 801185a:	edcd 1a00 	vstr	s3, [sp]
 801185e:	ed8d 2a03 	vstr	s4, [sp, #12]
 8011862:	ed8d 4a01 	vstr	s8, [sp, #4]
 8011866:	edcd 4a04 	vstr	s9, [sp, #16]
 801186a:	edcd 6a02 	vstr	s13, [sp, #8]
 801186e:	ed8d 7a05 	vstr	s14, [sp, #20]
 8011872:	ed8d 3a06 	vstr	s6, [sp, #24]
 8011876:	ed8d 5a07 	vstr	s10, [sp, #28]
 801187a:	edcd 5a08 	vstr	s11, [sp, #32]
 801187e:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8011882:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8011886:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801188a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801188c:	f000 f938 	bl	8011b00 <nema_mat3x3_adj>
 8011890:	a909      	add	r1, sp, #36	@ 0x24
 8011892:	4668      	mov	r0, sp
 8011894:	f000 f89e 	bl	80119d4 <nema_mat3x3_mul>
 8011898:	4668      	mov	r0, sp
 801189a:	f000 fc17 	bl	80120cc <nema_set_matrix>
 801189e:	b012      	add	sp, #72	@ 0x48
 80118a0:	bd70      	pop	{r4, r5, r6, pc}
 80118a2:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80118c8 <nema_interpolate_tx_ty+0x110>
 80118a6:	eef4 3ae7 	vcmpe.f32	s7, s15
 80118aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80118ae:	da8f      	bge.n	80117d0 <nema_interpolate_tx_ty+0x18>
 80118b0:	e7a2      	b.n	80117f8 <nema_interpolate_tx_ty+0x40>
 80118b2:	eddf 7a05 	vldr	s15, [pc, #20]	@ 80118c8 <nema_interpolate_tx_ty+0x110>
 80118b6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80118ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80118be:	da87      	bge.n	80117d0 <nema_interpolate_tx_ty+0x18>
 80118c0:	e7a6      	b.n	8011810 <nema_interpolate_tx_ty+0x58>
 80118c2:	bf00      	nop
 80118c4:	3727c5ac 	.word	0x3727c5ac
 80118c8:	b727c5ac 	.word	0xb727c5ac

080118cc <nema_sqrt>:
 80118cc:	ee10 2a10 	vmov	r2, s0
 80118d0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80118d4:	4b09      	ldr	r3, [pc, #36]	@ (80118fc <nema_sqrt+0x30>)
 80118d6:	ee20 7a07 	vmul.f32	s14, s0, s14
 80118da:	eba3 0352 	sub.w	r3, r3, r2, lsr #1
 80118de:	ee07 3a90 	vmov	s15, r3
 80118e2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80118e6:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 80118ea:	ee27 7a27 	vmul.f32	s14, s14, s15
 80118ee:	ee67 7a80 	vmul.f32	s15, s15, s0
 80118f2:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80118f6:	ee20 0a27 	vmul.f32	s0, s0, s15
 80118fa:	4770      	bx	lr
 80118fc:	5f3759df 	.word	0x5f3759df

08011900 <nema_f2fx>:
 8011900:	eddf 7a06 	vldr	s15, [pc, #24]	@ 801191c <nema_f2fx+0x1c>
 8011904:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011908:	ee20 0a27 	vmul.f32	s0, s0, s15
 801190c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8011910:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8011914:	ee17 0a90 	vmov	r0, s15
 8011918:	4770      	bx	lr
 801191a:	bf00      	nop
 801191c:	47800000 	.word	0x47800000

08011920 <nema_mat3x3_load_identity>:
 8011920:	2300      	movs	r3, #0
 8011922:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011926:	61c3      	str	r3, [r0, #28]
 8011928:	6202      	str	r2, [r0, #32]
 801192a:	6102      	str	r2, [r0, #16]
 801192c:	6002      	str	r2, [r0, #0]
 801192e:	6183      	str	r3, [r0, #24]
 8011930:	6143      	str	r3, [r0, #20]
 8011932:	60c3      	str	r3, [r0, #12]
 8011934:	6083      	str	r3, [r0, #8]
 8011936:	6043      	str	r3, [r0, #4]
 8011938:	4770      	bx	lr
 801193a:	bf00      	nop

0801193c <nema_mat3x3_copy>:
 801193c:	680b      	ldr	r3, [r1, #0]
 801193e:	6003      	str	r3, [r0, #0]
 8011940:	684b      	ldr	r3, [r1, #4]
 8011942:	6043      	str	r3, [r0, #4]
 8011944:	688b      	ldr	r3, [r1, #8]
 8011946:	6083      	str	r3, [r0, #8]
 8011948:	68cb      	ldr	r3, [r1, #12]
 801194a:	60c3      	str	r3, [r0, #12]
 801194c:	690b      	ldr	r3, [r1, #16]
 801194e:	6103      	str	r3, [r0, #16]
 8011950:	694b      	ldr	r3, [r1, #20]
 8011952:	6143      	str	r3, [r0, #20]
 8011954:	698b      	ldr	r3, [r1, #24]
 8011956:	6183      	str	r3, [r0, #24]
 8011958:	69cb      	ldr	r3, [r1, #28]
 801195a:	61c3      	str	r3, [r0, #28]
 801195c:	6a0b      	ldr	r3, [r1, #32]
 801195e:	6203      	str	r3, [r0, #32]
 8011960:	4770      	bx	lr
 8011962:	bf00      	nop

08011964 <nema_mat3x3_translate>:
 8011964:	edd0 6a06 	vldr	s13, [r0, #24]
 8011968:	ed90 7a07 	vldr	s14, [r0, #28]
 801196c:	edd0 7a08 	vldr	s15, [r0, #32]
 8011970:	ee26 3a80 	vmul.f32	s6, s13, s0
 8011974:	ee67 3a00 	vmul.f32	s7, s14, s0
 8011978:	ee66 6aa0 	vmul.f32	s13, s13, s1
 801197c:	ed90 4a00 	vldr	s8, [r0]
 8011980:	edd0 4a03 	vldr	s9, [r0, #12]
 8011984:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011988:	ed90 5a01 	vldr	s10, [r0, #4]
 801198c:	edd0 5a04 	vldr	s11, [r0, #16]
 8011990:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011994:	ed90 6a02 	vldr	s12, [r0, #8]
 8011998:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801199c:	edd0 0a05 	vldr	s1, [r0, #20]
 80119a0:	ee34 4a03 	vadd.f32	s8, s8, s6
 80119a4:	ee74 6aa6 	vadd.f32	s13, s9, s13
 80119a8:	ee35 5a23 	vadd.f32	s10, s10, s7
 80119ac:	ee35 7a87 	vadd.f32	s14, s11, s14
 80119b0:	ee36 0a00 	vadd.f32	s0, s12, s0
 80119b4:	ee70 7aa7 	vadd.f32	s15, s1, s15
 80119b8:	ed80 4a00 	vstr	s8, [r0]
 80119bc:	edc0 6a03 	vstr	s13, [r0, #12]
 80119c0:	ed80 5a01 	vstr	s10, [r0, #4]
 80119c4:	ed80 7a04 	vstr	s14, [r0, #16]
 80119c8:	ed80 0a02 	vstr	s0, [r0, #8]
 80119cc:	edc0 7a05 	vstr	s15, [r0, #20]
 80119d0:	4770      	bx	lr
 80119d2:	bf00      	nop

080119d4 <nema_mat3x3_mul>:
 80119d4:	edd1 4a01 	vldr	s9, [r1, #4]
 80119d8:	ed91 0a04 	vldr	s0, [r1, #16]
 80119dc:	edd1 0a05 	vldr	s1, [r1, #20]
 80119e0:	ed2d 8b0c 	vpush	{d8-d13}
 80119e4:	ed91 6a00 	vldr	s12, [r1]
 80119e8:	ed91 4a03 	vldr	s8, [r1, #12]
 80119ec:	ed91 aa02 	vldr	s20, [r1, #8]
 80119f0:	edd0 3a03 	vldr	s7, [r0, #12]
 80119f4:	ed90 8a04 	vldr	s16, [r0, #16]
 80119f8:	ed90 9a00 	vldr	s18, [r0]
 80119fc:	edd0 8a01 	vldr	s17, [r0, #4]
 8011a00:	edd0 9a06 	vldr	s19, [r0, #24]
 8011a04:	ed90 1a07 	vldr	s2, [r0, #28]
 8011a08:	edd1 aa06 	vldr	s21, [r1, #24]
 8011a0c:	edd1 6a07 	vldr	s13, [r1, #28]
 8011a10:	ed91 7a08 	vldr	s14, [r1, #32]
 8011a14:	ed90 5a02 	vldr	s10, [r0, #8]
 8011a18:	edd0 5a05 	vldr	s11, [r0, #20]
 8011a1c:	ee69 da06 	vmul.f32	s27, s18, s12
 8011a20:	ee29 da24 	vmul.f32	s26, s18, s9
 8011a24:	ee66 ca23 	vmul.f32	s25, s12, s7
 8011a28:	ee24 caa3 	vmul.f32	s24, s9, s7
 8011a2c:	ee68 1a84 	vmul.f32	s3, s17, s8
 8011a30:	ee29 9a0a 	vmul.f32	s18, s18, s20
 8011a34:	ee28 2a80 	vmul.f32	s4, s17, s0
 8011a38:	ee26 6a29 	vmul.f32	s12, s12, s19
 8011a3c:	ee64 2a08 	vmul.f32	s5, s8, s16
 8011a40:	ee6a ba23 	vmul.f32	s23, s20, s7
 8011a44:	ee24 baa9 	vmul.f32	s22, s9, s19
 8011a48:	ee20 3a08 	vmul.f32	s6, s0, s16
 8011a4c:	ee60 3a88 	vmul.f32	s7, s1, s16
 8011a50:	ee60 4a01 	vmul.f32	s9, s0, s2
 8011a54:	ee68 8aa0 	vmul.f32	s17, s17, s1
 8011a58:	ee24 4a01 	vmul.f32	s8, s8, s2
 8011a5c:	ee6a 7a29 	vmul.f32	s15, s20, s19
 8011a60:	ee20 1a81 	vmul.f32	s2, s1, s2
 8011a64:	edd0 0a08 	vldr	s1, [r0, #32]
 8011a68:	ee25 0a2a 	vmul.f32	s0, s10, s21
 8011a6c:	ee79 8a28 	vadd.f32	s17, s18, s17
 8011a70:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 8011a74:	ee25 9a26 	vmul.f32	s18, s10, s13
 8011a78:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 8011a7c:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8011a80:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 8011a84:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8011a88:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 8011a8c:	ee36 4a04 	vadd.f32	s8, s12, s8
 8011a90:	ee7b 4a24 	vadd.f32	s9, s22, s9
 8011a94:	ee77 7a81 	vadd.f32	s15, s15, s2
 8011a98:	ee25 5a07 	vmul.f32	s10, s10, s14
 8011a9c:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8011aa0:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 8011aa4:	ee67 5a25 	vmul.f32	s11, s14, s11
 8011aa8:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8011aac:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011ab0:	ee32 2a09 	vadd.f32	s4, s4, s18
 8011ab4:	ee38 5a85 	vadd.f32	s10, s17, s10
 8011ab8:	ee72 2a88 	vadd.f32	s5, s5, s16
 8011abc:	ee71 1a80 	vadd.f32	s3, s3, s0
 8011ac0:	ee33 3a01 	vadd.f32	s6, s6, s2
 8011ac4:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8011ac8:	ee34 6a06 	vadd.f32	s12, s8, s12
 8011acc:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011ad0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8011ad4:	edc0 1a00 	vstr	s3, [r0]
 8011ad8:	ed80 2a01 	vstr	s4, [r0, #4]
 8011adc:	ed80 5a02 	vstr	s10, [r0, #8]
 8011ae0:	edc0 2a03 	vstr	s5, [r0, #12]
 8011ae4:	ed80 3a04 	vstr	s6, [r0, #16]
 8011ae8:	edc0 5a05 	vstr	s11, [r0, #20]
 8011aec:	ed80 6a06 	vstr	s12, [r0, #24]
 8011af0:	edc0 6a07 	vstr	s13, [r0, #28]
 8011af4:	edc0 7a08 	vstr	s15, [r0, #32]
 8011af8:	ecbd 8b0c 	vpop	{d8-d13}
 8011afc:	4770      	bx	lr
 8011afe:	bf00      	nop

08011b00 <nema_mat3x3_adj>:
 8011b00:	edd0 3a03 	vldr	s7, [r0, #12]
 8011b04:	edd0 4a04 	vldr	s9, [r0, #16]
 8011b08:	ed90 6a08 	vldr	s12, [r0, #32]
 8011b0c:	ed90 5a07 	vldr	s10, [r0, #28]
 8011b10:	ed90 4a05 	vldr	s8, [r0, #20]
 8011b14:	edd0 7a00 	vldr	s15, [r0]
 8011b18:	edd0 6a02 	vldr	s13, [r0, #8]
 8011b1c:	edd0 5a01 	vldr	s11, [r0, #4]
 8011b20:	ed90 7a06 	vldr	s14, [r0, #24]
 8011b24:	ed2d 8b04 	vpush	{d8-d9}
 8011b28:	ee24 1a86 	vmul.f32	s2, s9, s12
 8011b2c:	ee25 9a04 	vmul.f32	s18, s10, s8
 8011b30:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011b34:	ee24 8aa6 	vmul.f32	s16, s9, s13
 8011b38:	ee65 1a26 	vmul.f32	s3, s10, s13
 8011b3c:	ee24 2a25 	vmul.f32	s4, s8, s11
 8011b40:	ee64 2a07 	vmul.f32	s5, s8, s14
 8011b44:	ee66 0a87 	vmul.f32	s1, s13, s14
 8011b48:	ee25 3a23 	vmul.f32	s6, s10, s7
 8011b4c:	ee24 4a27 	vmul.f32	s8, s8, s15
 8011b50:	ee26 0a23 	vmul.f32	s0, s12, s7
 8011b54:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8011b58:	ee26 6a27 	vmul.f32	s12, s12, s15
 8011b5c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011b60:	ee64 7aa7 	vmul.f32	s15, s9, s15
 8011b64:	ee64 4a87 	vmul.f32	s9, s9, s14
 8011b68:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011b6c:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011b70:	ee31 1a49 	vsub.f32	s2, s2, s18
 8011b74:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8011b78:	ee32 2a48 	vsub.f32	s4, s4, s16
 8011b7c:	ecbd 8b04 	vpop	{d8-d9}
 8011b80:	ee72 3ac0 	vsub.f32	s7, s5, s0
 8011b84:	ee36 6a60 	vsub.f32	s12, s12, s1
 8011b88:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8011b8c:	ee73 4a64 	vsub.f32	s9, s6, s9
 8011b90:	ee37 7a45 	vsub.f32	s14, s14, s10
 8011b94:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8011b98:	ed80 1a00 	vstr	s2, [r0]
 8011b9c:	edc0 1a01 	vstr	s3, [r0, #4]
 8011ba0:	ed80 2a02 	vstr	s4, [r0, #8]
 8011ba4:	edc0 3a03 	vstr	s7, [r0, #12]
 8011ba8:	ed80 6a04 	vstr	s12, [r0, #16]
 8011bac:	edc0 6a05 	vstr	s13, [r0, #20]
 8011bb0:	edc0 4a06 	vstr	s9, [r0, #24]
 8011bb4:	ed80 7a07 	vstr	s14, [r0, #28]
 8011bb8:	edc0 7a08 	vstr	s15, [r0, #32]
 8011bbc:	4770      	bx	lr
 8011bbe:	bf00      	nop

08011bc0 <nema_mat3x3_invert>:
 8011bc0:	ed90 6a08 	vldr	s12, [r0, #32]
 8011bc4:	edd0 2a04 	vldr	s5, [r0, #16]
 8011bc8:	ed90 3a05 	vldr	s6, [r0, #20]
 8011bcc:	ed90 2a07 	vldr	s4, [r0, #28]
 8011bd0:	edd0 4a03 	vldr	s9, [r0, #12]
 8011bd4:	edd0 6a06 	vldr	s13, [r0, #24]
 8011bd8:	ee63 7a02 	vmul.f32	s15, s6, s4
 8011bdc:	ee66 3a22 	vmul.f32	s7, s12, s5
 8011be0:	ee26 0a24 	vmul.f32	s0, s12, s9
 8011be4:	ee63 1a26 	vmul.f32	s3, s6, s13
 8011be8:	ee73 3ae7 	vsub.f32	s7, s7, s15
 8011bec:	ee22 7aa6 	vmul.f32	s14, s5, s13
 8011bf0:	edd0 7a00 	vldr	s15, [r0]
 8011bf4:	ee30 1a61 	vsub.f32	s2, s0, s3
 8011bf8:	edd0 5a01 	vldr	s11, [r0, #4]
 8011bfc:	ee22 4a24 	vmul.f32	s8, s4, s9
 8011c00:	ee21 1a25 	vmul.f32	s2, s2, s11
 8011c04:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011c08:	ee27 5aa3 	vmul.f32	s10, s15, s7
 8011c0c:	ed90 7a02 	vldr	s14, [r0, #8]
 8011c10:	ee35 5a41 	vsub.f32	s10, s10, s2
 8011c14:	ee27 1a04 	vmul.f32	s2, s14, s8
 8011c18:	ee35 5a01 	vadd.f32	s10, s10, s2
 8011c1c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8011c20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c24:	4603      	mov	r3, r0
 8011c26:	d45d      	bmi.n	8011ce4 <nema_mat3x3_invert+0x124>
 8011c28:	ed9f 1a35 	vldr	s2, [pc, #212]	@ 8011d00 <nema_mat3x3_invert+0x140>
 8011c2c:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011c30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c34:	bf94      	ite	ls
 8011c36:	2001      	movls	r0, #1
 8011c38:	2000      	movhi	r0, #0
 8011c3a:	2800      	cmp	r0, #0
 8011c3c:	d15c      	bne.n	8011cf8 <nema_mat3x3_invert+0x138>
 8011c3e:	ed2d 8b04 	vpush	{d8-d9}
 8011c42:	ee62 0a07 	vmul.f32	s1, s4, s14
 8011c46:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011c4a:	ee26 8a87 	vmul.f32	s16, s13, s14
 8011c4e:	ee23 1a25 	vmul.f32	s2, s6, s11
 8011c52:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8011c56:	ee27 2a82 	vmul.f32	s4, s15, s4
 8011c5a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8011c5e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011c62:	ee27 3a83 	vmul.f32	s6, s15, s6
 8011c66:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8011c6a:	ee62 2a87 	vmul.f32	s5, s5, s14
 8011c6e:	ee24 7a87 	vmul.f32	s14, s9, s14
 8011c72:	ee65 4aa4 	vmul.f32	s9, s11, s9
 8011c76:	ee36 6a48 	vsub.f32	s12, s12, s16
 8011c7a:	eec9 5a05 	vdiv.f32	s11, s18, s10
 8011c7e:	ee71 1ac0 	vsub.f32	s3, s3, s0
 8011c82:	ee30 5ae8 	vsub.f32	s10, s1, s17
 8011c86:	ee76 6ac2 	vsub.f32	s13, s13, s4
 8011c8a:	ee71 2a62 	vsub.f32	s5, s2, s5
 8011c8e:	ee37 7a43 	vsub.f32	s14, s14, s6
 8011c92:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8011c96:	ee63 3aa5 	vmul.f32	s7, s7, s11
 8011c9a:	ee61 1aa5 	vmul.f32	s3, s3, s11
 8011c9e:	ee24 4a25 	vmul.f32	s8, s8, s11
 8011ca2:	ee25 5a25 	vmul.f32	s10, s10, s11
 8011ca6:	ee26 6a25 	vmul.f32	s12, s12, s11
 8011caa:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8011cae:	ee62 2aa5 	vmul.f32	s5, s5, s11
 8011cb2:	ee27 7a25 	vmul.f32	s14, s14, s11
 8011cb6:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011cba:	edc3 3a00 	vstr	s7, [r3]
 8011cbe:	edc3 1a03 	vstr	s3, [r3, #12]
 8011cc2:	ed83 4a06 	vstr	s8, [r3, #24]
 8011cc6:	ed83 5a01 	vstr	s10, [r3, #4]
 8011cca:	ed83 6a04 	vstr	s12, [r3, #16]
 8011cce:	edc3 6a07 	vstr	s13, [r3, #28]
 8011cd2:	edc3 2a02 	vstr	s5, [r3, #8]
 8011cd6:	ed83 7a05 	vstr	s14, [r3, #20]
 8011cda:	edc3 7a08 	vstr	s15, [r3, #32]
 8011cde:	ecbd 8b04 	vpop	{d8-d9}
 8011ce2:	4770      	bx	lr
 8011ce4:	ed9f 1a07 	vldr	s2, [pc, #28]	@ 8011d04 <nema_mat3x3_invert+0x144>
 8011ce8:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011cec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cf0:	bfac      	ite	ge
 8011cf2:	2001      	movge	r0, #1
 8011cf4:	2000      	movlt	r0, #0
 8011cf6:	e7a0      	b.n	8011c3a <nema_mat3x3_invert+0x7a>
 8011cf8:	f04f 30ff 	mov.w	r0, #4294967295
 8011cfc:	4770      	bx	lr
 8011cfe:	bf00      	nop
 8011d00:	3727c5ac 	.word	0x3727c5ac
 8011d04:	b727c5ac 	.word	0xb727c5ac

08011d08 <nema_mat3x3_quad_to_rect>:
 8011d08:	ee70 6a41 	vsub.f32	s13, s0, s2
 8011d0c:	ee76 6a82 	vadd.f32	s13, s13, s4
 8011d10:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8011d14:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8011d18:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8011d1c:	ee36 6a22 	vadd.f32	s12, s12, s5
 8011d20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d24:	ed2d 8b06 	vpush	{d8-d10}
 8011d28:	ee36 6a63 	vsub.f32	s12, s12, s7
 8011d2c:	ee09 0a10 	vmov	s18, r0
 8011d30:	ee08 1a90 	vmov	s17, r1
 8011d34:	f100 812e 	bmi.w	8011f94 <nema_mat3x3_quad_to_rect+0x28c>
 8011d38:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8011fcc <nema_mat3x3_quad_to_rect+0x2c4>
 8011d3c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011d40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d44:	d80d      	bhi.n	8011d62 <nema_mat3x3_quad_to_rect+0x5a>
 8011d46:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011d4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d4e:	f100 80f7 	bmi.w	8011f40 <nema_mat3x3_quad_to_rect+0x238>
 8011d52:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 8011fcc <nema_mat3x3_quad_to_rect+0x2c4>
 8011d56:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011d5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d5e:	f240 80f7 	bls.w	8011f50 <nema_mat3x3_quad_to_rect+0x248>
 8011d62:	ee31 7a42 	vsub.f32	s14, s2, s4
 8011d66:	ee73 7ae2 	vsub.f32	s15, s7, s5
 8011d6a:	ee33 2a42 	vsub.f32	s4, s6, s4
 8011d6e:	ee71 2ae2 	vsub.f32	s5, s3, s5
 8011d72:	ee67 5a27 	vmul.f32	s11, s14, s15
 8011d76:	ee22 5a22 	vmul.f32	s10, s4, s5
 8011d7a:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011d7e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011d82:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8011d86:	ee26 7a07 	vmul.f32	s14, s12, s14
 8011d8a:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8011d8e:	ee26 6a02 	vmul.f32	s12, s12, s4
 8011d92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d96:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8011d9a:	ee77 6a66 	vsub.f32	s13, s14, s13
 8011d9e:	f100 80c5 	bmi.w	8011f2c <nema_mat3x3_quad_to_rect+0x224>
 8011da2:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 8011fcc <nema_mat3x3_quad_to_rect+0x2c4>
 8011da6:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011daa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011dae:	bf94      	ite	ls
 8011db0:	2301      	movls	r3, #1
 8011db2:	2300      	movhi	r3, #0
 8011db4:	2b00      	cmp	r3, #0
 8011db6:	f040 8106 	bne.w	8011fc6 <nema_mat3x3_quad_to_rect+0x2be>
 8011dba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011dbe:	ee87 6a25 	vdiv.f32	s12, s14, s11
 8011dc2:	ee67 7a86 	vmul.f32	s15, s15, s12
 8011dc6:	ee66 6a86 	vmul.f32	s13, s13, s12
 8011dca:	ee21 5a27 	vmul.f32	s10, s2, s15
 8011dce:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8011dd2:	ee63 2aa6 	vmul.f32	s5, s7, s13
 8011dd6:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011dda:	ee23 6a26 	vmul.f32	s12, s6, s13
 8011dde:	ee33 2a40 	vsub.f32	s4, s6, s0
 8011de2:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011de6:	ee73 3ae0 	vsub.f32	s7, s7, s1
 8011dea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011dee:	ee32 2a06 	vadd.f32	s4, s4, s12
 8011df2:	ee71 1aa5 	vadd.f32	s3, s3, s11
 8011df6:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8011dfa:	ed82 0a02 	vstr	s0, [r2, #8]
 8011dfe:	edc2 0a05 	vstr	s1, [r2, #20]
 8011e02:	edc2 7a06 	vstr	s15, [r2, #24]
 8011e06:	edc2 6a07 	vstr	s13, [r2, #28]
 8011e0a:	ed82 7a08 	vstr	s14, [r2, #32]
 8011e0e:	ed82 1a00 	vstr	s2, [r2]
 8011e12:	ed82 2a01 	vstr	s4, [r2, #4]
 8011e16:	edc2 1a03 	vstr	s3, [r2, #12]
 8011e1a:	edc2 2a04 	vstr	s5, [r2, #16]
 8011e1e:	ee20 4aa6 	vmul.f32	s8, s1, s13
 8011e22:	ee60 5aa7 	vmul.f32	s11, s1, s15
 8011e26:	ee32 3ac4 	vsub.f32	s6, s5, s8
 8011e2a:	ee31 7ae5 	vsub.f32	s14, s3, s11
 8011e2e:	ee21 8aa6 	vmul.f32	s16, s3, s13
 8011e32:	ee22 6aa7 	vmul.f32	s12, s5, s15
 8011e36:	ee27 7a02 	vmul.f32	s14, s14, s4
 8011e3a:	ee23 4a01 	vmul.f32	s8, s6, s2
 8011e3e:	ee38 8a46 	vsub.f32	s16, s16, s12
 8011e42:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011e46:	ee20 7a08 	vmul.f32	s14, s0, s16
 8011e4a:	ee34 4a07 	vadd.f32	s8, s8, s14
 8011e4e:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8011e52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e56:	f100 80ac 	bmi.w	8011fb2 <nema_mat3x3_quad_to_rect+0x2aa>
 8011e5a:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 8011fcc <nema_mat3x3_quad_to_rect+0x2c4>
 8011e5e:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011e62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e66:	bf94      	ite	ls
 8011e68:	2001      	movls	r0, #1
 8011e6a:	2000      	movhi	r0, #0
 8011e6c:	2800      	cmp	r0, #0
 8011e6e:	f040 80aa 	bne.w	8011fc6 <nema_mat3x3_quad_to_rect+0x2be>
 8011e72:	ee20 5a82 	vmul.f32	s10, s1, s4
 8011e76:	ee60 4a26 	vmul.f32	s9, s0, s13
 8011e7a:	ee20 6a27 	vmul.f32	s12, s0, s15
 8011e7e:	ee60 9a22 	vmul.f32	s19, s0, s5
 8011e82:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 8011e86:	ee60 0a81 	vmul.f32	s1, s1, s2
 8011e8a:	ee20 7a21 	vmul.f32	s14, s0, s3
 8011e8e:	eeca 3a04 	vdiv.f32	s7, s20, s8
 8011e92:	ee74 4ac2 	vsub.f32	s9, s9, s4
 8011e96:	ee61 6a26 	vmul.f32	s13, s2, s13
 8011e9a:	ee67 7a82 	vmul.f32	s15, s15, s4
 8011e9e:	ee35 5a69 	vsub.f32	s10, s10, s19
 8011ea2:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8011ea6:	ee31 6a46 	vsub.f32	s12, s2, s12
 8011eaa:	ee62 2a81 	vmul.f32	s5, s5, s2
 8011eae:	ee37 7a60 	vsub.f32	s14, s14, s1
 8011eb2:	ee21 2a82 	vmul.f32	s4, s3, s4
 8011eb6:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8011eba:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8011ebe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ec2:	ee23 4a23 	vmul.f32	s8, s6, s7
 8011ec6:	ee65 6a23 	vmul.f32	s13, s10, s7
 8011eca:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011ece:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8011ed2:	ee26 6a23 	vmul.f32	s12, s12, s7
 8011ed6:	ee27 7a23 	vmul.f32	s14, s14, s7
 8011eda:	ee72 2ac2 	vsub.f32	s5, s5, s4
 8011ede:	ee24 4a09 	vmul.f32	s8, s8, s18
 8011ee2:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8011ee6:	ee28 8a23 	vmul.f32	s16, s16, s7
 8011eea:	ee24 5a89 	vmul.f32	s10, s9, s18
 8011eee:	ee26 6a28 	vmul.f32	s12, s12, s17
 8011ef2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8011ef6:	ee66 6a89 	vmul.f32	s13, s13, s18
 8011efa:	ee27 7a28 	vmul.f32	s14, s14, s17
 8011efe:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8011f02:	ed82 4a00 	vstr	s8, [r2]
 8011f06:	edc2 5a03 	vstr	s11, [r2, #12]
 8011f0a:	ed82 8a06 	vstr	s16, [r2, #24]
 8011f0e:	ed82 5a01 	vstr	s10, [r2, #4]
 8011f12:	ed82 6a04 	vstr	s12, [r2, #16]
 8011f16:	edc2 7a07 	vstr	s15, [r2, #28]
 8011f1a:	edc2 6a02 	vstr	s13, [r2, #8]
 8011f1e:	ed82 7a05 	vstr	s14, [r2, #20]
 8011f22:	edc2 2a08 	vstr	s5, [r2, #32]
 8011f26:	ecbd 8b06 	vpop	{d8-d10}
 8011f2a:	4770      	bx	lr
 8011f2c:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8011fd0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f30:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011f34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f38:	bfac      	ite	ge
 8011f3a:	2301      	movge	r3, #1
 8011f3c:	2300      	movlt	r3, #0
 8011f3e:	e739      	b.n	8011db4 <nema_mat3x3_quad_to_rect+0xac>
 8011f40:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011fd0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f44:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011f48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f4c:	f6ff af09 	blt.w	8011d62 <nema_mat3x3_quad_to_rect+0x5a>
 8011f50:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8011fd4 <nema_mat3x3_quad_to_rect+0x2cc>
 8011f54:	ee32 2a41 	vsub.f32	s4, s4, s2
 8011f58:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8011f5c:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011f60:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011f64:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8011f68:	eef0 7a47 	vmov.f32	s15, s14
 8011f6c:	ed82 2a01 	vstr	s4, [r2, #4]
 8011f70:	ed82 1a00 	vstr	s2, [r2]
 8011f74:	edc2 2a04 	vstr	s5, [r2, #16]
 8011f78:	edc2 1a03 	vstr	s3, [r2, #12]
 8011f7c:	ed82 0a02 	vstr	s0, [r2, #8]
 8011f80:	edc2 0a05 	vstr	s1, [r2, #20]
 8011f84:	ed82 7a06 	vstr	s14, [r2, #24]
 8011f88:	ed82 7a07 	vstr	s14, [r2, #28]
 8011f8c:	eef0 6a47 	vmov.f32	s13, s14
 8011f90:	6213      	str	r3, [r2, #32]
 8011f92:	e744      	b.n	8011e1e <nema_mat3x3_quad_to_rect+0x116>
 8011f94:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8011fd0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f98:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011f9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fa0:	f6ff aedf 	blt.w	8011d62 <nema_mat3x3_quad_to_rect+0x5a>
 8011fa4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011fa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fac:	f57f aed1 	bpl.w	8011d52 <nema_mat3x3_quad_to_rect+0x4a>
 8011fb0:	e7c6      	b.n	8011f40 <nema_mat3x3_quad_to_rect+0x238>
 8011fb2:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8011fd0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011fb6:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fbe:	bfac      	ite	ge
 8011fc0:	2001      	movge	r0, #1
 8011fc2:	2000      	movlt	r0, #0
 8011fc4:	e752      	b.n	8011e6c <nema_mat3x3_quad_to_rect+0x164>
 8011fc6:	f04f 30ff 	mov.w	r0, #4294967295
 8011fca:	e7ac      	b.n	8011f26 <nema_mat3x3_quad_to_rect+0x21e>
 8011fcc:	3727c5ac 	.word	0x3727c5ac
 8011fd0:	b727c5ac 	.word	0xb727c5ac
 8011fd4:	00000000 	.word	0x00000000

08011fd8 <nema_readHwConfig>:
 8011fd8:	b510      	push	{r4, lr}
 8011fda:	4c05      	ldr	r4, [pc, #20]	@ (8011ff0 <nema_readHwConfig+0x18>)
 8011fdc:	6820      	ldr	r0, [r4, #0]
 8011fde:	b100      	cbz	r0, 8011fe2 <nema_readHwConfig+0xa>
 8011fe0:	bd10      	pop	{r4, pc}
 8011fe2:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8011fe6:	f7f0 fe8f 	bl	8002d08 <nema_reg_read>
 8011fea:	6020      	str	r0, [r4, #0]
 8011fec:	bd10      	pop	{r4, pc}
 8011fee:	bf00      	nop
 8011ff0:	20082fa8 	.word	0x20082fa8

08011ff4 <nema_readHwConfigH>:
 8011ff4:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8011ff8:	f7f0 be86 	b.w	8002d08 <nema_reg_read>

08011ffc <nema_enable_tiling>:
 8011ffc:	2800      	cmp	r0, #0
 8011ffe:	bf14      	ite	ne
 8012000:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8012004:	2000      	moveq	r0, #0
 8012006:	b410      	push	{r4}
 8012008:	4a05      	ldr	r2, [pc, #20]	@ (8012020 <nema_enable_tiling+0x24>)
 801200a:	6951      	ldr	r1, [r2, #20]
 801200c:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8012010:	4323      	orrs	r3, r4
 8012012:	430b      	orrs	r3, r1
 8012014:	4303      	orrs	r3, r0
 8012016:	6050      	str	r0, [r2, #4]
 8012018:	6113      	str	r3, [r2, #16]
 801201a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801201e:	4770      	bx	lr
 8012020:	20000064 	.word	0x20000064

08012024 <nema_enable_tiling_2x2>:
 8012024:	2800      	cmp	r0, #0
 8012026:	bf14      	ite	ne
 8012028:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 801202c:	2000      	moveq	r0, #0
 801202e:	b410      	push	{r4}
 8012030:	4a05      	ldr	r2, [pc, #20]	@ (8012048 <nema_enable_tiling_2x2+0x24>)
 8012032:	6951      	ldr	r1, [r2, #20]
 8012034:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8012038:	4323      	orrs	r3, r4
 801203a:	430b      	orrs	r3, r1
 801203c:	4303      	orrs	r3, r0
 801203e:	6050      	str	r0, [r2, #4]
 8012040:	6113      	str	r3, [r2, #16]
 8012042:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012046:	4770      	bx	lr
 8012048:	20000064 	.word	0x20000064

0801204c <nema_enable_aa>:
 801204c:	2800      	cmp	r0, #0
 801204e:	b410      	push	{r4}
 8012050:	bf19      	ittee	ne
 8012052:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 8012056:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 801205a:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 801205e:	2000      	moveq	r0, #0
 8012060:	2900      	cmp	r1, #0
 8012062:	bf08      	it	eq
 8012064:	4604      	moveq	r4, r0
 8012066:	b10a      	cbz	r2, 801206c <nema_enable_aa+0x20>
 8012068:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 801206c:	b10b      	cbz	r3, 8012072 <nema_enable_aa+0x26>
 801206e:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 8012072:	4a06      	ldr	r2, [pc, #24]	@ (801208c <nema_enable_aa+0x40>)
 8012074:	6853      	ldr	r3, [r2, #4]
 8012076:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 801207a:	4303      	orrs	r3, r0
 801207c:	430b      	orrs	r3, r1
 801207e:	4323      	orrs	r3, r4
 8012080:	6950      	ldr	r0, [r2, #20]
 8012082:	e9c2 3404 	strd	r3, r4, [r2, #16]
 8012086:	f85d 4b04 	ldr.w	r4, [sp], #4
 801208a:	4770      	bx	lr
 801208c:	20000064 	.word	0x20000064

08012090 <nema_enable_aa_flags>:
 8012090:	b410      	push	{r4}
 8012092:	4a07      	ldr	r2, [pc, #28]	@ (80120b0 <nema_enable_aa_flags+0x20>)
 8012094:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 8012098:	6853      	ldr	r3, [r2, #4]
 801209a:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 801209e:	4323      	orrs	r3, r4
 80120a0:	4303      	orrs	r3, r0
 80120a2:	430b      	orrs	r3, r1
 80120a4:	6950      	ldr	r0, [r2, #20]
 80120a6:	e9c2 3104 	strd	r3, r1, [r2, #16]
 80120aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80120ae:	4770      	bx	lr
 80120b0:	20000064 	.word	0x20000064

080120b4 <nema_matmul_bypass>:
 80120b4:	b920      	cbnz	r0, 80120c0 <nema_matmul_bypass+0xc>
 80120b6:	4601      	mov	r1, r0
 80120b8:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80120bc:	f00b be96 	b.w	801ddec <nema_cl_add_cmd>
 80120c0:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 80120c4:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80120c8:	f00b be90 	b.w	801ddec <nema_cl_add_cmd>

080120cc <nema_set_matrix>:
 80120cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120d0:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8012238 <nema_set_matrix+0x16c>
 80120d4:	edd0 7a06 	vldr	s15, [r0, #24]
 80120d8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80120dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120e0:	4604      	mov	r4, r0
 80120e2:	d506      	bpl.n	80120f2 <nema_set_matrix+0x26>
 80120e4:	eddf 6a55 	vldr	s13, [pc, #340]	@ 801223c <nema_set_matrix+0x170>
 80120e8:	eef4 7ae6 	vcmpe.f32	s15, s13
 80120ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120f0:	dc47      	bgt.n	8012182 <nema_set_matrix+0xb6>
 80120f2:	2009      	movs	r0, #9
 80120f4:	f00b fe1e 	bl	801dd34 <nema_cl_get_space>
 80120f8:	2800      	cmp	r0, #0
 80120fa:	d040      	beq.n	801217e <nema_set_matrix+0xb2>
 80120fc:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8012100:	6003      	str	r3, [r0, #0]
 8012102:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8012106:	6962      	ldr	r2, [r4, #20]
 8012108:	6083      	str	r3, [r0, #8]
 801210a:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 801210e:	6042      	str	r2, [r0, #4]
 8012110:	68a2      	ldr	r2, [r4, #8]
 8012112:	6103      	str	r3, [r0, #16]
 8012114:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 8012118:	60c2      	str	r2, [r0, #12]
 801211a:	69a2      	ldr	r2, [r4, #24]
 801211c:	6183      	str	r3, [r0, #24]
 801211e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8012122:	6142      	str	r2, [r0, #20]
 8012124:	69e2      	ldr	r2, [r4, #28]
 8012126:	6203      	str	r3, [r0, #32]
 8012128:	61c2      	str	r2, [r0, #28]
 801212a:	6a23      	ldr	r3, [r4, #32]
 801212c:	2544      	movs	r5, #68	@ 0x44
 801212e:	6243      	str	r3, [r0, #36]	@ 0x24
 8012130:	2640      	movs	r6, #64	@ 0x40
 8012132:	233c      	movs	r3, #60	@ 0x3c
 8012134:	2738      	movs	r7, #56	@ 0x38
 8012136:	2234      	movs	r2, #52	@ 0x34
 8012138:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 801213c:	212c      	movs	r1, #44	@ 0x2c
 801213e:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 8012142:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 8012146:	f840 800e 	str.w	r8, [r0, lr]
 801214a:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 801214e:	f8d4 8000 	ldr.w	r8, [r4]
 8012152:	4401      	add	r1, r0
 8012154:	f8c1 8000 	str.w	r8, [r1]
 8012158:	f840 e00c 	str.w	lr, [r0, ip]
 801215c:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 8012160:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8012164:	4402      	add	r2, r0
 8012166:	f8c2 c000 	str.w	ip, [r2]
 801216a:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 801216e:	51c1      	str	r1, [r0, r7]
 8012170:	68e1      	ldr	r1, [r4, #12]
 8012172:	4403      	add	r3, r0
 8012174:	6019      	str	r1, [r3, #0]
 8012176:	5182      	str	r2, [r0, r6]
 8012178:	6923      	ldr	r3, [r4, #16]
 801217a:	4428      	add	r0, r5
 801217c:	6003      	str	r3, [r0, #0]
 801217e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012182:	ed90 6a07 	vldr	s12, [r0, #28]
 8012186:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801218a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801218e:	d5b0      	bpl.n	80120f2 <nema_set_matrix+0x26>
 8012190:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8012194:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012198:	ddab      	ble.n	80120f2 <nema_set_matrix+0x26>
 801219a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801219e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80121a2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80121a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121aa:	d43f      	bmi.n	801222c <nema_set_matrix+0x160>
 80121ac:	edd4 7a08 	vldr	s15, [r4, #32]
 80121b0:	ed94 5a00 	vldr	s10, [r4]
 80121b4:	edd4 5a01 	vldr	s11, [r4, #4]
 80121b8:	ed94 6a02 	vldr	s12, [r4, #8]
 80121bc:	edd4 6a03 	vldr	s13, [r4, #12]
 80121c0:	ed94 7a04 	vldr	s14, [r4, #16]
 80121c4:	ed94 4a05 	vldr	s8, [r4, #20]
 80121c8:	eec5 4a27 	vdiv.f32	s9, s10, s15
 80121cc:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 80121d0:	eec6 5a27 	vdiv.f32	s11, s12, s15
 80121d4:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 80121d8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80121dc:	ee84 7a27 	vdiv.f32	s14, s8, s15
 80121e0:	edc4 4a00 	vstr	s9, [r4]
 80121e4:	ed84 5a01 	vstr	s10, [r4, #4]
 80121e8:	edc4 5a02 	vstr	s11, [r4, #8]
 80121ec:	ed84 6a03 	vstr	s12, [r4, #12]
 80121f0:	edc4 6a04 	vstr	s13, [r4, #16]
 80121f4:	ed84 7a05 	vstr	s14, [r4, #20]
 80121f8:	2006      	movs	r0, #6
 80121fa:	f00b fd9b 	bl	801dd34 <nema_cl_get_space>
 80121fe:	2800      	cmp	r0, #0
 8012200:	d0bd      	beq.n	801217e <nema_set_matrix+0xb2>
 8012202:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8012206:	6003      	str	r3, [r0, #0]
 8012208:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801220c:	6962      	ldr	r2, [r4, #20]
 801220e:	6083      	str	r3, [r0, #8]
 8012210:	6042      	str	r2, [r0, #4]
 8012212:	68a3      	ldr	r3, [r4, #8]
 8012214:	252c      	movs	r5, #44	@ 0x2c
 8012216:	60c3      	str	r3, [r0, #12]
 8012218:	2628      	movs	r6, #40	@ 0x28
 801221a:	2324      	movs	r3, #36	@ 0x24
 801221c:	2720      	movs	r7, #32
 801221e:	221c      	movs	r2, #28
 8012220:	f04f 0c18 	mov.w	ip, #24
 8012224:	2114      	movs	r1, #20
 8012226:	f04f 0e10 	mov.w	lr, #16
 801222a:	e78a      	b.n	8012142 <nema_set_matrix+0x76>
 801222c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8012230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012234:	dce0      	bgt.n	80121f8 <nema_set_matrix+0x12c>
 8012236:	e7b9      	b.n	80121ac <nema_set_matrix+0xe0>
 8012238:	33d6bf95 	.word	0x33d6bf95
 801223c:	b3d6bf95 	.word	0xb3d6bf95

08012240 <nema_set_matrix_translate>:
 8012240:	b508      	push	{r3, lr}
 8012242:	2002      	movs	r0, #2
 8012244:	ed2d 8b02 	vpush	{d8}
 8012248:	eeb0 8a40 	vmov.f32	s16, s0
 801224c:	eef0 8a60 	vmov.f32	s17, s1
 8012250:	f00b fd70 	bl	801dd34 <nema_cl_get_space>
 8012254:	b1c8      	cbz	r0, 801228a <nema_set_matrix_translate+0x4a>
 8012256:	eddf 7a13 	vldr	s15, [pc, #76]	@ 80122a4 <nema_set_matrix_translate+0x64>
 801225a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801225e:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8012262:	eef1 6a68 	vneg.f32	s13, s17
 8012266:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801226a:	eeb1 7a48 	vneg.f32	s14, s16
 801226e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012272:	6002      	str	r2, [r0, #0]
 8012274:	edc0 6a01 	vstr	s13, [r0, #4]
 8012278:	6083      	str	r3, [r0, #8]
 801227a:	ed80 7a03 	vstr	s14, [r0, #12]
 801227e:	dc07      	bgt.n	8012290 <nema_set_matrix_translate+0x50>
 8012280:	eef4 8ae7 	vcmpe.f32	s17, s15
 8012284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012288:	dc02      	bgt.n	8012290 <nema_set_matrix_translate+0x50>
 801228a:	ecbd 8b02 	vpop	{d8}
 801228e:	bd08      	pop	{r3, pc}
 8012290:	ecbd 8b02 	vpop	{d8}
 8012294:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8012298:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801229c:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80122a0:	f00b bda4 	b.w	801ddec <nema_cl_add_cmd>
 80122a4:	45000000 	.word	0x45000000

080122a8 <nema_load_frag_shader>:
 80122a8:	b570      	push	{r4, r5, r6, lr}
 80122aa:	460e      	mov	r6, r1
 80122ac:	4604      	mov	r4, r0
 80122ae:	4611      	mov	r1, r2
 80122b0:	20c4      	movs	r0, #196	@ 0xc4
 80122b2:	f00b fd9b 	bl	801ddec <nema_cl_add_cmd>
 80122b6:	b186      	cbz	r6, 80122da <nema_load_frag_shader+0x32>
 80122b8:	2500      	movs	r5, #0
 80122ba:	3408      	adds	r4, #8
 80122bc:	f854 1c08 	ldr.w	r1, [r4, #-8]
 80122c0:	20c8      	movs	r0, #200	@ 0xc8
 80122c2:	f00b fd93 	bl	801ddec <nema_cl_add_cmd>
 80122c6:	3501      	adds	r5, #1
 80122c8:	f854 1c04 	ldr.w	r1, [r4, #-4]
 80122cc:	20cc      	movs	r0, #204	@ 0xcc
 80122ce:	f00b fd8d 	bl	801ddec <nema_cl_add_cmd>
 80122d2:	42ae      	cmp	r6, r5
 80122d4:	f104 0408 	add.w	r4, r4, #8
 80122d8:	d1f0      	bne.n	80122bc <nema_load_frag_shader+0x14>
 80122da:	bd70      	pop	{r4, r5, r6, pc}

080122dc <nema_set_frag_ptr>:
 80122dc:	4601      	mov	r1, r0
 80122de:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 80122e2:	f00b bd83 	b.w	801ddec <nema_cl_add_cmd>
 80122e6:	bf00      	nop

080122e8 <nema_set_rop_blend_mode>:
 80122e8:	4601      	mov	r1, r0
 80122ea:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 80122ee:	f00b bd7d 	b.w	801ddec <nema_cl_add_cmd>
 80122f2:	bf00      	nop

080122f4 <nema_set_rop_const_color>:
 80122f4:	4601      	mov	r1, r0
 80122f6:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 80122fa:	f00b bd77 	b.w	801ddec <nema_cl_add_cmd>
 80122fe:	bf00      	nop

08012300 <nema_set_depth_ctrl>:
 8012300:	4601      	mov	r1, r0
 8012302:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8012306:	f00b bd71 	b.w	801ddec <nema_cl_add_cmd>
 801230a:	bf00      	nop

0801230c <nema_set_gradient_fx>:
 801230c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012310:	4607      	mov	r7, r0
 8012312:	200c      	movs	r0, #12
 8012314:	460e      	mov	r6, r1
 8012316:	4615      	mov	r5, r2
 8012318:	461c      	mov	r4, r3
 801231a:	f00b fd0b 	bl	801dd34 <nema_cl_get_space>
 801231e:	2800      	cmp	r0, #0
 8012320:	d03d      	beq.n	801239e <nema_set_gradient_fx+0x92>
 8012322:	f44f 71d4 	mov.w	r1, #424	@ 0x1a8
 8012326:	6301      	str	r1, [r0, #48]	@ 0x30
 8012328:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
 801232c:	6381      	str	r1, [r0, #56]	@ 0x38
 801232e:	f44f 71d8 	mov.w	r1, #432	@ 0x1b0
 8012332:	f44f 7be0 	mov.w	fp, #448	@ 0x1c0
 8012336:	f44f 7ae2 	mov.w	sl, #452	@ 0x1c4
 801233a:	f44f 79e4 	mov.w	r9, #456	@ 0x1c8
 801233e:	f44f 78e6 	mov.w	r8, #460	@ 0x1cc
 8012342:	f44f 7ed0 	mov.w	lr, #416	@ 0x1a0
 8012346:	f44f 7cd2 	mov.w	ip, #420	@ 0x1a4
 801234a:	f44f 72dc 	mov.w	r2, #440	@ 0x1b8
 801234e:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 8012352:	6401      	str	r1, [r0, #64]	@ 0x40
 8012354:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 8012358:	61c4      	str	r4, [r0, #28]
 801235a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801235c:	6047      	str	r7, [r0, #4]
 801235e:	6244      	str	r4, [r0, #36]	@ 0x24
 8012360:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8012362:	60c6      	str	r6, [r0, #12]
 8012364:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8012366:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8012368:	6145      	str	r5, [r0, #20]
 801236a:	6344      	str	r4, [r0, #52]	@ 0x34
 801236c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801236e:	f8c0 b000 	str.w	fp, [r0]
 8012372:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8012374:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8012376:	f8c0 a008 	str.w	sl, [r0, #8]
 801237a:	6444      	str	r4, [r0, #68]	@ 0x44
 801237c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801237e:	f8c0 9010 	str.w	r9, [r0, #16]
 8012382:	64c4      	str	r4, [r0, #76]	@ 0x4c
 8012384:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8012386:	f8c0 8018 	str.w	r8, [r0, #24]
 801238a:	6544      	str	r4, [r0, #84]	@ 0x54
 801238c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801238e:	f8c0 e020 	str.w	lr, [r0, #32]
 8012392:	65c4      	str	r4, [r0, #92]	@ 0x5c
 8012394:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012398:	6481      	str	r1, [r0, #72]	@ 0x48
 801239a:	6502      	str	r2, [r0, #80]	@ 0x50
 801239c:	6583      	str	r3, [r0, #88]	@ 0x58
 801239e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123a2:	bf00      	nop

080123a4 <nema_set_raster_color>:
 80123a4:	4601      	mov	r1, r0
 80123a6:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80123aa:	f00b bd1f 	b.w	801ddec <nema_cl_add_cmd>
 80123ae:	bf00      	nop

080123b0 <nema_raster_triangle_fx>:
 80123b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123b4:	4607      	mov	r7, r0
 80123b6:	2007      	movs	r0, #7
 80123b8:	460e      	mov	r6, r1
 80123ba:	4615      	mov	r5, r2
 80123bc:	461c      	mov	r4, r3
 80123be:	f00b fcb9 	bl	801dd34 <nema_cl_get_space>
 80123c2:	b350      	cbz	r0, 801241a <nema_raster_triangle_fx+0x6a>
 80123c4:	f44f 7398 	mov.w	r3, #304	@ 0x130
 80123c8:	f44f 7292 	mov.w	r2, #292	@ 0x124
 80123cc:	f44f 7890 	mov.w	r8, #288	@ 0x120
 80123d0:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 80123d4:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 80123d8:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 80123dc:	6103      	str	r3, [r0, #16]
 80123de:	4b10      	ldr	r3, [pc, #64]	@ (8012420 <nema_raster_triangle_fx+0x70>)
 80123e0:	6047      	str	r7, [r0, #4]
 80123e2:	60c6      	str	r6, [r0, #12]
 80123e4:	f8c0 8000 	str.w	r8, [r0]
 80123e8:	6082      	str	r2, [r0, #8]
 80123ea:	691a      	ldr	r2, [r3, #16]
 80123ec:	4b0d      	ldr	r3, [pc, #52]	@ (8012424 <nema_raster_triangle_fx+0x74>)
 80123ee:	61c4      	str	r4, [r0, #28]
 80123f0:	9c06      	ldr	r4, [sp, #24]
 80123f2:	6303      	str	r3, [r0, #48]	@ 0x30
 80123f4:	01d3      	lsls	r3, r2, #7
 80123f6:	6244      	str	r4, [r0, #36]	@ 0x24
 80123f8:	bf48      	it	mi
 80123fa:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 80123fe:	9c07      	ldr	r4, [sp, #28]
 8012400:	bf58      	it	pl
 8012402:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 8012406:	f042 0204 	orr.w	r2, r2, #4
 801240a:	6145      	str	r5, [r0, #20]
 801240c:	62c4      	str	r4, [r0, #44]	@ 0x2c
 801240e:	f8c0 e018 	str.w	lr, [r0, #24]
 8012412:	f8c0 c020 	str.w	ip, [r0, #32]
 8012416:	6281      	str	r1, [r0, #40]	@ 0x28
 8012418:	6342      	str	r2, [r0, #52]	@ 0x34
 801241a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801241e:	bf00      	nop
 8012420:	20000064 	.word	0x20000064
 8012424:	ff000100 	.word	0xff000100

08012428 <nema_raster_rect>:
 8012428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801242a:	1e17      	subs	r7, r2, #0
 801242c:	dd20      	ble.n	8012470 <nema_raster_rect+0x48>
 801242e:	2b00      	cmp	r3, #0
 8012430:	dd1e      	ble.n	8012470 <nema_raster_rect+0x48>
 8012432:	4604      	mov	r4, r0
 8012434:	2003      	movs	r0, #3
 8012436:	461d      	mov	r5, r3
 8012438:	460e      	mov	r6, r1
 801243a:	f00b fc7b 	bl	801dd34 <nema_cl_get_space>
 801243e:	b1b8      	cbz	r0, 8012470 <nema_raster_rect+0x48>
 8012440:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 8012444:	f44f 7184 	mov.w	r1, #264	@ 0x108
 8012448:	193a      	adds	r2, r7, r4
 801244a:	b292      	uxth	r2, r2
 801244c:	19ab      	adds	r3, r5, r6
 801244e:	b2a4      	uxth	r4, r4
 8012450:	4d08      	ldr	r5, [pc, #32]	@ (8012474 <nema_raster_rect+0x4c>)
 8012452:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8012456:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 801245a:	4a07      	ldr	r2, [pc, #28]	@ (8012478 <nema_raster_rect+0x50>)
 801245c:	6044      	str	r4, [r0, #4]
 801245e:	60c3      	str	r3, [r0, #12]
 8012460:	f8c0 c000 	str.w	ip, [r0]
 8012464:	6081      	str	r1, [r0, #8]
 8012466:	6105      	str	r5, [r0, #16]
 8012468:	6913      	ldr	r3, [r2, #16]
 801246a:	f043 0302 	orr.w	r3, r3, #2
 801246e:	6143      	str	r3, [r0, #20]
 8012470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012472:	bf00      	nop
 8012474:	ff000100 	.word	0xff000100
 8012478:	20000064 	.word	0x20000064

0801247c <nema_raster_quad_fx>:
 801247c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012480:	4607      	mov	r7, r0
 8012482:	2009      	movs	r0, #9
 8012484:	460e      	mov	r6, r1
 8012486:	4615      	mov	r5, r2
 8012488:	461c      	mov	r4, r3
 801248a:	f00b fc53 	bl	801dd34 <nema_cl_get_space>
 801248e:	2800      	cmp	r0, #0
 8012490:	d02f      	beq.n	80124f2 <nema_raster_quad_fx+0x76>
 8012492:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012496:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801249a:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 801249e:	f44f 799a 	mov.w	r9, #308	@ 0x134
 80124a2:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 80124a6:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 80124aa:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 80124ae:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 80124b2:	6103      	str	r3, [r0, #16]
 80124b4:	4b10      	ldr	r3, [pc, #64]	@ (80124f8 <nema_raster_quad_fx+0x7c>)
 80124b6:	6047      	str	r7, [r0, #4]
 80124b8:	60c6      	str	r6, [r0, #12]
 80124ba:	f8c0 a000 	str.w	sl, [r0]
 80124be:	6082      	str	r2, [r0, #8]
 80124c0:	691a      	ldr	r2, [r3, #16]
 80124c2:	9b08      	ldr	r3, [sp, #32]
 80124c4:	f042 0205 	orr.w	r2, r2, #5
 80124c8:	6243      	str	r3, [r0, #36]	@ 0x24
 80124ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80124cc:	6145      	str	r5, [r0, #20]
 80124ce:	62c3      	str	r3, [r0, #44]	@ 0x2c
 80124d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80124d2:	61c4      	str	r4, [r0, #28]
 80124d4:	6343      	str	r3, [r0, #52]	@ 0x34
 80124d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80124d8:	6442      	str	r2, [r0, #68]	@ 0x44
 80124da:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80124dc:	4b07      	ldr	r3, [pc, #28]	@ (80124fc <nema_raster_quad_fx+0x80>)
 80124de:	f8c0 9018 	str.w	r9, [r0, #24]
 80124e2:	f8c0 8020 	str.w	r8, [r0, #32]
 80124e6:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 80124ea:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 80124ee:	6381      	str	r1, [r0, #56]	@ 0x38
 80124f0:	6403      	str	r3, [r0, #64]	@ 0x40
 80124f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80124f6:	bf00      	nop
 80124f8:	20000064 	.word	0x20000064
 80124fc:	ff000100 	.word	0xff000100

08012500 <nema_set_interrupt_ctrl>:
 8012500:	4601      	mov	r1, r0
 8012502:	20f8      	movs	r0, #248	@ 0xf8
 8012504:	f00b bc72 	b.w	801ddec <nema_cl_add_cmd>

08012508 <flush_lines_>:
 8012508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801250c:	ed2d 8b06 	vpush	{d8-d10}
 8012510:	4fbc      	ldr	r7, [pc, #752]	@ (8012804 <flush_lines_+0x2fc>)
 8012512:	b083      	sub	sp, #12
 8012514:	683b      	ldr	r3, [r7, #0]
 8012516:	4680      	mov	r8, r0
 8012518:	7f5e      	ldrb	r6, [r3, #29]
 801251a:	9101      	str	r1, [sp, #4]
 801251c:	f016 0610 	ands.w	r6, r6, #16
 8012520:	f040 8167 	bne.w	80127f2 <flush_lines_+0x2ea>
 8012524:	4cb8      	ldr	r4, [pc, #736]	@ (8012808 <flush_lines_+0x300>)
 8012526:	f1b8 0f01 	cmp.w	r8, #1
 801252a:	edd4 7a08 	vldr	s15, [r4, #32]
 801252e:	4db7      	ldr	r5, [pc, #732]	@ (801280c <flush_lines_+0x304>)
 8012530:	f000 80f1 	beq.w	8012716 <flush_lines_+0x20e>
 8012534:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801253c:	dd61      	ble.n	8012602 <flush_lines_+0xfa>
 801253e:	683b      	ldr	r3, [r7, #0]
 8012540:	7f5b      	ldrb	r3, [r3, #29]
 8012542:	f013 0310 	ands.w	r3, r3, #16
 8012546:	d109      	bne.n	801255c <flush_lines_+0x54>
 8012548:	f1b8 0f01 	cmp.w	r8, #1
 801254c:	f000 81d1 	beq.w	80128f2 <flush_lines_+0x3ea>
 8012550:	2201      	movs	r2, #1
 8012552:	4611      	mov	r1, r2
 8012554:	4610      	mov	r0, r2
 8012556:	f7ff fd79 	bl	801204c <nema_enable_aa>
 801255a:	4606      	mov	r6, r0
 801255c:	2009      	movs	r0, #9
 801255e:	f8d4 b000 	ldr.w	fp, [r4]
 8012562:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8012566:	ed94 aa01 	vldr	s20, [r4, #4]
 801256a:	edd4 9a05 	vldr	s19, [r4, #20]
 801256e:	ed94 9a02 	vldr	s18, [r4, #8]
 8012572:	edd4 8a06 	vldr	s17, [r4, #24]
 8012576:	ed94 8a03 	vldr	s16, [r4, #12]
 801257a:	f8d4 901c 	ldr.w	r9, [r4, #28]
 801257e:	f00b fbd9 	bl	801dd34 <nema_cl_get_space>
 8012582:	b3b8      	cbz	r0, 80125f4 <flush_lines_+0xec>
 8012584:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012588:	f8c0 b004 	str.w	fp, [r0, #4]
 801258c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012590:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012594:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012598:	6003      	str	r3, [r0, #0]
 801259a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801259e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 80125a2:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80125a6:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80125aa:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80125ae:	ed80 aa05 	vstr	s20, [r0, #20]
 80125b2:	edc0 9a07 	vstr	s19, [r0, #28]
 80125b6:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 80125ba:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 80125be:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 80125c2:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 80125c6:	f8df 9248 	ldr.w	r9, [pc, #584]	@ 8012810 <flush_lines_+0x308>
 80125ca:	f8c0 a010 	str.w	sl, [r0, #16]
 80125ce:	f8c0 b008 	str.w	fp, [r0, #8]
 80125d2:	f8d9 9010 	ldr.w	r9, [r9, #16]
 80125d6:	f8df a23c 	ldr.w	sl, [pc, #572]	@ 8012814 <flush_lines_+0x30c>
 80125da:	f049 0905 	orr.w	r9, r9, #5
 80125de:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 80125e2:	f8c0 e018 	str.w	lr, [r0, #24]
 80125e6:	f8c0 c020 	str.w	ip, [r0, #32]
 80125ea:	6281      	str	r1, [r0, #40]	@ 0x28
 80125ec:	6302      	str	r2, [r0, #48]	@ 0x30
 80125ee:	6383      	str	r3, [r0, #56]	@ 0x38
 80125f0:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80125f4:	2200      	movs	r2, #0
 80125f6:	683b      	ldr	r3, [r7, #0]
 80125f8:	6222      	str	r2, [r4, #32]
 80125fa:	7f5b      	ldrb	r3, [r3, #29]
 80125fc:	06d8      	lsls	r0, r3, #27
 80125fe:	f140 8086 	bpl.w	801270e <flush_lines_+0x206>
 8012602:	edd5 7a08 	vldr	s15, [r5, #32]
 8012606:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801260a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801260e:	dd1b      	ble.n	8012648 <flush_lines_+0x140>
 8012610:	9b01      	ldr	r3, [sp, #4]
 8012612:	0619      	lsls	r1, r3, #24
 8012614:	d418      	bmi.n	8012648 <flush_lines_+0x140>
 8012616:	683b      	ldr	r3, [r7, #0]
 8012618:	7f59      	ldrb	r1, [r3, #29]
 801261a:	f011 0110 	ands.w	r1, r1, #16
 801261e:	f040 8103 	bne.w	8012828 <flush_lines_+0x320>
 8012622:	f1b8 0f01 	cmp.w	r8, #1
 8012626:	f000 80f9 	beq.w	801281c <flush_lines_+0x314>
 801262a:	f8df 81ec 	ldr.w	r8, [pc, #492]	@ 8012818 <flush_lines_+0x310>
 801262e:	f8d8 3000 	ldr.w	r3, [r8]
 8012632:	2b01      	cmp	r3, #1
 8012634:	bf13      	iteet	ne
 8012636:	2301      	movne	r3, #1
 8012638:	461a      	moveq	r2, r3
 801263a:	4619      	moveq	r1, r3
 801263c:	461a      	movne	r2, r3
 801263e:	4618      	mov	r0, r3
 8012640:	f7ff fd04 	bl	801204c <nema_enable_aa>
 8012644:	4606      	mov	r6, r0
 8012646:	e0f1      	b.n	801282c <flush_lines_+0x324>
 8012648:	f8df 81cc 	ldr.w	r8, [pc, #460]	@ 8012818 <flush_lines_+0x310>
 801264c:	f8d8 3000 	ldr.w	r3, [r8]
 8012650:	2b02      	cmp	r3, #2
 8012652:	d00a      	beq.n	801266a <flush_lines_+0x162>
 8012654:	4630      	mov	r0, r6
 8012656:	f7ff fd1b 	bl	8012090 <nema_enable_aa_flags>
 801265a:	2300      	movs	r3, #0
 801265c:	f8c8 3000 	str.w	r3, [r8]
 8012660:	b003      	add	sp, #12
 8012662:	ecbd 8b06 	vpop	{d8-d10}
 8012666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801266a:	683b      	ldr	r3, [r7, #0]
 801266c:	7f5b      	ldrb	r3, [r3, #29]
 801266e:	f013 0310 	ands.w	r3, r3, #16
 8012672:	f000 8133 	beq.w	80128dc <flush_lines_+0x3d4>
 8012676:	2009      	movs	r0, #9
 8012678:	f8d5 a004 	ldr.w	sl, [r5, #4]
 801267c:	edd5 9a05 	vldr	s19, [r5, #20]
 8012680:	f8d4 9000 	ldr.w	r9, [r4]
 8012684:	ed94 9a04 	vldr	s18, [r4, #16]
 8012688:	edd5 8a02 	vldr	s17, [r5, #8]
 801268c:	ed95 8a06 	vldr	s16, [r5, #24]
 8012690:	68e5      	ldr	r5, [r4, #12]
 8012692:	69e4      	ldr	r4, [r4, #28]
 8012694:	f00b fb4e 	bl	801dd34 <nema_cl_get_space>
 8012698:	b388      	cbz	r0, 80126fe <flush_lines_+0x1f6>
 801269a:	f8c0 a004 	str.w	sl, [r0, #4]
 801269e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 80126a2:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 80126a6:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 80126aa:	edc0 9a03 	vstr	s19, [r0, #12]
 80126ae:	f8c0 9014 	str.w	r9, [r0, #20]
 80126b2:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 80126b6:	f44f 794d 	mov.w	r9, #820	@ 0x334
 80126ba:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 80126be:	f44f 7154 	mov.w	r1, #848	@ 0x350
 80126c2:	f44f 7255 	mov.w	r2, #852	@ 0x354
 80126c6:	ed80 9a07 	vstr	s18, [r0, #28]
 80126ca:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 80126ce:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 80126d2:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80126d4:	4c4e      	ldr	r4, [pc, #312]	@ (8012810 <flush_lines_+0x308>)
 80126d6:	f8c0 b000 	str.w	fp, [r0]
 80126da:	f8c0 a008 	str.w	sl, [r0, #8]
 80126de:	6103      	str	r3, [r0, #16]
 80126e0:	6923      	ldr	r3, [r4, #16]
 80126e2:	4c4c      	ldr	r4, [pc, #304]	@ (8012814 <flush_lines_+0x30c>)
 80126e4:	f043 0305 	orr.w	r3, r3, #5
 80126e8:	6345      	str	r5, [r0, #52]	@ 0x34
 80126ea:	6443      	str	r3, [r0, #68]	@ 0x44
 80126ec:	f8c0 9018 	str.w	r9, [r0, #24]
 80126f0:	f8c0 e020 	str.w	lr, [r0, #32]
 80126f4:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 80126f8:	6301      	str	r1, [r0, #48]	@ 0x30
 80126fa:	6382      	str	r2, [r0, #56]	@ 0x38
 80126fc:	6404      	str	r4, [r0, #64]	@ 0x40
 80126fe:	683b      	ldr	r3, [r7, #0]
 8012700:	7f5b      	ldrb	r3, [r3, #29]
 8012702:	06db      	lsls	r3, r3, #27
 8012704:	d4a6      	bmi.n	8012654 <flush_lines_+0x14c>
 8012706:	4630      	mov	r0, r6
 8012708:	f7ff fcc2 	bl	8012090 <nema_enable_aa_flags>
 801270c:	e7a2      	b.n	8012654 <flush_lines_+0x14c>
 801270e:	4630      	mov	r0, r6
 8012710:	f7ff fcbe 	bl	8012090 <nema_enable_aa_flags>
 8012714:	e775      	b.n	8012602 <flush_lines_+0xfa>
 8012716:	ed95 7a08 	vldr	s14, [r5, #32]
 801271a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801271e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012722:	f77f af07 	ble.w	8012534 <flush_lines_+0x2c>
 8012726:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801272a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801272e:	f77f af6f 	ble.w	8012610 <flush_lines_+0x108>
 8012732:	683b      	ldr	r3, [r7, #0]
 8012734:	7f5b      	ldrb	r3, [r3, #29]
 8012736:	f013 0310 	ands.w	r3, r3, #16
 801273a:	f000 80e7 	beq.w	801290c <flush_lines_+0x404>
 801273e:	2009      	movs	r0, #9
 8012740:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8012744:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8012748:	ed95 aa00 	vldr	s20, [r5]
 801274c:	edd5 9a04 	vldr	s19, [r5, #16]
 8012750:	ed94 9a02 	vldr	s18, [r4, #8]
 8012754:	edd4 8a06 	vldr	s17, [r4, #24]
 8012758:	ed95 8a03 	vldr	s16, [r5, #12]
 801275c:	f8d5 901c 	ldr.w	r9, [r5, #28]
 8012760:	f00b fae8 	bl	801dd34 <nema_cl_get_space>
 8012764:	b3b8      	cbz	r0, 80127d6 <flush_lines_+0x2ce>
 8012766:	f44f 7348 	mov.w	r3, #800	@ 0x320
 801276a:	f8c0 b004 	str.w	fp, [r0, #4]
 801276e:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012772:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012776:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 801277a:	6003      	str	r3, [r0, #0]
 801277c:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8012780:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012784:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012788:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801278c:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8012790:	ed80 aa05 	vstr	s20, [r0, #20]
 8012794:	edc0 9a07 	vstr	s19, [r0, #28]
 8012798:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801279c:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 80127a0:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 80127a4:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 80127a8:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 8012810 <flush_lines_+0x308>
 80127ac:	f8c0 a010 	str.w	sl, [r0, #16]
 80127b0:	f8c0 b008 	str.w	fp, [r0, #8]
 80127b4:	f8d9 9010 	ldr.w	r9, [r9, #16]
 80127b8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8012814 <flush_lines_+0x30c>
 80127bc:	f049 0905 	orr.w	r9, r9, #5
 80127c0:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 80127c4:	f8c0 e018 	str.w	lr, [r0, #24]
 80127c8:	f8c0 c020 	str.w	ip, [r0, #32]
 80127cc:	6281      	str	r1, [r0, #40]	@ 0x28
 80127ce:	6302      	str	r2, [r0, #48]	@ 0x30
 80127d0:	6383      	str	r3, [r0, #56]	@ 0x38
 80127d2:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80127d6:	683b      	ldr	r3, [r7, #0]
 80127d8:	7f5b      	ldrb	r3, [r3, #29]
 80127da:	06db      	lsls	r3, r3, #27
 80127dc:	f140 8090 	bpl.w	8012900 <flush_lines_+0x3f8>
 80127e0:	edd4 7a08 	vldr	s15, [r4, #32]
 80127e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80127e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127ec:	f73f aeb6 	bgt.w	801255c <flush_lines_+0x54>
 80127f0:	e707      	b.n	8012602 <flush_lines_+0xfa>
 80127f2:	2300      	movs	r3, #0
 80127f4:	461a      	mov	r2, r3
 80127f6:	4619      	mov	r1, r3
 80127f8:	4618      	mov	r0, r3
 80127fa:	f7ff fc27 	bl	801204c <nema_enable_aa>
 80127fe:	4606      	mov	r6, r0
 8012800:	e690      	b.n	8012524 <flush_lines_+0x1c>
 8012802:	bf00      	nop
 8012804:	20082fac 	.word	0x20082fac
 8012808:	20082ffc 	.word	0x20082ffc
 801280c:	20082fc4 	.word	0x20082fc4
 8012810:	20000064 	.word	0x20000064
 8012814:	ff000100 	.word	0xff000100
 8012818:	20083028 	.word	0x20083028
 801281c:	460b      	mov	r3, r1
 801281e:	4642      	mov	r2, r8
 8012820:	4640      	mov	r0, r8
 8012822:	f7ff fc13 	bl	801204c <nema_enable_aa>
 8012826:	4606      	mov	r6, r0
 8012828:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 801291c <flush_lines_+0x414>
 801282c:	2009      	movs	r0, #9
 801282e:	f8d5 b000 	ldr.w	fp, [r5]
 8012832:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8012836:	ed95 aa01 	vldr	s20, [r5, #4]
 801283a:	edd5 9a05 	vldr	s19, [r5, #20]
 801283e:	ed95 9a02 	vldr	s18, [r5, #8]
 8012842:	edd5 8a06 	vldr	s17, [r5, #24]
 8012846:	ed95 8a03 	vldr	s16, [r5, #12]
 801284a:	f8d5 901c 	ldr.w	r9, [r5, #28]
 801284e:	f00b fa71 	bl	801dd34 <nema_cl_get_space>
 8012852:	b3b8      	cbz	r0, 80128c4 <flush_lines_+0x3bc>
 8012854:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012858:	f8c0 b004 	str.w	fp, [r0, #4]
 801285c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012860:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012864:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012868:	6003      	str	r3, [r0, #0]
 801286a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801286e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012872:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012876:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801287a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801287e:	ed80 aa05 	vstr	s20, [r0, #20]
 8012882:	edc0 9a07 	vstr	s19, [r0, #28]
 8012886:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801288a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801288e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012892:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012896:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8012920 <flush_lines_+0x418>
 801289a:	f8c0 a010 	str.w	sl, [r0, #16]
 801289e:	f8c0 b008 	str.w	fp, [r0, #8]
 80128a2:	f8d9 9010 	ldr.w	r9, [r9, #16]
 80128a6:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8012924 <flush_lines_+0x41c>
 80128aa:	f049 0905 	orr.w	r9, r9, #5
 80128ae:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 80128b2:	f8c0 e018 	str.w	lr, [r0, #24]
 80128b6:	f8c0 c020 	str.w	ip, [r0, #32]
 80128ba:	6281      	str	r1, [r0, #40]	@ 0x28
 80128bc:	6302      	str	r2, [r0, #48]	@ 0x30
 80128be:	6383      	str	r3, [r0, #56]	@ 0x38
 80128c0:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80128c4:	2200      	movs	r2, #0
 80128c6:	683b      	ldr	r3, [r7, #0]
 80128c8:	622a      	str	r2, [r5, #32]
 80128ca:	7f5b      	ldrb	r3, [r3, #29]
 80128cc:	06da      	lsls	r2, r3, #27
 80128ce:	d50c      	bpl.n	80128ea <flush_lines_+0x3e2>
 80128d0:	f8d8 3000 	ldr.w	r3, [r8]
 80128d4:	2b02      	cmp	r3, #2
 80128d6:	f47f aebd 	bne.w	8012654 <flush_lines_+0x14c>
 80128da:	e6cc      	b.n	8012676 <flush_lines_+0x16e>
 80128dc:	2201      	movs	r2, #1
 80128de:	4619      	mov	r1, r3
 80128e0:	4610      	mov	r0, r2
 80128e2:	f7ff fbb3 	bl	801204c <nema_enable_aa>
 80128e6:	4606      	mov	r6, r0
 80128e8:	e6c5      	b.n	8012676 <flush_lines_+0x16e>
 80128ea:	4630      	mov	r0, r6
 80128ec:	f7ff fbd0 	bl	8012090 <nema_enable_aa_flags>
 80128f0:	e6ac      	b.n	801264c <flush_lines_+0x144>
 80128f2:	4619      	mov	r1, r3
 80128f4:	4642      	mov	r2, r8
 80128f6:	4640      	mov	r0, r8
 80128f8:	f7ff fba8 	bl	801204c <nema_enable_aa>
 80128fc:	4606      	mov	r6, r0
 80128fe:	e62d      	b.n	801255c <flush_lines_+0x54>
 8012900:	4630      	mov	r0, r6
 8012902:	f7ff fbc5 	bl	8012090 <nema_enable_aa_flags>
 8012906:	edd4 7a08 	vldr	s15, [r4, #32]
 801290a:	e613      	b.n	8012534 <flush_lines_+0x2c>
 801290c:	4619      	mov	r1, r3
 801290e:	4642      	mov	r2, r8
 8012910:	4640      	mov	r0, r8
 8012912:	f7ff fb9b 	bl	801204c <nema_enable_aa>
 8012916:	4606      	mov	r6, r0
 8012918:	e711      	b.n	801273e <flush_lines_+0x236>
 801291a:	bf00      	nop
 801291c:	20083028 	.word	0x20083028
 8012920:	20000064 	.word	0x20000064
 8012924:	ff000100 	.word	0xff000100

08012928 <raster_stroked_line_>:
 8012928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801292c:	ed2d 8b10 	vpush	{d8-d15}
 8012930:	ee31 9a40 	vsub.f32	s18, s2, s0
 8012934:	ee71 8ae0 	vsub.f32	s17, s3, s1
 8012938:	ee69 7a09 	vmul.f32	s15, s18, s18
 801293c:	ee68 6aa8 	vmul.f32	s13, s17, s17
 8012940:	ed9f 7ac0 	vldr	s14, [pc, #768]	@ 8012c44 <raster_stroked_line_+0x31c>
 8012944:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012948:	eef4 7ac7 	vcmpe.f32	s15, s14
 801294c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012950:	b085      	sub	sp, #20
 8012952:	d804      	bhi.n	801295e <raster_stroked_line_+0x36>
 8012954:	b005      	add	sp, #20
 8012956:	ecbd 8b10 	vpop	{d8-d15}
 801295a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801295e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012966:	eeb0 8a40 	vmov.f32	s16, s0
 801296a:	eeb1 bae7 	vsqrt.f32	s22, s15
 801296e:	f100 8206 	bmi.w	8012d7e <raster_stroked_line_+0x456>
 8012972:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012976:	4ab4      	ldr	r2, [pc, #720]	@ (8012c48 <raster_stroked_line_+0x320>)
 8012978:	4bb4      	ldr	r3, [pc, #720]	@ (8012c4c <raster_stroked_line_+0x324>)
 801297a:	eec7 6a8b 	vdiv.f32	s13, s15, s22
 801297e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012982:	edd2 7a00 	vldr	s15, [r2]
 8012986:	ed93 aa00 	vldr	s20, [r3]
 801298a:	ee29 9a26 	vmul.f32	s18, s18, s13
 801298e:	ee68 8aa6 	vmul.f32	s17, s17, s13
 8012992:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012996:	ee2a aa07 	vmul.f32	s20, s20, s14
 801299a:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801299e:	ee2a aa09 	vmul.f32	s20, s20, s18
 80129a2:	4aab      	ldr	r2, [pc, #684]	@ (8012c50 <raster_stroked_line_+0x328>)
 80129a4:	4bab      	ldr	r3, [pc, #684]	@ (8012c54 <raster_stroked_line_+0x32c>)
 80129a6:	6812      	ldr	r2, [r2, #0]
 80129a8:	ee78 ba67 	vsub.f32	s23, s16, s15
 80129ac:	ee3a ca20 	vadd.f32	s24, s20, s1
 80129b0:	ee70 9aca 	vsub.f32	s19, s1, s20
 80129b4:	ee3a da21 	vadd.f32	s26, s20, s3
 80129b8:	ee37 8a88 	vadd.f32	s16, s15, s16
 80129bc:	ee71 ca67 	vsub.f32	s25, s2, s15
 80129c0:	ee77 aa81 	vadd.f32	s21, s15, s2
 80129c4:	ee31 aaca 	vsub.f32	s20, s3, s20
 80129c8:	681b      	ldr	r3, [r3, #0]
 80129ca:	2a00      	cmp	r2, #0
 80129cc:	f000 8150 	beq.w	8012c70 <raster_stroked_line_+0x348>
 80129d0:	7f5b      	ldrb	r3, [r3, #29]
 80129d2:	f013 0310 	ands.w	r3, r3, #16
 80129d6:	d13b      	bne.n	8012a50 <raster_stroked_line_+0x128>
 80129d8:	2201      	movs	r2, #1
 80129da:	4619      	mov	r1, r3
 80129dc:	4610      	mov	r0, r2
 80129de:	f7ff fb35 	bl	801204c <nema_enable_aa>
 80129e2:	4607      	mov	r7, r0
 80129e4:	4c9c      	ldr	r4, [pc, #624]	@ (8012c58 <raster_stroked_line_+0x330>)
 80129e6:	edd4 7a08 	vldr	s15, [r4, #32]
 80129ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80129ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129f2:	dc35      	bgt.n	8012a60 <raster_stroked_line_+0x138>
 80129f4:	4d99      	ldr	r5, [pc, #612]	@ (8012c5c <raster_stroked_line_+0x334>)
 80129f6:	4e9a      	ldr	r6, [pc, #616]	@ (8012c60 <raster_stroked_line_+0x338>)
 80129f8:	edd5 7a08 	vldr	s15, [r5, #32]
 80129fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a04:	6833      	ldr	r3, [r6, #0]
 8012a06:	f340 80f6 	ble.w	8012bf6 <raster_stroked_line_+0x2ce>
 8012a0a:	2b01      	cmp	r3, #1
 8012a0c:	f000 8095 	beq.w	8012b3a <raster_stroked_line_+0x212>
 8012a10:	3301      	adds	r3, #1
 8012a12:	6033      	str	r3, [r6, #0]
 8012a14:	4638      	mov	r0, r7
 8012a16:	edc4 ba00 	vstr	s23, [r4]
 8012a1a:	ed84 ca04 	vstr	s24, [r4, #16]
 8012a1e:	edc4 ca01 	vstr	s25, [r4, #4]
 8012a22:	ed84 da05 	vstr	s26, [r4, #20]
 8012a26:	edc4 aa02 	vstr	s21, [r4, #8]
 8012a2a:	ed84 aa06 	vstr	s20, [r4, #24]
 8012a2e:	ed84 8a03 	vstr	s16, [r4, #12]
 8012a32:	edc4 9a07 	vstr	s19, [r4, #28]
 8012a36:	ed84 ba08 	vstr	s22, [r4, #32]
 8012a3a:	ed84 9a09 	vstr	s18, [r4, #36]	@ 0x24
 8012a3e:	edc4 8a0a 	vstr	s17, [r4, #40]	@ 0x28
 8012a42:	b005      	add	sp, #20
 8012a44:	ecbd 8b10 	vpop	{d8-d15}
 8012a48:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a4c:	f7ff bb20 	b.w	8012090 <nema_enable_aa_flags>
 8012a50:	2300      	movs	r3, #0
 8012a52:	461a      	mov	r2, r3
 8012a54:	4619      	mov	r1, r3
 8012a56:	4618      	mov	r0, r3
 8012a58:	f7ff faf8 	bl	801204c <nema_enable_aa>
 8012a5c:	4607      	mov	r7, r0
 8012a5e:	e7c1      	b.n	80129e4 <raster_stroked_line_+0xbc>
 8012a60:	2009      	movs	r0, #9
 8012a62:	ed94 ea00 	vldr	s28, [r4]
 8012a66:	edd4 da04 	vldr	s27, [r4, #16]
 8012a6a:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8012a6e:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8012a72:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8012a76:	f8d4 8018 	ldr.w	r8, [r4, #24]
 8012a7a:	68e6      	ldr	r6, [r4, #12]
 8012a7c:	69e5      	ldr	r5, [r4, #28]
 8012a7e:	f00b f959 	bl	801dd34 <nema_cl_get_space>
 8012a82:	b380      	cbz	r0, 8012ae6 <raster_stroked_line_+0x1be>
 8012a84:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012a88:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012a8c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012a90:	ed80 ea01 	vstr	s28, [r0, #4]
 8012a94:	edc0 da03 	vstr	s27, [r0, #12]
 8012a98:	f44f 714d 	mov.w	r1, #820	@ 0x334
 8012a9c:	f44f 7250 	mov.w	r2, #832	@ 0x340
 8012aa0:	f8c0 9024 	str.w	r9, [r0, #36]	@ 0x24
 8012aa4:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8012aa8:	f44f 7951 	mov.w	r9, #836	@ 0x344
 8012aac:	f44f 7854 	mov.w	r8, #848	@ 0x350
 8012ab0:	6346      	str	r6, [r0, #52]	@ 0x34
 8012ab2:	f44f 7655 	mov.w	r6, #852	@ 0x354
 8012ab6:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8012ab8:	4d6a      	ldr	r5, [pc, #424]	@ (8012c64 <raster_stroked_line_+0x33c>)
 8012aba:	6003      	str	r3, [r0, #0]
 8012abc:	f8c0 c008 	str.w	ip, [r0, #8]
 8012ac0:	f8c0 e010 	str.w	lr, [r0, #16]
 8012ac4:	692b      	ldr	r3, [r5, #16]
 8012ac6:	4d68      	ldr	r5, [pc, #416]	@ (8012c68 <raster_stroked_line_+0x340>)
 8012ac8:	f043 0305 	orr.w	r3, r3, #5
 8012acc:	f8c0 b014 	str.w	fp, [r0, #20]
 8012ad0:	f8c0 a01c 	str.w	sl, [r0, #28]
 8012ad4:	6443      	str	r3, [r0, #68]	@ 0x44
 8012ad6:	6181      	str	r1, [r0, #24]
 8012ad8:	6202      	str	r2, [r0, #32]
 8012ada:	f8c0 9028 	str.w	r9, [r0, #40]	@ 0x28
 8012ade:	f8c0 8030 	str.w	r8, [r0, #48]	@ 0x30
 8012ae2:	6386      	str	r6, [r0, #56]	@ 0x38
 8012ae4:	6405      	str	r5, [r0, #64]	@ 0x40
 8012ae6:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8012aea:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012aee:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012af2:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012af6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012afa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b02:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 8012c6c <raster_stroked_line_+0x344>
 8012b06:	bf48      	it	mi
 8012b08:	eef1 7a67 	vnegmi.f32	s15, s15
 8012b0c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b14:	edd4 da01 	vldr	s27, [r4, #4]
 8012b18:	edd4 ea05 	vldr	s29, [r4, #20]
 8012b1c:	ed94 ea02 	vldr	s28, [r4, #8]
 8012b20:	ed94 fa06 	vldr	s30, [r4, #24]
 8012b24:	f200 80ee 	bhi.w	8012d04 <raster_stroked_line_+0x3dc>
 8012b28:	eef0 9a4f 	vmov.f32	s19, s30
 8012b2c:	eeb0 ca6e 	vmov.f32	s24, s29
 8012b30:	eeb0 8a4e 	vmov.f32	s16, s28
 8012b34:	eef0 ba6d 	vmov.f32	s23, s27
 8012b38:	e75c      	b.n	80129f4 <raster_stroked_line_+0xcc>
 8012b3a:	edd5 7a09 	vldr	s15, [r5, #36]	@ 0x24
 8012b3e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012b42:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012b46:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012b4a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012b4e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012b52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b56:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8012c6c <raster_stroked_line_+0x344>
 8012b5a:	bf48      	it	mi
 8012b5c:	eef1 7a67 	vnegmi.f32	s15, s15
 8012b60:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b68:	edd5 da01 	vldr	s27, [r5, #4]
 8012b6c:	edd5 ea05 	vldr	s29, [r5, #20]
 8012b70:	ed95 ea02 	vldr	s28, [r5, #8]
 8012b74:	ed95 fa06 	vldr	s30, [r5, #24]
 8012b78:	f240 80bb 	bls.w	8012cf2 <raster_stroked_line_+0x3ca>
 8012b7c:	2009      	movs	r0, #9
 8012b7e:	f00b f8d9 	bl	801dd34 <nema_cl_get_space>
 8012b82:	2800      	cmp	r0, #0
 8012b84:	f000 80f7 	beq.w	8012d76 <raster_stroked_line_+0x44e>
 8012b88:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012b8c:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8012b90:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8012b94:	edc0 da01 	vstr	s27, [r0, #4]
 8012b98:	edc0 ea03 	vstr	s29, [r0, #12]
 8012b9c:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8012ba0:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8012ba4:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012ba8:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8012bac:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012bb0:	edc0 ba05 	vstr	s23, [r0, #20]
 8012bb4:	ed80 ca07 	vstr	s24, [r0, #28]
 8012bb8:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012bbc:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012bc0:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012bc4:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012bc8:	edd5 7a08 	vldr	s15, [r5, #32]
 8012bcc:	6103      	str	r3, [r0, #16]
 8012bce:	4b25      	ldr	r3, [pc, #148]	@ (8012c64 <raster_stroked_line_+0x33c>)
 8012bd0:	f8c0 a000 	str.w	sl, [r0]
 8012bd4:	f8c0 9008 	str.w	r9, [r0, #8]
 8012bd8:	691b      	ldr	r3, [r3, #16]
 8012bda:	6302      	str	r2, [r0, #48]	@ 0x30
 8012bdc:	f043 0305 	orr.w	r3, r3, #5
 8012be0:	4a21      	ldr	r2, [pc, #132]	@ (8012c68 <raster_stroked_line_+0x340>)
 8012be2:	6443      	str	r3, [r0, #68]	@ 0x44
 8012be4:	6833      	ldr	r3, [r6, #0]
 8012be6:	f8c0 8018 	str.w	r8, [r0, #24]
 8012bea:	f8c0 e020 	str.w	lr, [r0, #32]
 8012bee:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012bf2:	6381      	str	r1, [r0, #56]	@ 0x38
 8012bf4:	6402      	str	r2, [r0, #64]	@ 0x40
 8012bf6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bfe:	f103 0301 	add.w	r3, r3, #1
 8012c02:	6033      	str	r3, [r6, #0]
 8012c04:	f47f af06 	bne.w	8012a14 <raster_stroked_line_+0xec>
 8012c08:	4638      	mov	r0, r7
 8012c0a:	edc5 ba00 	vstr	s23, [r5]
 8012c0e:	ed85 ca04 	vstr	s24, [r5, #16]
 8012c12:	edc5 ca01 	vstr	s25, [r5, #4]
 8012c16:	ed85 da05 	vstr	s26, [r5, #20]
 8012c1a:	edc5 aa02 	vstr	s21, [r5, #8]
 8012c1e:	ed85 aa06 	vstr	s20, [r5, #24]
 8012c22:	ed85 8a03 	vstr	s16, [r5, #12]
 8012c26:	edc5 9a07 	vstr	s19, [r5, #28]
 8012c2a:	ed85 ba08 	vstr	s22, [r5, #32]
 8012c2e:	ed85 9a09 	vstr	s18, [r5, #36]	@ 0x24
 8012c32:	edc5 8a0a 	vstr	s17, [r5, #40]	@ 0x28
 8012c36:	b005      	add	sp, #20
 8012c38:	ecbd 8b10 	vpop	{d8-d15}
 8012c3c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c40:	f7ff ba26 	b.w	8012090 <nema_enable_aa_flags>
 8012c44:	3727c5ac 	.word	0x3727c5ac
 8012c48:	20000138 	.word	0x20000138
 8012c4c:	2000013c 	.word	0x2000013c
 8012c50:	20082fb4 	.word	0x20082fb4
 8012c54:	20082fac 	.word	0x20082fac
 8012c58:	20082ffc 	.word	0x20082ffc
 8012c5c:	20082fc4 	.word	0x20082fc4
 8012c60:	20083028 	.word	0x20083028
 8012c64:	20000064 	.word	0x20000064
 8012c68:	ff000100 	.word	0xff000100
 8012c6c:	3d4ccccd 	.word	0x3d4ccccd
 8012c70:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8012c72:	f7ff fa0d 	bl	8012090 <nema_enable_aa_flags>
 8012c76:	4604      	mov	r4, r0
 8012c78:	2009      	movs	r0, #9
 8012c7a:	f00b f85b 	bl	801dd34 <nema_cl_get_space>
 8012c7e:	b380      	cbz	r0, 8012ce2 <raster_stroked_line_+0x3ba>
 8012c80:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012c84:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8012c88:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012c8c:	edc0 ba01 	vstr	s23, [r0, #4]
 8012c90:	ed80 ca03 	vstr	s24, [r0, #12]
 8012c94:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8012c98:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012c9c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012ca0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012ca4:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012ca8:	edc0 ca05 	vstr	s25, [r0, #20]
 8012cac:	ed80 da07 	vstr	s26, [r0, #28]
 8012cb0:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8012cb4:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8012cb8:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012cbc:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012cc0:	6103      	str	r3, [r0, #16]
 8012cc2:	4b37      	ldr	r3, [pc, #220]	@ (8012da0 <raster_stroked_line_+0x478>)
 8012cc4:	f8c0 e000 	str.w	lr, [r0]
 8012cc8:	f8c0 c008 	str.w	ip, [r0, #8]
 8012ccc:	691b      	ldr	r3, [r3, #16]
 8012cce:	6187      	str	r7, [r0, #24]
 8012cd0:	f043 0305 	orr.w	r3, r3, #5
 8012cd4:	6443      	str	r3, [r0, #68]	@ 0x44
 8012cd6:	4b33      	ldr	r3, [pc, #204]	@ (8012da4 <raster_stroked_line_+0x47c>)
 8012cd8:	6206      	str	r6, [r0, #32]
 8012cda:	6285      	str	r5, [r0, #40]	@ 0x28
 8012cdc:	6301      	str	r1, [r0, #48]	@ 0x30
 8012cde:	6382      	str	r2, [r0, #56]	@ 0x38
 8012ce0:	6403      	str	r3, [r0, #64]	@ 0x40
 8012ce2:	4620      	mov	r0, r4
 8012ce4:	b005      	add	sp, #20
 8012ce6:	ecbd 8b10 	vpop	{d8-d15}
 8012cea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cee:	f7ff b9cf 	b.w	8012090 <nema_enable_aa_flags>
 8012cf2:	eef0 9a4f 	vmov.f32	s19, s30
 8012cf6:	eeb0 ca6e 	vmov.f32	s24, s29
 8012cfa:	eeb0 8a4e 	vmov.f32	s16, s28
 8012cfe:	eef0 ba6d 	vmov.f32	s23, s27
 8012d02:	e685      	b.n	8012a10 <raster_stroked_line_+0xe8>
 8012d04:	2009      	movs	r0, #9
 8012d06:	f00b f815 	bl	801dd34 <nema_cl_get_space>
 8012d0a:	2800      	cmp	r0, #0
 8012d0c:	f43f ae72 	beq.w	80129f4 <raster_stroked_line_+0xcc>
 8012d10:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012d14:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8012d18:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8012d1c:	edc0 da01 	vstr	s27, [r0, #4]
 8012d20:	edc0 ea03 	vstr	s29, [r0, #12]
 8012d24:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8012d28:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012d2c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012d30:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012d34:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012d38:	6103      	str	r3, [r0, #16]
 8012d3a:	4b19      	ldr	r3, [pc, #100]	@ (8012da0 <raster_stroked_line_+0x478>)
 8012d3c:	f8c0 8000 	str.w	r8, [r0]
 8012d40:	f8c0 e008 	str.w	lr, [r0, #8]
 8012d44:	691b      	ldr	r3, [r3, #16]
 8012d46:	edc0 ba05 	vstr	s23, [r0, #20]
 8012d4a:	f043 0305 	orr.w	r3, r3, #5
 8012d4e:	6443      	str	r3, [r0, #68]	@ 0x44
 8012d50:	4b14      	ldr	r3, [pc, #80]	@ (8012da4 <raster_stroked_line_+0x47c>)
 8012d52:	ed80 ca07 	vstr	s24, [r0, #28]
 8012d56:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012d5a:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012d5e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012d62:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012d66:	f8c0 c018 	str.w	ip, [r0, #24]
 8012d6a:	6206      	str	r6, [r0, #32]
 8012d6c:	6285      	str	r5, [r0, #40]	@ 0x28
 8012d6e:	6301      	str	r1, [r0, #48]	@ 0x30
 8012d70:	6382      	str	r2, [r0, #56]	@ 0x38
 8012d72:	6403      	str	r3, [r0, #64]	@ 0x40
 8012d74:	e63e      	b.n	80129f4 <raster_stroked_line_+0xcc>
 8012d76:	6833      	ldr	r3, [r6, #0]
 8012d78:	edd5 7a08 	vldr	s15, [r5, #32]
 8012d7c:	e73b      	b.n	8012bf6 <raster_stroked_line_+0x2ce>
 8012d7e:	eeb0 0a67 	vmov.f32	s0, s15
 8012d82:	edcd 1a03 	vstr	s3, [sp, #12]
 8012d86:	ed8d 1a02 	vstr	s2, [sp, #8]
 8012d8a:	edcd 0a01 	vstr	s1, [sp, #4]
 8012d8e:	f01e fa57 	bl	8031240 <sqrtf>
 8012d92:	eddd 1a03 	vldr	s3, [sp, #12]
 8012d96:	ed9d 1a02 	vldr	s2, [sp, #8]
 8012d9a:	eddd 0a01 	vldr	s1, [sp, #4]
 8012d9e:	e5e8      	b.n	8012972 <raster_stroked_line_+0x4a>
 8012da0:	20000064 	.word	0x20000064
 8012da4:	ff000100 	.word	0xff000100

08012da8 <render_arc.isra.6>:
 8012da8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012dac:	ed2d 8b10 	vpush	{d8-d15}
 8012db0:	eddf 8aa8 	vldr	s17, [pc, #672]	@ 8013054 <render_arc.isra.6+0x2ac>
 8012db4:	ee20 aa28 	vmul.f32	s20, s0, s17
 8012db8:	ee60 8aa8 	vmul.f32	s17, s1, s17
 8012dbc:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 8012dc0:	ee78 8aca 	vsub.f32	s17, s17, s20
 8012dc4:	ee28 0a80 	vmul.f32	s0, s17, s0
 8012dc8:	4604      	mov	r4, r0
 8012dca:	460d      	mov	r5, r1
 8012dcc:	eef0 ca41 	vmov.f32	s25, s2
 8012dd0:	eeb0 da61 	vmov.f32	s26, s3
 8012dd4:	eef0 da42 	vmov.f32	s27, s4
 8012dd8:	eeb0 ea62 	vmov.f32	s28, s5
 8012ddc:	ed9f 8a9e 	vldr	s16, [pc, #632]	@ 8013058 <render_arc.isra.6+0x2b0>
 8012de0:	f01e fbb2 	bl	8031548 <tanf>
 8012de4:	ee20 8a08 	vmul.f32	s16, s0, s16
 8012de8:	eeb0 0a68 	vmov.f32	s0, s17
 8012dec:	f01e fb1a 	bl	8031424 <cosf>
 8012df0:	eef0 9a40 	vmov.f32	s19, s0
 8012df4:	eeb0 0a68 	vmov.f32	s0, s17
 8012df8:	f01e fb60 	bl	80314bc <sinf>
 8012dfc:	eddf 7a97 	vldr	s15, [pc, #604]	@ 801305c <render_arc.isra.6+0x2b4>
 8012e00:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8012e04:	ee87 9a27 	vdiv.f32	s18, s14, s15
 8012e08:	ed9f 7a95 	vldr	s14, [pc, #596]	@ 8013060 <render_arc.isra.6+0x2b8>
 8012e0c:	eeb0 ca40 	vmov.f32	s24, s0
 8012e10:	ee68 8a00 	vmul.f32	s17, s16, s0
 8012e14:	eeb0 0a4a 	vmov.f32	s0, s20
 8012e18:	ee29 9a07 	vmul.f32	s18, s18, s14
 8012e1c:	f01e fb02 	bl	8031424 <cosf>
 8012e20:	eeb0 ba40 	vmov.f32	s22, s0
 8012e24:	eeb0 0a4a 	vmov.f32	s0, s20
 8012e28:	f01e fb48 	bl	80314bc <sinf>
 8012e2c:	eef0 aa40 	vmov.f32	s21, s0
 8012e30:	eeb0 0a49 	vmov.f32	s0, s18
 8012e34:	f01e faf6 	bl	8031424 <cosf>
 8012e38:	ee68 ea29 	vmul.f32	s29, s16, s19
 8012e3c:	eeb0 aa40 	vmov.f32	s20, s0
 8012e40:	eeb0 0a49 	vmov.f32	s0, s18
 8012e44:	f01e fb3a 	bl	80314bc <sinf>
 8012e48:	07ea      	lsls	r2, r5, #31
 8012e4a:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8012e4e:	ee7c ea6e 	vsub.f32	s29, s24, s29
 8012e52:	f140 80c1 	bpl.w	8012fd8 <render_arc.isra.6+0x230>
 8012e56:	edd4 ba03 	vldr	s23, [r4, #12]
 8012e5a:	ed94 9a04 	vldr	s18, [r4, #16]
 8012e5e:	ee28 7a8b 	vmul.f32	s14, s17, s22
 8012e62:	ee68 6a2a 	vmul.f32	s13, s16, s21
 8012e66:	ee68 7aaa 	vmul.f32	s15, s17, s21
 8012e6a:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8012e6e:	ee6e 8aaa 	vmul.f32	s17, s29, s21
 8012e72:	ee6e ea8b 	vmul.f32	s29, s29, s22
 8012e76:	eddf 2a7b 	vldr	s5, [pc, #492]	@ 8013064 <render_arc.isra.6+0x2bc>
 8012e7a:	ee7b 6a66 	vsub.f32	s13, s22, s13
 8012e7e:	ee77 8a68 	vsub.f32	s17, s14, s17
 8012e82:	ee77 7aae 	vadd.f32	s15, s15, s29
 8012e86:	ee38 8a2a 	vadd.f32	s16, s16, s21
 8012e8a:	ee36 7aa2 	vadd.f32	s14, s13, s5
 8012e8e:	ee38 8a22 	vadd.f32	s16, s16, s5
 8012e92:	ee78 8aa2 	vadd.f32	s17, s17, s5
 8012e96:	ee77 7aa2 	vadd.f32	s15, s15, s5
 8012e9a:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012e9e:	ee28 8a0e 	vmul.f32	s16, s16, s28
 8012ea2:	ee68 8aad 	vmul.f32	s17, s17, s27
 8012ea6:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012eaa:	ee2a fa07 	vmul.f32	s30, s20, s14
 8012eae:	ee20 6a08 	vmul.f32	s12, s0, s16
 8012eb2:	ee6a ea28 	vmul.f32	s29, s20, s17
 8012eb6:	ee60 6a27 	vmul.f32	s13, s0, s15
 8012eba:	ee60 8a28 	vmul.f32	s17, s0, s17
 8012ebe:	ee20 7a07 	vmul.f32	s14, s0, s14
 8012ec2:	ee2a 8a08 	vmul.f32	s16, s20, s16
 8012ec6:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012eca:	ee3f fa46 	vsub.f32	s30, s30, s12
 8012ece:	ee37 8a08 	vadd.f32	s16, s14, s16
 8012ed2:	ee7e eae6 	vsub.f32	s29, s29, s13
 8012ed6:	ee78 7aa7 	vadd.f32	s15, s17, s15
 8012eda:	07ab      	lsls	r3, r5, #30
 8012edc:	ee3f fa2c 	vadd.f32	s30, s30, s25
 8012ee0:	ee38 8a0d 	vadd.f32	s16, s16, s26
 8012ee4:	ee7e eaac 	vadd.f32	s29, s29, s25
 8012ee8:	ee77 8a8d 	vadd.f32	s17, s15, s26
 8012eec:	f100 809a 	bmi.w	8013024 <render_arc.isra.6+0x27c>
 8012ef0:	ee29 2a8b 	vmul.f32	s4, s19, s22
 8012ef4:	ee69 9aaa 	vmul.f32	s19, s19, s21
 8012ef8:	ee2c ba0b 	vmul.f32	s22, s24, s22
 8012efc:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8012f00:	ee39 ba8b 	vadd.f32	s22, s19, s22
 8012f04:	ee72 aa6a 	vsub.f32	s21, s4, s21
 8012f08:	ee7a aaa2 	vadd.f32	s21, s21, s5
 8012f0c:	ee7b 2a22 	vadd.f32	s5, s22, s5
 8012f10:	ee6a daad 	vmul.f32	s27, s21, s27
 8012f14:	ee22 ea8e 	vmul.f32	s28, s5, s28
 8012f18:	ee2a 1a2d 	vmul.f32	s2, s20, s27
 8012f1c:	ee60 da2d 	vmul.f32	s27, s0, s27
 8012f20:	ee20 0a0e 	vmul.f32	s0, s0, s28
 8012f24:	ee2a ea0e 	vmul.f32	s28, s20, s28
 8012f28:	ee31 0a40 	vsub.f32	s0, s2, s0
 8012f2c:	ee3d ea8e 	vadd.f32	s28, s27, s28
 8012f30:	4b4d      	ldr	r3, [pc, #308]	@ (8013068 <render_arc.isra.6+0x2c0>)
 8012f32:	ee70 ca2c 	vadd.f32	s25, s0, s25
 8012f36:	681b      	ldr	r3, [r3, #0]
 8012f38:	ee3e da0d 	vadd.f32	s26, s28, s26
 8012f3c:	7f1a      	ldrb	r2, [r3, #28]
 8012f3e:	2a00      	cmp	r2, #0
 8012f40:	d179      	bne.n	8013036 <render_arc.isra.6+0x28e>
 8012f42:	4a4a      	ldr	r2, [pc, #296]	@ (801306c <render_arc.isra.6+0x2c4>)
 8012f44:	6814      	ldr	r4, [r2, #0]
 8012f46:	2c01      	cmp	r4, #1
 8012f48:	f000 8098 	beq.w	801307c <render_arc.isra.6+0x2d4>
 8012f4c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8012f4e:	2509      	movs	r5, #9
 8012f50:	2a00      	cmp	r2, #0
 8012f52:	d164      	bne.n	801301e <render_arc.isra.6+0x276>
 8012f54:	4946      	ldr	r1, [pc, #280]	@ (8013070 <render_arc.isra.6+0x2c8>)
 8012f56:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8012f58:	780b      	ldrb	r3, [r1, #0]
 8012f5a:	4014      	ands	r4, r2
 8012f5c:	2b01      	cmp	r3, #1
 8012f5e:	d103      	bne.n	8012f68 <render_arc.isra.6+0x1c0>
 8012f60:	684b      	ldr	r3, [r1, #4]
 8012f62:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8012f66:	431c      	orrs	r4, r3
 8012f68:	2009      	movs	r0, #9
 8012f6a:	f00a fee3 	bl	801dd34 <nema_cl_get_space>
 8012f6e:	b378      	cbz	r0, 8012fd0 <render_arc.isra.6+0x228>
 8012f70:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8012f74:	f44f 7948 	mov.w	r9, #800	@ 0x320
 8012f78:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8012f7c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012f80:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012f84:	f44f 7751 	mov.w	r7, #836	@ 0x344
 8012f88:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8012f8c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012f90:	edc0 ba01 	vstr	s23, [r0, #4]
 8012f94:	ed80 9a03 	vstr	s18, [r0, #12]
 8012f98:	ed80 fa05 	vstr	s30, [r0, #20]
 8012f9c:	ed80 8a07 	vstr	s16, [r0, #28]
 8012fa0:	edc0 ea09 	vstr	s29, [r0, #36]	@ 0x24
 8012fa4:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012fa8:	edc0 ca0d 	vstr	s25, [r0, #52]	@ 0x34
 8012fac:	ed80 da0f 	vstr	s26, [r0, #60]	@ 0x3c
 8012fb0:	6183      	str	r3, [r0, #24]
 8012fb2:	4b30      	ldr	r3, [pc, #192]	@ (8013074 <render_arc.isra.6+0x2cc>)
 8012fb4:	432c      	orrs	r4, r5
 8012fb6:	6444      	str	r4, [r0, #68]	@ 0x44
 8012fb8:	f8c0 9000 	str.w	r9, [r0]
 8012fbc:	f8c0 8008 	str.w	r8, [r0, #8]
 8012fc0:	f8c0 e010 	str.w	lr, [r0, #16]
 8012fc4:	f8c0 c020 	str.w	ip, [r0, #32]
 8012fc8:	6287      	str	r7, [r0, #40]	@ 0x28
 8012fca:	6306      	str	r6, [r0, #48]	@ 0x30
 8012fcc:	6381      	str	r1, [r0, #56]	@ 0x38
 8012fce:	6403      	str	r3, [r0, #64]	@ 0x40
 8012fd0:	ecbd 8b10 	vpop	{d8-d15}
 8012fd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012fd8:	ed9f 9a22 	vldr	s18, [pc, #136]	@ 8013064 <render_arc.isra.6+0x2bc>
 8012fdc:	ee2a 7a89 	vmul.f32	s14, s21, s18
 8012fe0:	ee6b 7a09 	vmul.f32	s15, s22, s18
 8012fe4:	ee3b 7a47 	vsub.f32	s14, s22, s14
 8012fe8:	ee77 7aaa 	vadd.f32	s15, s15, s21
 8012fec:	ee37 7a09 	vadd.f32	s14, s14, s18
 8012ff0:	ee77 7a89 	vadd.f32	s15, s15, s18
 8012ff4:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012ff8:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012ffc:	ee6a ba07 	vmul.f32	s23, s20, s14
 8013000:	ee20 9a07 	vmul.f32	s18, s0, s14
 8013004:	ee20 7a27 	vmul.f32	s14, s0, s15
 8013008:	ee6a 7a27 	vmul.f32	s15, s20, s15
 801300c:	ee7b bac7 	vsub.f32	s23, s23, s14
 8013010:	ee39 9a27 	vadd.f32	s18, s18, s15
 8013014:	ee7b baac 	vadd.f32	s23, s23, s25
 8013018:	ee39 9a0d 	vadd.f32	s18, s18, s26
 801301c:	e71f      	b.n	8012e5e <render_arc.isra.6+0xb6>
 801301e:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013022:	e797      	b.n	8012f54 <render_arc.isra.6+0x1ac>
 8013024:	4b10      	ldr	r3, [pc, #64]	@ (8013068 <render_arc.isra.6+0x2c0>)
 8013026:	edd4 ca05 	vldr	s25, [r4, #20]
 801302a:	681b      	ldr	r3, [r3, #0]
 801302c:	ed94 da06 	vldr	s26, [r4, #24]
 8013030:	7f1a      	ldrb	r2, [r3, #28]
 8013032:	2a00      	cmp	r2, #0
 8013034:	d085      	beq.n	8012f42 <render_arc.isra.6+0x19a>
 8013036:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013038:	b90a      	cbnz	r2, 801303e <render_arc.isra.6+0x296>
 801303a:	2507      	movs	r5, #7
 801303c:	e78a      	b.n	8012f54 <render_arc.isra.6+0x1ac>
 801303e:	4a0e      	ldr	r2, [pc, #56]	@ (8013078 <render_arc.isra.6+0x2d0>)
 8013040:	2507      	movs	r5, #7
 8013042:	6812      	ldr	r2, [r2, #0]
 8013044:	2a00      	cmp	r2, #0
 8013046:	bf0c      	ite	eq
 8013048:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 801304c:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013050:	e780      	b.n	8012f54 <render_arc.isra.6+0x1ac>
 8013052:	bf00      	nop
 8013054:	3c8efa35 	.word	0x3c8efa35
 8013058:	3faaaaab 	.word	0x3faaaaab
 801305c:	43340000 	.word	0x43340000
 8013060:	40490fdb 	.word	0x40490fdb
 8013064:	00000000 	.word	0x00000000
 8013068:	20082fac 	.word	0x20082fac
 801306c:	20082fb4 	.word	0x20082fb4
 8013070:	20000064 	.word	0x20000064
 8013074:	ff000100 	.word	0xff000100
 8013078:	20082fb0 	.word	0x20082fb0
 801307c:	4626      	mov	r6, r4
 801307e:	eef6 9a00 	vmov.f32	s19, #96	@ 0x3f000000  0.5
 8013082:	4d57      	ldr	r5, [pc, #348]	@ (80131e0 <render_arc.isra.6+0x438>)
 8013084:	4f57      	ldr	r7, [pc, #348]	@ (80131e4 <render_arc.isra.6+0x43c>)
 8013086:	ee7b 4a8f 	vadd.f32	s9, s23, s30
 801308a:	ee7f 7a2e 	vadd.f32	s15, s30, s29
 801308e:	ee3e 5aac 	vadd.f32	s10, s29, s25
 8013092:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013096:	ee64 4aa9 	vmul.f32	s9, s9, s19
 801309a:	ee25 5a29 	vmul.f32	s10, s10, s19
 801309e:	ee74 3aa7 	vadd.f32	s7, s9, s15
 80130a2:	ee37 6a85 	vadd.f32	s12, s15, s10
 80130a6:	ee39 4a08 	vadd.f32	s8, s18, s16
 80130aa:	ee78 7a28 	vadd.f32	s15, s16, s17
 80130ae:	ee78 5a8d 	vadd.f32	s11, s17, s26
 80130b2:	ee67 7aa9 	vmul.f32	s15, s15, s19
 80130b6:	ee24 4a29 	vmul.f32	s8, s8, s19
 80130ba:	ee65 5aa9 	vmul.f32	s11, s11, s19
 80130be:	ee34 3a27 	vadd.f32	s6, s8, s15
 80130c2:	ee63 3aa9 	vmul.f32	s7, s7, s19
 80130c6:	ee26 6a29 	vmul.f32	s12, s12, s19
 80130ca:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80130ce:	ee33 aa86 	vadd.f32	s20, s7, s12
 80130d2:	ee3b 7aac 	vadd.f32	s14, s23, s25
 80130d6:	ee23 3a29 	vmul.f32	s6, s6, s19
 80130da:	ee67 7aa9 	vmul.f32	s15, s15, s19
 80130de:	ee2a aa29 	vmul.f32	s20, s20, s19
 80130e2:	ee27 7a29 	vmul.f32	s14, s14, s19
 80130e6:	ee73 aa27 	vadd.f32	s21, s6, s15
 80130ea:	ee79 6a0d 	vadd.f32	s13, s18, s26
 80130ee:	ee37 7a4a 	vsub.f32	s14, s14, s20
 80130f2:	ee6a aaa9 	vmul.f32	s21, s21, s19
 80130f6:	ee66 6aa9 	vmul.f32	s13, s13, s19
 80130fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80130fe:	ee76 6aea 	vsub.f32	s13, s13, s21
 8013102:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013106:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801310a:	bf48      	it	mi
 801310c:	eeb1 7a47 	vnegmi.f32	s14, s14
 8013110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013114:	bf48      	it	mi
 8013116:	eef1 6a66 	vnegmi.f32	s13, s13
 801311a:	b94e      	cbnz	r6, 8013130 <render_arc.isra.6+0x388>
 801311c:	eeb4 7ae9 	vcmpe.f32	s14, s19
 8013120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013124:	d504      	bpl.n	8013130 <render_arc.isra.6+0x388>
 8013126:	eef4 6ae9 	vcmpe.f32	s13, s19
 801312a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801312e:	d423      	bmi.n	8013178 <render_arc.isra.6+0x3d0>
 8013130:	682a      	ldr	r2, [r5, #0]
 8013132:	2a09      	cmp	r2, #9
 8013134:	dc20      	bgt.n	8013178 <render_arc.isra.6+0x3d0>
 8013136:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801313a:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 801313e:	3201      	adds	r2, #1
 8013140:	edc3 ca04 	vstr	s25, [r3, #16]
 8013144:	ed83 da05 	vstr	s26, [r3, #20]
 8013148:	3401      	adds	r4, #1
 801314a:	eef0 8a43 	vmov.f32	s17, s6
 801314e:	eef0 ea63 	vmov.f32	s29, s7
 8013152:	eeb0 8a44 	vmov.f32	s16, s8
 8013156:	eeb0 fa64 	vmov.f32	s30, s9
 801315a:	ed83 6a00 	vstr	s12, [r3]
 801315e:	edc3 7a01 	vstr	s15, [r3, #4]
 8013162:	ed83 5a02 	vstr	s10, [r3, #8]
 8013166:	edc3 5a03 	vstr	s11, [r3, #12]
 801316a:	602a      	str	r2, [r5, #0]
 801316c:	eeb0 da6a 	vmov.f32	s26, s21
 8013170:	eef0 ca4a 	vmov.f32	s25, s20
 8013174:	2600      	movs	r6, #0
 8013176:	e786      	b.n	8013086 <render_arc.isra.6+0x2de>
 8013178:	eef0 1a6a 	vmov.f32	s3, s21
 801317c:	eeb0 1a4a 	vmov.f32	s2, s20
 8013180:	eef0 0a49 	vmov.f32	s1, s18
 8013184:	eeb0 0a6b 	vmov.f32	s0, s23
 8013188:	f7ff fbce 	bl	8012928 <raster_stroked_line_>
 801318c:	eef0 1a4d 	vmov.f32	s3, s26
 8013190:	eeb0 1a6c 	vmov.f32	s2, s25
 8013194:	eef0 0a6a 	vmov.f32	s1, s21
 8013198:	eeb0 0a4a 	vmov.f32	s0, s20
 801319c:	f7ff fbc4 	bl	8012928 <raster_stroked_line_>
 80131a0:	682b      	ldr	r3, [r5, #0]
 80131a2:	3c01      	subs	r4, #1
 80131a4:	b1ab      	cbz	r3, 80131d2 <render_arc.isra.6+0x42a>
 80131a6:	3b01      	subs	r3, #1
 80131a8:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80131ac:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 80131b0:	eeb0 9a4d 	vmov.f32	s18, s26
 80131b4:	eef0 ba6c 	vmov.f32	s23, s25
 80131b8:	ed92 fa00 	vldr	s30, [r2]
 80131bc:	ed92 8a01 	vldr	s16, [r2, #4]
 80131c0:	edd2 ea02 	vldr	s29, [r2, #8]
 80131c4:	edd2 8a03 	vldr	s17, [r2, #12]
 80131c8:	ed92 da05 	vldr	s26, [r2, #20]
 80131cc:	edd2 ca04 	vldr	s25, [r2, #16]
 80131d0:	602b      	str	r3, [r5, #0]
 80131d2:	2c00      	cmp	r4, #0
 80131d4:	f47f af57 	bne.w	8013086 <render_arc.isra.6+0x2de>
 80131d8:	ecbd 8b10 	vpop	{d8-d15}
 80131dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80131e0:	20083148 	.word	0x20083148
 80131e4:	20083058 	.word	0x20083058

080131e8 <fill_arc.isra.7>:
 80131e8:	b570      	push	{r4, r5, r6, lr}
 80131ea:	ed2d 8b10 	vpush	{d8-d15}
 80131ee:	ed90 8a07 	vldr	s16, [r0, #28]
 80131f2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80131f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131fa:	b082      	sub	sp, #8
 80131fc:	4604      	mov	r4, r0
 80131fe:	d42a      	bmi.n	8013256 <fill_arc.isra.7+0x6e>
 8013200:	eddf 7adf 	vldr	s15, [pc, #892]	@ 8013580 <fill_arc.isra.7+0x398>
 8013204:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8013208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801320c:	d92a      	bls.n	8013264 <fill_arc.isra.7+0x7c>
 801320e:	edd4 9a08 	vldr	s19, [r4, #32]
 8013212:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8013216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801321a:	d47a      	bmi.n	8013312 <fill_arc.isra.7+0x12a>
 801321c:	eddf 7ad8 	vldr	s15, [pc, #864]	@ 8013580 <fill_arc.isra.7+0x398>
 8013220:	eef4 9ae7 	vcmpe.f32	s19, s15
 8013224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013228:	d91c      	bls.n	8013264 <fill_arc.isra.7+0x7c>
 801322a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801322e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013232:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 8013236:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 801323a:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 801323e:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 8013242:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 8013246:	f100 81b5 	bmi.w	80135b4 <fill_arc.isra.7+0x3cc>
 801324a:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 801324e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013252:	d577      	bpl.n	8013344 <fill_arc.isra.7+0x15c>
 8013254:	e074      	b.n	8013340 <fill_arc.isra.7+0x158>
 8013256:	eddf 7acb 	vldr	s15, [pc, #812]	@ 8013584 <fill_arc.isra.7+0x39c>
 801325a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801325e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013262:	dbd4      	blt.n	801320e <fill_arc.isra.7+0x26>
 8013264:	4bc8      	ldr	r3, [pc, #800]	@ (8013588 <fill_arc.isra.7+0x3a0>)
 8013266:	edd4 9a03 	vldr	s19, [r4, #12]
 801326a:	681a      	ldr	r2, [r3, #0]
 801326c:	ed94 9a04 	vldr	s18, [r4, #16]
 8013270:	7f15      	ldrb	r5, [r2, #28]
 8013272:	edd4 8a05 	vldr	s17, [r4, #20]
 8013276:	ed94 8a06 	vldr	s16, [r4, #24]
 801327a:	2d00      	cmp	r5, #0
 801327c:	d035      	beq.n	80132ea <fill_arc.isra.7+0x102>
 801327e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013280:	b13b      	cbz	r3, 8013292 <fill_arc.isra.7+0xaa>
 8013282:	4bc2      	ldr	r3, [pc, #776]	@ (801358c <fill_arc.isra.7+0x3a4>)
 8013284:	681b      	ldr	r3, [r3, #0]
 8013286:	2b00      	cmp	r3, #0
 8013288:	bf14      	ite	ne
 801328a:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 801328e:	f04f 63f0 	moveq.w	r3, #125829120	@ 0x7800000
 8013292:	49bf      	ldr	r1, [pc, #764]	@ (8013590 <fill_arc.isra.7+0x3a8>)
 8013294:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 8013296:	780a      	ldrb	r2, [r1, #0]
 8013298:	401c      	ands	r4, r3
 801329a:	2a01      	cmp	r2, #1
 801329c:	d103      	bne.n	80132a6 <fill_arc.isra.7+0xbe>
 801329e:	684b      	ldr	r3, [r1, #4]
 80132a0:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80132a4:	431c      	orrs	r4, r3
 80132a6:	2005      	movs	r0, #5
 80132a8:	f00a fd44 	bl	801dd34 <nema_cl_get_space>
 80132ac:	b1c0      	cbz	r0, 80132e0 <fill_arc.isra.7+0xf8>
 80132ae:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80132b2:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80132b6:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80132ba:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80132be:	f044 040b 	orr.w	r4, r4, #11
 80132c2:	edc0 9a01 	vstr	s19, [r0, #4]
 80132c6:	ed80 9a03 	vstr	s18, [r0, #12]
 80132ca:	edc0 8a05 	vstr	s17, [r0, #20]
 80132ce:	ed80 8a07 	vstr	s16, [r0, #28]
 80132d2:	4bb0      	ldr	r3, [pc, #704]	@ (8013594 <fill_arc.isra.7+0x3ac>)
 80132d4:	6244      	str	r4, [r0, #36]	@ 0x24
 80132d6:	6006      	str	r6, [r0, #0]
 80132d8:	6085      	str	r5, [r0, #8]
 80132da:	6101      	str	r1, [r0, #16]
 80132dc:	6182      	str	r2, [r0, #24]
 80132de:	6203      	str	r3, [r0, #32]
 80132e0:	2000      	movs	r0, #0
 80132e2:	b002      	add	sp, #8
 80132e4:	ecbd 8b10 	vpop	{d8-d15}
 80132e8:	bd70      	pop	{r4, r5, r6, pc}
 80132ea:	4bab      	ldr	r3, [pc, #684]	@ (8013598 <fill_arc.isra.7+0x3b0>)
 80132ec:	681b      	ldr	r3, [r3, #0]
 80132ee:	2b00      	cmp	r3, #0
 80132f0:	f000 8115 	beq.w	801351e <fill_arc.isra.7+0x336>
 80132f4:	eef0 1a48 	vmov.f32	s3, s16
 80132f8:	eeb0 1a68 	vmov.f32	s2, s17
 80132fc:	eef0 0a49 	vmov.f32	s1, s18
 8013300:	eeb0 0a69 	vmov.f32	s0, s19
 8013304:	f7ff fb10 	bl	8012928 <raster_stroked_line_>
 8013308:	4628      	mov	r0, r5
 801330a:	b002      	add	sp, #8
 801330c:	ecbd 8b10 	vpop	{d8-d15}
 8013310:	bd70      	pop	{r4, r5, r6, pc}
 8013312:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 8013584 <fill_arc.isra.7+0x39c>
 8013316:	eef4 9ae7 	vcmpe.f32	s19, s15
 801331a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801331e:	daa1      	bge.n	8013264 <fill_arc.isra.7+0x7c>
 8013320:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013328:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 801332c:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 8013330:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 8013334:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 8013338:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 801333c:	f100 813a 	bmi.w	80135b4 <fill_arc.isra.7+0x3cc>
 8013340:	eef1 9a69 	vneg.f32	s19, s19
 8013344:	eddf 7a95 	vldr	s15, [pc, #596]	@ 801359c <fill_arc.isra.7+0x3b4>
 8013348:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801334c:	eeb0 0a6a 	vmov.f32	s0, s21
 8013350:	f01e f868 	bl	8031424 <cosf>
 8013354:	eeb0 ca40 	vmov.f32	s24, s0
 8013358:	eeb0 0a6a 	vmov.f32	s0, s21
 801335c:	f01e f8ae 	bl	80314bc <sinf>
 8013360:	ee6c aa28 	vmul.f32	s21, s24, s17
 8013364:	ee20 7a0a 	vmul.f32	s14, s0, s20
 8013368:	ee60 7a09 	vmul.f32	s15, s0, s18
 801336c:	ee6c 6a2b 	vmul.f32	s13, s24, s23
 8013370:	ee68 8ac0 	vnmul.f32	s17, s17, s0
 8013374:	ee6b bac0 	vnmul.f32	s23, s23, s0
 8013378:	ee2c aa0a 	vmul.f32	s20, s24, s20
 801337c:	ee2c 9a09 	vmul.f32	s18, s24, s18
 8013380:	ee76 fa87 	vadd.f32	s31, s13, s14
 8013384:	ee3b aa8a 	vadd.f32	s20, s23, s20
 8013388:	ee7a aaa7 	vadd.f32	s21, s21, s15
 801338c:	ee78 8a89 	vadd.f32	s17, s17, s18
 8013390:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013394:	ee8a ea88 	vdiv.f32	s28, s21, s16
 8013398:	eeca ca29 	vdiv.f32	s25, s20, s19
 801339c:	eec8 daa9 	vdiv.f32	s27, s17, s19
 80133a0:	ee7d ba4e 	vsub.f32	s23, s26, s28
 80133a4:	ee7c eaed 	vsub.f32	s29, s25, s27
 80133a8:	eeb0 ba40 	vmov.f32	s22, s0
 80133ac:	ee6b 7aab 	vmul.f32	s15, s23, s23
 80133b0:	ee2e 0aae 	vmul.f32	s0, s29, s29
 80133b4:	ee77 7a80 	vadd.f32	s15, s15, s0
 80133b8:	eef5 7a40 	vcmp.f32	s15, #0.0
 80133bc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80133c0:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 80133c4:	ee7c 6aad 	vadd.f32	s13, s25, s27
 80133c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133cc:	ee26 fa07 	vmul.f32	s30, s12, s14
 80133d0:	ee26 7a87 	vmul.f32	s14, s13, s14
 80133d4:	f000 8117 	beq.w	8013606 <fill_arc.isra.7+0x41e>
 80133d8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80133dc:	eef5 5a00 	vmov.f32	s11, #80	@ 0x3e800000  0.250
 80133e0:	ee86 0aa7 	vdiv.f32	s0, s13, s15
 80133e4:	ee30 0a65 	vsub.f32	s0, s0, s11
 80133e8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80133ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133f0:	78e5      	ldrb	r5, [r4, #3]
 80133f2:	f100 814f 	bmi.w	8013694 <fill_arc.isra.7+0x4ac>
 80133f6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80133fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133fe:	eef1 8ac0 	vsqrt.f32	s17, s0
 8013402:	f100 8174 	bmi.w	80136ee <fill_arc.isra.7+0x506>
 8013406:	ee68 baab 	vmul.f32	s23, s17, s23
 801340a:	ee68 eaae 	vmul.f32	s29, s17, s29
 801340e:	ee77 aa6b 	vsub.f32	s21, s14, s23
 8013412:	ee3f aa2e 	vadd.f32	s20, s30, s29
 8013416:	ee3c 0aea 	vsub.f32	s0, s25, s21
 801341a:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 801341e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8013422:	f01d feeb 	bl	80311fc <atan2f>
 8013426:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 801342a:	eeb0 9a40 	vmov.f32	s18, s0
 801342e:	ee3d 0aea 	vsub.f32	s0, s27, s21
 8013432:	f01d fee3 	bl	80311fc <atan2f>
 8013436:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80135a8 <fill_arc.isra.7+0x3c0>
 801343a:	ee60 8a27 	vmul.f32	s17, s0, s15
 801343e:	ee29 9a27 	vmul.f32	s18, s18, s15
 8013442:	ee78 7ac9 	vsub.f32	s15, s17, s18
 8013446:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801344a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801344e:	bf48      	it	mi
 8013450:	eddf 6a53 	vldrmi	s13, [pc, #332]	@ 80135a0 <fill_arc.isra.7+0x3b8>
 8013454:	eddf 5a53 	vldr	s11, [pc, #332]	@ 80135a4 <fill_arc.isra.7+0x3bc>
 8013458:	bf48      	it	mi
 801345a:	ee77 7aa6 	vaddmi.f32	s15, s15, s13
 801345e:	eef4 7ae5 	vcmpe.f32	s15, s11
 8013462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013466:	f005 0640 	and.w	r6, r5, #64	@ 0x40
 801346a:	f3c5 1380 	ubfx	r3, r5, #6, #1
 801346e:	ed9d 7a01 	vldr	s14, [sp, #4]
 8013472:	f3c5 1540 	ubfx	r5, r5, #5, #1
 8013476:	f140 80ab 	bpl.w	80135d0 <fill_arc.isra.7+0x3e8>
 801347a:	429d      	cmp	r5, r3
 801347c:	f000 8130 	beq.w	80136e0 <fill_arc.isra.7+0x4f8>
 8013480:	ee28 aa0a 	vmul.f32	s20, s16, s20
 8013484:	ee69 aaaa 	vmul.f32	s21, s19, s21
 8013488:	ee6c 7a0a 	vmul.f32	s15, s24, s20
 801348c:	ee2b aa0a 	vmul.f32	s20, s22, s20
 8013490:	ee2b ba2a 	vmul.f32	s22, s22, s21
 8013494:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8013498:	ee37 bacb 	vsub.f32	s22, s15, s22
 801349c:	ee7a aa2a 	vadd.f32	s21, s20, s21
 80134a0:	eeb4 9ae8 	vcmpe.f32	s18, s17
 80134a4:	2e00      	cmp	r6, #0
 80134a6:	f000 8088 	beq.w	80135ba <fill_arc.isra.7+0x3d2>
 80134aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134ae:	dd03      	ble.n	80134b8 <fill_arc.isra.7+0x2d0>
 80134b0:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 80135a0 <fill_arc.isra.7+0x3b8>
 80134b4:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80134b8:	2e00      	cmp	r6, #0
 80134ba:	f040 80ab 	bne.w	8013614 <fill_arc.isra.7+0x42c>
 80134be:	eef4 8ac9 	vcmpe.f32	s17, s18
 80134c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134c6:	f77f af0b 	ble.w	80132e0 <fill_arc.isra.7+0xf8>
 80134ca:	2101      	movs	r1, #1
 80134cc:	eddf ba37 	vldr	s23, [pc, #220]	@ 80135ac <fill_arc.isra.7+0x3c4>
 80134d0:	e01a      	b.n	8013508 <fill_arc.isra.7+0x320>
 80134d2:	eef0 0a49 	vmov.f32	s1, s18
 80134d6:	d801      	bhi.n	80134dc <fill_arc.isra.7+0x2f4>
 80134d8:	3102      	adds	r1, #2
 80134da:	b2c9      	uxtb	r1, r1
 80134dc:	eeb0 0a68 	vmov.f32	s0, s17
 80134e0:	eef0 2a69 	vmov.f32	s5, s19
 80134e4:	eeb0 2a48 	vmov.f32	s4, s16
 80134e8:	eef0 1a6a 	vmov.f32	s3, s21
 80134ec:	eeb0 1a4b 	vmov.f32	s2, s22
 80134f0:	4620      	mov	r0, r4
 80134f2:	f7ff fc59 	bl	8012da8 <render_arc.isra.6>
 80134f6:	eeb4 aac9 	vcmpe.f32	s20, s18
 80134fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134fe:	f77f aeef 	ble.w	80132e0 <fill_arc.isra.7+0xf8>
 8013502:	eef0 8a4a 	vmov.f32	s17, s20
 8013506:	2100      	movs	r1, #0
 8013508:	ee38 aaeb 	vsub.f32	s20, s17, s23
 801350c:	eeb4 aac9 	vcmpe.f32	s20, s18
 8013510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013514:	dddd      	ble.n	80134d2 <fill_arc.isra.7+0x2ea>
 8013516:	d822      	bhi.n	801355e <fill_arc.isra.7+0x376>
 8013518:	eef0 0a4a 	vmov.f32	s1, s20
 801351c:	e7dc      	b.n	80134d8 <fill_arc.isra.7+0x2f0>
 801351e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013520:	491b      	ldr	r1, [pc, #108]	@ (8013590 <fill_arc.isra.7+0x3a8>)
 8013522:	2b00      	cmp	r3, #0
 8013524:	bf18      	it	ne
 8013526:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 801352a:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 801352c:	780a      	ldrb	r2, [r1, #0]
 801352e:	401c      	ands	r4, r3
 8013530:	2a01      	cmp	r2, #1
 8013532:	d103      	bne.n	801353c <fill_arc.isra.7+0x354>
 8013534:	684b      	ldr	r3, [r1, #4]
 8013536:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801353a:	431c      	orrs	r4, r3
 801353c:	2005      	movs	r0, #5
 801353e:	f00a fbf9 	bl	801dd34 <nema_cl_get_space>
 8013542:	2800      	cmp	r0, #0
 8013544:	f43f aecc 	beq.w	80132e0 <fill_arc.isra.7+0xf8>
 8013548:	f44f 7648 	mov.w	r6, #800	@ 0x320
 801354c:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8013550:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013554:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8013558:	f044 040a 	orr.w	r4, r4, #10
 801355c:	e6b1      	b.n	80132c2 <fill_arc.isra.7+0xda>
 801355e:	eeb0 0a68 	vmov.f32	s0, s17
 8013562:	eef0 2a69 	vmov.f32	s5, s19
 8013566:	eeb0 2a48 	vmov.f32	s4, s16
 801356a:	eef0 1a6a 	vmov.f32	s3, s21
 801356e:	eeb0 1a4b 	vmov.f32	s2, s22
 8013572:	eef0 0a4a 	vmov.f32	s1, s20
 8013576:	4620      	mov	r0, r4
 8013578:	f7ff fc16 	bl	8012da8 <render_arc.isra.6>
 801357c:	e7c1      	b.n	8013502 <fill_arc.isra.7+0x31a>
 801357e:	bf00      	nop
 8013580:	3727c5ac 	.word	0x3727c5ac
 8013584:	b727c5ac 	.word	0xb727c5ac
 8013588:	20082fac 	.word	0x20082fac
 801358c:	20082fb0 	.word	0x20082fb0
 8013590:	20000064 	.word	0x20000064
 8013594:	ff000100 	.word	0xff000100
 8013598:	20082fb4 	.word	0x20082fb4
 801359c:	3c8efa35 	.word	0x3c8efa35
 80135a0:	43b40000 	.word	0x43b40000
 80135a4:	43340000 	.word	0x43340000
 80135a8:	42652ee1 	.word	0x42652ee1
 80135ac:	42b40000 	.word	0x42b40000
 80135b0:	00000000 	.word	0x00000000
 80135b4:	eeb1 8a48 	vneg.f32	s16, s16
 80135b8:	e647      	b.n	801324a <fill_arc.isra.7+0x62>
 80135ba:	eef0 7a49 	vmov.f32	s15, s18
 80135be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135c2:	eeb0 9a68 	vmov.f32	s18, s17
 80135c6:	eef0 8a67 	vmov.f32	s17, s15
 80135ca:	f53f af71 	bmi.w	80134b0 <fill_arc.isra.7+0x2c8>
 80135ce:	e776      	b.n	80134be <fill_arc.isra.7+0x2d6>
 80135d0:	db02      	blt.n	80135d8 <fill_arc.isra.7+0x3f0>
 80135d2:	429d      	cmp	r5, r3
 80135d4:	f43f af54 	beq.w	8013480 <fill_arc.isra.7+0x298>
 80135d8:	ee77 aa2b 	vadd.f32	s21, s14, s23
 80135dc:	ee3f aa6e 	vsub.f32	s20, s30, s29
 80135e0:	ee3c 0aea 	vsub.f32	s0, s25, s21
 80135e4:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 80135e8:	f01d fe08 	bl	80311fc <atan2f>
 80135ec:	ed5f 8a12 	vldr	s17, [pc, #-72]	@ 80135a8 <fill_arc.isra.7+0x3c0>
 80135f0:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 80135f4:	ee20 9a28 	vmul.f32	s18, s0, s17
 80135f8:	ee3d 0aea 	vsub.f32	s0, s27, s21
 80135fc:	f01d fdfe 	bl	80311fc <atan2f>
 8013600:	ee60 8a28 	vmul.f32	s17, s0, s17
 8013604:	e73c      	b.n	8013480 <fill_arc.isra.7+0x298>
 8013606:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801360a:	f009 fa3b 	bl	801ca84 <nema_vg_set_error>
 801360e:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8013612:	e666      	b.n	80132e2 <fill_arc.isra.7+0xfa>
 8013614:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801361c:	f57f ae60 	bpl.w	80132e0 <fill_arc.isra.7+0xf8>
 8013620:	2101      	movs	r1, #1
 8013622:	ed5f ba1e 	vldr	s23, [pc, #-120]	@ 80135ac <fill_arc.isra.7+0x3c4>
 8013626:	e01a      	b.n	801365e <fill_arc.isra.7+0x476>
 8013628:	eef0 0a68 	vmov.f32	s1, s17
 801362c:	db01      	blt.n	8013632 <fill_arc.isra.7+0x44a>
 801362e:	3102      	adds	r1, #2
 8013630:	b2c9      	uxtb	r1, r1
 8013632:	eeb0 0a49 	vmov.f32	s0, s18
 8013636:	eef0 2a69 	vmov.f32	s5, s19
 801363a:	eeb0 2a48 	vmov.f32	s4, s16
 801363e:	eef0 1a6a 	vmov.f32	s3, s21
 8013642:	eeb0 1a4b 	vmov.f32	s2, s22
 8013646:	4620      	mov	r0, r4
 8013648:	f7ff fbae 	bl	8012da8 <render_arc.isra.6>
 801364c:	eeb4 aae8 	vcmpe.f32	s20, s17
 8013650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013654:	f57f ae44 	bpl.w	80132e0 <fill_arc.isra.7+0xf8>
 8013658:	eeb0 9a4a 	vmov.f32	s18, s20
 801365c:	2100      	movs	r1, #0
 801365e:	ee39 aa2b 	vadd.f32	s20, s18, s23
 8013662:	eeb4 aae8 	vcmpe.f32	s20, s17
 8013666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801366a:	d5dd      	bpl.n	8013628 <fill_arc.isra.7+0x440>
 801366c:	db02      	blt.n	8013674 <fill_arc.isra.7+0x48c>
 801366e:	eef0 0a4a 	vmov.f32	s1, s20
 8013672:	e7dc      	b.n	801362e <fill_arc.isra.7+0x446>
 8013674:	eeb0 0a49 	vmov.f32	s0, s18
 8013678:	eef0 2a69 	vmov.f32	s5, s19
 801367c:	eeb0 2a48 	vmov.f32	s4, s16
 8013680:	eef0 1a6a 	vmov.f32	s3, s21
 8013684:	eeb0 1a4b 	vmov.f32	s2, s22
 8013688:	eef0 0a4a 	vmov.f32	s1, s20
 801368c:	4620      	mov	r0, r4
 801368e:	f7ff fb8b 	bl	8012da8 <render_arc.isra.6>
 8013692:	e7e1      	b.n	8013658 <fill_arc.isra.7+0x470>
 8013694:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013698:	eef5 7a40 	vcmp.f32	s15, #0.0
 801369c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136a0:	eeb1 9ae7 	vsqrt.f32	s18, s15
 80136a4:	d42a      	bmi.n	80136fc <fill_arc.isra.7+0x514>
 80136a6:	ee28 8a09 	vmul.f32	s16, s16, s18
 80136aa:	ee69 9a89 	vmul.f32	s19, s19, s18
 80136ae:	ee8f da88 	vdiv.f32	s26, s31, s16
 80136b2:	eec8 daa9 	vdiv.f32	s27, s17, s19
 80136b6:	ee8a ea88 	vdiv.f32	s28, s21, s16
 80136ba:	eeca ca29 	vdiv.f32	s25, s20, s19
 80136be:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80136c2:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 80136c6:	ee3c 7aad 	vadd.f32	s14, s25, s27
 80136ca:	ee26 fa27 	vmul.f32	s30, s12, s15
 80136ce:	ee27 7a27 	vmul.f32	s14, s14, s15
 80136d2:	ee7d ba4e 	vsub.f32	s23, s26, s28
 80136d6:	ee7c eaed 	vsub.f32	s29, s25, s27
 80136da:	ed5f 8a4b 	vldr	s17, [pc, #-300]	@ 80135b0 <fill_arc.isra.7+0x3c8>
 80136de:	e692      	b.n	8013406 <fill_arc.isra.7+0x21e>
 80136e0:	eef4 7ae5 	vcmpe.f32	s15, s11
 80136e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136e8:	f6bf aeca 	bge.w	8013480 <fill_arc.isra.7+0x298>
 80136ec:	e774      	b.n	80135d8 <fill_arc.isra.7+0x3f0>
 80136ee:	ed8d 7a01 	vstr	s14, [sp, #4]
 80136f2:	f01d fda5 	bl	8031240 <sqrtf>
 80136f6:	ed9d 7a01 	vldr	s14, [sp, #4]
 80136fa:	e684      	b.n	8013406 <fill_arc.isra.7+0x21e>
 80136fc:	eeb0 0a67 	vmov.f32	s0, s15
 8013700:	f01d fd9e 	bl	8031240 <sqrtf>
 8013704:	e7cf      	b.n	80136a6 <fill_arc.isra.7+0x4be>
 8013706:	bf00      	nop

08013708 <stroke_thin_path>:
 8013708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801370c:	ed2d 8b0c 	vpush	{d8-d13}
 8013710:	4682      	mov	sl, r0
 8013712:	b097      	sub	sp, #92	@ 0x5c
 8013714:	2248      	movs	r2, #72	@ 0x48
 8013716:	a804      	add	r0, sp, #16
 8013718:	2100      	movs	r1, #0
 801371a:	2400      	movs	r4, #0
 801371c:	f01f f8fb 	bl	8032916 <memset>
 8013720:	2201      	movs	r2, #1
 8013722:	f8da 3000 	ldr.w	r3, [sl]
 8013726:	f88d 2010 	strb.w	r2, [sp, #16]
 801372a:	42a3      	cmp	r3, r4
 801372c:	f88d 2012 	strb.w	r2, [sp, #18]
 8013730:	f8df b344 	ldr.w	fp, [pc, #836]	@ 8013a78 <stroke_thin_path+0x370>
 8013734:	ed9f 8aca 	vldr	s16, [pc, #808]	@ 8013a60 <stroke_thin_path+0x358>
 8013738:	f240 8092 	bls.w	8013860 <stroke_thin_path+0x158>
 801373c:	f8da 2008 	ldr.w	r2, [sl, #8]
 8013740:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8013744:	5d15      	ldrb	r5, [r2, r4]
 8013746:	af07      	add	r7, sp, #28
 8013748:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 801374c:	f005 0210 	and.w	r2, r5, #16
 8013750:	2e01      	cmp	r6, #1
 8013752:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013756:	f104 0901 	add.w	r9, r4, #1
 801375a:	9200      	str	r2, [sp, #0]
 801375c:	e887 0003 	stmia.w	r7, {r0, r1}
 8013760:	f000 809d 	beq.w	801389e <stroke_thin_path+0x196>
 8013764:	066a      	lsls	r2, r5, #25
 8013766:	f000 8082 	beq.w	801386e <stroke_thin_path+0x166>
 801376a:	9905      	ldr	r1, [sp, #20]
 801376c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8013770:	b911      	cbnz	r1, 8013778 <stroke_thin_path+0x70>
 8013772:	2301      	movs	r3, #1
 8013774:	f88d 3010 	strb.w	r3, [sp, #16]
 8013778:	2200      	movs	r2, #0
 801377a:	f8da 300c 	ldr.w	r3, [sl, #12]
 801377e:	0088      	lsls	r0, r1, #2
 8013780:	181c      	adds	r4, r3, r0
 8013782:	9001      	str	r0, [sp, #4]
 8013784:	2e06      	cmp	r6, #6
 8013786:	f101 0001 	add.w	r0, r1, #1
 801378a:	f88d 2012 	strb.w	r2, [sp, #18]
 801378e:	46a6      	mov	lr, r4
 8013790:	4602      	mov	r2, r0
 8013792:	f000 81ca 	beq.w	8013b2a <stroke_thin_path+0x422>
 8013796:	2e05      	cmp	r6, #5
 8013798:	f000 8295 	beq.w	8013cc6 <stroke_thin_path+0x5be>
 801379c:	2e07      	cmp	r6, #7
 801379e:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 80137a2:	f000 8315 	beq.w	8013dd0 <stroke_thin_path+0x6c8>
 80137a6:	2e08      	cmp	r6, #8
 80137a8:	f000 83be 	beq.w	8013f28 <stroke_thin_path+0x820>
 80137ac:	f005 0c0f 	and.w	ip, r5, #15
 80137b0:	f1bc 0f09 	cmp.w	ip, #9
 80137b4:	f000 84f7 	beq.w	80141a6 <stroke_thin_path+0xa9e>
 80137b8:	2e04      	cmp	r6, #4
 80137ba:	f040 8205 	bne.w	8013bc8 <stroke_thin_path+0x4c0>
 80137be:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 80137c2:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 80137c6:	9b00      	ldr	r3, [sp, #0]
 80137c8:	9005      	str	r0, [sp, #20]
 80137ca:	edde 7a00 	vldr	s15, [lr]
 80137ce:	2b00      	cmp	r3, #0
 80137d0:	f000 8266 	beq.w	8013ca0 <stroke_thin_path+0x598>
 80137d4:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80137d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80137dc:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 80137e0:	f8db 3000 	ldr.w	r3, [fp]
 80137e4:	7f1b      	ldrb	r3, [r3, #28]
 80137e6:	2b00      	cmp	r3, #0
 80137e8:	f000 8148 	beq.w	8013a7c <stroke_thin_path+0x374>
 80137ec:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 80137f0:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80137f4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80137f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137fc:	d109      	bne.n	8013812 <stroke_thin_path+0x10a>
 80137fe:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8013802:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8013806:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801380a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801380e:	f000 828e 	beq.w	8013d2e <stroke_thin_path+0x626>
 8013812:	2301      	movs	r3, #1
 8013814:	f88d 3011 	strb.w	r3, [sp, #17]
 8013818:	f89d 3012 	ldrb.w	r3, [sp, #18]
 801381c:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8013820:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8013824:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013828:	b9a3      	cbnz	r3, 8013854 <stroke_thin_path+0x14c>
 801382a:	062b      	lsls	r3, r5, #24
 801382c:	d412      	bmi.n	8013854 <stroke_thin_path+0x14c>
 801382e:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8013832:	2b05      	cmp	r3, #5
 8013834:	d072      	beq.n	801391c <stroke_thin_path+0x214>
 8013836:	2e06      	cmp	r6, #6
 8013838:	f000 8126 	beq.w	8013a88 <stroke_thin_path+0x380>
 801383c:	2e08      	cmp	r6, #8
 801383e:	f000 8123 	beq.w	8013a88 <stroke_thin_path+0x380>
 8013842:	f005 050f 	and.w	r5, r5, #15
 8013846:	2d09      	cmp	r5, #9
 8013848:	f000 8440 	beq.w	80140cc <stroke_thin_path+0x9c4>
 801384c:	3e0a      	subs	r6, #10
 801384e:	2e01      	cmp	r6, #1
 8013850:	f200 834c 	bhi.w	8013eec <stroke_thin_path+0x7e4>
 8013854:	464c      	mov	r4, r9
 8013856:	f8da 3000 	ldr.w	r3, [sl]
 801385a:	42a3      	cmp	r3, r4
 801385c:	f63f af6e 	bhi.w	801373c <stroke_thin_path+0x34>
 8013860:	2500      	movs	r5, #0
 8013862:	4628      	mov	r0, r5
 8013864:	b017      	add	sp, #92	@ 0x5c
 8013866:	ecbd 8b0c 	vpop	{d8-d13}
 801386a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801386e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013872:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013876:	2b01      	cmp	r3, #1
 8013878:	bf04      	itt	eq
 801387a:	ee18 2a10 	vmoveq	r2, s16
 801387e:	ee18 1a10 	vmoveq	r1, s16
 8013882:	f04f 0300 	mov.w	r3, #0
 8013886:	bf1c      	itt	ne
 8013888:	9913      	ldrne	r1, [sp, #76]	@ 0x4c
 801388a:	9a14      	ldrne	r2, [sp, #80]	@ 0x50
 801388c:	9109      	str	r1, [sp, #36]	@ 0x24
 801388e:	920a      	str	r2, [sp, #40]	@ 0x28
 8013890:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013892:	9210      	str	r2, [sp, #64]	@ 0x40
 8013894:	f88d 3012 	strb.w	r3, [sp, #18]
 8013898:	f88d 3011 	strb.w	r3, [sp, #17]
 801389c:	e7c5      	b.n	801382a <stroke_thin_path+0x122>
 801389e:	f89d 1011 	ldrb.w	r1, [sp, #17]
 80138a2:	9a05      	ldr	r2, [sp, #20]
 80138a4:	2901      	cmp	r1, #1
 80138a6:	f000 808d 	beq.w	80139c4 <stroke_thin_path+0x2bc>
 80138aa:	2401      	movs	r4, #1
 80138ac:	2600      	movs	r6, #0
 80138ae:	0090      	lsls	r0, r2, #2
 80138b0:	f8da 100c 	ldr.w	r1, [sl, #12]
 80138b4:	1d07      	adds	r7, r0, #4
 80138b6:	440f      	add	r7, r1
 80138b8:	f88d 4012 	strb.w	r4, [sp, #18]
 80138bc:	4401      	add	r1, r0
 80138be:	1910      	adds	r0, r2, r4
 80138c0:	9c00      	ldr	r4, [sp, #0]
 80138c2:	9206      	str	r2, [sp, #24]
 80138c4:	f88d 6010 	strb.w	r6, [sp, #16]
 80138c8:	3202      	adds	r2, #2
 80138ca:	9005      	str	r0, [sp, #20]
 80138cc:	b1e4      	cbz	r4, 8013908 <stroke_thin_path+0x200>
 80138ce:	edd1 7a00 	vldr	s15, [r1]
 80138d2:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 80138d6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80138da:	9205      	str	r2, [sp, #20]
 80138dc:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 80138e0:	edd7 7a00 	vldr	s15, [r7]
 80138e4:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80138e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80138ec:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 80138f0:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80138f4:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80138f8:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80138fc:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8013900:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013904:	464c      	mov	r4, r9
 8013906:	e7a8      	b.n	801385a <stroke_thin_path+0x152>
 8013908:	edd1 6a00 	vldr	s13, [r1]
 801390c:	9205      	str	r2, [sp, #20]
 801390e:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013912:	edd7 7a00 	vldr	s15, [r7]
 8013916:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 801391a:	e7e9      	b.n	80138f0 <stroke_thin_path+0x1e8>
 801391c:	f8db 3000 	ldr.w	r3, [fp]
 8013920:	eddd aa0b 	vldr	s21, [sp, #44]	@ 0x2c
 8013924:	7f1a      	ldrb	r2, [r3, #28]
 8013926:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 801392a:	ed9d ca07 	vldr	s24, [sp, #28]
 801392e:	eddd ba08 	vldr	s23, [sp, #32]
 8013932:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013936:	ed9d 9a0a 	vldr	s18, [sp, #40]	@ 0x28
 801393a:	2a00      	cmp	r2, #0
 801393c:	f040 81df 	bne.w	8013cfe <stroke_thin_path+0x5f6>
 8013940:	4a48      	ldr	r2, [pc, #288]	@ (8013a64 <stroke_thin_path+0x35c>)
 8013942:	6816      	ldr	r6, [r2, #0]
 8013944:	2e01      	cmp	r6, #1
 8013946:	f000 8319 	beq.w	8013f7c <stroke_thin_path+0x874>
 801394a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801394c:	2508      	movs	r5, #8
 801394e:	b10a      	cbz	r2, 8013954 <stroke_thin_path+0x24c>
 8013950:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013954:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013956:	4b44      	ldr	r3, [pc, #272]	@ (8013a68 <stroke_thin_path+0x360>)
 8013958:	4014      	ands	r4, r2
 801395a:	7819      	ldrb	r1, [r3, #0]
 801395c:	2901      	cmp	r1, #1
 801395e:	d103      	bne.n	8013968 <stroke_thin_path+0x260>
 8013960:	685b      	ldr	r3, [r3, #4]
 8013962:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013966:	431c      	orrs	r4, r3
 8013968:	2007      	movs	r0, #7
 801396a:	f00a f9e3 	bl	801dd34 <nema_cl_get_space>
 801396e:	2800      	cmp	r0, #0
 8013970:	f43f af70 	beq.w	8013854 <stroke_thin_path+0x14c>
 8013974:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8013978:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801397c:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013980:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013984:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013988:	f44f 7251 	mov.w	r2, #836	@ 0x344
 801398c:	ed80 ca01 	vstr	s24, [r0, #4]
 8013990:	edc0 ba03 	vstr	s23, [r0, #12]
 8013994:	edc0 aa05 	vstr	s21, [r0, #20]
 8013998:	ed80 aa07 	vstr	s20, [r0, #28]
 801399c:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 80139a0:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 80139a4:	4b31      	ldr	r3, [pc, #196]	@ (8013a6c <stroke_thin_path+0x364>)
 80139a6:	432c      	orrs	r4, r5
 80139a8:	6344      	str	r4, [r0, #52]	@ 0x34
 80139aa:	f8c0 e000 	str.w	lr, [r0]
 80139ae:	f8c0 c008 	str.w	ip, [r0, #8]
 80139b2:	6107      	str	r7, [r0, #16]
 80139b4:	6186      	str	r6, [r0, #24]
 80139b6:	6201      	str	r1, [r0, #32]
 80139b8:	6282      	str	r2, [r0, #40]	@ 0x28
 80139ba:	6303      	str	r3, [r0, #48]	@ 0x30
 80139bc:	f8da 3000 	ldr.w	r3, [sl]
 80139c0:	464c      	mov	r4, r9
 80139c2:	e74a      	b.n	801385a <stroke_thin_path+0x152>
 80139c4:	2a00      	cmp	r2, #0
 80139c6:	f43f af70 	beq.w	80138aa <stroke_thin_path+0x1a2>
 80139ca:	f8db 1000 	ldr.w	r1, [fp]
 80139ce:	7f09      	ldrb	r1, [r1, #28]
 80139d0:	2900      	cmp	r1, #0
 80139d2:	f43f af6a 	beq.w	80138aa <stroke_thin_path+0x1a2>
 80139d6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80139da:	2b00      	cmp	r3, #0
 80139dc:	f040 83c0 	bne.w	8014160 <stroke_thin_path+0xa58>
 80139e0:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 80139e4:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80139e6:	4a22      	ldr	r2, [pc, #136]	@ (8013a70 <stroke_thin_path+0x368>)
 80139e8:	4b22      	ldr	r3, [pc, #136]	@ (8013a74 <stroke_thin_path+0x36c>)
 80139ea:	2007      	movs	r0, #7
 80139ec:	6816      	ldr	r6, [r2, #0]
 80139ee:	681c      	ldr	r4, [r3, #0]
 80139f0:	f00a f9a0 	bl	801dd34 <nema_cl_get_space>
 80139f4:	2800      	cmp	r0, #0
 80139f6:	d02e      	beq.n	8013a56 <stroke_thin_path+0x34e>
 80139f8:	4a1b      	ldr	r2, [pc, #108]	@ (8013a68 <stroke_thin_path+0x360>)
 80139fa:	f8db 3000 	ldr.w	r3, [fp]
 80139fe:	7811      	ldrb	r1, [r2, #0]
 8013a00:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013a02:	2901      	cmp	r1, #1
 8013a04:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013a08:	d104      	bne.n	8013a14 <stroke_thin_path+0x30c>
 8013a0a:	4b17      	ldr	r3, [pc, #92]	@ (8013a68 <stroke_thin_path+0x360>)
 8013a0c:	685b      	ldr	r3, [r3, #4]
 8013a0e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013a12:	431a      	orrs	r2, r3
 8013a14:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8013a18:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8013a1c:	6003      	str	r3, [r0, #0]
 8013a1e:	9b07      	ldr	r3, [sp, #28]
 8013a20:	6081      	str	r1, [r0, #8]
 8013a22:	6043      	str	r3, [r0, #4]
 8013a24:	9b08      	ldr	r3, [sp, #32]
 8013a26:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013a2a:	61c7      	str	r7, [r0, #28]
 8013a2c:	60c3      	str	r3, [r0, #12]
 8013a2e:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8013a32:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013a36:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013a3a:	f042 0204 	orr.w	r2, r2, #4
 8013a3e:	6342      	str	r2, [r0, #52]	@ 0x34
 8013a40:	4a0a      	ldr	r2, [pc, #40]	@ (8013a6c <stroke_thin_path+0x364>)
 8013a42:	f8c0 8014 	str.w	r8, [r0, #20]
 8013a46:	6246      	str	r6, [r0, #36]	@ 0x24
 8013a48:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013a4a:	f8c0 c010 	str.w	ip, [r0, #16]
 8013a4e:	6187      	str	r7, [r0, #24]
 8013a50:	6201      	str	r1, [r0, #32]
 8013a52:	6283      	str	r3, [r0, #40]	@ 0x28
 8013a54:	6302      	str	r2, [r0, #48]	@ 0x30
 8013a56:	9a05      	ldr	r2, [sp, #20]
 8013a58:	f8da 3000 	ldr.w	r3, [sl]
 8013a5c:	e725      	b.n	80138aa <stroke_thin_path+0x1a2>
 8013a5e:	bf00      	nop
 8013a60:	00000000 	.word	0x00000000
 8013a64:	20082fb4 	.word	0x20082fb4
 8013a68:	20000064 	.word	0x20000064
 8013a6c:	ff000100 	.word	0xff000100
 8013a70:	20082fb8 	.word	0x20082fb8
 8013a74:	20082fbc 	.word	0x20082fbc
 8013a78:	20082fac 	.word	0x20082fac
 8013a7c:	2201      	movs	r2, #1
 8013a7e:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013a82:	f88d 2011 	strb.w	r2, [sp, #17]
 8013a86:	e6c9      	b.n	801381c <stroke_thin_path+0x114>
 8013a88:	f8db 3000 	ldr.w	r3, [fp]
 8013a8c:	7f1a      	ldrb	r2, [r3, #28]
 8013a8e:	2a00      	cmp	r2, #0
 8013a90:	f040 8244 	bne.w	8013f1c <stroke_thin_path+0x814>
 8013a94:	4aa9      	ldr	r2, [pc, #676]	@ (8013d3c <stroke_thin_path+0x634>)
 8013a96:	6814      	ldr	r4, [r2, #0]
 8013a98:	2c01      	cmp	r4, #1
 8013a9a:	f000 83e7 	beq.w	801426c <stroke_thin_path+0xb64>
 8013a9e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013aa0:	2509      	movs	r5, #9
 8013aa2:	2a00      	cmp	r2, #0
 8013aa4:	f040 8140 	bne.w	8013d28 <stroke_thin_path+0x620>
 8013aa8:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013aaa:	4ba5      	ldr	r3, [pc, #660]	@ (8013d40 <stroke_thin_path+0x638>)
 8013aac:	4014      	ands	r4, r2
 8013aae:	7819      	ldrb	r1, [r3, #0]
 8013ab0:	2901      	cmp	r1, #1
 8013ab2:	d103      	bne.n	8013abc <stroke_thin_path+0x3b4>
 8013ab4:	685b      	ldr	r3, [r3, #4]
 8013ab6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013aba:	431c      	orrs	r4, r3
 8013abc:	2009      	movs	r0, #9
 8013abe:	f00a f939 	bl	801dd34 <nema_cl_get_space>
 8013ac2:	2800      	cmp	r0, #0
 8013ac4:	f43f aec6 	beq.w	8013854 <stroke_thin_path+0x14c>
 8013ac8:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013acc:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8013ad0:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013ad4:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013ad8:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013adc:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8013ae0:	6002      	str	r2, [r0, #0]
 8013ae2:	9a07      	ldr	r2, [sp, #28]
 8013ae4:	f8c0 c008 	str.w	ip, [r0, #8]
 8013ae8:	6042      	str	r2, [r0, #4]
 8013aea:	9a08      	ldr	r2, [sp, #32]
 8013aec:	6107      	str	r7, [r0, #16]
 8013aee:	60c2      	str	r2, [r0, #12]
 8013af0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013af2:	6186      	str	r6, [r0, #24]
 8013af4:	6142      	str	r2, [r0, #20]
 8013af6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013af8:	6201      	str	r1, [r0, #32]
 8013afa:	61c2      	str	r2, [r0, #28]
 8013afc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013afe:	6283      	str	r3, [r0, #40]	@ 0x28
 8013b00:	6242      	str	r2, [r0, #36]	@ 0x24
 8013b02:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013b04:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013b06:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8013b08:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013b0a:	6341      	str	r1, [r0, #52]	@ 0x34
 8013b0c:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8013b0e:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8013b12:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8013b16:	4b8b      	ldr	r3, [pc, #556]	@ (8013d44 <stroke_thin_path+0x63c>)
 8013b18:	432c      	orrs	r4, r5
 8013b1a:	6444      	str	r4, [r0, #68]	@ 0x44
 8013b1c:	6301      	str	r1, [r0, #48]	@ 0x30
 8013b1e:	6382      	str	r2, [r0, #56]	@ 0x38
 8013b20:	6403      	str	r3, [r0, #64]	@ 0x40
 8013b22:	f8da 3000 	ldr.w	r3, [sl]
 8013b26:	464c      	mov	r4, r9
 8013b28:	e697      	b.n	801385a <stroke_thin_path+0x152>
 8013b2a:	9005      	str	r0, [sp, #20]
 8013b2c:	ed94 6a00 	vldr	s12, [r4]
 8013b30:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013b34:	1c8a      	adds	r2, r1, #2
 8013b36:	9205      	str	r2, [sp, #20]
 8013b38:	edd4 6a01 	vldr	s13, [r4, #4]
 8013b3c:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013b40:	1cca      	adds	r2, r1, #3
 8013b42:	9205      	str	r2, [sp, #20]
 8013b44:	ed94 7a02 	vldr	s14, [r4, #8]
 8013b48:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013b4c:	3104      	adds	r1, #4
 8013b4e:	9105      	str	r1, [sp, #20]
 8013b50:	edd4 7a03 	vldr	s15, [r4, #12]
 8013b54:	9a00      	ldr	r2, [sp, #0]
 8013b56:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b5a:	b19a      	cbz	r2, 8013b84 <stroke_thin_path+0x47c>
 8013b5c:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013b60:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013b64:	ee36 6a05 	vadd.f32	s12, s12, s10
 8013b68:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013b6c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b70:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013b74:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013b78:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013b7c:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013b80:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b84:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8013b88:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013b8c:	008a      	lsls	r2, r1, #2
 8013b8e:	1c48      	adds	r0, r1, #1
 8013b90:	9201      	str	r2, [sp, #4]
 8013b92:	9c01      	ldr	r4, [sp, #4]
 8013b94:	9005      	str	r0, [sp, #20]
 8013b96:	1d22      	adds	r2, r4, #4
 8013b98:	441a      	add	r2, r3
 8013b9a:	4423      	add	r3, r4
 8013b9c:	9c00      	ldr	r4, [sp, #0]
 8013b9e:	3102      	adds	r1, #2
 8013ba0:	edd3 6a00 	vldr	s13, [r3]
 8013ba4:	2c00      	cmp	r4, #0
 8013ba6:	d076      	beq.n	8013c96 <stroke_thin_path+0x58e>
 8013ba8:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013bac:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8013bb0:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013bb4:	9105      	str	r1, [sp, #20]
 8013bb6:	ed92 7a00 	vldr	s14, [r2]
 8013bba:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013bbe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013bc2:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013bc6:	e60b      	b.n	80137e0 <stroke_thin_path+0xd8>
 8013bc8:	2e03      	cmp	r6, #3
 8013bca:	d06c      	beq.n	8013ca6 <stroke_thin_path+0x59e>
 8013bcc:	2e0a      	cmp	r6, #10
 8013bce:	f040 841d 	bne.w	801440c <stroke_thin_path+0xd04>
 8013bd2:	9005      	str	r0, [sp, #20]
 8013bd4:	edde 7a00 	vldr	s15, [lr]
 8013bd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013bdc:	ee17 1a90 	vmov	r1, s15
 8013be0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8013be4:	1049      	asrs	r1, r1, #1
 8013be6:	2900      	cmp	r1, #0
 8013be8:	9101      	str	r1, [sp, #4]
 8013bea:	f340 8112 	ble.w	8013e12 <stroke_thin_path+0x70a>
 8013bee:	f8cd 9008 	str.w	r9, [sp, #8]
 8013bf2:	2400      	movs	r4, #0
 8013bf4:	46a9      	mov	r9, r5
 8013bf6:	9603      	str	r6, [sp, #12]
 8013bf8:	e039      	b.n	8013c6e <stroke_thin_path+0x566>
 8013bfa:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8013bfe:	ee78 8a81 	vadd.f32	s17, s17, s2
 8013c02:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013c06:	9205      	str	r2, [sp, #20]
 8013c08:	ed91 9a00 	vldr	s18, [r1]
 8013c0c:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8013c10:	ee39 9a21 	vadd.f32	s18, s18, s3
 8013c14:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013c18:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013c1c:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013c20:	f8db 3000 	ldr.w	r3, [fp]
 8013c24:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 8013c28:	7f1a      	ldrb	r2, [r3, #28]
 8013c2a:	2a00      	cmp	r2, #0
 8013c2c:	f040 808e 	bne.w	8013d4c <stroke_thin_path+0x644>
 8013c30:	4a42      	ldr	r2, [pc, #264]	@ (8013d3c <stroke_thin_path+0x634>)
 8013c32:	eddd 9a07 	vldr	s19, [sp, #28]
 8013c36:	6812      	ldr	r2, [r2, #0]
 8013c38:	ed9d aa08 	vldr	s20, [sp, #32]
 8013c3c:	2a00      	cmp	r2, #0
 8013c3e:	f000 82e5 	beq.w	801420c <stroke_thin_path+0xb04>
 8013c42:	eef0 1a49 	vmov.f32	s3, s18
 8013c46:	eeb0 1a68 	vmov.f32	s2, s17
 8013c4a:	eef0 0a4a 	vmov.f32	s1, s20
 8013c4e:	eeb0 0a69 	vmov.f32	s0, s19
 8013c52:	f7fe fe69 	bl	8012928 <raster_stroked_line_>
 8013c56:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013c5a:	9b01      	ldr	r3, [sp, #4]
 8013c5c:	3401      	adds	r4, #1
 8013c5e:	429c      	cmp	r4, r3
 8013c60:	e887 0003 	stmia.w	r7, {r0, r1}
 8013c64:	f000 80d2 	beq.w	8013e0c <stroke_thin_path+0x704>
 8013c68:	f8da 300c 	ldr.w	r3, [sl, #12]
 8013c6c:	9a05      	ldr	r2, [sp, #20]
 8013c6e:	0090      	lsls	r0, r2, #2
 8013c70:	1d01      	adds	r1, r0, #4
 8013c72:	4419      	add	r1, r3
 8013c74:	9d00      	ldr	r5, [sp, #0]
 8013c76:	4403      	add	r3, r0
 8013c78:	1c50      	adds	r0, r2, #1
 8013c7a:	9005      	str	r0, [sp, #20]
 8013c7c:	3202      	adds	r2, #2
 8013c7e:	edd3 8a00 	vldr	s17, [r3]
 8013c82:	2d00      	cmp	r5, #0
 8013c84:	d1b9      	bne.n	8013bfa <stroke_thin_path+0x4f2>
 8013c86:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013c8a:	9205      	str	r2, [sp, #20]
 8013c8c:	ed91 9a00 	vldr	s18, [r1]
 8013c90:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013c94:	e7c0      	b.n	8013c18 <stroke_thin_path+0x510>
 8013c96:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c9a:	9105      	str	r1, [sp, #20]
 8013c9c:	edd2 7a00 	vldr	s15, [r2]
 8013ca0:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013ca4:	e59c      	b.n	80137e0 <stroke_thin_path+0xd8>
 8013ca6:	9b00      	ldr	r3, [sp, #0]
 8013ca8:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013cac:	9005      	str	r0, [sp, #20]
 8013cae:	b353      	cbz	r3, 8013d06 <stroke_thin_path+0x5fe>
 8013cb0:	ed9e 7a00 	vldr	s14, [lr]
 8013cb4:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013cb8:	ee76 6a87 	vadd.f32	s13, s13, s14
 8013cbc:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013cc0:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013cc4:	e58c      	b.n	80137e0 <stroke_thin_path+0xd8>
 8013cc6:	9005      	str	r0, [sp, #20]
 8013cc8:	ed94 7a00 	vldr	s14, [r4]
 8013ccc:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013cd0:	3102      	adds	r1, #2
 8013cd2:	9105      	str	r1, [sp, #20]
 8013cd4:	edd4 7a01 	vldr	s15, [r4, #4]
 8013cd8:	9a00      	ldr	r2, [sp, #0]
 8013cda:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013cde:	2a00      	cmp	r2, #0
 8013ce0:	f43f af50 	beq.w	8013b84 <stroke_thin_path+0x47c>
 8013ce4:	ed9d 6a0f 	vldr	s12, [sp, #60]	@ 0x3c
 8013ce8:	eddd 6a10 	vldr	s13, [sp, #64]	@ 0x40
 8013cec:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013cf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013cf4:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013cf8:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013cfc:	e742      	b.n	8013b84 <stroke_thin_path+0x47c>
 8013cfe:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013d00:	b942      	cbnz	r2, 8013d14 <stroke_thin_path+0x60c>
 8013d02:	2506      	movs	r5, #6
 8013d04:	e626      	b.n	8013954 <stroke_thin_path+0x24c>
 8013d06:	edde 6a00 	vldr	s13, [lr]
 8013d0a:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013d0e:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013d12:	e565      	b.n	80137e0 <stroke_thin_path+0xd8>
 8013d14:	4a0c      	ldr	r2, [pc, #48]	@ (8013d48 <stroke_thin_path+0x640>)
 8013d16:	2506      	movs	r5, #6
 8013d18:	6812      	ldr	r2, [r2, #0]
 8013d1a:	2a00      	cmp	r2, #0
 8013d1c:	bf14      	ite	ne
 8013d1e:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013d22:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8013d26:	e615      	b.n	8013954 <stroke_thin_path+0x24c>
 8013d28:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013d2c:	e6bc      	b.n	8013aa8 <stroke_thin_path+0x3a0>
 8013d2e:	2300      	movs	r3, #0
 8013d30:	f88d 3011 	strb.w	r3, [sp, #17]
 8013d34:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013d38:	e570      	b.n	801381c <stroke_thin_path+0x114>
 8013d3a:	bf00      	nop
 8013d3c:	20082fb4 	.word	0x20082fb4
 8013d40:	20000064 	.word	0x20000064
 8013d44:	ff000100 	.word	0xff000100
 8013d48:	20082fb0 	.word	0x20082fb0
 8013d4c:	4aba      	ldr	r2, [pc, #744]	@ (8014038 <stroke_thin_path+0x930>)
 8013d4e:	4bbb      	ldr	r3, [pc, #748]	@ (801403c <stroke_thin_path+0x934>)
 8013d50:	2007      	movs	r0, #7
 8013d52:	6816      	ldr	r6, [r2, #0]
 8013d54:	681d      	ldr	r5, [r3, #0]
 8013d56:	f009 ffed 	bl	801dd34 <nema_cl_get_space>
 8013d5a:	2800      	cmp	r0, #0
 8013d5c:	f43f af7b 	beq.w	8013c56 <stroke_thin_path+0x54e>
 8013d60:	4ab7      	ldr	r2, [pc, #732]	@ (8014040 <stroke_thin_path+0x938>)
 8013d62:	f8db 3000 	ldr.w	r3, [fp]
 8013d66:	7812      	ldrb	r2, [r2, #0]
 8013d68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013d6a:	2a01      	cmp	r2, #1
 8013d6c:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8013d70:	d104      	bne.n	8013d7c <stroke_thin_path+0x674>
 8013d72:	4ab3      	ldr	r2, [pc, #716]	@ (8014040 <stroke_thin_path+0x938>)
 8013d74:	6852      	ldr	r2, [r2, #4]
 8013d76:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8013d7a:	4313      	orrs	r3, r2
 8013d7c:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013d80:	6002      	str	r2, [r0, #0]
 8013d82:	eddd 7a07 	vldr	s15, [sp, #28]
 8013d86:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8013d8a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8013d8e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013d92:	6082      	str	r2, [r0, #8]
 8013d94:	edc0 7a01 	vstr	s15, [r0, #4]
 8013d98:	f8c0 e018 	str.w	lr, [r0, #24]
 8013d9c:	f8dd e020 	ldr.w	lr, [sp, #32]
 8013da0:	f8c0 c010 	str.w	ip, [r0, #16]
 8013da4:	f8c0 e00c 	str.w	lr, [r0, #12]
 8013da8:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8013dac:	f043 0304 	orr.w	r3, r3, #4
 8013db0:	f8c0 c014 	str.w	ip, [r0, #20]
 8013db4:	6343      	str	r3, [r0, #52]	@ 0x34
 8013db6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013db8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013dbc:	61c3      	str	r3, [r0, #28]
 8013dbe:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013dc2:	4aa0      	ldr	r2, [pc, #640]	@ (8014044 <stroke_thin_path+0x93c>)
 8013dc4:	6246      	str	r6, [r0, #36]	@ 0x24
 8013dc6:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8013dc8:	6302      	str	r2, [r0, #48]	@ 0x30
 8013dca:	6201      	str	r1, [r0, #32]
 8013dcc:	6283      	str	r3, [r0, #40]	@ 0x28
 8013dce:	e742      	b.n	8013c56 <stroke_thin_path+0x54e>
 8013dd0:	f1ac 0c05 	sub.w	ip, ip, #5
 8013dd4:	f1bc 0f03 	cmp.w	ip, #3
 8013dd8:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013ddc:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013de0:	d80b      	bhi.n	8013dfa <stroke_thin_path+0x6f2>
 8013de2:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8013de6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013dea:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 8013dee:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8013df2:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013df6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013dfa:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013dfe:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8013e02:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013e06:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013e0a:	e6c2      	b.n	8013b92 <stroke_thin_path+0x48a>
 8013e0c:	464d      	mov	r5, r9
 8013e0e:	e9dd 9602 	ldrd	r9, r6, [sp, #8]
 8013e12:	eddd 8a13 	vldr	s17, [sp, #76]	@ 0x4c
 8013e16:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013e1a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8013e1e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013e22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e26:	ed9d 9a14 	vldr	s18, [sp, #80]	@ 0x50
 8013e2a:	d108      	bne.n	8013e3e <stroke_thin_path+0x736>
 8013e2c:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013e30:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8013e34:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013e38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e3c:	d050      	beq.n	8013ee0 <stroke_thin_path+0x7d8>
 8013e3e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013e42:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013e46:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013e4a:	f8db 3000 	ldr.w	r3, [fp]
 8013e4e:	e887 0003 	stmia.w	r7, {r0, r1}
 8013e52:	7f1a      	ldrb	r2, [r3, #28]
 8013e54:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013e58:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013e5c:	2a00      	cmp	r2, #0
 8013e5e:	f000 818e 	beq.w	801417e <stroke_thin_path+0xa76>
 8013e62:	4a75      	ldr	r2, [pc, #468]	@ (8014038 <stroke_thin_path+0x930>)
 8013e64:	4b75      	ldr	r3, [pc, #468]	@ (801403c <stroke_thin_path+0x934>)
 8013e66:	2007      	movs	r0, #7
 8013e68:	6817      	ldr	r7, [r2, #0]
 8013e6a:	681c      	ldr	r4, [r3, #0]
 8013e6c:	f009 ff62 	bl	801dd34 <nema_cl_get_space>
 8013e70:	2800      	cmp	r0, #0
 8013e72:	d035      	beq.n	8013ee0 <stroke_thin_path+0x7d8>
 8013e74:	4a72      	ldr	r2, [pc, #456]	@ (8014040 <stroke_thin_path+0x938>)
 8013e76:	f8db 3000 	ldr.w	r3, [fp]
 8013e7a:	7811      	ldrb	r1, [r2, #0]
 8013e7c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013e7e:	2901      	cmp	r1, #1
 8013e80:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013e84:	d104      	bne.n	8013e90 <stroke_thin_path+0x788>
 8013e86:	4b6e      	ldr	r3, [pc, #440]	@ (8014040 <stroke_thin_path+0x938>)
 8013e88:	685b      	ldr	r3, [r3, #4]
 8013e8a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013e8e:	431a      	orrs	r2, r3
 8013e90:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8013e94:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8013e98:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8013e9c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013ea0:	f8c0 8000 	str.w	r8, [r0]
 8013ea4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8013ea8:	f8c0 e008 	str.w	lr, [r0, #8]
 8013eac:	f8c0 8004 	str.w	r8, [r0, #4]
 8013eb0:	f8c0 c018 	str.w	ip, [r0, #24]
 8013eb4:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013eb8:	6101      	str	r1, [r0, #16]
 8013eba:	f8c0 c00c 	str.w	ip, [r0, #12]
 8013ebe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013ec0:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013ec4:	6141      	str	r1, [r0, #20]
 8013ec6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8013ec8:	f042 0204 	orr.w	r2, r2, #4
 8013ecc:	61c1      	str	r1, [r0, #28]
 8013ece:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013ed2:	6342      	str	r2, [r0, #52]	@ 0x34
 8013ed4:	4a5b      	ldr	r2, [pc, #364]	@ (8014044 <stroke_thin_path+0x93c>)
 8013ed6:	6247      	str	r7, [r0, #36]	@ 0x24
 8013ed8:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013eda:	6201      	str	r1, [r0, #32]
 8013edc:	6283      	str	r3, [r0, #40]	@ 0x28
 8013ede:	6302      	str	r2, [r0, #48]	@ 0x30
 8013ee0:	2300      	movs	r3, #0
 8013ee2:	f88d 3011 	strb.w	r3, [sp, #17]
 8013ee6:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013eea:	e49d      	b.n	8013828 <stroke_thin_path+0x120>
 8013eec:	4b56      	ldr	r3, [pc, #344]	@ (8014048 <stroke_thin_path+0x940>)
 8013eee:	eddd 8a07 	vldr	s17, [sp, #28]
 8013ef2:	681b      	ldr	r3, [r3, #0]
 8013ef4:	ed9d 9a08 	vldr	s18, [sp, #32]
 8013ef8:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013efc:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8013f00:	2b00      	cmp	r3, #0
 8013f02:	f000 80fb 	beq.w	80140fc <stroke_thin_path+0x9f4>
 8013f06:	eef0 1a4a 	vmov.f32	s3, s20
 8013f0a:	eeb0 1a69 	vmov.f32	s2, s19
 8013f0e:	eef0 0a49 	vmov.f32	s1, s18
 8013f12:	eeb0 0a68 	vmov.f32	s0, s17
 8013f16:	f7fe fd07 	bl	8012928 <raster_stroked_line_>
 8013f1a:	e49b      	b.n	8013854 <stroke_thin_path+0x14c>
 8013f1c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013f1e:	2a00      	cmp	r2, #0
 8013f20:	f040 8123 	bne.w	801416a <stroke_thin_path+0xa62>
 8013f24:	2507      	movs	r5, #7
 8013f26:	e5bf      	b.n	8013aa8 <stroke_thin_path+0x3a0>
 8013f28:	f1ac 0c05 	sub.w	ip, ip, #5
 8013f2c:	f1bc 0f03 	cmp.w	ip, #3
 8013f30:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013f34:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013f38:	f240 80d3 	bls.w	80140e2 <stroke_thin_path+0x9da>
 8013f3c:	eeb0 7a65 	vmov.f32	s14, s11
 8013f40:	eef0 7a45 	vmov.f32	s15, s10
 8013f44:	ed8d 7a0c 	vstr	s14, [sp, #48]	@ 0x30
 8013f48:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8013f4c:	9005      	str	r0, [sp, #20]
 8013f4e:	ed94 7a00 	vldr	s14, [r4]
 8013f52:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013f56:	3102      	adds	r1, #2
 8013f58:	9105      	str	r1, [sp, #20]
 8013f5a:	edd4 7a01 	vldr	s15, [r4, #4]
 8013f5e:	9a00      	ldr	r2, [sp, #0]
 8013f60:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013f64:	2a00      	cmp	r2, #0
 8013f66:	f43f ae0d 	beq.w	8013b84 <stroke_thin_path+0x47c>
 8013f6a:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013f6e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013f72:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013f76:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013f7a:	e603      	b.n	8013b84 <stroke_thin_path+0x47c>
 8013f7c:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8013f80:	4c32      	ldr	r4, [pc, #200]	@ (801404c <stroke_thin_path+0x944>)
 8013f82:	4d33      	ldr	r5, [pc, #204]	@ (8014050 <stroke_thin_path+0x948>)
 8013f84:	7821      	ldrb	r1, [r4, #0]
 8013f86:	ee39 7acc 	vsub.f32	s14, s19, s24
 8013f8a:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8013f8e:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8013f92:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8013f96:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 8013f9a:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8013f9e:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8013fa2:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8013fa6:	ee26 6a07 	vmul.f32	s12, s12, s14
 8013faa:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8013fae:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8013fb2:	ee24 4a28 	vmul.f32	s8, s8, s17
 8013fb6:	ee25 5a28 	vmul.f32	s10, s10, s17
 8013fba:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8013fbe:	ee35 ba84 	vadd.f32	s22, s11, s8
 8013fc2:	ee75 ca24 	vadd.f32	s25, s10, s9
 8013fc6:	ee27 7a07 	vmul.f32	s14, s14, s14
 8013fca:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013fce:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8013fd2:	ee2b ba28 	vmul.f32	s22, s22, s17
 8013fd6:	ee6c caa8 	vmul.f32	s25, s25, s17
 8013fda:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8013fde:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013fe2:	2900      	cmp	r1, #0
 8013fe4:	d038      	beq.n	8014058 <stroke_thin_path+0x950>
 8013fe6:	eef4 6ae7 	vcmpe.f32	s13, s15
 8013fea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013fee:	bfcc      	ite	gt
 8013ff0:	2301      	movgt	r3, #1
 8013ff2:	2300      	movle	r3, #0
 8013ff4:	2b00      	cmp	r3, #0
 8013ff6:	d03a      	beq.n	801406e <stroke_thin_path+0x966>
 8013ff8:	682b      	ldr	r3, [r5, #0]
 8013ffa:	2b09      	cmp	r3, #9
 8013ffc:	dc12      	bgt.n	8014024 <stroke_thin_path+0x91c>
 8013ffe:	4815      	ldr	r0, [pc, #84]	@ (8014054 <stroke_thin_path+0x94c>)
 8014000:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8014004:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8014008:	ed82 ba00 	vstr	s22, [r2]
 801400c:	edc2 ca01 	vstr	s25, [r2, #4]
 8014010:	ed82 4a02 	vstr	s8, [r2, #8]
 8014014:	edc2 4a03 	vstr	s9, [r2, #12]
 8014018:	edc2 9a04 	vstr	s19, [r2, #16]
 801401c:	ed82 9a05 	vstr	s18, [r2, #20]
 8014020:	3301      	adds	r3, #1
 8014022:	602b      	str	r3, [r5, #0]
 8014024:	3601      	adds	r6, #1
 8014026:	eeb0 9a6c 	vmov.f32	s18, s25
 801402a:	eef0 9a4b 	vmov.f32	s19, s22
 801402e:	eeb0 aa45 	vmov.f32	s20, s10
 8014032:	eef0 aa65 	vmov.f32	s21, s11
 8014036:	e7a6      	b.n	8013f86 <stroke_thin_path+0x87e>
 8014038:	20082fb8 	.word	0x20082fb8
 801403c:	20082fbc 	.word	0x20082fbc
 8014040:	20000064 	.word	0x20000064
 8014044:	ff000100 	.word	0xff000100
 8014048:	20082fb4 	.word	0x20082fb4
 801404c:	20082fc0 	.word	0x20082fc0
 8014050:	20083148 	.word	0x20083148
 8014054:	20083058 	.word	0x20083058
 8014058:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801405c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8014060:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014064:	bf4c      	ite	mi
 8014066:	2301      	movmi	r3, #1
 8014068:	2300      	movpl	r3, #0
 801406a:	2b00      	cmp	r3, #0
 801406c:	d1c4      	bne.n	8013ff8 <stroke_thin_path+0x8f0>
 801406e:	eef0 1a6c 	vmov.f32	s3, s25
 8014072:	eeb0 1a4b 	vmov.f32	s2, s22
 8014076:	eef0 0a6b 	vmov.f32	s1, s23
 801407a:	eeb0 0a4c 	vmov.f32	s0, s24
 801407e:	f7fe fc53 	bl	8012928 <raster_stroked_line_>
 8014082:	eef0 1a49 	vmov.f32	s3, s18
 8014086:	eeb0 1a69 	vmov.f32	s2, s19
 801408a:	eef0 0a6c 	vmov.f32	s1, s25
 801408e:	eeb0 0a4b 	vmov.f32	s0, s22
 8014092:	f7fe fc49 	bl	8012928 <raster_stroked_line_>
 8014096:	682b      	ldr	r3, [r5, #0]
 8014098:	3e01      	subs	r6, #1
 801409a:	b193      	cbz	r3, 80140c2 <stroke_thin_path+0x9ba>
 801409c:	3b01      	subs	r3, #1
 801409e:	49d4      	ldr	r1, [pc, #848]	@ (80143f0 <stroke_thin_path+0xce8>)
 80140a0:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80140a4:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80140a8:	ed92 ca00 	vldr	s24, [r2]
 80140ac:	edd2 ba01 	vldr	s23, [r2, #4]
 80140b0:	edd2 aa02 	vldr	s21, [r2, #8]
 80140b4:	ed92 aa03 	vldr	s20, [r2, #12]
 80140b8:	edd2 9a04 	vldr	s19, [r2, #16]
 80140bc:	ed92 9a05 	vldr	s18, [r2, #20]
 80140c0:	602b      	str	r3, [r5, #0]
 80140c2:	2e00      	cmp	r6, #0
 80140c4:	f43f abc6 	beq.w	8013854 <stroke_thin_path+0x14c>
 80140c8:	7821      	ldrb	r1, [r4, #0]
 80140ca:	e75c      	b.n	8013f86 <stroke_thin_path+0x87e>
 80140cc:	a804      	add	r0, sp, #16
 80140ce:	f7ff f88b 	bl	80131e8 <fill_arc.isra.7>
 80140d2:	4605      	mov	r5, r0
 80140d4:	2800      	cmp	r0, #0
 80140d6:	f43f abbd 	beq.w	8013854 <stroke_thin_path+0x14c>
 80140da:	f008 fcd3 	bl	801ca84 <nema_vg_set_error>
 80140de:	f7ff bbc0 	b.w	8013862 <stroke_thin_path+0x15a>
 80140e2:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 80140e6:	ee75 7a05 	vadd.f32	s15, s10, s10
 80140ea:	ee35 6aa5 	vadd.f32	s12, s11, s11
 80140ee:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 80140f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80140f6:	ee36 7a66 	vsub.f32	s14, s12, s13
 80140fa:	e723      	b.n	8013f44 <stroke_thin_path+0x83c>
 80140fc:	4bbd      	ldr	r3, [pc, #756]	@ (80143f4 <stroke_thin_path+0xcec>)
 80140fe:	f8db 2000 	ldr.w	r2, [fp]
 8014102:	7819      	ldrb	r1, [r3, #0]
 8014104:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8014108:	2b00      	cmp	r3, #0
 801410a:	bf18      	it	ne
 801410c:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 8014110:	2901      	cmp	r1, #1
 8014112:	ea04 0403 	and.w	r4, r4, r3
 8014116:	d073      	beq.n	8014200 <stroke_thin_path+0xaf8>
 8014118:	2005      	movs	r0, #5
 801411a:	f009 fe0b 	bl	801dd34 <nema_cl_get_space>
 801411e:	2800      	cmp	r0, #0
 8014120:	f43f ab98 	beq.w	8013854 <stroke_thin_path+0x14c>
 8014124:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8014128:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801412c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8014130:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014134:	edc0 8a01 	vstr	s17, [r0, #4]
 8014138:	ed80 9a03 	vstr	s18, [r0, #12]
 801413c:	edc0 9a05 	vstr	s19, [r0, #20]
 8014140:	ed80 aa07 	vstr	s20, [r0, #28]
 8014144:	4bac      	ldr	r3, [pc, #688]	@ (80143f8 <stroke_thin_path+0xcf0>)
 8014146:	f044 040a 	orr.w	r4, r4, #10
 801414a:	6244      	str	r4, [r0, #36]	@ 0x24
 801414c:	6006      	str	r6, [r0, #0]
 801414e:	6085      	str	r5, [r0, #8]
 8014150:	6101      	str	r1, [r0, #16]
 8014152:	6182      	str	r2, [r0, #24]
 8014154:	6203      	str	r3, [r0, #32]
 8014156:	f8da 3000 	ldr.w	r3, [sl]
 801415a:	464c      	mov	r4, r9
 801415c:	f7ff bb7d 	b.w	801385a <stroke_thin_path+0x152>
 8014160:	ee18 7a10 	vmov	r7, s16
 8014164:	ee18 8a10 	vmov	r8, s16
 8014168:	e43d      	b.n	80139e6 <stroke_thin_path+0x2de>
 801416a:	4aa4      	ldr	r2, [pc, #656]	@ (80143fc <stroke_thin_path+0xcf4>)
 801416c:	2507      	movs	r5, #7
 801416e:	6812      	ldr	r2, [r2, #0]
 8014170:	2a00      	cmp	r2, #0
 8014172:	bf14      	ite	ne
 8014174:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014178:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 801417c:	e494      	b.n	8013aa8 <stroke_thin_path+0x3a0>
 801417e:	4aa0      	ldr	r2, [pc, #640]	@ (8014400 <stroke_thin_path+0xcf8>)
 8014180:	eddd 9a07 	vldr	s19, [sp, #28]
 8014184:	6812      	ldr	r2, [r2, #0]
 8014186:	ed9d aa08 	vldr	s20, [sp, #32]
 801418a:	2a00      	cmp	r2, #0
 801418c:	f000 81a2 	beq.w	80144d4 <stroke_thin_path+0xdcc>
 8014190:	eef0 1a49 	vmov.f32	s3, s18
 8014194:	eeb0 1a68 	vmov.f32	s2, s17
 8014198:	eef0 0a4a 	vmov.f32	s1, s20
 801419c:	eeb0 0a69 	vmov.f32	s0, s19
 80141a0:	f7fe fbc2 	bl	8012928 <raster_stroked_line_>
 80141a4:	e69c      	b.n	8013ee0 <stroke_thin_path+0x7d8>
 80141a6:	9005      	str	r0, [sp, #20]
 80141a8:	6822      	ldr	r2, [r4, #0]
 80141aa:	1c8b      	adds	r3, r1, #2
 80141ac:	9305      	str	r3, [sp, #20]
 80141ae:	920b      	str	r2, [sp, #44]	@ 0x2c
 80141b0:	6863      	ldr	r3, [r4, #4]
 80141b2:	3103      	adds	r1, #3
 80141b4:	930c      	str	r3, [sp, #48]	@ 0x30
 80141b6:	9105      	str	r1, [sp, #20]
 80141b8:	4b92      	ldr	r3, [pc, #584]	@ (8014404 <stroke_thin_path+0xcfc>)
 80141ba:	68a2      	ldr	r2, [r4, #8]
 80141bc:	edd3 0a00 	vldr	s1, [r3]
 80141c0:	ed93 0a03 	vldr	s0, [r3, #12]
 80141c4:	920d      	str	r2, [sp, #52]	@ 0x34
 80141c6:	f01d f819 	bl	80311fc <atan2f>
 80141ca:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 80141ce:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80141d2:	ee77 7a80 	vadd.f32	s15, s15, s0
 80141d6:	9905      	ldr	r1, [sp, #20]
 80141d8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80141dc:	f8dd c03c 	ldr.w	ip, [sp, #60]	@ 0x3c
 80141e0:	008c      	lsls	r4, r1, #2
 80141e2:	1c48      	adds	r0, r1, #1
 80141e4:	4602      	mov	r2, r0
 80141e6:	9401      	str	r4, [sp, #4]
 80141e8:	f88d 5013 	strb.w	r5, [sp, #19]
 80141ec:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 80141f0:	eb03 0e04 	add.w	lr, r3, r4
 80141f4:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 80141f8:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 80141fc:	f7ff badc 	b.w	80137b8 <stroke_thin_path+0xb0>
 8014200:	4b7c      	ldr	r3, [pc, #496]	@ (80143f4 <stroke_thin_path+0xcec>)
 8014202:	685b      	ldr	r3, [r3, #4]
 8014204:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014208:	431c      	orrs	r4, r3
 801420a:	e785      	b.n	8014118 <stroke_thin_path+0xa10>
 801420c:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8014210:	2d00      	cmp	r5, #0
 8014212:	bf18      	it	ne
 8014214:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014218:	4b76      	ldr	r3, [pc, #472]	@ (80143f4 <stroke_thin_path+0xcec>)
 801421a:	4015      	ands	r5, r2
 801421c:	781b      	ldrb	r3, [r3, #0]
 801421e:	2b01      	cmp	r3, #1
 8014220:	d104      	bne.n	801422c <stroke_thin_path+0xb24>
 8014222:	4b74      	ldr	r3, [pc, #464]	@ (80143f4 <stroke_thin_path+0xcec>)
 8014224:	685b      	ldr	r3, [r3, #4]
 8014226:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801422a:	431d      	orrs	r5, r3
 801422c:	2005      	movs	r0, #5
 801422e:	f009 fd81 	bl	801dd34 <nema_cl_get_space>
 8014232:	2800      	cmp	r0, #0
 8014234:	f43f ad0f 	beq.w	8013c56 <stroke_thin_path+0x54e>
 8014238:	f44f 7648 	mov.w	r6, #800	@ 0x320
 801423c:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014240:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8014244:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8014248:	f045 050a 	orr.w	r5, r5, #10
 801424c:	6245      	str	r5, [r0, #36]	@ 0x24
 801424e:	4d6a      	ldr	r5, [pc, #424]	@ (80143f8 <stroke_thin_path+0xcf0>)
 8014250:	edc0 9a01 	vstr	s19, [r0, #4]
 8014254:	ed80 aa03 	vstr	s20, [r0, #12]
 8014258:	edc0 8a05 	vstr	s17, [r0, #20]
 801425c:	ed80 9a07 	vstr	s18, [r0, #28]
 8014260:	6205      	str	r5, [r0, #32]
 8014262:	6006      	str	r6, [r0, #0]
 8014264:	6081      	str	r1, [r0, #8]
 8014266:	6102      	str	r2, [r0, #16]
 8014268:	6183      	str	r3, [r0, #24]
 801426a:	e4f4      	b.n	8013c56 <stroke_thin_path+0x54e>
 801426c:	4626      	mov	r6, r4
 801426e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8014272:	eddd da07 	vldr	s27, [sp, #28]
 8014276:	ed9d da08 	vldr	s26, [sp, #32]
 801427a:	eddd ca0b 	vldr	s25, [sp, #44]	@ 0x2c
 801427e:	ed9d ca0c 	vldr	s24, [sp, #48]	@ 0x30
 8014282:	eddd ba0d 	vldr	s23, [sp, #52]	@ 0x34
 8014286:	ed9d ba0e 	vldr	s22, [sp, #56]	@ 0x38
 801428a:	eddd aa09 	vldr	s21, [sp, #36]	@ 0x24
 801428e:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8014292:	4d5d      	ldr	r5, [pc, #372]	@ (8014408 <stroke_thin_path+0xd00>)
 8014294:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8014298:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801429c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 80142a0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80142a4:	ee64 4aa8 	vmul.f32	s9, s9, s17
 80142a8:	ee25 5a28 	vmul.f32	s10, s10, s17
 80142ac:	ee74 3aa7 	vadd.f32	s7, s9, s15
 80142b0:	ee37 6a85 	vadd.f32	s12, s15, s10
 80142b4:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 80142b8:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 80142bc:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 80142c0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80142c4:	ee24 4a28 	vmul.f32	s8, s8, s17
 80142c8:	ee65 5aa8 	vmul.f32	s11, s11, s17
 80142cc:	ee34 3a27 	vadd.f32	s6, s8, s15
 80142d0:	ee63 3aa8 	vmul.f32	s7, s7, s17
 80142d4:	ee26 6a28 	vmul.f32	s12, s12, s17
 80142d8:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80142dc:	ee33 9a86 	vadd.f32	s18, s7, s12
 80142e0:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 80142e4:	ee23 3a28 	vmul.f32	s6, s6, s17
 80142e8:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80142ec:	ee29 9a28 	vmul.f32	s18, s18, s17
 80142f0:	ee27 7a28 	vmul.f32	s14, s14, s17
 80142f4:	ee73 9a27 	vadd.f32	s19, s6, s15
 80142f8:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 80142fc:	ee37 7a49 	vsub.f32	s14, s14, s18
 8014300:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8014304:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8014308:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801430c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8014310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014314:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8014318:	bf48      	it	mi
 801431a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801431e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014322:	bf48      	it	mi
 8014324:	eef1 6a66 	vnegmi.f32	s13, s13
 8014328:	b94e      	cbnz	r6, 801433e <stroke_thin_path+0xc36>
 801432a:	eeb4 7ae8 	vcmpe.f32	s14, s17
 801432e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014332:	d504      	bpl.n	801433e <stroke_thin_path+0xc36>
 8014334:	eef4 6ae8 	vcmpe.f32	s13, s17
 8014338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801433c:	d424      	bmi.n	8014388 <stroke_thin_path+0xc80>
 801433e:	682a      	ldr	r2, [r5, #0]
 8014340:	2a09      	cmp	r2, #9
 8014342:	dc21      	bgt.n	8014388 <stroke_thin_path+0xc80>
 8014344:	492a      	ldr	r1, [pc, #168]	@ (80143f0 <stroke_thin_path+0xce8>)
 8014346:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801434a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801434e:	3201      	adds	r2, #1
 8014350:	edc3 aa04 	vstr	s21, [r3, #16]
 8014354:	ed83 aa05 	vstr	s20, [r3, #20]
 8014358:	3401      	adds	r4, #1
 801435a:	eeb0 ba43 	vmov.f32	s22, s6
 801435e:	eef0 ba63 	vmov.f32	s23, s7
 8014362:	eeb0 ca44 	vmov.f32	s24, s8
 8014366:	eef0 ca64 	vmov.f32	s25, s9
 801436a:	ed83 6a00 	vstr	s12, [r3]
 801436e:	edc3 7a01 	vstr	s15, [r3, #4]
 8014372:	ed83 5a02 	vstr	s10, [r3, #8]
 8014376:	edc3 5a03 	vstr	s11, [r3, #12]
 801437a:	602a      	str	r2, [r5, #0]
 801437c:	eeb0 aa69 	vmov.f32	s20, s19
 8014380:	eef0 aa49 	vmov.f32	s21, s18
 8014384:	2600      	movs	r6, #0
 8014386:	e785      	b.n	8014294 <stroke_thin_path+0xb8c>
 8014388:	eef0 1a69 	vmov.f32	s3, s19
 801438c:	eeb0 1a49 	vmov.f32	s2, s18
 8014390:	eef0 0a4d 	vmov.f32	s1, s26
 8014394:	eeb0 0a6d 	vmov.f32	s0, s27
 8014398:	f7fe fac6 	bl	8012928 <raster_stroked_line_>
 801439c:	eef0 1a4a 	vmov.f32	s3, s20
 80143a0:	eeb0 1a6a 	vmov.f32	s2, s21
 80143a4:	eef0 0a69 	vmov.f32	s1, s19
 80143a8:	eeb0 0a49 	vmov.f32	s0, s18
 80143ac:	f7fe fabc 	bl	8012928 <raster_stroked_line_>
 80143b0:	682a      	ldr	r2, [r5, #0]
 80143b2:	3c01      	subs	r4, #1
 80143b4:	b1b2      	cbz	r2, 80143e4 <stroke_thin_path+0xcdc>
 80143b6:	3a01      	subs	r2, #1
 80143b8:	490d      	ldr	r1, [pc, #52]	@ (80143f0 <stroke_thin_path+0xce8>)
 80143ba:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80143be:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80143c2:	eeb0 da4a 	vmov.f32	s26, s20
 80143c6:	eef0 da6a 	vmov.f32	s27, s21
 80143ca:	edd3 ca00 	vldr	s25, [r3]
 80143ce:	ed93 ca01 	vldr	s24, [r3, #4]
 80143d2:	edd3 ba02 	vldr	s23, [r3, #8]
 80143d6:	ed93 ba03 	vldr	s22, [r3, #12]
 80143da:	ed93 aa05 	vldr	s20, [r3, #20]
 80143de:	edd3 aa04 	vldr	s21, [r3, #16]
 80143e2:	602a      	str	r2, [r5, #0]
 80143e4:	2c00      	cmp	r4, #0
 80143e6:	f47f af55 	bne.w	8014294 <stroke_thin_path+0xb8c>
 80143ea:	f7ff ba33 	b.w	8013854 <stroke_thin_path+0x14c>
 80143ee:	bf00      	nop
 80143f0:	20083058 	.word	0x20083058
 80143f4:	20000064 	.word	0x20000064
 80143f8:	ff000100 	.word	0xff000100
 80143fc:	20082fb0 	.word	0x20082fb0
 8014400:	20082fb4 	.word	0x20082fb4
 8014404:	20083030 	.word	0x20083030
 8014408:	20083148 	.word	0x20083148
 801440c:	2e0b      	cmp	r6, #11
 801440e:	f47f abc0 	bne.w	8013b92 <stroke_thin_path+0x48a>
 8014412:	9005      	str	r0, [sp, #20]
 8014414:	edde 7a00 	vldr	s15, [lr]
 8014418:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801441c:	ee17 1a90 	vmov	r1, s15
 8014420:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014424:	104c      	asrs	r4, r1, #1
 8014426:	2c00      	cmp	r4, #0
 8014428:	f340 80d4 	ble.w	80145d4 <stroke_thin_path+0xecc>
 801442c:	2100      	movs	r1, #0
 801442e:	f8cd 9008 	str.w	r9, [sp, #8]
 8014432:	9603      	str	r6, [sp, #12]
 8014434:	46a9      	mov	r9, r5
 8014436:	4656      	mov	r6, sl
 8014438:	46a2      	mov	sl, r4
 801443a:	460c      	mov	r4, r1
 801443c:	e036      	b.n	80144ac <stroke_thin_path+0xda4>
 801443e:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8014442:	ee78 8a81 	vadd.f32	s17, s17, s2
 8014446:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 801444a:	9205      	str	r2, [sp, #20]
 801444c:	ed91 9a00 	vldr	s18, [r1]
 8014450:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8014454:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014458:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 801445c:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8014460:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8014464:	f8db 3000 	ldr.w	r3, [fp]
 8014468:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 801446c:	7f1a      	ldrb	r2, [r3, #28]
 801446e:	2a00      	cmp	r2, #0
 8014470:	d161      	bne.n	8014536 <stroke_thin_path+0xe2e>
 8014472:	4a82      	ldr	r2, [pc, #520]	@ (801467c <stroke_thin_path+0xf74>)
 8014474:	eddd 9a07 	vldr	s19, [sp, #28]
 8014478:	6812      	ldr	r2, [r2, #0]
 801447a:	ed9d aa08 	vldr	s20, [sp, #32]
 801447e:	2a00      	cmp	r2, #0
 8014480:	f000 80ca 	beq.w	8014618 <stroke_thin_path+0xf10>
 8014484:	eef0 1a49 	vmov.f32	s3, s18
 8014488:	eeb0 1a68 	vmov.f32	s2, s17
 801448c:	eef0 0a4a 	vmov.f32	s1, s20
 8014490:	eeb0 0a69 	vmov.f32	s0, s19
 8014494:	f7fe fa48 	bl	8012928 <raster_stroked_line_>
 8014498:	e898 0003 	ldmia.w	r8, {r0, r1}
 801449c:	3401      	adds	r4, #1
 801449e:	4554      	cmp	r4, sl
 80144a0:	e887 0003 	stmia.w	r7, {r0, r1}
 80144a4:	f000 8091 	beq.w	80145ca <stroke_thin_path+0xec2>
 80144a8:	68f3      	ldr	r3, [r6, #12]
 80144aa:	9a05      	ldr	r2, [sp, #20]
 80144ac:	0090      	lsls	r0, r2, #2
 80144ae:	1d01      	adds	r1, r0, #4
 80144b0:	4419      	add	r1, r3
 80144b2:	9d00      	ldr	r5, [sp, #0]
 80144b4:	4403      	add	r3, r0
 80144b6:	1c50      	adds	r0, r2, #1
 80144b8:	9005      	str	r0, [sp, #20]
 80144ba:	3202      	adds	r2, #2
 80144bc:	edd3 8a00 	vldr	s17, [r3]
 80144c0:	2d00      	cmp	r5, #0
 80144c2:	d1bc      	bne.n	801443e <stroke_thin_path+0xd36>
 80144c4:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 80144c8:	9205      	str	r2, [sp, #20]
 80144ca:	ed91 9a00 	vldr	s18, [r1]
 80144ce:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 80144d2:	e7c3      	b.n	801445c <stroke_thin_path+0xd54>
 80144d4:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 80144d8:	2a00      	cmp	r2, #0
 80144da:	bf18      	it	ne
 80144dc:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 80144e0:	4b67      	ldr	r3, [pc, #412]	@ (8014680 <stroke_thin_path+0xf78>)
 80144e2:	4014      	ands	r4, r2
 80144e4:	781b      	ldrb	r3, [r3, #0]
 80144e6:	2b01      	cmp	r3, #1
 80144e8:	d104      	bne.n	80144f4 <stroke_thin_path+0xdec>
 80144ea:	4b65      	ldr	r3, [pc, #404]	@ (8014680 <stroke_thin_path+0xf78>)
 80144ec:	685b      	ldr	r3, [r3, #4]
 80144ee:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80144f2:	431c      	orrs	r4, r3
 80144f4:	2005      	movs	r0, #5
 80144f6:	f009 fc1d 	bl	801dd34 <nema_cl_get_space>
 80144fa:	2800      	cmp	r0, #0
 80144fc:	f43f acf0 	beq.w	8013ee0 <stroke_thin_path+0x7d8>
 8014500:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8014504:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8014508:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801450c:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014510:	4b5c      	ldr	r3, [pc, #368]	@ (8014684 <stroke_thin_path+0xf7c>)
 8014512:	f044 040a 	orr.w	r4, r4, #10
 8014516:	6244      	str	r4, [r0, #36]	@ 0x24
 8014518:	edc0 9a01 	vstr	s19, [r0, #4]
 801451c:	ed80 aa03 	vstr	s20, [r0, #12]
 8014520:	edc0 8a05 	vstr	s17, [r0, #20]
 8014524:	ed80 9a07 	vstr	s18, [r0, #28]
 8014528:	f8c0 c000 	str.w	ip, [r0]
 801452c:	6087      	str	r7, [r0, #8]
 801452e:	6101      	str	r1, [r0, #16]
 8014530:	6182      	str	r2, [r0, #24]
 8014532:	6203      	str	r3, [r0, #32]
 8014534:	e4d4      	b.n	8013ee0 <stroke_thin_path+0x7d8>
 8014536:	4a54      	ldr	r2, [pc, #336]	@ (8014688 <stroke_thin_path+0xf80>)
 8014538:	4b54      	ldr	r3, [pc, #336]	@ (801468c <stroke_thin_path+0xf84>)
 801453a:	6812      	ldr	r2, [r2, #0]
 801453c:	2007      	movs	r0, #7
 801453e:	9201      	str	r2, [sp, #4]
 8014540:	681d      	ldr	r5, [r3, #0]
 8014542:	f009 fbf7 	bl	801dd34 <nema_cl_get_space>
 8014546:	2800      	cmp	r0, #0
 8014548:	d0a6      	beq.n	8014498 <stroke_thin_path+0xd90>
 801454a:	4a4d      	ldr	r2, [pc, #308]	@ (8014680 <stroke_thin_path+0xf78>)
 801454c:	f8db 3000 	ldr.w	r3, [fp]
 8014550:	7812      	ldrb	r2, [r2, #0]
 8014552:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014554:	2a01      	cmp	r2, #1
 8014556:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801455a:	d104      	bne.n	8014566 <stroke_thin_path+0xe5e>
 801455c:	4a48      	ldr	r2, [pc, #288]	@ (8014680 <stroke_thin_path+0xf78>)
 801455e:	6852      	ldr	r2, [r2, #4]
 8014560:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8014564:	4313      	orrs	r3, r2
 8014566:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801456a:	6002      	str	r2, [r0, #0]
 801456c:	eddd 7a07 	vldr	s15, [sp, #28]
 8014570:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8014574:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8014578:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801457c:	6082      	str	r2, [r0, #8]
 801457e:	edc0 7a01 	vstr	s15, [r0, #4]
 8014582:	f8c0 e018 	str.w	lr, [r0, #24]
 8014586:	f8dd e020 	ldr.w	lr, [sp, #32]
 801458a:	f8c0 c010 	str.w	ip, [r0, #16]
 801458e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8014592:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8014596:	f043 0304 	orr.w	r3, r3, #4
 801459a:	6343      	str	r3, [r0, #52]	@ 0x34
 801459c:	9b01      	ldr	r3, [sp, #4]
 801459e:	f8c0 c014 	str.w	ip, [r0, #20]
 80145a2:	6243      	str	r3, [r0, #36]	@ 0x24
 80145a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80145a6:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80145aa:	61c3      	str	r3, [r0, #28]
 80145ac:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80145b0:	4a34      	ldr	r2, [pc, #208]	@ (8014684 <stroke_thin_path+0xf7c>)
 80145b2:	3401      	adds	r4, #1
 80145b4:	4554      	cmp	r4, sl
 80145b6:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80145b8:	6302      	str	r2, [r0, #48]	@ 0x30
 80145ba:	6201      	str	r1, [r0, #32]
 80145bc:	6283      	str	r3, [r0, #40]	@ 0x28
 80145be:	e898 0003 	ldmia.w	r8, {r0, r1}
 80145c2:	e887 0003 	stmia.w	r7, {r0, r1}
 80145c6:	f47f af6f 	bne.w	80144a8 <stroke_thin_path+0xda0>
 80145ca:	464d      	mov	r5, r9
 80145cc:	46b2      	mov	sl, r6
 80145ce:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80145d2:	9e03      	ldr	r6, [sp, #12]
 80145d4:	f8db 3000 	ldr.w	r3, [fp]
 80145d8:	7f1b      	ldrb	r3, [r3, #28]
 80145da:	b1b3      	cbz	r3, 801460a <stroke_thin_path+0xf02>
 80145dc:	ed9d 7a0f 	vldr	s14, [sp, #60]	@ 0x3c
 80145e0:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 80145e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80145e8:	eef5 7a40 	vcmp.f32	s15, #0.0
 80145ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145f0:	d10b      	bne.n	801460a <stroke_thin_path+0xf02>
 80145f2:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80145f6:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80145fa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80145fe:	eef5 7a40 	vcmp.f32	s15, #0.0
 8014602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014606:	f43f ac6b 	beq.w	8013ee0 <stroke_thin_path+0x7d8>
 801460a:	2301      	movs	r3, #1
 801460c:	f88d 3011 	strb.w	r3, [sp, #17]
 8014610:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8014614:	f7ff b908 	b.w	8013828 <stroke_thin_path+0x120>
 8014618:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 801461c:	2d00      	cmp	r5, #0
 801461e:	bf18      	it	ne
 8014620:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014624:	4b16      	ldr	r3, [pc, #88]	@ (8014680 <stroke_thin_path+0xf78>)
 8014626:	4015      	ands	r5, r2
 8014628:	781b      	ldrb	r3, [r3, #0]
 801462a:	2b01      	cmp	r3, #1
 801462c:	d104      	bne.n	8014638 <stroke_thin_path+0xf30>
 801462e:	4b14      	ldr	r3, [pc, #80]	@ (8014680 <stroke_thin_path+0xf78>)
 8014630:	685b      	ldr	r3, [r3, #4]
 8014632:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014636:	431d      	orrs	r5, r3
 8014638:	2005      	movs	r0, #5
 801463a:	f009 fb7b 	bl	801dd34 <nema_cl_get_space>
 801463e:	2800      	cmp	r0, #0
 8014640:	f43f af2a 	beq.w	8014498 <stroke_thin_path+0xd90>
 8014644:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8014648:	f44f 7149 	mov.w	r1, #804	@ 0x324
 801464c:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8014650:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8014654:	f045 050a 	orr.w	r5, r5, #10
 8014658:	6245      	str	r5, [r0, #36]	@ 0x24
 801465a:	4d0a      	ldr	r5, [pc, #40]	@ (8014684 <stroke_thin_path+0xf7c>)
 801465c:	edc0 9a01 	vstr	s19, [r0, #4]
 8014660:	ed80 aa03 	vstr	s20, [r0, #12]
 8014664:	edc0 8a05 	vstr	s17, [r0, #20]
 8014668:	ed80 9a07 	vstr	s18, [r0, #28]
 801466c:	6205      	str	r5, [r0, #32]
 801466e:	f8c0 c000 	str.w	ip, [r0]
 8014672:	6081      	str	r1, [r0, #8]
 8014674:	6102      	str	r2, [r0, #16]
 8014676:	6183      	str	r3, [r0, #24]
 8014678:	e70e      	b.n	8014498 <stroke_thin_path+0xd90>
 801467a:	bf00      	nop
 801467c:	20082fb4 	.word	0x20082fb4
 8014680:	20000064 	.word	0x20000064
 8014684:	ff000100 	.word	0xff000100
 8014688:	20082fb8 	.word	0x20082fb8
 801468c:	20082fbc 	.word	0x20082fbc

08014690 <stroke_path>:
 8014690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014694:	ed2d 8b0c 	vpush	{d8-d13}
 8014698:	4682      	mov	sl, r0
 801469a:	b09b      	sub	sp, #108	@ 0x6c
 801469c:	2246      	movs	r2, #70	@ 0x46
 801469e:	2100      	movs	r1, #0
 80146a0:	f10d 0022 	add.w	r0, sp, #34	@ 0x22
 80146a4:	f01e f937 	bl	8032916 <memset>
 80146a8:	46d1      	mov	r9, sl
 80146aa:	2301      	movs	r3, #1
 80146ac:	2500      	movs	r5, #0
 80146ae:	f240 1201 	movw	r2, #257	@ 0x101
 80146b2:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 80146b6:	f8d9 3000 	ldr.w	r3, [r9]
 80146ba:	f8ad 2020 	strh.w	r2, [sp, #32]
 80146be:	42ab      	cmp	r3, r5
 80146c0:	f8df b1cc 	ldr.w	fp, [pc, #460]	@ 8014890 <stroke_path+0x200>
 80146c4:	ed9f 8a70 	vldr	s16, [pc, #448]	@ 8014888 <stroke_path+0x1f8>
 80146c8:	f240 809c 	bls.w	8014804 <stroke_path+0x174>
 80146cc:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80146d0:	af0d      	add	r7, sp, #52	@ 0x34
 80146d2:	5d5c      	ldrb	r4, [r3, r5]
 80146d4:	ae0b      	add	r6, sp, #44	@ 0x2c
 80146d6:	f004 0a6f 	and.w	sl, r4, #111	@ 0x6f
 80146da:	1c6b      	adds	r3, r5, #1
 80146dc:	f1ba 0f01 	cmp.w	sl, #1
 80146e0:	e897 0003 	ldmia.w	r7, {r0, r1}
 80146e4:	9301      	str	r3, [sp, #4]
 80146e6:	f004 0810 	and.w	r8, r4, #16
 80146ea:	e886 0003 	stmia.w	r6, {r0, r1}
 80146ee:	f000 80d1 	beq.w	8014894 <stroke_path+0x204>
 80146f2:	0662      	lsls	r2, r4, #25
 80146f4:	f000 8095 	beq.w	8014822 <stroke_path+0x192>
 80146f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80146fa:	f89d e064 	ldrb.w	lr, [sp, #100]	@ 0x64
 80146fe:	b911      	cbnz	r1, 8014706 <stroke_path+0x76>
 8014700:	2301      	movs	r3, #1
 8014702:	f88d 3020 	strb.w	r3, [sp, #32]
 8014706:	2200      	movs	r2, #0
 8014708:	f8d9 300c 	ldr.w	r3, [r9, #12]
 801470c:	0088      	lsls	r0, r1, #2
 801470e:	181d      	adds	r5, r3, r0
 8014710:	9002      	str	r0, [sp, #8]
 8014712:	f1ba 0f06 	cmp.w	sl, #6
 8014716:	f101 0001 	add.w	r0, r1, #1
 801471a:	f88d 2022 	strb.w	r2, [sp, #34]	@ 0x22
 801471e:	46ac      	mov	ip, r5
 8014720:	4602      	mov	r2, r0
 8014722:	f000 8337 	beq.w	8014d94 <stroke_path+0x704>
 8014726:	f1ba 0f05 	cmp.w	sl, #5
 801472a:	f000 840c 	beq.w	8014f46 <stroke_path+0x8b6>
 801472e:	f1ba 0f07 	cmp.w	sl, #7
 8014732:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 8014736:	f000 8565 	beq.w	8015204 <stroke_path+0xb74>
 801473a:	f1ba 0f08 	cmp.w	sl, #8
 801473e:	f000 861f 	beq.w	8015380 <stroke_path+0xcf0>
 8014742:	f004 0e0f 	and.w	lr, r4, #15
 8014746:	f1be 0f09 	cmp.w	lr, #9
 801474a:	f000 8669 	beq.w	8015420 <stroke_path+0xd90>
 801474e:	f1ba 0f04 	cmp.w	sl, #4
 8014752:	f040 8370 	bne.w	8014e36 <stroke_path+0x7a6>
 8014756:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801475a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801475e:	9009      	str	r0, [sp, #36]	@ 0x24
 8014760:	eddc 7a00 	vldr	s15, [ip]
 8014764:	f1b8 0f00 	cmp.w	r8, #0
 8014768:	f000 83ea 	beq.w	8014f40 <stroke_path+0x8b0>
 801476c:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8014770:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014774:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014778:	4d44      	ldr	r5, [pc, #272]	@ (801488c <stroke_path+0x1fc>)
 801477a:	682b      	ldr	r3, [r5, #0]
 801477c:	7f1b      	ldrb	r3, [r3, #28]
 801477e:	2b00      	cmp	r3, #0
 8014780:	f000 82fe 	beq.w	8014d80 <stroke_path+0x6f0>
 8014784:	ed9d 7a17 	vldr	s14, [sp, #92]	@ 0x5c
 8014788:	ee36 7ac7 	vsub.f32	s14, s13, s14
 801478c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014794:	d109      	bne.n	80147aa <stroke_path+0x11a>
 8014796:	ed9d 7a18 	vldr	s14, [sp, #96]	@ 0x60
 801479a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 801479e:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80147a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80147a6:	f000 8427 	beq.w	8014ff8 <stroke_path+0x968>
 80147aa:	2301      	movs	r3, #1
 80147ac:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80147b0:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 80147b4:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80147b8:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80147bc:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 80147c0:	2b00      	cmp	r3, #0
 80147c2:	d146      	bne.n	8014852 <stroke_path+0x1c2>
 80147c4:	0623      	lsls	r3, r4, #24
 80147c6:	d444      	bmi.n	8014852 <stroke_path+0x1c2>
 80147c8:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 80147cc:	2b05      	cmp	r3, #5
 80147ce:	f000 81dd 	beq.w	8014b8c <stroke_path+0x4fc>
 80147d2:	f1ba 0f06 	cmp.w	sl, #6
 80147d6:	f000 8283 	beq.w	8014ce0 <stroke_path+0x650>
 80147da:	f1ba 0f08 	cmp.w	sl, #8
 80147de:	f000 827f 	beq.w	8014ce0 <stroke_path+0x650>
 80147e2:	f004 040f 	and.w	r4, r4, #15
 80147e6:	2c09      	cmp	r4, #9
 80147e8:	f000 85bf 	beq.w	801536a <stroke_path+0xcda>
 80147ec:	f1aa 0a0a 	sub.w	sl, sl, #10
 80147f0:	f1ba 0f01 	cmp.w	sl, #1
 80147f4:	f200 83d5 	bhi.w	8014fa2 <stroke_path+0x912>
 80147f8:	9d01      	ldr	r5, [sp, #4]
 80147fa:	f8d9 3000 	ldr.w	r3, [r9]
 80147fe:	42ab      	cmp	r3, r5
 8014800:	f63f af64 	bhi.w	80146cc <stroke_path+0x3c>
 8014804:	f89d 0021 	ldrb.w	r0, [sp, #33]	@ 0x21
 8014808:	2100      	movs	r1, #0
 801480a:	fab0 f080 	clz	r0, r0
 801480e:	0940      	lsrs	r0, r0, #5
 8014810:	f7fd fe7a 	bl	8012508 <flush_lines_>
 8014814:	2400      	movs	r4, #0
 8014816:	4620      	mov	r0, r4
 8014818:	b01b      	add	sp, #108	@ 0x6c
 801481a:	ecbd 8b0c 	vpop	{d8-d13}
 801481e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014822:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014826:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 801482a:	2b01      	cmp	r3, #1
 801482c:	f04f 0300 	mov.w	r3, #0
 8014830:	bf07      	ittee	eq
 8014832:	ee18 2a10 	vmoveq	r2, s16
 8014836:	ee18 1a10 	vmoveq	r1, s16
 801483a:	9917      	ldrne	r1, [sp, #92]	@ 0x5c
 801483c:	9a18      	ldrne	r2, [sp, #96]	@ 0x60
 801483e:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 8014842:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014846:	0623      	lsls	r3, r4, #24
 8014848:	920e      	str	r2, [sp, #56]	@ 0x38
 801484a:	910d      	str	r1, [sp, #52]	@ 0x34
 801484c:	9113      	str	r1, [sp, #76]	@ 0x4c
 801484e:	9214      	str	r2, [sp, #80]	@ 0x50
 8014850:	d5ba      	bpl.n	80147c8 <stroke_path+0x138>
 8014852:	4d0e      	ldr	r5, [pc, #56]	@ (801488c <stroke_path+0x1fc>)
 8014854:	682b      	ldr	r3, [r5, #0]
 8014856:	7f5e      	ldrb	r6, [r3, #29]
 8014858:	f016 0610 	ands.w	r6, r6, #16
 801485c:	d055      	beq.n	801490a <stroke_path+0x27a>
 801485e:	2300      	movs	r3, #0
 8014860:	461a      	mov	r2, r3
 8014862:	4619      	mov	r1, r3
 8014864:	4618      	mov	r0, r3
 8014866:	f7fd fbf1 	bl	801204c <nema_enable_aa>
 801486a:	eddb 7a08 	vldr	s15, [fp, #32]
 801486e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014876:	4606      	mov	r6, r0
 8014878:	f340 80a6 	ble.w	80149c8 <stroke_path+0x338>
 801487c:	682b      	ldr	r3, [r5, #0]
 801487e:	7f5b      	ldrb	r3, [r3, #29]
 8014880:	06df      	lsls	r7, r3, #27
 8014882:	d450      	bmi.n	8014926 <stroke_path+0x296>
 8014884:	e048      	b.n	8014918 <stroke_path+0x288>
 8014886:	bf00      	nop
 8014888:	00000000 	.word	0x00000000
 801488c:	20082fac 	.word	0x20082fac
 8014890:	20082ffc 	.word	0x20082ffc
 8014894:	f89d 2021 	ldrb.w	r2, [sp, #33]	@ 0x21
 8014898:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801489a:	2a01      	cmp	r2, #1
 801489c:	4db6      	ldr	r5, [pc, #728]	@ (8014b78 <stroke_path+0x4e8>)
 801489e:	f000 81d4 	beq.w	8014c4a <stroke_path+0x5ba>
 80148a2:	2001      	movs	r0, #1
 80148a4:	2600      	movs	r6, #0
 80148a6:	0099      	lsls	r1, r3, #2
 80148a8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80148ac:	1d0f      	adds	r7, r1, #4
 80148ae:	4417      	add	r7, r2
 80148b0:	440a      	add	r2, r1
 80148b2:	1819      	adds	r1, r3, r0
 80148b4:	930a      	str	r3, [sp, #40]	@ 0x28
 80148b6:	f88d 6020 	strb.w	r6, [sp, #32]
 80148ba:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80148be:	3302      	adds	r3, #2
 80148c0:	9109      	str	r1, [sp, #36]	@ 0x24
 80148c2:	f1b8 0f00 	cmp.w	r8, #0
 80148c6:	f000 81b2 	beq.w	8014c2e <stroke_path+0x59e>
 80148ca:	edd2 7a00 	vldr	s15, [r2]
 80148ce:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 80148d2:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80148d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80148d8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80148dc:	edd7 7a00 	vldr	s15, [r7]
 80148e0:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80148e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80148e8:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80148ec:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 80148f0:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 80148f4:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80148f8:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80148fc:	682b      	ldr	r3, [r5, #0]
 80148fe:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014902:	7f5e      	ldrb	r6, [r3, #29]
 8014904:	f016 0610 	ands.w	r6, r6, #16
 8014908:	d1a9      	bne.n	801485e <stroke_path+0x1ce>
 801490a:	eddb 7a08 	vldr	s15, [fp, #32]
 801490e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014916:	dd57      	ble.n	80149c8 <stroke_path+0x338>
 8014918:	2201      	movs	r2, #1
 801491a:	2300      	movs	r3, #0
 801491c:	4611      	mov	r1, r2
 801491e:	4610      	mov	r0, r2
 8014920:	f7fd fb94 	bl	801204c <nema_enable_aa>
 8014924:	4606      	mov	r6, r0
 8014926:	2009      	movs	r0, #9
 8014928:	ed9b ba00 	vldr	s22, [fp]
 801492c:	f8db 8010 	ldr.w	r8, [fp, #16]
 8014930:	eddb aa01 	vldr	s21, [fp, #4]
 8014934:	f8db 7014 	ldr.w	r7, [fp, #20]
 8014938:	ed9b aa02 	vldr	s20, [fp, #8]
 801493c:	eddb 9a06 	vldr	s19, [fp, #24]
 8014940:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014944:	eddb 8a07 	vldr	s17, [fp, #28]
 8014948:	f009 f9f4 	bl	801dd34 <nema_cl_get_space>
 801494c:	b3a8      	cbz	r0, 80149ba <stroke_path+0x32a>
 801494e:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014952:	f8c0 800c 	str.w	r8, [r0, #12]
 8014956:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 801495a:	f44f 784c 	mov.w	r8, #816	@ 0x330
 801495e:	ed80 ba01 	vstr	s22, [r0, #4]
 8014962:	6083      	str	r3, [r0, #8]
 8014964:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014968:	61c7      	str	r7, [r0, #28]
 801496a:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801496e:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014972:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014976:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801497a:	edc0 aa05 	vstr	s21, [r0, #20]
 801497e:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014982:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014986:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 801498a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801498e:	f8df e1f4 	ldr.w	lr, [pc, #500]	@ 8014b84 <stroke_path+0x4f4>
 8014992:	f8c0 8010 	str.w	r8, [r0, #16]
 8014996:	f8c0 a000 	str.w	sl, [r0]
 801499a:	f8de e010 	ldr.w	lr, [lr, #16]
 801499e:	f8df 81e8 	ldr.w	r8, [pc, #488]	@ 8014b88 <stroke_path+0x4f8>
 80149a2:	f04e 0e05 	orr.w	lr, lr, #5
 80149a6:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 80149aa:	f8c0 c018 	str.w	ip, [r0, #24]
 80149ae:	6207      	str	r7, [r0, #32]
 80149b0:	6281      	str	r1, [r0, #40]	@ 0x28
 80149b2:	6302      	str	r2, [r0, #48]	@ 0x30
 80149b4:	6383      	str	r3, [r0, #56]	@ 0x38
 80149b6:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 80149ba:	682b      	ldr	r3, [r5, #0]
 80149bc:	ed8b 8a08 	vstr	s16, [fp, #32]
 80149c0:	7f5b      	ldrb	r3, [r3, #29]
 80149c2:	06d8      	lsls	r0, r3, #27
 80149c4:	f140 813d 	bpl.w	8014c42 <stroke_path+0x5b2>
 80149c8:	4b6c      	ldr	r3, [pc, #432]	@ (8014b7c <stroke_path+0x4ec>)
 80149ca:	edd3 7a08 	vldr	s15, [r3, #32]
 80149ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80149d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80149d6:	dd6d      	ble.n	8014ab4 <stroke_path+0x424>
 80149d8:	0621      	lsls	r1, r4, #24
 80149da:	d46b      	bmi.n	8014ab4 <stroke_path+0x424>
 80149dc:	682b      	ldr	r3, [r5, #0]
 80149de:	4c68      	ldr	r4, [pc, #416]	@ (8014b80 <stroke_path+0x4f0>)
 80149e0:	7f59      	ldrb	r1, [r3, #29]
 80149e2:	f011 0110 	ands.w	r1, r1, #16
 80149e6:	d10a      	bne.n	80149fe <stroke_path+0x36e>
 80149e8:	6823      	ldr	r3, [r4, #0]
 80149ea:	2b01      	cmp	r3, #1
 80149ec:	bf13      	iteet	ne
 80149ee:	2301      	movne	r3, #1
 80149f0:	461a      	moveq	r2, r3
 80149f2:	4619      	moveq	r1, r3
 80149f4:	461a      	movne	r2, r3
 80149f6:	4618      	mov	r0, r3
 80149f8:	f7fd fb28 	bl	801204c <nema_enable_aa>
 80149fc:	4606      	mov	r6, r0
 80149fe:	4b5f      	ldr	r3, [pc, #380]	@ (8014b7c <stroke_path+0x4ec>)
 8014a00:	2009      	movs	r0, #9
 8014a02:	ed93 ba00 	vldr	s22, [r3]
 8014a06:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8014a0a:	edd3 aa01 	vldr	s21, [r3, #4]
 8014a0e:	695f      	ldr	r7, [r3, #20]
 8014a10:	ed93 aa02 	vldr	s20, [r3, #8]
 8014a14:	edd3 9a06 	vldr	s19, [r3, #24]
 8014a18:	ed93 9a03 	vldr	s18, [r3, #12]
 8014a1c:	edd3 8a07 	vldr	s17, [r3, #28]
 8014a20:	f009 f988 	bl	801dd34 <nema_cl_get_space>
 8014a24:	b3a8      	cbz	r0, 8014a92 <stroke_path+0x402>
 8014a26:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014a2a:	f8c0 800c 	str.w	r8, [r0, #12]
 8014a2e:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014a32:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014a36:	ed80 ba01 	vstr	s22, [r0, #4]
 8014a3a:	6083      	str	r3, [r0, #8]
 8014a3c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014a40:	61c7      	str	r7, [r0, #28]
 8014a42:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014a46:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014a4a:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014a4e:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014a52:	edc0 aa05 	vstr	s21, [r0, #20]
 8014a56:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014a5a:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014a5e:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014a62:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014a66:	f8df e11c 	ldr.w	lr, [pc, #284]	@ 8014b84 <stroke_path+0x4f4>
 8014a6a:	f8c0 8010 	str.w	r8, [r0, #16]
 8014a6e:	f8c0 a000 	str.w	sl, [r0]
 8014a72:	f8de e010 	ldr.w	lr, [lr, #16]
 8014a76:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 8014b88 <stroke_path+0x4f8>
 8014a7a:	f04e 0e05 	orr.w	lr, lr, #5
 8014a7e:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014a82:	f8c0 c018 	str.w	ip, [r0, #24]
 8014a86:	6207      	str	r7, [r0, #32]
 8014a88:	6281      	str	r1, [r0, #40]	@ 0x28
 8014a8a:	6302      	str	r2, [r0, #48]	@ 0x30
 8014a8c:	6383      	str	r3, [r0, #56]	@ 0x38
 8014a8e:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014a92:	682b      	ldr	r3, [r5, #0]
 8014a94:	4a39      	ldr	r2, [pc, #228]	@ (8014b7c <stroke_path+0x4ec>)
 8014a96:	7f5b      	ldrb	r3, [r3, #29]
 8014a98:	ed82 8a08 	vstr	s16, [r2, #32]
 8014a9c:	06da      	lsls	r2, r3, #27
 8014a9e:	f140 8175 	bpl.w	8014d8c <stroke_path+0x6fc>
 8014aa2:	6823      	ldr	r3, [r4, #0]
 8014aa4:	2b02      	cmp	r3, #2
 8014aa6:	d014      	beq.n	8014ad2 <stroke_path+0x442>
 8014aa8:	4630      	mov	r0, r6
 8014aaa:	f7fd faf1 	bl	8012090 <nema_enable_aa_flags>
 8014aae:	2300      	movs	r3, #0
 8014ab0:	6023      	str	r3, [r4, #0]
 8014ab2:	e6a1      	b.n	80147f8 <stroke_path+0x168>
 8014ab4:	4c32      	ldr	r4, [pc, #200]	@ (8014b80 <stroke_path+0x4f0>)
 8014ab6:	6823      	ldr	r3, [r4, #0]
 8014ab8:	2b02      	cmp	r3, #2
 8014aba:	d1f5      	bne.n	8014aa8 <stroke_path+0x418>
 8014abc:	682b      	ldr	r3, [r5, #0]
 8014abe:	7f5b      	ldrb	r3, [r3, #29]
 8014ac0:	f013 0310 	ands.w	r3, r3, #16
 8014ac4:	d105      	bne.n	8014ad2 <stroke_path+0x442>
 8014ac6:	2201      	movs	r2, #1
 8014ac8:	4619      	mov	r1, r3
 8014aca:	4610      	mov	r0, r2
 8014acc:	f7fd fabe 	bl	801204c <nema_enable_aa>
 8014ad0:	4606      	mov	r6, r0
 8014ad2:	4b2a      	ldr	r3, [pc, #168]	@ (8014b7c <stroke_path+0x4ec>)
 8014ad4:	2009      	movs	r0, #9
 8014ad6:	ed93 ba01 	vldr	s22, [r3, #4]
 8014ada:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8014ade:	eddb aa00 	vldr	s21, [fp]
 8014ae2:	f8db 7010 	ldr.w	r7, [fp, #16]
 8014ae6:	ed93 aa02 	vldr	s20, [r3, #8]
 8014aea:	edd3 9a06 	vldr	s19, [r3, #24]
 8014aee:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014af2:	eddb 8a07 	vldr	s17, [fp, #28]
 8014af6:	f009 f91d 	bl	801dd34 <nema_cl_get_space>
 8014afa:	b3a8      	cbz	r0, 8014b68 <stroke_path+0x4d8>
 8014afc:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014b00:	f8c0 800c 	str.w	r8, [r0, #12]
 8014b04:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014b08:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014b0c:	ed80 ba01 	vstr	s22, [r0, #4]
 8014b10:	6083      	str	r3, [r0, #8]
 8014b12:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014b16:	61c7      	str	r7, [r0, #28]
 8014b18:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014b1c:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014b20:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014b24:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014b28:	edc0 aa05 	vstr	s21, [r0, #20]
 8014b2c:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014b30:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014b34:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014b38:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014b3c:	f8df e044 	ldr.w	lr, [pc, #68]	@ 8014b84 <stroke_path+0x4f4>
 8014b40:	f8c0 8010 	str.w	r8, [r0, #16]
 8014b44:	f8c0 a000 	str.w	sl, [r0]
 8014b48:	f8de e010 	ldr.w	lr, [lr, #16]
 8014b4c:	f8df 8038 	ldr.w	r8, [pc, #56]	@ 8014b88 <stroke_path+0x4f8>
 8014b50:	f04e 0e05 	orr.w	lr, lr, #5
 8014b54:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014b58:	f8c0 c018 	str.w	ip, [r0, #24]
 8014b5c:	6207      	str	r7, [r0, #32]
 8014b5e:	6281      	str	r1, [r0, #40]	@ 0x28
 8014b60:	6302      	str	r2, [r0, #48]	@ 0x30
 8014b62:	6383      	str	r3, [r0, #56]	@ 0x38
 8014b64:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014b68:	682b      	ldr	r3, [r5, #0]
 8014b6a:	7f5b      	ldrb	r3, [r3, #29]
 8014b6c:	06db      	lsls	r3, r3, #27
 8014b6e:	d49b      	bmi.n	8014aa8 <stroke_path+0x418>
 8014b70:	4630      	mov	r0, r6
 8014b72:	f7fd fa8d 	bl	8012090 <nema_enable_aa_flags>
 8014b76:	e797      	b.n	8014aa8 <stroke_path+0x418>
 8014b78:	20082fac 	.word	0x20082fac
 8014b7c:	20082fc4 	.word	0x20082fc4
 8014b80:	20083028 	.word	0x20083028
 8014b84:	20000064 	.word	0x20000064
 8014b88:	ff000100 	.word	0xff000100
 8014b8c:	4dba      	ldr	r5, [pc, #744]	@ (8014e78 <stroke_path+0x7e8>)
 8014b8e:	eddd aa0f 	vldr	s21, [sp, #60]	@ 0x3c
 8014b92:	682b      	ldr	r3, [r5, #0]
 8014b94:	ed9d aa10 	vldr	s20, [sp, #64]	@ 0x40
 8014b98:	7f1a      	ldrb	r2, [r3, #28]
 8014b9a:	ed9d ca0b 	vldr	s24, [sp, #44]	@ 0x2c
 8014b9e:	eddd ba0c 	vldr	s23, [sp, #48]	@ 0x30
 8014ba2:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014ba6:	ed9d 9a0e 	vldr	s18, [sp, #56]	@ 0x38
 8014baa:	2a00      	cmp	r2, #0
 8014bac:	f040 81be 	bne.w	8014f2c <stroke_path+0x89c>
 8014bb0:	4ab2      	ldr	r2, [pc, #712]	@ (8014e7c <stroke_path+0x7ec>)
 8014bb2:	6816      	ldr	r6, [r2, #0]
 8014bb4:	2e01      	cmp	r6, #1
 8014bb6:	f000 8342 	beq.w	801523e <stroke_path+0xbae>
 8014bba:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014bbc:	2508      	movs	r5, #8
 8014bbe:	b10a      	cbz	r2, 8014bc4 <stroke_path+0x534>
 8014bc0:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014bc4:	49ae      	ldr	r1, [pc, #696]	@ (8014e80 <stroke_path+0x7f0>)
 8014bc6:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014bc8:	7808      	ldrb	r0, [r1, #0]
 8014bca:	4014      	ands	r4, r2
 8014bcc:	2801      	cmp	r0, #1
 8014bce:	d103      	bne.n	8014bd8 <stroke_path+0x548>
 8014bd0:	684b      	ldr	r3, [r1, #4]
 8014bd2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014bd6:	431c      	orrs	r4, r3
 8014bd8:	2007      	movs	r0, #7
 8014bda:	f009 f8ab 	bl	801dd34 <nema_cl_get_space>
 8014bde:	2800      	cmp	r0, #0
 8014be0:	f43f ae0a 	beq.w	80147f8 <stroke_path+0x168>
 8014be4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8014be8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8014bec:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8014bf0:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8014bf4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014bf8:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8014bfc:	4ba1      	ldr	r3, [pc, #644]	@ (8014e84 <stroke_path+0x7f4>)
 8014bfe:	432c      	orrs	r4, r5
 8014c00:	6344      	str	r4, [r0, #52]	@ 0x34
 8014c02:	ed80 ca01 	vstr	s24, [r0, #4]
 8014c06:	edc0 ba03 	vstr	s23, [r0, #12]
 8014c0a:	edc0 aa05 	vstr	s21, [r0, #20]
 8014c0e:	ed80 aa07 	vstr	s20, [r0, #28]
 8014c12:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8014c16:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8014c1a:	f8c0 e000 	str.w	lr, [r0]
 8014c1e:	f8c0 c008 	str.w	ip, [r0, #8]
 8014c22:	6107      	str	r7, [r0, #16]
 8014c24:	6186      	str	r6, [r0, #24]
 8014c26:	6201      	str	r1, [r0, #32]
 8014c28:	6282      	str	r2, [r0, #40]	@ 0x28
 8014c2a:	6303      	str	r3, [r0, #48]	@ 0x30
 8014c2c:	e5e4      	b.n	80147f8 <stroke_path+0x168>
 8014c2e:	edd2 6a00 	vldr	s13, [r2]
 8014c32:	9309      	str	r3, [sp, #36]	@ 0x24
 8014c34:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014c38:	edd7 7a00 	vldr	s15, [r7]
 8014c3c:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014c40:	e654      	b.n	80148ec <stroke_path+0x25c>
 8014c42:	4630      	mov	r0, r6
 8014c44:	f7fd fa24 	bl	8012090 <nema_enable_aa_flags>
 8014c48:	e6be      	b.n	80149c8 <stroke_path+0x338>
 8014c4a:	2b00      	cmp	r3, #0
 8014c4c:	f43f ae29 	beq.w	80148a2 <stroke_path+0x212>
 8014c50:	682a      	ldr	r2, [r5, #0]
 8014c52:	7f12      	ldrb	r2, [r2, #28]
 8014c54:	2a00      	cmp	r2, #0
 8014c56:	f43f ae24 	beq.w	80148a2 <stroke_path+0x212>
 8014c5a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014c5e:	2b00      	cmp	r3, #0
 8014c60:	f040 83c5 	bne.w	80153ee <stroke_path+0xd5e>
 8014c64:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8014c68:	f8dd a060 	ldr.w	sl, [sp, #96]	@ 0x60
 8014c6c:	4a86      	ldr	r2, [pc, #536]	@ (8014e88 <stroke_path+0x7f8>)
 8014c6e:	4b87      	ldr	r3, [pc, #540]	@ (8014e8c <stroke_path+0x7fc>)
 8014c70:	2007      	movs	r0, #7
 8014c72:	edcd 8a06 	vstr	s17, [sp, #24]
 8014c76:	f8cd a01c 	str.w	sl, [sp, #28]
 8014c7a:	6817      	ldr	r7, [r2, #0]
 8014c7c:	681e      	ldr	r6, [r3, #0]
 8014c7e:	f009 f859 	bl	801dd34 <nema_cl_get_space>
 8014c82:	b358      	cbz	r0, 8014cdc <stroke_path+0x64c>
 8014c84:	4a7e      	ldr	r2, [pc, #504]	@ (8014e80 <stroke_path+0x7f0>)
 8014c86:	682b      	ldr	r3, [r5, #0]
 8014c88:	7811      	ldrb	r1, [r2, #0]
 8014c8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014c8c:	2901      	cmp	r1, #1
 8014c8e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8014c92:	f000 83f2 	beq.w	801547a <stroke_path+0xdea>
 8014c96:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8014c9a:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014c9e:	6002      	str	r2, [r0, #0]
 8014ca0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014ca2:	6081      	str	r1, [r0, #8]
 8014ca4:	6042      	str	r2, [r0, #4]
 8014ca6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014ca8:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014cac:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014cb0:	60c2      	str	r2, [r0, #12]
 8014cb2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8014cb6:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8014cba:	edc0 8a05 	vstr	s17, [r0, #20]
 8014cbe:	f043 0304 	orr.w	r3, r3, #4
 8014cc2:	6343      	str	r3, [r0, #52]	@ 0x34
 8014cc4:	4b6f      	ldr	r3, [pc, #444]	@ (8014e84 <stroke_path+0x7f4>)
 8014cc6:	f8c0 a01c 	str.w	sl, [r0, #28]
 8014cca:	6247      	str	r7, [r0, #36]	@ 0x24
 8014ccc:	62c6      	str	r6, [r0, #44]	@ 0x2c
 8014cce:	f8c0 e010 	str.w	lr, [r0, #16]
 8014cd2:	f8c0 c018 	str.w	ip, [r0, #24]
 8014cd6:	6201      	str	r1, [r0, #32]
 8014cd8:	6282      	str	r2, [r0, #40]	@ 0x28
 8014cda:	6303      	str	r3, [r0, #48]	@ 0x30
 8014cdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014cde:	e5e0      	b.n	80148a2 <stroke_path+0x212>
 8014ce0:	4d65      	ldr	r5, [pc, #404]	@ (8014e78 <stroke_path+0x7e8>)
 8014ce2:	682b      	ldr	r3, [r5, #0]
 8014ce4:	7f1a      	ldrb	r2, [r3, #28]
 8014ce6:	2a00      	cmp	r2, #0
 8014ce8:	f040 8201 	bne.w	80150ee <stroke_path+0xa5e>
 8014cec:	4a63      	ldr	r2, [pc, #396]	@ (8014e7c <stroke_path+0x7ec>)
 8014cee:	6814      	ldr	r4, [r2, #0]
 8014cf0:	2c01      	cmp	r4, #1
 8014cf2:	f000 840b 	beq.w	801550c <stroke_path+0xe7c>
 8014cf6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014cf8:	2509      	movs	r5, #9
 8014cfa:	2a00      	cmp	r2, #0
 8014cfc:	f040 8171 	bne.w	8014fe2 <stroke_path+0x952>
 8014d00:	495f      	ldr	r1, [pc, #380]	@ (8014e80 <stroke_path+0x7f0>)
 8014d02:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014d04:	7808      	ldrb	r0, [r1, #0]
 8014d06:	4014      	ands	r4, r2
 8014d08:	2801      	cmp	r0, #1
 8014d0a:	d103      	bne.n	8014d14 <stroke_path+0x684>
 8014d0c:	684b      	ldr	r3, [r1, #4]
 8014d0e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014d12:	431c      	orrs	r4, r3
 8014d14:	2009      	movs	r0, #9
 8014d16:	f009 f80d 	bl	801dd34 <nema_cl_get_space>
 8014d1a:	2800      	cmp	r0, #0
 8014d1c:	f43f ad6c 	beq.w	80147f8 <stroke_path+0x168>
 8014d20:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8014d24:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8014d28:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014d2c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014d30:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8014d34:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014d38:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8014d3c:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8014d40:	6007      	str	r7, [r0, #0]
 8014d42:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8014d44:	f8c0 8008 	str.w	r8, [r0, #8]
 8014d48:	6047      	str	r7, [r0, #4]
 8014d4a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014d4c:	f8c0 e010 	str.w	lr, [r0, #16]
 8014d50:	60c7      	str	r7, [r0, #12]
 8014d52:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014d54:	f8c0 c018 	str.w	ip, [r0, #24]
 8014d58:	6147      	str	r7, [r0, #20]
 8014d5a:	6283      	str	r3, [r0, #40]	@ 0x28
 8014d5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d5e:	6201      	str	r1, [r0, #32]
 8014d60:	61c3      	str	r3, [r0, #28]
 8014d62:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014d64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014d66:	6241      	str	r1, [r0, #36]	@ 0x24
 8014d68:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014d6a:	6343      	str	r3, [r0, #52]	@ 0x34
 8014d6c:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8014d6e:	4b45      	ldr	r3, [pc, #276]	@ (8014e84 <stroke_path+0x7f4>)
 8014d70:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014d72:	432c      	orrs	r4, r5
 8014d74:	6444      	str	r4, [r0, #68]	@ 0x44
 8014d76:	6306      	str	r6, [r0, #48]	@ 0x30
 8014d78:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8014d7a:	6382      	str	r2, [r0, #56]	@ 0x38
 8014d7c:	6403      	str	r3, [r0, #64]	@ 0x40
 8014d7e:	e53b      	b.n	80147f8 <stroke_path+0x168>
 8014d80:	2201      	movs	r2, #1
 8014d82:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014d86:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8014d8a:	e513      	b.n	80147b4 <stroke_path+0x124>
 8014d8c:	4630      	mov	r0, r6
 8014d8e:	f7fd f97f 	bl	8012090 <nema_enable_aa_flags>
 8014d92:	e690      	b.n	8014ab6 <stroke_path+0x426>
 8014d94:	9009      	str	r0, [sp, #36]	@ 0x24
 8014d96:	ed95 6a00 	vldr	s12, [r5]
 8014d9a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d9e:	1c8a      	adds	r2, r1, #2
 8014da0:	9209      	str	r2, [sp, #36]	@ 0x24
 8014da2:	edd5 6a01 	vldr	s13, [r5, #4]
 8014da6:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014daa:	1cca      	adds	r2, r1, #3
 8014dac:	9209      	str	r2, [sp, #36]	@ 0x24
 8014dae:	ed95 7a02 	vldr	s14, [r5, #8]
 8014db2:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014db6:	3104      	adds	r1, #4
 8014db8:	9109      	str	r1, [sp, #36]	@ 0x24
 8014dba:	edd5 7a03 	vldr	s15, [r5, #12]
 8014dbe:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014dc2:	f1b8 0f00 	cmp.w	r8, #0
 8014dc6:	d013      	beq.n	8014df0 <stroke_path+0x760>
 8014dc8:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 8014dcc:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 8014dd0:	ee36 6a05 	vadd.f32	s12, s12, s10
 8014dd4:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014dd8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014ddc:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8014de0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014de4:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014de8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014dec:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014df0:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 8014df4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8014df8:	008a      	lsls	r2, r1, #2
 8014dfa:	1c48      	adds	r0, r1, #1
 8014dfc:	9202      	str	r2, [sp, #8]
 8014dfe:	9d02      	ldr	r5, [sp, #8]
 8014e00:	9009      	str	r0, [sp, #36]	@ 0x24
 8014e02:	1d2a      	adds	r2, r5, #4
 8014e04:	441a      	add	r2, r3
 8014e06:	442b      	add	r3, r5
 8014e08:	3102      	adds	r1, #2
 8014e0a:	edd3 6a00 	vldr	s13, [r3]
 8014e0e:	f1b8 0f00 	cmp.w	r8, #0
 8014e12:	f000 8090 	beq.w	8014f36 <stroke_path+0x8a6>
 8014e16:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014e1a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014e1e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014e22:	9109      	str	r1, [sp, #36]	@ 0x24
 8014e24:	ed92 7a00 	vldr	s14, [r2]
 8014e28:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014e2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014e30:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014e34:	e4a0      	b.n	8014778 <stroke_path+0xe8>
 8014e36:	f1ba 0f03 	cmp.w	sl, #3
 8014e3a:	f000 80a0 	beq.w	8014f7e <stroke_path+0x8ee>
 8014e3e:	f1ba 0f0a 	cmp.w	sl, #10
 8014e42:	f040 8424 	bne.w	801568e <stroke_path+0xffe>
 8014e46:	9009      	str	r0, [sp, #36]	@ 0x24
 8014e48:	eddc 7a00 	vldr	s15, [ip]
 8014e4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014e50:	ee17 1a90 	vmov	r1, s15
 8014e54:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014e58:	1049      	asrs	r1, r1, #1
 8014e5a:	2900      	cmp	r1, #0
 8014e5c:	9102      	str	r1, [sp, #8]
 8014e5e:	f340 8158 	ble.w	8015112 <stroke_path+0xa82>
 8014e62:	2100      	movs	r1, #0
 8014e64:	4d04      	ldr	r5, [pc, #16]	@ (8014e78 <stroke_path+0x7e8>)
 8014e66:	f8cd a014 	str.w	sl, [sp, #20]
 8014e6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8014e6e:	46aa      	mov	sl, r5
 8014e70:	46c8      	mov	r8, r9
 8014e72:	46a1      	mov	r9, r4
 8014e74:	460c      	mov	r4, r1
 8014e76:	e045      	b.n	8014f04 <stroke_path+0x874>
 8014e78:	20082fac 	.word	0x20082fac
 8014e7c:	20082fb4 	.word	0x20082fb4
 8014e80:	20000064 	.word	0x20000064
 8014e84:	ff000100 	.word	0xff000100
 8014e88:	20082fb8 	.word	0x20082fb8
 8014e8c:	20082fbc 	.word	0x20082fbc
 8014e90:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 8014e94:	ee78 8a81 	vadd.f32	s17, s17, s2
 8014e98:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014e9c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014e9e:	ed91 9a00 	vldr	s18, [r1]
 8014ea2:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 8014ea6:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014eaa:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014eae:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8014eb2:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 8014eb6:	f8da 3000 	ldr.w	r3, [sl]
 8014eba:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 8014ebe:	7f1a      	ldrb	r2, [r3, #28]
 8014ec0:	2a00      	cmp	r2, #0
 8014ec2:	f040 80d0 	bne.w	8015066 <stroke_path+0x9d6>
 8014ec6:	4ac8      	ldr	r2, [pc, #800]	@ (80151e8 <stroke_path+0xb58>)
 8014ec8:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8014ecc:	6812      	ldr	r2, [r2, #0]
 8014ece:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8014ed2:	2a00      	cmp	r2, #0
 8014ed4:	f000 82db 	beq.w	801548e <stroke_path+0xdfe>
 8014ed8:	eef0 1a49 	vmov.f32	s3, s18
 8014edc:	eeb0 1a68 	vmov.f32	s2, s17
 8014ee0:	eef0 0a4a 	vmov.f32	s1, s20
 8014ee4:	eeb0 0a69 	vmov.f32	s0, s19
 8014ee8:	f7fd fd1e 	bl	8012928 <raster_stroked_line_>
 8014eec:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014ef0:	9b02      	ldr	r3, [sp, #8]
 8014ef2:	3401      	adds	r4, #1
 8014ef4:	429c      	cmp	r4, r3
 8014ef6:	e886 0003 	stmia.w	r6, {r0, r1}
 8014efa:	f000 8106 	beq.w	801510a <stroke_path+0xa7a>
 8014efe:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8014f02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014f04:	0090      	lsls	r0, r2, #2
 8014f06:	1d01      	adds	r1, r0, #4
 8014f08:	4419      	add	r1, r3
 8014f0a:	9d03      	ldr	r5, [sp, #12]
 8014f0c:	4403      	add	r3, r0
 8014f0e:	1c50      	adds	r0, r2, #1
 8014f10:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f12:	3202      	adds	r2, #2
 8014f14:	edd3 8a00 	vldr	s17, [r3]
 8014f18:	2d00      	cmp	r5, #0
 8014f1a:	d1b9      	bne.n	8014e90 <stroke_path+0x800>
 8014f1c:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014f20:	9209      	str	r2, [sp, #36]	@ 0x24
 8014f22:	ed91 9a00 	vldr	s18, [r1]
 8014f26:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014f2a:	e7c0      	b.n	8014eae <stroke_path+0x81e>
 8014f2c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014f2e:	2a00      	cmp	r2, #0
 8014f30:	d14d      	bne.n	8014fce <stroke_path+0x93e>
 8014f32:	2506      	movs	r5, #6
 8014f34:	e646      	b.n	8014bc4 <stroke_path+0x534>
 8014f36:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f3a:	9109      	str	r1, [sp, #36]	@ 0x24
 8014f3c:	edd2 7a00 	vldr	s15, [r2]
 8014f40:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f44:	e418      	b.n	8014778 <stroke_path+0xe8>
 8014f46:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f48:	ed95 7a00 	vldr	s14, [r5]
 8014f4c:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014f50:	3102      	adds	r1, #2
 8014f52:	9109      	str	r1, [sp, #36]	@ 0x24
 8014f54:	edd5 7a01 	vldr	s15, [r5, #4]
 8014f58:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014f5c:	f1b8 0f00 	cmp.w	r8, #0
 8014f60:	f43f af46 	beq.w	8014df0 <stroke_path+0x760>
 8014f64:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 8014f68:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8014f6c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014f70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014f74:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014f78:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014f7c:	e738      	b.n	8014df0 <stroke_path+0x760>
 8014f7e:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014f82:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f84:	f1b8 0f00 	cmp.w	r8, #0
 8014f88:	d02e      	beq.n	8014fe8 <stroke_path+0x958>
 8014f8a:	ed9c 7a00 	vldr	s14, [ip]
 8014f8e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014f92:	ee76 6a87 	vadd.f32	s13, s13, s14
 8014f96:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f9a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f9e:	f7ff bbeb 	b.w	8014778 <stroke_path+0xe8>
 8014fa2:	4b91      	ldr	r3, [pc, #580]	@ (80151e8 <stroke_path+0xb58>)
 8014fa4:	eddd 8a0b 	vldr	s17, [sp, #44]	@ 0x2c
 8014fa8:	681b      	ldr	r3, [r3, #0]
 8014faa:	ed9d 9a0c 	vldr	s18, [sp, #48]	@ 0x30
 8014fae:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014fb2:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8014fb6:	b333      	cbz	r3, 8015006 <stroke_path+0x976>
 8014fb8:	eef0 1a4a 	vmov.f32	s3, s20
 8014fbc:	eeb0 1a69 	vmov.f32	s2, s19
 8014fc0:	eef0 0a49 	vmov.f32	s1, s18
 8014fc4:	eeb0 0a68 	vmov.f32	s0, s17
 8014fc8:	f7fd fcae 	bl	8012928 <raster_stroked_line_>
 8014fcc:	e414      	b.n	80147f8 <stroke_path+0x168>
 8014fce:	4a87      	ldr	r2, [pc, #540]	@ (80151ec <stroke_path+0xb5c>)
 8014fd0:	2506      	movs	r5, #6
 8014fd2:	6812      	ldr	r2, [r2, #0]
 8014fd4:	2a00      	cmp	r2, #0
 8014fd6:	bf14      	ite	ne
 8014fd8:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014fdc:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8014fe0:	e5f0      	b.n	8014bc4 <stroke_path+0x534>
 8014fe2:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014fe6:	e68b      	b.n	8014d00 <stroke_path+0x670>
 8014fe8:	eddc 6a00 	vldr	s13, [ip]
 8014fec:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014ff0:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014ff4:	f7ff bbc0 	b.w	8014778 <stroke_path+0xe8>
 8014ff8:	2300      	movs	r3, #0
 8014ffa:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014ffe:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015002:	f7ff bbd7 	b.w	80147b4 <stroke_path+0x124>
 8015006:	4d7a      	ldr	r5, [pc, #488]	@ (80151f0 <stroke_path+0xb60>)
 8015008:	497a      	ldr	r1, [pc, #488]	@ (80151f4 <stroke_path+0xb64>)
 801500a:	682a      	ldr	r2, [r5, #0]
 801500c:	7808      	ldrb	r0, [r1, #0]
 801500e:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8015012:	2b00      	cmp	r3, #0
 8015014:	bf18      	it	ne
 8015016:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 801501a:	2801      	cmp	r0, #1
 801501c:	ea04 0403 	and.w	r4, r4, r3
 8015020:	f000 8230 	beq.w	8015484 <stroke_path+0xdf4>
 8015024:	2005      	movs	r0, #5
 8015026:	f008 fe85 	bl	801dd34 <nema_cl_get_space>
 801502a:	2800      	cmp	r0, #0
 801502c:	f43f abe4 	beq.w	80147f8 <stroke_path+0x168>
 8015030:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8015034:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8015038:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801503c:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015040:	4b6d      	ldr	r3, [pc, #436]	@ (80151f8 <stroke_path+0xb68>)
 8015042:	f044 040a 	orr.w	r4, r4, #10
 8015046:	6244      	str	r4, [r0, #36]	@ 0x24
 8015048:	edc0 8a01 	vstr	s17, [r0, #4]
 801504c:	ed80 9a03 	vstr	s18, [r0, #12]
 8015050:	edc0 9a05 	vstr	s19, [r0, #20]
 8015054:	ed80 aa07 	vstr	s20, [r0, #28]
 8015058:	6006      	str	r6, [r0, #0]
 801505a:	6085      	str	r5, [r0, #8]
 801505c:	6101      	str	r1, [r0, #16]
 801505e:	6182      	str	r2, [r0, #24]
 8015060:	6203      	str	r3, [r0, #32]
 8015062:	f7ff bbc9 	b.w	80147f8 <stroke_path+0x168>
 8015066:	4a65      	ldr	r2, [pc, #404]	@ (80151fc <stroke_path+0xb6c>)
 8015068:	4b65      	ldr	r3, [pc, #404]	@ (8015200 <stroke_path+0xb70>)
 801506a:	6812      	ldr	r2, [r2, #0]
 801506c:	2007      	movs	r0, #7
 801506e:	9204      	str	r2, [sp, #16]
 8015070:	681d      	ldr	r5, [r3, #0]
 8015072:	f008 fe5f 	bl	801dd34 <nema_cl_get_space>
 8015076:	2800      	cmp	r0, #0
 8015078:	f43f af38 	beq.w	8014eec <stroke_path+0x85c>
 801507c:	4a5d      	ldr	r2, [pc, #372]	@ (80151f4 <stroke_path+0xb64>)
 801507e:	f8da 3000 	ldr.w	r3, [sl]
 8015082:	7812      	ldrb	r2, [r2, #0]
 8015084:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015086:	2a01      	cmp	r2, #1
 8015088:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801508c:	d104      	bne.n	8015098 <stroke_path+0xa08>
 801508e:	4a59      	ldr	r2, [pc, #356]	@ (80151f4 <stroke_path+0xb64>)
 8015090:	6852      	ldr	r2, [r2, #4]
 8015092:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015096:	4313      	orrs	r3, r2
 8015098:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801509c:	6002      	str	r2, [r0, #0]
 801509e:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 80150a2:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80150a6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80150aa:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80150ae:	6082      	str	r2, [r0, #8]
 80150b0:	edc0 7a01 	vstr	s15, [r0, #4]
 80150b4:	f8c0 e018 	str.w	lr, [r0, #24]
 80150b8:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 80150bc:	f8c0 c010 	str.w	ip, [r0, #16]
 80150c0:	f8c0 e00c 	str.w	lr, [r0, #12]
 80150c4:	f043 0304 	orr.w	r3, r3, #4
 80150c8:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 80150cc:	6343      	str	r3, [r0, #52]	@ 0x34
 80150ce:	9b04      	ldr	r3, [sp, #16]
 80150d0:	f8c0 c014 	str.w	ip, [r0, #20]
 80150d4:	6243      	str	r3, [r0, #36]	@ 0x24
 80150d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80150d8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80150dc:	61c3      	str	r3, [r0, #28]
 80150de:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80150e2:	4a45      	ldr	r2, [pc, #276]	@ (80151f8 <stroke_path+0xb68>)
 80150e4:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80150e6:	6302      	str	r2, [r0, #48]	@ 0x30
 80150e8:	6201      	str	r1, [r0, #32]
 80150ea:	6283      	str	r3, [r0, #40]	@ 0x28
 80150ec:	e6fe      	b.n	8014eec <stroke_path+0x85c>
 80150ee:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80150f0:	2a00      	cmp	r2, #0
 80150f2:	f000 817a 	beq.w	80153ea <stroke_path+0xd5a>
 80150f6:	4a3d      	ldr	r2, [pc, #244]	@ (80151ec <stroke_path+0xb5c>)
 80150f8:	2507      	movs	r5, #7
 80150fa:	6812      	ldr	r2, [r2, #0]
 80150fc:	2a00      	cmp	r2, #0
 80150fe:	bf14      	ite	ne
 8015100:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8015104:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8015108:	e5fa      	b.n	8014d00 <stroke_path+0x670>
 801510a:	464c      	mov	r4, r9
 801510c:	46c1      	mov	r9, r8
 801510e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015112:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8015116:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 801511a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 801511e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015126:	ed9d 9a18 	vldr	s18, [sp, #96]	@ 0x60
 801512a:	d108      	bne.n	801513e <stroke_path+0xaae>
 801512c:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8015130:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8015134:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801513c:	d04c      	beq.n	80151d8 <stroke_path+0xb48>
 801513e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8015142:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8015146:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 801514a:	4d29      	ldr	r5, [pc, #164]	@ (80151f0 <stroke_path+0xb60>)
 801514c:	e886 0003 	stmia.w	r6, {r0, r1}
 8015150:	682b      	ldr	r3, [r5, #0]
 8015152:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015156:	7f1a      	ldrb	r2, [r3, #28]
 8015158:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 801515c:	2a00      	cmp	r2, #0
 801515e:	f000 814b 	beq.w	80153f8 <stroke_path+0xd68>
 8015162:	4a26      	ldr	r2, [pc, #152]	@ (80151fc <stroke_path+0xb6c>)
 8015164:	4b26      	ldr	r3, [pc, #152]	@ (8015200 <stroke_path+0xb70>)
 8015166:	2007      	movs	r0, #7
 8015168:	6817      	ldr	r7, [r2, #0]
 801516a:	681e      	ldr	r6, [r3, #0]
 801516c:	f008 fde2 	bl	801dd34 <nema_cl_get_space>
 8015170:	2800      	cmp	r0, #0
 8015172:	d031      	beq.n	80151d8 <stroke_path+0xb48>
 8015174:	4a1f      	ldr	r2, [pc, #124]	@ (80151f4 <stroke_path+0xb64>)
 8015176:	682b      	ldr	r3, [r5, #0]
 8015178:	7811      	ldrb	r1, [r2, #0]
 801517a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801517c:	2901      	cmp	r1, #1
 801517e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015182:	d103      	bne.n	801518c <stroke_path+0xafc>
 8015184:	6852      	ldr	r2, [r2, #4]
 8015186:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 801518a:	4313      	orrs	r3, r2
 801518c:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015190:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015194:	f44f 754d 	mov.w	r5, #820	@ 0x334
 8015198:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801519c:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 80151a0:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 80151a4:	f8c0 e000 	str.w	lr, [r0]
 80151a8:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 80151ac:	f8c0 c008 	str.w	ip, [r0, #8]
 80151b0:	f8c0 e004 	str.w	lr, [r0, #4]
 80151b4:	6185      	str	r5, [r0, #24]
 80151b6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80151b8:	6101      	str	r1, [r0, #16]
 80151ba:	60c5      	str	r5, [r0, #12]
 80151bc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80151be:	f043 0304 	orr.w	r3, r3, #4
 80151c2:	6141      	str	r1, [r0, #20]
 80151c4:	6343      	str	r3, [r0, #52]	@ 0x34
 80151c6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80151c8:	4b0b      	ldr	r3, [pc, #44]	@ (80151f8 <stroke_path+0xb68>)
 80151ca:	6247      	str	r7, [r0, #36]	@ 0x24
 80151cc:	62c6      	str	r6, [r0, #44]	@ 0x2c
 80151ce:	61c1      	str	r1, [r0, #28]
 80151d0:	f8c0 8020 	str.w	r8, [r0, #32]
 80151d4:	6282      	str	r2, [r0, #40]	@ 0x28
 80151d6:	6303      	str	r3, [r0, #48]	@ 0x30
 80151d8:	2300      	movs	r3, #0
 80151da:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80151de:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 80151e2:	f7ff baed 	b.w	80147c0 <stroke_path+0x130>
 80151e6:	bf00      	nop
 80151e8:	20082fb4 	.word	0x20082fb4
 80151ec:	20082fb0 	.word	0x20082fb0
 80151f0:	20082fac 	.word	0x20082fac
 80151f4:	20000064 	.word	0x20000064
 80151f8:	ff000100 	.word	0xff000100
 80151fc:	20082fb8 	.word	0x20082fb8
 8015200:	20082fbc 	.word	0x20082fbc
 8015204:	f1ae 0705 	sub.w	r7, lr, #5
 8015208:	2f03      	cmp	r7, #3
 801520a:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801520e:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8015212:	d80b      	bhi.n	801522c <stroke_path+0xb9c>
 8015214:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8015218:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801521c:	ed9d 6a15 	vldr	s12, [sp, #84]	@ 0x54
 8015220:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015224:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015228:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801522c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015230:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8015234:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015238:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801523c:	e5df      	b.n	8014dfe <stroke_path+0x76e>
 801523e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8015242:	4cab      	ldr	r4, [pc, #684]	@ (80154f0 <stroke_path+0xe60>)
 8015244:	4dab      	ldr	r5, [pc, #684]	@ (80154f4 <stroke_path+0xe64>)
 8015246:	7821      	ldrb	r1, [r4, #0]
 8015248:	ee39 7acc 	vsub.f32	s14, s19, s24
 801524c:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8015250:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8015254:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8015258:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 801525c:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8015260:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8015264:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8015268:	ee26 6a07 	vmul.f32	s12, s12, s14
 801526c:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8015270:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8015274:	ee24 4a28 	vmul.f32	s8, s8, s17
 8015278:	ee25 5a28 	vmul.f32	s10, s10, s17
 801527c:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8015280:	ee35 ba84 	vadd.f32	s22, s11, s8
 8015284:	ee75 ca24 	vadd.f32	s25, s10, s9
 8015288:	ee27 7a07 	vmul.f32	s14, s14, s14
 801528c:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015290:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8015294:	ee2b ba28 	vmul.f32	s22, s22, s17
 8015298:	ee6c caa8 	vmul.f32	s25, s25, s17
 801529c:	ee66 6aa6 	vmul.f32	s13, s13, s13
 80152a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80152a4:	b339      	cbz	r1, 80152f6 <stroke_path+0xc66>
 80152a6:	eef4 6ae7 	vcmpe.f32	s13, s15
 80152aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152ae:	bfcc      	ite	gt
 80152b0:	2301      	movgt	r3, #1
 80152b2:	2300      	movle	r3, #0
 80152b4:	b353      	cbz	r3, 801530c <stroke_path+0xc7c>
 80152b6:	682b      	ldr	r3, [r5, #0]
 80152b8:	2b09      	cmp	r3, #9
 80152ba:	dc12      	bgt.n	80152e2 <stroke_path+0xc52>
 80152bc:	488e      	ldr	r0, [pc, #568]	@ (80154f8 <stroke_path+0xe68>)
 80152be:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80152c2:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80152c6:	ed82 ba00 	vstr	s22, [r2]
 80152ca:	edc2 ca01 	vstr	s25, [r2, #4]
 80152ce:	ed82 4a02 	vstr	s8, [r2, #8]
 80152d2:	edc2 4a03 	vstr	s9, [r2, #12]
 80152d6:	edc2 9a04 	vstr	s19, [r2, #16]
 80152da:	ed82 9a05 	vstr	s18, [r2, #20]
 80152de:	3301      	adds	r3, #1
 80152e0:	602b      	str	r3, [r5, #0]
 80152e2:	3601      	adds	r6, #1
 80152e4:	eeb0 9a6c 	vmov.f32	s18, s25
 80152e8:	eef0 9a4b 	vmov.f32	s19, s22
 80152ec:	eeb0 aa45 	vmov.f32	s20, s10
 80152f0:	eef0 aa65 	vmov.f32	s21, s11
 80152f4:	e7a8      	b.n	8015248 <stroke_path+0xbb8>
 80152f6:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80152fa:	eef4 7ae6 	vcmpe.f32	s15, s13
 80152fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015302:	bf4c      	ite	mi
 8015304:	2301      	movmi	r3, #1
 8015306:	2300      	movpl	r3, #0
 8015308:	2b00      	cmp	r3, #0
 801530a:	d1d4      	bne.n	80152b6 <stroke_path+0xc26>
 801530c:	eef0 1a6c 	vmov.f32	s3, s25
 8015310:	eeb0 1a4b 	vmov.f32	s2, s22
 8015314:	eef0 0a6b 	vmov.f32	s1, s23
 8015318:	eeb0 0a4c 	vmov.f32	s0, s24
 801531c:	f7fd fb04 	bl	8012928 <raster_stroked_line_>
 8015320:	eef0 1a49 	vmov.f32	s3, s18
 8015324:	eeb0 1a69 	vmov.f32	s2, s19
 8015328:	eef0 0a6c 	vmov.f32	s1, s25
 801532c:	eeb0 0a4b 	vmov.f32	s0, s22
 8015330:	f7fd fafa 	bl	8012928 <raster_stroked_line_>
 8015334:	682b      	ldr	r3, [r5, #0]
 8015336:	3e01      	subs	r6, #1
 8015338:	b193      	cbz	r3, 8015360 <stroke_path+0xcd0>
 801533a:	3b01      	subs	r3, #1
 801533c:	496e      	ldr	r1, [pc, #440]	@ (80154f8 <stroke_path+0xe68>)
 801533e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8015342:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8015346:	ed92 ca00 	vldr	s24, [r2]
 801534a:	edd2 ba01 	vldr	s23, [r2, #4]
 801534e:	edd2 aa02 	vldr	s21, [r2, #8]
 8015352:	ed92 aa03 	vldr	s20, [r2, #12]
 8015356:	edd2 9a04 	vldr	s19, [r2, #16]
 801535a:	ed92 9a05 	vldr	s18, [r2, #20]
 801535e:	602b      	str	r3, [r5, #0]
 8015360:	2e00      	cmp	r6, #0
 8015362:	f43f aa49 	beq.w	80147f8 <stroke_path+0x168>
 8015366:	7821      	ldrb	r1, [r4, #0]
 8015368:	e76e      	b.n	8015248 <stroke_path+0xbb8>
 801536a:	a808      	add	r0, sp, #32
 801536c:	f7fd ff3c 	bl	80131e8 <fill_arc.isra.7>
 8015370:	4604      	mov	r4, r0
 8015372:	2800      	cmp	r0, #0
 8015374:	f43f aa40 	beq.w	80147f8 <stroke_path+0x168>
 8015378:	f007 fb84 	bl	801ca84 <nema_vg_set_error>
 801537c:	f7ff ba4b 	b.w	8014816 <stroke_path+0x186>
 8015380:	f1ae 0705 	sub.w	r7, lr, #5
 8015384:	2f03      	cmp	r7, #3
 8015386:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 801538a:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 801538e:	d91f      	bls.n	80153d0 <stroke_path+0xd40>
 8015390:	eeb0 7a65 	vmov.f32	s14, s11
 8015394:	eef0 7a45 	vmov.f32	s15, s10
 8015398:	ed8d 7a10 	vstr	s14, [sp, #64]	@ 0x40
 801539c:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 80153a0:	9009      	str	r0, [sp, #36]	@ 0x24
 80153a2:	ed95 7a00 	vldr	s14, [r5]
 80153a6:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 80153aa:	3102      	adds	r1, #2
 80153ac:	9109      	str	r1, [sp, #36]	@ 0x24
 80153ae:	edd5 7a01 	vldr	s15, [r5, #4]
 80153b2:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 80153b6:	f1b8 0f00 	cmp.w	r8, #0
 80153ba:	f43f ad19 	beq.w	8014df0 <stroke_path+0x760>
 80153be:	ee37 7a05 	vadd.f32	s14, s14, s10
 80153c2:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80153c6:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 80153ca:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 80153ce:	e50f      	b.n	8014df0 <stroke_path+0x760>
 80153d0:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 80153d4:	ee75 7a05 	vadd.f32	s15, s10, s10
 80153d8:	ee35 6aa5 	vadd.f32	s12, s11, s11
 80153dc:	eddd 6a16 	vldr	s13, [sp, #88]	@ 0x58
 80153e0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80153e4:	ee36 7a66 	vsub.f32	s14, s12, s13
 80153e8:	e7d6      	b.n	8015398 <stroke_path+0xd08>
 80153ea:	2507      	movs	r5, #7
 80153ec:	e488      	b.n	8014d00 <stroke_path+0x670>
 80153ee:	ee18 aa10 	vmov	sl, s16
 80153f2:	eef0 8a48 	vmov.f32	s17, s16
 80153f6:	e439      	b.n	8014c6c <stroke_path+0x5dc>
 80153f8:	4a40      	ldr	r2, [pc, #256]	@ (80154fc <stroke_path+0xe6c>)
 80153fa:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 80153fe:	6812      	ldr	r2, [r2, #0]
 8015400:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015404:	2a00      	cmp	r2, #0
 8015406:	f000 81ac 	beq.w	8015762 <stroke_path+0x10d2>
 801540a:	eef0 1a49 	vmov.f32	s3, s18
 801540e:	eeb0 1a68 	vmov.f32	s2, s17
 8015412:	eef0 0a4a 	vmov.f32	s1, s20
 8015416:	eeb0 0a69 	vmov.f32	s0, s19
 801541a:	f7fd fa85 	bl	8012928 <raster_stroked_line_>
 801541e:	e6db      	b.n	80151d8 <stroke_path+0xb48>
 8015420:	9009      	str	r0, [sp, #36]	@ 0x24
 8015422:	682a      	ldr	r2, [r5, #0]
 8015424:	1c8b      	adds	r3, r1, #2
 8015426:	9309      	str	r3, [sp, #36]	@ 0x24
 8015428:	920f      	str	r2, [sp, #60]	@ 0x3c
 801542a:	686b      	ldr	r3, [r5, #4]
 801542c:	3103      	adds	r1, #3
 801542e:	9310      	str	r3, [sp, #64]	@ 0x40
 8015430:	9109      	str	r1, [sp, #36]	@ 0x24
 8015432:	4b33      	ldr	r3, [pc, #204]	@ (8015500 <stroke_path+0xe70>)
 8015434:	68aa      	ldr	r2, [r5, #8]
 8015436:	edd3 0a00 	vldr	s1, [r3]
 801543a:	ed93 0a03 	vldr	s0, [r3, #12]
 801543e:	9211      	str	r2, [sp, #68]	@ 0x44
 8015440:	f01b fedc 	bl	80311fc <atan2f>
 8015444:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8015448:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 801544c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8015450:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015452:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8015456:	f8dd e04c 	ldr.w	lr, [sp, #76]	@ 0x4c
 801545a:	008d      	lsls	r5, r1, #2
 801545c:	1c48      	adds	r0, r1, #1
 801545e:	4602      	mov	r2, r0
 8015460:	9502      	str	r5, [sp, #8]
 8015462:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8015466:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801546a:	eb03 0c05 	add.w	ip, r3, r5
 801546e:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 8015472:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8015476:	f7ff b96a 	b.w	801474e <stroke_path+0xbe>
 801547a:	6852      	ldr	r2, [r2, #4]
 801547c:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015480:	4313      	orrs	r3, r2
 8015482:	e408      	b.n	8014c96 <stroke_path+0x606>
 8015484:	684b      	ldr	r3, [r1, #4]
 8015486:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801548a:	431c      	orrs	r4, r3
 801548c:	e5ca      	b.n	8015024 <stroke_path+0x994>
 801548e:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015492:	2d00      	cmp	r5, #0
 8015494:	bf18      	it	ne
 8015496:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801549a:	4b1a      	ldr	r3, [pc, #104]	@ (8015504 <stroke_path+0xe74>)
 801549c:	4015      	ands	r5, r2
 801549e:	781b      	ldrb	r3, [r3, #0]
 80154a0:	2b01      	cmp	r3, #1
 80154a2:	d104      	bne.n	80154ae <stroke_path+0xe1e>
 80154a4:	4b17      	ldr	r3, [pc, #92]	@ (8015504 <stroke_path+0xe74>)
 80154a6:	685b      	ldr	r3, [r3, #4]
 80154a8:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80154ac:	431d      	orrs	r5, r3
 80154ae:	2005      	movs	r0, #5
 80154b0:	f008 fc40 	bl	801dd34 <nema_cl_get_space>
 80154b4:	2800      	cmp	r0, #0
 80154b6:	f43f ad19 	beq.w	8014eec <stroke_path+0x85c>
 80154ba:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80154be:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80154c2:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80154c6:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80154ca:	f045 050a 	orr.w	r5, r5, #10
 80154ce:	6245      	str	r5, [r0, #36]	@ 0x24
 80154d0:	4d0d      	ldr	r5, [pc, #52]	@ (8015508 <stroke_path+0xe78>)
 80154d2:	edc0 9a01 	vstr	s19, [r0, #4]
 80154d6:	ed80 aa03 	vstr	s20, [r0, #12]
 80154da:	edc0 8a05 	vstr	s17, [r0, #20]
 80154de:	ed80 9a07 	vstr	s18, [r0, #28]
 80154e2:	6205      	str	r5, [r0, #32]
 80154e4:	f8c0 c000 	str.w	ip, [r0]
 80154e8:	6081      	str	r1, [r0, #8]
 80154ea:	6102      	str	r2, [r0, #16]
 80154ec:	6183      	str	r3, [r0, #24]
 80154ee:	e4fd      	b.n	8014eec <stroke_path+0x85c>
 80154f0:	20082fc0 	.word	0x20082fc0
 80154f4:	20083148 	.word	0x20083148
 80154f8:	20083058 	.word	0x20083058
 80154fc:	20082fb4 	.word	0x20082fb4
 8015500:	20083030 	.word	0x20083030
 8015504:	20000064 	.word	0x20000064
 8015508:	ff000100 	.word	0xff000100
 801550c:	4626      	mov	r6, r4
 801550e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8015512:	eddd da0b 	vldr	s27, [sp, #44]	@ 0x2c
 8015516:	ed9d da0c 	vldr	s26, [sp, #48]	@ 0x30
 801551a:	eddd ca0f 	vldr	s25, [sp, #60]	@ 0x3c
 801551e:	ed9d ca10 	vldr	s24, [sp, #64]	@ 0x40
 8015522:	eddd ba11 	vldr	s23, [sp, #68]	@ 0x44
 8015526:	ed9d ba12 	vldr	s22, [sp, #72]	@ 0x48
 801552a:	eddd aa0d 	vldr	s21, [sp, #52]	@ 0x34
 801552e:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8015532:	4dc5      	ldr	r5, [pc, #788]	@ (8015848 <stroke_path+0x11b8>)
 8015534:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8015538:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801553c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 8015540:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8015544:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8015548:	ee25 5a28 	vmul.f32	s10, s10, s17
 801554c:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8015550:	ee37 6a85 	vadd.f32	s12, s15, s10
 8015554:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 8015558:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 801555c:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 8015560:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8015564:	ee24 4a28 	vmul.f32	s8, s8, s17
 8015568:	ee65 5aa8 	vmul.f32	s11, s11, s17
 801556c:	ee34 3a27 	vadd.f32	s6, s8, s15
 8015570:	ee63 3aa8 	vmul.f32	s7, s7, s17
 8015574:	ee26 6a28 	vmul.f32	s12, s12, s17
 8015578:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801557c:	ee33 9a86 	vadd.f32	s18, s7, s12
 8015580:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8015584:	ee23 3a28 	vmul.f32	s6, s6, s17
 8015588:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801558c:	ee29 9a28 	vmul.f32	s18, s18, s17
 8015590:	ee27 7a28 	vmul.f32	s14, s14, s17
 8015594:	ee73 9a27 	vadd.f32	s19, s6, s15
 8015598:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801559c:	ee37 7a49 	vsub.f32	s14, s14, s18
 80155a0:	ee69 9aa8 	vmul.f32	s19, s19, s17
 80155a4:	ee66 6aa8 	vmul.f32	s13, s13, s17
 80155a8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80155ac:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80155b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155b4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80155b8:	bf48      	it	mi
 80155ba:	eeb1 7a47 	vnegmi.f32	s14, s14
 80155be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155c2:	bf48      	it	mi
 80155c4:	eef1 6a66 	vnegmi.f32	s13, s13
 80155c8:	b94e      	cbnz	r6, 80155de <stroke_path+0xf4e>
 80155ca:	eeb4 7ae8 	vcmpe.f32	s14, s17
 80155ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155d2:	d504      	bpl.n	80155de <stroke_path+0xf4e>
 80155d4:	eef4 6ae8 	vcmpe.f32	s13, s17
 80155d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155dc:	d424      	bmi.n	8015628 <stroke_path+0xf98>
 80155de:	682a      	ldr	r2, [r5, #0]
 80155e0:	2a09      	cmp	r2, #9
 80155e2:	dc21      	bgt.n	8015628 <stroke_path+0xf98>
 80155e4:	4999      	ldr	r1, [pc, #612]	@ (801584c <stroke_path+0x11bc>)
 80155e6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80155ea:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80155ee:	3201      	adds	r2, #1
 80155f0:	edc3 aa04 	vstr	s21, [r3, #16]
 80155f4:	ed83 aa05 	vstr	s20, [r3, #20]
 80155f8:	3401      	adds	r4, #1
 80155fa:	eeb0 ba43 	vmov.f32	s22, s6
 80155fe:	eef0 ba63 	vmov.f32	s23, s7
 8015602:	eeb0 ca44 	vmov.f32	s24, s8
 8015606:	eef0 ca64 	vmov.f32	s25, s9
 801560a:	ed83 6a00 	vstr	s12, [r3]
 801560e:	edc3 7a01 	vstr	s15, [r3, #4]
 8015612:	ed83 5a02 	vstr	s10, [r3, #8]
 8015616:	edc3 5a03 	vstr	s11, [r3, #12]
 801561a:	602a      	str	r2, [r5, #0]
 801561c:	eeb0 aa69 	vmov.f32	s20, s19
 8015620:	eef0 aa49 	vmov.f32	s21, s18
 8015624:	2600      	movs	r6, #0
 8015626:	e785      	b.n	8015534 <stroke_path+0xea4>
 8015628:	eef0 1a69 	vmov.f32	s3, s19
 801562c:	eeb0 1a49 	vmov.f32	s2, s18
 8015630:	eef0 0a4d 	vmov.f32	s1, s26
 8015634:	eeb0 0a6d 	vmov.f32	s0, s27
 8015638:	f7fd f976 	bl	8012928 <raster_stroked_line_>
 801563c:	eef0 1a4a 	vmov.f32	s3, s20
 8015640:	eeb0 1a6a 	vmov.f32	s2, s21
 8015644:	eef0 0a69 	vmov.f32	s1, s19
 8015648:	eeb0 0a49 	vmov.f32	s0, s18
 801564c:	f7fd f96c 	bl	8012928 <raster_stroked_line_>
 8015650:	682a      	ldr	r2, [r5, #0]
 8015652:	3c01      	subs	r4, #1
 8015654:	b1b2      	cbz	r2, 8015684 <stroke_path+0xff4>
 8015656:	3a01      	subs	r2, #1
 8015658:	497c      	ldr	r1, [pc, #496]	@ (801584c <stroke_path+0x11bc>)
 801565a:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801565e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8015662:	eeb0 da4a 	vmov.f32	s26, s20
 8015666:	eef0 da6a 	vmov.f32	s27, s21
 801566a:	edd3 ca00 	vldr	s25, [r3]
 801566e:	ed93 ca01 	vldr	s24, [r3, #4]
 8015672:	edd3 ba02 	vldr	s23, [r3, #8]
 8015676:	ed93 ba03 	vldr	s22, [r3, #12]
 801567a:	ed93 aa05 	vldr	s20, [r3, #20]
 801567e:	edd3 aa04 	vldr	s21, [r3, #16]
 8015682:	602a      	str	r2, [r5, #0]
 8015684:	2c00      	cmp	r4, #0
 8015686:	f47f af55 	bne.w	8015534 <stroke_path+0xea4>
 801568a:	f7ff b8b5 	b.w	80147f8 <stroke_path+0x168>
 801568e:	f1ba 0f0b 	cmp.w	sl, #11
 8015692:	f47f abb4 	bne.w	8014dfe <stroke_path+0x76e>
 8015696:	9009      	str	r0, [sp, #36]	@ 0x24
 8015698:	eddc 7a00 	vldr	s15, [ip]
 801569c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80156a0:	ee17 1a90 	vmov	r1, s15
 80156a4:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80156a8:	1049      	asrs	r1, r1, #1
 80156aa:	2900      	cmp	r1, #0
 80156ac:	9102      	str	r1, [sp, #8]
 80156ae:	f340 8132 	ble.w	8015916 <stroke_path+0x1286>
 80156b2:	2100      	movs	r1, #0
 80156b4:	4d66      	ldr	r5, [pc, #408]	@ (8015850 <stroke_path+0x11c0>)
 80156b6:	f8cd a014 	str.w	sl, [sp, #20]
 80156ba:	f8cd 800c 	str.w	r8, [sp, #12]
 80156be:	46aa      	mov	sl, r5
 80156c0:	46c8      	mov	r8, r9
 80156c2:	46a1      	mov	r9, r4
 80156c4:	460c      	mov	r4, r1
 80156c6:	e038      	b.n	801573a <stroke_path+0x10aa>
 80156c8:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 80156cc:	ee78 8a81 	vadd.f32	s17, s17, s2
 80156d0:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 80156d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80156d6:	ed91 9a00 	vldr	s18, [r1]
 80156da:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 80156de:	ee39 9a21 	vadd.f32	s18, s18, s3
 80156e2:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 80156e6:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 80156ea:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 80156ee:	f8da 3000 	ldr.w	r3, [sl]
 80156f2:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 80156f6:	7f1a      	ldrb	r2, [r3, #28]
 80156f8:	2a00      	cmp	r2, #0
 80156fa:	d161      	bne.n	80157c0 <stroke_path+0x1130>
 80156fc:	4a55      	ldr	r2, [pc, #340]	@ (8015854 <stroke_path+0x11c4>)
 80156fe:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8015702:	6812      	ldr	r2, [r2, #0]
 8015704:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015708:	2a00      	cmp	r2, #0
 801570a:	f000 80d3 	beq.w	80158b4 <stroke_path+0x1224>
 801570e:	eef0 1a49 	vmov.f32	s3, s18
 8015712:	eeb0 1a68 	vmov.f32	s2, s17
 8015716:	eef0 0a4a 	vmov.f32	s1, s20
 801571a:	eeb0 0a69 	vmov.f32	s0, s19
 801571e:	f7fd f903 	bl	8012928 <raster_stroked_line_>
 8015722:	e897 0003 	ldmia.w	r7, {r0, r1}
 8015726:	9b02      	ldr	r3, [sp, #8]
 8015728:	3401      	adds	r4, #1
 801572a:	429c      	cmp	r4, r3
 801572c:	e886 0003 	stmia.w	r6, {r0, r1}
 8015730:	f000 809a 	beq.w	8015868 <stroke_path+0x11d8>
 8015734:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8015738:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801573a:	0090      	lsls	r0, r2, #2
 801573c:	1d01      	adds	r1, r0, #4
 801573e:	4419      	add	r1, r3
 8015740:	9d03      	ldr	r5, [sp, #12]
 8015742:	4403      	add	r3, r0
 8015744:	1c50      	adds	r0, r2, #1
 8015746:	9009      	str	r0, [sp, #36]	@ 0x24
 8015748:	3202      	adds	r2, #2
 801574a:	edd3 8a00 	vldr	s17, [r3]
 801574e:	2d00      	cmp	r5, #0
 8015750:	d1ba      	bne.n	80156c8 <stroke_path+0x1038>
 8015752:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015756:	9209      	str	r2, [sp, #36]	@ 0x24
 8015758:	ed91 9a00 	vldr	s18, [r1]
 801575c:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8015760:	e7c1      	b.n	80156e6 <stroke_path+0x1056>
 8015762:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8015764:	493c      	ldr	r1, [pc, #240]	@ (8015858 <stroke_path+0x11c8>)
 8015766:	2a00      	cmp	r2, #0
 8015768:	bf18      	it	ne
 801576a:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 801576e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8015770:	780b      	ldrb	r3, [r1, #0]
 8015772:	4015      	ands	r5, r2
 8015774:	2b01      	cmp	r3, #1
 8015776:	d103      	bne.n	8015780 <stroke_path+0x10f0>
 8015778:	684b      	ldr	r3, [r1, #4]
 801577a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801577e:	431d      	orrs	r5, r3
 8015780:	2005      	movs	r0, #5
 8015782:	f008 fad7 	bl	801dd34 <nema_cl_get_space>
 8015786:	2800      	cmp	r0, #0
 8015788:	f43f ad26 	beq.w	80151d8 <stroke_path+0xb48>
 801578c:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8015790:	f44f 7649 	mov.w	r6, #804	@ 0x324
 8015794:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8015798:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801579c:	4b2f      	ldr	r3, [pc, #188]	@ (801585c <stroke_path+0x11cc>)
 801579e:	f045 050a 	orr.w	r5, r5, #10
 80157a2:	6245      	str	r5, [r0, #36]	@ 0x24
 80157a4:	edc0 9a01 	vstr	s19, [r0, #4]
 80157a8:	ed80 aa03 	vstr	s20, [r0, #12]
 80157ac:	edc0 8a05 	vstr	s17, [r0, #20]
 80157b0:	ed80 9a07 	vstr	s18, [r0, #28]
 80157b4:	6007      	str	r7, [r0, #0]
 80157b6:	6086      	str	r6, [r0, #8]
 80157b8:	6101      	str	r1, [r0, #16]
 80157ba:	6182      	str	r2, [r0, #24]
 80157bc:	6203      	str	r3, [r0, #32]
 80157be:	e50b      	b.n	80151d8 <stroke_path+0xb48>
 80157c0:	4a27      	ldr	r2, [pc, #156]	@ (8015860 <stroke_path+0x11d0>)
 80157c2:	4b28      	ldr	r3, [pc, #160]	@ (8015864 <stroke_path+0x11d4>)
 80157c4:	6812      	ldr	r2, [r2, #0]
 80157c6:	2007      	movs	r0, #7
 80157c8:	9204      	str	r2, [sp, #16]
 80157ca:	681d      	ldr	r5, [r3, #0]
 80157cc:	f008 fab2 	bl	801dd34 <nema_cl_get_space>
 80157d0:	2800      	cmp	r0, #0
 80157d2:	d0a6      	beq.n	8015722 <stroke_path+0x1092>
 80157d4:	4a20      	ldr	r2, [pc, #128]	@ (8015858 <stroke_path+0x11c8>)
 80157d6:	f8da 3000 	ldr.w	r3, [sl]
 80157da:	7812      	ldrb	r2, [r2, #0]
 80157dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80157de:	2a01      	cmp	r2, #1
 80157e0:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80157e4:	d104      	bne.n	80157f0 <stroke_path+0x1160>
 80157e6:	4a1c      	ldr	r2, [pc, #112]	@ (8015858 <stroke_path+0x11c8>)
 80157e8:	6852      	ldr	r2, [r2, #4]
 80157ea:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80157ee:	4313      	orrs	r3, r2
 80157f0:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80157f4:	6002      	str	r2, [r0, #0]
 80157f6:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 80157fa:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80157fe:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8015802:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015806:	6082      	str	r2, [r0, #8]
 8015808:	edc0 7a01 	vstr	s15, [r0, #4]
 801580c:	f8c0 e018 	str.w	lr, [r0, #24]
 8015810:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 8015814:	f8c0 c010 	str.w	ip, [r0, #16]
 8015818:	f8c0 e00c 	str.w	lr, [r0, #12]
 801581c:	f043 0304 	orr.w	r3, r3, #4
 8015820:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 8015824:	6343      	str	r3, [r0, #52]	@ 0x34
 8015826:	9b04      	ldr	r3, [sp, #16]
 8015828:	f8c0 c014 	str.w	ip, [r0, #20]
 801582c:	6243      	str	r3, [r0, #36]	@ 0x24
 801582e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015830:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015834:	61c3      	str	r3, [r0, #28]
 8015836:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 801583a:	4a08      	ldr	r2, [pc, #32]	@ (801585c <stroke_path+0x11cc>)
 801583c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801583e:	6302      	str	r2, [r0, #48]	@ 0x30
 8015840:	6201      	str	r1, [r0, #32]
 8015842:	6283      	str	r3, [r0, #40]	@ 0x28
 8015844:	e76d      	b.n	8015722 <stroke_path+0x1092>
 8015846:	bf00      	nop
 8015848:	20083148 	.word	0x20083148
 801584c:	20083058 	.word	0x20083058
 8015850:	20082fac 	.word	0x20082fac
 8015854:	20082fb4 	.word	0x20082fb4
 8015858:	20000064 	.word	0x20000064
 801585c:	ff000100 	.word	0xff000100
 8015860:	20082fb8 	.word	0x20082fb8
 8015864:	20082fbc 	.word	0x20082fbc
 8015868:	464c      	mov	r4, r9
 801586a:	46c1      	mov	r9, r8
 801586c:	4655      	mov	r5, sl
 801586e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015872:	682b      	ldr	r3, [r5, #0]
 8015874:	7f1b      	ldrb	r3, [r3, #28]
 8015876:	b1b3      	cbz	r3, 80158a6 <stroke_path+0x1216>
 8015878:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801587c:	eddd 7a17 	vldr	s15, [sp, #92]	@ 0x5c
 8015880:	ee77 7a67 	vsub.f32	s15, s14, s15
 8015884:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801588c:	d10b      	bne.n	80158a6 <stroke_path+0x1216>
 801588e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8015892:	eddd 7a18 	vldr	s15, [sp, #96]	@ 0x60
 8015896:	ee77 7a67 	vsub.f32	s15, s14, s15
 801589a:	eef5 7a40 	vcmp.f32	s15, #0.0
 801589e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80158a2:	f43f ac99 	beq.w	80151d8 <stroke_path+0xb48>
 80158a6:	2301      	movs	r3, #1
 80158a8:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80158ac:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 80158b0:	f7fe bf86 	b.w	80147c0 <stroke_path+0x130>
 80158b4:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80158b8:	2d00      	cmp	r5, #0
 80158ba:	bf18      	it	ne
 80158bc:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80158c0:	4b16      	ldr	r3, [pc, #88]	@ (801591c <stroke_path+0x128c>)
 80158c2:	4015      	ands	r5, r2
 80158c4:	781b      	ldrb	r3, [r3, #0]
 80158c6:	2b01      	cmp	r3, #1
 80158c8:	d104      	bne.n	80158d4 <stroke_path+0x1244>
 80158ca:	4b14      	ldr	r3, [pc, #80]	@ (801591c <stroke_path+0x128c>)
 80158cc:	685b      	ldr	r3, [r3, #4]
 80158ce:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80158d2:	431d      	orrs	r5, r3
 80158d4:	2005      	movs	r0, #5
 80158d6:	f008 fa2d 	bl	801dd34 <nema_cl_get_space>
 80158da:	2800      	cmp	r0, #0
 80158dc:	f43f af21 	beq.w	8015722 <stroke_path+0x1092>
 80158e0:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80158e4:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80158e8:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80158ec:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80158f0:	f045 050a 	orr.w	r5, r5, #10
 80158f4:	6245      	str	r5, [r0, #36]	@ 0x24
 80158f6:	4d0a      	ldr	r5, [pc, #40]	@ (8015920 <stroke_path+0x1290>)
 80158f8:	edc0 9a01 	vstr	s19, [r0, #4]
 80158fc:	ed80 aa03 	vstr	s20, [r0, #12]
 8015900:	edc0 8a05 	vstr	s17, [r0, #20]
 8015904:	ed80 9a07 	vstr	s18, [r0, #28]
 8015908:	6205      	str	r5, [r0, #32]
 801590a:	f8c0 c000 	str.w	ip, [r0]
 801590e:	6081      	str	r1, [r0, #8]
 8015910:	6102      	str	r2, [r0, #16]
 8015912:	6183      	str	r3, [r0, #24]
 8015914:	e705      	b.n	8015722 <stroke_path+0x1092>
 8015916:	4d03      	ldr	r5, [pc, #12]	@ (8015924 <stroke_path+0x1294>)
 8015918:	e7ab      	b.n	8015872 <stroke_path+0x11e2>
 801591a:	bf00      	nop
 801591c:	20000064 	.word	0x20000064
 8015920:	ff000100 	.word	0xff000100
 8015924:	20082fac 	.word	0x20082fac

08015928 <fill_path_even_odd>:
 8015928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801592c:	ed2d 8b06 	vpush	{d8-d10}
 8015930:	edd0 6a17 	vldr	s13, [r0, #92]	@ 0x5c
 8015934:	edd0 7a15 	vldr	s15, [r0, #84]	@ 0x54
 8015938:	ed90 7a14 	vldr	s14, [r0, #80]	@ 0x50
 801593c:	ed90 6a16 	vldr	s12, [r0, #88]	@ 0x58
 8015940:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015944:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8015948:	ee37 7a06 	vadd.f32	s14, s14, s12
 801594c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015950:	ee27 7a26 	vmul.f32	s14, s14, s13
 8015954:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015958:	ee17 4a90 	vmov	r4, s15
 801595c:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8015960:	ee17 5a90 	vmov	r5, s15
 8015964:	4b93      	ldr	r3, [pc, #588]	@ (8015bb4 <fill_path_even_odd+0x28c>)
 8015966:	0424      	lsls	r4, r4, #16
 8015968:	601c      	str	r4, [r3, #0]
 801596a:	4b93      	ldr	r3, [pc, #588]	@ (8015bb8 <fill_path_even_odd+0x290>)
 801596c:	b099      	sub	sp, #100	@ 0x64
 801596e:	4682      	mov	sl, r0
 8015970:	042d      	lsls	r5, r5, #16
 8015972:	2002      	movs	r0, #2
 8015974:	601d      	str	r5, [r3, #0]
 8015976:	f008 f9dd 	bl	801dd34 <nema_cl_get_space>
 801597a:	b138      	cbz	r0, 801598c <fill_path_even_odd+0x64>
 801597c:	f44f 7286 	mov.w	r2, #268	@ 0x10c
 8015980:	f44f 7394 	mov.w	r3, #296	@ 0x128
 8015984:	6045      	str	r5, [r0, #4]
 8015986:	60c4      	str	r4, [r0, #12]
 8015988:	6002      	str	r2, [r0, #0]
 801598a:	6083      	str	r3, [r0, #8]
 801598c:	2246      	movs	r2, #70	@ 0x46
 801598e:	2100      	movs	r1, #0
 8015990:	f10d 001a 	add.w	r0, sp, #26
 8015994:	f01c ffbf 	bl	8032916 <memset>
 8015998:	f240 1201 	movw	r2, #257	@ 0x101
 801599c:	2400      	movs	r4, #0
 801599e:	2301      	movs	r3, #1
 80159a0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80159a4:	f8da 2000 	ldr.w	r2, [sl]
 80159a8:	f88d 301a 	strb.w	r3, [sp, #26]
 80159ac:	42a2      	cmp	r2, r4
 80159ae:	f8df b218 	ldr.w	fp, [pc, #536]	@ 8015bc8 <fill_path_even_odd+0x2a0>
 80159b2:	ed9f 9a82 	vldr	s18, [pc, #520]	@ 8015bbc <fill_path_even_odd+0x294>
 80159b6:	f240 80f1 	bls.w	8015b9c <fill_path_even_odd+0x274>
 80159ba:	f8da 3008 	ldr.w	r3, [sl, #8]
 80159be:	f10d 082c 	add.w	r8, sp, #44	@ 0x2c
 80159c2:	5d1d      	ldrb	r5, [r3, r4]
 80159c4:	af09      	add	r7, sp, #36	@ 0x24
 80159c6:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 80159ca:	f005 0310 	and.w	r3, r5, #16
 80159ce:	2e01      	cmp	r6, #1
 80159d0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80159d4:	f104 0901 	add.w	r9, r4, #1
 80159d8:	9301      	str	r3, [sp, #4]
 80159da:	e887 0003 	stmia.w	r7, {r0, r1}
 80159de:	f000 815f 	beq.w	8015ca0 <fill_path_even_odd+0x378>
 80159e2:	0669      	lsls	r1, r5, #25
 80159e4:	f000 80f2 	beq.w	8015bcc <fill_path_even_odd+0x2a4>
 80159e8:	9907      	ldr	r1, [sp, #28]
 80159ea:	f89d c05c 	ldrb.w	ip, [sp, #92]	@ 0x5c
 80159ee:	b911      	cbnz	r1, 80159f6 <fill_path_even_odd+0xce>
 80159f0:	2301      	movs	r3, #1
 80159f2:	f88d 3018 	strb.w	r3, [sp, #24]
 80159f6:	2200      	movs	r2, #0
 80159f8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80159fc:	0088      	lsls	r0, r1, #2
 80159fe:	181c      	adds	r4, r3, r0
 8015a00:	9003      	str	r0, [sp, #12]
 8015a02:	2e06      	cmp	r6, #6
 8015a04:	f101 0001 	add.w	r0, r1, #1
 8015a08:	46a6      	mov	lr, r4
 8015a0a:	f88d 201a 	strb.w	r2, [sp, #26]
 8015a0e:	9004      	str	r0, [sp, #16]
 8015a10:	f000 8232 	beq.w	8015e78 <fill_path_even_odd+0x550>
 8015a14:	2e05      	cmp	r6, #5
 8015a16:	f000 837d 	beq.w	8016114 <fill_path_even_odd+0x7ec>
 8015a1a:	2e07      	cmp	r6, #7
 8015a1c:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8015a20:	f000 841e 	beq.w	8016260 <fill_path_even_odd+0x938>
 8015a24:	2e08      	cmp	r6, #8
 8015a26:	f000 828c 	beq.w	8015f42 <fill_path_even_odd+0x61a>
 8015a2a:	f005 020f 	and.w	r2, r5, #15
 8015a2e:	2a09      	cmp	r2, #9
 8015a30:	9202      	str	r2, [sp, #8]
 8015a32:	f000 84cf 	beq.w	80163d4 <fill_path_even_odd+0xaac>
 8015a36:	2e04      	cmp	r6, #4
 8015a38:	f040 82ac 	bne.w	8015f94 <fill_path_even_odd+0x66c>
 8015a3c:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015a40:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015a44:	9b01      	ldr	r3, [sp, #4]
 8015a46:	9007      	str	r0, [sp, #28]
 8015a48:	edde 7a00 	vldr	s15, [lr]
 8015a4c:	2b00      	cmp	r3, #0
 8015a4e:	f000 834c 	beq.w	80160ea <fill_path_even_odd+0x7c2>
 8015a52:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015a56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015a5a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015a5e:	f8db 3000 	ldr.w	r3, [fp]
 8015a62:	7f1b      	ldrb	r3, [r3, #28]
 8015a64:	2b00      	cmp	r3, #0
 8015a66:	f000 8249 	beq.w	8015efc <fill_path_even_odd+0x5d4>
 8015a6a:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015a6e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8015a72:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a7a:	d109      	bne.n	8015a90 <fill_path_even_odd+0x168>
 8015a7c:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015a80:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8015a84:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a8c:	f000 840e 	beq.w	80162ac <fill_path_even_odd+0x984>
 8015a90:	2301      	movs	r3, #1
 8015a92:	f88d 3019 	strb.w	r3, [sp, #25]
 8015a96:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015a9a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015a9e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015aa2:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015aa6:	2b00      	cmp	r3, #0
 8015aa8:	f040 80f6 	bne.w	8015c98 <fill_path_even_odd+0x370>
 8015aac:	2e06      	cmp	r6, #6
 8015aae:	f040 80a7 	bne.w	8015c00 <fill_path_even_odd+0x2d8>
 8015ab2:	f8db 2000 	ldr.w	r2, [fp]
 8015ab6:	4b42      	ldr	r3, [pc, #264]	@ (8015bc0 <fill_path_even_odd+0x298>)
 8015ab8:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015aba:	4a3f      	ldr	r2, [pc, #252]	@ (8015bb8 <fill_path_even_odd+0x290>)
 8015abc:	781b      	ldrb	r3, [r3, #0]
 8015abe:	2c00      	cmp	r4, #0
 8015ac0:	6816      	ldr	r6, [r2, #0]
 8015ac2:	4a3c      	ldr	r2, [pc, #240]	@ (8015bb4 <fill_path_even_odd+0x28c>)
 8015ac4:	bf18      	it	ne
 8015ac6:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015aca:	2b01      	cmp	r3, #1
 8015acc:	6815      	ldr	r5, [r2, #0]
 8015ace:	d104      	bne.n	8015ada <fill_path_even_odd+0x1b2>
 8015ad0:	4b3b      	ldr	r3, [pc, #236]	@ (8015bc0 <fill_path_even_odd+0x298>)
 8015ad2:	685b      	ldr	r3, [r3, #4]
 8015ad4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015ad8:	431c      	orrs	r4, r3
 8015ada:	2010      	movs	r0, #16
 8015adc:	f008 f92a 	bl	801dd34 <nema_cl_get_space>
 8015ae0:	2800      	cmp	r0, #0
 8015ae2:	f000 80d9 	beq.w	8015c98 <fill_path_even_odd+0x370>
 8015ae6:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015aea:	6001      	str	r1, [r0, #0]
 8015aec:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8015af0:	f44f 784b 	mov.w	r8, #812	@ 0x32c
 8015af4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015af8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015afc:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015b00:	f8c0 8008 	str.w	r8, [r0, #8]
 8015b04:	edc0 7a01 	vstr	s15, [r0, #4]
 8015b08:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8015b0c:	f8c0 e010 	str.w	lr, [r0, #16]
 8015b10:	f8c0 800c 	str.w	r8, [r0, #12]
 8015b14:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8015b18:	f8c0 c018 	str.w	ip, [r0, #24]
 8015b1c:	f8c0 e014 	str.w	lr, [r0, #20]
 8015b20:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015b24:	6202      	str	r2, [r0, #32]
 8015b26:	f8c0 e01c 	str.w	lr, [r0, #28]
 8015b2a:	6482      	str	r2, [r0, #72]	@ 0x48
 8015b2c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015b2e:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015b32:	64c2      	str	r2, [r0, #76]	@ 0x4c
 8015b34:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015b36:	f44f 77a0 	mov.w	r7, #320	@ 0x140
 8015b3a:	6542      	str	r2, [r0, #84]	@ 0x54
 8015b3c:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015b40:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8015b44:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8015b48:	6346      	str	r6, [r0, #52]	@ 0x34
 8015b4a:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
 8015b4e:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8015b50:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015b52:	6283      	str	r3, [r0, #40]	@ 0x28
 8015b54:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015b56:	6503      	str	r3, [r0, #80]	@ 0x50
 8015b58:	4b1a      	ldr	r3, [pc, #104]	@ (8015bc4 <fill_path_even_odd+0x29c>)
 8015b5a:	6382      	str	r2, [r0, #56]	@ 0x38
 8015b5c:	f044 0204 	orr.w	r2, r4, #4
 8015b60:	6307      	str	r7, [r0, #48]	@ 0x30
 8015b62:	6581      	str	r1, [r0, #88]	@ 0x58
 8015b64:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015b68:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015b6a:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8015b6e:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015b70:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8015b74:	f44f 7651 	mov.w	r6, #836	@ 0x344
 8015b78:	f044 0407 	orr.w	r4, r4, #7
 8015b7c:	e9c0 341e 	strd	r3, r4, [r0, #120]	@ 0x78
 8015b80:	464c      	mov	r4, r9
 8015b82:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8015b84:	f8c0 c06c 	str.w	ip, [r0, #108]	@ 0x6c
 8015b88:	6745      	str	r5, [r0, #116]	@ 0x74
 8015b8a:	6647      	str	r7, [r0, #100]	@ 0x64
 8015b8c:	6606      	str	r6, [r0, #96]	@ 0x60
 8015b8e:	6681      	str	r1, [r0, #104]	@ 0x68
 8015b90:	6702      	str	r2, [r0, #112]	@ 0x70
 8015b92:	f8da 2000 	ldr.w	r2, [sl]
 8015b96:	42a2      	cmp	r2, r4
 8015b98:	f63f af0f 	bhi.w	80159ba <fill_path_even_odd+0x92>
 8015b9c:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8015ba0:	2b01      	cmp	r3, #1
 8015ba2:	f000 8395 	beq.w	80162d0 <fill_path_even_odd+0x9a8>
 8015ba6:	2500      	movs	r5, #0
 8015ba8:	4628      	mov	r0, r5
 8015baa:	b019      	add	sp, #100	@ 0x64
 8015bac:	ecbd 8b06 	vpop	{d8-d10}
 8015bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bb4:	20082fbc 	.word	0x20082fbc
 8015bb8:	20082fb8 	.word	0x20082fb8
 8015bbc:	00000000 	.word	0x00000000
 8015bc0:	20000064 	.word	0x20000064
 8015bc4:	ff000100 	.word	0xff000100
 8015bc8:	20082fac 	.word	0x20082fac
 8015bcc:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015bd0:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015bd4:	2b01      	cmp	r3, #1
 8015bd6:	bf04      	itt	eq
 8015bd8:	ee19 2a10 	vmoveq	r2, s18
 8015bdc:	ee19 1a10 	vmoveq	r1, s18
 8015be0:	f04f 0300 	mov.w	r3, #0
 8015be4:	bf1c      	itt	ne
 8015be6:	9915      	ldrne	r1, [sp, #84]	@ 0x54
 8015be8:	9a16      	ldrne	r2, [sp, #88]	@ 0x58
 8015bea:	2e06      	cmp	r6, #6
 8015bec:	920c      	str	r2, [sp, #48]	@ 0x30
 8015bee:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015bf0:	9111      	str	r1, [sp, #68]	@ 0x44
 8015bf2:	9212      	str	r2, [sp, #72]	@ 0x48
 8015bf4:	f88d 301a 	strb.w	r3, [sp, #26]
 8015bf8:	f88d 3019 	strb.w	r3, [sp, #25]
 8015bfc:	f43f af59 	beq.w	8015ab2 <fill_path_even_odd+0x18a>
 8015c00:	2e08      	cmp	r6, #8
 8015c02:	f43f af56 	beq.w	8015ab2 <fill_path_even_odd+0x18a>
 8015c06:	2e02      	cmp	r6, #2
 8015c08:	d00e      	beq.n	8015c28 <fill_path_even_odd+0x300>
 8015c0a:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8015c0e:	2b05      	cmp	r3, #5
 8015c10:	f000 80d0 	beq.w	8015db4 <fill_path_even_odd+0x48c>
 8015c14:	f005 030f 	and.w	r3, r5, #15
 8015c18:	9302      	str	r3, [sp, #8]
 8015c1a:	9b02      	ldr	r3, [sp, #8]
 8015c1c:	2b09      	cmp	r3, #9
 8015c1e:	f000 8295 	beq.w	801614c <fill_path_even_odd+0x824>
 8015c22:	3e0a      	subs	r6, #10
 8015c24:	2e01      	cmp	r6, #1
 8015c26:	d937      	bls.n	8015c98 <fill_path_even_odd+0x370>
 8015c28:	4bb7      	ldr	r3, [pc, #732]	@ (8015f08 <fill_path_even_odd+0x5e0>)
 8015c2a:	2007      	movs	r0, #7
 8015c2c:	681d      	ldr	r5, [r3, #0]
 8015c2e:	4bb7      	ldr	r3, [pc, #732]	@ (8015f0c <fill_path_even_odd+0x5e4>)
 8015c30:	681c      	ldr	r4, [r3, #0]
 8015c32:	f008 f87f 	bl	801dd34 <nema_cl_get_space>
 8015c36:	2800      	cmp	r0, #0
 8015c38:	d02e      	beq.n	8015c98 <fill_path_even_odd+0x370>
 8015c3a:	4ab5      	ldr	r2, [pc, #724]	@ (8015f10 <fill_path_even_odd+0x5e8>)
 8015c3c:	f8db 3000 	ldr.w	r3, [fp]
 8015c40:	7812      	ldrb	r2, [r2, #0]
 8015c42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c44:	2a01      	cmp	r2, #1
 8015c46:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015c4a:	d104      	bne.n	8015c56 <fill_path_even_odd+0x32e>
 8015c4c:	4ab0      	ldr	r2, [pc, #704]	@ (8015f10 <fill_path_even_odd+0x5e8>)
 8015c4e:	6852      	ldr	r2, [r2, #4]
 8015c50:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015c54:	4313      	orrs	r3, r2
 8015c56:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8015c5a:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8015c5e:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015c62:	f44f 764c 	mov.w	r6, #816	@ 0x330
 8015c66:	6001      	str	r1, [r0, #0]
 8015c68:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015c6a:	6087      	str	r7, [r0, #8]
 8015c6c:	6041      	str	r1, [r0, #4]
 8015c6e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8015c70:	6106      	str	r6, [r0, #16]
 8015c72:	60c1      	str	r1, [r0, #12]
 8015c74:	6182      	str	r2, [r0, #24]
 8015c76:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015c78:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015c7c:	6142      	str	r2, [r0, #20]
 8015c7e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015c80:	f043 0304 	orr.w	r3, r3, #4
 8015c84:	61c2      	str	r2, [r0, #28]
 8015c86:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015c8a:	6343      	str	r3, [r0, #52]	@ 0x34
 8015c8c:	4ba1      	ldr	r3, [pc, #644]	@ (8015f14 <fill_path_even_odd+0x5ec>)
 8015c8e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015c90:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015c92:	6201      	str	r1, [r0, #32]
 8015c94:	6282      	str	r2, [r0, #40]	@ 0x28
 8015c96:	6303      	str	r3, [r0, #48]	@ 0x30
 8015c98:	f8da 2000 	ldr.w	r2, [sl]
 8015c9c:	464c      	mov	r4, r9
 8015c9e:	e77a      	b.n	8015b96 <fill_path_even_odd+0x26e>
 8015ca0:	f89d 1019 	ldrb.w	r1, [sp, #25]
 8015ca4:	9b07      	ldr	r3, [sp, #28]
 8015ca6:	2901      	cmp	r1, #1
 8015ca8:	d038      	beq.n	8015d1c <fill_path_even_odd+0x3f4>
 8015caa:	2401      	movs	r4, #1
 8015cac:	2600      	movs	r6, #0
 8015cae:	0098      	lsls	r0, r3, #2
 8015cb0:	f8da 100c 	ldr.w	r1, [sl, #12]
 8015cb4:	1d07      	adds	r7, r0, #4
 8015cb6:	440f      	add	r7, r1
 8015cb8:	f88d 401a 	strb.w	r4, [sp, #26]
 8015cbc:	4401      	add	r1, r0
 8015cbe:	1918      	adds	r0, r3, r4
 8015cc0:	9c01      	ldr	r4, [sp, #4]
 8015cc2:	9308      	str	r3, [sp, #32]
 8015cc4:	f88d 6018 	strb.w	r6, [sp, #24]
 8015cc8:	3302      	adds	r3, #2
 8015cca:	9007      	str	r0, [sp, #28]
 8015ccc:	b1e4      	cbz	r4, 8015d08 <fill_path_even_odd+0x3e0>
 8015cce:	edd1 7a00 	vldr	s15, [r1]
 8015cd2:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015cd6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015cda:	9307      	str	r3, [sp, #28]
 8015cdc:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015ce0:	edd7 7a00 	vldr	s15, [r7]
 8015ce4:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015ce8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015cec:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015cf0:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015cf4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8015cf8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015cfc:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015d00:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015d04:	464c      	mov	r4, r9
 8015d06:	e746      	b.n	8015b96 <fill_path_even_odd+0x26e>
 8015d08:	edd1 6a00 	vldr	s13, [r1]
 8015d0c:	9307      	str	r3, [sp, #28]
 8015d0e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015d12:	edd7 7a00 	vldr	s15, [r7]
 8015d16:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015d1a:	e7e9      	b.n	8015cf0 <fill_path_even_odd+0x3c8>
 8015d1c:	2b00      	cmp	r3, #0
 8015d1e:	d0c4      	beq.n	8015caa <fill_path_even_odd+0x382>
 8015d20:	f8db 1000 	ldr.w	r1, [fp]
 8015d24:	7f09      	ldrb	r1, [r1, #28]
 8015d26:	2900      	cmp	r1, #0
 8015d28:	d0bf      	beq.n	8015caa <fill_path_even_odd+0x382>
 8015d2a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015d2e:	2b00      	cmp	r3, #0
 8015d30:	f000 830c 	beq.w	801634c <fill_path_even_odd+0xa24>
 8015d34:	ee19 7a10 	vmov	r7, s18
 8015d38:	ee19 8a10 	vmov	r8, s18
 8015d3c:	4b72      	ldr	r3, [pc, #456]	@ (8015f08 <fill_path_even_odd+0x5e0>)
 8015d3e:	2007      	movs	r0, #7
 8015d40:	681e      	ldr	r6, [r3, #0]
 8015d42:	4b72      	ldr	r3, [pc, #456]	@ (8015f0c <fill_path_even_odd+0x5e4>)
 8015d44:	681c      	ldr	r4, [r3, #0]
 8015d46:	f007 fff5 	bl	801dd34 <nema_cl_get_space>
 8015d4a:	2800      	cmp	r0, #0
 8015d4c:	d02e      	beq.n	8015dac <fill_path_even_odd+0x484>
 8015d4e:	4a70      	ldr	r2, [pc, #448]	@ (8015f10 <fill_path_even_odd+0x5e8>)
 8015d50:	f8db 3000 	ldr.w	r3, [fp]
 8015d54:	7811      	ldrb	r1, [r2, #0]
 8015d56:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8015d58:	2901      	cmp	r1, #1
 8015d5a:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8015d5e:	d104      	bne.n	8015d6a <fill_path_even_odd+0x442>
 8015d60:	4b6b      	ldr	r3, [pc, #428]	@ (8015f10 <fill_path_even_odd+0x5e8>)
 8015d62:	685b      	ldr	r3, [r3, #4]
 8015d64:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015d68:	431a      	orrs	r2, r3
 8015d6a:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8015d6e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015d72:	6003      	str	r3, [r0, #0]
 8015d74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015d76:	6081      	str	r1, [r0, #8]
 8015d78:	6043      	str	r3, [r0, #4]
 8015d7a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015d7c:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015d80:	61c7      	str	r7, [r0, #28]
 8015d82:	60c3      	str	r3, [r0, #12]
 8015d84:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8015d88:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015d8c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015d90:	f042 0204 	orr.w	r2, r2, #4
 8015d94:	6342      	str	r2, [r0, #52]	@ 0x34
 8015d96:	4a5f      	ldr	r2, [pc, #380]	@ (8015f14 <fill_path_even_odd+0x5ec>)
 8015d98:	f8c0 8014 	str.w	r8, [r0, #20]
 8015d9c:	6246      	str	r6, [r0, #36]	@ 0x24
 8015d9e:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015da0:	f8c0 c010 	str.w	ip, [r0, #16]
 8015da4:	6187      	str	r7, [r0, #24]
 8015da6:	6201      	str	r1, [r0, #32]
 8015da8:	6283      	str	r3, [r0, #40]	@ 0x28
 8015daa:	6302      	str	r2, [r0, #48]	@ 0x30
 8015dac:	9b07      	ldr	r3, [sp, #28]
 8015dae:	f8da 2000 	ldr.w	r2, [sl]
 8015db2:	e77a      	b.n	8015caa <fill_path_even_odd+0x382>
 8015db4:	f8db 2000 	ldr.w	r2, [fp]
 8015db8:	4b55      	ldr	r3, [pc, #340]	@ (8015f10 <fill_path_even_odd+0x5e8>)
 8015dba:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015dbc:	4a52      	ldr	r2, [pc, #328]	@ (8015f08 <fill_path_even_odd+0x5e0>)
 8015dbe:	781b      	ldrb	r3, [r3, #0]
 8015dc0:	2c00      	cmp	r4, #0
 8015dc2:	6816      	ldr	r6, [r2, #0]
 8015dc4:	4a51      	ldr	r2, [pc, #324]	@ (8015f0c <fill_path_even_odd+0x5e4>)
 8015dc6:	bf18      	it	ne
 8015dc8:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015dcc:	2b01      	cmp	r3, #1
 8015dce:	6815      	ldr	r5, [r2, #0]
 8015dd0:	d104      	bne.n	8015ddc <fill_path_even_odd+0x4b4>
 8015dd2:	4b4f      	ldr	r3, [pc, #316]	@ (8015f10 <fill_path_even_odd+0x5e8>)
 8015dd4:	685b      	ldr	r3, [r3, #4]
 8015dd6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015dda:	431c      	orrs	r4, r3
 8015ddc:	200e      	movs	r0, #14
 8015dde:	f007 ffa9 	bl	801dd34 <nema_cl_get_space>
 8015de2:	2800      	cmp	r0, #0
 8015de4:	f43f af58 	beq.w	8015c98 <fill_path_even_odd+0x370>
 8015de8:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015dec:	6283      	str	r3, [r0, #40]	@ 0x28
 8015dee:	6503      	str	r3, [r0, #80]	@ 0x50
 8015df0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8015df4:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015df8:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8015dfc:	f44f 7e4b 	mov.w	lr, #812	@ 0x32c
 8015e00:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015e04:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015e08:	6303      	str	r3, [r0, #48]	@ 0x30
 8015e0a:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015e0e:	6001      	str	r1, [r0, #0]
 8015e10:	f8c0 8018 	str.w	r8, [r0, #24]
 8015e14:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8015e18:	f8c0 e008 	str.w	lr, [r0, #8]
 8015e1c:	f8c0 8004 	str.w	r8, [r0, #4]
 8015e20:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015e24:	f8c0 c010 	str.w	ip, [r0, #16]
 8015e28:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015e2c:	6346      	str	r6, [r0, #52]	@ 0x34
 8015e2e:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015e30:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8015e32:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8015e34:	6146      	str	r6, [r0, #20]
 8015e36:	61c5      	str	r5, [r0, #28]
 8015e38:	6202      	str	r2, [r0, #32]
 8015e3a:	6482      	str	r2, [r0, #72]	@ 0x48
 8015e3c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015e3e:	6383      	str	r3, [r0, #56]	@ 0x38
 8015e40:	4b34      	ldr	r3, [pc, #208]	@ (8015f14 <fill_path_even_odd+0x5ec>)
 8015e42:	6542      	str	r2, [r0, #84]	@ 0x54
 8015e44:	f044 0204 	orr.w	r2, r4, #4
 8015e48:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015e4c:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8015e50:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8015e54:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8015e56:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015e58:	6246      	str	r6, [r0, #36]	@ 0x24
 8015e5a:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015e5c:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8015e5e:	f044 0406 	orr.w	r4, r4, #6
 8015e62:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015e64:	64c6      	str	r6, [r0, #76]	@ 0x4c
 8015e66:	6587      	str	r7, [r0, #88]	@ 0x58
 8015e68:	6602      	str	r2, [r0, #96]	@ 0x60
 8015e6a:	e9c0 341a 	strd	r3, r4, [r0, #104]	@ 0x68
 8015e6e:	6645      	str	r5, [r0, #100]	@ 0x64
 8015e70:	f8da 2000 	ldr.w	r2, [sl]
 8015e74:	464c      	mov	r4, r9
 8015e76:	e68e      	b.n	8015b96 <fill_path_even_odd+0x26e>
 8015e78:	9007      	str	r0, [sp, #28]
 8015e7a:	ed94 6a00 	vldr	s12, [r4]
 8015e7e:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015e82:	1c8a      	adds	r2, r1, #2
 8015e84:	9207      	str	r2, [sp, #28]
 8015e86:	edd4 6a01 	vldr	s13, [r4, #4]
 8015e8a:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015e8e:	1cca      	adds	r2, r1, #3
 8015e90:	9207      	str	r2, [sp, #28]
 8015e92:	ed94 7a02 	vldr	s14, [r4, #8]
 8015e96:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015e9a:	3104      	adds	r1, #4
 8015e9c:	9107      	str	r1, [sp, #28]
 8015e9e:	edd4 7a03 	vldr	s15, [r4, #12]
 8015ea2:	9a01      	ldr	r2, [sp, #4]
 8015ea4:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015ea8:	2a00      	cmp	r2, #0
 8015eaa:	d135      	bne.n	8015f18 <fill_path_even_odd+0x5f0>
 8015eac:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 8015eb0:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8015eb4:	008a      	lsls	r2, r1, #2
 8015eb6:	1c48      	adds	r0, r1, #1
 8015eb8:	9203      	str	r2, [sp, #12]
 8015eba:	9c03      	ldr	r4, [sp, #12]
 8015ebc:	9007      	str	r0, [sp, #28]
 8015ebe:	1d22      	adds	r2, r4, #4
 8015ec0:	441a      	add	r2, r3
 8015ec2:	4423      	add	r3, r4
 8015ec4:	9c01      	ldr	r4, [sp, #4]
 8015ec6:	3102      	adds	r1, #2
 8015ec8:	edd3 6a00 	vldr	s13, [r3]
 8015ecc:	2c00      	cmp	r4, #0
 8015ece:	f000 8107 	beq.w	80160e0 <fill_path_even_odd+0x7b8>
 8015ed2:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8015ed6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015eda:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015ede:	9107      	str	r1, [sp, #28]
 8015ee0:	ed92 7a00 	vldr	s14, [r2]
 8015ee4:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8015ee8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015eec:	f8db 3000 	ldr.w	r3, [fp]
 8015ef0:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015ef4:	7f1b      	ldrb	r3, [r3, #28]
 8015ef6:	2b00      	cmp	r3, #0
 8015ef8:	f47f adb7 	bne.w	8015a6a <fill_path_even_odd+0x142>
 8015efc:	2201      	movs	r2, #1
 8015efe:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015f02:	f88d 2019 	strb.w	r2, [sp, #25]
 8015f06:	e5c8      	b.n	8015a9a <fill_path_even_odd+0x172>
 8015f08:	20082fb8 	.word	0x20082fb8
 8015f0c:	20082fbc 	.word	0x20082fbc
 8015f10:	20000064 	.word	0x20000064
 8015f14:	ff000100 	.word	0xff000100
 8015f18:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015f1c:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015f20:	ee36 6a05 	vadd.f32	s12, s12, s10
 8015f24:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015f28:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015f2c:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015f30:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015f34:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f38:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015f3c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f40:	e7b4      	b.n	8015eac <fill_path_even_odd+0x584>
 8015f42:	f1ac 0c05 	sub.w	ip, ip, #5
 8015f46:	f1bc 0f03 	cmp.w	ip, #3
 8015f4a:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015f4e:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015f52:	f240 822f 	bls.w	80163b4 <fill_path_even_odd+0xa8c>
 8015f56:	eeb0 7a65 	vmov.f32	s14, s11
 8015f5a:	eef0 7a45 	vmov.f32	s15, s10
 8015f5e:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8015f62:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8015f66:	9007      	str	r0, [sp, #28]
 8015f68:	ed94 7a00 	vldr	s14, [r4]
 8015f6c:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f70:	3102      	adds	r1, #2
 8015f72:	9107      	str	r1, [sp, #28]
 8015f74:	edd4 7a01 	vldr	s15, [r4, #4]
 8015f78:	9a01      	ldr	r2, [sp, #4]
 8015f7a:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f7e:	2a00      	cmp	r2, #0
 8015f80:	d094      	beq.n	8015eac <fill_path_even_odd+0x584>
 8015f82:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015f86:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015f8a:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f8e:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f92:	e78b      	b.n	8015eac <fill_path_even_odd+0x584>
 8015f94:	2e03      	cmp	r6, #3
 8015f96:	f000 80ab 	beq.w	80160f0 <fill_path_even_odd+0x7c8>
 8015f9a:	2e0a      	cmp	r6, #10
 8015f9c:	f040 8259 	bne.w	8016452 <fill_path_even_odd+0xb2a>
 8015fa0:	9007      	str	r0, [sp, #28]
 8015fa2:	edde 7a00 	vldr	s15, [lr]
 8015fa6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015faa:	ee17 1a90 	vmov	r1, s15
 8015fae:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015fb2:	104a      	asrs	r2, r1, #1
 8015fb4:	2a00      	cmp	r2, #0
 8015fb6:	9203      	str	r2, [sp, #12]
 8015fb8:	f340 80e2 	ble.w	8016180 <fill_path_even_odd+0x858>
 8015fbc:	9a04      	ldr	r2, [sp, #16]
 8015fbe:	2400      	movs	r4, #0
 8015fc0:	f8cd 9010 	str.w	r9, [sp, #16]
 8015fc4:	46a9      	mov	r9, r5
 8015fc6:	9605      	str	r6, [sp, #20]
 8015fc8:	0091      	lsls	r1, r2, #2
 8015fca:	1d08      	adds	r0, r1, #4
 8015fcc:	4418      	add	r0, r3
 8015fce:	9d01      	ldr	r5, [sp, #4]
 8015fd0:	440b      	add	r3, r1
 8015fd2:	1c51      	adds	r1, r2, #1
 8015fd4:	9107      	str	r1, [sp, #28]
 8015fd6:	3202      	adds	r2, #2
 8015fd8:	ed93 8a00 	vldr	s16, [r3]
 8015fdc:	b365      	cbz	r5, 8016038 <fill_path_even_odd+0x710>
 8015fde:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 8015fe2:	ee38 8a01 	vadd.f32	s16, s16, s2
 8015fe6:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8015fea:	9207      	str	r2, [sp, #28]
 8015fec:	edd0 8a00 	vldr	s17, [r0]
 8015ff0:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 8015ff4:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8015ff8:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8015ffc:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016000:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 8016004:	f8db 3000 	ldr.w	r3, [fp]
 8016008:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 801600c:	7f1a      	ldrb	r2, [r3, #28]
 801600e:	b9da      	cbnz	r2, 8016048 <fill_path_even_odd+0x720>
 8016010:	4aaa      	ldr	r2, [pc, #680]	@ (80162bc <fill_path_even_odd+0x994>)
 8016012:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016016:	6812      	ldr	r2, [r2, #0]
 8016018:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 801601c:	2a00      	cmp	r2, #0
 801601e:	f000 8199 	beq.w	8016354 <fill_path_even_odd+0xa2c>
 8016022:	eef0 1a68 	vmov.f32	s3, s17
 8016026:	eeb0 1a48 	vmov.f32	s2, s16
 801602a:	eef0 0a4a 	vmov.f32	s1, s20
 801602e:	eeb0 0a69 	vmov.f32	s0, s19
 8016032:	f7fc fc79 	bl	8012928 <raster_stroked_line_>
 8016036:	e047      	b.n	80160c8 <fill_path_even_odd+0x7a0>
 8016038:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 801603c:	9207      	str	r2, [sp, #28]
 801603e:	edd0 8a00 	vldr	s17, [r0]
 8016042:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016046:	e7d9      	b.n	8015ffc <fill_path_even_odd+0x6d4>
 8016048:	4b9d      	ldr	r3, [pc, #628]	@ (80162c0 <fill_path_even_odd+0x998>)
 801604a:	2007      	movs	r0, #7
 801604c:	681e      	ldr	r6, [r3, #0]
 801604e:	4b9d      	ldr	r3, [pc, #628]	@ (80162c4 <fill_path_even_odd+0x99c>)
 8016050:	681d      	ldr	r5, [r3, #0]
 8016052:	f007 fe6f 	bl	801dd34 <nema_cl_get_space>
 8016056:	2800      	cmp	r0, #0
 8016058:	d036      	beq.n	80160c8 <fill_path_even_odd+0x7a0>
 801605a:	4a9b      	ldr	r2, [pc, #620]	@ (80162c8 <fill_path_even_odd+0x9a0>)
 801605c:	f8db 3000 	ldr.w	r3, [fp]
 8016060:	7812      	ldrb	r2, [r2, #0]
 8016062:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016064:	2a01      	cmp	r2, #1
 8016066:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801606a:	d104      	bne.n	8016076 <fill_path_even_odd+0x74e>
 801606c:	4a96      	ldr	r2, [pc, #600]	@ (80162c8 <fill_path_even_odd+0x9a0>)
 801606e:	6852      	ldr	r2, [r2, #4]
 8016070:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016074:	4313      	orrs	r3, r2
 8016076:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801607a:	6002      	str	r2, [r0, #0]
 801607c:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016080:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016084:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8016088:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801608c:	6082      	str	r2, [r0, #8]
 801608e:	edc0 7a01 	vstr	s15, [r0, #4]
 8016092:	f8c0 e018 	str.w	lr, [r0, #24]
 8016096:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801609a:	f8c0 c010 	str.w	ip, [r0, #16]
 801609e:	f8c0 e00c 	str.w	lr, [r0, #12]
 80160a2:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 80160a6:	f043 0304 	orr.w	r3, r3, #4
 80160aa:	f8c0 c014 	str.w	ip, [r0, #20]
 80160ae:	6343      	str	r3, [r0, #52]	@ 0x34
 80160b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80160b2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80160b6:	61c3      	str	r3, [r0, #28]
 80160b8:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80160bc:	4a83      	ldr	r2, [pc, #524]	@ (80162cc <fill_path_even_odd+0x9a4>)
 80160be:	6246      	str	r6, [r0, #36]	@ 0x24
 80160c0:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80160c2:	6302      	str	r2, [r0, #48]	@ 0x30
 80160c4:	6201      	str	r1, [r0, #32]
 80160c6:	6283      	str	r3, [r0, #40]	@ 0x28
 80160c8:	9b03      	ldr	r3, [sp, #12]
 80160ca:	3401      	adds	r4, #1
 80160cc:	429c      	cmp	r4, r3
 80160ce:	e898 0003 	ldmia.w	r8, {r0, r1}
 80160d2:	e887 0003 	stmia.w	r7, {r0, r1}
 80160d6:	d051      	beq.n	801617c <fill_path_even_odd+0x854>
 80160d8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80160dc:	9a07      	ldr	r2, [sp, #28]
 80160de:	e773      	b.n	8015fc8 <fill_path_even_odd+0x6a0>
 80160e0:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80160e4:	9107      	str	r1, [sp, #28]
 80160e6:	edd2 7a00 	vldr	s15, [r2]
 80160ea:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 80160ee:	e4b6      	b.n	8015a5e <fill_path_even_odd+0x136>
 80160f0:	9b01      	ldr	r3, [sp, #4]
 80160f2:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 80160f6:	9007      	str	r0, [sp, #28]
 80160f8:	2b00      	cmp	r3, #0
 80160fa:	f000 80cf 	beq.w	801629c <fill_path_even_odd+0x974>
 80160fe:	ed9e 7a00 	vldr	s14, [lr]
 8016102:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8016106:	ee76 6a87 	vadd.f32	s13, s13, s14
 801610a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801610e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016112:	e4a4      	b.n	8015a5e <fill_path_even_odd+0x136>
 8016114:	9007      	str	r0, [sp, #28]
 8016116:	ed94 7a00 	vldr	s14, [r4]
 801611a:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 801611e:	3102      	adds	r1, #2
 8016120:	9107      	str	r1, [sp, #28]
 8016122:	edd4 7a01 	vldr	s15, [r4, #4]
 8016126:	9a01      	ldr	r2, [sp, #4]
 8016128:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801612c:	2a00      	cmp	r2, #0
 801612e:	f43f aebd 	beq.w	8015eac <fill_path_even_odd+0x584>
 8016132:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 8016136:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801613a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801613e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016142:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8016146:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801614a:	e6af      	b.n	8015eac <fill_path_even_odd+0x584>
 801614c:	2002      	movs	r0, #2
 801614e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8016150:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8016152:	f007 fdef 	bl	801dd34 <nema_cl_get_space>
 8016156:	b138      	cbz	r0, 8016168 <fill_path_even_odd+0x840>
 8016158:	f44f 724a 	mov.w	r2, #808	@ 0x328
 801615c:	f44f 734b 	mov.w	r3, #812	@ 0x32c
 8016160:	6045      	str	r5, [r0, #4]
 8016162:	60c4      	str	r4, [r0, #12]
 8016164:	6002      	str	r2, [r0, #0]
 8016166:	6083      	str	r3, [r0, #8]
 8016168:	a806      	add	r0, sp, #24
 801616a:	f7fd f83d 	bl	80131e8 <fill_arc.isra.7>
 801616e:	4605      	mov	r5, r0
 8016170:	2800      	cmp	r0, #0
 8016172:	f43f ad59 	beq.w	8015c28 <fill_path_even_odd+0x300>
 8016176:	f006 fc85 	bl	801ca84 <nema_vg_set_error>
 801617a:	e515      	b.n	8015ba8 <fill_path_even_odd+0x280>
 801617c:	e9dd 9604 	ldrd	r9, r6, [sp, #16]
 8016180:	ed9d 8a15 	vldr	s16, [sp, #84]	@ 0x54
 8016184:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8016188:	ee77 7ac8 	vsub.f32	s15, s15, s16
 801618c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016190:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016194:	eddd 8a16 	vldr	s17, [sp, #88]	@ 0x58
 8016198:	d111      	bne.n	80161be <fill_path_even_odd+0x896>
 801619a:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801619e:	ee77 7ae8 	vsub.f32	s15, s15, s17
 80161a2:	eef5 7a40 	vcmp.f32	s15, #0.0
 80161a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161aa:	d108      	bne.n	80161be <fill_path_even_odd+0x896>
 80161ac:	2300      	movs	r3, #0
 80161ae:	f88d 3019 	strb.w	r3, [sp, #25]
 80161b2:	f89d 301a 	ldrb.w	r3, [sp, #26]
 80161b6:	2b00      	cmp	r3, #0
 80161b8:	f43f ad2f 	beq.w	8015c1a <fill_path_even_odd+0x2f2>
 80161bc:	e56c      	b.n	8015c98 <fill_path_even_odd+0x370>
 80161be:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 80161c2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80161c6:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 80161ca:	f8db 3000 	ldr.w	r3, [fp]
 80161ce:	e887 0003 	stmia.w	r7, {r0, r1}
 80161d2:	7f1a      	ldrb	r2, [r3, #28]
 80161d4:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 80161d8:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 80161dc:	2a00      	cmp	r2, #0
 80161de:	f000 8124 	beq.w	801642a <fill_path_even_odd+0xb02>
 80161e2:	4b37      	ldr	r3, [pc, #220]	@ (80162c0 <fill_path_even_odd+0x998>)
 80161e4:	2007      	movs	r0, #7
 80161e6:	681c      	ldr	r4, [r3, #0]
 80161e8:	4b36      	ldr	r3, [pc, #216]	@ (80162c4 <fill_path_even_odd+0x99c>)
 80161ea:	f8d3 8000 	ldr.w	r8, [r3]
 80161ee:	f007 fda1 	bl	801dd34 <nema_cl_get_space>
 80161f2:	2800      	cmp	r0, #0
 80161f4:	d0da      	beq.n	80161ac <fill_path_even_odd+0x884>
 80161f6:	4a34      	ldr	r2, [pc, #208]	@ (80162c8 <fill_path_even_odd+0x9a0>)
 80161f8:	f8db 3000 	ldr.w	r3, [fp]
 80161fc:	7812      	ldrb	r2, [r2, #0]
 80161fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016200:	2a01      	cmp	r2, #1
 8016202:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8016206:	d104      	bne.n	8016212 <fill_path_even_odd+0x8ea>
 8016208:	4a2f      	ldr	r2, [pc, #188]	@ (80162c8 <fill_path_even_odd+0x9a0>)
 801620a:	6852      	ldr	r2, [r2, #4]
 801620c:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016210:	4313      	orrs	r3, r2
 8016212:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8016216:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801621a:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801621e:	f44f 754c 	mov.w	r5, #816	@ 0x330
 8016222:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8016226:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 801622a:	f8c0 e000 	str.w	lr, [r0]
 801622e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8016232:	f8c0 c008 	str.w	ip, [r0, #8]
 8016236:	f8c0 e004 	str.w	lr, [r0, #4]
 801623a:	6187      	str	r7, [r0, #24]
 801623c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801623e:	6105      	str	r5, [r0, #16]
 8016240:	60c7      	str	r7, [r0, #12]
 8016242:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8016244:	f043 0304 	orr.w	r3, r3, #4
 8016248:	6145      	str	r5, [r0, #20]
 801624a:	6343      	str	r3, [r0, #52]	@ 0x34
 801624c:	6244      	str	r4, [r0, #36]	@ 0x24
 801624e:	4b1f      	ldr	r3, [pc, #124]	@ (80162cc <fill_path_even_odd+0x9a4>)
 8016250:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8016252:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8016256:	61c4      	str	r4, [r0, #28]
 8016258:	6201      	str	r1, [r0, #32]
 801625a:	6282      	str	r2, [r0, #40]	@ 0x28
 801625c:	6303      	str	r3, [r0, #48]	@ 0x30
 801625e:	e7a5      	b.n	80161ac <fill_path_even_odd+0x884>
 8016260:	f1ac 0c05 	sub.w	ip, ip, #5
 8016264:	f1bc 0f03 	cmp.w	ip, #3
 8016268:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 801626c:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8016270:	d80b      	bhi.n	801628a <fill_path_even_odd+0x962>
 8016272:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8016276:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801627a:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 801627e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8016282:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8016286:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801628a:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801628e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8016292:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8016296:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801629a:	e60e      	b.n	8015eba <fill_path_even_odd+0x592>
 801629c:	edde 6a00 	vldr	s13, [lr]
 80162a0:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 80162a4:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80162a8:	f7ff bbd9 	b.w	8015a5e <fill_path_even_odd+0x136>
 80162ac:	2300      	movs	r3, #0
 80162ae:	f88d 3019 	strb.w	r3, [sp, #25]
 80162b2:	f89d 301a 	ldrb.w	r3, [sp, #26]
 80162b6:	f7ff bbf0 	b.w	8015a9a <fill_path_even_odd+0x172>
 80162ba:	bf00      	nop
 80162bc:	20082fb4 	.word	0x20082fb4
 80162c0:	20082fb8 	.word	0x20082fb8
 80162c4:	20082fbc 	.word	0x20082fbc
 80162c8:	20000064 	.word	0x20000064
 80162cc:	ff000100 	.word	0xff000100
 80162d0:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80162d4:	2b00      	cmp	r3, #0
 80162d6:	d17a      	bne.n	80163ce <fill_path_even_odd+0xaa6>
 80162d8:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 80162da:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80162dc:	4b8f      	ldr	r3, [pc, #572]	@ (801651c <fill_path_even_odd+0xbf4>)
 80162de:	2007      	movs	r0, #7
 80162e0:	681e      	ldr	r6, [r3, #0]
 80162e2:	4b8f      	ldr	r3, [pc, #572]	@ (8016520 <fill_path_even_odd+0xbf8>)
 80162e4:	681d      	ldr	r5, [r3, #0]
 80162e6:	f007 fd25 	bl	801dd34 <nema_cl_get_space>
 80162ea:	2800      	cmp	r0, #0
 80162ec:	f43f ac5b 	beq.w	8015ba6 <fill_path_even_odd+0x27e>
 80162f0:	4b8c      	ldr	r3, [pc, #560]	@ (8016524 <fill_path_even_odd+0xbfc>)
 80162f2:	4a8d      	ldr	r2, [pc, #564]	@ (8016528 <fill_path_even_odd+0xc00>)
 80162f4:	681b      	ldr	r3, [r3, #0]
 80162f6:	7811      	ldrb	r1, [r2, #0]
 80162f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80162fa:	2901      	cmp	r1, #1
 80162fc:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8016300:	d103      	bne.n	801630a <fill_path_even_odd+0x9e2>
 8016302:	6852      	ldr	r2, [r2, #4]
 8016304:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016308:	4313      	orrs	r3, r2
 801630a:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801630e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016312:	6002      	str	r2, [r0, #0]
 8016314:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016316:	6081      	str	r1, [r0, #8]
 8016318:	6042      	str	r2, [r0, #4]
 801631a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801631c:	61c4      	str	r4, [r0, #28]
 801631e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8016322:	60c2      	str	r2, [r0, #12]
 8016324:	f44f 744d 	mov.w	r4, #820	@ 0x334
 8016328:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801632c:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8016330:	f043 0304 	orr.w	r3, r3, #4
 8016334:	6343      	str	r3, [r0, #52]	@ 0x34
 8016336:	4b7d      	ldr	r3, [pc, #500]	@ (801652c <fill_path_even_odd+0xc04>)
 8016338:	6147      	str	r7, [r0, #20]
 801633a:	6246      	str	r6, [r0, #36]	@ 0x24
 801633c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801633e:	f8c0 c010 	str.w	ip, [r0, #16]
 8016342:	6184      	str	r4, [r0, #24]
 8016344:	6201      	str	r1, [r0, #32]
 8016346:	6282      	str	r2, [r0, #40]	@ 0x28
 8016348:	6303      	str	r3, [r0, #48]	@ 0x30
 801634a:	e42c      	b.n	8015ba6 <fill_path_even_odd+0x27e>
 801634c:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 8016350:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 8016352:	e4f3      	b.n	8015d3c <fill_path_even_odd+0x414>
 8016354:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016358:	2d00      	cmp	r5, #0
 801635a:	bf18      	it	ne
 801635c:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8016360:	4b71      	ldr	r3, [pc, #452]	@ (8016528 <fill_path_even_odd+0xc00>)
 8016362:	4015      	ands	r5, r2
 8016364:	781b      	ldrb	r3, [r3, #0]
 8016366:	2b01      	cmp	r3, #1
 8016368:	d104      	bne.n	8016374 <fill_path_even_odd+0xa4c>
 801636a:	4b6f      	ldr	r3, [pc, #444]	@ (8016528 <fill_path_even_odd+0xc00>)
 801636c:	685b      	ldr	r3, [r3, #4]
 801636e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8016372:	431d      	orrs	r5, r3
 8016374:	2005      	movs	r0, #5
 8016376:	f007 fcdd 	bl	801dd34 <nema_cl_get_space>
 801637a:	2800      	cmp	r0, #0
 801637c:	f43f aea4 	beq.w	80160c8 <fill_path_even_odd+0x7a0>
 8016380:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8016384:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016388:	f44f 724c 	mov.w	r2, #816	@ 0x330
 801638c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8016390:	f045 050a 	orr.w	r5, r5, #10
 8016394:	6245      	str	r5, [r0, #36]	@ 0x24
 8016396:	4d65      	ldr	r5, [pc, #404]	@ (801652c <fill_path_even_odd+0xc04>)
 8016398:	edc0 9a01 	vstr	s19, [r0, #4]
 801639c:	ed80 aa03 	vstr	s20, [r0, #12]
 80163a0:	ed80 8a05 	vstr	s16, [r0, #20]
 80163a4:	edc0 8a07 	vstr	s17, [r0, #28]
 80163a8:	6205      	str	r5, [r0, #32]
 80163aa:	6006      	str	r6, [r0, #0]
 80163ac:	6081      	str	r1, [r0, #8]
 80163ae:	6102      	str	r2, [r0, #16]
 80163b0:	6183      	str	r3, [r0, #24]
 80163b2:	e689      	b.n	80160c8 <fill_path_even_odd+0x7a0>
 80163b4:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 80163b8:	ee75 7a05 	vadd.f32	s15, s10, s10
 80163bc:	ee35 6aa5 	vadd.f32	s12, s11, s11
 80163c0:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 80163c4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80163c8:	ee36 7a66 	vsub.f32	s14, s12, s13
 80163cc:	e5c7      	b.n	8015f5e <fill_path_even_odd+0x636>
 80163ce:	2400      	movs	r4, #0
 80163d0:	4627      	mov	r7, r4
 80163d2:	e783      	b.n	80162dc <fill_path_even_odd+0x9b4>
 80163d4:	9007      	str	r0, [sp, #28]
 80163d6:	6822      	ldr	r2, [r4, #0]
 80163d8:	1c8b      	adds	r3, r1, #2
 80163da:	9307      	str	r3, [sp, #28]
 80163dc:	920d      	str	r2, [sp, #52]	@ 0x34
 80163de:	6863      	ldr	r3, [r4, #4]
 80163e0:	3103      	adds	r1, #3
 80163e2:	930e      	str	r3, [sp, #56]	@ 0x38
 80163e4:	9107      	str	r1, [sp, #28]
 80163e6:	4b52      	ldr	r3, [pc, #328]	@ (8016530 <fill_path_even_odd+0xc08>)
 80163e8:	68a2      	ldr	r2, [r4, #8]
 80163ea:	edd3 0a00 	vldr	s1, [r3]
 80163ee:	ed93 0a03 	vldr	s0, [r3, #12]
 80163f2:	920f      	str	r2, [sp, #60]	@ 0x3c
 80163f4:	f01a ff02 	bl	80311fc <atan2f>
 80163f8:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 80163fc:	ee77 7a80 	vadd.f32	s15, s15, s0
 8016400:	9907      	ldr	r1, [sp, #28]
 8016402:	f8da 300c 	ldr.w	r3, [sl, #12]
 8016406:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801640a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801640c:	008a      	lsls	r2, r1, #2
 801640e:	1c48      	adds	r0, r1, #1
 8016410:	9004      	str	r0, [sp, #16]
 8016412:	9203      	str	r2, [sp, #12]
 8016414:	f88d 501b 	strb.w	r5, [sp, #27]
 8016418:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 801641c:	eb03 0e02 	add.w	lr, r3, r2
 8016420:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
 8016424:	9414      	str	r4, [sp, #80]	@ 0x50
 8016426:	f7ff bb06 	b.w	8015a36 <fill_path_even_odd+0x10e>
 801642a:	4a42      	ldr	r2, [pc, #264]	@ (8016534 <fill_path_even_odd+0xc0c>)
 801642c:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016430:	6812      	ldr	r2, [r2, #0]
 8016432:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8016436:	2a00      	cmp	r2, #0
 8016438:	f000 811b 	beq.w	8016672 <fill_path_even_odd+0xd4a>
 801643c:	eef0 1a68 	vmov.f32	s3, s17
 8016440:	eeb0 1a48 	vmov.f32	s2, s16
 8016444:	eef0 0a4a 	vmov.f32	s1, s20
 8016448:	eeb0 0a69 	vmov.f32	s0, s19
 801644c:	f7fc fa6c 	bl	8012928 <raster_stroked_line_>
 8016450:	e6ac      	b.n	80161ac <fill_path_even_odd+0x884>
 8016452:	2e0b      	cmp	r6, #11
 8016454:	f47f ad31 	bne.w	8015eba <fill_path_even_odd+0x592>
 8016458:	9007      	str	r0, [sp, #28]
 801645a:	edde 7a00 	vldr	s15, [lr]
 801645e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016462:	ee17 1a90 	vmov	r1, s15
 8016466:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801646a:	104c      	asrs	r4, r1, #1
 801646c:	2c00      	cmp	r4, #0
 801646e:	f340 80b0 	ble.w	80165d2 <fill_path_even_odd+0xcaa>
 8016472:	2100      	movs	r1, #0
 8016474:	9a04      	ldr	r2, [sp, #16]
 8016476:	9605      	str	r6, [sp, #20]
 8016478:	f8cd 9010 	str.w	r9, [sp, #16]
 801647c:	4656      	mov	r6, sl
 801647e:	46a9      	mov	r9, r5
 8016480:	46a2      	mov	sl, r4
 8016482:	460c      	mov	r4, r1
 8016484:	e035      	b.n	80164f2 <fill_path_even_odd+0xbca>
 8016486:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 801648a:	ee38 8a01 	vadd.f32	s16, s16, s2
 801648e:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016492:	9207      	str	r2, [sp, #28]
 8016494:	edd1 8a00 	vldr	s17, [r1]
 8016498:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 801649c:	ee78 8aa1 	vadd.f32	s17, s17, s3
 80164a0:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 80164a4:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 80164a8:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 80164ac:	f8db 3000 	ldr.w	r3, [fp]
 80164b0:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 80164b4:	7f1a      	ldrb	r2, [r3, #28]
 80164b6:	2a00      	cmp	r2, #0
 80164b8:	d13e      	bne.n	8016538 <fill_path_even_odd+0xc10>
 80164ba:	4a1e      	ldr	r2, [pc, #120]	@ (8016534 <fill_path_even_odd+0xc0c>)
 80164bc:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80164c0:	6812      	ldr	r2, [r2, #0]
 80164c2:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 80164c6:	2a00      	cmp	r2, #0
 80164c8:	f000 80a2 	beq.w	8016610 <fill_path_even_odd+0xce8>
 80164cc:	eef0 1a68 	vmov.f32	s3, s17
 80164d0:	eeb0 1a48 	vmov.f32	s2, s16
 80164d4:	eef0 0a4a 	vmov.f32	s1, s20
 80164d8:	eeb0 0a69 	vmov.f32	s0, s19
 80164dc:	f7fc fa24 	bl	8012928 <raster_stroked_line_>
 80164e0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80164e4:	3401      	adds	r4, #1
 80164e6:	4554      	cmp	r4, sl
 80164e8:	e887 0003 	stmia.w	r7, {r0, r1}
 80164ec:	d06d      	beq.n	80165ca <fill_path_even_odd+0xca2>
 80164ee:	68f3      	ldr	r3, [r6, #12]
 80164f0:	9a07      	ldr	r2, [sp, #28]
 80164f2:	0090      	lsls	r0, r2, #2
 80164f4:	1d01      	adds	r1, r0, #4
 80164f6:	4419      	add	r1, r3
 80164f8:	9d01      	ldr	r5, [sp, #4]
 80164fa:	4403      	add	r3, r0
 80164fc:	1c50      	adds	r0, r2, #1
 80164fe:	9007      	str	r0, [sp, #28]
 8016500:	3202      	adds	r2, #2
 8016502:	ed93 8a00 	vldr	s16, [r3]
 8016506:	2d00      	cmp	r5, #0
 8016508:	d1bd      	bne.n	8016486 <fill_path_even_odd+0xb5e>
 801650a:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 801650e:	9207      	str	r2, [sp, #28]
 8016510:	edd1 8a00 	vldr	s17, [r1]
 8016514:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016518:	e7c4      	b.n	80164a4 <fill_path_even_odd+0xb7c>
 801651a:	bf00      	nop
 801651c:	20082fb8 	.word	0x20082fb8
 8016520:	20082fbc 	.word	0x20082fbc
 8016524:	20082fac 	.word	0x20082fac
 8016528:	20000064 	.word	0x20000064
 801652c:	ff000100 	.word	0xff000100
 8016530:	20083030 	.word	0x20083030
 8016534:	20082fb4 	.word	0x20082fb4
 8016538:	4b66      	ldr	r3, [pc, #408]	@ (80166d4 <fill_path_even_odd+0xdac>)
 801653a:	2007      	movs	r0, #7
 801653c:	681b      	ldr	r3, [r3, #0]
 801653e:	9303      	str	r3, [sp, #12]
 8016540:	4b65      	ldr	r3, [pc, #404]	@ (80166d8 <fill_path_even_odd+0xdb0>)
 8016542:	681d      	ldr	r5, [r3, #0]
 8016544:	f007 fbf6 	bl	801dd34 <nema_cl_get_space>
 8016548:	2800      	cmp	r0, #0
 801654a:	d0c9      	beq.n	80164e0 <fill_path_even_odd+0xbb8>
 801654c:	4a63      	ldr	r2, [pc, #396]	@ (80166dc <fill_path_even_odd+0xdb4>)
 801654e:	f8db 3000 	ldr.w	r3, [fp]
 8016552:	7812      	ldrb	r2, [r2, #0]
 8016554:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016556:	2a01      	cmp	r2, #1
 8016558:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801655c:	d104      	bne.n	8016568 <fill_path_even_odd+0xc40>
 801655e:	4a5f      	ldr	r2, [pc, #380]	@ (80166dc <fill_path_even_odd+0xdb4>)
 8016560:	6852      	ldr	r2, [r2, #4]
 8016562:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016566:	4313      	orrs	r3, r2
 8016568:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801656c:	6002      	str	r2, [r0, #0]
 801656e:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016572:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016576:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801657a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801657e:	6082      	str	r2, [r0, #8]
 8016580:	edc0 7a01 	vstr	s15, [r0, #4]
 8016584:	f8c0 e018 	str.w	lr, [r0, #24]
 8016588:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801658c:	f8c0 c010 	str.w	ip, [r0, #16]
 8016590:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016594:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016598:	f043 0304 	orr.w	r3, r3, #4
 801659c:	6343      	str	r3, [r0, #52]	@ 0x34
 801659e:	9b03      	ldr	r3, [sp, #12]
 80165a0:	f8c0 c014 	str.w	ip, [r0, #20]
 80165a4:	6243      	str	r3, [r0, #36]	@ 0x24
 80165a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80165a8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80165ac:	61c3      	str	r3, [r0, #28]
 80165ae:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80165b2:	4a4b      	ldr	r2, [pc, #300]	@ (80166e0 <fill_path_even_odd+0xdb8>)
 80165b4:	3401      	adds	r4, #1
 80165b6:	4554      	cmp	r4, sl
 80165b8:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80165ba:	6302      	str	r2, [r0, #48]	@ 0x30
 80165bc:	6201      	str	r1, [r0, #32]
 80165be:	6283      	str	r3, [r0, #40]	@ 0x28
 80165c0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80165c4:	e887 0003 	stmia.w	r7, {r0, r1}
 80165c8:	d191      	bne.n	80164ee <fill_path_even_odd+0xbc6>
 80165ca:	46b2      	mov	sl, r6
 80165cc:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80165d0:	9e05      	ldr	r6, [sp, #20]
 80165d2:	f8db 3000 	ldr.w	r3, [fp]
 80165d6:	7f1b      	ldrb	r3, [r3, #28]
 80165d8:	b1b3      	cbz	r3, 8016608 <fill_path_even_odd+0xce0>
 80165da:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 80165de:	eddd 7a15 	vldr	s15, [sp, #84]	@ 0x54
 80165e2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80165e6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80165ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165ee:	d10b      	bne.n	8016608 <fill_path_even_odd+0xce0>
 80165f0:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 80165f4:	eddd 7a16 	vldr	s15, [sp, #88]	@ 0x58
 80165f8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80165fc:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016604:	f43f add2 	beq.w	80161ac <fill_path_even_odd+0x884>
 8016608:	2301      	movs	r3, #1
 801660a:	f88d 3019 	strb.w	r3, [sp, #25]
 801660e:	e5d0      	b.n	80161b2 <fill_path_even_odd+0x88a>
 8016610:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016614:	2d00      	cmp	r5, #0
 8016616:	bf18      	it	ne
 8016618:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801661c:	4b2f      	ldr	r3, [pc, #188]	@ (80166dc <fill_path_even_odd+0xdb4>)
 801661e:	4015      	ands	r5, r2
 8016620:	781b      	ldrb	r3, [r3, #0]
 8016622:	2b01      	cmp	r3, #1
 8016624:	d104      	bne.n	8016630 <fill_path_even_odd+0xd08>
 8016626:	4b2d      	ldr	r3, [pc, #180]	@ (80166dc <fill_path_even_odd+0xdb4>)
 8016628:	685b      	ldr	r3, [r3, #4]
 801662a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801662e:	431d      	orrs	r5, r3
 8016630:	2005      	movs	r0, #5
 8016632:	f007 fb7f 	bl	801dd34 <nema_cl_get_space>
 8016636:	2800      	cmp	r0, #0
 8016638:	f43f af52 	beq.w	80164e0 <fill_path_even_odd+0xbb8>
 801663c:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8016640:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016644:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8016648:	f44f 734d 	mov.w	r3, #820	@ 0x334
 801664c:	f045 050a 	orr.w	r5, r5, #10
 8016650:	6245      	str	r5, [r0, #36]	@ 0x24
 8016652:	4d23      	ldr	r5, [pc, #140]	@ (80166e0 <fill_path_even_odd+0xdb8>)
 8016654:	edc0 9a01 	vstr	s19, [r0, #4]
 8016658:	ed80 aa03 	vstr	s20, [r0, #12]
 801665c:	ed80 8a05 	vstr	s16, [r0, #20]
 8016660:	edc0 8a07 	vstr	s17, [r0, #28]
 8016664:	6205      	str	r5, [r0, #32]
 8016666:	f8c0 c000 	str.w	ip, [r0]
 801666a:	6081      	str	r1, [r0, #8]
 801666c:	6102      	str	r2, [r0, #16]
 801666e:	6183      	str	r3, [r0, #24]
 8016670:	e736      	b.n	80164e0 <fill_path_even_odd+0xbb8>
 8016672:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 8016676:	2a00      	cmp	r2, #0
 8016678:	bf18      	it	ne
 801667a:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 801667e:	4b17      	ldr	r3, [pc, #92]	@ (80166dc <fill_path_even_odd+0xdb4>)
 8016680:	4014      	ands	r4, r2
 8016682:	781b      	ldrb	r3, [r3, #0]
 8016684:	2b01      	cmp	r3, #1
 8016686:	d01f      	beq.n	80166c8 <fill_path_even_odd+0xda0>
 8016688:	2005      	movs	r0, #5
 801668a:	f007 fb53 	bl	801dd34 <nema_cl_get_space>
 801668e:	2800      	cmp	r0, #0
 8016690:	f43f ad8c 	beq.w	80161ac <fill_path_even_odd+0x884>
 8016694:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8016698:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801669c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80166a0:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80166a4:	4b0e      	ldr	r3, [pc, #56]	@ (80166e0 <fill_path_even_odd+0xdb8>)
 80166a6:	f044 040a 	orr.w	r4, r4, #10
 80166aa:	6244      	str	r4, [r0, #36]	@ 0x24
 80166ac:	edc0 9a01 	vstr	s19, [r0, #4]
 80166b0:	ed80 aa03 	vstr	s20, [r0, #12]
 80166b4:	ed80 8a05 	vstr	s16, [r0, #20]
 80166b8:	edc0 8a07 	vstr	s17, [r0, #28]
 80166bc:	6007      	str	r7, [r0, #0]
 80166be:	6085      	str	r5, [r0, #8]
 80166c0:	6101      	str	r1, [r0, #16]
 80166c2:	6182      	str	r2, [r0, #24]
 80166c4:	6203      	str	r3, [r0, #32]
 80166c6:	e571      	b.n	80161ac <fill_path_even_odd+0x884>
 80166c8:	4b04      	ldr	r3, [pc, #16]	@ (80166dc <fill_path_even_odd+0xdb4>)
 80166ca:	685b      	ldr	r3, [r3, #4]
 80166cc:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80166d0:	431c      	orrs	r4, r3
 80166d2:	e7d9      	b.n	8016688 <fill_path_even_odd+0xd60>
 80166d4:	20082fb8 	.word	0x20082fb8
 80166d8:	20082fbc 	.word	0x20082fbc
 80166dc:	20000064 	.word	0x20000064
 80166e0:	ff000100 	.word	0xff000100

080166e4 <draw_with_stencil>:
 80166e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166e8:	ed2d 8b10 	vpush	{d8-d15}
 80166ec:	f8df 9380 	ldr.w	r9, [pc, #896]	@ 8016a70 <draw_with_stencil+0x38c>
 80166f0:	4604      	mov	r4, r0
 80166f2:	f8d9 0000 	ldr.w	r0, [r9]
 80166f6:	b0ad      	sub	sp, #180	@ 0xb4
 80166f8:	6883      	ldr	r3, [r0, #8]
 80166fa:	9104      	str	r1, [sp, #16]
 80166fc:	2b00      	cmp	r3, #0
 80166fe:	f000 87cf 	beq.w	80176a0 <draw_with_stencil+0xfbc>
 8016702:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 8016706:	f04f 0800 	mov.w	r8, #0
 801670a:	2508      	movs	r5, #8
 801670c:	4fd6      	ldr	r7, [pc, #856]	@ (8016a68 <draw_with_stencil+0x384>)
 801670e:	68c1      	ldr	r1, [r0, #12]
 8016710:	e9cd 2801 	strd	r2, r8, [sp, #4]
 8016714:	2003      	movs	r0, #3
 8016716:	9500      	str	r5, [sp, #0]
 8016718:	f7fa fa2c 	bl	8010b74 <nema_bind_tex>
 801671c:	683a      	ldr	r2, [r7, #0]
 801671e:	f8d9 3000 	ldr.w	r3, [r9]
 8016722:	7f12      	ldrb	r2, [r2, #28]
 8016724:	4628      	mov	r0, r5
 8016726:	4542      	cmp	r2, r8
 8016728:	691a      	ldr	r2, [r3, #16]
 801672a:	695e      	ldr	r6, [r3, #20]
 801672c:	bf0c      	ite	eq
 801672e:	46c2      	moveq	sl, r8
 8016730:	f04f 3a80 	movne.w	sl, #2155905152	@ 0x80808080
 8016734:	9205      	str	r2, [sp, #20]
 8016736:	f007 fafd 	bl	801dd34 <nema_cl_get_space>
 801673a:	4603      	mov	r3, r0
 801673c:	2800      	cmp	r0, #0
 801673e:	f000 85ba 	beq.w	80172b6 <draw_with_stencil+0xbd2>
 8016742:	9a05      	ldr	r2, [sp, #20]
 8016744:	0436      	lsls	r6, r6, #16
 8016746:	3203      	adds	r2, #3
 8016748:	0892      	lsrs	r2, r2, #2
 801674a:	f8c0 a024 	str.w	sl, [r0, #36]	@ 0x24
 801674e:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8016752:	ea4f 0a82 	mov.w	sl, r2, lsl #2
 8016756:	4640      	mov	r0, r8
 8016758:	fa1f f882 	uxth.w	r8, r2
 801675c:	4332      	orrs	r2, r6
 801675e:	60da      	str	r2, [r3, #12]
 8016760:	2501      	movs	r5, #1
 8016762:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 8016766:	e9c3 2504 	strd	r2, r5, [r3, #16]
 801676a:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 801676e:	619a      	str	r2, [r3, #24]
 8016770:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8016774:	621a      	str	r2, [r3, #32]
 8016776:	f44f 7288 	mov.w	r2, #272	@ 0x110
 801677a:	629a      	str	r2, [r3, #40]	@ 0x28
 801677c:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8016780:	f04f 0e34 	mov.w	lr, #52	@ 0x34
 8016784:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 8016788:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 801678c:	f44f 7b8c 	mov.w	fp, #280	@ 0x118
 8016790:	631a      	str	r2, [r3, #48]	@ 0x30
 8016792:	fa1f fa8a 	uxth.w	sl, sl
 8016796:	4ab5      	ldr	r2, [pc, #724]	@ (8016a6c <draw_with_stencil+0x388>)
 8016798:	ea48 0806 	orr.w	r8, r8, r6
 801679c:	f04a 7a80 	orr.w	sl, sl, #16777216	@ 0x1000000
 80167a0:	f8c3 8034 	str.w	r8, [r3, #52]	@ 0x34
 80167a4:	f8c3 a004 	str.w	sl, [r3, #4]
 80167a8:	f8c3 e000 	str.w	lr, [r3]
 80167ac:	f8c3 c008 	str.w	ip, [r3, #8]
 80167b0:	f8c3 b038 	str.w	fp, [r3, #56]	@ 0x38
 80167b4:	63d9      	str	r1, [r3, #60]	@ 0x3c
 80167b6:	61da      	str	r2, [r3, #28]
 80167b8:	f7fb fc6a 	bl	8012090 <nema_enable_aa_flags>
 80167bc:	f8d9 3000 	ldr.w	r3, [r9]
 80167c0:	4680      	mov	r8, r0
 80167c2:	edd3 7a06 	vldr	s15, [r3, #24]
 80167c6:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 80167ca:	edd3 6a07 	vldr	s13, [r3, #28]
 80167ce:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80167d2:	ed93 6a08 	vldr	s12, [r3, #32]
 80167d6:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 80167da:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 80167de:	ed8d 7a1f 	vstr	s14, [sp, #124]	@ 0x7c
 80167e2:	ed93 5a0a 	vldr	s10, [r3, #40]	@ 0x28
 80167e6:	ed8d 5a20 	vstr	s10, [sp, #128]	@ 0x80
 80167ea:	ed93 4a0b 	vldr	s8, [r3, #44]	@ 0x2c
 80167ee:	ed8d 4a21 	vstr	s8, [sp, #132]	@ 0x84
 80167f2:	edd3 5a0c 	vldr	s11, [r3, #48]	@ 0x30
 80167f6:	eef4 7ac6 	vcmpe.f32	s15, s12
 80167fa:	edcd 5a22 	vstr	s11, [sp, #136]	@ 0x88
 80167fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016802:	edd3 4a0d 	vldr	s9, [r3, #52]	@ 0x34
 8016806:	edcd 4a23 	vstr	s9, [sp, #140]	@ 0x8c
 801680a:	dd7a      	ble.n	8016902 <draw_with_stencil+0x21e>
 801680c:	aa1e      	add	r2, sp, #120	@ 0x78
 801680e:	ed92 7a00 	vldr	s14, [r2]
 8016812:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801681a:	d432      	bmi.n	8016882 <draw_with_stencil+0x19e>
 801681c:	ee77 7a45 	vsub.f32	s15, s14, s10
 8016820:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016828:	f100 85f9 	bmi.w	801741e <draw_with_stencil+0xd3a>
 801682c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016834:	f100 85d4 	bmi.w	80173e0 <draw_with_stencil+0xcfc>
 8016838:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801683c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016840:	eeb0 6a47 	vmov.f32	s12, s14
 8016844:	f100 85d4 	bmi.w	80173f0 <draw_with_stencil+0xd0c>
 8016848:	eeb4 5ac6 	vcmpe.f32	s10, s12
 801684c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016850:	f340 85d6 	ble.w	8017400 <draw_with_stencil+0xd1c>
 8016854:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016858:	ed9f 6a86 	vldr	s12, [pc, #536]	@ 8016a74 <draw_with_stencil+0x390>
 801685c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016860:	bf54      	ite	pl
 8016862:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 8016866:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801686a:	eef4 7ac7 	vcmpe.f32	s15, s14
 801686e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016872:	d808      	bhi.n	8016886 <draw_with_stencil+0x1a2>
 8016874:	edd2 7a01 	vldr	s15, [r2, #4]
 8016878:	eeb4 4ae7 	vcmpe.f32	s8, s15
 801687c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016880:	d501      	bpl.n	8016886 <draw_with_stencil+0x1a2>
 8016882:	2502      	movs	r5, #2
 8016884:	aa20      	add	r2, sp, #128	@ 0x80
 8016886:	edd2 7a00 	vldr	s15, [r2]
 801688a:	eef4 5ae7 	vcmpe.f32	s11, s15
 801688e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016892:	d46a      	bmi.n	801696a <draw_with_stencil+0x286>
 8016894:	ee37 7ae5 	vsub.f32	s14, s15, s11
 8016898:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801689c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168a4:	bf48      	it	mi
 80168a6:	eeb1 7a47 	vnegmi.f32	s14, s14
 80168aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ae:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80168b2:	bf4c      	ite	mi
 80168b4:	eeb1 6a67 	vnegmi.f32	s12, s15
 80168b8:	eeb0 6a67 	vmovpl.f32	s12, s15
 80168bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168c0:	f100 8553 	bmi.w	801736a <draw_with_stencil+0xc86>
 80168c4:	eef4 5ac6 	vcmpe.f32	s11, s12
 80168c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168cc:	f340 8555 	ble.w	801737a <draw_with_stencil+0xc96>
 80168d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168d4:	ed9f 6a67 	vldr	s12, [pc, #412]	@ 8016a74 <draw_with_stencil+0x390>
 80168d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168dc:	bf4c      	ite	mi
 80168de:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 80168e2:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 80168e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80168ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ee:	d83d      	bhi.n	801696c <draw_with_stencil+0x288>
 80168f0:	edd2 7a01 	vldr	s15, [r2, #4]
 80168f4:	eef4 4a67 	vcmp.f32	s9, s15
 80168f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168fc:	bf48      	it	mi
 80168fe:	2503      	movmi	r5, #3
 8016900:	e034      	b.n	801696c <draw_with_stencil+0x288>
 8016902:	ee77 3ac6 	vsub.f32	s7, s15, s12
 8016906:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801690a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801690e:	f100 857d 	bmi.w	801740c <draw_with_stencil+0xd28>
 8016912:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801691a:	f100 8589 	bmi.w	8017430 <draw_with_stencil+0xd4c>
 801691e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016926:	eeb0 3a67 	vmov.f32	s6, s15
 801692a:	f100 8589 	bmi.w	8017440 <draw_with_stencil+0xd5c>
 801692e:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8016932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016936:	f340 858b 	ble.w	8017450 <draw_with_stencil+0xd6c>
 801693a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801693e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016942:	ed9f 6a4c 	vldr	s12, [pc, #304]	@ 8016a74 <draw_with_stencil+0x390>
 8016946:	f101 8089 	bmi.w	8017a5c <draw_with_stencil+0x1378>
 801694a:	ee66 7a27 	vmul.f32	s15, s12, s15
 801694e:	eef4 3ae7 	vcmpe.f32	s7, s15
 8016952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016956:	f200 865b 	bhi.w	8017610 <draw_with_stencil+0xf2c>
 801695a:	eef4 6ac7 	vcmpe.f32	s13, s14
 801695e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016962:	f340 8655 	ble.w	8017610 <draw_with_stencil+0xf2c>
 8016966:	2501      	movs	r5, #1
 8016968:	e750      	b.n	801680c <draw_with_stencil+0x128>
 801696a:	2503      	movs	r5, #3
 801696c:	1cea      	adds	r2, r5, #3
 801696e:	1c69      	adds	r1, r5, #1
 8016970:	a82c      	add	r0, sp, #176	@ 0xb0
 8016972:	f002 0203 	and.w	r2, r2, #3
 8016976:	f001 0103 	and.w	r1, r1, #3
 801697a:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801697e:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
 8016982:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016986:	ed55 4a10 	vldr	s9, [r5, #-64]	@ 0xffffffc0
 801698a:	ed15 5a0f 	vldr	s10, [r5, #-60]	@ 0xffffffc4
 801698e:	ed52 7a10 	vldr	s15, [r2, #-64]	@ 0xffffffc0
 8016992:	ed51 5a0f 	vldr	s11, [r1, #-60]	@ 0xffffffc4
 8016996:	ed11 7a10 	vldr	s14, [r1, #-64]	@ 0xffffffc0
 801699a:	ed12 6a0f 	vldr	s12, [r2, #-60]	@ 0xffffffc4
 801699e:	ee77 7ae4 	vsub.f32	s15, s15, s9
 80169a2:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80169a6:	ee37 7a64 	vsub.f32	s14, s14, s9
 80169aa:	ee36 6a45 	vsub.f32	s12, s12, s10
 80169ae:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80169b2:	ee27 7a06 	vmul.f32	s14, s14, s12
 80169b6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80169ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80169be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169c2:	dd19      	ble.n	80169f8 <draw_with_stencil+0x314>
 80169c4:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 80169c8:	aa1c      	add	r2, sp, #112	@ 0x70
 80169ca:	c903      	ldmia	r1, {r0, r1}
 80169cc:	e882 0003 	stmia.w	r2, {r0, r1}
 80169d0:	f103 0128 	add.w	r1, r3, #40	@ 0x28
 80169d4:	aa1e      	add	r2, sp, #120	@ 0x78
 80169d6:	c903      	ldmia	r1, {r0, r1}
 80169d8:	e882 0003 	stmia.w	r2, {r0, r1}
 80169dc:	f103 0120 	add.w	r1, r3, #32
 80169e0:	aa20      	add	r2, sp, #128	@ 0x80
 80169e2:	c903      	ldmia	r1, {r0, r1}
 80169e4:	e882 0003 	stmia.w	r2, {r0, r1}
 80169e8:	3318      	adds	r3, #24
 80169ea:	aa22      	add	r2, sp, #136	@ 0x88
 80169ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 80169f0:	e882 0003 	stmia.w	r2, {r0, r1}
 80169f4:	eddd 6a1d 	vldr	s13, [sp, #116]	@ 0x74
 80169f8:	eddd 7a1f 	vldr	s15, [sp, #124]	@ 0x7c
 80169fc:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016a00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a04:	d438      	bmi.n	8016a78 <draw_with_stencil+0x394>
 8016a06:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8016a0a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016a0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a12:	f100 84dc 	bmi.w	80173ce <draw_with_stencil+0xcea>
 8016a16:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016a1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a1e:	f100 84c0 	bmi.w	80173a2 <draw_with_stencil+0xcbe>
 8016a22:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016a26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a2a:	eef0 5a66 	vmov.f32	s11, s13
 8016a2e:	f100 84c0 	bmi.w	80173b2 <draw_with_stencil+0xcce>
 8016a32:	eef4 7ae5 	vcmpe.f32	s15, s11
 8016a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a3a:	f300 86ae 	bgt.w	801779a <draw_with_stencil+0x10b6>
 8016a3e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8016a74 <draw_with_stencil+0x390>
 8016a42:	ee27 7a87 	vmul.f32	s14, s15, s14
 8016a46:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016a4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a4e:	db08      	blt.n	8016a62 <draw_with_stencil+0x37e>
 8016a50:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016a54:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 8016a58:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a60:	d40a      	bmi.n	8016a78 <draw_with_stencil+0x394>
 8016a62:	2300      	movs	r3, #0
 8016a64:	ad1c      	add	r5, sp, #112	@ 0x70
 8016a66:	e009      	b.n	8016a7c <draw_with_stencil+0x398>
 8016a68:	20082fac 	.word	0x20082fac
 8016a6c:	1c1f0015 	.word	0x1c1f0015
 8016a70:	20083054 	.word	0x20083054
 8016a74:	3727c5ac 	.word	0x3727c5ac
 8016a78:	2301      	movs	r3, #1
 8016a7a:	ad1e      	add	r5, sp, #120	@ 0x78
 8016a7c:	ed95 6a01 	vldr	s12, [r5, #4]
 8016a80:	ed9d 7a21 	vldr	s14, [sp, #132]	@ 0x84
 8016a84:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a8c:	dc2d      	bgt.n	8016aea <draw_with_stencil+0x406>
 8016a8e:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016a92:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016a96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a9a:	f100 8432 	bmi.w	8017302 <draw_with_stencil+0xc1e>
 8016a9e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aa6:	f100 8567 	bmi.w	8017578 <draw_with_stencil+0xe94>
 8016aaa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ab2:	eeb0 5a46 	vmov.f32	s10, s12
 8016ab6:	f100 8567 	bmi.w	8017588 <draw_with_stencil+0xea4>
 8016aba:	eeb4 7ac5 	vcmpe.f32	s14, s10
 8016abe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ac2:	f300 8650 	bgt.w	8017766 <draw_with_stencil+0x1082>
 8016ac6:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 8016a74 <draw_with_stencil+0x390>
 8016aca:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016ace:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ad6:	db0a      	blt.n	8016aee <draw_with_stencil+0x40a>
 8016ad8:	edd5 5a00 	vldr	s11, [r5]
 8016adc:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016ae0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ae8:	d501      	bpl.n	8016aee <draw_with_stencil+0x40a>
 8016aea:	2302      	movs	r3, #2
 8016aec:	ad20      	add	r5, sp, #128	@ 0x80
 8016aee:	ed95 6a01 	vldr	s12, [r5, #4]
 8016af2:	ed9d 8a23 	vldr	s16, [sp, #140]	@ 0x8c
 8016af6:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016afa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016afe:	d42f      	bmi.n	8016b60 <draw_with_stencil+0x47c>
 8016b00:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016b04:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b0c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016b10:	bf48      	it	mi
 8016b12:	eef1 5a65 	vnegmi.f32	s11, s11
 8016b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b1a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016b1e:	bf4c      	ite	mi
 8016b20:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016b24:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b2c:	f100 842b 	bmi.w	8017386 <draw_with_stencil+0xca2>
 8016b30:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b38:	f300 8656 	bgt.w	80177e8 <draw_with_stencil+0x1104>
 8016b3c:	ed1f 6a33 	vldr	s12, [pc, #-204]	@ 8016a74 <draw_with_stencil+0x390>
 8016b40:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016b44:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b4c:	d80a      	bhi.n	8016b64 <draw_with_stencil+0x480>
 8016b4e:	edd5 5a00 	vldr	s11, [r5]
 8016b52:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016b56:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b5e:	d501      	bpl.n	8016b64 <draw_with_stencil+0x480>
 8016b60:	2303      	movs	r3, #3
 8016b62:	ad22      	add	r5, sp, #136	@ 0x88
 8016b64:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b6c:	f100 816c 	bmi.w	8016e48 <draw_with_stencil+0x764>
 8016b70:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016b74:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016b78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b7c:	f100 853f 	bmi.w	80175fe <draw_with_stencil+0xf1a>
 8016b80:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b88:	f100 8523 	bmi.w	80175d2 <draw_with_stencil+0xeee>
 8016b8c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b94:	eeb0 5a66 	vmov.f32	s10, s13
 8016b98:	f100 8523 	bmi.w	80175e2 <draw_with_stencil+0xefe>
 8016b9c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8016ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ba4:	f100 8606 	bmi.w	80177b4 <draw_with_stencil+0x10d0>
 8016ba8:	ed1f 6a4e 	vldr	s12, [pc, #-312]	@ 8016a74 <draw_with_stencil+0x390>
 8016bac:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016bb0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bb8:	d809      	bhi.n	8016bce <draw_with_stencil+0x4ea>
 8016bba:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016bbe:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016bc2:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bca:	f100 813d 	bmi.w	8016e48 <draw_with_stencil+0x764>
 8016bce:	eef0 8a66 	vmov.f32	s17, s13
 8016bd2:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bda:	f10d 0e70 	add.w	lr, sp, #112	@ 0x70
 8016bde:	f340 813d 	ble.w	8016e5c <draw_with_stencil+0x778>
 8016be2:	eef0 8a47 	vmov.f32	s17, s14
 8016be6:	f10d 0e80 	add.w	lr, sp, #128	@ 0x80
 8016bea:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8016bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bf2:	d42f      	bmi.n	8016c54 <draw_with_stencil+0x570>
 8016bf4:	ee78 5ac8 	vsub.f32	s11, s17, s16
 8016bf8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c00:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016c04:	bf48      	it	mi
 8016c06:	eef1 5a65 	vnegmi.f32	s11, s11
 8016c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c0e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016c12:	bf4c      	ite	mi
 8016c14:	eeb1 5a68 	vnegmi.f32	s10, s17
 8016c18:	eeb0 5a68 	vmovpl.f32	s10, s17
 8016c1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c20:	f100 838d 	bmi.w	801733e <draw_with_stencil+0xc5a>
 8016c24:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c2c:	f300 85cf 	bgt.w	80177ce <draw_with_stencil+0x10ea>
 8016c30:	ed1f 6a70 	vldr	s12, [pc, #-448]	@ 8016a74 <draw_with_stencil+0x390>
 8016c34:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016c38:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016c3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c40:	d80c      	bhi.n	8016c5c <draw_with_stencil+0x578>
 8016c42:	edde 5a00 	vldr	s11, [lr]
 8016c46:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016c4a:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c52:	dd03      	ble.n	8016c5c <draw_with_stencil+0x578>
 8016c54:	eef0 8a48 	vmov.f32	s17, s16
 8016c58:	f10d 0e88 	add.w	lr, sp, #136	@ 0x88
 8016c5c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016c60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c64:	f300 812b 	bgt.w	8016ebe <draw_with_stencil+0x7da>
 8016c68:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016c6c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016c70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c74:	f100 8477 	bmi.w	8017566 <draw_with_stencil+0xe82>
 8016c78:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016c7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c80:	f100 845b 	bmi.w	801753a <draw_with_stencil+0xe56>
 8016c84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c8c:	eeb0 5a66 	vmov.f32	s10, s13
 8016c90:	f100 845b 	bmi.w	801754a <draw_with_stencil+0xe66>
 8016c94:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016c98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c9c:	f300 8522 	bgt.w	80176e4 <draw_with_stencil+0x1000>
 8016ca0:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8016a74 <draw_with_stencil+0x390>
 8016ca4:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016ca8:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cb0:	db09      	blt.n	8016cc6 <draw_with_stencil+0x5e2>
 8016cb2:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016cb6:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016cba:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016cbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cc2:	f300 80fc 	bgt.w	8016ebe <draw_with_stencil+0x7da>
 8016cc6:	a91c      	add	r1, sp, #112	@ 0x70
 8016cc8:	ed91 6a01 	vldr	s12, [r1, #4]
 8016ccc:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016cd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cd4:	f04f 0000 	mov.w	r0, #0
 8016cd8:	f340 80fc 	ble.w	8016ed4 <draw_with_stencil+0x7f0>
 8016cdc:	2002      	movs	r0, #2
 8016cde:	a920      	add	r1, sp, #128	@ 0x80
 8016ce0:	ed91 6a01 	vldr	s12, [r1, #4]
 8016ce4:	eeb4 6ac8 	vcmpe.f32	s12, s16
 8016ce8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cec:	d42f      	bmi.n	8016d4e <draw_with_stencil+0x66a>
 8016cee:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016cf2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016cf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cfa:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016cfe:	bf48      	it	mi
 8016d00:	eef1 5a65 	vnegmi.f32	s11, s11
 8016d04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d08:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016d0c:	bf4c      	ite	mi
 8016d0e:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016d12:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d1a:	f100 8443 	bmi.w	80175a4 <draw_with_stencil+0xec0>
 8016d1e:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d26:	f300 8504 	bgt.w	8017732 <draw_with_stencil+0x104e>
 8016d2a:	ed1f 6aae 	vldr	s12, [pc, #-696]	@ 8016a74 <draw_with_stencil+0x390>
 8016d2e:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016d32:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d3a:	d80a      	bhi.n	8016d52 <draw_with_stencil+0x66e>
 8016d3c:	edd1 5a00 	vldr	s11, [r1]
 8016d40:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016d44:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d4c:	d501      	bpl.n	8016d52 <draw_with_stencil+0x66e>
 8016d4e:	2003      	movs	r0, #3
 8016d50:	a922      	add	r1, sp, #136	@ 0x88
 8016d52:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d5a:	f300 80ef 	bgt.w	8016f3c <draw_with_stencil+0x858>
 8016d5e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016d62:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d6a:	f100 83a6 	bmi.w	80174ba <draw_with_stencil+0xdd6>
 8016d6e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d76:	f100 838b 	bmi.w	8017490 <draw_with_stencil+0xdac>
 8016d7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016d7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d82:	eeb0 5a66 	vmov.f32	s10, s13
 8016d86:	f100 838b 	bmi.w	80174a0 <draw_with_stencil+0xdbc>
 8016d8a:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016d8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d92:	f300 84db 	bgt.w	801774c <draw_with_stencil+0x1068>
 8016d96:	ed1f 6ac9 	vldr	s12, [pc, #-804]	@ 8016a74 <draw_with_stencil+0x390>
 8016d9a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016d9e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016da6:	db09      	blt.n	8016dbc <draw_with_stencil+0x6d8>
 8016da8:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016dac:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016db0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016db4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016db8:	f100 80c0 	bmi.w	8016f3c <draw_with_stencil+0x858>
 8016dbc:	eef0 7a66 	vmov.f32	s15, s13
 8016dc0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016dc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dc8:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 8016dcc:	f340 80be 	ble.w	8016f4c <draw_with_stencil+0x868>
 8016dd0:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016dd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dd8:	f10d 0c80 	add.w	ip, sp, #128	@ 0x80
 8016ddc:	f300 80ed 	bgt.w	8016fba <draw_with_stencil+0x8d6>
 8016de0:	ee77 6a48 	vsub.f32	s13, s14, s16
 8016de4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016de8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dec:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016df0:	bf48      	it	mi
 8016df2:	eef1 6a66 	vnegmi.f32	s13, s13
 8016df6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dfa:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016dfe:	bf4c      	ite	mi
 8016e00:	eeb1 6a47 	vnegmi.f32	s12, s14
 8016e04:	eeb0 6a47 	vmovpl.f32	s12, s14
 8016e08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e0c:	f100 8373 	bmi.w	80174f6 <draw_with_stencil+0xe12>
 8016e10:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016e14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e18:	f300 847e 	bgt.w	8017718 <draw_with_stencil+0x1034>
 8016e1c:	ed5f 7aeb 	vldr	s15, [pc, #-940]	@ 8016a74 <draw_with_stencil+0x390>
 8016e20:	ee68 7a27 	vmul.f32	s15, s16, s15
 8016e24:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016e28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e2c:	d809      	bhi.n	8016e42 <draw_with_stencil+0x75e>
 8016e2e:	eddc 6a00 	vldr	s13, [ip]
 8016e32:	eddd 7a22 	vldr	s15, [sp, #136]	@ 0x88
 8016e36:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016e3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e3e:	f300 80bc 	bgt.w	8016fba <draw_with_stencil+0x8d6>
 8016e42:	eeb0 8a47 	vmov.f32	s16, s14
 8016e46:	e0ba      	b.n	8016fbe <draw_with_stencil+0x8da>
 8016e48:	eef0 8a67 	vmov.f32	s17, s15
 8016e4c:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016e50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e54:	f10d 0e78 	add.w	lr, sp, #120	@ 0x78
 8016e58:	f73f aec3 	bgt.w	8016be2 <draw_with_stencil+0x4fe>
 8016e5c:	ee78 5ac7 	vsub.f32	s11, s17, s14
 8016e60:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e68:	f100 8276 	bmi.w	8017358 <draw_with_stencil+0xc74>
 8016e6c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016e70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e74:	f100 824e 	bmi.w	8017314 <draw_with_stencil+0xc30>
 8016e78:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e80:	eeb0 5a68 	vmov.f32	s10, s17
 8016e84:	f100 824e 	bmi.w	8017324 <draw_with_stencil+0xc40>
 8016e88:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016e8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e90:	f100 8435 	bmi.w	80176fe <draw_with_stencil+0x101a>
 8016e94:	ed9f 6a28 	vldr	s12, [pc, #160]	@ 8016f38 <draw_with_stencil+0x854>
 8016e98:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016e9c:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ea4:	f63f aea1 	bhi.w	8016bea <draw_with_stencil+0x506>
 8016ea8:	edde 5a00 	vldr	s11, [lr]
 8016eac:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016eb0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016eb8:	f73f ae93 	bgt.w	8016be2 <draw_with_stencil+0x4fe>
 8016ebc:	e695      	b.n	8016bea <draw_with_stencil+0x506>
 8016ebe:	a91e      	add	r1, sp, #120	@ 0x78
 8016ec0:	ed91 6a01 	vldr	s12, [r1, #4]
 8016ec4:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016ec8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ecc:	f04f 0001 	mov.w	r0, #1
 8016ed0:	f73f af04 	bgt.w	8016cdc <draw_with_stencil+0x5f8>
 8016ed4:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016ed8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016edc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ee0:	f100 836e 	bmi.w	80175c0 <draw_with_stencil+0xedc>
 8016ee4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016ee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016eec:	f100 8310 	bmi.w	8017510 <draw_with_stencil+0xe2c>
 8016ef0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ef8:	eeb0 5a46 	vmov.f32	s10, s12
 8016efc:	f100 8310 	bmi.w	8017520 <draw_with_stencil+0xe3c>
 8016f00:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f08:	f100 843a 	bmi.w	8017780 <draw_with_stencil+0x109c>
 8016f0c:	ed9f 6a0a 	vldr	s12, [pc, #40]	@ 8016f38 <draw_with_stencil+0x854>
 8016f10:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016f14:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016f18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f1c:	f6ff aee0 	blt.w	8016ce0 <draw_with_stencil+0x5fc>
 8016f20:	ed91 6a00 	vldr	s12, [r1]
 8016f24:	eddd 5a20 	vldr	s11, [sp, #128]	@ 0x80
 8016f28:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016f2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f30:	f73f aed4 	bgt.w	8016cdc <draw_with_stencil+0x5f8>
 8016f34:	e6d4      	b.n	8016ce0 <draw_with_stencil+0x5fc>
 8016f36:	bf00      	nop
 8016f38:	3727c5ac 	.word	0x3727c5ac
 8016f3c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016f40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f44:	f10d 0c78 	add.w	ip, sp, #120	@ 0x78
 8016f48:	f73f af42 	bgt.w	8016dd0 <draw_with_stencil+0x6ec>
 8016f4c:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8016f50:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016f54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f58:	f100 827e 	bmi.w	8017458 <draw_with_stencil+0xd74>
 8016f5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f64:	f100 82b2 	bmi.w	80174cc <draw_with_stencil+0xde8>
 8016f68:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016f6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f70:	eef0 5a67 	vmov.f32	s11, s15
 8016f74:	f100 82b2 	bmi.w	80174dc <draw_with_stencil+0xdf8>
 8016f78:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8016f7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f80:	f300 843f 	bgt.w	8017802 <draw_with_stencil+0x111e>
 8016f84:	ed5f 6a14 	vldr	s13, [pc, #-80]	@ 8016f38 <draw_with_stencil+0x854>
 8016f88:	ee67 6a26 	vmul.f32	s13, s14, s13
 8016f8c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8016f90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f94:	db09      	blt.n	8016faa <draw_with_stencil+0x8c6>
 8016f96:	eddc 6a00 	vldr	s13, [ip]
 8016f9a:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016f9e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8016fa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fa6:	f53f af13 	bmi.w	8016dd0 <draw_with_stencil+0x6ec>
 8016faa:	eeb0 7a67 	vmov.f32	s14, s15
 8016fae:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fb6:	f77f af13 	ble.w	8016de0 <draw_with_stencil+0x6fc>
 8016fba:	f10d 0c88 	add.w	ip, sp, #136	@ 0x88
 8016fbe:	1c5a      	adds	r2, r3, #1
 8016fc0:	f002 0203 	and.w	r2, r2, #3
 8016fc4:	f10d 0ab0 	add.w	sl, sp, #176	@ 0xb0
 8016fc8:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8016fcc:	4575      	cmp	r5, lr
 8016fce:	ed52 fa10 	vldr	s31, [r2, #-64]	@ 0xffffffc0
 8016fd2:	ed52 da0f 	vldr	s27, [r2, #-60]	@ 0xffffffc4
 8016fd6:	ed9e ba00 	vldr	s22, [lr]
 8016fda:	f000 8349 	beq.w	8017670 <draw_with_stencil+0xf8c>
 8016fde:	1c9a      	adds	r2, r3, #2
 8016fe0:	f002 0203 	and.w	r2, r2, #3
 8016fe4:	ab2c      	add	r3, sp, #176	@ 0xb0
 8016fe6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8016fea:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8016fee:	ed12 aa10 	vldr	s20, [r2, #-64]	@ 0xffffffc0
 8016ff2:	ed95 9a00 	vldr	s18, [r5]
 8016ff6:	ee3a aa67 	vsub.f32	s20, s20, s15
 8016ffa:	ee39 9a27 	vadd.f32	s18, s18, s15
 8016ffe:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017002:	ed12 da0f 	vldr	s26, [r2, #-60]	@ 0xffffffc4
 8017006:	ee2a aa27 	vmul.f32	s20, s20, s15
 801700a:	ee29 9a27 	vmul.f32	s18, s18, s15
 801700e:	ed95 ea01 	vldr	s28, [r5, #4]
 8017012:	1cc3      	adds	r3, r0, #3
 8017014:	f003 0303 	and.w	r3, r3, #3
 8017018:	aa2c      	add	r2, sp, #176	@ 0xb0
 801701a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801701e:	4561      	cmp	r1, ip
 8017020:	ed13 ca10 	vldr	s24, [r3, #-64]	@ 0xffffffc0
 8017024:	ed53 ca0f 	vldr	s25, [r3, #-60]	@ 0xffffffc4
 8017028:	eddc ba00 	vldr	s23, [ip]
 801702c:	f000 8342 	beq.w	80176b4 <draw_with_stencil+0xfd0>
 8017030:	1c83      	adds	r3, r0, #2
 8017032:	f003 0303 	and.w	r3, r3, #3
 8017036:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017038:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801703c:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8017040:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8017044:	edd1 9a00 	vldr	s19, [r1]
 8017048:	ee7a aae7 	vsub.f32	s21, s21, s15
 801704c:	ee79 9aa7 	vadd.f32	s19, s19, s15
 8017050:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017054:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 8017058:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801705c:	ee69 9aa7 	vmul.f32	s19, s19, s15
 8017060:	ed91 fa01 	vldr	s30, [r1, #4]
 8017064:	2009      	movs	r0, #9
 8017066:	f006 fe65 	bl	801dd34 <nema_cl_get_space>
 801706a:	2800      	cmp	r0, #0
 801706c:	d040      	beq.n	80170f0 <draw_with_stencil+0xa0c>
 801706e:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8017072:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017076:	ee7f fa87 	vadd.f32	s31, s31, s14
 801707a:	ee3b ba47 	vsub.f32	s22, s22, s14
 801707e:	ee6f faa7 	vmul.f32	s31, s31, s15
 8017082:	ee2b ba27 	vmul.f32	s22, s22, s15
 8017086:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 801708a:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801708e:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 8017092:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017096:	ed80 9a01 	vstr	s18, [r0, #4]
 801709a:	ed80 ea03 	vstr	s28, [r0, #12]
 801709e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80170a2:	f44f 7550 	mov.w	r5, #832	@ 0x340
 80170a6:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80170aa:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80170ae:	edc0 da07 	vstr	s27, [r0, #28]
 80170b2:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 80170b6:	ed80 da0b 	vstr	s26, [r0, #44]	@ 0x2c
 80170ba:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 80170be:	edc0 fa05 	vstr	s31, [r0, #20]
 80170c2:	ed80 ba0d 	vstr	s22, [r0, #52]	@ 0x34
 80170c6:	f8c0 e010 	str.w	lr, [r0, #16]
 80170ca:	f8df e3b8 	ldr.w	lr, [pc, #952]	@ 8017484 <draw_with_stencil+0xda0>
 80170ce:	f8c0 b000 	str.w	fp, [r0]
 80170d2:	f8c0 a008 	str.w	sl, [r0, #8]
 80170d6:	f8c0 c018 	str.w	ip, [r0, #24]
 80170da:	f8de c010 	ldr.w	ip, [lr, #16]
 80170de:	6281      	str	r1, [r0, #40]	@ 0x28
 80170e0:	49e2      	ldr	r1, [pc, #904]	@ (801746c <draw_with_stencil+0xd88>)
 80170e2:	6205      	str	r5, [r0, #32]
 80170e4:	f04c 0505 	orr.w	r5, ip, #5
 80170e8:	6445      	str	r5, [r0, #68]	@ 0x44
 80170ea:	6302      	str	r2, [r0, #48]	@ 0x30
 80170ec:	6383      	str	r3, [r0, #56]	@ 0x38
 80170ee:	6401      	str	r1, [r0, #64]	@ 0x40
 80170f0:	2009      	movs	r0, #9
 80170f2:	f006 fe1f 	bl	801dd34 <nema_cl_get_space>
 80170f6:	2800      	cmp	r0, #0
 80170f8:	d040      	beq.n	801717c <draw_with_stencil+0xa98>
 80170fa:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 80170fe:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017102:	ee7b bac7 	vsub.f32	s23, s23, s14
 8017106:	ee3c ca07 	vadd.f32	s24, s24, s14
 801710a:	ee6b baa7 	vmul.f32	s23, s23, s15
 801710e:	ee2c ca27 	vmul.f32	s24, s24, s15
 8017112:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8017116:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801711a:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801711e:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017122:	edc0 9a01 	vstr	s19, [r0, #4]
 8017126:	ed80 fa03 	vstr	s30, [r0, #12]
 801712a:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801712e:	f44f 7550 	mov.w	r5, #832	@ 0x340
 8017132:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017136:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801713a:	ed80 8a07 	vstr	s16, [r0, #28]
 801713e:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8017142:	edc0 ea0b 	vstr	s29, [r0, #44]	@ 0x2c
 8017146:	edc0 ca0f 	vstr	s25, [r0, #60]	@ 0x3c
 801714a:	edc0 ba05 	vstr	s23, [r0, #20]
 801714e:	ed80 ca0d 	vstr	s24, [r0, #52]	@ 0x34
 8017152:	f8c0 e010 	str.w	lr, [r0, #16]
 8017156:	f8df e32c 	ldr.w	lr, [pc, #812]	@ 8017484 <draw_with_stencil+0xda0>
 801715a:	f8c0 b000 	str.w	fp, [r0]
 801715e:	f8c0 a008 	str.w	sl, [r0, #8]
 8017162:	f8c0 c018 	str.w	ip, [r0, #24]
 8017166:	f8de c010 	ldr.w	ip, [lr, #16]
 801716a:	6281      	str	r1, [r0, #40]	@ 0x28
 801716c:	49bf      	ldr	r1, [pc, #764]	@ (801746c <draw_with_stencil+0xd88>)
 801716e:	6205      	str	r5, [r0, #32]
 8017170:	f04c 0505 	orr.w	r5, ip, #5
 8017174:	6445      	str	r5, [r0, #68]	@ 0x44
 8017176:	6302      	str	r2, [r0, #48]	@ 0x30
 8017178:	6383      	str	r3, [r0, #56]	@ 0x38
 801717a:	6401      	str	r1, [r0, #64]	@ 0x40
 801717c:	4640      	mov	r0, r8
 801717e:	f7fa ff87 	bl	8012090 <nema_enable_aa_flags>
 8017182:	f7f9 fe13 	bl	8010dac <nema_set_clip_pop>
 8017186:	9d05      	ldr	r5, [sp, #20]
 8017188:	2034      	movs	r0, #52	@ 0x34
 801718a:	b2a9      	uxth	r1, r5
 801718c:	f041 6110 	orr.w	r1, r1, #150994944	@ 0x9000000
 8017190:	f006 fe2c 	bl	801ddec <nema_cl_add_cmd>
 8017194:	4629      	mov	r1, r5
 8017196:	f8df a2f0 	ldr.w	sl, [pc, #752]	@ 8017488 <draw_with_stencil+0xda4>
 801719a:	4331      	orrs	r1, r6
 801719c:	2038      	movs	r0, #56	@ 0x38
 801719e:	f006 fe25 	bl	801ddec <nema_cl_add_cmd>
 80171a2:	4db3      	ldr	r5, [pc, #716]	@ (8017470 <draw_with_stencil+0xd8c>)
 80171a4:	f89a 3000 	ldrb.w	r3, [sl]
 80171a8:	702b      	strb	r3, [r5, #0]
 80171aa:	2b00      	cmp	r3, #0
 80171ac:	f040 8234 	bne.w	8017618 <draw_with_stencil+0xf34>
 80171b0:	4bb0      	ldr	r3, [pc, #704]	@ (8017474 <draw_with_stencil+0xd90>)
 80171b2:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8017478 <draw_with_stencil+0xd94>
 80171b6:	edd3 6a00 	vldr	s13, [r3]
 80171ba:	eef4 6ac7 	vcmpe.f32	s13, s14
 80171be:	4aaf      	ldr	r2, [pc, #700]	@ (801747c <draw_with_stencil+0xd98>)
 80171c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171c4:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80171c8:	edd2 7a00 	vldr	s15, [r2]
 80171cc:	ee67 7a86 	vmul.f32	s15, s15, s12
 80171d0:	bfc8      	it	gt
 80171d2:	eeb7 6a00 	vmovgt.f32	s12, #112	@ 0x3f800000  1.0
 80171d6:	4baa      	ldr	r3, [pc, #680]	@ (8017480 <draw_with_stencil+0xd9c>)
 80171d8:	bfc8      	it	gt
 80171da:	ee86 7a26 	vdivgt.f32	s14, s12, s13
 80171de:	ed9f 6aa6 	vldr	s12, [pc, #664]	@ 8017478 <draw_with_stencil+0xd94>
 80171e2:	edd3 6a00 	vldr	s13, [r3]
 80171e6:	eef4 6ac6 	vcmpe.f32	s13, s12
 80171ea:	bfd8      	it	le
 80171ec:	eeb7 7a00 	vmovle.f32	s14, #112	@ 0x3f800000  1.0
 80171f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171f4:	bfca      	itet	gt
 80171f6:	eef7 5a00 	vmovgt.f32	s11, #112	@ 0x3f800000  1.0
 80171fa:	eeb7 6a00 	vmovle.f32	s12, #112	@ 0x3f800000  1.0
 80171fe:	ee85 6aa6 	vdivgt.f32	s12, s11, s13
 8017202:	ee37 7a87 	vadd.f32	s14, s15, s14
 8017206:	ed94 2a08 	vldr	s4, [r4, #32]
 801720a:	ee77 7a86 	vadd.f32	s15, s15, s12
 801720e:	edd4 2a09 	vldr	s5, [r4, #36]	@ 0x24
 8017212:	ed94 6a04 	vldr	s12, [r4, #16]
 8017216:	edd4 6a05 	vldr	s13, [r4, #20]
 801721a:	ee37 3a07 	vadd.f32	s6, s14, s14
 801721e:	ee77 3aa7 	vadd.f32	s7, s15, s15
 8017222:	ee36 5a02 	vadd.f32	s10, s12, s4
 8017226:	ee76 5aa2 	vadd.f32	s11, s13, s5
 801722a:	ed94 4a06 	vldr	s8, [r4, #24]
 801722e:	edd4 4a07 	vldr	s9, [r4, #28]
 8017232:	ee36 6a47 	vsub.f32	s12, s12, s14
 8017236:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801723a:	ee35 5a07 	vadd.f32	s10, s10, s14
 801723e:	ee75 5aa7 	vadd.f32	s11, s11, s15
 8017242:	ee33 3a02 	vadd.f32	s6, s6, s4
 8017246:	ee73 3aa2 	vadd.f32	s7, s7, s5
 801724a:	ee34 7a07 	vadd.f32	s14, s8, s14
 801724e:	ee74 7aa7 	vadd.f32	s15, s9, s15
 8017252:	ed84 3a12 	vstr	s6, [r4, #72]	@ 0x48
 8017256:	edc4 3a13 	vstr	s7, [r4, #76]	@ 0x4c
 801725a:	ed84 5a0c 	vstr	s10, [r4, #48]	@ 0x30
 801725e:	ed84 5a0e 	vstr	s10, [r4, #56]	@ 0x38
 8017262:	ed84 6a0a 	vstr	s12, [r4, #40]	@ 0x28
 8017266:	ed84 6a10 	vstr	s12, [r4, #64]	@ 0x40
 801726a:	ed84 6a14 	vstr	s12, [r4, #80]	@ 0x50
 801726e:	ed84 7a16 	vstr	s14, [r4, #88]	@ 0x58
 8017272:	edc4 5a0f 	vstr	s11, [r4, #60]	@ 0x3c
 8017276:	edc4 5a11 	vstr	s11, [r4, #68]	@ 0x44
 801727a:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 801727e:	edc4 6a0d 	vstr	s13, [r4, #52]	@ 0x34
 8017282:	edc4 6a15 	vstr	s13, [r4, #84]	@ 0x54
 8017286:	edc4 7a17 	vstr	s15, [r4, #92]	@ 0x5c
 801728a:	683b      	ldr	r3, [r7, #0]
 801728c:	7f1b      	ldrb	r3, [r3, #28]
 801728e:	2b01      	cmp	r3, #1
 8017290:	f000 82ec 	beq.w	801786c <draw_with_stencil+0x1188>
 8017294:	f0c0 82c2 	bcc.w	801781c <draw_with_stencil+0x1138>
 8017298:	2b02      	cmp	r3, #2
 801729a:	d018      	beq.n	80172ce <draw_with_stencil+0xbea>
 801729c:	2004      	movs	r0, #4
 801729e:	f005 fbf1 	bl	801ca84 <nema_vg_set_error>
 80172a2:	2604      	movs	r6, #4
 80172a4:	4630      	mov	r0, r6
 80172a6:	f005 fbed 	bl	801ca84 <nema_vg_set_error>
 80172aa:	4630      	mov	r0, r6
 80172ac:	b02d      	add	sp, #180	@ 0xb4
 80172ae:	ecbd 8b10 	vpop	{d8-d15}
 80172b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172b6:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80172ba:	f005 fbe3 	bl	801ca84 <nema_vg_set_error>
 80172be:	f44f 7600 	mov.w	r6, #512	@ 0x200
 80172c2:	4630      	mov	r0, r6
 80172c4:	b02d      	add	sp, #180	@ 0xb4
 80172c6:	ecbd 8b10 	vpop	{d8-d15}
 80172ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172ce:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 80172d2:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 80172d6:	f006 fd89 	bl	801ddec <nema_cl_add_cmd>
 80172da:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 80172de:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 80172e2:	f006 fd83 	bl	801ddec <nema_cl_add_cmd>
 80172e6:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 80172ea:	f7fa fffd 	bl	80122e8 <nema_set_rop_blend_mode>
 80172ee:	4620      	mov	r0, r4
 80172f0:	f7fe fb1a 	bl	8015928 <fill_path_even_odd>
 80172f4:	4606      	mov	r6, r0
 80172f6:	2800      	cmp	r0, #0
 80172f8:	f000 83bb 	beq.w	8017a72 <draw_with_stencil+0x138e>
 80172fc:	f005 fbc2 	bl	801ca84 <nema_vg_set_error>
 8017300:	e7d0      	b.n	80172a4 <draw_with_stencil+0xbc0>
 8017302:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801730a:	eef1 5a65 	vneg.f32	s11, s11
 801730e:	f57f abcc 	bpl.w	8016aaa <draw_with_stencil+0x3c6>
 8017312:	e131      	b.n	8017578 <draw_with_stencil+0xe94>
 8017314:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801731c:	eeb1 5a68 	vneg.f32	s10, s17
 8017320:	f57f adb2 	bpl.w	8016e88 <draw_with_stencil+0x7a4>
 8017324:	eeb1 6a47 	vneg.f32	s12, s14
 8017328:	eeb4 6ac5 	vcmpe.f32	s12, s10
 801732c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017330:	f300 81e5 	bgt.w	80176fe <draw_with_stencil+0x101a>
 8017334:	ed9f 5a55 	vldr	s10, [pc, #340]	@ 801748c <draw_with_stencil+0xda8>
 8017338:	ee26 6a05 	vmul.f32	s12, s12, s10
 801733c:	e5ae      	b.n	8016e9c <draw_with_stencil+0x7b8>
 801733e:	eeb1 6a48 	vneg.f32	s12, s16
 8017342:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801734a:	f300 8240 	bgt.w	80177ce <draw_with_stencil+0x10ea>
 801734e:	ed9f 5a4f 	vldr	s10, [pc, #316]	@ 801748c <draw_with_stencil+0xda8>
 8017352:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017356:	e46f      	b.n	8016c38 <draw_with_stencil+0x554>
 8017358:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801735c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017360:	eef1 5a65 	vneg.f32	s11, s11
 8017364:	f57f ad88 	bpl.w	8016e78 <draw_with_stencil+0x794>
 8017368:	e7d4      	b.n	8017314 <draw_with_stencil+0xc30>
 801736a:	eef1 5a65 	vneg.f32	s11, s11
 801736e:	eef4 5ac6 	vcmpe.f32	s11, s12
 8017372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017376:	f73f aaab 	bgt.w	80168d0 <draw_with_stencil+0x1ec>
 801737a:	eddf 7a44 	vldr	s15, [pc, #272]	@ 801748c <draw_with_stencil+0xda8>
 801737e:	ee65 7aa7 	vmul.f32	s15, s11, s15
 8017382:	f7ff bab0 	b.w	80168e6 <draw_with_stencil+0x202>
 8017386:	eef1 4a48 	vneg.f32	s9, s16
 801738a:	eef4 4ac5 	vcmpe.f32	s9, s10
 801738e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017392:	f300 8229 	bgt.w	80177e8 <draw_with_stencil+0x1104>
 8017396:	ed9f 6a3d 	vldr	s12, [pc, #244]	@ 801748c <draw_with_stencil+0xda8>
 801739a:	ee24 6a86 	vmul.f32	s12, s9, s12
 801739e:	f7ff bbd1 	b.w	8016b44 <draw_with_stencil+0x460>
 80173a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80173a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173aa:	eef1 5a66 	vneg.f32	s11, s13
 80173ae:	f57f ab40 	bpl.w	8016a32 <draw_with_stencil+0x34e>
 80173b2:	eeb1 7a67 	vneg.f32	s14, s15
 80173b6:	eef4 5ac7 	vcmpe.f32	s11, s14
 80173ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173be:	f100 81ec 	bmi.w	801779a <draw_with_stencil+0x10b6>
 80173c2:	eddf 5a32 	vldr	s11, [pc, #200]	@ 801748c <draw_with_stencil+0xda8>
 80173c6:	ee27 7a25 	vmul.f32	s14, s14, s11
 80173ca:	f7ff bb3c 	b.w	8016a46 <draw_with_stencil+0x362>
 80173ce:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80173d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173d6:	eeb1 6a46 	vneg.f32	s12, s12
 80173da:	f57f ab22 	bpl.w	8016a22 <draw_with_stencil+0x33e>
 80173de:	e7e0      	b.n	80173a2 <draw_with_stencil+0xcbe>
 80173e0:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80173e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173e8:	eeb1 6a47 	vneg.f32	s12, s14
 80173ec:	f57f aa2c 	bpl.w	8016848 <draw_with_stencil+0x164>
 80173f0:	eeb1 5a45 	vneg.f32	s10, s10
 80173f4:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80173f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173fc:	f53f aa2a 	bmi.w	8016854 <draw_with_stencil+0x170>
 8017400:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 801748c <draw_with_stencil+0xda8>
 8017404:	ee25 7a07 	vmul.f32	s14, s10, s14
 8017408:	f7ff ba2f 	b.w	801686a <draw_with_stencil+0x186>
 801740c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017414:	eef1 3a63 	vneg.f32	s7, s7
 8017418:	f57f aa81 	bpl.w	801691e <draw_with_stencil+0x23a>
 801741c:	e008      	b.n	8017430 <draw_with_stencil+0xd4c>
 801741e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017426:	eef1 7a67 	vneg.f32	s15, s15
 801742a:	f57f aa05 	bpl.w	8016838 <draw_with_stencil+0x154>
 801742e:	e7d7      	b.n	80173e0 <draw_with_stencil+0xcfc>
 8017430:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017438:	eeb1 3a67 	vneg.f32	s6, s15
 801743c:	f57f aa77 	bpl.w	801692e <draw_with_stencil+0x24a>
 8017440:	eeb1 6a46 	vneg.f32	s12, s12
 8017444:	eeb4 3ac6 	vcmpe.f32	s6, s12
 8017448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801744c:	f53f aa75 	bmi.w	801693a <draw_with_stencil+0x256>
 8017450:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801748c <draw_with_stencil+0xda8>
 8017454:	f7ff ba79 	b.w	801694a <draw_with_stencil+0x266>
 8017458:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801745c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017460:	eeb1 6a46 	vneg.f32	s12, s12
 8017464:	f57f ad80 	bpl.w	8016f68 <draw_with_stencil+0x884>
 8017468:	e030      	b.n	80174cc <draw_with_stencil+0xde8>
 801746a:	bf00      	nop
 801746c:	ff000100 	.word	0xff000100
 8017470:	20082ff8 	.word	0x20082ff8
 8017474:	20082ff0 	.word	0x20082ff0
 8017478:	3a83126f 	.word	0x3a83126f
 801747c:	20000134 	.word	0x20000134
 8017480:	20082ff4 	.word	0x20082ff4
 8017484:	20000064 	.word	0x20000064
 8017488:	20082ff9 	.word	0x20082ff9
 801748c:	3727c5ac 	.word	0x3727c5ac
 8017490:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017498:	eeb1 5a66 	vneg.f32	s10, s13
 801749c:	f57f ac75 	bpl.w	8016d8a <draw_with_stencil+0x6a6>
 80174a0:	eeb1 6a67 	vneg.f32	s12, s15
 80174a4:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80174a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174ac:	f300 814e 	bgt.w	801774c <draw_with_stencil+0x1068>
 80174b0:	ed1f 5a0a 	vldr	s10, [pc, #-40]	@ 801748c <draw_with_stencil+0xda8>
 80174b4:	ee26 6a05 	vmul.f32	s12, s12, s10
 80174b8:	e471      	b.n	8016d9e <draw_with_stencil+0x6ba>
 80174ba:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80174be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174c2:	eef1 5a65 	vneg.f32	s11, s11
 80174c6:	f57f ac58 	bpl.w	8016d7a <draw_with_stencil+0x696>
 80174ca:	e7e1      	b.n	8017490 <draw_with_stencil+0xdac>
 80174cc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80174d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174d4:	eef1 5a67 	vneg.f32	s11, s15
 80174d8:	f57f ad4e 	bpl.w	8016f78 <draw_with_stencil+0x894>
 80174dc:	eef1 6a47 	vneg.f32	s13, s14
 80174e0:	eef4 6ae5 	vcmpe.f32	s13, s11
 80174e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174e8:	f300 818b 	bgt.w	8017802 <draw_with_stencil+0x111e>
 80174ec:	ed5f 5a19 	vldr	s11, [pc, #-100]	@ 801748c <draw_with_stencil+0xda8>
 80174f0:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80174f4:	e54a      	b.n	8016f8c <draw_with_stencil+0x8a8>
 80174f6:	eef1 7a48 	vneg.f32	s15, s16
 80174fa:	eef4 7ac6 	vcmpe.f32	s15, s12
 80174fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017502:	f300 8109 	bgt.w	8017718 <draw_with_stencil+0x1034>
 8017506:	ed1f 6a1f 	vldr	s12, [pc, #-124]	@ 801748c <draw_with_stencil+0xda8>
 801750a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801750e:	e489      	b.n	8016e24 <draw_with_stencil+0x740>
 8017510:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017518:	eeb1 5a46 	vneg.f32	s10, s12
 801751c:	f57f acf0 	bpl.w	8016f00 <draw_with_stencil+0x81c>
 8017520:	eef1 4a47 	vneg.f32	s9, s14
 8017524:	eef4 4ac5 	vcmpe.f32	s9, s10
 8017528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801752c:	f300 8128 	bgt.w	8017780 <draw_with_stencil+0x109c>
 8017530:	ed1f 6a2a 	vldr	s12, [pc, #-168]	@ 801748c <draw_with_stencil+0xda8>
 8017534:	ee24 6a86 	vmul.f32	s12, s9, s12
 8017538:	e4ec      	b.n	8016f14 <draw_with_stencil+0x830>
 801753a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801753e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017542:	eeb1 5a66 	vneg.f32	s10, s13
 8017546:	f57f aba5 	bpl.w	8016c94 <draw_with_stencil+0x5b0>
 801754a:	eeb1 6a67 	vneg.f32	s12, s15
 801754e:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017556:	f300 80c5 	bgt.w	80176e4 <draw_with_stencil+0x1000>
 801755a:	ed1f 5a34 	vldr	s10, [pc, #-208]	@ 801748c <draw_with_stencil+0xda8>
 801755e:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017562:	f7ff bba1 	b.w	8016ca8 <draw_with_stencil+0x5c4>
 8017566:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801756a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801756e:	eef1 5a65 	vneg.f32	s11, s11
 8017572:	f57f ab87 	bpl.w	8016c84 <draw_with_stencil+0x5a0>
 8017576:	e7e0      	b.n	801753a <draw_with_stencil+0xe56>
 8017578:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801757c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017580:	eeb1 5a46 	vneg.f32	s10, s12
 8017584:	f57f aa99 	bpl.w	8016aba <draw_with_stencil+0x3d6>
 8017588:	eef1 4a47 	vneg.f32	s9, s14
 801758c:	eeb4 5ae4 	vcmpe.f32	s10, s9
 8017590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017594:	f100 80e7 	bmi.w	8017766 <draw_with_stencil+0x1082>
 8017598:	ed1f 6a44 	vldr	s12, [pc, #-272]	@ 801748c <draw_with_stencil+0xda8>
 801759c:	ee24 6a86 	vmul.f32	s12, s9, s12
 80175a0:	f7ff ba95 	b.w	8016ace <draw_with_stencil+0x3ea>
 80175a4:	eef1 4a48 	vneg.f32	s9, s16
 80175a8:	eef4 4ac5 	vcmpe.f32	s9, s10
 80175ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175b0:	f300 80bf 	bgt.w	8017732 <draw_with_stencil+0x104e>
 80175b4:	ed1f 6a4b 	vldr	s12, [pc, #-300]	@ 801748c <draw_with_stencil+0xda8>
 80175b8:	ee24 6a86 	vmul.f32	s12, s9, s12
 80175bc:	f7ff bbb9 	b.w	8016d32 <draw_with_stencil+0x64e>
 80175c0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80175c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175c8:	eef1 5a65 	vneg.f32	s11, s11
 80175cc:	f57f ac90 	bpl.w	8016ef0 <draw_with_stencil+0x80c>
 80175d0:	e79e      	b.n	8017510 <draw_with_stencil+0xe2c>
 80175d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80175d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175da:	eeb1 5a66 	vneg.f32	s10, s13
 80175de:	f57f aadd 	bpl.w	8016b9c <draw_with_stencil+0x4b8>
 80175e2:	eeb1 6a67 	vneg.f32	s12, s15
 80175e6:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80175ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175ee:	f100 80e1 	bmi.w	80177b4 <draw_with_stencil+0x10d0>
 80175f2:	ed1f 5a5a 	vldr	s10, [pc, #-360]	@ 801748c <draw_with_stencil+0xda8>
 80175f6:	ee26 6a05 	vmul.f32	s12, s12, s10
 80175fa:	f7ff bad9 	b.w	8016bb0 <draw_with_stencil+0x4cc>
 80175fe:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017606:	eef1 5a65 	vneg.f32	s11, s11
 801760a:	f57f aabf 	bpl.w	8016b8c <draw_with_stencil+0x4a8>
 801760e:	e7e0      	b.n	80175d2 <draw_with_stencil+0xeee>
 8017610:	2500      	movs	r5, #0
 8017612:	aa1c      	add	r2, sp, #112	@ 0x70
 8017614:	f7ff b8fb 	b.w	801680e <draw_with_stencil+0x12a>
 8017618:	2007      	movs	r0, #7
 801761a:	f006 fb8b 	bl	801dd34 <nema_cl_get_space>
 801761e:	b318      	cbz	r0, 8017668 <draw_with_stencil+0xf84>
 8017620:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8017624:	6002      	str	r2, [r0, #0]
 8017626:	f44f 725a 	mov.w	r2, #872	@ 0x368
 801762a:	4b8c      	ldr	r3, [pc, #560]	@ (801785c <draw_with_stencil+0x1178>)
 801762c:	6959      	ldr	r1, [r3, #20]
 801762e:	6082      	str	r2, [r0, #8]
 8017630:	f44f 7258 	mov.w	r2, #864	@ 0x360
 8017634:	6041      	str	r1, [r0, #4]
 8017636:	6899      	ldr	r1, [r3, #8]
 8017638:	6102      	str	r2, [r0, #16]
 801763a:	f44f 7259 	mov.w	r2, #868	@ 0x364
 801763e:	60c1      	str	r1, [r0, #12]
 8017640:	6819      	ldr	r1, [r3, #0]
 8017642:	6182      	str	r2, [r0, #24]
 8017644:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8017648:	6141      	str	r1, [r0, #20]
 801764a:	6859      	ldr	r1, [r3, #4]
 801764c:	6202      	str	r2, [r0, #32]
 801764e:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8017652:	61c1      	str	r1, [r0, #28]
 8017654:	68d9      	ldr	r1, [r3, #12]
 8017656:	6282      	str	r2, [r0, #40]	@ 0x28
 8017658:	6241      	str	r1, [r0, #36]	@ 0x24
 801765a:	6919      	ldr	r1, [r3, #16]
 801765c:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8017660:	2300      	movs	r3, #0
 8017662:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8017666:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8017668:	2300      	movs	r3, #0
 801766a:	f88a 3000 	strb.w	r3, [sl]
 801766e:	e59f      	b.n	80171b0 <draw_with_stencil+0xacc>
 8017670:	3303      	adds	r3, #3
 8017672:	f003 0303 	and.w	r3, r3, #3
 8017676:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801767a:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 801767e:	ed13 aa10 	vldr	s20, [r3, #-64]	@ 0xffffffc0
 8017682:	eeb5 9a00 	vmov.f32	s18, #80	@ 0x3e800000  0.250
 8017686:	ee3a aa67 	vsub.f32	s20, s20, s15
 801768a:	ee7b 7a27 	vadd.f32	s15, s22, s15
 801768e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8017692:	ed13 da0f 	vldr	s26, [r3, #-60]	@ 0xffffffc4
 8017696:	ee27 9a89 	vmul.f32	s18, s15, s18
 801769a:	eeb0 ea68 	vmov.f32	s28, s17
 801769e:	e4b8      	b.n	8017012 <draw_with_stencil+0x92e>
 80176a0:	2602      	movs	r6, #2
 80176a2:	2002      	movs	r0, #2
 80176a4:	f005 f9ee 	bl	801ca84 <nema_vg_set_error>
 80176a8:	4630      	mov	r0, r6
 80176aa:	b02d      	add	sp, #180	@ 0xb4
 80176ac:	ecbd 8b10 	vpop	{d8-d15}
 80176b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176b4:	1c43      	adds	r3, r0, #1
 80176b6:	f003 0303 	and.w	r3, r3, #3
 80176ba:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80176be:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 80176c2:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 80176c6:	eef5 9a00 	vmov.f32	s19, #80	@ 0x3e800000  0.250
 80176ca:	ee7a aae7 	vsub.f32	s21, s21, s15
 80176ce:	ee7b 7aa7 	vadd.f32	s15, s23, s15
 80176d2:	ee6a aaa9 	vmul.f32	s21, s21, s19
 80176d6:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 80176da:	ee67 9aa9 	vmul.f32	s19, s15, s19
 80176de:	eeb0 fa48 	vmov.f32	s30, s16
 80176e2:	e4bf      	b.n	8017064 <draw_with_stencil+0x980>
 80176e4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80176e8:	ed9f 6a5d 	vldr	s12, [pc, #372]	@ 8017860 <draw_with_stencil+0x117c>
 80176ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176f0:	bf54      	ite	pl
 80176f2:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80176f6:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80176fa:	f7ff bad5 	b.w	8016ca8 <draw_with_stencil+0x5c4>
 80176fe:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017702:	ed9f 6a57 	vldr	s12, [pc, #348]	@ 8017860 <draw_with_stencil+0x117c>
 8017706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801770a:	bf54      	ite	pl
 801770c:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017710:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017714:	f7ff bbc2 	b.w	8016e9c <draw_with_stencil+0x7b8>
 8017718:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801771c:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8017860 <draw_with_stencil+0x117c>
 8017720:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017724:	bf4c      	ite	mi
 8017726:	ee67 7a67 	vnmulmi.f32	s15, s14, s15
 801772a:	ee67 7a27 	vmulpl.f32	s15, s14, s15
 801772e:	f7ff bb79 	b.w	8016e24 <draw_with_stencil+0x740>
 8017732:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017736:	ed9f 5a4a 	vldr	s10, [pc, #296]	@ 8017860 <draw_with_stencil+0x117c>
 801773a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801773e:	bf4c      	ite	mi
 8017740:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017744:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017748:	f7ff baf3 	b.w	8016d32 <draw_with_stencil+0x64e>
 801774c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017750:	ed9f 6a43 	vldr	s12, [pc, #268]	@ 8017860 <draw_with_stencil+0x117c>
 8017754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017758:	bf54      	ite	pl
 801775a:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 801775e:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8017762:	f7ff bb1c 	b.w	8016d9e <draw_with_stencil+0x6ba>
 8017766:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801776a:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8017860 <draw_with_stencil+0x117c>
 801776e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017772:	bf54      	ite	pl
 8017774:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017778:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 801777c:	f7ff b9a7 	b.w	8016ace <draw_with_stencil+0x3ea>
 8017780:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017784:	ed9f 5a36 	vldr	s10, [pc, #216]	@ 8017860 <draw_with_stencil+0x117c>
 8017788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801778c:	bf54      	ite	pl
 801778e:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017792:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017796:	f7ff bbbd 	b.w	8016f14 <draw_with_stencil+0x830>
 801779a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801779e:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8017860 <draw_with_stencil+0x117c>
 80177a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177a6:	bf54      	ite	pl
 80177a8:	ee26 7a87 	vmulpl.f32	s14, s13, s14
 80177ac:	ee26 7ac7 	vnmulmi.f32	s14, s13, s14
 80177b0:	f7ff b949 	b.w	8016a46 <draw_with_stencil+0x362>
 80177b4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80177b8:	ed9f 6a29 	vldr	s12, [pc, #164]	@ 8017860 <draw_with_stencil+0x117c>
 80177bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177c0:	bf54      	ite	pl
 80177c2:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80177c6:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80177ca:	f7ff b9f1 	b.w	8016bb0 <draw_with_stencil+0x4cc>
 80177ce:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80177d2:	ed9f 6a23 	vldr	s12, [pc, #140]	@ 8017860 <draw_with_stencil+0x117c>
 80177d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177da:	bf4c      	ite	mi
 80177dc:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 80177e0:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 80177e4:	f7ff ba28 	b.w	8016c38 <draw_with_stencil+0x554>
 80177e8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80177ec:	ed9f 5a1c 	vldr	s10, [pc, #112]	@ 8017860 <draw_with_stencil+0x117c>
 80177f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177f4:	bf4c      	ite	mi
 80177f6:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80177fa:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80177fe:	f7ff b9a1 	b.w	8016b44 <draw_with_stencil+0x460>
 8017802:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017806:	eddf 6a16 	vldr	s13, [pc, #88]	@ 8017860 <draw_with_stencil+0x117c>
 801780a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801780e:	bf54      	ite	pl
 8017810:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 8017814:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 8017818:	f7ff bbb8 	b.w	8016f8c <draw_with_stencil+0x8a8>
 801781c:	f04f 33ff 	mov.w	r3, #4294967295
 8017820:	2103      	movs	r1, #3
 8017822:	461a      	mov	r2, r3
 8017824:	480f      	ldr	r0, [pc, #60]	@ (8017864 <draw_with_stencil+0x1180>)
 8017826:	f006 fc03 	bl	801e030 <nema_set_blend>
 801782a:	f04f 30ff 	mov.w	r0, #4294967295
 801782e:	f7fa fdb9 	bl	80123a4 <nema_set_raster_color>
 8017832:	4b0d      	ldr	r3, [pc, #52]	@ (8017868 <draw_with_stencil+0x1184>)
 8017834:	4620      	mov	r0, r4
 8017836:	681b      	ldr	r3, [r3, #0]
 8017838:	2b00      	cmp	r3, #0
 801783a:	f000 8113 	beq.w	8017a64 <draw_with_stencil+0x1380>
 801783e:	f7fc ff27 	bl	8014690 <stroke_path>
 8017842:	4606      	mov	r6, r0
 8017844:	2800      	cmp	r0, #0
 8017846:	f47f ad59 	bne.w	80172fc <draw_with_stencil+0xc18>
 801784a:	f8d9 3000 	ldr.w	r3, [r9]
 801784e:	2034      	movs	r0, #52	@ 0x34
 8017850:	8a19      	ldrh	r1, [r3, #16]
 8017852:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017856:	f006 fac9 	bl	801ddec <nema_cl_add_cmd>
 801785a:	e026      	b.n	80178aa <draw_with_stencil+0x11c6>
 801785c:	20083030 	.word	0x20083030
 8017860:	3727c5ac 	.word	0x3727c5ac
 8017864:	01000001 	.word	0x01000001
 8017868:	20082fb4 	.word	0x20082fb4
 801786c:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017870:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017874:	f006 faba 	bl	801ddec <nema_cl_add_cmd>
 8017878:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 801787c:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017880:	f006 fab4 	bl	801ddec <nema_cl_add_cmd>
 8017884:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 8017888:	f7fa fd2e 	bl	80122e8 <nema_set_rop_blend_mode>
 801788c:	4620      	mov	r0, r4
 801788e:	f7fe f84b 	bl	8015928 <fill_path_even_odd>
 8017892:	4606      	mov	r6, r0
 8017894:	2800      	cmp	r0, #0
 8017896:	f47f ad31 	bne.w	80172fc <draw_with_stencil+0xc18>
 801789a:	f8d9 3000 	ldr.w	r3, [r9]
 801789e:	2034      	movs	r0, #52	@ 0x34
 80178a0:	8a19      	ldrh	r1, [r3, #16]
 80178a2:	f041 5138 	orr.w	r1, r1, #771751936	@ 0x2e000000
 80178a6:	f006 faa1 	bl	801ddec <nema_cl_add_cmd>
 80178aa:	683b      	ldr	r3, [r7, #0]
 80178ac:	f893 6048 	ldrb.w	r6, [r3, #72]	@ 0x48
 80178b0:	2e01      	cmp	r6, #1
 80178b2:	f000 8258 	beq.w	8017d66 <draw_with_stencil+0x1682>
 80178b6:	9b04      	ldr	r3, [sp, #16]
 80178b8:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80178bc:	2b00      	cmp	r3, #0
 80178be:	f040 8218 	bne.w	8017cf2 <draw_with_stencil+0x160e>
 80178c2:	683a      	ldr	r2, [r7, #0]
 80178c4:	7fd3      	ldrb	r3, [r2, #31]
 80178c6:	f003 0307 	and.w	r3, r3, #7
 80178ca:	2b03      	cmp	r3, #3
 80178cc:	f000 8244 	beq.w	8017d58 <draw_with_stencil+0x1674>
 80178d0:	2b04      	cmp	r3, #4
 80178d2:	f000 8322 	beq.w	8017f1a <draw_with_stencil+0x1836>
 80178d6:	9b04      	ldr	r3, [sp, #16]
 80178d8:	6a56      	ldr	r6, [r2, #36]	@ 0x24
 80178da:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80178de:	b2b2      	uxth	r2, r6
 80178e0:	f240 5101 	movw	r1, #1281	@ 0x501
 80178e4:	2b00      	cmp	r3, #0
 80178e6:	f000 80cd 	beq.w	8017a84 <draw_with_stencil+0x13a0>
 80178ea:	428a      	cmp	r2, r1
 80178ec:	f000 8483 	beq.w	80181f6 <draw_with_stencil+0x1b12>
 80178f0:	2b02      	cmp	r3, #2
 80178f2:	f006 020f 	and.w	r2, r6, #15
 80178f6:	f3c6 2c03 	ubfx	ip, r6, #8, #4
 80178fa:	f000 8317 	beq.w	8017f2c <draw_with_stencil+0x1848>
 80178fe:	2000      	movs	r0, #0
 8017900:	2103      	movs	r1, #3
 8017902:	2702      	movs	r7, #2
 8017904:	2301      	movs	r3, #1
 8017906:	901d      	str	r0, [sp, #116]	@ 0x74
 8017908:	48bb      	ldr	r0, [pc, #748]	@ (8017bf8 <draw_with_stencil+0x1514>)
 801790a:	901c      	str	r0, [sp, #112]	@ 0x70
 801790c:	0170      	lsls	r0, r6, #5
 801790e:	d508      	bpl.n	8017922 <draw_with_stencil+0x123e>
 8017910:	2600      	movs	r6, #0
 8017912:	a82c      	add	r0, sp, #176	@ 0xb0
 8017914:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 8017918:	463b      	mov	r3, r7
 801791a:	460f      	mov	r7, r1
 801791c:	49b7      	ldr	r1, [pc, #732]	@ (8017bfc <draw_with_stencil+0x1518>)
 801791e:	e940 6110 	strd	r6, r1, [r0, #-64]	@ 0x40
 8017922:	1f91      	subs	r1, r2, #6
 8017924:	2903      	cmp	r1, #3
 8017926:	f200 821c 	bhi.w	8017d62 <draw_with_stencil+0x167e>
 801792a:	2100      	movs	r1, #0
 801792c:	ae2c      	add	r6, sp, #176	@ 0xb0
 801792e:	48b4      	ldr	r0, [pc, #720]	@ (8017c00 <draw_with_stencil+0x151c>)
 8017930:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8017934:	4eb3      	ldr	r6, [pc, #716]	@ (8017c04 <draw_with_stencil+0x1520>)
 8017936:	e943 0110 	strd	r0, r1, [r3, #-64]	@ 0x40
 801793a:	463b      	mov	r3, r7
 801793c:	3701      	adds	r7, #1
 801793e:	48b2      	ldr	r0, [pc, #712]	@ (8017c08 <draw_with_stencil+0x1524>)
 8017940:	49b2      	ldr	r1, [pc, #712]	@ (8017c0c <draw_with_stencil+0x1528>)
 8017942:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8017946:	4311      	orrs	r1, r2
 8017948:	aa2c      	add	r2, sp, #176	@ 0xb0
 801794a:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 801794e:	e942 6110 	strd	r6, r1, [r2, #-64]	@ 0x40
 8017952:	f1bc 0f00 	cmp.w	ip, #0
 8017956:	d00a      	beq.n	801796e <draw_with_stencil+0x128a>
 8017958:	2600      	movs	r6, #0
 801795a:	f850 002c 	ldr.w	r0, [r0, ip, lsl #2]
 801795e:	4aac      	ldr	r2, [pc, #688]	@ (8017c10 <draw_with_stencil+0x152c>)
 8017960:	a92c      	add	r1, sp, #176	@ 0xb0
 8017962:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8017966:	4302      	orrs	r2, r0
 8017968:	e941 6210 	strd	r6, r2, [r1, #-64]	@ 0x40
 801796c:	1c9f      	adds	r7, r3, #2
 801796e:	4ba5      	ldr	r3, [pc, #660]	@ (8017c04 <draw_with_stencil+0x1520>)
 8017970:	49a8      	ldr	r1, [pc, #672]	@ (8017c14 <draw_with_stencil+0x1530>)
 8017972:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017974:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 8017978:	f842 3c40 	str.w	r3, [r2, #-64]
 801797c:	f842 1c3c 	str.w	r1, [r2, #-60]
 8017980:	a82c      	add	r0, sp, #176	@ 0xb0
 8017982:	49a5      	ldr	r1, [pc, #660]	@ (8017c18 <draw_with_stencil+0x1534>)
 8017984:	4aa5      	ldr	r2, [pc, #660]	@ (8017c1c <draw_with_stencil+0x1538>)
 8017986:	1c7b      	adds	r3, r7, #1
 8017988:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801798c:	2001      	movs	r0, #1
 801798e:	f843 1c40 	str.w	r1, [r3, #-64]
 8017992:	f843 2c3c 	str.w	r2, [r3, #-60]
 8017996:	f7fa fca7 	bl	80122e8 <nema_set_rop_blend_mode>
 801799a:	a81c      	add	r0, sp, #112	@ 0x70
 801799c:	1cb9      	adds	r1, r7, #2
 801799e:	2200      	movs	r2, #0
 80179a0:	f7fa fc82 	bl	80122a8 <nema_load_frag_shader>
 80179a4:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 80179a8:	f7fa fc98 	bl	80122dc <nema_set_frag_ptr>
 80179ac:	9b04      	ldr	r3, [sp, #16]
 80179ae:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80179b2:	2b04      	cmp	r3, #4
 80179b4:	f000 80a5 	beq.w	8017b02 <draw_with_stencil+0x141e>
 80179b8:	2009      	movs	r0, #9
 80179ba:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 80179be:	f8d4 802c 	ldr.w	r8, [r4, #44]	@ 0x2c
 80179c2:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80179c6:	edd4 8a0d 	vldr	s17, [r4, #52]	@ 0x34
 80179ca:	ed94 8a0e 	vldr	s16, [r4, #56]	@ 0x38
 80179ce:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80179d0:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 80179d2:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 80179d4:	f006 f9ae 	bl	801dd34 <nema_cl_get_space>
 80179d8:	b380      	cbz	r0, 8017a3c <draw_with_stencil+0x1358>
 80179da:	f44f 734c 	mov.w	r3, #816	@ 0x330
 80179de:	f8c0 9004 	str.w	r9, [r0, #4]
 80179e2:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 80179e6:	f44f 7949 	mov.w	r9, #804	@ 0x324
 80179ea:	f8c0 800c 	str.w	r8, [r0, #12]
 80179ee:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 80179f2:	f44f 784d 	mov.w	r8, #820	@ 0x334
 80179f6:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 80179fa:	f44f 7154 	mov.w	r1, #848	@ 0x350
 80179fe:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017a02:	ed80 9a05 	vstr	s18, [r0, #20]
 8017a06:	edc0 8a07 	vstr	s17, [r0, #28]
 8017a0a:	ed80 8a09 	vstr	s16, [r0, #36]	@ 0x24
 8017a0e:	6103      	str	r3, [r0, #16]
 8017a10:	4b83      	ldr	r3, [pc, #524]	@ (8017c20 <draw_with_stencil+0x153c>)
 8017a12:	f8c0 b000 	str.w	fp, [r0]
 8017a16:	f8c0 9008 	str.w	r9, [r0, #8]
 8017a1a:	691b      	ldr	r3, [r3, #16]
 8017a1c:	62c7      	str	r7, [r0, #44]	@ 0x2c
 8017a1e:	4f81      	ldr	r7, [pc, #516]	@ (8017c24 <draw_with_stencil+0x1540>)
 8017a20:	f043 0305 	orr.w	r3, r3, #5
 8017a24:	6346      	str	r6, [r0, #52]	@ 0x34
 8017a26:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017a28:	6443      	str	r3, [r0, #68]	@ 0x44
 8017a2a:	f8c0 8018 	str.w	r8, [r0, #24]
 8017a2e:	f8c0 e020 	str.w	lr, [r0, #32]
 8017a32:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017a36:	6301      	str	r1, [r0, #48]	@ 0x30
 8017a38:	6382      	str	r2, [r0, #56]	@ 0x38
 8017a3a:	6407      	str	r7, [r0, #64]	@ 0x40
 8017a3c:	782e      	ldrb	r6, [r5, #0]
 8017a3e:	2e00      	cmp	r6, #0
 8017a40:	f43f ac3f 	beq.w	80172c2 <draw_with_stencil+0xbde>
 8017a44:	2101      	movs	r1, #1
 8017a46:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8017a4a:	f006 f9cf 	bl	801ddec <nema_cl_add_cmd>
 8017a4e:	2300      	movs	r3, #0
 8017a50:	782a      	ldrb	r2, [r5, #0]
 8017a52:	461e      	mov	r6, r3
 8017a54:	702b      	strb	r3, [r5, #0]
 8017a56:	f88a 2000 	strb.w	r2, [sl]
 8017a5a:	e432      	b.n	80172c2 <draw_with_stencil+0xbde>
 8017a5c:	ee67 7ac6 	vnmul.f32	s15, s15, s12
 8017a60:	f7fe bf75 	b.w	801694e <draw_with_stencil+0x26a>
 8017a64:	f7fb fe50 	bl	8013708 <stroke_thin_path>
 8017a68:	4606      	mov	r6, r0
 8017a6a:	2800      	cmp	r0, #0
 8017a6c:	f43f aeed 	beq.w	801784a <draw_with_stencil+0x1166>
 8017a70:	e444      	b.n	80172fc <draw_with_stencil+0xc18>
 8017a72:	f8d9 3000 	ldr.w	r3, [r9]
 8017a76:	2034      	movs	r0, #52	@ 0x34
 8017a78:	8a19      	ldrh	r1, [r3, #16]
 8017a7a:	f041 513c 	orr.w	r1, r1, #788529152	@ 0x2f000000
 8017a7e:	f006 f9b5 	bl	801ddec <nema_cl_add_cmd>
 8017a82:	e712      	b.n	80178aa <draw_with_stencil+0x11c6>
 8017a84:	428a      	cmp	r2, r1
 8017a86:	f000 8232 	beq.w	8017eee <draw_with_stencil+0x180a>
 8017a8a:	495f      	ldr	r1, [pc, #380]	@ (8017c08 <draw_with_stencil+0x1524>)
 8017a8c:	f006 020f 	and.w	r2, r6, #15
 8017a90:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017a94:	4a5d      	ldr	r2, [pc, #372]	@ (8017c0c <draw_with_stencil+0x1528>)
 8017a96:	4f64      	ldr	r7, [pc, #400]	@ (8017c28 <draw_with_stencil+0x1544>)
 8017a98:	4302      	orrs	r2, r0
 8017a9a:	4864      	ldr	r0, [pc, #400]	@ (8017c2c <draw_with_stencil+0x1548>)
 8017a9c:	f3c6 2603 	ubfx	r6, r6, #8, #4
 8017aa0:	e9cd 321e 	strd	r3, r2, [sp, #120]	@ 0x78
 8017aa4:	e9cd 701c 	strd	r7, r0, [sp, #112]	@ 0x70
 8017aa8:	2e00      	cmp	r6, #0
 8017aaa:	f000 823b 	beq.w	8017f24 <draw_with_stencil+0x1840>
 8017aae:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8017ab2:	4a57      	ldr	r2, [pc, #348]	@ (8017c10 <draw_with_stencil+0x152c>)
 8017ab4:	9320      	str	r3, [sp, #128]	@ 0x80
 8017ab6:	430a      	orrs	r2, r1
 8017ab8:	9221      	str	r2, [sp, #132]	@ 0x84
 8017aba:	2605      	movs	r6, #5
 8017abc:	2304      	movs	r3, #4
 8017abe:	2203      	movs	r2, #3
 8017ac0:	af2c      	add	r7, sp, #176	@ 0xb0
 8017ac2:	4950      	ldr	r1, [pc, #320]	@ (8017c04 <draw_with_stencil+0x1520>)
 8017ac4:	4853      	ldr	r0, [pc, #332]	@ (8017c14 <draw_with_stencil+0x1530>)
 8017ac6:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8017aca:	f842 1c40 	str.w	r1, [r2, #-64]
 8017ace:	f842 0c3c 	str.w	r0, [r2, #-60]
 8017ad2:	4951      	ldr	r1, [pc, #324]	@ (8017c18 <draw_with_stencil+0x1534>)
 8017ad4:	4a51      	ldr	r2, [pc, #324]	@ (8017c1c <draw_with_stencil+0x1538>)
 8017ad6:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 8017ada:	2001      	movs	r0, #1
 8017adc:	e943 1210 	strd	r1, r2, [r3, #-64]	@ 0x40
 8017ae0:	f7fa fc02 	bl	80122e8 <nema_set_rop_blend_mode>
 8017ae4:	4631      	mov	r1, r6
 8017ae6:	2200      	movs	r2, #0
 8017ae8:	a81c      	add	r0, sp, #112	@ 0x70
 8017aea:	f7fa fbdd 	bl	80122a8 <nema_load_frag_shader>
 8017aee:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017af2:	f7fa fbf3 	bl	80122dc <nema_set_frag_ptr>
 8017af6:	4b4e      	ldr	r3, [pc, #312]	@ (8017c30 <draw_with_stencil+0x154c>)
 8017af8:	2002      	movs	r0, #2
 8017afa:	6819      	ldr	r1, [r3, #0]
 8017afc:	f7f9 f8f4 	bl	8010ce8 <nema_set_const_reg>
 8017b00:	e754      	b.n	80179ac <draw_with_stencil+0x12c8>
 8017b02:	f7f9 f931 	bl	8010d68 <nema_supports_clip2>
 8017b06:	9b04      	ldr	r3, [sp, #16]
 8017b08:	9a04      	ldr	r2, [sp, #16]
 8017b0a:	edd3 9a32 	vldr	s19, [r3, #200]	@ 0xc8
 8017b0e:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8017b12:	f8d9 3000 	ldr.w	r3, [r9]
 8017b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b1a:	edd3 7a04 	vldr	s15, [r3, #16]
 8017b1e:	bf48      	it	mi
 8017b20:	eddf 9a44 	vldrmi	s19, [pc, #272]	@ 8017c34 <draw_with_stencil+0x1550>
 8017b24:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017b28:	ed92 9a33 	vldr	s18, [r2, #204]	@ 0xcc
 8017b2c:	eeb4 7a69 	vcmp.f32	s14, s19
 8017b30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b34:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017b38:	bf48      	it	mi
 8017b3a:	eef0 9a47 	vmovmi.f32	s19, s14
 8017b3e:	edd3 7a05 	vldr	s15, [r3, #20]
 8017b42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b4a:	bf48      	it	mi
 8017b4c:	ed9f 9a39 	vldrmi	s18, [pc, #228]	@ 8017c34 <draw_with_stencil+0x1550>
 8017b50:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8017b54:	eef4 7a49 	vcmp.f32	s15, s18
 8017b58:	ee37 7a69 	vsub.f32	s14, s14, s19
 8017b5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b60:	ee77 8a08 	vadd.f32	s17, s14, s16
 8017b64:	bf48      	it	mi
 8017b66:	eeb0 9a67 	vmovmi.f32	s18, s15
 8017b6a:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b6e:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8017b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b76:	4606      	mov	r6, r0
 8017b78:	ee37 8a88 	vadd.f32	s16, s15, s16
 8017b7c:	dd05      	ble.n	8017b8a <draw_with_stencil+0x14a6>
 8017b7e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b86:	f300 82c8 	bgt.w	801811a <draw_with_stencil+0x1a36>
 8017b8a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b8e:	ee79 8aa7 	vadd.f32	s17, s19, s15
 8017b92:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b9a:	f340 81d7 	ble.w	8017f4c <draw_with_stencil+0x1868>
 8017b9e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017ba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ba6:	f300 8255 	bgt.w	8018054 <draw_with_stencil+0x1970>
 8017baa:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017bae:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017bb2:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017bb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bba:	f300 81d9 	bgt.w	8017f70 <draw_with_stencil+0x188c>
 8017bbe:	f8d9 3000 	ldr.w	r3, [r9]
 8017bc2:	ed93 8a04 	vldr	s16, [r3, #16]
 8017bc6:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017bca:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017bce:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017bd2:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017bd6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017bda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bde:	dd04      	ble.n	8017bea <draw_with_stencil+0x1506>
 8017be0:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017be8:	dc26      	bgt.n	8017c38 <draw_with_stencil+0x1554>
 8017bea:	2e00      	cmp	r6, #0
 8017bec:	f040 815f 	bne.w	8017eae <draw_with_stencil+0x17ca>
 8017bf0:	f7f9 f8dc 	bl	8010dac <nema_set_clip_pop>
 8017bf4:	e722      	b.n	8017a3c <draw_with_stencil+0x1358>
 8017bf6:	bf00      	nop
 8017bf8:	0a18108b 	.word	0x0a18108b
 8017bfc:	01016204 	.word	0x01016204
 8017c00:	18001001 	.word	0x18001001
 8017c04:	18001000 	.word	0x18001000
 8017c08:	08035d58 	.word	0x08035d58
 8017c0c:	0a882206 	.word	0x0a882206
 8017c10:	0a581606 	.word	0x0a581606
 8017c14:	0a912406 	.word	0x0a912406
 8017c18:	10000002 	.word	0x10000002
 8017c1c:	8a5b1686 	.word	0x8a5b1686
 8017c20:	20000064 	.word	0x20000064
 8017c24:	ff000100 	.word	0xff000100
 8017c28:	1a181001 	.word	0x1a181001
 8017c2c:	050481a9 	.word	0x050481a9
 8017c30:	2008302c 	.word	0x2008302c
 8017c34:	00000000 	.word	0x00000000
 8017c38:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017c3c:	edcd 7a05 	vstr	s15, [sp, #20]
 8017c40:	9804      	ldr	r0, [sp, #16]
 8017c42:	30a4      	adds	r0, #164	@ 0xa4
 8017c44:	f7fa fa42 	bl	80120cc <nema_set_matrix>
 8017c48:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8017c4c:	eefd 9ae9 	vcvt.s32.f32	s19, s19
 8017c50:	9b05      	ldr	r3, [sp, #20]
 8017c52:	ee18 2a10 	vmov	r2, s16
 8017c56:	2e00      	cmp	r6, #0
 8017c58:	f040 8110 	bne.w	8017e7c <draw_with_stencil+0x1798>
 8017c5c:	ee19 0a90 	vmov	r0, s19
 8017c60:	4631      	mov	r1, r6
 8017c62:	f7f9 f88b 	bl	8010d7c <nema_set_clip_temp>
 8017c66:	2009      	movs	r0, #9
 8017c68:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017c6c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017c70:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017c74:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017c78:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017c7c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017c80:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017c82:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017c84:	f006 f856 	bl	801dd34 <nema_cl_get_space>
 8017c88:	2800      	cmp	r0, #0
 8017c8a:	d0b1      	beq.n	8017bf0 <draw_with_stencil+0x150c>
 8017c8c:	f8c0 9004 	str.w	r9, [r0, #4]
 8017c90:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017c94:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017c98:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8017c9c:	edc0 9a03 	vstr	s19, [r0, #12]
 8017ca0:	f8c0 8014 	str.w	r8, [r0, #20]
 8017ca4:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017ca8:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017cac:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8017cb0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8017cb4:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017cb8:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017cba:	4ca6      	ldr	r4, [pc, #664]	@ (8017f54 <draw_with_stencil+0x1870>)
 8017cbc:	f8c0 b000 	str.w	fp, [r0]
 8017cc0:	f8c0 9008 	str.w	r9, [r0, #8]
 8017cc4:	6103      	str	r3, [r0, #16]
 8017cc6:	6923      	ldr	r3, [r4, #16]
 8017cc8:	4ca3      	ldr	r4, [pc, #652]	@ (8017f58 <draw_with_stencil+0x1874>)
 8017cca:	f043 0305 	orr.w	r3, r3, #5
 8017cce:	ed80 9a07 	vstr	s18, [r0, #28]
 8017cd2:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 8017cd6:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8017cda:	6347      	str	r7, [r0, #52]	@ 0x34
 8017cdc:	6443      	str	r3, [r0, #68]	@ 0x44
 8017cde:	f8c0 8018 	str.w	r8, [r0, #24]
 8017ce2:	f8c0 e020 	str.w	lr, [r0, #32]
 8017ce6:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017cea:	6301      	str	r1, [r0, #48]	@ 0x30
 8017cec:	6382      	str	r2, [r0, #56]	@ 0x38
 8017cee:	6404      	str	r4, [r0, #64]	@ 0x40
 8017cf0:	e77b      	b.n	8017bea <draw_with_stencil+0x1506>
 8017cf2:	9e04      	ldr	r6, [sp, #16]
 8017cf4:	4630      	mov	r0, r6
 8017cf6:	f005 fb1d 	bl	801d334 <bind_tex1_according_paint>
 8017cfa:	f896 30dd 	ldrb.w	r3, [r6, #221]	@ 0xdd
 8017cfe:	2b02      	cmp	r3, #2
 8017d00:	d017      	beq.n	8017d32 <draw_with_stencil+0x164e>
 8017d02:	2b03      	cmp	r3, #3
 8017d04:	d002      	beq.n	8017d0c <draw_with_stencil+0x1628>
 8017d06:	2b01      	cmp	r3, #1
 8017d08:	f47f addb 	bne.w	80178c2 <draw_with_stencil+0x11de>
 8017d0c:	9904      	ldr	r1, [sp, #16]
 8017d0e:	683a      	ldr	r2, [r7, #0]
 8017d10:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017d14:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017d16:	07d8      	lsls	r0, r3, #31
 8017d18:	f140 80d1 	bpl.w	8017ebe <draw_with_stencil+0x17da>
 8017d1c:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017d20:	4313      	orrs	r3, r2
 8017d22:	07db      	lsls	r3, r3, #31
 8017d24:	f100 82bb 	bmi.w	801829e <draw_with_stencil+0x1bba>
 8017d28:	f101 0038 	add.w	r0, r1, #56	@ 0x38
 8017d2c:	f7fa f9ce 	bl	80120cc <nema_set_matrix>
 8017d30:	e5c7      	b.n	80178c2 <draw_with_stencil+0x11de>
 8017d32:	9904      	ldr	r1, [sp, #16]
 8017d34:	683a      	ldr	r2, [r7, #0]
 8017d36:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017d3a:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017d3c:	07d8      	lsls	r0, r3, #31
 8017d3e:	f140 80c6 	bpl.w	8017ece <draw_with_stencil+0x17ea>
 8017d42:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017d46:	4313      	orrs	r3, r2
 8017d48:	07db      	lsls	r3, r3, #31
 8017d4a:	f100 82bf 	bmi.w	80182cc <draw_with_stencil+0x1be8>
 8017d4e:	f101 0008 	add.w	r0, r1, #8
 8017d52:	f7fa f9bb 	bl	80120cc <nema_set_matrix>
 8017d56:	e5b4      	b.n	80178c2 <draw_with_stencil+0x11de>
 8017d58:	2001      	movs	r0, #1
 8017d5a:	f7fa f94f 	bl	8011ffc <nema_enable_tiling>
 8017d5e:	683a      	ldr	r2, [r7, #0]
 8017d60:	e5b9      	b.n	80178d6 <draw_with_stencil+0x11f2>
 8017d62:	4e7e      	ldr	r6, [pc, #504]	@ (8017f5c <draw_with_stencil+0x1878>)
 8017d64:	e5eb      	b.n	801793e <draw_with_stencil+0x125a>
 8017d66:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017d68:	2b00      	cmp	r3, #0
 8017d6a:	f000 82c0 	beq.w	80182ee <draw_with_stencil+0x1c0a>
 8017d6e:	f04f 0808 	mov.w	r8, #8
 8017d72:	2000      	movs	r0, #0
 8017d74:	f7f8 ffb4 	bl	8010ce0 <nema_set_tex_color>
 8017d78:	683b      	ldr	r3, [r7, #0]
 8017d7a:	2002      	movs	r0, #2
 8017d7c:	f8d3 c03c 	ldr.w	ip, [r3, #60]	@ 0x3c
 8017d80:	f8bc 3012 	ldrh.w	r3, [ip, #18]
 8017d84:	f8bc e010 	ldrh.w	lr, [ip, #16]
 8017d88:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8017d8c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017d90:	f8dc 2014 	ldr.w	r2, [ip, #20]
 8017d94:	9201      	str	r2, [sp, #4]
 8017d96:	f89c c01c 	ldrb.w	ip, [ip, #28]
 8017d9a:	4672      	mov	r2, lr
 8017d9c:	f8cd c000 	str.w	ip, [sp]
 8017da0:	f7f8 fee8 	bl	8010b74 <nema_bind_tex>
 8017da4:	683b      	ldr	r3, [r7, #0]
 8017da6:	7f1b      	ldrb	r3, [r3, #28]
 8017da8:	3b01      	subs	r3, #1
 8017daa:	2b01      	cmp	r3, #1
 8017dac:	f240 82ab 	bls.w	8018306 <draw_with_stencil+0x1c22>
 8017db0:	f04f 33ff 	mov.w	r3, #4294967295
 8017db4:	2202      	movs	r2, #2
 8017db6:	2103      	movs	r1, #3
 8017db8:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8017dbc:	f006 f938 	bl	801e030 <nema_set_blend>
 8017dc0:	f04f 0800 	mov.w	r8, #0
 8017dc4:	683b      	ldr	r3, [r7, #0]
 8017dc6:	edd3 0a11 	vldr	s1, [r3, #68]	@ 0x44
 8017dca:	ed93 0a10 	vldr	s0, [r3, #64]	@ 0x40
 8017dce:	f7fa fa37 	bl	8012240 <nema_set_matrix_translate>
 8017dd2:	2009      	movs	r0, #9
 8017dd4:	ed94 aa0a 	vldr	s20, [r4, #40]	@ 0x28
 8017dd8:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8017ddc:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
 8017de0:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 8017de2:	edd4 9a0e 	vldr	s19, [r4, #56]	@ 0x38
 8017de6:	ed94 9a0f 	vldr	s18, [r4, #60]	@ 0x3c
 8017dea:	edd4 8a10 	vldr	s17, [r4, #64]	@ 0x40
 8017dee:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 8017df2:	f005 ff9f 	bl	801dd34 <nema_cl_get_space>
 8017df6:	b3a0      	cbz	r0, 8017e62 <draw_with_stencil+0x177e>
 8017df8:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8017dfc:	6003      	str	r3, [r0, #0]
 8017dfe:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017e02:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017e06:	ed80 aa01 	vstr	s20, [r0, #4]
 8017e0a:	edc0 aa03 	vstr	s21, [r0, #12]
 8017e0e:	6103      	str	r3, [r0, #16]
 8017e10:	f8c0 b014 	str.w	fp, [r0, #20]
 8017e14:	61c6      	str	r6, [r0, #28]
 8017e16:	f44f 7b4d 	mov.w	fp, #820	@ 0x334
 8017e1a:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8017e1e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017e22:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017e26:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017e2a:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8017e2e:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8017e32:	edc0 8a0d 	vstr	s17, [r0, #52]	@ 0x34
 8017e36:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8017e3a:	f8df c118 	ldr.w	ip, [pc, #280]	@ 8017f54 <draw_with_stencil+0x1870>
 8017e3e:	f8c0 e008 	str.w	lr, [r0, #8]
 8017e42:	f8dc c010 	ldr.w	ip, [ip, #16]
 8017e46:	f8df e110 	ldr.w	lr, [pc, #272]	@ 8017f58 <draw_with_stencil+0x1874>
 8017e4a:	f04c 0c05 	orr.w	ip, ip, #5
 8017e4e:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8017e52:	f8c0 b018 	str.w	fp, [r0, #24]
 8017e56:	6206      	str	r6, [r0, #32]
 8017e58:	6281      	str	r1, [r0, #40]	@ 0x28
 8017e5a:	6302      	str	r2, [r0, #48]	@ 0x30
 8017e5c:	6383      	str	r3, [r0, #56]	@ 0x38
 8017e5e:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8017e62:	f1b8 0f00 	cmp.w	r8, #0
 8017e66:	f43f ad26 	beq.w	80178b6 <draw_with_stencil+0x11d2>
 8017e6a:	f8d9 3000 	ldr.w	r3, [r9]
 8017e6e:	2034      	movs	r0, #52	@ 0x34
 8017e70:	8a19      	ldrh	r1, [r3, #16]
 8017e72:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017e76:	f005 ffb9 	bl	801ddec <nema_cl_add_cmd>
 8017e7a:	e51c      	b.n	80178b6 <draw_with_stencil+0x11d2>
 8017e7c:	ee19 0a90 	vmov	r0, s19
 8017e80:	2100      	movs	r1, #0
 8017e82:	f7f8 ff59 	bl	8010d38 <nema_set_clip2>
 8017e86:	2009      	movs	r0, #9
 8017e88:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017e8c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017e90:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017e94:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017e98:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017e9c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017ea0:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017ea2:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017ea4:	f005 ff46 	bl	801dd34 <nema_cl_get_space>
 8017ea8:	2800      	cmp	r0, #0
 8017eaa:	f47f aeef 	bne.w	8017c8c <draw_with_stencil+0x15a8>
 8017eae:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017eb2:	2100      	movs	r1, #0
 8017eb4:	461a      	mov	r2, r3
 8017eb6:	4608      	mov	r0, r1
 8017eb8:	f7f8 ff3e 	bl	8010d38 <nema_set_clip2>
 8017ebc:	e5be      	b.n	8017a3c <draw_with_stencil+0x1358>
 8017ebe:	07d6      	lsls	r6, r2, #31
 8017ec0:	f101 0138 	add.w	r1, r1, #56	@ 0x38
 8017ec4:	d407      	bmi.n	8017ed6 <draw_with_stencil+0x17f2>
 8017ec6:	4608      	mov	r0, r1
 8017ec8:	f7fa f900 	bl	80120cc <nema_set_matrix>
 8017ecc:	e4f9      	b.n	80178c2 <draw_with_stencil+0x11de>
 8017ece:	07d6      	lsls	r6, r2, #31
 8017ed0:	f101 0108 	add.w	r1, r1, #8
 8017ed4:	d5f7      	bpl.n	8017ec6 <draw_with_stencil+0x17e2>
 8017ed6:	a81c      	add	r0, sp, #112	@ 0x70
 8017ed8:	f7f9 fd30 	bl	801193c <nema_mat3x3_copy>
 8017edc:	6839      	ldr	r1, [r7, #0]
 8017ede:	a81c      	add	r0, sp, #112	@ 0x70
 8017ee0:	3170      	adds	r1, #112	@ 0x70
 8017ee2:	f7f9 fd77 	bl	80119d4 <nema_mat3x3_mul>
 8017ee6:	a81c      	add	r0, sp, #112	@ 0x70
 8017ee8:	f7fa f8f0 	bl	80120cc <nema_set_matrix>
 8017eec:	e4e9      	b.n	80178c2 <draw_with_stencil+0x11de>
 8017eee:	2003      	movs	r0, #3
 8017ef0:	f005 ff20 	bl	801dd34 <nema_cl_get_space>
 8017ef4:	2800      	cmp	r0, #0
 8017ef6:	f000 825e 	beq.w	80183b6 <draw_with_stencil+0x1cd2>
 8017efa:	f44f 77e8 	mov.w	r7, #464	@ 0x1d0
 8017efe:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8017f02:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8017f06:	4b16      	ldr	r3, [pc, #88]	@ (8017f60 <draw_with_stencil+0x187c>)
 8017f08:	6046      	str	r6, [r0, #4]
 8017f0a:	681b      	ldr	r3, [r3, #0]
 8017f0c:	6007      	str	r7, [r0, #0]
 8017f0e:	6143      	str	r3, [r0, #20]
 8017f10:	4b14      	ldr	r3, [pc, #80]	@ (8017f64 <draw_with_stencil+0x1880>)
 8017f12:	6081      	str	r1, [r0, #8]
 8017f14:	e9c0 3203 	strd	r3, r2, [r0, #12]
 8017f18:	e548      	b.n	80179ac <draw_with_stencil+0x12c8>
 8017f1a:	2001      	movs	r0, #1
 8017f1c:	f7fa f882 	bl	8012024 <nema_enable_tiling_2x2>
 8017f20:	683a      	ldr	r2, [r7, #0]
 8017f22:	e4d8      	b.n	80178d6 <draw_with_stencil+0x11f2>
 8017f24:	2604      	movs	r6, #4
 8017f26:	2303      	movs	r3, #3
 8017f28:	2202      	movs	r2, #2
 8017f2a:	e5c9      	b.n	8017ac0 <draw_with_stencil+0x13dc>
 8017f2c:	9904      	ldr	r1, [sp, #16]
 8017f2e:	f891 102c 	ldrb.w	r1, [r1, #44]	@ 0x2c
 8017f32:	2901      	cmp	r1, #1
 8017f34:	f47f ace3 	bne.w	80178fe <draw_with_stencil+0x121a>
 8017f38:	2100      	movs	r1, #0
 8017f3a:	4f0b      	ldr	r7, [pc, #44]	@ (8017f68 <draw_with_stencil+0x1884>)
 8017f3c:	480b      	ldr	r0, [pc, #44]	@ (8017f6c <draw_with_stencil+0x1888>)
 8017f3e:	911d      	str	r1, [sp, #116]	@ 0x74
 8017f40:	911f      	str	r1, [sp, #124]	@ 0x7c
 8017f42:	971c      	str	r7, [sp, #112]	@ 0x70
 8017f44:	901e      	str	r0, [sp, #120]	@ 0x78
 8017f46:	2104      	movs	r1, #4
 8017f48:	2703      	movs	r7, #3
 8017f4a:	e4df      	b.n	801790c <draw_with_stencil+0x1228>
 8017f4c:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017f50:	e637      	b.n	8017bc2 <draw_with_stencil+0x14de>
 8017f52:	bf00      	nop
 8017f54:	20000064 	.word	0x20000064
 8017f58:	ff000100 	.word	0xff000100
 8017f5c:	18001001 	.word	0x18001001
 8017f60:	2008302c 	.word	0x2008302c
 8017f64:	941fdc13 	.word	0x941fdc13
 8017f68:	0a18108b 	.word	0x0a18108b
 8017f6c:	0800110b 	.word	0x0800110b
 8017f70:	9b04      	ldr	r3, [sp, #16]
 8017f72:	f103 0080 	add.w	r0, r3, #128	@ 0x80
 8017f76:	f7fa f8a9 	bl	80120cc <nema_set_matrix>
 8017f7a:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017f7e:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8017f82:	edcd 7a05 	vstr	s15, [sp, #20]
 8017f86:	2e00      	cmp	r6, #0
 8017f88:	f040 81d2 	bne.w	8018330 <draw_with_stencil+0x1c4c>
 8017f8c:	ee17 3a90 	vmov	r3, s15
 8017f90:	ee18 2a90 	vmov	r2, s17
 8017f94:	4631      	mov	r1, r6
 8017f96:	4630      	mov	r0, r6
 8017f98:	f7f8 fef0 	bl	8010d7c <nema_set_clip_temp>
 8017f9c:	2009      	movs	r0, #9
 8017f9e:	ed94 ba0a 	vldr	s22, [r4, #40]	@ 0x28
 8017fa2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8017fa4:	edd4 aa0c 	vldr	s21, [r4, #48]	@ 0x30
 8017fa8:	ed94 aa0d 	vldr	s20, [r4, #52]	@ 0x34
 8017fac:	ed94 9a0e 	vldr	s18, [r4, #56]	@ 0x38
 8017fb0:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8017fb4:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 8017fb8:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8017fbc:	f005 feba 	bl	801dd34 <nema_cl_get_space>
 8017fc0:	b3a8      	cbz	r0, 801802e <draw_with_stencil+0x194a>
 8017fc2:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8017fc6:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8017fca:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017fce:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8017fd2:	ed80 ba01 	vstr	s22, [r0, #4]
 8017fd6:	60c7      	str	r7, [r0, #12]
 8017fd8:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017fdc:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8017fe0:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017fe4:	6201      	str	r1, [r0, #32]
 8017fe6:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017fea:	edc0 aa05 	vstr	s21, [r0, #20]
 8017fee:	ed80 aa07 	vstr	s20, [r0, #28]
 8017ff2:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8017ff6:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8017ffa:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8017ffe:	f8c0 c010 	str.w	ip, [r0, #16]
 8018002:	f8df c40c 	ldr.w	ip, [pc, #1036]	@ 8018410 <draw_with_stencil+0x1d2c>
 8018006:	f8c0 e008 	str.w	lr, [r0, #8]
 801800a:	f8c0 8000 	str.w	r8, [r0]
 801800e:	f8dc c010 	ldr.w	ip, [ip, #16]
 8018012:	f8df e400 	ldr.w	lr, [pc, #1024]	@ 8018414 <draw_with_stencil+0x1d30>
 8018016:	f04c 0c05 	orr.w	ip, ip, #5
 801801a:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 801801e:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8018022:	6187      	str	r7, [r0, #24]
 8018024:	6281      	str	r1, [r0, #40]	@ 0x28
 8018026:	6302      	str	r2, [r0, #48]	@ 0x30
 8018028:	6383      	str	r3, [r0, #56]	@ 0x38
 801802a:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 801802e:	f8d9 3000 	ldr.w	r3, [r9]
 8018032:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8018036:	ed93 8a04 	vldr	s16, [r3, #16]
 801803a:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 801803e:	ee38 8a69 	vsub.f32	s16, s16, s19
 8018042:	ee38 8a27 	vadd.f32	s16, s16, s15
 8018046:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801804a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801804e:	f73f adf7 	bgt.w	8017c40 <draw_with_stencil+0x155c>
 8018052:	e5ca      	b.n	8017bea <draw_with_stencil+0x1506>
 8018054:	9b04      	ldr	r3, [sp, #16]
 8018056:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
 801805a:	f7fa f837 	bl	80120cc <nema_set_matrix>
 801805e:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8018062:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8018066:	eebc 7ae8 	vcvt.u32.f32	s14, s17
 801806a:	ee18 3a10 	vmov	r3, s16
 801806e:	ee17 2a10 	vmov	r2, s14
 8018072:	ee17 1a90 	vmov	r1, s15
 8018076:	2e00      	cmp	r6, #0
 8018078:	f040 8163 	bne.w	8018342 <draw_with_stencil+0x1c5e>
 801807c:	4630      	mov	r0, r6
 801807e:	f7f8 fe7d 	bl	8010d7c <nema_set_clip_temp>
 8018082:	2009      	movs	r0, #9
 8018084:	ed94 ca0a 	vldr	s24, [r4, #40]	@ 0x28
 8018088:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801808a:	edd4 ba0c 	vldr	s23, [r4, #48]	@ 0x30
 801808e:	ed94 ba0d 	vldr	s22, [r4, #52]	@ 0x34
 8018092:	edd4 aa0e 	vldr	s21, [r4, #56]	@ 0x38
 8018096:	ed94 aa0f 	vldr	s20, [r4, #60]	@ 0x3c
 801809a:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 801809e:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 80180a2:	f005 fe47 	bl	801dd34 <nema_cl_get_space>
 80180a6:	2800      	cmp	r0, #0
 80180a8:	f43f ad7f 	beq.w	8017baa <draw_with_stencil+0x14c6>
 80180ac:	f44f 7150 	mov.w	r1, #832	@ 0x340
 80180b0:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80180b4:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 80180b8:	f44f 7848 	mov.w	r8, #800	@ 0x320
 80180bc:	ed80 ca01 	vstr	s24, [r0, #4]
 80180c0:	60c7      	str	r7, [r0, #12]
 80180c2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80180c6:	f44f 774d 	mov.w	r7, #820	@ 0x334
 80180ca:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80180ce:	6201      	str	r1, [r0, #32]
 80180d0:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80180d4:	f8c0 c010 	str.w	ip, [r0, #16]
 80180d8:	f8df c334 	ldr.w	ip, [pc, #820]	@ 8018410 <draw_with_stencil+0x1d2c>
 80180dc:	f8c0 e008 	str.w	lr, [r0, #8]
 80180e0:	f8c0 8000 	str.w	r8, [r0]
 80180e4:	f8dc c010 	ldr.w	ip, [ip, #16]
 80180e8:	f8df e328 	ldr.w	lr, [pc, #808]	@ 8018414 <draw_with_stencil+0x1d30>
 80180ec:	f04c 0c05 	orr.w	ip, ip, #5
 80180f0:	edc0 ba05 	vstr	s23, [r0, #20]
 80180f4:	ed80 ba07 	vstr	s22, [r0, #28]
 80180f8:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 80180fc:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8018100:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8018104:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 8018108:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 801810c:	6187      	str	r7, [r0, #24]
 801810e:	6281      	str	r1, [r0, #40]	@ 0x28
 8018110:	6302      	str	r2, [r0, #48]	@ 0x30
 8018112:	6383      	str	r3, [r0, #56]	@ 0x38
 8018114:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8018118:	e547      	b.n	8017baa <draw_with_stencil+0x14c6>
 801811a:	9b04      	ldr	r3, [sp, #16]
 801811c:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 8018120:	f7f9 ffd4 	bl	80120cc <nema_set_matrix>
 8018124:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8018128:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 801812c:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 8018130:	eebd 7ac9 	vcvt.s32.f32	s14, s18
 8018134:	ee18 3a10 	vmov	r3, s16
 8018138:	ee18 2a90 	vmov	r2, s17
 801813c:	ee17 1a10 	vmov	r1, s14
 8018140:	ee17 0a90 	vmov	r0, s15
 8018144:	2e00      	cmp	r6, #0
 8018146:	f040 8100 	bne.w	801834a <draw_with_stencil+0x1c66>
 801814a:	f7f8 fe17 	bl	8010d7c <nema_set_clip_temp>
 801814e:	2009      	movs	r0, #9
 8018150:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 8018154:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8018158:	ed94 ba0c 	vldr	s22, [r4, #48]	@ 0x30
 801815c:	f8d4 8034 	ldr.w	r8, [r4, #52]	@ 0x34
 8018160:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 8018164:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8018168:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 801816a:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 801816e:	f005 fde1 	bl	801dd34 <nema_cl_get_space>
 8018172:	2800      	cmp	r0, #0
 8018174:	f000 811c 	beq.w	80183b0 <draw_with_stencil+0x1ccc>
 8018178:	f44f 7148 	mov.w	r1, #800	@ 0x320
 801817c:	f8c0 b004 	str.w	fp, [r0, #4]
 8018180:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8018184:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8018188:	edc0 aa03 	vstr	s21, [r0, #12]
 801818c:	4ba0      	ldr	r3, [pc, #640]	@ (8018410 <draw_with_stencil+0x1d2c>)
 801818e:	6001      	str	r1, [r0, #0]
 8018190:	f8c0 b008 	str.w	fp, [r0, #8]
 8018194:	6102      	str	r2, [r0, #16]
 8018196:	691a      	ldr	r2, [r3, #16]
 8018198:	f8c0 801c 	str.w	r8, [r0, #28]
 801819c:	f042 0205 	orr.w	r2, r2, #5
 80181a0:	f44f 7850 	mov.w	r8, #832	@ 0x340
 80181a4:	f44f 7e51 	mov.w	lr, #836	@ 0x344
 80181a8:	f44f 7c54 	mov.w	ip, #848	@ 0x350
 80181ac:	6347      	str	r7, [r0, #52]	@ 0x34
 80181ae:	6442      	str	r2, [r0, #68]	@ 0x44
 80181b0:	f44f 7755 	mov.w	r7, #852	@ 0x354
 80181b4:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80181b8:	ed80 ba05 	vstr	s22, [r0, #20]
 80181bc:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 80181c0:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 80181c4:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 80181c8:	4992      	ldr	r1, [pc, #584]	@ (8018414 <draw_with_stencil+0x1d30>)
 80181ca:	f8d9 3000 	ldr.w	r3, [r9]
 80181ce:	6182      	str	r2, [r0, #24]
 80181d0:	f8c0 8020 	str.w	r8, [r0, #32]
 80181d4:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 80181d8:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 80181dc:	6387      	str	r7, [r0, #56]	@ 0x38
 80181de:	6401      	str	r1, [r0, #64]	@ 0x40
 80181e0:	ed93 7a05 	vldr	s14, [r3, #20]
 80181e4:	eeb8 8ac7 	vcvt.f32.s32	s16, s14
 80181e8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80181ec:	ee38 8a49 	vsub.f32	s16, s16, s18
 80181f0:	ee38 8a27 	vadd.f32	s16, s16, s15
 80181f4:	e4c9      	b.n	8017b8a <draw_with_stencil+0x14a6>
 80181f6:	4f88      	ldr	r7, [pc, #544]	@ (8018418 <draw_with_stencil+0x1d34>)
 80181f8:	4631      	mov	r1, r6
 80181fa:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 80181fe:	f10d 081c 	add.w	r8, sp, #28
 8018202:	f005 fdf3 	bl	801ddec <nema_cl_add_cmd>
 8018206:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018208:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 801820c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8018210:	f107 0e08 	add.w	lr, r7, #8
 8018214:	f10d 0b34 	add.w	fp, sp, #52	@ 0x34
 8018218:	e888 0003 	stmia.w	r8, {r0, r1}
 801821c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8018220:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
 8018224:	e89e 0003 	ldmia.w	lr, {r0, r1}
 8018228:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 801822c:	f107 0e20 	add.w	lr, r7, #32
 8018230:	9705      	str	r7, [sp, #20]
 8018232:	e88b 0003 	stmia.w	fp, {r0, r1}
 8018236:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801823a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801823e:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
 8018242:	9f04      	ldr	r7, [sp, #16]
 8018244:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8018248:	ed97 7a36 	vldr	s14, [r7, #216]	@ 0xd8
 801824c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8018250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018254:	9f05      	ldr	r7, [sp, #20]
 8018256:	f10d 084c 	add.w	r8, sp, #76	@ 0x4c
 801825a:	f107 0740 	add.w	r7, r7, #64	@ 0x40
 801825e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8018262:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018264:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 8018268:	e897 0003 	ldmia.w	r7, {r0, r1}
 801826c:	e888 0003 	stmia.w	r8, {r0, r1}
 8018270:	db6e      	blt.n	8018350 <draw_with_stencil+0x1c6c>
 8018272:	9f04      	ldr	r7, [sp, #16]
 8018274:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 8018278:	2b02      	cmp	r3, #2
 801827a:	f000 80a4 	beq.w	80183c6 <draw_with_stencil+0x1ce2>
 801827e:	2008      	movs	r0, #8
 8018280:	2102      	movs	r1, #2
 8018282:	4f66      	ldr	r7, [pc, #408]	@ (801841c <draw_with_stencil+0x1d38>)
 8018284:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 8018288:	f040 808c 	bne.w	80183a4 <draw_with_stencil+0x1cc0>
 801828c:	ab0d      	add	r3, sp, #52	@ 0x34
 801828e:	4418      	add	r0, r3
 8018290:	f7fa f80a 	bl	80122a8 <nema_load_frag_shader>
 8018294:	4638      	mov	r0, r7
 8018296:	f7fa f821 	bl	80122dc <nema_set_frag_ptr>
 801829a:	f7ff bb87 	b.w	80179ac <draw_with_stencil+0x12c8>
 801829e:	a813      	add	r0, sp, #76	@ 0x4c
 80182a0:	495f      	ldr	r1, [pc, #380]	@ (8018420 <draw_with_stencil+0x1d3c>)
 80182a2:	f7f9 fb4b 	bl	801193c <nema_mat3x3_copy>
 80182a6:	a813      	add	r0, sp, #76	@ 0x4c
 80182a8:	f7f9 fc8a 	bl	8011bc0 <nema_mat3x3_invert>
 80182ac:	b9d8      	cbnz	r0, 80182e6 <draw_with_stencil+0x1c02>
 80182ae:	9b04      	ldr	r3, [sp, #16]
 80182b0:	a81c      	add	r0, sp, #112	@ 0x70
 80182b2:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 80182b6:	f7f9 fb41 	bl	801193c <nema_mat3x3_copy>
 80182ba:	a81c      	add	r0, sp, #112	@ 0x70
 80182bc:	a913      	add	r1, sp, #76	@ 0x4c
 80182be:	f7f9 fb89 	bl	80119d4 <nema_mat3x3_mul>
 80182c2:	a81c      	add	r0, sp, #112	@ 0x70
 80182c4:	f7f9 ff02 	bl	80120cc <nema_set_matrix>
 80182c8:	f7ff bafb 	b.w	80178c2 <draw_with_stencil+0x11de>
 80182cc:	a813      	add	r0, sp, #76	@ 0x4c
 80182ce:	4954      	ldr	r1, [pc, #336]	@ (8018420 <draw_with_stencil+0x1d3c>)
 80182d0:	f7f9 fb34 	bl	801193c <nema_mat3x3_copy>
 80182d4:	a813      	add	r0, sp, #76	@ 0x4c
 80182d6:	f7f9 fc73 	bl	8011bc0 <nema_mat3x3_invert>
 80182da:	b920      	cbnz	r0, 80182e6 <draw_with_stencil+0x1c02>
 80182dc:	9b04      	ldr	r3, [sp, #16]
 80182de:	a81c      	add	r0, sp, #112	@ 0x70
 80182e0:	f103 0108 	add.w	r1, r3, #8
 80182e4:	e7e7      	b.n	80182b6 <draw_with_stencil+0x1bd2>
 80182e6:	f44f 2680 	mov.w	r6, #262144	@ 0x40000
 80182ea:	f7fe bfdb 	b.w	80172a4 <draw_with_stencil+0xbc0>
 80182ee:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80182f2:	f004 fbc7 	bl	801ca84 <nema_vg_set_error>
 80182f6:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80182fa:	f004 fbc3 	bl	801ca84 <nema_vg_set_error>
 80182fe:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 8018302:	f7fe bfde 	b.w	80172c2 <draw_with_stencil+0xbde>
 8018306:	2000      	movs	r0, #0
 8018308:	f8d9 1000 	ldr.w	r1, [r9]
 801830c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8018310:	68c9      	ldr	r1, [r1, #12]
 8018312:	e9cd 8200 	strd	r8, r2, [sp]
 8018316:	9002      	str	r0, [sp, #8]
 8018318:	4630      	mov	r0, r6
 801831a:	f7f8 fc2b 	bl	8010b74 <nema_bind_tex>
 801831e:	2303      	movs	r3, #3
 8018320:	2202      	movs	r2, #2
 8018322:	4631      	mov	r1, r6
 8018324:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8018328:	46b0      	mov	r8, r6
 801832a:	f005 fe81 	bl	801e030 <nema_set_blend>
 801832e:	e549      	b.n	8017dc4 <draw_with_stencil+0x16e0>
 8018330:	2100      	movs	r1, #0
 8018332:	ee17 3a90 	vmov	r3, s15
 8018336:	4608      	mov	r0, r1
 8018338:	ee18 2a90 	vmov	r2, s17
 801833c:	f7f8 fcfc 	bl	8010d38 <nema_set_clip2>
 8018340:	e62c      	b.n	8017f9c <draw_with_stencil+0x18b8>
 8018342:	2000      	movs	r0, #0
 8018344:	f7f8 fcf8 	bl	8010d38 <nema_set_clip2>
 8018348:	e69b      	b.n	8018082 <draw_with_stencil+0x199e>
 801834a:	f7f8 fcf5 	bl	8010d38 <nema_set_clip2>
 801834e:	e6fe      	b.n	801814e <draw_with_stencil+0x1a6a>
 8018350:	9b04      	ldr	r3, [sp, #16]
 8018352:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8018356:	2b02      	cmp	r3, #2
 8018358:	d049      	beq.n	80183ee <draw_with_stencil+0x1d0a>
 801835a:	2103      	movs	r1, #3
 801835c:	2008      	movs	r0, #8
 801835e:	2302      	movs	r3, #2
 8018360:	4f2e      	ldr	r7, [pc, #184]	@ (801841c <draw_with_stencil+0x1d38>)
 8018362:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 801842c <draw_with_stencil+0x1d48>
 8018366:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 801836a:	d139      	bne.n	80183e0 <draw_with_stencil+0x1cfc>
 801836c:	4619      	mov	r1, r3
 801836e:	ab13      	add	r3, sp, #76	@ 0x4c
 8018370:	4418      	add	r0, r3
 8018372:	f7f9 ff99 	bl	80122a8 <nema_load_frag_shader>
 8018376:	4638      	mov	r0, r7
 8018378:	f7f9 ffb0 	bl	80122dc <nema_set_frag_ptr>
 801837c:	9b04      	ldr	r3, [sp, #16]
 801837e:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8018424 <draw_with_stencil+0x1d40>
 8018382:	edd3 7a36 	vldr	s15, [r3, #216]	@ 0xd8
 8018386:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801838a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801838e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018392:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018396:	ee17 0a90 	vmov	r0, s15
 801839a:	0600      	lsls	r0, r0, #24
 801839c:	f006 fa0e 	bl	801e7bc <nema_set_const_color>
 80183a0:	f7ff bb04 	b.w	80179ac <draw_with_stencil+0x12c8>
 80183a4:	ab07      	add	r3, sp, #28
 80183a6:	4418      	add	r0, r3
 80183a8:	2200      	movs	r2, #0
 80183aa:	f7f9 ff7d 	bl	80122a8 <nema_load_frag_shader>
 80183ae:	e771      	b.n	8018294 <draw_with_stencil+0x1bb0>
 80183b0:	f8d9 3000 	ldr.w	r3, [r9]
 80183b4:	e714      	b.n	80181e0 <draw_with_stencil+0x1afc>
 80183b6:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80183ba:	f004 fb63 	bl	801ca84 <nema_vg_set_error>
 80183be:	f44f 7600 	mov.w	r6, #512	@ 0x200
 80183c2:	f7fe bf6f 	b.w	80172a4 <draw_with_stencil+0xbc0>
 80183c6:	f897 202c 	ldrb.w	r2, [r7, #44]	@ 0x2c
 80183ca:	4b17      	ldr	r3, [pc, #92]	@ (8018428 <draw_with_stencil+0x1d44>)
 80183cc:	2a01      	cmp	r2, #1
 80183ce:	4f13      	ldr	r7, [pc, #76]	@ (801841c <draw_with_stencil+0x1d38>)
 80183d0:	bf13      	iteet	ne
 80183d2:	2008      	movne	r0, #8
 80183d4:	461f      	moveq	r7, r3
 80183d6:	2000      	moveq	r0, #0
 80183d8:	2102      	movne	r1, #2
 80183da:	bf08      	it	eq
 80183dc:	2103      	moveq	r1, #3
 80183de:	e751      	b.n	8018284 <draw_with_stencil+0x1ba0>
 80183e0:	ab1c      	add	r3, sp, #112	@ 0x70
 80183e2:	4418      	add	r0, r3
 80183e4:	2200      	movs	r2, #0
 80183e6:	4667      	mov	r7, ip
 80183e8:	f7f9 ff5e 	bl	80122a8 <nema_load_frag_shader>
 80183ec:	e7c3      	b.n	8018376 <draw_with_stencil+0x1c92>
 80183ee:	9a04      	ldr	r2, [sp, #16]
 80183f0:	f892 202c 	ldrb.w	r2, [r2, #44]	@ 0x2c
 80183f4:	2a01      	cmp	r2, #1
 80183f6:	d005      	beq.n	8018404 <draw_with_stencil+0x1d20>
 80183f8:	2103      	movs	r1, #3
 80183fa:	2008      	movs	r0, #8
 80183fc:	4f07      	ldr	r7, [pc, #28]	@ (801841c <draw_with_stencil+0x1d38>)
 80183fe:	f8df c02c 	ldr.w	ip, [pc, #44]	@ 801842c <draw_with_stencil+0x1d48>
 8018402:	e7b0      	b.n	8018366 <draw_with_stencil+0x1c82>
 8018404:	4f08      	ldr	r7, [pc, #32]	@ (8018428 <draw_with_stencil+0x1d44>)
 8018406:	2104      	movs	r1, #4
 8018408:	46bc      	mov	ip, r7
 801840a:	2000      	movs	r0, #0
 801840c:	2303      	movs	r3, #3
 801840e:	e7aa      	b.n	8018366 <draw_with_stencil+0x1c82>
 8018410:	20000064 	.word	0x20000064
 8018414:	ff000100 	.word	0xff000100
 8018418:	080335e8 	.word	0x080335e8
 801841c:	941e8000 	.word	0x941e8000
 8018420:	20083030 	.word	0x20083030
 8018424:	437f0000 	.word	0x437f0000
 8018428:	941da000 	.word	0x941da000
 801842c:	941f8000 	.word	0x941f8000

08018430 <nema_vg_draw_path>:
 8018430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018434:	ed2d 8b04 	vpush	{d8-d9}
 8018438:	b087      	sub	sp, #28
 801843a:	4604      	mov	r4, r0
 801843c:	460d      	mov	r5, r1
 801843e:	f005 fc05 	bl	801dc4c <nema_cl_get_bound>
 8018442:	2800      	cmp	r0, #0
 8018444:	f000 82e9 	beq.w	8018a1a <nema_vg_draw_path+0x5ea>
 8018448:	2c00      	cmp	r4, #0
 801844a:	f000 80ca 	beq.w	80185e2 <nema_vg_draw_path+0x1b2>
 801844e:	2d00      	cmp	r5, #0
 8018450:	f000 80c7 	beq.w	80185e2 <nema_vg_draw_path+0x1b2>
 8018454:	4f76      	ldr	r7, [pc, #472]	@ (8018630 <nema_vg_draw_path+0x200>)
 8018456:	683b      	ldr	r3, [r7, #0]
 8018458:	2b00      	cmp	r3, #0
 801845a:	f000 80c2 	beq.w	80185e2 <nema_vg_draw_path+0x1b2>
 801845e:	6862      	ldr	r2, [r4, #4]
 8018460:	2a00      	cmp	r2, #0
 8018462:	f000 80cc 	beq.w	80185fe <nema_vg_draw_path+0x1ce>
 8018466:	edd4 7a08 	vldr	s15, [r4, #32]
 801846a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801846e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018472:	f100 829a 	bmi.w	80189aa <nema_vg_draw_path+0x57a>
 8018476:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 801847a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801847e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018482:	f100 8292 	bmi.w	80189aa <nema_vg_draw_path+0x57a>
 8018486:	edd5 7a35 	vldr	s15, [r5, #212]	@ 0xd4
 801848a:	f8df 81b8 	ldr.w	r8, [pc, #440]	@ 8018644 <nema_vg_draw_path+0x214>
 801848e:	7f1a      	ldrb	r2, [r3, #28]
 8018490:	edc8 7a00 	vstr	s15, [r8]
 8018494:	b95a      	cbnz	r2, 80184ae <nema_vg_draw_path+0x7e>
 8018496:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801849a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801849e:	d806      	bhi.n	80184ae <nema_vg_draw_path+0x7e>
 80184a0:	2400      	movs	r4, #0
 80184a2:	4620      	mov	r0, r4
 80184a4:	b007      	add	sp, #28
 80184a6:	ecbd 8b04 	vpop	{d8-d9}
 80184aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184ae:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80184b0:	f8d4 6084 	ldr.w	r6, [r4, #132]	@ 0x84
 80184b4:	7f5a      	ldrb	r2, [r3, #29]
 80184b6:	430e      	orrs	r6, r1
 80184b8:	f8df 918c 	ldr.w	r9, [pc, #396]	@ 8018648 <nema_vg_draw_path+0x218>
 80184bc:	7f99      	ldrb	r1, [r3, #30]
 80184be:	485d      	ldr	r0, [pc, #372]	@ (8018634 <nema_vg_draw_path+0x204>)
 80184c0:	f006 0601 	and.w	r6, r6, #1
 80184c4:	f002 0301 	and.w	r3, r2, #1
 80184c8:	f889 6000 	strb.w	r6, [r9]
 80184cc:	7003      	strb	r3, [r0, #0]
 80184ce:	b111      	cbz	r1, 80184d6 <nema_vg_draw_path+0xa6>
 80184d0:	2300      	movs	r3, #0
 80184d2:	f889 3000 	strb.w	r3, [r9]
 80184d6:	4858      	ldr	r0, [pc, #352]	@ (8018638 <nema_vg_draw_path+0x208>)
 80184d8:	f7f9 fa22 	bl	8011920 <nema_mat3x3_load_identity>
 80184dc:	f899 3000 	ldrb.w	r3, [r9]
 80184e0:	2b00      	cmp	r3, #0
 80184e2:	f000 8088 	beq.w	80185f6 <nema_vg_draw_path+0x1c6>
 80184e6:	6839      	ldr	r1, [r7, #0]
 80184e8:	6b0b      	ldr	r3, [r1, #48]	@ 0x30
 80184ea:	07db      	lsls	r3, r3, #31
 80184ec:	f100 8091 	bmi.w	8018612 <nema_vg_draw_path+0x1e2>
 80184f0:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80184f4:	07d9      	lsls	r1, r3, #31
 80184f6:	f100 8411 	bmi.w	8018d1c <nema_vg_draw_path+0x8ec>
 80184fa:	edd5 7a36 	vldr	s15, [r5, #216]	@ 0xd8
 80184fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018502:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018506:	ed98 8a00 	vldr	s16, [r8]
 801850a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801850e:	4b4b      	ldr	r3, [pc, #300]	@ (801863c <nema_vg_draw_path+0x20c>)
 8018510:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8018512:	ed83 8a00 	vstr	s16, [r3]
 8018516:	f8df b134 	ldr.w	fp, [pc, #308]	@ 801864c <nema_vg_draw_path+0x21c>
 801851a:	4b49      	ldr	r3, [pc, #292]	@ (8018640 <nema_vg_draw_path+0x210>)
 801851c:	f8cb 0000 	str.w	r0, [fp]
 8018520:	ed83 8a00 	vstr	s16, [r3]
 8018524:	f100 824d 	bmi.w	80189c2 <nema_vg_draw_path+0x592>
 8018528:	683b      	ldr	r3, [r7, #0]
 801852a:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 801852e:	f01a 6f80 	tst.w	sl, #67108864	@ 0x4000000
 8018532:	d022      	beq.n	801857a <nema_vg_draw_path+0x14a>
 8018534:	0e01      	lsrs	r1, r0, #24
 8018536:	f3c0 4e07 	ubfx	lr, r0, #16, #8
 801853a:	b2c2      	uxtb	r2, r0
 801853c:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 8018540:	fb01 f202 	mul.w	r2, r1, r2
 8018544:	fb01 fc0c 	mul.w	ip, r1, ip
 8018548:	fb01 f10e 	mul.w	r1, r1, lr
 801854c:	f8df e100 	ldr.w	lr, [pc, #256]	@ 8018650 <nema_vg_draw_path+0x220>
 8018550:	9101      	str	r1, [sp, #4]
 8018552:	fbae 1202 	umull	r1, r2, lr, r2
 8018556:	fbae 1c0c 	umull	r1, ip, lr, ip
 801855a:	9901      	ldr	r1, [sp, #4]
 801855c:	f000 407f 	and.w	r0, r0, #4278190080	@ 0xff000000
 8018560:	fbae e101 	umull	lr, r1, lr, r1
 8018564:	ea40 10d2 	orr.w	r0, r0, r2, lsr #7
 8018568:	ea4f 1cdc 	mov.w	ip, ip, lsr #7
 801856c:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
 8018570:	09c9      	lsrs	r1, r1, #7
 8018572:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8018576:	f8cb 0000 	str.w	r0, [fp]
 801857a:	f893 c01c 	ldrb.w	ip, [r3, #28]
 801857e:	f899 1000 	ldrb.w	r1, [r9]
 8018582:	f1bc 0f00 	cmp.w	ip, #0
 8018586:	f040 81fe 	bne.w	8018986 <nema_vg_draw_path+0x556>
 801858a:	2900      	cmp	r1, #0
 801858c:	f040 82d6 	bne.w	8018b3c <nema_vg_draw_path+0x70c>
 8018590:	2e00      	cmp	r6, #0
 8018592:	f040 833b 	bne.w	8018c0c <nema_vg_draw_path+0x7dc>
 8018596:	eeb0 7a48 	vmov.f32	s14, s16
 801859a:	eef0 7a48 	vmov.f32	s15, s16
 801859e:	ee37 6ac7 	vsub.f32	s12, s15, s14
 80185a2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80185a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80185ae:	bf48      	it	mi
 80185b0:	eeb1 6a46 	vnegmi.f32	s12, s12
 80185b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185b8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80185bc:	bf4c      	ite	mi
 80185be:	eef1 5a67 	vnegmi.f32	s11, s15
 80185c2:	eef0 5a67 	vmovpl.f32	s11, s15
 80185c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185ca:	f100 83d5 	bmi.w	8018d78 <nema_vg_draw_path+0x948>
 80185ce:	eeb4 7ae5 	vcmpe.f32	s14, s11
 80185d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185d6:	dc3f      	bgt.n	8018658 <nema_vg_draw_path+0x228>
 80185d8:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8018654 <nema_vg_draw_path+0x224>
 80185dc:	ee67 6a26 	vmul.f32	s13, s14, s13
 80185e0:	e045      	b.n	801866e <nema_vg_draw_path+0x23e>
 80185e2:	2001      	movs	r0, #1
 80185e4:	f004 fa4e 	bl	801ca84 <nema_vg_set_error>
 80185e8:	2401      	movs	r4, #1
 80185ea:	4620      	mov	r0, r4
 80185ec:	b007      	add	sp, #28
 80185ee:	ecbd 8b04 	vpop	{d8-d9}
 80185f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185f6:	2e00      	cmp	r6, #0
 80185f8:	f43f af7f 	beq.w	80184fa <nema_vg_draw_path+0xca>
 80185fc:	e773      	b.n	80184e6 <nema_vg_draw_path+0xb6>
 80185fe:	2410      	movs	r4, #16
 8018600:	2010      	movs	r0, #16
 8018602:	f004 fa3f 	bl	801ca84 <nema_vg_set_error>
 8018606:	4620      	mov	r0, r4
 8018608:	b007      	add	sp, #28
 801860a:	ecbd 8b04 	vpop	{d8-d9}
 801860e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018612:	4809      	ldr	r0, [pc, #36]	@ (8018638 <nema_vg_draw_path+0x208>)
 8018614:	314c      	adds	r1, #76	@ 0x4c
 8018616:	f7f9 f991 	bl	801193c <nema_mat3x3_copy>
 801861a:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 801861e:	07d8      	lsls	r0, r3, #31
 8018620:	f57f af6b 	bpl.w	80184fa <nema_vg_draw_path+0xca>
 8018624:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018628:	4803      	ldr	r0, [pc, #12]	@ (8018638 <nema_vg_draw_path+0x208>)
 801862a:	f7f9 f9d3 	bl	80119d4 <nema_mat3x3_mul>
 801862e:	e764      	b.n	80184fa <nema_vg_draw_path+0xca>
 8018630:	20082fac 	.word	0x20082fac
 8018634:	20082fc0 	.word	0x20082fc0
 8018638:	20083030 	.word	0x20083030
 801863c:	20000138 	.word	0x20000138
 8018640:	2000013c 	.word	0x2000013c
 8018644:	20000134 	.word	0x20000134
 8018648:	20082ff9 	.word	0x20082ff9
 801864c:	2008302c 	.word	0x2008302c
 8018650:	80808081 	.word	0x80808081
 8018654:	3727c5ac 	.word	0x3727c5ac
 8018658:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801865c:	ed5f 6a03 	vldr	s13, [pc, #-12]	@ 8018654 <nema_vg_draw_path+0x224>
 8018660:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018664:	bf4c      	ite	mi
 8018666:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 801866a:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 801866e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018676:	d807      	bhi.n	8018688 <nema_vg_draw_path+0x258>
 8018678:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801867c:	eef4 7ae5 	vcmpe.f32	s15, s11
 8018680:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018684:	f100 82d1 	bmi.w	8018c2a <nema_vg_draw_path+0x7fa>
 8018688:	2900      	cmp	r1, #0
 801868a:	f000 8182 	beq.w	8018992 <nema_vg_draw_path+0x562>
 801868e:	f1bc 0f00 	cmp.w	ip, #0
 8018692:	f040 828e 	bne.w	8018bb2 <nema_vg_draw_path+0x782>
 8018696:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801869a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801869e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186a2:	f340 8342 	ble.w	8018d2a <nema_vg_draw_path+0x8fa>
 80186a6:	2201      	movs	r2, #1
 80186a8:	f04f 0c00 	mov.w	ip, #0
 80186ac:	4edd      	ldr	r6, [pc, #884]	@ (8018a24 <nema_vg_draw_path+0x5f4>)
 80186ae:	48de      	ldr	r0, [pc, #888]	@ (8018a28 <nema_vg_draw_path+0x5f8>)
 80186b0:	6032      	str	r2, [r6, #0]
 80186b2:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 80186b6:	f8c0 c000 	str.w	ip, [r0]
 80186ba:	2a00      	cmp	r2, #0
 80186bc:	f000 838c 	beq.w	8018dd8 <nema_vg_draw_path+0x9a8>
 80186c0:	ed98 6a00 	vldr	s12, [r8]
 80186c4:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80186c8:	f04f 0800 	mov.w	r8, #0
 80186cc:	ee26 6a26 	vmul.f32	s12, s12, s13
 80186d0:	f04f 0c00 	mov.w	ip, #0
 80186d4:	48d5      	ldr	r0, [pc, #852]	@ (8018a2c <nema_vg_draw_path+0x5fc>)
 80186d6:	4ad6      	ldr	r2, [pc, #856]	@ (8018a30 <nema_vg_draw_path+0x600>)
 80186d8:	f8c0 c000 	str.w	ip, [r0]
 80186dc:	f8c2 c000 	str.w	ip, [r2]
 80186e0:	2900      	cmp	r1, #0
 80186e2:	f040 81d4 	bne.w	8018a8e <nema_vg_draw_path+0x65e>
 80186e6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80186ea:	eef1 5a00 	vmov.f32	s11, #16	@ 0x40800000  4.0
 80186ee:	edd4 3a04 	vldr	s7, [r4, #16]
 80186f2:	ee75 5a86 	vadd.f32	s11, s11, s12
 80186f6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80186fa:	4ace      	ldr	r2, [pc, #824]	@ (8018a34 <nema_vg_draw_path+0x604>)
 80186fc:	ee36 6a86 	vadd.f32	s12, s13, s12
 8018700:	6812      	ldr	r2, [r2, #0]
 8018702:	edc2 3a06 	vstr	s7, [r2, #24]
 8018706:	edd4 2a05 	vldr	s5, [r4, #20]
 801870a:	ee72 2ac6 	vsub.f32	s5, s5, s12
 801870e:	edc2 2a07 	vstr	s5, [r2, #28]
 8018712:	ed94 7a08 	vldr	s14, [r4, #32]
 8018716:	edd4 7a04 	vldr	s15, [r4, #16]
 801871a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801871e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8018722:	edc2 7a08 	vstr	s15, [r2, #32]
 8018726:	ed94 2a05 	vldr	s4, [r4, #20]
 801872a:	ee32 2a46 	vsub.f32	s4, s4, s12
 801872e:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 8018732:	edd4 6a08 	vldr	s13, [r4, #32]
 8018736:	ed94 7a04 	vldr	s14, [r4, #16]
 801873a:	ee37 7a26 	vadd.f32	s14, s14, s13
 801873e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018742:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 8018746:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 801874a:	edd4 6a05 	vldr	s13, [r4, #20]
 801874e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018752:	ee36 3a86 	vadd.f32	s6, s13, s12
 8018756:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 801875a:	edd4 6a04 	vldr	s13, [r4, #16]
 801875e:	ee76 5ae5 	vsub.f32	s11, s13, s11
 8018762:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 8018766:	edd4 6a05 	vldr	s13, [r4, #20]
 801876a:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 801876e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018772:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018776:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 801877a:	2900      	cmp	r1, #0
 801877c:	d05e      	beq.n	801883c <nema_vg_draw_path+0x40c>
 801877e:	49ae      	ldr	r1, [pc, #696]	@ (8018a38 <nema_vg_draw_path+0x608>)
 8018780:	ed91 6a00 	vldr	s12, [r1]
 8018784:	edd1 4a01 	vldr	s9, [r1, #4]
 8018788:	ee63 0a86 	vmul.f32	s1, s7, s12
 801878c:	ee22 5aa4 	vmul.f32	s10, s5, s9
 8018790:	ed91 0a02 	vldr	s0, [r1, #8]
 8018794:	ee70 0a85 	vadd.f32	s1, s1, s10
 8018798:	ee70 0a80 	vadd.f32	s1, s1, s0
 801879c:	edc2 0a06 	vstr	s1, [r2, #24]
 80187a0:	ed91 4a04 	vldr	s8, [r1, #16]
 80187a4:	ed91 5a03 	vldr	s10, [r1, #12]
 80187a8:	ee62 8a24 	vmul.f32	s17, s4, s9
 80187ac:	ee63 3a85 	vmul.f32	s7, s7, s10
 80187b0:	ee27 1a85 	vmul.f32	s2, s15, s10
 80187b4:	ee67 1a05 	vmul.f32	s3, s14, s10
 80187b8:	ee23 8a04 	vmul.f32	s16, s6, s8
 80187bc:	ee62 2a84 	vmul.f32	s5, s5, s8
 80187c0:	ee23 3a24 	vmul.f32	s6, s6, s9
 80187c4:	ee67 7a86 	vmul.f32	s15, s15, s12
 80187c8:	ee22 9a04 	vmul.f32	s18, s4, s8
 80187cc:	ee25 5a85 	vmul.f32	s10, s11, s10
 80187d0:	ee27 7a06 	vmul.f32	s14, s14, s12
 80187d4:	ee65 5a86 	vmul.f32	s11, s11, s12
 80187d8:	ee26 4a84 	vmul.f32	s8, s13, s8
 80187dc:	ee66 4aa4 	vmul.f32	s9, s13, s9
 80187e0:	ed91 6a05 	vldr	s12, [r1, #20]
 80187e4:	ee73 2aa2 	vadd.f32	s5, s7, s5
 80187e8:	ee71 6a88 	vadd.f32	s13, s3, s16
 80187ec:	ee37 7a03 	vadd.f32	s14, s14, s6
 80187f0:	ee31 2a09 	vadd.f32	s4, s2, s18
 80187f4:	ee77 7aa8 	vadd.f32	s15, s15, s17
 80187f8:	ee35 5a04 	vadd.f32	s10, s10, s8
 80187fc:	ee75 5aa4 	vadd.f32	s11, s11, s9
 8018800:	ee36 3a86 	vadd.f32	s6, s13, s12
 8018804:	ee72 2a86 	vadd.f32	s5, s5, s12
 8018808:	ee32 2a06 	vadd.f32	s4, s4, s12
 801880c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8018810:	ee37 7a00 	vadd.f32	s14, s14, s0
 8018814:	ee75 6a06 	vadd.f32	s13, s10, s12
 8018818:	ee75 5a80 	vadd.f32	s11, s11, s0
 801881c:	eef0 3a60 	vmov.f32	s7, s1
 8018820:	edc2 2a07 	vstr	s5, [r2, #28]
 8018824:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 8018828:	edc2 7a08 	vstr	s15, [r2, #32]
 801882c:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 8018830:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 8018834:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 8018838:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 801883c:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8018840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018844:	f240 8167 	bls.w	8018b16 <nema_vg_draw_path+0x6e6>
 8018848:	eef5 2ac0 	vcmpe.f32	s5, #0.0
 801884c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018850:	f240 81c6 	bls.w	8018be0 <nema_vg_draw_path+0x7b0>
 8018854:	ed92 6a04 	vldr	s12, [r2, #16]
 8018858:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801885c:	eeb4 6ae3 	vcmpe.f32	s12, s7
 8018860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018864:	d80f      	bhi.n	8018886 <nema_vg_draw_path+0x456>
 8018866:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801886a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801886e:	d80a      	bhi.n	8018886 <nema_vg_draw_path+0x456>
 8018870:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018878:	d805      	bhi.n	8018886 <nema_vg_draw_path+0x456>
 801887a:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801887e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018882:	f67f ae0d 	bls.w	80184a0 <nema_vg_draw_path+0x70>
 8018886:	ed92 6a05 	vldr	s12, [r2, #20]
 801888a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801888e:	eeb4 6ae2 	vcmpe.f32	s12, s5
 8018892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018896:	d80f      	bhi.n	80188b8 <nema_vg_draw_path+0x488>
 8018898:	eeb4 6ac2 	vcmpe.f32	s12, s4
 801889c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188a0:	d80a      	bhi.n	80188b8 <nema_vg_draw_path+0x488>
 80188a2:	eeb4 6ac3 	vcmpe.f32	s12, s6
 80188a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188aa:	d805      	bhi.n	80188b8 <nema_vg_draw_path+0x488>
 80188ac:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80188b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188b4:	f67f adf4 	bls.w	80184a0 <nema_vg_draw_path+0x70>
 80188b8:	7f9a      	ldrb	r2, [r3, #30]
 80188ba:	2a00      	cmp	r2, #0
 80188bc:	f040 809b 	bne.w	80189f6 <nema_vg_draw_path+0x5c6>
 80188c0:	ed9f 6a5e 	vldr	s12, [pc, #376]	@ 8018a3c <nema_vg_draw_path+0x60c>
 80188c4:	eef4 3ac6 	vcmpe.f32	s7, s12
 80188c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188cc:	dc4c      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 80188ce:	eef4 2ac6 	vcmpe.f32	s5, s12
 80188d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188d6:	dc47      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 80188d8:	eef4 7ac6 	vcmpe.f32	s15, s12
 80188dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188e0:	dc42      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 80188e2:	eeb4 2ac6 	vcmpe.f32	s4, s12
 80188e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188ea:	dc3d      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 80188ec:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80188f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188f4:	dc38      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 80188f6:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80188fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188fe:	dc33      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 8018900:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018908:	dc2e      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 801890a:	eef4 6ac6 	vcmpe.f32	s13, s12
 801890e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018912:	dc29      	bgt.n	8018968 <nema_vg_draw_path+0x538>
 8018914:	ed9f 6a4a 	vldr	s12, [pc, #296]	@ 8018a40 <nema_vg_draw_path+0x610>
 8018918:	eef4 3ac6 	vcmpe.f32	s7, s12
 801891c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018920:	d422      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 8018922:	eef4 2ac6 	vcmpe.f32	s5, s12
 8018926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801892a:	d41d      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 801892c:	eef4 7ac6 	vcmpe.f32	s15, s12
 8018930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018934:	d418      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 8018936:	eeb4 2ac6 	vcmpe.f32	s4, s12
 801893a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801893e:	d413      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 8018940:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8018944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018948:	d40e      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 801894a:	eeb4 3ac6 	vcmpe.f32	s6, s12
 801894e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018952:	d409      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 8018954:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801895c:	d404      	bmi.n	8018968 <nema_vg_draw_path+0x538>
 801895e:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018966:	d546      	bpl.n	80189f6 <nema_vg_draw_path+0x5c6>
 8018968:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801896a:	0759      	lsls	r1, r3, #29
 801896c:	f140 82a9 	bpl.w	8018ec2 <nema_vg_draw_path+0xa92>
 8018970:	4620      	mov	r0, r4
 8018972:	4629      	mov	r1, r5
 8018974:	f003 fe86 	bl	801c684 <draw_clipped_path>
 8018978:	4604      	mov	r4, r0
 801897a:	2800      	cmp	r0, #0
 801897c:	f43f ae35 	beq.w	80185ea <nema_vg_draw_path+0x1ba>
 8018980:	f004 f880 	bl	801ca84 <nema_vg_set_error>
 8018984:	e631      	b.n	80185ea <nema_vg_draw_path+0x1ba>
 8018986:	2900      	cmp	r1, #0
 8018988:	d162      	bne.n	8018a50 <nema_vg_draw_path+0x620>
 801898a:	eeb0 7a48 	vmov.f32	s14, s16
 801898e:	eef0 7a48 	vmov.f32	s15, s16
 8018992:	2e00      	cmp	r6, #0
 8018994:	f43f ae7b 	beq.w	801868e <nema_vg_draw_path+0x25e>
 8018998:	4a2a      	ldr	r2, [pc, #168]	@ (8018a44 <nema_vg_draw_path+0x614>)
 801899a:	ed88 8a00 	vstr	s16, [r8]
 801899e:	edc2 7a00 	vstr	s15, [r2]
 80189a2:	4a29      	ldr	r2, [pc, #164]	@ (8018a48 <nema_vg_draw_path+0x618>)
 80189a4:	ed82 7a00 	vstr	s14, [r2]
 80189a8:	e671      	b.n	801868e <nema_vg_draw_path+0x25e>
 80189aa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80189ae:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80189b2:	f004 f867 	bl	801ca84 <nema_vg_set_error>
 80189b6:	4620      	mov	r0, r4
 80189b8:	b007      	add	sp, #28
 80189ba:	ecbd 8b04 	vpop	{d8-d9}
 80189be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189ca:	f67f ad69 	bls.w	80184a0 <nema_vg_draw_path+0x70>
 80189ce:	0e03      	lsrs	r3, r0, #24
 80189d0:	ee07 3a10 	vmov	s14, r3
 80189d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80189d8:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80189dc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80189e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80189e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80189e8:	ee17 3a90 	vmov	r3, s15
 80189ec:	f363 601f 	bfi	r0, r3, #24, #8
 80189f0:	f8cb 0000 	str.w	r0, [fp]
 80189f4:	e598      	b.n	8018528 <nema_vg_draw_path+0xf8>
 80189f6:	f1b8 0f00 	cmp.w	r8, #0
 80189fa:	f040 8206 	bne.w	8018e0a <nema_vg_draw_path+0x9da>
 80189fe:	4b13      	ldr	r3, [pc, #76]	@ (8018a4c <nema_vg_draw_path+0x61c>)
 8018a00:	781a      	ldrb	r2, [r3, #0]
 8018a02:	2a01      	cmp	r2, #1
 8018a04:	f000 81c5 	beq.w	8018d92 <nema_vg_draw_path+0x962>
 8018a08:	4620      	mov	r0, r4
 8018a0a:	4629      	mov	r1, r5
 8018a0c:	f7fd fe6a 	bl	80166e4 <draw_with_stencil>
 8018a10:	4604      	mov	r4, r0
 8018a12:	2800      	cmp	r0, #0
 8018a14:	f43f ade9 	beq.w	80185ea <nema_vg_draw_path+0x1ba>
 8018a18:	e7b2      	b.n	8018980 <nema_vg_draw_path+0x550>
 8018a1a:	2040      	movs	r0, #64	@ 0x40
 8018a1c:	f004 f832 	bl	801ca84 <nema_vg_set_error>
 8018a20:	2440      	movs	r4, #64	@ 0x40
 8018a22:	e5e2      	b.n	80185ea <nema_vg_draw_path+0x1ba>
 8018a24:	20082fb4 	.word	0x20082fb4
 8018a28:	20082fb0 	.word	0x20082fb0
 8018a2c:	20082ff0 	.word	0x20082ff0
 8018a30:	20082ff4 	.word	0x20082ff4
 8018a34:	20083054 	.word	0x20083054
 8018a38:	20083030 	.word	0x20083030
 8018a3c:	44bfe000 	.word	0x44bfe000
 8018a40:	c3ff8000 	.word	0xc3ff8000
 8018a44:	20000138 	.word	0x20000138
 8018a48:	2000013c 	.word	0x2000013c
 8018a4c:	20000064 	.word	0x20000064
 8018a50:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018a54:	f04f 0c00 	mov.w	ip, #0
 8018a58:	48d6      	ldr	r0, [pc, #856]	@ (8018db4 <nema_vg_draw_path+0x984>)
 8018a5a:	4ed7      	ldr	r6, [pc, #860]	@ (8018db8 <nema_vg_draw_path+0x988>)
 8018a5c:	6002      	str	r2, [r0, #0]
 8018a5e:	6032      	str	r2, [r6, #0]
 8018a60:	f8c8 2000 	str.w	r2, [r8]
 8018a64:	7f5a      	ldrb	r2, [r3, #29]
 8018a66:	48d5      	ldr	r0, [pc, #852]	@ (8018dbc <nema_vg_draw_path+0x98c>)
 8018a68:	4ed5      	ldr	r6, [pc, #852]	@ (8018dc0 <nema_vg_draw_path+0x990>)
 8018a6a:	0792      	lsls	r2, r2, #30
 8018a6c:	f8c0 c000 	str.w	ip, [r0]
 8018a70:	f8c6 c000 	str.w	ip, [r6]
 8018a74:	f57f ae24 	bpl.w	80186c0 <nema_vg_draw_path+0x290>
 8018a78:	f04f 0e00 	mov.w	lr, #0
 8018a7c:	46e0      	mov	r8, ip
 8018a7e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018a82:	48d0      	ldr	r0, [pc, #832]	@ (8018dc4 <nema_vg_draw_path+0x994>)
 8018a84:	4ad0      	ldr	r2, [pc, #832]	@ (8018dc8 <nema_vg_draw_path+0x998>)
 8018a86:	f8c0 e000 	str.w	lr, [r0]
 8018a8a:	f8c2 e000 	str.w	lr, [r2]
 8018a8e:	f8df a340 	ldr.w	sl, [pc, #832]	@ 8018dd0 <nema_vg_draw_path+0x9a0>
 8018a92:	ed9a 0a00 	vldr	s0, [sl]
 8018a96:	edda 7a01 	vldr	s15, [sl, #4]
 8018a9a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018a9e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018aa2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018aa6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018aae:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018ab2:	f100 8254 	bmi.w	8018f5e <nema_vg_draw_path+0xb2e>
 8018ab6:	ed9a 0a03 	vldr	s0, [sl, #12]
 8018aba:	edda 7a04 	vldr	s15, [sl, #16]
 8018abe:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018ac2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018ac6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018aca:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018ace:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ad2:	eeb1 8ac0 	vsqrt.f32	s16, s0
 8018ad6:	f100 8233 	bmi.w	8018f40 <nema_vg_draw_path+0xb10>
 8018ada:	eddf 7abc 	vldr	s15, [pc, #752]	@ 8018dcc <nema_vg_draw_path+0x99c>
 8018ade:	eef4 8ae7 	vcmpe.f32	s17, s15
 8018ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ae6:	bfc4      	itt	gt
 8018ae8:	eef1 7a00 	vmovgt.f32	s15, #16	@ 0x40800000  4.0
 8018aec:	eec7 5aa8 	vdivgt.f32	s11, s15, s17
 8018af0:	eddf 7ab6 	vldr	s15, [pc, #728]	@ 8018dcc <nema_vg_draw_path+0x99c>
 8018af4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8018af8:	bfd8      	it	le
 8018afa:	eef1 5a00 	vmovle.f32	s11, #16	@ 0x40800000  4.0
 8018afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b02:	edc0 8a00 	vstr	s17, [r0]
 8018b06:	ed82 8a00 	vstr	s16, [r2]
 8018b0a:	dd7c      	ble.n	8018c06 <nema_vg_draw_path+0x7d6>
 8018b0c:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8018b10:	eec7 6a88 	vdiv.f32	s13, s15, s16
 8018b14:	e5eb      	b.n	80186ee <nema_vg_draw_path+0x2be>
 8018b16:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b1e:	f63f ae93 	bhi.w	8018848 <nema_vg_draw_path+0x418>
 8018b22:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b2a:	f63f ae8d 	bhi.w	8018848 <nema_vg_draw_path+0x418>
 8018b2e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b36:	f63f ae87 	bhi.w	8018848 <nema_vg_draw_path+0x418>
 8018b3a:	e4b1      	b.n	80184a0 <nema_vg_draw_path+0x70>
 8018b3c:	f8df a290 	ldr.w	sl, [pc, #656]	@ 8018dd0 <nema_vg_draw_path+0x9a0>
 8018b40:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018b42:	ed9a 0a00 	vldr	s0, [sl]
 8018b46:	edda 7a01 	vldr	s15, [sl, #4]
 8018b4a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018b4e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018b52:	0792      	lsls	r2, r2, #30
 8018b54:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018b58:	f100 80ad 	bmi.w	8018cb6 <nema_vg_draw_path+0x886>
 8018b5c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b64:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018b68:	f100 8211 	bmi.w	8018f8e <nema_vg_draw_path+0xb5e>
 8018b6c:	edda 7a03 	vldr	s15, [sl, #12]
 8018b70:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018b74:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018b78:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018b7c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018b80:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b88:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018b8c:	f100 81f6 	bmi.w	8018f7c <nema_vg_draw_path+0xb4c>
 8018b90:	ee68 7a28 	vmul.f32	s15, s16, s17
 8018b94:	ee28 7a09 	vmul.f32	s14, s16, s18
 8018b98:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018b9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ba0:	f340 8163 	ble.w	8018e6a <nema_vg_draw_path+0xa3a>
 8018ba4:	eeb0 8a67 	vmov.f32	s16, s15
 8018ba8:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018bac:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018bb0:	e4f5      	b.n	801859e <nema_vg_draw_path+0x16e>
 8018bb2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018bb6:	2000      	movs	r0, #0
 8018bb8:	4e7e      	ldr	r6, [pc, #504]	@ (8018db4 <nema_vg_draw_path+0x984>)
 8018bba:	f8c8 2000 	str.w	r2, [r8]
 8018bbe:	6032      	str	r2, [r6, #0]
 8018bc0:	4e7d      	ldr	r6, [pc, #500]	@ (8018db8 <nema_vg_draw_path+0x988>)
 8018bc2:	f8df c1f8 	ldr.w	ip, [pc, #504]	@ 8018dbc <nema_vg_draw_path+0x98c>
 8018bc6:	6032      	str	r2, [r6, #0]
 8018bc8:	7f5a      	ldrb	r2, [r3, #29]
 8018bca:	4e7d      	ldr	r6, [pc, #500]	@ (8018dc0 <nema_vg_draw_path+0x990>)
 8018bcc:	0792      	lsls	r2, r2, #30
 8018bce:	f8cc 0000 	str.w	r0, [ip]
 8018bd2:	6030      	str	r0, [r6, #0]
 8018bd4:	f57f ad74 	bpl.w	80186c0 <nema_vg_draw_path+0x290>
 8018bd8:	4680      	mov	r8, r0
 8018bda:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018bde:	e577      	b.n	80186d0 <nema_vg_draw_path+0x2a0>
 8018be0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018be8:	f63f ae34 	bhi.w	8018854 <nema_vg_draw_path+0x424>
 8018bec:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8018bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bf4:	f63f ae2e 	bhi.w	8018854 <nema_vg_draw_path+0x424>
 8018bf8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8018bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c00:	f63f ae28 	bhi.w	8018854 <nema_vg_draw_path+0x424>
 8018c04:	e44c      	b.n	80184a0 <nema_vg_draw_path+0x70>
 8018c06:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018c0a:	e570      	b.n	80186ee <nema_vg_draw_path+0x2be>
 8018c0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018c0e:	0792      	lsls	r2, r2, #30
 8018c10:	f53f acc1 	bmi.w	8018596 <nema_vg_draw_path+0x166>
 8018c14:	f8df a1b8 	ldr.w	sl, [pc, #440]	@ 8018dd0 <nema_vg_draw_path+0x9a0>
 8018c18:	ed9a 0a01 	vldr	s0, [sl, #4]
 8018c1c:	edda 7a00 	vldr	s15, [sl]
 8018c20:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018c24:	ee07 0aa7 	vmla.f32	s0, s15, s15
 8018c28:	e798      	b.n	8018b5c <nema_vg_draw_path+0x72c>
 8018c2a:	b2c2      	uxtb	r2, r0
 8018c2c:	ee05 2a10 	vmov	s10, r2
 8018c30:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8018c34:	ee06 2a10 	vmov	s12, r2
 8018c38:	0e02      	lsrs	r2, r0, #24
 8018c3a:	ee06 2a90 	vmov	s13, r2
 8018c3e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018c42:	ee07 2a10 	vmov	s14, r2
 8018c46:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018c4a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018c4e:	ee25 5a27 	vmul.f32	s10, s10, s15
 8018c52:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018c56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c5a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8018c5e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8018c62:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018c66:	eef0 7a65 	vmov.f32	s15, s11
 8018c6a:	eefc 5ac5 	vcvt.u32.f32	s11, s10
 8018c6e:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8018c72:	edcd 5a01 	vstr	s11, [sp, #4]
 8018c76:	eebc 6ac6 	vcvt.u32.f32	s12, s12
 8018c7a:	ee16 ea90 	vmov	lr, s13
 8018c7e:	eefc 6ac7 	vcvt.u32.f32	s13, s14
 8018c82:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8018c86:	ee16 0a10 	vmov	r0, s12
 8018c8a:	ea42 6e0e 	orr.w	lr, r2, lr, lsl #24
 8018c8e:	ee16 2a90 	vmov	r2, s13
 8018c92:	0200      	lsls	r0, r0, #8
 8018c94:	b280      	uxth	r0, r0
 8018c96:	0412      	lsls	r2, r2, #16
 8018c98:	ea4e 0000 	orr.w	r0, lr, r0
 8018c9c:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8018ca0:	4302      	orrs	r2, r0
 8018ca2:	eeb0 7a67 	vmov.f32	s14, s15
 8018ca6:	eeb0 8a67 	vmov.f32	s16, s15
 8018caa:	f8cb 2000 	str.w	r2, [fp]
 8018cae:	2900      	cmp	r1, #0
 8018cb0:	f47f aced 	bne.w	801868e <nema_vg_draw_path+0x25e>
 8018cb4:	e66d      	b.n	8018992 <nema_vg_draw_path+0x562>
 8018cb6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018cba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cbe:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018cc2:	f100 8176 	bmi.w	8018fb2 <nema_vg_draw_path+0xb82>
 8018cc6:	edda 7a03 	vldr	s15, [sl, #12]
 8018cca:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018cce:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018cd2:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018cd6:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018cda:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018cde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ce2:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018ce6:	f100 815b 	bmi.w	8018fa0 <nema_vg_draw_path+0xb70>
 8018cea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018cee:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8018cf2:	eec6 7aa8 	vdiv.f32	s15, s13, s17
 8018cf6:	ee27 7a08 	vmul.f32	s14, s14, s16
 8018cfa:	ee67 7a88 	vmul.f32	s15, s15, s16
 8018cfe:	4a2d      	ldr	r2, [pc, #180]	@ (8018db4 <nema_vg_draw_path+0x984>)
 8018d00:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018d04:	ed82 7a00 	vstr	s14, [r2]
 8018d08:	4a2b      	ldr	r2, [pc, #172]	@ (8018db8 <nema_vg_draw_path+0x988>)
 8018d0a:	eeb0 7a48 	vmov.f32	s14, s16
 8018d0e:	edc2 7a00 	vstr	s15, [r2]
 8018d12:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018d16:	eef0 7a48 	vmov.f32	s15, s16
 8018d1a:	e440      	b.n	801859e <nema_vg_draw_path+0x16e>
 8018d1c:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018d20:	482b      	ldr	r0, [pc, #172]	@ (8018dd0 <nema_vg_draw_path+0x9a0>)
 8018d22:	f7f8 fe0b 	bl	801193c <nema_mat3x3_copy>
 8018d26:	f7ff bbe8 	b.w	80184fa <nema_vg_draw_path+0xca>
 8018d2a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8018d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d32:	f73f acb8 	bgt.w	80186a6 <nema_vg_draw_path+0x276>
 8018d36:	4a1f      	ldr	r2, [pc, #124]	@ (8018db4 <nema_vg_draw_path+0x984>)
 8018d38:	4e21      	ldr	r6, [pc, #132]	@ (8018dc0 <nema_vg_draw_path+0x990>)
 8018d3a:	edc2 6a00 	vstr	s13, [r2]
 8018d3e:	4a1e      	ldr	r2, [pc, #120]	@ (8018db8 <nema_vg_draw_path+0x988>)
 8018d40:	481e      	ldr	r0, [pc, #120]	@ (8018dbc <nema_vg_draw_path+0x98c>)
 8018d42:	edc2 6a00 	vstr	s13, [r2]
 8018d46:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018d4a:	edc8 6a00 	vstr	s13, [r8]
 8018d4e:	f8c6 c000 	str.w	ip, [r6]
 8018d52:	f8c0 c000 	str.w	ip, [r0]
 8018d56:	2a00      	cmp	r2, #0
 8018d58:	f47f acb2 	bne.w	80186c0 <nema_vg_draw_path+0x290>
 8018d5c:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 8018d60:	2a01      	cmp	r2, #1
 8018d62:	d049      	beq.n	8018df8 <nema_vg_draw_path+0x9c8>
 8018d64:	2201      	movs	r2, #1
 8018d66:	ed98 6a00 	vldr	s12, [r8]
 8018d6a:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018d6e:	6002      	str	r2, [r0, #0]
 8018d70:	4690      	mov	r8, r2
 8018d72:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018d76:	e4ab      	b.n	80186d0 <nema_vg_draw_path+0x2a0>
 8018d78:	eef1 6a47 	vneg.f32	s13, s14
 8018d7c:	eef4 5ae6 	vcmpe.f32	s11, s13
 8018d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d84:	f53f ac68 	bmi.w	8018658 <nema_vg_draw_path+0x228>
 8018d88:	eddf 5a12 	vldr	s11, [pc, #72]	@ 8018dd4 <nema_vg_draw_path+0x9a4>
 8018d8c:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8018d90:	e46d      	b.n	801866e <nema_vg_draw_path+0x23e>
 8018d92:	685b      	ldr	r3, [r3, #4]
 8018d94:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8018d98:	f000 80c7 	beq.w	8018f2a <nema_vg_draw_path+0xafa>
 8018d9c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8018da0:	f47f ae32 	bne.w	8018a08 <nema_vg_draw_path+0x5d8>
 8018da4:	2000      	movs	r0, #0
 8018da6:	f7f9 f93d 	bl	8012024 <nema_enable_tiling_2x2>
 8018daa:	2204      	movs	r2, #4
 8018dac:	683b      	ldr	r3, [r7, #0]
 8018dae:	77da      	strb	r2, [r3, #31]
 8018db0:	e62a      	b.n	8018a08 <nema_vg_draw_path+0x5d8>
 8018db2:	bf00      	nop
 8018db4:	20000138 	.word	0x20000138
 8018db8:	2000013c 	.word	0x2000013c
 8018dbc:	20082fb0 	.word	0x20082fb0
 8018dc0:	20082fb4 	.word	0x20082fb4
 8018dc4:	20082ff0 	.word	0x20082ff0
 8018dc8:	20082ff4 	.word	0x20082ff4
 8018dcc:	3a83126f 	.word	0x3a83126f
 8018dd0:	20083030 	.word	0x20083030
 8018dd4:	3727c5ac 	.word	0x3727c5ac
 8018dd8:	f1ba 0f01 	cmp.w	sl, #1
 8018ddc:	d0be      	beq.n	8018d5c <nema_vg_draw_path+0x92c>
 8018dde:	f240 5201 	movw	r2, #1281	@ 0x501
 8018de2:	fa1f fa8a 	uxth.w	sl, sl
 8018de6:	4592      	cmp	sl, r2
 8018de8:	d106      	bne.n	8018df8 <nema_vg_draw_path+0x9c8>
 8018dea:	f8db 2000 	ldr.w	r2, [fp]
 8018dee:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8018df2:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8018df6:	d0b1      	beq.n	8018d5c <nema_vg_draw_path+0x92c>
 8018df8:	ed98 6a00 	vldr	s12, [r8]
 8018dfc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8018e00:	f04f 0800 	mov.w	r8, #0
 8018e04:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018e08:	e462      	b.n	80186d0 <nema_vg_draw_path+0x2a0>
 8018e0a:	f240 5201 	movw	r2, #1281	@ 0x501
 8018e0e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8018e10:	b283      	uxth	r3, r0
 8018e12:	4293      	cmp	r3, r2
 8018e14:	d03a      	beq.n	8018e8c <nema_vg_draw_path+0xa5c>
 8018e16:	f04f 33ff 	mov.w	r3, #4294967295
 8018e1a:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 8018e1e:	461a      	mov	r2, r3
 8018e20:	2100      	movs	r1, #0
 8018e22:	f005 f905 	bl	801e030 <nema_set_blend>
 8018e26:	f8db 0000 	ldr.w	r0, [fp]
 8018e2a:	f7f9 fabb 	bl	80123a4 <nema_set_raster_color>
 8018e2e:	f899 3000 	ldrb.w	r3, [r9]
 8018e32:	4d64      	ldr	r5, [pc, #400]	@ (8018fc4 <nema_vg_draw_path+0xb94>)
 8018e34:	702b      	strb	r3, [r5, #0]
 8018e36:	2b00      	cmp	r3, #0
 8018e38:	d14b      	bne.n	8018ed2 <nema_vg_draw_path+0xaa2>
 8018e3a:	6833      	ldr	r3, [r6, #0]
 8018e3c:	4620      	mov	r0, r4
 8018e3e:	b9e3      	cbnz	r3, 8018e7a <nema_vg_draw_path+0xa4a>
 8018e40:	f7fa fc62 	bl	8013708 <stroke_thin_path>
 8018e44:	4604      	mov	r4, r0
 8018e46:	b9e8      	cbnz	r0, 8018e84 <nema_vg_draw_path+0xa54>
 8018e48:	782b      	ldrb	r3, [r5, #0]
 8018e4a:	2b00      	cmp	r3, #0
 8018e4c:	f43f ab28 	beq.w	80184a0 <nema_vg_draw_path+0x70>
 8018e50:	2101      	movs	r1, #1
 8018e52:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8018e56:	f004 ffc9 	bl	801ddec <nema_cl_add_cmd>
 8018e5a:	2300      	movs	r3, #0
 8018e5c:	782a      	ldrb	r2, [r5, #0]
 8018e5e:	461c      	mov	r4, r3
 8018e60:	702b      	strb	r3, [r5, #0]
 8018e62:	f889 2000 	strb.w	r2, [r9]
 8018e66:	f7ff bbc0 	b.w	80185ea <nema_vg_draw_path+0x1ba>
 8018e6a:	eeb0 8a47 	vmov.f32	s16, s14
 8018e6e:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018e72:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018e76:	f7ff bb92 	b.w	801859e <nema_vg_draw_path+0x16e>
 8018e7a:	f7fb fc09 	bl	8014690 <stroke_path>
 8018e7e:	4604      	mov	r4, r0
 8018e80:	2800      	cmp	r0, #0
 8018e82:	d0e1      	beq.n	8018e48 <nema_vg_draw_path+0xa18>
 8018e84:	f003 fdfe 	bl	801ca84 <nema_vg_set_error>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	e579      	b.n	8018980 <nema_vg_draw_path+0x550>
 8018e8c:	2004      	movs	r0, #4
 8018e8e:	f004 ff51 	bl	801dd34 <nema_cl_get_space>
 8018e92:	2800      	cmp	r0, #0
 8018e94:	d050      	beq.n	8018f38 <nema_vg_draw_path+0xb08>
 8018e96:	f44f 7ce8 	mov.w	ip, #464	@ 0x1d0
 8018e9a:	f44f 778e 	mov.w	r7, #284	@ 0x11c
 8018e9e:	f44f 7596 	mov.w	r5, #300	@ 0x12c
 8018ea2:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8018ea6:	f04f 4210 	mov.w	r2, #2415919104	@ 0x90000000
 8018eaa:	f8db 3000 	ldr.w	r3, [fp]
 8018eae:	e9c0 c800 	strd	ip, r8, [r0]
 8018eb2:	6143      	str	r3, [r0, #20]
 8018eb4:	4b44      	ldr	r3, [pc, #272]	@ (8018fc8 <nema_vg_draw_path+0xb98>)
 8018eb6:	6087      	str	r7, [r0, #8]
 8018eb8:	6105      	str	r5, [r0, #16]
 8018eba:	e9c0 1206 	strd	r1, r2, [r0, #24]
 8018ebe:	60c3      	str	r3, [r0, #12]
 8018ec0:	e7b5      	b.n	8018e2e <nema_vg_draw_path+0x9fe>
 8018ec2:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8018ec6:	f003 fddd 	bl	801ca84 <nema_vg_set_error>
 8018eca:	f44f 4480 	mov.w	r4, #16384	@ 0x4000
 8018ece:	f7ff bb8c 	b.w	80185ea <nema_vg_draw_path+0x1ba>
 8018ed2:	2007      	movs	r0, #7
 8018ed4:	f004 ff2e 	bl	801dd34 <nema_cl_get_space>
 8018ed8:	b318      	cbz	r0, 8018f22 <nema_vg_draw_path+0xaf2>
 8018eda:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8018ede:	6002      	str	r2, [r0, #0]
 8018ee0:	f44f 725a 	mov.w	r2, #872	@ 0x368
 8018ee4:	4b39      	ldr	r3, [pc, #228]	@ (8018fcc <nema_vg_draw_path+0xb9c>)
 8018ee6:	6959      	ldr	r1, [r3, #20]
 8018ee8:	6082      	str	r2, [r0, #8]
 8018eea:	f44f 7258 	mov.w	r2, #864	@ 0x360
 8018eee:	6041      	str	r1, [r0, #4]
 8018ef0:	6899      	ldr	r1, [r3, #8]
 8018ef2:	6102      	str	r2, [r0, #16]
 8018ef4:	f44f 7259 	mov.w	r2, #868	@ 0x364
 8018ef8:	60c1      	str	r1, [r0, #12]
 8018efa:	6819      	ldr	r1, [r3, #0]
 8018efc:	6182      	str	r2, [r0, #24]
 8018efe:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8018f02:	6141      	str	r1, [r0, #20]
 8018f04:	6859      	ldr	r1, [r3, #4]
 8018f06:	6202      	str	r2, [r0, #32]
 8018f08:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8018f0c:	61c1      	str	r1, [r0, #28]
 8018f0e:	68d9      	ldr	r1, [r3, #12]
 8018f10:	6282      	str	r2, [r0, #40]	@ 0x28
 8018f12:	6241      	str	r1, [r0, #36]	@ 0x24
 8018f14:	6919      	ldr	r1, [r3, #16]
 8018f16:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8018f1a:	2300      	movs	r3, #0
 8018f1c:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8018f20:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8018f22:	2300      	movs	r3, #0
 8018f24:	f889 3000 	strb.w	r3, [r9]
 8018f28:	e787      	b.n	8018e3a <nema_vg_draw_path+0xa0a>
 8018f2a:	2000      	movs	r0, #0
 8018f2c:	f7f9 f866 	bl	8011ffc <nema_enable_tiling>
 8018f30:	2203      	movs	r2, #3
 8018f32:	683b      	ldr	r3, [r7, #0]
 8018f34:	77da      	strb	r2, [r3, #31]
 8018f36:	e567      	b.n	8018a08 <nema_vg_draw_path+0x5d8>
 8018f38:	f44f 7400 	mov.w	r4, #512	@ 0x200
 8018f3c:	4620      	mov	r0, r4
 8018f3e:	e51f      	b.n	8018980 <nema_vg_draw_path+0x550>
 8018f40:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018f44:	9103      	str	r1, [sp, #12]
 8018f46:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018f4a:	9301      	str	r3, [sp, #4]
 8018f4c:	f018 f978 	bl	8031240 <sqrtf>
 8018f50:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018f54:	9903      	ldr	r1, [sp, #12]
 8018f56:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018f5a:	9b01      	ldr	r3, [sp, #4]
 8018f5c:	e5bd      	b.n	8018ada <nema_vg_draw_path+0x6aa>
 8018f5e:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018f62:	9103      	str	r1, [sp, #12]
 8018f64:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018f68:	9301      	str	r3, [sp, #4]
 8018f6a:	f018 f969 	bl	8031240 <sqrtf>
 8018f6e:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018f72:	9903      	ldr	r1, [sp, #12]
 8018f74:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018f78:	9b01      	ldr	r3, [sp, #4]
 8018f7a:	e59c      	b.n	8018ab6 <nema_vg_draw_path+0x686>
 8018f7c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f80:	9001      	str	r0, [sp, #4]
 8018f82:	f018 f95d 	bl	8031240 <sqrtf>
 8018f86:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f8a:	9801      	ldr	r0, [sp, #4]
 8018f8c:	e600      	b.n	8018b90 <nema_vg_draw_path+0x760>
 8018f8e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f92:	9001      	str	r0, [sp, #4]
 8018f94:	f018 f954 	bl	8031240 <sqrtf>
 8018f98:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f9c:	9801      	ldr	r0, [sp, #4]
 8018f9e:	e5e5      	b.n	8018b6c <nema_vg_draw_path+0x73c>
 8018fa0:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018fa4:	9001      	str	r0, [sp, #4]
 8018fa6:	f018 f94b 	bl	8031240 <sqrtf>
 8018faa:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018fae:	9801      	ldr	r0, [sp, #4]
 8018fb0:	e69b      	b.n	8018cea <nema_vg_draw_path+0x8ba>
 8018fb2:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018fb6:	9001      	str	r0, [sp, #4]
 8018fb8:	f018 f942 	bl	8031240 <sqrtf>
 8018fbc:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018fc0:	9801      	ldr	r0, [sp, #4]
 8018fc2:	e680      	b.n	8018cc6 <nema_vg_draw_path+0x896>
 8018fc4:	20082ff8 	.word	0x20082ff8
 8018fc8:	941fb414 	.word	0x941fb414
 8018fcc:	20083030 	.word	0x20083030

08018fd0 <nema_vg_init_stencil_pool>:
 8018fd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018fd2:	460f      	mov	r7, r1
 8018fd4:	4606      	mov	r6, r0
 8018fd6:	b091      	sub	sp, #68	@ 0x44
 8018fd8:	ac04      	add	r4, sp, #16
 8018fda:	4613      	mov	r3, r2
 8018fdc:	4601      	mov	r1, r0
 8018fde:	463a      	mov	r2, r7
 8018fe0:	4620      	mov	r0, r4
 8018fe2:	f003 fcc1 	bl	801c968 <stencil_buffer_create>
 8018fe6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8018fea:	ad0c      	add	r5, sp, #48	@ 0x30
 8018fec:	ac08      	add	r4, sp, #32
 8018fee:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8018ff2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8018ff6:	f003 fc67 	bl	801c8c8 <context_reset>
 8018ffa:	2216      	movs	r2, #22
 8018ffc:	2101      	movs	r1, #1
 8018ffe:	4821      	ldr	r0, [pc, #132]	@ (8019084 <nema_vg_init_stencil_pool+0xb4>)
 8019000:	f7f9 f952 	bl	80122a8 <nema_load_frag_shader>
 8019004:	2217      	movs	r2, #23
 8019006:	2101      	movs	r1, #1
 8019008:	481f      	ldr	r0, [pc, #124]	@ (8019088 <nema_vg_init_stencil_pool+0xb8>)
 801900a:	f7f9 f94d 	bl	80122a8 <nema_load_frag_shader>
 801900e:	2101      	movs	r1, #1
 8019010:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8019014:	f004 feea 	bl	801ddec <nema_cl_add_cmd>
 8019018:	2215      	movs	r2, #21
 801901a:	2101      	movs	r1, #1
 801901c:	481b      	ldr	r0, [pc, #108]	@ (801908c <nema_vg_init_stencil_pool+0xbc>)
 801901e:	f7f9 f943 	bl	80122a8 <nema_load_frag_shader>
 8019022:	2214      	movs	r2, #20
 8019024:	2101      	movs	r1, #1
 8019026:	481a      	ldr	r0, [pc, #104]	@ (8019090 <nema_vg_init_stencil_pool+0xc0>)
 8019028:	f7f9 f93e 	bl	80122a8 <nema_load_frag_shader>
 801902c:	4c19      	ldr	r4, [pc, #100]	@ (8019094 <nema_vg_init_stencil_pool+0xc4>)
 801902e:	4b1a      	ldr	r3, [pc, #104]	@ (8019098 <nema_vg_init_stencil_pool+0xc8>)
 8019030:	a802      	add	r0, sp, #8
 8019032:	2213      	movs	r2, #19
 8019034:	2101      	movs	r1, #1
 8019036:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801903a:	f7f9 f935 	bl	80122a8 <nema_load_frag_shader>
 801903e:	ab10      	add	r3, sp, #64	@ 0x40
 8019040:	e913 0003 	ldmdb	r3, {r0, r1}
 8019044:	e895 000c 	ldmia.w	r5, {r2, r3}
 8019048:	e88d 0003 	stmia.w	sp, {r0, r1}
 801904c:	4639      	mov	r1, r7
 801904e:	4630      	mov	r0, r6
 8019050:	f003 fc9e 	bl	801c990 <stencil_buffer_set>
 8019054:	f003 fcd8 	bl	801ca08 <lut_buffer_create>
 8019058:	f004 fad4 	bl	801d604 <tsvg_init>
 801905c:	4639      	mov	r1, r7
 801905e:	4630      	mov	r0, r6
 8019060:	f004 fac6 	bl	801d5f0 <set_tsvg_text_max_size>
 8019064:	f003 fc7c 	bl	801c960 <nema_vg_get_context>
 8019068:	4c0c      	ldr	r4, [pc, #48]	@ (801909c <nema_vg_init_stencil_pool+0xcc>)
 801906a:	6020      	str	r0, [r4, #0]
 801906c:	f003 fcc6 	bl	801c9fc <nema_vg_get_stencil>
 8019070:	6822      	ldr	r2, [r4, #0]
 8019072:	490b      	ldr	r1, [pc, #44]	@ (80190a0 <nema_vg_init_stencil_pool+0xd0>)
 8019074:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8019076:	6008      	str	r0, [r1, #0]
 8019078:	f043 0320 	orr.w	r3, r3, #32
 801907c:	6313      	str	r3, [r2, #48]	@ 0x30
 801907e:	b011      	add	sp, #68	@ 0x44
 8019080:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019082:	bf00      	nop
 8019084:	08035d98 	.word	0x08035d98
 8019088:	08035db0 	.word	0x08035db0
 801908c:	08035da8 	.word	0x08035da8
 8019090:	08035da0 	.word	0x08035da0
 8019094:	0a980002 	.word	0x0a980002
 8019098:	8081a046 	.word	0x8081a046
 801909c:	20082fac 	.word	0x20082fac
 80190a0:	20083054 	.word	0x20083054

080190a4 <points_coincide>:
 80190a4:	edd0 7a00 	vldr	s15, [r0]
 80190a8:	ed91 7a00 	vldr	s14, [r1]
 80190ac:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80190b0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80190b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190bc:	bf48      	it	mi
 80190be:	eef1 6a66 	vnegmi.f32	s13, s13
 80190c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190c6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80190ca:	bf4c      	ite	mi
 80190cc:	eeb1 6a67 	vnegmi.f32	s12, s15
 80190d0:	eeb0 6a67 	vmovpl.f32	s12, s15
 80190d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190d8:	d439      	bmi.n	801914e <points_coincide+0xaa>
 80190da:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80190de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190e2:	dc3b      	bgt.n	801915c <points_coincide+0xb8>
 80190e4:	eddf 7a2e 	vldr	s15, [pc, #184]	@ 80191a0 <points_coincide+0xfc>
 80190e8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80190ec:	eef4 6ae7 	vcmpe.f32	s13, s15
 80190f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190f4:	d840      	bhi.n	8019178 <points_coincide+0xd4>
 80190f6:	edd0 7a01 	vldr	s15, [r0, #4]
 80190fa:	ed91 7a01 	vldr	s14, [r1, #4]
 80190fe:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8019102:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019106:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801910a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801910e:	bf48      	it	mi
 8019110:	eef1 6a66 	vnegmi.f32	s13, s13
 8019114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019118:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801911c:	bf4c      	ite	mi
 801911e:	eeb1 6a67 	vnegmi.f32	s12, s15
 8019122:	eeb0 6a67 	vmovpl.f32	s12, s15
 8019126:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801912a:	d427      	bmi.n	801917c <points_coincide+0xd8>
 801912c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019130:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019134:	dc29      	bgt.n	801918a <points_coincide+0xe6>
 8019136:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80191a0 <points_coincide+0xfc>
 801913a:	ee67 7a27 	vmul.f32	s15, s14, s15
 801913e:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019142:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019146:	bf94      	ite	ls
 8019148:	2001      	movls	r0, #1
 801914a:	2000      	movhi	r0, #0
 801914c:	4770      	bx	lr
 801914e:	eeb1 7a47 	vneg.f32	s14, s14
 8019152:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801915a:	d5c3      	bpl.n	80190e4 <points_coincide+0x40>
 801915c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019164:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 80191a0 <points_coincide+0xfc>
 8019168:	d5be      	bpl.n	80190e8 <points_coincide+0x44>
 801916a:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801916e:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019176:	d9be      	bls.n	80190f6 <points_coincide+0x52>
 8019178:	2000      	movs	r0, #0
 801917a:	4770      	bx	lr
 801917c:	eeb1 7a47 	vneg.f32	s14, s14
 8019180:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019188:	d5d5      	bpl.n	8019136 <points_coincide+0x92>
 801918a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801918e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019192:	ed9f 7a03 	vldr	s14, [pc, #12]	@ 80191a0 <points_coincide+0xfc>
 8019196:	d5d0      	bpl.n	801913a <points_coincide+0x96>
 8019198:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801919c:	e7cf      	b.n	801913e <points_coincide+0x9a>
 801919e:	bf00      	nop
 80191a0:	3727c5ac 	.word	0x3727c5ac

080191a4 <add_last_point>:
 80191a4:	b4f0      	push	{r4, r5, r6, r7}
 80191a6:	4b2b      	ldr	r3, [pc, #172]	@ (8019254 <add_last_point+0xb0>)
 80191a8:	b082      	sub	sp, #8
 80191aa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80191ac:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80191b0:	d022      	beq.n	80191f8 <add_last_point+0x54>
 80191b2:	f240 11ff 	movw	r1, #511	@ 0x1ff
 80191b6:	428a      	cmp	r2, r1
 80191b8:	d029      	beq.n	801920e <add_last_point+0x6a>
 80191ba:	4c27      	ldr	r4, [pc, #156]	@ (8019258 <add_last_point+0xb4>)
 80191bc:	695a      	ldr	r2, [r3, #20]
 80191be:	6919      	ldr	r1, [r3, #16]
 80191c0:	6826      	ldr	r6, [r4, #0]
 80191c2:	1c57      	adds	r7, r2, #1
 80191c4:	1c8d      	adds	r5, r1, #2
 80191c6:	bb46      	cbnz	r6, 801921a <add_last_point+0x76>
 80191c8:	681e      	ldr	r6, [r3, #0]
 80191ca:	4296      	cmp	r6, r2
 80191cc:	d936      	bls.n	801923c <add_last_point+0x98>
 80191ce:	685e      	ldr	r6, [r3, #4]
 80191d0:	f040 0002 	orr.w	r0, r0, #2
 80191d4:	615f      	str	r7, [r3, #20]
 80191d6:	689f      	ldr	r7, [r3, #8]
 80191d8:	54b0      	strb	r0, [r6, r2]
 80191da:	1c4a      	adds	r2, r1, #1
 80191dc:	42ba      	cmp	r2, r7
 80191de:	d224      	bcs.n	801922a <add_last_point+0x86>
 80191e0:	2000      	movs	r0, #0
 80191e2:	68da      	ldr	r2, [r3, #12]
 80191e4:	611d      	str	r5, [r3, #16]
 80191e6:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 80191ea:	ed81 0a00 	vstr	s0, [r1]
 80191ee:	edc1 0a01 	vstr	s1, [r1, #4]
 80191f2:	b002      	add	sp, #8
 80191f4:	bcf0      	pop	{r4, r5, r6, r7}
 80191f6:	4770      	bx	lr
 80191f8:	4917      	ldr	r1, [pc, #92]	@ (8019258 <add_last_point+0xb4>)
 80191fa:	695a      	ldr	r2, [r3, #20]
 80191fc:	680d      	ldr	r5, [r1, #0]
 80191fe:	1c54      	adds	r4, r2, #1
 8019200:	b98d      	cbnz	r5, 8019226 <add_last_point+0x82>
 8019202:	681d      	ldr	r5, [r3, #0]
 8019204:	4295      	cmp	r5, r2
 8019206:	d91f      	bls.n	8019248 <add_last_point+0xa4>
 8019208:	6859      	ldr	r1, [r3, #4]
 801920a:	615c      	str	r4, [r3, #20]
 801920c:	5488      	strb	r0, [r1, r2]
 801920e:	2200      	movs	r2, #0
 8019210:	2000      	movs	r0, #0
 8019212:	625a      	str	r2, [r3, #36]	@ 0x24
 8019214:	b002      	add	sp, #8
 8019216:	bcf0      	pop	{r4, r5, r6, r7}
 8019218:	4770      	bx	lr
 801921a:	615f      	str	r7, [r3, #20]
 801921c:	2000      	movs	r0, #0
 801921e:	611d      	str	r5, [r3, #16]
 8019220:	b002      	add	sp, #8
 8019222:	bcf0      	pop	{r4, r5, r6, r7}
 8019224:	4770      	bx	lr
 8019226:	615c      	str	r4, [r3, #20]
 8019228:	e7f1      	b.n	801920e <add_last_point+0x6a>
 801922a:	2102      	movs	r1, #2
 801922c:	2201      	movs	r2, #1
 801922e:	2000      	movs	r0, #0
 8019230:	611d      	str	r5, [r3, #16]
 8019232:	6299      	str	r1, [r3, #40]	@ 0x28
 8019234:	6022      	str	r2, [r4, #0]
 8019236:	b002      	add	sp, #8
 8019238:	bcf0      	pop	{r4, r5, r6, r7}
 801923a:	4770      	bx	lr
 801923c:	2102      	movs	r1, #2
 801923e:	2201      	movs	r2, #1
 8019240:	615f      	str	r7, [r3, #20]
 8019242:	6299      	str	r1, [r3, #40]	@ 0x28
 8019244:	6022      	str	r2, [r4, #0]
 8019246:	e7e9      	b.n	801921c <add_last_point+0x78>
 8019248:	2002      	movs	r0, #2
 801924a:	2201      	movs	r2, #1
 801924c:	615c      	str	r4, [r3, #20]
 801924e:	6298      	str	r0, [r3, #40]	@ 0x28
 8019250:	600a      	str	r2, [r1, #0]
 8019252:	e7dc      	b.n	801920e <add_last_point+0x6a>
 8019254:	20083154 	.word	0x20083154
 8019258:	2008314c 	.word	0x2008314c

0801925c <calc_move_geometry>:
 801925c:	b4f0      	push	{r4, r5, r6, r7}
 801925e:	4b2b      	ldr	r3, [pc, #172]	@ (801930c <calc_move_geometry+0xb0>)
 8019260:	482b      	ldr	r0, [pc, #172]	@ (8019310 <calc_move_geometry+0xb4>)
 8019262:	ed93 7a00 	vldr	s14, [r3]
 8019266:	eeb4 0a47 	vcmp.f32	s0, s14
 801926a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801926e:	4b29      	ldr	r3, [pc, #164]	@ (8019314 <calc_move_geometry+0xb8>)
 8019270:	bf48      	it	mi
 8019272:	eeb0 0a47 	vmovmi.f32	s0, s14
 8019276:	edd3 7a00 	vldr	s15, [r3]
 801927a:	eef4 7a40 	vcmp.f32	s15, s0
 801927e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019282:	eef4 0a47 	vcmp.f32	s1, s14
 8019286:	bf48      	it	mi
 8019288:	eeb0 0a67 	vmovmi.f32	s0, s15
 801928c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019290:	bf48      	it	mi
 8019292:	eef0 0a47 	vmovmi.f32	s1, s14
 8019296:	eef4 7a60 	vcmp.f32	s15, s1
 801929a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801929e:	4b1e      	ldr	r3, [pc, #120]	@ (8019318 <calc_move_geometry+0xbc>)
 80192a0:	6806      	ldr	r6, [r0, #0]
 80192a2:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 80192a6:	b082      	sub	sp, #8
 80192a8:	bf48      	it	mi
 80192aa:	eef0 0a67 	vmovmi.f32	s1, s15
 80192ae:	1c55      	adds	r5, r2, #1
 80192b0:	1c8c      	adds	r4, r1, #2
 80192b2:	b9b6      	cbnz	r6, 80192e2 <calc_move_geometry+0x86>
 80192b4:	681e      	ldr	r6, [r3, #0]
 80192b6:	4296      	cmp	r6, r2
 80192b8:	d921      	bls.n	80192fe <calc_move_geometry+0xa2>
 80192ba:	2601      	movs	r6, #1
 80192bc:	685f      	ldr	r7, [r3, #4]
 80192be:	615d      	str	r5, [r3, #20]
 80192c0:	689d      	ldr	r5, [r3, #8]
 80192c2:	54be      	strb	r6, [r7, r2]
 80192c4:	198a      	adds	r2, r1, r6
 80192c6:	42aa      	cmp	r2, r5
 80192c8:	d211      	bcs.n	80192ee <calc_move_geometry+0x92>
 80192ca:	2000      	movs	r0, #0
 80192cc:	68da      	ldr	r2, [r3, #12]
 80192ce:	611c      	str	r4, [r3, #16]
 80192d0:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 80192d4:	ed81 0a00 	vstr	s0, [r1]
 80192d8:	edc1 0a01 	vstr	s1, [r1, #4]
 80192dc:	b002      	add	sp, #8
 80192de:	bcf0      	pop	{r4, r5, r6, r7}
 80192e0:	4770      	bx	lr
 80192e2:	615d      	str	r5, [r3, #20]
 80192e4:	2000      	movs	r0, #0
 80192e6:	611c      	str	r4, [r3, #16]
 80192e8:	b002      	add	sp, #8
 80192ea:	bcf0      	pop	{r4, r5, r6, r7}
 80192ec:	4770      	bx	lr
 80192ee:	2202      	movs	r2, #2
 80192f0:	6006      	str	r6, [r0, #0]
 80192f2:	2000      	movs	r0, #0
 80192f4:	611c      	str	r4, [r3, #16]
 80192f6:	629a      	str	r2, [r3, #40]	@ 0x28
 80192f8:	b002      	add	sp, #8
 80192fa:	bcf0      	pop	{r4, r5, r6, r7}
 80192fc:	4770      	bx	lr
 80192fe:	2102      	movs	r1, #2
 8019300:	2201      	movs	r2, #1
 8019302:	615d      	str	r5, [r3, #20]
 8019304:	6299      	str	r1, [r3, #40]	@ 0x28
 8019306:	6002      	str	r2, [r0, #0]
 8019308:	e7ec      	b.n	80192e4 <calc_move_geometry+0x88>
 801930a:	bf00      	nop
 801930c:	20000144 	.word	0x20000144
 8019310:	2008314c 	.word	0x2008314c
 8019314:	20000140 	.word	0x20000140
 8019318:	20083154 	.word	0x20083154

0801931c <calc_line_geometry>:
 801931c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019320:	ed2d 8b08 	vpush	{d8-d11}
 8019324:	4b6e      	ldr	r3, [pc, #440]	@ (80194e0 <calc_line_geometry+0x1c4>)
 8019326:	b097      	sub	sp, #92	@ 0x5c
 8019328:	ed93 5a00 	vldr	s10, [r3]
 801932c:	eeb4 5ac0 	vcmpe.f32	s10, s0
 8019330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019334:	4b6b      	ldr	r3, [pc, #428]	@ (80194e4 <calc_line_geometry+0x1c8>)
 8019336:	ed8d 0a02 	vstr	s0, [sp, #8]
 801933a:	edcd 0a03 	vstr	s1, [sp, #12]
 801933e:	ed8d 1a00 	vstr	s2, [sp]
 8019342:	edcd 1a01 	vstr	s3, [sp, #4]
 8019346:	edd3 5a00 	vldr	s11, [r3]
 801934a:	d405      	bmi.n	8019358 <calc_line_geometry+0x3c>
 801934c:	eeb4 5ae0 	vcmpe.f32	s10, s1
 8019350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019354:	f140 824a 	bpl.w	80197ec <calc_line_geometry+0x4d0>
 8019358:	eeb4 5ac1 	vcmpe.f32	s10, s2
 801935c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019360:	f100 80ca 	bmi.w	80194f8 <calc_line_geometry+0x1dc>
 8019364:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019368:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801936c:	f100 80c4 	bmi.w	80194f8 <calc_line_geometry+0x1dc>
 8019370:	2201      	movs	r2, #1
 8019372:	eeb4 1ae5 	vcmpe.f32	s2, s11
 8019376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801937a:	f100 824f 	bmi.w	801981c <calc_line_geometry+0x500>
 801937e:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019386:	f100 8249 	bmi.w	801981c <calc_line_geometry+0x500>
 801938a:	2400      	movs	r4, #0
 801938c:	ab12      	add	r3, sp, #72	@ 0x48
 801938e:	9412      	str	r4, [sp, #72]	@ 0x48
 8019390:	e9c3 4401 	strd	r4, r4, [r3, #4]
 8019394:	60dc      	str	r4, [r3, #12]
 8019396:	2a00      	cmp	r2, #0
 8019398:	f000 83de 	beq.w	8019b58 <calc_line_geometry+0x83c>
 801939c:	ee31 3ae0 	vsub.f32	s6, s3, s1
 80193a0:	ee70 9a65 	vsub.f32	s19, s0, s11
 80193a4:	ee71 2a40 	vsub.f32	s5, s2, s0
 80193a8:	ee30 8ae5 	vsub.f32	s16, s1, s11
 80193ac:	ee35 2a65 	vsub.f32	s4, s10, s11
 80193b0:	eef1 4a43 	vneg.f32	s9, s6
 80193b4:	ee75 5ae5 	vsub.f32	s11, s11, s11
 80193b8:	ee24 baa9 	vmul.f32	s22, s9, s19
 80193bc:	ee62 8a88 	vmul.f32	s17, s5, s16
 80193c0:	ee62 ba43 	vnmul.f32	s23, s4, s6
 80193c4:	ee62 3aa5 	vmul.f32	s7, s5, s11
 80193c8:	ee7b aa28 	vadd.f32	s21, s22, s17
 80193cc:	ee73 3aab 	vadd.f32	s7, s7, s23
 80193d0:	eeca 7aa3 	vdiv.f32	s15, s21, s7
 80193d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80193d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193dc:	aa02      	add	r2, sp, #8
 80193de:	ad0a      	add	r5, sp, #40	@ 0x28
 80193e0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80193e4:	ed8d 1a0c 	vstr	s2, [sp, #48]	@ 0x30
 80193e8:	edcd 1a0d 	vstr	s3, [sp, #52]	@ 0x34
 80193ec:	e885 0003 	stmia.w	r5, {r0, r1}
 80193f0:	db07      	blt.n	8019402 <calc_line_geometry+0xe6>
 80193f2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80193f6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80193fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193fe:	f240 85c9 	bls.w	8019f94 <calc_line_geometry+0xc78>
 8019402:	ed9f 4a3b 	vldr	s8, [pc, #236]	@ 80194f0 <calc_line_geometry+0x1d4>
 8019406:	4622      	mov	r2, r4
 8019408:	eeb0 aa44 	vmov.f32	s20, s8
 801940c:	ee35 9a45 	vsub.f32	s18, s10, s10
 8019410:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019414:	ee62 6a89 	vmul.f32	s13, s5, s18
 8019418:	ee62 3aa7 	vmul.f32	s7, s5, s15
 801941c:	ee76 6aab 	vadd.f32	s13, s13, s23
 8019420:	ee73 3a8b 	vadd.f32	s7, s7, s22
 8019424:	ee83 7aa6 	vdiv.f32	s14, s7, s13
 8019428:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801942c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019430:	db07      	blt.n	8019442 <calc_line_geometry+0x126>
 8019432:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019436:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801943a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801943e:	f240 8574 	bls.w	8019f2a <calc_line_geometry+0xc0e>
 8019442:	ee62 3a82 	vmul.f32	s7, s5, s4
 8019446:	ee25 4ac3 	vnmul.f32	s8, s11, s6
 801944a:	ee34 4a23 	vadd.f32	s8, s8, s7
 801944e:	eeca 7a84 	vdiv.f32	s15, s21, s8
 8019452:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801945a:	db07      	blt.n	801946c <calc_line_geometry+0x150>
 801945c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019460:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019468:	f240 8527 	bls.w	8019eba <calc_line_geometry+0xb9e>
 801946c:	ee30 5a45 	vsub.f32	s10, s0, s10
 8019470:	ee69 6a43 	vnmul.f32	s13, s18, s6
 8019474:	ee64 4a85 	vmul.f32	s9, s9, s10
 8019478:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801947c:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019480:	eec4 7aa6 	vdiv.f32	s15, s9, s13
 8019484:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801948c:	db07      	blt.n	801949e <calc_line_geometry+0x182>
 801948e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019492:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801949a:	f240 84e4 	bls.w	8019e66 <calc_line_geometry+0xb4a>
 801949e:	4d12      	ldr	r5, [pc, #72]	@ (80194e8 <calc_line_geometry+0x1cc>)
 80194a0:	4b12      	ldr	r3, [pc, #72]	@ (80194ec <calc_line_geometry+0x1d0>)
 80194a2:	6828      	ldr	r0, [r5, #0]
 80194a4:	e9d3 4204 	ldrd	r4, r2, [r3, #16]
 80194a8:	1c51      	adds	r1, r2, #1
 80194aa:	1ca6      	adds	r6, r4, #2
 80194ac:	2800      	cmp	r0, #0
 80194ae:	f040 8435 	bne.w	8019d1c <calc_line_geometry+0xa00>
 80194b2:	6818      	ldr	r0, [r3, #0]
 80194b4:	4290      	cmp	r0, r2
 80194b6:	f240 848f 	bls.w	8019dd8 <calc_line_geometry+0xabc>
 80194ba:	2082      	movs	r0, #130	@ 0x82
 80194bc:	685f      	ldr	r7, [r3, #4]
 80194be:	6159      	str	r1, [r3, #20]
 80194c0:	54b8      	strb	r0, [r7, r2]
 80194c2:	689a      	ldr	r2, [r3, #8]
 80194c4:	1c61      	adds	r1, r4, #1
 80194c6:	4291      	cmp	r1, r2
 80194c8:	f080 8480 	bcs.w	8019dcc <calc_line_geometry+0xab0>
 80194cc:	68da      	ldr	r2, [r3, #12]
 80194ce:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80194d0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80194d2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80194d6:	611e      	str	r6, [r3, #16]
 80194d8:	6010      	str	r0, [r2, #0]
 80194da:	6051      	str	r1, [r2, #4]
 80194dc:	f000 bc20 	b.w	8019d20 <calc_line_geometry+0xa04>
 80194e0:	20000140 	.word	0x20000140
 80194e4:	20000144 	.word	0x20000144
 80194e8:	2008314c 	.word	0x2008314c
 80194ec:	20083154 	.word	0x20083154
 80194f0:	00000000 	.word	0x00000000
 80194f4:	3727c5ac 	.word	0x3727c5ac
 80194f8:	ee35 2a65 	vsub.f32	s4, s10, s11
 80194fc:	2200      	movs	r2, #0
 80194fe:	eef1 3a42 	vneg.f32	s7, s4
 8019502:	ee35 3ae5 	vsub.f32	s6, s11, s11
 8019506:	ab12      	add	r3, sp, #72	@ 0x48
 8019508:	e9c3 2201 	strd	r2, r2, [r3, #4]
 801950c:	9212      	str	r2, [sp, #72]	@ 0x48
 801950e:	60da      	str	r2, [r3, #12]
 8019510:	ee70 2ae1 	vsub.f32	s5, s1, s3
 8019514:	ee70 4a41 	vsub.f32	s9, s0, s2
 8019518:	ee31 aa65 	vsub.f32	s20, s2, s11
 801951c:	eeb1 4a62 	vneg.f32	s8, s5
 8019520:	ee71 8ae5 	vsub.f32	s17, s3, s11
 8019524:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8019528:	ee64 ba0a 	vmul.f32	s23, s8, s20
 801952c:	ee64 9aa8 	vmul.f32	s19, s9, s17
 8019530:	ee64 7a83 	vmul.f32	s15, s9, s6
 8019534:	ee3b baa9 	vadd.f32	s22, s23, s19
 8019538:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801953c:	ee8b 7a27 	vdiv.f32	s14, s22, s15
 8019540:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019548:	aa02      	add	r2, sp, #8
 801954a:	ac10      	add	r4, sp, #64	@ 0x40
 801954c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019550:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 8019554:	edcd 1a0f 	vstr	s3, [sp, #60]	@ 0x3c
 8019558:	e884 0003 	stmia.w	r4, {r0, r1}
 801955c:	db07      	blt.n	801956e <calc_line_geometry+0x252>
 801955e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019562:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8019566:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801956a:	f240 824f 	bls.w	8019a0c <calc_line_geometry+0x6f0>
 801956e:	ed1f 8a20 	vldr	s16, [pc, #-128]	@ 80194f0 <calc_line_geometry+0x1d4>
 8019572:	2200      	movs	r2, #0
 8019574:	eef0 aa48 	vmov.f32	s21, s16
 8019578:	ee35 9a45 	vsub.f32	s18, s10, s10
 801957c:	ee71 6ac5 	vsub.f32	s13, s3, s10
 8019580:	ee64 7a89 	vmul.f32	s15, s9, s18
 8019584:	ee24 7aa6 	vmul.f32	s14, s9, s13
 8019588:	ee77 3aa3 	vadd.f32	s7, s15, s7
 801958c:	ee77 7a2b 	vadd.f32	s15, s14, s23
 8019590:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 8019594:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801959c:	db07      	blt.n	80195ae <calc_line_geometry+0x292>
 801959e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80195a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80195a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195aa:	f240 825d 	bls.w	8019a68 <calc_line_geometry+0x74c>
 80195ae:	ee64 3a82 	vmul.f32	s7, s9, s4
 80195b2:	ee23 7a62 	vnmul.f32	s14, s6, s5
 80195b6:	ee37 7a23 	vadd.f32	s14, s14, s7
 80195ba:	eecb 7a07 	vdiv.f32	s15, s22, s14
 80195be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80195c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195c6:	db07      	blt.n	80195d8 <calc_line_geometry+0x2bc>
 80195c8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80195cc:	eef4 7ae6 	vcmpe.f32	s15, s13
 80195d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195d4:	f240 81e3 	bls.w	801999e <calc_line_geometry+0x682>
 80195d8:	ee31 7a45 	vsub.f32	s14, s2, s10
 80195dc:	ee69 7a62 	vnmul.f32	s15, s18, s5
 80195e0:	ee24 4a07 	vmul.f32	s8, s8, s14
 80195e4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80195e8:	ee34 4a29 	vadd.f32	s8, s8, s19
 80195ec:	eec4 6a27 	vdiv.f32	s13, s8, s15
 80195f0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80195f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195f8:	db07      	blt.n	801960a <calc_line_geometry+0x2ee>
 80195fa:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80195fe:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019606:	f240 826b 	bls.w	8019ae0 <calc_line_geometry+0x7c4>
 801960a:	eeb4 0ae5 	vcmpe.f32	s0, s11
 801960e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019612:	bf54      	ite	pl
 8019614:	eef0 7a40 	vmovpl.f32	s15, s0
 8019618:	eef0 7a65 	vmovmi.f32	s15, s11
 801961c:	eeb4 5a67 	vcmp.f32	s10, s15
 8019620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019624:	eef4 0ae5 	vcmpe.f32	s1, s11
 8019628:	bf48      	it	mi
 801962a:	eef0 7a45 	vmovmi.f32	s15, s10
 801962e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019632:	bf54      	ite	pl
 8019634:	eef0 6a60 	vmovpl.f32	s13, s1
 8019638:	eef0 6a65 	vmovmi.f32	s13, s11
 801963c:	eeb4 5a66 	vcmp.f32	s10, s13
 8019640:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019644:	eeb4 1ae5 	vcmpe.f32	s2, s11
 8019648:	bf48      	it	mi
 801964a:	eef0 6a45 	vmovmi.f32	s13, s10
 801964e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019652:	bf54      	ite	pl
 8019654:	eeb0 7a41 	vmovpl.f32	s14, s2
 8019658:	eeb0 7a65 	vmovmi.f32	s14, s11
 801965c:	eeb4 5a47 	vcmp.f32	s10, s14
 8019660:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019664:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019668:	bf48      	it	mi
 801966a:	eeb0 7a45 	vmovmi.f32	s14, s10
 801966e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019672:	bf58      	it	pl
 8019674:	eef0 5a61 	vmovpl.f32	s11, s3
 8019678:	eeb4 5a65 	vcmp.f32	s10, s11
 801967c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019680:	bf48      	it	mi
 8019682:	eef0 5a45 	vmovmi.f32	s11, s10
 8019686:	2a02      	cmp	r2, #2
 8019688:	f000 8178 	beq.w	801997c <calc_line_geometry+0x660>
 801968c:	ee37 5ac7 	vsub.f32	s10, s15, s14
 8019690:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019698:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801969c:	bf48      	it	mi
 801969e:	eeb1 5a45 	vnegmi.f32	s10, s10
 80196a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196a6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80196aa:	bf4c      	ite	mi
 80196ac:	eef1 4a67 	vnegmi.f32	s9, s15
 80196b0:	eef0 4a67 	vmovpl.f32	s9, s15
 80196b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196b8:	f100 8261 	bmi.w	8019b7e <calc_line_geometry+0x862>
 80196bc:	eef4 4ac7 	vcmpe.f32	s9, s14
 80196c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196c4:	f140 8243 	bpl.w	8019b4e <calc_line_geometry+0x832>
 80196c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80196cc:	ed1f 6a77 	vldr	s12, [pc, #-476]	@ 80194f4 <calc_line_geometry+0x1d8>
 80196d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196d4:	bf4c      	ite	mi
 80196d6:	ee27 6ac6 	vnmulmi.f32	s12, s15, s12
 80196da:	ee27 6a86 	vmulpl.f32	s12, s15, s12
 80196de:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80196e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196e6:	d96e      	bls.n	80197c6 <calc_line_geometry+0x4aa>
 80196e8:	ee36 5ae5 	vsub.f32	s10, s13, s11
 80196ec:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80196f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196f4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80196f8:	bf48      	it	mi
 80196fa:	eeb1 5a45 	vnegmi.f32	s10, s10
 80196fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019702:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019706:	bf4c      	ite	mi
 8019708:	eef1 4a66 	vnegmi.f32	s9, s13
 801970c:	eef0 4a66 	vmovpl.f32	s9, s13
 8019710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019714:	f100 82ee 	bmi.w	8019cf4 <calc_line_geometry+0x9d8>
 8019718:	eef4 4ae5 	vcmpe.f32	s9, s11
 801971c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019720:	f100 82f0 	bmi.w	8019d04 <calc_line_geometry+0x9e8>
 8019724:	ed1f 6a8d 	vldr	s12, [pc, #-564]	@ 80194f4 <calc_line_geometry+0x1d8>
 8019728:	ee25 6a86 	vmul.f32	s12, s11, s12
 801972c:	eeb4 5ac6 	vcmpe.f32	s10, s12
 8019730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019734:	d947      	bls.n	80197c6 <calc_line_geometry+0x4aa>
 8019736:	ee71 1ae0 	vsub.f32	s3, s3, s1
 801973a:	ee31 1a40 	vsub.f32	s2, s2, s0
 801973e:	ee37 6ac0 	vsub.f32	s12, s15, s0
 8019742:	ee35 5ae0 	vsub.f32	s10, s11, s1
 8019746:	ee37 0a40 	vsub.f32	s0, s14, s0
 801974a:	ee76 0ae0 	vsub.f32	s1, s13, s1
 801974e:	ee26 6a21 	vmul.f32	s12, s12, s3
 8019752:	ee25 5a01 	vmul.f32	s10, s10, s2
 8019756:	ee60 1a21 	vmul.f32	s3, s0, s3
 801975a:	ee20 1a81 	vmul.f32	s2, s1, s2
 801975e:	4bdc      	ldr	r3, [pc, #880]	@ (8019ad0 <calc_line_geometry+0x7b4>)
 8019760:	48dc      	ldr	r0, [pc, #880]	@ (8019ad4 <calc_line_geometry+0x7b8>)
 8019762:	6959      	ldr	r1, [r3, #20]
 8019764:	6802      	ldr	r2, [r0, #0]
 8019766:	ee36 6a45 	vsub.f32	s12, s12, s10
 801976a:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801976e:	1c4c      	adds	r4, r1, #1
 8019770:	2a00      	cmp	r2, #0
 8019772:	f000 8322 	beq.w	8019dba <calc_line_geometry+0xa9e>
 8019776:	615c      	str	r4, [r3, #20]
 8019778:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801977c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019780:	eef5 1ac0 	vcmpe.f32	s3, #0.0
 8019784:	bf48      	it	mi
 8019786:	eeb1 6a46 	vnegmi.f32	s12, s12
 801978a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801978e:	bf48      	it	mi
 8019790:	eef1 1a61 	vnegmi.f32	s3, s3
 8019794:	eeb4 6ae1 	vcmpe.f32	s12, s3
 8019798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801979c:	6919      	ldr	r1, [r3, #16]
 801979e:	f101 0502 	add.w	r5, r1, #2
 80197a2:	f140 8350 	bpl.w	8019e46 <calc_line_geometry+0xb2a>
 80197a6:	2a00      	cmp	r2, #0
 80197a8:	f040 834b 	bne.w	8019e42 <calc_line_geometry+0xb26>
 80197ac:	689a      	ldr	r2, [r3, #8]
 80197ae:	1c4c      	adds	r4, r1, #1
 80197b0:	4294      	cmp	r4, r2
 80197b2:	f080 8516 	bcs.w	801a1e2 <calc_line_geometry+0xec6>
 80197b6:	68da      	ldr	r2, [r3, #12]
 80197b8:	611d      	str	r5, [r3, #16]
 80197ba:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 80197be:	edc1 7a00 	vstr	s15, [r1]
 80197c2:	edc1 5a01 	vstr	s11, [r1, #4]
 80197c6:	eeb0 0a47 	vmov.f32	s0, s14
 80197ca:	eef0 0a65 	vmov.f32	s1, s11
 80197ce:	2080      	movs	r0, #128	@ 0x80
 80197d0:	f7ff fce8 	bl	80191a4 <add_last_point>
 80197d4:	4604      	mov	r4, r0
 80197d6:	2800      	cmp	r0, #0
 80197d8:	f000 81c9 	beq.w	8019b6e <calc_line_geometry+0x852>
 80197dc:	f003 f952 	bl	801ca84 <nema_vg_set_error>
 80197e0:	4620      	mov	r0, r4
 80197e2:	b017      	add	sp, #92	@ 0x5c
 80197e4:	ecbd 8b08 	vpop	{d8-d11}
 80197e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80197ec:	eeb4 0ae5 	vcmpe.f32	s0, s11
 80197f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197f4:	f53f adb0 	bmi.w	8019358 <calc_line_geometry+0x3c>
 80197f8:	eef4 0ae5 	vcmpe.f32	s1, s11
 80197fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019800:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8019804:	bf4c      	ite	mi
 8019806:	2201      	movmi	r2, #1
 8019808:	2200      	movpl	r2, #0
 801980a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801980e:	d405      	bmi.n	801981c <calc_line_geometry+0x500>
 8019810:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019818:	f57f adab 	bpl.w	8019372 <calc_line_geometry+0x56>
 801981c:	2100      	movs	r1, #0
 801981e:	ee35 2a65 	vsub.f32	s4, s10, s11
 8019822:	ab12      	add	r3, sp, #72	@ 0x48
 8019824:	9112      	str	r1, [sp, #72]	@ 0x48
 8019826:	e9c3 1101 	strd	r1, r1, [r3, #4]
 801982a:	60d9      	str	r1, [r3, #12]
 801982c:	eef1 3a42 	vneg.f32	s7, s4
 8019830:	ee35 3ae5 	vsub.f32	s6, s11, s11
 8019834:	2a00      	cmp	r2, #0
 8019836:	f47f ae6b 	bne.w	8019510 <calc_line_geometry+0x1f4>
 801983a:	ee71 2ae0 	vsub.f32	s5, s3, s1
 801983e:	ee31 4a40 	vsub.f32	s8, s2, s0
 8019842:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019846:	eef1 4a62 	vneg.f32	s9, s5
 801984a:	ee30 8ae5 	vsub.f32	s16, s1, s11
 801984e:	ee62 3aa3 	vmul.f32	s7, s5, s7
 8019852:	ee64 baa9 	vmul.f32	s23, s9, s19
 8019856:	ee64 8a08 	vmul.f32	s17, s8, s16
 801985a:	ee24 7a03 	vmul.f32	s14, s8, s6
 801985e:	ee3b baa8 	vadd.f32	s22, s23, s17
 8019862:	ee37 7a23 	vadd.f32	s14, s14, s7
 8019866:	eecb 7a07 	vdiv.f32	s15, s22, s14
 801986a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801986e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019872:	a902      	add	r1, sp, #8
 8019874:	ac06      	add	r4, sp, #24
 8019876:	c903      	ldmia	r1, {r0, r1}
 8019878:	ed8d 1a08 	vstr	s2, [sp, #32]
 801987c:	edcd 1a09 	vstr	s3, [sp, #36]	@ 0x24
 8019880:	e884 0003 	stmia.w	r4, {r0, r1}
 8019884:	db07      	blt.n	8019896 <calc_line_geometry+0x57a>
 8019886:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801988a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801988e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019892:	f240 8444 	bls.w	801a11e <calc_line_geometry+0xe02>
 8019896:	ed9f 9a90 	vldr	s18, [pc, #576]	@ 8019ad8 <calc_line_geometry+0x7bc>
 801989a:	eef0 aa49 	vmov.f32	s21, s18
 801989e:	ee35 aa45 	vsub.f32	s20, s10, s10
 80198a2:	ee70 7ac5 	vsub.f32	s15, s1, s10
 80198a6:	ee24 7a0a 	vmul.f32	s14, s8, s20
 80198aa:	ee64 6a27 	vmul.f32	s13, s8, s15
 80198ae:	ee77 3a23 	vadd.f32	s7, s14, s7
 80198b2:	ee36 7aab 	vadd.f32	s14, s13, s23
 80198b6:	eec7 6a23 	vdiv.f32	s13, s14, s7
 80198ba:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80198be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198c2:	db07      	blt.n	80198d4 <calc_line_geometry+0x5b8>
 80198c4:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80198c8:	eef4 6ac6 	vcmpe.f32	s13, s12
 80198cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198d0:	f240 83f0 	bls.w	801a0b4 <calc_line_geometry+0xd98>
 80198d4:	ee24 9a02 	vmul.f32	s18, s8, s4
 80198d8:	ee63 6a62 	vnmul.f32	s13, s6, s5
 80198dc:	ee76 6a89 	vadd.f32	s13, s13, s18
 80198e0:	eecb 7a26 	vdiv.f32	s15, s22, s13
 80198e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80198e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198ec:	db07      	blt.n	80198fe <calc_line_geometry+0x5e2>
 80198ee:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 80198f2:	eef4 7ae3 	vcmpe.f32	s15, s7
 80198f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198fa:	f240 83a4 	bls.w	801a046 <calc_line_geometry+0xd2a>
 80198fe:	ee70 7a45 	vsub.f32	s15, s0, s10
 8019902:	ee2a 7a62 	vnmul.f32	s14, s20, s5
 8019906:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801990a:	ee37 7a09 	vadd.f32	s14, s14, s18
 801990e:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019912:	eec4 6a87 	vdiv.f32	s13, s9, s14
 8019916:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801991a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801991e:	db07      	blt.n	8019930 <calc_line_geometry+0x614>
 8019920:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019924:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801992c:	f240 8362 	bls.w	8019ff4 <calc_line_geometry+0xcd8>
 8019930:	f240 10ff 	movw	r0, #511	@ 0x1ff
 8019934:	4b66      	ldr	r3, [pc, #408]	@ (8019ad0 <calc_line_geometry+0x7b4>)
 8019936:	4e67      	ldr	r6, [pc, #412]	@ (8019ad4 <calc_line_geometry+0x7b8>)
 8019938:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801993a:	6834      	ldr	r4, [r6, #0]
 801993c:	e9d3 5104 	ldrd	r5, r1, [r3, #16]
 8019940:	4282      	cmp	r2, r0
 8019942:	bf0c      	ite	eq
 8019944:	2282      	moveq	r2, #130	@ 0x82
 8019946:	2202      	movne	r2, #2
 8019948:	1caf      	adds	r7, r5, #2
 801994a:	1c48      	adds	r0, r1, #1
 801994c:	2c00      	cmp	r4, #0
 801994e:	f040 8201 	bne.w	8019d54 <calc_line_geometry+0xa38>
 8019952:	681c      	ldr	r4, [r3, #0]
 8019954:	428c      	cmp	r4, r1
 8019956:	f240 825f 	bls.w	8019e18 <calc_line_geometry+0xafc>
 801995a:	685c      	ldr	r4, [r3, #4]
 801995c:	6158      	str	r0, [r3, #20]
 801995e:	6898      	ldr	r0, [r3, #8]
 8019960:	5462      	strb	r2, [r4, r1]
 8019962:	1c69      	adds	r1, r5, #1
 8019964:	4281      	cmp	r1, r0
 8019966:	f080 8251 	bcs.w	8019e0c <calc_line_geometry+0xaf0>
 801996a:	68da      	ldr	r2, [r3, #12]
 801996c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801996e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019970:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 8019974:	611f      	str	r7, [r3, #16]
 8019976:	6010      	str	r0, [r2, #0]
 8019978:	6051      	str	r1, [r2, #4]
 801997a:	e1ed      	b.n	8019d58 <calc_line_geometry+0xa3c>
 801997c:	4b54      	ldr	r3, [pc, #336]	@ (8019ad0 <calc_line_geometry+0x7b4>)
 801997e:	4855      	ldr	r0, [pc, #340]	@ (8019ad4 <calc_line_geometry+0x7b8>)
 8019980:	695d      	ldr	r5, [r3, #20]
 8019982:	6801      	ldr	r1, [r0, #0]
 8019984:	1c6e      	adds	r6, r5, #1
 8019986:	2900      	cmp	r1, #0
 8019988:	f040 8106 	bne.w	8019b98 <calc_line_geometry+0x87c>
 801998c:	681c      	ldr	r4, [r3, #0]
 801998e:	42ac      	cmp	r4, r5
 8019990:	f240 820e 	bls.w	8019db0 <calc_line_geometry+0xa94>
 8019994:	2482      	movs	r4, #130	@ 0x82
 8019996:	685a      	ldr	r2, [r3, #4]
 8019998:	615e      	str	r6, [r3, #20]
 801999a:	5554      	strb	r4, [r2, r5]
 801999c:	e0fd      	b.n	8019b9a <calc_line_geometry+0x87e>
 801999e:	ee28 3a83 	vmul.f32	s6, s17, s6
 80199a2:	ee2a aa02 	vmul.f32	s20, s20, s4
 80199a6:	ee33 aa4a 	vsub.f32	s20, s6, s20
 80199aa:	eeca 7a07 	vdiv.f32	s15, s20, s14
 80199ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80199b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199b6:	f6ff ae0f 	blt.w	80195d8 <calc_line_geometry+0x2bc>
 80199ba:	eef4 7ae6 	vcmpe.f32	s15, s13
 80199be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199c2:	f63f ae09 	bhi.w	80195d8 <calc_line_geometry+0x2bc>
 80199c6:	2a02      	cmp	r2, #2
 80199c8:	f43f ae06 	beq.w	80195d8 <calc_line_geometry+0x2bc>
 80199cc:	ee24 7aa7 	vmul.f32	s14, s9, s15
 80199d0:	ee62 7aa7 	vmul.f32	s15, s5, s15
 80199d4:	2a01      	cmp	r2, #1
 80199d6:	ee37 7a01 	vadd.f32	s14, s14, s2
 80199da:	ee77 7aa1 	vadd.f32	s15, s15, s3
 80199de:	f000 846b 	beq.w	801a2b8 <calc_line_geometry+0xf9c>
 80199e2:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 80199e6:	4619      	mov	r1, r3
 80199e8:	a80e      	add	r0, sp, #56	@ 0x38
 80199ea:	ed85 7a00 	vstr	s14, [r5]
 80199ee:	edc5 7a01 	vstr	s15, [r5, #4]
 80199f2:	f7ff fb57 	bl	80190a4 <points_coincide>
 80199f6:	2800      	cmp	r0, #0
 80199f8:	f47f adee 	bne.w	80195d8 <calc_line_geometry+0x2bc>
 80199fc:	4620      	mov	r0, r4
 80199fe:	f7ff fb51 	bl	80190a4 <points_coincide>
 8019a02:	2800      	cmp	r0, #0
 8019a04:	f47f ade8 	bne.w	80195d8 <calc_line_geometry+0x2bc>
 8019a08:	3201      	adds	r2, #1
 8019a0a:	e5e5      	b.n	80195d8 <calc_line_geometry+0x2bc>
 8019a0c:	ee28 7a82 	vmul.f32	s14, s17, s4
 8019a10:	ee2a 6a03 	vmul.f32	s12, s20, s6
 8019a14:	ee37 7a46 	vsub.f32	s14, s14, s12
 8019a18:	ee87 8a27 	vdiv.f32	s16, s14, s15
 8019a1c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8019a20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a24:	f6ff ada3 	blt.w	801956e <calc_line_geometry+0x252>
 8019a28:	eeb4 8ae6 	vcmpe.f32	s16, s13
 8019a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a30:	f63f ad9d 	bhi.w	801956e <calc_line_geometry+0x252>
 8019a34:	ee64 aa88 	vmul.f32	s21, s9, s16
 8019a38:	ee22 8a88 	vmul.f32	s16, s5, s16
 8019a3c:	ee7a aa81 	vadd.f32	s21, s21, s2
 8019a40:	ee38 8a21 	vadd.f32	s16, s16, s3
 8019a44:	4619      	mov	r1, r3
 8019a46:	a80e      	add	r0, sp, #56	@ 0x38
 8019a48:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 8019a4c:	ed8d 8a13 	vstr	s16, [sp, #76]	@ 0x4c
 8019a50:	f7ff fb28 	bl	80190a4 <points_coincide>
 8019a54:	2800      	cmp	r0, #0
 8019a56:	f040 8090 	bne.w	8019b7a <calc_line_geometry+0x85e>
 8019a5a:	4620      	mov	r0, r4
 8019a5c:	f7ff fb22 	bl	80190a4 <points_coincide>
 8019a60:	fab0 f280 	clz	r2, r0
 8019a64:	0952      	lsrs	r2, r2, #5
 8019a66:	e587      	b.n	8019578 <calc_line_geometry+0x25c>
 8019a68:	ee2a 7a09 	vmul.f32	s14, s20, s18
 8019a6c:	ee62 6a26 	vmul.f32	s13, s4, s13
 8019a70:	ee76 6ac7 	vsub.f32	s13, s13, s14
 8019a74:	ee86 7aa3 	vdiv.f32	s14, s13, s7
 8019a78:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019a7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a80:	f6ff ad95 	blt.w	80195ae <calc_line_geometry+0x292>
 8019a84:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a8c:	f63f ad8f 	bhi.w	80195ae <calc_line_geometry+0x292>
 8019a90:	ee62 7a87 	vmul.f32	s15, s5, s14
 8019a94:	ee64 6a87 	vmul.f32	s13, s9, s14
 8019a98:	2a01      	cmp	r2, #1
 8019a9a:	ee36 7a81 	vadd.f32	s14, s13, s2
 8019a9e:	ee77 7aa1 	vadd.f32	s15, s15, s3
 8019aa2:	f000 845f 	beq.w	801a364 <calc_line_geometry+0x1048>
 8019aa6:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019aaa:	4619      	mov	r1, r3
 8019aac:	a80e      	add	r0, sp, #56	@ 0x38
 8019aae:	ed85 7a00 	vstr	s14, [r5]
 8019ab2:	edc5 7a01 	vstr	s15, [r5, #4]
 8019ab6:	f7ff faf5 	bl	80190a4 <points_coincide>
 8019aba:	2800      	cmp	r0, #0
 8019abc:	f47f ad77 	bne.w	80195ae <calc_line_geometry+0x292>
 8019ac0:	4620      	mov	r0, r4
 8019ac2:	f7ff faef 	bl	80190a4 <points_coincide>
 8019ac6:	2800      	cmp	r0, #0
 8019ac8:	f47f ad71 	bne.w	80195ae <calc_line_geometry+0x292>
 8019acc:	3201      	adds	r2, #1
 8019ace:	e56e      	b.n	80195ae <calc_line_geometry+0x292>
 8019ad0:	20083154 	.word	0x20083154
 8019ad4:	2008314c 	.word	0x2008314c
 8019ad8:	00000000 	.word	0x00000000
 8019adc:	3727c5ac 	.word	0x3727c5ac
 8019ae0:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019ae4:	ee68 8a89 	vmul.f32	s17, s17, s18
 8019ae8:	ee38 2ac2 	vsub.f32	s4, s17, s4
 8019aec:	ee82 7a27 	vdiv.f32	s14, s4, s15
 8019af0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019af4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019af8:	f6ff ad87 	blt.w	801960a <calc_line_geometry+0x2ee>
 8019afc:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019b00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b04:	f63f ad81 	bhi.w	801960a <calc_line_geometry+0x2ee>
 8019b08:	2a02      	cmp	r2, #2
 8019b0a:	f43f ad7e 	beq.w	801960a <calc_line_geometry+0x2ee>
 8019b0e:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019b12:	ee22 7a87 	vmul.f32	s14, s5, s14
 8019b16:	2a01      	cmp	r2, #1
 8019b18:	ee77 7a81 	vadd.f32	s15, s15, s2
 8019b1c:	ee37 7a21 	vadd.f32	s14, s14, s3
 8019b20:	f000 8374 	beq.w	801a20c <calc_line_geometry+0xef0>
 8019b24:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019b28:	4619      	mov	r1, r3
 8019b2a:	a80e      	add	r0, sp, #56	@ 0x38
 8019b2c:	edc5 7a00 	vstr	s15, [r5]
 8019b30:	ed85 7a01 	vstr	s14, [r5, #4]
 8019b34:	f7ff fab6 	bl	80190a4 <points_coincide>
 8019b38:	2800      	cmp	r0, #0
 8019b3a:	f47f ad66 	bne.w	801960a <calc_line_geometry+0x2ee>
 8019b3e:	4620      	mov	r0, r4
 8019b40:	f7ff fab0 	bl	80190a4 <points_coincide>
 8019b44:	2800      	cmp	r0, #0
 8019b46:	f47f ad60 	bne.w	801960a <calc_line_geometry+0x2ee>
 8019b4a:	3201      	adds	r2, #1
 8019b4c:	e55d      	b.n	801960a <calc_line_geometry+0x2ee>
 8019b4e:	ed1f 6a1d 	vldr	s12, [pc, #-116]	@ 8019adc <calc_line_geometry+0x7c0>
 8019b52:	ee27 6a06 	vmul.f32	s12, s14, s12
 8019b56:	e5c2      	b.n	80196de <calc_line_geometry+0x3c2>
 8019b58:	4610      	mov	r0, r2
 8019b5a:	ed9d 0a00 	vldr	s0, [sp]
 8019b5e:	eddd 0a01 	vldr	s1, [sp, #4]
 8019b62:	f7ff fb1f 	bl	80191a4 <add_last_point>
 8019b66:	4604      	mov	r4, r0
 8019b68:	2800      	cmp	r0, #0
 8019b6a:	f47f ae37 	bne.w	80197dc <calc_line_geometry+0x4c0>
 8019b6e:	4620      	mov	r0, r4
 8019b70:	b017      	add	sp, #92	@ 0x5c
 8019b72:	ecbd 8b08 	vpop	{d8-d11}
 8019b76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019b7a:	2200      	movs	r2, #0
 8019b7c:	e4fc      	b.n	8019578 <calc_line_geometry+0x25c>
 8019b7e:	eeb1 6a47 	vneg.f32	s12, s14
 8019b82:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b8a:	f53f ad9d 	bmi.w	80196c8 <calc_line_geometry+0x3ac>
 8019b8e:	ed5f 4a2d 	vldr	s9, [pc, #-180]	@ 8019adc <calc_line_geometry+0x7c0>
 8019b92:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019b96:	e5a2      	b.n	80196de <calc_line_geometry+0x3c2>
 8019b98:	615e      	str	r6, [r3, #20]
 8019b9a:	ed9d 6a12 	vldr	s12, [sp, #72]	@ 0x48
 8019b9e:	ee37 5ac6 	vsub.f32	s10, s15, s12
 8019ba2:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8019ba6:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019baa:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8019bac:	4294      	cmp	r4, r2
 8019bae:	bf0c      	ite	eq
 8019bb0:	2482      	moveq	r4, #130	@ 0x82
 8019bb2:	2402      	movne	r4, #2
 8019bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bb8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019bbc:	bf48      	it	mi
 8019bbe:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bc6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8019bca:	bf4c      	ite	mi
 8019bcc:	eef1 4a67 	vnegmi.f32	s9, s15
 8019bd0:	eef0 4a67 	vmovpl.f32	s9, s15
 8019bd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bd8:	d478      	bmi.n	8019ccc <calc_line_geometry+0x9b0>
 8019bda:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8019bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019be2:	dc7b      	bgt.n	8019cdc <calc_line_geometry+0x9c0>
 8019be4:	ed5f 7a43 	vldr	s15, [pc, #-268]	@ 8019adc <calc_line_geometry+0x7c0>
 8019be8:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019bec:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8019bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bf4:	691a      	ldr	r2, [r3, #16]
 8019bf6:	f102 0e02 	add.w	lr, r2, #2
 8019bfa:	d93f      	bls.n	8019c7c <calc_line_geometry+0x960>
 8019bfc:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8019c00:	ee36 5ae7 	vsub.f32	s10, s13, s15
 8019c04:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019c08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c0c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019c10:	bf48      	it	mi
 8019c12:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c1a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019c1e:	bf4c      	ite	mi
 8019c20:	eef1 4a66 	vnegmi.f32	s9, s13
 8019c24:	eef0 4a66 	vmovpl.f32	s9, s13
 8019c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c2c:	f100 82a6 	bmi.w	801a17c <calc_line_geometry+0xe60>
 8019c30:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c38:	f340 80fe 	ble.w	8019e38 <calc_line_geometry+0xb1c>
 8019c3c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019c40:	ed5f 4a5a 	vldr	s9, [pc, #-360]	@ 8019adc <calc_line_geometry+0x7c0>
 8019c44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c48:	bf4c      	ite	mi
 8019c4a:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 8019c4e:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 8019c52:	eeb4 5ae6 	vcmpe.f32	s10, s13
 8019c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c5a:	d90f      	bls.n	8019c7c <calc_line_geometry+0x960>
 8019c5c:	3502      	adds	r5, #2
 8019c5e:	1d17      	adds	r7, r2, #4
 8019c60:	b949      	cbnz	r1, 8019c76 <calc_line_geometry+0x95a>
 8019c62:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8019c66:	1c51      	adds	r1, r2, #1
 8019c68:	4541      	cmp	r1, r8
 8019c6a:	f0c0 8294 	bcc.w	801a196 <calc_line_geometry+0xe7a>
 8019c6e:	2102      	movs	r1, #2
 8019c70:	2201      	movs	r2, #1
 8019c72:	6299      	str	r1, [r3, #40]	@ 0x28
 8019c74:	6002      	str	r2, [r0, #0]
 8019c76:	615d      	str	r5, [r3, #20]
 8019c78:	611f      	str	r7, [r3, #16]
 8019c7a:	e5a4      	b.n	80197c6 <calc_line_geometry+0x4aa>
 8019c7c:	2900      	cmp	r1, #0
 8019c7e:	d160      	bne.n	8019d42 <calc_line_geometry+0xa26>
 8019c80:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8019c84:	1c51      	adds	r1, r2, #1
 8019c86:	4561      	cmp	r1, ip
 8019c88:	f080 80b2 	bcs.w	8019df0 <calc_line_geometry+0xad4>
 8019c8c:	68df      	ldr	r7, [r3, #12]
 8019c8e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019c90:	eb07 0882 	add.w	r8, r7, r2, lsl #2
 8019c94:	1caf      	adds	r7, r5, #2
 8019c96:	681d      	ldr	r5, [r3, #0]
 8019c98:	f8c8 1004 	str.w	r1, [r8, #4]
 8019c9c:	42b5      	cmp	r5, r6
 8019c9e:	f8c3 e010 	str.w	lr, [r3, #16]
 8019ca2:	ed88 6a00 	vstr	s12, [r8]
 8019ca6:	f102 0104 	add.w	r1, r2, #4
 8019caa:	f240 809b 	bls.w	8019de4 <calc_line_geometry+0xac8>
 8019cae:	1cd5      	adds	r5, r2, #3
 8019cb0:	685a      	ldr	r2, [r3, #4]
 8019cb2:	45ac      	cmp	ip, r5
 8019cb4:	615f      	str	r7, [r3, #20]
 8019cb6:	5594      	strb	r4, [r2, r6]
 8019cb8:	f240 80a2 	bls.w	8019e00 <calc_line_geometry+0xae4>
 8019cbc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019cbe:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019cc0:	6119      	str	r1, [r3, #16]
 8019cc2:	f8c8 0008 	str.w	r0, [r8, #8]
 8019cc6:	f8c8 200c 	str.w	r2, [r8, #12]
 8019cca:	e57c      	b.n	80197c6 <calc_line_geometry+0x4aa>
 8019ccc:	eeb1 4a46 	vneg.f32	s8, s12
 8019cd0:	eef4 4ac4 	vcmpe.f32	s9, s8
 8019cd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cd8:	f140 80a4 	bpl.w	8019e24 <calc_line_geometry+0xb08>
 8019cdc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019ce0:	ed5f 4a82 	vldr	s9, [pc, #-520]	@ 8019adc <calc_line_geometry+0x7c0>
 8019ce4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ce8:	bf4c      	ite	mi
 8019cea:	ee67 7ae4 	vnmulmi.f32	s15, s15, s9
 8019cee:	ee67 7aa4 	vmulpl.f32	s15, s15, s9
 8019cf2:	e77b      	b.n	8019bec <calc_line_geometry+0x8d0>
 8019cf4:	eeb1 6a65 	vneg.f32	s12, s11
 8019cf8:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019cfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d00:	f140 8095 	bpl.w	8019e2e <calc_line_geometry+0xb12>
 8019d04:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019d08:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8019adc <calc_line_geometry+0x7c0>
 8019d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d10:	bf4c      	ite	mi
 8019d12:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8019d16:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8019d1a:	e507      	b.n	801972c <calc_line_geometry+0x410>
 8019d1c:	6159      	str	r1, [r3, #20]
 8019d1e:	611e      	str	r6, [r3, #16]
 8019d20:	eeb0 0a41 	vmov.f32	s0, s2
 8019d24:	eef0 0a61 	vmov.f32	s1, s3
 8019d28:	2000      	movs	r0, #0
 8019d2a:	f7ff fa3b 	bl	80191a4 <add_last_point>
 8019d2e:	4604      	mov	r4, r0
 8019d30:	2800      	cmp	r0, #0
 8019d32:	f47f ad53 	bne.w	80197dc <calc_line_geometry+0x4c0>
 8019d36:	4620      	mov	r0, r4
 8019d38:	b017      	add	sp, #92	@ 0x5c
 8019d3a:	ecbd 8b08 	vpop	{d8-d11}
 8019d3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019d42:	4671      	mov	r1, lr
 8019d44:	f8c3 e010 	str.w	lr, [r3, #16]
 8019d48:	695a      	ldr	r2, [r3, #20]
 8019d4a:	3102      	adds	r1, #2
 8019d4c:	3201      	adds	r2, #1
 8019d4e:	615a      	str	r2, [r3, #20]
 8019d50:	6119      	str	r1, [r3, #16]
 8019d52:	e538      	b.n	80197c6 <calc_line_geometry+0x4aa>
 8019d54:	6158      	str	r0, [r3, #20]
 8019d56:	611f      	str	r7, [r3, #16]
 8019d58:	eeb4 1a65 	vcmp.f32	s2, s11
 8019d5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d60:	bf48      	it	mi
 8019d62:	eeb0 1a65 	vmovmi.f32	s2, s11
 8019d66:	eeb4 5a41 	vcmp.f32	s10, s2
 8019d6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d6e:	eef4 1a65 	vcmp.f32	s3, s11
 8019d72:	bf48      	it	mi
 8019d74:	eeb0 1a45 	vmovmi.f32	s2, s10
 8019d78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d7c:	bf48      	it	mi
 8019d7e:	eef0 1a65 	vmovmi.f32	s3, s11
 8019d82:	eeb4 5a61 	vcmp.f32	s10, s3
 8019d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d8a:	bf48      	it	mi
 8019d8c:	eef0 1a45 	vmovmi.f32	s3, s10
 8019d90:	eeb0 0a41 	vmov.f32	s0, s2
 8019d94:	eef0 0a61 	vmov.f32	s1, s3
 8019d98:	2080      	movs	r0, #128	@ 0x80
 8019d9a:	ed8d 1a10 	vstr	s2, [sp, #64]	@ 0x40
 8019d9e:	edcd 1a11 	vstr	s3, [sp, #68]	@ 0x44
 8019da2:	f7ff f9ff 	bl	80191a4 <add_last_point>
 8019da6:	4604      	mov	r4, r0
 8019da8:	2800      	cmp	r0, #0
 8019daa:	f43f aee0 	beq.w	8019b6e <calc_line_geometry+0x852>
 8019dae:	e515      	b.n	80197dc <calc_line_geometry+0x4c0>
 8019db0:	2101      	movs	r1, #1
 8019db2:	629a      	str	r2, [r3, #40]	@ 0x28
 8019db4:	615e      	str	r6, [r3, #20]
 8019db6:	6001      	str	r1, [r0, #0]
 8019db8:	e6ef      	b.n	8019b9a <calc_line_geometry+0x87e>
 8019dba:	681d      	ldr	r5, [r3, #0]
 8019dbc:	428d      	cmp	r5, r1
 8019dbe:	f240 8217 	bls.w	801a1f0 <calc_line_geometry+0xed4>
 8019dc2:	2682      	movs	r6, #130	@ 0x82
 8019dc4:	685d      	ldr	r5, [r3, #4]
 8019dc6:	615c      	str	r4, [r3, #20]
 8019dc8:	546e      	strb	r6, [r5, r1]
 8019dca:	e4d5      	b.n	8019778 <calc_line_geometry+0x45c>
 8019dcc:	2102      	movs	r1, #2
 8019dce:	2201      	movs	r2, #1
 8019dd0:	611e      	str	r6, [r3, #16]
 8019dd2:	6299      	str	r1, [r3, #40]	@ 0x28
 8019dd4:	602a      	str	r2, [r5, #0]
 8019dd6:	e7a3      	b.n	8019d20 <calc_line_geometry+0xa04>
 8019dd8:	2002      	movs	r0, #2
 8019dda:	2201      	movs	r2, #1
 8019ddc:	6159      	str	r1, [r3, #20]
 8019dde:	6298      	str	r0, [r3, #40]	@ 0x28
 8019de0:	602a      	str	r2, [r5, #0]
 8019de2:	e79c      	b.n	8019d1e <calc_line_geometry+0xa02>
 8019de4:	2402      	movs	r4, #2
 8019de6:	2201      	movs	r2, #1
 8019de8:	615f      	str	r7, [r3, #20]
 8019dea:	629c      	str	r4, [r3, #40]	@ 0x28
 8019dec:	6002      	str	r2, [r0, #0]
 8019dee:	e7af      	b.n	8019d50 <calc_line_geometry+0xa34>
 8019df0:	2102      	movs	r1, #2
 8019df2:	2201      	movs	r2, #1
 8019df4:	6299      	str	r1, [r3, #40]	@ 0x28
 8019df6:	f8c3 e010 	str.w	lr, [r3, #16]
 8019dfa:	6002      	str	r2, [r0, #0]
 8019dfc:	4671      	mov	r1, lr
 8019dfe:	e7a3      	b.n	8019d48 <calc_line_geometry+0xa2c>
 8019e00:	2402      	movs	r4, #2
 8019e02:	2201      	movs	r2, #1
 8019e04:	6119      	str	r1, [r3, #16]
 8019e06:	629c      	str	r4, [r3, #40]	@ 0x28
 8019e08:	6002      	str	r2, [r0, #0]
 8019e0a:	e4dc      	b.n	80197c6 <calc_line_geometry+0x4aa>
 8019e0c:	2102      	movs	r1, #2
 8019e0e:	2201      	movs	r2, #1
 8019e10:	611f      	str	r7, [r3, #16]
 8019e12:	6299      	str	r1, [r3, #40]	@ 0x28
 8019e14:	6032      	str	r2, [r6, #0]
 8019e16:	e79f      	b.n	8019d58 <calc_line_geometry+0xa3c>
 8019e18:	2102      	movs	r1, #2
 8019e1a:	2201      	movs	r2, #1
 8019e1c:	6158      	str	r0, [r3, #20]
 8019e1e:	6299      	str	r1, [r3, #40]	@ 0x28
 8019e20:	6032      	str	r2, [r6, #0]
 8019e22:	e798      	b.n	8019d56 <calc_line_geometry+0xa3a>
 8019e24:	eddf 7ae7 	vldr	s15, [pc, #924]	@ 801a1c4 <calc_line_geometry+0xea8>
 8019e28:	ee64 7a27 	vmul.f32	s15, s8, s15
 8019e2c:	e6de      	b.n	8019bec <calc_line_geometry+0x8d0>
 8019e2e:	eddf 4ae5 	vldr	s9, [pc, #916]	@ 801a1c4 <calc_line_geometry+0xea8>
 8019e32:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019e36:	e479      	b.n	801972c <calc_line_geometry+0x410>
 8019e38:	eddf 6ae2 	vldr	s13, [pc, #904]	@ 801a1c4 <calc_line_geometry+0xea8>
 8019e3c:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8019e40:	e707      	b.n	8019c52 <calc_line_geometry+0x936>
 8019e42:	611d      	str	r5, [r3, #16]
 8019e44:	e4bf      	b.n	80197c6 <calc_line_geometry+0x4aa>
 8019e46:	2a00      	cmp	r2, #0
 8019e48:	d1fb      	bne.n	8019e42 <calc_line_geometry+0xb26>
 8019e4a:	689a      	ldr	r2, [r3, #8]
 8019e4c:	1c4c      	adds	r4, r1, #1
 8019e4e:	4294      	cmp	r4, r2
 8019e50:	f080 81c7 	bcs.w	801a1e2 <calc_line_geometry+0xec6>
 8019e54:	68da      	ldr	r2, [r3, #12]
 8019e56:	611d      	str	r5, [r3, #16]
 8019e58:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019e5c:	ed81 7a00 	vstr	s14, [r1]
 8019e60:	edc1 6a01 	vstr	s13, [r1, #4]
 8019e64:	e4af      	b.n	80197c6 <calc_line_geometry+0x4aa>
 8019e66:	ee28 6a09 	vmul.f32	s12, s16, s18
 8019e6a:	ee22 5a05 	vmul.f32	s10, s4, s10
 8019e6e:	ee36 5a45 	vsub.f32	s10, s12, s10
 8019e72:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8019e76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e7e:	f6ff ab0e 	blt.w	801949e <calc_line_geometry+0x182>
 8019e82:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e8a:	f63f ab08 	bhi.w	801949e <calc_line_geometry+0x182>
 8019e8e:	2a02      	cmp	r2, #2
 8019e90:	f43f ab05 	beq.w	801949e <calc_line_geometry+0x182>
 8019e94:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019e98:	2a01      	cmp	r2, #1
 8019e9a:	ee37 0a00 	vadd.f32	s0, s14, s0
 8019e9e:	f000 82f9 	beq.w	801a494 <calc_line_geometry+0x1178>
 8019ea2:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019ea6:	ee77 0aa0 	vadd.f32	s1, s15, s1
 8019eaa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8019eae:	ed83 0a00 	vstr	s0, [r3]
 8019eb2:	edc3 0a01 	vstr	s1, [r3, #4]
 8019eb6:	f7ff baf2 	b.w	801949e <calc_line_geometry+0x182>
 8019eba:	ee62 7a29 	vmul.f32	s15, s4, s19
 8019ebe:	ee25 6a88 	vmul.f32	s12, s11, s16
 8019ec2:	ee36 6a67 	vsub.f32	s12, s12, s15
 8019ec6:	eec6 7a04 	vdiv.f32	s15, s12, s8
 8019eca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ed2:	f6ff aacb 	blt.w	801946c <calc_line_geometry+0x150>
 8019ed6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019eda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ede:	f63f aac5 	bhi.w	801946c <calc_line_geometry+0x150>
 8019ee2:	2a02      	cmp	r2, #2
 8019ee4:	f43f aac2 	beq.w	801946c <calc_line_geometry+0x150>
 8019ee8:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019eec:	2a01      	cmp	r2, #1
 8019eee:	ee37 7a00 	vadd.f32	s14, s14, s0
 8019ef2:	f000 8329 	beq.w	801a548 <calc_line_geometry+0x122c>
 8019ef6:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019efa:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019efe:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019f02:	4628      	mov	r0, r5
 8019f04:	4619      	mov	r1, r3
 8019f06:	edc4 7a01 	vstr	s15, [r4, #4]
 8019f0a:	ed84 7a00 	vstr	s14, [r4]
 8019f0e:	f7ff f8c9 	bl	80190a4 <points_coincide>
 8019f12:	2800      	cmp	r0, #0
 8019f14:	f47f aaaa 	bne.w	801946c <calc_line_geometry+0x150>
 8019f18:	a80c      	add	r0, sp, #48	@ 0x30
 8019f1a:	f7ff f8c3 	bl	80190a4 <points_coincide>
 8019f1e:	2800      	cmp	r0, #0
 8019f20:	f47f aaa4 	bne.w	801946c <calc_line_geometry+0x150>
 8019f24:	3201      	adds	r2, #1
 8019f26:	f7ff baa1 	b.w	801946c <calc_line_geometry+0x150>
 8019f2a:	ee29 7a89 	vmul.f32	s14, s19, s18
 8019f2e:	ee62 7a27 	vmul.f32	s15, s4, s15
 8019f32:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019f36:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019f3a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019f3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f42:	f6ff aa7e 	blt.w	8019442 <calc_line_geometry+0x126>
 8019f46:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019f4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f4e:	f63f aa78 	bhi.w	8019442 <calc_line_geometry+0x126>
 8019f52:	ee62 6a87 	vmul.f32	s13, s5, s14
 8019f56:	2a01      	cmp	r2, #1
 8019f58:	ee76 6a80 	vadd.f32	s13, s13, s0
 8019f5c:	f000 834e 	beq.w	801a5fc <calc_line_geometry+0x12e0>
 8019f60:	ee63 7a07 	vmul.f32	s15, s6, s14
 8019f64:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019f68:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019f6c:	4619      	mov	r1, r3
 8019f6e:	4628      	mov	r0, r5
 8019f70:	edc4 7a01 	vstr	s15, [r4, #4]
 8019f74:	edc4 6a00 	vstr	s13, [r4]
 8019f78:	f7ff f894 	bl	80190a4 <points_coincide>
 8019f7c:	2800      	cmp	r0, #0
 8019f7e:	f47f aa60 	bne.w	8019442 <calc_line_geometry+0x126>
 8019f82:	a80c      	add	r0, sp, #48	@ 0x30
 8019f84:	f7ff f88e 	bl	80190a4 <points_coincide>
 8019f88:	2800      	cmp	r0, #0
 8019f8a:	f47f aa5a 	bne.w	8019442 <calc_line_geometry+0x126>
 8019f8e:	3201      	adds	r2, #1
 8019f90:	f7ff ba57 	b.w	8019442 <calc_line_geometry+0x126>
 8019f94:	ee62 7a08 	vmul.f32	s15, s4, s16
 8019f98:	ee65 6aa9 	vmul.f32	s13, s11, s19
 8019f9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8019fa0:	ee87 4aa3 	vdiv.f32	s8, s15, s7
 8019fa4:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8019fa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fac:	f6ff aa29 	blt.w	8019402 <calc_line_geometry+0xe6>
 8019fb0:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8019fb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fb8:	f63f aa23 	bhi.w	8019402 <calc_line_geometry+0xe6>
 8019fbc:	ee22 aa84 	vmul.f32	s20, s5, s8
 8019fc0:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019fc4:	ee3a aa00 	vadd.f32	s20, s20, s0
 8019fc8:	ee34 4a20 	vadd.f32	s8, s8, s1
 8019fcc:	4619      	mov	r1, r3
 8019fce:	4628      	mov	r0, r5
 8019fd0:	ed8d aa12 	vstr	s20, [sp, #72]	@ 0x48
 8019fd4:	ed8d 4a13 	vstr	s8, [sp, #76]	@ 0x4c
 8019fd8:	f7ff f864 	bl	80190a4 <points_coincide>
 8019fdc:	b938      	cbnz	r0, 8019fee <calc_line_geometry+0xcd2>
 8019fde:	a80c      	add	r0, sp, #48	@ 0x30
 8019fe0:	f7ff f860 	bl	80190a4 <points_coincide>
 8019fe4:	fab0 f280 	clz	r2, r0
 8019fe8:	0952      	lsrs	r2, r2, #5
 8019fea:	f7ff ba0f 	b.w	801940c <calc_line_geometry+0xf0>
 8019fee:	4622      	mov	r2, r4
 8019ff0:	f7ff ba0c 	b.w	801940c <calc_line_geometry+0xf0>
 8019ff4:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8019ff8:	ee27 2a82 	vmul.f32	s4, s15, s4
 8019ffc:	ee38 2a42 	vsub.f32	s4, s16, s4
 801a000:	eec2 6a07 	vdiv.f32	s13, s4, s14
 801a004:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a008:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a00c:	f6ff ac90 	blt.w	8019930 <calc_line_geometry+0x614>
 801a010:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a018:	f63f ac8a 	bhi.w	8019930 <calc_line_geometry+0x614>
 801a01c:	2a02      	cmp	r2, #2
 801a01e:	f43f ac87 	beq.w	8019930 <calc_line_geometry+0x614>
 801a022:	ee64 7a26 	vmul.f32	s15, s8, s13
 801a026:	2a01      	cmp	r2, #1
 801a028:	ee37 0a80 	vadd.f32	s0, s15, s0
 801a02c:	f000 833c 	beq.w	801a6a8 <calc_line_geometry+0x138c>
 801a030:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a034:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801a038:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801a03c:	ed83 0a00 	vstr	s0, [r3]
 801a040:	edc3 0a01 	vstr	s1, [r3, #4]
 801a044:	e474      	b.n	8019930 <calc_line_geometry+0x614>
 801a046:	ee28 3a03 	vmul.f32	s6, s16, s6
 801a04a:	ee69 7a82 	vmul.f32	s15, s19, s4
 801a04e:	ee73 7a67 	vsub.f32	s15, s6, s15
 801a052:	ee87 6aa6 	vdiv.f32	s12, s15, s13
 801a056:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a05a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a05e:	f6ff ac4e 	blt.w	80198fe <calc_line_geometry+0x5e2>
 801a062:	eeb4 6ae3 	vcmpe.f32	s12, s7
 801a066:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a06a:	f63f ac48 	bhi.w	80198fe <calc_line_geometry+0x5e2>
 801a06e:	2a02      	cmp	r2, #2
 801a070:	f43f ac45 	beq.w	80198fe <calc_line_geometry+0x5e2>
 801a074:	ee64 3a06 	vmul.f32	s7, s8, s12
 801a078:	2a01      	cmp	r2, #1
 801a07a:	ee73 3a80 	vadd.f32	s7, s7, s0
 801a07e:	f000 8373 	beq.w	801a768 <calc_line_geometry+0x144c>
 801a082:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a086:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a08a:	4620      	mov	r0, r4
 801a08c:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a090:	4619      	mov	r1, r3
 801a092:	edc4 7a01 	vstr	s15, [r4, #4]
 801a096:	edc4 3a00 	vstr	s7, [r4]
 801a09a:	f7ff f803 	bl	80190a4 <points_coincide>
 801a09e:	2800      	cmp	r0, #0
 801a0a0:	f47f ac2d 	bne.w	80198fe <calc_line_geometry+0x5e2>
 801a0a4:	a808      	add	r0, sp, #32
 801a0a6:	f7fe fffd 	bl	80190a4 <points_coincide>
 801a0aa:	2800      	cmp	r0, #0
 801a0ac:	f47f ac27 	bne.w	80198fe <calc_line_geometry+0x5e2>
 801a0b0:	3201      	adds	r2, #1
 801a0b2:	e424      	b.n	80198fe <calc_line_geometry+0x5e2>
 801a0b4:	ee29 7a8a 	vmul.f32	s14, s19, s20
 801a0b8:	ee67 7a82 	vmul.f32	s15, s15, s4
 801a0bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a0c0:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 801a0c4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a0c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0cc:	f6ff ac02 	blt.w	80198d4 <calc_line_geometry+0x5b8>
 801a0d0:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a0d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0d8:	f63f abfc 	bhi.w	80198d4 <calc_line_geometry+0x5b8>
 801a0dc:	ee64 6a07 	vmul.f32	s13, s8, s14
 801a0e0:	2a01      	cmp	r2, #1
 801a0e2:	ee76 6a80 	vadd.f32	s13, s13, s0
 801a0e6:	f000 83b7 	beq.w	801a858 <calc_line_geometry+0x153c>
 801a0ea:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a0ee:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a0f2:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 801a0f6:	4619      	mov	r1, r3
 801a0f8:	4620      	mov	r0, r4
 801a0fa:	edc5 7a01 	vstr	s15, [r5, #4]
 801a0fe:	edc5 6a00 	vstr	s13, [r5]
 801a102:	f7fe ffcf 	bl	80190a4 <points_coincide>
 801a106:	2800      	cmp	r0, #0
 801a108:	f47f abe4 	bne.w	80198d4 <calc_line_geometry+0x5b8>
 801a10c:	a808      	add	r0, sp, #32
 801a10e:	f7fe ffc9 	bl	80190a4 <points_coincide>
 801a112:	2800      	cmp	r0, #0
 801a114:	f47f abde 	bne.w	80198d4 <calc_line_geometry+0x5b8>
 801a118:	3201      	adds	r2, #1
 801a11a:	f7ff bbdb 	b.w	80198d4 <calc_line_geometry+0x5b8>
 801a11e:	ee68 7a02 	vmul.f32	s15, s16, s4
 801a122:	ee29 6a83 	vmul.f32	s12, s19, s6
 801a126:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801a12a:	ee87 9a87 	vdiv.f32	s18, s15, s14
 801a12e:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a136:	f6ff abae 	blt.w	8019896 <calc_line_geometry+0x57a>
 801a13a:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801a13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a142:	f63f aba8 	bhi.w	8019896 <calc_line_geometry+0x57a>
 801a146:	ee64 aa09 	vmul.f32	s21, s8, s18
 801a14a:	ee22 9a89 	vmul.f32	s18, s5, s18
 801a14e:	ee7a aa80 	vadd.f32	s21, s21, s0
 801a152:	ee39 9a20 	vadd.f32	s18, s18, s1
 801a156:	4619      	mov	r1, r3
 801a158:	4620      	mov	r0, r4
 801a15a:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 801a15e:	ed8d 9a13 	vstr	s18, [sp, #76]	@ 0x4c
 801a162:	f7fe ff9f 	bl	80190a4 <points_coincide>
 801a166:	2800      	cmp	r0, #0
 801a168:	f47f ab99 	bne.w	801989e <calc_line_geometry+0x582>
 801a16c:	a808      	add	r0, sp, #32
 801a16e:	f7fe ff99 	bl	80190a4 <points_coincide>
 801a172:	fab0 f280 	clz	r2, r0
 801a176:	0952      	lsrs	r2, r2, #5
 801a178:	f7ff bb91 	b.w	801989e <calc_line_geometry+0x582>
 801a17c:	eeb1 4a67 	vneg.f32	s8, s15
 801a180:	eef4 4ac4 	vcmpe.f32	s9, s8
 801a184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a188:	f53f ad58 	bmi.w	8019c3c <calc_line_geometry+0x920>
 801a18c:	eddf 6a0d 	vldr	s13, [pc, #52]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a190:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a194:	e55d      	b.n	8019c52 <calc_line_geometry+0x936>
 801a196:	68d9      	ldr	r1, [r3, #12]
 801a198:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801a19c:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 801a1a0:	6819      	ldr	r1, [r3, #0]
 801a1a2:	f8c3 e010 	str.w	lr, [r3, #16]
 801a1a6:	f8dd e054 	ldr.w	lr, [sp, #84]	@ 0x54
 801a1aa:	42b1      	cmp	r1, r6
 801a1ac:	f8c9 c000 	str.w	ip, [r9]
 801a1b0:	f8c9 e004 	str.w	lr, [r9, #4]
 801a1b4:	d808      	bhi.n	801a1c8 <calc_line_geometry+0xeac>
 801a1b6:	2102      	movs	r1, #2
 801a1b8:	2201      	movs	r2, #1
 801a1ba:	615d      	str	r5, [r3, #20]
 801a1bc:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1be:	6002      	str	r2, [r0, #0]
 801a1c0:	e55a      	b.n	8019c78 <calc_line_geometry+0x95c>
 801a1c2:	bf00      	nop
 801a1c4:	3727c5ac 	.word	0x3727c5ac
 801a1c8:	3203      	adds	r2, #3
 801a1ca:	6859      	ldr	r1, [r3, #4]
 801a1cc:	4590      	cmp	r8, r2
 801a1ce:	615d      	str	r5, [r3, #20]
 801a1d0:	558c      	strb	r4, [r1, r6]
 801a1d2:	d914      	bls.n	801a1fe <calc_line_geometry+0xee2>
 801a1d4:	ed89 6a02 	vstr	s12, [r9, #8]
 801a1d8:	611f      	str	r7, [r3, #16]
 801a1da:	edc9 7a03 	vstr	s15, [r9, #12]
 801a1de:	f7ff baf2 	b.w	80197c6 <calc_line_geometry+0x4aa>
 801a1e2:	2102      	movs	r1, #2
 801a1e4:	2201      	movs	r2, #1
 801a1e6:	611d      	str	r5, [r3, #16]
 801a1e8:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1ea:	6002      	str	r2, [r0, #0]
 801a1ec:	f7ff baeb 	b.w	80197c6 <calc_line_geometry+0x4aa>
 801a1f0:	2102      	movs	r1, #2
 801a1f2:	2201      	movs	r2, #1
 801a1f4:	615c      	str	r4, [r3, #20]
 801a1f6:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1f8:	6002      	str	r2, [r0, #0]
 801a1fa:	f7ff babd 	b.w	8019778 <calc_line_geometry+0x45c>
 801a1fe:	2102      	movs	r1, #2
 801a200:	2201      	movs	r2, #1
 801a202:	611f      	str	r7, [r3, #16]
 801a204:	6299      	str	r1, [r3, #40]	@ 0x28
 801a206:	6002      	str	r2, [r0, #0]
 801a208:	f7ff badd 	b.w	80197c6 <calc_line_geometry+0x4aa>
 801a20c:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a210:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a214:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a21c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a220:	bf48      	it	mi
 801a222:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a226:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a22a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a22e:	bf4c      	ite	mi
 801a230:	eef1 4a66 	vnegmi.f32	s9, s13
 801a234:	eef0 4a66 	vmovpl.f32	s9, s13
 801a238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a23c:	f100 8112 	bmi.w	801a464 <calc_line_geometry+0x1148>
 801a240:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a248:	f300 80dc 	bgt.w	801a404 <calc_line_geometry+0x10e8>
 801a24c:	ed5f 6a23 	vldr	s13, [pc, #-140]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a250:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a254:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a25c:	f63f ac62 	bhi.w	8019b24 <calc_line_geometry+0x808>
 801a260:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a264:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a268:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a26c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a270:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a274:	bf48      	it	mi
 801a276:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a27a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a27e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a282:	bf4c      	ite	mi
 801a284:	eef1 4a66 	vnegmi.f32	s9, s13
 801a288:	eef0 4a66 	vmovpl.f32	s9, s13
 801a28c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a290:	f100 834a 	bmi.w	801a928 <calc_line_geometry+0x160c>
 801a294:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801a298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a29c:	f300 82d0 	bgt.w	801a840 <calc_line_geometry+0x1524>
 801a2a0:	ed5f 6a38 	vldr	s13, [pc, #-224]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a2a4:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a2a8:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a2ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2b0:	f63f ac38 	bhi.w	8019b24 <calc_line_geometry+0x808>
 801a2b4:	f7ff b9a9 	b.w	801960a <calc_line_geometry+0x2ee>
 801a2b8:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a2bc:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a2c0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a2c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2c8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a2cc:	bf48      	it	mi
 801a2ce:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a2d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2d6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a2da:	bf4c      	ite	mi
 801a2dc:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a2e0:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a2e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2e8:	f100 80c8 	bmi.w	801a47c <calc_line_geometry+0x1160>
 801a2ec:	eeb4 7ac3 	vcmpe.f32	s14, s6
 801a2f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2f4:	f300 8092 	bgt.w	801a41c <calc_line_geometry+0x1100>
 801a2f8:	ed5f 6a4e 	vldr	s13, [pc, #-312]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a2fc:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a300:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a308:	f63f ab6b 	bhi.w	80199e2 <calc_line_geometry+0x6c6>
 801a30c:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a310:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a314:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a31c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a320:	bf48      	it	mi
 801a322:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a32a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a32e:	bf4c      	ite	mi
 801a330:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a334:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a33c:	f100 8312 	bmi.w	801a964 <calc_line_geometry+0x1648>
 801a340:	eef4 7ac3 	vcmpe.f32	s15, s6
 801a344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a348:	f300 82e2 	bgt.w	801a910 <calc_line_geometry+0x15f4>
 801a34c:	ed5f 6a63 	vldr	s13, [pc, #-396]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a350:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a354:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a35c:	f63f ab41 	bhi.w	80199e2 <calc_line_geometry+0x6c6>
 801a360:	f7ff b93a 	b.w	80195d8 <calc_line_geometry+0x2bc>
 801a364:	ee7a 6ac7 	vsub.f32	s13, s21, s14
 801a368:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a36c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a370:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a374:	bf48      	it	mi
 801a376:	eef1 6a66 	vnegmi.f32	s13, s13
 801a37a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a37e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a382:	bf4c      	ite	mi
 801a384:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a388:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a390:	d45c      	bmi.n	801a44c <calc_line_geometry+0x1130>
 801a392:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a39a:	dc4b      	bgt.n	801a434 <calc_line_geometry+0x1118>
 801a39c:	ed5f aa77 	vldr	s21, [pc, #-476]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a3a0:	ee67 aa2a 	vmul.f32	s21, s14, s21
 801a3a4:	eef4 6aea 	vcmpe.f32	s13, s21
 801a3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3ac:	f63f ab7b 	bhi.w	8019aa6 <calc_line_geometry+0x78a>
 801a3b0:	ee78 6a67 	vsub.f32	s13, s16, s15
 801a3b4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a3b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3bc:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a3c0:	bf48      	it	mi
 801a3c2:	eef1 6a66 	vnegmi.f32	s13, s13
 801a3c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a3ce:	bf4c      	ite	mi
 801a3d0:	eeb1 6a48 	vnegmi.f32	s12, s16
 801a3d4:	eeb0 6a48 	vmovpl.f32	s12, s16
 801a3d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3dc:	f100 82b0 	bmi.w	801a940 <calc_line_geometry+0x1624>
 801a3e0:	eef4 7ac6 	vcmpe.f32	s15, s12
 801a3e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3e8:	f300 821e 	bgt.w	801a828 <calc_line_geometry+0x150c>
 801a3ec:	ed1f 8a8b 	vldr	s16, [pc, #-556]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a3f0:	ee27 8a88 	vmul.f32	s16, s15, s16
 801a3f4:	eef4 6ac8 	vcmpe.f32	s13, s16
 801a3f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3fc:	f63f ab53 	bhi.w	8019aa6 <calc_line_geometry+0x78a>
 801a400:	f7ff b8d5 	b.w	80195ae <calc_line_geometry+0x292>
 801a404:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a408:	ed5f 4a92 	vldr	s9, [pc, #-584]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a40c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a410:	bf4c      	ite	mi
 801a412:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a416:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a41a:	e71b      	b.n	801a254 <calc_line_geometry+0xf38>
 801a41c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a420:	ed1f 3a98 	vldr	s6, [pc, #-608]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a428:	bf4c      	ite	mi
 801a42a:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a42e:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a432:	e765      	b.n	801a300 <calc_line_geometry+0xfe4>
 801a434:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a438:	ed1f 6a9e 	vldr	s12, [pc, #-632]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a43c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a440:	bf4c      	ite	mi
 801a442:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a446:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a44a:	e7ab      	b.n	801a3a4 <calc_line_geometry+0x1088>
 801a44c:	eef1 3a47 	vneg.f32	s7, s14
 801a450:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a458:	dcec      	bgt.n	801a434 <calc_line_geometry+0x1118>
 801a45a:	ed5f aaa6 	vldr	s21, [pc, #-664]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a45e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a462:	e79f      	b.n	801a3a4 <calc_line_geometry+0x1088>
 801a464:	eeb1 4a67 	vneg.f32	s8, s15
 801a468:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a46c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a470:	dcc8      	bgt.n	801a404 <calc_line_geometry+0x10e8>
 801a472:	ed5f 6aac 	vldr	s13, [pc, #-688]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a476:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a47a:	e6eb      	b.n	801a254 <calc_line_geometry+0xf38>
 801a47c:	eeb1 8a47 	vneg.f32	s16, s14
 801a480:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a488:	dcc8      	bgt.n	801a41c <calc_line_geometry+0x1100>
 801a48a:	ed5f 6ab2 	vldr	s13, [pc, #-712]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a48e:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a492:	e735      	b.n	801a300 <calc_line_geometry+0xfe4>
 801a494:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 801a498:	ee77 6a40 	vsub.f32	s13, s14, s0
 801a49c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a4a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4a4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a4a8:	bf48      	it	mi
 801a4aa:	eef1 6a66 	vnegmi.f32	s13, s13
 801a4ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4b2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a4b6:	bf4c      	ite	mi
 801a4b8:	eeb1 6a47 	vnegmi.f32	s12, s14
 801a4bc:	eeb0 6a47 	vmovpl.f32	s12, s14
 801a4c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4c4:	f100 82ba 	bmi.w	801aa3c <calc_line_geometry+0x1720>
 801a4c8:	eeb4 0ac6 	vcmpe.f32	s0, s12
 801a4cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4d0:	f300 826c 	bgt.w	801a9ac <calc_line_geometry+0x1690>
 801a4d4:	ed1f 7ac5 	vldr	s14, [pc, #-788]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a4d8:	ee20 7a07 	vmul.f32	s14, s0, s14
 801a4dc:	eef4 6ac7 	vcmpe.f32	s13, s14
 801a4e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4e4:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a4e8:	f63f acdd 	bhi.w	8019ea6 <calc_line_geometry+0xb8a>
 801a4ec:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a4f0:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a4f4:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a4f8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a4fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a500:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a504:	bf48      	it	mi
 801a506:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a50a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a50e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a512:	bf4c      	ite	mi
 801a514:	eef1 5a47 	vnegmi.f32	s11, s14
 801a518:	eef0 5a47 	vmovpl.f32	s11, s14
 801a51c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a520:	f100 82e3 	bmi.w	801aaea <calc_line_geometry+0x17ce>
 801a524:	eef4 6ae5 	vcmpe.f32	s13, s11
 801a528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a52c:	f300 82e5 	bgt.w	801aafa <calc_line_geometry+0x17de>
 801a530:	ed1f 7adc 	vldr	s14, [pc, #-880]	@ 801a1c4 <calc_line_geometry+0xea8>
 801a534:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a538:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a53c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a540:	f63f acb1 	bhi.w	8019ea6 <calc_line_geometry+0xb8a>
 801a544:	f7fe bfab 	b.w	801949e <calc_line_geometry+0x182>
 801a548:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a54c:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a550:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a558:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a55c:	bf48      	it	mi
 801a55e:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a566:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a56a:	bf4c      	ite	mi
 801a56c:	eef1 5a66 	vnegmi.f32	s11, s13
 801a570:	eef0 5a66 	vmovpl.f32	s11, s13
 801a574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a578:	f100 8254 	bmi.w	801aa24 <calc_line_geometry+0x1708>
 801a57c:	eeb4 7ae5 	vcmpe.f32	s14, s11
 801a580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a584:	f300 8206 	bgt.w	801a994 <calc_line_geometry+0x1678>
 801a588:	eddf 6af4 	vldr	s13, [pc, #976]	@ 801a95c <calc_line_geometry+0x1640>
 801a58c:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a590:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a598:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a59c:	f63f acad 	bhi.w	8019efa <calc_line_geometry+0xbde>
 801a5a0:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a5a4:	ee37 6aa0 	vadd.f32	s12, s15, s1
 801a5a8:	ee76 5ac6 	vsub.f32	s11, s13, s12
 801a5ac:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a5b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5b4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a5b8:	bf48      	it	mi
 801a5ba:	eef1 5a65 	vnegmi.f32	s11, s11
 801a5be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5c2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a5c6:	bf4c      	ite	mi
 801a5c8:	eeb1 4a66 	vnegmi.f32	s8, s13
 801a5cc:	eeb0 4a66 	vmovpl.f32	s8, s13
 801a5d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5d4:	f100 8276 	bmi.w	801aac4 <calc_line_geometry+0x17a8>
 801a5d8:	eeb4 4ac6 	vcmpe.f32	s8, s12
 801a5dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5e0:	f100 8278 	bmi.w	801aad4 <calc_line_geometry+0x17b8>
 801a5e4:	eddf 6add 	vldr	s13, [pc, #884]	@ 801a95c <calc_line_geometry+0x1640>
 801a5e8:	ee66 6a26 	vmul.f32	s13, s12, s13
 801a5ec:	eef4 5ae6 	vcmpe.f32	s11, s13
 801a5f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5f4:	f63f ac81 	bhi.w	8019efa <calc_line_geometry+0xbde>
 801a5f8:	f7fe bf38 	b.w	801946c <calc_line_geometry+0x150>
 801a5fc:	ee7a 7a66 	vsub.f32	s15, s20, s13
 801a600:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a608:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a60c:	bf48      	it	mi
 801a60e:	eef1 7a67 	vnegmi.f32	s15, s15
 801a612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a616:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a61a:	bf4c      	ite	mi
 801a61c:	eeb1 6a4a 	vnegmi.f32	s12, s20
 801a620:	eeb0 6a4a 	vmovpl.f32	s12, s20
 801a624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a628:	f100 822c 	bmi.w	801aa84 <calc_line_geometry+0x1768>
 801a62c:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a634:	f300 81a2 	bgt.w	801a97c <calc_line_geometry+0x1660>
 801a638:	ed9f aac8 	vldr	s20, [pc, #800]	@ 801a95c <calc_line_geometry+0x1640>
 801a63c:	ee26 aa8a 	vmul.f32	s20, s13, s20
 801a640:	eef4 7aca 	vcmpe.f32	s15, s20
 801a644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a648:	ee63 7a07 	vmul.f32	s15, s6, s14
 801a64c:	f63f ac8a 	bhi.w	8019f64 <calc_line_geometry+0xc48>
 801a650:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a654:	ee34 6a47 	vsub.f32	s12, s8, s14
 801a658:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a65c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a660:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801a664:	bf48      	it	mi
 801a666:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a66a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a66e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a672:	bf4c      	ite	mi
 801a674:	eef1 3a44 	vnegmi.f32	s7, s8
 801a678:	eef0 3a44 	vmovpl.f32	s7, s8
 801a67c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a680:	f100 820d 	bmi.w	801aa9e <calc_line_geometry+0x1782>
 801a684:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801a688:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a68c:	f300 820f 	bgt.w	801aaae <calc_line_geometry+0x1792>
 801a690:	ed9f 4ab2 	vldr	s8, [pc, #712]	@ 801a95c <calc_line_geometry+0x1640>
 801a694:	ee27 4a04 	vmul.f32	s8, s14, s8
 801a698:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801a69c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6a0:	f63f ac60 	bhi.w	8019f64 <calc_line_geometry+0xc48>
 801a6a4:	f7fe becd 	b.w	8019442 <calc_line_geometry+0x126>
 801a6a8:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a6ac:	ee37 7ac0 	vsub.f32	s14, s15, s0
 801a6b0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a6b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6bc:	bf48      	it	mi
 801a6be:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a6c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6c6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a6ca:	bf4c      	ite	mi
 801a6cc:	eeb1 6a67 	vnegmi.f32	s12, s15
 801a6d0:	eeb0 6a67 	vmovpl.f32	s12, s15
 801a6d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6d8:	f100 81bc 	bmi.w	801aa54 <calc_line_geometry+0x1738>
 801a6dc:	eeb4 6ac0 	vcmpe.f32	s12, s0
 801a6e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6e4:	f100 816e 	bmi.w	801a9c4 <calc_line_geometry+0x16a8>
 801a6e8:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 801a95c <calc_line_geometry+0x1640>
 801a6ec:	ee60 7a27 	vmul.f32	s15, s0, s15
 801a6f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6f8:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a6fc:	f63f ac9a 	bhi.w	801a034 <calc_line_geometry+0xd18>
 801a700:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a704:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a708:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a70c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a714:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a718:	bf48      	it	mi
 801a71a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a71e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a722:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a726:	bf4c      	ite	mi
 801a728:	eef1 4a47 	vnegmi.f32	s9, s14
 801a72c:	eef0 4a47 	vmovpl.f32	s9, s14
 801a730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a734:	f100 81f7 	bmi.w	801ab26 <calc_line_geometry+0x180a>
 801a738:	eef4 4ae6 	vcmpe.f32	s9, s13
 801a73c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a740:	f140 81f9 	bpl.w	801ab36 <calc_line_geometry+0x181a>
 801a744:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a74c:	eddf 6a83 	vldr	s13, [pc, #524]	@ 801a95c <calc_line_geometry+0x1640>
 801a750:	f100 8202 	bmi.w	801ab58 <calc_line_geometry+0x183c>
 801a754:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a758:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a75c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a760:	f63f ac68 	bhi.w	801a034 <calc_line_geometry+0xd18>
 801a764:	f7ff b8e4 	b.w	8019930 <calc_line_geometry+0x614>
 801a768:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a76c:	ee37 7ae3 	vsub.f32	s14, s15, s7
 801a770:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a778:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a77c:	bf48      	it	mi
 801a77e:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a786:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801a78a:	bf4c      	ite	mi
 801a78c:	eef1 6a67 	vnegmi.f32	s13, s15
 801a790:	eef0 6a67 	vmovpl.f32	s13, s15
 801a794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a798:	f100 8168 	bmi.w	801aa6c <calc_line_geometry+0x1750>
 801a79c:	eef4 6ae3 	vcmpe.f32	s13, s7
 801a7a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7a4:	f100 811a 	bmi.w	801a9dc <calc_line_geometry+0x16c0>
 801a7a8:	eddf 7a6c 	vldr	s15, [pc, #432]	@ 801a95c <calc_line_geometry+0x1640>
 801a7ac:	ee63 7aa7 	vmul.f32	s15, s7, s15
 801a7b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a7b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7b8:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a7bc:	f63f ac63 	bhi.w	801a086 <calc_line_geometry+0xd6a>
 801a7c0:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a7c4:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a7c8:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a7cc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a7d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7d4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a7d8:	bf48      	it	mi
 801a7da:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a7de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7e2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a7e6:	bf4c      	ite	mi
 801a7e8:	eeb1 3a47 	vnegmi.f32	s6, s14
 801a7ec:	eeb0 3a47 	vmovpl.f32	s6, s14
 801a7f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7f4:	f100 818c 	bmi.w	801ab10 <calc_line_geometry+0x17f4>
 801a7f8:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801a7fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a800:	f140 818e 	bpl.w	801ab20 <calc_line_geometry+0x1804>
 801a804:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a80c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801a95c <calc_line_geometry+0x1640>
 801a810:	f100 81a5 	bmi.w	801ab5e <calc_line_geometry+0x1842>
 801a814:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a818:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a81c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a820:	f63f ac31 	bhi.w	801a086 <calc_line_geometry+0xd6a>
 801a824:	f7ff b86b 	b.w	80198fe <calc_line_geometry+0x5e2>
 801a828:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a82c:	ed9f 6a4b 	vldr	s12, [pc, #300]	@ 801a95c <calc_line_geometry+0x1640>
 801a830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a834:	bf4c      	ite	mi
 801a836:	ee28 8a46 	vnmulmi.f32	s16, s16, s12
 801a83a:	ee28 8a06 	vmulpl.f32	s16, s16, s12
 801a83e:	e5d9      	b.n	801a3f4 <calc_line_geometry+0x10d8>
 801a840:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a844:	eddf 4a45 	vldr	s9, [pc, #276]	@ 801a95c <calc_line_geometry+0x1640>
 801a848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a84c:	bf4c      	ite	mi
 801a84e:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a852:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a856:	e527      	b.n	801a2a8 <calc_line_geometry+0xf8c>
 801a858:	ee7a 7ae6 	vsub.f32	s15, s21, s13
 801a85c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a864:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a868:	bf48      	it	mi
 801a86a:	eef1 7a67 	vnegmi.f32	s15, s15
 801a86e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a872:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a876:	bf4c      	ite	mi
 801a878:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a87c:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a884:	f100 80c2 	bmi.w	801aa0c <calc_line_geometry+0x16f0>
 801a888:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a88c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a890:	f100 80b0 	bmi.w	801a9f4 <calc_line_geometry+0x16d8>
 801a894:	eddf aa31 	vldr	s21, [pc, #196]	@ 801a95c <calc_line_geometry+0x1640>
 801a898:	ee66 aaaa 	vmul.f32	s21, s13, s21
 801a89c:	eef4 7aea 	vcmpe.f32	s15, s21
 801a8a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8a4:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a8a8:	f63f ac21 	bhi.w	801a0ee <calc_line_geometry+0xdd2>
 801a8ac:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a8b0:	ee39 6a47 	vsub.f32	s12, s18, s14
 801a8b4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a8b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8bc:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a8c0:	bf48      	it	mi
 801a8c2:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a8c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8ca:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a8ce:	bf4c      	ite	mi
 801a8d0:	eef1 3a49 	vnegmi.f32	s7, s18
 801a8d4:	eef0 3a49 	vmovpl.f32	s7, s18
 801a8d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8dc:	f100 812e 	bmi.w	801ab3c <calc_line_geometry+0x1820>
 801a8e0:	eef4 3ac7 	vcmpe.f32	s7, s14
 801a8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8e8:	f140 8130 	bpl.w	801ab4c <calc_line_geometry+0x1830>
 801a8ec:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a8f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8f4:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 801a95c <calc_line_geometry+0x1640>
 801a8f8:	f100 812b 	bmi.w	801ab52 <calc_line_geometry+0x1836>
 801a8fc:	ee27 9a09 	vmul.f32	s18, s14, s18
 801a900:	eeb4 6ac9 	vcmpe.f32	s12, s18
 801a904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a908:	f63f abf1 	bhi.w	801a0ee <calc_line_geometry+0xdd2>
 801a90c:	f7fe bfe2 	b.w	80198d4 <calc_line_geometry+0x5b8>
 801a910:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a914:	ed9f 3a11 	vldr	s6, [pc, #68]	@ 801a95c <calc_line_geometry+0x1640>
 801a918:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a91c:	bf4c      	ite	mi
 801a91e:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a922:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a926:	e515      	b.n	801a354 <calc_line_geometry+0x1038>
 801a928:	eeb1 4a47 	vneg.f32	s8, s14
 801a92c:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a934:	dc84      	bgt.n	801a840 <calc_line_geometry+0x1524>
 801a936:	eddf 6a09 	vldr	s13, [pc, #36]	@ 801a95c <calc_line_geometry+0x1640>
 801a93a:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a93e:	e4b3      	b.n	801a2a8 <calc_line_geometry+0xf8c>
 801a940:	eef1 3a67 	vneg.f32	s7, s15
 801a944:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a94c:	f73f af6c 	bgt.w	801a828 <calc_line_geometry+0x150c>
 801a950:	ed9f 8a02 	vldr	s16, [pc, #8]	@ 801a95c <calc_line_geometry+0x1640>
 801a954:	ee23 8a88 	vmul.f32	s16, s7, s16
 801a958:	e54c      	b.n	801a3f4 <calc_line_geometry+0x10d8>
 801a95a:	bf00      	nop
 801a95c:	3727c5ac 	.word	0x3727c5ac
 801a960:	3727c5ac 	.word	0x3727c5ac
 801a964:	eeb1 8a67 	vneg.f32	s16, s15
 801a968:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a96c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a970:	dcce      	bgt.n	801a910 <calc_line_geometry+0x15f4>
 801a972:	ed5f 6a05 	vldr	s13, [pc, #-20]	@ 801a960 <calc_line_geometry+0x1644>
 801a976:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a97a:	e4eb      	b.n	801a354 <calc_line_geometry+0x1038>
 801a97c:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a980:	ed1f 6a09 	vldr	s12, [pc, #-36]	@ 801a960 <calc_line_geometry+0x1644>
 801a984:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a988:	bf4c      	ite	mi
 801a98a:	ee2a aa46 	vnmulmi.f32	s20, s20, s12
 801a98e:	ee2a aa06 	vmulpl.f32	s20, s20, s12
 801a992:	e655      	b.n	801a640 <calc_line_geometry+0x1324>
 801a994:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a998:	ed5f 5a0f 	vldr	s11, [pc, #-60]	@ 801a960 <calc_line_geometry+0x1644>
 801a99c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9a0:	bf4c      	ite	mi
 801a9a2:	ee66 6ae5 	vnmulmi.f32	s13, s13, s11
 801a9a6:	ee66 6aa5 	vmulpl.f32	s13, s13, s11
 801a9aa:	e5f1      	b.n	801a590 <calc_line_geometry+0x1274>
 801a9ac:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a9b0:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 801a960 <calc_line_geometry+0x1644>
 801a9b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9b8:	bf4c      	ite	mi
 801a9ba:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801a9be:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 801a9c2:	e58b      	b.n	801a4dc <calc_line_geometry+0x11c0>
 801a9c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a9c8:	ed1f 6a1b 	vldr	s12, [pc, #-108]	@ 801a960 <calc_line_geometry+0x1644>
 801a9cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9d0:	bf4c      	ite	mi
 801a9d2:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 801a9d6:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 801a9da:	e689      	b.n	801a6f0 <calc_line_geometry+0x13d4>
 801a9dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a9e0:	ed5f 6a21 	vldr	s13, [pc, #-132]	@ 801a960 <calc_line_geometry+0x1644>
 801a9e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9e8:	bf4c      	ite	mi
 801a9ea:	ee67 7ae6 	vnmulmi.f32	s15, s15, s13
 801a9ee:	ee67 7aa6 	vmulpl.f32	s15, s15, s13
 801a9f2:	e6dd      	b.n	801a7b0 <calc_line_geometry+0x1494>
 801a9f4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a9f8:	ed1f 6a27 	vldr	s12, [pc, #-156]	@ 801a960 <calc_line_geometry+0x1644>
 801a9fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa00:	bf4c      	ite	mi
 801aa02:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801aa06:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801aa0a:	e747      	b.n	801a89c <calc_line_geometry+0x1580>
 801aa0c:	eef1 3a66 	vneg.f32	s7, s13
 801aa10:	eef4 3ac6 	vcmpe.f32	s7, s12
 801aa14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa18:	dcec      	bgt.n	801a9f4 <calc_line_geometry+0x16d8>
 801aa1a:	ed5f aa2f 	vldr	s21, [pc, #-188]	@ 801a960 <calc_line_geometry+0x1644>
 801aa1e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801aa22:	e73b      	b.n	801a89c <calc_line_geometry+0x1580>
 801aa24:	eeb1 4a47 	vneg.f32	s8, s14
 801aa28:	eeb4 4ae5 	vcmpe.f32	s8, s11
 801aa2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa30:	dcb0      	bgt.n	801a994 <calc_line_geometry+0x1678>
 801aa32:	ed5f 6a35 	vldr	s13, [pc, #-212]	@ 801a960 <calc_line_geometry+0x1644>
 801aa36:	ee64 6a26 	vmul.f32	s13, s8, s13
 801aa3a:	e5a9      	b.n	801a590 <calc_line_geometry+0x1274>
 801aa3c:	eef1 5a40 	vneg.f32	s11, s0
 801aa40:	eef4 5ac6 	vcmpe.f32	s11, s12
 801aa44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa48:	dcb0      	bgt.n	801a9ac <calc_line_geometry+0x1690>
 801aa4a:	ed1f 7a3b 	vldr	s14, [pc, #-236]	@ 801a960 <calc_line_geometry+0x1644>
 801aa4e:	ee25 7a87 	vmul.f32	s14, s11, s14
 801aa52:	e543      	b.n	801a4dc <calc_line_geometry+0x11c0>
 801aa54:	eef1 4a40 	vneg.f32	s9, s0
 801aa58:	eef4 4ac6 	vcmpe.f32	s9, s12
 801aa5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa60:	dcb0      	bgt.n	801a9c4 <calc_line_geometry+0x16a8>
 801aa62:	ed5f 7a41 	vldr	s15, [pc, #-260]	@ 801a960 <calc_line_geometry+0x1644>
 801aa66:	ee64 7aa7 	vmul.f32	s15, s9, s15
 801aa6a:	e641      	b.n	801a6f0 <calc_line_geometry+0x13d4>
 801aa6c:	eeb1 3a63 	vneg.f32	s6, s7
 801aa70:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801aa74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa78:	dcb0      	bgt.n	801a9dc <calc_line_geometry+0x16c0>
 801aa7a:	ed5f 7a47 	vldr	s15, [pc, #-284]	@ 801a960 <calc_line_geometry+0x1644>
 801aa7e:	ee63 7a27 	vmul.f32	s15, s6, s15
 801aa82:	e695      	b.n	801a7b0 <calc_line_geometry+0x1494>
 801aa84:	eef1 3a66 	vneg.f32	s7, s13
 801aa88:	eef4 3ac6 	vcmpe.f32	s7, s12
 801aa8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa90:	f73f af74 	bgt.w	801a97c <calc_line_geometry+0x1660>
 801aa94:	ed1f aa4e 	vldr	s20, [pc, #-312]	@ 801a960 <calc_line_geometry+0x1644>
 801aa98:	ee23 aa8a 	vmul.f32	s20, s7, s20
 801aa9c:	e5d0      	b.n	801a640 <calc_line_geometry+0x1324>
 801aa9e:	eeb1 7a47 	vneg.f32	s14, s14
 801aaa2:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801aaa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaaa:	f77f adf1 	ble.w	801a690 <calc_line_geometry+0x1374>
 801aaae:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801aab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aab6:	ed1f 7a56 	vldr	s14, [pc, #-344]	@ 801a960 <calc_line_geometry+0x1644>
 801aaba:	f57f adeb 	bpl.w	801a694 <calc_line_geometry+0x1378>
 801aabe:	ee24 4a47 	vnmul.f32	s8, s8, s14
 801aac2:	e5e9      	b.n	801a698 <calc_line_geometry+0x137c>
 801aac4:	eeb1 6a46 	vneg.f32	s12, s12
 801aac8:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801aacc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aad0:	f77f ad88 	ble.w	801a5e4 <calc_line_geometry+0x12c8>
 801aad4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aadc:	ed1f 6a60 	vldr	s12, [pc, #-384]	@ 801a960 <calc_line_geometry+0x1644>
 801aae0:	f57f ad82 	bpl.w	801a5e8 <calc_line_geometry+0x12cc>
 801aae4:	ee66 6ac6 	vnmul.f32	s13, s13, s12
 801aae8:	e580      	b.n	801a5ec <calc_line_geometry+0x12d0>
 801aaea:	eef1 6a66 	vneg.f32	s13, s13
 801aaee:	eef4 6ae5 	vcmpe.f32	s13, s11
 801aaf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaf6:	f77f ad1b 	ble.w	801a530 <calc_line_geometry+0x1214>
 801aafa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801aafe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab02:	ed5f 6a69 	vldr	s13, [pc, #-420]	@ 801a960 <calc_line_geometry+0x1644>
 801ab06:	f57f ad15 	bpl.w	801a534 <calc_line_geometry+0x1218>
 801ab0a:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab0e:	e513      	b.n	801a538 <calc_line_geometry+0x121c>
 801ab10:	eef1 6a66 	vneg.f32	s13, s13
 801ab14:	eef4 6ac3 	vcmpe.f32	s13, s6
 801ab18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab1c:	f73f ae72 	bgt.w	801a804 <calc_line_geometry+0x14e8>
 801ab20:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 801a960 <calc_line_geometry+0x1644>
 801ab24:	e676      	b.n	801a814 <calc_line_geometry+0x14f8>
 801ab26:	eef1 6a66 	vneg.f32	s13, s13
 801ab2a:	eef4 6ae4 	vcmpe.f32	s13, s9
 801ab2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab32:	f73f ae07 	bgt.w	801a744 <calc_line_geometry+0x1428>
 801ab36:	ed1f 7a76 	vldr	s14, [pc, #-472]	@ 801a960 <calc_line_geometry+0x1644>
 801ab3a:	e60b      	b.n	801a754 <calc_line_geometry+0x1438>
 801ab3c:	eeb1 7a47 	vneg.f32	s14, s14
 801ab40:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801ab44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab48:	f73f aed0 	bgt.w	801a8ec <calc_line_geometry+0x15d0>
 801ab4c:	ed1f 9a7c 	vldr	s18, [pc, #-496]	@ 801a960 <calc_line_geometry+0x1644>
 801ab50:	e6d4      	b.n	801a8fc <calc_line_geometry+0x15e0>
 801ab52:	ee29 9a47 	vnmul.f32	s18, s18, s14
 801ab56:	e6d3      	b.n	801a900 <calc_line_geometry+0x15e4>
 801ab58:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab5c:	e5fc      	b.n	801a758 <calc_line_geometry+0x143c>
 801ab5e:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab62:	e659      	b.n	801a818 <calc_line_geometry+0x14fc>

0801ab64 <cubic_decasteljau>:
 801ab64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab68:	ed2d 8b0a 	vpush	{d8-d12}
 801ab6c:	4fd5      	ldr	r7, [pc, #852]	@ (801aec4 <cubic_decasteljau+0x360>)
 801ab6e:	4bd6      	ldr	r3, [pc, #856]	@ (801aec8 <cubic_decasteljau+0x364>)
 801ab70:	eeb0 8a40 	vmov.f32	s16, s0
 801ab74:	eef0 8a60 	vmov.f32	s17, s1
 801ab78:	eef0 ba43 	vmov.f32	s23, s6
 801ab7c:	eeb0 ca63 	vmov.f32	s24, s7
 801ab80:	eeb0 aa41 	vmov.f32	s20, s2
 801ab84:	eeb0 9a61 	vmov.f32	s18, s3
 801ab88:	eef0 aa42 	vmov.f32	s21, s4
 801ab8c:	eef0 9a62 	vmov.f32	s19, s5
 801ab90:	edd7 6a00 	vldr	s13, [r7]
 801ab94:	ed93 6a00 	vldr	s12, [r3]
 801ab98:	2401      	movs	r4, #1
 801ab9a:	ed9f bacc 	vldr	s22, [pc, #816]	@ 801aecc <cubic_decasteljau+0x368>
 801ab9e:	4dcc      	ldr	r5, [pc, #816]	@ (801aed0 <cubic_decasteljau+0x36c>)
 801aba0:	f8df a334 	ldr.w	sl, [pc, #820]	@ 801aed8 <cubic_decasteljau+0x374>
 801aba4:	b089      	sub	sp, #36	@ 0x24
 801aba6:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801abaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abae:	dc14      	bgt.n	801abda <cubic_decasteljau+0x76>
 801abb0:	eef4 8ae6 	vcmpe.f32	s17, s13
 801abb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abb8:	dc0f      	bgt.n	801abda <cubic_decasteljau+0x76>
 801abba:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801abbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abc2:	d40a      	bmi.n	801abda <cubic_decasteljau+0x76>
 801abc4:	eef4 8ac6 	vcmpe.f32	s17, s12
 801abc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abcc:	d405      	bmi.n	801abda <cubic_decasteljau+0x76>
 801abce:	eeb4 aae6 	vcmpe.f32	s20, s13
 801abd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abd6:	f340 8129 	ble.w	801ae2c <cubic_decasteljau+0x2c8>
 801abda:	2300      	movs	r3, #0
 801abdc:	ee76 7a0b 	vadd.f32	s15, s12, s22
 801abe0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801abe4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abe8:	ee36 7acb 	vsub.f32	s14, s13, s22
 801abec:	d50f      	bpl.n	801ac0e <cubic_decasteljau+0xaa>
 801abee:	eeb4 aae7 	vcmpe.f32	s20, s15
 801abf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abf6:	d50a      	bpl.n	801ac0e <cubic_decasteljau+0xaa>
 801abf8:	eef4 aae7 	vcmpe.f32	s21, s15
 801abfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac00:	d505      	bpl.n	801ac0e <cubic_decasteljau+0xaa>
 801ac02:	eef4 bae7 	vcmpe.f32	s23, s15
 801ac06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac0a:	f100 80a7 	bmi.w	801ad5c <cubic_decasteljau+0x1f8>
 801ac0e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801ac12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac16:	dd0f      	ble.n	801ac38 <cubic_decasteljau+0xd4>
 801ac18:	eeb4 aac7 	vcmpe.f32	s20, s14
 801ac1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac20:	dd0a      	ble.n	801ac38 <cubic_decasteljau+0xd4>
 801ac22:	eef4 aac7 	vcmpe.f32	s21, s14
 801ac26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac2a:	dd05      	ble.n	801ac38 <cubic_decasteljau+0xd4>
 801ac2c:	eef4 bac7 	vcmpe.f32	s23, s14
 801ac30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac34:	f300 8092 	bgt.w	801ad5c <cubic_decasteljau+0x1f8>
 801ac38:	eef4 8ae7 	vcmpe.f32	s17, s15
 801ac3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac40:	d50e      	bpl.n	801ac60 <cubic_decasteljau+0xfc>
 801ac42:	eeb4 9ae7 	vcmpe.f32	s18, s15
 801ac46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac4a:	d509      	bpl.n	801ac60 <cubic_decasteljau+0xfc>
 801ac4c:	eef4 9ae7 	vcmpe.f32	s19, s15
 801ac50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac54:	d504      	bpl.n	801ac60 <cubic_decasteljau+0xfc>
 801ac56:	eeb4 cae7 	vcmpe.f32	s24, s15
 801ac5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac5e:	d47d      	bmi.n	801ad5c <cubic_decasteljau+0x1f8>
 801ac60:	eef4 8ac7 	vcmpe.f32	s17, s14
 801ac64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac68:	dd0e      	ble.n	801ac88 <cubic_decasteljau+0x124>
 801ac6a:	eeb4 9ac7 	vcmpe.f32	s18, s14
 801ac6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac72:	dd09      	ble.n	801ac88 <cubic_decasteljau+0x124>
 801ac74:	eef4 9ac7 	vcmpe.f32	s19, s14
 801ac78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac7c:	dd04      	ble.n	801ac88 <cubic_decasteljau+0x124>
 801ac7e:	eeb4 cac7 	vcmpe.f32	s24, s14
 801ac82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac86:	dc69      	bgt.n	801ad5c <cubic_decasteljau+0x1f8>
 801ac88:	682a      	ldr	r2, [r5, #0]
 801ac8a:	2b00      	cmp	r3, #0
 801ac8c:	d077      	beq.n	801ad7e <cubic_decasteljau+0x21a>
 801ac8e:	f8df e24c 	ldr.w	lr, [pc, #588]	@ 801aedc <cubic_decasteljau+0x378>
 801ac92:	4b90      	ldr	r3, [pc, #576]	@ (801aed4 <cubic_decasteljau+0x370>)
 801ac94:	f8de 6000 	ldr.w	r6, [lr]
 801ac98:	e9d3 1004 	ldrd	r1, r0, [r3, #16]
 801ac9c:	3c01      	subs	r4, #1
 801ac9e:	f100 0901 	add.w	r9, r0, #1
 801aca2:	f101 0806 	add.w	r8, r1, #6
 801aca6:	2e00      	cmp	r6, #0
 801aca8:	d155      	bne.n	801ad56 <cubic_decasteljau+0x1f2>
 801acaa:	681e      	ldr	r6, [r3, #0]
 801acac:	4286      	cmp	r6, r0
 801acae:	d828      	bhi.n	801ad02 <cubic_decasteljau+0x19e>
 801acb0:	2002      	movs	r0, #2
 801acb2:	2101      	movs	r1, #1
 801acb4:	f8c3 9014 	str.w	r9, [r3, #20]
 801acb8:	6298      	str	r0, [r3, #40]	@ 0x28
 801acba:	f8ce 1000 	str.w	r1, [lr]
 801acbe:	f8c3 8010 	str.w	r8, [r3, #16]
 801acc2:	b1aa      	cbz	r2, 801acf0 <cubic_decasteljau+0x18c>
 801acc4:	3a01      	subs	r2, #1
 801acc6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801acca:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801acce:	eef0 8a4c 	vmov.f32	s17, s24
 801acd2:	eeb0 8a6b 	vmov.f32	s16, s23
 801acd6:	ed93 aa00 	vldr	s20, [r3]
 801acda:	ed93 9a01 	vldr	s18, [r3, #4]
 801acde:	edd3 aa02 	vldr	s21, [r3, #8]
 801ace2:	edd3 9a03 	vldr	s19, [r3, #12]
 801ace6:	ed93 ca05 	vldr	s24, [r3, #20]
 801acea:	edd3 ba04 	vldr	s23, [r3, #16]
 801acee:	602a      	str	r2, [r5, #0]
 801acf0:	2c00      	cmp	r4, #0
 801acf2:	f000 8094 	beq.w	801ae1e <cubic_decasteljau+0x2ba>
 801acf6:	4b74      	ldr	r3, [pc, #464]	@ (801aec8 <cubic_decasteljau+0x364>)
 801acf8:	edd7 6a00 	vldr	s13, [r7]
 801acfc:	ed93 6a00 	vldr	s12, [r3]
 801ad00:	e751      	b.n	801aba6 <cubic_decasteljau+0x42>
 801ad02:	f04f 0b06 	mov.w	fp, #6
 801ad06:	f8c3 9014 	str.w	r9, [r3, #20]
 801ad0a:	e9d3 6901 	ldrd	r6, r9, [r3, #4]
 801ad0e:	f806 b000 	strb.w	fp, [r6, r0]
 801ad12:	1c48      	adds	r0, r1, #1
 801ad14:	4548      	cmp	r0, r9
 801ad16:	d218      	bcs.n	801ad4a <cubic_decasteljau+0x1e6>
 801ad18:	68d8      	ldr	r0, [r3, #12]
 801ad1a:	f101 0c03 	add.w	ip, r1, #3
 801ad1e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801ad22:	45e1      	cmp	r9, ip
 801ad24:	ed80 aa00 	vstr	s20, [r0]
 801ad28:	ed80 9a01 	vstr	s18, [r0, #4]
 801ad2c:	d90d      	bls.n	801ad4a <cubic_decasteljau+0x1e6>
 801ad2e:	3105      	adds	r1, #5
 801ad30:	4589      	cmp	r9, r1
 801ad32:	edc0 aa02 	vstr	s21, [r0, #8]
 801ad36:	edc0 9a03 	vstr	s19, [r0, #12]
 801ad3a:	d968      	bls.n	801ae0e <cubic_decasteljau+0x2aa>
 801ad3c:	edc0 ba04 	vstr	s23, [r0, #16]
 801ad40:	f8c3 8010 	str.w	r8, [r3, #16]
 801ad44:	ed80 ca05 	vstr	s24, [r0, #20]
 801ad48:	e7bb      	b.n	801acc2 <cubic_decasteljau+0x15e>
 801ad4a:	2002      	movs	r0, #2
 801ad4c:	2101      	movs	r1, #1
 801ad4e:	6298      	str	r0, [r3, #40]	@ 0x28
 801ad50:	f8ce 1000 	str.w	r1, [lr]
 801ad54:	e7b3      	b.n	801acbe <cubic_decasteljau+0x15a>
 801ad56:	f8c3 9014 	str.w	r9, [r3, #20]
 801ad5a:	e7b0      	b.n	801acbe <cubic_decasteljau+0x15a>
 801ad5c:	eeb0 1a6b 	vmov.f32	s2, s23
 801ad60:	eef0 1a4c 	vmov.f32	s3, s24
 801ad64:	eeb0 0a48 	vmov.f32	s0, s16
 801ad68:	eef0 0a68 	vmov.f32	s1, s17
 801ad6c:	f7fe fad6 	bl	801931c <calc_line_geometry>
 801ad70:	3c01      	subs	r4, #1
 801ad72:	4680      	mov	r8, r0
 801ad74:	2800      	cmp	r0, #0
 801ad76:	f040 809d 	bne.w	801aeb4 <cubic_decasteljau+0x350>
 801ad7a:	682a      	ldr	r2, [r5, #0]
 801ad7c:	e7a1      	b.n	801acc2 <cubic_decasteljau+0x15e>
 801ad7e:	2a09      	cmp	r2, #9
 801ad80:	dc85      	bgt.n	801ac8e <cubic_decasteljau+0x12a>
 801ad82:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ad86:	ee3a 7a8a 	vadd.f32	s14, s21, s20
 801ad8a:	ee39 5a8c 	vadd.f32	s10, s19, s24
 801ad8e:	ee7a aaab 	vadd.f32	s21, s21, s23
 801ad92:	ee78 5a0a 	vadd.f32	s11, s16, s20
 801ad96:	ee79 9a29 	vadd.f32	s19, s18, s19
 801ad9a:	ee39 9a28 	vadd.f32	s18, s18, s17
 801ad9e:	ee2a 2aa7 	vmul.f32	s4, s21, s15
 801ada2:	ee25 aaa7 	vmul.f32	s20, s11, s15
 801ada6:	ee27 7a27 	vmul.f32	s14, s14, s15
 801adaa:	ee25 5a27 	vmul.f32	s10, s10, s15
 801adae:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801adb2:	ee29 9a27 	vmul.f32	s18, s18, s15
 801adb6:	ee7a aa07 	vadd.f32	s21, s20, s14
 801adba:	ee79 5a85 	vadd.f32	s11, s19, s10
 801adbe:	ee37 7a02 	vadd.f32	s14, s14, s4
 801adc2:	ee79 9a29 	vadd.f32	s19, s18, s19
 801adc6:	ee27 7a27 	vmul.f32	s14, s14, s15
 801adca:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801adce:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801add2:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801add6:	ee3a 4a87 	vadd.f32	s8, s21, s14
 801adda:	ee79 4aa5 	vadd.f32	s9, s19, s11
 801adde:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801ade2:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801ade6:	3201      	adds	r2, #1
 801ade8:	edc3 ba04 	vstr	s23, [r3, #16]
 801adec:	ed83 ca05 	vstr	s24, [r3, #20]
 801adf0:	3401      	adds	r4, #1
 801adf2:	ed83 2a02 	vstr	s4, [r3, #8]
 801adf6:	ed83 7a00 	vstr	s14, [r3]
 801adfa:	ee64 ba27 	vmul.f32	s23, s8, s15
 801adfe:	ed83 5a03 	vstr	s10, [r3, #12]
 801ae02:	edc3 5a01 	vstr	s11, [r3, #4]
 801ae06:	ee24 caa7 	vmul.f32	s24, s9, s15
 801ae0a:	602a      	str	r2, [r5, #0]
 801ae0c:	e6cb      	b.n	801aba6 <cubic_decasteljau+0x42>
 801ae0e:	2002      	movs	r0, #2
 801ae10:	2101      	movs	r1, #1
 801ae12:	f8c3 8010 	str.w	r8, [r3, #16]
 801ae16:	6298      	str	r0, [r3, #40]	@ 0x28
 801ae18:	f8ce 1000 	str.w	r1, [lr]
 801ae1c:	e751      	b.n	801acc2 <cubic_decasteljau+0x15e>
 801ae1e:	46a0      	mov	r8, r4
 801ae20:	4640      	mov	r0, r8
 801ae22:	b009      	add	sp, #36	@ 0x24
 801ae24:	ecbd 8b0a 	vpop	{d8-d12}
 801ae28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae2c:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801ae30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae34:	f73f aed1 	bgt.w	801abda <cubic_decasteljau+0x76>
 801ae38:	eeb4 aac6 	vcmpe.f32	s20, s12
 801ae3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae40:	f53f aecb 	bmi.w	801abda <cubic_decasteljau+0x76>
 801ae44:	eeb4 9ac6 	vcmpe.f32	s18, s12
 801ae48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae4c:	f53f aec5 	bmi.w	801abda <cubic_decasteljau+0x76>
 801ae50:	eef4 aae6 	vcmpe.f32	s21, s13
 801ae54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae58:	f73f aebf 	bgt.w	801abda <cubic_decasteljau+0x76>
 801ae5c:	eef4 9ae6 	vcmpe.f32	s19, s13
 801ae60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae64:	f73f aeb9 	bgt.w	801abda <cubic_decasteljau+0x76>
 801ae68:	eef4 aac6 	vcmpe.f32	s21, s12
 801ae6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae70:	f53f aeb3 	bmi.w	801abda <cubic_decasteljau+0x76>
 801ae74:	eef4 9ac6 	vcmpe.f32	s19, s12
 801ae78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae7c:	f53f aead 	bmi.w	801abda <cubic_decasteljau+0x76>
 801ae80:	eef4 bae6 	vcmpe.f32	s23, s13
 801ae84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae88:	f73f aea7 	bgt.w	801abda <cubic_decasteljau+0x76>
 801ae8c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801ae90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae94:	f73f aea1 	bgt.w	801abda <cubic_decasteljau+0x76>
 801ae98:	eef4 bac6 	vcmpe.f32	s23, s12
 801ae9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aea0:	f53f ae9b 	bmi.w	801abda <cubic_decasteljau+0x76>
 801aea4:	eeb4 cac6 	vcmpe.f32	s24, s12
 801aea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aeac:	bf54      	ite	pl
 801aeae:	2301      	movpl	r3, #1
 801aeb0:	2300      	movmi	r3, #0
 801aeb2:	e693      	b.n	801abdc <cubic_decasteljau+0x78>
 801aeb4:	f001 fde6 	bl	801ca84 <nema_vg_set_error>
 801aeb8:	4640      	mov	r0, r8
 801aeba:	b009      	add	sp, #36	@ 0x24
 801aebc:	ecbd 8b0a 	vpop	{d8-d12}
 801aec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aec4:	20000140 	.word	0x20000140
 801aec8:	20000144 	.word	0x20000144
 801aecc:	42480000 	.word	0x42480000
 801aed0:	20083298 	.word	0x20083298
 801aed4:	20083154 	.word	0x20083154
 801aed8:	200831a8 	.word	0x200831a8
 801aedc:	2008314c 	.word	0x2008314c

0801aee0 <arc_to_cubic>:
 801aee0:	b530      	push	{r4, r5, lr}
 801aee2:	ed2d 8b0e 	vpush	{d8-d14}
 801aee6:	eddf 8ab7 	vldr	s17, [pc, #732]	@ 801b1c4 <arc_to_cubic+0x2e4>
 801aeea:	ee60 9a28 	vmul.f32	s19, s0, s17
 801aeee:	ee60 8aa8 	vmul.f32	s17, s1, s17
 801aef2:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 801aef6:	ee78 8ae9 	vsub.f32	s17, s17, s19
 801aefa:	b093      	sub	sp, #76	@ 0x4c
 801aefc:	ee28 0a80 	vmul.f32	s0, s17, s0
 801af00:	4604      	mov	r4, r0
 801af02:	460d      	mov	r5, r1
 801af04:	eef0 ba41 	vmov.f32	s23, s2
 801af08:	eeb0 ca61 	vmov.f32	s24, s3
 801af0c:	eef0 ca42 	vmov.f32	s25, s4
 801af10:	eeb0 da62 	vmov.f32	s26, s5
 801af14:	ed9f 8aac 	vldr	s16, [pc, #688]	@ 801b1c8 <arc_to_cubic+0x2e8>
 801af18:	f016 fb16 	bl	8031548 <tanf>
 801af1c:	ee20 8a08 	vmul.f32	s16, s0, s16
 801af20:	eeb0 0a68 	vmov.f32	s0, s17
 801af24:	f016 fa7e 	bl	8031424 <cosf>
 801af28:	eeb0 9a40 	vmov.f32	s18, s0
 801af2c:	eeb0 0a68 	vmov.f32	s0, s17
 801af30:	f016 fac4 	bl	80314bc <sinf>
 801af34:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 801af38:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801b1cc <arc_to_cubic+0x2ec>
 801af3c:	ee87 ea27 	vdiv.f32	s28, s14, s15
 801af40:	eddf 7aa3 	vldr	s15, [pc, #652]	@ 801b1d0 <arc_to_cubic+0x2f0>
 801af44:	eeb0 ba40 	vmov.f32	s22, s0
 801af48:	ee68 8a00 	vmul.f32	s17, s16, s0
 801af4c:	eeb0 0a69 	vmov.f32	s0, s19
 801af50:	ee2e ea27 	vmul.f32	s28, s28, s15
 801af54:	f016 fa66 	bl	8031424 <cosf>
 801af58:	eef0 aa40 	vmov.f32	s21, s0
 801af5c:	eeb0 0a69 	vmov.f32	s0, s19
 801af60:	f016 faac 	bl	80314bc <sinf>
 801af64:	eeb0 aa40 	vmov.f32	s20, s0
 801af68:	eeb0 0a4e 	vmov.f32	s0, s28
 801af6c:	f016 fa5a 	bl	8031424 <cosf>
 801af70:	ee68 da09 	vmul.f32	s27, s16, s18
 801af74:	eef0 9a40 	vmov.f32	s19, s0
 801af78:	eeb0 0a4e 	vmov.f32	s0, s28
 801af7c:	f016 fa9e 	bl	80314bc <sinf>
 801af80:	4b94      	ldr	r3, [pc, #592]	@ (801b1d4 <arc_to_cubic+0x2f4>)
 801af82:	07e9      	lsls	r1, r5, #31
 801af84:	ee78 8a89 	vadd.f32	s17, s17, s18
 801af88:	ee7b da6d 	vsub.f32	s27, s22, s27
 801af8c:	781b      	ldrb	r3, [r3, #0]
 801af8e:	f140 80a8 	bpl.w	801b0e2 <arc_to_cubic+0x202>
 801af92:	ed94 7a03 	vldr	s14, [r4, #12]
 801af96:	edd4 0a04 	vldr	s1, [r4, #16]
 801af9a:	ee6d 6a8a 	vmul.f32	s13, s27, s20
 801af9e:	ee68 1a0a 	vmul.f32	s3, s16, s20
 801afa2:	ee68 7aaa 	vmul.f32	s15, s17, s21
 801afa6:	ee28 8a2a 	vmul.f32	s16, s16, s21
 801afaa:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801afae:	ee6d daaa 	vmul.f32	s27, s27, s21
 801afb2:	eddf 2a89 	vldr	s5, [pc, #548]	@ 801b1d8 <arc_to_cubic+0x2f8>
 801afb6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801afba:	ee7a 1ae1 	vsub.f32	s3, s21, s3
 801afbe:	ee38 8a0a 	vadd.f32	s16, s16, s20
 801afc2:	ee78 8aad 	vadd.f32	s17, s17, s27
 801afc6:	ee71 1aa2 	vadd.f32	s3, s3, s5
 801afca:	ee38 8a22 	vadd.f32	s16, s16, s5
 801afce:	ee77 7aa2 	vadd.f32	s15, s15, s5
 801afd2:	ee78 8aa2 	vadd.f32	s17, s17, s5
 801afd6:	ee61 1aac 	vmul.f32	s3, s3, s25
 801afda:	ee28 8a0d 	vmul.f32	s16, s16, s26
 801afde:	ee67 7aac 	vmul.f32	s15, s15, s25
 801afe2:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801afe6:	ee29 1aa1 	vmul.f32	s2, s19, s3
 801afea:	ee20 6a08 	vmul.f32	s12, s0, s16
 801afee:	ee29 2aa7 	vmul.f32	s4, s19, s15
 801aff2:	ee60 6a28 	vmul.f32	s13, s0, s17
 801aff6:	ee60 1a21 	vmul.f32	s3, s0, s3
 801affa:	ee29 8a88 	vmul.f32	s16, s19, s16
 801affe:	ee60 7a27 	vmul.f32	s15, s0, s15
 801b002:	ee69 8aa8 	vmul.f32	s17, s19, s17
 801b006:	ee31 1a46 	vsub.f32	s2, s2, s12
 801b00a:	ee31 8a88 	vadd.f32	s16, s3, s16
 801b00e:	ee32 2a66 	vsub.f32	s4, s4, s13
 801b012:	ee77 8aa8 	vadd.f32	s17, s15, s17
 801b016:	07aa      	lsls	r2, r5, #30
 801b018:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801b01c:	ee38 8a0c 	vadd.f32	s16, s16, s24
 801b020:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801b024:	ee78 8a8c 	vadd.f32	s17, s17, s24
 801b028:	d517      	bpl.n	801b05a <arc_to_cubic+0x17a>
 801b02a:	ed94 3a05 	vldr	s6, [r4, #20]
 801b02e:	edd4 3a06 	vldr	s7, [r4, #24]
 801b032:	2b00      	cmp	r3, #0
 801b034:	f040 8098 	bne.w	801b168 <arc_to_cubic+0x288>
 801b038:	eef0 2a68 	vmov.f32	s5, s17
 801b03c:	eef0 1a48 	vmov.f32	s3, s16
 801b040:	eeb0 0a47 	vmov.f32	s0, s14
 801b044:	f7ff fd8e 	bl	801ab64 <cubic_decasteljau>
 801b048:	4604      	mov	r4, r0
 801b04a:	b108      	cbz	r0, 801b050 <arc_to_cubic+0x170>
 801b04c:	f001 fd1a 	bl	801ca84 <nema_vg_set_error>
 801b050:	4620      	mov	r0, r4
 801b052:	b013      	add	sp, #76	@ 0x4c
 801b054:	ecbd 8b0e 	vpop	{d8-d14}
 801b058:	bd30      	pop	{r4, r5, pc}
 801b05a:	ee69 6a2a 	vmul.f32	s13, s18, s21
 801b05e:	ee29 9a0a 	vmul.f32	s18, s18, s20
 801b062:	ee6b aa2a 	vmul.f32	s21, s22, s21
 801b066:	ee2b aa0a 	vmul.f32	s20, s22, s20
 801b06a:	ee79 aa2a 	vadd.f32	s21, s18, s21
 801b06e:	ee36 aaca 	vsub.f32	s20, s13, s20
 801b072:	ee3a aa22 	vadd.f32	s20, s20, s5
 801b076:	ee7a 2aa2 	vadd.f32	s5, s21, s5
 801b07a:	ee6a ca2c 	vmul.f32	s25, s20, s25
 801b07e:	ee22 da8d 	vmul.f32	s26, s5, s26
 801b082:	ee29 3aac 	vmul.f32	s6, s19, s25
 801b086:	ee69 3a8d 	vmul.f32	s7, s19, s26
 801b08a:	ee60 ca2c 	vmul.f32	s25, s0, s25
 801b08e:	ee20 0a0d 	vmul.f32	s0, s0, s26
 801b092:	ee7c 3aa3 	vadd.f32	s7, s25, s7
 801b096:	ee33 0a40 	vsub.f32	s0, s6, s0
 801b09a:	ee73 3a8c 	vadd.f32	s7, s7, s24
 801b09e:	ee30 3a2b 	vadd.f32	s6, s0, s23
 801b0a2:	2b00      	cmp	r3, #0
 801b0a4:	d0c8      	beq.n	801b038 <arc_to_cubic+0x158>
 801b0a6:	4b4d      	ldr	r3, [pc, #308]	@ (801b1dc <arc_to_cubic+0x2fc>)
 801b0a8:	ed93 6a00 	vldr	s12, [r3]
 801b0ac:	edd3 5a01 	vldr	s11, [r3, #4]
 801b0b0:	edd3 6a03 	vldr	s13, [r3, #12]
 801b0b4:	edd3 2a04 	vldr	s5, [r3, #16]
 801b0b8:	ee23 5aa5 	vmul.f32	s10, s7, s11
 801b0bc:	ee63 ba26 	vmul.f32	s23, s6, s13
 801b0c0:	ee23 0a06 	vmul.f32	s0, s6, s12
 801b0c4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 801b0c8:	ee30 3a05 	vadd.f32	s6, s0, s10
 801b0cc:	ed93 4a02 	vldr	s8, [r3, #8]
 801b0d0:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 801b0d4:	edd3 4a05 	vldr	s9, [r3, #20]
 801b0d8:	ee33 3a04 	vadd.f32	s6, s6, s8
 801b0dc:	ee73 3aa4 	vadd.f32	s7, s7, s9
 801b0e0:	e04f      	b.n	801b182 <arc_to_cubic+0x2a2>
 801b0e2:	eddf 0a3d 	vldr	s1, [pc, #244]	@ 801b1d8 <arc_to_cubic+0x2f8>
 801b0e6:	ee6a 7a20 	vmul.f32	s15, s20, s1
 801b0ea:	ee6a 6aa0 	vmul.f32	s13, s21, s1
 801b0ee:	ee7a 7ae7 	vsub.f32	s15, s21, s15
 801b0f2:	ee76 6a8a 	vadd.f32	s13, s13, s20
 801b0f6:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801b0fa:	ee76 6aa0 	vadd.f32	s13, s13, s1
 801b0fe:	ee67 7aac 	vmul.f32	s15, s15, s25
 801b102:	ee66 6a8d 	vmul.f32	s13, s13, s26
 801b106:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b10a:	ee60 0a27 	vmul.f32	s1, s0, s15
 801b10e:	ee60 7a26 	vmul.f32	s15, s0, s13
 801b112:	ee69 6aa6 	vmul.f32	s13, s19, s13
 801b116:	ee37 7a67 	vsub.f32	s14, s14, s15
 801b11a:	ee70 0aa6 	vadd.f32	s1, s1, s13
 801b11e:	ee37 7a2b 	vadd.f32	s14, s14, s23
 801b122:	ee70 0a8c 	vadd.f32	s1, s1, s24
 801b126:	2b00      	cmp	r3, #0
 801b128:	f43f af37 	beq.w	801af9a <arc_to_cubic+0xba>
 801b12c:	4a2b      	ldr	r2, [pc, #172]	@ (801b1dc <arc_to_cubic+0x2fc>)
 801b12e:	edd2 6a00 	vldr	s13, [r2]
 801b132:	edd2 5a01 	vldr	s11, [r2, #4]
 801b136:	edd2 7a03 	vldr	s15, [r2, #12]
 801b13a:	ed92 6a04 	vldr	s12, [r2, #16]
 801b13e:	ee67 7a27 	vmul.f32	s15, s14, s15
 801b142:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b146:	ee60 5aa5 	vmul.f32	s11, s1, s11
 801b14a:	ee60 0a86 	vmul.f32	s1, s1, s12
 801b14e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801b152:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801b156:	ed92 7a02 	vldr	s14, [r2, #8]
 801b15a:	edd2 7a05 	vldr	s15, [r2, #20]
 801b15e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b162:	ee70 0aa7 	vadd.f32	s1, s1, s15
 801b166:	e718      	b.n	801af9a <arc_to_cubic+0xba>
 801b168:	4b1c      	ldr	r3, [pc, #112]	@ (801b1dc <arc_to_cubic+0x2fc>)
 801b16a:	ed93 6a00 	vldr	s12, [r3]
 801b16e:	edd3 5a01 	vldr	s11, [r3, #4]
 801b172:	ed93 4a02 	vldr	s8, [r3, #8]
 801b176:	edd3 6a03 	vldr	s13, [r3, #12]
 801b17a:	edd3 2a04 	vldr	s5, [r3, #16]
 801b17e:	edd3 4a05 	vldr	s9, [r3, #20]
 801b182:	ee21 5a06 	vmul.f32	s10, s2, s12
 801b186:	ee65 1a88 	vmul.f32	s3, s11, s16
 801b18a:	ee21 1a26 	vmul.f32	s2, s2, s13
 801b18e:	ee22 6a06 	vmul.f32	s12, s4, s12
 801b192:	ee62 6a26 	vmul.f32	s13, s4, s13
 801b196:	ee68 7aa2 	vmul.f32	s15, s17, s5
 801b19a:	ee25 2aa8 	vmul.f32	s4, s11, s17
 801b19e:	ee28 8a22 	vmul.f32	s16, s16, s5
 801b1a2:	ee75 5a21 	vadd.f32	s11, s10, s3
 801b1a6:	ee31 8a08 	vadd.f32	s16, s2, s16
 801b1aa:	ee36 2a02 	vadd.f32	s4, s12, s4
 801b1ae:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b1b2:	ee35 1a84 	vadd.f32	s2, s11, s8
 801b1b6:	ee38 8a24 	vadd.f32	s16, s16, s9
 801b1ba:	ee32 2a04 	vadd.f32	s4, s4, s8
 801b1be:	ee77 8aa4 	vadd.f32	s17, s15, s9
 801b1c2:	e739      	b.n	801b038 <arc_to_cubic+0x158>
 801b1c4:	3c8efa35 	.word	0x3c8efa35
 801b1c8:	3faaaaab 	.word	0x3faaaaab
 801b1cc:	43340000 	.word	0x43340000
 801b1d0:	40490fdb 	.word	0x40490fdb
 801b1d4:	20083180 	.word	0x20083180
 801b1d8:	00000000 	.word	0x00000000
 801b1dc:	20083184 	.word	0x20083184

0801b1e0 <calc_new_geometry>:
 801b1e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1e4:	ed2d 8b10 	vpush	{d8-d15}
 801b1e8:	b0a1      	sub	sp, #132	@ 0x84
 801b1ea:	4682      	mov	sl, r0
 801b1ec:	2248      	movs	r2, #72	@ 0x48
 801b1ee:	a80e      	add	r0, sp, #56	@ 0x38
 801b1f0:	2100      	movs	r1, #0
 801b1f2:	f017 fb90 	bl	8032916 <memset>
 801b1f6:	2201      	movs	r2, #1
 801b1f8:	2300      	movs	r3, #0
 801b1fa:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b1fe:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
 801b202:	f8da 2000 	ldr.w	r2, [sl]
 801b206:	ed9f ba80 	vldr	s22, [pc, #512]	@ 801b408 <calc_new_geometry+0x228>
 801b20a:	429a      	cmp	r2, r3
 801b20c:	ed9f aa7f 	vldr	s20, [pc, #508]	@ 801b40c <calc_new_geometry+0x22c>
 801b210:	eddf aa7f 	vldr	s21, [pc, #508]	@ 801b410 <calc_new_geometry+0x230>
 801b214:	eddf 9a7f 	vldr	s19, [pc, #508]	@ 801b414 <calc_new_geometry+0x234>
 801b218:	ed9f 9a7f 	vldr	s18, [pc, #508]	@ 801b418 <calc_new_geometry+0x238>
 801b21c:	f240 80e7 	bls.w	801b3ee <calc_new_geometry+0x20e>
 801b220:	2200      	movs	r2, #0
 801b222:	f8da 1008 	ldr.w	r1, [sl, #8]
 801b226:	f8df b1f8 	ldr.w	fp, [pc, #504]	@ 801b420 <calc_new_geometry+0x240>
 801b22a:	5ccc      	ldrb	r4, [r1, r3]
 801b22c:	af13      	add	r7, sp, #76	@ 0x4c
 801b22e:	f004 066f 	and.w	r6, r4, #111	@ 0x6f
 801b232:	ad11      	add	r5, sp, #68	@ 0x44
 801b234:	3301      	adds	r3, #1
 801b236:	2e01      	cmp	r6, #1
 801b238:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b23c:	9301      	str	r3, [sp, #4]
 801b23e:	f004 0910 	and.w	r9, r4, #16
 801b242:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
 801b246:	e885 0003 	stmia.w	r5, {r0, r1}
 801b24a:	f000 8244 	beq.w	801b6d6 <calc_new_geometry+0x4f6>
 801b24e:	0663      	lsls	r3, r4, #25
 801b250:	f000 8229 	beq.w	801b6a6 <calc_new_geometry+0x4c6>
 801b254:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b256:	f89d e07c 	ldrb.w	lr, [sp, #124]	@ 0x7c
 801b25a:	bb63      	cbnz	r3, 801b2b6 <calc_new_geometry+0xd6>
 801b25c:	2201      	movs	r2, #1
 801b25e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b424 <calc_new_geometry+0x244>
 801b262:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b266:	f898 2000 	ldrb.w	r2, [r8]
 801b26a:	b322      	cbz	r2, 801b2b6 <calc_new_geometry+0xd6>
 801b26c:	4a6b      	ldr	r2, [pc, #428]	@ (801b41c <calc_new_geometry+0x23c>)
 801b26e:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801b272:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801b276:	ed92 6a03 	vldr	s12, [r2, #12]
 801b27a:	edd2 6a04 	vldr	s13, [r2, #16]
 801b27e:	ed92 5a00 	vldr	s10, [r2]
 801b282:	edd2 5a01 	vldr	s11, [r2, #4]
 801b286:	ee27 5a05 	vmul.f32	s10, s14, s10
 801b28a:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801b28e:	ee27 7a06 	vmul.f32	s14, s14, s12
 801b292:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b296:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b29a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b29e:	edd2 6a02 	vldr	s13, [r2, #8]
 801b2a2:	edd2 7a05 	vldr	s15, [r2, #20]
 801b2a6:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b2aa:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b2ae:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b2b2:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801b2b6:	f04f 0800 	mov.w	r8, #0
 801b2ba:	f8da 200c 	ldr.w	r2, [sl, #12]
 801b2be:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b2c2:	eb02 010c 	add.w	r1, r2, ip
 801b2c6:	1c58      	adds	r0, r3, #1
 801b2c8:	2e06      	cmp	r6, #6
 801b2ca:	f88d 803a 	strb.w	r8, [sp, #58]	@ 0x3a
 801b2ce:	9103      	str	r1, [sp, #12]
 801b2d0:	4680      	mov	r8, r0
 801b2d2:	f000 833c 	beq.w	801b94e <calc_new_geometry+0x76e>
 801b2d6:	2e05      	cmp	r6, #5
 801b2d8:	f000 84a7 	beq.w	801bc2a <calc_new_geometry+0xa4a>
 801b2dc:	2e07      	cmp	r6, #7
 801b2de:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 801b2e2:	f000 84f2 	beq.w	801bcca <calc_new_geometry+0xaea>
 801b2e6:	2e08      	cmp	r6, #8
 801b2e8:	f000 8727 	beq.w	801c13a <calc_new_geometry+0xf5a>
 801b2ec:	f004 000f 	and.w	r0, r4, #15
 801b2f0:	2809      	cmp	r0, #9
 801b2f2:	9002      	str	r0, [sp, #8]
 801b2f4:	f000 86d7 	beq.w	801c0a6 <calc_new_geometry+0xec6>
 801b2f8:	2e04      	cmp	r6, #4
 801b2fa:	f040 83bc 	bne.w	801ba76 <calc_new_geometry+0x896>
 801b2fe:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b302:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b306:	9b03      	ldr	r3, [sp, #12]
 801b308:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801b30c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b310:	ed93 7a00 	vldr	s14, [r3]
 801b314:	f1b9 0f00 	cmp.w	r9, #0
 801b318:	f000 84d1 	beq.w	801bcbe <calc_new_geometry+0xade>
 801b31c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b320:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b324:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b328:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 801b424 <calc_new_geometry+0x244>
 801b32c:	f898 3000 	ldrb.w	r3, [r8]
 801b330:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b334:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b338:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801b33c:	b303      	cbz	r3, 801b380 <calc_new_geometry+0x1a0>
 801b33e:	4b37      	ldr	r3, [pc, #220]	@ (801b41c <calc_new_geometry+0x23c>)
 801b340:	ed93 6a03 	vldr	s12, [r3, #12]
 801b344:	edd3 6a04 	vldr	s13, [r3, #16]
 801b348:	ed93 5a00 	vldr	s10, [r3]
 801b34c:	edd3 5a01 	vldr	s11, [r3, #4]
 801b350:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b354:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b358:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b35c:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b360:	ee75 5a25 	vadd.f32	s11, s10, s11
 801b364:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b368:	ed93 6a02 	vldr	s12, [r3, #8]
 801b36c:	edd3 6a05 	vldr	s13, [r3, #20]
 801b370:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b374:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b378:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801b37c:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b380:	2a01      	cmp	r2, #1
 801b382:	f000 826c 	beq.w	801b85e <calc_new_geometry+0x67e>
 801b386:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801b38a:	2b05      	cmp	r3, #5
 801b38c:	d04c      	beq.n	801b428 <calc_new_geometry+0x248>
 801b38e:	2e06      	cmp	r6, #6
 801b390:	f000 81d7 	beq.w	801b742 <calc_new_geometry+0x562>
 801b394:	2e08      	cmp	r6, #8
 801b396:	f000 81d4 	beq.w	801b742 <calc_new_geometry+0x562>
 801b39a:	f004 030f 	and.w	r3, r4, #15
 801b39e:	9302      	str	r3, [sp, #8]
 801b3a0:	9b02      	ldr	r3, [sp, #8]
 801b3a2:	2b09      	cmp	r3, #9
 801b3a4:	f000 83fd 	beq.w	801bba2 <calc_new_geometry+0x9c2>
 801b3a8:	f1a6 030a 	sub.w	r3, r6, #10
 801b3ac:	2b01      	cmp	r3, #1
 801b3ae:	d918      	bls.n	801b3e2 <calc_new_geometry+0x202>
 801b3b0:	1eb3      	subs	r3, r6, #2
 801b3b2:	2b02      	cmp	r3, #2
 801b3b4:	f240 82bc 	bls.w	801b930 <calc_new_geometry+0x750>
 801b3b8:	2e01      	cmp	r6, #1
 801b3ba:	f000 86f4 	beq.w	801c1a6 <calc_new_geometry+0xfc6>
 801b3be:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801b3c2:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b3c6:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b3ca:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b3ce:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b3d2:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b3d6:	f7fd ffa1 	bl	801931c <calc_line_geometry>
 801b3da:	4601      	mov	r1, r0
 801b3dc:	2800      	cmp	r0, #0
 801b3de:	f040 81c6 	bne.w	801b76e <calc_new_geometry+0x58e>
 801b3e2:	9b01      	ldr	r3, [sp, #4]
 801b3e4:	f8da 2000 	ldr.w	r2, [sl]
 801b3e8:	429a      	cmp	r2, r3
 801b3ea:	f63f af19 	bhi.w	801b220 <calc_new_geometry+0x40>
 801b3ee:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
 801b3f2:	2b01      	cmp	r3, #1
 801b3f4:	f000 8720 	beq.w	801c238 <calc_new_geometry+0x1058>
 801b3f8:	2100      	movs	r1, #0
 801b3fa:	4608      	mov	r0, r1
 801b3fc:	b021      	add	sp, #132	@ 0x84
 801b3fe:	ecbd 8b10 	vpop	{d8-d15}
 801b402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b406:	bf00      	nop
 801b408:	3c8efa35 	.word	0x3c8efa35
 801b40c:	42652ee1 	.word	0x42652ee1
 801b410:	43340000 	.word	0x43340000
 801b414:	42b40000 	.word	0x42b40000
 801b418:	00000000 	.word	0x00000000
 801b41c:	20083184 	.word	0x20083184
 801b420:	20083154 	.word	0x20083154
 801b424:	20083180 	.word	0x20083180
 801b428:	f8df 836c 	ldr.w	r8, [pc, #876]	@ 801b798 <calc_new_geometry+0x5b8>
 801b42c:	4ed5      	ldr	r6, [pc, #852]	@ (801b784 <calc_new_geometry+0x5a4>)
 801b42e:	edd8 6a00 	vldr	s13, [r8]
 801b432:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b436:	ed96 6a00 	vldr	s12, [r6]
 801b43a:	ed9d 8a11 	vldr	s16, [sp, #68]	@ 0x44
 801b43e:	eddd 8a12 	vldr	s17, [sp, #72]	@ 0x48
 801b442:	eddd ba15 	vldr	s23, [sp, #84]	@ 0x54
 801b446:	ed9d ca16 	vldr	s24, [sp, #88]	@ 0x58
 801b44a:	eddd ca13 	vldr	s25, [sp, #76]	@ 0x4c
 801b44e:	ed9d da14 	vldr	s26, [sp, #80]	@ 0x50
 801b452:	2401      	movs	r4, #1
 801b454:	eddf dacc 	vldr	s27, [pc, #816]	@ 801b788 <calc_new_geometry+0x5a8>
 801b458:	aa0a      	add	r2, sp, #40	@ 0x28
 801b45a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b45c:	e882 0003 	stmia.w	r2, {r0, r1}
 801b460:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b464:	e883 0003 	stmia.w	r3, {r0, r1}
 801b468:	4dc8      	ldr	r5, [pc, #800]	@ (801b78c <calc_new_geometry+0x5ac>)
 801b46a:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801b46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b472:	dc23      	bgt.n	801b4bc <calc_new_geometry+0x2dc>
 801b474:	eef4 8ae6 	vcmpe.f32	s17, s13
 801b478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b47c:	dc1e      	bgt.n	801b4bc <calc_new_geometry+0x2dc>
 801b47e:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801b482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b486:	d419      	bmi.n	801b4bc <calc_new_geometry+0x2dc>
 801b488:	eef4 8ac6 	vcmpe.f32	s17, s12
 801b48c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b490:	d414      	bmi.n	801b4bc <calc_new_geometry+0x2dc>
 801b492:	eef4 bae6 	vcmpe.f32	s23, s13
 801b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b49a:	dc0f      	bgt.n	801b4bc <calc_new_geometry+0x2dc>
 801b49c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801b4a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4a4:	dc0a      	bgt.n	801b4bc <calc_new_geometry+0x2dc>
 801b4a6:	eef4 bac6 	vcmpe.f32	s23, s12
 801b4aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ae:	d405      	bmi.n	801b4bc <calc_new_geometry+0x2dc>
 801b4b0:	eeb4 cac6 	vcmpe.f32	s24, s12
 801b4b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4b8:	f140 845c 	bpl.w	801bd74 <calc_new_geometry+0xb94>
 801b4bc:	2200      	movs	r2, #0
 801b4be:	ee76 7a2d 	vadd.f32	s15, s12, s27
 801b4c2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801b4c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ca:	ee36 7aed 	vsub.f32	s14, s13, s27
 801b4ce:	d509      	bpl.n	801b4e4 <calc_new_geometry+0x304>
 801b4d0:	eef4 bae7 	vcmpe.f32	s23, s15
 801b4d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4d8:	d504      	bpl.n	801b4e4 <calc_new_geometry+0x304>
 801b4da:	eef4 cae7 	vcmpe.f32	s25, s15
 801b4de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4e2:	d463      	bmi.n	801b5ac <calc_new_geometry+0x3cc>
 801b4e4:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801b4e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ec:	dd09      	ble.n	801b502 <calc_new_geometry+0x322>
 801b4ee:	eef4 bac7 	vcmpe.f32	s23, s14
 801b4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4f6:	dd04      	ble.n	801b502 <calc_new_geometry+0x322>
 801b4f8:	eef4 cac7 	vcmpe.f32	s25, s14
 801b4fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b500:	dc54      	bgt.n	801b5ac <calc_new_geometry+0x3cc>
 801b502:	eef4 8ae7 	vcmpe.f32	s17, s15
 801b506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b50a:	d509      	bpl.n	801b520 <calc_new_geometry+0x340>
 801b50c:	eeb4 cae7 	vcmpe.f32	s24, s15
 801b510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b514:	d504      	bpl.n	801b520 <calc_new_geometry+0x340>
 801b516:	eeb4 dae7 	vcmpe.f32	s26, s15
 801b51a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b51e:	d445      	bmi.n	801b5ac <calc_new_geometry+0x3cc>
 801b520:	eef4 8ac7 	vcmpe.f32	s17, s14
 801b524:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b528:	dd09      	ble.n	801b53e <calc_new_geometry+0x35e>
 801b52a:	eeb4 cac7 	vcmpe.f32	s24, s14
 801b52e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b532:	dd04      	ble.n	801b53e <calc_new_geometry+0x35e>
 801b534:	eeb4 dac7 	vcmpe.f32	s26, s14
 801b538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b53c:	dc36      	bgt.n	801b5ac <calc_new_geometry+0x3cc>
 801b53e:	682b      	ldr	r3, [r5, #0]
 801b540:	2a00      	cmp	r2, #0
 801b542:	d073      	beq.n	801b62c <calc_new_geometry+0x44c>
 801b544:	e9db 2104 	ldrd	r2, r1, [fp, #16]
 801b548:	4891      	ldr	r0, [pc, #580]	@ (801b790 <calc_new_geometry+0x5b0>)
 801b54a:	3c01      	subs	r4, #1
 801b54c:	6807      	ldr	r7, [r0, #0]
 801b54e:	f101 0c01 	add.w	ip, r1, #1
 801b552:	f102 0904 	add.w	r9, r2, #4
 801b556:	2f00      	cmp	r7, #0
 801b558:	d152      	bne.n	801b600 <calc_new_geometry+0x420>
 801b55a:	f8db 7000 	ldr.w	r7, [fp]
 801b55e:	428f      	cmp	r7, r1
 801b560:	d83d      	bhi.n	801b5de <calc_new_geometry+0x3fe>
 801b562:	2102      	movs	r1, #2
 801b564:	2201      	movs	r2, #1
 801b566:	f8cb c014 	str.w	ip, [fp, #20]
 801b56a:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b56e:	6002      	str	r2, [r0, #0]
 801b570:	f8cb 9010 	str.w	r9, [fp, #16]
 801b574:	b193      	cbz	r3, 801b59c <calc_new_geometry+0x3bc>
 801b576:	3b01      	subs	r3, #1
 801b578:	4986      	ldr	r1, [pc, #536]	@ (801b794 <calc_new_geometry+0x5b4>)
 801b57a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b57e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b582:	ed92 8a00 	vldr	s16, [r2]
 801b586:	edd2 8a01 	vldr	s17, [r2, #4]
 801b58a:	edd2 ba02 	vldr	s23, [r2, #8]
 801b58e:	ed92 ca03 	vldr	s24, [r2, #12]
 801b592:	edd2 ca04 	vldr	s25, [r2, #16]
 801b596:	ed92 da05 	vldr	s26, [r2, #20]
 801b59a:	602b      	str	r3, [r5, #0]
 801b59c:	2c00      	cmp	r4, #0
 801b59e:	f43f af20 	beq.w	801b3e2 <calc_new_geometry+0x202>
 801b5a2:	edd8 6a00 	vldr	s13, [r8]
 801b5a6:	ed96 6a00 	vldr	s12, [r6]
 801b5aa:	e75e      	b.n	801b46a <calc_new_geometry+0x28a>
 801b5ac:	eeb0 1a6c 	vmov.f32	s2, s25
 801b5b0:	eef0 1a4d 	vmov.f32	s3, s26
 801b5b4:	eeb0 0a48 	vmov.f32	s0, s16
 801b5b8:	eef0 0a68 	vmov.f32	s1, s17
 801b5bc:	ed8d 8a0a 	vstr	s16, [sp, #40]	@ 0x28
 801b5c0:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 801b5c4:	edcd ca0c 	vstr	s25, [sp, #48]	@ 0x30
 801b5c8:	ed8d da0d 	vstr	s26, [sp, #52]	@ 0x34
 801b5cc:	f7fd fea6 	bl	801931c <calc_line_geometry>
 801b5d0:	4601      	mov	r1, r0
 801b5d2:	2800      	cmp	r0, #0
 801b5d4:	f040 819e 	bne.w	801b914 <calc_new_geometry+0x734>
 801b5d8:	3c01      	subs	r4, #1
 801b5da:	682b      	ldr	r3, [r5, #0]
 801b5dc:	e7ca      	b.n	801b574 <calc_new_geometry+0x394>
 801b5de:	f04f 0e05 	mov.w	lr, #5
 801b5e2:	f8cb c014 	str.w	ip, [fp, #20]
 801b5e6:	e9db 7c01 	ldrd	r7, ip, [fp, #4]
 801b5ea:	f807 e001 	strb.w	lr, [r7, r1]
 801b5ee:	1c51      	adds	r1, r2, #1
 801b5f0:	4561      	cmp	r1, ip
 801b5f2:	d308      	bcc.n	801b606 <calc_new_geometry+0x426>
 801b5f4:	2102      	movs	r1, #2
 801b5f6:	2201      	movs	r2, #1
 801b5f8:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b5fc:	6002      	str	r2, [r0, #0]
 801b5fe:	e7b7      	b.n	801b570 <calc_new_geometry+0x390>
 801b600:	f8cb c014 	str.w	ip, [fp, #20]
 801b604:	e7b4      	b.n	801b570 <calc_new_geometry+0x390>
 801b606:	f8db 100c 	ldr.w	r1, [fp, #12]
 801b60a:	f102 0e03 	add.w	lr, r2, #3
 801b60e:	45f4      	cmp	ip, lr
 801b610:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801b614:	edc2 ba00 	vstr	s23, [r2]
 801b618:	ed82 ca01 	vstr	s24, [r2, #4]
 801b61c:	d93b      	bls.n	801b696 <calc_new_geometry+0x4b6>
 801b61e:	edc2 ca02 	vstr	s25, [r2, #8]
 801b622:	f8cb 9010 	str.w	r9, [fp, #16]
 801b626:	ed82 da03 	vstr	s26, [r2, #12]
 801b62a:	e7a3      	b.n	801b574 <calc_new_geometry+0x394>
 801b62c:	2b09      	cmp	r3, #9
 801b62e:	dc89      	bgt.n	801b544 <calc_new_geometry+0x364>
 801b630:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801b634:	ee7b 7aac 	vadd.f32	s15, s23, s25
 801b638:	ee3c 5a0d 	vadd.f32	s10, s24, s26
 801b63c:	ee38 7a2b 	vadd.f32	s14, s16, s23
 801b640:	ee38 ca8c 	vadd.f32	s24, s17, s24
 801b644:	ee67 ba25 	vmul.f32	s23, s14, s11
 801b648:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801b64c:	ee25 5a25 	vmul.f32	s10, s10, s11
 801b650:	ee2c ca25 	vmul.f32	s24, s24, s11
 801b654:	ee7b 4aa7 	vadd.f32	s9, s23, s15
 801b658:	ee3c 7a05 	vadd.f32	s14, s24, s10
 801b65c:	ee64 4aa5 	vmul.f32	s9, s9, s11
 801b660:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b664:	494b      	ldr	r1, [pc, #300]	@ (801b794 <calc_new_geometry+0x5b4>)
 801b666:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b66a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b66e:	3301      	adds	r3, #1
 801b670:	edc2 ca04 	vstr	s25, [r2, #16]
 801b674:	ed82 da05 	vstr	s26, [r2, #20]
 801b678:	3401      	adds	r4, #1
 801b67a:	edc2 7a02 	vstr	s15, [r2, #8]
 801b67e:	edc2 4a00 	vstr	s9, [r2]
 801b682:	eef0 ca64 	vmov.f32	s25, s9
 801b686:	ed82 5a03 	vstr	s10, [r2, #12]
 801b68a:	edc2 5a01 	vstr	s11, [r2, #4]
 801b68e:	eeb0 da65 	vmov.f32	s26, s11
 801b692:	602b      	str	r3, [r5, #0]
 801b694:	e6e9      	b.n	801b46a <calc_new_geometry+0x28a>
 801b696:	2102      	movs	r1, #2
 801b698:	2201      	movs	r2, #1
 801b69a:	f8cb 9010 	str.w	r9, [fp, #16]
 801b69e:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b6a2:	6002      	str	r2, [r0, #0]
 801b6a4:	e766      	b.n	801b574 <calc_new_geometry+0x394>
 801b6a6:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b6aa:	2300      	movs	r3, #0
 801b6ac:	2a01      	cmp	r2, #1
 801b6ae:	bf19      	ittee	ne
 801b6b0:	eddd 7a1d 	vldrne	s15, [sp, #116]	@ 0x74
 801b6b4:	ed9d 7a1e 	vldrne	s14, [sp, #120]	@ 0x78
 801b6b8:	eeb0 7a49 	vmoveq.f32	s14, s18
 801b6bc:	eef0 7a49 	vmoveq.f32	s15, s18
 801b6c0:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b6c4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b6c8:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801b6cc:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b6d0:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 801b79c <calc_new_geometry+0x5bc>
 801b6d4:	e62a      	b.n	801b32c <calc_new_geometry+0x14c>
 801b6d6:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
 801b6da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b6dc:	2a01      	cmp	r2, #1
 801b6de:	f000 80d3 	beq.w	801b888 <calc_new_geometry+0x6a8>
 801b6e2:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 801b79c <calc_new_geometry+0x5bc>
 801b6e6:	f04f 0c01 	mov.w	ip, #1
 801b6ea:	f04f 0e00 	mov.w	lr, #0
 801b6ee:	009a      	lsls	r2, r3, #2
 801b6f0:	f8da 000c 	ldr.w	r0, [sl, #12]
 801b6f4:	1d11      	adds	r1, r2, #4
 801b6f6:	4401      	add	r1, r0
 801b6f8:	4402      	add	r2, r0
 801b6fa:	eb03 000c 	add.w	r0, r3, ip
 801b6fe:	9310      	str	r3, [sp, #64]	@ 0x40
 801b700:	f88d e038 	strb.w	lr, [sp, #56]	@ 0x38
 801b704:	f88d c03a 	strb.w	ip, [sp, #58]	@ 0x3a
 801b708:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b70a:	3302      	adds	r3, #2
 801b70c:	edd2 7a00 	vldr	s15, [r2]
 801b710:	f1b9 0f00 	cmp.w	r9, #0
 801b714:	f000 80b0 	beq.w	801b878 <calc_new_geometry+0x698>
 801b718:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801b71c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b720:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b724:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b726:	ed91 7a00 	vldr	s14, [r1]
 801b72a:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b72e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b732:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b736:	edcd 7a1d 	vstr	s15, [sp, #116]	@ 0x74
 801b73a:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 801b73e:	2200      	movs	r2, #0
 801b740:	e5f4      	b.n	801b32c <calc_new_geometry+0x14c>
 801b742:	ed9d 3a13 	vldr	s6, [sp, #76]	@ 0x4c
 801b746:	eddd 3a14 	vldr	s7, [sp, #80]	@ 0x50
 801b74a:	ed9d 2a17 	vldr	s4, [sp, #92]	@ 0x5c
 801b74e:	eddd 2a18 	vldr	s5, [sp, #96]	@ 0x60
 801b752:	ed9d 1a15 	vldr	s2, [sp, #84]	@ 0x54
 801b756:	eddd 1a16 	vldr	s3, [sp, #88]	@ 0x58
 801b75a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b75e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b762:	f7ff f9ff 	bl	801ab64 <cubic_decasteljau>
 801b766:	4601      	mov	r1, r0
 801b768:	2800      	cmp	r0, #0
 801b76a:	f43f ae3a 	beq.w	801b3e2 <calc_new_geometry+0x202>
 801b76e:	9101      	str	r1, [sp, #4]
 801b770:	f001 f988 	bl	801ca84 <nema_vg_set_error>
 801b774:	9901      	ldr	r1, [sp, #4]
 801b776:	4608      	mov	r0, r1
 801b778:	b021      	add	sp, #132	@ 0x84
 801b77a:	ecbd 8b10 	vpop	{d8-d15}
 801b77e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b782:	bf00      	nop
 801b784:	20000144 	.word	0x20000144
 801b788:	42480000 	.word	0x42480000
 801b78c:	20083298 	.word	0x20083298
 801b790:	2008314c 	.word	0x2008314c
 801b794:	200831a8 	.word	0x200831a8
 801b798:	20000140 	.word	0x20000140
 801b79c:	20083180 	.word	0x20083180
 801b7a0:	9e05      	ldr	r6, [sp, #20]
 801b7a2:	eddd 7a1d 	vldr	s15, [sp, #116]	@ 0x74
 801b7a6:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801b7aa:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801b7ae:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b7b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b7b6:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 801b7ba:	d108      	bne.n	801b7ce <calc_new_geometry+0x5ee>
 801b7bc:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b7c0:	ee76 6ac7 	vsub.f32	s13, s13, s14
 801b7c4:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b7c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b7cc:	d03f      	beq.n	801b84e <calc_new_geometry+0x66e>
 801b7ce:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b7d2:	f8df 82ec 	ldr.w	r8, [pc, #748]	@ 801bac0 <calc_new_geometry+0x8e0>
 801b7d6:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b7da:	f898 3000 	ldrb.w	r3, [r8]
 801b7de:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b7e2:	e885 0003 	stmia.w	r5, {r0, r1}
 801b7e6:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b7ea:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b7ee:	b303      	cbz	r3, 801b832 <calc_new_geometry+0x652>
 801b7f0:	4bb2      	ldr	r3, [pc, #712]	@ (801babc <calc_new_geometry+0x8dc>)
 801b7f2:	ed93 6a03 	vldr	s12, [r3, #12]
 801b7f6:	edd3 6a04 	vldr	s13, [r3, #16]
 801b7fa:	ed93 5a00 	vldr	s10, [r3]
 801b7fe:	edd3 5a01 	vldr	s11, [r3, #4]
 801b802:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b806:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b80a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b80e:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b812:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b816:	ee37 7a87 	vadd.f32	s14, s15, s14
 801b81a:	edd3 6a02 	vldr	s13, [r3, #8]
 801b81e:	edd3 7a05 	vldr	s15, [r3, #20]
 801b822:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b826:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b82a:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801b82e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b832:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b836:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b83a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b83e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b842:	f7fd fd6b 	bl	801931c <calc_line_geometry>
 801b846:	4601      	mov	r1, r0
 801b848:	2800      	cmp	r0, #0
 801b84a:	f040 8425 	bne.w	801c098 <calc_new_geometry+0xeb8>
 801b84e:	2300      	movs	r3, #0
 801b850:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b854:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b858:	2b01      	cmp	r3, #1
 801b85a:	f47f ada1 	bne.w	801b3a0 <calc_new_geometry+0x1c0>
 801b85e:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b862:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b866:	f7fd fcf9 	bl	801925c <calc_move_geometry>
 801b86a:	4601      	mov	r1, r0
 801b86c:	2800      	cmp	r0, #0
 801b86e:	f47f af7e 	bne.w	801b76e <calc_new_geometry+0x58e>
 801b872:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801b876:	e586      	b.n	801b386 <calc_new_geometry+0x1a6>
 801b878:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b87c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b87e:	ed91 7a00 	vldr	s14, [r1]
 801b882:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b886:	e756      	b.n	801b736 <calc_new_geometry+0x556>
 801b888:	2b00      	cmp	r3, #0
 801b88a:	f43f af2a 	beq.w	801b6e2 <calc_new_geometry+0x502>
 801b88e:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b892:	2b00      	cmp	r3, #0
 801b894:	f000 8269 	beq.w	801bd6a <calc_new_geometry+0xb8a>
 801b898:	eef0 7a49 	vmov.f32	s15, s18
 801b89c:	eeb0 7a49 	vmov.f32	s14, s18
 801b8a0:	f8df 821c 	ldr.w	r8, [pc, #540]	@ 801bac0 <calc_new_geometry+0x8e0>
 801b8a4:	f898 3000 	ldrb.w	r3, [r8]
 801b8a8:	b1e3      	cbz	r3, 801b8e4 <calc_new_geometry+0x704>
 801b8aa:	4b84      	ldr	r3, [pc, #528]	@ (801babc <calc_new_geometry+0x8dc>)
 801b8ac:	edd3 5a00 	vldr	s11, [r3]
 801b8b0:	ed93 6a01 	vldr	s12, [r3, #4]
 801b8b4:	edd3 6a03 	vldr	s13, [r3, #12]
 801b8b8:	ed93 5a04 	vldr	s10, [r3, #16]
 801b8bc:	ee27 6a86 	vmul.f32	s12, s15, s12
 801b8c0:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b8c4:	ee67 7a85 	vmul.f32	s15, s15, s10
 801b8c8:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b8cc:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801b8d0:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b8d4:	edd3 7a05 	vldr	s15, [r3, #20]
 801b8d8:	ed93 6a02 	vldr	s12, [r3, #8]
 801b8dc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b8e0:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b8e4:	f240 13ff 	movw	r3, #511	@ 0x1ff
 801b8e8:	eeb0 1a47 	vmov.f32	s2, s14
 801b8ec:	eef0 1a67 	vmov.f32	s3, s15
 801b8f0:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801b8f4:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801b8f8:	ed8d 7a08 	vstr	s14, [sp, #32]
 801b8fc:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801b900:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b904:	f7fd fd0a 	bl	801931c <calc_line_geometry>
 801b908:	4601      	mov	r1, r0
 801b90a:	2800      	cmp	r0, #0
 801b90c:	f040 83c4 	bne.w	801c098 <calc_new_geometry+0xeb8>
 801b910:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b912:	e6e8      	b.n	801b6e6 <calc_new_geometry+0x506>
 801b914:	9101      	str	r1, [sp, #4]
 801b916:	f001 f8b5 	bl	801ca84 <nema_vg_set_error>
 801b91a:	9901      	ldr	r1, [sp, #4]
 801b91c:	4608      	mov	r0, r1
 801b91e:	f001 f8b1 	bl	801ca84 <nema_vg_set_error>
 801b922:	9901      	ldr	r1, [sp, #4]
 801b924:	4608      	mov	r0, r1
 801b926:	b021      	add	sp, #132	@ 0x84
 801b928:	ecbd 8b10 	vpop	{d8-d15}
 801b92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b930:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b934:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b938:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b93c:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b940:	f7fd fcec 	bl	801931c <calc_line_geometry>
 801b944:	4601      	mov	r1, r0
 801b946:	2800      	cmp	r0, #0
 801b948:	f43f ad4b 	beq.w	801b3e2 <calc_new_geometry+0x202>
 801b94c:	e70f      	b.n	801b76e <calc_new_geometry+0x58e>
 801b94e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b950:	ed91 5a00 	vldr	s10, [r1]
 801b954:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b958:	1c98      	adds	r0, r3, #2
 801b95a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b95c:	edd1 5a01 	vldr	s11, [r1, #4]
 801b960:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b964:	1cd8      	adds	r0, r3, #3
 801b966:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b968:	ed91 7a02 	vldr	s14, [r1, #8]
 801b96c:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b970:	3304      	adds	r3, #4
 801b972:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b974:	edd1 7a03 	vldr	s15, [r1, #12]
 801b978:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b97c:	f1b9 0f00 	cmp.w	r9, #0
 801b980:	d013      	beq.n	801b9aa <calc_new_geometry+0x7ca>
 801b982:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801b986:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b98a:	ee35 5a06 	vadd.f32	s10, s10, s12
 801b98e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b992:	ee75 5aa6 	vadd.f32	s11, s11, s13
 801b996:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b99a:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b99e:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b9a2:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b9a6:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b9aa:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 801bac0 <calc_new_geometry+0x8e0>
 801b9ae:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801b9b2:	f898 1000 	ldrb.w	r1, [r8]
 801b9b6:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801b9ba:	2900      	cmp	r1, #0
 801b9bc:	d057      	beq.n	801ba6e <calc_new_geometry+0x88e>
 801b9be:	493f      	ldr	r1, [pc, #252]	@ (801babc <calc_new_geometry+0x8dc>)
 801b9c0:	1c58      	adds	r0, r3, #1
 801b9c2:	ed91 6a03 	vldr	s12, [r1, #12]
 801b9c6:	edd1 6a04 	vldr	s13, [r1, #16]
 801b9ca:	ed91 4a00 	vldr	s8, [r1]
 801b9ce:	edd1 4a01 	vldr	s9, [r1, #4]
 801b9d2:	ee24 3a05 	vmul.f32	s6, s8, s10
 801b9d6:	ee65 3aa4 	vmul.f32	s7, s11, s9
 801b9da:	ee24 4a07 	vmul.f32	s8, s8, s14
 801b9de:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801b9e2:	ee26 5a05 	vmul.f32	s10, s12, s10
 801b9e6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 801b9ea:	ee26 7a07 	vmul.f32	s14, s12, s14
 801b9ee:	ee65 5aa6 	vmul.f32	s11, s11, s13
 801b9f2:	ed91 6a02 	vldr	s12, [r1, #8]
 801b9f6:	ee75 6a25 	vadd.f32	s13, s10, s11
 801b9fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b9fe:	ee73 3a23 	vadd.f32	s7, s6, s7
 801ba02:	edd1 7a05 	vldr	s15, [r1, #20]
 801ba06:	ee74 4a24 	vadd.f32	s9, s8, s9
 801ba0a:	ee73 5a86 	vadd.f32	s11, s7, s12
 801ba0e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801ba12:	ee34 6a86 	vadd.f32	s12, s9, s12
 801ba16:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ba1a:	edcd 5a15 	vstr	s11, [sp, #84]	@ 0x54
 801ba1e:	ed8d 6a17 	vstr	s12, [sp, #92]	@ 0x5c
 801ba22:	edcd 6a16 	vstr	s13, [sp, #88]	@ 0x58
 801ba26:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801ba2a:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801ba2e:	f10c 0104 	add.w	r1, ip, #4
 801ba32:	4411      	add	r1, r2
 801ba34:	3302      	adds	r3, #2
 801ba36:	4462      	add	r2, ip
 801ba38:	900f      	str	r0, [sp, #60]	@ 0x3c
 801ba3a:	f1b9 0f00 	cmp.w	r9, #0
 801ba3e:	f000 8187 	beq.w	801bd50 <calc_new_geometry+0xb70>
 801ba42:	ed92 7a00 	vldr	s14, [r2]
 801ba46:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801ba4a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ba4e:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801ba52:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ba54:	edd1 6a00 	vldr	s13, [r1]
 801ba58:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801ba5c:	ee36 7a87 	vadd.f32	s14, s13, s14
 801ba60:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801ba64:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801ba68:	e460      	b.n	801b32c <calc_new_geometry+0x14c>
 801ba6a:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 801bac0 <calc_new_geometry+0x8e0>
 801ba6e:	1c58      	adds	r0, r3, #1
 801ba70:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801ba74:	e7db      	b.n	801ba2e <calc_new_geometry+0x84e>
 801ba76:	2e03      	cmp	r6, #3
 801ba78:	f000 80be 	beq.w	801bbf8 <calc_new_geometry+0xa18>
 801ba7c:	2e0a      	cmp	r6, #10
 801ba7e:	f040 8478 	bne.w	801c372 <calc_new_geometry+0x1192>
 801ba82:	9b03      	ldr	r3, [sp, #12]
 801ba84:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801ba88:	edd3 7a00 	vldr	s15, [r3]
 801ba8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ba90:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801ba94:	ee17 8a90 	vmov	r8, s15
 801ba98:	2b01      	cmp	r3, #1
 801ba9a:	f000 839a 	beq.w	801c1d2 <calc_new_geometry+0xff2>
 801ba9e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801baa2:	ea4f 0368 	mov.w	r3, r8, asr #1
 801baa6:	2b00      	cmp	r3, #0
 801baa8:	9304      	str	r3, [sp, #16]
 801baaa:	f77f ae7a 	ble.w	801b7a2 <calc_new_geometry+0x5c2>
 801baae:	2200      	movs	r2, #0
 801bab0:	9605      	str	r6, [sp, #20]
 801bab2:	f8df 800c 	ldr.w	r8, [pc, #12]	@ 801bac0 <calc_new_geometry+0x8e0>
 801bab6:	4b01      	ldr	r3, [pc, #4]	@ (801babc <calc_new_geometry+0x8dc>)
 801bab8:	4616      	mov	r6, r2
 801baba:	e056      	b.n	801bb6a <calc_new_geometry+0x98a>
 801babc:	20083184 	.word	0x20083184
 801bac0:	20083180 	.word	0x20083180
 801bac4:	3727c5ac 	.word	0x3727c5ac
 801bac8:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801bacc:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bad0:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bad4:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bad6:	eddc 6a00 	vldr	s13, [ip]
 801bada:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bade:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bae2:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bae6:	f898 1000 	ldrb.w	r1, [r8]
 801baea:	3601      	adds	r6, #1
 801baec:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801baf0:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801baf4:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801baf8:	b1f9      	cbz	r1, 801bb3a <calc_new_geometry+0x95a>
 801bafa:	ed93 6a03 	vldr	s12, [r3, #12]
 801bafe:	edd3 6a04 	vldr	s13, [r3, #16]
 801bb02:	ed93 5a00 	vldr	s10, [r3]
 801bb06:	edd3 5a01 	vldr	s11, [r3, #4]
 801bb0a:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bb0e:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bb12:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bb16:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bb1a:	ee75 5a25 	vadd.f32	s11, s10, s11
 801bb1e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bb22:	ed93 6a02 	vldr	s12, [r3, #8]
 801bb26:	edd3 6a05 	vldr	s13, [r3, #20]
 801bb2a:	ee35 7a86 	vadd.f32	s14, s11, s12
 801bb2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bb32:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bb36:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bb3a:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801bb3e:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801bb42:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801bb46:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bb4a:	9303      	str	r3, [sp, #12]
 801bb4c:	f7fd fbe6 	bl	801931c <calc_line_geometry>
 801bb50:	9b03      	ldr	r3, [sp, #12]
 801bb52:	4601      	mov	r1, r0
 801bb54:	2800      	cmp	r0, #0
 801bb56:	f040 829f 	bne.w	801c098 <calc_new_geometry+0xeb8>
 801bb5a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801bb5e:	9a04      	ldr	r2, [sp, #16]
 801bb60:	e885 0003 	stmia.w	r5, {r0, r1}
 801bb64:	4296      	cmp	r6, r2
 801bb66:	f43f ae1b 	beq.w	801b7a0 <calc_new_geometry+0x5c0>
 801bb6a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bb6c:	f8da 200c 	ldr.w	r2, [sl, #12]
 801bb70:	0088      	lsls	r0, r1, #2
 801bb72:	f100 0c04 	add.w	ip, r0, #4
 801bb76:	4494      	add	ip, r2
 801bb78:	4410      	add	r0, r2
 801bb7a:	1c4a      	adds	r2, r1, #1
 801bb7c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bb7e:	3102      	adds	r1, #2
 801bb80:	ed90 7a00 	vldr	s14, [r0]
 801bb84:	f1b9 0f00 	cmp.w	r9, #0
 801bb88:	d19e      	bne.n	801bac8 <calc_new_geometry+0x8e8>
 801bb8a:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bb8e:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bb90:	eddc 7a00 	vldr	s15, [ip]
 801bb94:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bb98:	e7a5      	b.n	801bae6 <calc_new_geometry+0x906>
 801bb9a:	9b02      	ldr	r3, [sp, #8]
 801bb9c:	2b09      	cmp	r3, #9
 801bb9e:	f47f ac20 	bne.w	801b3e2 <calc_new_geometry+0x202>
 801bba2:	ed9d 8a1b 	vldr	s16, [sp, #108]	@ 0x6c
 801bba6:	eddd ba19 	vldr	s23, [sp, #100]	@ 0x64
 801bbaa:	ee78 6a6b 	vsub.f32	s13, s16, s23
 801bbae:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bbb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbb6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bbba:	bf48      	it	mi
 801bbbc:	eef1 6a66 	vnegmi.f32	s13, s13
 801bbc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbc4:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801bbc8:	bf4c      	ite	mi
 801bbca:	eeb1 7a48 	vnegmi.f32	s14, s16
 801bbce:	eeb0 7a48 	vmovpl.f32	s14, s16
 801bbd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbd6:	eddd 8a1c 	vldr	s17, [sp, #112]	@ 0x70
 801bbda:	ed9d ca1a 	vldr	s24, [sp, #104]	@ 0x68
 801bbde:	f100 80e4 	bmi.w	801bdaa <calc_new_geometry+0xbca>
 801bbe2:	eef4 bac7 	vcmpe.f32	s23, s14
 801bbe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbea:	f300 80e6 	bgt.w	801bdba <calc_new_geometry+0xbda>
 801bbee:	ed5f 7a4b 	vldr	s15, [pc, #-300]	@ 801bac4 <calc_new_geometry+0x8e4>
 801bbf2:	ee6b 7aa7 	vmul.f32	s15, s23, s15
 801bbf6:	e0eb      	b.n	801bdd0 <calc_new_geometry+0xbf0>
 801bbf8:	9b03      	ldr	r3, [sp, #12]
 801bbfa:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801bbfe:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801bc02:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bc06:	edd3 7a00 	vldr	s15, [r3]
 801bc0a:	f1b9 0f00 	cmp.w	r9, #0
 801bc0e:	f000 8097 	beq.w	801bd40 <calc_new_geometry+0xb60>
 801bc12:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801bc16:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bc1a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bc1e:	f8df 841c 	ldr.w	r8, [pc, #1052]	@ 801c03c <calc_new_geometry+0xe5c>
 801bc22:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bc26:	f7ff bb81 	b.w	801b32c <calc_new_geometry+0x14c>
 801bc2a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bc2c:	ed91 7a00 	vldr	s14, [r1]
 801bc30:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc34:	3302      	adds	r3, #2
 801bc36:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bc38:	edd1 7a01 	vldr	s15, [r1, #4]
 801bc3c:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc40:	f1b9 0f00 	cmp.w	r9, #0
 801bc44:	d00b      	beq.n	801bc5e <calc_new_geometry+0xa7e>
 801bc46:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801bc4a:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801bc4e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bc52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bc56:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc5a:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc5e:	f8df 83dc 	ldr.w	r8, [pc, #988]	@ 801c03c <calc_new_geometry+0xe5c>
 801bc62:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bc66:	f898 1000 	ldrb.w	r1, [r8]
 801bc6a:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bc6e:	2900      	cmp	r1, #0
 801bc70:	f43f aefd 	beq.w	801ba6e <calc_new_geometry+0x88e>
 801bc74:	49ef      	ldr	r1, [pc, #956]	@ (801c034 <calc_new_geometry+0xe54>)
 801bc76:	1c58      	adds	r0, r3, #1
 801bc78:	ed91 6a03 	vldr	s12, [r1, #12]
 801bc7c:	edd1 6a04 	vldr	s13, [r1, #16]
 801bc80:	ed91 5a00 	vldr	s10, [r1]
 801bc84:	edd1 5a01 	vldr	s11, [r1, #4]
 801bc88:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bc8c:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bc90:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bc94:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bc98:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bc9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bca0:	edd1 6a02 	vldr	s13, [r1, #8]
 801bca4:	edd1 7a05 	vldr	s15, [r1, #20]
 801bca8:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bcac:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bcb0:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bcb4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bcb8:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bcbc:	e6b7      	b.n	801ba2e <calc_new_geometry+0x84e>
 801bcbe:	f8df 837c 	ldr.w	r8, [pc, #892]	@ 801c03c <calc_new_geometry+0xe5c>
 801bcc2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bcc6:	f7ff bb31 	b.w	801b32c <calc_new_geometry+0x14c>
 801bcca:	f1ae 0e05 	sub.w	lr, lr, #5
 801bcce:	f1be 0f03 	cmp.w	lr, #3
 801bcd2:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801bcd6:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bcda:	f240 8206 	bls.w	801c0ea <calc_new_geometry+0xf0a>
 801bcde:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 801c03c <calc_new_geometry+0xe5c>
 801bce2:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bce6:	f898 1000 	ldrb.w	r1, [r8]
 801bcea:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bcee:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bcf2:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bcf6:	2900      	cmp	r1, #0
 801bcf8:	f43f ae99 	beq.w	801ba2e <calc_new_geometry+0x84e>
 801bcfc:	49cd      	ldr	r1, [pc, #820]	@ (801c034 <calc_new_geometry+0xe54>)
 801bcfe:	ed91 6a03 	vldr	s12, [r1, #12]
 801bd02:	edd1 6a04 	vldr	s13, [r1, #16]
 801bd06:	ed91 5a00 	vldr	s10, [r1]
 801bd0a:	edd1 5a01 	vldr	s11, [r1, #4]
 801bd0e:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bd12:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bd16:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bd1a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd1e:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bd22:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bd26:	edd1 6a02 	vldr	s13, [r1, #8]
 801bd2a:	edd1 7a05 	vldr	s15, [r1, #20]
 801bd2e:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bd32:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bd36:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bd3a:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bd3e:	e676      	b.n	801ba2e <calc_new_geometry+0x84e>
 801bd40:	f8df 82f8 	ldr.w	r8, [pc, #760]	@ 801c03c <calc_new_geometry+0xe5c>
 801bd44:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bd48:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bd4c:	f7ff baee 	b.w	801b32c <calc_new_geometry+0x14c>
 801bd50:	edd2 7a00 	vldr	s15, [r2]
 801bd54:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bd58:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd5a:	ed91 7a00 	vldr	s14, [r1]
 801bd5e:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bd62:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bd66:	f7ff bae1 	b.w	801b32c <calc_new_geometry+0x14c>
 801bd6a:	ed9d 7a1d 	vldr	s14, [sp, #116]	@ 0x74
 801bd6e:	eddd 7a1e 	vldr	s15, [sp, #120]	@ 0x78
 801bd72:	e595      	b.n	801b8a0 <calc_new_geometry+0x6c0>
 801bd74:	eef4 cae6 	vcmpe.f32	s25, s13
 801bd78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd7c:	f73f ab9e 	bgt.w	801b4bc <calc_new_geometry+0x2dc>
 801bd80:	eeb4 dae6 	vcmpe.f32	s26, s13
 801bd84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd88:	f73f ab98 	bgt.w	801b4bc <calc_new_geometry+0x2dc>
 801bd8c:	eef4 cac6 	vcmpe.f32	s25, s12
 801bd90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd94:	f53f ab92 	bmi.w	801b4bc <calc_new_geometry+0x2dc>
 801bd98:	eeb4 dac6 	vcmpe.f32	s26, s12
 801bd9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bda0:	bf54      	ite	pl
 801bda2:	2201      	movpl	r2, #1
 801bda4:	2200      	movmi	r2, #0
 801bda6:	f7ff bb8a 	b.w	801b4be <calc_new_geometry+0x2de>
 801bdaa:	eef1 7a6b 	vneg.f32	s15, s23
 801bdae:	eef4 7ac7 	vcmpe.f32	s15, s14
 801bdb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdb6:	f340 8202 	ble.w	801c1be <calc_new_geometry+0xfde>
 801bdba:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bdbe:	eddf 7aa0 	vldr	s15, [pc, #640]	@ 801c040 <calc_new_geometry+0xe60>
 801bdc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdc6:	bf4c      	ite	mi
 801bdc8:	ee68 7a67 	vnmulmi.f32	s15, s16, s15
 801bdcc:	ee68 7a27 	vmulpl.f32	s15, s16, s15
 801bdd0:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bdd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdd8:	d82e      	bhi.n	801be38 <calc_new_geometry+0xc58>
 801bdda:	ee78 6acc 	vsub.f32	s13, s17, s24
 801bdde:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bde2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bde6:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801bdea:	bf48      	it	mi
 801bdec:	eef1 6a66 	vnegmi.f32	s13, s13
 801bdf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdf4:	eeb5 cac0 	vcmpe.f32	s24, #0.0
 801bdf8:	bf4c      	ite	mi
 801bdfa:	eeb1 7a68 	vnegmi.f32	s14, s17
 801bdfe:	eeb0 7a68 	vmovpl.f32	s14, s17
 801be02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be06:	f100 81f1 	bmi.w	801c1ec <calc_new_geometry+0x100c>
 801be0a:	eeb4 cac7 	vcmpe.f32	s24, s14
 801be0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be12:	f340 81d9 	ble.w	801c1c8 <calc_new_geometry+0xfe8>
 801be16:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801be1a:	eddf 7a89 	vldr	s15, [pc, #548]	@ 801c040 <calc_new_geometry+0xe60>
 801be1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be22:	bf4c      	ite	mi
 801be24:	ee68 7ae7 	vnmulmi.f32	s15, s17, s15
 801be28:	ee68 7aa7 	vmulpl.f32	s15, s17, s15
 801be2c:	eef4 6ae7 	vcmpe.f32	s13, s15
 801be30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be34:	f67f aad5 	bls.w	801b3e2 <calc_new_geometry+0x202>
 801be38:	eddd ca15 	vldr	s25, [sp, #84]	@ 0x54
 801be3c:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801be40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be44:	f100 815e 	bmi.w	801c104 <calc_new_geometry+0xf24>
 801be48:	eddf 7a7d 	vldr	s15, [pc, #500]	@ 801c040 <calc_new_geometry+0xe60>
 801be4c:	eef4 cae7 	vcmpe.f32	s25, s15
 801be50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be54:	f240 815e 	bls.w	801c114 <calc_new_geometry+0xf34>
 801be58:	eddd da16 	vldr	s27, [sp, #88]	@ 0x58
 801be5c:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be64:	f100 81cf 	bmi.w	801c206 <calc_new_geometry+0x1026>
 801be68:	eddf 7a75 	vldr	s15, [pc, #468]	@ 801c040 <calc_new_geometry+0xe60>
 801be6c:	eef4 dae7 	vcmpe.f32	s27, s15
 801be70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be74:	f240 814e 	bls.w	801c114 <calc_new_geometry+0xf34>
 801be78:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801be7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be80:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801be84:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801be88:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801be8c:	f100 81d1 	bmi.w	801c232 <calc_new_geometry+0x1052>
 801be90:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be98:	f100 81c8 	bmi.w	801c22c <calc_new_geometry+0x104c>
 801be9c:	ed9d ea17 	vldr	s28, [sp, #92]	@ 0x5c
 801bea0:	ee2e ea0b 	vmul.f32	s28, s28, s22
 801bea4:	eeb0 0a4e 	vmov.f32	s0, s28
 801bea8:	f015 fabc 	bl	8031424 <cosf>
 801beac:	eeb0 da40 	vmov.f32	s26, s0
 801beb0:	eeb0 0a4e 	vmov.f32	s0, s28
 801beb4:	f015 fb02 	bl	80314bc <sinf>
 801beb8:	ee28 5a0d 	vmul.f32	s10, s16, s26
 801bebc:	ee68 5a80 	vmul.f32	s11, s17, s0
 801bec0:	ee2b 7ac0 	vnmul.f32	s14, s23, s0
 801bec4:	ee6c 6a00 	vmul.f32	s13, s24, s0
 801bec8:	ee6c 7a0d 	vmul.f32	s15, s24, s26
 801becc:	ee28 8a40 	vnmul.f32	s16, s16, s0
 801bed0:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801bed4:	ee2b 6a8d 	vmul.f32	s12, s23, s26
 801bed8:	ee35 ca25 	vadd.f32	s24, s10, s11
 801bedc:	ee38 fa28 	vadd.f32	s30, s16, s17
 801bee0:	ee76 ba26 	vadd.f32	s23, s12, s13
 801bee4:	ee37 8a27 	vadd.f32	s16, s14, s15
 801bee8:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801beec:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801bef0:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801bef4:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801bef8:	ee76 8a65 	vsub.f32	s17, s12, s11
 801befc:	ee76 eac5 	vsub.f32	s29, s13, s10
 801bf00:	ee28 7aa8 	vmul.f32	s14, s17, s17
 801bf04:	ee6e 7aae 	vmul.f32	s15, s29, s29
 801bf08:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bf0c:	eef5 7a40 	vcmp.f32	s15, #0.0
 801bf10:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801bf14:	ee76 4a25 	vadd.f32	s9, s12, s11
 801bf18:	ee76 fa85 	vadd.f32	s31, s13, s10
 801bf1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf20:	eeb0 ea40 	vmov.f32	s28, s0
 801bf24:	ee64 4a87 	vmul.f32	s9, s9, s14
 801bf28:	ee6f fa87 	vmul.f32	s31, s31, s14
 801bf2c:	f000 821c 	beq.w	801c368 <calc_new_geometry+0x1188>
 801bf30:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 801bf34:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 801bf38:	ee84 0a27 	vdiv.f32	s0, s8, s15
 801bf3c:	ee30 0a47 	vsub.f32	s0, s0, s14
 801bf40:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bf44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf48:	f100 82c7 	bmi.w	801c4da <calc_new_geometry+0x12fa>
 801bf4c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801bf50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf54:	eeb1 8ac0 	vsqrt.f32	s16, s0
 801bf58:	f100 82e8 	bmi.w	801c52c <calc_new_geometry+0x134c>
 801bf5c:	ee28 fa28 	vmul.f32	s30, s16, s17
 801bf60:	ee68 ea2e 	vmul.f32	s29, s16, s29
 801bf64:	ee3f cacf 	vsub.f32	s24, s31, s30
 801bf68:	ee7e baa4 	vadd.f32	s23, s29, s9
 801bf6c:	ee36 0acc 	vsub.f32	s0, s13, s24
 801bf70:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801bf74:	edcd 4a06 	vstr	s9, [sp, #24]
 801bf78:	edcd 6a05 	vstr	s13, [sp, #20]
 801bf7c:	ed8d 6a04 	vstr	s12, [sp, #16]
 801bf80:	ed8d 5a07 	vstr	s10, [sp, #28]
 801bf84:	edcd 5a02 	vstr	s11, [sp, #8]
 801bf88:	f015 f938 	bl	80311fc <atan2f>
 801bf8c:	eddd 5a02 	vldr	s11, [sp, #8]
 801bf90:	ed9d 5a07 	vldr	s10, [sp, #28]
 801bf94:	eeb0 8a40 	vmov.f32	s16, s0
 801bf98:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801bf9c:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801bfa0:	edcd 5a03 	vstr	s11, [sp, #12]
 801bfa4:	ed8d 5a02 	vstr	s10, [sp, #8]
 801bfa8:	f015 f928 	bl	80311fc <atan2f>
 801bfac:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801bfb0:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801bfb4:	ee78 7ac8 	vsub.f32	s15, s17, s16
 801bfb8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bfbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfc0:	bf44      	itt	mi
 801bfc2:	ed9f 7a1d 	vldrmi	s14, [pc, #116]	@ 801c038 <calc_new_geometry+0xe58>
 801bfc6:	ee77 7a87 	vaddmi.f32	s15, s15, s14
 801bfca:	eef4 7aea 	vcmpe.f32	s15, s21
 801bfce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfd2:	ed9d 5a02 	vldr	s10, [sp, #8]
 801bfd6:	eddd 5a03 	vldr	s11, [sp, #12]
 801bfda:	ed9d 6a04 	vldr	s12, [sp, #16]
 801bfde:	eddd 6a05 	vldr	s13, [sp, #20]
 801bfe2:	eddd 4a06 	vldr	s9, [sp, #24]
 801bfe6:	f140 819e 	bpl.w	801c326 <calc_new_geometry+0x1146>
 801bfea:	42a5      	cmp	r5, r4
 801bfec:	f000 8252 	beq.w	801c494 <calc_new_geometry+0x12b4>
 801bff0:	ee6c 7a2d 	vmul.f32	s15, s24, s27
 801bff4:	ee6b baac 	vmul.f32	s23, s23, s25
 801bff8:	ee2d 7a2b 	vmul.f32	s14, s26, s23
 801bffc:	ee6e ba2b 	vmul.f32	s23, s28, s23
 801c000:	ee2e ea27 	vmul.f32	s28, s28, s15
 801c004:	ee6d 7a27 	vmul.f32	s15, s26, s15
 801c008:	ee37 ea4e 	vsub.f32	s28, s14, s28
 801c00c:	ee3b caa7 	vadd.f32	s24, s23, s15
 801c010:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801c014:	2d00      	cmp	r5, #0
 801c016:	f000 8148 	beq.w	801c2aa <calc_new_geometry+0x10ca>
 801c01a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c01e:	f300 8236 	bgt.w	801c48e <calc_new_geometry+0x12ae>
 801c022:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801c026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c02a:	bf48      	it	mi
 801c02c:	2101      	movmi	r1, #1
 801c02e:	d415      	bmi.n	801c05c <calc_new_geometry+0xe7c>
 801c030:	f7ff b9d7 	b.w	801b3e2 <calc_new_geometry+0x202>
 801c034:	20083184 	.word	0x20083184
 801c038:	43b40000 	.word	0x43b40000
 801c03c:	20083180 	.word	0x20083180
 801c040:	3727c5ac 	.word	0x3727c5ac
 801c044:	b727c5ac 	.word	0xb727c5ac
 801c048:	00000000 	.word	0x00000000
 801c04c:	eef4 bae8 	vcmpe.f32	s23, s17
 801c050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c054:	eeb0 8a6b 	vmov.f32	s16, s23
 801c058:	f57f a9c3 	bpl.w	801b3e2 <calc_new_geometry+0x202>
 801c05c:	ee78 ba29 	vadd.f32	s23, s16, s19
 801c060:	eef4 bae8 	vcmpe.f32	s23, s17
 801c064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c068:	bfa4      	itt	ge
 801c06a:	3102      	addge	r1, #2
 801c06c:	b2c9      	uxtbge	r1, r1
 801c06e:	eeb0 0a48 	vmov.f32	s0, s16
 801c072:	eef0 2a6d 	vmov.f32	s5, s27
 801c076:	eeb0 2a6c 	vmov.f32	s4, s25
 801c07a:	eef0 1a4c 	vmov.f32	s3, s24
 801c07e:	eeb0 1a4e 	vmov.f32	s2, s28
 801c082:	a80e      	add	r0, sp, #56	@ 0x38
 801c084:	bf54      	ite	pl
 801c086:	eef0 0a68 	vmovpl.f32	s1, s17
 801c08a:	eef0 0a6b 	vmovmi.f32	s1, s23
 801c08e:	f7fe ff27 	bl	801aee0 <arc_to_cubic>
 801c092:	4601      	mov	r1, r0
 801c094:	2800      	cmp	r0, #0
 801c096:	d0d9      	beq.n	801c04c <calc_new_geometry+0xe6c>
 801c098:	9101      	str	r1, [sp, #4]
 801c09a:	f000 fcf3 	bl	801ca84 <nema_vg_set_error>
 801c09e:	9901      	ldr	r1, [sp, #4]
 801c0a0:	4608      	mov	r0, r1
 801c0a2:	f7ff bb64 	b.w	801b76e <calc_new_geometry+0x58e>
 801c0a6:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c0aa:	f8d1 e000 	ldr.w	lr, [r1]
 801c0ae:	1c98      	adds	r0, r3, #2
 801c0b0:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c0b2:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801c0b6:	f8d1 e004 	ldr.w	lr, [r1, #4]
 801c0ba:	1cd8      	adds	r0, r3, #3
 801c0bc:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c0be:	f8cd e058 	str.w	lr, [sp, #88]	@ 0x58
 801c0c2:	f10c 0c0c 	add.w	ip, ip, #12
 801c0c6:	f8d1 e008 	ldr.w	lr, [r1, #8]
 801c0ca:	eb02 010c 	add.w	r1, r2, ip
 801c0ce:	f103 0804 	add.w	r8, r3, #4
 801c0d2:	9103      	str	r1, [sp, #12]
 801c0d4:	4603      	mov	r3, r0
 801c0d6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801c0d8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c0da:	f8cd e05c 	str.w	lr, [sp, #92]	@ 0x5c
 801c0de:	f88d 403b 	strb.w	r4, [sp, #59]	@ 0x3b
 801c0e2:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c0e4:	911c      	str	r1, [sp, #112]	@ 0x70
 801c0e6:	f7ff b907 	b.w	801b2f8 <calc_new_geometry+0x118>
 801c0ea:	ee37 7a07 	vadd.f32	s14, s14, s14
 801c0ee:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801c0f2:	ed9d 6a1b 	vldr	s12, [sp, #108]	@ 0x6c
 801c0f6:	eddd 6a1c 	vldr	s13, [sp, #112]	@ 0x70
 801c0fa:	ee37 7a46 	vsub.f32	s14, s14, s12
 801c0fe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c102:	e5ec      	b.n	801bcde <calc_new_geometry+0xafe>
 801c104:	ed5f 7a31 	vldr	s15, [pc, #-196]	@ 801c044 <calc_new_geometry+0xe64>
 801c108:	eef4 cae7 	vcmpe.f32	s25, s15
 801c10c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c110:	f6ff aea2 	blt.w	801be58 <calc_new_geometry+0xc78>
 801c114:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c118:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c11c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c120:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c124:	f7fd f8fa 	bl	801931c <calc_line_geometry>
 801c128:	4601      	mov	r1, r0
 801c12a:	2800      	cmp	r0, #0
 801c12c:	f43f a959 	beq.w	801b3e2 <calc_new_geometry+0x202>
 801c130:	9101      	str	r1, [sp, #4]
 801c132:	f000 fca7 	bl	801ca84 <nema_vg_set_error>
 801c136:	9901      	ldr	r1, [sp, #4]
 801c138:	e7b2      	b.n	801c0a0 <calc_new_geometry+0xec0>
 801c13a:	f1ae 0e05 	sub.w	lr, lr, #5
 801c13e:	f1be 0f03 	cmp.w	lr, #3
 801c142:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801c146:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801c14a:	d91f      	bls.n	801c18c <calc_new_geometry+0xfac>
 801c14c:	eef0 5a66 	vmov.f32	s11, s13
 801c150:	eeb0 5a46 	vmov.f32	s10, s12
 801c154:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801c158:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801c15c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c15e:	ed91 7a00 	vldr	s14, [r1]
 801c162:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c166:	3302      	adds	r3, #2
 801c168:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c16a:	edd1 7a01 	vldr	s15, [r1, #4]
 801c16e:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c172:	f1b9 0f00 	cmp.w	r9, #0
 801c176:	f43f ac18 	beq.w	801b9aa <calc_new_geometry+0x7ca>
 801c17a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801c17e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c182:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c186:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c18a:	e40e      	b.n	801b9aa <calc_new_geometry+0x7ca>
 801c18c:	ee36 5a06 	vadd.f32	s10, s12, s12
 801c190:	ee76 5aa6 	vadd.f32	s11, s13, s13
 801c194:	ed9d 7a1b 	vldr	s14, [sp, #108]	@ 0x6c
 801c198:	eddd 7a1c 	vldr	s15, [sp, #112]	@ 0x70
 801c19c:	ee35 5a47 	vsub.f32	s10, s10, s14
 801c1a0:	ee75 5ae7 	vsub.f32	s11, s11, s15
 801c1a4:	e7d6      	b.n	801c154 <calc_new_geometry+0xf74>
 801c1a6:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c1aa:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c1ae:	f7fd f855 	bl	801925c <calc_move_geometry>
 801c1b2:	4601      	mov	r1, r0
 801c1b4:	2800      	cmp	r0, #0
 801c1b6:	f43f a914 	beq.w	801b3e2 <calc_new_geometry+0x202>
 801c1ba:	f7ff bad8 	b.w	801b76e <calc_new_geometry+0x58e>
 801c1be:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 801c040 <calc_new_geometry+0xe60>
 801c1c2:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c1c6:	e603      	b.n	801bdd0 <calc_new_geometry+0xbf0>
 801c1c8:	ed5f 7a63 	vldr	s15, [pc, #-396]	@ 801c040 <calc_new_geometry+0xe60>
 801c1cc:	ee6c 7a27 	vmul.f32	s15, s24, s15
 801c1d0:	e62c      	b.n	801be2c <calc_new_geometry+0xc4c>
 801c1d2:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c1d6:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c1da:	f7fd f83f 	bl	801925c <calc_move_geometry>
 801c1de:	4601      	mov	r1, r0
 801c1e0:	2800      	cmp	r0, #0
 801c1e2:	f47f af59 	bne.w	801c098 <calc_new_geometry+0xeb8>
 801c1e6:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c1ea:	e458      	b.n	801ba9e <calc_new_geometry+0x8be>
 801c1ec:	eef1 7a4c 	vneg.f32	s15, s24
 801c1f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 801c1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1f8:	f73f ae0d 	bgt.w	801be16 <calc_new_geometry+0xc36>
 801c1fc:	ed1f 7a70 	vldr	s14, [pc, #-448]	@ 801c040 <calc_new_geometry+0xe60>
 801c200:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c204:	e612      	b.n	801be2c <calc_new_geometry+0xc4c>
 801c206:	ed5f 7a71 	vldr	s15, [pc, #-452]	@ 801c044 <calc_new_geometry+0xe64>
 801c20a:	eef4 dae7 	vcmpe.f32	s27, s15
 801c20e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c212:	f6bf af7f 	bge.w	801c114 <calc_new_geometry+0xf34>
 801c216:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c21a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c21e:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801c222:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801c226:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801c22a:	d402      	bmi.n	801c232 <calc_new_geometry+0x1052>
 801c22c:	eef1 da6d 	vneg.f32	s27, s27
 801c230:	e634      	b.n	801be9c <calc_new_geometry+0xcbc>
 801c232:	eef1 ca6c 	vneg.f32	s25, s25
 801c236:	e62b      	b.n	801be90 <calc_new_geometry+0xcb0>
 801c238:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c23c:	2b00      	cmp	r3, #0
 801c23e:	f000 8121 	beq.w	801c484 <calc_new_geometry+0x12a4>
 801c242:	ed5f 1a7f 	vldr	s3, [pc, #-508]	@ 801c048 <calc_new_geometry+0xe68>
 801c246:	eeb0 1a61 	vmov.f32	s2, s3
 801c24a:	4bc4      	ldr	r3, [pc, #784]	@ (801c55c <calc_new_geometry+0x137c>)
 801c24c:	781b      	ldrb	r3, [r3, #0]
 801c24e:	b1e3      	cbz	r3, 801c28a <calc_new_geometry+0x10aa>
 801c250:	4bc3      	ldr	r3, [pc, #780]	@ (801c560 <calc_new_geometry+0x1380>)
 801c252:	edd3 6a04 	vldr	s13, [r3, #16]
 801c256:	edd3 7a00 	vldr	s15, [r3]
 801c25a:	ed93 7a01 	vldr	s14, [r3, #4]
 801c25e:	ed93 6a03 	vldr	s12, [r3, #12]
 801c262:	ee21 7a87 	vmul.f32	s14, s3, s14
 801c266:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c26a:	ee61 1aa6 	vmul.f32	s3, s3, s13
 801c26e:	ee21 1a06 	vmul.f32	s2, s2, s12
 801c272:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c276:	ee71 1a21 	vadd.f32	s3, s2, s3
 801c27a:	edd3 6a02 	vldr	s13, [r3, #8]
 801c27e:	ed93 7a05 	vldr	s14, [r3, #20]
 801c282:	ee37 1aa6 	vadd.f32	s2, s15, s13
 801c286:	ee71 1a87 	vadd.f32	s3, s3, s14
 801c28a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 801c28e:	4bb5      	ldr	r3, [pc, #724]	@ (801c564 <calc_new_geometry+0x1384>)
 801c290:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c294:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c298:	625a      	str	r2, [r3, #36]	@ 0x24
 801c29a:	f7fd f83f 	bl	801931c <calc_line_geometry>
 801c29e:	4601      	mov	r1, r0
 801c2a0:	2800      	cmp	r0, #0
 801c2a2:	f43f aa68 	beq.w	801b776 <calc_new_geometry+0x596>
 801c2a6:	f7ff ba62 	b.w	801b76e <calc_new_geometry+0x58e>
 801c2aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2ae:	eef0 ba68 	vmov.f32	s23, s17
 801c2b2:	d50b      	bpl.n	801c2cc <calc_new_geometry+0x10ec>
 801c2b4:	eef0 8a48 	vmov.f32	s17, s16
 801c2b8:	ed9f 8aab 	vldr	s16, [pc, #684]	@ 801c568 <calc_new_geometry+0x1388>
 801c2bc:	ee38 8a88 	vadd.f32	s16, s17, s16
 801c2c0:	b125      	cbz	r5, 801c2cc <calc_new_geometry+0x10ec>
 801c2c2:	eef0 8a48 	vmov.f32	s17, s16
 801c2c6:	eeb0 8a6b 	vmov.f32	s16, s23
 801c2ca:	e6aa      	b.n	801c022 <calc_new_geometry+0xe42>
 801c2cc:	eeb4 8aeb 	vcmpe.f32	s16, s23
 801c2d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2d4:	bfc8      	it	gt
 801c2d6:	2101      	movgt	r1, #1
 801c2d8:	dc09      	bgt.n	801c2ee <calc_new_geometry+0x110e>
 801c2da:	f7ff b882 	b.w	801b3e2 <calc_new_geometry+0x202>
 801c2de:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c2e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2e6:	eeb0 8a68 	vmov.f32	s16, s17
 801c2ea:	f77f a87a 	ble.w	801b3e2 <calc_new_geometry+0x202>
 801c2ee:	ee78 8a69 	vsub.f32	s17, s16, s19
 801c2f2:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c2f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2fa:	bf9c      	itt	ls
 801c2fc:	3102      	addls	r1, #2
 801c2fe:	b2c9      	uxtbls	r1, r1
 801c300:	eeb0 0a48 	vmov.f32	s0, s16
 801c304:	eef0 2a6d 	vmov.f32	s5, s27
 801c308:	eeb0 2a6c 	vmov.f32	s4, s25
 801c30c:	eef0 1a4c 	vmov.f32	s3, s24
 801c310:	eeb0 1a4e 	vmov.f32	s2, s28
 801c314:	a80e      	add	r0, sp, #56	@ 0x38
 801c316:	fe78 0aab 	vselgt.f32	s1, s17, s23
 801c31a:	f7fe fde1 	bl	801aee0 <arc_to_cubic>
 801c31e:	4601      	mov	r1, r0
 801c320:	2800      	cmp	r0, #0
 801c322:	d0dc      	beq.n	801c2de <calc_new_geometry+0x10fe>
 801c324:	e6b8      	b.n	801c098 <calc_new_geometry+0xeb8>
 801c326:	db02      	blt.n	801c32e <calc_new_geometry+0x114e>
 801c328:	42a5      	cmp	r5, r4
 801c32a:	f43f ae61 	beq.w	801bff0 <calc_new_geometry+0xe10>
 801c32e:	ee74 baee 	vsub.f32	s23, s9, s29
 801c332:	ee3f ca2f 	vadd.f32	s24, s30, s31
 801c336:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801c33a:	ee36 0acc 	vsub.f32	s0, s13, s24
 801c33e:	ed8d 5a03 	vstr	s10, [sp, #12]
 801c342:	edcd 5a02 	vstr	s11, [sp, #8]
 801c346:	f014 ff59 	bl	80311fc <atan2f>
 801c34a:	eddd 5a02 	vldr	s11, [sp, #8]
 801c34e:	ed9d 5a03 	vldr	s10, [sp, #12]
 801c352:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801c356:	ee20 8a0a 	vmul.f32	s16, s0, s20
 801c35a:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801c35e:	f014 ff4d 	bl	80311fc <atan2f>
 801c362:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801c366:	e643      	b.n	801bff0 <calc_new_geometry+0xe10>
 801c368:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801c36c:	4608      	mov	r0, r1
 801c36e:	f7ff b9fe 	b.w	801b76e <calc_new_geometry+0x58e>
 801c372:	2e0b      	cmp	r6, #11
 801c374:	f47f ab79 	bne.w	801ba6a <calc_new_geometry+0x88a>
 801c378:	9b03      	ldr	r3, [sp, #12]
 801c37a:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c37e:	edd3 7a00 	vldr	s15, [r3]
 801c382:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c386:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c38a:	ee17 8a90 	vmov	r8, s15
 801c38e:	2b01      	cmp	r3, #1
 801c390:	f000 808c 	beq.w	801c4ac <calc_new_geometry+0x12cc>
 801c394:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c398:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c39c:	2b00      	cmp	r3, #0
 801c39e:	9304      	str	r3, [sp, #16]
 801c3a0:	f77e affe 	ble.w	801b3a0 <calc_new_geometry+0x1c0>
 801c3a4:	2100      	movs	r1, #0
 801c3a6:	9605      	str	r6, [sp, #20]
 801c3a8:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 801c55c <calc_new_geometry+0x137c>
 801c3ac:	464e      	mov	r6, r9
 801c3ae:	4b6c      	ldr	r3, [pc, #432]	@ (801c560 <calc_new_geometry+0x1380>)
 801c3b0:	4689      	mov	r9, r1
 801c3b2:	e052      	b.n	801c45a <calc_new_geometry+0x127a>
 801c3b4:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801c3b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c3bc:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c3c0:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c3c2:	eddc 6a00 	vldr	s13, [ip]
 801c3c6:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801c3ca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801c3ce:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c3d2:	f898 1000 	ldrb.w	r1, [r8]
 801c3d6:	f109 0901 	add.w	r9, r9, #1
 801c3da:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801c3de:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801c3e2:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801c3e6:	b1f9      	cbz	r1, 801c428 <calc_new_geometry+0x1248>
 801c3e8:	ed93 6a03 	vldr	s12, [r3, #12]
 801c3ec:	edd3 6a04 	vldr	s13, [r3, #16]
 801c3f0:	ed93 5a00 	vldr	s10, [r3]
 801c3f4:	edd3 5a01 	vldr	s11, [r3, #4]
 801c3f8:	ee27 5a05 	vmul.f32	s10, s14, s10
 801c3fc:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801c400:	ee27 7a06 	vmul.f32	s14, s14, s12
 801c404:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c408:	ee35 6a25 	vadd.f32	s12, s10, s11
 801c40c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c410:	edd3 6a02 	vldr	s13, [r3, #8]
 801c414:	edd3 7a05 	vldr	s15, [r3, #20]
 801c418:	ee76 6a26 	vadd.f32	s13, s12, s13
 801c41c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801c420:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801c424:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c428:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c42c:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c430:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c434:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c438:	9303      	str	r3, [sp, #12]
 801c43a:	f7fc ff6f 	bl	801931c <calc_line_geometry>
 801c43e:	9b03      	ldr	r3, [sp, #12]
 801c440:	4601      	mov	r1, r0
 801c442:	2800      	cmp	r0, #0
 801c444:	f47f ae28 	bne.w	801c098 <calc_new_geometry+0xeb8>
 801c448:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c44c:	9a04      	ldr	r2, [sp, #16]
 801c44e:	e885 0003 	stmia.w	r5, {r0, r1}
 801c452:	4591      	cmp	r9, r2
 801c454:	d025      	beq.n	801c4a2 <calc_new_geometry+0x12c2>
 801c456:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c45a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c45c:	0088      	lsls	r0, r1, #2
 801c45e:	f100 0c04 	add.w	ip, r0, #4
 801c462:	4494      	add	ip, r2
 801c464:	4410      	add	r0, r2
 801c466:	1c4a      	adds	r2, r1, #1
 801c468:	920f      	str	r2, [sp, #60]	@ 0x3c
 801c46a:	3102      	adds	r1, #2
 801c46c:	ed90 7a00 	vldr	s14, [r0]
 801c470:	2e00      	cmp	r6, #0
 801c472:	d19f      	bne.n	801c3b4 <calc_new_geometry+0x11d4>
 801c474:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c478:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c47a:	eddc 7a00 	vldr	s15, [ip]
 801c47e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c482:	e7a6      	b.n	801c3d2 <calc_new_geometry+0x11f2>
 801c484:	ed9d 1a1d 	vldr	s2, [sp, #116]	@ 0x74
 801c488:	eddd 1a1e 	vldr	s3, [sp, #120]	@ 0x78
 801c48c:	e6dd      	b.n	801c24a <calc_new_geometry+0x106a>
 801c48e:	eef0 ba48 	vmov.f32	s23, s16
 801c492:	e711      	b.n	801c2b8 <calc_new_geometry+0x10d8>
 801c494:	eef4 7aea 	vcmpe.f32	s15, s21
 801c498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c49c:	f6bf ada8 	bge.w	801bff0 <calc_new_geometry+0xe10>
 801c4a0:	e745      	b.n	801c32e <calc_new_geometry+0x114e>
 801c4a2:	9e05      	ldr	r6, [sp, #20]
 801c4a4:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c4a8:	f7ff b9d6 	b.w	801b858 <calc_new_geometry+0x678>
 801c4ac:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c4b0:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c4b4:	f7fc fed2 	bl	801925c <calc_move_geometry>
 801c4b8:	4601      	mov	r1, r0
 801c4ba:	2800      	cmp	r0, #0
 801c4bc:	f47f adec 	bne.w	801c098 <calc_new_geometry+0xeb8>
 801c4c0:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c4c4:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c4c8:	2b00      	cmp	r3, #0
 801c4ca:	9304      	str	r3, [sp, #16]
 801c4cc:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c4d0:	f77f ab63 	ble.w	801bb9a <calc_new_geometry+0x9ba>
 801c4d4:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c4d8:	e764      	b.n	801c3a4 <calc_new_geometry+0x11c4>
 801c4da:	ee27 0a87 	vmul.f32	s0, s15, s14
 801c4de:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801c4e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4e6:	eef1 8ac0 	vsqrt.f32	s17, s0
 801c4ea:	d41c      	bmi.n	801c526 <calc_new_geometry+0x1346>
 801c4ec:	ee6c caa8 	vmul.f32	s25, s25, s17
 801c4f0:	ee6d daa8 	vmul.f32	s27, s27, s17
 801c4f4:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801c4f8:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801c4fc:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801c500:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801c504:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c508:	ee76 4a25 	vadd.f32	s9, s12, s11
 801c50c:	ee36 7a85 	vadd.f32	s14, s13, s10
 801c510:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801c514:	ee67 fa27 	vmul.f32	s31, s14, s15
 801c518:	ee76 8a65 	vsub.f32	s17, s12, s11
 801c51c:	ee76 eac5 	vsub.f32	s29, s13, s10
 801c520:	eeb0 8a49 	vmov.f32	s16, s18
 801c524:	e51a      	b.n	801bf5c <calc_new_geometry+0xd7c>
 801c526:	f014 fe8b 	bl	8031240 <sqrtf>
 801c52a:	e7df      	b.n	801c4ec <calc_new_geometry+0x130c>
 801c52c:	edcd 4a06 	vstr	s9, [sp, #24]
 801c530:	ed8d 5a05 	vstr	s10, [sp, #20]
 801c534:	edcd 5a04 	vstr	s11, [sp, #16]
 801c538:	ed8d 6a03 	vstr	s12, [sp, #12]
 801c53c:	edcd 6a02 	vstr	s13, [sp, #8]
 801c540:	f014 fe7e 	bl	8031240 <sqrtf>
 801c544:	eddd 4a06 	vldr	s9, [sp, #24]
 801c548:	ed9d 5a05 	vldr	s10, [sp, #20]
 801c54c:	eddd 5a04 	vldr	s11, [sp, #16]
 801c550:	ed9d 6a03 	vldr	s12, [sp, #12]
 801c554:	eddd 6a02 	vldr	s13, [sp, #8]
 801c558:	e500      	b.n	801bf5c <calc_new_geometry+0xd7c>
 801c55a:	bf00      	nop
 801c55c:	20083180 	.word	0x20083180
 801c560:	20083184 	.word	0x20083184
 801c564:	20083154 	.word	0x20083154
 801c568:	43b40000 	.word	0x43b40000

0801c56c <calc_clipped_path>:
 801c56c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c570:	2600      	movs	r6, #0
 801c572:	4c3b      	ldr	r4, [pc, #236]	@ (801c660 <calc_clipped_path+0xf4>)
 801c574:	4605      	mov	r5, r0
 801c576:	6026      	str	r6, [r4, #0]
 801c578:	4617      	mov	r7, r2
 801c57a:	e9dd 6808 	ldrd	r6, r8, [sp, #32]
 801c57e:	469a      	mov	sl, r3
 801c580:	2b00      	cmp	r3, #0
 801c582:	d04f      	beq.n	801c624 <calc_clipped_path+0xb8>
 801c584:	f1b8 0f00 	cmp.w	r8, #0
 801c588:	bf14      	ite	ne
 801c58a:	f04f 0900 	movne.w	r9, #0
 801c58e:	f04f 0902 	moveq.w	r9, #2
 801c592:	edd1 7a35 	vldr	s15, [r1, #212]	@ 0xd4
 801c596:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c59a:	eddf 6a32 	vldr	s13, [pc, #200]	@ 801c664 <calc_clipped_path+0xf8>
 801c59e:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c5a2:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 801c668 <calc_clipped_path+0xfc>
 801c5a6:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c5aa:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c5ae:	4a2f      	ldr	r2, [pc, #188]	@ (801c66c <calc_clipped_path+0x100>)
 801c5b0:	4b2f      	ldr	r3, [pc, #188]	@ (801c670 <calc_clipped_path+0x104>)
 801c5b2:	edc2 6a00 	vstr	s13, [r2]
 801c5b6:	edc3 7a00 	vstr	s15, [r3]
 801c5ba:	f000 f9d1 	bl	801c960 <nema_vg_get_context>
 801c5be:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c5c2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801c5c4:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 801c680 <calc_clipped_path+0x114>
 801c5c8:	ea41 0203 	orr.w	r2, r1, r3
 801c5cc:	4c29      	ldr	r4, [pc, #164]	@ (801c674 <calc_clipped_path+0x108>)
 801c5ce:	f002 0201 	and.w	r2, r2, #1
 801c5d2:	f8cc 0000 	str.w	r0, [ip]
 801c5d6:	7022      	strb	r2, [r4, #0]
 801c5d8:	b132      	cbz	r2, 801c5e8 <calc_clipped_path+0x7c>
 801c5da:	07dc      	lsls	r4, r3, #31
 801c5dc:	d42b      	bmi.n	801c636 <calc_clipped_path+0xca>
 801c5de:	07cb      	lsls	r3, r1, #31
 801c5e0:	d438      	bmi.n	801c654 <calc_clipped_path+0xe8>
 801c5e2:	4825      	ldr	r0, [pc, #148]	@ (801c678 <calc_clipped_path+0x10c>)
 801c5e4:	f7f5 f99c 	bl	8011920 <nema_mat3x3_load_identity>
 801c5e8:	2200      	movs	r2, #0
 801c5ea:	2100      	movs	r1, #0
 801c5ec:	4c23      	ldr	r4, [pc, #140]	@ (801c67c <calc_clipped_path+0x110>)
 801c5ee:	683b      	ldr	r3, [r7, #0]
 801c5f0:	e9c4 2204 	strd	r2, r2, [r4, #16]
 801c5f4:	f884 2020 	strb.w	r2, [r4, #32]
 801c5f8:	6262      	str	r2, [r4, #36]	@ 0x24
 801c5fa:	6832      	ldr	r2, [r6, #0]
 801c5fc:	4628      	mov	r0, r5
 801c5fe:	f8c4 a004 	str.w	sl, [r4, #4]
 801c602:	f8c4 800c 	str.w	r8, [r4, #12]
 801c606:	6023      	str	r3, [r4, #0]
 801c608:	60a2      	str	r2, [r4, #8]
 801c60a:	61a1      	str	r1, [r4, #24]
 801c60c:	61e1      	str	r1, [r4, #28]
 801c60e:	f7fe fde7 	bl	801b1e0 <calc_new_geometry>
 801c612:	4605      	mov	r5, r0
 801c614:	b948      	cbnz	r0, 801c62a <calc_clipped_path+0xbe>
 801c616:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c61a:	603a      	str	r2, [r7, #0]
 801c61c:	6033      	str	r3, [r6, #0]
 801c61e:	4648      	mov	r0, r9
 801c620:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c624:	f04f 0902 	mov.w	r9, #2
 801c628:	e7b3      	b.n	801c592 <calc_clipped_path+0x26>
 801c62a:	46a9      	mov	r9, r5
 801c62c:	f000 fa2a 	bl	801ca84 <nema_vg_set_error>
 801c630:	4648      	mov	r0, r9
 801c632:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c636:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c63a:	480f      	ldr	r0, [pc, #60]	@ (801c678 <calc_clipped_path+0x10c>)
 801c63c:	f7f5 f97e 	bl	801193c <nema_mat3x3_copy>
 801c640:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c644:	07da      	lsls	r2, r3, #31
 801c646:	d5cf      	bpl.n	801c5e8 <calc_clipped_path+0x7c>
 801c648:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c64c:	480a      	ldr	r0, [pc, #40]	@ (801c678 <calc_clipped_path+0x10c>)
 801c64e:	f7f5 f9c1 	bl	80119d4 <nema_mat3x3_mul>
 801c652:	e7c9      	b.n	801c5e8 <calc_clipped_path+0x7c>
 801c654:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c658:	4807      	ldr	r0, [pc, #28]	@ (801c678 <calc_clipped_path+0x10c>)
 801c65a:	f7f5 f96f 	bl	801193c <nema_mat3x3_copy>
 801c65e:	e7c3      	b.n	801c5e8 <calc_clipped_path+0x7c>
 801c660:	2008314c 	.word	0x2008314c
 801c664:	43fd8000 	.word	0x43fd8000
 801c668:	44bf6000 	.word	0x44bf6000
 801c66c:	20000144 	.word	0x20000144
 801c670:	20000140 	.word	0x20000140
 801c674:	20083180 	.word	0x20083180
 801c678:	20083184 	.word	0x20083184
 801c67c:	20083154 	.word	0x20083154
 801c680:	20083150 	.word	0x20083150

0801c684 <draw_clipped_path>:
 801c684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c688:	b0b2      	sub	sp, #200	@ 0xc8
 801c68a:	460e      	mov	r6, r1
 801c68c:	4605      	mov	r5, r0
 801c68e:	f000 f967 	bl	801c960 <nema_vg_get_context>
 801c692:	4f84      	ldr	r7, [pc, #528]	@ (801c8a4 <draw_clipped_path+0x220>)
 801c694:	6842      	ldr	r2, [r0, #4]
 801c696:	e9d0 130d 	ldrd	r1, r3, [r0, #52]	@ 0x34
 801c69a:	089b      	lsrs	r3, r3, #2
 801c69c:	9307      	str	r3, [sp, #28]
 801c69e:	9106      	str	r1, [sp, #24]
 801c6a0:	6038      	str	r0, [r7, #0]
 801c6a2:	2a00      	cmp	r2, #0
 801c6a4:	d056      	beq.n	801c754 <draw_clipped_path+0xd0>
 801c6a6:	6881      	ldr	r1, [r0, #8]
 801c6a8:	2900      	cmp	r1, #0
 801c6aa:	d053      	beq.n	801c754 <draw_clipped_path+0xd0>
 801c6ac:	6889      	ldr	r1, [r1, #8]
 801c6ae:	6893      	ldr	r3, [r2, #8]
 801c6b0:	aa07      	add	r2, sp, #28
 801c6b2:	e9cd 2100 	strd	r2, r1, [sp]
 801c6b6:	4628      	mov	r0, r5
 801c6b8:	aa06      	add	r2, sp, #24
 801c6ba:	4631      	mov	r1, r6
 801c6bc:	f7ff ff56 	bl	801c56c <calc_clipped_path>
 801c6c0:	4b79      	ldr	r3, [pc, #484]	@ (801c8a8 <draw_clipped_path+0x224>)
 801c6c2:	4680      	mov	r8, r0
 801c6c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c6c6:	683c      	ldr	r4, [r7, #0]
 801c6c8:	2b02      	cmp	r3, #2
 801c6ca:	d002      	beq.n	801c6d2 <draw_clipped_path+0x4e>
 801c6cc:	2800      	cmp	r0, #0
 801c6ce:	f000 80b4 	beq.w	801c83a <draw_clipped_path+0x1b6>
 801c6d2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c6d4:	06db      	lsls	r3, r3, #27
 801c6d6:	f140 8087 	bpl.w	801c7e8 <draw_clipped_path+0x164>
 801c6da:	e9dd 2a06 	ldrd	r2, sl, [sp, #24]
 801c6de:	ac02      	add	r4, sp, #8
 801c6e0:	4620      	mov	r0, r4
 801c6e2:	2100      	movs	r1, #0
 801c6e4:	f10d 0920 	add.w	r9, sp, #32
 801c6e8:	f7e6 fbba 	bl	8002e60 <nema_buffer_create_pool>
 801c6ec:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c6f0:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 801c6f4:	4648      	mov	r0, r9
 801c6f6:	f7e6 fbd5 	bl	8002ea4 <nema_buffer_map>
 801c6fa:	f10d 0830 	add.w	r8, sp, #48	@ 0x30
 801c6fe:	ea4f 028a 	mov.w	r2, sl, lsl #2
 801c702:	4620      	mov	r0, r4
 801c704:	2100      	movs	r1, #0
 801c706:	f7e6 fbab 	bl	8002e60 <nema_buffer_create_pool>
 801c70a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c70e:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
 801c712:	4640      	mov	r0, r8
 801c714:	f7e6 fbc6 	bl	8002ea4 <nema_buffer_map>
 801c718:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c71a:	2b00      	cmp	r3, #0
 801c71c:	d076      	beq.n	801c80c <draw_clipped_path+0x188>
 801c71e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c720:	2a00      	cmp	r2, #0
 801c722:	d070      	beq.n	801c806 <draw_clipped_path+0x182>
 801c724:	a907      	add	r1, sp, #28
 801c726:	e9cd 1200 	strd	r1, r2, [sp]
 801c72a:	4628      	mov	r0, r5
 801c72c:	aa06      	add	r2, sp, #24
 801c72e:	4631      	mov	r1, r6
 801c730:	f7ff ff1c 	bl	801c56c <calc_clipped_path>
 801c734:	4604      	mov	r4, r0
 801c736:	2800      	cmp	r0, #0
 801c738:	f000 809a 	beq.w	801c870 <draw_clipped_path+0x1ec>
 801c73c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c73e:	b113      	cbz	r3, 801c746 <draw_clipped_path+0xc2>
 801c740:	4648      	mov	r0, r9
 801c742:	f7e6 fbb1 	bl	8002ea8 <nema_buffer_destroy>
 801c746:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c748:	2b00      	cmp	r3, #0
 801c74a:	d04e      	beq.n	801c7ea <draw_clipped_path+0x166>
 801c74c:	4640      	mov	r0, r8
 801c74e:	f7e6 fbab 	bl	8002ea8 <nema_buffer_destroy>
 801c752:	e04a      	b.n	801c7ea <draw_clipped_path+0x166>
 801c754:	edd6 7a35 	vldr	s15, [r6, #212]	@ 0xd4
 801c758:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c75c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801c8ac <draw_clipped_path+0x228>
 801c760:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c764:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 801c8b0 <draw_clipped_path+0x22c>
 801c768:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c76c:	2201      	movs	r2, #1
 801c76e:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c772:	4950      	ldr	r1, [pc, #320]	@ (801c8b4 <draw_clipped_path+0x230>)
 801c774:	4b50      	ldr	r3, [pc, #320]	@ (801c8b8 <draw_clipped_path+0x234>)
 801c776:	4851      	ldr	r0, [pc, #324]	@ (801c8bc <draw_clipped_path+0x238>)
 801c778:	601a      	str	r2, [r3, #0]
 801c77a:	edc1 7a00 	vstr	s15, [r1]
 801c77e:	edc0 6a00 	vstr	s13, [r0]
 801c782:	f000 f8ed 	bl	801c960 <nema_vg_get_context>
 801c786:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c78a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 801c78c:	4c4c      	ldr	r4, [pc, #304]	@ (801c8c0 <draw_clipped_path+0x23c>)
 801c78e:	ea41 0302 	orr.w	r3, r1, r2
 801c792:	f003 0301 	and.w	r3, r3, #1
 801c796:	6038      	str	r0, [r7, #0]
 801c798:	7023      	strb	r3, [r4, #0]
 801c79a:	b133      	cbz	r3, 801c7aa <draw_clipped_path+0x126>
 801c79c:	07d4      	lsls	r4, r2, #31
 801c79e:	d43d      	bmi.n	801c81c <draw_clipped_path+0x198>
 801c7a0:	07ca      	lsls	r2, r1, #31
 801c7a2:	d42a      	bmi.n	801c7fa <draw_clipped_path+0x176>
 801c7a4:	4847      	ldr	r0, [pc, #284]	@ (801c8c4 <draw_clipped_path+0x240>)
 801c7a6:	f7f5 f8bb 	bl	8011920 <nema_mat3x3_load_identity>
 801c7aa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c7ae:	2300      	movs	r3, #0
 801c7b0:	2200      	movs	r2, #0
 801c7b2:	4c3d      	ldr	r4, [pc, #244]	@ (801c8a8 <draw_clipped_path+0x224>)
 801c7b4:	9306      	str	r3, [sp, #24]
 801c7b6:	6020      	str	r0, [r4, #0]
 801c7b8:	4628      	mov	r0, r5
 801c7ba:	6063      	str	r3, [r4, #4]
 801c7bc:	e9c4 3303 	strd	r3, r3, [r4, #12]
 801c7c0:	6163      	str	r3, [r4, #20]
 801c7c2:	f884 3020 	strb.w	r3, [r4, #32]
 801c7c6:	6263      	str	r3, [r4, #36]	@ 0x24
 801c7c8:	60a1      	str	r1, [r4, #8]
 801c7ca:	9307      	str	r3, [sp, #28]
 801c7cc:	61a2      	str	r2, [r4, #24]
 801c7ce:	61e2      	str	r2, [r4, #28]
 801c7d0:	f7fe fd06 	bl	801b1e0 <calc_new_geometry>
 801c7d4:	b968      	cbnz	r0, 801c7f2 <draw_clipped_path+0x16e>
 801c7d6:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c7da:	683c      	ldr	r4, [r7, #0]
 801c7dc:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801c7e0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c7e2:	06db      	lsls	r3, r3, #27
 801c7e4:	f53f af79 	bmi.w	801c6da <draw_clipped_path+0x56>
 801c7e8:	2402      	movs	r4, #2
 801c7ea:	4620      	mov	r0, r4
 801c7ec:	b032      	add	sp, #200	@ 0xc8
 801c7ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c7f2:	f000 f947 	bl	801ca84 <nema_vg_set_error>
 801c7f6:	683c      	ldr	r4, [r7, #0]
 801c7f8:	e76b      	b.n	801c6d2 <draw_clipped_path+0x4e>
 801c7fa:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c7fe:	4831      	ldr	r0, [pc, #196]	@ (801c8c4 <draw_clipped_path+0x240>)
 801c800:	f7f5 f89c 	bl	801193c <nema_mat3x3_copy>
 801c804:	e7d1      	b.n	801c7aa <draw_clipped_path+0x126>
 801c806:	4648      	mov	r0, r9
 801c808:	f7e6 fb4e 	bl	8002ea8 <nema_buffer_destroy>
 801c80c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c80e:	2b00      	cmp	r3, #0
 801c810:	d0ea      	beq.n	801c7e8 <draw_clipped_path+0x164>
 801c812:	4640      	mov	r0, r8
 801c814:	f7e6 fb48 	bl	8002ea8 <nema_buffer_destroy>
 801c818:	2402      	movs	r4, #2
 801c81a:	e7e6      	b.n	801c7ea <draw_clipped_path+0x166>
 801c81c:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c820:	4828      	ldr	r0, [pc, #160]	@ (801c8c4 <draw_clipped_path+0x240>)
 801c822:	f7f5 f88b 	bl	801193c <nema_mat3x3_copy>
 801c826:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c82a:	07d9      	lsls	r1, r3, #31
 801c82c:	d5bd      	bpl.n	801c7aa <draw_clipped_path+0x126>
 801c82e:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c832:	4824      	ldr	r0, [pc, #144]	@ (801c8c4 <draw_clipped_path+0x240>)
 801c834:	f7f5 f8ce 	bl	80119d4 <nema_mat3x3_mul>
 801c838:	e7b7      	b.n	801c7aa <draw_clipped_path+0x126>
 801c83a:	4629      	mov	r1, r5
 801c83c:	2288      	movs	r2, #136	@ 0x88
 801c83e:	a810      	add	r0, sp, #64	@ 0x40
 801c840:	f016 f94b 	bl	8032ada <memcpy>
 801c844:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801c848:	6898      	ldr	r0, [r3, #8]
 801c84a:	6892      	ldr	r2, [r2, #8]
 801c84c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801c850:	9000      	str	r0, [sp, #0]
 801c852:	a810      	add	r0, sp, #64	@ 0x40
 801c854:	f000 fe54 	bl	801d500 <nema_vg_path_set_shape>
 801c858:	2201      	movs	r2, #1
 801c85a:	683b      	ldr	r3, [r7, #0]
 801c85c:	a810      	add	r0, sp, #64	@ 0x40
 801c85e:	779a      	strb	r2, [r3, #30]
 801c860:	4631      	mov	r1, r6
 801c862:	f7fb fde5 	bl	8018430 <nema_vg_draw_path>
 801c866:	683b      	ldr	r3, [r7, #0]
 801c868:	4604      	mov	r4, r0
 801c86a:	f883 801e 	strb.w	r8, [r3, #30]
 801c86e:	e7bc      	b.n	801c7ea <draw_clipped_path+0x166>
 801c870:	4629      	mov	r1, r5
 801c872:	2288      	movs	r2, #136	@ 0x88
 801c874:	a810      	add	r0, sp, #64	@ 0x40
 801c876:	f016 f930 	bl	8032ada <memcpy>
 801c87a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c87c:	9b07      	ldr	r3, [sp, #28]
 801c87e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c880:	9906      	ldr	r1, [sp, #24]
 801c882:	a810      	add	r0, sp, #64	@ 0x40
 801c884:	9400      	str	r4, [sp, #0]
 801c886:	f000 fe3b 	bl	801d500 <nema_vg_path_set_shape>
 801c88a:	2201      	movs	r2, #1
 801c88c:	683b      	ldr	r3, [r7, #0]
 801c88e:	a810      	add	r0, sp, #64	@ 0x40
 801c890:	779a      	strb	r2, [r3, #30]
 801c892:	4631      	mov	r1, r6
 801c894:	f7fb fdcc 	bl	8018430 <nema_vg_draw_path>
 801c898:	2200      	movs	r2, #0
 801c89a:	683b      	ldr	r3, [r7, #0]
 801c89c:	4604      	mov	r4, r0
 801c89e:	779a      	strb	r2, [r3, #30]
 801c8a0:	e74c      	b.n	801c73c <draw_clipped_path+0xb8>
 801c8a2:	bf00      	nop
 801c8a4:	20083150 	.word	0x20083150
 801c8a8:	20083154 	.word	0x20083154
 801c8ac:	43fd8000 	.word	0x43fd8000
 801c8b0:	44bf6000 	.word	0x44bf6000
 801c8b4:	20000140 	.word	0x20000140
 801c8b8:	2008314c 	.word	0x2008314c
 801c8bc:	20000144 	.word	0x20000144
 801c8c0:	20083180 	.word	0x20083180
 801c8c4:	20083184 	.word	0x20083184

0801c8c8 <context_reset>:
 801c8c8:	b570      	push	{r4, r5, r6, lr}
 801c8ca:	4c23      	ldr	r4, [pc, #140]	@ (801c958 <context_reset+0x90>)
 801c8cc:	6820      	ldr	r0, [r4, #0]
 801c8ce:	b110      	cbz	r0, 801c8d6 <context_reset+0xe>
 801c8d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c8d2:	069b      	lsls	r3, r3, #26
 801c8d4:	d43a      	bmi.n	801c94c <context_reset+0x84>
 801c8d6:	2300      	movs	r3, #0
 801c8d8:	6962      	ldr	r2, [r4, #20]
 801c8da:	e9c4 3300 	strd	r3, r3, [r4]
 801c8de:	60a3      	str	r3, [r4, #8]
 801c8e0:	b112      	cbz	r2, 801c8e8 <context_reset+0x20>
 801c8e2:	481e      	ldr	r0, [pc, #120]	@ (801c95c <context_reset+0x94>)
 801c8e4:	f7e6 fae0 	bl	8002ea8 <nema_buffer_destroy>
 801c8e8:	2300      	movs	r3, #0
 801c8ea:	2200      	movs	r2, #0
 801c8ec:	2602      	movs	r6, #2
 801c8ee:	f240 5501 	movw	r5, #1281	@ 0x501
 801c8f2:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
 801c8f6:	f04f 61f0 	mov.w	r1, #125829120	@ 0x7800000
 801c8fa:	e9c4 2203 	strd	r2, r2, [r4, #12]
 801c8fe:	e9c4 2205 	strd	r2, r2, [r4, #20]
 801c902:	6222      	str	r2, [r4, #32]
 801c904:	e9c4 220c 	strd	r2, r2, [r4, #48]	@ 0x30
 801c908:	e9c4 220e 	strd	r2, r2, [r4, #56]	@ 0x38
 801c90c:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
 801c910:	61e6      	str	r6, [r4, #28]
 801c912:	e9c4 5009 	strd	r5, r0, [r4, #36]	@ 0x24
 801c916:	62e1      	str	r1, [r4, #44]	@ 0x2c
 801c918:	6423      	str	r3, [r4, #64]	@ 0x40
 801c91a:	6463      	str	r3, [r4, #68]	@ 0x44
 801c91c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801c91e:	6723      	str	r3, [r4, #112]	@ 0x70
 801c920:	6523      	str	r3, [r4, #80]	@ 0x50
 801c922:	6763      	str	r3, [r4, #116]	@ 0x74
 801c924:	6563      	str	r3, [r4, #84]	@ 0x54
 801c926:	67a3      	str	r3, [r4, #120]	@ 0x78
 801c928:	65a3      	str	r3, [r4, #88]	@ 0x58
 801c92a:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801c92c:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801c92e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801c932:	6623      	str	r3, [r4, #96]	@ 0x60
 801c934:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801c938:	6663      	str	r3, [r4, #100]	@ 0x64
 801c93a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801c93e:	66a3      	str	r3, [r4, #104]	@ 0x68
 801c940:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801c944:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801c946:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801c94a:	bd70      	pop	{r4, r5, r6, pc}
 801c94c:	6883      	ldr	r3, [r0, #8]
 801c94e:	2b00      	cmp	r3, #0
 801c950:	d0c1      	beq.n	801c8d6 <context_reset+0xe>
 801c952:	f7e6 faa9 	bl	8002ea8 <nema_buffer_destroy>
 801c956:	e7be      	b.n	801c8d6 <context_reset+0xe>
 801c958:	20000148 	.word	0x20000148
 801c95c:	20000154 	.word	0x20000154

0801c960 <nema_vg_get_context>:
 801c960:	4800      	ldr	r0, [pc, #0]	@ (801c964 <nema_vg_get_context+0x4>)
 801c962:	4770      	bx	lr
 801c964:	20000148 	.word	0x20000148

0801c968 <stencil_buffer_create>:
 801c968:	b538      	push	{r3, r4, r5, lr}
 801c96a:	4605      	mov	r5, r0
 801c96c:	1cc8      	adds	r0, r1, #3
 801c96e:	bf48      	it	mi
 801c970:	1d88      	addmi	r0, r1, #6
 801c972:	1cd4      	adds	r4, r2, #3
 801c974:	bf48      	it	mi
 801c976:	1d94      	addmi	r4, r2, #6
 801c978:	1080      	asrs	r0, r0, #2
 801c97a:	0080      	lsls	r0, r0, #2
 801c97c:	f024 0203 	bic.w	r2, r4, #3
 801c980:	fb02 f200 	mul.w	r2, r2, r0
 801c984:	4619      	mov	r1, r3
 801c986:	4628      	mov	r0, r5
 801c988:	f7e6 fa6a 	bl	8002e60 <nema_buffer_create_pool>
 801c98c:	4628      	mov	r0, r5
 801c98e:	bd38      	pop	{r3, r4, r5, pc}

0801c990 <stencil_buffer_set>:
 801c990:	b082      	sub	sp, #8
 801c992:	b470      	push	{r4, r5, r6}
 801c994:	4606      	mov	r6, r0
 801c996:	460d      	mov	r5, r1
 801c998:	a803      	add	r0, sp, #12
 801c99a:	e880 000c 	stmia.w	r0, {r2, r3}
 801c99e:	4c15      	ldr	r4, [pc, #84]	@ (801c9f4 <stencil_buffer_set+0x64>)
 801c9a0:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801c9a2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801c9a6:	1cf3      	adds	r3, r6, #3
 801c9a8:	bf48      	it	mi
 801c9aa:	1db3      	addmi	r3, r6, #6
 801c9ac:	1cea      	adds	r2, r5, #3
 801c9ae:	bf48      	it	mi
 801c9b0:	1daa      	addmi	r2, r5, #6
 801c9b2:	f022 0203 	bic.w	r2, r2, #3
 801c9b6:	ee07 2a90 	vmov	s15, r2
 801c9ba:	f023 0303 	bic.w	r3, r3, #3
 801c9be:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c9c2:	ee07 3a90 	vmov	s15, r3
 801c9c6:	2100      	movs	r1, #0
 801c9c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c9cc:	61a1      	str	r1, [r4, #24]
 801c9ce:	61e1      	str	r1, [r4, #28]
 801c9d0:	6261      	str	r1, [r4, #36]	@ 0x24
 801c9d2:	6321      	str	r1, [r4, #48]	@ 0x30
 801c9d4:	4908      	ldr	r1, [pc, #32]	@ (801c9f8 <stencil_buffer_set+0x68>)
 801c9d6:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 801c9da:	600c      	str	r4, [r1, #0]
 801c9dc:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 801c9e0:	edc4 7a08 	vstr	s15, [r4, #32]
 801c9e4:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 801c9e8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 801c9ec:	bc70      	pop	{r4, r5, r6}
 801c9ee:	b002      	add	sp, #8
 801c9f0:	4770      	bx	lr
 801c9f2:	bf00      	nop
 801c9f4:	2008329c 	.word	0x2008329c
 801c9f8:	20000148 	.word	0x20000148

0801c9fc <nema_vg_get_stencil>:
 801c9fc:	4b01      	ldr	r3, [pc, #4]	@ (801ca04 <nema_vg_get_stencil+0x8>)
 801c9fe:	6818      	ldr	r0, [r3, #0]
 801ca00:	4770      	bx	lr
 801ca02:	bf00      	nop
 801ca04:	20000148 	.word	0x20000148

0801ca08 <lut_buffer_create>:
 801ca08:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ca0a:	4d1a      	ldr	r5, [pc, #104]	@ (801ca74 <lut_buffer_create+0x6c>)
 801ca0c:	b085      	sub	sp, #20
 801ca0e:	69ac      	ldr	r4, [r5, #24]
 801ca10:	b10c      	cbz	r4, 801ca16 <lut_buffer_create+0xe>
 801ca12:	b005      	add	sp, #20
 801ca14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca16:	466e      	mov	r6, sp
 801ca18:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801ca1c:	4630      	mov	r0, r6
 801ca1e:	4621      	mov	r1, r4
 801ca20:	f7e6 fa1e 	bl	8002e60 <nema_buffer_create_pool>
 801ca24:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 801ca28:	f105 060c 	add.w	r6, r5, #12
 801ca2c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801ca30:	4627      	mov	r7, r4
 801ca32:	4623      	mov	r3, r4
 801ca34:	696d      	ldr	r5, [r5, #20]
 801ca36:	26ff      	movs	r6, #255	@ 0xff
 801ca38:	e008      	b.n	801ca4c <lut_buffer_create+0x44>
 801ca3a:	2880      	cmp	r0, #128	@ 0x80
 801ca3c:	f1c4 0100 	rsb	r1, r4, #0
 801ca40:	d016      	beq.n	801ca70 <lut_buffer_create+0x68>
 801ca42:	bfcc      	ite	gt
 801ca44:	b2e1      	uxtbgt	r1, r4
 801ca46:	b2c9      	uxtble	r1, r1
 801ca48:	54a9      	strb	r1, [r5, r2]
 801ca4a:	3410      	adds	r4, #16
 801ca4c:	ea44 1213 	orr.w	r2, r4, r3, lsr #4
 801ca50:	3301      	adds	r3, #1
 801ca52:	f1a3 0172 	sub.w	r1, r3, #114	@ 0x72
 801ca56:	291e      	cmp	r1, #30
 801ca58:	f103 30ff 	add.w	r0, r3, #4294967295
 801ca5c:	b2d2      	uxtb	r2, r2
 801ca5e:	d9ec      	bls.n	801ca3a <lut_buffer_create+0x32>
 801ca60:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801ca64:	54ae      	strb	r6, [r5, r2]
 801ca66:	d1f0      	bne.n	801ca4a <lut_buffer_create+0x42>
 801ca68:	f885 60ff 	strb.w	r6, [r5, #255]	@ 0xff
 801ca6c:	b005      	add	sp, #20
 801ca6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca70:	54af      	strb	r7, [r5, r2]
 801ca72:	e7ea      	b.n	801ca4a <lut_buffer_create+0x42>
 801ca74:	20000148 	.word	0x20000148

0801ca78 <nema_vg_set_fill_rule>:
 801ca78:	4b01      	ldr	r3, [pc, #4]	@ (801ca80 <nema_vg_set_fill_rule+0x8>)
 801ca7a:	7718      	strb	r0, [r3, #28]
 801ca7c:	4770      	bx	lr
 801ca7e:	bf00      	nop
 801ca80:	20000148 	.word	0x20000148

0801ca84 <nema_vg_set_error>:
 801ca84:	4a02      	ldr	r2, [pc, #8]	@ (801ca90 <nema_vg_set_error+0xc>)
 801ca86:	6a13      	ldr	r3, [r2, #32]
 801ca88:	4318      	orrs	r0, r3
 801ca8a:	6210      	str	r0, [r2, #32]
 801ca8c:	4770      	bx	lr
 801ca8e:	bf00      	nop
 801ca90:	20000148 	.word	0x20000148

0801ca94 <nema_vg_set_blend>:
 801ca94:	4b01      	ldr	r3, [pc, #4]	@ (801ca9c <nema_vg_set_blend+0x8>)
 801ca96:	6258      	str	r0, [r3, #36]	@ 0x24
 801ca98:	4770      	bx	lr
 801ca9a:	bf00      	nop
 801ca9c:	20000148 	.word	0x20000148

0801caa0 <nema_vg_set_quality>:
 801caa0:	06c2      	lsls	r2, r0, #27
 801caa2:	bf4d      	iteet	mi
 801caa4:	2200      	movmi	r2, #0
 801caa6:	f04f 62f0 	movpl.w	r2, #125829120	@ 0x7800000
 801caaa:	f04f 7100 	movpl.w	r1, #33554432	@ 0x2000000
 801caae:	4611      	movmi	r1, r2
 801cab0:	4b02      	ldr	r3, [pc, #8]	@ (801cabc <nema_vg_set_quality+0x1c>)
 801cab2:	7758      	strb	r0, [r3, #29]
 801cab4:	e9c3 120a 	strd	r1, r2, [r3, #40]	@ 0x28
 801cab8:	4770      	bx	lr
 801caba:	bf00      	nop
 801cabc:	20000148 	.word	0x20000148

0801cac0 <nema_vg_set_global_matrix>:
 801cac0:	2800      	cmp	r0, #0
 801cac2:	d034      	beq.n	801cb2e <nema_vg_set_global_matrix+0x6e>
 801cac4:	b510      	push	{r4, lr}
 801cac6:	4c1e      	ldr	r4, [pc, #120]	@ (801cb40 <nema_vg_set_global_matrix+0x80>)
 801cac8:	6803      	ldr	r3, [r0, #0]
 801caca:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801cacc:	6803      	ldr	r3, [r0, #0]
 801cace:	6723      	str	r3, [r4, #112]	@ 0x70
 801cad0:	6843      	ldr	r3, [r0, #4]
 801cad2:	6523      	str	r3, [r4, #80]	@ 0x50
 801cad4:	6843      	ldr	r3, [r0, #4]
 801cad6:	6763      	str	r3, [r4, #116]	@ 0x74
 801cad8:	6883      	ldr	r3, [r0, #8]
 801cada:	6563      	str	r3, [r4, #84]	@ 0x54
 801cadc:	6883      	ldr	r3, [r0, #8]
 801cade:	67a3      	str	r3, [r4, #120]	@ 0x78
 801cae0:	68c3      	ldr	r3, [r0, #12]
 801cae2:	65a3      	str	r3, [r4, #88]	@ 0x58
 801cae4:	68c3      	ldr	r3, [r0, #12]
 801cae6:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801cae8:	6903      	ldr	r3, [r0, #16]
 801caea:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801caec:	6903      	ldr	r3, [r0, #16]
 801caee:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801caf2:	6943      	ldr	r3, [r0, #20]
 801caf4:	6623      	str	r3, [r4, #96]	@ 0x60
 801caf6:	6943      	ldr	r3, [r0, #20]
 801caf8:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801cafc:	6983      	ldr	r3, [r0, #24]
 801cafe:	6663      	str	r3, [r4, #100]	@ 0x64
 801cb00:	6983      	ldr	r3, [r0, #24]
 801cb02:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801cb06:	69c3      	ldr	r3, [r0, #28]
 801cb08:	66a3      	str	r3, [r4, #104]	@ 0x68
 801cb0a:	69c3      	ldr	r3, [r0, #28]
 801cb0c:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801cb10:	6a03      	ldr	r3, [r0, #32]
 801cb12:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801cb14:	6a03      	ldr	r3, [r0, #32]
 801cb16:	f104 0070 	add.w	r0, r4, #112	@ 0x70
 801cb1a:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801cb1e:	f7f5 f84f 	bl	8011bc0 <nema_mat3x3_invert>
 801cb22:	b950      	cbnz	r0, 801cb3a <nema_vg_set_global_matrix+0x7a>
 801cb24:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cb26:	f043 0301 	orr.w	r3, r3, #1
 801cb2a:	6323      	str	r3, [r4, #48]	@ 0x30
 801cb2c:	bd10      	pop	{r4, pc}
 801cb2e:	4a04      	ldr	r2, [pc, #16]	@ (801cb40 <nema_vg_set_global_matrix+0x80>)
 801cb30:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cb32:	f023 0301 	bic.w	r3, r3, #1
 801cb36:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb38:	4770      	bx	lr
 801cb3a:	f44f 2080 	mov.w	r0, #262144	@ 0x40000
 801cb3e:	bd10      	pop	{r4, pc}
 801cb40:	20000148 	.word	0x20000148

0801cb44 <nema_vg_handle_large_coords>:
 801cb44:	4a08      	ldr	r2, [pc, #32]	@ (801cb68 <nema_vg_handle_large_coords+0x24>)
 801cb46:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cb48:	b130      	cbz	r0, 801cb58 <nema_vg_handle_large_coords+0x14>
 801cb4a:	f043 0304 	orr.w	r3, r3, #4
 801cb4e:	b939      	cbnz	r1, 801cb60 <nema_vg_handle_large_coords+0x1c>
 801cb50:	f023 0310 	bic.w	r3, r3, #16
 801cb54:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb56:	4770      	bx	lr
 801cb58:	f023 0304 	bic.w	r3, r3, #4
 801cb5c:	2900      	cmp	r1, #0
 801cb5e:	d0f7      	beq.n	801cb50 <nema_vg_handle_large_coords+0xc>
 801cb60:	f043 0310 	orr.w	r3, r3, #16
 801cb64:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb66:	4770      	bx	lr
 801cb68:	20000148 	.word	0x20000148

0801cb6c <nema_vg_paint_create>:
 801cb6c:	b538      	push	{r3, r4, r5, lr}
 801cb6e:	20e0      	movs	r0, #224	@ 0xe0
 801cb70:	f7e6 f8f4 	bl	8002d5c <nema_host_malloc>
 801cb74:	4604      	mov	r4, r0
 801cb76:	b1e8      	cbz	r0, 801cbb4 <nema_vg_paint_create+0x48>
 801cb78:	2500      	movs	r5, #0
 801cb7a:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801cb7e:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 801cb82:	f8c0 30d4 	str.w	r3, [r0, #212]	@ 0xd4
 801cb86:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
 801cb8a:	f880 502c 	strb.w	r5, [r0, #44]	@ 0x2c
 801cb8e:	f880 50dd 	strb.w	r5, [r0, #221]	@ 0xdd
 801cb92:	f880 50d0 	strb.w	r5, [r0, #208]	@ 0xd0
 801cb96:	e9c0 250c 	strd	r2, r5, [r0, #48]	@ 0x30
 801cb9a:	e9c0 5500 	strd	r5, r5, [r0]
 801cb9e:	3038      	adds	r0, #56	@ 0x38
 801cba0:	f7f4 febe 	bl	8011920 <nema_mat3x3_load_identity>
 801cba4:	f104 0008 	add.w	r0, r4, #8
 801cba8:	f7f4 feba 	bl	8011920 <nema_mat3x3_load_identity>
 801cbac:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
 801cbb0:	4620      	mov	r0, r4
 801cbb2:	bd38      	pop	{r3, r4, r5, pc}
 801cbb4:	2001      	movs	r0, #1
 801cbb6:	f7ff ff65 	bl	801ca84 <nema_vg_set_error>
 801cbba:	4620      	mov	r0, r4
 801cbbc:	bd38      	pop	{r3, r4, r5, pc}
 801cbbe:	bf00      	nop

0801cbc0 <nema_vg_paint_set_type>:
 801cbc0:	b138      	cbz	r0, 801cbd2 <nema_vg_paint_set_type+0x12>
 801cbc2:	2904      	cmp	r1, #4
 801cbc4:	d802      	bhi.n	801cbcc <nema_vg_paint_set_type+0xc>
 801cbc6:	f880 10dd 	strb.w	r1, [r0, #221]	@ 0xdd
 801cbca:	4770      	bx	lr
 801cbcc:	2008      	movs	r0, #8
 801cbce:	f7ff bf59 	b.w	801ca84 <nema_vg_set_error>
 801cbd2:	2001      	movs	r0, #1
 801cbd4:	f7ff bf56 	b.w	801ca84 <nema_vg_set_error>

0801cbd8 <nema_vg_paint_lock_tran_to_path>:
 801cbd8:	b160      	cbz	r0, 801cbf4 <nema_vg_paint_lock_tran_to_path+0x1c>
 801cbda:	f890 30dc 	ldrb.w	r3, [r0, #220]	@ 0xdc
 801cbde:	b121      	cbz	r1, 801cbea <nema_vg_paint_lock_tran_to_path+0x12>
 801cbe0:	f043 0301 	orr.w	r3, r3, #1
 801cbe4:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cbe8:	4770      	bx	lr
 801cbea:	f023 0301 	bic.w	r3, r3, #1
 801cbee:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cbf2:	4770      	bx	lr
 801cbf4:	2001      	movs	r0, #1
 801cbf6:	f7ff bf45 	b.w	801ca84 <nema_vg_set_error>
 801cbfa:	bf00      	nop

0801cbfc <nema_vg_grad_create>:
 801cbfc:	b530      	push	{r4, r5, lr}
 801cbfe:	2010      	movs	r0, #16
 801cc00:	b085      	sub	sp, #20
 801cc02:	f7e6 f8ab 	bl	8002d5c <nema_host_malloc>
 801cc06:	466d      	mov	r5, sp
 801cc08:	4604      	mov	r4, r0
 801cc0a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cc0e:	4628      	mov	r0, r5
 801cc10:	2100      	movs	r1, #0
 801cc12:	f7e6 f925 	bl	8002e60 <nema_buffer_create_pool>
 801cc16:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801cc1a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cc1e:	4620      	mov	r0, r4
 801cc20:	b005      	add	sp, #20
 801cc22:	bd30      	pop	{r4, r5, pc}

0801cc24 <nema_vg_grad_destroy>:
 801cc24:	b140      	cbz	r0, 801cc38 <nema_vg_grad_destroy+0x14>
 801cc26:	b510      	push	{r4, lr}
 801cc28:	4604      	mov	r4, r0
 801cc2a:	f7e6 f93d 	bl	8002ea8 <nema_buffer_destroy>
 801cc2e:	4620      	mov	r0, r4
 801cc30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cc34:	f7e6 b890 	b.w	8002d58 <nema_host_free>
 801cc38:	4770      	bx	lr
 801cc3a:	bf00      	nop

0801cc3c <nema_vg_grad_set>:
 801cc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc40:	ed2d 8b10 	vpush	{d8-d15}
 801cc44:	291f      	cmp	r1, #31
 801cc46:	b091      	sub	sp, #68	@ 0x44
 801cc48:	4680      	mov	r8, r0
 801cc4a:	4615      	mov	r5, r2
 801cc4c:	9304      	str	r3, [sp, #16]
 801cc4e:	f300 8293 	bgt.w	801d178 <nema_vg_grad_set+0x53c>
 801cc52:	460f      	mov	r7, r1
 801cc54:	2100      	movs	r1, #0
 801cc56:	2601      	movs	r6, #1
 801cc58:	460c      	mov	r4, r1
 801cc5a:	4608      	mov	r0, r1
 801cc5c:	4633      	mov	r3, r6
 801cc5e:	2240      	movs	r2, #64	@ 0x40
 801cc60:	f7f4 f88c 	bl	8010d7c <nema_set_clip_temp>
 801cc64:	f8d8 100c 	ldr.w	r1, [r8, #12]
 801cc68:	4633      	mov	r3, r6
 801cc6a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801cc6e:	4630      	mov	r0, r6
 801cc70:	2240      	movs	r2, #64	@ 0x40
 801cc72:	9600      	str	r6, [sp, #0]
 801cc74:	f7f3 ff7e 	bl	8010b74 <nema_bind_tex>
 801cc78:	f04f 33ff 	mov.w	r3, #4294967295
 801cc7c:	4631      	mov	r1, r6
 801cc7e:	461a      	mov	r2, r3
 801cc80:	4630      	mov	r0, r6
 801cc82:	f001 f9d5 	bl	801e030 <nema_set_blend>
 801cc86:	4630      	mov	r0, r6
 801cc88:	f7f4 f8ae 	bl	8010de8 <nema_enable_gradient>
 801cc8c:	ed9f 6a80 	vldr	s12, [pc, #512]	@ 801ce90 <nema_vg_grad_set+0x254>
 801cc90:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cc94:	4622      	mov	r2, r4
 801cc96:	4620      	mov	r0, r4
 801cc98:	eb05 0487 	add.w	r4, r5, r7, lsl #2
 801cc9c:	b912      	cbnz	r2, 801cca4 <nema_vg_grad_set+0x68>
 801cc9e:	2801      	cmp	r0, #1
 801cca0:	f340 80c3 	ble.w	801ce2a <nema_vg_grad_set+0x1ee>
 801cca4:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801cca8:	3201      	adds	r2, #1
 801ccaa:	4297      	cmp	r7, r2
 801ccac:	ed93 7a00 	vldr	s14, [r3]
 801ccb0:	f340 80c0 	ble.w	801ce34 <nema_vg_grad_set+0x1f8>
 801ccb4:	0093      	lsls	r3, r2, #2
 801ccb6:	18e9      	adds	r1, r5, r3
 801ccb8:	edd1 7a00 	vldr	s15, [r1]
 801ccbc:	eef4 7ac7 	vcmpe.f32	s15, s14
 801ccc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccc4:	f100 80bc 	bmi.w	801ce40 <nema_vg_grad_set+0x204>
 801ccc8:	3304      	adds	r3, #4
 801ccca:	442b      	add	r3, r5
 801cccc:	4601      	mov	r1, r0
 801ccce:	e00d      	b.n	801ccec <nema_vg_grad_set+0xb0>
 801ccd0:	42a3      	cmp	r3, r4
 801ccd2:	f102 0201 	add.w	r2, r2, #1
 801ccd6:	d022      	beq.n	801cd1e <nema_vg_grad_set+0xe2>
 801ccd8:	ecb3 7a01 	vldmia	r3!, {s14}
 801ccdc:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cce4:	f300 80ac 	bgt.w	801ce40 <nema_vg_grad_set+0x204>
 801cce8:	eef0 7a47 	vmov.f32	s15, s14
 801ccec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ccf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccf4:	dbec      	blt.n	801ccd0 <nema_vg_grad_set+0x94>
 801ccf6:	eef4 7ae6 	vcmpe.f32	s15, s13
 801ccfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccfe:	d8e7      	bhi.n	801ccd0 <nema_vg_grad_set+0x94>
 801cd00:	2900      	cmp	r1, #0
 801cd02:	f040 8082 	bne.w	801ce0a <nema_vg_grad_set+0x1ce>
 801cd06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cd0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd0e:	f300 8239 	bgt.w	801d184 <nema_vg_grad_set+0x548>
 801cd12:	42a3      	cmp	r3, r4
 801cd14:	f04f 0101 	mov.w	r1, #1
 801cd18:	f102 0201 	add.w	r2, r2, #1
 801cd1c:	d1dc      	bne.n	801ccd8 <nema_vg_grad_set+0x9c>
 801cd1e:	2900      	cmp	r1, #0
 801cd20:	f340 808c 	ble.w	801ce3c <nema_vg_grad_set+0x200>
 801cd24:	eddf ca5e 	vldr	s25, [pc, #376]	@ 801cea0 <nema_vg_grad_set+0x264>
 801cd28:	2600      	movs	r6, #0
 801cd2a:	f04f 0b01 	mov.w	fp, #1
 801cd2e:	eeb0 da6c 	vmov.f32	s26, s25
 801cd32:	eef0 da6c 	vmov.f32	s27, s25
 801cd36:	eeb0 ea6c 	vmov.f32	s28, s25
 801cd3a:	eeb0 aa6c 	vmov.f32	s20, s25
 801cd3e:	eef0 8a6c 	vmov.f32	s17, s25
 801cd42:	eeb0 9a6c 	vmov.f32	s18, s25
 801cd46:	eef0 9a6c 	vmov.f32	s19, s25
 801cd4a:	46b1      	mov	r9, r6
 801cd4c:	46b0      	mov	r8, r6
 801cd4e:	46da      	mov	sl, fp
 801cd50:	eddf aa4f 	vldr	s21, [pc, #316]	@ 801ce90 <nema_vg_grad_set+0x254>
 801cd54:	eef7 ba00 	vmov.f32	s23, #112	@ 0x3f800000  1.0
 801cd58:	ed9f ca4e 	vldr	s24, [pc, #312]	@ 801ce94 <nema_vg_grad_set+0x258>
 801cd5c:	ed9f 8a50 	vldr	s16, [pc, #320]	@ 801cea0 <nema_vg_grad_set+0x264>
 801cd60:	f8cd b014 	str.w	fp, [sp, #20]
 801cd64:	b91e      	cbnz	r6, 801cd6e <nema_vg_grad_set+0x132>
 801cd66:	f1b8 0f01 	cmp.w	r8, #1
 801cd6a:	f340 8201 	ble.w	801d170 <nema_vg_grad_set+0x534>
 801cd6e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cd72:	ed93 7a00 	vldr	s14, [r3]
 801cd76:	1c72      	adds	r2, r6, #1
 801cd78:	4297      	cmp	r7, r2
 801cd7a:	f340 817d 	ble.w	801d078 <nema_vg_grad_set+0x43c>
 801cd7e:	0093      	lsls	r3, r2, #2
 801cd80:	18e9      	adds	r1, r5, r3
 801cd82:	edd1 7a00 	vldr	s15, [r1]
 801cd86:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801cd8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd8e:	f300 812d 	bgt.w	801cfec <nema_vg_grad_set+0x3b0>
 801cd92:	3304      	adds	r3, #4
 801cd94:	442b      	add	r3, r5
 801cd96:	4641      	mov	r1, r8
 801cd98:	e00c      	b.n	801cdb4 <nema_vg_grad_set+0x178>
 801cd9a:	429c      	cmp	r4, r3
 801cd9c:	f102 0201 	add.w	r2, r2, #1
 801cda0:	d01f      	beq.n	801cde2 <nema_vg_grad_set+0x1a6>
 801cda2:	ecb3 7a01 	vldmia	r3!, {s14}
 801cda6:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cdaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdae:	dc7b      	bgt.n	801cea8 <nema_vg_grad_set+0x26c>
 801cdb0:	eef0 7a47 	vmov.f32	s15, s14
 801cdb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cdb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdbc:	dbed      	blt.n	801cd9a <nema_vg_grad_set+0x15e>
 801cdbe:	eef4 7aeb 	vcmpe.f32	s15, s23
 801cdc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdc6:	d8e8      	bhi.n	801cd9a <nema_vg_grad_set+0x15e>
 801cdc8:	bb39      	cbnz	r1, 801ce1a <nema_vg_grad_set+0x1de>
 801cdca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cdce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdd2:	f300 819c 	bgt.w	801d10e <nema_vg_grad_set+0x4d2>
 801cdd6:	429c      	cmp	r4, r3
 801cdd8:	f04f 0101 	mov.w	r1, #1
 801cddc:	f102 0201 	add.w	r2, r2, #1
 801cde0:	d1df      	bne.n	801cda2 <nema_vg_grad_set+0x166>
 801cde2:	9b05      	ldr	r3, [sp, #20]
 801cde4:	2b00      	cmp	r3, #0
 801cde6:	f000 818d 	beq.w	801d104 <nema_vg_grad_set+0x4c8>
 801cdea:	2900      	cmp	r1, #0
 801cdec:	f340 81cc 	ble.w	801d188 <nema_vg_grad_set+0x54c>
 801cdf0:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cdf4:	edd3 6a00 	vldr	s13, [r3]
 801cdf8:	eef4 6aeb 	vcmpe.f32	s13, s23
 801cdfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ce00:	f100 814a 	bmi.w	801d098 <nema_vg_grad_set+0x45c>
 801ce04:	f8dd b014 	ldr.w	fp, [sp, #20]
 801ce08:	e052      	b.n	801ceb0 <nema_vg_grad_set+0x274>
 801ce0a:	3101      	adds	r1, #1
 801ce0c:	2901      	cmp	r1, #1
 801ce0e:	f77f af5f 	ble.w	801ccd0 <nema_vg_grad_set+0x94>
 801ce12:	4281      	cmp	r1, r0
 801ce14:	d086      	beq.n	801cd24 <nema_vg_grad_set+0xe8>
 801ce16:	4608      	mov	r0, r1
 801ce18:	e740      	b.n	801cc9c <nema_vg_grad_set+0x60>
 801ce1a:	3101      	adds	r1, #1
 801ce1c:	2901      	cmp	r1, #1
 801ce1e:	ddbc      	ble.n	801cd9a <nema_vg_grad_set+0x15e>
 801ce20:	46b1      	mov	r9, r6
 801ce22:	f04f 0b00 	mov.w	fp, #0
 801ce26:	4616      	mov	r6, r2
 801ce28:	e042      	b.n	801ceb0 <nema_vg_grad_set+0x274>
 801ce2a:	4297      	cmp	r7, r2
 801ce2c:	eeb0 7a46 	vmov.f32	s14, s12
 801ce30:	f73f af40 	bgt.w	801ccb4 <nema_vg_grad_set+0x78>
 801ce34:	4601      	mov	r1, r0
 801ce36:	2900      	cmp	r1, #0
 801ce38:	f73f af74 	bgt.w	801cd24 <nema_vg_grad_set+0xe8>
 801ce3c:	f47f af72 	bne.w	801cd24 <nema_vg_grad_set+0xe8>
 801ce40:	4b15      	ldr	r3, [pc, #84]	@ (801ce98 <nema_vg_grad_set+0x25c>)
 801ce42:	ac0c      	add	r4, sp, #48	@ 0x30
 801ce44:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801ce46:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801ce4a:	2100      	movs	r1, #0
 801ce4c:	2500      	movs	r5, #0
 801ce4e:	ab08      	add	r3, sp, #32
 801ce50:	4e12      	ldr	r6, [pc, #72]	@ (801ce9c <nema_vg_grad_set+0x260>)
 801ce52:	4608      	mov	r0, r1
 801ce54:	9300      	str	r3, [sp, #0]
 801ce56:	2240      	movs	r2, #64	@ 0x40
 801ce58:	2301      	movs	r3, #1
 801ce5a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801ce5e:	9508      	str	r5, [sp, #32]
 801ce60:	9509      	str	r5, [sp, #36]	@ 0x24
 801ce62:	950a      	str	r5, [sp, #40]	@ 0x28
 801ce64:	960b      	str	r6, [sp, #44]	@ 0x2c
 801ce66:	f7f4 fc5f 	bl	8011728 <nema_interpolate_rect_colors>
 801ce6a:	f04f 33ff 	mov.w	r3, #4294967295
 801ce6e:	2100      	movs	r1, #0
 801ce70:	9300      	str	r3, [sp, #0]
 801ce72:	4608      	mov	r0, r1
 801ce74:	2301      	movs	r3, #1
 801ce76:	2240      	movs	r2, #64	@ 0x40
 801ce78:	f7f4 fa6c 	bl	8011354 <nema_fill_rect>
 801ce7c:	2000      	movs	r0, #0
 801ce7e:	f7f3 ffb3 	bl	8010de8 <nema_enable_gradient>
 801ce82:	f7f3 ff93 	bl	8010dac <nema_set_clip_pop>
 801ce86:	b011      	add	sp, #68	@ 0x44
 801ce88:	ecbd 8b10 	vpop	{d8-d15}
 801ce8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce90:	c77fff00 	.word	0xc77fff00
 801ce94:	427c0000 	.word	0x427c0000
 801ce98:	08033658 	.word	0x08033658
 801ce9c:	437f0000 	.word	0x437f0000
 801cea0:	00000000 	.word	0x00000000
 801cea4:	427e0000 	.word	0x427e0000
 801cea8:	2300      	movs	r3, #0
 801ceaa:	f04f 0b01 	mov.w	fp, #1
 801ceae:	9305      	str	r3, [sp, #20]
 801ceb0:	4588      	cmp	r8, r1
 801ceb2:	f000 809b 	beq.w	801cfec <nema_vg_grad_set+0x3b0>
 801ceb6:	eb05 0389 	add.w	r3, r5, r9, lsl #2
 801ceba:	edd3 6a00 	vldr	s13, [r3]
 801cebe:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801cec2:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801cec6:	ee37 7a27 	vadd.f32	s14, s14, s15
 801ceca:	eef0 7a66 	vmov.f32	s15, s13
 801cece:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801ced2:	9b04      	ldr	r3, [sp, #16]
 801ced4:	45b1      	cmp	r9, r6
 801ced6:	eb03 1309 	add.w	r3, r3, r9, lsl #4
 801ceda:	ee17 0a90 	vmov	r0, s15
 801cede:	edd3 2a00 	vldr	s5, [r3]
 801cee2:	edd3 3a01 	vldr	s7, [r3, #4]
 801cee6:	ed93 6a03 	vldr	s12, [r3, #12]
 801ceea:	edd3 4a02 	vldr	s9, [r3, #8]
 801ceee:	f000 80f1 	beq.w	801d0d4 <nema_vg_grad_set+0x498>
 801cef2:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801cef6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cefa:	4688      	mov	r8, r1
 801cefc:	ee77 5a67 	vsub.f32	s11, s14, s15
 801cf00:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cf04:	ed93 5a00 	vldr	s10, [r3]
 801cf08:	ee65 6a0c 	vmul.f32	s13, s10, s24
 801cf0c:	eebe 5acd 	vcvt.s32.f32	s10, s10, #6
 801cf10:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801cf14:	9b04      	ldr	r3, [sp, #16]
 801cf16:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801cf1a:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801cf1e:	ed93 ea00 	vldr	s28, [r3]
 801cf22:	edd3 da01 	vldr	s27, [r3, #4]
 801cf26:	ed93 da02 	vldr	s26, [r3, #8]
 801cf2a:	edd3 ca03 	vldr	s25, [r3, #12]
 801cf2e:	ee15 3a10 	vmov	r3, s10
 801cf32:	1a1a      	subs	r2, r3, r0
 801cf34:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801cf38:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801cf3c:	eef4 5ac7 	vcmpe.f32	s11, s14
 801cf40:	ee3e 3a62 	vsub.f32	s6, s28, s5
 801cf44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf48:	ee3d 4ae3 	vsub.f32	s8, s27, s7
 801cf4c:	ee3d 5a64 	vsub.f32	s10, s26, s9
 801cf50:	ee7c 6ac6 	vsub.f32	s13, s25, s12
 801cf54:	ee83 2a27 	vdiv.f32	s4, s6, s15
 801cf58:	ee84 3a27 	vdiv.f32	s6, s8, s15
 801cf5c:	ee85 4a27 	vdiv.f32	s8, s10, s15
 801cf60:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 801cf64:	bfca      	itet	gt
 801cf66:	eef7 7a08 	vmovgt.f32	s15, #120	@ 0x3fc00000  1.5
 801cf6a:	ee77 7a65 	vsuble.f32	s15, s14, s11
 801cf6e:	ee77 7ae5 	vsubgt.f32	s15, s15, s11
 801cf72:	ee62 fa27 	vmul.f32	s31, s4, s15
 801cf76:	ee23 7a27 	vmul.f32	s14, s6, s15
 801cf7a:	ee24 fa27 	vmul.f32	s30, s8, s15
 801cf7e:	ee65 7a27 	vmul.f32	s15, s10, s15
 801cf82:	ee37 ba23 	vadd.f32	s22, s14, s7
 801cf86:	ee77 ea86 	vadd.f32	s29, s15, s12
 801cf8a:	ee7f faa2 	vadd.f32	s31, s31, s5
 801cf8e:	ee3f fa24 	vadd.f32	s30, s30, s9
 801cf92:	ed5f 4a3d 	vldr	s9, [pc, #-244]	@ 801cea0 <nema_vg_grad_set+0x264>
 801cf96:	eeb0 0a6f 	vmov.f32	s0, s31
 801cf9a:	eef0 0a4b 	vmov.f32	s1, s22
 801cf9e:	eef0 1a6e 	vmov.f32	s3, s29
 801cfa2:	eeb0 1a4f 	vmov.f32	s2, s30
 801cfa6:	eef0 3a64 	vmov.f32	s7, s9
 801cfaa:	eef0 2a64 	vmov.f32	s5, s9
 801cfae:	eef0 5a48 	vmov.f32	s11, s16
 801cfb2:	e9cd 2006 	strd	r2, r0, [sp, #24]
 801cfb6:	f7f4 f961 	bl	801127c <nema_set_gradient>
 801cfba:	e9dd 2006 	ldrd	r2, r0, [sp, #24]
 801cfbe:	f04f 33ff 	mov.w	r3, #4294967295
 801cfc2:	2100      	movs	r1, #0
 801cfc4:	9300      	str	r3, [sp, #0]
 801cfc6:	2301      	movs	r3, #1
 801cfc8:	f7f4 f9c4 	bl	8011354 <nema_fill_rect>
 801cfcc:	f1ba 0f01 	cmp.w	sl, #1
 801cfd0:	d107      	bne.n	801cfe2 <nema_vg_grad_set+0x3a6>
 801cfd2:	eeb0 aa6e 	vmov.f32	s20, s29
 801cfd6:	eef0 8a4f 	vmov.f32	s17, s30
 801cfda:	eeb0 9a4b 	vmov.f32	s18, s22
 801cfde:	eef0 9a6f 	vmov.f32	s19, s31
 801cfe2:	f1bb 0f01 	cmp.w	fp, #1
 801cfe6:	46da      	mov	sl, fp
 801cfe8:	f47f aebc 	bne.w	801cd64 <nema_vg_grad_set+0x128>
 801cfec:	2000      	movs	r0, #0
 801cfee:	f7f3 fefb 	bl	8010de8 <nema_enable_gradient>
 801cff2:	eefc 7aca 	vcvt.u32.f32	s15, s20
 801cff6:	edcd 7a04 	vstr	s15, [sp, #16]
 801cffa:	eefc 7ae8 	vcvt.u32.f32	s15, s17
 801cffe:	edcd 7a05 	vstr	s15, [sp, #20]
 801d002:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 801d006:	edcd 7a06 	vstr	s15, [sp, #24]
 801d00a:	eefc 7ae9 	vcvt.u32.f32	s15, s19
 801d00e:	edcd 7a07 	vstr	s15, [sp, #28]
 801d012:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d016:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d01a:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d01e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d022:	f7f3 ff47 	bl	8010eb4 <nema_rgba>
 801d026:	2301      	movs	r3, #1
 801d028:	2100      	movs	r1, #0
 801d02a:	9000      	str	r0, [sp, #0]
 801d02c:	461a      	mov	r2, r3
 801d02e:	4608      	mov	r0, r1
 801d030:	f7f4 f990 	bl	8011354 <nema_fill_rect>
 801d034:	eefc 7aec 	vcvt.u32.f32	s15, s25
 801d038:	edcd 7a04 	vstr	s15, [sp, #16]
 801d03c:	eefc 7acd 	vcvt.u32.f32	s15, s26
 801d040:	edcd 7a05 	vstr	s15, [sp, #20]
 801d044:	eefc 7aed 	vcvt.u32.f32	s15, s27
 801d048:	edcd 7a06 	vstr	s15, [sp, #24]
 801d04c:	eefc 7ace 	vcvt.u32.f32	s15, s28
 801d050:	edcd 7a07 	vstr	s15, [sp, #28]
 801d054:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d058:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d05c:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d060:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d064:	f7f3 ff26 	bl	8010eb4 <nema_rgba>
 801d068:	2301      	movs	r3, #1
 801d06a:	9000      	str	r0, [sp, #0]
 801d06c:	461a      	mov	r2, r3
 801d06e:	2100      	movs	r1, #0
 801d070:	203f      	movs	r0, #63	@ 0x3f
 801d072:	f7f4 f96f 	bl	8011354 <nema_fill_rect>
 801d076:	e701      	b.n	801ce7c <nema_vg_grad_set+0x240>
 801d078:	9b05      	ldr	r3, [sp, #20]
 801d07a:	2b00      	cmp	r3, #0
 801d07c:	d0b6      	beq.n	801cfec <nema_vg_grad_set+0x3b0>
 801d07e:	f1b8 0f00 	cmp.w	r8, #0
 801d082:	ddb3      	ble.n	801cfec <nema_vg_grad_set+0x3b0>
 801d084:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d088:	edd3 6a00 	vldr	s13, [r3]
 801d08c:	eef4 6aeb 	vcmpe.f32	s13, s23
 801d090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d094:	d5aa      	bpl.n	801cfec <nema_vg_grad_set+0x3b0>
 801d096:	4641      	mov	r1, r8
 801d098:	3101      	adds	r1, #1
 801d09a:	4541      	cmp	r1, r8
 801d09c:	d0a6      	beq.n	801cfec <nema_vg_grad_set+0x3b0>
 801d09e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d0a2:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801d0a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d0aa:	eef0 7a66 	vmov.f32	s15, s13
 801d0ae:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801d0b2:	9b04      	ldr	r3, [sp, #16]
 801d0b4:	f04f 0b01 	mov.w	fp, #1
 801d0b8:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801d0bc:	ed93 6a03 	vldr	s12, [r3, #12]
 801d0c0:	edd3 2a00 	vldr	s5, [r3]
 801d0c4:	edd3 3a01 	vldr	s7, [r3, #4]
 801d0c8:	edd3 4a02 	vldr	s9, [r3, #8]
 801d0cc:	ee17 0a90 	vmov	r0, s15
 801d0d0:	f8cd b014 	str.w	fp, [sp, #20]
 801d0d4:	2902      	cmp	r1, #2
 801d0d6:	d037      	beq.n	801d148 <nema_vg_grad_set+0x50c>
 801d0d8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d0dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d0e0:	4688      	mov	r8, r1
 801d0e2:	ee77 5a67 	vsub.f32	s11, s14, s15
 801d0e6:	dd10      	ble.n	801d10a <nema_vg_grad_set+0x4ce>
 801d0e8:	f1c0 0240 	rsb	r2, r0, #64	@ 0x40
 801d0ec:	46b1      	mov	r9, r6
 801d0ee:	eef0 ca46 	vmov.f32	s25, s12
 801d0f2:	eeb0 da64 	vmov.f32	s26, s9
 801d0f6:	eef0 da63 	vmov.f32	s27, s7
 801d0fa:	eeb0 ea62 	vmov.f32	s28, s5
 801d0fe:	ed5f 7a97 	vldr	s15, [pc, #-604]	@ 801cea4 <nema_vg_grad_set+0x268>
 801d102:	e717      	b.n	801cf34 <nema_vg_grad_set+0x2f8>
 801d104:	f04f 0b01 	mov.w	fp, #1
 801d108:	e6d2      	b.n	801ceb0 <nema_vg_grad_set+0x274>
 801d10a:	46b1      	mov	r9, r6
 801d10c:	e6f8      	b.n	801cf00 <nema_vg_grad_set+0x2c4>
 801d10e:	f1b8 0f02 	cmp.w	r8, #2
 801d112:	f43f af6b 	beq.w	801cfec <nema_vg_grad_set+0x3b0>
 801d116:	ee67 6a8c 	vmul.f32	s13, s15, s24
 801d11a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d11e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d122:	eef0 6a67 	vmov.f32	s13, s15
 801d126:	eefe 6acd 	vcvt.s32.f32	s13, s13, #6
 801d12a:	9b04      	ldr	r3, [sp, #16]
 801d12c:	468b      	mov	fp, r1
 801d12e:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 801d132:	4616      	mov	r6, r2
 801d134:	edd3 3a01 	vldr	s7, [r3, #4]
 801d138:	edd3 2a00 	vldr	s5, [r3]
 801d13c:	ed93 6a03 	vldr	s12, [r3, #12]
 801d140:	edd3 4a02 	vldr	s9, [r3, #8]
 801d144:	ee16 0a90 	vmov	r0, s13
 801d148:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801d14c:	4602      	mov	r2, r0
 801d14e:	eef0 7a47 	vmov.f32	s15, s14
 801d152:	46b1      	mov	r9, r6
 801d154:	eeb0 7a65 	vmov.f32	s14, s11
 801d158:	eef0 ca46 	vmov.f32	s25, s12
 801d15c:	eeb0 da64 	vmov.f32	s26, s9
 801d160:	eef0 da63 	vmov.f32	s27, s7
 801d164:	eeb0 ea62 	vmov.f32	s28, s5
 801d168:	2000      	movs	r0, #0
 801d16a:	f04f 0802 	mov.w	r8, #2
 801d16e:	e6e1      	b.n	801cf34 <nema_vg_grad_set+0x2f8>
 801d170:	4632      	mov	r2, r6
 801d172:	eeb0 7a6a 	vmov.f32	s14, s21
 801d176:	e5ff      	b.n	801cd78 <nema_vg_grad_set+0x13c>
 801d178:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 801d17c:	f7ff fc82 	bl	801ca84 <nema_vg_set_error>
 801d180:	2720      	movs	r7, #32
 801d182:	e567      	b.n	801cc54 <nema_vg_grad_set+0x18>
 801d184:	2102      	movs	r1, #2
 801d186:	e644      	b.n	801ce12 <nema_vg_grad_set+0x1d6>
 801d188:	469b      	mov	fp, r3
 801d18a:	e691      	b.n	801ceb0 <nema_vg_grad_set+0x274>

0801d18c <nema_vg_paint_set_grad_linear>:
 801d18c:	2800      	cmp	r0, #0
 801d18e:	d065      	beq.n	801d25c <nema_vg_paint_set_grad_linear+0xd0>
 801d190:	b510      	push	{r4, lr}
 801d192:	ed2d 8b06 	vpush	{d8-d10}
 801d196:	ee31 8ae0 	vsub.f32	s16, s3, s1
 801d19a:	ee71 8a40 	vsub.f32	s17, s2, s0
 801d19e:	ee68 7a08 	vmul.f32	s15, s16, s16
 801d1a2:	eeb0 9a40 	vmov.f32	s18, s0
 801d1a6:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801d1aa:	f002 030c 	and.w	r3, r2, #12
 801d1ae:	2b08      	cmp	r3, #8
 801d1b0:	bf08      	it	eq
 801d1b2:	f002 0201 	andeq.w	r2, r2, #1
 801d1b6:	f002 020f 	and.w	r2, r2, #15
 801d1ba:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d1be:	6341      	str	r1, [r0, #52]	@ 0x34
 801d1c0:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d1c4:	eef0 9a60 	vmov.f32	s19, s1
 801d1c8:	4604      	mov	r4, r0
 801d1ca:	f7f4 fb7f 	bl	80118cc <nema_sqrt>
 801d1ce:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801d1d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1d6:	f04f 0300 	mov.w	r3, #0
 801d1da:	d10e      	bne.n	801d1fa <nema_vg_paint_set_grad_linear+0x6e>
 801d1dc:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d1e0:	4920      	ldr	r1, [pc, #128]	@ (801d264 <nema_vg_paint_set_grad_linear+0xd8>)
 801d1e2:	63a3      	str	r3, [r4, #56]	@ 0x38
 801d1e4:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801d1e6:	6463      	str	r3, [r4, #68]	@ 0x44
 801d1e8:	64a3      	str	r3, [r4, #72]	@ 0x48
 801d1ea:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801d1ec:	6523      	str	r3, [r4, #80]	@ 0x50
 801d1ee:	6563      	str	r3, [r4, #84]	@ 0x54
 801d1f0:	6421      	str	r1, [r4, #64]	@ 0x40
 801d1f2:	65a2      	str	r2, [r4, #88]	@ 0x58
 801d1f4:	ecbd 8b06 	vpop	{d8-d10}
 801d1f8:	bd10      	pop	{r4, pc}
 801d1fa:	ee88 aa80 	vdiv.f32	s20, s17, s0
 801d1fe:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 801d268 <nema_vg_paint_set_grad_linear+0xdc>
 801d202:	eec8 8a00 	vdiv.f32	s17, s16, s0
 801d206:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 801d20a:	ee87 8a80 	vdiv.f32	s16, s15, s0
 801d20e:	f7f4 fb87 	bl	8011920 <nema_mat3x3_load_identity>
 801d212:	ee29 7aa8 	vmul.f32	s14, s19, s17
 801d216:	ee69 7a4a 	vnmul.f32	s15, s18, s20
 801d21a:	ee69 9a8a 	vmul.f32	s19, s19, s20
 801d21e:	ee29 9a28 	vmul.f32	s18, s18, s17
 801d222:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d226:	ee39 9a69 	vsub.f32	s18, s18, s19
 801d22a:	ee28 aa0a 	vmul.f32	s20, s16, s20
 801d22e:	ee28 7a28 	vmul.f32	s14, s16, s17
 801d232:	ee67 7a88 	vmul.f32	s15, s15, s16
 801d236:	ee29 9a08 	vmul.f32	s18, s18, s16
 801d23a:	ee68 8ac8 	vnmul.f32	s17, s17, s16
 801d23e:	edc4 7a10 	vstr	s15, [r4, #64]	@ 0x40
 801d242:	ed84 9a13 	vstr	s18, [r4, #76]	@ 0x4c
 801d246:	ed84 aa0e 	vstr	s20, [r4, #56]	@ 0x38
 801d24a:	ed84 aa12 	vstr	s20, [r4, #72]	@ 0x48
 801d24e:	ed84 7a0f 	vstr	s14, [r4, #60]	@ 0x3c
 801d252:	edc4 8a11 	vstr	s17, [r4, #68]	@ 0x44
 801d256:	ecbd 8b06 	vpop	{d8-d10}
 801d25a:	bd10      	pop	{r4, pc}
 801d25c:	2001      	movs	r0, #1
 801d25e:	f7ff bc11 	b.w	801ca84 <nema_vg_set_error>
 801d262:	bf00      	nop
 801d264:	427e0000 	.word	0x427e0000
 801d268:	42800000 	.word	0x42800000

0801d26c <nema_vg_paint_set_grad_radial>:
 801d26c:	2800      	cmp	r0, #0
 801d26e:	d03f      	beq.n	801d2f0 <nema_vg_paint_set_grad_radial+0x84>
 801d270:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801d274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d278:	6341      	str	r1, [r0, #52]	@ 0x34
 801d27a:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d27e:	d421      	bmi.n	801d2c4 <nema_vg_paint_set_grad_radial+0x58>
 801d280:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 801d2f8 <nema_vg_paint_set_grad_radial+0x8c>
 801d284:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d28c:	d922      	bls.n	801d2d4 <nema_vg_paint_set_grad_radial+0x68>
 801d28e:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 801d2fc <nema_vg_paint_set_grad_radial+0x90>
 801d292:	eec7 7a01 	vdiv.f32	s15, s14, s2
 801d296:	2300      	movs	r3, #0
 801d298:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d29c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801d2a0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d2a4:	eef1 7a67 	vneg.f32	s15, s15
 801d2a8:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 801d2ac:	edc0 0a13 	vstr	s1, [r0, #76]	@ 0x4c
 801d2b0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801d2b4:	edc0 7a12 	vstr	s15, [r0, #72]	@ 0x48
 801d2b8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d2ba:	6443      	str	r3, [r0, #68]	@ 0x44
 801d2bc:	6503      	str	r3, [r0, #80]	@ 0x50
 801d2be:	6543      	str	r3, [r0, #84]	@ 0x54
 801d2c0:	6582      	str	r2, [r0, #88]	@ 0x58
 801d2c2:	4770      	bx	lr
 801d2c4:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801d300 <nema_vg_paint_set_grad_radial+0x94>
 801d2c8:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d2cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d2d0:	da00      	bge.n	801d2d4 <nema_vg_paint_set_grad_radial+0x68>
 801d2d2:	dbdc      	blt.n	801d28e <nema_vg_paint_set_grad_radial+0x22>
 801d2d4:	2300      	movs	r3, #0
 801d2d6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d2da:	490a      	ldr	r1, [pc, #40]	@ (801d304 <nema_vg_paint_set_grad_radial+0x98>)
 801d2dc:	6383      	str	r3, [r0, #56]	@ 0x38
 801d2de:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d2e0:	6443      	str	r3, [r0, #68]	@ 0x44
 801d2e2:	6483      	str	r3, [r0, #72]	@ 0x48
 801d2e4:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801d2e6:	6503      	str	r3, [r0, #80]	@ 0x50
 801d2e8:	6543      	str	r3, [r0, #84]	@ 0x54
 801d2ea:	6401      	str	r1, [r0, #64]	@ 0x40
 801d2ec:	6582      	str	r2, [r0, #88]	@ 0x58
 801d2ee:	4770      	bx	lr
 801d2f0:	2001      	movs	r0, #1
 801d2f2:	f7ff bbc7 	b.w	801ca84 <nema_vg_set_error>
 801d2f6:	bf00      	nop
 801d2f8:	3727c5ac 	.word	0x3727c5ac
 801d2fc:	42800000 	.word	0x42800000
 801d300:	b727c5ac 	.word	0xb727c5ac
 801d304:	427e0000 	.word	0x427e0000

0801d308 <nema_vg_paint_set_paint_color>:
 801d308:	b108      	cbz	r0, 801d30e <nema_vg_paint_set_paint_color+0x6>
 801d30a:	6301      	str	r1, [r0, #48]	@ 0x30
 801d30c:	4770      	bx	lr
 801d30e:	2001      	movs	r0, #1
 801d310:	f7ff bbb8 	b.w	801ca84 <nema_vg_set_error>

0801d314 <nema_vg_paint_set_opacity>:
 801d314:	b110      	cbz	r0, 801d31c <nema_vg_paint_set_opacity+0x8>
 801d316:	ed80 0a36 	vstr	s0, [r0, #216]	@ 0xd8
 801d31a:	4770      	bx	lr
 801d31c:	2001      	movs	r0, #1
 801d31e:	f7ff bbb1 	b.w	801ca84 <nema_vg_set_error>
 801d322:	bf00      	nop

0801d324 <nema_vg_paint_set_stroke_width>:
 801d324:	b110      	cbz	r0, 801d32c <nema_vg_paint_set_stroke_width+0x8>
 801d326:	ed80 0a35 	vstr	s0, [r0, #212]	@ 0xd4
 801d32a:	4770      	bx	lr
 801d32c:	2001      	movs	r0, #1
 801d32e:	f7ff bba9 	b.w	801ca84 <nema_vg_set_error>
 801d332:	bf00      	nop

0801d334 <bind_tex1_according_paint>:
 801d334:	b570      	push	{r4, r5, r6, lr}
 801d336:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
 801d33a:	b084      	sub	sp, #16
 801d33c:	3b01      	subs	r3, #1
 801d33e:	4604      	mov	r4, r0
 801d340:	2b03      	cmp	r3, #3
 801d342:	d81b      	bhi.n	801d37c <bind_tex1_according_paint+0x48>
 801d344:	e8df f003 	tbb	[pc, r3]
 801d348:	281c0228 	.word	0x281c0228
 801d34c:	6805      	ldr	r5, [r0, #0]
 801d34e:	2d00      	cmp	r5, #0
 801d350:	d050      	beq.n	801d3f4 <bind_tex1_according_paint+0xc0>
 801d352:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801d356:	2b00      	cmp	r3, #0
 801d358:	d03f      	beq.n	801d3da <bind_tex1_according_paint+0xa6>
 801d35a:	6844      	ldr	r4, [r0, #4]
 801d35c:	2c00      	cmp	r4, #0
 801d35e:	d049      	beq.n	801d3f4 <bind_tex1_according_paint+0xc0>
 801d360:	7f26      	ldrb	r6, [r4, #28]
 801d362:	7f2b      	ldrb	r3, [r5, #28]
 801d364:	8a6a      	ldrh	r2, [r5, #18]
 801d366:	8a29      	ldrh	r1, [r5, #16]
 801d368:	68e8      	ldr	r0, [r5, #12]
 801d36a:	9603      	str	r6, [sp, #12]
 801d36c:	68e4      	ldr	r4, [r4, #12]
 801d36e:	9402      	str	r4, [sp, #8]
 801d370:	7f6c      	ldrb	r4, [r5, #29]
 801d372:	9401      	str	r4, [sp, #4]
 801d374:	696c      	ldr	r4, [r5, #20]
 801d376:	9400      	str	r4, [sp, #0]
 801d378:	f7f3 ff1e 	bl	80111b8 <nema_bind_lut_tex>
 801d37c:	b004      	add	sp, #16
 801d37e:	bd70      	pop	{r4, r5, r6, pc}
 801d380:	f7f4 fe38 	bl	8011ff4 <nema_readHwConfigH>
 801d384:	f410 7580 	ands.w	r5, r0, #256	@ 0x100
 801d388:	d116      	bne.n	801d3b8 <bind_tex1_according_paint+0x84>
 801d38a:	2020      	movs	r0, #32
 801d38c:	f7ff fb7a 	bl	801ca84 <nema_vg_set_error>
 801d390:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
 801d394:	b004      	add	sp, #16
 801d396:	bd70      	pop	{r4, r5, r6, pc}
 801d398:	2301      	movs	r3, #1
 801d39a:	2000      	movs	r0, #0
 801d39c:	f894 20d0 	ldrb.w	r2, [r4, #208]	@ 0xd0
 801d3a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d3a2:	431a      	orrs	r2, r3
 801d3a4:	68c9      	ldr	r1, [r1, #12]
 801d3a6:	e9cd 0201 	strd	r0, r2, [sp, #4]
 801d3aa:	9300      	str	r3, [sp, #0]
 801d3ac:	4618      	mov	r0, r3
 801d3ae:	2240      	movs	r2, #64	@ 0x40
 801d3b0:	f7f3 fbe0 	bl	8010b74 <nema_bind_tex>
 801d3b4:	b004      	add	sp, #16
 801d3b6:	bd70      	pop	{r4, r5, r6, pc}
 801d3b8:	2201      	movs	r2, #1
 801d3ba:	2004      	movs	r0, #4
 801d3bc:	f894 30d0 	ldrb.w	r3, [r4, #208]	@ 0xd0
 801d3c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d3c2:	f043 0381 	orr.w	r3, r3, #129	@ 0x81
 801d3c6:	68c9      	ldr	r1, [r1, #12]
 801d3c8:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801d3cc:	9200      	str	r2, [sp, #0]
 801d3ce:	4610      	mov	r0, r2
 801d3d0:	2340      	movs	r3, #64	@ 0x40
 801d3d2:	f7f3 fbcf 	bl	8010b74 <nema_bind_tex>
 801d3d6:	b004      	add	sp, #16
 801d3d8:	bd70      	pop	{r4, r5, r6, pc}
 801d3da:	7f68      	ldrb	r0, [r5, #29]
 801d3dc:	8a6b      	ldrh	r3, [r5, #18]
 801d3de:	8a2a      	ldrh	r2, [r5, #16]
 801d3e0:	68e9      	ldr	r1, [r5, #12]
 801d3e2:	9002      	str	r0, [sp, #8]
 801d3e4:	6968      	ldr	r0, [r5, #20]
 801d3e6:	9001      	str	r0, [sp, #4]
 801d3e8:	7f28      	ldrb	r0, [r5, #28]
 801d3ea:	9000      	str	r0, [sp, #0]
 801d3ec:	2001      	movs	r0, #1
 801d3ee:	f7f3 fbc1 	bl	8010b74 <nema_bind_tex>
 801d3f2:	e7c3      	b.n	801d37c <bind_tex1_according_paint+0x48>
 801d3f4:	2002      	movs	r0, #2
 801d3f6:	b004      	add	sp, #16
 801d3f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d3fc:	f7ff bb42 	b.w	801ca84 <nema_vg_set_error>

0801d400 <nema_vg_path_clear>:
 801d400:	b118      	cbz	r0, 801d40a <nema_vg_path_clear+0xa>
 801d402:	2300      	movs	r3, #0
 801d404:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d408:	4770      	bx	lr
 801d40a:	2001      	movs	r0, #1
 801d40c:	f7ff bb3a 	b.w	801ca84 <nema_vg_set_error>

0801d410 <nema_vg_path_create>:
 801d410:	b508      	push	{r3, lr}
 801d412:	2088      	movs	r0, #136	@ 0x88
 801d414:	f7e5 fca2 	bl	8002d5c <nema_host_malloc>
 801d418:	2200      	movs	r2, #0
 801d41a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801d41e:	bd08      	pop	{r3, pc}

0801d420 <nema_vg_path_set_shape_and_bbox>:
 801d420:	b430      	push	{r4, r5}
 801d422:	e9dd 5402 	ldrd	r5, r4, [sp, #8]
 801d426:	2800      	cmp	r0, #0
 801d428:	d065      	beq.n	801d4f6 <nema_vg_path_set_shape_and_bbox+0xd6>
 801d42a:	e9c0 1300 	strd	r1, r3, [r0]
 801d42e:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d432:	edd4 7a00 	vldr	s15, [r4]
 801d436:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801d43a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d43e:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d446:	ee17 2a10 	vmov	r2, s14
 801d44a:	bf4c      	ite	mi
 801d44c:	2301      	movmi	r3, #1
 801d44e:	2300      	movpl	r3, #0
 801d450:	1ad3      	subs	r3, r2, r3
 801d452:	ee07 3a10 	vmov	s14, r3
 801d456:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d45a:	edc0 6a04 	vstr	s13, [r0, #16]
 801d45e:	ed94 7a01 	vldr	s14, [r4, #4]
 801d462:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d466:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801d46a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801d46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d472:	ee17 2a90 	vmov	r2, s15
 801d476:	bf4c      	ite	mi
 801d478:	2301      	movmi	r3, #1
 801d47a:	2300      	movpl	r3, #0
 801d47c:	1ad3      	subs	r3, r2, r3
 801d47e:	ee07 3a90 	vmov	s15, r3
 801d482:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d486:	edc0 7a05 	vstr	s15, [r0, #20]
 801d48a:	ed94 6a02 	vldr	s12, [r4, #8]
 801d48e:	eebd 7ac6 	vcvt.s32.f32	s14, s12
 801d492:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801d496:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801d49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d49e:	ee17 2a10 	vmov	r2, s14
 801d4a2:	bfcc      	ite	gt
 801d4a4:	2301      	movgt	r3, #1
 801d4a6:	2300      	movle	r3, #0
 801d4a8:	4413      	add	r3, r2
 801d4aa:	ee07 3a10 	vmov	s14, r3
 801d4ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801d4b2:	ed80 7a06 	vstr	s14, [r0, #24]
 801d4b6:	edd4 5a03 	vldr	s11, [r4, #12]
 801d4ba:	eebd 6ae5 	vcvt.s32.f32	s12, s11
 801d4be:	eeb8 5ac6 	vcvt.f32.s32	s10, s12
 801d4c2:	eef4 5ac5 	vcmpe.f32	s11, s10
 801d4c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d4ca:	ee16 2a10 	vmov	r2, s12
 801d4ce:	bfcc      	ite	gt
 801d4d0:	2301      	movgt	r3, #1
 801d4d2:	2300      	movle	r3, #0
 801d4d4:	4413      	add	r3, r2
 801d4d6:	ee06 3a10 	vmov	s12, r3
 801d4da:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801d4de:	ee37 7a66 	vsub.f32	s14, s14, s13
 801d4e2:	ee76 7a67 	vsub.f32	s15, s12, s15
 801d4e6:	ed80 7a08 	vstr	s14, [r0, #32]
 801d4ea:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801d4ee:	ed80 6a07 	vstr	s12, [r0, #28]
 801d4f2:	bc30      	pop	{r4, r5}
 801d4f4:	4770      	bx	lr
 801d4f6:	2001      	movs	r0, #1
 801d4f8:	bc30      	pop	{r4, r5}
 801d4fa:	f7ff bac3 	b.w	801ca84 <nema_vg_set_error>
 801d4fe:	bf00      	nop

0801d500 <nema_vg_path_set_shape>:
 801d500:	b430      	push	{r4, r5}
 801d502:	9d02      	ldr	r5, [sp, #8]
 801d504:	b130      	cbz	r0, 801d514 <nema_vg_path_set_shape+0x14>
 801d506:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d50a:	e9c0 1300 	strd	r1, r3, [r0]
 801d50e:	bc30      	pop	{r4, r5}
 801d510:	f001 b966 	b.w	801e7e0 <calculate_aabb_per_shape>
 801d514:	2001      	movs	r0, #1
 801d516:	bc30      	pop	{r4, r5}
 801d518:	f7ff bab4 	b.w	801ca84 <nema_vg_set_error>

0801d51c <nema_vg_path_set_matrix>:
 801d51c:	2800      	cmp	r0, #0
 801d51e:	d063      	beq.n	801d5e8 <nema_vg_path_set_matrix+0xcc>
 801d520:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 801d524:	2900      	cmp	r1, #0
 801d526:	d055      	beq.n	801d5d4 <nema_vg_path_set_matrix+0xb8>
 801d528:	edd1 7a00 	vldr	s15, [r1]
 801d52c:	edc0 7a18 	vstr	s15, [r0, #96]	@ 0x60
 801d530:	edd1 3a01 	vldr	s7, [r1, #4]
 801d534:	edc0 3a19 	vstr	s7, [r0, #100]	@ 0x64
 801d538:	ed91 7a02 	vldr	s14, [r1, #8]
 801d53c:	ed80 7a1a 	vstr	s14, [r0, #104]	@ 0x68
 801d540:	edd1 6a03 	vldr	s13, [r1, #12]
 801d544:	edc0 6a1b 	vstr	s13, [r0, #108]	@ 0x6c
 801d548:	ed91 4a04 	vldr	s8, [r1, #16]
 801d54c:	ed80 4a1c 	vstr	s8, [r0, #112]	@ 0x70
 801d550:	ed91 5a05 	vldr	s10, [r1, #20]
 801d554:	ed80 5a1d 	vstr	s10, [r0, #116]	@ 0x74
 801d558:	ed91 6a06 	vldr	s12, [r1, #24]
 801d55c:	ed80 6a1e 	vstr	s12, [r0, #120]	@ 0x78
 801d560:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 801d564:	edd1 5a07 	vldr	s11, [r1, #28]
 801d568:	eef4 7a64 	vcmp.f32	s15, s9
 801d56c:	edc0 5a1f 	vstr	s11, [r0, #124]	@ 0x7c
 801d570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d574:	6a0a      	ldr	r2, [r1, #32]
 801d576:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 801d57a:	d130      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d57c:	eef5 3a40 	vcmp.f32	s7, #0.0
 801d580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d584:	d12b      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d586:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801d58a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d58e:	d126      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d590:	eef5 6a40 	vcmp.f32	s13, #0.0
 801d594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d598:	d121      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d59a:	eeb4 4a64 	vcmp.f32	s8, s9
 801d59e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5a2:	d11c      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d5a4:	eeb5 5a40 	vcmp.f32	s10, #0.0
 801d5a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5ac:	d117      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d5ae:	eeb5 6a40 	vcmp.f32	s12, #0.0
 801d5b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5b6:	d112      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d5b8:	eef5 5a40 	vcmp.f32	s11, #0.0
 801d5bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5c0:	d10d      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d5c2:	ed90 7a20 	vldr	s14, [r0, #128]	@ 0x80
 801d5c6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d5ca:	eeb4 7a67 	vcmp.f32	s14, s15
 801d5ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5d2:	d104      	bne.n	801d5de <nema_vg_path_set_matrix+0xc2>
 801d5d4:	f023 0301 	bic.w	r3, r3, #1
 801d5d8:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d5dc:	4770      	bx	lr
 801d5de:	f043 0301 	orr.w	r3, r3, #1
 801d5e2:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d5e6:	4770      	bx	lr
 801d5e8:	2001      	movs	r0, #1
 801d5ea:	f7ff ba4b 	b.w	801ca84 <nema_vg_set_error>
 801d5ee:	bf00      	nop

0801d5f0 <set_tsvg_text_max_size>:
 801d5f0:	4a02      	ldr	r2, [pc, #8]	@ (801d5fc <set_tsvg_text_max_size+0xc>)
 801d5f2:	4b03      	ldr	r3, [pc, #12]	@ (801d600 <set_tsvg_text_max_size+0x10>)
 801d5f4:	6010      	str	r0, [r2, #0]
 801d5f6:	6019      	str	r1, [r3, #0]
 801d5f8:	4770      	bx	lr
 801d5fa:	bf00      	nop
 801d5fc:	200001dc 	.word	0x200001dc
 801d600:	200001e0 	.word	0x200001e0

0801d604 <tsvg_init>:
 801d604:	b508      	push	{r3, lr}
 801d606:	f7ff fab1 	bl	801cb6c <nema_vg_paint_create>
 801d60a:	4b05      	ldr	r3, [pc, #20]	@ (801d620 <tsvg_init+0x1c>)
 801d60c:	6018      	str	r0, [r3, #0]
 801d60e:	f7ff feff 	bl	801d410 <nema_vg_path_create>
 801d612:	4b04      	ldr	r3, [pc, #16]	@ (801d624 <tsvg_init+0x20>)
 801d614:	6018      	str	r0, [r3, #0]
 801d616:	f7ff faf1 	bl	801cbfc <nema_vg_grad_create>
 801d61a:	4b03      	ldr	r3, [pc, #12]	@ (801d628 <tsvg_init+0x24>)
 801d61c:	6018      	str	r0, [r3, #0]
 801d61e:	bd08      	pop	{r3, pc}
 801d620:	200832d8 	.word	0x200832d8
 801d624:	200832dc 	.word	0x200832dc
 801d628:	200832d4 	.word	0x200832d4

0801d62c <tsi_malloc_init_pool_aligned>:
 801d62c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d630:	2807      	cmp	r0, #7
 801d632:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 801d636:	d845      	bhi.n	801d6c4 <tsi_malloc_init_pool_aligned+0x98>
 801d638:	2f0f      	cmp	r7, #15
 801d63a:	dd36      	ble.n	801d6aa <tsi_malloc_init_pool_aligned+0x7e>
 801d63c:	07bc      	lsls	r4, r7, #30
 801d63e:	463e      	mov	r6, r7
 801d640:	d043      	beq.n	801d6ca <tsi_malloc_init_pool_aligned+0x9e>
 801d642:	f027 0703 	bic.w	r7, r7, #3
 801d646:	3704      	adds	r7, #4
 801d648:	f107 0c0b 	add.w	ip, r7, #11
 801d64c:	fb9c fcf7 	sdiv	ip, ip, r7
 801d650:	463e      	mov	r6, r7
 801d652:	fb07 fc0c 	mul.w	ip, r7, ip
 801d656:	fbb1 f4f6 	udiv	r4, r1, r6
 801d65a:	fb06 1514 	mls	r5, r6, r4, r1
 801d65e:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 801d6e0 <tsi_malloc_init_pool_aligned+0xb4>
 801d662:	f8c8 c000 	str.w	ip, [r8]
 801d666:	b32d      	cbz	r5, 801d6b4 <tsi_malloc_init_pool_aligned+0x88>
 801d668:	fb04 6406 	mla	r4, r4, r6, r6
 801d66c:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801d670:	4819      	ldr	r0, [pc, #100]	@ (801d6d8 <tsi_malloc_init_pool_aligned+0xac>)
 801d672:	00ed      	lsls	r5, r5, #3
 801d674:	1946      	adds	r6, r0, r5
 801d676:	5142      	str	r2, [r0, r5]
 801d678:	18ca      	adds	r2, r1, r3
 801d67a:	60f4      	str	r4, [r6, #12]
 801d67c:	6071      	str	r1, [r6, #4]
 801d67e:	e9c6 3704 	strd	r3, r7, [r6, #16]
 801d682:	60b2      	str	r2, [r6, #8]
 801d684:	f1be 0f00 	cmp.w	lr, #0
 801d688:	d016      	beq.n	801d6b8 <tsi_malloc_init_pool_aligned+0x8c>
 801d68a:	b1c4      	cbz	r4, 801d6be <tsi_malloc_init_pool_aligned+0x92>
 801d68c:	2200      	movs	r2, #0
 801d68e:	4610      	mov	r0, r2
 801d690:	4d12      	ldr	r5, [pc, #72]	@ (801d6dc <tsi_malloc_init_pool_aligned+0xb0>)
 801d692:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 801d696:	eb0c 0104 	add.w	r1, ip, r4
 801d69a:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 801d69e:	f84c 3004 	str.w	r3, [ip, r4]
 801d6a2:	e9c1 5201 	strd	r5, r2, [r1, #4]
 801d6a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d6aa:	f04f 0c10 	mov.w	ip, #16
 801d6ae:	4666      	mov	r6, ip
 801d6b0:	4667      	mov	r7, ip
 801d6b2:	e7d0      	b.n	801d656 <tsi_malloc_init_pool_aligned+0x2a>
 801d6b4:	460c      	mov	r4, r1
 801d6b6:	e7d9      	b.n	801d66c <tsi_malloc_init_pool_aligned+0x40>
 801d6b8:	4670      	mov	r0, lr
 801d6ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d6be:	4620      	mov	r0, r4
 801d6c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d6c4:	f04f 30ff 	mov.w	r0, #4294967295
 801d6c8:	e7ed      	b.n	801d6a6 <tsi_malloc_init_pool_aligned+0x7a>
 801d6ca:	f107 0c0b 	add.w	ip, r7, #11
 801d6ce:	fb9c fcf7 	sdiv	ip, ip, r7
 801d6d2:	fb07 fc0c 	mul.w	ip, r7, ip
 801d6d6:	e7be      	b.n	801d656 <tsi_malloc_init_pool_aligned+0x2a>
 801d6d8:	200832e0 	.word	0x200832e0
 801d6dc:	000f1fa1 	.word	0x000f1fa1
 801d6e0:	200001e4 	.word	0x200001e4

0801d6e4 <tsi_malloc_pool>:
 801d6e4:	2807      	cmp	r0, #7
 801d6e6:	d850      	bhi.n	801d78a <tsi_malloc_pool+0xa6>
 801d6e8:	b4f0      	push	{r4, r5, r6, r7}
 801d6ea:	4b29      	ldr	r3, [pc, #164]	@ (801d790 <tsi_malloc_pool+0xac>)
 801d6ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d6f0:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 801d6f4:	68c4      	ldr	r4, [r0, #12]
 801d6f6:	2c00      	cmp	r4, #0
 801d6f8:	d03e      	beq.n	801d778 <tsi_malloc_pool+0x94>
 801d6fa:	6947      	ldr	r7, [r0, #20]
 801d6fc:	4b25      	ldr	r3, [pc, #148]	@ (801d794 <tsi_malloc_pool+0xb0>)
 801d6fe:	f107 000b 	add.w	r0, r7, #11
 801d702:	fb90 f0f7 	sdiv	r0, r0, r7
 801d706:	fb07 f000 	mul.w	r0, r7, r0
 801d70a:	1e7d      	subs	r5, r7, #1
 801d70c:	4281      	cmp	r1, r0
 801d70e:	bfac      	ite	ge
 801d710:	186d      	addge	r5, r5, r1
 801d712:	182d      	addlt	r5, r5, r0
 801d714:	fb95 f5f7 	sdiv	r5, r5, r7
 801d718:	fb07 f505 	mul.w	r5, r7, r5
 801d71c:	6821      	ldr	r1, [r4, #0]
 801d71e:	6018      	str	r0, [r3, #0]
 801d720:	428d      	cmp	r5, r1
 801d722:	dd2f      	ble.n	801d784 <tsi_malloc_pool+0xa0>
 801d724:	68a3      	ldr	r3, [r4, #8]
 801d726:	b33b      	cbz	r3, 801d778 <tsi_malloc_pool+0x94>
 801d728:	4626      	mov	r6, r4
 801d72a:	e002      	b.n	801d732 <tsi_malloc_pool+0x4e>
 801d72c:	6893      	ldr	r3, [r2, #8]
 801d72e:	4616      	mov	r6, r2
 801d730:	b313      	cbz	r3, 801d778 <tsi_malloc_pool+0x94>
 801d732:	58e1      	ldr	r1, [r4, r3]
 801d734:	18e2      	adds	r2, r4, r3
 801d736:	42a9      	cmp	r1, r5
 801d738:	dbf8      	blt.n	801d72c <tsi_malloc_pool+0x48>
 801d73a:	1943      	adds	r3, r0, r5
 801d73c:	428b      	cmp	r3, r1
 801d73e:	da1e      	bge.n	801d77e <tsi_malloc_pool+0x9a>
 801d740:	1ac9      	subs	r1, r1, r3
 801d742:	f8df c058 	ldr.w	ip, [pc, #88]	@ 801d79c <tsi_malloc_pool+0xb8>
 801d746:	5099      	str	r1, [r3, r2]
 801d748:	4413      	add	r3, r2
 801d74a:	f8c3 c004 	str.w	ip, [r3, #4]
 801d74e:	6891      	ldr	r1, [r2, #8]
 801d750:	2f00      	cmp	r7, #0
 801d752:	6099      	str	r1, [r3, #8]
 801d754:	dd08      	ble.n	801d768 <tsi_malloc_pool+0x84>
 801d756:	fbb3 f1f7 	udiv	r1, r3, r7
 801d75a:	fb07 3c11 	mls	ip, r7, r1, r3
 801d75e:	f1bc 0f00 	cmp.w	ip, #0
 801d762:	d001      	beq.n	801d768 <tsi_malloc_pool+0x84>
 801d764:	fb01 7307 	mla	r3, r1, r7, r7
 801d768:	1b1b      	subs	r3, r3, r4
 801d76a:	60b3      	str	r3, [r6, #8]
 801d76c:	6015      	str	r5, [r2, #0]
 801d76e:	4b0a      	ldr	r3, [pc, #40]	@ (801d798 <tsi_malloc_pool+0xb4>)
 801d770:	4410      	add	r0, r2
 801d772:	6053      	str	r3, [r2, #4]
 801d774:	bcf0      	pop	{r4, r5, r6, r7}
 801d776:	4770      	bx	lr
 801d778:	2000      	movs	r0, #0
 801d77a:	bcf0      	pop	{r4, r5, r6, r7}
 801d77c:	4770      	bx	lr
 801d77e:	6893      	ldr	r3, [r2, #8]
 801d780:	60b3      	str	r3, [r6, #8]
 801d782:	e7f4      	b.n	801d76e <tsi_malloc_pool+0x8a>
 801d784:	4626      	mov	r6, r4
 801d786:	4622      	mov	r2, r4
 801d788:	e7d7      	b.n	801d73a <tsi_malloc_pool+0x56>
 801d78a:	2000      	movs	r0, #0
 801d78c:	4770      	bx	lr
 801d78e:	bf00      	nop
 801d790:	200832e0 	.word	0x200832e0
 801d794:	200001e4 	.word	0x200001e4
 801d798:	000f1fa2 	.word	0x000f1fa2
 801d79c:	000f1fa1 	.word	0x000f1fa1

0801d7a0 <tsi_free>:
 801d7a0:	2800      	cmp	r0, #0
 801d7a2:	d044      	beq.n	801d82e <tsi_free+0x8e>
 801d7a4:	4b6f      	ldr	r3, [pc, #444]	@ (801d964 <tsi_free+0x1c4>)
 801d7a6:	68da      	ldr	r2, [r3, #12]
 801d7a8:	b12a      	cbz	r2, 801d7b6 <tsi_free+0x16>
 801d7aa:	6859      	ldr	r1, [r3, #4]
 801d7ac:	4288      	cmp	r0, r1
 801d7ae:	d302      	bcc.n	801d7b6 <tsi_free+0x16>
 801d7b0:	6899      	ldr	r1, [r3, #8]
 801d7b2:	4288      	cmp	r0, r1
 801d7b4:	d342      	bcc.n	801d83c <tsi_free+0x9c>
 801d7b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801d7b8:	b12a      	cbz	r2, 801d7c6 <tsi_free+0x26>
 801d7ba:	69d9      	ldr	r1, [r3, #28]
 801d7bc:	4288      	cmp	r0, r1
 801d7be:	d302      	bcc.n	801d7c6 <tsi_free+0x26>
 801d7c0:	6a19      	ldr	r1, [r3, #32]
 801d7c2:	4288      	cmp	r0, r1
 801d7c4:	d352      	bcc.n	801d86c <tsi_free+0xcc>
 801d7c6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801d7c8:	b12a      	cbz	r2, 801d7d6 <tsi_free+0x36>
 801d7ca:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 801d7cc:	4288      	cmp	r0, r1
 801d7ce:	d302      	bcc.n	801d7d6 <tsi_free+0x36>
 801d7d0:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 801d7d2:	4288      	cmp	r0, r1
 801d7d4:	d34c      	bcc.n	801d870 <tsi_free+0xd0>
 801d7d6:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 801d7d8:	b12a      	cbz	r2, 801d7e6 <tsi_free+0x46>
 801d7da:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 801d7dc:	4281      	cmp	r1, r0
 801d7de:	d802      	bhi.n	801d7e6 <tsi_free+0x46>
 801d7e0:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 801d7e2:	4281      	cmp	r1, r0
 801d7e4:	d846      	bhi.n	801d874 <tsi_free+0xd4>
 801d7e6:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 801d7e8:	b12a      	cbz	r2, 801d7f6 <tsi_free+0x56>
 801d7ea:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 801d7ec:	4288      	cmp	r0, r1
 801d7ee:	d302      	bcc.n	801d7f6 <tsi_free+0x56>
 801d7f0:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 801d7f2:	4281      	cmp	r1, r0
 801d7f4:	d840      	bhi.n	801d878 <tsi_free+0xd8>
 801d7f6:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 801d7fa:	b132      	cbz	r2, 801d80a <tsi_free+0x6a>
 801d7fc:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 801d7fe:	4281      	cmp	r1, r0
 801d800:	d803      	bhi.n	801d80a <tsi_free+0x6a>
 801d802:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 801d806:	4288      	cmp	r0, r1
 801d808:	d338      	bcc.n	801d87c <tsi_free+0xdc>
 801d80a:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 801d80e:	b13a      	cbz	r2, 801d820 <tsi_free+0x80>
 801d810:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 801d814:	4288      	cmp	r0, r1
 801d816:	d303      	bcc.n	801d820 <tsi_free+0x80>
 801d818:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 801d81c:	4288      	cmp	r0, r1
 801d81e:	d32f      	bcc.n	801d880 <tsi_free+0xe0>
 801d820:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 801d824:	b11a      	cbz	r2, 801d82e <tsi_free+0x8e>
 801d826:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 801d82a:	4281      	cmp	r1, r0
 801d82c:	d900      	bls.n	801d830 <tsi_free+0x90>
 801d82e:	4770      	bx	lr
 801d830:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 801d834:	4281      	cmp	r1, r0
 801d836:	d9fa      	bls.n	801d82e <tsi_free+0x8e>
 801d838:	2107      	movs	r1, #7
 801d83a:	e000      	b.n	801d83e <tsi_free+0x9e>
 801d83c:	2100      	movs	r1, #0
 801d83e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d842:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d846:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 801d84a:	695e      	ldr	r6, [r3, #20]
 801d84c:	4b46      	ldr	r3, [pc, #280]	@ (801d968 <tsi_free+0x1c8>)
 801d84e:	f106 010b 	add.w	r1, r6, #11
 801d852:	fb91 f1f6 	sdiv	r1, r1, r6
 801d856:	fb06 f101 	mul.w	r1, r6, r1
 801d85a:	1a45      	subs	r5, r0, r1
 801d85c:	686c      	ldr	r4, [r5, #4]
 801d85e:	4f43      	ldr	r7, [pc, #268]	@ (801d96c <tsi_free+0x1cc>)
 801d860:	429c      	cmp	r4, r3
 801d862:	6039      	str	r1, [r7, #0]
 801d864:	46a8      	mov	r8, r5
 801d866:	d00d      	beq.n	801d884 <tsi_free+0xe4>
 801d868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d86c:	2101      	movs	r1, #1
 801d86e:	e7e6      	b.n	801d83e <tsi_free+0x9e>
 801d870:	2102      	movs	r1, #2
 801d872:	e7e4      	b.n	801d83e <tsi_free+0x9e>
 801d874:	2103      	movs	r1, #3
 801d876:	e7e2      	b.n	801d83e <tsi_free+0x9e>
 801d878:	2104      	movs	r1, #4
 801d87a:	e7e0      	b.n	801d83e <tsi_free+0x9e>
 801d87c:	2105      	movs	r1, #5
 801d87e:	e7de      	b.n	801d83e <tsi_free+0x9e>
 801d880:	2106      	movs	r1, #6
 801d882:	e7dc      	b.n	801d83e <tsi_free+0x9e>
 801d884:	4b3a      	ldr	r3, [pc, #232]	@ (801d970 <tsi_free+0x1d0>)
 801d886:	606b      	str	r3, [r5, #4]
 801d888:	6894      	ldr	r4, [r2, #8]
 801d88a:	18a3      	adds	r3, r4, r2
 801d88c:	429d      	cmp	r5, r3
 801d88e:	d95e      	bls.n	801d94e <tsi_free+0x1ae>
 801d890:	b90c      	cbnz	r4, 801d896 <tsi_free+0xf6>
 801d892:	e05c      	b.n	801d94e <tsi_free+0x1ae>
 801d894:	b12c      	cbz	r4, 801d8a2 <tsi_free+0x102>
 801d896:	689c      	ldr	r4, [r3, #8]
 801d898:	469c      	mov	ip, r3
 801d89a:	469e      	mov	lr, r3
 801d89c:	1913      	adds	r3, r2, r4
 801d89e:	429d      	cmp	r5, r3
 801d8a0:	d8f8      	bhi.n	801d894 <tsi_free+0xf4>
 801d8a2:	682f      	ldr	r7, [r5, #0]
 801d8a4:	4594      	cmp	ip, r2
 801d8a6:	4438      	add	r0, r7
 801d8a8:	d04d      	beq.n	801d946 <tsi_free+0x1a6>
 801d8aa:	f8dc 7000 	ldr.w	r7, [ip]
 801d8ae:	eb01 040c 	add.w	r4, r1, ip
 801d8b2:	443c      	add	r4, r7
 801d8b4:	1b64      	subs	r4, r4, r5
 801d8b6:	fab4 f484 	clz	r4, r4
 801d8ba:	0964      	lsrs	r4, r4, #5
 801d8bc:	2e00      	cmp	r6, #0
 801d8be:	dd32      	ble.n	801d926 <tsi_free+0x186>
 801d8c0:	fbb5 f7f6 	udiv	r7, r5, r6
 801d8c4:	fb06 5c17 	mls	ip, r6, r7, r5
 801d8c8:	f1bc 0f00 	cmp.w	ip, #0
 801d8cc:	d001      	beq.n	801d8d2 <tsi_free+0x132>
 801d8ce:	fb07 6506 	mla	r5, r7, r6, r6
 801d8d2:	fbb3 f7f6 	udiv	r7, r3, r6
 801d8d6:	fb06 3c17 	mls	ip, r6, r7, r3
 801d8da:	1aad      	subs	r5, r5, r2
 801d8dc:	f8ce 5008 	str.w	r5, [lr, #8]
 801d8e0:	f1bc 0f00 	cmp.w	ip, #0
 801d8e4:	d01d      	beq.n	801d922 <tsi_free+0x182>
 801d8e6:	fb07 6606 	mla	r6, r7, r6, r6
 801d8ea:	1ab2      	subs	r2, r6, r2
 801d8ec:	f8c8 2008 	str.w	r2, [r8, #8]
 801d8f0:	b154      	cbz	r4, 801d908 <tsi_free+0x168>
 801d8f2:	f8d8 5000 	ldr.w	r5, [r8]
 801d8f6:	46f0      	mov	r8, lr
 801d8f8:	f8de 4000 	ldr.w	r4, [lr]
 801d8fc:	440d      	add	r5, r1
 801d8fe:	442c      	add	r4, r5
 801d900:	f8ce 4000 	str.w	r4, [lr]
 801d904:	f8ce 2008 	str.w	r2, [lr, #8]
 801d908:	4283      	cmp	r3, r0
 801d90a:	d1ad      	bne.n	801d868 <tsi_free+0xc8>
 801d90c:	6818      	ldr	r0, [r3, #0]
 801d90e:	f8d8 2000 	ldr.w	r2, [r8]
 801d912:	4401      	add	r1, r0
 801d914:	440a      	add	r2, r1
 801d916:	f8c8 2000 	str.w	r2, [r8]
 801d91a:	689b      	ldr	r3, [r3, #8]
 801d91c:	f8c8 3008 	str.w	r3, [r8, #8]
 801d920:	e7a2      	b.n	801d868 <tsi_free+0xc8>
 801d922:	461e      	mov	r6, r3
 801d924:	e7e1      	b.n	801d8ea <tsi_free+0x14a>
 801d926:	1aae      	subs	r6, r5, r2
 801d928:	1a9a      	subs	r2, r3, r2
 801d92a:	f8ce 6008 	str.w	r6, [lr, #8]
 801d92e:	60aa      	str	r2, [r5, #8]
 801d930:	2c00      	cmp	r4, #0
 801d932:	d0e9      	beq.n	801d908 <tsi_free+0x168>
 801d934:	682d      	ldr	r5, [r5, #0]
 801d936:	f8de 4000 	ldr.w	r4, [lr]
 801d93a:	440d      	add	r5, r1
 801d93c:	442c      	add	r4, r5
 801d93e:	f8ce 4000 	str.w	r4, [lr]
 801d942:	46f0      	mov	r8, lr
 801d944:	e7de      	b.n	801d904 <tsi_free+0x164>
 801d946:	2e00      	cmp	r6, #0
 801d948:	dd06      	ble.n	801d958 <tsi_free+0x1b8>
 801d94a:	2400      	movs	r4, #0
 801d94c:	e7b8      	b.n	801d8c0 <tsi_free+0x120>
 801d94e:	682c      	ldr	r4, [r5, #0]
 801d950:	4696      	mov	lr, r2
 801d952:	4420      	add	r0, r4
 801d954:	2400      	movs	r4, #0
 801d956:	e7b1      	b.n	801d8bc <tsi_free+0x11c>
 801d958:	eba5 020c 	sub.w	r2, r5, ip
 801d95c:	f8cc 2008 	str.w	r2, [ip, #8]
 801d960:	60ac      	str	r4, [r5, #8]
 801d962:	e7d1      	b.n	801d908 <tsi_free+0x168>
 801d964:	200832e0 	.word	0x200832e0
 801d968:	000f1fa2 	.word	0x000f1fa2
 801d96c:	200001e4 	.word	0x200001e4
 801d970:	000f1fa1 	.word	0x000f1fa1

0801d974 <nema_cl_create_sized>:
 801d974:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d976:	b093      	sub	sp, #76	@ 0x4c
 801d978:	466d      	mov	r5, sp
 801d97a:	4606      	mov	r6, r0
 801d97c:	460a      	mov	r2, r1
 801d97e:	4628      	mov	r0, r5
 801d980:	2100      	movs	r1, #0
 801d982:	f7e5 fa6d 	bl	8002e60 <nema_buffer_create_pool>
 801d986:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801d98a:	2500      	movs	r5, #0
 801d98c:	ac04      	add	r4, sp, #16
 801d98e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d992:	4620      	mov	r0, r4
 801d994:	f7e5 fa86 	bl	8002ea4 <nema_buffer_map>
 801d998:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801d99c:	ac08      	add	r4, sp, #32
 801d99e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d9a2:	2110      	movs	r1, #16
 801d9a4:	f04f 32ff 	mov.w	r2, #4294967295
 801d9a8:	9b04      	ldr	r3, [sp, #16]
 801d9aa:	950d      	str	r5, [sp, #52]	@ 0x34
 801d9ac:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 801d9b0:	42ab      	cmp	r3, r5
 801d9b2:	4635      	mov	r5, r6
 801d9b4:	bfb8      	it	lt
 801d9b6:	3307      	addlt	r3, #7
 801d9b8:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 801d9bc:	10db      	asrs	r3, r3, #3
 801d9be:	005b      	lsls	r3, r3, #1
 801d9c0:	930c      	str	r3, [sp, #48]	@ 0x30
 801d9c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d9c4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d9c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d9c8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d9ca:	e894 0003 	ldmia.w	r4, {r0, r1}
 801d9ce:	2700      	movs	r7, #0
 801d9d0:	e885 0003 	stmia.w	r5, {r0, r1}
 801d9d4:	4630      	mov	r0, r6
 801d9d6:	61b7      	str	r7, [r6, #24]
 801d9d8:	b013      	add	sp, #76	@ 0x4c
 801d9da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d9dc <nema_extend_bound_cl>:
 801d9dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d9de:	4d6e      	ldr	r5, [pc, #440]	@ (801db98 <nema_extend_bound_cl+0x1bc>)
 801d9e0:	b09f      	sub	sp, #124	@ 0x7c
 801d9e2:	682b      	ldr	r3, [r5, #0]
 801d9e4:	2b00      	cmp	r3, #0
 801d9e6:	f000 80c1 	beq.w	801db6c <nema_extend_bound_cl+0x190>
 801d9ea:	4606      	mov	r6, r0
 801d9ec:	6998      	ldr	r0, [r3, #24]
 801d9ee:	0784      	lsls	r4, r0, #30
 801d9f0:	f140 80b6 	bpl.w	801db60 <nema_extend_bound_cl+0x184>
 801d9f4:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 801d9f8:	0680      	lsls	r0, r0, #26
 801d9fa:	d44e      	bmi.n	801da9a <nema_extend_bound_cl+0xbe>
 801d9fc:	1a89      	subs	r1, r1, r2
 801d9fe:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801da02:	1049      	asrs	r1, r1, #1
 801da04:	2902      	cmp	r1, #2
 801da06:	dd13      	ble.n	801da30 <nema_extend_bound_cl+0x54>
 801da08:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 801da0c:	2700      	movs	r7, #0
 801da0e:	1e94      	subs	r4, r2, #2
 801da10:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801da14:	1c91      	adds	r1, r2, #2
 801da16:	0092      	lsls	r2, r2, #2
 801da18:	6898      	ldr	r0, [r3, #8]
 801da1a:	f840 c002 	str.w	ip, [r0, r2]
 801da1e:	6898      	ldr	r0, [r3, #8]
 801da20:	4410      	add	r0, r2
 801da22:	6047      	str	r7, [r0, #4]
 801da24:	6159      	str	r1, [r3, #20]
 801da26:	3102      	adds	r1, #2
 801da28:	428c      	cmp	r4, r1
 801da2a:	f102 0208 	add.w	r2, r2, #8
 801da2e:	d1f3      	bne.n	801da18 <nema_extend_bound_cl+0x3c>
 801da30:	6a1c      	ldr	r4, [r3, #32]
 801da32:	2c00      	cmp	r4, #0
 801da34:	d050      	beq.n	801dad8 <nema_extend_bound_cl+0xfc>
 801da36:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 801da3a:	26f0      	movs	r6, #240	@ 0xf0
 801da3c:	27f4      	movs	r7, #244	@ 0xf4
 801da3e:	6898      	ldr	r0, [r3, #8]
 801da40:	f041 0104 	orr.w	r1, r1, #4
 801da44:	6199      	str	r1, [r3, #24]
 801da46:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 801da4a:	6899      	ldr	r1, [r3, #8]
 801da4c:	68e6      	ldr	r6, [r4, #12]
 801da4e:	0090      	lsls	r0, r2, #2
 801da50:	4401      	add	r1, r0
 801da52:	604e      	str	r6, [r1, #4]
 801da54:	6899      	ldr	r1, [r3, #8]
 801da56:	1c96      	adds	r6, r2, #2
 801da58:	4401      	add	r1, r0
 801da5a:	615e      	str	r6, [r3, #20]
 801da5c:	608f      	str	r7, [r1, #8]
 801da5e:	6899      	ldr	r1, [r3, #8]
 801da60:	6926      	ldr	r6, [r4, #16]
 801da62:	4401      	add	r1, r0
 801da64:	1d17      	adds	r7, r2, #4
 801da66:	60ce      	str	r6, [r1, #12]
 801da68:	621c      	str	r4, [r3, #32]
 801da6a:	615f      	str	r7, [r3, #20]
 801da6c:	68e1      	ldr	r1, [r4, #12]
 801da6e:	f011 0107 	ands.w	r1, r1, #7
 801da72:	d120      	bne.n	801dab6 <nema_extend_bound_cl+0xda>
 801da74:	691e      	ldr	r6, [r3, #16]
 801da76:	3205      	adds	r2, #5
 801da78:	42b2      	cmp	r2, r6
 801da7a:	db23      	blt.n	801dac4 <nema_extend_bound_cl+0xe8>
 801da7c:	699a      	ldr	r2, [r3, #24]
 801da7e:	f022 0220 	bic.w	r2, r2, #32
 801da82:	619a      	str	r2, [r3, #24]
 801da84:	69a3      	ldr	r3, [r4, #24]
 801da86:	075a      	lsls	r2, r3, #29
 801da88:	d503      	bpl.n	801da92 <nema_extend_bound_cl+0xb6>
 801da8a:	6a24      	ldr	r4, [r4, #32]
 801da8c:	69a3      	ldr	r3, [r4, #24]
 801da8e:	075b      	lsls	r3, r3, #29
 801da90:	d4fb      	bmi.n	801da8a <nema_extend_bound_cl+0xae>
 801da92:	2000      	movs	r0, #0
 801da94:	602c      	str	r4, [r5, #0]
 801da96:	b01f      	add	sp, #124	@ 0x7c
 801da98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da9a:	2900      	cmp	r1, #0
 801da9c:	bfb8      	it	lt
 801da9e:	3103      	addlt	r1, #3
 801daa0:	1089      	asrs	r1, r1, #2
 801daa2:	0049      	lsls	r1, r1, #1
 801daa4:	4291      	cmp	r1, r2
 801daa6:	bfcc      	ite	gt
 801daa8:	4610      	movgt	r0, r2
 801daaa:	1a50      	suble	r0, r2, r1
 801daac:	1a09      	subs	r1, r1, r0
 801daae:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801dab2:	1049      	asrs	r1, r1, #1
 801dab4:	e7a6      	b.n	801da04 <nema_extend_bound_cl+0x28>
 801dab6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801daba:	f7f3 f853 	bl	8010b64 <nema_set_error>
 801dabe:	2000      	movs	r0, #0
 801dac0:	b01f      	add	sp, #124	@ 0x7c
 801dac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dac4:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 801dac8:	689a      	ldr	r2, [r3, #8]
 801daca:	4410      	add	r0, r2
 801dacc:	e9c0 6104 	strd	r6, r1, [r0, #16]
 801dad0:	699a      	ldr	r2, [r3, #24]
 801dad2:	f022 0208 	bic.w	r2, r2, #8
 801dad6:	e7d2      	b.n	801da7e <nema_extend_bound_cl+0xa2>
 801dad8:	2028      	movs	r0, #40	@ 0x28
 801dada:	f7e5 f93f 	bl	8002d5c <nema_host_malloc>
 801dade:	4604      	mov	r4, r0
 801dae0:	2800      	cmp	r0, #0
 801dae2:	d052      	beq.n	801db8a <nema_extend_bound_cl+0x1ae>
 801dae4:	1cb1      	adds	r1, r6, #2
 801dae6:	00c9      	lsls	r1, r1, #3
 801dae8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801daec:	dd1a      	ble.n	801db24 <nema_extend_bound_cl+0x148>
 801daee:	466e      	mov	r6, sp
 801daf0:	4627      	mov	r7, r4
 801daf2:	4668      	mov	r0, sp
 801daf4:	f7ff ff3e 	bl	801d974 <nema_cl_create_sized>
 801daf8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dafa:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801dafc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dafe:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801db00:	e896 0003 	ldmia.w	r6, {r0, r1}
 801db04:	e887 0003 	stmia.w	r7, {r0, r1}
 801db08:	68a3      	ldr	r3, [r4, #8]
 801db0a:	2b00      	cmp	r3, #0
 801db0c:	d034      	beq.n	801db78 <nema_extend_bound_cl+0x19c>
 801db0e:	682b      	ldr	r3, [r5, #0]
 801db10:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801db12:	2a00      	cmp	r2, #0
 801db14:	bf08      	it	eq
 801db16:	461a      	moveq	r2, r3
 801db18:	6262      	str	r2, [r4, #36]	@ 0x24
 801db1a:	699a      	ldr	r2, [r3, #24]
 801db1c:	f022 020c 	bic.w	r2, r2, #12
 801db20:	61a2      	str	r2, [r4, #24]
 801db22:	e788      	b.n	801da36 <nema_extend_bound_cl+0x5a>
 801db24:	a80a      	add	r0, sp, #40	@ 0x28
 801db26:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 801db2a:	f7ff ff23 	bl	801d974 <nema_cl_create_sized>
 801db2e:	2302      	movs	r3, #2
 801db30:	46a4      	mov	ip, r4
 801db32:	9310      	str	r3, [sp, #64]	@ 0x40
 801db34:	ae0a      	add	r6, sp, #40	@ 0x28
 801db36:	af14      	add	r7, sp, #80	@ 0x50
 801db38:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db3a:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801db3c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db3e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801db40:	e896 0003 	ldmia.w	r6, {r0, r1}
 801db44:	ae14      	add	r6, sp, #80	@ 0x50
 801db46:	e887 0003 	stmia.w	r7, {r0, r1}
 801db4a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db4c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801db50:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db52:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801db56:	e897 0003 	ldmia.w	r7, {r0, r1}
 801db5a:	e88c 0003 	stmia.w	ip, {r0, r1}
 801db5e:	e7d3      	b.n	801db08 <nema_extend_bound_cl+0x12c>
 801db60:	2008      	movs	r0, #8
 801db62:	f7f2 ffff 	bl	8010b64 <nema_set_error>
 801db66:	f04f 30ff 	mov.w	r0, #4294967295
 801db6a:	e7a9      	b.n	801dac0 <nema_extend_bound_cl+0xe4>
 801db6c:	2080      	movs	r0, #128	@ 0x80
 801db6e:	f7f2 fff9 	bl	8010b64 <nema_set_error>
 801db72:	f04f 30ff 	mov.w	r0, #4294967295
 801db76:	e7a3      	b.n	801dac0 <nema_extend_bound_cl+0xe4>
 801db78:	2010      	movs	r0, #16
 801db7a:	f7f2 fff3 	bl	8010b64 <nema_set_error>
 801db7e:	4620      	mov	r0, r4
 801db80:	f7e5 f8ea 	bl	8002d58 <nema_host_free>
 801db84:	f04f 30ff 	mov.w	r0, #4294967295
 801db88:	e79a      	b.n	801dac0 <nema_extend_bound_cl+0xe4>
 801db8a:	2010      	movs	r0, #16
 801db8c:	f7f2 ffea 	bl	8010b64 <nema_set_error>
 801db90:	f04f 30ff 	mov.w	r0, #4294967295
 801db94:	e794      	b.n	801dac0 <nema_extend_bound_cl+0xe4>
 801db96:	bf00      	nop
 801db98:	200833a0 	.word	0x200833a0

0801db9c <nema_cl_bind_circular>:
 801db9c:	b358      	cbz	r0, 801dbf6 <nema_cl_bind_circular+0x5a>
 801db9e:	68c3      	ldr	r3, [r0, #12]
 801dba0:	f013 0207 	ands.w	r2, r3, #7
 801dba4:	d117      	bne.n	801dbd6 <nema_cl_bind_circular+0x3a>
 801dba6:	b4f0      	push	{r4, r5, r6, r7}
 801dba8:	4c15      	ldr	r4, [pc, #84]	@ (801dc00 <nema_cl_bind_circular+0x64>)
 801dbaa:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801dbac:	6821      	ldr	r1, [r4, #0]
 801dbae:	2b00      	cmp	r3, #0
 801dbb0:	bf08      	it	eq
 801dbb2:	4603      	moveq	r3, r0
 801dbb4:	b141      	cbz	r1, 801dbc8 <nema_cl_bind_circular+0x2c>
 801dbb6:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 801dbba:	1c46      	adds	r6, r0, #1
 801dbbc:	42ae      	cmp	r6, r5
 801dbbe:	db0e      	blt.n	801dbde <nema_cl_bind_circular+0x42>
 801dbc0:	698a      	ldr	r2, [r1, #24]
 801dbc2:	f022 0220 	bic.w	r2, r2, #32
 801dbc6:	618a      	str	r2, [r1, #24]
 801dbc8:	699a      	ldr	r2, [r3, #24]
 801dbca:	6023      	str	r3, [r4, #0]
 801dbcc:	f042 0220 	orr.w	r2, r2, #32
 801dbd0:	619a      	str	r2, [r3, #24]
 801dbd2:	bcf0      	pop	{r4, r5, r6, r7}
 801dbd4:	4770      	bx	lr
 801dbd6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801dbda:	f7f2 bfc3 	b.w	8010b64 <nema_set_error>
 801dbde:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 801dbe2:	688d      	ldr	r5, [r1, #8]
 801dbe4:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801dbe8:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 801dbec:	6072      	str	r2, [r6, #4]
 801dbee:	698a      	ldr	r2, [r1, #24]
 801dbf0:	f022 0208 	bic.w	r2, r2, #8
 801dbf4:	e7e5      	b.n	801dbc2 <nema_cl_bind_circular+0x26>
 801dbf6:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dbfa:	f7f2 bfb3 	b.w	8010b64 <nema_set_error>
 801dbfe:	bf00      	nop
 801dc00:	200833a0 	.word	0x200833a0

0801dc04 <nema_cl_unbind>:
 801dc04:	4910      	ldr	r1, [pc, #64]	@ (801dc48 <nema_cl_unbind+0x44>)
 801dc06:	680b      	ldr	r3, [r1, #0]
 801dc08:	b1d3      	cbz	r3, 801dc40 <nema_cl_unbind+0x3c>
 801dc0a:	b430      	push	{r4, r5}
 801dc0c:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 801dc10:	1c54      	adds	r4, r2, #1
 801dc12:	4284      	cmp	r4, r0
 801dc14:	db07      	blt.n	801dc26 <nema_cl_unbind+0x22>
 801dc16:	699a      	ldr	r2, [r3, #24]
 801dc18:	f022 0220 	bic.w	r2, r2, #32
 801dc1c:	619a      	str	r2, [r3, #24]
 801dc1e:	2300      	movs	r3, #0
 801dc20:	600b      	str	r3, [r1, #0]
 801dc22:	bc30      	pop	{r4, r5}
 801dc24:	4770      	bx	lr
 801dc26:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 801dc2a:	2400      	movs	r4, #0
 801dc2c:	6898      	ldr	r0, [r3, #8]
 801dc2e:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 801dc32:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801dc36:	6054      	str	r4, [r2, #4]
 801dc38:	699a      	ldr	r2, [r3, #24]
 801dc3a:	f022 0208 	bic.w	r2, r2, #8
 801dc3e:	e7eb      	b.n	801dc18 <nema_cl_unbind+0x14>
 801dc40:	2300      	movs	r3, #0
 801dc42:	600b      	str	r3, [r1, #0]
 801dc44:	4770      	bx	lr
 801dc46:	bf00      	nop
 801dc48:	200833a0 	.word	0x200833a0

0801dc4c <nema_cl_get_bound>:
 801dc4c:	4b01      	ldr	r3, [pc, #4]	@ (801dc54 <nema_cl_get_bound+0x8>)
 801dc4e:	6818      	ldr	r0, [r3, #0]
 801dc50:	4770      	bx	lr
 801dc52:	bf00      	nop
 801dc54:	200833a0 	.word	0x200833a0

0801dc58 <nema_cl_submit_no_irq>:
 801dc58:	2800      	cmp	r0, #0
 801dc5a:	d052      	beq.n	801dd02 <nema_cl_submit_no_irq+0xaa>
 801dc5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dc5e:	6944      	ldr	r4, [r0, #20]
 801dc60:	b1f4      	cbz	r4, 801dca0 <nema_cl_submit_no_irq+0x48>
 801dc62:	6983      	ldr	r3, [r0, #24]
 801dc64:	4605      	mov	r5, r0
 801dc66:	069a      	lsls	r2, r3, #26
 801dc68:	d51b      	bpl.n	801dca2 <nema_cl_submit_no_irq+0x4a>
 801dc6a:	6902      	ldr	r2, [r0, #16]
 801dc6c:	2a00      	cmp	r2, #0
 801dc6e:	bfb8      	it	lt
 801dc70:	3203      	addlt	r2, #3
 801dc72:	1092      	asrs	r2, r2, #2
 801dc74:	0056      	lsls	r6, r2, #1
 801dc76:	42b4      	cmp	r4, r6
 801dc78:	da3d      	bge.n	801dcf6 <nema_cl_submit_no_irq+0x9e>
 801dc7a:	68c7      	ldr	r7, [r0, #12]
 801dc7c:	071b      	lsls	r3, r3, #28
 801dc7e:	d549      	bpl.n	801dd14 <nema_cl_submit_no_irq+0xbc>
 801dc80:	69e8      	ldr	r0, [r5, #28]
 801dc82:	2800      	cmp	r0, #0
 801dc84:	da41      	bge.n	801dd0a <nema_cl_submit_no_irq+0xb2>
 801dc86:	f04f 33ff 	mov.w	r3, #4294967295
 801dc8a:	61eb      	str	r3, [r5, #28]
 801dc8c:	4621      	mov	r1, r4
 801dc8e:	4638      	mov	r0, r7
 801dc90:	f7f2 fd54 	bl	801073c <nema_rb_submit_cmdlist2>
 801dc94:	696b      	ldr	r3, [r5, #20]
 801dc96:	61e8      	str	r0, [r5, #28]
 801dc98:	42b3      	cmp	r3, r6
 801dc9a:	bfa8      	it	ge
 801dc9c:	2600      	movge	r6, #0
 801dc9e:	616e      	str	r6, [r5, #20]
 801dca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dca2:	4604      	mov	r4, r0
 801dca4:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801dca8:	e012      	b.n	801dcd0 <nema_cl_submit_no_irq+0x78>
 801dcaa:	6923      	ldr	r3, [r4, #16]
 801dcac:	6949      	ldr	r1, [r1, #20]
 801dcae:	4433      	add	r3, r6
 801dcb0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801dcb4:	69a3      	ldr	r3, [r4, #24]
 801dcb6:	4620      	mov	r0, r4
 801dcb8:	f023 0308 	bic.w	r3, r3, #8
 801dcbc:	61a3      	str	r3, [r4, #24]
 801dcbe:	f7e5 f903 	bl	8002ec8 <nema_buffer_flush>
 801dcc2:	69a3      	ldr	r3, [r4, #24]
 801dcc4:	f043 0308 	orr.w	r3, r3, #8
 801dcc8:	61a3      	str	r3, [r4, #24]
 801dcca:	6a24      	ldr	r4, [r4, #32]
 801dccc:	b134      	cbz	r4, 801dcdc <nema_cl_submit_no_irq+0x84>
 801dcce:	69a3      	ldr	r3, [r4, #24]
 801dcd0:	0758      	lsls	r0, r3, #29
 801dcd2:	68a2      	ldr	r2, [r4, #8]
 801dcd4:	6a21      	ldr	r1, [r4, #32]
 801dcd6:	d4e8      	bmi.n	801dcaa <nema_cl_submit_no_irq+0x52>
 801dcd8:	071b      	lsls	r3, r3, #28
 801dcda:	d523      	bpl.n	801dd24 <nema_cl_submit_no_irq+0xcc>
 801dcdc:	2000      	movs	r0, #0
 801dcde:	f7e5 f8f4 	bl	8002eca <nema_mutex_lock>
 801dce2:	6969      	ldr	r1, [r5, #20]
 801dce4:	4628      	mov	r0, r5
 801dce6:	f7f2 fdad 	bl	8010844 <nema_rb_submit_cmdlist>
 801dcea:	61e8      	str	r0, [r5, #28]
 801dcec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801dcf0:	2000      	movs	r0, #0
 801dcf2:	f7e5 b8ec 	b.w	8002ece <nema_mutex_unlock>
 801dcf6:	d0d3      	beq.n	801dca0 <nema_cl_submit_no_irq+0x48>
 801dcf8:	68c7      	ldr	r7, [r0, #12]
 801dcfa:	1ba4      	subs	r4, r4, r6
 801dcfc:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
 801dd00:	e7bc      	b.n	801dc7c <nema_cl_submit_no_irq+0x24>
 801dd02:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dd06:	f7f2 bf2d 	b.w	8010b64 <nema_set_error>
 801dd0a:	f7e5 f817 	bl	8002d3c <nema_wait_irq_cl>
 801dd0e:	2800      	cmp	r0, #0
 801dd10:	dab9      	bge.n	801dc86 <nema_cl_submit_no_irq+0x2e>
 801dd12:	e7bb      	b.n	801dc8c <nema_cl_submit_no_irq+0x34>
 801dd14:	4628      	mov	r0, r5
 801dd16:	f7e5 f8d7 	bl	8002ec8 <nema_buffer_flush>
 801dd1a:	69ab      	ldr	r3, [r5, #24]
 801dd1c:	f043 0308 	orr.w	r3, r3, #8
 801dd20:	61ab      	str	r3, [r5, #24]
 801dd22:	e7ad      	b.n	801dc80 <nema_cl_submit_no_irq+0x28>
 801dd24:	4620      	mov	r0, r4
 801dd26:	f7e5 f8cf 	bl	8002ec8 <nema_buffer_flush>
 801dd2a:	69a3      	ldr	r3, [r4, #24]
 801dd2c:	f043 0308 	orr.w	r3, r3, #8
 801dd30:	61a3      	str	r3, [r4, #24]
 801dd32:	e7d3      	b.n	801dcdc <nema_cl_submit_no_irq+0x84>

0801dd34 <nema_cl_get_space>:
 801dd34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dd36:	4e2c      	ldr	r6, [pc, #176]	@ (801dde8 <nema_cl_get_space+0xb4>)
 801dd38:	6834      	ldr	r4, [r6, #0]
 801dd3a:	2c00      	cmp	r4, #0
 801dd3c:	d04d      	beq.n	801ddda <nema_cl_get_space+0xa6>
 801dd3e:	69a7      	ldr	r7, [r4, #24]
 801dd40:	4605      	mov	r5, r0
 801dd42:	f027 0108 	bic.w	r1, r7, #8
 801dd46:	f017 0720 	ands.w	r7, r7, #32
 801dd4a:	61a1      	str	r1, [r4, #24]
 801dd4c:	6923      	ldr	r3, [r4, #16]
 801dd4e:	6961      	ldr	r1, [r4, #20]
 801dd50:	d016      	beq.n	801dd80 <nema_cl_get_space+0x4c>
 801dd52:	2b00      	cmp	r3, #0
 801dd54:	bfb8      	it	lt
 801dd56:	3303      	addlt	r3, #3
 801dd58:	109b      	asrs	r3, r3, #2
 801dd5a:	005b      	lsls	r3, r3, #1
 801dd5c:	4299      	cmp	r1, r3
 801dd5e:	bfb4      	ite	lt
 801dd60:	460a      	movlt	r2, r1
 801dd62:	1aca      	subge	r2, r1, r3
 801dd64:	1a9a      	subs	r2, r3, r2
 801dd66:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 801dd6a:	3001      	adds	r0, #1
 801dd6c:	ebb0 0f62 	cmp.w	r0, r2, asr #1
 801dd70:	da1a      	bge.n	801dda8 <nema_cl_get_space+0x74>
 801dd72:	68a0      	ldr	r0, [r4, #8]
 801dd74:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dd78:	6165      	str	r5, [r4, #20]
 801dd7a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dd7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd80:	1a5b      	subs	r3, r3, r1
 801dd82:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801dd86:	105b      	asrs	r3, r3, #1
 801dd88:	3b01      	subs	r3, #1
 801dd8a:	4283      	cmp	r3, r0
 801dd8c:	dcf1      	bgt.n	801dd72 <nema_cl_get_space+0x3e>
 801dd8e:	f7ff fe25 	bl	801d9dc <nema_extend_bound_cl>
 801dd92:	2800      	cmp	r0, #0
 801dd94:	db26      	blt.n	801dde4 <nema_cl_get_space+0xb0>
 801dd96:	6834      	ldr	r4, [r6, #0]
 801dd98:	6961      	ldr	r1, [r4, #20]
 801dd9a:	68a0      	ldr	r0, [r4, #8]
 801dd9c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dda0:	6165      	str	r5, [r4, #20]
 801dda2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dda6:	e7ea      	b.n	801dd7e <nema_cl_get_space+0x4a>
 801dda8:	2900      	cmp	r1, #0
 801ddaa:	d0e2      	beq.n	801dd72 <nema_cl_get_space+0x3e>
 801ddac:	4299      	cmp	r1, r3
 801ddae:	d0e0      	beq.n	801dd72 <nema_cl_get_space+0x3e>
 801ddb0:	4620      	mov	r0, r4
 801ddb2:	f7ff ff51 	bl	801dc58 <nema_cl_submit_no_irq>
 801ddb6:	69e0      	ldr	r0, [r4, #28]
 801ddb8:	f7f2 fe10 	bl	80109dc <nema_rb_submit_cl_id>
 801ddbc:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801ddc0:	69e0      	ldr	r0, [r4, #28]
 801ddc2:	4298      	cmp	r0, r3
 801ddc4:	d1e7      	bne.n	801dd96 <nema_cl_get_space+0x62>
 801ddc6:	f7e4 ffb9 	bl	8002d3c <nema_wait_irq_cl>
 801ddca:	2800      	cmp	r0, #0
 801ddcc:	dbe3      	blt.n	801dd96 <nema_cl_get_space+0x62>
 801ddce:	f04f 33ff 	mov.w	r3, #4294967295
 801ddd2:	61e3      	str	r3, [r4, #28]
 801ddd4:	6834      	ldr	r4, [r6, #0]
 801ddd6:	6961      	ldr	r1, [r4, #20]
 801ddd8:	e7cb      	b.n	801dd72 <nema_cl_get_space+0x3e>
 801ddda:	2080      	movs	r0, #128	@ 0x80
 801dddc:	f7f2 fec2 	bl	8010b64 <nema_set_error>
 801dde0:	4620      	mov	r0, r4
 801dde2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dde4:	4638      	mov	r0, r7
 801dde6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dde8:	200833a0 	.word	0x200833a0

0801ddec <nema_cl_add_cmd>:
 801ddec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ddf0:	4e2e      	ldr	r6, [pc, #184]	@ (801deac <nema_cl_add_cmd+0xc0>)
 801ddf2:	4680      	mov	r8, r0
 801ddf4:	6834      	ldr	r4, [r6, #0]
 801ddf6:	460f      	mov	r7, r1
 801ddf8:	b35c      	cbz	r4, 801de52 <nema_cl_add_cmd+0x66>
 801ddfa:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 801ddfe:	f025 0308 	bic.w	r3, r5, #8
 801de02:	f015 0020 	ands.w	r0, r5, #32
 801de06:	61a3      	str	r3, [r4, #24]
 801de08:	6923      	ldr	r3, [r4, #16]
 801de0a:	d016      	beq.n	801de3a <nema_cl_add_cmd+0x4e>
 801de0c:	2b00      	cmp	r3, #0
 801de0e:	bfb8      	it	lt
 801de10:	3303      	addlt	r3, #3
 801de12:	109b      	asrs	r3, r3, #2
 801de14:	005b      	lsls	r3, r3, #1
 801de16:	429a      	cmp	r2, r3
 801de18:	bfb4      	ite	lt
 801de1a:	4611      	movlt	r1, r2
 801de1c:	1ad1      	subge	r1, r2, r3
 801de1e:	1a59      	subs	r1, r3, r1
 801de20:	2903      	cmp	r1, #3
 801de22:	dd2a      	ble.n	801de7a <nema_cl_add_cmd+0x8e>
 801de24:	1c51      	adds	r1, r2, #1
 801de26:	68a0      	ldr	r0, [r4, #8]
 801de28:	1c93      	adds	r3, r2, #2
 801de2a:	f840 8022 	str.w	r8, [r0, r2, lsl #2]
 801de2e:	68a2      	ldr	r2, [r4, #8]
 801de30:	f842 7021 	str.w	r7, [r2, r1, lsl #2]
 801de34:	6163      	str	r3, [r4, #20]
 801de36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801de3a:	07a9      	lsls	r1, r5, #30
 801de3c:	d515      	bpl.n	801de6a <nema_cl_add_cmd+0x7e>
 801de3e:	1d11      	adds	r1, r2, #4
 801de40:	4299      	cmp	r1, r3
 801de42:	dbef      	blt.n	801de24 <nema_cl_add_cmd+0x38>
 801de44:	f7ff fdca 	bl	801d9dc <nema_extend_bound_cl>
 801de48:	2800      	cmp	r0, #0
 801de4a:	dbf4      	blt.n	801de36 <nema_cl_add_cmd+0x4a>
 801de4c:	6834      	ldr	r4, [r6, #0]
 801de4e:	6962      	ldr	r2, [r4, #20]
 801de50:	e7e8      	b.n	801de24 <nema_cl_add_cmd+0x38>
 801de52:	4620      	mov	r0, r4
 801de54:	f7e5 f839 	bl	8002eca <nema_mutex_lock>
 801de58:	4640      	mov	r0, r8
 801de5a:	4639      	mov	r1, r7
 801de5c:	f7f2 fcf6 	bl	801084c <nema_rb_inline_cmd>
 801de60:	4620      	mov	r0, r4
 801de62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de66:	f7e5 b832 	b.w	8002ece <nema_mutex_unlock>
 801de6a:	1c51      	adds	r1, r2, #1
 801de6c:	4299      	cmp	r1, r3
 801de6e:	dbda      	blt.n	801de26 <nema_cl_add_cmd+0x3a>
 801de70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de74:	2008      	movs	r0, #8
 801de76:	f7f2 be75 	b.w	8010b64 <nema_set_error>
 801de7a:	b1a2      	cbz	r2, 801dea6 <nema_cl_add_cmd+0xba>
 801de7c:	429a      	cmp	r2, r3
 801de7e:	d0d1      	beq.n	801de24 <nema_cl_add_cmd+0x38>
 801de80:	4620      	mov	r0, r4
 801de82:	f7ff fee9 	bl	801dc58 <nema_cl_submit_no_irq>
 801de86:	69e0      	ldr	r0, [r4, #28]
 801de88:	f7f2 fda8 	bl	80109dc <nema_rb_submit_cl_id>
 801de8c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801de90:	69e0      	ldr	r0, [r4, #28]
 801de92:	4298      	cmp	r0, r3
 801de94:	d1da      	bne.n	801de4c <nema_cl_add_cmd+0x60>
 801de96:	f7e4 ff51 	bl	8002d3c <nema_wait_irq_cl>
 801de9a:	2800      	cmp	r0, #0
 801de9c:	bfa4      	itt	ge
 801de9e:	f04f 33ff 	movge.w	r3, #4294967295
 801dea2:	61e3      	strge	r3, [r4, #28]
 801dea4:	e7d2      	b.n	801de4c <nema_cl_add_cmd+0x60>
 801dea6:	2101      	movs	r1, #1
 801dea8:	e7bd      	b.n	801de26 <nema_cl_add_cmd+0x3a>
 801deaa:	bf00      	nop
 801deac:	200833a0 	.word	0x200833a0

0801deb0 <nema_cl_submit>:
 801deb0:	2800      	cmp	r0, #0
 801deb2:	d066      	beq.n	801df82 <nema_cl_submit+0xd2>
 801deb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801deb6:	6944      	ldr	r4, [r0, #20]
 801deb8:	2c00      	cmp	r4, #0
 801deba:	d061      	beq.n	801df80 <nema_cl_submit+0xd0>
 801debc:	6983      	ldr	r3, [r0, #24]
 801debe:	4605      	mov	r5, r0
 801dec0:	069a      	lsls	r2, r3, #26
 801dec2:	d51f      	bpl.n	801df04 <nema_cl_submit+0x54>
 801dec4:	6902      	ldr	r2, [r0, #16]
 801dec6:	2a00      	cmp	r2, #0
 801dec8:	bfb8      	it	lt
 801deca:	3203      	addlt	r2, #3
 801decc:	1092      	asrs	r2, r2, #2
 801dece:	0056      	lsls	r6, r2, #1
 801ded0:	42b4      	cmp	r4, r6
 801ded2:	d055      	beq.n	801df80 <nema_cl_submit+0xd0>
 801ded4:	68c7      	ldr	r7, [r0, #12]
 801ded6:	bfa4      	itt	ge
 801ded8:	1ba4      	subge	r4, r4, r6
 801deda:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 801dede:	071b      	lsls	r3, r3, #28
 801dee0:	d553      	bpl.n	801df8a <nema_cl_submit+0xda>
 801dee2:	69e8      	ldr	r0, [r5, #28]
 801dee4:	2800      	cmp	r0, #0
 801dee6:	da57      	bge.n	801df98 <nema_cl_submit+0xe8>
 801dee8:	f04f 33ff 	mov.w	r3, #4294967295
 801deec:	61eb      	str	r3, [r5, #28]
 801deee:	4621      	mov	r1, r4
 801def0:	4638      	mov	r0, r7
 801def2:	f7f2 fc23 	bl	801073c <nema_rb_submit_cmdlist2>
 801def6:	696b      	ldr	r3, [r5, #20]
 801def8:	61e8      	str	r0, [r5, #28]
 801defa:	429e      	cmp	r6, r3
 801defc:	bfd8      	it	le
 801defe:	2600      	movle	r6, #0
 801df00:	616e      	str	r6, [r5, #20]
 801df02:	e02f      	b.n	801df64 <nema_cl_submit+0xb4>
 801df04:	4604      	mov	r4, r0
 801df06:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801df0a:	e012      	b.n	801df32 <nema_cl_submit+0x82>
 801df0c:	6923      	ldr	r3, [r4, #16]
 801df0e:	6949      	ldr	r1, [r1, #20]
 801df10:	4433      	add	r3, r6
 801df12:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801df16:	69a3      	ldr	r3, [r4, #24]
 801df18:	4620      	mov	r0, r4
 801df1a:	f023 0308 	bic.w	r3, r3, #8
 801df1e:	61a3      	str	r3, [r4, #24]
 801df20:	f7e4 ffd2 	bl	8002ec8 <nema_buffer_flush>
 801df24:	69a3      	ldr	r3, [r4, #24]
 801df26:	f043 0308 	orr.w	r3, r3, #8
 801df2a:	61a3      	str	r3, [r4, #24]
 801df2c:	6a24      	ldr	r4, [r4, #32]
 801df2e:	b16c      	cbz	r4, 801df4c <nema_cl_submit+0x9c>
 801df30:	69a3      	ldr	r3, [r4, #24]
 801df32:	0758      	lsls	r0, r3, #29
 801df34:	68a2      	ldr	r2, [r4, #8]
 801df36:	6a21      	ldr	r1, [r4, #32]
 801df38:	d4e8      	bmi.n	801df0c <nema_cl_submit+0x5c>
 801df3a:	071b      	lsls	r3, r3, #28
 801df3c:	d406      	bmi.n	801df4c <nema_cl_submit+0x9c>
 801df3e:	4620      	mov	r0, r4
 801df40:	f7e4 ffc2 	bl	8002ec8 <nema_buffer_flush>
 801df44:	69a3      	ldr	r3, [r4, #24]
 801df46:	f043 0308 	orr.w	r3, r3, #8
 801df4a:	61a3      	str	r3, [r4, #24]
 801df4c:	2000      	movs	r0, #0
 801df4e:	f7e4 ffbc 	bl	8002eca <nema_mutex_lock>
 801df52:	6969      	ldr	r1, [r5, #20]
 801df54:	4628      	mov	r0, r5
 801df56:	f7f2 fc75 	bl	8010844 <nema_rb_submit_cmdlist>
 801df5a:	61e8      	str	r0, [r5, #28]
 801df5c:	2000      	movs	r0, #0
 801df5e:	f7e4 ffb6 	bl	8002ece <nema_mutex_unlock>
 801df62:	69e8      	ldr	r0, [r5, #28]
 801df64:	f7f2 fd3a 	bl	80109dc <nema_rb_submit_cl_id>
 801df68:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801df6c:	69e8      	ldr	r0, [r5, #28]
 801df6e:	4298      	cmp	r0, r3
 801df70:	d106      	bne.n	801df80 <nema_cl_submit+0xd0>
 801df72:	f7e4 fee3 	bl	8002d3c <nema_wait_irq_cl>
 801df76:	2800      	cmp	r0, #0
 801df78:	db02      	blt.n	801df80 <nema_cl_submit+0xd0>
 801df7a:	f04f 33ff 	mov.w	r3, #4294967295
 801df7e:	61eb      	str	r3, [r5, #28]
 801df80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801df82:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df86:	f7f2 bded 	b.w	8010b64 <nema_set_error>
 801df8a:	f7e4 ff9d 	bl	8002ec8 <nema_buffer_flush>
 801df8e:	69ab      	ldr	r3, [r5, #24]
 801df90:	f043 0308 	orr.w	r3, r3, #8
 801df94:	61ab      	str	r3, [r5, #24]
 801df96:	e7a4      	b.n	801dee2 <nema_cl_submit+0x32>
 801df98:	f7e4 fed0 	bl	8002d3c <nema_wait_irq_cl>
 801df9c:	2800      	cmp	r0, #0
 801df9e:	daa3      	bge.n	801dee8 <nema_cl_submit+0x38>
 801dfa0:	e7a5      	b.n	801deee <nema_cl_submit+0x3e>
 801dfa2:	bf00      	nop

0801dfa4 <nema_cl_wait>:
 801dfa4:	b510      	push	{r4, lr}
 801dfa6:	b170      	cbz	r0, 801dfc6 <nema_cl_wait+0x22>
 801dfa8:	4604      	mov	r4, r0
 801dfaa:	69c0      	ldr	r0, [r0, #28]
 801dfac:	2800      	cmp	r0, #0
 801dfae:	da04      	bge.n	801dfba <nema_cl_wait+0x16>
 801dfb0:	f04f 33ff 	mov.w	r3, #4294967295
 801dfb4:	61e3      	str	r3, [r4, #28]
 801dfb6:	2000      	movs	r0, #0
 801dfb8:	bd10      	pop	{r4, pc}
 801dfba:	f7e4 febf 	bl	8002d3c <nema_wait_irq_cl>
 801dfbe:	2800      	cmp	r0, #0
 801dfc0:	daf6      	bge.n	801dfb0 <nema_cl_wait+0xc>
 801dfc2:	2000      	movs	r0, #0
 801dfc4:	bd10      	pop	{r4, pc}
 801dfc6:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dfca:	f7f2 fdcb 	bl	8010b64 <nema_set_error>
 801dfce:	f04f 30ff 	mov.w	r0, #4294967295
 801dfd2:	bd10      	pop	{r4, pc}

0801dfd4 <nema_blender_init>:
 801dfd4:	b530      	push	{r4, r5, lr}
 801dfd6:	b085      	sub	sp, #20
 801dfd8:	466d      	mov	r5, sp
 801dfda:	2418      	movs	r4, #24
 801dfdc:	4b11      	ldr	r3, [pc, #68]	@ (801e024 <nema_blender_init+0x50>)
 801dfde:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801dfe0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 801dfe4:	2101      	movs	r1, #1
 801dfe6:	4622      	mov	r2, r4
 801dfe8:	4628      	mov	r0, r5
 801dfea:	440c      	add	r4, r1
 801dfec:	f7f4 f95c 	bl	80122a8 <nema_load_frag_shader>
 801dff0:	2c1f      	cmp	r4, #31
 801dff2:	d1f7      	bne.n	801dfe4 <nema_blender_init+0x10>
 801dff4:	4622      	mov	r2, r4
 801dff6:	2101      	movs	r1, #1
 801dff8:	a802      	add	r0, sp, #8
 801dffa:	f7f4 f955 	bl	80122a8 <nema_load_frag_shader>
 801dffe:	f7f3 ffeb 	bl	8011fd8 <nema_readHwConfig>
 801e002:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 801e006:	2800      	cmp	r0, #0
 801e008:	bf14      	ite	ne
 801e00a:	2201      	movne	r2, #1
 801e00c:	2200      	moveq	r2, #0
 801e00e:	4b06      	ldr	r3, [pc, #24]	@ (801e028 <nema_blender_init+0x54>)
 801e010:	701a      	strb	r2, [r3, #0]
 801e012:	d005      	beq.n	801e020 <nema_blender_init+0x4c>
 801e014:	2200      	movs	r2, #0
 801e016:	4b05      	ldr	r3, [pc, #20]	@ (801e02c <nema_blender_init+0x58>)
 801e018:	2001      	movs	r0, #1
 801e01a:	601a      	str	r2, [r3, #0]
 801e01c:	f7f4 f964 	bl	80122e8 <nema_set_rop_blend_mode>
 801e020:	b005      	add	sp, #20
 801e022:	bd30      	pop	{r4, r5, pc}
 801e024:	08033668 	.word	0x08033668
 801e028:	200833a5 	.word	0x200833a5
 801e02c:	200001e8 	.word	0x200001e8

0801e030 <nema_set_blend>:
 801e030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e034:	4ca5      	ldr	r4, [pc, #660]	@ (801e2cc <nema_set_blend+0x29c>)
 801e036:	4683      	mov	fp, r0
 801e038:	7820      	ldrb	r0, [r4, #0]
 801e03a:	b0a7      	sub	sp, #156	@ 0x9c
 801e03c:	9102      	str	r1, [sp, #8]
 801e03e:	9200      	str	r2, [sp, #0]
 801e040:	2800      	cmp	r0, #0
 801e042:	f040 8233 	bne.w	801e4ac <nema_set_blend+0x47c>
 801e046:	469a      	mov	sl, r3
 801e048:	465c      	mov	r4, fp
 801e04a:	ea4f 535b 	mov.w	r3, fp, lsr #21
 801e04e:	055b      	lsls	r3, r3, #21
 801e050:	930e      	str	r3, [sp, #56]	@ 0x38
 801e052:	f40b 0300 	and.w	r3, fp, #8388608	@ 0x800000
 801e056:	930c      	str	r3, [sp, #48]	@ 0x30
 801e058:	f40b 0380 	and.w	r3, fp, #4194304	@ 0x400000
 801e05c:	f00b 010f 	and.w	r1, fp, #15
 801e060:	930d      	str	r3, [sp, #52]	@ 0x34
 801e062:	f40b 1300 	and.w	r3, fp, #2097152	@ 0x200000
 801e066:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e068:	9101      	str	r1, [sp, #4]
 801e06a:	b2d2      	uxtb	r2, r2
 801e06c:	fa5f f38a 	uxtb.w	r3, sl
 801e070:	f3cb 2903 	ubfx	r9, fp, #8, #4
 801e074:	f00b 7100 	and.w	r1, fp, #33554432	@ 0x2000000
 801e078:	f3cb 6840 	ubfx	r8, fp, #25, #1
 801e07c:	9d02      	ldr	r5, [sp, #8]
 801e07e:	b2e8      	uxtb	r0, r5
 801e080:	2804      	cmp	r0, #4
 801e082:	4628      	mov	r0, r5
 801e084:	bf28      	it	cs
 801e086:	2000      	movcs	r0, #0
 801e088:	2a04      	cmp	r2, #4
 801e08a:	9a00      	ldr	r2, [sp, #0]
 801e08c:	bf28      	it	cs
 801e08e:	f04f 32ff 	movcs.w	r2, #4294967295
 801e092:	2b04      	cmp	r3, #4
 801e094:	9002      	str	r0, [sp, #8]
 801e096:	9200      	str	r2, [sp, #0]
 801e098:	bf28      	it	cs
 801e09a:	4682      	movcs	sl, r0
 801e09c:	4602      	mov	r2, r0
 801e09e:	bf34      	ite	cc
 801e0a0:	4650      	movcc	r0, sl
 801e0a2:	2002      	movcs	r0, #2
 801e0a4:	4b8a      	ldr	r3, [pc, #552]	@ (801e2d0 <nema_set_blend+0x2a0>)
 801e0a6:	9010      	str	r0, [sp, #64]	@ 0x40
 801e0a8:	781b      	ldrb	r3, [r3, #0]
 801e0aa:	b14b      	cbz	r3, 801e0c0 <nema_set_blend+0x90>
 801e0ac:	f01b 7380 	ands.w	r3, fp, #16777216	@ 0x1000000
 801e0b0:	9303      	str	r3, [sp, #12]
 801e0b2:	d102      	bne.n	801e0ba <nema_set_blend+0x8a>
 801e0b4:	4552      	cmp	r2, sl
 801e0b6:	f000 830c 	beq.w	801e6d2 <nema_set_blend+0x6a2>
 801e0ba:	2001      	movs	r0, #1
 801e0bc:	f7f4 f914 	bl	80122e8 <nema_set_rop_blend_mode>
 801e0c0:	2c00      	cmp	r4, #0
 801e0c2:	bfac      	ite	ge
 801e0c4:	4642      	movge	r2, r8
 801e0c6:	2201      	movlt	r2, #1
 801e0c8:	4b82      	ldr	r3, [pc, #520]	@ (801e2d4 <nema_set_blend+0x2a4>)
 801e0ca:	f1bb 0f01 	cmp.w	fp, #1
 801e0ce:	789b      	ldrb	r3, [r3, #2]
 801e0d0:	9207      	str	r2, [sp, #28]
 801e0d2:	9305      	str	r3, [sp, #20]
 801e0d4:	f000 80e0 	beq.w	801e298 <nema_set_blend+0x268>
 801e0d8:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e0dc:	9315      	str	r3, [sp, #84]	@ 0x54
 801e0de:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e0e2:	9306      	str	r3, [sp, #24]
 801e0e4:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e0e8:	9309      	str	r3, [sp, #36]	@ 0x24
 801e0ea:	9b01      	ldr	r3, [sp, #4]
 801e0ec:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e0f0:	2b05      	cmp	r3, #5
 801e0f2:	f240 80df 	bls.w	801e2b4 <nema_set_blend+0x284>
 801e0f6:	2301      	movs	r3, #1
 801e0f8:	930a      	str	r3, [sp, #40]	@ 0x28
 801e0fa:	9304      	str	r3, [sp, #16]
 801e0fc:	2303      	movs	r3, #3
 801e0fe:	4976      	ldr	r1, [pc, #472]	@ (801e2d8 <nema_set_blend+0x2a8>)
 801e100:	9303      	str	r3, [sp, #12]
 801e102:	9108      	str	r1, [sp, #32]
 801e104:	4d75      	ldr	r5, [pc, #468]	@ (801e2dc <nema_set_blend+0x2ac>)
 801e106:	2a00      	cmp	r2, #0
 801e108:	4b75      	ldr	r3, [pc, #468]	@ (801e2e0 <nema_set_blend+0x2b0>)
 801e10a:	bf18      	it	ne
 801e10c:	462b      	movne	r3, r5
 801e10e:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 801e112:	f105 0502 	add.w	r5, r5, #2
 801e116:	9312      	str	r3, [sp, #72]	@ 0x48
 801e118:	4b72      	ldr	r3, [pc, #456]	@ (801e2e4 <nema_set_blend+0x2b4>)
 801e11a:	bf08      	it	eq
 801e11c:	462b      	moveq	r3, r5
 801e11e:	f8df e20c 	ldr.w	lr, [pc, #524]	@ 801e32c <nema_set_blend+0x2fc>
 801e122:	f8df c20c 	ldr.w	ip, [pc, #524]	@ 801e330 <nema_set_blend+0x300>
 801e126:	9311      	str	r3, [sp, #68]	@ 0x44
 801e128:	bf14      	ite	ne
 801e12a:	4673      	movne	r3, lr
 801e12c:	4663      	moveq	r3, ip
 801e12e:	4f6e      	ldr	r7, [pc, #440]	@ (801e2e8 <nema_set_blend+0x2b8>)
 801e130:	9314      	str	r3, [sp, #80]	@ 0x50
 801e132:	4b6e      	ldr	r3, [pc, #440]	@ (801e2ec <nema_set_blend+0x2bc>)
 801e134:	bf18      	it	ne
 801e136:	463b      	movne	r3, r7
 801e138:	f5a5 25c8 	sub.w	r5, r5, #409600	@ 0x64000
 801e13c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e13e:	4b6c      	ldr	r3, [pc, #432]	@ (801e2f0 <nema_set_blend+0x2c0>)
 801e140:	f1a5 0542 	sub.w	r5, r5, #66	@ 0x42
 801e144:	496b      	ldr	r1, [pc, #428]	@ (801e2f4 <nema_set_blend+0x2c4>)
 801e146:	bf18      	it	ne
 801e148:	4619      	movne	r1, r3
 801e14a:	f1a3 033e 	sub.w	r3, r3, #62	@ 0x3e
 801e14e:	bf18      	it	ne
 801e150:	462b      	movne	r3, r5
 801e152:	4e69      	ldr	r6, [pc, #420]	@ (801e2f8 <nema_set_blend+0x2c8>)
 801e154:	4f69      	ldr	r7, [pc, #420]	@ (801e2fc <nema_set_blend+0x2cc>)
 801e156:	461d      	mov	r5, r3
 801e158:	4b69      	ldr	r3, [pc, #420]	@ (801e300 <nema_set_blend+0x2d0>)
 801e15a:	486a      	ldr	r0, [pc, #424]	@ (801e304 <nema_set_blend+0x2d4>)
 801e15c:	bf18      	it	ne
 801e15e:	4630      	movne	r0, r6
 801e160:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 801e164:	f8df c1cc 	ldr.w	ip, [pc, #460]	@ 801e334 <nema_set_blend+0x304>
 801e168:	f506 3650 	add.w	r6, r6, #212992	@ 0x34000
 801e16c:	bf04      	itt	eq
 801e16e:	46bc      	moveq	ip, r7
 801e170:	461e      	moveq	r6, r3
 801e172:	f107 4700 	add.w	r7, r7, #2147483648	@ 0x80000000
 801e176:	f1a3 0340 	sub.w	r3, r3, #64	@ 0x40
 801e17a:	f1a7 0742 	sub.w	r7, r7, #66	@ 0x42
 801e17e:	bf08      	it	eq
 801e180:	461f      	moveq	r7, r3
 801e182:	4c61      	ldr	r4, [pc, #388]	@ (801e308 <nema_set_blend+0x2d8>)
 801e184:	f8df e1b0 	ldr.w	lr, [pc, #432]	@ 801e338 <nema_set_blend+0x308>
 801e188:	4a60      	ldr	r2, [pc, #384]	@ (801e30c <nema_set_blend+0x2dc>)
 801e18a:	bf18      	it	ne
 801e18c:	4622      	movne	r2, r4
 801e18e:	f504 3450 	add.w	r4, r4, #212992	@ 0x34000
 801e192:	bf08      	it	eq
 801e194:	4674      	moveq	r4, lr
 801e196:	f8dd e018 	ldr.w	lr, [sp, #24]
 801e19a:	f1b8 0f00 	cmp.w	r8, #0
 801e19e:	f040 8109 	bne.w	801e3b4 <nema_set_blend+0x384>
 801e1a2:	9b07      	ldr	r3, [sp, #28]
 801e1a4:	2b00      	cmp	r3, #0
 801e1a6:	bf0c      	ite	eq
 801e1a8:	2300      	moveq	r3, #0
 801e1aa:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 801e1ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e1b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e1b2:	2b00      	cmp	r3, #0
 801e1b4:	f040 8105 	bne.w	801e3c2 <nema_set_blend+0x392>
 801e1b8:	f01b 6f80 	tst.w	fp, #67108864	@ 0x4000000
 801e1bc:	f000 81b4 	beq.w	801e528 <nema_set_blend+0x4f8>
 801e1c0:	4684      	mov	ip, r0
 801e1c2:	460e      	mov	r6, r1
 801e1c4:	4614      	mov	r4, r2
 801e1c6:	462f      	mov	r7, r5
 801e1c8:	f04f 0804 	mov.w	r8, #4
 801e1cc:	2200      	movs	r2, #0
 801e1ce:	4850      	ldr	r0, [pc, #320]	@ (801e310 <nema_set_blend+0x2e0>)
 801e1d0:	f00b 53c0 	and.w	r3, fp, #402653184	@ 0x18000000
 801e1d4:	4293      	cmp	r3, r2
 801e1d6:	f850 302a 	ldr.w	r3, [r0, sl, lsl #2]
 801e1da:	bf18      	it	ne
 801e1dc:	463e      	movne	r6, r7
 801e1de:	9309      	str	r3, [sp, #36]	@ 0x24
 801e1e0:	9b05      	ldr	r3, [sp, #20]
 801e1e2:	bf16      	itet	ne
 801e1e4:	46a4      	movne	ip, r4
 801e1e6:	270e      	moveq	r7, #14
 801e1e8:	270c      	movne	r7, #12
 801e1ea:	9216      	str	r2, [sp, #88]	@ 0x58
 801e1ec:	2b00      	cmp	r3, #0
 801e1ee:	f000 80eb 	beq.w	801e3c8 <nema_set_blend+0x398>
 801e1f2:	4b48      	ldr	r3, [pc, #288]	@ (801e314 <nema_set_blend+0x2e4>)
 801e1f4:	4948      	ldr	r1, [pc, #288]	@ (801e318 <nema_set_blend+0x2e8>)
 801e1f6:	9800      	ldr	r0, [sp, #0]
 801e1f8:	e9cd 1316 	strd	r1, r3, [sp, #88]	@ 0x58
 801e1fc:	1c43      	adds	r3, r0, #1
 801e1fe:	f000 8257 	beq.w	801e6b0 <nema_set_blend+0x680>
 801e202:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801e206:	4b45      	ldr	r3, [pc, #276]	@ (801e31c <nema_set_blend+0x2ec>)
 801e208:	9204      	str	r2, [sp, #16]
 801e20a:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e20e:	e9cd 3118 	strd	r3, r1, [sp, #96]	@ 0x60
 801e212:	2203      	movs	r2, #3
 801e214:	2102      	movs	r1, #2
 801e216:	4c42      	ldr	r4, [pc, #264]	@ (801e320 <nema_set_blend+0x2f0>)
 801e218:	f1b9 0f01 	cmp.w	r9, #1
 801e21c:	f240 8110 	bls.w	801e440 <nema_set_blend+0x410>
 801e220:	9b01      	ldr	r3, [sp, #4]
 801e222:	2b05      	cmp	r3, #5
 801e224:	d803      	bhi.n	801e22e <nema_set_blend+0x1fe>
 801e226:	f01b 5f70 	tst.w	fp, #1006632960	@ 0x3c000000
 801e22a:	f000 8087 	beq.w	801e33c <nema_set_blend+0x30c>
 801e22e:	9b03      	ldr	r3, [sp, #12]
 801e230:	b933      	cbnz	r3, 801e240 <nema_set_blend+0x210>
 801e232:	f1b9 0f00 	cmp.w	r9, #0
 801e236:	d103      	bne.n	801e240 <nema_set_blend+0x210>
 801e238:	9b07      	ldr	r3, [sp, #28]
 801e23a:	2b00      	cmp	r3, #0
 801e23c:	f000 81ca 	beq.w	801e5d4 <nema_set_blend+0x5a4>
 801e240:	f1b8 0f1d 	cmp.w	r8, #29
 801e244:	f000 8150 	beq.w	801e4e8 <nema_set_blend+0x4b8>
 801e248:	4b36      	ldr	r3, [pc, #216]	@ (801e324 <nema_set_blend+0x2f4>)
 801e24a:	a826      	add	r0, sp, #152	@ 0x98
 801e24c:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e250:	ea43 13ca 	orr.w	r3, r3, sl, lsl #7
 801e254:	9803      	ldr	r0, [sp, #12]
 801e256:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e25a:	4303      	orrs	r3, r0
 801e25c:	e941 3c10 	strd	r3, ip, [r1, #-64]	@ 0x40
 801e260:	1c55      	adds	r5, r2, #1
 801e262:	f1b9 0f00 	cmp.w	r9, #0
 801e266:	f040 8150 	bne.w	801e50a <nema_set_blend+0x4da>
 801e26a:	46ce      	mov	lr, r9
 801e26c:	4b2d      	ldr	r3, [pc, #180]	@ (801e324 <nema_set_blend+0x2f4>)
 801e26e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e272:	f8cd 9018 	str.w	r9, [sp, #24]
 801e276:	9308      	str	r3, [sp, #32]
 801e278:	9b07      	ldr	r3, [sp, #28]
 801e27a:	2b00      	cmp	r3, #0
 801e27c:	d163      	bne.n	801e346 <nema_set_blend+0x316>
 801e27e:	4b2a      	ldr	r3, [pc, #168]	@ (801e328 <nema_set_blend+0x2f8>)
 801e280:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e284:	9308      	str	r3, [sp, #32]
 801e286:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 801e28a:	9f01      	ldr	r7, [sp, #4]
 801e28c:	e061      	b.n	801e352 <nema_set_blend+0x322>
 801e28e:	f04f 0900 	mov.w	r9, #0
 801e292:	46c8      	mov	r8, r9
 801e294:	f8cd 901c 	str.w	r9, [sp, #28]
 801e298:	2b00      	cmp	r3, #0
 801e29a:	f000 8153 	beq.w	801e544 <nema_set_blend+0x514>
 801e29e:	9b01      	ldr	r3, [sp, #4]
 801e2a0:	2b05      	cmp	r3, #5
 801e2a2:	f200 8169 	bhi.w	801e578 <nema_set_blend+0x548>
 801e2a6:	2300      	movs	r3, #0
 801e2a8:	f04f 0b01 	mov.w	fp, #1
 801e2ac:	461a      	mov	r2, r3
 801e2ae:	9306      	str	r3, [sp, #24]
 801e2b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801e2b2:	9315      	str	r3, [sp, #84]	@ 0x54
 801e2b4:	9b07      	ldr	r3, [sp, #28]
 801e2b6:	2b00      	cmp	r3, #0
 801e2b8:	f000 8200 	beq.w	801e6bc <nema_set_blend+0x68c>
 801e2bc:	930a      	str	r3, [sp, #40]	@ 0x28
 801e2be:	4b06      	ldr	r3, [pc, #24]	@ (801e2d8 <nema_set_blend+0x2a8>)
 801e2c0:	2001      	movs	r0, #1
 801e2c2:	9308      	str	r3, [sp, #32]
 801e2c4:	2303      	movs	r3, #3
 801e2c6:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801e2ca:	e71b      	b.n	801e104 <nema_set_blend+0xd4>
 801e2cc:	200833a4 	.word	0x200833a4
 801e2d0:	200833a5 	.word	0x200833a5
 801e2d4:	20000064 	.word	0x20000064
 801e2d8:	080c0003 	.word	0x080c0003
 801e2dc:	000761c5 	.word	0x000761c5
 801e2e0:	000761c7 	.word	0x000761c7
 801e2e4:	800761c5 	.word	0x800761c5
 801e2e8:	80076185 	.word	0x80076185
 801e2ec:	80076187 	.word	0x80076187
 801e2f0:	800121c5 	.word	0x800121c5
 801e2f4:	800121c7 	.word	0x800121c7
 801e2f8:	000121c5 	.word	0x000121c5
 801e2fc:	000461c7 	.word	0x000461c7
 801e300:	800461c7 	.word	0x800461c7
 801e304:	000121c7 	.word	0x000121c7
 801e308:	00012185 	.word	0x00012185
 801e30c:	00012187 	.word	0x00012187
 801e310:	08035db8 	.word	0x08035db8
 801e314:	02009408 	.word	0x02009408
 801e318:	00f40182 	.word	0x00f40182
 801e31c:	000c100b 	.word	0x000c100b
 801e320:	1000fc00 	.word	0x1000fc00
 801e324:	080c0000 	.word	0x080c0000
 801e328:	080c0002 	.word	0x080c0002
 801e32c:	00076185 	.word	0x00076185
 801e330:	00076187 	.word	0x00076187
 801e334:	000461c5 	.word	0x000461c5
 801e338:	00046187 	.word	0x00046187
 801e33c:	4615      	mov	r5, r2
 801e33e:	460a      	mov	r2, r1
 801e340:	f1b9 0f00 	cmp.w	r9, #0
 801e344:	d098      	beq.n	801e278 <nema_set_blend+0x248>
 801e346:	9b06      	ldr	r3, [sp, #24]
 801e348:	2b00      	cmp	r3, #0
 801e34a:	f000 8202 	beq.w	801e752 <nema_set_blend+0x722>
 801e34e:	2600      	movs	r6, #0
 801e350:	9f01      	ldr	r7, [sp, #4]
 801e352:	48c1      	ldr	r0, [pc, #772]	@ (801e658 <nema_set_blend+0x628>)
 801e354:	49c1      	ldr	r1, [pc, #772]	@ (801e65c <nema_set_blend+0x62c>)
 801e356:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 801e35a:	f851 7027 	ldr.w	r7, [r1, r7, lsl #2]
 801e35e:	015b      	lsls	r3, r3, #5
 801e360:	ea43 3387 	orr.w	r3, r3, r7, lsl #14
 801e364:	9f08      	ldr	r7, [sp, #32]
 801e366:	ea47 5e0e 	orr.w	lr, r7, lr, lsl #20
 801e36a:	4fbd      	ldr	r7, [pc, #756]	@ (801e660 <nema_set_blend+0x630>)
 801e36c:	ea4e 1eca 	orr.w	lr, lr, sl, lsl #7
 801e370:	431f      	orrs	r7, r3
 801e372:	ab26      	add	r3, sp, #152	@ 0x98
 801e374:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801e378:	4337      	orrs	r7, r6
 801e37a:	e942 e710 	strd	lr, r7, [r2, #-64]	@ 0x40
 801e37e:	2e00      	cmp	r6, #0
 801e380:	f000 813f 	beq.w	801e602 <nema_set_blend+0x5d2>
 801e384:	9804      	ldr	r0, [sp, #16]
 801e386:	f7f3 fe95 	bl	80120b4 <nema_matmul_bypass>
 801e38a:	4629      	mov	r1, r5
 801e38c:	2200      	movs	r2, #0
 801e38e:	a816      	add	r0, sp, #88	@ 0x58
 801e390:	f7f3 ff8a 	bl	80122a8 <nema_load_frag_shader>
 801e394:	4bb3      	ldr	r3, [pc, #716]	@ (801e664 <nema_set_blend+0x634>)
 801e396:	f1c5 0520 	rsb	r5, r5, #32
 801e39a:	6818      	ldr	r0, [r3, #0]
 801e39c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e39e:	ea43 0800 	orr.w	r8, r3, r0
 801e3a2:	ea48 0005 	orr.w	r0, r8, r5
 801e3a6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
 801e3aa:	f7f3 ff97 	bl	80122dc <nema_set_frag_ptr>
 801e3ae:	b027      	add	sp, #156	@ 0x9c
 801e3b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3b4:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 801e3b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e3ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e3bc:	2b00      	cmp	r3, #0
 801e3be:	f43f aefb 	beq.w	801e1b8 <nema_set_blend+0x188>
 801e3c2:	f04f 0811 	mov.w	r8, #17
 801e3c6:	e701      	b.n	801e1cc <nema_set_blend+0x19c>
 801e3c8:	9b00      	ldr	r3, [sp, #0]
 801e3ca:	1c5a      	adds	r2, r3, #1
 801e3cc:	f000 8136 	beq.w	801e63c <nema_set_blend+0x60c>
 801e3d0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801e3d4:	9a05      	ldr	r2, [sp, #20]
 801e3d6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801e3da:	9204      	str	r2, [sp, #16]
 801e3dc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e3de:	2a00      	cmp	r2, #0
 801e3e0:	f000 80a9 	beq.w	801e536 <nema_set_blend+0x506>
 801e3e4:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e3e8:	499f      	ldr	r1, [pc, #636]	@ (801e668 <nema_set_blend+0x638>)
 801e3ea:	4aa0      	ldr	r2, [pc, #640]	@ (801e66c <nema_set_blend+0x63c>)
 801e3ec:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 801e3f0:	9219      	str	r2, [sp, #100]	@ 0x64
 801e3f2:	2204      	movs	r2, #4
 801e3f4:	9116      	str	r1, [sp, #88]	@ 0x58
 801e3f6:	9205      	str	r2, [sp, #20]
 801e3f8:	2102      	movs	r1, #2
 801e3fa:	2203      	movs	r2, #3
 801e3fc:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 801e400:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e402:	2c00      	cmp	r4, #0
 801e404:	d04f      	beq.n	801e4a6 <nema_set_blend+0x476>
 801e406:	9c00      	ldr	r4, [sp, #0]
 801e408:	f1b4 3fff 	cmp.w	r4, #4294967295
 801e40c:	d04b      	beq.n	801e4a6 <nema_set_blend+0x476>
 801e40e:	f241 050b 	movw	r5, #4107	@ 0x100b
 801e412:	2300      	movs	r3, #0
 801e414:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 801e418:	a826      	add	r0, sp, #152	@ 0x98
 801e41a:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 801e41e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e420:	f044 5480 	orr.w	r4, r4, #268435456	@ 0x10000000
 801e424:	ea45 11c1 	orr.w	r1, r5, r1, lsl #7
 801e428:	f1b9 0f01 	cmp.w	r9, #1
 801e42c:	f840 1c40 	str.w	r1, [r0, #-64]
 801e430:	f444 4420 	orr.w	r4, r4, #40960	@ 0xa000
 801e434:	4611      	mov	r1, r2
 801e436:	f840 3c3c 	str.w	r3, [r0, #-60]
 801e43a:	9a05      	ldr	r2, [sp, #20]
 801e43c:	f63f aef0 	bhi.w	801e220 <nema_set_blend+0x1f0>
 801e440:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e442:	2b00      	cmp	r3, #0
 801e444:	f47f aeec 	bne.w	801e220 <nema_set_blend+0x1f0>
 801e448:	9b00      	ldr	r3, [sp, #0]
 801e44a:	3301      	adds	r3, #1
 801e44c:	f47f aee8 	bne.w	801e220 <nema_set_blend+0x1f0>
 801e450:	9b02      	ldr	r3, [sp, #8]
 801e452:	4553      	cmp	r3, sl
 801e454:	f47f aee4 	bne.w	801e220 <nema_set_blend+0x1f0>
 801e458:	f1b9 0f00 	cmp.w	r9, #0
 801e45c:	bf15      	itete	ne
 801e45e:	f44f 6600 	movne.w	r6, #2048	@ 0x800
 801e462:	f44f 5600 	moveq.w	r6, #8192	@ 0x2000
 801e466:	f44f 1500 	movne.w	r5, #2097152	@ 0x200000
 801e46a:	f44f 0500 	moveq.w	r5, #8388608	@ 0x800000
 801e46e:	9f01      	ldr	r7, [sp, #4]
 801e470:	f8df c1e4 	ldr.w	ip, [pc, #484]	@ 801e658 <nema_set_blend+0x628>
 801e474:	4879      	ldr	r0, [pc, #484]	@ (801e65c <nema_set_blend+0x62c>)
 801e476:	f85c 3027 	ldr.w	r3, [ip, r7, lsl #2]
 801e47a:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 801e47e:	015b      	lsls	r3, r3, #5
 801e480:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801e484:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 801e488:	f043 0306 	orr.w	r3, r3, #6
 801e48c:	4333      	orrs	r3, r6
 801e48e:	432b      	orrs	r3, r5
 801e490:	4877      	ldr	r0, [pc, #476]	@ (801e670 <nema_set_blend+0x640>)
 801e492:	9d02      	ldr	r5, [sp, #8]
 801e494:	ae26      	add	r6, sp, #152	@ 0x98
 801e496:	ea40 10c5 	orr.w	r0, r0, r5, lsl #7
 801e49a:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 801e49e:	4615      	mov	r5, r2
 801e4a0:	e941 0310 	strd	r0, r3, [r1, #-64]	@ 0x40
 801e4a4:	e76e      	b.n	801e384 <nema_set_blend+0x354>
 801e4a6:	f043 5480 	orr.w	r4, r3, #268435456	@ 0x10000000
 801e4aa:	e6b5      	b.n	801e218 <nema_set_blend+0x1e8>
 801e4ac:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 801e4b0:	f7f3 ff78 	bl	80123a4 <nema_set_raster_color>
 801e4b4:	2000      	movs	r0, #0
 801e4b6:	f7f2 fc97 	bl	8010de8 <nema_enable_gradient>
 801e4ba:	f04f 0800 	mov.w	r8, #0
 801e4be:	f04f 0901 	mov.w	r9, #1
 801e4c2:	23ff      	movs	r3, #255	@ 0xff
 801e4c4:	f240 1401 	movw	r4, #257	@ 0x101
 801e4c8:	f04f 3aff 	mov.w	sl, #4294967295
 801e4cc:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e4d0:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801e4d4:	e9cd 880c 	strd	r8, r8, [sp, #48]	@ 0x30
 801e4d8:	4641      	mov	r1, r8
 801e4da:	f8cd 9004 	str.w	r9, [sp, #4]
 801e4de:	461a      	mov	r2, r3
 801e4e0:	46a3      	mov	fp, r4
 801e4e2:	f8cd a000 	str.w	sl, [sp]
 801e4e6:	e5c9      	b.n	801e07c <nema_set_blend+0x4c>
 801e4e8:	2f0e      	cmp	r7, #14
 801e4ea:	f47f aead 	bne.w	801e248 <nema_set_blend+0x218>
 801e4ee:	9b03      	ldr	r3, [sp, #12]
 801e4f0:	2b00      	cmp	r3, #0
 801e4f2:	f47f aea9 	bne.w	801e248 <nema_set_blend+0x218>
 801e4f6:	9b06      	ldr	r3, [sp, #24]
 801e4f8:	2b00      	cmp	r3, #0
 801e4fa:	f47f aea5 	bne.w	801e248 <nema_set_blend+0x218>
 801e4fe:	4615      	mov	r5, r2
 801e500:	460a      	mov	r2, r1
 801e502:	f1b9 0f00 	cmp.w	r9, #0
 801e506:	f43f aeb0 	beq.w	801e26a <nema_set_blend+0x23a>
 801e50a:	f04f 0e00 	mov.w	lr, #0
 801e50e:	4b59      	ldr	r3, [pc, #356]	@ (801e674 <nema_set_blend+0x644>)
 801e510:	9308      	str	r3, [sp, #32]
 801e512:	9b01      	ldr	r3, [sp, #4]
 801e514:	2b00      	cmp	r3, #0
 801e516:	f000 8123 	beq.w	801e760 <nema_set_blend+0x730>
 801e51a:	2b01      	cmp	r3, #1
 801e51c:	f04f 0600 	mov.w	r6, #0
 801e520:	f000 8137 	beq.w	801e792 <nema_set_blend+0x762>
 801e524:	461f      	mov	r7, r3
 801e526:	e714      	b.n	801e352 <nema_set_blend+0x322>
 801e528:	e9dd 6c11 	ldrd	r6, ip, [sp, #68]	@ 0x44
 801e52c:	e9dd 7413 	ldrd	r7, r4, [sp, #76]	@ 0x4c
 801e530:	f04f 081d 	mov.w	r8, #29
 801e534:	e64a      	b.n	801e1cc <nema_set_blend+0x19c>
 801e536:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e538:	2a00      	cmp	r2, #0
 801e53a:	d046      	beq.n	801e5ca <nema_set_blend+0x59a>
 801e53c:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e540:	494d      	ldr	r1, [pc, #308]	@ (801e678 <nema_set_blend+0x648>)
 801e542:	e752      	b.n	801e3ea <nema_set_blend+0x3ba>
 801e544:	9b02      	ldr	r3, [sp, #8]
 801e546:	2b00      	cmp	r3, #0
 801e548:	f47f aea9 	bne.w	801e29e <nema_set_blend+0x26e>
 801e54c:	9b00      	ldr	r3, [sp, #0]
 801e54e:	3301      	adds	r3, #1
 801e550:	f000 8114 	beq.w	801e77c <nema_set_blend+0x74c>
 801e554:	9802      	ldr	r0, [sp, #8]
 801e556:	f7f3 fdad 	bl	80120b4 <nema_matmul_bypass>
 801e55a:	4b42      	ldr	r3, [pc, #264]	@ (801e664 <nema_set_blend+0x634>)
 801e55c:	4947      	ldr	r1, [pc, #284]	@ (801e67c <nema_set_blend+0x64c>)
 801e55e:	9800      	ldr	r0, [sp, #0]
 801e560:	681a      	ldr	r2, [r3, #0]
 801e562:	4b47      	ldr	r3, [pc, #284]	@ (801e680 <nema_set_blend+0x650>)
 801e564:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801e568:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e56c:	4318      	orrs	r0, r3
 801e56e:	f7f3 feb5 	bl	80122dc <nema_set_frag_ptr>
 801e572:	b027      	add	sp, #156	@ 0x9c
 801e574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e578:	2301      	movs	r3, #1
 801e57a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e57c:	9304      	str	r3, [sp, #16]
 801e57e:	469b      	mov	fp, r3
 801e580:	2303      	movs	r3, #3
 801e582:	f04f 0e00 	mov.w	lr, #0
 801e586:	9303      	str	r3, [sp, #12]
 801e588:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 801e58c:	f503 2340 	add.w	r3, r3, #786432	@ 0xc0000
 801e590:	9308      	str	r3, [sp, #32]
 801e592:	4b3c      	ldr	r3, [pc, #240]	@ (801e684 <nema_set_blend+0x654>)
 801e594:	f8cd e018 	str.w	lr, [sp, #24]
 801e598:	9312      	str	r3, [sp, #72]	@ 0x48
 801e59a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e59e:	9311      	str	r3, [sp, #68]	@ 0x44
 801e5a0:	4b39      	ldr	r3, [pc, #228]	@ (801e688 <nema_set_blend+0x658>)
 801e5a2:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 801e5a6:	9314      	str	r3, [sp, #80]	@ 0x50
 801e5a8:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e5ac:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e5ae:	f5a3 23c8 	sub.w	r3, r3, #409600	@ 0x64000
 801e5b2:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801e5b6:	4835      	ldr	r0, [pc, #212]	@ (801e68c <nema_set_blend+0x65c>)
 801e5b8:	4935      	ldr	r1, [pc, #212]	@ (801e690 <nema_set_blend+0x660>)
 801e5ba:	4a36      	ldr	r2, [pc, #216]	@ (801e694 <nema_set_blend+0x664>)
 801e5bc:	461d      	mov	r5, r3
 801e5be:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 801e6ac <nema_set_blend+0x67c>
 801e5c2:	4e35      	ldr	r6, [pc, #212]	@ (801e698 <nema_set_blend+0x668>)
 801e5c4:	4c35      	ldr	r4, [pc, #212]	@ (801e69c <nema_set_blend+0x66c>)
 801e5c6:	4f36      	ldr	r7, [pc, #216]	@ (801e6a0 <nema_set_blend+0x670>)
 801e5c8:	e5e7      	b.n	801e19a <nema_set_blend+0x16a>
 801e5ca:	4611      	mov	r1, r2
 801e5cc:	2202      	movs	r2, #2
 801e5ce:	9205      	str	r2, [sp, #20]
 801e5d0:	2201      	movs	r2, #1
 801e5d2:	e715      	b.n	801e400 <nema_set_blend+0x3d0>
 801e5d4:	9b01      	ldr	r3, [sp, #4]
 801e5d6:	2b01      	cmp	r3, #1
 801e5d8:	f47f ae32 	bne.w	801e240 <nema_set_blend+0x210>
 801e5dc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e5de:	2b00      	cmp	r3, #0
 801e5e0:	f47f ae2e 	bne.w	801e240 <nema_set_blend+0x210>
 801e5e4:	a826      	add	r0, sp, #152	@ 0x98
 801e5e6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e5ea:	4b21      	ldr	r3, [pc, #132]	@ (801e670 <nema_set_blend+0x640>)
 801e5ec:	9802      	ldr	r0, [sp, #8]
 801e5ee:	f841 6c3c 	str.w	r6, [r1, #-60]
 801e5f2:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e5f6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e5fa:	4615      	mov	r5, r2
 801e5fc:	f841 3c40 	str.w	r3, [r1, #-64]
 801e600:	e6c0      	b.n	801e384 <nema_set_blend+0x354>
 801e602:	f44f 0680 	mov.w	r6, #4194304	@ 0x400000
 801e606:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 801e60a:	462a      	mov	r2, r5
 801e60c:	3501      	adds	r5, #1
 801e60e:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 801e612:	f851 1029 	ldr.w	r1, [r1, r9, lsl #2]
 801e616:	0140      	lsls	r0, r0, #5
 801e618:	4b22      	ldr	r3, [pc, #136]	@ (801e6a4 <nema_set_blend+0x674>)
 801e61a:	ea40 3081 	orr.w	r0, r0, r1, lsl #14
 801e61e:	4303      	orrs	r3, r0
 801e620:	4921      	ldr	r1, [pc, #132]	@ (801e6a8 <nema_set_blend+0x678>)
 801e622:	9802      	ldr	r0, [sp, #8]
 801e624:	433b      	orrs	r3, r7
 801e626:	ea41 11c0 	orr.w	r1, r1, r0, lsl #7
 801e62a:	a826      	add	r0, sp, #152	@ 0x98
 801e62c:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801e630:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e632:	4333      	orrs	r3, r6
 801e634:	4301      	orrs	r1, r0
 801e636:	e942 1310 	strd	r1, r3, [r2, #-64]	@ 0x40
 801e63a:	e6a3      	b.n	801e384 <nema_set_blend+0x354>
 801e63c:	9b04      	ldr	r3, [sp, #16]
 801e63e:	2b00      	cmp	r3, #0
 801e640:	f000 8082 	beq.w	801e748 <nema_set_blend+0x718>
 801e644:	9a05      	ldr	r2, [sp, #20]
 801e646:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e648:	9203      	str	r2, [sp, #12]
 801e64a:	920a      	str	r2, [sp, #40]	@ 0x28
 801e64c:	4a09      	ldr	r2, [pc, #36]	@ (801e674 <nema_set_blend+0x644>)
 801e64e:	f443 4330 	orr.w	r3, r3, #45056	@ 0xb000
 801e652:	9208      	str	r2, [sp, #32]
 801e654:	e6c2      	b.n	801e3dc <nema_set_blend+0x3ac>
 801e656:	bf00      	nop
 801e658:	08035dc8 	.word	0x08035dc8
 801e65c:	08035df8 	.word	0x08035df8
 801e660:	0a002007 	.word	0x0a002007
 801e664:	200001e8 	.word	0x200001e8
 801e668:	100c118b 	.word	0x100c118b
 801e66c:	0081a042 	.word	0x0081a042
 801e670:	080c0002 	.word	0x080c0002
 801e674:	080c0000 	.word	0x080c0000
 801e678:	100c1183 	.word	0x100c1183
 801e67c:	08035db8 	.word	0x08035db8
 801e680:	141f801f 	.word	0x141f801f
 801e684:	000761c7 	.word	0x000761c7
 801e688:	00076187 	.word	0x00076187
 801e68c:	000121c7 	.word	0x000121c7
 801e690:	800121c7 	.word	0x800121c7
 801e694:	00012187 	.word	0x00012187
 801e698:	800461c7 	.word	0x800461c7
 801e69c:	00046187 	.word	0x00046187
 801e6a0:	80046187 	.word	0x80046187
 801e6a4:	80080206 	.word	0x80080206
 801e6a8:	004e0002 	.word	0x004e0002
 801e6ac:	000461c7 	.word	0x000461c7
 801e6b0:	2301      	movs	r3, #1
 801e6b2:	2202      	movs	r2, #2
 801e6b4:	9304      	str	r3, [sp, #16]
 801e6b6:	4619      	mov	r1, r3
 801e6b8:	4c38      	ldr	r4, [pc, #224]	@ (801e79c <nema_set_blend+0x76c>)
 801e6ba:	e5ad      	b.n	801e218 <nema_set_blend+0x1e8>
 801e6bc:	f1b9 0f00 	cmp.w	r9, #0
 801e6c0:	d055      	beq.n	801e76e <nema_set_blend+0x73e>
 801e6c2:	2301      	movs	r3, #1
 801e6c4:	2103      	movs	r1, #3
 801e6c6:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6c8:	e9cd 1303 	strd	r1, r3, [sp, #12]
 801e6cc:	4b34      	ldr	r3, [pc, #208]	@ (801e7a0 <nema_set_blend+0x770>)
 801e6ce:	9308      	str	r3, [sp, #32]
 801e6d0:	e518      	b.n	801e104 <nema_set_blend+0xd4>
 801e6d2:	2c00      	cmp	r4, #0
 801e6d4:	bfbd      	ittte	lt
 801e6d6:	f02b 4b00 	biclt.w	fp, fp, #2147483648	@ 0x80000000
 801e6da:	f04f 4202 	movlt.w	r2, #2181038080	@ 0x82000000
 801e6de:	f04f 4300 	movlt.w	r3, #2147483648	@ 0x80000000
 801e6e2:	f04f 7200 	movge.w	r2, #33554432	@ 0x2000000
 801e6e6:	b111      	cbz	r1, 801e6ee <nema_set_blend+0x6be>
 801e6e8:	4613      	mov	r3, r2
 801e6ea:	f02b 7b00 	bic.w	fp, fp, #33554432	@ 0x2000000
 801e6ee:	9a01      	ldr	r2, [sp, #4]
 801e6f0:	ea42 2009 	orr.w	r0, r2, r9, lsl #8
 801e6f4:	4318      	orrs	r0, r3
 801e6f6:	f7f3 fdf7 	bl	80122e8 <nema_set_rop_blend_mode>
 801e6fa:	ea4f 505b 	mov.w	r0, fp, lsr #21
 801e6fe:	4b29      	ldr	r3, [pc, #164]	@ (801e7a4 <nema_set_blend+0x774>)
 801e700:	0540      	lsls	r0, r0, #21
 801e702:	f040 0201 	orr.w	r2, r0, #1
 801e706:	789b      	ldrb	r3, [r3, #2]
 801e708:	2a01      	cmp	r2, #1
 801e70a:	9201      	str	r2, [sp, #4]
 801e70c:	9305      	str	r3, [sp, #20]
 801e70e:	f43f adbe 	beq.w	801e28e <nema_set_blend+0x25e>
 801e712:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e716:	9315      	str	r3, [sp, #84]	@ 0x54
 801e718:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e71c:	9306      	str	r3, [sp, #24]
 801e71e:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e722:	9309      	str	r3, [sp, #36]	@ 0x24
 801e724:	2301      	movs	r3, #1
 801e726:	f04f 0900 	mov.w	r9, #0
 801e72a:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e72e:	f8dd b004 	ldr.w	fp, [sp, #4]
 801e732:	9301      	str	r3, [sp, #4]
 801e734:	4b1c      	ldr	r3, [pc, #112]	@ (801e7a8 <nema_set_blend+0x778>)
 801e736:	46c8      	mov	r8, r9
 801e738:	f8cd 901c 	str.w	r9, [sp, #28]
 801e73c:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e740:	f8cd 9010 	str.w	r9, [sp, #16]
 801e744:	9308      	str	r3, [sp, #32]
 801e746:	e4dd      	b.n	801e104 <nema_set_blend+0xd4>
 801e748:	2201      	movs	r2, #1
 801e74a:	9b05      	ldr	r3, [sp, #20]
 801e74c:	9204      	str	r2, [sp, #16]
 801e74e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e750:	e644      	b.n	801e3dc <nema_set_blend+0x3ac>
 801e752:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e754:	2b00      	cmp	r3, #0
 801e756:	f43f aedc 	beq.w	801e512 <nema_set_blend+0x4e2>
 801e75a:	9e06      	ldr	r6, [sp, #24]
 801e75c:	9f01      	ldr	r7, [sp, #4]
 801e75e:	e5f8      	b.n	801e352 <nema_set_blend+0x322>
 801e760:	f44f 0600 	mov.w	r6, #8388608	@ 0x800000
 801e764:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 801e768:	4910      	ldr	r1, [pc, #64]	@ (801e7ac <nema_set_blend+0x77c>)
 801e76a:	4811      	ldr	r0, [pc, #68]	@ (801e7b0 <nema_set_blend+0x780>)
 801e76c:	e74f      	b.n	801e60e <nema_set_blend+0x5de>
 801e76e:	4b0e      	ldr	r3, [pc, #56]	@ (801e7a8 <nema_set_blend+0x778>)
 801e770:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e774:	9308      	str	r3, [sp, #32]
 801e776:	e9cd 9903 	strd	r9, r9, [sp, #12]
 801e77a:	e4c3      	b.n	801e104 <nema_set_blend+0xd4>
 801e77c:	2001      	movs	r0, #1
 801e77e:	f7f3 fc99 	bl	80120b4 <nema_matmul_bypass>
 801e782:	4a0c      	ldr	r2, [pc, #48]	@ (801e7b4 <nema_set_blend+0x784>)
 801e784:	4b0c      	ldr	r3, [pc, #48]	@ (801e7b8 <nema_set_blend+0x788>)
 801e786:	6810      	ldr	r0, [r2, #0]
 801e788:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 801e78c:	f7f3 fda6 	bl	80122dc <nema_set_frag_ptr>
 801e790:	e6ef      	b.n	801e572 <nema_set_blend+0x542>
 801e792:	4637      	mov	r7, r6
 801e794:	4905      	ldr	r1, [pc, #20]	@ (801e7ac <nema_set_blend+0x77c>)
 801e796:	4806      	ldr	r0, [pc, #24]	@ (801e7b0 <nema_set_blend+0x780>)
 801e798:	e739      	b.n	801e60e <nema_set_blend+0x5de>
 801e79a:	bf00      	nop
 801e79c:	1000fc00 	.word	0x1000fc00
 801e7a0:	080c0003 	.word	0x080c0003
 801e7a4:	20000064 	.word	0x20000064
 801e7a8:	080c0000 	.word	0x080c0000
 801e7ac:	08035df8 	.word	0x08035df8
 801e7b0:	08035dc8 	.word	0x08035dc8
 801e7b4:	200001e8 	.word	0x200001e8
 801e7b8:	141f001f 	.word	0x141f001f

0801e7bc <nema_set_const_color>:
 801e7bc:	b510      	push	{r4, lr}
 801e7be:	4604      	mov	r4, r0
 801e7c0:	2001      	movs	r0, #1
 801e7c2:	4621      	mov	r1, r4
 801e7c4:	f7f2 fa90 	bl	8010ce8 <nema_set_const_reg>
 801e7c8:	4b04      	ldr	r3, [pc, #16]	@ (801e7dc <nema_set_const_color+0x20>)
 801e7ca:	781b      	ldrb	r3, [r3, #0]
 801e7cc:	b903      	cbnz	r3, 801e7d0 <nema_set_const_color+0x14>
 801e7ce:	bd10      	pop	{r4, pc}
 801e7d0:	4620      	mov	r0, r4
 801e7d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e7d6:	f7f3 bd8d 	b.w	80122f4 <nema_set_rop_const_color>
 801e7da:	bf00      	nop
 801e7dc:	200833a5 	.word	0x200833a5

0801e7e0 <calculate_aabb_per_shape>:
 801e7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7e4:	ed2d 8b10 	vpush	{d8-d15}
 801e7e8:	2300      	movs	r3, #0
 801e7ea:	eddf 7af0 	vldr	s15, [pc, #960]	@ 801ebac <calculate_aabb_per_shape+0x3cc>
 801e7ee:	ed9f 7af0 	vldr	s14, [pc, #960]	@ 801ebb0 <calculate_aabb_per_shape+0x3d0>
 801e7f2:	f8d0 8000 	ldr.w	r8, [r0]
 801e7f6:	b091      	sub	sp, #68	@ 0x44
 801e7f8:	4604      	mov	r4, r0
 801e7fa:	edc0 7a04 	vstr	s15, [r0, #16]
 801e7fe:	edc0 7a05 	vstr	s15, [r0, #20]
 801e802:	ed80 7a06 	vstr	s14, [r0, #24]
 801e806:	ed80 7a07 	vstr	s14, [r0, #28]
 801e80a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801e80c:	6283      	str	r3, [r0, #40]	@ 0x28
 801e80e:	6343      	str	r3, [r0, #52]	@ 0x34
 801e810:	6303      	str	r3, [r0, #48]	@ 0x30
 801e812:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801e814:	6383      	str	r3, [r0, #56]	@ 0x38
 801e816:	6443      	str	r3, [r0, #68]	@ 0x44
 801e818:	6403      	str	r3, [r0, #64]	@ 0x40
 801e81a:	6483      	str	r3, [r0, #72]	@ 0x48
 801e81c:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801e81e:	6503      	str	r3, [r0, #80]	@ 0x50
 801e820:	6543      	str	r3, [r0, #84]	@ 0x54
 801e822:	6583      	str	r3, [r0, #88]	@ 0x58
 801e824:	65c3      	str	r3, [r0, #92]	@ 0x5c
 801e826:	f1b8 0f00 	cmp.w	r8, #0
 801e82a:	f000 86c7 	beq.w	801f5bc <calculate_aabb_per_shape+0xddc>
 801e82e:	6882      	ldr	r2, [r0, #8]
 801e830:	7811      	ldrb	r1, [r2, #0]
 801e832:	f021 0190 	bic.w	r1, r1, #144	@ 0x90
 801e836:	2901      	cmp	r1, #1
 801e838:	d003      	beq.n	801e842 <calculate_aabb_per_shape+0x62>
 801e83a:	6103      	str	r3, [r0, #16]
 801e83c:	6143      	str	r3, [r0, #20]
 801e83e:	6183      	str	r3, [r0, #24]
 801e840:	61c3      	str	r3, [r0, #28]
 801e842:	ed9f dadc 	vldr	s26, [pc, #880]	@ 801ebb4 <calculate_aabb_per_shape+0x3d4>
 801e846:	f04f 0c00 	mov.w	ip, #0
 801e84a:	eeb0 6a4d 	vmov.f32	s12, s26
 801e84e:	4667      	mov	r7, ip
 801e850:	46e1      	mov	r9, ip
 801e852:	4666      	mov	r6, ip
 801e854:	eef0 5a4d 	vmov.f32	s11, s26
 801e858:	eef0 4a4d 	vmov.f32	s9, s26
 801e85c:	eef0 6a4d 	vmov.f32	s13, s26
 801e860:	eeb0 ea4d 	vmov.f32	s28, s26
 801e864:	eeb0 9a4d 	vmov.f32	s18, s26
 801e868:	eef0 8a4d 	vmov.f32	s17, s26
 801e86c:	eeb0 fa4d 	vmov.f32	s30, s26
 801e870:	eddf ead1 	vldr	s29, [pc, #836]	@ 801ebb8 <calculate_aabb_per_shape+0x3d8>
 801e874:	eddf dad1 	vldr	s27, [pc, #836]	@ 801ebbc <calculate_aabb_per_shape+0x3dc>
 801e878:	eddf fad1 	vldr	s31, [pc, #836]	@ 801ebc0 <calculate_aabb_per_shape+0x3e0>
 801e87c:	eef0 ca4d 	vmov.f32	s25, s26
 801e880:	eeb0 5a4d 	vmov.f32	s10, s26
 801e884:	4640      	mov	r0, r8
 801e886:	f8cd c000 	str.w	ip, [sp]
 801e88a:	5d95      	ldrb	r5, [r2, r6]
 801e88c:	4432      	add	r2, r6
 801e88e:	f005 036f 	and.w	r3, r5, #111	@ 0x6f
 801e892:	2b01      	cmp	r3, #1
 801e894:	f005 0810 	and.w	r8, r5, #16
 801e898:	f000 853e 	beq.w	801f318 <calculate_aabb_per_shape+0xb38>
 801e89c:	f015 0f7f 	tst.w	r5, #127	@ 0x7f
 801e8a0:	f000 83bf 	beq.w	801f022 <calculate_aabb_per_shape+0x842>
 801e8a4:	68e1      	ldr	r1, [r4, #12]
 801e8a6:	2f00      	cmp	r7, #0
 801e8a8:	eb01 0e87 	add.w	lr, r1, r7, lsl #2
 801e8ac:	bf08      	it	eq
 801e8ae:	f04f 0901 	moveq.w	r9, #1
 801e8b2:	2b06      	cmp	r3, #6
 801e8b4:	edde 7a00 	vldr	s15, [lr]
 801e8b8:	f107 0b01 	add.w	fp, r7, #1
 801e8bc:	f000 8782 	beq.w	801f7c4 <calculate_aabb_per_shape+0xfe4>
 801e8c0:	2b05      	cmp	r3, #5
 801e8c2:	f001 8034 	beq.w	801f92e <calculate_aabb_per_shape+0x114e>
 801e8c6:	2b07      	cmp	r3, #7
 801e8c8:	f00c 0a6f 	and.w	sl, ip, #111	@ 0x6f
 801e8cc:	f000 86ae 	beq.w	801f62c <calculate_aabb_per_shape+0xe4c>
 801e8d0:	2b08      	cmp	r3, #8
 801e8d2:	f001 806c 	beq.w	801f9ae <calculate_aabb_per_shape+0x11ce>
 801e8d6:	f005 0a0f 	and.w	sl, r5, #15
 801e8da:	f1ba 0f09 	cmp.w	sl, #9
 801e8de:	f001 8047 	beq.w	801f970 <calculate_aabb_per_shape+0x1190>
 801e8e2:	46ba      	mov	sl, r7
 801e8e4:	465f      	mov	r7, fp
 801e8e6:	2b04      	cmp	r3, #4
 801e8e8:	f041 8501 	bne.w	80202ee <calculate_aabb_per_shape+0x1b0e>
 801e8ec:	f1b8 0f00 	cmp.w	r8, #0
 801e8f0:	f001 8059 	beq.w	801f9a6 <calculate_aabb_per_shape+0x11c6>
 801e8f4:	ee77 7a89 	vadd.f32	s15, s15, s18
 801e8f8:	eeb0 7a68 	vmov.f32	s14, s17
 801e8fc:	462a      	mov	r2, r5
 801e8fe:	2b06      	cmp	r3, #6
 801e900:	f000 839b 	beq.w	801f03a <calculate_aabb_per_shape+0x85a>
 801e904:	2b08      	cmp	r3, #8
 801e906:	f000 8398 	beq.w	801f03a <calculate_aabb_per_shape+0x85a>
 801e90a:	2b01      	cmp	r3, #1
 801e90c:	f000 847f 	beq.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801e910:	2b02      	cmp	r3, #2
 801e912:	f000 847c 	beq.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801e916:	2b04      	cmp	r3, #4
 801e918:	f000 8479 	beq.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801e91c:	2b03      	cmp	r3, #3
 801e91e:	f000 8476 	beq.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801e922:	f002 036d 	and.w	r3, r2, #109	@ 0x6d
 801e926:	2b05      	cmp	r3, #5
 801e928:	f000 8690 	beq.w	801f64c <calculate_aabb_per_shape+0xe6c>
 801e92c:	f002 020f 	and.w	r2, r2, #15
 801e930:	2a09      	cmp	r2, #9
 801e932:	f040 8459 	bne.w	801f1e8 <calculate_aabb_per_shape+0xa08>
 801e936:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e93a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e93e:	f100 845e 	bmi.w	801f1fe <calculate_aabb_per_shape+0xa1e>
 801e942:	ed9f 3aa0 	vldr	s6, [pc, #640]	@ 801ebc4 <calculate_aabb_per_shape+0x3e4>
 801e946:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801e94a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e94e:	f240 845e 	bls.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801e952:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e95a:	f101 8078 	bmi.w	801fa4e <calculate_aabb_per_shape+0x126e>
 801e95e:	ed9f 3a99 	vldr	s6, [pc, #612]	@ 801ebc4 <calculate_aabb_per_shape+0x3e4>
 801e962:	eef4 6ac3 	vcmpe.f32	s13, s6
 801e966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e96a:	f240 8450 	bls.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801e96e:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e976:	f101 80bb 	bmi.w	801faf0 <calculate_aabb_per_shape+0x1310>
 801e97a:	eeb0 8a45 	vmov.f32	s16, s10
 801e97e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e986:	f101 8071 	bmi.w	801fa6c <calculate_aabb_per_shape+0x128c>
 801e98a:	eeb0 9a66 	vmov.f32	s18, s13
 801e98e:	edcd 7a03 	vstr	s15, [sp, #12]
 801e992:	eddf 7a8d 	vldr	s15, [pc, #564]	@ 801ebc8 <calculate_aabb_per_shape+0x3e8>
 801e996:	ee24 aaa7 	vmul.f32	s20, s9, s15
 801e99a:	eeb0 0a4a 	vmov.f32	s0, s20
 801e99e:	9009      	str	r0, [sp, #36]	@ 0x24
 801e9a0:	edcd 6a08 	vstr	s13, [sp, #32]
 801e9a4:	ed8d 6a04 	vstr	s12, [sp, #16]
 801e9a8:	edcd 5a07 	vstr	s11, [sp, #28]
 801e9ac:	ed8d 5a06 	vstr	s10, [sp, #24]
 801e9b0:	ed8d 7a02 	vstr	s14, [sp, #8]
 801e9b4:	edcd 4a05 	vstr	s9, [sp, #20]
 801e9b8:	f012 fd34 	bl	8031424 <cosf>
 801e9bc:	eef0 8a40 	vmov.f32	s17, s0
 801e9c0:	ed8d 0a01 	vstr	s0, [sp, #4]
 801e9c4:	eeb0 0a4a 	vmov.f32	s0, s20
 801e9c8:	f012 fd78 	bl	80314bc <sinf>
 801e9cc:	eef0 6a68 	vmov.f32	s13, s17
 801e9d0:	eeb0 ca40 	vmov.f32	s24, s0
 801e9d4:	ed9d 6a04 	vldr	s12, [sp, #16]
 801e9d8:	ed9d 7a02 	vldr	s14, [sp, #8]
 801e9dc:	eddd 7a03 	vldr	s15, [sp, #12]
 801e9e0:	ee6d 9a28 	vmul.f32	s19, s26, s17
 801e9e4:	ee26 3aa7 	vmul.f32	s6, s13, s15
 801e9e8:	ee60 1a06 	vmul.f32	s3, s0, s12
 801e9ec:	ee68 8a87 	vmul.f32	s17, s17, s14
 801e9f0:	ee26 1a86 	vmul.f32	s2, s13, s12
 801e9f4:	ee27 2a4c 	vnmul.f32	s4, s14, s24
 801e9f8:	ee20 0a27 	vmul.f32	s0, s0, s15
 801e9fc:	ee6d 0a4c 	vnmul.f32	s1, s26, s24
 801ea00:	ee32 5a03 	vadd.f32	s10, s4, s6
 801ea04:	ee78 6a80 	vadd.f32	s13, s17, s0
 801ea08:	ee70 5a81 	vadd.f32	s11, s1, s2
 801ea0c:	ee79 1aa1 	vadd.f32	s3, s19, s3
 801ea10:	eec6 ba88 	vdiv.f32	s23, s13, s16
 801ea14:	eec5 2a89 	vdiv.f32	s5, s11, s18
 801ea18:	ee85 ba09 	vdiv.f32	s22, s10, s18
 801ea1c:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801ea20:	ee32 4acb 	vsub.f32	s8, s5, s22
 801ea24:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801ea28:	ee24 3a04 	vmul.f32	s6, s8, s8
 801ea2c:	ee2a 2aaa 	vmul.f32	s4, s21, s21
 801ea30:	ee32 3a03 	vadd.f32	s6, s4, s6
 801ea34:	eeb5 3a40 	vcmp.f32	s6, #0.0
 801ea38:	eeb6 2a00 	vmov.f32	s4, #96	@ 0x3f000000  0.5
 801ea3c:	ee73 8aab 	vadd.f32	s17, s7, s23
 801ea40:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801ea44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea48:	edcd 6a03 	vstr	s13, [sp, #12]
 801ea4c:	edcd 5a02 	vstr	s11, [sp, #8]
 801ea50:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ea54:	ee68 8a82 	vmul.f32	s17, s17, s4
 801ea58:	ee69 9a82 	vmul.f32	s19, s19, s4
 801ea5c:	eddd 4a05 	vldr	s9, [sp, #20]
 801ea60:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ea64:	eddd 5a07 	vldr	s11, [sp, #28]
 801ea68:	eddd 6a08 	vldr	s13, [sp, #32]
 801ea6c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801ea6e:	f000 83bb 	beq.w	801f1e8 <calculate_aabb_per_shape+0xa08>
 801ea72:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801ea76:	eeb5 1a00 	vmov.f32	s2, #80	@ 0x3e800000  0.250
 801ea7a:	ee80 2a83 	vdiv.f32	s4, s1, s6
 801ea7e:	ee32 0a41 	vsub.f32	s0, s4, s2
 801ea82:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ea86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea8a:	f101 8159 	bmi.w	801fd40 <calculate_aabb_per_shape+0x1560>
 801ea8e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ea92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea96:	eef1 1ac0 	vsqrt.f32	s3, s0
 801ea9a:	f101 83f8 	bmi.w	802028e <calculate_aabb_per_shape+0x1aae>
 801ea9e:	ee21 2aaa 	vmul.f32	s4, s3, s21
 801eaa2:	ee61 1a84 	vmul.f32	s3, s3, s8
 801eaa6:	ee79 aac2 	vsub.f32	s21, s19, s4
 801eaaa:	ee31 4aa8 	vadd.f32	s8, s3, s17
 801eaae:	ee32 0aea 	vsub.f32	s0, s5, s21
 801eab2:	ee73 0ac4 	vsub.f32	s1, s7, s8
 801eab6:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801eaba:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801eabe:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801eac2:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801eac6:	ed8d 5a08 	vstr	s10, [sp, #32]
 801eaca:	edcd 7a07 	vstr	s15, [sp, #28]
 801eace:	ed8d 7a06 	vstr	s14, [sp, #24]
 801ead2:	ed8d 2a05 	vstr	s4, [sp, #20]
 801ead6:	edcd 1a04 	vstr	s3, [sp, #16]
 801eada:	ed8d 4a02 	vstr	s8, [sp, #8]
 801eade:	f012 fb8d 	bl	80311fc <atan2f>
 801eae2:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eae6:	ed8d 0a03 	vstr	s0, [sp, #12]
 801eaea:	ee7b 0ac4 	vsub.f32	s1, s23, s8
 801eaee:	ee3b 0a6a 	vsub.f32	s0, s22, s21
 801eaf2:	f012 fb83 	bl	80311fc <atan2f>
 801eaf6:	eddf 7a35 	vldr	s15, [pc, #212]	@ 801ebcc <calculate_aabb_per_shape+0x3ec>
 801eafa:	eddd 3a03 	vldr	s7, [sp, #12]
 801eafe:	ee20 3a27 	vmul.f32	s6, s0, s15
 801eb02:	ee63 3aa7 	vmul.f32	s7, s7, s15
 801eb06:	ee33 3a63 	vsub.f32	s6, s6, s7
 801eb0a:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801eb0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb12:	bf44      	itt	mi
 801eb14:	ed9f 1a2e 	vldrmi	s2, [pc, #184]	@ 801ebd0 <calculate_aabb_per_shape+0x3f0>
 801eb18:	ee33 3a01 	vaddmi.f32	s6, s6, s2
 801eb1c:	ed9f 1a2d 	vldr	s2, [pc, #180]	@ 801ebd4 <calculate_aabb_per_shape+0x3f4>
 801eb20:	eeb4 3ac1 	vcmpe.f32	s6, s2
 801eb24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb28:	9b00      	ldr	r3, [sp, #0]
 801eb2a:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eb2e:	f003 0840 	and.w	r8, r3, #64	@ 0x40
 801eb32:	f3c3 1280 	ubfx	r2, r3, #6, #1
 801eb36:	eddd 1a04 	vldr	s3, [sp, #16]
 801eb3a:	ed9d 2a05 	vldr	s4, [sp, #20]
 801eb3e:	ed9d 7a06 	vldr	s14, [sp, #24]
 801eb42:	eddd 7a07 	vldr	s15, [sp, #28]
 801eb46:	ed9d 5a08 	vldr	s10, [sp, #32]
 801eb4a:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801eb4e:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801eb52:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801eb56:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801eb5a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 801eb5e:	f141 80e5 	bpl.w	801fd2c <calculate_aabb_per_shape+0x154c>
 801eb62:	429a      	cmp	r2, r3
 801eb64:	f001 8346 	beq.w	80201f4 <calculate_aabb_per_shape+0x1a14>
 801eb68:	ee24 4a08 	vmul.f32	s8, s8, s16
 801eb6c:	ee6a aa89 	vmul.f32	s21, s21, s18
 801eb70:	eddd 3a01 	vldr	s7, [sp, #4]
 801eb74:	eef5 4a40 	vcmp.f32	s9, #0.0
 801eb78:	ee63 9a84 	vmul.f32	s19, s7, s8
 801eb7c:	ee2c 3a2a 	vmul.f32	s6, s24, s21
 801eb80:	ee2c 4a04 	vmul.f32	s8, s24, s8
 801eb84:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801eb88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb8c:	ee79 9ac3 	vsub.f32	s19, s19, s6
 801eb90:	ee74 8a2a 	vadd.f32	s17, s8, s21
 801eb94:	f000 87b0 	beq.w	801faf8 <calculate_aabb_per_shape+0x1318>
 801eb98:	ed9f 3a0e 	vldr	s6, [pc, #56]	@ 801ebd4 <calculate_aabb_per_shape+0x3f4>
 801eb9c:	eef4 4a43 	vcmp.f32	s9, s6
 801eba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eba4:	f000 87a8 	beq.w	801faf8 <calculate_aabb_per_shape+0x1318>
 801eba8:	e01c      	b.n	801ebe4 <calculate_aabb_per_shape+0x404>
 801ebaa:	bf00      	nop
 801ebac:	477fff00 	.word	0x477fff00
 801ebb0:	c77fff00 	.word	0xc77fff00
 801ebb4:	00000000 	.word	0x00000000
 801ebb8:	b3d6bf95 	.word	0xb3d6bf95
 801ebbc:	33d6bf95 	.word	0x33d6bf95
 801ebc0:	3f7ffffe 	.word	0x3f7ffffe
 801ebc4:	3727c5ac 	.word	0x3727c5ac
 801ebc8:	3c8efa35 	.word	0x3c8efa35
 801ebcc:	42652ee1 	.word	0x42652ee1
 801ebd0:	43b40000 	.word	0x43b40000
 801ebd4:	43340000 	.word	0x43340000
 801ebd8:	42b40000 	.word	0x42b40000
 801ebdc:	43870000 	.word	0x43870000
 801ebe0:	40c90fdb 	.word	0x40c90fdb
 801ebe4:	ed1f 3a04 	vldr	s6, [pc, #-16]	@ 801ebd8 <calculate_aabb_per_shape+0x3f8>
 801ebe8:	eef4 4a43 	vcmp.f32	s9, s6
 801ebec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebf0:	d007      	beq.n	801ec02 <calculate_aabb_per_shape+0x422>
 801ebf2:	ed1f 3a06 	vldr	s6, [pc, #-24]	@ 801ebdc <calculate_aabb_per_shape+0x3fc>
 801ebf6:	eef4 4a43 	vcmp.f32	s9, s6
 801ebfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebfe:	f041 80d3 	bne.w	801fda8 <calculate_aabb_per_shape+0x15c8>
 801ec02:	ee29 aa09 	vmul.f32	s20, s18, s18
 801ec06:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801ec0a:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801ec0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec12:	ee79 bac9 	vsub.f32	s23, s19, s18
 801ec16:	eef1 aaca 	vsqrt.f32	s21, s20
 801ec1a:	eeb1 ba49 	vneg.f32	s22, s18
 801ec1e:	edcd 6a08 	vstr	s13, [sp, #32]
 801ec22:	edcd 4a07 	vstr	s9, [sp, #28]
 801ec26:	ed8d 6a06 	vstr	s12, [sp, #24]
 801ec2a:	edcd 5a05 	vstr	s11, [sp, #20]
 801ec2e:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ec32:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec36:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ec3a:	f101 866c 	bmi.w	8020916 <calculate_aabb_per_shape+0x2136>
 801ec3e:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801ec42:	f012 faaf 	bl	80311a4 <acosf>
 801ec46:	ed5f 0a1a 	vldr	s1, [pc, #-104]	@ 801ebe0 <calculate_aabb_per_shape+0x400>
 801ec4a:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801ec4e:	f012 fad7 	bl	8031200 <fmodf>
 801ec52:	ee39 aa89 	vadd.f32	s20, s19, s18
 801ec56:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ec5a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ec5e:	eddd 7a03 	vldr	s15, [sp, #12]
 801ec62:	ed9d 5a04 	vldr	s10, [sp, #16]
 801ec66:	eddd 5a05 	vldr	s11, [sp, #20]
 801ec6a:	ed9d 6a06 	vldr	s12, [sp, #24]
 801ec6e:	eddd 4a07 	vldr	s9, [sp, #28]
 801ec72:	eddd 6a08 	vldr	s13, [sp, #32]
 801ec76:	ee89 0a2a 	vdiv.f32	s0, s18, s21
 801ec7a:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801ec7e:	edcd 4a08 	vstr	s9, [sp, #32]
 801ec82:	ed8d 6a07 	vstr	s12, [sp, #28]
 801ec86:	edcd 5a06 	vstr	s11, [sp, #24]
 801ec8a:	ed8d 5a05 	vstr	s10, [sp, #20]
 801ec8e:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec92:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ec96:	ed1f ca2e 	vldr	s24, [pc, #-184]	@ 801ebe0 <calculate_aabb_per_shape+0x400>
 801ec9a:	f012 fa83 	bl	80311a4 <acosf>
 801ec9e:	eef0 0a4c 	vmov.f32	s1, s24
 801eca2:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801eca6:	f012 faab 	bl	8031200 <fmodf>
 801ecaa:	ee28 2a08 	vmul.f32	s4, s16, s16
 801ecae:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ecb2:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801ecb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecba:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801ecbe:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ecc2:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801ecc6:	bf54      	ite	pl
 801ecc8:	eef0 aa61 	vmovpl.f32	s21, s3
 801eccc:	eef0 aa43 	vmovmi.f32	s21, s6
 801ecd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecd4:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ecd8:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801ecdc:	ee38 bac8 	vsub.f32	s22, s17, s16
 801ece0:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ece4:	eddd 7a03 	vldr	s15, [sp, #12]
 801ece8:	ed9d 5a05 	vldr	s10, [sp, #20]
 801ecec:	eddd 5a06 	vldr	s11, [sp, #24]
 801ecf0:	ed9d 6a07 	vldr	s12, [sp, #28]
 801ecf4:	eddd 4a08 	vldr	s9, [sp, #32]
 801ecf8:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801ecfc:	f101 859e 	bmi.w	802083c <calculate_aabb_per_shape+0x205c>
 801ed00:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 801ed04:	eeb0 0a49 	vmov.f32	s0, s18
 801ed08:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ed0c:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ed10:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ed14:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ed18:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ed1c:	edcd 1a07 	vstr	s3, [sp, #28]
 801ed20:	ed8d 3a06 	vstr	s6, [sp, #24]
 801ed24:	edcd 7a05 	vstr	s15, [sp, #20]
 801ed28:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ed2c:	f012 fa3a 	bl	80311a4 <acosf>
 801ed30:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801ed34:	eef0 0a4c 	vmov.f32	s1, s24
 801ed38:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801ed3c:	f012 fa60 	bl	8031200 <fmodf>
 801ed40:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ed44:	ed9d 3a06 	vldr	s6, [sp, #24]
 801ed48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed4c:	eddd 1a07 	vldr	s3, [sp, #28]
 801ed50:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ed54:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ed58:	eddd 7a05 	vldr	s15, [sp, #20]
 801ed5c:	ed9d 5a08 	vldr	s10, [sp, #32]
 801ed60:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801ed64:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801ed68:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801ed6c:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801ed70:	ee78 aa88 	vadd.f32	s21, s17, s16
 801ed74:	fe33 8a21 	vselgt.f32	s16, s6, s3
 801ed78:	eeb0 0a49 	vmov.f32	s0, s18
 801ed7c:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ed80:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ed84:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ed88:	edcd 5a07 	vstr	s11, [sp, #28]
 801ed8c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ed90:	edcd 7a05 	vstr	s15, [sp, #20]
 801ed94:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ed98:	f012 fa04 	bl	80311a4 <acosf>
 801ed9c:	ee20 0a08 	vmul.f32	s0, s0, s16
 801eda0:	ed5f 0a71 	vldr	s1, [pc, #-452]	@ 801ebe0 <calculate_aabb_per_shape+0x400>
 801eda4:	ee30 0a20 	vadd.f32	s0, s0, s1
 801eda8:	f012 fa2a 	bl	8031200 <fmodf>
 801edac:	ed9d 7a01 	vldr	s14, [sp, #4]
 801edb0:	eeb0 8a40 	vmov.f32	s16, s0
 801edb4:	eddd 7a05 	vldr	s15, [sp, #20]
 801edb8:	ed9d 5a06 	vldr	s10, [sp, #24]
 801edbc:	eddd 5a07 	vldr	s11, [sp, #28]
 801edc0:	ed9d 6a08 	vldr	s12, [sp, #32]
 801edc4:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801edc8:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801edcc:	ee36 3a68 	vsub.f32	s6, s12, s17
 801edd0:	ee3d ca69 	vsub.f32	s24, s26, s19
 801edd4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801edd8:	ee2c 2a0c 	vmul.f32	s4, s24, s24
 801eddc:	ee23 3a03 	vmul.f32	s6, s6, s6
 801ede0:	ee32 0a03 	vadd.f32	s0, s4, s6
 801ede4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ede8:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 801edec:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 801edf0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801edf4:	fe39 9a02 	vselgt.f32	s18, s18, s4
 801edf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801edfc:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801ee00:	f101 845c 	bmi.w	80206bc <calculate_aabb_per_shape+0x1edc>
 801ee04:	ee8c 0a02 	vdiv.f32	s0, s24, s4
 801ee08:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ee0c:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ee10:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ee14:	edcd 5a07 	vstr	s11, [sp, #28]
 801ee18:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ee1c:	edcd 7a05 	vstr	s15, [sp, #20]
 801ee20:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ee24:	f012 f9be 	bl	80311a4 <acosf>
 801ee28:	ed5f 0a93 	vldr	s1, [pc, #-588]	@ 801ebe0 <calculate_aabb_per_shape+0x400>
 801ee2c:	ee20 0a09 	vmul.f32	s0, s0, s18
 801ee30:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ee34:	f012 f9e4 	bl	8031200 <fmodf>
 801ee38:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ee3c:	eddd 7a05 	vldr	s15, [sp, #20]
 801ee40:	ee77 9a69 	vsub.f32	s19, s14, s19
 801ee44:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ee48:	eeb0 9a40 	vmov.f32	s18, s0
 801ee4c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801ee50:	ee29 0aa9 	vmul.f32	s0, s19, s19
 801ee54:	ee68 8aa8 	vmul.f32	s17, s17, s17
 801ee58:	ee30 0a28 	vadd.f32	s0, s0, s17
 801ee5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee60:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 801ee64:	eebf 3a00 	vmov.f32	s6, #240	@ 0xbf800000 -1.0
 801ee68:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ee6c:	fe72 8a03 	vselgt.f32	s17, s4, s6
 801ee70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee74:	eeb1 cac0 	vsqrt.f32	s24, s0
 801ee78:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ee7c:	eddd 5a07 	vldr	s11, [sp, #28]
 801ee80:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ee84:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ee88:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ee8c:	f101 8404 	bmi.w	8020698 <calculate_aabb_per_shape+0x1eb8>
 801ee90:	ee89 0a8c 	vdiv.f32	s0, s19, s24
 801ee94:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ee98:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ee9c:	ed8d 6a08 	vstr	s12, [sp, #32]
 801eea0:	edcd 5a07 	vstr	s11, [sp, #28]
 801eea4:	ed8d 5a06 	vstr	s10, [sp, #24]
 801eea8:	edcd 7a05 	vstr	s15, [sp, #20]
 801eeac:	ed8d 7a01 	vstr	s14, [sp, #4]
 801eeb0:	f012 f978 	bl	80311a4 <acosf>
 801eeb4:	ed5f 0ab6 	vldr	s1, [pc, #-728]	@ 801ebe0 <calculate_aabb_per_shape+0x400>
 801eeb8:	ee20 0a28 	vmul.f32	s0, s0, s17
 801eebc:	ee30 0a20 	vadd.f32	s0, s0, s1
 801eec0:	f012 f99e 	bl	8031200 <fmodf>
 801eec4:	ed9d 7a01 	vldr	s14, [sp, #4]
 801eec8:	eddd 7a05 	vldr	s15, [sp, #20]
 801eecc:	ed9d 5a06 	vldr	s10, [sp, #24]
 801eed0:	eddd 5a07 	vldr	s11, [sp, #28]
 801eed4:	ed9d 6a08 	vldr	s12, [sp, #32]
 801eed8:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801eedc:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801eee0:	f1b8 0f00 	cmp.w	r8, #0
 801eee4:	d105      	bne.n	801eef2 <calculate_aabb_per_shape+0x712>
 801eee6:	eeb0 3a49 	vmov.f32	s6, s18
 801eeea:	eeb0 9a40 	vmov.f32	s18, s0
 801eeee:	eeb0 0a43 	vmov.f32	s0, s6
 801eef2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801eef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eefa:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eefe:	f340 86cc 	ble.w	801fc9a <calculate_aabb_per_shape+0x14ba>
 801ef02:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ef06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef0a:	dc0d      	bgt.n	801ef28 <calculate_aabb_per_shape+0x748>
 801ef0c:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef14:	d408      	bmi.n	801ef28 <calculate_aabb_per_shape+0x748>
 801ef16:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ef1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef1e:	bf54      	ite	pl
 801ef20:	eef0 ba47 	vmovpl.f32	s23, s14
 801ef24:	eef0 ba4d 	vmovmi.f32	s23, s26
 801ef28:	ed9d 4a04 	vldr	s8, [sp, #16]
 801ef2c:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ef30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef34:	dc0a      	bgt.n	801ef4c <calculate_aabb_per_shape+0x76c>
 801ef36:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef3e:	d405      	bmi.n	801ef4c <calculate_aabb_per_shape+0x76c>
 801ef40:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ef44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef48:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801ef4c:	ed9d 4a03 	vldr	s8, [sp, #12]
 801ef50:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ef54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef58:	dc0d      	bgt.n	801ef76 <calculate_aabb_per_shape+0x796>
 801ef5a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef62:	d408      	bmi.n	801ef76 <calculate_aabb_per_shape+0x796>
 801ef64:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef6c:	bf54      	ite	pl
 801ef6e:	eeb0 ba67 	vmovpl.f32	s22, s15
 801ef72:	eeb0 ba46 	vmovmi.f32	s22, s12
 801ef76:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801ef7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef7e:	dc0a      	bgt.n	801ef96 <calculate_aabb_per_shape+0x7b6>
 801ef80:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801ef84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef88:	d405      	bmi.n	801ef96 <calculate_aabb_per_shape+0x7b6>
 801ef8a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef92:	fe76 aa27 	vselgt.f32	s21, s12, s15
 801ef96:	ed94 1a04 	vldr	s2, [r4, #16]
 801ef9a:	edd4 1a05 	vldr	s3, [r4, #20]
 801ef9e:	eeb4 1a6b 	vcmp.f32	s2, s23
 801efa2:	ed94 2a06 	vldr	s4, [r4, #24]
 801efa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efaa:	eef4 1a4b 	vcmp.f32	s3, s22
 801efae:	fe3b 1a81 	vselgt.f32	s2, s23, s2
 801efb2:	ed94 3a07 	vldr	s6, [r4, #28]
 801efb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efba:	eeb4 2a6b 	vcmp.f32	s4, s23
 801efbe:	fe7b 1a21 	vselgt.f32	s3, s22, s3
 801efc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efc6:	eeb4 3a4b 	vcmp.f32	s6, s22
 801efca:	bf48      	it	mi
 801efcc:	eeb0 2a6b 	vmovmi.f32	s4, s23
 801efd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efd4:	eeb4 1a4a 	vcmp.f32	s2, s20
 801efd8:	bf48      	it	mi
 801efda:	eeb0 3a4b 	vmovmi.f32	s6, s22
 801efde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efe2:	eef4 aa61 	vcmp.f32	s21, s3
 801efe6:	fe3a 1a01 	vselgt.f32	s2, s20, s2
 801efea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efee:	eeb4 2a4a 	vcmp.f32	s4, s20
 801eff2:	bf48      	it	mi
 801eff4:	eef0 1a6a 	vmovmi.f32	s3, s21
 801eff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801effc:	eef4 aa43 	vcmp.f32	s21, s6
 801f000:	bf48      	it	mi
 801f002:	eeb0 2a4a 	vmovmi.f32	s4, s20
 801f006:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f00a:	fe3a 3a83 	vselgt.f32	s6, s21, s6
 801f00e:	ed84 1a04 	vstr	s2, [r4, #16]
 801f012:	edc4 1a05 	vstr	s3, [r4, #20]
 801f016:	ed84 2a06 	vstr	s4, [r4, #24]
 801f01a:	ed84 3a07 	vstr	s6, [r4, #28]
 801f01e:	6820      	ldr	r0, [r4, #0]
 801f020:	e0e2      	b.n	801f1e8 <calculate_aabb_per_shape+0xa08>
 801f022:	f1b9 0f01 	cmp.w	r9, #1
 801f026:	bf0d      	iteet	eq
 801f028:	eddf 7ac7 	vldreq	s15, [pc, #796]	@ 801f348 <calculate_aabb_per_shape+0xb68>
 801f02c:	eef0 7a6c 	vmovne.f32	s15, s25
 801f030:	eeb0 7a4e 	vmovne.f32	s14, s28
 801f034:	eeb0 7a67 	vmoveq.f32	s14, s15
 801f038:	e460      	b.n	801e8fc <calculate_aabb_per_shape+0x11c>
 801f03a:	edd4 9a04 	vldr	s19, [r4, #16]
 801f03e:	edd4 aa05 	vldr	s21, [r4, #20]
 801f042:	eef4 9ac7 	vcmpe.f32	s19, s14
 801f046:	ed94 aa06 	vldr	s20, [r4, #24]
 801f04a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f04e:	eef4 aae7 	vcmpe.f32	s21, s15
 801f052:	bf58      	it	pl
 801f054:	eef0 9a47 	vmovpl.f32	s19, s14
 801f058:	ed94 ba07 	vldr	s22, [r4, #28]
 801f05c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f060:	eeb4 aac7 	vcmpe.f32	s20, s14
 801f064:	bf58      	it	pl
 801f066:	eef0 aa67 	vmovpl.f32	s21, s15
 801f06a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f06e:	eeb4 bae7 	vcmpe.f32	s22, s15
 801f072:	fe3a aa07 	vselgt.f32	s20, s20, s14
 801f076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f07a:	eef4 9ac5 	vcmpe.f32	s19, s10
 801f07e:	fe3b ba27 	vselgt.f32	s22, s22, s15
 801f082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f086:	ed8d fa0e 	vstr	s30, [sp, #56]	@ 0x38
 801f08a:	ed8d fa0f 	vstr	s30, [sp, #60]	@ 0x3c
 801f08e:	edc4 9a04 	vstr	s19, [r4, #16]
 801f092:	edc4 aa05 	vstr	s21, [r4, #20]
 801f096:	ed84 aa06 	vstr	s20, [r4, #24]
 801f09a:	ed84 ba07 	vstr	s22, [r4, #28]
 801f09e:	d80a      	bhi.n	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f0a0:	eeb4 aac5 	vcmpe.f32	s20, s10
 801f0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0a8:	db05      	blt.n	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f0aa:	eef4 aae6 	vcmpe.f32	s21, s13
 801f0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0b2:	f240 829c 	bls.w	801f5ee <calculate_aabb_per_shape+0xe0e>
 801f0b6:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f0ba:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f0be:	ee25 2a03 	vmul.f32	s4, s10, s6
 801f0c2:	ee28 8a88 	vmul.f32	s16, s17, s16
 801f0c6:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f0ca:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f0ce:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f0d2:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f0d6:	ee67 1a02 	vmul.f32	s3, s14, s4
 801f0da:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f0de:	eef2 ba08 	vmov.f32	s23, #40	@ 0x41400000  12.0
 801f0e2:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f0e6:	ee25 1a2b 	vmul.f32	s2, s10, s23
 801f0ea:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f0ee:	ee68 ba83 	vmul.f32	s23, s17, s6
 801f0f2:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f0f6:	ee7b bac1 	vsub.f32	s23, s23, s2
 801f0fa:	ee25 3a02 	vmul.f32	s6, s10, s4
 801f0fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f102:	ee28 2a82 	vmul.f32	s4, s17, s4
 801f106:	ee7b baa1 	vadd.f32	s23, s23, s3
 801f10a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f10e:	f100 8235 	bmi.w	801f57c <calculate_aabb_per_shape+0xd9c>
 801f112:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f11a:	bf4c      	ite	mi
 801f11c:	2301      	movmi	r3, #1
 801f11e:	2300      	movpl	r3, #0
 801f120:	2b00      	cmp	r3, #0
 801f122:	f040 8117 	bne.w	801f354 <calculate_aabb_per_shape+0xb74>
 801f126:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f12a:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f12e:	ee2b 0aab 	vmul.f32	s0, s23, s23
 801f132:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f136:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f13a:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f142:	f300 836a 	bgt.w	801f81a <calculate_aabb_per_shape+0x103a>
 801f146:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f14a:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f14e:	ee26 2a83 	vmul.f32	s4, s13, s6
 801f152:	ee29 8a08 	vmul.f32	s16, s18, s16
 801f156:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f15a:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f15e:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f162:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f166:	ee67 1a82 	vmul.f32	s3, s15, s4
 801f16a:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f16e:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f172:	eeb2 1a08 	vmov.f32	s2, #40	@ 0x41400000  12.0
 801f176:	ee69 8a03 	vmul.f32	s17, s18, s6
 801f17a:	ee26 1a81 	vmul.f32	s2, s13, s2
 801f17e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f182:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f186:	ee78 8ac1 	vsub.f32	s17, s17, s2
 801f18a:	ee26 3a82 	vmul.f32	s6, s13, s4
 801f18e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f192:	ee29 2a02 	vmul.f32	s4, s18, s4
 801f196:	ee78 8aa1 	vadd.f32	s17, s17, s3
 801f19a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f19e:	f100 81f5 	bmi.w	801f58c <calculate_aabb_per_shape+0xdac>
 801f1a2:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f1a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1aa:	bf4c      	ite	mi
 801f1ac:	2301      	movmi	r3, #1
 801f1ae:	2300      	movpl	r3, #0
 801f1b0:	2b00      	cmp	r3, #0
 801f1b2:	f040 815a 	bne.w	801f46a <calculate_aabb_per_shape+0xc8a>
 801f1b6:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f1ba:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f1be:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801f1c2:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f1c6:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f1ca:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f1ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1d2:	f300 8367 	bgt.w	801f8a4 <calculate_aabb_per_shape+0x10c4>
 801f1d6:	edc4 9a04 	vstr	s19, [r4, #16]
 801f1da:	edc4 aa05 	vstr	s21, [r4, #20]
 801f1de:	ed84 aa06 	vstr	s20, [r4, #24]
 801f1e2:	ed84 ba07 	vstr	s22, [r4, #28]
 801f1e6:	6820      	ldr	r0, [r4, #0]
 801f1e8:	3601      	adds	r6, #1
 801f1ea:	42b0      	cmp	r0, r6
 801f1ec:	d93c      	bls.n	801f268 <calculate_aabb_per_shape+0xa88>
 801f1ee:	46ac      	mov	ip, r5
 801f1f0:	eeb0 9a67 	vmov.f32	s18, s15
 801f1f4:	eef0 8a47 	vmov.f32	s17, s14
 801f1f8:	68a2      	ldr	r2, [r4, #8]
 801f1fa:	f7ff bb46 	b.w	801e88a <calculate_aabb_per_shape+0xaa>
 801f1fe:	ed9f 3a53 	vldr	s6, [pc, #332]	@ 801f34c <calculate_aabb_per_shape+0xb6c>
 801f202:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801f206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f20a:	f6ff aba2 	blt.w	801e952 <calculate_aabb_per_shape+0x172>
 801f20e:	ed94 1a04 	vldr	s2, [r4, #16]
 801f212:	edd4 1a05 	vldr	s3, [r4, #20]
 801f216:	eeb4 1a47 	vcmp.f32	s2, s14
 801f21a:	ed94 2a06 	vldr	s4, [r4, #24]
 801f21e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f222:	eef4 1a67 	vcmp.f32	s3, s15
 801f226:	ed94 3a07 	vldr	s6, [r4, #28]
 801f22a:	fe37 1a01 	vselgt.f32	s2, s14, s2
 801f22e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f232:	eeb4 2a47 	vcmp.f32	s4, s14
 801f236:	fe77 1aa1 	vselgt.f32	s3, s15, s3
 801f23a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f23e:	eeb4 3a67 	vcmp.f32	s6, s15
 801f242:	bf48      	it	mi
 801f244:	eeb0 2a47 	vmovmi.f32	s4, s14
 801f248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f24c:	bf48      	it	mi
 801f24e:	eeb0 3a67 	vmovmi.f32	s6, s15
 801f252:	3601      	adds	r6, #1
 801f254:	42b0      	cmp	r0, r6
 801f256:	ed84 1a04 	vstr	s2, [r4, #16]
 801f25a:	edc4 1a05 	vstr	s3, [r4, #20]
 801f25e:	ed84 2a06 	vstr	s4, [r4, #24]
 801f262:	ed84 3a07 	vstr	s6, [r4, #28]
 801f266:	d8c2      	bhi.n	801f1ee <calculate_aabb_per_shape+0xa0e>
 801f268:	ed94 6a04 	vldr	s12, [r4, #16]
 801f26c:	eefd 6ac6 	vcvt.s32.f32	s13, s12
 801f270:	ed94 7a05 	vldr	s14, [r4, #20]
 801f274:	eef8 5ae6 	vcvt.f32.s32	s11, s13
 801f278:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801f27c:	ed94 5a06 	vldr	s10, [r4, #24]
 801f280:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801f284:	eef8 4ae7 	vcvt.f32.s32	s9, s15
 801f288:	eebd 6ac5 	vcvt.s32.f32	s12, s10
 801f28c:	edd4 5a07 	vldr	s11, [r4, #28]
 801f290:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f294:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801f298:	eeb8 4ac6 	vcvt.f32.s32	s8, s12
 801f29c:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 801f2a0:	bf4c      	ite	mi
 801f2a2:	2001      	movmi	r0, #1
 801f2a4:	2000      	movpl	r0, #0
 801f2a6:	ee16 5a90 	vmov	r5, s13
 801f2aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2ae:	eef8 4ac7 	vcvt.f32.s32	s9, s14
 801f2b2:	eeb4 5ac4 	vcmpe.f32	s10, s8
 801f2b6:	eba5 0000 	sub.w	r0, r5, r0
 801f2ba:	bf4c      	ite	mi
 801f2bc:	2101      	movmi	r1, #1
 801f2be:	2100      	movpl	r1, #0
 801f2c0:	ee06 0a90 	vmov	s13, r0
 801f2c4:	ee17 0a90 	vmov	r0, s15
 801f2c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2cc:	eef4 5ae4 	vcmpe.f32	s11, s9
 801f2d0:	eba0 0101 	sub.w	r1, r0, r1
 801f2d4:	bfcc      	ite	gt
 801f2d6:	2201      	movgt	r2, #1
 801f2d8:	2200      	movle	r2, #0
 801f2da:	ee07 1a90 	vmov	s15, r1
 801f2de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2e2:	ee16 1a10 	vmov	r1, s12
 801f2e6:	bfc8      	it	gt
 801f2e8:	2301      	movgt	r3, #1
 801f2ea:	440a      	add	r2, r1
 801f2ec:	bfd8      	it	le
 801f2ee:	2300      	movle	r3, #0
 801f2f0:	ee17 1a10 	vmov	r1, s14
 801f2f4:	4419      	add	r1, r3
 801f2f6:	ee07 1a10 	vmov	s14, r1
 801f2fa:	ee06 2a10 	vmov	s12, r2
 801f2fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801f302:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801f306:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801f30a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801f30e:	ee36 5a66 	vsub.f32	s10, s12, s13
 801f312:	ee77 5a67 	vsub.f32	s11, s14, s15
 801f316:	e159      	b.n	801f5cc <calculate_aabb_per_shape+0xdec>
 801f318:	68e2      	ldr	r2, [r4, #12]
 801f31a:	00b9      	lsls	r1, r7, #2
 801f31c:	440a      	add	r2, r1
 801f31e:	3702      	adds	r7, #2
 801f320:	ed92 7a00 	vldr	s14, [r2]
 801f324:	edd2 7a01 	vldr	s15, [r2, #4]
 801f328:	f1b8 0f00 	cmp.w	r8, #0
 801f32c:	d003      	beq.n	801f336 <calculate_aabb_per_shape+0xb56>
 801f32e:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f332:	ee77 7a89 	vadd.f32	s15, s15, s18
 801f336:	eef0 ca67 	vmov.f32	s25, s15
 801f33a:	eeb0 ea47 	vmov.f32	s28, s14
 801f33e:	f04f 0900 	mov.w	r9, #0
 801f342:	f7ff badb 	b.w	801e8fc <calculate_aabb_per_shape+0x11c>
 801f346:	bf00      	nop
 801f348:	00000000 	.word	0x00000000
 801f34c:	b727c5ac 	.word	0xb727c5ac
 801f350:	c7ffff00 	.word	0xc7ffff00
 801f354:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801f358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f35c:	f100 8126 	bmi.w	801f5ac <calculate_aabb_per_shape+0xdcc>
 801f360:	eef4 baed 	vcmpe.f32	s23, s27
 801f364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f368:	bfcc      	ite	gt
 801f36a:	2301      	movgt	r3, #1
 801f36c:	2300      	movle	r3, #0
 801f36e:	2b00      	cmp	r3, #0
 801f370:	f43f aee9 	beq.w	801f146 <calculate_aabb_per_shape+0x966>
 801f374:	eeb1 3a43 	vneg.f32	s6, s6
 801f378:	eec3 1a2b 	vdiv.f32	s3, s6, s23
 801f37c:	eef4 1aed 	vcmpe.f32	s3, s27
 801f380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f384:	f77f aedf 	ble.w	801f146 <calculate_aabb_per_shape+0x966>
 801f388:	eef4 1aef 	vcmpe.f32	s3, s31
 801f38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f390:	f57f aed9 	bpl.w	801f146 <calculate_aabb_per_shape+0x966>
 801f394:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f398:	2301      	movs	r3, #1
 801f39a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801f39e:	eeb0 1a08 	vmov.f32	s2, #8	@ 0x40400000  3.0
 801f3a2:	ee30 0ae1 	vsub.f32	s0, s1, s3
 801f3a6:	ee20 2a01 	vmul.f32	s4, s0, s2
 801f3aa:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f3ae:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f3b2:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f3b6:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f3ba:	ee28 8a21 	vmul.f32	s16, s16, s3
 801f3be:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f3c2:	ee28 8a05 	vmul.f32	s16, s16, s10
 801f3c6:	ee23 3a28 	vmul.f32	s6, s6, s17
 801f3ca:	ee21 0aa1 	vmul.f32	s0, s3, s3
 801f3ce:	ee22 2a24 	vmul.f32	s4, s4, s9
 801f3d2:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f3d6:	ee60 1a21 	vmul.f32	s3, s0, s3
 801f3da:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f3de:	ee61 1a87 	vmul.f32	s3, s3, s14
 801f3e2:	ee33 3a21 	vadd.f32	s6, s6, s3
 801f3e6:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f3ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3ee:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f3f2:	bf58      	it	pl
 801f3f4:	eef0 9a43 	vmovpl.f32	s19, s6
 801f3f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3fc:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f400:	2b02      	cmp	r3, #2
 801f402:	f47f aea0 	bne.w	801f146 <calculate_aabb_per_shape+0x966>
 801f406:	ed9d 2a0f 	vldr	s4, [sp, #60]	@ 0x3c
 801f40a:	ee70 0ac2 	vsub.f32	s1, s1, s4
 801f40e:	ee20 1a81 	vmul.f32	s2, s1, s2
 801f412:	ee20 3aa0 	vmul.f32	s6, s1, s1
 801f416:	ee60 1a81 	vmul.f32	s3, s1, s2
 801f41a:	ee23 3a20 	vmul.f32	s6, s6, s1
 801f41e:	ee61 1a82 	vmul.f32	s3, s3, s4
 801f422:	ee22 1a01 	vmul.f32	s2, s4, s2
 801f426:	ee61 0a85 	vmul.f32	s1, s3, s10
 801f42a:	ee21 1a02 	vmul.f32	s2, s2, s4
 801f42e:	ee63 8a28 	vmul.f32	s17, s6, s17
 801f432:	ee62 1a02 	vmul.f32	s3, s4, s4
 801f436:	ee21 1a24 	vmul.f32	s2, s2, s9
 801f43a:	ee38 3aa0 	vadd.f32	s6, s17, s1
 801f43e:	ee21 2a82 	vmul.f32	s4, s3, s4
 801f442:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f446:	ee22 2a07 	vmul.f32	s4, s4, s14
 801f44a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f44e:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f452:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f456:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f45a:	bf58      	it	pl
 801f45c:	eef0 9a43 	vmovpl.f32	s19, s6
 801f460:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f464:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f468:	e66d      	b.n	801f146 <calculate_aabb_per_shape+0x966>
 801f46a:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801f46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f472:	f100 8093 	bmi.w	801f59c <calculate_aabb_per_shape+0xdbc>
 801f476:	eef4 8aed 	vcmpe.f32	s17, s27
 801f47a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f47e:	bfcc      	ite	gt
 801f480:	2301      	movgt	r3, #1
 801f482:	2300      	movle	r3, #0
 801f484:	2b00      	cmp	r3, #0
 801f486:	f43f aea6 	beq.w	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f48a:	eeb1 3a43 	vneg.f32	s6, s6
 801f48e:	ee83 1a28 	vdiv.f32	s2, s6, s17
 801f492:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f49a:	f77f ae9c 	ble.w	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f49e:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f4a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4a6:	f57f ae96 	bpl.w	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f4aa:	2301      	movs	r3, #1
 801f4ac:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f4b0:	eef0 0a08 	vmov.f32	s1, #8	@ 0x40400000  3.0
 801f4b4:	ee31 0ac1 	vsub.f32	s0, s3, s2
 801f4b8:	ee20 2a20 	vmul.f32	s4, s0, s1
 801f4bc:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f4c0:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f4c4:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f4c8:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f4cc:	ee28 8a01 	vmul.f32	s16, s16, s2
 801f4d0:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f4d4:	ee28 8a26 	vmul.f32	s16, s16, s13
 801f4d8:	ee23 3a09 	vmul.f32	s6, s6, s18
 801f4dc:	ee21 0a01 	vmul.f32	s0, s2, s2
 801f4e0:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f4e4:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f4e8:	ee20 1a01 	vmul.f32	s2, s0, s2
 801f4ec:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f4f0:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f4f4:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f4f8:	eef4 aac3 	vcmpe.f32	s21, s6
 801f4fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f500:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f504:	bf58      	it	pl
 801f506:	eef0 aa43 	vmovpl.f32	s21, s6
 801f50a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f50e:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f512:	2b02      	cmp	r3, #2
 801f514:	f47f ae5f 	bne.w	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f518:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 801f51c:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801f520:	ee21 2aa0 	vmul.f32	s4, s3, s1
 801f524:	ee21 3aa1 	vmul.f32	s6, s3, s3
 801f528:	ee61 0a82 	vmul.f32	s1, s3, s4
 801f52c:	ee23 3a21 	vmul.f32	s6, s6, s3
 801f530:	ee21 2a02 	vmul.f32	s4, s2, s4
 801f534:	ee60 0a81 	vmul.f32	s1, s1, s2
 801f538:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f53c:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801f540:	ee23 9a09 	vmul.f32	s18, s6, s18
 801f544:	ee61 1a01 	vmul.f32	s3, s2, s2
 801f548:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f54c:	ee39 3a20 	vadd.f32	s6, s18, s1
 801f550:	ee21 1a81 	vmul.f32	s2, s3, s2
 801f554:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f558:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f55c:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f560:	eef4 aac3 	vcmpe.f32	s21, s6
 801f564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f568:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f56c:	bf58      	it	pl
 801f56e:	eef0 aa43 	vmovpl.f32	s21, s6
 801f572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f576:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f57a:	e62c      	b.n	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f57c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f584:	bfcc      	ite	gt
 801f586:	2301      	movgt	r3, #1
 801f588:	2300      	movle	r3, #0
 801f58a:	e5c9      	b.n	801f120 <calculate_aabb_per_shape+0x940>
 801f58c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f594:	bfcc      	ite	gt
 801f596:	2301      	movgt	r3, #1
 801f598:	2300      	movle	r3, #0
 801f59a:	e609      	b.n	801f1b0 <calculate_aabb_per_shape+0x9d0>
 801f59c:	eef4 8aee 	vcmpe.f32	s17, s29
 801f5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5a4:	bf4c      	ite	mi
 801f5a6:	2301      	movmi	r3, #1
 801f5a8:	2300      	movpl	r3, #0
 801f5aa:	e76b      	b.n	801f484 <calculate_aabb_per_shape+0xca4>
 801f5ac:	eef4 baee 	vcmpe.f32	s23, s29
 801f5b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5b4:	bf4c      	ite	mi
 801f5b6:	2301      	movmi	r3, #1
 801f5b8:	2300      	movpl	r3, #0
 801f5ba:	e6d8      	b.n	801f36e <calculate_aabb_per_shape+0xb8e>
 801f5bc:	ed5f 5a9c 	vldr	s11, [pc, #-624]	@ 801f350 <calculate_aabb_per_shape+0xb70>
 801f5c0:	eeb0 6a47 	vmov.f32	s12, s14
 801f5c4:	eef0 6a67 	vmov.f32	s13, s15
 801f5c8:	eeb0 5a65 	vmov.f32	s10, s11
 801f5cc:	edc4 6a04 	vstr	s13, [r4, #16]
 801f5d0:	edc4 7a05 	vstr	s15, [r4, #20]
 801f5d4:	ed84 6a06 	vstr	s12, [r4, #24]
 801f5d8:	ed84 7a07 	vstr	s14, [r4, #28]
 801f5dc:	ed84 5a08 	vstr	s10, [r4, #32]
 801f5e0:	edc4 5a09 	vstr	s11, [r4, #36]	@ 0x24
 801f5e4:	b011      	add	sp, #68	@ 0x44
 801f5e6:	ecbd 8b10 	vpop	{d8-d15}
 801f5ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5ee:	eeb4 bae6 	vcmpe.f32	s22, s13
 801f5f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5f6:	f6ff ad5e 	blt.w	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f5fa:	eef4 9ae4 	vcmpe.f32	s19, s9
 801f5fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f602:	f63f ad58 	bhi.w	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f606:	eeb4 aae4 	vcmpe.f32	s20, s9
 801f60a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f60e:	f6ff ad52 	blt.w	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f612:	eef4 aae5 	vcmpe.f32	s21, s11
 801f616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f61a:	f63f ad4c 	bhi.w	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f61e:	eeb4 bae5 	vcmpe.f32	s22, s11
 801f622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f626:	f6ff ad46 	blt.w	801f0b6 <calculate_aabb_per_shape+0x8d6>
 801f62a:	e5dd      	b.n	801f1e8 <calculate_aabb_per_shape+0xa08>
 801f62c:	f1aa 0a05 	sub.w	sl, sl, #5
 801f630:	f1ba 0f03 	cmp.w	sl, #3
 801f634:	f240 81ae 	bls.w	801f994 <calculate_aabb_per_shape+0x11b4>
 801f638:	eef0 6a49 	vmov.f32	s13, s18
 801f63c:	eeb0 5a68 	vmov.f32	s10, s17
 801f640:	46ba      	mov	sl, r7
 801f642:	eeb0 6a66 	vmov.f32	s12, s13
 801f646:	eeb0 da45 	vmov.f32	s26, s10
 801f64a:	e17d      	b.n	801f948 <calculate_aabb_per_shape+0x1168>
 801f64c:	ed94 2a04 	vldr	s4, [r4, #16]
 801f650:	edd4 0a05 	vldr	s1, [r4, #20]
 801f654:	eeb4 2ac7 	vcmpe.f32	s4, s14
 801f658:	ed94 1a06 	vldr	s2, [r4, #24]
 801f65c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f660:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f664:	bf58      	it	pl
 801f666:	eeb0 2a47 	vmovpl.f32	s4, s14
 801f66a:	ed94 0a07 	vldr	s0, [r4, #28]
 801f66e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f672:	eeb4 1ac7 	vcmpe.f32	s2, s14
 801f676:	bf58      	it	pl
 801f678:	eef0 0a67 	vmovpl.f32	s1, s15
 801f67c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f680:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f684:	fe31 1a07 	vselgt.f32	s2, s2, s14
 801f688:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f68c:	eeb4 2ac5 	vcmpe.f32	s4, s10
 801f690:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801f694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f698:	ed84 2a04 	vstr	s4, [r4, #16]
 801f69c:	edc4 0a05 	vstr	s1, [r4, #20]
 801f6a0:	ed84 1a06 	vstr	s2, [r4, #24]
 801f6a4:	ed84 0a07 	vstr	s0, [r4, #28]
 801f6a8:	d80f      	bhi.n	801f6ca <calculate_aabb_per_shape+0xeea>
 801f6aa:	eeb4 1ac5 	vcmpe.f32	s2, s10
 801f6ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6b2:	db0a      	blt.n	801f6ca <calculate_aabb_per_shape+0xeea>
 801f6b4:	eef4 0ae6 	vcmpe.f32	s1, s13
 801f6b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6bc:	d805      	bhi.n	801f6ca <calculate_aabb_per_shape+0xeea>
 801f6be:	eeb4 0ae6 	vcmpe.f32	s0, s13
 801f6c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6c6:	f6bf ad8f 	bge.w	801f1e8 <calculate_aabb_per_shape+0xa08>
 801f6ca:	ee35 8a05 	vadd.f32	s16, s10, s10
 801f6ce:	ee78 1aa8 	vadd.f32	s3, s17, s17
 801f6d2:	ee37 3a07 	vadd.f32	s6, s14, s14
 801f6d6:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f6da:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f6de:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f6e2:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f6e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6ea:	f100 8139 	bmi.w	801f960 <calculate_aabb_per_shape+0x1180>
 801f6ee:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f6f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6f6:	bfcc      	ite	gt
 801f6f8:	2301      	movgt	r3, #1
 801f6fa:	2300      	movle	r3, #0
 801f6fc:	b173      	cbz	r3, 801f71c <calculate_aabb_per_shape+0xf3c>
 801f6fe:	eef1 1a61 	vneg.f32	s3, s3
 801f702:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f706:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f70a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f70e:	dd05      	ble.n	801f71c <calculate_aabb_per_shape+0xf3c>
 801f710:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f718:	f100 8175 	bmi.w	801fa06 <calculate_aabb_per_shape+0x1226>
 801f71c:	ee36 8aa6 	vadd.f32	s16, s13, s13
 801f720:	ee79 1a09 	vadd.f32	s3, s18, s18
 801f724:	ee37 3aa7 	vadd.f32	s6, s15, s15
 801f728:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f72c:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f730:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f734:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f73c:	f100 815b 	bmi.w	801f9f6 <calculate_aabb_per_shape+0x1216>
 801f740:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f748:	bfcc      	ite	gt
 801f74a:	2301      	movgt	r3, #1
 801f74c:	2300      	movle	r3, #0
 801f74e:	b383      	cbz	r3, 801f7b2 <calculate_aabb_per_shape+0xfd2>
 801f750:	eef1 1a61 	vneg.f32	s3, s3
 801f754:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f758:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f75c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f760:	dd27      	ble.n	801f7b2 <calculate_aabb_per_shape+0xfd2>
 801f762:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f76a:	d522      	bpl.n	801f7b2 <calculate_aabb_per_shape+0xfd2>
 801f76c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f770:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f774:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f778:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f77c:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f780:	ee61 1a89 	vmul.f32	s3, s3, s18
 801f784:	ee23 3a26 	vmul.f32	s6, s6, s13
 801f788:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f78c:	ee73 1a21 	vadd.f32	s3, s6, s3
 801f790:	ee28 3a27 	vmul.f32	s6, s16, s15
 801f794:	ee31 3a83 	vadd.f32	s6, s3, s6
 801f798:	eef4 0ac3 	vcmpe.f32	s1, s6
 801f79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7a0:	eeb4 0ac3 	vcmpe.f32	s0, s6
 801f7a4:	bf58      	it	pl
 801f7a6:	eef0 0a43 	vmovpl.f32	s1, s6
 801f7aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7ae:	fe30 0a03 	vselgt.f32	s0, s0, s6
 801f7b2:	ed84 2a04 	vstr	s4, [r4, #16]
 801f7b6:	edc4 0a05 	vstr	s1, [r4, #20]
 801f7ba:	ed84 1a06 	vstr	s2, [r4, #24]
 801f7be:	ed84 0a07 	vstr	s0, [r4, #28]
 801f7c2:	e511      	b.n	801f1e8 <calculate_aabb_per_shape+0xa08>
 801f7c4:	f107 0a04 	add.w	sl, r7, #4
 801f7c8:	edde 6a01 	vldr	s13, [lr, #4]
 801f7cc:	ed9e da02 	vldr	s26, [lr, #8]
 801f7d0:	edde 5a03 	vldr	s11, [lr, #12]
 801f7d4:	f1b8 0f00 	cmp.w	r8, #0
 801f7d8:	d007      	beq.n	801f7ea <calculate_aabb_per_shape+0x100a>
 801f7da:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f7de:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f7e2:	ee3d da28 	vadd.f32	s26, s26, s17
 801f7e6:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f7ea:	eef0 4a4d 	vmov.f32	s9, s26
 801f7ee:	eeb0 6a65 	vmov.f32	s12, s11
 801f7f2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801f7f6:	f10a 0702 	add.w	r7, sl, #2
 801f7fa:	ed91 7a00 	vldr	s14, [r1]
 801f7fe:	ed91 3a01 	vldr	s6, [r1, #4]
 801f802:	eeb0 5a67 	vmov.f32	s10, s15
 801f806:	f1b8 0f00 	cmp.w	r8, #0
 801f80a:	f000 80a5 	beq.w	801f958 <calculate_aabb_per_shape+0x1178>
 801f80e:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f812:	ee79 7a03 	vadd.f32	s15, s18, s6
 801f816:	f7ff b871 	b.w	801e8fc <calculate_aabb_per_shape+0x11c>
 801f81a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f81e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f822:	eeb1 cac0 	vsqrt.f32	s24, s0
 801f826:	f100 8144 	bmi.w	801fab2 <calculate_aabb_per_shape+0x12d2>
 801f82a:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f82e:	eeb1 3a6b 	vneg.f32	s6, s23
 801f832:	ee7c ba6b 	vsub.f32	s23, s24, s23
 801f836:	eecb 1a88 	vdiv.f32	s3, s23, s16
 801f83a:	eef4 1aed 	vcmpe.f32	s3, s27
 801f83e:	ee33 3a4c 	vsub.f32	s6, s6, s24
 801f842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f846:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f84a:	dd15      	ble.n	801f878 <calculate_aabb_per_shape+0x1098>
 801f84c:	eef4 1aef 	vcmpe.f32	s3, s31
 801f850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f854:	d510      	bpl.n	801f878 <calculate_aabb_per_shape+0x1098>
 801f856:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f85a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f85e:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f862:	f77f ad99 	ble.w	801f398 <calculate_aabb_per_shape+0xbb8>
 801f866:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f86a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f86e:	f57f ad93 	bpl.w	801f398 <calculate_aabb_per_shape+0xbb8>
 801f872:	2302      	movs	r3, #2
 801f874:	2201      	movs	r2, #1
 801f876:	e00d      	b.n	801f894 <calculate_aabb_per_shape+0x10b4>
 801f878:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f87c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f880:	f77f ac61 	ble.w	801f146 <calculate_aabb_per_shape+0x966>
 801f884:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f88c:	f57f ac5b 	bpl.w	801f146 <calculate_aabb_per_shape+0x966>
 801f890:	2301      	movs	r3, #1
 801f892:	2200      	movs	r2, #0
 801f894:	a910      	add	r1, sp, #64	@ 0x40
 801f896:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f89a:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f89e:	eddd 1a0e 	vldr	s3, [sp, #56]	@ 0x38
 801f8a2:	e57a      	b.n	801f39a <calculate_aabb_per_shape+0xbba>
 801f8a4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f8a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8ac:	eef1 bac0 	vsqrt.f32	s23, s0
 801f8b0:	f100 80e0 	bmi.w	801fa74 <calculate_aabb_per_shape+0x1294>
 801f8b4:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f8b8:	eeb1 3a68 	vneg.f32	s6, s17
 801f8bc:	ee7b 8ae8 	vsub.f32	s17, s23, s17
 801f8c0:	ee88 1a88 	vdiv.f32	s2, s17, s16
 801f8c4:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f8c8:	ee33 3a6b 	vsub.f32	s6, s6, s23
 801f8cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8d0:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f8d4:	dd15      	ble.n	801f902 <calculate_aabb_per_shape+0x1122>
 801f8d6:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f8da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8de:	d510      	bpl.n	801f902 <calculate_aabb_per_shape+0x1122>
 801f8e0:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8e8:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 801f8ec:	f77f addd 	ble.w	801f4aa <calculate_aabb_per_shape+0xcca>
 801f8f0:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f8f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8f8:	f57f add7 	bpl.w	801f4aa <calculate_aabb_per_shape+0xcca>
 801f8fc:	2302      	movs	r3, #2
 801f8fe:	2201      	movs	r2, #1
 801f900:	e00d      	b.n	801f91e <calculate_aabb_per_shape+0x113e>
 801f902:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f90a:	f77f ac64 	ble.w	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f90e:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f916:	f57f ac5e 	bpl.w	801f1d6 <calculate_aabb_per_shape+0x9f6>
 801f91a:	2301      	movs	r3, #1
 801f91c:	2200      	movs	r2, #0
 801f91e:	a910      	add	r1, sp, #64	@ 0x40
 801f920:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f924:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f928:	ed9d 1a0e 	vldr	s2, [sp, #56]	@ 0x38
 801f92c:	e5be      	b.n	801f4ac <calculate_aabb_per_shape+0xccc>
 801f92e:	f107 0a02 	add.w	sl, r7, #2
 801f932:	edde 6a01 	vldr	s13, [lr, #4]
 801f936:	f1b8 0f00 	cmp.w	r8, #0
 801f93a:	d108      	bne.n	801f94e <calculate_aabb_per_shape+0x116e>
 801f93c:	eeb0 da67 	vmov.f32	s26, s15
 801f940:	eeb0 6a66 	vmov.f32	s12, s13
 801f944:	eeb0 5a67 	vmov.f32	s10, s15
 801f948:	eef0 7a45 	vmov.f32	s15, s10
 801f94c:	e751      	b.n	801f7f2 <calculate_aabb_per_shape+0x1012>
 801f94e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f952:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f956:	e7f1      	b.n	801f93c <calculate_aabb_per_shape+0x115c>
 801f958:	eef0 7a43 	vmov.f32	s15, s6
 801f95c:	f7fe bfce 	b.w	801e8fc <calculate_aabb_per_shape+0x11c>
 801f960:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f968:	bf4c      	ite	mi
 801f96a:	2301      	movmi	r3, #1
 801f96c:	2300      	movpl	r3, #0
 801f96e:	e6c5      	b.n	801f6fc <calculate_aabb_per_shape+0xf1c>
 801f970:	eeb0 5a67 	vmov.f32	s10, s15
 801f974:	f107 0a03 	add.w	sl, r7, #3
 801f978:	edde 6a01 	vldr	s13, [lr, #4]
 801f97c:	3704      	adds	r7, #4
 801f97e:	edde 4a02 	vldr	s9, [lr, #8]
 801f982:	eeb0 6a49 	vmov.f32	s12, s18
 801f986:	eeb0 da68 	vmov.f32	s26, s17
 801f98a:	edde 7a03 	vldr	s15, [lr, #12]
 801f98e:	9500      	str	r5, [sp, #0]
 801f990:	f7fe bfa9 	b.w	801e8e6 <calculate_aabb_per_shape+0x106>
 801f994:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f998:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f99c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f9a0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f9a4:	e64c      	b.n	801f640 <calculate_aabb_per_shape+0xe60>
 801f9a6:	eeb0 7a68 	vmov.f32	s14, s17
 801f9aa:	f7fe bfa7 	b.w	801e8fc <calculate_aabb_per_shape+0x11c>
 801f9ae:	f1aa 0a05 	sub.w	sl, sl, #5
 801f9b2:	f1ba 0f03 	cmp.w	sl, #3
 801f9b6:	d915      	bls.n	801f9e4 <calculate_aabb_per_shape+0x1204>
 801f9b8:	eef0 6a49 	vmov.f32	s13, s18
 801f9bc:	eeb0 5a68 	vmov.f32	s10, s17
 801f9c0:	f107 0a02 	add.w	sl, r7, #2
 801f9c4:	edde 5a01 	vldr	s11, [lr, #4]
 801f9c8:	f1b8 0f00 	cmp.w	r8, #0
 801f9cc:	d003      	beq.n	801f9d6 <calculate_aabb_per_shape+0x11f6>
 801f9ce:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f9d2:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f9d6:	eeb0 da67 	vmov.f32	s26, s15
 801f9da:	eeb0 6a65 	vmov.f32	s12, s11
 801f9de:	eef0 4a67 	vmov.f32	s9, s15
 801f9e2:	e7b1      	b.n	801f948 <calculate_aabb_per_shape+0x1168>
 801f9e4:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f9e8:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f9ec:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f9f0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f9f4:	e7e4      	b.n	801f9c0 <calculate_aabb_per_shape+0x11e0>
 801f9f6:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f9fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9fe:	bf4c      	ite	mi
 801fa00:	2301      	movmi	r3, #1
 801fa02:	2300      	movpl	r3, #0
 801fa04:	e6a3      	b.n	801f74e <calculate_aabb_per_shape+0xf6e>
 801fa06:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801fa0a:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801fa0e:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801fa12:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801fa16:	ee23 3a08 	vmul.f32	s6, s6, s16
 801fa1a:	ee61 1aa8 	vmul.f32	s3, s3, s17
 801fa1e:	ee23 3a05 	vmul.f32	s6, s6, s10
 801fa22:	ee28 8a08 	vmul.f32	s16, s16, s16
 801fa26:	ee73 1a21 	vadd.f32	s3, s6, s3
 801fa2a:	ee28 3a07 	vmul.f32	s6, s16, s14
 801fa2e:	ee31 3a83 	vadd.f32	s6, s3, s6
 801fa32:	eeb4 2ac3 	vcmpe.f32	s4, s6
 801fa36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa3a:	eeb4 1ac3 	vcmpe.f32	s2, s6
 801fa3e:	bf58      	it	pl
 801fa40:	eeb0 2a43 	vmovpl.f32	s4, s6
 801fa44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa48:	fe31 1a03 	vselgt.f32	s2, s2, s6
 801fa4c:	e666      	b.n	801f71c <calculate_aabb_per_shape+0xf3c>
 801fa4e:	ed9f 3ad3 	vldr	s6, [pc, #844]	@ 801fd9c <calculate_aabb_per_shape+0x15bc>
 801fa52:	eef4 6ac3 	vcmpe.f32	s13, s6
 801fa56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa5a:	f6bf abd8 	bge.w	801f20e <calculate_aabb_per_shape+0xa2e>
 801fa5e:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801fa62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa66:	d443      	bmi.n	801faf0 <calculate_aabb_per_shape+0x1310>
 801fa68:	eeb0 8a45 	vmov.f32	s16, s10
 801fa6c:	eeb1 9a66 	vneg.f32	s18, s13
 801fa70:	f7fe bf8d 	b.w	801e98e <calculate_aabb_per_shape+0x1ae>
 801fa74:	edcd 6a07 	vstr	s13, [sp, #28]
 801fa78:	edcd 4a06 	vstr	s9, [sp, #24]
 801fa7c:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fa80:	edcd 5a04 	vstr	s11, [sp, #16]
 801fa84:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fa88:	edcd 7a02 	vstr	s15, [sp, #8]
 801fa8c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fa90:	f011 fbd6 	bl	8031240 <sqrtf>
 801fa94:	eddd 6a07 	vldr	s13, [sp, #28]
 801fa98:	eddd 4a06 	vldr	s9, [sp, #24]
 801fa9c:	ed9d 6a05 	vldr	s12, [sp, #20]
 801faa0:	eddd 5a04 	vldr	s11, [sp, #16]
 801faa4:	ed9d 5a03 	vldr	s10, [sp, #12]
 801faa8:	eddd 7a02 	vldr	s15, [sp, #8]
 801faac:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fab0:	e700      	b.n	801f8b4 <calculate_aabb_per_shape+0x10d4>
 801fab2:	edcd 6a07 	vstr	s13, [sp, #28]
 801fab6:	edcd 4a06 	vstr	s9, [sp, #24]
 801faba:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fabe:	edcd 5a04 	vstr	s11, [sp, #16]
 801fac2:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fac6:	edcd 7a02 	vstr	s15, [sp, #8]
 801faca:	ed8d 7a01 	vstr	s14, [sp, #4]
 801face:	f011 fbb7 	bl	8031240 <sqrtf>
 801fad2:	eddd 6a07 	vldr	s13, [sp, #28]
 801fad6:	eddd 4a06 	vldr	s9, [sp, #24]
 801fada:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fade:	eddd 5a04 	vldr	s11, [sp, #16]
 801fae2:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fae6:	eddd 7a02 	vldr	s15, [sp, #8]
 801faea:	ed9d 7a01 	vldr	s14, [sp, #4]
 801faee:	e69c      	b.n	801f82a <calculate_aabb_per_shape+0x104a>
 801faf0:	eeb1 8a45 	vneg.f32	s16, s10
 801faf4:	f7fe bf43 	b.w	801e97e <calculate_aabb_per_shape+0x19e>
 801faf8:	ee28 aa08 	vmul.f32	s20, s16, s16
 801fafc:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801fb00:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801fb04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb08:	ee79 bac8 	vsub.f32	s23, s19, s16
 801fb0c:	eef1 aaca 	vsqrt.f32	s21, s20
 801fb10:	eeb1 ba48 	vneg.f32	s22, s16
 801fb14:	edcd 6a08 	vstr	s13, [sp, #32]
 801fb18:	edcd 4a07 	vstr	s9, [sp, #28]
 801fb1c:	ed8d 6a06 	vstr	s12, [sp, #24]
 801fb20:	edcd 5a05 	vstr	s11, [sp, #20]
 801fb24:	ed8d 5a04 	vstr	s10, [sp, #16]
 801fb28:	edcd 7a03 	vstr	s15, [sp, #12]
 801fb2c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fb30:	f100 8655 	bmi.w	80207de <calculate_aabb_per_shape+0x1ffe>
 801fb34:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801fb38:	f011 fb34 	bl	80311a4 <acosf>
 801fb3c:	eddf 0a99 	vldr	s1, [pc, #612]	@ 801fda4 <calculate_aabb_per_shape+0x15c4>
 801fb40:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801fb44:	f011 fb5c 	bl	8031200 <fmodf>
 801fb48:	ee39 aa88 	vadd.f32	s20, s19, s16
 801fb4c:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fb50:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fb54:	eddd 7a03 	vldr	s15, [sp, #12]
 801fb58:	ed9d 5a04 	vldr	s10, [sp, #16]
 801fb5c:	eddd 5a05 	vldr	s11, [sp, #20]
 801fb60:	ed9d 6a06 	vldr	s12, [sp, #24]
 801fb64:	eddd 4a07 	vldr	s9, [sp, #28]
 801fb68:	eddd 6a08 	vldr	s13, [sp, #32]
 801fb6c:	ee88 0a2a 	vdiv.f32	s0, s16, s21
 801fb70:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801fb74:	edcd 4a08 	vstr	s9, [sp, #32]
 801fb78:	ed8d 6a07 	vstr	s12, [sp, #28]
 801fb7c:	edcd 5a06 	vstr	s11, [sp, #24]
 801fb80:	ed8d 5a05 	vstr	s10, [sp, #20]
 801fb84:	edcd 7a03 	vstr	s15, [sp, #12]
 801fb88:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fb8c:	ed9f ca85 	vldr	s24, [pc, #532]	@ 801fda4 <calculate_aabb_per_shape+0x15c4>
 801fb90:	f011 fb08 	bl	80311a4 <acosf>
 801fb94:	eef0 0a4c 	vmov.f32	s1, s24
 801fb98:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801fb9c:	f011 fb30 	bl	8031200 <fmodf>
 801fba0:	ee29 2a09 	vmul.f32	s4, s18, s18
 801fba4:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fba8:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801fbac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbb0:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801fbb4:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fbb8:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801fbbc:	bf54      	ite	pl
 801fbbe:	eef0 aa61 	vmovpl.f32	s21, s3
 801fbc2:	eef0 aa43 	vmovmi.f32	s21, s6
 801fbc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbca:	ed8d 0a04 	vstr	s0, [sp, #16]
 801fbce:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801fbd2:	ee38 bac9 	vsub.f32	s22, s17, s18
 801fbd6:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fbda:	eddd 7a03 	vldr	s15, [sp, #12]
 801fbde:	ed9d 5a05 	vldr	s10, [sp, #20]
 801fbe2:	eddd 5a06 	vldr	s11, [sp, #24]
 801fbe6:	ed9d 6a07 	vldr	s12, [sp, #28]
 801fbea:	eddd 4a08 	vldr	s9, [sp, #32]
 801fbee:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801fbf2:	f100 8587 	bmi.w	8020704 <calculate_aabb_per_shape+0x1f24>
 801fbf6:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 801fbfa:	eeb0 0a48 	vmov.f32	s0, s16
 801fbfe:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801fc02:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801fc06:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801fc0a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801fc0e:	ed8d 5a08 	vstr	s10, [sp, #32]
 801fc12:	edcd 1a07 	vstr	s3, [sp, #28]
 801fc16:	ed8d 3a06 	vstr	s6, [sp, #24]
 801fc1a:	edcd 7a05 	vstr	s15, [sp, #20]
 801fc1e:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fc22:	f011 fabf 	bl	80311a4 <acosf>
 801fc26:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801fc2a:	eef0 0a4c 	vmov.f32	s1, s24
 801fc2e:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801fc32:	f011 fae5 	bl	8031200 <fmodf>
 801fc36:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fc3a:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fc3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc42:	eddd 1a07 	vldr	s3, [sp, #28]
 801fc46:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fc4a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fc4e:	eddd 7a05 	vldr	s15, [sp, #20]
 801fc52:	ed9d 5a08 	vldr	s10, [sp, #32]
 801fc56:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801fc5a:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801fc5e:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801fc62:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801fc66:	ee78 aa89 	vadd.f32	s21, s17, s18
 801fc6a:	fe33 9a21 	vselgt.f32	s18, s6, s3
 801fc6e:	eeb0 0a48 	vmov.f32	s0, s16
 801fc72:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fc76:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801fc7a:	ed8d 6a08 	vstr	s12, [sp, #32]
 801fc7e:	edcd 5a07 	vstr	s11, [sp, #28]
 801fc82:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fc86:	edcd 7a05 	vstr	s15, [sp, #20]
 801fc8a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fc8e:	f011 fa89 	bl	80311a4 <acosf>
 801fc92:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fc96:	f7ff b883 	b.w	801eda0 <calculate_aabb_per_shape+0x5c0>
 801fc9a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fca2:	dc39      	bgt.n	801fd18 <calculate_aabb_per_shape+0x1538>
 801fca4:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcac:	d434      	bmi.n	801fd18 <calculate_aabb_per_shape+0x1538>
 801fcae:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fcb2:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fcb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcba:	dc04      	bgt.n	801fcc6 <calculate_aabb_per_shape+0x14e6>
 801fcbc:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fcc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcc4:	d505      	bpl.n	801fcd2 <calculate_aabb_per_shape+0x14f2>
 801fcc6:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fcca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcce:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801fcd2:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fcd6:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fcda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcde:	dc04      	bgt.n	801fcea <calculate_aabb_per_shape+0x150a>
 801fce0:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fce4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fce8:	d508      	bpl.n	801fcfc <calculate_aabb_per_shape+0x151c>
 801fcea:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801fcee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcf2:	bf54      	ite	pl
 801fcf4:	eeb0 ba67 	vmovpl.f32	s22, s15
 801fcf8:	eeb0 ba46 	vmovmi.f32	s22, s12
 801fcfc:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801fd00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd04:	f73f a941 	bgt.w	801ef8a <calculate_aabb_per_shape+0x7aa>
 801fd08:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801fd0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd10:	f53f a93b 	bmi.w	801ef8a <calculate_aabb_per_shape+0x7aa>
 801fd14:	f7ff b93f 	b.w	801ef96 <calculate_aabb_per_shape+0x7b6>
 801fd18:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fd1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd20:	bf54      	ite	pl
 801fd22:	eef0 ba47 	vmovpl.f32	s23, s14
 801fd26:	eef0 ba4d 	vmovmi.f32	s23, s26
 801fd2a:	e7c0      	b.n	801fcae <calculate_aabb_per_shape+0x14ce>
 801fd2c:	db02      	blt.n	801fd34 <calculate_aabb_per_shape+0x1554>
 801fd2e:	429a      	cmp	r2, r3
 801fd30:	f43e af1a 	beq.w	801eb68 <calculate_aabb_per_shape+0x388>
 801fd34:	ee38 4ae1 	vsub.f32	s8, s17, s3
 801fd38:	ee72 aa29 	vadd.f32	s21, s4, s19
 801fd3c:	f7fe bf14 	b.w	801eb68 <calculate_aabb_per_shape+0x388>
 801fd40:	ee23 0a01 	vmul.f32	s0, s6, s2
 801fd44:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fd48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd4c:	eef1 8ac0 	vsqrt.f32	s17, s0
 801fd50:	f100 83c5 	bmi.w	80204de <calculate_aabb_per_shape+0x1cfe>
 801fd54:	ee28 8a28 	vmul.f32	s16, s16, s17
 801fd58:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fd5c:	ee29 9a28 	vmul.f32	s18, s18, s17
 801fd60:	eec4 ba08 	vdiv.f32	s23, s8, s16
 801fd64:	ed9d 4a02 	vldr	s8, [sp, #8]
 801fd68:	eec4 2a09 	vdiv.f32	s5, s8, s18
 801fd6c:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fd70:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801fd74:	ee84 ba09 	vdiv.f32	s22, s8, s18
 801fd78:	eeb6 3a00 	vmov.f32	s6, #96	@ 0x3f000000  0.5
 801fd7c:	ee73 8aab 	vadd.f32	s17, s7, s23
 801fd80:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801fd84:	ee68 8a83 	vmul.f32	s17, s17, s6
 801fd88:	ee69 9a83 	vmul.f32	s19, s19, s6
 801fd8c:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801fd90:	ee32 4acb 	vsub.f32	s8, s5, s22
 801fd94:	eef0 1a4f 	vmov.f32	s3, s30
 801fd98:	f7fe be81 	b.w	801ea9e <calculate_aabb_per_shape+0x2be>
 801fd9c:	b727c5ac 	.word	0xb727c5ac
 801fda0:	40490fdb 	.word	0x40490fdb
 801fda4:	40c90fdb 	.word	0x40c90fdb
 801fda8:	eeb0 0a4a 	vmov.f32	s0, s20
 801fdac:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801fdb0:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801fdb4:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801fdb8:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801fdbc:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801fdc0:	ed8d 7a07 	vstr	s14, [sp, #28]
 801fdc4:	edcd 7a08 	vstr	s15, [sp, #32]
 801fdc8:	f011 fbbe 	bl	8031548 <tanf>
 801fdcc:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fdd0:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fdd4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 801fdd8:	f011 fa50 	bl	803127c <atanf>
 801fddc:	ed5f ba10 	vldr	s23, [pc, #-64]	@ 801fda0 <calculate_aabb_per_shape+0x15c0>
 801fde0:	eef0 aa40 	vmov.f32	s21, s0
 801fde4:	ee7b bac0 	vsub.f32	s23, s23, s0
 801fde8:	f011 fb1c 	bl	8031424 <cosf>
 801fdec:	ee20 aa08 	vmul.f32	s20, s0, s16
 801fdf0:	eeb1 0a6a 	vneg.f32	s0, s21
 801fdf4:	f011 fb62 	bl	80314bc <sinf>
 801fdf8:	eddd 7a01 	vldr	s15, [sp, #4]
 801fdfc:	ee20 ba09 	vmul.f32	s22, s0, s18
 801fe00:	ee27 aa8a 	vmul.f32	s20, s15, s20
 801fe04:	ee2c 3a0b 	vmul.f32	s6, s24, s22
 801fe08:	ee3a aa29 	vadd.f32	s20, s20, s19
 801fe0c:	eeb0 0a6b 	vmov.f32	s0, s23
 801fe10:	ee3a aa43 	vsub.f32	s20, s20, s6
 801fe14:	f011 fb06 	bl	8031424 <cosf>
 801fe18:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fe1c:	eeb0 0a6b 	vmov.f32	s0, s23
 801fe20:	f011 fb4c 	bl	80314bc <sinf>
 801fe24:	ed9d 7a02 	vldr	s14, [sp, #8]
 801fe28:	eddd 7a01 	vldr	s15, [sp, #4]
 801fe2c:	ee27 4a08 	vmul.f32	s8, s14, s16
 801fe30:	ee20 2a09 	vmul.f32	s4, s0, s18
 801fe34:	ee67 ba84 	vmul.f32	s23, s15, s8
 801fe38:	ee6c 1a02 	vmul.f32	s3, s24, s4
 801fe3c:	ee7b baa9 	vadd.f32	s23, s23, s19
 801fe40:	ee7b bae1 	vsub.f32	s23, s23, s3
 801fe44:	ed8d 0a06 	vstr	s0, [sp, #24]
 801fe48:	eeb0 0a6a 	vmov.f32	s0, s21
 801fe4c:	ed8d 4a05 	vstr	s8, [sp, #20]
 801fe50:	ed8d 2a04 	vstr	s4, [sp, #16]
 801fe54:	f011 fae6 	bl	8031424 <cosf>
 801fe58:	eeb4 aaeb 	vcmpe.f32	s20, s23
 801fe5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe60:	eef0 aa40 	vmov.f32	s21, s0
 801fe64:	ed9d 2a04 	vldr	s4, [sp, #16]
 801fe68:	ed9d 4a05 	vldr	s8, [sp, #20]
 801fe6c:	ed9d 7a07 	vldr	s14, [sp, #28]
 801fe70:	eddd 7a08 	vldr	s15, [sp, #32]
 801fe74:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 801fe78:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 801fe7c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 801fe80:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 801fe84:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 801fe88:	dc0f      	bgt.n	801feaa <calculate_aabb_per_shape+0x16ca>
 801fe8a:	eef0 1a6b 	vmov.f32	s3, s23
 801fe8e:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fe92:	eeb0 2a4b 	vmov.f32	s4, s22
 801fe96:	eef0 ba4a 	vmov.f32	s23, s20
 801fe9a:	ee20 4a08 	vmul.f32	s8, s0, s16
 801fe9e:	eddd aa02 	vldr	s21, [sp, #8]
 801fea2:	eeb0 aa61 	vmov.f32	s20, s3
 801fea6:	ee23 ba09 	vmul.f32	s22, s6, s18
 801feaa:	ee2c 3a04 	vmul.f32	s6, s24, s8
 801feae:	ed9d 4a01 	vldr	s8, [sp, #4]
 801feb2:	ee33 3a28 	vadd.f32	s6, s6, s17
 801feb6:	ee24 2a02 	vmul.f32	s4, s8, s4
 801feba:	ee33 3a02 	vadd.f32	s6, s6, s4
 801febe:	ee3b 4ae9 	vsub.f32	s8, s23, s19
 801fec2:	ee33 3a68 	vsub.f32	s6, s6, s17
 801fec6:	ee24 2a04 	vmul.f32	s4, s8, s8
 801feca:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801fece:	ee23 3a03 	vmul.f32	s6, s6, s6
 801fed2:	ee32 0a03 	vadd.f32	s0, s4, s6
 801fed6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801feda:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 801fede:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fee2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fee6:	fe73 3aa1 	vselgt.f32	s7, s7, s3
 801feea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801feee:	edcd 3a02 	vstr	s7, [sp, #8]
 801fef2:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801fef6:	f100 81a3 	bmi.w	8020240 <calculate_aabb_per_shape+0x1a60>
 801fefa:	ee84 0a02 	vdiv.f32	s0, s8, s4
 801fefe:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ff02:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ff06:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ff0a:	edcd 5a07 	vstr	s11, [sp, #28]
 801ff0e:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ff12:	ed8d 7a04 	vstr	s14, [sp, #16]
 801ff16:	edcd 7a05 	vstr	s15, [sp, #20]
 801ff1a:	f011 f943 	bl	80311a4 <acosf>
 801ff1e:	eddd 7a02 	vldr	s15, [sp, #8]
 801ff22:	ed5f 0a60 	vldr	s1, [pc, #-384]	@ 801fda4 <calculate_aabb_per_shape+0x15c4>
 801ff26:	ee20 0a27 	vmul.f32	s0, s0, s15
 801ff2a:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ff2e:	f011 f967 	bl	8031200 <fmodf>
 801ff32:	ee28 3a2a 	vmul.f32	s6, s16, s21
 801ff36:	eddd 7a01 	vldr	s15, [sp, #4]
 801ff3a:	ee2c 3a03 	vmul.f32	s6, s24, s6
 801ff3e:	ee27 ba8b 	vmul.f32	s22, s15, s22
 801ff42:	ee33 3a28 	vadd.f32	s6, s6, s17
 801ff46:	ee33 3a0b 	vadd.f32	s6, s6, s22
 801ff4a:	ee3a 4a69 	vsub.f32	s8, s20, s19
 801ff4e:	ee33 3a68 	vsub.f32	s6, s6, s17
 801ff52:	ee24 2a04 	vmul.f32	s4, s8, s8
 801ff56:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ff5a:	ee23 3a03 	vmul.f32	s6, s6, s6
 801ff5e:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ff62:	ee32 0a03 	vadd.f32	s0, s4, s6
 801ff66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff6a:	eeb7 ba00 	vmov.f32	s22, #112	@ 0x3f800000  1.0
 801ff6e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ff72:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ff76:	fe3b ba21 	vselgt.f32	s22, s22, s3
 801ff7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff7e:	eef1 aac0 	vsqrt.f32	s21, s0
 801ff82:	ed9d 7a04 	vldr	s14, [sp, #16]
 801ff86:	eddd 7a05 	vldr	s15, [sp, #20]
 801ff8a:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ff8e:	eddd 5a07 	vldr	s11, [sp, #28]
 801ff92:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ff96:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ff9a:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ff9e:	f100 8130 	bmi.w	8020202 <calculate_aabb_per_shape+0x1a22>
 801ffa2:	ee84 0a2a 	vdiv.f32	s0, s8, s21
 801ffa6:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801ffaa:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801ffae:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801ffb2:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801ffb6:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801ffba:	ed8d 7a07 	vstr	s14, [sp, #28]
 801ffbe:	edcd 7a08 	vstr	s15, [sp, #32]
 801ffc2:	f011 f8ef 	bl	80311a4 <acosf>
 801ffc6:	ed5f 0a89 	vldr	s1, [pc, #-548]	@ 801fda4 <calculate_aabb_per_shape+0x15c4>
 801ffca:	ee20 0a0b 	vmul.f32	s0, s0, s22
 801ffce:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ffd2:	f011 f915 	bl	8031200 <fmodf>
 801ffd6:	eddd 7a03 	vldr	s15, [sp, #12]
 801ffda:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ffde:	ee27 0a88 	vmul.f32	s0, s15, s16
 801ffe2:	ee89 0a00 	vdiv.f32	s0, s18, s0
 801ffe6:	f011 f949 	bl	803127c <atanf>
 801ffea:	ed1f ba93 	vldr	s22, [pc, #-588]	@ 801fda0 <calculate_aabb_per_shape+0x15c0>
 801ffee:	eef0 aa40 	vmov.f32	s21, s0
 801fff2:	ee30 ba0b 	vadd.f32	s22, s0, s22
 801fff6:	f011 fa15 	bl	8031424 <cosf>
 801fffa:	ee60 7a08 	vmul.f32	s15, s0, s16
 801fffe:	eeb0 0a6a 	vmov.f32	s0, s21
 8020002:	edcd 7a05 	vstr	s15, [sp, #20]
 8020006:	f011 fa59 	bl	80314bc <sinf>
 802000a:	eddd 7a05 	vldr	s15, [sp, #20]
 802000e:	ee20 7a09 	vmul.f32	s14, s0, s18
 8020012:	ee6c aa27 	vmul.f32	s21, s24, s15
 8020016:	eddd 6a01 	vldr	s13, [sp, #4]
 802001a:	ee7a aaa8 	vadd.f32	s21, s21, s17
 802001e:	ee26 3a87 	vmul.f32	s6, s13, s14
 8020022:	eeb0 0a4b 	vmov.f32	s0, s22
 8020026:	ee7a aa83 	vadd.f32	s21, s21, s6
 802002a:	ed8d 7a06 	vstr	s14, [sp, #24]
 802002e:	f011 f9f9 	bl	8031424 <cosf>
 8020032:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020036:	eeb0 0a4b 	vmov.f32	s0, s22
 802003a:	f011 fa3f 	bl	80314bc <sinf>
 802003e:	ed9d 4a03 	vldr	s8, [sp, #12]
 8020042:	ee24 3a08 	vmul.f32	s6, s8, s16
 8020046:	eddd 6a01 	vldr	s13, [sp, #4]
 802004a:	ee20 2a09 	vmul.f32	s4, s0, s18
 802004e:	ee2c ba03 	vmul.f32	s22, s24, s6
 8020052:	ee66 1a82 	vmul.f32	s3, s13, s4
 8020056:	ee3b ba28 	vadd.f32	s22, s22, s17
 802005a:	ee3b ba21 	vadd.f32	s22, s22, s3
 802005e:	eef4 aacb 	vcmpe.f32	s21, s22
 8020062:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020066:	ed9d 7a07 	vldr	s14, [sp, #28]
 802006a:	eddd 7a08 	vldr	s15, [sp, #32]
 802006e:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020072:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020076:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802007a:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 802007e:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020082:	dc11      	bgt.n	80200a8 <calculate_aabb_per_shape+0x18c8>
 8020084:	ee24 4a08 	vmul.f32	s8, s8, s16
 8020088:	eef0 1a4b 	vmov.f32	s3, s22
 802008c:	ed9d 3a05 	vldr	s6, [sp, #20]
 8020090:	ed8d 4a05 	vstr	s8, [sp, #20]
 8020094:	ee20 4a09 	vmul.f32	s8, s0, s18
 8020098:	ed9d 2a06 	vldr	s4, [sp, #24]
 802009c:	eeb0 ba6a 	vmov.f32	s22, s21
 80200a0:	ed8d 4a06 	vstr	s8, [sp, #24]
 80200a4:	eef0 aa61 	vmov.f32	s21, s3
 80200a8:	ed9d 4a01 	vldr	s8, [sp, #4]
 80200ac:	ee24 9a03 	vmul.f32	s18, s8, s6
 80200b0:	ee2c 2a02 	vmul.f32	s4, s24, s4
 80200b4:	ee39 9a29 	vadd.f32	s18, s18, s19
 80200b8:	ee39 9a42 	vsub.f32	s18, s18, s4
 80200bc:	ee3b 3a68 	vsub.f32	s6, s22, s17
 80200c0:	ee39 9a69 	vsub.f32	s18, s18, s19
 80200c4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 80200c8:	ee29 2a09 	vmul.f32	s4, s18, s18
 80200cc:	ee23 3a03 	vmul.f32	s6, s6, s6
 80200d0:	ee32 0a03 	vadd.f32	s0, s4, s6
 80200d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200d8:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 80200dc:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 80200e0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80200e4:	fe38 8a02 	vselgt.f32	s16, s16, s4
 80200e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200ec:	eeb1 4ac0 	vsqrt.f32	s8, s0
 80200f0:	f100 8460 	bmi.w	80209b4 <calculate_aabb_per_shape+0x21d4>
 80200f4:	ee89 0a04 	vdiv.f32	s0, s18, s8
 80200f8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80200fc:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020100:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020104:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020108:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802010c:	edcd 7a08 	vstr	s15, [sp, #32]
 8020110:	ed8d 7a07 	vstr	s14, [sp, #28]
 8020114:	f011 f846 	bl	80311a4 <acosf>
 8020118:	ed5f 0ade 	vldr	s1, [pc, #-888]	@ 801fda4 <calculate_aabb_per_shape+0x15c4>
 802011c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8020120:	ee30 0a20 	vadd.f32	s0, s0, s1
 8020124:	f011 f86c 	bl	8031200 <fmodf>
 8020128:	eddd 7a01 	vldr	s15, [sp, #4]
 802012c:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020130:	ee27 9a87 	vmul.f32	s18, s15, s14
 8020134:	eddd 7a06 	vldr	s15, [sp, #24]
 8020138:	ee39 9a29 	vadd.f32	s18, s18, s19
 802013c:	ee2c ca27 	vmul.f32	s24, s24, s15
 8020140:	ee39 9a4c 	vsub.f32	s18, s18, s24
 8020144:	ee3a 3ae8 	vsub.f32	s6, s21, s17
 8020148:	ee39 9a69 	vsub.f32	s18, s18, s19
 802014c:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8020150:	ee29 2a09 	vmul.f32	s4, s18, s18
 8020154:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020158:	ed8d 0a03 	vstr	s0, [sp, #12]
 802015c:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020164:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 8020168:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 802016c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020170:	fe38 8a02 	vselgt.f32	s16, s16, s4
 8020174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020178:	eeb1 cac0 	vsqrt.f32	s24, s0
 802017c:	ed9d 7a07 	vldr	s14, [sp, #28]
 8020180:	eddd 7a08 	vldr	s15, [sp, #32]
 8020184:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020188:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 802018c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020190:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020194:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020198:	f100 83ec 	bmi.w	8020974 <calculate_aabb_per_shape+0x2194>
 802019c:	ee89 0a0c 	vdiv.f32	s0, s18, s24
 80201a0:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 80201a4:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 80201a8:	ed8d 6a08 	vstr	s12, [sp, #32]
 80201ac:	edcd 5a07 	vstr	s11, [sp, #28]
 80201b0:	ed8d 5a06 	vstr	s10, [sp, #24]
 80201b4:	edcd 7a05 	vstr	s15, [sp, #20]
 80201b8:	ed8d 7a01 	vstr	s14, [sp, #4]
 80201bc:	f010 fff2 	bl	80311a4 <acosf>
 80201c0:	eddf 0ad8 	vldr	s1, [pc, #864]	@ 8020524 <calculate_aabb_per_shape+0x1d44>
 80201c4:	ee20 0a08 	vmul.f32	s0, s0, s16
 80201c8:	ee30 0a20 	vadd.f32	s0, s0, s1
 80201cc:	f011 f818 	bl	8031200 <fmodf>
 80201d0:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 80201d4:	eeb0 8a40 	vmov.f32	s16, s0
 80201d8:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80201dc:	ed9d 6a08 	vldr	s12, [sp, #32]
 80201e0:	eddd 5a07 	vldr	s11, [sp, #28]
 80201e4:	ed9d 5a06 	vldr	s10, [sp, #24]
 80201e8:	eddd 7a05 	vldr	s15, [sp, #20]
 80201ec:	ed9d 7a01 	vldr	s14, [sp, #4]
 80201f0:	f7fe bdec 	b.w	801edcc <calculate_aabb_per_shape+0x5ec>
 80201f4:	eeb4 3ac1 	vcmpe.f32	s6, s2
 80201f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80201fc:	f6be acb4 	bge.w	801eb68 <calculate_aabb_per_shape+0x388>
 8020200:	e598      	b.n	801fd34 <calculate_aabb_per_shape+0x1554>
 8020202:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8020206:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 802020a:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 802020e:	edcd 5a08 	vstr	s11, [sp, #32]
 8020212:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020216:	ed8d 4a06 	vstr	s8, [sp, #24]
 802021a:	f011 f811 	bl	8031240 <sqrtf>
 802021e:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 8020222:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 8020226:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 802022a:	eddd 5a08 	vldr	s11, [sp, #32]
 802022e:	ed9d 5a07 	vldr	s10, [sp, #28]
 8020232:	ed9d 4a06 	vldr	s8, [sp, #24]
 8020236:	eddd 7a05 	vldr	s15, [sp, #20]
 802023a:	ed9d 7a04 	vldr	s14, [sp, #16]
 802023e:	e6b0      	b.n	801ffa2 <calculate_aabb_per_shape+0x17c2>
 8020240:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020244:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020248:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802024c:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 8020250:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020254:	ed8d 2a07 	vstr	s4, [sp, #28]
 8020258:	ed8d 4a06 	vstr	s8, [sp, #24]
 802025c:	edcd 7a05 	vstr	s15, [sp, #20]
 8020260:	ed8d 7a04 	vstr	s14, [sp, #16]
 8020264:	f010 ffec 	bl	8031240 <sqrtf>
 8020268:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 802026c:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 8020270:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 8020274:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020278:	ed9d 5a08 	vldr	s10, [sp, #32]
 802027c:	ed9d 2a07 	vldr	s4, [sp, #28]
 8020280:	ed9d 4a06 	vldr	s8, [sp, #24]
 8020284:	eddd 7a05 	vldr	s15, [sp, #20]
 8020288:	ed9d 7a04 	vldr	s14, [sp, #16]
 802028c:	e635      	b.n	801fefa <calculate_aabb_per_shape+0x171a>
 802028e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020292:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020296:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802029a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802029e:	ed8d 5a08 	vstr	s10, [sp, #32]
 80202a2:	edcd 1a07 	vstr	s3, [sp, #28]
 80202a6:	ed8d 4a06 	vstr	s8, [sp, #24]
 80202aa:	edcd 2a05 	vstr	s5, [sp, #20]
 80202ae:	edcd 3a04 	vstr	s7, [sp, #16]
 80202b2:	edcd 7a03 	vstr	s15, [sp, #12]
 80202b6:	ed8d 7a02 	vstr	s14, [sp, #8]
 80202ba:	f010 ffc1 	bl	8031240 <sqrtf>
 80202be:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 80202c2:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 80202c6:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 80202ca:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 80202ce:	ed9d 5a08 	vldr	s10, [sp, #32]
 80202d2:	eddd 1a07 	vldr	s3, [sp, #28]
 80202d6:	ed9d 4a06 	vldr	s8, [sp, #24]
 80202da:	eddd 2a05 	vldr	s5, [sp, #20]
 80202de:	eddd 3a04 	vldr	s7, [sp, #16]
 80202e2:	eddd 7a03 	vldr	s15, [sp, #12]
 80202e6:	ed9d 7a02 	vldr	s14, [sp, #8]
 80202ea:	f7fe bbd8 	b.w	801ea9e <calculate_aabb_per_shape+0x2be>
 80202ee:	2b03      	cmp	r3, #3
 80202f0:	eeb0 7a67 	vmov.f32	s14, s15
 80202f4:	f000 80d7 	beq.w	80204a6 <calculate_aabb_per_shape+0x1cc6>
 80202f8:	2b0a      	cmp	r3, #10
 80202fa:	f040 8115 	bne.w	8020528 <calculate_aabb_per_shape+0x1d48>
 80202fe:	ed94 2a04 	vldr	s4, [r4, #16]
 8020302:	ed94 3a05 	vldr	s6, [r4, #20]
 8020306:	eeb4 2a68 	vcmp.f32	s4, s17
 802030a:	ed94 7a06 	vldr	s14, [r4, #24]
 802030e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020312:	eeb4 3a49 	vcmp.f32	s6, s18
 8020316:	edd4 1a07 	vldr	s3, [r4, #28]
 802031a:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802031e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020322:	eeb4 7a68 	vcmp.f32	s14, s17
 8020326:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802032a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802032e:	eef4 1a49 	vcmp.f32	s3, s18
 8020332:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020336:	bf48      	it	mi
 8020338:	eeb0 7a68 	vmovmi.f32	s14, s17
 802033c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020340:	ee17 3a90 	vmov	r3, s15
 8020344:	bf48      	it	mi
 8020346:	eef0 1a49 	vmovmi.f32	s3, s18
 802034a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802034e:	105b      	asrs	r3, r3, #1
 8020350:	2b00      	cmp	r3, #0
 8020352:	ed84 2a04 	vstr	s4, [r4, #16]
 8020356:	ed84 3a05 	vstr	s6, [r4, #20]
 802035a:	ed84 7a06 	vstr	s14, [r4, #24]
 802035e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020362:	f340 80ba 	ble.w	80204da <calculate_aabb_per_shape+0x1cfa>
 8020366:	005b      	lsls	r3, r3, #1
 8020368:	eb03 0c07 	add.w	ip, r3, r7
 802036c:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 8020370:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020374:	f1b8 0f00 	cmp.w	r8, #0
 8020378:	d167      	bne.n	802044a <calculate_aabb_per_shape+0x1c6a>
 802037a:	edd1 8a00 	vldr	s17, [r1]
 802037e:	ed91 9a01 	vldr	s18, [r1, #4]
 8020382:	eeb4 2a68 	vcmp.f32	s4, s17
 8020386:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802038a:	eeb4 3a49 	vcmp.f32	s6, s18
 802038e:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020396:	eeb4 7a68 	vcmp.f32	s14, s17
 802039a:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802039e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203a2:	eeb4 9ae1 	vcmpe.f32	s18, s3
 80203a6:	bf48      	it	mi
 80203a8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80203ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203b0:	ed84 2a04 	vstr	s4, [r4, #16]
 80203b4:	ed84 3a05 	vstr	s6, [r4, #20]
 80203b8:	ed84 7a06 	vstr	s14, [r4, #24]
 80203bc:	f101 0108 	add.w	r1, r1, #8
 80203c0:	dc7a      	bgt.n	80204b8 <calculate_aabb_per_shape+0x1cd8>
 80203c2:	4561      	cmp	r1, ip
 80203c4:	edc4 1a07 	vstr	s3, [r4, #28]
 80203c8:	d1d7      	bne.n	802037a <calculate_aabb_per_shape+0x1b9a>
 80203ca:	441f      	add	r7, r3
 80203cc:	ee78 7ace 	vsub.f32	s15, s17, s28
 80203d0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80203d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203d8:	d106      	bne.n	80203e8 <calculate_aabb_per_shape+0x1c08>
 80203da:	ee79 7a6c 	vsub.f32	s15, s18, s25
 80203de:	eef5 7a40 	vcmp.f32	s15, #0.0
 80203e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203e6:	d073      	beq.n	80204d0 <calculate_aabb_per_shape+0x1cf0>
 80203e8:	eeb4 ea42 	vcmp.f32	s28, s4
 80203ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203f0:	eef4 ca43 	vcmp.f32	s25, s6
 80203f4:	bf48      	it	mi
 80203f6:	eeb0 2a4e 	vmovmi.f32	s4, s28
 80203fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203fe:	eeb4 ea47 	vcmp.f32	s28, s14
 8020402:	bf48      	it	mi
 8020404:	eeb0 3a6c 	vmovmi.f32	s6, s25
 8020408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802040c:	eef4 ca61 	vcmp.f32	s25, s3
 8020410:	fe3e 7a07 	vselgt.f32	s14, s28, s14
 8020414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020418:	fe7c 1aa1 	vselgt.f32	s3, s25, s3
 802041c:	ed84 7a06 	vstr	s14, [r4, #24]
 8020420:	ed84 2a04 	vstr	s4, [r4, #16]
 8020424:	ed84 3a05 	vstr	s6, [r4, #20]
 8020428:	edc4 1a07 	vstr	s3, [r4, #28]
 802042c:	eef0 7a6c 	vmov.f32	s15, s25
 8020430:	eeb0 7a4e 	vmov.f32	s14, s28
 8020434:	7812      	ldrb	r2, [r2, #0]
 8020436:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 802043a:	f7fe ba60 	b.w	801e8fe <calculate_aabb_per_shape+0x11e>
 802043e:	4561      	cmp	r1, ip
 8020440:	ed84 9a07 	vstr	s18, [r4, #28]
 8020444:	eef0 1a49 	vmov.f32	s3, s18
 8020448:	d0bf      	beq.n	80203ca <calculate_aabb_per_shape+0x1bea>
 802044a:	edd1 7a00 	vldr	s15, [r1]
 802044e:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8020452:	edd1 7a01 	vldr	s15, [r1, #4]
 8020456:	eef4 8a42 	vcmp.f32	s17, s4
 802045a:	ee39 9a27 	vadd.f32	s18, s18, s15
 802045e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020462:	eeb4 9a43 	vcmp.f32	s18, s6
 8020466:	bf48      	it	mi
 8020468:	eeb0 2a68 	vmovmi.f32	s4, s17
 802046c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020470:	eef4 8a47 	vcmp.f32	s17, s14
 8020474:	bf48      	it	mi
 8020476:	eeb0 3a49 	vmovmi.f32	s6, s18
 802047a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802047e:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020482:	fe38 7a87 	vselgt.f32	s14, s17, s14
 8020486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802048a:	ed84 2a04 	vstr	s4, [r4, #16]
 802048e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020492:	ed84 7a06 	vstr	s14, [r4, #24]
 8020496:	f101 0108 	add.w	r1, r1, #8
 802049a:	dcd0      	bgt.n	802043e <calculate_aabb_per_shape+0x1c5e>
 802049c:	4561      	cmp	r1, ip
 802049e:	edc4 1a07 	vstr	s3, [r4, #28]
 80204a2:	d1d2      	bne.n	802044a <calculate_aabb_per_shape+0x1c6a>
 80204a4:	e791      	b.n	80203ca <calculate_aabb_per_shape+0x1bea>
 80204a6:	f1b8 0f00 	cmp.w	r8, #0
 80204aa:	d00d      	beq.n	80204c8 <calculate_aabb_per_shape+0x1ce8>
 80204ac:	ee37 7aa8 	vadd.f32	s14, s15, s17
 80204b0:	eef0 7a49 	vmov.f32	s15, s18
 80204b4:	f7fe ba22 	b.w	801e8fc <calculate_aabb_per_shape+0x11c>
 80204b8:	4561      	cmp	r1, ip
 80204ba:	ed84 9a07 	vstr	s18, [r4, #28]
 80204be:	eef0 1a49 	vmov.f32	s3, s18
 80204c2:	f47f af5a 	bne.w	802037a <calculate_aabb_per_shape+0x1b9a>
 80204c6:	e780      	b.n	80203ca <calculate_aabb_per_shape+0x1bea>
 80204c8:	eef0 7a49 	vmov.f32	s15, s18
 80204cc:	f7fe ba16 	b.w	801e8fc <calculate_aabb_per_shape+0x11c>
 80204d0:	eef0 7a49 	vmov.f32	s15, s18
 80204d4:	eeb0 7a68 	vmov.f32	s14, s17
 80204d8:	e7ac      	b.n	8020434 <calculate_aabb_per_shape+0x1c54>
 80204da:	4665      	mov	r5, ip
 80204dc:	e776      	b.n	80203cc <calculate_aabb_per_shape+0x1bec>
 80204de:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 80204e2:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 80204e6:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 80204ea:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 80204ee:	ed8d 5a08 	vstr	s10, [sp, #32]
 80204f2:	edcd 1a07 	vstr	s3, [sp, #28]
 80204f6:	edcd 7a06 	vstr	s15, [sp, #24]
 80204fa:	ed8d 7a05 	vstr	s14, [sp, #20]
 80204fe:	f010 fe9f 	bl	8031240 <sqrtf>
 8020502:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 8020506:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 802050a:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 802050e:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020512:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020516:	eddd 1a07 	vldr	s3, [sp, #28]
 802051a:	eddd 7a06 	vldr	s15, [sp, #24]
 802051e:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020522:	e417      	b.n	801fd54 <calculate_aabb_per_shape+0x1574>
 8020524:	40c90fdb 	.word	0x40c90fdb
 8020528:	2b0b      	cmp	r3, #11
 802052a:	f47f aa0d 	bne.w	801f948 <calculate_aabb_per_shape+0x1168>
 802052e:	ed94 7a04 	vldr	s14, [r4, #16]
 8020532:	ed94 3a05 	vldr	s6, [r4, #20]
 8020536:	eeb4 7a68 	vcmp.f32	s14, s17
 802053a:	ed94 2a06 	vldr	s4, [r4, #24]
 802053e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020542:	eeb4 3a49 	vcmp.f32	s6, s18
 8020546:	edd4 1a07 	vldr	s3, [r4, #28]
 802054a:	fe38 7a87 	vselgt.f32	s14, s17, s14
 802054e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020552:	eeb4 2a68 	vcmp.f32	s4, s17
 8020556:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802055a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802055e:	eef4 1a49 	vcmp.f32	s3, s18
 8020562:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020566:	bf48      	it	mi
 8020568:	eeb0 2a68 	vmovmi.f32	s4, s17
 802056c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020570:	ee17 3a90 	vmov	r3, s15
 8020574:	bf48      	it	mi
 8020576:	eef0 1a49 	vmovmi.f32	s3, s18
 802057a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802057e:	105b      	asrs	r3, r3, #1
 8020580:	2b00      	cmp	r3, #0
 8020582:	ed84 7a04 	vstr	s14, [r4, #16]
 8020586:	ed84 3a05 	vstr	s6, [r4, #20]
 802058a:	ed84 2a06 	vstr	s4, [r4, #24]
 802058e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020592:	dd77      	ble.n	8020684 <calculate_aabb_per_shape+0x1ea4>
 8020594:	005b      	lsls	r3, r3, #1
 8020596:	eb03 0c07 	add.w	ip, r3, r7
 802059a:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 802059e:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 80205a2:	f1b8 0f00 	cmp.w	r8, #0
 80205a6:	d138      	bne.n	802061a <calculate_aabb_per_shape+0x1e3a>
 80205a8:	edd1 8a00 	vldr	s17, [r1]
 80205ac:	ed91 9a01 	vldr	s18, [r1, #4]
 80205b0:	eef4 8a47 	vcmp.f32	s17, s14
 80205b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205b8:	eeb4 9a43 	vcmp.f32	s18, s6
 80205bc:	bf48      	it	mi
 80205be:	eeb0 7a68 	vmovmi.f32	s14, s17
 80205c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205c6:	eef4 8a42 	vcmp.f32	s17, s4
 80205ca:	bf48      	it	mi
 80205cc:	eeb0 3a49 	vmovmi.f32	s6, s18
 80205d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205d4:	eeb4 9ae1 	vcmpe.f32	s18, s3
 80205d8:	fe38 2a82 	vselgt.f32	s4, s17, s4
 80205dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205e0:	ed84 7a04 	vstr	s14, [r4, #16]
 80205e4:	ed84 3a05 	vstr	s6, [r4, #20]
 80205e8:	ed84 2a06 	vstr	s4, [r4, #24]
 80205ec:	f101 0108 	add.w	r1, r1, #8
 80205f0:	dc41      	bgt.n	8020676 <calculate_aabb_per_shape+0x1e96>
 80205f2:	458c      	cmp	ip, r1
 80205f4:	edc4 1a07 	vstr	s3, [r4, #28]
 80205f8:	d1d6      	bne.n	80205a8 <calculate_aabb_per_shape+0x1dc8>
 80205fa:	7812      	ldrb	r2, [r2, #0]
 80205fc:	441f      	add	r7, r3
 80205fe:	eef0 7a49 	vmov.f32	s15, s18
 8020602:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 8020606:	eeb0 7a68 	vmov.f32	s14, s17
 802060a:	f7fe b978 	b.w	801e8fe <calculate_aabb_per_shape+0x11e>
 802060e:	4561      	cmp	r1, ip
 8020610:	ed84 9a07 	vstr	s18, [r4, #28]
 8020614:	d0f1      	beq.n	80205fa <calculate_aabb_per_shape+0x1e1a>
 8020616:	eef0 1a49 	vmov.f32	s3, s18
 802061a:	edd1 7a00 	vldr	s15, [r1]
 802061e:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8020622:	edd1 7a01 	vldr	s15, [r1, #4]
 8020626:	eef4 8a47 	vcmp.f32	s17, s14
 802062a:	ee39 9a27 	vadd.f32	s18, s18, s15
 802062e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020632:	eeb4 9a43 	vcmp.f32	s18, s6
 8020636:	bf48      	it	mi
 8020638:	eeb0 7a68 	vmovmi.f32	s14, s17
 802063c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020640:	eef4 8a42 	vcmp.f32	s17, s4
 8020644:	bf48      	it	mi
 8020646:	eeb0 3a49 	vmovmi.f32	s6, s18
 802064a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802064e:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020652:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020656:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802065a:	ed84 7a04 	vstr	s14, [r4, #16]
 802065e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020662:	ed84 2a06 	vstr	s4, [r4, #24]
 8020666:	f101 0108 	add.w	r1, r1, #8
 802066a:	dcd0      	bgt.n	802060e <calculate_aabb_per_shape+0x1e2e>
 802066c:	4561      	cmp	r1, ip
 802066e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020672:	d1d2      	bne.n	802061a <calculate_aabb_per_shape+0x1e3a>
 8020674:	e7c1      	b.n	80205fa <calculate_aabb_per_shape+0x1e1a>
 8020676:	4561      	cmp	r1, ip
 8020678:	ed84 9a07 	vstr	s18, [r4, #28]
 802067c:	d0bd      	beq.n	80205fa <calculate_aabb_per_shape+0x1e1a>
 802067e:	eef0 1a49 	vmov.f32	s3, s18
 8020682:	e791      	b.n	80205a8 <calculate_aabb_per_shape+0x1dc8>
 8020684:	7812      	ldrb	r2, [r2, #0]
 8020686:	4665      	mov	r5, ip
 8020688:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 802068c:	eef0 7a49 	vmov.f32	s15, s18
 8020690:	eeb0 7a68 	vmov.f32	s14, s17
 8020694:	f7fe b933 	b.w	801e8fe <calculate_aabb_per_shape+0x11e>
 8020698:	f010 fdd2 	bl	8031240 <sqrtf>
 802069c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 80206a0:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80206a4:	ed9d 6a08 	vldr	s12, [sp, #32]
 80206a8:	eddd 5a07 	vldr	s11, [sp, #28]
 80206ac:	ed9d 5a06 	vldr	s10, [sp, #24]
 80206b0:	eddd 7a05 	vldr	s15, [sp, #20]
 80206b4:	ed9d 7a01 	vldr	s14, [sp, #4]
 80206b8:	f7fe bbea 	b.w	801ee90 <calculate_aabb_per_shape+0x6b0>
 80206bc:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80206c0:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 80206c4:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 80206c8:	edcd 5a08 	vstr	s11, [sp, #32]
 80206cc:	ed8d 5a07 	vstr	s10, [sp, #28]
 80206d0:	ed8d 2a06 	vstr	s4, [sp, #24]
 80206d4:	edcd 7a05 	vstr	s15, [sp, #20]
 80206d8:	ed8d 7a01 	vstr	s14, [sp, #4]
 80206dc:	f010 fdb0 	bl	8031240 <sqrtf>
 80206e0:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 80206e4:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 80206e8:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 80206ec:	eddd 5a08 	vldr	s11, [sp, #32]
 80206f0:	ed9d 5a07 	vldr	s10, [sp, #28]
 80206f4:	ed9d 2a06 	vldr	s4, [sp, #24]
 80206f8:	eddd 7a05 	vldr	s15, [sp, #20]
 80206fc:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020700:	f7fe bb80 	b.w	801ee04 <calculate_aabb_per_shape+0x624>
 8020704:	eeb0 0a42 	vmov.f32	s0, s4
 8020708:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 802070c:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020710:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020714:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020718:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802071c:	edcd 1a08 	vstr	s3, [sp, #32]
 8020720:	ed8d 3a07 	vstr	s6, [sp, #28]
 8020724:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020728:	ed8d 2a01 	vstr	s4, [sp, #4]
 802072c:	edcd 7a06 	vstr	s15, [sp, #24]
 8020730:	ed8d 4a03 	vstr	s8, [sp, #12]
 8020734:	f010 fd84 	bl	8031240 <sqrtf>
 8020738:	ed9d 4a03 	vldr	s8, [sp, #12]
 802073c:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 8020740:	eeb0 0a48 	vmov.f32	s0, s16
 8020744:	f010 fd2e 	bl	80311a4 <acosf>
 8020748:	eef0 7a4c 	vmov.f32	s15, s24
 802074c:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020750:	eef0 0a4c 	vmov.f32	s1, s24
 8020754:	eeb0 0a67 	vmov.f32	s0, s15
 8020758:	f010 fd52 	bl	8031200 <fmodf>
 802075c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8020760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020764:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020768:	ee78 aa89 	vadd.f32	s21, s17, s18
 802076c:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020770:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020774:	eddd 7a06 	vldr	s15, [sp, #24]
 8020778:	ed9d 3a07 	vldr	s6, [sp, #28]
 802077c:	eddd 1a08 	vldr	s3, [sp, #32]
 8020780:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020784:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020788:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802078c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020790:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020794:	dd49      	ble.n	802082a <calculate_aabb_per_shape+0x204a>
 8020796:	eeb0 9a43 	vmov.f32	s18, s6
 802079a:	eeb0 0a42 	vmov.f32	s0, s4
 802079e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 80207a2:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 80207a6:	ed8d 6a08 	vstr	s12, [sp, #32]
 80207aa:	edcd 5a07 	vstr	s11, [sp, #28]
 80207ae:	ed8d 5a06 	vstr	s10, [sp, #24]
 80207b2:	edcd 7a05 	vstr	s15, [sp, #20]
 80207b6:	ed8d 7a01 	vstr	s14, [sp, #4]
 80207ba:	f010 fd41 	bl	8031240 <sqrtf>
 80207be:	ed9d 7a01 	vldr	s14, [sp, #4]
 80207c2:	eddd 7a05 	vldr	s15, [sp, #20]
 80207c6:	ed9d 5a06 	vldr	s10, [sp, #24]
 80207ca:	eddd 5a07 	vldr	s11, [sp, #28]
 80207ce:	ed9d 6a08 	vldr	s12, [sp, #32]
 80207d2:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80207d6:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 80207da:	f7ff ba48 	b.w	801fc6e <calculate_aabb_per_shape+0x148e>
 80207de:	eeb0 0a4a 	vmov.f32	s0, s20
 80207e2:	f010 fd2d 	bl	8031240 <sqrtf>
 80207e6:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 80207ea:	f010 fcdb 	bl	80311a4 <acosf>
 80207ee:	ed5f 0ab3 	vldr	s1, [pc, #-716]	@ 8020524 <calculate_aabb_per_shape+0x1d44>
 80207f2:	ee30 0ac0 	vsub.f32	s0, s1, s0
 80207f6:	f010 fd03 	bl	8031200 <fmodf>
 80207fa:	ed8d 0a02 	vstr	s0, [sp, #8]
 80207fe:	eeb0 0a4a 	vmov.f32	s0, s20
 8020802:	f010 fd1d 	bl	8031240 <sqrtf>
 8020806:	ee39 aa88 	vadd.f32	s20, s19, s16
 802080a:	eddd 6a08 	vldr	s13, [sp, #32]
 802080e:	eddd 4a07 	vldr	s9, [sp, #28]
 8020812:	ed9d 6a06 	vldr	s12, [sp, #24]
 8020816:	eddd 5a05 	vldr	s11, [sp, #20]
 802081a:	ed9d 5a04 	vldr	s10, [sp, #16]
 802081e:	eddd 7a03 	vldr	s15, [sp, #12]
 8020822:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020826:	f7ff b9a1 	b.w	801fb6c <calculate_aabb_per_shape+0x138c>
 802082a:	eeb5 2a40 	vcmp.f32	s4, #0.0
 802082e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020832:	eeb0 9a61 	vmov.f32	s18, s3
 8020836:	d4b0      	bmi.n	802079a <calculate_aabb_per_shape+0x1fba>
 8020838:	f7ff ba19 	b.w	801fc6e <calculate_aabb_per_shape+0x148e>
 802083c:	eeb0 0a42 	vmov.f32	s0, s4
 8020840:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020844:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020848:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 802084c:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020850:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020854:	edcd 1a08 	vstr	s3, [sp, #32]
 8020858:	ed8d 3a07 	vstr	s6, [sp, #28]
 802085c:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020860:	ed8d 2a01 	vstr	s4, [sp, #4]
 8020864:	edcd 7a06 	vstr	s15, [sp, #24]
 8020868:	ed8d 4a03 	vstr	s8, [sp, #12]
 802086c:	f010 fce8 	bl	8031240 <sqrtf>
 8020870:	ed9d 4a03 	vldr	s8, [sp, #12]
 8020874:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 8020878:	eeb0 0a49 	vmov.f32	s0, s18
 802087c:	f010 fc92 	bl	80311a4 <acosf>
 8020880:	eef0 7a4c 	vmov.f32	s15, s24
 8020884:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020888:	eef0 0a4c 	vmov.f32	s1, s24
 802088c:	eeb0 0a67 	vmov.f32	s0, s15
 8020890:	f010 fcb6 	bl	8031200 <fmodf>
 8020894:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8020898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802089c:	ed8d 0a03 	vstr	s0, [sp, #12]
 80208a0:	ee78 aa88 	vadd.f32	s21, s17, s16
 80208a4:	ed9d 2a01 	vldr	s4, [sp, #4]
 80208a8:	ed9d 7a05 	vldr	s14, [sp, #20]
 80208ac:	eddd 7a06 	vldr	s15, [sp, #24]
 80208b0:	ed9d 3a07 	vldr	s6, [sp, #28]
 80208b4:	eddd 1a08 	vldr	s3, [sp, #32]
 80208b8:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80208bc:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80208c0:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80208c4:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 80208c8:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 80208cc:	dd49      	ble.n	8020962 <calculate_aabb_per_shape+0x2182>
 80208ce:	eeb0 8a43 	vmov.f32	s16, s6
 80208d2:	eeb0 0a42 	vmov.f32	s0, s4
 80208d6:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 80208da:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 80208de:	ed8d 6a08 	vstr	s12, [sp, #32]
 80208e2:	edcd 5a07 	vstr	s11, [sp, #28]
 80208e6:	ed8d 5a06 	vstr	s10, [sp, #24]
 80208ea:	edcd 7a05 	vstr	s15, [sp, #20]
 80208ee:	ed8d 7a01 	vstr	s14, [sp, #4]
 80208f2:	f010 fca5 	bl	8031240 <sqrtf>
 80208f6:	ed9d 7a01 	vldr	s14, [sp, #4]
 80208fa:	eddd 7a05 	vldr	s15, [sp, #20]
 80208fe:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020902:	eddd 5a07 	vldr	s11, [sp, #28]
 8020906:	ed9d 6a08 	vldr	s12, [sp, #32]
 802090a:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802090e:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020912:	f7fe ba31 	b.w	801ed78 <calculate_aabb_per_shape+0x598>
 8020916:	eeb0 0a4a 	vmov.f32	s0, s20
 802091a:	f010 fc91 	bl	8031240 <sqrtf>
 802091e:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 8020922:	f010 fc3f 	bl	80311a4 <acosf>
 8020926:	eddf 0a35 	vldr	s1, [pc, #212]	@ 80209fc <calculate_aabb_per_shape+0x221c>
 802092a:	ee30 0ac0 	vsub.f32	s0, s1, s0
 802092e:	f010 fc67 	bl	8031200 <fmodf>
 8020932:	ed8d 0a02 	vstr	s0, [sp, #8]
 8020936:	eeb0 0a4a 	vmov.f32	s0, s20
 802093a:	f010 fc81 	bl	8031240 <sqrtf>
 802093e:	ee39 aa89 	vadd.f32	s20, s19, s18
 8020942:	eddd 6a08 	vldr	s13, [sp, #32]
 8020946:	eddd 4a07 	vldr	s9, [sp, #28]
 802094a:	ed9d 6a06 	vldr	s12, [sp, #24]
 802094e:	eddd 5a05 	vldr	s11, [sp, #20]
 8020952:	ed9d 5a04 	vldr	s10, [sp, #16]
 8020956:	eddd 7a03 	vldr	s15, [sp, #12]
 802095a:	ed9d 7a01 	vldr	s14, [sp, #4]
 802095e:	f7fe b98a 	b.w	801ec76 <calculate_aabb_per_shape+0x496>
 8020962:	eeb5 2a40 	vcmp.f32	s4, #0.0
 8020966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802096a:	eeb0 8a61 	vmov.f32	s16, s3
 802096e:	f57e aa03 	bpl.w	801ed78 <calculate_aabb_per_shape+0x598>
 8020972:	e7ae      	b.n	80208d2 <calculate_aabb_per_shape+0x20f2>
 8020974:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020978:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 802097c:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020980:	edcd 5a07 	vstr	s11, [sp, #28]
 8020984:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020988:	edcd 7a05 	vstr	s15, [sp, #20]
 802098c:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020990:	f010 fc56 	bl	8031240 <sqrtf>
 8020994:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020998:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802099c:	ed9d 6a08 	vldr	s12, [sp, #32]
 80209a0:	eddd 5a07 	vldr	s11, [sp, #28]
 80209a4:	ed9d 5a06 	vldr	s10, [sp, #24]
 80209a8:	eddd 7a05 	vldr	s15, [sp, #20]
 80209ac:	ed9d 7a01 	vldr	s14, [sp, #4]
 80209b0:	f7ff bbf4 	b.w	802019c <calculate_aabb_per_shape+0x19bc>
 80209b4:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80209b8:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80209bc:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80209c0:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 80209c4:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 80209c8:	ed8d 4a08 	vstr	s8, [sp, #32]
 80209cc:	edcd 7a07 	vstr	s15, [sp, #28]
 80209d0:	ed8d 7a03 	vstr	s14, [sp, #12]
 80209d4:	f010 fc34 	bl	8031240 <sqrtf>
 80209d8:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 80209dc:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 80209e0:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80209e4:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80209e8:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80209ec:	ed9d 4a08 	vldr	s8, [sp, #32]
 80209f0:	eddd 7a07 	vldr	s15, [sp, #28]
 80209f4:	ed9d 7a03 	vldr	s14, [sp, #12]
 80209f8:	f7ff bb7c 	b.w	80200f4 <calculate_aabb_per_shape+0x1914>
 80209fc:	40c90fdb 	.word	0x40c90fdb

08020a00 <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 8020a00:	f7ea bb86 	b.w	800b110 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08020a04 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 8020a04:	2200      	movs	r2, #0
 8020a06:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 8020a0a:	f7ea ba85 	b.w	800af18 <_ZN8touchgfx3HAL10beginFrameEv>
 8020a0e:	bf00      	nop

08020a10 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 8020a10:	b538      	push	{r3, r4, r5, lr}
 8020a12:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 8020a16:	4604      	mov	r4, r0
 8020a18:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 8020a1c:	b12b      	cbz	r3, 8020a2a <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 8020a1e:	2300      	movs	r3, #0
 8020a20:	4628      	mov	r0, r5
 8020a22:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 8020a26:	f7fd fa43 	bl	801deb0 <nema_cl_submit>
 8020a2a:	4628      	mov	r0, r5
 8020a2c:	f7fd faba 	bl	801dfa4 <nema_cl_wait>
 8020a30:	4620      	mov	r0, r4
 8020a32:	f7eb f827 	bl	800ba84 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 8020a36:	2300      	movs	r3, #0
 8020a38:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020a3c:	bd38      	pop	{r3, r4, r5, pc}
 8020a3e:	bf00      	nop

08020a40 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>:
 8020a40:	b508      	push	{r3, lr}
 8020a42:	4a03      	ldr	r2, [pc, #12]	@ (8020a50 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x10>)
 8020a44:	4b03      	ldr	r3, [pc, #12]	@ (8020a54 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x14>)
 8020a46:	2118      	movs	r1, #24
 8020a48:	4803      	ldr	r0, [pc, #12]	@ (8020a58 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x18>)
 8020a4a:	f011 fd5d 	bl	8032508 <__assert_func>
 8020a4e:	bf00      	nop
 8020a50:	08035f7c 	.word	0x08035f7c
 8020a54:	08035e28 	.word	0x08035e28
 8020a58:	08035e80 	.word	0x08035e80

08020a5c <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 8020a5c:	b538      	push	{r3, r4, r5, lr}
 8020a5e:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020a62:	4604      	mov	r4, r0
 8020a64:	b97b      	cbnz	r3, 8020a86 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 8020a66:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 8020a6a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 8020a6e:	b113      	cbz	r3, 8020a76 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 8020a70:	4628      	mov	r0, r5
 8020a72:	f7fd fa1d 	bl	801deb0 <nema_cl_submit>
 8020a76:	4628      	mov	r0, r5
 8020a78:	f7fd fa94 	bl	801dfa4 <nema_cl_wait>
 8020a7c:	4620      	mov	r0, r4
 8020a7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020a82:	f7ea ba55 	b.w	800af30 <_ZN8touchgfx3HAL8endFrameEv>
 8020a86:	6840      	ldr	r0, [r0, #4]
 8020a88:	4906      	ldr	r1, [pc, #24]	@ (8020aa4 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 8020a8a:	6803      	ldr	r3, [r0, #0]
 8020a8c:	689a      	ldr	r2, [r3, #8]
 8020a8e:	428a      	cmp	r2, r1
 8020a90:	d105      	bne.n	8020a9e <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 8020a92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020a94:	4798      	blx	r3
 8020a96:	2300      	movs	r3, #0
 8020a98:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020a9c:	e7e3      	b.n	8020a66 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 8020a9e:	4790      	blx	r2
 8020aa0:	e7f9      	b.n	8020a96 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 8020aa2:	bf00      	nop
 8020aa4:	0800204d 	.word	0x0800204d

08020aa8 <_ZN8touchgfx8HALGPU2D10initializeEv>:
 8020aa8:	b570      	push	{r4, r5, r6, lr}
 8020aaa:	4606      	mov	r6, r0
 8020aac:	b08a      	sub	sp, #40	@ 0x28
 8020aae:	466c      	mov	r4, sp
 8020ab0:	f7ea fa4b 	bl	800af4a <_ZN8touchgfx3HAL10initializeEv>
 8020ab4:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020ab8:	4668      	mov	r0, sp
 8020aba:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8020abe:	f7fc ff59 	bl	801d974 <nema_cl_create_sized>
 8020ac2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020ac4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020ac6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020ac8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020aca:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020ace:	e885 0003 	stmia.w	r5, {r0, r1}
 8020ad2:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020ad6:	b10b      	cbz	r3, 8020adc <_ZN8touchgfx8HALGPU2D10initializeEv+0x34>
 8020ad8:	b00a      	add	sp, #40	@ 0x28
 8020ada:	bd70      	pop	{r4, r5, r6, pc}
 8020adc:	f7ff ffb0 	bl	8020a40 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020ae0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 8020ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020ae2:	f04f 0c01 	mov.w	ip, #1
 8020ae6:	2500      	movs	r5, #0
 8020ae8:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 8020aec:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8020af0:	60c3      	str	r3, [r0, #12]
 8020af2:	42b7      	cmp	r7, r6
 8020af4:	bf2c      	ite	cs
 8020af6:	f04f 0e00 	movcs.w	lr, #0
 8020afa:	f04f 0e01 	movcc.w	lr, #1
 8020afe:	4b23      	ldr	r3, [pc, #140]	@ (8020b8c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 8020b00:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8020b04:	6683      	str	r3, [r0, #104]	@ 0x68
 8020b06:	4b22      	ldr	r3, [pc, #136]	@ (8020b90 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 8020b08:	6105      	str	r5, [r0, #16]
 8020b0a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8020b0e:	61c5      	str	r5, [r0, #28]
 8020b10:	6205      	str	r5, [r0, #32]
 8020b12:	8485      	strh	r5, [r0, #36]	@ 0x24
 8020b14:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 8020b18:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 8020b1c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8020b1e:	8605      	strh	r5, [r0, #48]	@ 0x30
 8020b20:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 8020b24:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 8020b28:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 8020b2c:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 8020b30:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 8020b34:	64c5      	str	r5, [r0, #76]	@ 0x4c
 8020b36:	6505      	str	r5, [r0, #80]	@ 0x50
 8020b38:	6545      	str	r5, [r0, #84]	@ 0x54
 8020b3a:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 8020b3e:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 8020b42:	6645      	str	r5, [r0, #100]	@ 0x64
 8020b44:	66c5      	str	r5, [r0, #108]	@ 0x6c
 8020b46:	4a13      	ldr	r2, [pc, #76]	@ (8020b94 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 8020b48:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 8020b4c:	6018      	str	r0, [r3, #0]
 8020b4e:	4b12      	ldr	r3, [pc, #72]	@ (8020b98 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 8020b50:	8017      	strh	r7, [r2, #0]
 8020b52:	801f      	strh	r7, [r3, #0]
 8020b54:	4a11      	ldr	r2, [pc, #68]	@ (8020b9c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 8020b56:	4b12      	ldr	r3, [pc, #72]	@ (8020ba0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 8020b58:	8016      	strh	r6, [r2, #0]
 8020b5a:	801e      	strh	r6, [r3, #0]
 8020b5c:	4911      	ldr	r1, [pc, #68]	@ (8020ba4 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 8020b5e:	4a12      	ldr	r2, [pc, #72]	@ (8020ba8 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 8020b60:	4b12      	ldr	r3, [pc, #72]	@ (8020bac <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 8020b62:	700d      	strb	r5, [r1, #0]
 8020b64:	6002      	str	r2, [r0, #0]
 8020b66:	6018      	str	r0, [r3, #0]
 8020b68:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 8020b6c:	6745      	str	r5, [r0, #116]	@ 0x74
 8020b6e:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 8020b72:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 8020b76:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 8020b7a:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 8020b7e:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 8020b82:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 8020b86:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 8020b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b8c:	01000001 	.word	0x01000001
 8020b90:	20082f08 	.word	0x20082f08
 8020b94:	20082efc 	.word	0x20082efc
 8020b98:	20082f02 	.word	0x20082f02
 8020b9c:	20082efe 	.word	0x20082efe
 8020ba0:	20082f04 	.word	0x20082f04
 8020ba4:	20082f00 	.word	0x20082f00
 8020ba8:	08035eac 	.word	0x08035eac
 8020bac:	200833a8 	.word	0x200833a8

08020bb0 <_ZN8touchgfx8HALGPU2D10initializeEi>:
 8020bb0:	b570      	push	{r4, r5, r6, lr}
 8020bb2:	460c      	mov	r4, r1
 8020bb4:	b08a      	sub	sp, #40	@ 0x28
 8020bb6:	4606      	mov	r6, r0
 8020bb8:	f7ea f9c7 	bl	800af4a <_ZN8touchgfx3HAL10initializeEv>
 8020bbc:	4621      	mov	r1, r4
 8020bbe:	466c      	mov	r4, sp
 8020bc0:	4668      	mov	r0, sp
 8020bc2:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020bc6:	f7fc fed5 	bl	801d974 <nema_cl_create_sized>
 8020bca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020bcc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020bce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020bd0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020bd2:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020bd6:	e885 0003 	stmia.w	r5, {r0, r1}
 8020bda:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020bde:	b10b      	cbz	r3, 8020be4 <_ZN8touchgfx8HALGPU2D10initializeEi+0x34>
 8020be0:	b00a      	add	sp, #40	@ 0x28
 8020be2:	bd70      	pop	{r4, r5, r6, pc}
 8020be4:	f7ff ff2c 	bl	8020a40 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 8020be8:	b510      	push	{r4, lr}
 8020bea:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020bee:	4604      	mov	r4, r0
 8020bf0:	b94b      	cbnz	r3, 8020c06 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 8020bf2:	4620      	mov	r0, r4
 8020bf4:	2101      	movs	r1, #1
 8020bf6:	f7ea ff33 	bl	800ba60 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8020bfa:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 8020bfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020c02:	f7fc bfcb 	b.w	801db9c <nema_cl_bind_circular>
 8020c06:	6840      	ldr	r0, [r0, #4]
 8020c08:	4906      	ldr	r1, [pc, #24]	@ (8020c24 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 8020c0a:	6803      	ldr	r3, [r0, #0]
 8020c0c:	689a      	ldr	r2, [r3, #8]
 8020c0e:	428a      	cmp	r2, r1
 8020c10:	d105      	bne.n	8020c1e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 8020c12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020c14:	4798      	blx	r3
 8020c16:	2300      	movs	r3, #0
 8020c18:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020c1c:	e7e9      	b.n	8020bf2 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 8020c1e:	4790      	blx	r2
 8020c20:	e7f9      	b.n	8020c16 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 8020c22:	bf00      	nop
 8020c24:	0800204d 	.word	0x0800204d

08020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 8020c28:	4603      	mov	r3, r0
 8020c2a:	2200      	movs	r2, #0
 8020c2c:	307c      	adds	r0, #124	@ 0x7c
 8020c2e:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8020c32:	f7fd b93d 	b.w	801deb0 <nema_cl_submit>
 8020c36:	bf00      	nop

08020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8020c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c3c:	b091      	sub	sp, #68	@ 0x44
 8020c3e:	4604      	mov	r4, r0
 8020c40:	461d      	mov	r5, r3
 8020c42:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 8020c46:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 8020c4a:	930d      	str	r3, [sp, #52]	@ 0x34
 8020c4c:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 8020c50:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8020c54:	307c      	adds	r0, #124	@ 0x7c
 8020c56:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8020c5a:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 8020c5e:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 8020c62:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 8020c66:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 8020c6a:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 8020c6e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020c70:	920c      	str	r2, [sp, #48]	@ 0x30
 8020c72:	f7fd f997 	bl	801dfa4 <nema_cl_wait>
 8020c76:	f04f 0e01 	mov.w	lr, #1
 8020c7a:	2000      	movs	r0, #0
 8020c7c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020c7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020c80:	9208      	str	r2, [sp, #32]
 8020c82:	f8d4 c000 	ldr.w	ip, [r4]
 8020c86:	9307      	str	r3, [sp, #28]
 8020c88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020c8a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8020c8e:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 8020c92:	e9cd b305 	strd	fp, r3, [sp, #20]
 8020c96:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8020c9a:	9600      	str	r6, [sp, #0]
 8020c9c:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 8020ca0:	9009      	str	r0, [sp, #36]	@ 0x24
 8020ca2:	462b      	mov	r3, r5
 8020ca4:	4620      	mov	r0, r4
 8020ca6:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 8020caa:	47a0      	blx	r4
 8020cac:	b011      	add	sp, #68	@ 0x44
 8020cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cb2:	bf00      	nop

08020cb4 <_ZN8touchgfx8LCDGPU2DD1Ev>:
 8020cb4:	4770      	bx	lr
 8020cb6:	bf00      	nop

08020cb8 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 8020cb8:	7b03      	ldrb	r3, [r0, #12]
 8020cba:	2b02      	cmp	r3, #2
 8020cbc:	d004      	beq.n	8020cc8 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 8020cbe:	2b01      	cmp	r3, #1
 8020cc0:	bf0c      	ite	eq
 8020cc2:	2018      	moveq	r0, #24
 8020cc4:	2010      	movne	r0, #16
 8020cc6:	4770      	bx	lr
 8020cc8:	2020      	movs	r0, #32
 8020cca:	4770      	bx	lr

08020ccc <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 8020ccc:	7b00      	ldrb	r0, [r0, #12]
 8020cce:	4770      	bx	lr

08020cd0 <_ZN8touchgfx8LCDGPU2D4initEv>:
 8020cd0:	4770      	bx	lr
 8020cd2:	bf00      	nop

08020cd4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cd8:	b087      	sub	sp, #28
 8020cda:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8020cde:	9102      	str	r1, [sp, #8]
 8020ce0:	ea6f 0c05 	mvn.w	ip, r5
 8020ce4:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020ce8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020cea:	9203      	str	r2, [sp, #12]
 8020cec:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 8020cf0:	6860      	ldr	r0, [r4, #4]
 8020cf2:	fa5f fc8c 	uxtb.w	ip, ip
 8020cf6:	fb00 2e01 	mla	lr, r0, r1, r2
 8020cfa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020cfc:	6820      	ldr	r0, [r4, #0]
 8020cfe:	e9d2 2400 	ldrd	r2, r4, [r2]
 8020d02:	3404      	adds	r4, #4
 8020d04:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8020d08:	fa1f fb85 	uxth.w	fp, r5
 8020d0c:	9405      	str	r4, [sp, #20]
 8020d0e:	9200      	str	r2, [sp, #0]
 8020d10:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020d14:	9c02      	ldr	r4, [sp, #8]
 8020d16:	2c00      	cmp	r4, #0
 8020d18:	dc03      	bgt.n	8020d22 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020d1a:	9c03      	ldr	r4, [sp, #12]
 8020d1c:	2c00      	cmp	r4, #0
 8020d1e:	f340 80c2 	ble.w	8020ea6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020d22:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020d24:	2b00      	cmp	r3, #0
 8020d26:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 8020d2a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020d2e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020d32:	fa0f f48e 	sxth.w	r4, lr
 8020d36:	fa0f f88a 	sxth.w	r8, sl
 8020d3a:	f340 80b7 	ble.w	8020eac <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020d3e:	1415      	asrs	r5, r2, #16
 8020d40:	d406      	bmi.n	8020d50 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020d42:	42a5      	cmp	r5, r4
 8020d44:	da04      	bge.n	8020d50 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020d46:	ea5f 4921 	movs.w	r9, r1, asr #16
 8020d4a:	d401      	bmi.n	8020d50 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020d4c:	45c1      	cmp	r9, r8
 8020d4e:	db3e      	blt.n	8020dce <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8020d50:	3b01      	subs	r3, #1
 8020d52:	4432      	add	r2, r6
 8020d54:	4439      	add	r1, r7
 8020d56:	f100 0002 	add.w	r0, r0, #2
 8020d5a:	d1f0      	bne.n	8020d3e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020d5c:	9b02      	ldr	r3, [sp, #8]
 8020d5e:	2b00      	cmp	r3, #0
 8020d60:	f340 80a1 	ble.w	8020ea6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020d64:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020d68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d78:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020d7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d80:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020d84:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020d88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d8c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d90:	ee16 2a90 	vmov	r2, s13
 8020d94:	3b01      	subs	r3, #1
 8020d96:	9302      	str	r3, [sp, #8]
 8020d98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020d9a:	9c03      	ldr	r4, [sp, #12]
 8020d9c:	fb92 f6f3 	sdiv	r6, r2, r3
 8020da0:	ee17 2a10 	vmov	r2, s14
 8020da4:	eeb0 7a43 	vmov.f32	s14, s6
 8020da8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020dac:	ee17 1a10 	vmov	r1, s14
 8020db0:	eeb0 7a62 	vmov.f32	s14, s5
 8020db4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020db8:	fb92 f7f3 	sdiv	r7, r2, r3
 8020dbc:	eeb0 3a67 	vmov.f32	s6, s15
 8020dc0:	ee17 2a10 	vmov	r2, s14
 8020dc4:	eef0 2a46 	vmov.f32	s5, s12
 8020dc8:	bf08      	it	eq
 8020dca:	4623      	moveq	r3, r4
 8020dcc:	e7a2      	b.n	8020d14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020dce:	9501      	str	r5, [sp, #4]
 8020dd0:	1e5d      	subs	r5, r3, #1
 8020dd2:	fb05 2906 	mla	r9, r5, r6, r2
 8020dd6:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020dda:	9504      	str	r5, [sp, #16]
 8020ddc:	d570      	bpl.n	8020ec0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8020dde:	4680      	mov	r8, r0
 8020de0:	9d01      	ldr	r5, [sp, #4]
 8020de2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020de6:	4654      	mov	r4, sl
 8020de8:	4673      	mov	r3, lr
 8020dea:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020dee:	e002      	b.n	8020df6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8020df0:	1415      	asrs	r5, r2, #16
 8020df2:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 8020df6:	2d00      	cmp	r5, #0
 8020df8:	4432      	add	r2, r6
 8020dfa:	db4b      	blt.n	8020e94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020dfc:	429d      	cmp	r5, r3
 8020dfe:	da49      	bge.n	8020e94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020e00:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020e04:	d446      	bmi.n	8020e94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020e06:	45a6      	cmp	lr, r4
 8020e08:	da44      	bge.n	8020e94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020e0a:	9c00      	ldr	r4, [sp, #0]
 8020e0c:	b21b      	sxth	r3, r3
 8020e0e:	fb0e 4303 	mla	r3, lr, r3, r4
 8020e12:	5d5b      	ldrb	r3, [r3, r5]
 8020e14:	9d05      	ldr	r5, [sp, #20]
 8020e16:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020e1a:	441d      	add	r5, r3
 8020e1c:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020e20:	786d      	ldrb	r5, [r5, #1]
 8020e22:	f8b8 4000 	ldrh.w	r4, [r8]
 8020e26:	fb15 f50b 	smulbb	r5, r5, fp
 8020e2a:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020e2e:	fa5f fe8e 	uxtb.w	lr, lr
 8020e32:	9501      	str	r5, [sp, #4]
 8020e34:	fb1e fe0c 	smulbb	lr, lr, ip
 8020e38:	9d05      	ldr	r5, [sp, #20]
 8020e3a:	fb1a fa0b 	smulbb	sl, sl, fp
 8020e3e:	5ced      	ldrb	r5, [r5, r3]
 8020e40:	1223      	asrs	r3, r4, #8
 8020e42:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020e46:	fb05 ee0b 	mla	lr, r5, fp, lr
 8020e4a:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020e4e:	9d01      	ldr	r5, [sp, #4]
 8020e50:	10e4      	asrs	r4, r4, #3
 8020e52:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020e56:	fb04 540c 	mla	r4, r4, ip, r5
 8020e5a:	fa1f fe8e 	uxth.w	lr, lr
 8020e5e:	fa1f fa8a 	uxth.w	sl, sl
 8020e62:	f10e 0301 	add.w	r3, lr, #1
 8020e66:	f10a 0501 	add.w	r5, sl, #1
 8020e6a:	9301      	str	r3, [sp, #4]
 8020e6c:	b2a4      	uxth	r4, r4
 8020e6e:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 8020e72:	9d01      	ldr	r5, [sp, #4]
 8020e74:	1c63      	adds	r3, r4, #1
 8020e76:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020e7a:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8020e7e:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 8020e82:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020e86:	0964      	lsrs	r4, r4, #5
 8020e88:	432b      	orrs	r3, r5
 8020e8a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020e8e:	4323      	orrs	r3, r4
 8020e90:	f8a8 3000 	strh.w	r3, [r8]
 8020e94:	f108 0802 	add.w	r8, r8, #2
 8020e98:	4580      	cmp	r8, r0
 8020e9a:	4439      	add	r1, r7
 8020e9c:	d1a8      	bne.n	8020df0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020e9e:	9b02      	ldr	r3, [sp, #8]
 8020ea0:	2b00      	cmp	r3, #0
 8020ea2:	f73f af5f 	bgt.w	8020d64 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020ea6:	b007      	add	sp, #28
 8020ea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020eac:	f43f af56 	beq.w	8020d5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020eb0:	1e5d      	subs	r5, r3, #1
 8020eb2:	fb05 2906 	mla	r9, r5, r6, r2
 8020eb6:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020eba:	9504      	str	r5, [sp, #16]
 8020ebc:	f53f af4e 	bmi.w	8020d5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020ec0:	454c      	cmp	r4, r9
 8020ec2:	dd5b      	ble.n	8020f7c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ec4:	9d04      	ldr	r5, [sp, #16]
 8020ec6:	fb05 1507 	mla	r5, r5, r7, r1
 8020eca:	142d      	asrs	r5, r5, #16
 8020ecc:	d456      	bmi.n	8020f7c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ece:	4545      	cmp	r5, r8
 8020ed0:	da54      	bge.n	8020f7c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ed2:	2b00      	cmp	r3, #0
 8020ed4:	f77f af42 	ble.w	8020d5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020ed8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020edc:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8020ee0:	9301      	str	r3, [sp, #4]
 8020ee2:	e002      	b.n	8020eea <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ee4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020ee6:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8020eea:	9d00      	ldr	r5, [sp, #0]
 8020eec:	140b      	asrs	r3, r1, #16
 8020eee:	fb04 5303 	mla	r3, r4, r3, r5
 8020ef2:	1414      	asrs	r4, r2, #16
 8020ef4:	5d1b      	ldrb	r3, [r3, r4]
 8020ef6:	8804      	ldrh	r4, [r0, #0]
 8020ef8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020efc:	eb08 0503 	add.w	r5, r8, r3
 8020f00:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020f04:	f895 9001 	ldrb.w	r9, [r5, #1]
 8020f08:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020f0c:	fa5f fe8e 	uxtb.w	lr, lr
 8020f10:	fb1e fe0c 	smulbb	lr, lr, ip
 8020f14:	fb19 f90b 	smulbb	r9, r9, fp
 8020f18:	fb1a fa0b 	smulbb	sl, sl, fp
 8020f1c:	f818 5003 	ldrb.w	r5, [r8, r3]
 8020f20:	1223      	asrs	r3, r4, #8
 8020f22:	10e4      	asrs	r4, r4, #3
 8020f24:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020f28:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020f2c:	fb05 e50b 	mla	r5, r5, fp, lr
 8020f30:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020f34:	fb04 940c 	mla	r4, r4, ip, r9
 8020f38:	b2ad      	uxth	r5, r5
 8020f3a:	fa1f fa8a 	uxth.w	sl, sl
 8020f3e:	b2a4      	uxth	r4, r4
 8020f40:	f10a 0301 	add.w	r3, sl, #1
 8020f44:	f105 0e01 	add.w	lr, r5, #1
 8020f48:	f104 0901 	add.w	r9, r4, #1
 8020f4c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8020f50:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8020f54:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 8020f58:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020f5c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020f60:	0964      	lsrs	r4, r4, #5
 8020f62:	ea43 030e 	orr.w	r3, r3, lr
 8020f66:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020f6a:	4323      	orrs	r3, r4
 8020f6c:	f820 3b02 	strh.w	r3, [r0], #2
 8020f70:	9b01      	ldr	r3, [sp, #4]
 8020f72:	4439      	add	r1, r7
 8020f74:	4298      	cmp	r0, r3
 8020f76:	4432      	add	r2, r6
 8020f78:	d1b4      	bne.n	8020ee4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8020f7a:	e6ef      	b.n	8020d5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f7c:	2b00      	cmp	r3, #0
 8020f7e:	f77f aeed 	ble.w	8020d5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f82:	1414      	asrs	r4, r2, #16
 8020f84:	4680      	mov	r8, r0
 8020f86:	9401      	str	r4, [sp, #4]
 8020f88:	4625      	mov	r5, r4
 8020f8a:	e72a      	b.n	8020de2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

08020f8c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f90:	4689      	mov	r9, r1
 8020f92:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8020f96:	46ca      	mov	sl, r9
 8020f98:	b087      	sub	sp, #28
 8020f9a:	9203      	str	r2, [sp, #12]
 8020f9c:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8020fa0:	6854      	ldr	r4, [r2, #4]
 8020fa2:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 8020fa6:	fb04 1000 	mla	r0, r4, r0, r1
 8020faa:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020fae:	6815      	ldr	r5, [r2, #0]
 8020fb0:	e9dc 2400 	ldrd	r2, r4, [ip]
 8020fb4:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8020fb8:	f104 0b04 	add.w	fp, r4, #4
 8020fbc:	9205      	str	r2, [sp, #20]
 8020fbe:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020fc2:	f1ba 0f00 	cmp.w	sl, #0
 8020fc6:	dc03      	bgt.n	8020fd0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8020fc8:	9c03      	ldr	r4, [sp, #12]
 8020fca:	2c00      	cmp	r4, #0
 8020fcc:	f340 8095 	ble.w	80210fa <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8020fd0:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8020fd4:	2b00      	cmp	r3, #0
 8020fd6:	fa0f f588 	sxth.w	r5, r8
 8020fda:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020fde:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020fe2:	fa0f f48e 	sxth.w	r4, lr
 8020fe6:	9502      	str	r5, [sp, #8]
 8020fe8:	f340 808a 	ble.w	8021100 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8020fec:	46f1      	mov	r9, lr
 8020fee:	9401      	str	r4, [sp, #4]
 8020ff0:	1415      	asrs	r5, r2, #16
 8020ff2:	d408      	bmi.n	8021006 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020ff4:	9c01      	ldr	r4, [sp, #4]
 8020ff6:	42a5      	cmp	r5, r4
 8020ff8:	da05      	bge.n	8021006 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020ffa:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020ffe:	d402      	bmi.n	8021006 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021000:	9c02      	ldr	r4, [sp, #8]
 8021002:	45a6      	cmp	lr, r4
 8021004:	db3b      	blt.n	802107e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 8021006:	3b01      	subs	r3, #1
 8021008:	4432      	add	r2, r6
 802100a:	4439      	add	r1, r7
 802100c:	f100 0002 	add.w	r0, r0, #2
 8021010:	d1ee      	bne.n	8020ff0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8021012:	f1ba 0f00 	cmp.w	sl, #0
 8021016:	dd70      	ble.n	80210fa <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8021018:	ee30 0a04 	vadd.f32	s0, s0, s8
 802101c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021020:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021024:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021028:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802102c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021030:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021034:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021038:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802103c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021040:	ee16 2a90 	vmov	r2, s13
 8021044:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021046:	9c03      	ldr	r4, [sp, #12]
 8021048:	fb92 f6f3 	sdiv	r6, r2, r3
 802104c:	ee17 2a10 	vmov	r2, s14
 8021050:	eeb0 7a43 	vmov.f32	s14, s6
 8021054:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021058:	ee17 1a10 	vmov	r1, s14
 802105c:	eeb0 7a62 	vmov.f32	s14, s5
 8021060:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021064:	f1ba 0a01 	subs.w	sl, sl, #1
 8021068:	fb92 f7f3 	sdiv	r7, r2, r3
 802106c:	eeb0 3a67 	vmov.f32	s6, s15
 8021070:	ee17 2a10 	vmov	r2, s14
 8021074:	eef0 2a46 	vmov.f32	s5, s12
 8021078:	bf08      	it	eq
 802107a:	4623      	moveq	r3, r4
 802107c:	e7a1      	b.n	8020fc2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 802107e:	9c01      	ldr	r4, [sp, #4]
 8021080:	9501      	str	r5, [sp, #4]
 8021082:	1e5d      	subs	r5, r3, #1
 8021084:	46ce      	mov	lr, r9
 8021086:	fb05 2906 	mla	r9, r5, r6, r2
 802108a:	ea5f 4929 	movs.w	r9, r9, asr #16
 802108e:	9504      	str	r5, [sp, #16]
 8021090:	d53e      	bpl.n	8021110 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021092:	4604      	mov	r4, r0
 8021094:	9d01      	ldr	r5, [sp, #4]
 8021096:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802109a:	4673      	mov	r3, lr
 802109c:	46b6      	mov	lr, r6
 802109e:	4646      	mov	r6, r8
 80210a0:	e002      	b.n	80210a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80210a2:	1415      	asrs	r5, r2, #16
 80210a4:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 80210a8:	2d00      	cmp	r5, #0
 80210aa:	4472      	add	r2, lr
 80210ac:	db1e      	blt.n	80210ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210ae:	429d      	cmp	r5, r3
 80210b0:	da1c      	bge.n	80210ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210b2:	ea5f 4821 	movs.w	r8, r1, asr #16
 80210b6:	d419      	bmi.n	80210ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210b8:	45b0      	cmp	r8, r6
 80210ba:	da17      	bge.n	80210ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210bc:	9e05      	ldr	r6, [sp, #20]
 80210be:	b21b      	sxth	r3, r3
 80210c0:	fb08 6303 	mla	r3, r8, r3, r6
 80210c4:	5d5e      	ldrb	r6, [r3, r5]
 80210c6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80210ca:	eb0b 0306 	add.w	r3, fp, r6
 80210ce:	785d      	ldrb	r5, [r3, #1]
 80210d0:	789b      	ldrb	r3, [r3, #2]
 80210d2:	00ed      	lsls	r5, r5, #3
 80210d4:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 80210d8:	4d2d      	ldr	r5, [pc, #180]	@ (8021190 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 80210da:	f81b 6006 	ldrb.w	r6, [fp, r6]
 80210de:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 80210e2:	ea43 0308 	orr.w	r3, r3, r8
 80210e6:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 80210ea:	8023      	strh	r3, [r4, #0]
 80210ec:	3402      	adds	r4, #2
 80210ee:	4284      	cmp	r4, r0
 80210f0:	4439      	add	r1, r7
 80210f2:	d1d6      	bne.n	80210a2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80210f4:	f1ba 0f00 	cmp.w	sl, #0
 80210f8:	dc8e      	bgt.n	8021018 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80210fa:	b007      	add	sp, #28
 80210fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021100:	d087      	beq.n	8021012 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021102:	1e5d      	subs	r5, r3, #1
 8021104:	fb05 2906 	mla	r9, r5, r6, r2
 8021108:	ea5f 4929 	movs.w	r9, r9, asr #16
 802110c:	9504      	str	r5, [sp, #16]
 802110e:	d480      	bmi.n	8021012 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021110:	454c      	cmp	r4, r9
 8021112:	dd35      	ble.n	8021180 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021114:	9d04      	ldr	r5, [sp, #16]
 8021116:	fb05 1507 	mla	r5, r5, r7, r1
 802111a:	ea5f 4925 	movs.w	r9, r5, asr #16
 802111e:	d42f      	bmi.n	8021180 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021120:	9d02      	ldr	r5, [sp, #8]
 8021122:	45a9      	cmp	r9, r5
 8021124:	da2c      	bge.n	8021180 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021126:	2b00      	cmp	r3, #0
 8021128:	f77f af73 	ble.w	8021012 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802112c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021130:	9d05      	ldr	r5, [sp, #20]
 8021132:	4699      	mov	r9, r3
 8021134:	46a6      	mov	lr, r4
 8021136:	e001      	b.n	802113c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 8021138:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 802113c:	140c      	asrs	r4, r1, #16
 802113e:	fb0e 5404 	mla	r4, lr, r4, r5
 8021142:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8021146:	f814 e00e 	ldrb.w	lr, [r4, lr]
 802114a:	4b11      	ldr	r3, [pc, #68]	@ (8021190 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 802114c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8021150:	eb0b 040e 	add.w	r4, fp, lr
 8021154:	f894 8001 	ldrb.w	r8, [r4, #1]
 8021158:	78a4      	ldrb	r4, [r4, #2]
 802115a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 802115e:	f81b e00e 	ldrb.w	lr, [fp, lr]
 8021162:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021166:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 802116a:	ea44 0408 	orr.w	r4, r4, r8
 802116e:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 8021172:	f820 4b02 	strh.w	r4, [r0], #2
 8021176:	4548      	cmp	r0, r9
 8021178:	4439      	add	r1, r7
 802117a:	4432      	add	r2, r6
 802117c:	d1dc      	bne.n	8021138 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802117e:	e748      	b.n	8021012 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021180:	2b00      	cmp	r3, #0
 8021182:	f77f af46 	ble.w	8021012 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021186:	1415      	asrs	r5, r2, #16
 8021188:	4604      	mov	r4, r0
 802118a:	9501      	str	r5, [sp, #4]
 802118c:	e783      	b.n	8021096 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 802118e:	bf00      	nop
 8021190:	fffff800 	.word	0xfffff800

08021194 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021194:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802119c:	b087      	sub	sp, #28
 802119e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 80211a2:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 80211a6:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 80211aa:	6854      	ldr	r4, [r2, #4]
 80211ac:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 80211b0:	fb04 1100 	mla	r1, r4, r0, r1
 80211b4:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 80211b8:	6810      	ldr	r0, [r2, #0]
 80211ba:	e9db 2400 	ldrd	r2, r4, [fp]
 80211be:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 80211c2:	1d21      	adds	r1, r4, #4
 80211c4:	9505      	str	r5, [sp, #20]
 80211c6:	9102      	str	r1, [sp, #8]
 80211c8:	9201      	str	r2, [sp, #4]
 80211ca:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 80211ce:	9903      	ldr	r1, [sp, #12]
 80211d0:	2900      	cmp	r1, #0
 80211d2:	dc03      	bgt.n	80211dc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80211d4:	9904      	ldr	r1, [sp, #16]
 80211d6:	2900      	cmp	r1, #0
 80211d8:	f340 80b6 	ble.w	8021348 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80211dc:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 80211e0:	2b00      	cmp	r3, #0
 80211e2:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 80211e6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80211ea:	b221      	sxth	r1, r4
 80211ec:	b235      	sxth	r5, r6
 80211ee:	f340 80ae 	ble.w	802134e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80211f2:	1438      	asrs	r0, r7, #16
 80211f4:	d406      	bmi.n	8021204 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211f6:	4288      	cmp	r0, r1
 80211f8:	da04      	bge.n	8021204 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80211fe:	d401      	bmi.n	8021204 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021200:	45ac      	cmp	ip, r5
 8021202:	db3c      	blt.n	802127e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8021204:	3b01      	subs	r3, #1
 8021206:	444f      	add	r7, r9
 8021208:	4452      	add	r2, sl
 802120a:	f10e 0e02 	add.w	lr, lr, #2
 802120e:	d1f0      	bne.n	80211f2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8021210:	9b03      	ldr	r3, [sp, #12]
 8021212:	2b00      	cmp	r3, #0
 8021214:	f340 8098 	ble.w	8021348 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021218:	ee30 0a04 	vadd.f32	s0, s0, s8
 802121c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021220:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021224:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021228:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802122c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021230:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021234:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021238:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802123c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021240:	ee16 2a90 	vmov	r2, s13
 8021244:	3b01      	subs	r3, #1
 8021246:	9303      	str	r3, [sp, #12]
 8021248:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802124a:	9904      	ldr	r1, [sp, #16]
 802124c:	fb92 f9f3 	sdiv	r9, r2, r3
 8021250:	ee17 2a10 	vmov	r2, s14
 8021254:	eeb0 7a43 	vmov.f32	s14, s6
 8021258:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802125c:	fb92 faf3 	sdiv	sl, r2, r3
 8021260:	ee17 2a10 	vmov	r2, s14
 8021264:	eeb0 7a62 	vmov.f32	s14, s5
 8021268:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802126c:	eeb0 3a67 	vmov.f32	s6, s15
 8021270:	ee17 7a10 	vmov	r7, s14
 8021274:	eef0 2a46 	vmov.f32	s5, s12
 8021278:	bf08      	it	eq
 802127a:	460b      	moveq	r3, r1
 802127c:	e7a7      	b.n	80211ce <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802127e:	f103 38ff 	add.w	r8, r3, #4294967295
 8021282:	fb08 7c09 	mla	ip, r8, r9, r7
 8021286:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802128a:	d56a      	bpl.n	8021362 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 802128c:	4675      	mov	r5, lr
 802128e:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021292:	e002      	b.n	802129a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021294:	1438      	asrs	r0, r7, #16
 8021296:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 802129a:	2800      	cmp	r0, #0
 802129c:	444f      	add	r7, r9
 802129e:	db4b      	blt.n	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80212a0:	42a0      	cmp	r0, r4
 80212a2:	da49      	bge.n	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80212a4:	1413      	asrs	r3, r2, #16
 80212a6:	d447      	bmi.n	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80212a8:	42b3      	cmp	r3, r6
 80212aa:	b224      	sxth	r4, r4
 80212ac:	da44      	bge.n	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80212ae:	9901      	ldr	r1, [sp, #4]
 80212b0:	fb03 1404 	mla	r4, r3, r4, r1
 80212b4:	9902      	ldr	r1, [sp, #8]
 80212b6:	5c23      	ldrb	r3, [r4, r0]
 80212b8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80212bc:	0e0b      	lsrs	r3, r1, #24
 80212be:	d03b      	beq.n	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80212c0:	9805      	ldr	r0, [sp, #20]
 80212c2:	f3c1 4807 	ubfx	r8, r1, #16, #8
 80212c6:	fb00 f003 	mul.w	r0, r0, r3
 80212ca:	1c43      	adds	r3, r0, #1
 80212cc:	eb03 2320 	add.w	r3, r3, r0, asr #8
 80212d0:	121b      	asrs	r3, r3, #8
 80212d2:	43d8      	mvns	r0, r3
 80212d4:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 80212d8:	b29b      	uxth	r3, r3
 80212da:	b2c9      	uxtb	r1, r1
 80212dc:	882e      	ldrh	r6, [r5, #0]
 80212de:	fb1c fc03 	smulbb	ip, ip, r3
 80212e2:	fb18 f803 	smulbb	r8, r8, r3
 80212e6:	fb11 f303 	smulbb	r3, r1, r3
 80212ea:	10f4      	asrs	r4, r6, #3
 80212ec:	1231      	asrs	r1, r6, #8
 80212ee:	00f6      	lsls	r6, r6, #3
 80212f0:	b2c0      	uxtb	r0, r0
 80212f2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80212f6:	b2f6      	uxtb	r6, r6
 80212f8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80212fc:	fb01 8800 	mla	r8, r1, r0, r8
 8021300:	fb04 c400 	mla	r4, r4, r0, ip
 8021304:	fb06 3100 	mla	r1, r6, r0, r3
 8021308:	fa1f fc88 	uxth.w	ip, r8
 802130c:	b289      	uxth	r1, r1
 802130e:	b2a4      	uxth	r4, r4
 8021310:	1c4e      	adds	r6, r1, #1
 8021312:	1c60      	adds	r0, r4, #1
 8021314:	f10c 0301 	add.w	r3, ip, #1
 8021318:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 802131c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021320:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 8021324:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021328:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 802132c:	0949      	lsrs	r1, r1, #5
 802132e:	4303      	orrs	r3, r0
 8021330:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021334:	430b      	orrs	r3, r1
 8021336:	802b      	strh	r3, [r5, #0]
 8021338:	3502      	adds	r5, #2
 802133a:	4575      	cmp	r5, lr
 802133c:	4452      	add	r2, sl
 802133e:	d1a9      	bne.n	8021294 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8021340:	9b03      	ldr	r3, [sp, #12]
 8021342:	2b00      	cmp	r3, #0
 8021344:	f73f af68 	bgt.w	8021218 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021348:	b007      	add	sp, #28
 802134a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802134e:	f43f af5f 	beq.w	8021210 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021352:	f103 38ff 	add.w	r8, r3, #4294967295
 8021356:	fb08 7c09 	mla	ip, r8, r9, r7
 802135a:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802135e:	f53f af57 	bmi.w	8021210 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021362:	4561      	cmp	r1, ip
 8021364:	dd5c      	ble.n	8021420 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021366:	fb08 280a 	mla	r8, r8, sl, r2
 802136a:	ea5f 4828 	movs.w	r8, r8, asr #16
 802136e:	d457      	bmi.n	8021420 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021370:	45a8      	cmp	r8, r5
 8021372:	da55      	bge.n	8021420 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021374:	2b00      	cmp	r3, #0
 8021376:	f77f af4b 	ble.w	8021210 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802137a:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 802137e:	e001      	b.n	8021384 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021380:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 8021384:	9801      	ldr	r0, [sp, #4]
 8021386:	1413      	asrs	r3, r2, #16
 8021388:	fb01 0303 	mla	r3, r1, r3, r0
 802138c:	1439      	asrs	r1, r7, #16
 802138e:	5c5b      	ldrb	r3, [r3, r1]
 8021390:	9902      	ldr	r1, [sp, #8]
 8021392:	444f      	add	r7, r9
 8021394:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8021398:	4452      	add	r2, sl
 802139a:	0e18      	lsrs	r0, r3, #24
 802139c:	d03b      	beq.n	8021416 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802139e:	9905      	ldr	r1, [sp, #20]
 80213a0:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 80213a4:	fb01 f100 	mul.w	r1, r1, r0
 80213a8:	1c48      	adds	r0, r1, #1
 80213aa:	eb00 2021 	add.w	r0, r0, r1, asr #8
 80213ae:	1200      	asrs	r0, r0, #8
 80213b0:	43c1      	mvns	r1, r0
 80213b2:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80213b6:	b280      	uxth	r0, r0
 80213b8:	b2db      	uxtb	r3, r3
 80213ba:	f8be 5000 	ldrh.w	r5, [lr]
 80213be:	fb16 f600 	smulbb	r6, r6, r0
 80213c2:	fb1c fc00 	smulbb	ip, ip, r0
 80213c6:	fb13 f300 	smulbb	r3, r3, r0
 80213ca:	122c      	asrs	r4, r5, #8
 80213cc:	10e8      	asrs	r0, r5, #3
 80213ce:	00ed      	lsls	r5, r5, #3
 80213d0:	b2c9      	uxtb	r1, r1
 80213d2:	b2ed      	uxtb	r5, r5
 80213d4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80213d8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80213dc:	fb00 6001 	mla	r0, r0, r1, r6
 80213e0:	fb05 3301 	mla	r3, r5, r1, r3
 80213e4:	fb04 c401 	mla	r4, r4, r1, ip
 80213e8:	b280      	uxth	r0, r0
 80213ea:	b2a4      	uxth	r4, r4
 80213ec:	b29b      	uxth	r3, r3
 80213ee:	1c65      	adds	r5, r4, #1
 80213f0:	1c5e      	adds	r6, r3, #1
 80213f2:	1c41      	adds	r1, r0, #1
 80213f4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80213f8:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80213fc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021400:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021404:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021408:	0949      	lsrs	r1, r1, #5
 802140a:	431c      	orrs	r4, r3
 802140c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021410:	430c      	orrs	r4, r1
 8021412:	f8ae 4000 	strh.w	r4, [lr]
 8021416:	f10e 0e02 	add.w	lr, lr, #2
 802141a:	45c6      	cmp	lr, r8
 802141c:	d1b0      	bne.n	8021380 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802141e:	e6f7      	b.n	8021210 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021420:	2b00      	cmp	r3, #0
 8021422:	f77f aef5 	ble.w	8021210 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021426:	4675      	mov	r5, lr
 8021428:	1438      	asrs	r0, r7, #16
 802142a:	e730      	b.n	802128e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

0802142c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802142c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021434:	b085      	sub	sp, #20
 8021436:	e9cd 1202 	strd	r1, r2, [sp, #8]
 802143a:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 802143e:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 8021442:	6854      	ldr	r4, [r2, #4]
 8021444:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 8021448:	fb04 1000 	mla	r0, r4, r0, r1
 802144c:	6814      	ldr	r4, [r2, #0]
 802144e:	e9db 2500 	ldrd	r2, r5, [fp]
 8021452:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 8021456:	1d28      	adds	r0, r5, #4
 8021458:	9001      	str	r0, [sp, #4]
 802145a:	9200      	str	r2, [sp, #0]
 802145c:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 8021460:	9802      	ldr	r0, [sp, #8]
 8021462:	2800      	cmp	r0, #0
 8021464:	dc03      	bgt.n	802146e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021466:	9803      	ldr	r0, [sp, #12]
 8021468:	2800      	cmp	r0, #0
 802146a:	f340 80b8 	ble.w	80215de <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802146e:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 8021472:	2b00      	cmp	r3, #0
 8021474:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021478:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802147c:	b228      	sxth	r0, r5
 802147e:	b237      	sxth	r7, r6
 8021480:	f340 80b0 	ble.w	80215e4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021484:	140c      	asrs	r4, r1, #16
 8021486:	d406      	bmi.n	8021496 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021488:	4284      	cmp	r4, r0
 802148a:	da04      	bge.n	8021496 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802148c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8021490:	d401      	bmi.n	8021496 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021492:	45bc      	cmp	ip, r7
 8021494:	db3c      	blt.n	8021510 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 8021496:	3b01      	subs	r3, #1
 8021498:	4449      	add	r1, r9
 802149a:	4452      	add	r2, sl
 802149c:	f10e 0e02 	add.w	lr, lr, #2
 80214a0:	d1f0      	bne.n	8021484 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80214a2:	9b02      	ldr	r3, [sp, #8]
 80214a4:	2b00      	cmp	r3, #0
 80214a6:	f340 809a 	ble.w	80215de <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 80214aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80214ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80214b2:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80214b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80214ba:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80214be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80214c2:	ee76 6a62 	vsub.f32	s13, s12, s5
 80214c6:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80214ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214ce:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214d2:	ee16 2a90 	vmov	r2, s13
 80214d6:	3b01      	subs	r3, #1
 80214d8:	9302      	str	r3, [sp, #8]
 80214da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80214dc:	9803      	ldr	r0, [sp, #12]
 80214de:	fb92 f9f3 	sdiv	r9, r2, r3
 80214e2:	ee17 2a10 	vmov	r2, s14
 80214e6:	eeb0 7a43 	vmov.f32	s14, s6
 80214ea:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214ee:	fb92 faf3 	sdiv	sl, r2, r3
 80214f2:	ee17 2a10 	vmov	r2, s14
 80214f6:	eeb0 7a62 	vmov.f32	s14, s5
 80214fa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214fe:	eeb0 3a67 	vmov.f32	s6, s15
 8021502:	ee17 1a10 	vmov	r1, s14
 8021506:	eef0 2a46 	vmov.f32	s5, s12
 802150a:	bf08      	it	eq
 802150c:	4603      	moveq	r3, r0
 802150e:	e7a7      	b.n	8021460 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021510:	f103 38ff 	add.w	r8, r3, #4294967295
 8021514:	fb08 1c09 	mla	ip, r8, r9, r1
 8021518:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802151c:	d56c      	bpl.n	80215f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 802151e:	4677      	mov	r7, lr
 8021520:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021524:	e002      	b.n	802152c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8021526:	140c      	asrs	r4, r1, #16
 8021528:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 802152c:	2c00      	cmp	r4, #0
 802152e:	db4d      	blt.n	80215cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021530:	42ac      	cmp	r4, r5
 8021532:	da4b      	bge.n	80215cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021534:	1413      	asrs	r3, r2, #16
 8021536:	d449      	bmi.n	80215cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021538:	42b3      	cmp	r3, r6
 802153a:	b22d      	sxth	r5, r5
 802153c:	da46      	bge.n	80215cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 802153e:	9800      	ldr	r0, [sp, #0]
 8021540:	fb03 0505 	mla	r5, r3, r5, r0
 8021544:	9801      	ldr	r0, [sp, #4]
 8021546:	5d2b      	ldrb	r3, [r5, r4]
 8021548:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 802154c:	0e18      	lsrs	r0, r3, #24
 802154e:	28ff      	cmp	r0, #255	@ 0xff
 8021550:	f000 80c0 	beq.w	80216d4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021554:	b2c4      	uxtb	r4, r0
 8021556:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802155a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802155e:	b2a5      	uxth	r5, r4
 8021560:	b2db      	uxtb	r3, r3
 8021562:	b398      	cbz	r0, 80215cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021564:	43e4      	mvns	r4, r4
 8021566:	f8b7 8000 	ldrh.w	r8, [r7]
 802156a:	fb16 f605 	smulbb	r6, r6, r5
 802156e:	fb1c fc05 	smulbb	ip, ip, r5
 8021572:	fb13 f505 	smulbb	r5, r3, r5
 8021576:	ea4f 2028 	mov.w	r0, r8, asr #8
 802157a:	b2e3      	uxtb	r3, r4
 802157c:	ea4f 04e8 	mov.w	r4, r8, asr #3
 8021580:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8021584:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021588:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802158c:	fa5f f888 	uxtb.w	r8, r8
 8021590:	fb04 6403 	mla	r4, r4, r3, r6
 8021594:	fb00 cc03 	mla	ip, r0, r3, ip
 8021598:	fb08 5303 	mla	r3, r8, r3, r5
 802159c:	fa1f fc8c 	uxth.w	ip, ip
 80215a0:	b298      	uxth	r0, r3
 80215a2:	b2a5      	uxth	r5, r4
 80215a4:	f10c 0301 	add.w	r3, ip, #1
 80215a8:	1c44      	adds	r4, r0, #1
 80215aa:	1c6e      	adds	r6, r5, #1
 80215ac:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 80215b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80215b4:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 80215b8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80215bc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80215c0:	0940      	lsrs	r0, r0, #5
 80215c2:	4323      	orrs	r3, r4
 80215c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80215c8:	4303      	orrs	r3, r0
 80215ca:	803b      	strh	r3, [r7, #0]
 80215cc:	3702      	adds	r7, #2
 80215ce:	4577      	cmp	r7, lr
 80215d0:	4449      	add	r1, r9
 80215d2:	4452      	add	r2, sl
 80215d4:	d1a7      	bne.n	8021526 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80215d6:	9b02      	ldr	r3, [sp, #8]
 80215d8:	2b00      	cmp	r3, #0
 80215da:	f73f af66 	bgt.w	80214aa <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80215de:	b005      	add	sp, #20
 80215e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215e4:	f43f af5d 	beq.w	80214a2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80215e8:	f103 38ff 	add.w	r8, r3, #4294967295
 80215ec:	fb08 1c09 	mla	ip, r8, r9, r1
 80215f0:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80215f4:	f53f af55 	bmi.w	80214a2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80215f8:	4560      	cmp	r0, ip
 80215fa:	dd65      	ble.n	80216c8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215fc:	fb08 280a 	mla	r8, r8, sl, r2
 8021600:	ea5f 4828 	movs.w	r8, r8, asr #16
 8021604:	d460      	bmi.n	80216c8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021606:	45b8      	cmp	r8, r7
 8021608:	da5e      	bge.n	80216c8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802160a:	2b00      	cmp	r3, #0
 802160c:	f77f af49 	ble.w	80214a2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021610:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 8021614:	e03f      	b.n	8021696 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021616:	b2f0      	uxtb	r0, r6
 8021618:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802161c:	f3c3 2707 	ubfx	r7, r3, #8, #8
 8021620:	b284      	uxth	r4, r0
 8021622:	b2db      	uxtb	r3, r3
 8021624:	b376      	cbz	r6, 8021684 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8021626:	43c0      	mvns	r0, r0
 8021628:	f8be 6000 	ldrh.w	r6, [lr]
 802162c:	fb17 f704 	smulbb	r7, r7, r4
 8021630:	fb1c fc04 	smulbb	ip, ip, r4
 8021634:	fb13 f304 	smulbb	r3, r3, r4
 8021638:	1235      	asrs	r5, r6, #8
 802163a:	10f4      	asrs	r4, r6, #3
 802163c:	00f6      	lsls	r6, r6, #3
 802163e:	b2c0      	uxtb	r0, r0
 8021640:	b2f6      	uxtb	r6, r6
 8021642:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021646:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802164a:	fb04 7400 	mla	r4, r4, r0, r7
 802164e:	fb06 3300 	mla	r3, r6, r0, r3
 8021652:	fb05 c500 	mla	r5, r5, r0, ip
 8021656:	b2a4      	uxth	r4, r4
 8021658:	b2ad      	uxth	r5, r5
 802165a:	b29b      	uxth	r3, r3
 802165c:	1c6e      	adds	r6, r5, #1
 802165e:	1c5f      	adds	r7, r3, #1
 8021660:	1c60      	adds	r0, r4, #1
 8021662:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8021666:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802166a:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802166e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021672:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021676:	0940      	lsrs	r0, r0, #5
 8021678:	432b      	orrs	r3, r5
 802167a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802167e:	4303      	orrs	r3, r0
 8021680:	f8ae 3000 	strh.w	r3, [lr]
 8021684:	f10e 0e02 	add.w	lr, lr, #2
 8021688:	45c6      	cmp	lr, r8
 802168a:	4449      	add	r1, r9
 802168c:	4452      	add	r2, sl
 802168e:	f43f af08 	beq.w	80214a2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021692:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 8021696:	9c00      	ldr	r4, [sp, #0]
 8021698:	1413      	asrs	r3, r2, #16
 802169a:	fb00 4303 	mla	r3, r0, r3, r4
 802169e:	1408      	asrs	r0, r1, #16
 80216a0:	5c1b      	ldrb	r3, [r3, r0]
 80216a2:	9801      	ldr	r0, [sp, #4]
 80216a4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80216a8:	0e1e      	lsrs	r6, r3, #24
 80216aa:	2eff      	cmp	r6, #255	@ 0xff
 80216ac:	d1b3      	bne.n	8021616 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80216ae:	0958      	lsrs	r0, r3, #5
 80216b0:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 80216b4:	480d      	ldr	r0, [pc, #52]	@ (80216ec <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80216b6:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 80216ba:	4320      	orrs	r0, r4
 80216bc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80216c0:	4303      	orrs	r3, r0
 80216c2:	f8ae 3000 	strh.w	r3, [lr]
 80216c6:	e7dd      	b.n	8021684 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80216c8:	2b00      	cmp	r3, #0
 80216ca:	f77f aeea 	ble.w	80214a2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80216ce:	4677      	mov	r7, lr
 80216d0:	140c      	asrs	r4, r1, #16
 80216d2:	e725      	b.n	8021520 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 80216d4:	0958      	lsrs	r0, r3, #5
 80216d6:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 80216da:	4804      	ldr	r0, [pc, #16]	@ (80216ec <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80216dc:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 80216e0:	4320      	orrs	r0, r4
 80216e2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80216e6:	4303      	orrs	r3, r0
 80216e8:	803b      	strh	r3, [r7, #0]
 80216ea:	e76f      	b.n	80215cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80216ec:	fffff800 	.word	0xfffff800

080216f0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80216f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216f4:	b089      	sub	sp, #36	@ 0x24
 80216f6:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 80216fa:	9104      	str	r1, [sp, #16]
 80216fc:	ea6f 0c05 	mvn.w	ip, r5
 8021700:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 8021704:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 8021708:	6860      	ldr	r0, [r4, #4]
 802170a:	9205      	str	r2, [sp, #20]
 802170c:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 8021710:	fb00 1102 	mla	r1, r0, r2, r1
 8021714:	6824      	ldr	r4, [r4, #0]
 8021716:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802171a:	4421      	add	r1, r4
 802171c:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021720:	f8db 2000 	ldr.w	r2, [fp]
 8021724:	3404      	adds	r4, #4
 8021726:	fa5f fc8c 	uxtb.w	ip, ip
 802172a:	fa1f f985 	uxth.w	r9, r5
 802172e:	9407      	str	r4, [sp, #28]
 8021730:	9202      	str	r2, [sp, #8]
 8021732:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 8021736:	9c04      	ldr	r4, [sp, #16]
 8021738:	2c00      	cmp	r4, #0
 802173a:	dc03      	bgt.n	8021744 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802173c:	9c05      	ldr	r4, [sp, #20]
 802173e:	2c00      	cmp	r4, #0
 8021740:	f340 80b1 	ble.w	80218a6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021744:	e9db e802 	ldrd	lr, r8, [fp, #8]
 8021748:	2b00      	cmp	r3, #0
 802174a:	fa0f f588 	sxth.w	r5, r8
 802174e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021752:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 8021756:	fa0f f48e 	sxth.w	r4, lr
 802175a:	9503      	str	r5, [sp, #12]
 802175c:	f340 80a6 	ble.w	80218ac <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021760:	46f2      	mov	sl, lr
 8021762:	9401      	str	r4, [sp, #4]
 8021764:	1415      	asrs	r5, r2, #16
 8021766:	d408      	bmi.n	802177a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021768:	9c01      	ldr	r4, [sp, #4]
 802176a:	42a5      	cmp	r5, r4
 802176c:	da05      	bge.n	802177a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802176e:	ea5f 4e20 	movs.w	lr, r0, asr #16
 8021772:	d402      	bmi.n	802177a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021774:	9c03      	ldr	r4, [sp, #12]
 8021776:	45a6      	cmp	lr, r4
 8021778:	db3e      	blt.n	80217f8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 802177a:	3b01      	subs	r3, #1
 802177c:	4432      	add	r2, r6
 802177e:	4438      	add	r0, r7
 8021780:	f101 0103 	add.w	r1, r1, #3
 8021784:	d1ee      	bne.n	8021764 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021786:	9b04      	ldr	r3, [sp, #16]
 8021788:	2b00      	cmp	r3, #0
 802178a:	f340 808c 	ble.w	80218a6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802178e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021792:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021796:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802179a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802179e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80217a2:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80217a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80217aa:	ee76 6a62 	vsub.f32	s13, s12, s5
 80217ae:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80217b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217b6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80217ba:	ee16 2a90 	vmov	r2, s13
 80217be:	3b01      	subs	r3, #1
 80217c0:	9304      	str	r3, [sp, #16]
 80217c2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80217c4:	9c05      	ldr	r4, [sp, #20]
 80217c6:	fb92 f6f3 	sdiv	r6, r2, r3
 80217ca:	ee17 2a10 	vmov	r2, s14
 80217ce:	eeb0 7a43 	vmov.f32	s14, s6
 80217d2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80217d6:	ee17 0a10 	vmov	r0, s14
 80217da:	eeb0 7a62 	vmov.f32	s14, s5
 80217de:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80217e2:	fb92 f7f3 	sdiv	r7, r2, r3
 80217e6:	eeb0 3a67 	vmov.f32	s6, s15
 80217ea:	ee17 2a10 	vmov	r2, s14
 80217ee:	eef0 2a46 	vmov.f32	s5, s12
 80217f2:	bf08      	it	eq
 80217f4:	4623      	moveq	r3, r4
 80217f6:	e79e      	b.n	8021736 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80217f8:	9506      	str	r5, [sp, #24]
 80217fa:	1e5d      	subs	r5, r3, #1
 80217fc:	46d6      	mov	lr, sl
 80217fe:	fb05 2a06 	mla	sl, r5, r6, r2
 8021802:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021806:	9c01      	ldr	r4, [sp, #4]
 8021808:	9501      	str	r5, [sp, #4]
 802180a:	d559      	bpl.n	80218c0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 802180c:	460c      	mov	r4, r1
 802180e:	9d06      	ldr	r5, [sp, #24]
 8021810:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021814:	4419      	add	r1, r3
 8021816:	4673      	mov	r3, lr
 8021818:	46b6      	mov	lr, r6
 802181a:	4646      	mov	r6, r8
 802181c:	e002      	b.n	8021824 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802181e:	1415      	asrs	r5, r2, #16
 8021820:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 8021824:	2d00      	cmp	r5, #0
 8021826:	4472      	add	r2, lr
 8021828:	db35      	blt.n	8021896 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802182a:	429d      	cmp	r5, r3
 802182c:	da33      	bge.n	8021896 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802182e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8021832:	d430      	bmi.n	8021896 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8021834:	45b0      	cmp	r8, r6
 8021836:	b21b      	sxth	r3, r3
 8021838:	da2d      	bge.n	8021896 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802183a:	9e02      	ldr	r6, [sp, #8]
 802183c:	fb08 6303 	mla	r3, r8, r3, r6
 8021840:	7826      	ldrb	r6, [r4, #0]
 8021842:	5d5b      	ldrb	r3, [r3, r5]
 8021844:	fb16 f80c 	smulbb	r8, r6, ip
 8021848:	9d07      	ldr	r5, [sp, #28]
 802184a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802184e:	5cee      	ldrb	r6, [r5, r3]
 8021850:	442b      	add	r3, r5
 8021852:	fb06 8609 	mla	r6, r6, r9, r8
 8021856:	b2b6      	uxth	r6, r6
 8021858:	7865      	ldrb	r5, [r4, #1]
 802185a:	f106 0801 	add.w	r8, r6, #1
 802185e:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 8021862:	1236      	asrs	r6, r6, #8
 8021864:	fb15 f80c 	smulbb	r8, r5, ip
 8021868:	7026      	strb	r6, [r4, #0]
 802186a:	785d      	ldrb	r5, [r3, #1]
 802186c:	78a6      	ldrb	r6, [r4, #2]
 802186e:	fb05 8509 	mla	r5, r5, r9, r8
 8021872:	b2ad      	uxth	r5, r5
 8021874:	f105 0801 	add.w	r8, r5, #1
 8021878:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 802187c:	122d      	asrs	r5, r5, #8
 802187e:	fb16 f60c 	smulbb	r6, r6, ip
 8021882:	7065      	strb	r5, [r4, #1]
 8021884:	789b      	ldrb	r3, [r3, #2]
 8021886:	fb03 6309 	mla	r3, r3, r9, r6
 802188a:	b29b      	uxth	r3, r3
 802188c:	1c5d      	adds	r5, r3, #1
 802188e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8021892:	121b      	asrs	r3, r3, #8
 8021894:	70a3      	strb	r3, [r4, #2]
 8021896:	3403      	adds	r4, #3
 8021898:	428c      	cmp	r4, r1
 802189a:	4438      	add	r0, r7
 802189c:	d1bf      	bne.n	802181e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802189e:	9b04      	ldr	r3, [sp, #16]
 80218a0:	2b00      	cmp	r3, #0
 80218a2:	f73f af74 	bgt.w	802178e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80218a6:	b009      	add	sp, #36	@ 0x24
 80218a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80218ac:	f43f af6b 	beq.w	8021786 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218b0:	1e5d      	subs	r5, r3, #1
 80218b2:	fb05 2a06 	mla	sl, r5, r6, r2
 80218b6:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 80218ba:	9501      	str	r5, [sp, #4]
 80218bc:	f53f af63 	bmi.w	8021786 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218c0:	4554      	cmp	r4, sl
 80218c2:	dd54      	ble.n	802196e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80218c4:	9d01      	ldr	r5, [sp, #4]
 80218c6:	fb05 0507 	mla	r5, r5, r7, r0
 80218ca:	ea5f 4a25 	movs.w	sl, r5, asr #16
 80218ce:	d44e      	bmi.n	802196e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80218d0:	9d03      	ldr	r5, [sp, #12]
 80218d2:	45aa      	cmp	sl, r5
 80218d4:	da4b      	bge.n	802196e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80218d6:	2b00      	cmp	r3, #0
 80218d8:	f77f af55 	ble.w	8021786 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218dc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80218e0:	eb01 0e03 	add.w	lr, r1, r3
 80218e4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80218e8:	3103      	adds	r1, #3
 80218ea:	e002      	b.n	80218f2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80218ec:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 80218f0:	3103      	adds	r1, #3
 80218f2:	9d02      	ldr	r5, [sp, #8]
 80218f4:	1403      	asrs	r3, r0, #16
 80218f6:	fb04 5303 	mla	r3, r4, r3, r5
 80218fa:	1415      	asrs	r5, r2, #16
 80218fc:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 8021900:	5d5b      	ldrb	r3, [r3, r5]
 8021902:	fb14 f40c 	smulbb	r4, r4, ip
 8021906:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802190a:	f818 5003 	ldrb.w	r5, [r8, r3]
 802190e:	4443      	add	r3, r8
 8021910:	fb05 4509 	mla	r5, r5, r9, r4
 8021914:	b2ad      	uxth	r5, r5
 8021916:	f105 0a01 	add.w	sl, r5, #1
 802191a:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 802191e:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021922:	122d      	asrs	r5, r5, #8
 8021924:	fb14 f40c 	smulbb	r4, r4, ip
 8021928:	f801 5c03 	strb.w	r5, [r1, #-3]
 802192c:	785d      	ldrb	r5, [r3, #1]
 802192e:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 8021932:	fb05 4409 	mla	r4, r5, r9, r4
 8021936:	b2a4      	uxth	r4, r4
 8021938:	1c65      	adds	r5, r4, #1
 802193a:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802193e:	1224      	asrs	r4, r4, #8
 8021940:	fb1a fa0c 	smulbb	sl, sl, ip
 8021944:	f801 4c02 	strb.w	r4, [r1, #-2]
 8021948:	789b      	ldrb	r3, [r3, #2]
 802194a:	458e      	cmp	lr, r1
 802194c:	fb03 aa09 	mla	sl, r3, r9, sl
 8021950:	fa1f fa8a 	uxth.w	sl, sl
 8021954:	f10a 0301 	add.w	r3, sl, #1
 8021958:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 802195c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021960:	4438      	add	r0, r7
 8021962:	4432      	add	r2, r6
 8021964:	f801 ac01 	strb.w	sl, [r1, #-1]
 8021968:	d1c0      	bne.n	80218ec <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802196a:	4671      	mov	r1, lr
 802196c:	e70b      	b.n	8021786 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802196e:	2b00      	cmp	r3, #0
 8021970:	f77f af09 	ble.w	8021786 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021974:	1415      	asrs	r5, r2, #16
 8021976:	460c      	mov	r4, r1
 8021978:	9506      	str	r5, [sp, #24]
 802197a:	e749      	b.n	8021810 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

0802197c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802197c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021980:	4689      	mov	r9, r1
 8021982:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021986:	46c8      	mov	r8, r9
 8021988:	b087      	sub	sp, #28
 802198a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 802198e:	684c      	ldr	r4, [r1, #4]
 8021990:	9203      	str	r2, [sp, #12]
 8021992:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021996:	fb04 0202 	mla	r2, r4, r2, r0
 802199a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802199e:	680d      	ldr	r5, [r1, #0]
 80219a0:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80219a4:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 80219a8:	f8dc 2000 	ldr.w	r2, [ip]
 80219ac:	4428      	add	r0, r5
 80219ae:	f104 0b04 	add.w	fp, r4, #4
 80219b2:	9205      	str	r2, [sp, #20]
 80219b4:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 80219b8:	f1b8 0f00 	cmp.w	r8, #0
 80219bc:	dc03      	bgt.n	80219c6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80219be:	9c03      	ldr	r4, [sp, #12]
 80219c0:	2c00      	cmp	r4, #0
 80219c2:	f340 808d 	ble.w	8021ae0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80219c6:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 80219ca:	2b00      	cmp	r3, #0
 80219cc:	fa0f f58a 	sxth.w	r5, sl
 80219d0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80219d4:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80219d8:	fa0f f48e 	sxth.w	r4, lr
 80219dc:	9502      	str	r5, [sp, #8]
 80219de:	f340 8082 	ble.w	8021ae6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80219e2:	46f1      	mov	r9, lr
 80219e4:	9401      	str	r4, [sp, #4]
 80219e6:	1415      	asrs	r5, r2, #16
 80219e8:	d408      	bmi.n	80219fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219ea:	9c01      	ldr	r4, [sp, #4]
 80219ec:	42a5      	cmp	r5, r4
 80219ee:	da05      	bge.n	80219fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219f0:	ea5f 4e21 	movs.w	lr, r1, asr #16
 80219f4:	d402      	bmi.n	80219fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219f6:	9c02      	ldr	r4, [sp, #8]
 80219f8:	45a6      	cmp	lr, r4
 80219fa:	db3b      	blt.n	8021a74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 80219fc:	3b01      	subs	r3, #1
 80219fe:	4432      	add	r2, r6
 8021a00:	4439      	add	r1, r7
 8021a02:	f100 0003 	add.w	r0, r0, #3
 8021a06:	d1ee      	bne.n	80219e6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021a08:	f1b8 0f00 	cmp.w	r8, #0
 8021a0c:	dd68      	ble.n	8021ae0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021a0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021a12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021a16:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021a1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a1e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021a22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021a26:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021a2a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021a2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a32:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a36:	ee16 2a90 	vmov	r2, s13
 8021a3a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021a3c:	9c03      	ldr	r4, [sp, #12]
 8021a3e:	fb92 f6f3 	sdiv	r6, r2, r3
 8021a42:	ee17 2a10 	vmov	r2, s14
 8021a46:	eeb0 7a43 	vmov.f32	s14, s6
 8021a4a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a4e:	ee17 1a10 	vmov	r1, s14
 8021a52:	eeb0 7a62 	vmov.f32	s14, s5
 8021a56:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a5a:	f1b8 0801 	subs.w	r8, r8, #1
 8021a5e:	fb92 f7f3 	sdiv	r7, r2, r3
 8021a62:	eeb0 3a67 	vmov.f32	s6, s15
 8021a66:	ee17 2a10 	vmov	r2, s14
 8021a6a:	eef0 2a46 	vmov.f32	s5, s12
 8021a6e:	bf08      	it	eq
 8021a70:	4623      	moveq	r3, r4
 8021a72:	e7a1      	b.n	80219b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021a74:	9c01      	ldr	r4, [sp, #4]
 8021a76:	9501      	str	r5, [sp, #4]
 8021a78:	1e5d      	subs	r5, r3, #1
 8021a7a:	46ce      	mov	lr, r9
 8021a7c:	fb06 2905 	mla	r9, r6, r5, r2
 8021a80:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021a84:	9504      	str	r5, [sp, #16]
 8021a86:	d536      	bpl.n	8021af6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8021a88:	4604      	mov	r4, r0
 8021a8a:	9d01      	ldr	r5, [sp, #4]
 8021a8c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a90:	4418      	add	r0, r3
 8021a92:	4673      	mov	r3, lr
 8021a94:	46b6      	mov	lr, r6
 8021a96:	4656      	mov	r6, sl
 8021a98:	e002      	b.n	8021aa0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021a9a:	1415      	asrs	r5, r2, #16
 8021a9c:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021aa0:	2d00      	cmp	r5, #0
 8021aa2:	4472      	add	r2, lr
 8021aa4:	db15      	blt.n	8021ad2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021aa6:	429d      	cmp	r5, r3
 8021aa8:	da13      	bge.n	8021ad2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021aaa:	ea5f 4921 	movs.w	r9, r1, asr #16
 8021aae:	d410      	bmi.n	8021ad2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021ab0:	45b1      	cmp	r9, r6
 8021ab2:	da0e      	bge.n	8021ad2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021ab4:	9e05      	ldr	r6, [sp, #20]
 8021ab6:	b21b      	sxth	r3, r3
 8021ab8:	fb09 6303 	mla	r3, r9, r3, r6
 8021abc:	5d5b      	ldrb	r3, [r3, r5]
 8021abe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ac2:	f81b 5003 	ldrb.w	r5, [fp, r3]
 8021ac6:	445b      	add	r3, fp
 8021ac8:	7025      	strb	r5, [r4, #0]
 8021aca:	785d      	ldrb	r5, [r3, #1]
 8021acc:	7065      	strb	r5, [r4, #1]
 8021ace:	789b      	ldrb	r3, [r3, #2]
 8021ad0:	70a3      	strb	r3, [r4, #2]
 8021ad2:	3403      	adds	r4, #3
 8021ad4:	4284      	cmp	r4, r0
 8021ad6:	4439      	add	r1, r7
 8021ad8:	d1df      	bne.n	8021a9a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8021ada:	f1b8 0f00 	cmp.w	r8, #0
 8021ade:	dc96      	bgt.n	8021a0e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ae0:	b007      	add	sp, #28
 8021ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ae6:	d08f      	beq.n	8021a08 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ae8:	1e5d      	subs	r5, r3, #1
 8021aea:	fb06 2905 	mla	r9, r6, r5, r2
 8021aee:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021af2:	9504      	str	r5, [sp, #16]
 8021af4:	d488      	bmi.n	8021a08 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021af6:	45a1      	cmp	r9, r4
 8021af8:	da2d      	bge.n	8021b56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021afa:	9d04      	ldr	r5, [sp, #16]
 8021afc:	fb07 1505 	mla	r5, r7, r5, r1
 8021b00:	ea5f 4925 	movs.w	r9, r5, asr #16
 8021b04:	d427      	bmi.n	8021b56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021b06:	9d02      	ldr	r5, [sp, #8]
 8021b08:	454d      	cmp	r5, r9
 8021b0a:	dd24      	ble.n	8021b56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021b0c:	2b00      	cmp	r3, #0
 8021b0e:	f77f af7b 	ble.w	8021a08 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b12:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b16:	18c5      	adds	r5, r0, r3
 8021b18:	f8dd e014 	ldr.w	lr, [sp, #20]
 8021b1c:	3003      	adds	r0, #3
 8021b1e:	e002      	b.n	8021b26 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8021b20:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021b24:	3003      	adds	r0, #3
 8021b26:	140b      	asrs	r3, r1, #16
 8021b28:	fb04 e303 	mla	r3, r4, r3, lr
 8021b2c:	1414      	asrs	r4, r2, #16
 8021b2e:	5d1b      	ldrb	r3, [r3, r4]
 8021b30:	4285      	cmp	r5, r0
 8021b32:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b36:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8021b3a:	445b      	add	r3, fp
 8021b3c:	f800 4c03 	strb.w	r4, [r0, #-3]
 8021b40:	785c      	ldrb	r4, [r3, #1]
 8021b42:	4439      	add	r1, r7
 8021b44:	f800 4c02 	strb.w	r4, [r0, #-2]
 8021b48:	789b      	ldrb	r3, [r3, #2]
 8021b4a:	4432      	add	r2, r6
 8021b4c:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021b50:	d1e6      	bne.n	8021b20 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021b52:	4628      	mov	r0, r5
 8021b54:	e758      	b.n	8021a08 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b56:	2b00      	cmp	r3, #0
 8021b58:	f77f af56 	ble.w	8021a08 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b5c:	1415      	asrs	r5, r2, #16
 8021b5e:	4604      	mov	r4, r0
 8021b60:	9501      	str	r5, [sp, #4]
 8021b62:	e793      	b.n	8021a8c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

08021b64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b68:	b087      	sub	sp, #28
 8021b6a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8021b6e:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021b72:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021b76:	684c      	ldr	r4, [r1, #4]
 8021b78:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021b7c:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8021b80:	fb04 0202 	mla	r2, r4, r2, r0
 8021b84:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 8021b88:	f8dc 2000 	ldr.w	r2, [ip]
 8021b8c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021b90:	9201      	str	r2, [sp, #4]
 8021b92:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021b96:	6808      	ldr	r0, [r1, #0]
 8021b98:	9204      	str	r2, [sp, #16]
 8021b9a:	1d22      	adds	r2, r4, #4
 8021b9c:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 8021ba0:	9205      	str	r2, [sp, #20]
 8021ba2:	4672      	mov	r2, lr
 8021ba4:	4428      	add	r0, r5
 8021ba6:	9c02      	ldr	r4, [sp, #8]
 8021ba8:	2c00      	cmp	r4, #0
 8021baa:	dc03      	bgt.n	8021bb4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8021bac:	9c03      	ldr	r4, [sp, #12]
 8021bae:	2c00      	cmp	r4, #0
 8021bb0:	f340 80ba 	ble.w	8021d28 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021bb4:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8021bb8:	2b00      	cmp	r3, #0
 8021bba:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021bbe:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021bc2:	fa0f f48e 	sxth.w	r4, lr
 8021bc6:	fa0f f988 	sxth.w	r9, r8
 8021bca:	f340 80b0 	ble.w	8021d2e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021bce:	1415      	asrs	r5, r2, #16
 8021bd0:	d406      	bmi.n	8021be0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021bd2:	42a5      	cmp	r5, r4
 8021bd4:	da04      	bge.n	8021be0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021bd6:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8021bda:	d401      	bmi.n	8021be0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021bdc:	45ca      	cmp	sl, r9
 8021bde:	db3c      	blt.n	8021c5a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 8021be0:	3b01      	subs	r3, #1
 8021be2:	4432      	add	r2, r6
 8021be4:	4439      	add	r1, r7
 8021be6:	f100 0003 	add.w	r0, r0, #3
 8021bea:	d1f0      	bne.n	8021bce <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021bec:	9b02      	ldr	r3, [sp, #8]
 8021bee:	2b00      	cmp	r3, #0
 8021bf0:	f340 809a 	ble.w	8021d28 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021bf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021bf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021bfc:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021c00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021c04:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021c08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021c0c:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021c10:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021c14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c18:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c1c:	ee16 2a90 	vmov	r2, s13
 8021c20:	3b01      	subs	r3, #1
 8021c22:	9302      	str	r3, [sp, #8]
 8021c24:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021c26:	9c03      	ldr	r4, [sp, #12]
 8021c28:	fb92 f6f3 	sdiv	r6, r2, r3
 8021c2c:	ee17 2a10 	vmov	r2, s14
 8021c30:	eeb0 7a43 	vmov.f32	s14, s6
 8021c34:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c38:	ee17 1a10 	vmov	r1, s14
 8021c3c:	eeb0 7a62 	vmov.f32	s14, s5
 8021c40:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c44:	fb92 f7f3 	sdiv	r7, r2, r3
 8021c48:	eeb0 3a67 	vmov.f32	s6, s15
 8021c4c:	ee17 2a10 	vmov	r2, s14
 8021c50:	eef0 2a46 	vmov.f32	s5, s12
 8021c54:	bf08      	it	eq
 8021c56:	4623      	moveq	r3, r4
 8021c58:	e7a5      	b.n	8021ba6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021c5a:	f103 3bff 	add.w	fp, r3, #4294967295
 8021c5e:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021c62:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021c66:	d56c      	bpl.n	8021d42 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8021c68:	4604      	mov	r4, r0
 8021c6a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021c6e:	4418      	add	r0, r3
 8021c70:	4673      	mov	r3, lr
 8021c72:	46b6      	mov	lr, r6
 8021c74:	4646      	mov	r6, r8
 8021c76:	e002      	b.n	8021c7e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021c78:	1415      	asrs	r5, r2, #16
 8021c7a:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021c7e:	2d00      	cmp	r5, #0
 8021c80:	4472      	add	r2, lr
 8021c82:	db49      	blt.n	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c84:	429d      	cmp	r5, r3
 8021c86:	da47      	bge.n	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c88:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021c8c:	d444      	bmi.n	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c8e:	45b0      	cmp	r8, r6
 8021c90:	b21b      	sxth	r3, r3
 8021c92:	da41      	bge.n	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c94:	9e01      	ldr	r6, [sp, #4]
 8021c96:	fb08 6303 	mla	r3, r8, r3, r6
 8021c9a:	5d5b      	ldrb	r3, [r3, r5]
 8021c9c:	9d05      	ldr	r5, [sp, #20]
 8021c9e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021ca2:	0e1d      	lsrs	r5, r3, #24
 8021ca4:	d038      	beq.n	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021ca6:	9e04      	ldr	r6, [sp, #16]
 8021ca8:	fa5f f983 	uxtb.w	r9, r3
 8021cac:	fb06 f605 	mul.w	r6, r6, r5
 8021cb0:	1c75      	adds	r5, r6, #1
 8021cb2:	eb05 2526 	add.w	r5, r5, r6, asr #8
 8021cb6:	122d      	asrs	r5, r5, #8
 8021cb8:	43ee      	mvns	r6, r5
 8021cba:	b2ad      	uxth	r5, r5
 8021cbc:	fb19 f905 	smulbb	r9, r9, r5
 8021cc0:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8021cc4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021cc8:	f894 a000 	ldrb.w	sl, [r4]
 8021ccc:	fb18 f805 	smulbb	r8, r8, r5
 8021cd0:	fb13 f305 	smulbb	r3, r3, r5
 8021cd4:	b2f5      	uxtb	r5, r6
 8021cd6:	fb0a 9605 	mla	r6, sl, r5, r9
 8021cda:	f894 b001 	ldrb.w	fp, [r4, #1]
 8021cde:	f894 9002 	ldrb.w	r9, [r4, #2]
 8021ce2:	fb0b 8805 	mla	r8, fp, r5, r8
 8021ce6:	fb09 3305 	mla	r3, r9, r5, r3
 8021cea:	fa1f fa86 	uxth.w	sl, r6
 8021cee:	fa1f f888 	uxth.w	r8, r8
 8021cf2:	b29b      	uxth	r3, r3
 8021cf4:	f10a 0601 	add.w	r6, sl, #1
 8021cf8:	f108 0501 	add.w	r5, r8, #1
 8021cfc:	f103 0901 	add.w	r9, r3, #1
 8021d00:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 8021d04:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8021d08:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 8021d0c:	1236      	asrs	r6, r6, #8
 8021d0e:	122d      	asrs	r5, r5, #8
 8021d10:	121b      	asrs	r3, r3, #8
 8021d12:	7026      	strb	r6, [r4, #0]
 8021d14:	7065      	strb	r5, [r4, #1]
 8021d16:	70a3      	strb	r3, [r4, #2]
 8021d18:	3403      	adds	r4, #3
 8021d1a:	4284      	cmp	r4, r0
 8021d1c:	4439      	add	r1, r7
 8021d1e:	d1ab      	bne.n	8021c78 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8021d20:	9b02      	ldr	r3, [sp, #8]
 8021d22:	2b00      	cmp	r3, #0
 8021d24:	f73f af66 	bgt.w	8021bf4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021d28:	b007      	add	sp, #28
 8021d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d2e:	f43f af5d 	beq.w	8021bec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d32:	f103 3bff 	add.w	fp, r3, #4294967295
 8021d36:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021d3a:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021d3e:	f53f af55 	bmi.w	8021bec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d42:	4554      	cmp	r4, sl
 8021d44:	dd64      	ble.n	8021e10 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d46:	fb0b 1b07 	mla	fp, fp, r7, r1
 8021d4a:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8021d4e:	d45f      	bmi.n	8021e10 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d50:	45cb      	cmp	fp, r9
 8021d52:	da5d      	bge.n	8021e10 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d54:	2b00      	cmp	r3, #0
 8021d56:	f77f af49 	ble.w	8021bec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d5a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021d5e:	eb00 0e03 	add.w	lr, r0, r3
 8021d62:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8021d66:	3003      	adds	r0, #3
 8021d68:	e002      	b.n	8021d70 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021d6a:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021d6e:	3003      	adds	r0, #3
 8021d70:	9d01      	ldr	r5, [sp, #4]
 8021d72:	140b      	asrs	r3, r1, #16
 8021d74:	fb04 5303 	mla	r3, r4, r3, r5
 8021d78:	1414      	asrs	r4, r2, #16
 8021d7a:	5d1b      	ldrb	r3, [r3, r4]
 8021d7c:	4432      	add	r2, r6
 8021d7e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021d82:	4439      	add	r1, r7
 8021d84:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 8021d88:	d03e      	beq.n	8021e08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021d8a:	9c04      	ldr	r4, [sp, #16]
 8021d8c:	fa5f f983 	uxtb.w	r9, r3
 8021d90:	fb04 f40a 	mul.w	r4, r4, sl
 8021d94:	f104 0a01 	add.w	sl, r4, #1
 8021d98:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 8021d9c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021da0:	ea6f 040a 	mvn.w	r4, sl
 8021da4:	fa1f fa8a 	uxth.w	sl, sl
 8021da8:	fb19 f90a 	smulbb	r9, r9, sl
 8021dac:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8021db0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021db4:	fb15 fb0a 	smulbb	fp, r5, sl
 8021db8:	fb13 f30a 	smulbb	r3, r3, sl
 8021dbc:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 8021dc0:	b2e4      	uxtb	r4, r4
 8021dc2:	fb0a 9904 	mla	r9, sl, r4, r9
 8021dc6:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 8021dca:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 8021dce:	fb05 b504 	mla	r5, r5, r4, fp
 8021dd2:	fb0a 3304 	mla	r3, sl, r4, r3
 8021dd6:	fa1f f989 	uxth.w	r9, r9
 8021dda:	b2ad      	uxth	r5, r5
 8021ddc:	b29b      	uxth	r3, r3
 8021dde:	f109 0b01 	add.w	fp, r9, #1
 8021de2:	f105 0a01 	add.w	sl, r5, #1
 8021de6:	1c5c      	adds	r4, r3, #1
 8021de8:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8021dec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021df0:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8021df4:	ea4f 2929 	mov.w	r9, r9, asr #8
 8021df8:	122d      	asrs	r5, r5, #8
 8021dfa:	121b      	asrs	r3, r3, #8
 8021dfc:	f800 9c03 	strb.w	r9, [r0, #-3]
 8021e00:	f800 5c02 	strb.w	r5, [r0, #-2]
 8021e04:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021e08:	4586      	cmp	lr, r0
 8021e0a:	d1ae      	bne.n	8021d6a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021e0c:	4670      	mov	r0, lr
 8021e0e:	e6ed      	b.n	8021bec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e10:	2b00      	cmp	r3, #0
 8021e12:	f77f aeeb 	ble.w	8021bec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e16:	4604      	mov	r4, r0
 8021e18:	1415      	asrs	r5, r2, #16
 8021e1a:	e726      	b.n	8021c6a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

08021e1c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e1c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e24:	b087      	sub	sp, #28
 8021e26:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021e2a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021e2e:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 8021e32:	684c      	ldr	r4, [r1, #4]
 8021e34:	680d      	ldr	r5, [r1, #0]
 8021e36:	fb04 0202 	mla	r2, r4, r2, r0
 8021e3a:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 8021e3e:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021e42:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021e46:	3404      	adds	r4, #4
 8021e48:	f8db 2000 	ldr.w	r2, [fp]
 8021e4c:	4428      	add	r0, r5
 8021e4e:	9402      	str	r4, [sp, #8]
 8021e50:	9201      	str	r2, [sp, #4]
 8021e52:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021e56:	9c03      	ldr	r4, [sp, #12]
 8021e58:	2c00      	cmp	r4, #0
 8021e5a:	dc03      	bgt.n	8021e64 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021e5c:	9c04      	ldr	r4, [sp, #16]
 8021e5e:	2c00      	cmp	r4, #0
 8021e60:	f340 80b7 	ble.w	8021fd2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021e64:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021e68:	2b00      	cmp	r3, #0
 8021e6a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021e6e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021e72:	b234      	sxth	r4, r6
 8021e74:	fa0f fc87 	sxth.w	ip, r7
 8021e78:	f340 80ae 	ble.w	8021fd8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021e7c:	1415      	asrs	r5, r2, #16
 8021e7e:	d406      	bmi.n	8021e8e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e80:	42a5      	cmp	r5, r4
 8021e82:	da04      	bge.n	8021e8e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e84:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021e88:	d401      	bmi.n	8021e8e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e8a:	45e6      	cmp	lr, ip
 8021e8c:	db3c      	blt.n	8021f08 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 8021e8e:	3b01      	subs	r3, #1
 8021e90:	4442      	add	r2, r8
 8021e92:	4449      	add	r1, r9
 8021e94:	f100 0003 	add.w	r0, r0, #3
 8021e98:	d1f0      	bne.n	8021e7c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8021e9a:	9b03      	ldr	r3, [sp, #12]
 8021e9c:	2b00      	cmp	r3, #0
 8021e9e:	f340 8098 	ble.w	8021fd2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021ea2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ea6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021eaa:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021eae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021eb2:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021eb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021eba:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021ebe:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021ec2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ec6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021eca:	ee16 2a90 	vmov	r2, s13
 8021ece:	3b01      	subs	r3, #1
 8021ed0:	9303      	str	r3, [sp, #12]
 8021ed2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021ed4:	9c04      	ldr	r4, [sp, #16]
 8021ed6:	fb92 f8f3 	sdiv	r8, r2, r3
 8021eda:	ee17 2a10 	vmov	r2, s14
 8021ede:	eeb0 7a43 	vmov.f32	s14, s6
 8021ee2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ee6:	ee17 1a10 	vmov	r1, s14
 8021eea:	eeb0 7a62 	vmov.f32	s14, s5
 8021eee:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ef2:	fb92 f9f3 	sdiv	r9, r2, r3
 8021ef6:	eeb0 3a67 	vmov.f32	s6, s15
 8021efa:	ee17 2a10 	vmov	r2, s14
 8021efe:	eef0 2a46 	vmov.f32	s5, s12
 8021f02:	bf08      	it	eq
 8021f04:	4623      	moveq	r3, r4
 8021f06:	e7a6      	b.n	8021e56 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021f08:	f103 3aff 	add.w	sl, r3, #4294967295
 8021f0c:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021f10:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021f14:	d56a      	bpl.n	8021fec <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021f16:	4604      	mov	r4, r0
 8021f18:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021f1c:	4418      	add	r0, r3
 8021f1e:	e002      	b.n	8021f26 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 8021f20:	1415      	asrs	r5, r2, #16
 8021f22:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021f26:	2d00      	cmp	r5, #0
 8021f28:	db4a      	blt.n	8021fc0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f2a:	42b5      	cmp	r5, r6
 8021f2c:	da48      	bge.n	8021fc0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f2e:	140b      	asrs	r3, r1, #16
 8021f30:	d446      	bmi.n	8021fc0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f32:	42bb      	cmp	r3, r7
 8021f34:	b236      	sxth	r6, r6
 8021f36:	da43      	bge.n	8021fc0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f38:	9f01      	ldr	r7, [sp, #4]
 8021f3a:	fb03 7606 	mla	r6, r3, r6, r7
 8021f3e:	5d73      	ldrb	r3, [r6, r5]
 8021f40:	9d02      	ldr	r5, [sp, #8]
 8021f42:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021f46:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021f4a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021f4e:	f000 80be 	beq.w	80220ce <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8021f52:	b2df      	uxtb	r7, r3
 8021f54:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021f58:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8021f5c:	fa5f f38c 	uxtb.w	r3, ip
 8021f60:	b29d      	uxth	r5, r3
 8021f62:	f1bc 0f00 	cmp.w	ip, #0
 8021f66:	d02b      	beq.n	8021fc0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f68:	43db      	mvns	r3, r3
 8021f6a:	b2db      	uxtb	r3, r3
 8021f6c:	9305      	str	r3, [sp, #20]
 8021f6e:	f894 e001 	ldrb.w	lr, [r4, #1]
 8021f72:	fb17 f305 	smulbb	r3, r7, r5
 8021f76:	9f05      	ldr	r7, [sp, #20]
 8021f78:	f894 c002 	ldrb.w	ip, [r4, #2]
 8021f7c:	fb1e fe07 	smulbb	lr, lr, r7
 8021f80:	fb1c fc07 	smulbb	ip, ip, r7
 8021f84:	fb06 ee05 	mla	lr, r6, r5, lr
 8021f88:	7827      	ldrb	r7, [r4, #0]
 8021f8a:	9e05      	ldr	r6, [sp, #20]
 8021f8c:	fb0a c505 	mla	r5, sl, r5, ip
 8021f90:	fb07 3706 	mla	r7, r7, r6, r3
 8021f94:	b2ab      	uxth	r3, r5
 8021f96:	b2bf      	uxth	r7, r7
 8021f98:	fa1f f68e 	uxth.w	r6, lr
 8021f9c:	1c7d      	adds	r5, r7, #1
 8021f9e:	f106 0e01 	add.w	lr, r6, #1
 8021fa2:	f103 0c01 	add.w	ip, r3, #1
 8021fa6:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8021faa:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 8021fae:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 8021fb2:	121b      	asrs	r3, r3, #8
 8021fb4:	ea4f 272e 	mov.w	r7, lr, asr #8
 8021fb8:	1235      	asrs	r5, r6, #8
 8021fba:	7067      	strb	r7, [r4, #1]
 8021fbc:	70a5      	strb	r5, [r4, #2]
 8021fbe:	7023      	strb	r3, [r4, #0]
 8021fc0:	3403      	adds	r4, #3
 8021fc2:	4284      	cmp	r4, r0
 8021fc4:	4442      	add	r2, r8
 8021fc6:	4449      	add	r1, r9
 8021fc8:	d1aa      	bne.n	8021f20 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8021fca:	9b03      	ldr	r3, [sp, #12]
 8021fcc:	2b00      	cmp	r3, #0
 8021fce:	f73f af68 	bgt.w	8021ea2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021fd2:	b007      	add	sp, #28
 8021fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021fd8:	f43f af5f 	beq.w	8021e9a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021fdc:	f103 3aff 	add.w	sl, r3, #4294967295
 8021fe0:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021fe4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021fe8:	f53f af57 	bmi.w	8021e9a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021fec:	4574      	cmp	r4, lr
 8021fee:	dd68      	ble.n	80220c2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021ff0:	fb0a 1a09 	mla	sl, sl, r9, r1
 8021ff4:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021ff8:	d463      	bmi.n	80220c2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021ffa:	45e2      	cmp	sl, ip
 8021ffc:	da61      	bge.n	80220c2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021ffe:	2b00      	cmp	r3, #0
 8022000:	f77f af4b 	ble.w	8021e9a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022004:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8022008:	eb00 0e03 	add.w	lr, r0, r3
 802200c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 8022010:	3003      	adds	r0, #3
 8022012:	e03b      	b.n	802208c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022014:	b2fc      	uxtb	r4, r7
 8022016:	fa5f fc83 	uxtb.w	ip, r3
 802201a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802201e:	b2a5      	uxth	r5, r4
 8022020:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022024:	b357      	cbz	r7, 802207c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8022026:	43e4      	mvns	r4, r4
 8022028:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 802202c:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 8022030:	b2e4      	uxtb	r4, r4
 8022032:	fb1c fc05 	smulbb	ip, ip, r5
 8022036:	fb18 f804 	smulbb	r8, r8, r4
 802203a:	fb1a fa04 	smulbb	sl, sl, r4
 802203e:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 8022042:	fb03 8305 	mla	r3, r3, r5, r8
 8022046:	fb06 a605 	mla	r6, r6, r5, sl
 802204a:	fb07 c404 	mla	r4, r7, r4, ip
 802204e:	b2b6      	uxth	r6, r6
 8022050:	b2a4      	uxth	r4, r4
 8022052:	b29b      	uxth	r3, r3
 8022054:	f106 0c01 	add.w	ip, r6, #1
 8022058:	f103 0801 	add.w	r8, r3, #1
 802205c:	1c65      	adds	r5, r4, #1
 802205e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8022062:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 8022066:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 802206a:	1236      	asrs	r6, r6, #8
 802206c:	121b      	asrs	r3, r3, #8
 802206e:	122d      	asrs	r5, r5, #8
 8022070:	f800 6c02 	strb.w	r6, [r0, #-2]
 8022074:	f800 3c01 	strb.w	r3, [r0, #-1]
 8022078:	f800 5c03 	strb.w	r5, [r0, #-3]
 802207c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802207e:	4586      	cmp	lr, r0
 8022080:	441a      	add	r2, r3
 8022082:	4449      	add	r1, r9
 8022084:	d01b      	beq.n	80220be <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022086:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 802208a:	3003      	adds	r0, #3
 802208c:	9d01      	ldr	r5, [sp, #4]
 802208e:	140b      	asrs	r3, r1, #16
 8022090:	fb04 5303 	mla	r3, r4, r3, r5
 8022094:	1414      	asrs	r4, r2, #16
 8022096:	5d1b      	ldrb	r3, [r3, r4]
 8022098:	9c02      	ldr	r4, [sp, #8]
 802209a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802209e:	0e1f      	lsrs	r7, r3, #24
 80220a0:	2fff      	cmp	r7, #255	@ 0xff
 80220a2:	d1b7      	bne.n	8022014 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80220a4:	0a1d      	lsrs	r5, r3, #8
 80220a6:	0c1c      	lsrs	r4, r3, #16
 80220a8:	f800 3c03 	strb.w	r3, [r0, #-3]
 80220ac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80220ae:	4586      	cmp	lr, r0
 80220b0:	f800 5c02 	strb.w	r5, [r0, #-2]
 80220b4:	f800 4c01 	strb.w	r4, [r0, #-1]
 80220b8:	441a      	add	r2, r3
 80220ba:	4449      	add	r1, r9
 80220bc:	d1e3      	bne.n	8022086 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80220be:	4670      	mov	r0, lr
 80220c0:	e6eb      	b.n	8021e9a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80220c2:	2b00      	cmp	r3, #0
 80220c4:	f77f aee9 	ble.w	8021e9a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80220c8:	4604      	mov	r4, r0
 80220ca:	1415      	asrs	r5, r2, #16
 80220cc:	e724      	b.n	8021f18 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80220ce:	0a1e      	lsrs	r6, r3, #8
 80220d0:	0c1d      	lsrs	r5, r3, #16
 80220d2:	7023      	strb	r3, [r4, #0]
 80220d4:	7066      	strb	r6, [r4, #1]
 80220d6:	70a5      	strb	r5, [r4, #2]
 80220d8:	e772      	b.n	8021fc0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80220da:	bf00      	nop

080220dc <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80220dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220e0:	b089      	sub	sp, #36	@ 0x24
 80220e2:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 80220e6:	9101      	str	r1, [sp, #4]
 80220e8:	ea6f 0a00 	mvn.w	sl, r0
 80220ec:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 80220f0:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80220f2:	9202      	str	r2, [sp, #8]
 80220f4:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 80220f8:	686c      	ldr	r4, [r5, #4]
 80220fa:	682f      	ldr	r7, [r5, #0]
 80220fc:	fb04 2401 	mla	r4, r4, r1, r2
 8022100:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8022102:	b280      	uxth	r0, r0
 8022104:	e9d2 2100 	ldrd	r2, r1, [r2]
 8022108:	3104      	adds	r1, #4
 802210a:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 802210e:	fa5f fa8a 	uxtb.w	sl, sl
 8022112:	9007      	str	r0, [sp, #28]
 8022114:	9105      	str	r1, [sp, #20]
 8022116:	9200      	str	r2, [sp, #0]
 8022118:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 802211c:	9901      	ldr	r1, [sp, #4]
 802211e:	2900      	cmp	r1, #0
 8022120:	dc03      	bgt.n	802212a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8022122:	9902      	ldr	r1, [sp, #8]
 8022124:	2900      	cmp	r1, #0
 8022126:	f340 80b6 	ble.w	8022296 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802212a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802212c:	2b00      	cmp	r3, #0
 802212e:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 8022132:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8022136:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 802213a:	b221      	sxth	r1, r4
 802213c:	fa0f fc86 	sxth.w	ip, r6
 8022140:	f340 80ac 	ble.w	802229c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022144:	1410      	asrs	r0, r2, #16
 8022146:	d406      	bmi.n	8022156 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022148:	4288      	cmp	r0, r1
 802214a:	da04      	bge.n	8022156 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802214c:	ea5f 4925 	movs.w	r9, r5, asr #16
 8022150:	d401      	bmi.n	8022156 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022152:	45e1      	cmp	r9, ip
 8022154:	db3e      	blt.n	80221d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 8022156:	3b01      	subs	r3, #1
 8022158:	4472      	add	r2, lr
 802215a:	4445      	add	r5, r8
 802215c:	f107 0704 	add.w	r7, r7, #4
 8022160:	d1f0      	bne.n	8022144 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022162:	9b01      	ldr	r3, [sp, #4]
 8022164:	2b00      	cmp	r3, #0
 8022166:	f340 8096 	ble.w	8022296 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802216a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802216e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022172:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022176:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802217a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802217e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022182:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022186:	ee76 6a62 	vsub.f32	s13, s12, s5
 802218a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802218e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022192:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022196:	ee16 2a90 	vmov	r2, s13
 802219a:	3b01      	subs	r3, #1
 802219c:	9301      	str	r3, [sp, #4]
 802219e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80221a0:	9902      	ldr	r1, [sp, #8]
 80221a2:	fb92 fef3 	sdiv	lr, r2, r3
 80221a6:	ee17 2a10 	vmov	r2, s14
 80221aa:	eeb0 7a43 	vmov.f32	s14, s6
 80221ae:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80221b2:	ee17 5a10 	vmov	r5, s14
 80221b6:	eeb0 7a62 	vmov.f32	s14, s5
 80221ba:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80221be:	fb92 f8f3 	sdiv	r8, r2, r3
 80221c2:	eeb0 3a67 	vmov.f32	s6, s15
 80221c6:	ee17 2a10 	vmov	r2, s14
 80221ca:	eef0 2a46 	vmov.f32	s5, s12
 80221ce:	bf08      	it	eq
 80221d0:	460b      	moveq	r3, r1
 80221d2:	e7a3      	b.n	802211c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80221d4:	f103 39ff 	add.w	r9, r3, #4294967295
 80221d8:	fb09 2b0e 	mla	fp, r9, lr, r2
 80221dc:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 80221e0:	d566      	bpl.n	80222b0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80221e2:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80221e6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80221e8:	e002      	b.n	80221f0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80221ea:	1410      	asrs	r0, r2, #16
 80221ec:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80221f0:	2800      	cmp	r0, #0
 80221f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80221f6:	4472      	add	r2, lr
 80221f8:	db3f      	blt.n	802227a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221fa:	42a0      	cmp	r0, r4
 80221fc:	da3d      	bge.n	802227a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221fe:	ea5f 4c25 	movs.w	ip, r5, asr #16
 8022202:	d43a      	bmi.n	802227a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022204:	45b4      	cmp	ip, r6
 8022206:	da38      	bge.n	802227a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022208:	9e00      	ldr	r6, [sp, #0]
 802220a:	b224      	sxth	r4, r4
 802220c:	fb0c 6404 	mla	r4, ip, r4, r6
 8022210:	f814 b000 	ldrb.w	fp, [r4, r0]
 8022214:	7838      	ldrb	r0, [r7, #0]
 8022216:	9c05      	ldr	r4, [sp, #20]
 8022218:	fb10 f30a 	smulbb	r3, r0, sl
 802221c:	9306      	str	r3, [sp, #24]
 802221e:	9b07      	ldr	r3, [sp, #28]
 8022220:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8022224:	4618      	mov	r0, r3
 8022226:	eb04 060b 	add.w	r6, r4, fp
 802222a:	78b4      	ldrb	r4, [r6, #2]
 802222c:	7876      	ldrb	r6, [r6, #1]
 802222e:	fb14 fc03 	smulbb	ip, r4, r3
 8022232:	9c05      	ldr	r4, [sp, #20]
 8022234:	fb16 f603 	smulbb	r6, r6, r3
 8022238:	f814 400b 	ldrb.w	r4, [r4, fp]
 802223c:	9b06      	ldr	r3, [sp, #24]
 802223e:	f897 b001 	ldrb.w	fp, [r7, #1]
 8022242:	fb04 3000 	mla	r0, r4, r0, r3
 8022246:	78bc      	ldrb	r4, [r7, #2]
 8022248:	fb0b 660a 	mla	r6, fp, sl, r6
 802224c:	fb04 c40a 	mla	r4, r4, sl, ip
 8022250:	b2b6      	uxth	r6, r6
 8022252:	b280      	uxth	r0, r0
 8022254:	b2a4      	uxth	r4, r4
 8022256:	f106 0c01 	add.w	ip, r6, #1
 802225a:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 802225e:	f104 0b01 	add.w	fp, r4, #1
 8022262:	f100 0c01 	add.w	ip, r0, #1
 8022266:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 802226a:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802226e:	1236      	asrs	r6, r6, #8
 8022270:	1224      	asrs	r4, r4, #8
 8022272:	1200      	asrs	r0, r0, #8
 8022274:	707e      	strb	r6, [r7, #1]
 8022276:	70bc      	strb	r4, [r7, #2]
 8022278:	7038      	strb	r0, [r7, #0]
 802227a:	f1b9 3fff 	cmp.w	r9, #4294967295
 802227e:	f107 0704 	add.w	r7, r7, #4
 8022282:	4445      	add	r5, r8
 8022284:	d1b1      	bne.n	80221ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022286:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 802228a:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 802228e:	9b01      	ldr	r3, [sp, #4]
 8022290:	2b00      	cmp	r3, #0
 8022292:	f73f af6a 	bgt.w	802216a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022296:	b009      	add	sp, #36	@ 0x24
 8022298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802229c:	f43f af61 	beq.w	8022162 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222a0:	f103 39ff 	add.w	r9, r3, #4294967295
 80222a4:	fb09 2b0e 	mla	fp, r9, lr, r2
 80222a8:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 80222ac:	f53f af59 	bmi.w	8022162 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222b0:	4559      	cmp	r1, fp
 80222b2:	dd57      	ble.n	8022364 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80222b4:	fb09 5008 	mla	r0, r9, r8, r5
 80222b8:	1400      	asrs	r0, r0, #16
 80222ba:	d453      	bmi.n	8022364 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80222bc:	4560      	cmp	r0, ip
 80222be:	da51      	bge.n	8022364 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80222c0:	2b00      	cmp	r3, #0
 80222c2:	f77f af4e 	ble.w	8022162 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222c6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80222ca:	f107 0c04 	add.w	ip, r7, #4
 80222ce:	f8dd b014 	ldr.w	fp, [sp, #20]
 80222d2:	460b      	mov	r3, r1
 80222d4:	9f07      	ldr	r7, [sp, #28]
 80222d6:	e002      	b.n	80222de <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80222d8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80222da:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80222de:	9800      	ldr	r0, [sp, #0]
 80222e0:	1429      	asrs	r1, r5, #16
 80222e2:	fb03 0301 	mla	r3, r3, r1, r0
 80222e6:	1411      	asrs	r1, r2, #16
 80222e8:	5c5e      	ldrb	r6, [r3, r1]
 80222ea:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 80222ee:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80222f2:	eb0b 0006 	add.w	r0, fp, r6
 80222f6:	7881      	ldrb	r1, [r0, #2]
 80222f8:	7840      	ldrb	r0, [r0, #1]
 80222fa:	fb13 f30a 	smulbb	r3, r3, sl
 80222fe:	fb10 f007 	smulbb	r0, r0, r7
 8022302:	fb11 f407 	smulbb	r4, r1, r7
 8022306:	f81b 1006 	ldrb.w	r1, [fp, r6]
 802230a:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 802230e:	fb01 3307 	mla	r3, r1, r7, r3
 8022312:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 8022316:	fb06 000a 	mla	r0, r6, sl, r0
 802231a:	fb01 410a 	mla	r1, r1, sl, r4
 802231e:	b280      	uxth	r0, r0
 8022320:	b29b      	uxth	r3, r3
 8022322:	b289      	uxth	r1, r1
 8022324:	1c44      	adds	r4, r0, #1
 8022326:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802232a:	1c4e      	adds	r6, r1, #1
 802232c:	1c5c      	adds	r4, r3, #1
 802232e:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 8022332:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8022336:	f109 39ff 	add.w	r9, r9, #4294967295
 802233a:	1200      	asrs	r0, r0, #8
 802233c:	1209      	asrs	r1, r1, #8
 802233e:	121b      	asrs	r3, r3, #8
 8022340:	f1b9 3fff 	cmp.w	r9, #4294967295
 8022344:	f80c 0c03 	strb.w	r0, [ip, #-3]
 8022348:	f80c 1c02 	strb.w	r1, [ip, #-2]
 802234c:	f80c 3c04 	strb.w	r3, [ip, #-4]
 8022350:	4445      	add	r5, r8
 8022352:	4472      	add	r2, lr
 8022354:	f10c 0c04 	add.w	ip, ip, #4
 8022358:	d1be      	bne.n	80222d8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802235a:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 802235e:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 8022362:	e6fe      	b.n	8022162 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022364:	2b00      	cmp	r3, #0
 8022366:	f77f aefc 	ble.w	8022162 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802236a:	1410      	asrs	r0, r2, #16
 802236c:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8022370:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8022372:	e73d      	b.n	80221f0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

08022374 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022378:	468a      	mov	sl, r1
 802237a:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802237e:	46d1      	mov	r9, sl
 8022380:	b087      	sub	sp, #28
 8022382:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 8022386:	684d      	ldr	r5, [r1, #4]
 8022388:	9203      	str	r2, [sp, #12]
 802238a:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 802238e:	fb05 4402 	mla	r4, r5, r2, r4
 8022392:	e9de 2000 	ldrd	r2, r0, [lr]
 8022396:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802239a:	680d      	ldr	r5, [r1, #0]
 802239c:	f100 0b04 	add.w	fp, r0, #4
 80223a0:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 80223a4:	9205      	str	r2, [sp, #20]
 80223a6:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 80223aa:	f1b9 0f00 	cmp.w	r9, #0
 80223ae:	dc03      	bgt.n	80223b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80223b0:	9803      	ldr	r0, [sp, #12]
 80223b2:	2800      	cmp	r0, #0
 80223b4:	f340 8091 	ble.w	80224da <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80223b8:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 80223bc:	2b00      	cmp	r3, #0
 80223be:	fa0f f088 	sxth.w	r0, r8
 80223c2:	fa0f f48a 	sxth.w	r4, sl
 80223c6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80223ca:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80223ce:	9001      	str	r0, [sp, #4]
 80223d0:	9402      	str	r4, [sp, #8]
 80223d2:	f340 8085 	ble.w	80224e0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80223d6:	1414      	asrs	r4, r2, #16
 80223d8:	d408      	bmi.n	80223ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223da:	9801      	ldr	r0, [sp, #4]
 80223dc:	4284      	cmp	r4, r0
 80223de:	da05      	bge.n	80223ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223e0:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80223e4:	d402      	bmi.n	80223ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223e6:	9802      	ldr	r0, [sp, #8]
 80223e8:	4584      	cmp	ip, r0
 80223ea:	db3b      	blt.n	8022464 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 80223ec:	3b01      	subs	r3, #1
 80223ee:	4432      	add	r2, r6
 80223f0:	4439      	add	r1, r7
 80223f2:	f105 0504 	add.w	r5, r5, #4
 80223f6:	d1ee      	bne.n	80223d6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80223f8:	f1b9 0f00 	cmp.w	r9, #0
 80223fc:	dd6d      	ble.n	80224da <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80223fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022402:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022406:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802240a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802240e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022412:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022416:	ee76 6a62 	vsub.f32	s13, s12, s5
 802241a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802241e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022422:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022426:	ee16 2a90 	vmov	r2, s13
 802242a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802242c:	9803      	ldr	r0, [sp, #12]
 802242e:	fb92 f6f3 	sdiv	r6, r2, r3
 8022432:	ee17 2a10 	vmov	r2, s14
 8022436:	eeb0 7a43 	vmov.f32	s14, s6
 802243a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802243e:	ee17 1a10 	vmov	r1, s14
 8022442:	eeb0 7a62 	vmov.f32	s14, s5
 8022446:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802244a:	f1b9 0901 	subs.w	r9, r9, #1
 802244e:	fb92 f7f3 	sdiv	r7, r2, r3
 8022452:	eeb0 3a67 	vmov.f32	s6, s15
 8022456:	ee17 2a10 	vmov	r2, s14
 802245a:	eef0 2a46 	vmov.f32	s5, s12
 802245e:	bf08      	it	eq
 8022460:	4603      	moveq	r3, r0
 8022462:	e7a2      	b.n	80223aa <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8022464:	f103 3cff 	add.w	ip, r3, #4294967295
 8022468:	9404      	str	r4, [sp, #16]
 802246a:	fb06 240c 	mla	r4, r6, ip, r2
 802246e:	1424      	asrs	r4, r4, #16
 8022470:	d578      	bpl.n	8022564 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022472:	9613      	str	r6, [sp, #76]	@ 0x4c
 8022474:	2000      	movs	r0, #0
 8022476:	4646      	mov	r6, r8
 8022478:	46d4      	mov	ip, sl
 802247a:	9c04      	ldr	r4, [sp, #16]
 802247c:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8022480:	e002      	b.n	8022488 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8022482:	1414      	asrs	r4, r2, #16
 8022484:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 8022488:	2c00      	cmp	r4, #0
 802248a:	4442      	add	r2, r8
 802248c:	db1c      	blt.n	80224c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802248e:	42b4      	cmp	r4, r6
 8022490:	da1a      	bge.n	80224c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022492:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8022496:	d417      	bmi.n	80224c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022498:	45e2      	cmp	sl, ip
 802249a:	da15      	bge.n	80224c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802249c:	fa0f fc86 	sxth.w	ip, r6
 80224a0:	9e05      	ldr	r6, [sp, #20]
 80224a2:	fb0a 6c0c 	mla	ip, sl, ip, r6
 80224a6:	f81c 4004 	ldrb.w	r4, [ip, r4]
 80224aa:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 80224ae:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80224b2:	f81b c004 	ldrb.w	ip, [fp, r4]
 80224b6:	445c      	add	r4, fp
 80224b8:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 80224bc:	f894 c001 	ldrb.w	ip, [r4, #1]
 80224c0:	f886 c001 	strb.w	ip, [r6, #1]
 80224c4:	78a4      	ldrb	r4, [r4, #2]
 80224c6:	70b4      	strb	r4, [r6, #2]
 80224c8:	3001      	adds	r0, #1
 80224ca:	4283      	cmp	r3, r0
 80224cc:	4439      	add	r1, r7
 80224ce:	d1d8      	bne.n	8022482 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80224d0:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 80224d4:	f1b9 0f00 	cmp.w	r9, #0
 80224d8:	dc91      	bgt.n	80223fe <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80224da:	b007      	add	sp, #28
 80224dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224e0:	d08a      	beq.n	80223f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224e2:	f103 3cff 	add.w	ip, r3, #4294967295
 80224e6:	fb0c 2406 	mla	r4, ip, r6, r2
 80224ea:	1424      	asrs	r4, r4, #16
 80224ec:	d484      	bmi.n	80223f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224ee:	42a0      	cmp	r0, r4
 80224f0:	dd32      	ble.n	8022558 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224f2:	fb07 140c 	mla	r4, r7, ip, r1
 80224f6:	1420      	asrs	r0, r4, #16
 80224f8:	d42e      	bmi.n	8022558 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224fa:	9c02      	ldr	r4, [sp, #8]
 80224fc:	4284      	cmp	r4, r0
 80224fe:	dd2b      	ble.n	8022558 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022500:	2b00      	cmp	r3, #0
 8022502:	f77f af79 	ble.w	80223f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022506:	1d2c      	adds	r4, r5, #4
 8022508:	f8dd a014 	ldr.w	sl, [sp, #20]
 802250c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8022510:	e001      	b.n	8022516 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022512:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 8022516:	1408      	asrs	r0, r1, #16
 8022518:	fb08 a000 	mla	r0, r8, r0, sl
 802251c:	ea4f 4822 	mov.w	r8, r2, asr #16
 8022520:	f810 0008 	ldrb.w	r0, [r0, r8]
 8022524:	f10c 3cff 	add.w	ip, ip, #4294967295
 8022528:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802252c:	f81b 8000 	ldrb.w	r8, [fp, r0]
 8022530:	4458      	add	r0, fp
 8022532:	f804 8c04 	strb.w	r8, [r4, #-4]
 8022536:	f890 8001 	ldrb.w	r8, [r0, #1]
 802253a:	f1bc 3fff 	cmp.w	ip, #4294967295
 802253e:	f804 8c03 	strb.w	r8, [r4, #-3]
 8022542:	7880      	ldrb	r0, [r0, #2]
 8022544:	4439      	add	r1, r7
 8022546:	f804 0c02 	strb.w	r0, [r4, #-2]
 802254a:	4432      	add	r2, r6
 802254c:	f104 0404 	add.w	r4, r4, #4
 8022550:	d1df      	bne.n	8022512 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022552:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8022556:	e7bd      	b.n	80224d4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8022558:	2b00      	cmp	r3, #0
 802255a:	f77f af4d 	ble.w	80223f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802255e:	1410      	asrs	r0, r2, #16
 8022560:	9004      	str	r0, [sp, #16]
 8022562:	e786      	b.n	8022472 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 8022564:	9801      	ldr	r0, [sp, #4]
 8022566:	e7c2      	b.n	80224ee <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

08022568 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022568:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802256c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022570:	b08b      	sub	sp, #44	@ 0x2c
 8022572:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8022576:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 802257a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802257c:	6854      	ldr	r4, [r2, #4]
 802257e:	6816      	ldr	r6, [r2, #0]
 8022580:	fb04 1000 	mla	r0, r4, r0, r1
 8022584:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 8022588:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802258a:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 802258e:	e9d2 2500 	ldrd	r2, r5, [r2]
 8022592:	3504      	adds	r5, #4
 8022594:	9703      	str	r7, [sp, #12]
 8022596:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 802259a:	9507      	str	r5, [sp, #28]
 802259c:	9206      	str	r2, [sp, #24]
 802259e:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 80225a2:	9d01      	ldr	r5, [sp, #4]
 80225a4:	2d00      	cmp	r5, #0
 80225a6:	dc03      	bgt.n	80225b0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80225a8:	9d02      	ldr	r5, [sp, #8]
 80225aa:	2d00      	cmp	r5, #0
 80225ac:	f340 80d5 	ble.w	802275a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80225b0:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 80225b2:	2b00      	cmp	r3, #0
 80225b4:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 80225b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80225bc:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80225c0:	b23d      	sxth	r5, r7
 80225c2:	fa0f fe8c 	sxth.w	lr, ip
 80225c6:	f340 80cb 	ble.w	8022760 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80225ca:	1416      	asrs	r6, r2, #16
 80225cc:	d406      	bmi.n	80225dc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80225ce:	42ae      	cmp	r6, r5
 80225d0:	da04      	bge.n	80225dc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80225d2:	ea5f 4821 	movs.w	r8, r1, asr #16
 80225d6:	d401      	bmi.n	80225dc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80225d8:	45f0      	cmp	r8, lr
 80225da:	db3c      	blt.n	8022656 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 80225dc:	3b01      	subs	r3, #1
 80225de:	4422      	add	r2, r4
 80225e0:	4459      	add	r1, fp
 80225e2:	f100 0004 	add.w	r0, r0, #4
 80225e6:	d1f0      	bne.n	80225ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80225e8:	9b01      	ldr	r3, [sp, #4]
 80225ea:	2b00      	cmp	r3, #0
 80225ec:	f340 80b5 	ble.w	802275a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80225f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225f8:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80225fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022600:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022604:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022608:	ee76 6a62 	vsub.f32	s13, s12, s5
 802260c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8022610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022614:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022618:	ee16 2a90 	vmov	r2, s13
 802261c:	3b01      	subs	r3, #1
 802261e:	9301      	str	r3, [sp, #4]
 8022620:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022622:	9d02      	ldr	r5, [sp, #8]
 8022624:	fb92 f4f3 	sdiv	r4, r2, r3
 8022628:	ee17 2a10 	vmov	r2, s14
 802262c:	eeb0 7a43 	vmov.f32	s14, s6
 8022630:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022634:	ee17 1a10 	vmov	r1, s14
 8022638:	eeb0 7a62 	vmov.f32	s14, s5
 802263c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022640:	fb92 fbf3 	sdiv	fp, r2, r3
 8022644:	eeb0 3a67 	vmov.f32	s6, s15
 8022648:	ee17 2a10 	vmov	r2, s14
 802264c:	eef0 2a46 	vmov.f32	s5, s12
 8022650:	bf08      	it	eq
 8022652:	462b      	moveq	r3, r5
 8022654:	e7a5      	b.n	80225a2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022656:	f103 38ff 	add.w	r8, r3, #4294967295
 802265a:	fb08 2904 	mla	r9, r8, r4, r2
 802265e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8022662:	f140 8087 	bpl.w	8022774 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8022666:	f1c3 0900 	rsb	r9, r3, #0
 802266a:	4698      	mov	r8, r3
 802266c:	2500      	movs	r5, #0
 802266e:	9004      	str	r0, [sp, #16]
 8022670:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022672:	e002      	b.n	802267a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8022674:	1416      	asrs	r6, r2, #16
 8022676:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 802267a:	2e00      	cmp	r6, #0
 802267c:	4422      	add	r2, r4
 802267e:	db61      	blt.n	8022744 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022680:	42be      	cmp	r6, r7
 8022682:	da5f      	bge.n	8022744 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022684:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8022688:	d45c      	bmi.n	8022744 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802268a:	45e6      	cmp	lr, ip
 802268c:	b23f      	sxth	r7, r7
 802268e:	da59      	bge.n	8022744 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022690:	9806      	ldr	r0, [sp, #24]
 8022692:	fb0e 0707 	mla	r7, lr, r7, r0
 8022696:	9807      	ldr	r0, [sp, #28]
 8022698:	5dbe      	ldrb	r6, [r7, r6]
 802269a:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 802269e:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 80226a2:	9804      	ldr	r0, [sp, #16]
 80226a4:	9705      	str	r7, [sp, #20]
 80226a6:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 80226aa:	0e37      	lsrs	r7, r6, #24
 80226ac:	9008      	str	r0, [sp, #32]
 80226ae:	d049      	beq.n	8022744 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80226b0:	9803      	ldr	r0, [sp, #12]
 80226b2:	fa5f fa86 	uxtb.w	sl, r6
 80226b6:	fb00 f707 	mul.w	r7, r0, r7
 80226ba:	9805      	ldr	r0, [sp, #20]
 80226bc:	f107 0c01 	add.w	ip, r7, #1
 80226c0:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 80226c4:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80226c8:	4686      	mov	lr, r0
 80226ca:	ea6f 070c 	mvn.w	r7, ip
 80226ce:	fa1f fc8c 	uxth.w	ip, ip
 80226d2:	fb1a fa0c 	smulbb	sl, sl, ip
 80226d6:	9804      	ldr	r0, [sp, #16]
 80226d8:	b2ff      	uxtb	r7, r7
 80226da:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 80226de:	9805      	ldr	r0, [sp, #20]
 80226e0:	fb0e ae07 	mla	lr, lr, r7, sl
 80226e4:	fa1f fe8e 	uxth.w	lr, lr
 80226e8:	f10e 0a01 	add.w	sl, lr, #1
 80226ec:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 80226f0:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 80226f4:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80226f8:	fb16 f60c 	smulbb	r6, r6, ip
 80226fc:	9609      	str	r6, [sp, #36]	@ 0x24
 80226fe:	4606      	mov	r6, r0
 8022700:	9804      	ldr	r0, [sp, #16]
 8022702:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8022706:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 802270a:	fb1a fa0c 	smulbb	sl, sl, ip
 802270e:	9808      	ldr	r0, [sp, #32]
 8022710:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8022712:	f890 e002 	ldrb.w	lr, [r0, #2]
 8022716:	f890 c001 	ldrb.w	ip, [r0, #1]
 802271a:	fb0e 6607 	mla	r6, lr, r7, r6
 802271e:	fb0c ac07 	mla	ip, ip, r7, sl
 8022722:	b2b6      	uxth	r6, r6
 8022724:	fa1f fe8c 	uxth.w	lr, ip
 8022728:	1c77      	adds	r7, r6, #1
 802272a:	f10e 0c01 	add.w	ip, lr, #1
 802272e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022732:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8022736:	ea4f 272c 	mov.w	r7, ip, asr #8
 802273a:	ea4f 2c26 	mov.w	ip, r6, asr #8
 802273e:	7047      	strb	r7, [r0, #1]
 8022740:	f880 c002 	strb.w	ip, [r0, #2]
 8022744:	3d01      	subs	r5, #1
 8022746:	45a9      	cmp	r9, r5
 8022748:	4459      	add	r1, fp
 802274a:	d193      	bne.n	8022674 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802274c:	9b01      	ldr	r3, [sp, #4]
 802274e:	9804      	ldr	r0, [sp, #16]
 8022750:	2b00      	cmp	r3, #0
 8022752:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 8022756:	f73f af4b 	bgt.w	80225f0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802275a:	b00b      	add	sp, #44	@ 0x2c
 802275c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022760:	f43f af42 	beq.w	80225e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022764:	f103 38ff 	add.w	r8, r3, #4294967295
 8022768:	fb08 2904 	mla	r9, r8, r4, r2
 802276c:	ea5f 4929 	movs.w	r9, r9, asr #16
 8022770:	f53f af3a 	bmi.w	80225e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022774:	454d      	cmp	r5, r9
 8022776:	dd68      	ble.n	802284a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022778:	fb08 160b 	mla	r6, r8, fp, r1
 802277c:	1436      	asrs	r6, r6, #16
 802277e:	d464      	bmi.n	802284a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022780:	4576      	cmp	r6, lr
 8022782:	da62      	bge.n	802284a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022784:	2b00      	cmp	r3, #0
 8022786:	f77f af2f 	ble.w	80225e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802278a:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 802278e:	f100 0e04 	add.w	lr, r0, #4
 8022792:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8022796:	e002      	b.n	802279e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022798:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802279a:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802279e:	140b      	asrs	r3, r1, #16
 80227a0:	fb05 6303 	mla	r3, r5, r3, r6
 80227a4:	1410      	asrs	r0, r2, #16
 80227a6:	5c1b      	ldrb	r3, [r3, r0]
 80227a8:	f108 38ff 	add.w	r8, r8, #4294967295
 80227ac:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 80227b0:	4422      	add	r2, r4
 80227b2:	0e18      	lsrs	r0, r3, #24
 80227b4:	4459      	add	r1, fp
 80227b6:	d03e      	beq.n	8022836 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 80227b8:	9d03      	ldr	r5, [sp, #12]
 80227ba:	fa5f fc83 	uxtb.w	ip, r3
 80227be:	fb05 f000 	mul.w	r0, r5, r0
 80227c2:	f100 0901 	add.w	r9, r0, #1
 80227c6:	eb09 2920 	add.w	r9, r9, r0, asr #8
 80227ca:	ea4f 2929 	mov.w	r9, r9, asr #8
 80227ce:	ea6f 0009 	mvn.w	r0, r9
 80227d2:	fa1f f989 	uxth.w	r9, r9
 80227d6:	fb1c fc09 	smulbb	ip, ip, r9
 80227da:	f3c3 2507 	ubfx	r5, r3, #8, #8
 80227de:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80227e2:	fb15 fa09 	smulbb	sl, r5, r9
 80227e6:	fb13 f309 	smulbb	r3, r3, r9
 80227ea:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 80227ee:	b2c0      	uxtb	r0, r0
 80227f0:	fb09 cc00 	mla	ip, r9, r0, ip
 80227f4:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 80227f8:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 80227fc:	fb05 a500 	mla	r5, r5, r0, sl
 8022800:	fb09 3300 	mla	r3, r9, r0, r3
 8022804:	fa1f fc8c 	uxth.w	ip, ip
 8022808:	b2ad      	uxth	r5, r5
 802280a:	b29b      	uxth	r3, r3
 802280c:	f10c 0a01 	add.w	sl, ip, #1
 8022810:	f105 0901 	add.w	r9, r5, #1
 8022814:	1c58      	adds	r0, r3, #1
 8022816:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 802281a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 802281e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022822:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8022826:	122d      	asrs	r5, r5, #8
 8022828:	121b      	asrs	r3, r3, #8
 802282a:	f80e cc04 	strb.w	ip, [lr, #-4]
 802282e:	f80e 5c03 	strb.w	r5, [lr, #-3]
 8022832:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8022836:	f1b8 3fff 	cmp.w	r8, #4294967295
 802283a:	f10e 0e04 	add.w	lr, lr, #4
 802283e:	d1ab      	bne.n	8022798 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8022840:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8022844:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8022848:	e6ce      	b.n	80225e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802284a:	2b00      	cmp	r3, #0
 802284c:	f77f aecc 	ble.w	80225e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022850:	1416      	asrs	r6, r2, #16
 8022852:	e708      	b.n	8022666 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

08022854 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022854:	4770      	bx	lr
 8022856:	bf00      	nop

08022858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022858:	4770      	bx	lr
 802285a:	bf00      	nop

0802285c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802285c:	4770      	bx	lr
 802285e:	bf00      	nop

08022860 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022860:	4770      	bx	lr
 8022862:	bf00      	nop

08022864 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022864:	4770      	bx	lr
 8022866:	bf00      	nop

08022868 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022868:	4770      	bx	lr
 802286a:	bf00      	nop

0802286c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802286c:	4770      	bx	lr
 802286e:	bf00      	nop

08022870 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022870:	4770      	bx	lr
 8022872:	bf00      	nop

08022874 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022874:	4770      	bx	lr
 8022876:	bf00      	nop

08022878 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022878:	4770      	bx	lr
 802287a:	bf00      	nop

0802287c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802287c:	4770      	bx	lr
 802287e:	bf00      	nop

08022880 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022880:	4770      	bx	lr
 8022882:	bf00      	nop

08022884 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022884:	4770      	bx	lr
 8022886:	bf00      	nop

08022888 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022888:	4770      	bx	lr
 802288a:	bf00      	nop

0802288c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802288c:	4770      	bx	lr
 802288e:	bf00      	nop

08022890 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022890:	4770      	bx	lr
 8022892:	bf00      	nop

08022894 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022894:	4770      	bx	lr
 8022896:	bf00      	nop

08022898 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022898:	4770      	bx	lr
 802289a:	bf00      	nop

0802289c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802289c:	4770      	bx	lr
 802289e:	bf00      	nop

080228a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80228a0:	4770      	bx	lr
 80228a2:	bf00      	nop

080228a4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80228a4:	4770      	bx	lr
 80228a6:	bf00      	nop

080228a8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80228a8:	4770      	bx	lr
 80228aa:	bf00      	nop

080228ac <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 80228ac:	b508      	push	{r3, lr}
 80228ae:	4b0d      	ldr	r3, [pc, #52]	@ (80228e4 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x38>)
 80228b0:	881b      	ldrh	r3, [r3, #0]
 80228b2:	b17b      	cbz	r3, 80228d4 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x28>
 80228b4:	7b02      	ldrb	r2, [r0, #12]
 80228b6:	2a02      	cmp	r2, #2
 80228b8:	d007      	beq.n	80228ca <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1e>
 80228ba:	2a01      	cmp	r2, #1
 80228bc:	bf0c      	ite	eq
 80228be:	2003      	moveq	r0, #3
 80228c0:	2002      	movne	r0, #2
 80228c2:	fb13 f000 	smulbb	r0, r3, r0
 80228c6:	b280      	uxth	r0, r0
 80228c8:	bd08      	pop	{r3, pc}
 80228ca:	2004      	movs	r0, #4
 80228cc:	fb13 f000 	smulbb	r0, r3, r0
 80228d0:	b280      	uxth	r0, r0
 80228d2:	bd08      	pop	{r3, pc}
 80228d4:	4b04      	ldr	r3, [pc, #16]	@ (80228e8 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x3c>)
 80228d6:	4a05      	ldr	r2, [pc, #20]	@ (80228ec <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x40>)
 80228d8:	f240 110f 	movw	r1, #271	@ 0x10f
 80228dc:	4804      	ldr	r0, [pc, #16]	@ (80228f0 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x44>)
 80228de:	f00f fe13 	bl	8032508 <__assert_func>
 80228e2:	bf00      	nop
 80228e4:	20082f02 	.word	0x20082f02
 80228e8:	08036828 	.word	0x08036828
 80228ec:	08037fec 	.word	0x08037fec
 80228f0:	0803686c 	.word	0x0803686c

080228f4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 80228f4:	b530      	push	{r4, r5, lr}
 80228f6:	4b26      	ldr	r3, [pc, #152]	@ (8022990 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x9c>)
 80228f8:	b083      	sub	sp, #12
 80228fa:	681c      	ldr	r4, [r3, #0]
 80228fc:	2c00      	cmp	r4, #0
 80228fe:	d040      	beq.n	8022982 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8e>
 8022900:	4b24      	ldr	r3, [pc, #144]	@ (8022994 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa0>)
 8022902:	4605      	mov	r5, r0
 8022904:	781b      	ldrb	r3, [r3, #0]
 8022906:	b9f3      	cbnz	r3, 8022946 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x52>
 8022908:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 802290a:	7b2a      	ldrb	r2, [r5, #12]
 802290c:	2a01      	cmp	r2, #1
 802290e:	d025      	beq.n	802295c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x68>
 8022910:	d30d      	bcc.n	802292e <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x3a>
 8022912:	2a02      	cmp	r2, #2
 8022914:	d12f      	bne.n	8022976 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x82>
 8022916:	4920      	ldr	r1, [pc, #128]	@ (8022998 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022918:	4a20      	ldr	r2, [pc, #128]	@ (802299c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 802291a:	8809      	ldrh	r1, [r1, #0]
 802291c:	8812      	ldrh	r2, [r2, #0]
 802291e:	008c      	lsls	r4, r1, #2
 8022920:	4618      	mov	r0, r3
 8022922:	9400      	str	r4, [sp, #0]
 8022924:	2310      	movs	r3, #16
 8022926:	f7ee fb51 	bl	8010fcc <nema_bind_dst_tex>
 802292a:	b003      	add	sp, #12
 802292c:	bd30      	pop	{r4, r5, pc}
 802292e:	491a      	ldr	r1, [pc, #104]	@ (8022998 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022930:	4a1a      	ldr	r2, [pc, #104]	@ (802299c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022932:	8809      	ldrh	r1, [r1, #0]
 8022934:	8812      	ldrh	r2, [r2, #0]
 8022936:	004c      	lsls	r4, r1, #1
 8022938:	4618      	mov	r0, r3
 802293a:	9400      	str	r4, [sp, #0]
 802293c:	2304      	movs	r3, #4
 802293e:	f7ee fb45 	bl	8010fcc <nema_bind_dst_tex>
 8022942:	b003      	add	sp, #12
 8022944:	bd30      	pop	{r4, r5, pc}
 8022946:	6823      	ldr	r3, [r4, #0]
 8022948:	4620      	mov	r0, r4
 802294a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802294c:	4798      	blx	r3
 802294e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8022950:	4283      	cmp	r3, r0
 8022952:	d1da      	bne.n	802290a <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x16>
 8022954:	7b2a      	ldrb	r2, [r5, #12]
 8022956:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8022958:	2a01      	cmp	r2, #1
 802295a:	d1d9      	bne.n	8022910 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x1c>
 802295c:	490e      	ldr	r1, [pc, #56]	@ (8022998 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 802295e:	4a0f      	ldr	r2, [pc, #60]	@ (802299c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022960:	8809      	ldrh	r1, [r1, #0]
 8022962:	8812      	ldrh	r2, [r2, #0]
 8022964:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8022968:	4618      	mov	r0, r3
 802296a:	9400      	str	r4, [sp, #0]
 802296c:	2339      	movs	r3, #57	@ 0x39
 802296e:	f7ee fb2d 	bl	8010fcc <nema_bind_dst_tex>
 8022972:	b003      	add	sp, #12
 8022974:	bd30      	pop	{r4, r5, pc}
 8022976:	4b0a      	ldr	r3, [pc, #40]	@ (80229a0 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xac>)
 8022978:	4a0a      	ldr	r2, [pc, #40]	@ (80229a4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb0>)
 802297a:	2141      	movs	r1, #65	@ 0x41
 802297c:	480a      	ldr	r0, [pc, #40]	@ (80229a8 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb4>)
 802297e:	f00f fdc3 	bl	8032508 <__assert_func>
 8022982:	4b0a      	ldr	r3, [pc, #40]	@ (80229ac <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb8>)
 8022984:	4a0a      	ldr	r2, [pc, #40]	@ (80229b0 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xbc>)
 8022986:	217c      	movs	r1, #124	@ 0x7c
 8022988:	480a      	ldr	r0, [pc, #40]	@ (80229b4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xc0>)
 802298a:	f00f fdbd 	bl	8032508 <__assert_func>
 802298e:	bf00      	nop
 8022990:	200833a8 	.word	0x200833a8
 8022994:	20082f06 	.word	0x20082f06
 8022998:	20082f02 	.word	0x20082f02
 802299c:	20082f04 	.word	0x20082f04
 80229a0:	080362a8 	.word	0x080362a8
 80229a4:	08036e20 	.word	0x08036e20
 80229a8:	080362f0 	.word	0x080362f0
 80229ac:	0803624c 	.word	0x0803624c
 80229b0:	08036ab8 	.word	0x08036ab8
 80229b4:	08036274 	.word	0x08036274

080229b8 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 80229b8:	2b00      	cmp	r3, #0
 80229ba:	d05b      	beq.n	8022a74 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>
 80229bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80229c0:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 80229c4:	b085      	sub	sp, #20
 80229c6:	2c00      	cmp	r4, #0
 80229c8:	dd51      	ble.n	8022a6e <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 80229ca:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 80229ce:	2c00      	cmp	r4, #0
 80229d0:	dd4d      	ble.n	8022a6e <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 80229d2:	4616      	mov	r6, r2
 80229d4:	4605      	mov	r5, r0
 80229d6:	6808      	ldr	r0, [r1, #0]
 80229d8:	6849      	ldr	r1, [r1, #4]
 80229da:	461c      	mov	r4, r3
 80229dc:	4f29      	ldr	r7, [pc, #164]	@ (8022a84 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xcc>)
 80229de:	ab02      	add	r3, sp, #8
 80229e0:	c303      	stmia	r3!, {r0, r1}
 80229e2:	a802      	add	r0, sp, #8
 80229e4:	f7ea f9b4 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80229e8:	6838      	ldr	r0, [r7, #0]
 80229ea:	f3c6 4807 	ubfx	r8, r6, #16, #8
 80229ee:	f3c6 2907 	ubfx	r9, r6, #8, #8
 80229f2:	b2f6      	uxtb	r6, r6
 80229f4:	2800      	cmp	r0, #0
 80229f6:	d03e      	beq.n	8022a76 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 80229f8:	f7fe f8f6 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80229fc:	682b      	ldr	r3, [r5, #0]
 80229fe:	4628      	mov	r0, r5
 8022a00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022a02:	4798      	blx	r3
 8022a04:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022a08:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022a0c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022a10:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022a14:	f7ee f970 	bl	8010cf8 <nema_set_clip>
 8022a18:	f04f 33ff 	mov.w	r3, #4294967295
 8022a1c:	2cff      	cmp	r4, #255	@ 0xff
 8022a1e:	bf0c      	ite	eq
 8022a20:	2001      	moveq	r0, #1
 8022a22:	4819      	ldrne	r0, [pc, #100]	@ (8022a88 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd0>)
 8022a24:	461a      	mov	r2, r3
 8022a26:	2100      	movs	r1, #0
 8022a28:	f7fb fb02 	bl	801e030 <nema_set_blend>
 8022a2c:	2200      	movs	r2, #0
 8022a2e:	4623      	mov	r3, r4
 8022a30:	4611      	mov	r1, r2
 8022a32:	4610      	mov	r0, r2
 8022a34:	f7ee fa3e 	bl	8010eb4 <nema_rgba>
 8022a38:	f7fb fec0 	bl	801e7bc <nema_set_const_color>
 8022a3c:	4632      	mov	r2, r6
 8022a3e:	4649      	mov	r1, r9
 8022a40:	4640      	mov	r0, r8
 8022a42:	23ff      	movs	r3, #255	@ 0xff
 8022a44:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022a48:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022a4c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022a50:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8022a54:	f7ee fa2e 	bl	8010eb4 <nema_rgba>
 8022a58:	4643      	mov	r3, r8
 8022a5a:	9000      	str	r0, [sp, #0]
 8022a5c:	4632      	mov	r2, r6
 8022a5e:	4620      	mov	r0, r4
 8022a60:	4629      	mov	r1, r5
 8022a62:	f7ee fc77 	bl	8011354 <nema_fill_rect>
 8022a66:	6838      	ldr	r0, [r7, #0]
 8022a68:	b128      	cbz	r0, 8022a76 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8022a6a:	f7fe f8dd 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022a6e:	b005      	add	sp, #20
 8022a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022a74:	4770      	bx	lr
 8022a76:	4b05      	ldr	r3, [pc, #20]	@ (8022a8c <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd4>)
 8022a78:	4a05      	ldr	r2, [pc, #20]	@ (8022a90 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd8>)
 8022a7a:	217c      	movs	r1, #124	@ 0x7c
 8022a7c:	4805      	ldr	r0, [pc, #20]	@ (8022a94 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xdc>)
 8022a7e:	f00f fd43 	bl	8032508 <__assert_func>
 8022a82:	bf00      	nop
 8022a84:	200833a8 	.word	0x200833a8
 8022a88:	08000504 	.word	0x08000504
 8022a8c:	0803624c 	.word	0x0803624c
 8022a90:	08036ab8 	.word	0x08036ab8
 8022a94:	08036274 	.word	0x08036274

08022a98 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8022a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a9c:	b085      	sub	sp, #20
 8022a9e:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 8022aa2:	2c00      	cmp	r4, #0
 8022aa4:	d063      	beq.n	8022b6e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022aa6:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8022aaa:	2d00      	cmp	r5, #0
 8022aac:	dd5f      	ble.n	8022b6e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022aae:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8022ab2:	2d00      	cmp	r5, #0
 8022ab4:	dd5b      	ble.n	8022b6e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022ab6:	460f      	mov	r7, r1
 8022ab8:	4606      	mov	r6, r0
 8022aba:	6859      	ldr	r1, [r3, #4]
 8022abc:	6818      	ldr	r0, [r3, #0]
 8022abe:	f8df 9124 	ldr.w	r9, [pc, #292]	@ 8022be4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 8022ac2:	ab02      	add	r3, sp, #8
 8022ac4:	c303      	stmia	r3!, {r0, r1}
 8022ac6:	a802      	add	r0, sp, #8
 8022ac8:	4690      	mov	r8, r2
 8022aca:	f7ea f941 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022ace:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022ad0:	f8d9 0000 	ldr.w	r0, [r9]
 8022ad4:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8022ad8:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022adc:	b2dd      	uxtb	r5, r3
 8022ade:	2800      	cmp	r0, #0
 8022ae0:	d060      	beq.n	8022ba4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022ae2:	f7fe f881 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022ae6:	7b33      	ldrb	r3, [r6, #12]
 8022ae8:	2b01      	cmp	r3, #1
 8022aea:	d043      	beq.n	8022b74 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xdc>
 8022aec:	d34e      	bcc.n	8022b8c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xf4>
 8022aee:	2b02      	cmp	r3, #2
 8022af0:	d15e      	bne.n	8022bb0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8022af2:	4b33      	ldr	r3, [pc, #204]	@ (8022bc0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022af4:	4a33      	ldr	r2, [pc, #204]	@ (8022bc4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022af6:	8819      	ldrh	r1, [r3, #0]
 8022af8:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8022afc:	8812      	ldrh	r2, [r2, #0]
 8022afe:	4638      	mov	r0, r7
 8022b00:	9300      	str	r3, [sp, #0]
 8022b02:	2310      	movs	r3, #16
 8022b04:	f7ee fa62 	bl	8010fcc <nema_bind_dst_tex>
 8022b08:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022b0c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022b10:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022b14:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022b18:	f7ee f8ee 	bl	8010cf8 <nema_set_clip>
 8022b1c:	f04f 33ff 	mov.w	r3, #4294967295
 8022b20:	2100      	movs	r1, #0
 8022b22:	461a      	mov	r2, r3
 8022b24:	4828      	ldr	r0, [pc, #160]	@ (8022bc8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>)
 8022b26:	f7fb fa83 	bl	801e030 <nema_set_blend>
 8022b2a:	2200      	movs	r2, #0
 8022b2c:	4623      	mov	r3, r4
 8022b2e:	4611      	mov	r1, r2
 8022b30:	4610      	mov	r0, r2
 8022b32:	f7ee f9bf 	bl	8010eb4 <nema_rgba>
 8022b36:	f7fb fe41 	bl	801e7bc <nema_set_const_color>
 8022b3a:	462a      	mov	r2, r5
 8022b3c:	4659      	mov	r1, fp
 8022b3e:	23ff      	movs	r3, #255	@ 0xff
 8022b40:	4650      	mov	r0, sl
 8022b42:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022b46:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022b4a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022b4e:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8022b52:	f7ee f9af 	bl	8010eb4 <nema_rgba>
 8022b56:	463b      	mov	r3, r7
 8022b58:	9000      	str	r0, [sp, #0]
 8022b5a:	4632      	mov	r2, r6
 8022b5c:	4620      	mov	r0, r4
 8022b5e:	4629      	mov	r1, r5
 8022b60:	f7ee fbf8 	bl	8011354 <nema_fill_rect>
 8022b64:	f8d9 0000 	ldr.w	r0, [r9]
 8022b68:	b1e0      	cbz	r0, 8022ba4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022b6a:	f7fe f85d 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022b6e:	b005      	add	sp, #20
 8022b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b74:	4b12      	ldr	r3, [pc, #72]	@ (8022bc0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b76:	4a13      	ldr	r2, [pc, #76]	@ (8022bc4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b78:	8819      	ldrh	r1, [r3, #0]
 8022b7a:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8022b7e:	8812      	ldrh	r2, [r2, #0]
 8022b80:	4638      	mov	r0, r7
 8022b82:	9300      	str	r3, [sp, #0]
 8022b84:	2339      	movs	r3, #57	@ 0x39
 8022b86:	f7ee fa21 	bl	8010fcc <nema_bind_dst_tex>
 8022b8a:	e7bd      	b.n	8022b08 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b8c:	4b0c      	ldr	r3, [pc, #48]	@ (8022bc0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b8e:	4a0d      	ldr	r2, [pc, #52]	@ (8022bc4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b90:	8819      	ldrh	r1, [r3, #0]
 8022b92:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8022b96:	8812      	ldrh	r2, [r2, #0]
 8022b98:	4638      	mov	r0, r7
 8022b9a:	9300      	str	r3, [sp, #0]
 8022b9c:	2304      	movs	r3, #4
 8022b9e:	f7ee fa15 	bl	8010fcc <nema_bind_dst_tex>
 8022ba2:	e7b1      	b.n	8022b08 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022ba4:	4b09      	ldr	r3, [pc, #36]	@ (8022bcc <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>)
 8022ba6:	4a0a      	ldr	r2, [pc, #40]	@ (8022bd0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x138>)
 8022ba8:	217c      	movs	r1, #124	@ 0x7c
 8022baa:	480a      	ldr	r0, [pc, #40]	@ (8022bd4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>)
 8022bac:	f00f fcac 	bl	8032508 <__assert_func>
 8022bb0:	4b09      	ldr	r3, [pc, #36]	@ (8022bd8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x140>)
 8022bb2:	4a0a      	ldr	r2, [pc, #40]	@ (8022bdc <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>)
 8022bb4:	f240 11a5 	movw	r1, #421	@ 0x1a5
 8022bb8:	4809      	ldr	r0, [pc, #36]	@ (8022be0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>)
 8022bba:	f00f fca5 	bl	8032508 <__assert_func>
 8022bbe:	bf00      	nop
 8022bc0:	20082f02 	.word	0x20082f02
 8022bc4:	20082f04 	.word	0x20082f04
 8022bc8:	08000504 	.word	0x08000504
 8022bcc:	0803624c 	.word	0x0803624c
 8022bd0:	08036ab8 	.word	0x08036ab8
 8022bd4:	08036274 	.word	0x08036274
 8022bd8:	080362a8 	.word	0x080362a8
 8022bdc:	08036b74 	.word	0x08036b74
 8022be0:	080362f0 	.word	0x080362f0
 8022be4:	200833a8 	.word	0x200833a8

08022be8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bec:	b091      	sub	sp, #68	@ 0x44
 8022bee:	f89d 108c 	ldrb.w	r1, [sp, #140]	@ 0x8c
 8022bf2:	ac0a      	add	r4, sp, #40	@ 0x28
 8022bf4:	e884 000c 	stmia.w	r4, {r2, r3}
 8022bf8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8022bfc:	1e4f      	subs	r7, r1, #1
 8022bfe:	fa5f fc87 	uxtb.w	ip, r7
 8022c02:	4682      	mov	sl, r0
 8022c04:	9303      	str	r3, [sp, #12]
 8022c06:	f89d 0090 	ldrb.w	r0, [sp, #144]	@ 0x90
 8022c0a:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 8022c0e:	f1bc 0f01 	cmp.w	ip, #1
 8022c12:	9304      	str	r3, [sp, #16]
 8022c14:	f9bd 8068 	ldrsh.w	r8, [sp, #104]	@ 0x68
 8022c18:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	@ 0x6c
 8022c1c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022c1e:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8022c22:	9005      	str	r0, [sp, #20]
 8022c24:	f89d 6094 	ldrb.w	r6, [sp, #148]	@ 0x94
 8022c28:	d905      	bls.n	8022c36 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022c2a:	2904      	cmp	r1, #4
 8022c2c:	f000 80d0 	beq.w	8022dd0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8022c30:	2908      	cmp	r1, #8
 8022c32:	f040 816f 	bne.w	8022f14 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 8022c36:	7b53      	ldrb	r3, [r2, #13]
 8022c38:	7990      	ldrb	r0, [r2, #6]
 8022c3a:	0159      	lsls	r1, r3, #5
 8022c3c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8022c40:	ea50 0901 	orrs.w	r9, r0, r1
 8022c44:	f000 80c1 	beq.w	8022dca <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022c48:	011b      	lsls	r3, r3, #4
 8022c4a:	79d0      	ldrb	r0, [r2, #7]
 8022c4c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8022c50:	ea50 0301 	orrs.w	r3, r0, r1
 8022c54:	9306      	str	r3, [sp, #24]
 8022c56:	f000 80b8 	beq.w	8022dca <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022c5a:	f992 3009 	ldrsb.w	r3, [r2, #9]
 8022c5e:	9a03      	ldr	r2, [sp, #12]
 8022c60:	b29b      	uxth	r3, r3
 8022c62:	2a00      	cmp	r2, #0
 8022c64:	f040 80be 	bne.w	8022de4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fc>
 8022c68:	4498      	add	r8, r3
 8022c6a:	fa0f f888 	sxth.w	r8, r8
 8022c6e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c70:	f9b3 3000 	ldrsh.w	r3, [r3]
 8022c74:	4543      	cmp	r3, r8
 8022c76:	dd06      	ble.n	8022c86 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x9e>
 8022c78:	9a03      	ldr	r2, [sp, #12]
 8022c7a:	441a      	add	r2, r3
 8022c7c:	eba2 0508 	sub.w	r5, r2, r8
 8022c80:	4698      	mov	r8, r3
 8022c82:	b2ab      	uxth	r3, r5
 8022c84:	9303      	str	r3, [sp, #12]
 8022c86:	f8df c30c 	ldr.w	ip, [pc, #780]	@ 8022f94 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8022c8a:	465a      	mov	r2, fp
 8022c8c:	f89c 5000 	ldrb.w	r5, [ip]
 8022c90:	4641      	mov	r1, r8
 8022c92:	4633      	mov	r3, r6
 8022c94:	4620      	mov	r0, r4
 8022c96:	9507      	str	r5, [sp, #28]
 8022c98:	f7e9 fece 	bl	800ca38 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8022c9c:	465a      	mov	r2, fp
 8022c9e:	4641      	mov	r1, r8
 8022ca0:	4633      	mov	r3, r6
 8022ca2:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8022ca6:	4620      	mov	r0, r4
 8022ca8:	f7e9 fee3 	bl	800ca72 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8022cac:	a910      	add	r1, sp, #64	@ 0x40
 8022cae:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 8022cb2:	a80d      	add	r0, sp, #52	@ 0x34
 8022cb4:	f7ea f80a 	bl	800cccc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8022cb8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022cba:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022cbe:	9308      	str	r3, [sp, #32]
 8022cc0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022cc2:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022cc6:	fa5f f883 	uxtb.w	r8, r3
 8022cca:	2f07      	cmp	r7, #7
 8022ccc:	f200 811f 	bhi.w	8022f0e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x326>
 8022cd0:	e8df f017 	tbh	[pc, r7, lsl #1]
 8022cd4:	009b00a1 	.word	0x009b00a1
 8022cd8:	0095011d 	.word	0x0095011d
 8022cdc:	011d011d 	.word	0x011d011d
 8022ce0:	0008011d 	.word	0x0008011d
 8022ce4:	2708      	movs	r7, #8
 8022ce6:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8022cea:	4ca1      	ldr	r4, [pc, #644]	@ (8022f70 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8022cec:	6820      	ldr	r0, [r4, #0]
 8022cee:	2800      	cmp	r0, #0
 8022cf0:	f000 8137 	beq.w	8022f62 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022cf4:	f7fd ff78 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022cf8:	f8da 3000 	ldr.w	r3, [sl]
 8022cfc:	4650      	mov	r0, sl
 8022cfe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022d00:	4798      	blx	r3
 8022d02:	2e02      	cmp	r6, #2
 8022d04:	f000 80e6 	beq.w	8022ed4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8022d08:	2e03      	cmp	r6, #3
 8022d0a:	f000 80c7 	beq.w	8022e9c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b4>
 8022d0e:	2e01      	cmp	r6, #1
 8022d10:	f000 80a8 	beq.w	8022e64 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8022d14:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022d16:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022d1a:	8819      	ldrh	r1, [r3, #0]
 8022d1c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022d20:	440a      	add	r2, r1
 8022d22:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022d24:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022d28:	8848      	ldrh	r0, [r1, #2]
 8022d2a:	6849      	ldr	r1, [r1, #4]
 8022d2c:	4403      	add	r3, r0
 8022d2e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022d32:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022d34:	a80e      	add	r0, sp, #56	@ 0x38
 8022d36:	f7ea f80b 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d3a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022d3e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022d42:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022d46:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022d4a:	f7ed ffd5 	bl	8010cf8 <nema_set_clip>
 8022d4e:	2200      	movs	r2, #0
 8022d50:	9d05      	ldr	r5, [sp, #20]
 8022d52:	4611      	mov	r1, r2
 8022d54:	462b      	mov	r3, r5
 8022d56:	4610      	mov	r0, r2
 8022d58:	f7ee f8ac 	bl	8010eb4 <nema_rgba>
 8022d5c:	f7fb fd2e 	bl	801e7bc <nema_set_const_color>
 8022d60:	462b      	mov	r3, r5
 8022d62:	4642      	mov	r2, r8
 8022d64:	4659      	mov	r1, fp
 8022d66:	9808      	ldr	r0, [sp, #32]
 8022d68:	f7ee f8a4 	bl	8010eb4 <nema_rgba>
 8022d6c:	f7ed ffb8 	bl	8010ce0 <nema_set_tex_color>
 8022d70:	f04f 33ff 	mov.w	r3, #4294967295
 8022d74:	2201      	movs	r2, #1
 8022d76:	2100      	movs	r1, #0
 8022d78:	487e      	ldr	r0, [pc, #504]	@ (8022f74 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8022d7a:	f7fb f959 	bl	801e030 <nema_set_blend>
 8022d7e:	2200      	movs	r2, #0
 8022d80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d82:	9201      	str	r2, [sp, #4]
 8022d84:	9300      	str	r3, [sp, #0]
 8022d86:	4649      	mov	r1, r9
 8022d88:	463b      	mov	r3, r7
 8022d8a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022d8c:	9a06      	ldr	r2, [sp, #24]
 8022d8e:	f7ee f899 	bl	8010ec4 <nema_bind_src_tex>
 8022d92:	9b07      	ldr	r3, [sp, #28]
 8022d94:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8022d98:	2b01      	cmp	r3, #1
 8022d9a:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	@ 0x36
 8022d9e:	d040      	beq.n	8022e22 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x23a>
 8022da0:	2e02      	cmp	r6, #2
 8022da2:	d051      	beq.n	8022e48 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022da4:	2e03      	cmp	r6, #3
 8022da6:	f000 80c7 	beq.w	8022f38 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8022daa:	2e01      	cmp	r6, #1
 8022dac:	9b04      	ldr	r3, [sp, #16]
 8022dae:	f000 80b8 	beq.w	8022f22 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33a>
 8022db2:	1ac9      	subs	r1, r1, r3
 8022db4:	9b03      	ldr	r3, [sp, #12]
 8022db6:	1ac0      	subs	r0, r0, r3
 8022db8:	f7ee fade 	bl	8011378 <nema_blit>
 8022dbc:	6823      	ldr	r3, [r4, #0]
 8022dbe:	2b00      	cmp	r3, #0
 8022dc0:	f000 80cf 	beq.w	8022f62 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022dc4:	2201      	movs	r2, #1
 8022dc6:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8022dca:	b011      	add	sp, #68	@ 0x44
 8022dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022dd0:	2b00      	cmp	r3, #0
 8022dd2:	f47f af30 	bne.w	8022c36 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022dd6:	4b68      	ldr	r3, [pc, #416]	@ (8022f78 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>)
 8022dd8:	4a68      	ldr	r2, [pc, #416]	@ (8022f7c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022dda:	f240 11bb 	movw	r1, #443	@ 0x1bb
 8022dde:	4868      	ldr	r0, [pc, #416]	@ (8022f80 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022de0:	f00f fb92 	bl	8032508 <__assert_func>
 8022de4:	1ad5      	subs	r5, r2, r3
 8022de6:	b2ab      	uxth	r3, r5
 8022de8:	041a      	lsls	r2, r3, #16
 8022dea:	9303      	str	r3, [sp, #12]
 8022dec:	f57f af3f 	bpl.w	8022c6e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022df0:	eba8 0803 	sub.w	r8, r8, r3
 8022df4:	2300      	movs	r3, #0
 8022df6:	fa0f f888 	sxth.w	r8, r8
 8022dfa:	9303      	str	r3, [sp, #12]
 8022dfc:	e737      	b.n	8022c6e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022dfe:	f109 0301 	add.w	r3, r9, #1
 8022e02:	105b      	asrs	r3, r3, #1
 8022e04:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e06:	2729      	movs	r7, #41	@ 0x29
 8022e08:	e76f      	b.n	8022cea <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022e0a:	f109 0303 	add.w	r3, r9, #3
 8022e0e:	109b      	asrs	r3, r3, #2
 8022e10:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e12:	2728      	movs	r7, #40	@ 0x28
 8022e14:	e769      	b.n	8022cea <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022e16:	f109 0307 	add.w	r3, r9, #7
 8022e1a:	10db      	asrs	r3, r3, #3
 8022e1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e1e:	2727      	movs	r7, #39	@ 0x27
 8022e20:	e763      	b.n	8022cea <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022e22:	2e02      	cmp	r6, #2
 8022e24:	f000 8093 	beq.w	8022f4e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x366>
 8022e28:	2e03      	cmp	r6, #3
 8022e2a:	d00d      	beq.n	8022e48 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022e2c:	2e01      	cmp	r6, #1
 8022e2e:	f000 8091 	beq.w	8022f54 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x36c>
 8022e32:	461a      	mov	r2, r3
 8022e34:	9b03      	ldr	r3, [sp, #12]
 8022e36:	4419      	add	r1, r3
 8022e38:	9b04      	ldr	r3, [sp, #16]
 8022e3a:	eba1 0109 	sub.w	r1, r1, r9
 8022e3e:	3101      	adds	r1, #1
 8022e40:	1ac0      	subs	r0, r0, r3
 8022e42:	f7ee fab3 	bl	80113ac <nema_blit_rotate>
 8022e46:	e7b9      	b.n	8022dbc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022e48:	9b04      	ldr	r3, [sp, #16]
 8022e4a:	2202      	movs	r2, #2
 8022e4c:	4419      	add	r1, r3
 8022e4e:	9b03      	ldr	r3, [sp, #12]
 8022e50:	4418      	add	r0, r3
 8022e52:	9b06      	ldr	r3, [sp, #24]
 8022e54:	eba0 0009 	sub.w	r0, r0, r9
 8022e58:	1ac9      	subs	r1, r1, r3
 8022e5a:	3101      	adds	r1, #1
 8022e5c:	3001      	adds	r0, #1
 8022e5e:	f7ee faa5 	bl	80113ac <nema_blit_rotate>
 8022e62:	e7ab      	b.n	8022dbc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022e64:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022e68:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022e6c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022e6e:	440b      	add	r3, r1
 8022e70:	8852      	ldrh	r2, [r2, #2]
 8022e72:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e74:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e76:	1a9b      	subs	r3, r3, r2
 8022e78:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8022e7c:	f8b0 c000 	ldrh.w	ip, [r0]
 8022e80:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8022e84:	8880      	ldrh	r0, [r0, #4]
 8022e86:	1a5b      	subs	r3, r3, r1
 8022e88:	4462      	add	r2, ip
 8022e8a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8022e8e:	f8ad 103c 	strh.w	r1, [sp, #60]	@ 0x3c
 8022e92:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8022e96:	f8ad 003e 	strh.w	r0, [sp, #62]	@ 0x3e
 8022e9a:	e74b      	b.n	8022d34 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e9c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022ea0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022ea4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022ea6:	440b      	add	r3, r1
 8022ea8:	8812      	ldrh	r2, [r2, #0]
 8022eaa:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022eac:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022eae:	1a9b      	subs	r3, r3, r2
 8022eb0:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8022eb4:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 8022eb8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022ebc:	88c0      	ldrh	r0, [r0, #6]
 8022ebe:	1a5b      	subs	r3, r3, r1
 8022ec0:	4462      	add	r2, ip
 8022ec2:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022ec6:	f8ad 103e 	strh.w	r1, [sp, #62]	@ 0x3e
 8022eca:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022ece:	f8ad 003c 	strh.w	r0, [sp, #60]	@ 0x3c
 8022ed2:	e72f      	b.n	8022d34 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022ed4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022ed8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022edc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022ee0:	440a      	add	r2, r1
 8022ee2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022ee4:	8808      	ldrh	r0, [r1, #0]
 8022ee6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022eea:	1a12      	subs	r2, r2, r0
 8022eec:	440b      	add	r3, r1
 8022eee:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022ef0:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022ef2:	8849      	ldrh	r1, [r1, #2]
 8022ef4:	8880      	ldrh	r0, [r0, #4]
 8022ef6:	1a5b      	subs	r3, r3, r1
 8022ef8:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022efa:	1a12      	subs	r2, r2, r0
 8022efc:	88c8      	ldrh	r0, [r1, #6]
 8022efe:	6849      	ldr	r1, [r1, #4]
 8022f00:	1a1b      	subs	r3, r3, r0
 8022f02:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022f06:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022f0a:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022f0c:	e712      	b.n	8022d34 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022f0e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8022f12:	e6ea      	b.n	8022cea <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022f14:	4b1b      	ldr	r3, [pc, #108]	@ (8022f84 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8022f16:	4a19      	ldr	r2, [pc, #100]	@ (8022f7c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022f18:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
 8022f1c:	4818      	ldr	r0, [pc, #96]	@ (8022f80 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022f1e:	f00f faf3 	bl	8032508 <__assert_func>
 8022f22:	4403      	add	r3, r0
 8022f24:	4618      	mov	r0, r3
 8022f26:	9b06      	ldr	r3, [sp, #24]
 8022f28:	2203      	movs	r2, #3
 8022f2a:	1ac0      	subs	r0, r0, r3
 8022f2c:	9b03      	ldr	r3, [sp, #12]
 8022f2e:	3001      	adds	r0, #1
 8022f30:	1ac9      	subs	r1, r1, r3
 8022f32:	f7ee fa3b 	bl	80113ac <nema_blit_rotate>
 8022f36:	e741      	b.n	8022dbc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f38:	9b03      	ldr	r3, [sp, #12]
 8022f3a:	2201      	movs	r2, #1
 8022f3c:	4419      	add	r1, r3
 8022f3e:	9b04      	ldr	r3, [sp, #16]
 8022f40:	eba1 0109 	sub.w	r1, r1, r9
 8022f44:	3101      	adds	r1, #1
 8022f46:	1ac0      	subs	r0, r0, r3
 8022f48:	f7ee fa30 	bl	80113ac <nema_blit_rotate>
 8022f4c:	e736      	b.n	8022dbc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f4e:	9b04      	ldr	r3, [sp, #16]
 8022f50:	4418      	add	r0, r3
 8022f52:	e7e8      	b.n	8022f26 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8022f54:	9b04      	ldr	r3, [sp, #16]
 8022f56:	1ac9      	subs	r1, r1, r3
 8022f58:	9b03      	ldr	r3, [sp, #12]
 8022f5a:	1ac0      	subs	r0, r0, r3
 8022f5c:	f7ee fa0c 	bl	8011378 <nema_blit>
 8022f60:	e72c      	b.n	8022dbc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f62:	4b09      	ldr	r3, [pc, #36]	@ (8022f88 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8022f64:	4a09      	ldr	r2, [pc, #36]	@ (8022f8c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8022f66:	217c      	movs	r1, #124	@ 0x7c
 8022f68:	4809      	ldr	r0, [pc, #36]	@ (8022f90 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8022f6a:	f00f facd 	bl	8032508 <__assert_func>
 8022f6e:	bf00      	nop
 8022f70:	200833a8 	.word	0x200833a8
 8022f74:	08000504 	.word	0x08000504
 8022f78:	080367c0 	.word	0x080367c0
 8022f7c:	08037ef4 	.word	0x08037ef4
 8022f80:	080362f0 	.word	0x080362f0
 8022f84:	08036730 	.word	0x08036730
 8022f88:	0803624c 	.word	0x0803624c
 8022f8c:	08036ab8 	.word	0x08036ab8
 8022f90:	08036274 	.word	0x08036274
 8022f94:	20082f00 	.word	0x20082f00

08022f98 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8022f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f9c:	ed2d 8b08 	vpush	{d8-d11}
 8022fa0:	b08b      	sub	sp, #44	@ 0x2c
 8022fa2:	f89d 707c 	ldrb.w	r7, [sp, #124]	@ 0x7c
 8022fa6:	e9dd 951c 	ldrd	r9, r5, [sp, #112]	@ 0x70
 8022faa:	f8bd 8078 	ldrh.w	r8, [sp, #120]	@ 0x78
 8022fae:	f8bd e080 	ldrh.w	lr, [sp, #128]	@ 0x80
 8022fb2:	2f00      	cmp	r7, #0
 8022fb4:	d067      	beq.n	8023086 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022fb6:	f9b5 a004 	ldrsh.w	sl, [r5, #4]
 8022fba:	f1ba 0f00 	cmp.w	sl, #0
 8022fbe:	dd62      	ble.n	8023086 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022fc0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8022fc4:	f1ba 0f00 	cmp.w	sl, #0
 8022fc8:	dd5d      	ble.n	8023086 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022fca:	f3c8 0a87 	ubfx	sl, r8, #2, #8
 8022fce:	f1ba 0f0b 	cmp.w	sl, #11
 8022fd2:	d05d      	beq.n	8023090 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xf8>
 8022fd4:	461c      	mov	r4, r3
 8022fd6:	4bcd      	ldr	r3, [pc, #820]	@ (802330c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>)
 8022fd8:	4616      	mov	r6, r2
 8022fda:	781b      	ldrb	r3, [r3, #0]
 8022fdc:	6862      	ldr	r2, [r4, #4]
 8022fde:	2b01      	cmp	r3, #1
 8022fe0:	9205      	str	r2, [sp, #20]
 8022fe2:	4684      	mov	ip, r0
 8022fe4:	e9d4 b202 	ldrd	fp, r2, [r4, #8]
 8022fe8:	9202      	str	r2, [sp, #8]
 8022fea:	d102      	bne.n	8022ff2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 8022fec:	f8cd b008 	str.w	fp, [sp, #8]
 8022ff0:	4693      	mov	fp, r2
 8022ff2:	f1ba 0f0d 	cmp.w	sl, #13
 8022ff6:	d03d      	beq.n	8023074 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xdc>
 8022ff8:	4623      	mov	r3, r4
 8022ffa:	4cc5      	ldr	r4, [pc, #788]	@ (8023310 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x378>)
 8022ffc:	6820      	ldr	r0, [r4, #0]
 8022ffe:	2800      	cmp	r0, #0
 8023000:	f000 8243 	beq.w	802348a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8023004:	681b      	ldr	r3, [r3, #0]
 8023006:	f8cd c010 	str.w	ip, [sp, #16]
 802300a:	9303      	str	r3, [sp, #12]
 802300c:	f7fd fdec 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023010:	9a04      	ldr	r2, [sp, #16]
 8023012:	6813      	ldr	r3, [r2, #0]
 8023014:	4610      	mov	r0, r2
 8023016:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023018:	4798      	blx	r3
 802301a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 802301e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8023022:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8023026:	f9b5 0000 	ldrsh.w	r0, [r5]
 802302a:	f7ed fe65 	bl	8010cf8 <nema_set_clip>
 802302e:	2200      	movs	r2, #0
 8023030:	463b      	mov	r3, r7
 8023032:	4611      	mov	r1, r2
 8023034:	4610      	mov	r0, r2
 8023036:	f7ed ff3d 	bl	8010eb4 <nema_rgba>
 802303a:	f7fb fbbf 	bl	801e7bc <nema_set_const_color>
 802303e:	f04f 33ff 	mov.w	r3, #4294967295
 8023042:	2201      	movs	r2, #1
 8023044:	2100      	movs	r1, #0
 8023046:	48b3      	ldr	r0, [pc, #716]	@ (8023314 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 8023048:	f7fa fff2 	bl	801e030 <nema_set_blend>
 802304c:	f1ba 0f0d 	cmp.w	sl, #13
 8023050:	f200 8221 	bhi.w	8023496 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4fe>
 8023054:	e8df f01a 	tbh	[pc, sl, lsl #1]
 8023058:	01720027 	.word	0x01720027
 802305c:	021f0170 	.word	0x021f0170
 8023060:	021f021f 	.word	0x021f021f
 8023064:	021f021f 	.word	0x021f021f
 8023068:	021f021f 	.word	0x021f021f
 802306c:	021f021f 	.word	0x021f021f
 8023070:	01570162 	.word	0x01570162
 8023074:	9b05      	ldr	r3, [sp, #20]
 8023076:	b133      	cbz	r3, 8023086 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8023078:	781b      	ldrb	r3, [r3, #0]
 802307a:	f1a3 0216 	sub.w	r2, r3, #22
 802307e:	2a01      	cmp	r2, #1
 8023080:	d9ba      	bls.n	8022ff8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023082:	2b12      	cmp	r3, #18
 8023084:	d0b8      	beq.n	8022ff8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023086:	b00b      	add	sp, #44	@ 0x2c
 8023088:	ecbd 8b08 	vpop	{d8-d11}
 802308c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023090:	e9cd 7e1f 	strd	r7, lr, [sp, #124]	@ 0x7c
 8023094:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
 8023098:	b00b      	add	sp, #44	@ 0x2c
 802309a:	ecbd 8b08 	vpop	{d8-d11}
 802309e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230a2:	f7e8 bfc5 	b.w	800c030 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 80230a6:	2304      	movs	r3, #4
 80230a8:	f04f 31ff 	mov.w	r1, #4294967295
 80230ac:	f008 0201 	and.w	r2, r8, #1
 80230b0:	9201      	str	r2, [sp, #4]
 80230b2:	9803      	ldr	r0, [sp, #12]
 80230b4:	9a02      	ldr	r2, [sp, #8]
 80230b6:	9100      	str	r1, [sp, #0]
 80230b8:	4659      	mov	r1, fp
 80230ba:	f7ed ff03 	bl	8010ec4 <nema_bind_src_tex>
 80230be:	2001      	movs	r0, #1
 80230c0:	f7ee ff9c 	bl	8011ffc <nema_enable_tiling>
 80230c4:	2301      	movs	r3, #1
 80230c6:	461a      	mov	r2, r3
 80230c8:	4619      	mov	r1, r3
 80230ca:	4618      	mov	r0, r3
 80230cc:	f7ee ffbe 	bl	801204c <nema_enable_aa>
 80230d0:	edd6 7a03 	vldr	s15, [r6, #12]
 80230d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230d8:	ed96 7a04 	vldr	s14, [r6, #16]
 80230dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230e0:	4607      	mov	r7, r0
 80230e2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80230e6:	f240 81aa 	bls.w	802343e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a6>
 80230ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230ee:	bf94      	ite	ls
 80230f0:	2301      	movls	r3, #1
 80230f2:	2302      	movhi	r3, #2
 80230f4:	edd6 7a08 	vldr	s15, [r6, #32]
 80230f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230fc:	2200      	movs	r2, #0
 80230fe:	ed96 7a09 	vldr	s14, [r6, #36]	@ 0x24
 8023102:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023106:	a90a      	add	r1, sp, #40	@ 0x28
 8023108:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802310c:	f843 2c10 	str.w	r2, [r3, #-16]
 8023110:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023114:	f240 818d 	bls.w	8023432 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x49a>
 8023118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802311c:	bf94      	ite	ls
 802311e:	2301      	movls	r3, #1
 8023120:	2302      	movhi	r3, #2
 8023122:	edd6 7a0d 	vldr	s15, [r6, #52]	@ 0x34
 8023126:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802312a:	2201      	movs	r2, #1
 802312c:	ed96 7a0e 	vldr	s14, [r6, #56]	@ 0x38
 8023130:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023134:	a90a      	add	r1, sp, #40	@ 0x28
 8023136:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802313a:	f843 2c10 	str.w	r2, [r3, #-16]
 802313e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023142:	f240 8188 	bls.w	8023456 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4be>
 8023146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802314a:	bf94      	ite	ls
 802314c:	2301      	movls	r3, #1
 802314e:	2302      	movhi	r3, #2
 8023150:	edd6 7a12 	vldr	s15, [r6, #72]	@ 0x48
 8023154:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023158:	2202      	movs	r2, #2
 802315a:	ed96 7a13 	vldr	s14, [r6, #76]	@ 0x4c
 802315e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023162:	a90a      	add	r1, sp, #40	@ 0x28
 8023164:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023168:	f843 2c10 	str.w	r2, [r3, #-16]
 802316c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023170:	f240 816b 	bls.w	802344a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4b2>
 8023174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023178:	bf94      	ite	ls
 802317a:	2301      	movls	r3, #1
 802317c:	2302      	movhi	r3, #2
 802317e:	2203      	movs	r2, #3
 8023180:	a90a      	add	r1, sp, #40	@ 0x28
 8023182:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023186:	f843 2c10 	str.w	r2, [r3, #-16]
 802318a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802318e:	9907      	ldr	r1, [sp, #28]
 8023190:	f340 80d6 	ble.w	8023340 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8023194:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023196:	9808      	ldr	r0, [sp, #32]
 8023198:	9a06      	ldr	r2, [sp, #24]
 802319a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 802319e:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 80231a2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80231a6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80231aa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80231ae:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 80231b2:	eb06 080e 	add.w	r8, r6, lr
 80231b6:	0089      	lsls	r1, r1, #2
 80231b8:	0080      	lsls	r0, r0, #2
 80231ba:	1872      	adds	r2, r6, r1
 80231bc:	eb06 0a00 	add.w	sl, r6, r0
 80231c0:	eb06 030c 	add.w	r3, r6, ip
 80231c4:	5871      	ldr	r1, [r6, r1]
 80231c6:	5830      	ldr	r0, [r6, r0]
 80231c8:	f856 c00c 	ldr.w	ip, [r6, ip]
 80231cc:	edd8 4a01 	vldr	s9, [r8, #4]
 80231d0:	f856 800e 	ldr.w	r8, [r6, lr]
 80231d4:	9e02      	ldr	r6, [sp, #8]
 80231d6:	6852      	ldr	r2, [r2, #4]
 80231d8:	2eff      	cmp	r6, #255	@ 0xff
 80231da:	ed9a 5a01 	vldr	s10, [sl, #4]
 80231de:	685b      	ldr	r3, [r3, #4]
 80231e0:	f340 80d2 	ble.w	8023388 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f0>
 80231e4:	429a      	cmp	r2, r3
 80231e6:	f000 815d 	beq.w	80234a4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50c>
 80231ea:	f9b9 6000 	ldrsh.w	r6, [r9]
 80231ee:	ee07 ca90 	vmov	s15, ip
 80231f2:	ee08 6a90 	vmov	s17, r6
 80231f6:	f9b9 6002 	ldrsh.w	r6, [r9, #2]
 80231fa:	ee04 3a10 	vmov	s8, r3
 80231fe:	ee08 6a10 	vmov	s16, r6
 8023202:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8023206:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 802320a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 802320e:	eef8 3ac4 	vcvt.f32.s32	s7, s8
 8023212:	ee07 1a90 	vmov	s15, r1
 8023216:	ee07 0a10 	vmov	s14, r0
 802321a:	ee06 8a10 	vmov	s12, r8
 802321e:	ee04 2a10 	vmov	s8, r2
 8023222:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8023318 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8023226:	eef0 ba68 	vmov.f32	s23, s17
 802322a:	eeb0 ba68 	vmov.f32	s22, s17
 802322e:	eef0 aa68 	vmov.f32	s21, s17
 8023232:	eeb0 aa48 	vmov.f32	s20, s16
 8023236:	eef0 9a48 	vmov.f32	s19, s16
 802323a:	eeb0 9a48 	vmov.f32	s18, s16
 802323e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023242:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8023246:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 802324a:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 802324e:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8023252:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 8023256:	f9b5 b006 	ldrsh.w	fp, [r5, #6]
 802325a:	eee5 baa6 	vfma.f32	s23, s11, s13
 802325e:	f1bb 0f00 	cmp.w	fp, #0
 8023262:	eea7 baa6 	vfma.f32	s22, s15, s13
 8023266:	eee7 aa26 	vfma.f32	s21, s14, s13
 802326a:	eee6 8a26 	vfma.f32	s17, s12, s13
 802326e:	eea3 aaa6 	vfma.f32	s20, s7, s13
 8023272:	eee4 9a26 	vfma.f32	s19, s8, s13
 8023276:	eea5 9a26 	vfma.f32	s18, s10, s13
 802327a:	eea4 8aa6 	vfma.f32	s16, s9, s13
 802327e:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 8023282:	dd38      	ble.n	80232f6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35e>
 8023284:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8023288:	f1bb 0f80 	cmp.w	fp, #128	@ 0x80
 802328c:	46da      	mov	sl, fp
 802328e:	bfa8      	it	ge
 8023290:	f04f 0a80 	movge.w	sl, #128	@ 0x80
 8023294:	2e00      	cmp	r6, #0
 8023296:	f9b5 8000 	ldrsh.w	r8, [r5]
 802329a:	dd25      	ble.n	80232e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x350>
 802329c:	2e80      	cmp	r6, #128	@ 0x80
 802329e:	4632      	mov	r2, r6
 80232a0:	4640      	mov	r0, r8
 80232a2:	4653      	mov	r3, sl
 80232a4:	bfa8      	it	ge
 80232a6:	2280      	movge	r2, #128	@ 0x80
 80232a8:	4649      	mov	r1, r9
 80232aa:	f7ed fd25 	bl	8010cf8 <nema_set_clip>
 80232ae:	eef0 3a48 	vmov.f32	s7, s16
 80232b2:	eeb0 3a68 	vmov.f32	s6, s17
 80232b6:	eef0 2a49 	vmov.f32	s5, s18
 80232ba:	eeb0 2a6a 	vmov.f32	s4, s21
 80232be:	eef0 1a69 	vmov.f32	s3, s19
 80232c2:	eeb0 1a4b 	vmov.f32	s2, s22
 80232c6:	eef0 0a4a 	vmov.f32	s1, s20
 80232ca:	eeb0 0a6b 	vmov.f32	s0, s23
 80232ce:	f7ee f9cd 	bl	801166c <nema_blit_quad_fit>
 80232d2:	6820      	ldr	r0, [r4, #0]
 80232d4:	2800      	cmp	r0, #0
 80232d6:	f000 80d8 	beq.w	802348a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 80232da:	3e80      	subs	r6, #128	@ 0x80
 80232dc:	f7fd fca4 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80232e0:	2e00      	cmp	r6, #0
 80232e2:	f108 0880 	add.w	r8, r8, #128	@ 0x80
 80232e6:	dcd9      	bgt.n	802329c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>
 80232e8:	f1ab 0b80 	sub.w	fp, fp, #128	@ 0x80
 80232ec:	f1bb 0f00 	cmp.w	fp, #0
 80232f0:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 80232f4:	dcc6      	bgt.n	8023284 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ec>
 80232f6:	4638      	mov	r0, r7
 80232f8:	b00b      	add	sp, #44	@ 0x2c
 80232fa:	ecbd 8b08 	vpop	{d8-d11}
 80232fe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023302:	f7ee bec5 	b.w	8012090 <nema_enable_aa_flags>
 8023306:	9b05      	ldr	r3, [sp, #20]
 8023308:	781b      	ldrb	r3, [r3, #0]
 802330a:	e6cd      	b.n	80230a8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 802330c:	20082f00 	.word	0x20082f00
 8023310:	200833a8 	.word	0x200833a8
 8023314:	08000504 	.word	0x08000504
 8023318:	3d800000 	.word	0x3d800000
 802331c:	4a65      	ldr	r2, [pc, #404]	@ (80234b4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x51c>)
 802331e:	23ff      	movs	r3, #255	@ 0xff
 8023320:	6810      	ldr	r0, [r2, #0]
 8023322:	b2c2      	uxtb	r2, r0
 8023324:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8023328:	f3c0 4007 	ubfx	r0, r0, #16, #8
 802332c:	f7ed fdc2 	bl	8010eb4 <nema_rgba>
 8023330:	f7ed fcd6 	bl	8010ce0 <nema_set_tex_color>
 8023334:	2329      	movs	r3, #41	@ 0x29
 8023336:	e6b7      	b.n	80230a8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 8023338:	2310      	movs	r3, #16
 802333a:	e6b5      	b.n	80230a8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 802333c:	2339      	movs	r3, #57	@ 0x39
 802333e:	e6b3      	b.n	80230a8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 8023340:	9b08      	ldr	r3, [sp, #32]
 8023342:	9806      	ldr	r0, [sp, #24]
 8023344:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023346:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802334a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 802334e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8023352:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8023356:	009b      	lsls	r3, r3, #2
 8023358:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 802335c:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 8023360:	0089      	lsls	r1, r1, #2
 8023362:	18f0      	adds	r0, r6, r3
 8023364:	1872      	adds	r2, r6, r1
 8023366:	eb06 0a0c 	add.w	sl, r6, ip
 802336a:	eb06 080e 	add.w	r8, r6, lr
 802336e:	ed90 5a01 	vldr	s10, [r0, #4]
 8023372:	edd8 4a01 	vldr	s9, [r8, #4]
 8023376:	58f0      	ldr	r0, [r6, r3]
 8023378:	6852      	ldr	r2, [r2, #4]
 802337a:	5871      	ldr	r1, [r6, r1]
 802337c:	f8da 3004 	ldr.w	r3, [sl, #4]
 8023380:	f856 c00c 	ldr.w	ip, [r6, ip]
 8023384:	f856 800e 	ldr.w	r8, [r6, lr]
 8023388:	429a      	cmp	r2, r3
 802338a:	d06a      	beq.n	8023462 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ca>
 802338c:	ee07 8a90 	vmov	s15, r8
 8023390:	f9b9 5000 	ldrsh.w	r5, [r9]
 8023394:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8023398:	ee00 5a10 	vmov	s0, r5
 802339c:	ee07 0a90 	vmov	s15, r0
 80233a0:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 80233a4:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80233a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80233ac:	ee00 5a90 	vmov	s1, r5
 80233b0:	ee07 1a90 	vmov	s15, r1
 80233b4:	eddf 6a40 	vldr	s13, [pc, #256]	@ 80234b8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x520>
 80233b8:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80233bc:	ee04 2a10 	vmov	s8, r2
 80233c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80233c4:	eeb0 1a40 	vmov.f32	s2, s0
 80233c8:	eef8 1ac4 	vcvt.f32.s32	s3, s8
 80233cc:	ee05 ca90 	vmov	s11, ip
 80233d0:	ee04 3a10 	vmov	s8, r3
 80233d4:	eea7 1aa6 	vfma.f32	s2, s15, s13
 80233d8:	eef0 7a60 	vmov.f32	s15, s1
 80233dc:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80233e0:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 80233e4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80233e8:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80233ec:	eeb0 3a40 	vmov.f32	s6, s0
 80233f0:	eeb0 2a40 	vmov.f32	s4, s0
 80233f4:	eef0 3a60 	vmov.f32	s7, s1
 80233f8:	eef0 2a60 	vmov.f32	s5, s1
 80233fc:	eee1 7aa6 	vfma.f32	s15, s3, s13
 8023400:	eea6 3a26 	vfma.f32	s6, s12, s13
 8023404:	eea7 2a26 	vfma.f32	s4, s14, s13
 8023408:	eea5 0aa6 	vfma.f32	s0, s11, s13
 802340c:	eee4 3aa6 	vfma.f32	s7, s9, s13
 8023410:	eee5 2a26 	vfma.f32	s5, s10, s13
 8023414:	eef0 1a67 	vmov.f32	s3, s15
 8023418:	eee4 0a26 	vfma.f32	s1, s8, s13
 802341c:	f7ee f926 	bl	801166c <nema_blit_quad_fit>
 8023420:	6820      	ldr	r0, [r4, #0]
 8023422:	b390      	cbz	r0, 802348a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8023424:	b00b      	add	sp, #44	@ 0x2c
 8023426:	ecbd 8b08 	vpop	{d8-d11}
 802342a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802342e:	f7fd bbfb 	b.w	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023436:	bf94      	ite	ls
 8023438:	4613      	movls	r3, r2
 802343a:	2303      	movhi	r3, #3
 802343c:	e671      	b.n	8023122 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18a>
 802343e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023442:	bf94      	ite	ls
 8023444:	2300      	movls	r3, #0
 8023446:	2303      	movhi	r3, #3
 8023448:	e654      	b.n	80230f4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x15c>
 802344a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802344e:	bf94      	ite	ls
 8023450:	2300      	movls	r3, #0
 8023452:	2303      	movhi	r3, #3
 8023454:	e693      	b.n	802317e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e6>
 8023456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802345a:	bf94      	ite	ls
 802345c:	2300      	movls	r3, #0
 802345e:	2303      	movhi	r3, #3
 8023460:	e676      	b.n	8023150 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1b8>
 8023462:	4281      	cmp	r1, r0
 8023464:	d192      	bne.n	802338c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 8023466:	2200      	movs	r2, #0
 8023468:	ee15 6a10 	vmov	r6, s10
 802346c:	ee14 ea90 	vmov	lr, s9
 8023470:	4576      	cmp	r6, lr
 8023472:	d002      	beq.n	802347a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4e2>
 8023474:	b1da      	cbz	r2, 80234ae <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x516>
 8023476:	461a      	mov	r2, r3
 8023478:	e6b7      	b.n	80231ea <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802347a:	45c4      	cmp	ip, r8
 802347c:	d1fa      	bne.n	8023474 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4dc>
 802347e:	460d      	mov	r5, r1
 8023480:	46e0      	mov	r8, ip
 8023482:	4601      	mov	r1, r0
 8023484:	461a      	mov	r2, r3
 8023486:	4628      	mov	r0, r5
 8023488:	e780      	b.n	802338c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 802348a:	4b0c      	ldr	r3, [pc, #48]	@ (80234bc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x524>)
 802348c:	4a0c      	ldr	r2, [pc, #48]	@ (80234c0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x528>)
 802348e:	217c      	movs	r1, #124	@ 0x7c
 8023490:	480c      	ldr	r0, [pc, #48]	@ (80234c4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x52c>)
 8023492:	f00f f839 	bl	8032508 <__assert_func>
 8023496:	4b0c      	ldr	r3, [pc, #48]	@ (80234c8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x530>)
 8023498:	4a0c      	ldr	r2, [pc, #48]	@ (80234cc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x534>)
 802349a:	f44f 7157 	mov.w	r1, #860	@ 0x35c
 802349e:	480c      	ldr	r0, [pc, #48]	@ (80234d0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x538>)
 80234a0:	f00f f832 	bl	8032508 <__assert_func>
 80234a4:	4281      	cmp	r1, r0
 80234a6:	f47f aea0 	bne.w	80231ea <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 80234aa:	2201      	movs	r2, #1
 80234ac:	e7dc      	b.n	8023468 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d0>
 80234ae:	461a      	mov	r2, r3
 80234b0:	e76c      	b.n	802338c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 80234b2:	bf00      	nop
 80234b4:	20082f10 	.word	0x20082f10
 80234b8:	3d800000 	.word	0x3d800000
 80234bc:	0803624c 	.word	0x0803624c
 80234c0:	08036ab8 	.word	0x08036ab8
 80234c4:	08036274 	.word	0x08036274
 80234c8:	08036144 	.word	0x08036144
 80234cc:	08036c70 	.word	0x08036c70
 80234d0:	080362f0 	.word	0x080362f0

080234d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80234d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80234d8:	4680      	mov	r8, r0
 80234da:	460f      	mov	r7, r1
 80234dc:	4614      	mov	r4, r2
 80234de:	461e      	mov	r6, r3
 80234e0:	4db2      	ldr	r5, [pc, #712]	@ (80237ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 80234e2:	e8d5 3f8f 	ldab	r3, [r5]
 80234e6:	07da      	lsls	r2, r3, #31
 80234e8:	f140 823a 	bpl.w	8023960 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 80234ec:	4db0      	ldr	r5, [pc, #704]	@ (80237b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 80234ee:	e8d5 3f8f 	ldab	r3, [r5]
 80234f2:	07db      	lsls	r3, r3, #31
 80234f4:	f140 8225 	bpl.w	8023942 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 80234f8:	4dae      	ldr	r5, [pc, #696]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 80234fa:	e8d5 3f8f 	ldab	r3, [r5]
 80234fe:	07d8      	lsls	r0, r3, #31
 8023500:	f140 8210 	bpl.w	8023924 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 8023504:	4dac      	ldr	r5, [pc, #688]	@ (80237b8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 8023506:	e8d5 3f8f 	ldab	r3, [r5]
 802350a:	07d9      	lsls	r1, r3, #31
 802350c:	f140 81fb 	bpl.w	8023906 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 8023510:	4daa      	ldr	r5, [pc, #680]	@ (80237bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 8023512:	e8d5 3f8f 	ldab	r3, [r5]
 8023516:	07da      	lsls	r2, r3, #31
 8023518:	f140 81e6 	bpl.w	80238e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 802351c:	4da8      	ldr	r5, [pc, #672]	@ (80237c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 802351e:	e8d5 3f8f 	ldab	r3, [r5]
 8023522:	07db      	lsls	r3, r3, #31
 8023524:	f140 81d1 	bpl.w	80238ca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 8023528:	4da6      	ldr	r5, [pc, #664]	@ (80237c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 802352a:	e8d5 3f8f 	ldab	r3, [r5]
 802352e:	07d8      	lsls	r0, r3, #31
 8023530:	f140 81bc 	bpl.w	80238ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 8023534:	4da4      	ldr	r5, [pc, #656]	@ (80237c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 8023536:	e8d5 3f8f 	ldab	r3, [r5]
 802353a:	07d9      	lsls	r1, r3, #31
 802353c:	f140 81a7 	bpl.w	802388e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 8023540:	4da2      	ldr	r5, [pc, #648]	@ (80237cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 8023542:	e8d5 3f8f 	ldab	r3, [r5]
 8023546:	07da      	lsls	r2, r3, #31
 8023548:	f140 8192 	bpl.w	8023870 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 802354c:	4da0      	ldr	r5, [pc, #640]	@ (80237d0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 802354e:	e8d5 3f8f 	ldab	r3, [r5]
 8023552:	07db      	lsls	r3, r3, #31
 8023554:	f140 811a 	bpl.w	802378c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 8023558:	4d9e      	ldr	r5, [pc, #632]	@ (80237d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 802355a:	e8d5 3f8f 	ldab	r3, [r5]
 802355e:	07d8      	lsls	r0, r3, #31
 8023560:	f140 8105 	bpl.w	802376e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 8023564:	4d9c      	ldr	r5, [pc, #624]	@ (80237d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 8023566:	e8d5 3f8f 	ldab	r3, [r5]
 802356a:	07d9      	lsls	r1, r3, #31
 802356c:	f140 80f0 	bpl.w	8023750 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 8023570:	4d9a      	ldr	r5, [pc, #616]	@ (80237dc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 8023572:	e8d5 3f8f 	ldab	r3, [r5]
 8023576:	07da      	lsls	r2, r3, #31
 8023578:	f140 80db 	bpl.w	8023732 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 802357c:	4d98      	ldr	r5, [pc, #608]	@ (80237e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 802357e:	e8d5 3f8f 	ldab	r3, [r5]
 8023582:	07db      	lsls	r3, r3, #31
 8023584:	f140 80c6 	bpl.w	8023714 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 8023588:	4d96      	ldr	r5, [pc, #600]	@ (80237e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 802358a:	e8d5 3f8f 	ldab	r3, [r5]
 802358e:	07d8      	lsls	r0, r3, #31
 8023590:	f140 80b1 	bpl.w	80236f6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 8023594:	4d94      	ldr	r5, [pc, #592]	@ (80237e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 8023596:	e8d5 3f8f 	ldab	r3, [r5]
 802359a:	07d9      	lsls	r1, r3, #31
 802359c:	f140 809c 	bpl.w	80236d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 80235a0:	4d92      	ldr	r5, [pc, #584]	@ (80237ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 80235a2:	e8d5 3f8f 	ldab	r3, [r5]
 80235a6:	07da      	lsls	r2, r3, #31
 80235a8:	f140 8087 	bpl.w	80236ba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 80235ac:	4d90      	ldr	r5, [pc, #576]	@ (80237f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 80235ae:	e8d5 3f8f 	ldab	r3, [r5]
 80235b2:	07db      	lsls	r3, r3, #31
 80235b4:	d573      	bpl.n	802369e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 80235b6:	4d8f      	ldr	r5, [pc, #572]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 80235b8:	e8d5 3f8f 	ldab	r3, [r5]
 80235bc:	07d8      	lsls	r0, r3, #31
 80235be:	d560      	bpl.n	8023682 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 80235c0:	4d8d      	ldr	r5, [pc, #564]	@ (80237f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 80235c2:	e8d5 3f8f 	ldab	r3, [r5]
 80235c6:	07d9      	lsls	r1, r3, #31
 80235c8:	d54d      	bpl.n	8023666 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 80235ca:	4d8c      	ldr	r5, [pc, #560]	@ (80237fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 80235cc:	e8d5 3f8f 	ldab	r3, [r5]
 80235d0:	07da      	lsls	r2, r3, #31
 80235d2:	d53a      	bpl.n	802364a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80235d4:	4d8a      	ldr	r5, [pc, #552]	@ (8023800 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 80235d6:	e8d5 3f8f 	ldab	r3, [r5]
 80235da:	07db      	lsls	r3, r3, #31
 80235dc:	d517      	bpl.n	802360e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80235de:	f898 300c 	ldrb.w	r3, [r8, #12]
 80235e2:	2b01      	cmp	r3, #1
 80235e4:	d024      	beq.n	8023630 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 80235e6:	f0c0 81ca 	bcc.w	802397e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 80235ea:	2b02      	cmp	r3, #2
 80235ec:	d002      	beq.n	80235f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80235ee:	2000      	movs	r0, #0
 80235f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80235f4:	2eff      	cmp	r6, #255	@ 0xff
 80235f6:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 80235fa:	f000 81cb 	beq.w	8023994 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 80235fe:	2c03      	cmp	r4, #3
 8023600:	d8f5      	bhi.n	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023602:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023606:	01ff      	.short	0x01ff
 8023608:	01e701ee 	.word	0x01e701ee
 802360c:	01e0      	.short	0x01e0
 802360e:	4628      	mov	r0, r5
 8023610:	f00d fda3 	bl	803115a <__cxa_guard_acquire>
 8023614:	2800      	cmp	r0, #0
 8023616:	d0e2      	beq.n	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 8023618:	4628      	mov	r0, r5
 802361a:	f00d fdaa 	bl	8031172 <__cxa_guard_release>
 802361e:	4a79      	ldr	r2, [pc, #484]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023620:	4979      	ldr	r1, [pc, #484]	@ (8023808 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 8023622:	487a      	ldr	r0, [pc, #488]	@ (802380c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 8023624:	f00d fd92 	bl	803114c <__aeabi_atexit>
 8023628:	f898 300c 	ldrb.w	r3, [r8, #12]
 802362c:	2b01      	cmp	r3, #1
 802362e:	d1da      	bne.n	80235e6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 8023630:	2eff      	cmp	r6, #255	@ 0xff
 8023632:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023636:	f000 81b6 	beq.w	80239a6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 802363a:	2c03      	cmp	r4, #3
 802363c:	d8d7      	bhi.n	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802363e:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023642:	0233      	.short	0x0233
 8023644:	021b0222 	.word	0x021b0222
 8023648:	0214      	.short	0x0214
 802364a:	4628      	mov	r0, r5
 802364c:	f00d fd85 	bl	803115a <__cxa_guard_acquire>
 8023650:	2800      	cmp	r0, #0
 8023652:	d0bf      	beq.n	80235d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8023654:	4628      	mov	r0, r5
 8023656:	f00d fd8c 	bl	8031172 <__cxa_guard_release>
 802365a:	4a6a      	ldr	r2, [pc, #424]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802365c:	496c      	ldr	r1, [pc, #432]	@ (8023810 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 802365e:	486d      	ldr	r0, [pc, #436]	@ (8023814 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 8023660:	f00d fd74 	bl	803114c <__aeabi_atexit>
 8023664:	e7b6      	b.n	80235d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8023666:	4628      	mov	r0, r5
 8023668:	f00d fd77 	bl	803115a <__cxa_guard_acquire>
 802366c:	2800      	cmp	r0, #0
 802366e:	d0ac      	beq.n	80235ca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023670:	4628      	mov	r0, r5
 8023672:	f00d fd7e 	bl	8031172 <__cxa_guard_release>
 8023676:	4a63      	ldr	r2, [pc, #396]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023678:	4967      	ldr	r1, [pc, #412]	@ (8023818 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 802367a:	4868      	ldr	r0, [pc, #416]	@ (802381c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 802367c:	f00d fd66 	bl	803114c <__aeabi_atexit>
 8023680:	e7a3      	b.n	80235ca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023682:	4628      	mov	r0, r5
 8023684:	f00d fd69 	bl	803115a <__cxa_guard_acquire>
 8023688:	2800      	cmp	r0, #0
 802368a:	d099      	beq.n	80235c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802368c:	4628      	mov	r0, r5
 802368e:	f00d fd70 	bl	8031172 <__cxa_guard_release>
 8023692:	4a5c      	ldr	r2, [pc, #368]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023694:	4962      	ldr	r1, [pc, #392]	@ (8023820 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 8023696:	4863      	ldr	r0, [pc, #396]	@ (8023824 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 8023698:	f00d fd58 	bl	803114c <__aeabi_atexit>
 802369c:	e790      	b.n	80235c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802369e:	4628      	mov	r0, r5
 80236a0:	f00d fd5b 	bl	803115a <__cxa_guard_acquire>
 80236a4:	2800      	cmp	r0, #0
 80236a6:	d086      	beq.n	80235b6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80236a8:	4628      	mov	r0, r5
 80236aa:	f00d fd62 	bl	8031172 <__cxa_guard_release>
 80236ae:	4a55      	ldr	r2, [pc, #340]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236b0:	495d      	ldr	r1, [pc, #372]	@ (8023828 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 80236b2:	485e      	ldr	r0, [pc, #376]	@ (802382c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 80236b4:	f00d fd4a 	bl	803114c <__aeabi_atexit>
 80236b8:	e77d      	b.n	80235b6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80236ba:	4628      	mov	r0, r5
 80236bc:	f00d fd4d 	bl	803115a <__cxa_guard_acquire>
 80236c0:	2800      	cmp	r0, #0
 80236c2:	f43f af73 	beq.w	80235ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80236c6:	4628      	mov	r0, r5
 80236c8:	f00d fd53 	bl	8031172 <__cxa_guard_release>
 80236cc:	4a4d      	ldr	r2, [pc, #308]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236ce:	4958      	ldr	r1, [pc, #352]	@ (8023830 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 80236d0:	4858      	ldr	r0, [pc, #352]	@ (8023834 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 80236d2:	f00d fd3b 	bl	803114c <__aeabi_atexit>
 80236d6:	e769      	b.n	80235ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80236d8:	4628      	mov	r0, r5
 80236da:	f00d fd3e 	bl	803115a <__cxa_guard_acquire>
 80236de:	2800      	cmp	r0, #0
 80236e0:	f43f af5e 	beq.w	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 80236e4:	4628      	mov	r0, r5
 80236e6:	f00d fd44 	bl	8031172 <__cxa_guard_release>
 80236ea:	4a46      	ldr	r2, [pc, #280]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236ec:	4952      	ldr	r1, [pc, #328]	@ (8023838 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 80236ee:	4853      	ldr	r0, [pc, #332]	@ (802383c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 80236f0:	f00d fd2c 	bl	803114c <__aeabi_atexit>
 80236f4:	e754      	b.n	80235a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 80236f6:	4628      	mov	r0, r5
 80236f8:	f00d fd2f 	bl	803115a <__cxa_guard_acquire>
 80236fc:	2800      	cmp	r0, #0
 80236fe:	f43f af49 	beq.w	8023594 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023702:	4628      	mov	r0, r5
 8023704:	f00d fd35 	bl	8031172 <__cxa_guard_release>
 8023708:	4a3e      	ldr	r2, [pc, #248]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802370a:	494d      	ldr	r1, [pc, #308]	@ (8023840 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 802370c:	484d      	ldr	r0, [pc, #308]	@ (8023844 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 802370e:	f00d fd1d 	bl	803114c <__aeabi_atexit>
 8023712:	e73f      	b.n	8023594 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023714:	4628      	mov	r0, r5
 8023716:	f00d fd20 	bl	803115a <__cxa_guard_acquire>
 802371a:	2800      	cmp	r0, #0
 802371c:	f43f af34 	beq.w	8023588 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8023720:	4628      	mov	r0, r5
 8023722:	f00d fd26 	bl	8031172 <__cxa_guard_release>
 8023726:	4a37      	ldr	r2, [pc, #220]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023728:	4947      	ldr	r1, [pc, #284]	@ (8023848 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 802372a:	4848      	ldr	r0, [pc, #288]	@ (802384c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 802372c:	f00d fd0e 	bl	803114c <__aeabi_atexit>
 8023730:	e72a      	b.n	8023588 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8023732:	4628      	mov	r0, r5
 8023734:	f00d fd11 	bl	803115a <__cxa_guard_acquire>
 8023738:	2800      	cmp	r0, #0
 802373a:	f43f af1f 	beq.w	802357c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 802373e:	4628      	mov	r0, r5
 8023740:	f00d fd17 	bl	8031172 <__cxa_guard_release>
 8023744:	4a2f      	ldr	r2, [pc, #188]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023746:	4942      	ldr	r1, [pc, #264]	@ (8023850 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 8023748:	4842      	ldr	r0, [pc, #264]	@ (8023854 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 802374a:	f00d fcff 	bl	803114c <__aeabi_atexit>
 802374e:	e715      	b.n	802357c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 8023750:	4628      	mov	r0, r5
 8023752:	f00d fd02 	bl	803115a <__cxa_guard_acquire>
 8023756:	2800      	cmp	r0, #0
 8023758:	f43f af0a 	beq.w	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 802375c:	4628      	mov	r0, r5
 802375e:	f00d fd08 	bl	8031172 <__cxa_guard_release>
 8023762:	4a28      	ldr	r2, [pc, #160]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023764:	493c      	ldr	r1, [pc, #240]	@ (8023858 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 8023766:	483d      	ldr	r0, [pc, #244]	@ (802385c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 8023768:	f00d fcf0 	bl	803114c <__aeabi_atexit>
 802376c:	e700      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 802376e:	4628      	mov	r0, r5
 8023770:	f00d fcf3 	bl	803115a <__cxa_guard_acquire>
 8023774:	2800      	cmp	r0, #0
 8023776:	f43f aef5 	beq.w	8023564 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802377a:	4628      	mov	r0, r5
 802377c:	f00d fcf9 	bl	8031172 <__cxa_guard_release>
 8023780:	4a20      	ldr	r2, [pc, #128]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023782:	4937      	ldr	r1, [pc, #220]	@ (8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 8023784:	4837      	ldr	r0, [pc, #220]	@ (8023864 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 8023786:	f00d fce1 	bl	803114c <__aeabi_atexit>
 802378a:	e6eb      	b.n	8023564 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802378c:	4628      	mov	r0, r5
 802378e:	f00d fce4 	bl	803115a <__cxa_guard_acquire>
 8023792:	2800      	cmp	r0, #0
 8023794:	f43f aee0 	beq.w	8023558 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 8023798:	4628      	mov	r0, r5
 802379a:	f00d fcea 	bl	8031172 <__cxa_guard_release>
 802379e:	4a19      	ldr	r2, [pc, #100]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80237a0:	4931      	ldr	r1, [pc, #196]	@ (8023868 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 80237a2:	4832      	ldr	r0, [pc, #200]	@ (802386c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 80237a4:	f00d fcd2 	bl	803114c <__aeabi_atexit>
 80237a8:	e6d6      	b.n	8023558 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 80237aa:	bf00      	nop
 80237ac:	200833d0 	.word	0x200833d0
 80237b0:	200833e4 	.word	0x200833e4
 80237b4:	200833ac 	.word	0x200833ac
 80237b8:	200833b8 	.word	0x200833b8
 80237bc:	200833f0 	.word	0x200833f0
 80237c0:	200833fc 	.word	0x200833fc
 80237c4:	200833c4 	.word	0x200833c4
 80237c8:	200833dc 	.word	0x200833dc
 80237cc:	200833d4 	.word	0x200833d4
 80237d0:	200833e8 	.word	0x200833e8
 80237d4:	200833b0 	.word	0x200833b0
 80237d8:	200833bc 	.word	0x200833bc
 80237dc:	200833f4 	.word	0x200833f4
 80237e0:	20083400 	.word	0x20083400
 80237e4:	200833c8 	.word	0x200833c8
 80237e8:	200833e0 	.word	0x200833e0
 80237ec:	200833d8 	.word	0x200833d8
 80237f0:	200833ec 	.word	0x200833ec
 80237f4:	200833b4 	.word	0x200833b4
 80237f8:	200833c0 	.word	0x200833c0
 80237fc:	200833f8 	.word	0x200833f8
 8023800:	200833cc 	.word	0x200833cc
 8023804:	20000000 	.word	0x20000000
 8023808:	08022859 	.word	0x08022859
 802380c:	2000020c 	.word	0x2000020c
 8023810:	08022855 	.word	0x08022855
 8023814:	20000238 	.word	0x20000238
 8023818:	08022865 	.word	0x08022865
 802381c:	20000200 	.word	0x20000200
 8023820:	08022869 	.word	0x08022869
 8023824:	200001f4 	.word	0x200001f4
 8023828:	0802285d 	.word	0x0802285d
 802382c:	2000022c 	.word	0x2000022c
 8023830:	08022861 	.word	0x08022861
 8023834:	20000218 	.word	0x20000218
 8023838:	08022875 	.word	0x08022875
 802383c:	20000220 	.word	0x20000220
 8023840:	08022879 	.word	0x08022879
 8023844:	20000208 	.word	0x20000208
 8023848:	0802286d 	.word	0x0802286d
 802384c:	20000240 	.word	0x20000240
 8023850:	08022871 	.word	0x08022871
 8023854:	20000234 	.word	0x20000234
 8023858:	08022885 	.word	0x08022885
 802385c:	200001fc 	.word	0x200001fc
 8023860:	08022889 	.word	0x08022889
 8023864:	200001f0 	.word	0x200001f0
 8023868:	0802287d 	.word	0x0802287d
 802386c:	20000228 	.word	0x20000228
 8023870:	4628      	mov	r0, r5
 8023872:	f00d fc72 	bl	803115a <__cxa_guard_acquire>
 8023876:	2800      	cmp	r0, #0
 8023878:	f43f ae68 	beq.w	802354c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802387c:	4628      	mov	r0, r5
 802387e:	f00d fc78 	bl	8031172 <__cxa_guard_release>
 8023882:	4aa6      	ldr	r2, [pc, #664]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023884:	49a6      	ldr	r1, [pc, #664]	@ (8023b20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 8023886:	48a7      	ldr	r0, [pc, #668]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 8023888:	f00d fc60 	bl	803114c <__aeabi_atexit>
 802388c:	e65e      	b.n	802354c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802388e:	4628      	mov	r0, r5
 8023890:	f00d fc63 	bl	803115a <__cxa_guard_acquire>
 8023894:	2800      	cmp	r0, #0
 8023896:	f43f ae53 	beq.w	8023540 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802389a:	4628      	mov	r0, r5
 802389c:	f00d fc69 	bl	8031172 <__cxa_guard_release>
 80238a0:	4a9e      	ldr	r2, [pc, #632]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238a2:	49a1      	ldr	r1, [pc, #644]	@ (8023b28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 80238a4:	48a1      	ldr	r0, [pc, #644]	@ (8023b2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 80238a6:	f00d fc51 	bl	803114c <__aeabi_atexit>
 80238aa:	e649      	b.n	8023540 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 80238ac:	4628      	mov	r0, r5
 80238ae:	f00d fc54 	bl	803115a <__cxa_guard_acquire>
 80238b2:	2800      	cmp	r0, #0
 80238b4:	f43f ae3e 	beq.w	8023534 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80238b8:	4628      	mov	r0, r5
 80238ba:	f00d fc5a 	bl	8031172 <__cxa_guard_release>
 80238be:	4a97      	ldr	r2, [pc, #604]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238c0:	499b      	ldr	r1, [pc, #620]	@ (8023b30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 80238c2:	489c      	ldr	r0, [pc, #624]	@ (8023b34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 80238c4:	f00d fc42 	bl	803114c <__aeabi_atexit>
 80238c8:	e634      	b.n	8023534 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80238ca:	4628      	mov	r0, r5
 80238cc:	f00d fc45 	bl	803115a <__cxa_guard_acquire>
 80238d0:	2800      	cmp	r0, #0
 80238d2:	f43f ae29 	beq.w	8023528 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 80238d6:	4628      	mov	r0, r5
 80238d8:	f00d fc4b 	bl	8031172 <__cxa_guard_release>
 80238dc:	4a8f      	ldr	r2, [pc, #572]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238de:	4996      	ldr	r1, [pc, #600]	@ (8023b38 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 80238e0:	4896      	ldr	r0, [pc, #600]	@ (8023b3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 80238e2:	f00d fc33 	bl	803114c <__aeabi_atexit>
 80238e6:	e61f      	b.n	8023528 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 80238e8:	4628      	mov	r0, r5
 80238ea:	f00d fc36 	bl	803115a <__cxa_guard_acquire>
 80238ee:	2800      	cmp	r0, #0
 80238f0:	f43f ae14 	beq.w	802351c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 80238f4:	4628      	mov	r0, r5
 80238f6:	f00d fc3c 	bl	8031172 <__cxa_guard_release>
 80238fa:	4a88      	ldr	r2, [pc, #544]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238fc:	4990      	ldr	r1, [pc, #576]	@ (8023b40 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 80238fe:	4891      	ldr	r0, [pc, #580]	@ (8023b44 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8023900:	f00d fc24 	bl	803114c <__aeabi_atexit>
 8023904:	e60a      	b.n	802351c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8023906:	4628      	mov	r0, r5
 8023908:	f00d fc27 	bl	803115a <__cxa_guard_acquire>
 802390c:	2800      	cmp	r0, #0
 802390e:	f43f adff 	beq.w	8023510 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023912:	4628      	mov	r0, r5
 8023914:	f00d fc2d 	bl	8031172 <__cxa_guard_release>
 8023918:	4a80      	ldr	r2, [pc, #512]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 802391a:	498b      	ldr	r1, [pc, #556]	@ (8023b48 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 802391c:	488b      	ldr	r0, [pc, #556]	@ (8023b4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 802391e:	f00d fc15 	bl	803114c <__aeabi_atexit>
 8023922:	e5f5      	b.n	8023510 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023924:	4628      	mov	r0, r5
 8023926:	f00d fc18 	bl	803115a <__cxa_guard_acquire>
 802392a:	2800      	cmp	r0, #0
 802392c:	f43f adea 	beq.w	8023504 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8023930:	4628      	mov	r0, r5
 8023932:	f00d fc1e 	bl	8031172 <__cxa_guard_release>
 8023936:	4a79      	ldr	r2, [pc, #484]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023938:	4985      	ldr	r1, [pc, #532]	@ (8023b50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 802393a:	4886      	ldr	r0, [pc, #536]	@ (8023b54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 802393c:	f00d fc06 	bl	803114c <__aeabi_atexit>
 8023940:	e5e0      	b.n	8023504 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8023942:	4628      	mov	r0, r5
 8023944:	f00d fc09 	bl	803115a <__cxa_guard_acquire>
 8023948:	2800      	cmp	r0, #0
 802394a:	f43f add5 	beq.w	80234f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 802394e:	4628      	mov	r0, r5
 8023950:	f00d fc0f 	bl	8031172 <__cxa_guard_release>
 8023954:	4a71      	ldr	r2, [pc, #452]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023956:	4980      	ldr	r1, [pc, #512]	@ (8023b58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 8023958:	4880      	ldr	r0, [pc, #512]	@ (8023b5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 802395a:	f00d fbf7 	bl	803114c <__aeabi_atexit>
 802395e:	e5cb      	b.n	80234f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8023960:	4628      	mov	r0, r5
 8023962:	f00d fbfa 	bl	803115a <__cxa_guard_acquire>
 8023966:	2800      	cmp	r0, #0
 8023968:	f43f adc0 	beq.w	80234ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 802396c:	4628      	mov	r0, r5
 802396e:	f00d fc00 	bl	8031172 <__cxa_guard_release>
 8023972:	4a6a      	ldr	r2, [pc, #424]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023974:	497a      	ldr	r1, [pc, #488]	@ (8023b60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 8023976:	487b      	ldr	r0, [pc, #492]	@ (8023b64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023978:	f00d fbe8 	bl	803114c <__aeabi_atexit>
 802397c:	e5b6      	b.n	80234ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 802397e:	2eff      	cmp	r6, #255	@ 0xff
 8023980:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023984:	d018      	beq.n	80239b8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e4>
 8023986:	2c03      	cmp	r4, #3
 8023988:	f63f ae31 	bhi.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802398c:	e8df f004 	tbb	[pc, r4]
 8023990:	4b525963 	.word	0x4b525963
 8023994:	2c03      	cmp	r4, #3
 8023996:	f63f ae2a 	bhi.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802399a:	e8df f014 	tbh	[pc, r4, lsl #1]
 802399e:	012d      	.short	0x012d
 80239a0:	001b011e 	.word	0x001b011e
 80239a4:	0014      	.short	0x0014
 80239a6:	2c03      	cmp	r4, #3
 80239a8:	f63f ae21 	bhi.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239ac:	e8df f014 	tbh	[pc, r4, lsl #1]
 80239b0:	00f000ff 	.word	0x00f000ff
 80239b4:	00af010e 	.word	0x00af010e
 80239b8:	2c03      	cmp	r4, #3
 80239ba:	f63f ae18 	bhi.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239be:	e8df f004 	tbb	[pc, r4]
 80239c2:	929c      	.short	0x929c
 80239c4:	848b      	.short	0x848b
 80239c6:	687b      	ldr	r3, [r7, #4]
 80239c8:	4867      	ldr	r0, [pc, #412]	@ (8023b68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 80239ca:	781b      	ldrb	r3, [r3, #0]
 80239cc:	2b00      	cmp	r3, #0
 80239ce:	bf18      	it	ne
 80239d0:	2000      	movne	r0, #0
 80239d2:	e60d      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239d4:	687b      	ldr	r3, [r7, #4]
 80239d6:	4865      	ldr	r0, [pc, #404]	@ (8023b6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 80239d8:	781b      	ldrb	r3, [r3, #0]
 80239da:	2b00      	cmp	r3, #0
 80239dc:	bf18      	it	ne
 80239de:	2000      	movne	r0, #0
 80239e0:	e606      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239e2:	687b      	ldr	r3, [r7, #4]
 80239e4:	781b      	ldrb	r3, [r3, #0]
 80239e6:	2b01      	cmp	r3, #1
 80239e8:	f000 811b 	beq.w	8023c22 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74e>
 80239ec:	f0c0 8113 	bcc.w	8023c16 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 80239f0:	2b02      	cmp	r3, #2
 80239f2:	f47f adfc 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239f6:	4b5e      	ldr	r3, [pc, #376]	@ (8023b70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 80239f8:	4a5e      	ldr	r2, [pc, #376]	@ (8023b74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 80239fa:	f241 3133 	movw	r1, #4915	@ 0x1333
 80239fe:	485e      	ldr	r0, [pc, #376]	@ (8023b78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a00:	f00e fd82 	bl	8032508 <__assert_func>
 8023a04:	687b      	ldr	r3, [r7, #4]
 8023a06:	781b      	ldrb	r3, [r3, #0]
 8023a08:	2b01      	cmp	r3, #1
 8023a0a:	f000 8108 	beq.w	8023c1e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74a>
 8023a0e:	f0c0 8104 	bcc.w	8023c1a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023a12:	2b02      	cmp	r3, #2
 8023a14:	f47f adeb 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a18:	4b55      	ldr	r3, [pc, #340]	@ (8023b70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8023a1a:	4a56      	ldr	r2, [pc, #344]	@ (8023b74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a1c:	f241 313f 	movw	r1, #4927	@ 0x133f
 8023a20:	4855      	ldr	r0, [pc, #340]	@ (8023b78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a22:	f00e fd71 	bl	8032508 <__assert_func>
 8023a26:	687b      	ldr	r3, [r7, #4]
 8023a28:	4846      	ldr	r0, [pc, #280]	@ (8023b44 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8023a2a:	781b      	ldrb	r3, [r3, #0]
 8023a2c:	2b00      	cmp	r3, #0
 8023a2e:	bf18      	it	ne
 8023a30:	2000      	movne	r0, #0
 8023a32:	e5dd      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a34:	687b      	ldr	r3, [r7, #4]
 8023a36:	483f      	ldr	r0, [pc, #252]	@ (8023b34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8023a38:	781b      	ldrb	r3, [r3, #0]
 8023a3a:	2b00      	cmp	r3, #0
 8023a3c:	bf18      	it	ne
 8023a3e:	2000      	movne	r0, #0
 8023a40:	e5d6      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a42:	687b      	ldr	r3, [r7, #4]
 8023a44:	781b      	ldrb	r3, [r3, #0]
 8023a46:	2b00      	cmp	r3, #0
 8023a48:	f000 80ed 	beq.w	8023c26 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x752>
 8023a4c:	2b01      	cmp	r3, #1
 8023a4e:	4845      	ldr	r0, [pc, #276]	@ (8023b64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023a50:	bf18      	it	ne
 8023a52:	2000      	movne	r0, #0
 8023a54:	e5cc      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a56:	687b      	ldr	r3, [r7, #4]
 8023a58:	781b      	ldrb	r3, [r3, #0]
 8023a5a:	2b00      	cmp	r3, #0
 8023a5c:	f000 80e5 	beq.w	8023c2a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x756>
 8023a60:	2b01      	cmp	r3, #1
 8023a62:	483c      	ldr	r0, [pc, #240]	@ (8023b54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8023a64:	bf18      	it	ne
 8023a66:	2000      	movne	r0, #0
 8023a68:	e5c2      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a6a:	687b      	ldr	r3, [r7, #4]
 8023a6c:	4843      	ldr	r0, [pc, #268]	@ (8023b7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a8>)
 8023a6e:	781b      	ldrb	r3, [r3, #0]
 8023a70:	2b00      	cmp	r3, #0
 8023a72:	bf18      	it	ne
 8023a74:	2000      	movne	r0, #0
 8023a76:	e5bb      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a78:	687b      	ldr	r3, [r7, #4]
 8023a7a:	4841      	ldr	r0, [pc, #260]	@ (8023b80 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ac>)
 8023a7c:	781b      	ldrb	r3, [r3, #0]
 8023a7e:	2b00      	cmp	r3, #0
 8023a80:	bf18      	it	ne
 8023a82:	2000      	movne	r0, #0
 8023a84:	e5b4      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a86:	687b      	ldr	r3, [r7, #4]
 8023a88:	781b      	ldrb	r3, [r3, #0]
 8023a8a:	2b01      	cmp	r3, #1
 8023a8c:	f000 80d5 	beq.w	8023c3a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x766>
 8023a90:	f0c0 80d1 	bcc.w	8023c36 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x762>
 8023a94:	2b02      	cmp	r3, #2
 8023a96:	f47f adaa 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a9a:	4b3a      	ldr	r3, [pc, #232]	@ (8023b84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b0>)
 8023a9c:	4a35      	ldr	r2, [pc, #212]	@ (8023b74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a9e:	f241 21d8 	movw	r1, #4824	@ 0x12d8
 8023aa2:	4835      	ldr	r0, [pc, #212]	@ (8023b78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023aa4:	f00e fd30 	bl	8032508 <__assert_func>
 8023aa8:	687b      	ldr	r3, [r7, #4]
 8023aaa:	781b      	ldrb	r3, [r3, #0]
 8023aac:	2b01      	cmp	r3, #1
 8023aae:	f000 80c0 	beq.w	8023c32 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75e>
 8023ab2:	f0c0 80bc 	bcc.w	8023c2e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75a>
 8023ab6:	2b02      	cmp	r3, #2
 8023ab8:	f47f ad99 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023abc:	4b32      	ldr	r3, [pc, #200]	@ (8023b88 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b4>)
 8023abe:	4a2d      	ldr	r2, [pc, #180]	@ (8023b74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023ac0:	f241 21e4 	movw	r1, #4836	@ 0x12e4
 8023ac4:	482c      	ldr	r0, [pc, #176]	@ (8023b78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023ac6:	f00e fd1f 	bl	8032508 <__assert_func>
 8023aca:	687b      	ldr	r3, [r7, #4]
 8023acc:	481b      	ldr	r0, [pc, #108]	@ (8023b3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023ace:	781b      	ldrb	r3, [r3, #0]
 8023ad0:	2b00      	cmp	r3, #0
 8023ad2:	bf18      	it	ne
 8023ad4:	2000      	movne	r0, #0
 8023ad6:	e58b      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ad8:	687b      	ldr	r3, [r7, #4]
 8023ada:	4814      	ldr	r0, [pc, #80]	@ (8023b2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023adc:	781b      	ldrb	r3, [r3, #0]
 8023ade:	2b00      	cmp	r3, #0
 8023ae0:	bf18      	it	ne
 8023ae2:	2000      	movne	r0, #0
 8023ae4:	e584      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ae6:	687b      	ldr	r3, [r7, #4]
 8023ae8:	781b      	ldrb	r3, [r3, #0]
 8023aea:	2b00      	cmp	r3, #0
 8023aec:	f000 80af 	beq.w	8023c4e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77a>
 8023af0:	2b01      	cmp	r3, #1
 8023af2:	481a      	ldr	r0, [pc, #104]	@ (8023b5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8023af4:	bf18      	it	ne
 8023af6:	2000      	movne	r0, #0
 8023af8:	e57a      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023afa:	687b      	ldr	r3, [r7, #4]
 8023afc:	781b      	ldrb	r3, [r3, #0]
 8023afe:	2b00      	cmp	r3, #0
 8023b00:	f000 80a7 	beq.w	8023c52 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77e>
 8023b04:	2b01      	cmp	r3, #1
 8023b06:	4811      	ldr	r0, [pc, #68]	@ (8023b4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8023b08:	bf18      	it	ne
 8023b0a:	2000      	movne	r0, #0
 8023b0c:	e570      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b0e:	687b      	ldr	r3, [r7, #4]
 8023b10:	481e      	ldr	r0, [pc, #120]	@ (8023b8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b8>)
 8023b12:	781b      	ldrb	r3, [r3, #0]
 8023b14:	2b00      	cmp	r3, #0
 8023b16:	bf18      	it	ne
 8023b18:	2000      	movne	r0, #0
 8023b1a:	e569      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b1c:	20000000 	.word	0x20000000
 8023b20:	08022881 	.word	0x08022881
 8023b24:	20000214 	.word	0x20000214
 8023b28:	08022895 	.word	0x08022895
 8023b2c:	2000021c 	.word	0x2000021c
 8023b30:	08022899 	.word	0x08022899
 8023b34:	20000204 	.word	0x20000204
 8023b38:	0802288d 	.word	0x0802288d
 8023b3c:	2000023c 	.word	0x2000023c
 8023b40:	08022891 	.word	0x08022891
 8023b44:	20000230 	.word	0x20000230
 8023b48:	080228a5 	.word	0x080228a5
 8023b4c:	200001f8 	.word	0x200001f8
 8023b50:	080228a9 	.word	0x080228a9
 8023b54:	200001ec 	.word	0x200001ec
 8023b58:	0802289d 	.word	0x0802289d
 8023b5c:	20000224 	.word	0x20000224
 8023b60:	080228a1 	.word	0x080228a1
 8023b64:	20000210 	.word	0x20000210
 8023b68:	20000238 	.word	0x20000238
 8023b6c:	2000020c 	.word	0x2000020c
 8023b70:	080364a8 	.word	0x080364a8
 8023b74:	08037934 	.word	0x08037934
 8023b78:	080362f0 	.word	0x080362f0
 8023b7c:	20000234 	.word	0x20000234
 8023b80:	20000208 	.word	0x20000208
 8023b84:	08036414 	.word	0x08036414
 8023b88:	0803645c 	.word	0x0803645c
 8023b8c:	20000240 	.word	0x20000240
 8023b90:	687b      	ldr	r3, [r7, #4]
 8023b92:	781b      	ldrb	r3, [r3, #0]
 8023b94:	2b01      	cmp	r3, #1
 8023b96:	d060      	beq.n	8023c5a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x786>
 8023b98:	d35d      	bcc.n	8023c56 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x782>
 8023b9a:	2b02      	cmp	r3, #2
 8023b9c:	f47f ad27 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023ba0:	4b2f      	ldr	r3, [pc, #188]	@ (8023c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023ba2:	4a30      	ldr	r2, [pc, #192]	@ (8023c64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023ba4:	f241 3103 	movw	r1, #4867	@ 0x1303
 8023ba8:	482f      	ldr	r0, [pc, #188]	@ (8023c68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023baa:	f00e fcad 	bl	8032508 <__assert_func>
 8023bae:	687b      	ldr	r3, [r7, #4]
 8023bb0:	781b      	ldrb	r3, [r3, #0]
 8023bb2:	2b01      	cmp	r3, #1
 8023bb4:	d049      	beq.n	8023c4a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x776>
 8023bb6:	d346      	bcc.n	8023c46 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x772>
 8023bb8:	2b02      	cmp	r3, #2
 8023bba:	f47f ad18 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bbe:	4b28      	ldr	r3, [pc, #160]	@ (8023c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023bc0:	4a28      	ldr	r2, [pc, #160]	@ (8023c64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023bc2:	f241 310f 	movw	r1, #4879	@ 0x130f
 8023bc6:	4828      	ldr	r0, [pc, #160]	@ (8023c68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023bc8:	f00e fc9e 	bl	8032508 <__assert_func>
 8023bcc:	687b      	ldr	r3, [r7, #4]
 8023bce:	4827      	ldr	r0, [pc, #156]	@ (8023c6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023bd0:	781b      	ldrb	r3, [r3, #0]
 8023bd2:	2b00      	cmp	r3, #0
 8023bd4:	bf18      	it	ne
 8023bd6:	2000      	movne	r0, #0
 8023bd8:	e50a      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bda:	687b      	ldr	r3, [r7, #4]
 8023bdc:	781b      	ldrb	r3, [r3, #0]
 8023bde:	2b01      	cmp	r3, #1
 8023be0:	d02d      	beq.n	8023c3e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76a>
 8023be2:	d318      	bcc.n	8023c16 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023be4:	2b02      	cmp	r3, #2
 8023be6:	f47f ad02 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bea:	4b1d      	ldr	r3, [pc, #116]	@ (8023c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023bec:	4a1d      	ldr	r2, [pc, #116]	@ (8023c64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023bee:	f44f 519b 	mov.w	r1, #4960	@ 0x1360
 8023bf2:	481d      	ldr	r0, [pc, #116]	@ (8023c68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023bf4:	f00e fc88 	bl	8032508 <__assert_func>
 8023bf8:	687b      	ldr	r3, [r7, #4]
 8023bfa:	781b      	ldrb	r3, [r3, #0]
 8023bfc:	2b01      	cmp	r3, #1
 8023bfe:	d020      	beq.n	8023c42 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76e>
 8023c00:	d30b      	bcc.n	8023c1a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023c02:	2b02      	cmp	r3, #2
 8023c04:	f47f acf3 	bne.w	80235ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023c08:	4b15      	ldr	r3, [pc, #84]	@ (8023c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023c0a:	4a16      	ldr	r2, [pc, #88]	@ (8023c64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023c0c:	f241 316c 	movw	r1, #4972	@ 0x136c
 8023c10:	4815      	ldr	r0, [pc, #84]	@ (8023c68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023c12:	f00e fc79 	bl	8032508 <__assert_func>
 8023c16:	4816      	ldr	r0, [pc, #88]	@ (8023c70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x79c>)
 8023c18:	e4ea      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c1a:	4816      	ldr	r0, [pc, #88]	@ (8023c74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a0>)
 8023c1c:	e4e8      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c1e:	4816      	ldr	r0, [pc, #88]	@ (8023c78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a4>)
 8023c20:	e4e6      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c22:	4816      	ldr	r0, [pc, #88]	@ (8023c7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a8>)
 8023c24:	e4e4      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c26:	4816      	ldr	r0, [pc, #88]	@ (8023c80 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7ac>)
 8023c28:	e4e2      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c2a:	4816      	ldr	r0, [pc, #88]	@ (8023c84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b0>)
 8023c2c:	e4e0      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c2e:	4816      	ldr	r0, [pc, #88]	@ (8023c88 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b4>)
 8023c30:	e4de      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c32:	4816      	ldr	r0, [pc, #88]	@ (8023c8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b8>)
 8023c34:	e4dc      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c36:	4816      	ldr	r0, [pc, #88]	@ (8023c90 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7bc>)
 8023c38:	e4da      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c3a:	4816      	ldr	r0, [pc, #88]	@ (8023c94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c0>)
 8023c3c:	e4d8      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c3e:	4816      	ldr	r0, [pc, #88]	@ (8023c98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c4>)
 8023c40:	e4d6      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c42:	4816      	ldr	r0, [pc, #88]	@ (8023c9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c8>)
 8023c44:	e4d4      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c46:	4809      	ldr	r0, [pc, #36]	@ (8023c6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023c48:	e4d2      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c4a:	4815      	ldr	r0, [pc, #84]	@ (8023ca0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7cc>)
 8023c4c:	e4d0      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c4e:	4815      	ldr	r0, [pc, #84]	@ (8023ca4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d0>)
 8023c50:	e4ce      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c52:	4815      	ldr	r0, [pc, #84]	@ (8023ca8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d4>)
 8023c54:	e4cc      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c56:	4815      	ldr	r0, [pc, #84]	@ (8023cac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d8>)
 8023c58:	e4ca      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c5a:	4815      	ldr	r0, [pc, #84]	@ (8023cb0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7dc>)
 8023c5c:	e4c8      	b.n	80235f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c5e:	bf00      	nop
 8023c60:	0803645c 	.word	0x0803645c
 8023c64:	08037934 	.word	0x08037934
 8023c68:	080362f0 	.word	0x080362f0
 8023c6c:	20000220 	.word	0x20000220
 8023c70:	20000238 	.word	0x20000238
 8023c74:	2000020c 	.word	0x2000020c
 8023c78:	200001f4 	.word	0x200001f4
 8023c7c:	20000218 	.word	0x20000218
 8023c80:	20000230 	.word	0x20000230
 8023c84:	20000204 	.word	0x20000204
 8023c88:	20000208 	.word	0x20000208
 8023c8c:	200001f0 	.word	0x200001f0
 8023c90:	20000234 	.word	0x20000234
 8023c94:	20000214 	.word	0x20000214
 8023c98:	2000022c 	.word	0x2000022c
 8023c9c:	20000200 	.word	0x20000200
 8023ca0:	200001fc 	.word	0x200001fc
 8023ca4:	2000023c 	.word	0x2000023c
 8023ca8:	2000021c 	.word	0x2000021c
 8023cac:	20000240 	.word	0x20000240
 8023cb0:	20000228 	.word	0x20000228

08023cb4 <_ZN8touchgfx8LCDGPU2DD0Ev>:
 8023cb4:	b510      	push	{r4, lr}
 8023cb6:	4604      	mov	r4, r0
 8023cb8:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8023cbc:	f00d fa4b 	bl	8031156 <_ZdlPvj>
 8023cc0:	4620      	mov	r0, r4
 8023cc2:	bd10      	pop	{r4, pc}

08023cc4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023cc4:	b510      	push	{r4, lr}
 8023cc6:	4604      	mov	r4, r0
 8023cc8:	2104      	movs	r1, #4
 8023cca:	f00d fa44 	bl	8031156 <_ZdlPvj>
 8023cce:	4620      	mov	r0, r4
 8023cd0:	bd10      	pop	{r4, pc}
 8023cd2:	bf00      	nop

08023cd4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023cd4:	b510      	push	{r4, lr}
 8023cd6:	4604      	mov	r4, r0
 8023cd8:	2104      	movs	r1, #4
 8023cda:	f00d fa3c 	bl	8031156 <_ZdlPvj>
 8023cde:	4620      	mov	r0, r4
 8023ce0:	bd10      	pop	{r4, pc}
 8023ce2:	bf00      	nop

08023ce4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023ce4:	b510      	push	{r4, lr}
 8023ce6:	4604      	mov	r4, r0
 8023ce8:	2104      	movs	r1, #4
 8023cea:	f00d fa34 	bl	8031156 <_ZdlPvj>
 8023cee:	4620      	mov	r0, r4
 8023cf0:	bd10      	pop	{r4, pc}
 8023cf2:	bf00      	nop

08023cf4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023cf4:	b510      	push	{r4, lr}
 8023cf6:	4604      	mov	r4, r0
 8023cf8:	2104      	movs	r1, #4
 8023cfa:	f00d fa2c 	bl	8031156 <_ZdlPvj>
 8023cfe:	4620      	mov	r0, r4
 8023d00:	bd10      	pop	{r4, pc}
 8023d02:	bf00      	nop

08023d04 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d04:	b510      	push	{r4, lr}
 8023d06:	4604      	mov	r4, r0
 8023d08:	2104      	movs	r1, #4
 8023d0a:	f00d fa24 	bl	8031156 <_ZdlPvj>
 8023d0e:	4620      	mov	r0, r4
 8023d10:	bd10      	pop	{r4, pc}
 8023d12:	bf00      	nop

08023d14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d14:	b510      	push	{r4, lr}
 8023d16:	4604      	mov	r4, r0
 8023d18:	2104      	movs	r1, #4
 8023d1a:	f00d fa1c 	bl	8031156 <_ZdlPvj>
 8023d1e:	4620      	mov	r0, r4
 8023d20:	bd10      	pop	{r4, pc}
 8023d22:	bf00      	nop

08023d24 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023d24:	b510      	push	{r4, lr}
 8023d26:	4604      	mov	r4, r0
 8023d28:	2104      	movs	r1, #4
 8023d2a:	f00d fa14 	bl	8031156 <_ZdlPvj>
 8023d2e:	4620      	mov	r0, r4
 8023d30:	bd10      	pop	{r4, pc}
 8023d32:	bf00      	nop

08023d34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023d34:	b510      	push	{r4, lr}
 8023d36:	4604      	mov	r4, r0
 8023d38:	2104      	movs	r1, #4
 8023d3a:	f00d fa0c 	bl	8031156 <_ZdlPvj>
 8023d3e:	4620      	mov	r0, r4
 8023d40:	bd10      	pop	{r4, pc}
 8023d42:	bf00      	nop

08023d44 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023d44:	b510      	push	{r4, lr}
 8023d46:	4604      	mov	r4, r0
 8023d48:	2104      	movs	r1, #4
 8023d4a:	f00d fa04 	bl	8031156 <_ZdlPvj>
 8023d4e:	4620      	mov	r0, r4
 8023d50:	bd10      	pop	{r4, pc}
 8023d52:	bf00      	nop

08023d54 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023d54:	b510      	push	{r4, lr}
 8023d56:	4604      	mov	r4, r0
 8023d58:	2104      	movs	r1, #4
 8023d5a:	f00d f9fc 	bl	8031156 <_ZdlPvj>
 8023d5e:	4620      	mov	r0, r4
 8023d60:	bd10      	pop	{r4, pc}
 8023d62:	bf00      	nop

08023d64 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023d64:	b510      	push	{r4, lr}
 8023d66:	4604      	mov	r4, r0
 8023d68:	2104      	movs	r1, #4
 8023d6a:	f00d f9f4 	bl	8031156 <_ZdlPvj>
 8023d6e:	4620      	mov	r0, r4
 8023d70:	bd10      	pop	{r4, pc}
 8023d72:	bf00      	nop

08023d74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023d74:	b510      	push	{r4, lr}
 8023d76:	4604      	mov	r4, r0
 8023d78:	2104      	movs	r1, #4
 8023d7a:	f00d f9ec 	bl	8031156 <_ZdlPvj>
 8023d7e:	4620      	mov	r0, r4
 8023d80:	bd10      	pop	{r4, pc}
 8023d82:	bf00      	nop

08023d84 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d84:	b510      	push	{r4, lr}
 8023d86:	4604      	mov	r4, r0
 8023d88:	2104      	movs	r1, #4
 8023d8a:	f00d f9e4 	bl	8031156 <_ZdlPvj>
 8023d8e:	4620      	mov	r0, r4
 8023d90:	bd10      	pop	{r4, pc}
 8023d92:	bf00      	nop

08023d94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d94:	b510      	push	{r4, lr}
 8023d96:	4604      	mov	r4, r0
 8023d98:	2104      	movs	r1, #4
 8023d9a:	f00d f9dc 	bl	8031156 <_ZdlPvj>
 8023d9e:	4620      	mov	r0, r4
 8023da0:	bd10      	pop	{r4, pc}
 8023da2:	bf00      	nop

08023da4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023da4:	b510      	push	{r4, lr}
 8023da6:	4604      	mov	r4, r0
 8023da8:	2104      	movs	r1, #4
 8023daa:	f00d f9d4 	bl	8031156 <_ZdlPvj>
 8023dae:	4620      	mov	r0, r4
 8023db0:	bd10      	pop	{r4, pc}
 8023db2:	bf00      	nop

08023db4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023db4:	b510      	push	{r4, lr}
 8023db6:	4604      	mov	r4, r0
 8023db8:	2104      	movs	r1, #4
 8023dba:	f00d f9cc 	bl	8031156 <_ZdlPvj>
 8023dbe:	4620      	mov	r0, r4
 8023dc0:	bd10      	pop	{r4, pc}
 8023dc2:	bf00      	nop

08023dc4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023dc4:	b510      	push	{r4, lr}
 8023dc6:	4604      	mov	r4, r0
 8023dc8:	2104      	movs	r1, #4
 8023dca:	f00d f9c4 	bl	8031156 <_ZdlPvj>
 8023dce:	4620      	mov	r0, r4
 8023dd0:	bd10      	pop	{r4, pc}
 8023dd2:	bf00      	nop

08023dd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023dd4:	b510      	push	{r4, lr}
 8023dd6:	4604      	mov	r4, r0
 8023dd8:	2104      	movs	r1, #4
 8023dda:	f00d f9bc 	bl	8031156 <_ZdlPvj>
 8023dde:	4620      	mov	r0, r4
 8023de0:	bd10      	pop	{r4, pc}
 8023de2:	bf00      	nop

08023de4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023de4:	b510      	push	{r4, lr}
 8023de6:	4604      	mov	r4, r0
 8023de8:	2104      	movs	r1, #4
 8023dea:	f00d f9b4 	bl	8031156 <_ZdlPvj>
 8023dee:	4620      	mov	r0, r4
 8023df0:	bd10      	pop	{r4, pc}
 8023df2:	bf00      	nop

08023df4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023df4:	b510      	push	{r4, lr}
 8023df6:	4604      	mov	r4, r0
 8023df8:	2104      	movs	r1, #4
 8023dfa:	f00d f9ac 	bl	8031156 <_ZdlPvj>
 8023dfe:	4620      	mov	r0, r4
 8023e00:	bd10      	pop	{r4, pc}
 8023e02:	bf00      	nop

08023e04 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023e04:	b510      	push	{r4, lr}
 8023e06:	4604      	mov	r4, r0
 8023e08:	2104      	movs	r1, #4
 8023e0a:	f00d f9a4 	bl	8031156 <_ZdlPvj>
 8023e0e:	4620      	mov	r0, r4
 8023e10:	bd10      	pop	{r4, pc}
 8023e12:	bf00      	nop

08023e14 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023e14:	b510      	push	{r4, lr}
 8023e16:	4604      	mov	r4, r0
 8023e18:	2104      	movs	r1, #4
 8023e1a:	f00d f99c 	bl	8031156 <_ZdlPvj>
 8023e1e:	4620      	mov	r0, r4
 8023e20:	bd10      	pop	{r4, pc}
 8023e22:	bf00      	nop

08023e24 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>:
 8023e24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023e28:	461c      	mov	r4, r3
 8023e2a:	4617      	mov	r7, r2
 8023e2c:	b086      	sub	sp, #24
 8023e2e:	4606      	mov	r6, r0
 8023e30:	4688      	mov	r8, r1
 8023e32:	6818      	ldr	r0, [r3, #0]
 8023e34:	6859      	ldr	r1, [r3, #4]
 8023e36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023e38:	ad02      	add	r5, sp, #8
 8023e3a:	c503      	stmia	r5!, {r0, r1}
 8023e3c:	6818      	ldr	r0, [r3, #0]
 8023e3e:	6859      	ldr	r1, [r3, #4]
 8023e40:	ad04      	add	r5, sp, #16
 8023e42:	c503      	stmia	r5!, {r0, r1}
 8023e44:	a802      	add	r0, sp, #8
 8023e46:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
 8023e4a:	f7e8 ff81 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023e4e:	4621      	mov	r1, r4
 8023e50:	a804      	add	r0, sp, #16
 8023e52:	f7e8 ffa5 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023e56:	2f01      	cmp	r7, #1
 8023e58:	d05c      	beq.n	8023f14 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf0>
 8023e5a:	d357      	bcc.n	8023f0c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xe8>
 8023e5c:	2f02      	cmp	r7, #2
 8023e5e:	d163      	bne.n	8023f28 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x104>
 8023e60:	f04f 0910 	mov.w	r9, #16
 8023e64:	2504      	movs	r5, #4
 8023e66:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023e6a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023e6e:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8023e72:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8023e76:	fb14 2403 	smlabb	r4, r4, r3, r2
 8023e7a:	4f2e      	ldr	r7, [pc, #184]	@ (8023f34 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x110>)
 8023e7c:	440a      	add	r2, r1
 8023e7e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8023e82:	6838      	ldr	r0, [r7, #0]
 8023e84:	440b      	add	r3, r1
 8023e86:	fb05 8404 	mla	r4, r5, r4, r8
 8023e8a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8023e8e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8023e92:	2800      	cmp	r0, #0
 8023e94:	d042      	beq.n	8023f1c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023e96:	f7fc fea7 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023e9a:	6833      	ldr	r3, [r6, #0]
 8023e9c:	4630      	mov	r0, r6
 8023e9e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023ea0:	4798      	blx	r3
 8023ea2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8023ea6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8023eaa:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023eae:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023eb2:	f7ec ff21 	bl	8010cf8 <nema_set_clip>
 8023eb6:	2200      	movs	r2, #0
 8023eb8:	2600      	movs	r6, #0
 8023eba:	4611      	mov	r1, r2
 8023ebc:	4653      	mov	r3, sl
 8023ebe:	4610      	mov	r0, r2
 8023ec0:	f7ec fff8 	bl	8010eb4 <nema_rgba>
 8023ec4:	f7fa fc7a 	bl	801e7bc <nema_set_const_color>
 8023ec8:	f04f 33ff 	mov.w	r3, #4294967295
 8023ecc:	2201      	movs	r2, #1
 8023ece:	2100      	movs	r1, #0
 8023ed0:	4819      	ldr	r0, [pc, #100]	@ (8023f38 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x114>)
 8023ed2:	f7fa f8ad 	bl	801e030 <nema_set_blend>
 8023ed6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8023eda:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8023ede:	fb05 f503 	mul.w	r5, r5, r3
 8023ee2:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8023ee6:	464b      	mov	r3, r9
 8023ee8:	4620      	mov	r0, r4
 8023eea:	e9cd 5600 	strd	r5, r6, [sp]
 8023eee:	f7ec ffe9 	bl	8010ec4 <nema_bind_src_tex>
 8023ef2:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023ef6:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023efa:	f7ed fa3d 	bl	8011378 <nema_blit>
 8023efe:	6838      	ldr	r0, [r7, #0]
 8023f00:	b160      	cbz	r0, 8023f1c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023f02:	f7fc fe91 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023f06:	b006      	add	sp, #24
 8023f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023f0c:	f04f 0904 	mov.w	r9, #4
 8023f10:	2502      	movs	r5, #2
 8023f12:	e7a8      	b.n	8023e66 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023f14:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8023f18:	2503      	movs	r5, #3
 8023f1a:	e7a4      	b.n	8023e66 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023f1c:	4b07      	ldr	r3, [pc, #28]	@ (8023f3c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x118>)
 8023f1e:	4a08      	ldr	r2, [pc, #32]	@ (8023f40 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x11c>)
 8023f20:	217c      	movs	r1, #124	@ 0x7c
 8023f22:	4808      	ldr	r0, [pc, #32]	@ (8023f44 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x120>)
 8023f24:	f00e faf0 	bl	8032508 <__assert_func>
 8023f28:	4b07      	ldr	r3, [pc, #28]	@ (8023f48 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x124>)
 8023f2a:	4a08      	ldr	r2, [pc, #32]	@ (8023f4c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x128>)
 8023f2c:	21c9      	movs	r1, #201	@ 0xc9
 8023f2e:	4808      	ldr	r0, [pc, #32]	@ (8023f50 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x12c>)
 8023f30:	f00e faea 	bl	8032508 <__assert_func>
 8023f34:	200833a8 	.word	0x200833a8
 8023f38:	08000504 	.word	0x08000504
 8023f3c:	0803624c 	.word	0x0803624c
 8023f40:	08036ab8 	.word	0x08036ab8
 8023f44:	08036274 	.word	0x08036274
 8023f48:	080366f8 	.word	0x080366f8
 8023f4c:	08037e5c 	.word	0x08037e5c
 8023f50:	080362f0 	.word	0x080362f0

08023f54 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>:
 8023f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023f56:	680c      	ldr	r4, [r1, #0]
 8023f58:	7805      	ldrb	r5, [r0, #0]
 8023f5a:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8023f5e:	7847      	ldrb	r7, [r0, #1]
 8023f60:	7883      	ldrb	r3, [r0, #2]
 8023f62:	d02e      	beq.n	8023fc2 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19+0x6e>
 8023f64:	fb02 f60c 	mul.w	r6, r2, ip
 8023f68:	fb12 f303 	smulbb	r3, r2, r3
 8023f6c:	1c70      	adds	r0, r6, #1
 8023f6e:	fb15 f502 	smulbb	r5, r5, r2
 8023f72:	eb00 2026 	add.w	r0, r0, r6, asr #8
 8023f76:	1200      	asrs	r0, r0, #8
 8023f78:	fb12 f707 	smulbb	r7, r2, r7
 8023f7c:	ebac 0600 	sub.w	r6, ip, r0
 8023f80:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023f84:	fb06 330e 	mla	r3, r6, lr, r3
 8023f88:	fa5f fe84 	uxtb.w	lr, r4
 8023f8c:	fb06 550e 	mla	r5, r6, lr, r5
 8023f90:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023f94:	fb06 7404 	mla	r4, r6, r4, r7
 8023f98:	4462      	add	r2, ip
 8023f9a:	1a12      	subs	r2, r2, r0
 8023f9c:	b2d0      	uxtb	r0, r2
 8023f9e:	fbb3 f2f0 	udiv	r2, r3, r0
 8023fa2:	fbb5 f5f0 	udiv	r5, r5, r0
 8023fa6:	fbb4 f3f0 	udiv	r3, r4, r0
 8023faa:	0412      	lsls	r2, r2, #16
 8023fac:	b2ec      	uxtb	r4, r5
 8023fae:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8023fb2:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8023fb6:	021b      	lsls	r3, r3, #8
 8023fb8:	4302      	orrs	r2, r0
 8023fba:	b29b      	uxth	r3, r3
 8023fbc:	431a      	orrs	r2, r3
 8023fbe:	600a      	str	r2, [r1, #0]
 8023fc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023fc2:	041b      	lsls	r3, r3, #16
 8023fc4:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8023fc8:	432a      	orrs	r2, r5
 8023fca:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8023fce:	600a      	str	r2, [r1, #0]
 8023fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023fd2:	bf00      	nop

08023fd4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8023fd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023fd8:	4c1e      	ldr	r4, [pc, #120]	@ (8024054 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 8023fda:	6806      	ldr	r6, [r0, #0]
 8023fdc:	6824      	ldr	r4, [r4, #0]
 8023fde:	4605      	mov	r5, r0
 8023fe0:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8023fe4:	b087      	sub	sp, #28
 8023fe6:	6937      	ldr	r7, [r6, #16]
 8023fe8:	4690      	mov	r8, r2
 8023fea:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8023fee:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8023ff2:	b170      	cbz	r0, 8024012 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023ff4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8023ff6:	b160      	cbz	r0, 8024012 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023ff8:	6804      	ldr	r4, [r0, #0]
 8023ffa:	4a17      	ldr	r2, [pc, #92]	@ (8024058 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8023ffc:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8023ffe:	4294      	cmp	r4, r2
 8024000:	d10d      	bne.n	802401e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8024002:	4c16      	ldr	r4, [pc, #88]	@ (802405c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8024004:	7b02      	ldrb	r2, [r0, #12]
 8024006:	42a7      	cmp	r7, r4
 8024008:	d112      	bne.n	8024030 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 802400a:	b9d6      	cbnz	r6, 8024042 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 802400c:	b007      	add	sp, #28
 802400e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024012:	68a0      	ldr	r0, [r4, #8]
 8024014:	4a10      	ldr	r2, [pc, #64]	@ (8024058 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8024016:	6804      	ldr	r4, [r0, #0]
 8024018:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 802401a:	4294      	cmp	r4, r2
 802401c:	d0f1      	beq.n	8024002 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 802401e:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8024022:	47a0      	blx	r4
 8024024:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8024028:	4c0c      	ldr	r4, [pc, #48]	@ (802405c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 802402a:	4602      	mov	r2, r0
 802402c:	42a7      	cmp	r7, r4
 802402e:	d0ec      	beq.n	802400a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 8024030:	9300      	str	r3, [sp, #0]
 8024032:	e9cd 6901 	strd	r6, r9, [sp, #4]
 8024036:	4643      	mov	r3, r8
 8024038:	4628      	mov	r0, r5
 802403a:	47b8      	blx	r7
 802403c:	b007      	add	sp, #28
 802403e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024042:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 8024046:	4628      	mov	r0, r5
 8024048:	4643      	mov	r3, r8
 802404a:	b007      	add	sp, #28
 802404c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024050:	f7ff bee8 	b.w	8023e24 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8024054:	20082f08 	.word	0x20082f08
 8024058:	08020ccd 	.word	0x08020ccd
 802405c:	08024061 	.word	0x08024061

08024060 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8024060:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024064:	b087      	sub	sp, #28
 8024066:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 802406a:	b915      	cbnz	r5, 8024072 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 802406c:	b007      	add	sp, #28
 802406e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024072:	461c      	mov	r4, r3
 8024074:	4617      	mov	r7, r2
 8024076:	4688      	mov	r8, r1
 8024078:	4606      	mov	r6, r0
 802407a:	6859      	ldr	r1, [r3, #4]
 802407c:	6818      	ldr	r0, [r3, #0]
 802407e:	ab02      	add	r3, sp, #8
 8024080:	c303      	stmia	r3!, {r0, r1}
 8024082:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024084:	6818      	ldr	r0, [r3, #0]
 8024086:	6859      	ldr	r1, [r3, #4]
 8024088:	ab04      	add	r3, sp, #16
 802408a:	c303      	stmia	r3!, {r0, r1}
 802408c:	a802      	add	r0, sp, #8
 802408e:	f7e8 fe5f 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024092:	4621      	mov	r1, r4
 8024094:	a804      	add	r0, sp, #16
 8024096:	f7e8 fe83 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802409a:	2f01      	cmp	r7, #1
 802409c:	d05c      	beq.n	8024158 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf8>
 802409e:	d357      	bcc.n	8024150 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf0>
 80240a0:	2f02      	cmp	r7, #2
 80240a2:	d163      	bne.n	802416c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x10c>
 80240a4:	f04f 0910 	mov.w	r9, #16
 80240a8:	2404      	movs	r4, #4
 80240aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80240ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80240b2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80240b6:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 80240ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 80240be:	4f2e      	ldr	r7, [pc, #184]	@ (8024178 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x118>)
 80240c0:	fb04 8801 	mla	r8, r4, r1, r8
 80240c4:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80240c8:	4402      	add	r2, r0
 80240ca:	6838      	ldr	r0, [r7, #0]
 80240cc:	440b      	add	r3, r1
 80240ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 80240d2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80240d6:	2800      	cmp	r0, #0
 80240d8:	d042      	beq.n	8024160 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 80240da:	f7fc fd85 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80240de:	6833      	ldr	r3, [r6, #0]
 80240e0:	4630      	mov	r0, r6
 80240e2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80240e4:	4798      	blx	r3
 80240e6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80240ea:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80240ee:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80240f2:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80240f6:	f7ec fdff 	bl	8010cf8 <nema_set_clip>
 80240fa:	2200      	movs	r2, #0
 80240fc:	462b      	mov	r3, r5
 80240fe:	2500      	movs	r5, #0
 8024100:	4611      	mov	r1, r2
 8024102:	4610      	mov	r0, r2
 8024104:	f7ec fed6 	bl	8010eb4 <nema_rgba>
 8024108:	f7fa fb58 	bl	801e7bc <nema_set_const_color>
 802410c:	f04f 33ff 	mov.w	r3, #4294967295
 8024110:	2201      	movs	r2, #1
 8024112:	2100      	movs	r1, #0
 8024114:	4819      	ldr	r0, [pc, #100]	@ (802417c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x11c>)
 8024116:	f7f9 ff8b 	bl	801e030 <nema_set_blend>
 802411a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802411e:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8024122:	fb04 f403 	mul.w	r4, r4, r3
 8024126:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802412a:	464b      	mov	r3, r9
 802412c:	4640      	mov	r0, r8
 802412e:	e9cd 4500 	strd	r4, r5, [sp]
 8024132:	f7ec fec7 	bl	8010ec4 <nema_bind_src_tex>
 8024136:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802413a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802413e:	f7ed f91b 	bl	8011378 <nema_blit>
 8024142:	6838      	ldr	r0, [r7, #0]
 8024144:	b160      	cbz	r0, 8024160 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 8024146:	f7fc fd6f 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802414a:	b007      	add	sp, #28
 802414c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024150:	f04f 0904 	mov.w	r9, #4
 8024154:	2402      	movs	r4, #2
 8024156:	e7a8      	b.n	80240aa <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8024158:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802415c:	2403      	movs	r4, #3
 802415e:	e7a4      	b.n	80240aa <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8024160:	4b07      	ldr	r3, [pc, #28]	@ (8024180 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x120>)
 8024162:	4a08      	ldr	r2, [pc, #32]	@ (8024184 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x124>)
 8024164:	217c      	movs	r1, #124	@ 0x7c
 8024166:	4808      	ldr	r0, [pc, #32]	@ (8024188 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x128>)
 8024168:	f00e f9ce 	bl	8032508 <__assert_func>
 802416c:	4b07      	ldr	r3, [pc, #28]	@ (802418c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12c>)
 802416e:	4a08      	ldr	r2, [pc, #32]	@ (8024190 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x130>)
 8024170:	21c9      	movs	r1, #201	@ 0xc9
 8024172:	4808      	ldr	r0, [pc, #32]	@ (8024194 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x134>)
 8024174:	f00e f9c8 	bl	8032508 <__assert_func>
 8024178:	200833a8 	.word	0x200833a8
 802417c:	08000504 	.word	0x08000504
 8024180:	0803624c 	.word	0x0803624c
 8024184:	08036ab8 	.word	0x08036ab8
 8024188:	08036274 	.word	0x08036274
 802418c:	080366f8 	.word	0x080366f8
 8024190:	08037e5c 	.word	0x08037e5c
 8024194:	080362f0 	.word	0x080362f0

08024198 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8024198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802419c:	4682      	mov	sl, r0
 802419e:	4851      	ldr	r0, [pc, #324]	@ (80242e4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x14c>)
 80241a0:	b08f      	sub	sp, #60	@ 0x3c
 80241a2:	6800      	ldr	r0, [r0, #0]
 80241a4:	9104      	str	r1, [sp, #16]
 80241a6:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 80241aa:	f9bd 0064 	ldrsh.w	r0, [sp, #100]	@ 0x64
 80241ae:	2902      	cmp	r1, #2
 80241b0:	9003      	str	r0, [sp, #12]
 80241b2:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 80241b6:	9006      	str	r0, [sp, #24]
 80241b8:	f000 81cd 	beq.w	8024556 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3be>
 80241bc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80241be:	2900      	cmp	r1, #0
 80241c0:	f000 81c3 	beq.w	802454a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3b2>
 80241c4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80241c8:	8899      	ldrh	r1, [r3, #4]
 80241ca:	b2ae      	uxth	r6, r5
 80241cc:	4431      	add	r1, r6
 80241ce:	b289      	uxth	r1, r1
 80241d0:	fa0f fc81 	sxth.w	ip, r1
 80241d4:	4565      	cmp	r5, ip
 80241d6:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 80241da:	da28      	bge.n	802422e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241dc:	9803      	ldr	r0, [sp, #12]
 80241de:	1830      	adds	r0, r6, r0
 80241e0:	b280      	uxth	r0, r0
 80241e2:	9005      	str	r0, [sp, #20]
 80241e4:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 80241e8:	4575      	cmp	r5, lr
 80241ea:	da20      	bge.n	802422e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241ec:	f8b3 8006 	ldrh.w	r8, [r3, #6]
 80241f0:	b2a7      	uxth	r7, r4
 80241f2:	4638      	mov	r0, r7
 80241f4:	4447      	add	r7, r8
 80241f6:	b2bf      	uxth	r7, r7
 80241f8:	fa0f f987 	sxth.w	r9, r7
 80241fc:	454c      	cmp	r4, r9
 80241fe:	da16      	bge.n	802422e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024200:	4680      	mov	r8, r0
 8024202:	9007      	str	r0, [sp, #28]
 8024204:	9806      	ldr	r0, [sp, #24]
 8024206:	4480      	add	r8, r0
 8024208:	fa1f f888 	uxth.w	r8, r8
 802420c:	fa0f fb88 	sxth.w	fp, r8
 8024210:	455c      	cmp	r4, fp
 8024212:	da0c      	bge.n	802422e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024214:	9805      	ldr	r0, [sp, #20]
 8024216:	45d9      	cmp	r9, fp
 8024218:	bfc8      	it	gt
 802421a:	4647      	movgt	r7, r8
 802421c:	45f4      	cmp	ip, lr
 802421e:	bfc8      	it	gt
 8024220:	4601      	movgt	r1, r0
 8024222:	9807      	ldr	r0, [sp, #28]
 8024224:	1b89      	subs	r1, r1, r6
 8024226:	1a3f      	subs	r7, r7, r0
 8024228:	b209      	sxth	r1, r1
 802422a:	b23f      	sxth	r7, r7
 802422c:	e005      	b.n	802423a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xa2>
 802422e:	2700      	movs	r7, #0
 8024230:	463c      	mov	r4, r7
 8024232:	4639      	mov	r1, r7
 8024234:	463e      	mov	r6, r7
 8024236:	463d      	mov	r5, r7
 8024238:	9707      	str	r7, [sp, #28]
 802423a:	f9b2 b000 	ldrsh.w	fp, [r2]
 802423e:	8890      	ldrh	r0, [r2, #4]
 8024240:	4458      	add	r0, fp
 8024242:	b280      	uxth	r0, r0
 8024244:	fa0f fc80 	sxth.w	ip, r0
 8024248:	45ac      	cmp	ip, r5
 802424a:	dd51      	ble.n	80242f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 802424c:	4431      	add	r1, r6
 802424e:	b289      	uxth	r1, r1
 8024250:	fa0f fe81 	sxth.w	lr, r1
 8024254:	45f3      	cmp	fp, lr
 8024256:	da4b      	bge.n	80242f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8024258:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 802425c:	88d6      	ldrh	r6, [r2, #6]
 802425e:	4446      	add	r6, r8
 8024260:	b2b6      	uxth	r6, r6
 8024262:	fa0f f986 	sxth.w	r9, r6
 8024266:	454c      	cmp	r4, r9
 8024268:	da42      	bge.n	80242f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 802426a:	9a07      	ldr	r2, [sp, #28]
 802426c:	443a      	add	r2, r7
 802426e:	b297      	uxth	r7, r2
 8024270:	b23a      	sxth	r2, r7
 8024272:	4590      	cmp	r8, r2
 8024274:	9205      	str	r2, [sp, #20]
 8024276:	da3b      	bge.n	80242f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8024278:	45ab      	cmp	fp, r5
 802427a:	bfb8      	it	lt
 802427c:	46ab      	movlt	fp, r5
 802427e:	4544      	cmp	r4, r8
 8024280:	bfb8      	it	lt
 8024282:	4644      	movlt	r4, r8
 8024284:	45f4      	cmp	ip, lr
 8024286:	bfc8      	it	gt
 8024288:	4608      	movgt	r0, r1
 802428a:	9905      	ldr	r1, [sp, #20]
 802428c:	465a      	mov	r2, fp
 802428e:	4589      	cmp	r9, r1
 8024290:	bfc8      	it	gt
 8024292:	463e      	movgt	r6, r7
 8024294:	f8df c054 	ldr.w	ip, [pc, #84]	@ 80242ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x154>
 8024298:	4f13      	ldr	r7, [pc, #76]	@ (80242e8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>)
 802429a:	fa1f f58b 	uxth.w	r5, fp
 802429e:	1b36      	subs	r6, r6, r4
 80242a0:	1b41      	subs	r1, r0, r5
 80242a2:	f8bc c000 	ldrh.w	ip, [ip]
 80242a6:	883f      	ldrh	r7, [r7, #0]
 80242a8:	fa0f fb86 	sxth.w	fp, r6
 80242ac:	fa0f f981 	sxth.w	r9, r1
 80242b0:	2a00      	cmp	r2, #0
 80242b2:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80242b6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80242ba:	f8ad 4022 	strh.w	r4, [sp, #34]	@ 0x22
 80242be:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 80242c2:	fa0f f68c 	sxth.w	r6, ip
 80242c6:	b239      	sxth	r1, r7
 80242c8:	f280 812b 	bge.w	8024522 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38a>
 80242cc:	f04f 0e00 	mov.w	lr, #0
 80242d0:	fa0f f980 	sxth.w	r9, r0
 80242d4:	4675      	mov	r5, lr
 80242d6:	4672      	mov	r2, lr
 80242d8:	4648      	mov	r0, r9
 80242da:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 80242de:	f8ad e020 	strh.w	lr, [sp, #32]
 80242e2:	e015      	b.n	8024310 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 80242e4:	20082f08 	.word	0x20082f08
 80242e8:	20082efe 	.word	0x20082efe
 80242ec:	20082efc 	.word	0x20082efc
 80242f0:	2200      	movs	r2, #0
 80242f2:	48a3      	ldr	r0, [pc, #652]	@ (8024580 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e8>)
 80242f4:	4615      	mov	r5, r2
 80242f6:	f8b0 c000 	ldrh.w	ip, [r0]
 80242fa:	4693      	mov	fp, r2
 80242fc:	4614      	mov	r4, r2
 80242fe:	4610      	mov	r0, r2
 8024300:	4691      	mov	r9, r2
 8024302:	49a0      	ldr	r1, [pc, #640]	@ (8024584 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ec>)
 8024304:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8024308:	880f      	ldrh	r7, [r1, #0]
 802430a:	fa0f f68c 	sxth.w	r6, ip
 802430e:	b239      	sxth	r1, r7
 8024310:	1ab2      	subs	r2, r6, r2
 8024312:	4282      	cmp	r2, r0
 8024314:	da05      	bge.n	8024322 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x18a>
 8024316:	ebac 0c05 	sub.w	ip, ip, r5
 802431a:	fa0f f98c 	sxth.w	r9, ip
 802431e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8024322:	2c00      	cmp	r4, #0
 8024324:	f2c0 80e8 	blt.w	80244f8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>
 8024328:	4622      	mov	r2, r4
 802432a:	1a89      	subs	r1, r1, r2
 802432c:	458b      	cmp	fp, r1
 802432e:	dd04      	ble.n	802433a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a2>
 8024330:	1b3f      	subs	r7, r7, r4
 8024332:	fa0f fb87 	sxth.w	fp, r7
 8024336:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 802433a:	f1b9 0f00 	cmp.w	r9, #0
 802433e:	f340 80d2 	ble.w	80244e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 8024342:	f1bb 0f00 	cmp.w	fp, #0
 8024346:	f340 80ce 	ble.w	80244e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 802434a:	2200      	movs	r2, #0
 802434c:	8819      	ldrh	r1, [r3, #0]
 802434e:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 8024352:	9b03      	ldr	r3, [sp, #12]
 8024354:	1a6d      	subs	r5, r5, r1
 8024356:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 802435a:	eba4 0408 	sub.w	r4, r4, r8
 802435e:	9b06      	ldr	r3, [sp, #24]
 8024360:	a90c      	add	r1, sp, #48	@ 0x30
 8024362:	a80a      	add	r0, sp, #40	@ 0x28
 8024364:	b22d      	sxth	r5, r5
 8024366:	b224      	sxth	r4, r4
 8024368:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 802436c:	920c      	str	r2, [sp, #48]	@ 0x30
 802436e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8024372:	f8ad b02e 	strh.w	fp, [sp, #46]	@ 0x2e
 8024376:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 802437a:	f8ad 402a 	strh.w	r4, [sp, #42]	@ 0x2a
 802437e:	f7e8 fd0f 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024382:	a808      	add	r0, sp, #32
 8024384:	f7e8 fce4 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024388:	a80c      	add	r0, sp, #48	@ 0x30
 802438a:	f7e8 fce1 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802438e:	4b7e      	ldr	r3, [pc, #504]	@ (8024588 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 8024390:	681b      	ldr	r3, [r3, #0]
 8024392:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024396:	2a00      	cmp	r2, #0
 8024398:	f040 80ba 	bne.w	8024510 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 802439c:	6898      	ldr	r0, [r3, #8]
 802439e:	6803      	ldr	r3, [r0, #0]
 80243a0:	4a7a      	ldr	r2, [pc, #488]	@ (802458c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f4>)
 80243a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80243a4:	4293      	cmp	r3, r2
 80243a6:	f040 80c4 	bne.w	8024532 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39a>
 80243aa:	7b00      	ldrb	r0, [r0, #12]
 80243ac:	2801      	cmp	r0, #1
 80243ae:	f000 80ba 	beq.w	8024526 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38e>
 80243b2:	f0c0 80b2 	bcc.w	802451a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x382>
 80243b6:	2802      	cmp	r0, #2
 80243b8:	f040 80da 	bne.w	8024570 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3d8>
 80243bc:	2310      	movs	r3, #16
 80243be:	2604      	movs	r6, #4
 80243c0:	9305      	str	r3, [sp, #20]
 80243c2:	9b04      	ldr	r3, [sp, #16]
 80243c4:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 80243c8:	681b      	ldr	r3, [r3, #0]
 80243ca:	fb06 f101 	mul.w	r1, r6, r1
 80243ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80243d0:	4a6f      	ldr	r2, [pc, #444]	@ (8024590 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f8>)
 80243d2:	9103      	str	r1, [sp, #12]
 80243d4:	4293      	cmp	r3, r2
 80243d6:	f040 80ae 	bne.w	8024536 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39e>
 80243da:	4b6e      	ldr	r3, [pc, #440]	@ (8024594 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3fc>)
 80243dc:	881f      	ldrh	r7, [r3, #0]
 80243de:	2f00      	cmp	r7, #0
 80243e0:	f000 80bf 	beq.w	8024562 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ca>
 80243e4:	9b04      	ldr	r3, [sp, #16]
 80243e6:	7b1b      	ldrb	r3, [r3, #12]
 80243e8:	2b02      	cmp	r3, #2
 80243ea:	f000 80a0 	beq.w	802452e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x396>
 80243ee:	2b01      	cmp	r3, #1
 80243f0:	bf14      	ite	ne
 80243f2:	2302      	movne	r3, #2
 80243f4:	2303      	moveq	r3, #3
 80243f6:	fb17 f703 	smulbb	r7, r7, r3
 80243fa:	b2bf      	uxth	r7, r7
 80243fc:	4a62      	ldr	r2, [pc, #392]	@ (8024588 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 80243fe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8024402:	6810      	ldr	r0, [r2, #0]
 8024404:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8024408:	9a03      	ldr	r2, [sp, #12]
 802440a:	fb02 3808 	mla	r8, r2, r8, r3
 802440e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8024410:	6803      	ldr	r3, [r0, #0]
 8024412:	4442      	add	r2, r8
 8024414:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024416:	9204      	str	r2, [sp, #16]
 8024418:	4798      	blx	r3
 802441a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 802441e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8024422:	fb07 f202 	mul.w	r2, r7, r2
 8024426:	fb06 2303 	mla	r3, r6, r3, r2
 802442a:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80245c4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x42c>
 802442e:	18c3      	adds	r3, r0, r3
 8024430:	f8d8 2000 	ldr.w	r2, [r8]
 8024434:	9306      	str	r3, [sp, #24]
 8024436:	2a00      	cmp	r2, #0
 8024438:	f000 8081 	beq.w	802453e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 802443c:	2600      	movs	r6, #0
 802443e:	4610      	mov	r0, r2
 8024440:	f7fc fbd2 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024444:	9b03      	ldr	r3, [sp, #12]
 8024446:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 802444a:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 802444e:	9300      	str	r3, [sp, #0]
 8024450:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8024454:	f7ec fdba 	bl	8010fcc <nema_bind_dst_tex>
 8024458:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 802445c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8024460:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024464:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024468:	f7ec fc46 	bl	8010cf8 <nema_set_clip>
 802446c:	f04f 33ff 	mov.w	r3, #4294967295
 8024470:	2201      	movs	r2, #1
 8024472:	4631      	mov	r1, r6
 8024474:	f240 5004 	movw	r0, #1284	@ 0x504
 8024478:	f7f9 fdda 	bl	801e030 <nema_set_blend>
 802447c:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 8024480:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8024484:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 8024488:	9700      	str	r7, [sp, #0]
 802448a:	9601      	str	r6, [sp, #4]
 802448c:	f7ec fd1a 	bl	8010ec4 <nema_bind_src_tex>
 8024490:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024494:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024498:	f7ec ff6e 	bl	8011378 <nema_blit>
 802449c:	f8d8 0000 	ldr.w	r0, [r8]
 80244a0:	2800      	cmp	r0, #0
 80244a2:	d04c      	beq.n	802453e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80244a4:	f7fc fbc0 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80244a8:	f8d8 0000 	ldr.w	r0, [r8]
 80244ac:	2800      	cmp	r0, #0
 80244ae:	d046      	beq.n	802453e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80244b0:	6803      	ldr	r3, [r0, #0]
 80244b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80244b4:	4798      	blx	r3
 80244b6:	f8d8 0000 	ldr.w	r0, [r8]
 80244ba:	2800      	cmp	r0, #0
 80244bc:	d03f      	beq.n	802453e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80244be:	6803      	ldr	r3, [r0, #0]
 80244c0:	4637      	mov	r7, r6
 80244c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80244c4:	4798      	blx	r3
 80244c6:	4650      	mov	r0, sl
 80244c8:	f365 060f 	bfi	r6, r5, #0, #16
 80244cc:	f369 070f 	bfi	r7, r9, #0, #16
 80244d0:	f364 461f 	bfi	r6, r4, #16, #16
 80244d4:	f36b 471f 	bfi	r7, fp, #16, #16
 80244d8:	f8ca 6000 	str.w	r6, [sl]
 80244dc:	f8ca 7004 	str.w	r7, [sl, #4]
 80244e0:	b00f      	add	sp, #60	@ 0x3c
 80244e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244e6:	2300      	movs	r3, #0
 80244e8:	4650      	mov	r0, sl
 80244ea:	f8ca 3000 	str.w	r3, [sl]
 80244ee:	f8ca 3004 	str.w	r3, [sl, #4]
 80244f2:	b00f      	add	sp, #60	@ 0x3c
 80244f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244f8:	2000      	movs	r0, #0
 80244fa:	eb0b 0604 	add.w	r6, fp, r4
 80244fe:	fa0f fb86 	sxth.w	fp, r6
 8024502:	4604      	mov	r4, r0
 8024504:	4602      	mov	r2, r0
 8024506:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 802450a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 802450e:	e70c      	b.n	802432a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x192>
 8024510:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024512:	2800      	cmp	r0, #0
 8024514:	f47f af43 	bne.w	802439e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x206>
 8024518:	e740      	b.n	802439c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>
 802451a:	2304      	movs	r3, #4
 802451c:	2602      	movs	r6, #2
 802451e:	9305      	str	r3, [sp, #20]
 8024520:	e74f      	b.n	80243c2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 8024522:	4648      	mov	r0, r9
 8024524:	e6f4      	b.n	8024310 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8024526:	2339      	movs	r3, #57	@ 0x39
 8024528:	2603      	movs	r6, #3
 802452a:	9305      	str	r3, [sp, #20]
 802452c:	e749      	b.n	80243c2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 802452e:	2304      	movs	r3, #4
 8024530:	e761      	b.n	80243f6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25e>
 8024532:	4798      	blx	r3
 8024534:	e73a      	b.n	80243ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>
 8024536:	9804      	ldr	r0, [sp, #16]
 8024538:	4798      	blx	r3
 802453a:	4607      	mov	r7, r0
 802453c:	e75e      	b.n	80243fc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>
 802453e:	4b16      	ldr	r3, [pc, #88]	@ (8024598 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x400>)
 8024540:	4a16      	ldr	r2, [pc, #88]	@ (802459c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x404>)
 8024542:	217c      	movs	r1, #124	@ 0x7c
 8024544:	4816      	ldr	r0, [pc, #88]	@ (80245a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x408>)
 8024546:	f00d ffdf 	bl	8032508 <__assert_func>
 802454a:	4b16      	ldr	r3, [pc, #88]	@ (80245a4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40c>)
 802454c:	4a16      	ldr	r2, [pc, #88]	@ (80245a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 802454e:	21f9      	movs	r1, #249	@ 0xf9
 8024550:	4816      	ldr	r0, [pc, #88]	@ (80245ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 8024552:	f00d ffd9 	bl	8032508 <__assert_func>
 8024556:	4b16      	ldr	r3, [pc, #88]	@ (80245b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x418>)
 8024558:	4a13      	ldr	r2, [pc, #76]	@ (80245a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 802455a:	21f8      	movs	r1, #248	@ 0xf8
 802455c:	4813      	ldr	r0, [pc, #76]	@ (80245ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 802455e:	f00d ffd3 	bl	8032508 <__assert_func>
 8024562:	4b14      	ldr	r3, [pc, #80]	@ (80245b4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x41c>)
 8024564:	4a14      	ldr	r2, [pc, #80]	@ (80245b8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x420>)
 8024566:	f240 110f 	movw	r1, #271	@ 0x10f
 802456a:	4814      	ldr	r0, [pc, #80]	@ (80245bc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x424>)
 802456c:	f00d ffcc 	bl	8032508 <__assert_func>
 8024570:	4b13      	ldr	r3, [pc, #76]	@ (80245c0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x428>)
 8024572:	4a0d      	ldr	r2, [pc, #52]	@ (80245a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 8024574:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024578:	480c      	ldr	r0, [pc, #48]	@ (80245ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 802457a:	f00d ffc5 	bl	8032508 <__assert_func>
 802457e:	bf00      	nop
 8024580:	20082efc 	.word	0x20082efc
 8024584:	20082efe 	.word	0x20082efe
 8024588:	20082f08 	.word	0x20082f08
 802458c:	08020ccd 	.word	0x08020ccd
 8024590:	080228ad 	.word	0x080228ad
 8024594:	20082f02 	.word	0x20082f02
 8024598:	0803624c 	.word	0x0803624c
 802459c:	08036ab8 	.word	0x08036ab8
 80245a0:	08036274 	.word	0x08036274
 80245a4:	080365a8 	.word	0x080365a8
 80245a8:	08037b90 	.word	0x08037b90
 80245ac:	080362f0 	.word	0x080362f0
 80245b0:	080364f4 	.word	0x080364f4
 80245b4:	08036828 	.word	0x08036828
 80245b8:	08037fec 	.word	0x08037fec
 80245bc:	0803686c 	.word	0x0803686c
 80245c0:	080365f8 	.word	0x080365f8
 80245c4:	200833a8 	.word	0x200833a8

080245c8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80245c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245cc:	b085      	sub	sp, #20
 80245ce:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80245d2:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 80245d6:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 80245da:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 80245de:	2e00      	cmp	r6, #0
 80245e0:	d05b      	beq.n	802469a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245e2:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 80245e6:	f1be 0f00 	cmp.w	lr, #0
 80245ea:	dd56      	ble.n	802469a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245ec:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80245f0:	f1be 0f00 	cmp.w	lr, #0
 80245f4:	dd51      	ble.n	802469a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245f6:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 80245fa:	f1bb 0f0b 	cmp.w	fp, #11
 80245fe:	f000 815f 	beq.w	80248c0 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f8>
 8024602:	f1bb 0f0d 	cmp.w	fp, #13
 8024606:	4684      	mov	ip, r0
 8024608:	4614      	mov	r4, r2
 802460a:	461f      	mov	r7, r3
 802460c:	d03c      	beq.n	8024688 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc0>
 802460e:	f8df a35c 	ldr.w	sl, [pc, #860]	@ 802496c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a4>
 8024612:	f8da 0000 	ldr.w	r0, [sl]
 8024616:	2800      	cmp	r0, #0
 8024618:	f000 8187 	beq.w	802492a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 802461c:	f8cd c00c 	str.w	ip, [sp, #12]
 8024620:	f7fc fae2 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024624:	9b03      	ldr	r3, [sp, #12]
 8024626:	681a      	ldr	r2, [r3, #0]
 8024628:	4618      	mov	r0, r3
 802462a:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 802462c:	4798      	blx	r3
 802462e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8024632:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8024636:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 802463a:	f9b5 0000 	ldrsh.w	r0, [r5]
 802463e:	f7ec fb5b 	bl	8010cf8 <nema_set_clip>
 8024642:	2200      	movs	r2, #0
 8024644:	4633      	mov	r3, r6
 8024646:	4611      	mov	r1, r2
 8024648:	4610      	mov	r0, r2
 802464a:	f7ec fc33 	bl	8010eb4 <nema_rgba>
 802464e:	f7fa f8b5 	bl	801e7bc <nema_set_const_color>
 8024652:	f04f 33ff 	mov.w	r3, #4294967295
 8024656:	2201      	movs	r2, #1
 8024658:	2100      	movs	r1, #0
 802465a:	48ba      	ldr	r0, [pc, #744]	@ (8024944 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 802465c:	f7f9 fce8 	bl	801e030 <nema_set_blend>
 8024660:	f1bb 0f0d 	cmp.w	fp, #13
 8024664:	f200 8167 	bhi.w	8024936 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8024668:	e8df f01b 	tbh	[pc, fp, lsl #1]
 802466c:	00c100cd 	.word	0x00c100cd
 8024670:	016500d6 	.word	0x016500d6
 8024674:	01650165 	.word	0x01650165
 8024678:	01650165 	.word	0x01650165
 802467c:	01650165 	.word	0x01650165
 8024680:	01650165 	.word	0x01650165
 8024684:	001a00ac 	.word	0x001a00ac
 8024688:	685b      	ldr	r3, [r3, #4]
 802468a:	b133      	cbz	r3, 802469a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802468c:	781b      	ldrb	r3, [r3, #0]
 802468e:	f1a3 0216 	sub.w	r2, r3, #22
 8024692:	2a01      	cmp	r2, #1
 8024694:	d9bb      	bls.n	802460e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 8024696:	2b12      	cmp	r3, #18
 8024698:	d0b9      	beq.n	802460e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 802469a:	b005      	add	sp, #20
 802469c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80246a0:	f04f 36ff 	mov.w	r6, #4294967295
 80246a4:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80246a8:	687b      	ldr	r3, [r7, #4]
 80246aa:	6838      	ldr	r0, [r7, #0]
 80246ac:	781b      	ldrb	r3, [r3, #0]
 80246ae:	f008 0501 	and.w	r5, r8, #1
 80246b2:	e9cd 6500 	strd	r6, r5, [sp]
 80246b6:	f7ec fc05 	bl	8010ec4 <nema_bind_src_tex>
 80246ba:	2001      	movs	r0, #1
 80246bc:	f7ed fc9e 	bl	8011ffc <nema_enable_tiling>
 80246c0:	f9b9 3000 	ldrsh.w	r3, [r9]
 80246c4:	edd4 7a00 	vldr	s15, [r4]
 80246c8:	ee02 3a10 	vmov	s4, r3
 80246cc:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 80246d0:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 80246d4:	ee02 3a90 	vmov	s5, r3
 80246d8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80246dc:	eddf 6a9a 	vldr	s13, [pc, #616]	@ 8024948 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80246e0:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 80246e4:	edd4 7a01 	vldr	s15, [r4, #4]
 80246e8:	eeb0 0a42 	vmov.f32	s0, s4
 80246ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80246f0:	eea7 0a26 	vfma.f32	s0, s14, s13
 80246f4:	eef0 0a62 	vmov.f32	s1, s5
 80246f8:	ed94 7a03 	vldr	s14, [r4, #12]
 80246fc:	4b93      	ldr	r3, [pc, #588]	@ (802494c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x384>)
 80246fe:	eee7 0aa6 	vfma.f32	s1, s15, s13
 8024702:	781b      	ldrb	r3, [r3, #0]
 8024704:	edd4 7a04 	vldr	s15, [r4, #16]
 8024708:	2b01      	cmp	r3, #1
 802470a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802470e:	f000 808c 	beq.w	802482a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x262>
 8024712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802471a:	f240 80ea 	bls.w	80248f2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 802471e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024722:	bf94      	ite	ls
 8024724:	2001      	movls	r0, #1
 8024726:	2002      	movhi	r0, #2
 8024728:	edd4 7a05 	vldr	s15, [r4, #20]
 802472c:	ed94 6a08 	vldr	s12, [r4, #32]
 8024730:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024734:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024738:	edd4 7a06 	vldr	s15, [r4, #24]
 802473c:	eddf 6a82 	vldr	s13, [pc, #520]	@ 8024948 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024744:	eeb0 1a42 	vmov.f32	s2, s4
 8024748:	eef0 1a62 	vmov.f32	s3, s5
 802474c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024750:	eee7 1aa6 	vfma.f32	s3, s15, s13
 8024754:	eea7 1a26 	vfma.f32	s2, s14, s13
 8024758:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 802475c:	f240 80c1 	bls.w	80248e2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 8024760:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024768:	bf94      	ite	ls
 802476a:	2101      	movls	r1, #1
 802476c:	2102      	movhi	r1, #2
 802476e:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024772:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 8024776:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802477a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802477e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024782:	eddf 6a71 	vldr	s13, [pc, #452]	@ 8024948 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024786:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802478a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802478e:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024792:	eea7 2a26 	vfma.f32	s4, s14, s13
 8024796:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802479a:	f240 809a 	bls.w	80248d2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 802479e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80247a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247a6:	bf94      	ite	ls
 80247a8:	2201      	movls	r2, #1
 80247aa:	2202      	movhi	r2, #2
 80247ac:	f7ec feda 	bl	8011564 <nema_blit_tri_fit>
 80247b0:	f8da 0000 	ldr.w	r0, [sl]
 80247b4:	2800      	cmp	r0, #0
 80247b6:	f000 80b8 	beq.w	802492a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 80247ba:	b005      	add	sp, #20
 80247bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80247c0:	f7fc ba32 	b.w	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80247c4:	4a62      	ldr	r2, [pc, #392]	@ (8024950 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 80247c6:	23ff      	movs	r3, #255	@ 0xff
 80247c8:	6810      	ldr	r0, [r2, #0]
 80247ca:	f008 0501 	and.w	r5, r8, #1
 80247ce:	b2c2      	uxtb	r2, r0
 80247d0:	f3c0 2107 	ubfx	r1, r0, #8, #8
 80247d4:	f3c0 4007 	ubfx	r0, r0, #16, #8
 80247d8:	f7ec fb6c 	bl	8010eb4 <nema_rgba>
 80247dc:	f7ec fa80 	bl	8010ce0 <nema_set_tex_color>
 80247e0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247e4:	6838      	ldr	r0, [r7, #0]
 80247e6:	2329      	movs	r3, #41	@ 0x29
 80247e8:	f04f 36ff 	mov.w	r6, #4294967295
 80247ec:	e761      	b.n	80246b2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 80247ee:	2339      	movs	r3, #57	@ 0x39
 80247f0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247f4:	f04f 0c03 	mov.w	ip, #3
 80247f8:	6838      	ldr	r0, [r7, #0]
 80247fa:	f008 0501 	and.w	r5, r8, #1
 80247fe:	693e      	ldr	r6, [r7, #16]
 8024800:	fb06 f60c 	mul.w	r6, r6, ip
 8024804:	e755      	b.n	80246b2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 8024806:	f008 0501 	and.w	r5, r8, #1
 802480a:	6838      	ldr	r0, [r7, #0]
 802480c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024810:	2304      	movs	r3, #4
 8024812:	f04f 0c02 	mov.w	ip, #2
 8024816:	e7f2      	b.n	80247fe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8024818:	2310      	movs	r3, #16
 802481a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 802481e:	f04f 0c04 	mov.w	ip, #4
 8024822:	6838      	ldr	r0, [r7, #0]
 8024824:	f008 0501 	and.w	r5, r8, #1
 8024828:	e7e9      	b.n	80247fe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 802482a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802482e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024832:	d974      	bls.n	802491e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x356>
 8024834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024838:	bf94      	ite	ls
 802483a:	2002      	movls	r0, #2
 802483c:	2003      	movhi	r0, #3
 802483e:	edd4 7a05 	vldr	s15, [r4, #20]
 8024842:	ed94 6a08 	vldr	s12, [r4, #32]
 8024846:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802484a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802484e:	edd4 7a06 	vldr	s15, [r4, #24]
 8024852:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8024948 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024856:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802485a:	eeb0 1a42 	vmov.f32	s2, s4
 802485e:	eef0 1a62 	vmov.f32	s3, s5
 8024862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024866:	eee7 1aa6 	vfma.f32	s3, s15, s13
 802486a:	eea7 1a26 	vfma.f32	s2, s14, s13
 802486e:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8024872:	d94c      	bls.n	802490e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x346>
 8024874:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802487c:	bf94      	ite	ls
 802487e:	2102      	movls	r1, #2
 8024880:	2103      	movhi	r1, #3
 8024882:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024886:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 802488a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802488e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024892:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024896:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 8024948 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 802489a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802489e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248a2:	eee7 2aa6 	vfma.f32	s5, s15, s13
 80248a6:	eea7 2a26 	vfma.f32	s4, s14, s13
 80248aa:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 80248ae:	d926      	bls.n	80248fe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80248b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248b8:	bf94      	ite	ls
 80248ba:	2202      	movls	r2, #2
 80248bc:	2203      	movhi	r2, #3
 80248be:	e775      	b.n	80247ac <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 80248c0:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 80248c4:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 80248c8:	b005      	add	sp, #20
 80248ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248ce:	f7e7 bcef 	b.w	800c2b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 80248d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248da:	bf94      	ite	ls
 80248dc:	2200      	movls	r2, #0
 80248de:	2203      	movhi	r2, #3
 80248e0:	e764      	b.n	80247ac <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 80248e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248ea:	bf94      	ite	ls
 80248ec:	2100      	movls	r1, #0
 80248ee:	2103      	movhi	r1, #3
 80248f0:	e73d      	b.n	802476e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a6>
 80248f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248f6:	bf94      	ite	ls
 80248f8:	2000      	movls	r0, #0
 80248fa:	2003      	movhi	r0, #3
 80248fc:	e714      	b.n	8024728 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 80248fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024906:	bf94      	ite	ls
 8024908:	2201      	movls	r2, #1
 802490a:	2200      	movhi	r2, #0
 802490c:	e74e      	b.n	80247ac <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 802490e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024916:	bf94      	ite	ls
 8024918:	2101      	movls	r1, #1
 802491a:	2100      	movhi	r1, #0
 802491c:	e7b1      	b.n	8024882 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 802491e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024922:	bf94      	ite	ls
 8024924:	2001      	movls	r0, #1
 8024926:	2000      	movhi	r0, #0
 8024928:	e789      	b.n	802483e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x276>
 802492a:	4b0a      	ldr	r3, [pc, #40]	@ (8024954 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 802492c:	4a0a      	ldr	r2, [pc, #40]	@ (8024958 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 802492e:	217c      	movs	r1, #124	@ 0x7c
 8024930:	480a      	ldr	r0, [pc, #40]	@ (802495c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>)
 8024932:	f00d fde9 	bl	8032508 <__assert_func>
 8024936:	4b0a      	ldr	r3, [pc, #40]	@ (8024960 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>)
 8024938:	4a0a      	ldr	r2, [pc, #40]	@ (8024964 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39c>)
 802493a:	f240 21e2 	movw	r1, #738	@ 0x2e2
 802493e:	480a      	ldr	r0, [pc, #40]	@ (8024968 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a0>)
 8024940:	f00d fde2 	bl	8032508 <__assert_func>
 8024944:	08000504 	.word	0x08000504
 8024948:	3d800000 	.word	0x3d800000
 802494c:	20082f00 	.word	0x20082f00
 8024950:	20082f10 	.word	0x20082f10
 8024954:	0803624c 	.word	0x0803624c
 8024958:	08036ab8 	.word	0x08036ab8
 802495c:	08036274 	.word	0x08036274
 8024960:	08036144 	.word	0x08036144
 8024964:	08036e5c 	.word	0x08036e5c
 8024968:	080362f0 	.word	0x080362f0
 802496c:	200833a8 	.word	0x200833a8

08024970 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8024970:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8024974:	2700      	movs	r7, #0
 8024976:	4a2b      	ldr	r2, [pc, #172]	@ (8024a24 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 8024978:	4b2b      	ldr	r3, [pc, #172]	@ (8024a28 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 802497a:	4d2c      	ldr	r5, [pc, #176]	@ (8024a2c <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 802497c:	8812      	ldrh	r2, [r2, #0]
 802497e:	881b      	ldrh	r3, [r3, #0]
 8024980:	b088      	sub	sp, #32
 8024982:	4604      	mov	r4, r0
 8024984:	6828      	ldr	r0, [r5, #0]
 8024986:	f8ad 201c 	strh.w	r2, [sp, #28]
 802498a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802498e:	9706      	str	r7, [sp, #24]
 8024990:	6803      	ldr	r3, [r0, #0]
 8024992:	4689      	mov	r9, r1
 8024994:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024996:	4798      	blx	r3
 8024998:	6823      	ldr	r3, [r4, #0]
 802499a:	4a25      	ldr	r2, [pc, #148]	@ (8024a30 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 802499c:	68de      	ldr	r6, [r3, #12]
 802499e:	4601      	mov	r1, r0
 80249a0:	4296      	cmp	r6, r2
 80249a2:	d134      	bne.n	8024a0e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 80249a4:	682a      	ldr	r2, [r5, #0]
 80249a6:	691d      	ldr	r5, [r3, #16]
 80249a8:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 80249ac:	b9a3      	cbnz	r3, 80249d8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 80249ae:	6890      	ldr	r0, [r2, #8]
 80249b0:	4a20      	ldr	r2, [pc, #128]	@ (8024a34 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 80249b2:	6803      	ldr	r3, [r0, #0]
 80249b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80249b6:	4293      	cmp	r3, r2
 80249b8:	d116      	bne.n	80249e8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 80249ba:	4b1f      	ldr	r3, [pc, #124]	@ (8024a38 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 80249bc:	7b02      	ldrb	r2, [r0, #12]
 80249be:	429d      	cmp	r5, r3
 80249c0:	d119      	bne.n	80249f6 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 80249c2:	23ff      	movs	r3, #255	@ 0xff
 80249c4:	f8cd 9000 	str.w	r9, [sp]
 80249c8:	9301      	str	r3, [sp, #4]
 80249ca:	4620      	mov	r0, r4
 80249cc:	ab06      	add	r3, sp, #24
 80249ce:	f7ff fa29 	bl	8023e24 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 80249d2:	b008      	add	sp, #32
 80249d4:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80249d8:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 80249da:	2800      	cmp	r0, #0
 80249dc:	d0e7      	beq.n	80249ae <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 80249de:	6803      	ldr	r3, [r0, #0]
 80249e0:	4a14      	ldr	r2, [pc, #80]	@ (8024a34 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 80249e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80249e4:	4293      	cmp	r3, r2
 80249e6:	d0e8      	beq.n	80249ba <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 80249e8:	9105      	str	r1, [sp, #20]
 80249ea:	4798      	blx	r3
 80249ec:	4b12      	ldr	r3, [pc, #72]	@ (8024a38 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 80249ee:	4602      	mov	r2, r0
 80249f0:	429d      	cmp	r5, r3
 80249f2:	9905      	ldr	r1, [sp, #20]
 80249f4:	d0e5      	beq.n	80249c2 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 80249f6:	2600      	movs	r6, #0
 80249f8:	23ff      	movs	r3, #255	@ 0xff
 80249fa:	f8cd 9000 	str.w	r9, [sp]
 80249fe:	e9cd 3601 	strd	r3, r6, [sp, #4]
 8024a02:	4620      	mov	r0, r4
 8024a04:	ab06      	add	r3, sp, #24
 8024a06:	47a8      	blx	r5
 8024a08:	b008      	add	sp, #32
 8024a0a:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024a0e:	22ff      	movs	r2, #255	@ 0xff
 8024a10:	9701      	str	r7, [sp, #4]
 8024a12:	9200      	str	r2, [sp, #0]
 8024a14:	464b      	mov	r3, r9
 8024a16:	4620      	mov	r0, r4
 8024a18:	aa06      	add	r2, sp, #24
 8024a1a:	47b0      	blx	r6
 8024a1c:	b008      	add	sp, #32
 8024a1e:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024a22:	bf00      	nop
 8024a24:	20082f02 	.word	0x20082f02
 8024a28:	20082f04 	.word	0x20082f04
 8024a2c:	20082f08 	.word	0x20082f08
 8024a30:	08023fd5 	.word	0x08023fd5
 8024a34:	08020ccd 	.word	0x08020ccd
 8024a38:	08024061 	.word	0x08024061

08024a3c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8024a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a40:	4604      	mov	r4, r0
 8024a42:	4865      	ldr	r0, [pc, #404]	@ (8024bd8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024a44:	460f      	mov	r7, r1
 8024a46:	6800      	ldr	r0, [r0, #0]
 8024a48:	b093      	sub	sp, #76	@ 0x4c
 8024a4a:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 8024a4e:	2902      	cmp	r1, #2
 8024a50:	f000 81f2 	beq.w	8024e38 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3fc>
 8024a54:	f10d 0948 	add.w	r9, sp, #72	@ 0x48
 8024a58:	f829 3d1c 	strh.w	r3, [r9, #-28]!
 8024a5c:	4648      	mov	r0, r9
 8024a5e:	4615      	mov	r5, r2
 8024a60:	f7eb fbee 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8024a64:	6823      	ldr	r3, [r4, #0]
 8024a66:	4a5d      	ldr	r2, [pc, #372]	@ (8024bdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a0>)
 8024a68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024a6a:	4680      	mov	r8, r0
 8024a6c:	4293      	cmp	r3, r2
 8024a6e:	f040 81b5 	bne.w	8024ddc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a0>
 8024a72:	7b20      	ldrb	r0, [r4, #12]
 8024a74:	4580      	cmp	r8, r0
 8024a76:	f040 81d9 	bne.w	8024e2c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3f0>
 8024a7a:	4648      	mov	r0, r9
 8024a7c:	f7eb fb5c 	bl	8010138 <_ZNK8touchgfx6Bitmap7getDataEv>
 8024a80:	4683      	mov	fp, r0
 8024a82:	2800      	cmp	r0, #0
 8024a84:	f000 81cc 	beq.w	8024e20 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3e4>
 8024a88:	6823      	ldr	r3, [r4, #0]
 8024a8a:	4648      	mov	r0, r9
 8024a8c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8024a90:	f7eb fa98 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8024a94:	9005      	str	r0, [sp, #20]
 8024a96:	4648      	mov	r0, r9
 8024a98:	f7eb fac8 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8024a9c:	4b50      	ldr	r3, [pc, #320]	@ (8024be0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>)
 8024a9e:	9006      	str	r0, [sp, #24]
 8024aa0:	4598      	cmp	r8, r3
 8024aa2:	f040 818e 	bne.w	8024dc2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x386>
 8024aa6:	4b4c      	ldr	r3, [pc, #304]	@ (8024bd8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024aa8:	681b      	ldr	r3, [r3, #0]
 8024aaa:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8024aae:	2b02      	cmp	r3, #2
 8024ab0:	f000 81c8 	beq.w	8024e44 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x408>
 8024ab4:	f9b5 8000 	ldrsh.w	r8, [r5]
 8024ab8:	88ab      	ldrh	r3, [r5, #4]
 8024aba:	fa1f fe88 	uxth.w	lr, r8
 8024abe:	4473      	add	r3, lr
 8024ac0:	b29b      	uxth	r3, r3
 8024ac2:	b218      	sxth	r0, r3
 8024ac4:	4580      	cmp	r8, r0
 8024ac6:	f9b5 a002 	ldrsh.w	sl, [r5, #2]
 8024aca:	da2a      	bge.n	8024b22 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024acc:	9a05      	ldr	r2, [sp, #20]
 8024ace:	eb0e 0102 	add.w	r1, lr, r2
 8024ad2:	b28a      	uxth	r2, r1
 8024ad4:	9207      	str	r2, [sp, #28]
 8024ad6:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 8024ada:	45e0      	cmp	r8, ip
 8024adc:	da21      	bge.n	8024b22 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024ade:	88ea      	ldrh	r2, [r5, #6]
 8024ae0:	fa1f f68a 	uxth.w	r6, sl
 8024ae4:	4432      	add	r2, r6
 8024ae6:	b292      	uxth	r2, r2
 8024ae8:	b211      	sxth	r1, r2
 8024aea:	458a      	cmp	sl, r1
 8024aec:	9108      	str	r1, [sp, #32]
 8024aee:	da18      	bge.n	8024b22 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024af0:	9906      	ldr	r1, [sp, #24]
 8024af2:	eb06 0901 	add.w	r9, r6, r1
 8024af6:	fa1f f989 	uxth.w	r9, r9
 8024afa:	fa0f f189 	sxth.w	r1, r9
 8024afe:	458a      	cmp	sl, r1
 8024b00:	9109      	str	r1, [sp, #36]	@ 0x24
 8024b02:	da0e      	bge.n	8024b22 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024b04:	9907      	ldr	r1, [sp, #28]
 8024b06:	4560      	cmp	r0, ip
 8024b08:	bfc8      	it	gt
 8024b0a:	460b      	movgt	r3, r1
 8024b0c:	e9dd 1008 	ldrd	r1, r0, [sp, #32]
 8024b10:	4281      	cmp	r1, r0
 8024b12:	bfc8      	it	gt
 8024b14:	464a      	movgt	r2, r9
 8024b16:	eba3 030e 	sub.w	r3, r3, lr
 8024b1a:	1b92      	subs	r2, r2, r6
 8024b1c:	b21b      	sxth	r3, r3
 8024b1e:	b212      	sxth	r2, r2
 8024b20:	e005      	b.n	8024b2e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xf2>
 8024b22:	2200      	movs	r2, #0
 8024b24:	4616      	mov	r6, r2
 8024b26:	4692      	mov	sl, r2
 8024b28:	4613      	mov	r3, r2
 8024b2a:	4696      	mov	lr, r2
 8024b2c:	4690      	mov	r8, r2
 8024b2e:	f9b7 0000 	ldrsh.w	r0, [r7]
 8024b32:	88b9      	ldrh	r1, [r7, #4]
 8024b34:	4401      	add	r1, r0
 8024b36:	b289      	uxth	r1, r1
 8024b38:	fa0f f981 	sxth.w	r9, r1
 8024b3c:	45c8      	cmp	r8, r9
 8024b3e:	da55      	bge.n	8024bec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b40:	449e      	add	lr, r3
 8024b42:	fa1f fe8e 	uxth.w	lr, lr
 8024b46:	fa0f f38e 	sxth.w	r3, lr
 8024b4a:	4298      	cmp	r0, r3
 8024b4c:	9307      	str	r3, [sp, #28]
 8024b4e:	da4d      	bge.n	8024bec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b50:	f9b7 c002 	ldrsh.w	ip, [r7, #2]
 8024b54:	88fb      	ldrh	r3, [r7, #6]
 8024b56:	4463      	add	r3, ip
 8024b58:	b29b      	uxth	r3, r3
 8024b5a:	b21f      	sxth	r7, r3
 8024b5c:	45ba      	cmp	sl, r7
 8024b5e:	da45      	bge.n	8024bec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b60:	4416      	add	r6, r2
 8024b62:	b2b2      	uxth	r2, r6
 8024b64:	b216      	sxth	r6, r2
 8024b66:	45b4      	cmp	ip, r6
 8024b68:	9608      	str	r6, [sp, #32]
 8024b6a:	da3f      	bge.n	8024bec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b6c:	4540      	cmp	r0, r8
 8024b6e:	9e07      	ldr	r6, [sp, #28]
 8024b70:	bfb8      	it	lt
 8024b72:	4640      	movlt	r0, r8
 8024b74:	45d4      	cmp	ip, sl
 8024b76:	bfb8      	it	lt
 8024b78:	46d4      	movlt	ip, sl
 8024b7a:	45b1      	cmp	r9, r6
 8024b7c:	bfc8      	it	gt
 8024b7e:	4671      	movgt	r1, lr
 8024b80:	9e08      	ldr	r6, [sp, #32]
 8024b82:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 8024be4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a8>
 8024b86:	42b7      	cmp	r7, r6
 8024b88:	bfc8      	it	gt
 8024b8a:	4613      	movgt	r3, r2
 8024b8c:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8024be8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ac>
 8024b90:	b282      	uxth	r2, r0
 8024b92:	eba3 030c 	sub.w	r3, r3, ip
 8024b96:	1a8f      	subs	r7, r1, r2
 8024b98:	f8b8 a000 	ldrh.w	sl, [r8]
 8024b9c:	f8be 9000 	ldrh.w	r9, [lr]
 8024ba0:	b21b      	sxth	r3, r3
 8024ba2:	b23f      	sxth	r7, r7
 8024ba4:	2800      	cmp	r0, #0
 8024ba6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024baa:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8024bae:	f8ad c032 	strh.w	ip, [sp, #50]	@ 0x32
 8024bb2:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024bb6:	fa0f f88a 	sxth.w	r8, sl
 8024bba:	fa0f fe89 	sxth.w	lr, r9
 8024bbe:	f280 8115 	bge.w	8024dec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b0>
 8024bc2:	2200      	movs	r2, #0
 8024bc4:	f04f 0600 	mov.w	r6, #0
 8024bc8:	b20f      	sxth	r7, r1
 8024bca:	4610      	mov	r0, r2
 8024bcc:	4639      	mov	r1, r7
 8024bce:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024bd2:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8024bd6:	e01b      	b.n	8024c10 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024bd8:	20082f08 	.word	0x20082f08
 8024bdc:	08020ccd 	.word	0x08020ccd
 8024be0:	08024199 	.word	0x08024199
 8024be4:	20082efc 	.word	0x20082efc
 8024be8:	20082efe 	.word	0x20082efe
 8024bec:	2300      	movs	r3, #0
 8024bee:	489f      	ldr	r0, [pc, #636]	@ (8024e6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x430>)
 8024bf0:	499f      	ldr	r1, [pc, #636]	@ (8024e70 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x434>)
 8024bf2:	f8b0 a000 	ldrh.w	sl, [r0]
 8024bf6:	f8b1 9000 	ldrh.w	r9, [r1]
 8024bfa:	461a      	mov	r2, r3
 8024bfc:	469c      	mov	ip, r3
 8024bfe:	4618      	mov	r0, r3
 8024c00:	4619      	mov	r1, r3
 8024c02:	461f      	mov	r7, r3
 8024c04:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8024c08:	fa0f f88a 	sxth.w	r8, sl
 8024c0c:	fa0f fe89 	sxth.w	lr, r9
 8024c10:	eba8 0000 	sub.w	r0, r8, r0
 8024c14:	4288      	cmp	r0, r1
 8024c16:	da04      	bge.n	8024c22 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1e6>
 8024c18:	ebaa 0702 	sub.w	r7, sl, r2
 8024c1c:	b23f      	sxth	r7, r7
 8024c1e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024c22:	f1bc 0f00 	cmp.w	ip, #0
 8024c26:	f2c0 80c2 	blt.w	8024dae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x372>
 8024c2a:	4661      	mov	r1, ip
 8024c2c:	ebae 0e01 	sub.w	lr, lr, r1
 8024c30:	4573      	cmp	r3, lr
 8024c32:	dd04      	ble.n	8024c3e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x202>
 8024c34:	eba9 030c 	sub.w	r3, r9, ip
 8024c38:	b21b      	sxth	r3, r3
 8024c3a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024c3e:	2f00      	cmp	r7, #0
 8024c40:	f340 80b1 	ble.w	8024da6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024c44:	2b00      	cmp	r3, #0
 8024c46:	f340 80ae 	ble.w	8024da6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024c4a:	f04f 0e00 	mov.w	lr, #0
 8024c4e:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8024c52:	9b05      	ldr	r3, [sp, #20]
 8024c54:	8868      	ldrh	r0, [r5, #2]
 8024c56:	8829      	ldrh	r1, [r5, #0]
 8024c58:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8024c5c:	9b06      	ldr	r3, [sp, #24]
 8024c5e:	1a52      	subs	r2, r2, r1
 8024c60:	ebac 0c00 	sub.w	ip, ip, r0
 8024c64:	a910      	add	r1, sp, #64	@ 0x40
 8024c66:	a80e      	add	r0, sp, #56	@ 0x38
 8024c68:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8024c6c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024c70:	f8ad c03a 	strh.w	ip, [sp, #58]	@ 0x3a
 8024c74:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 8024c78:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8024c7c:	f7e8 f890 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024c80:	a80c      	add	r0, sp, #48	@ 0x30
 8024c82:	f7e8 f865 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c86:	a810      	add	r0, sp, #64	@ 0x40
 8024c88:	f7e8 f862 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c8c:	4b79      	ldr	r3, [pc, #484]	@ (8024e74 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024c8e:	681b      	ldr	r3, [r3, #0]
 8024c90:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024c94:	2a00      	cmp	r2, #0
 8024c96:	f040 80a4 	bne.w	8024de2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a6>
 8024c9a:	6898      	ldr	r0, [r3, #8]
 8024c9c:	6803      	ldr	r3, [r0, #0]
 8024c9e:	4a76      	ldr	r2, [pc, #472]	@ (8024e78 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x43c>)
 8024ca0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024ca2:	4293      	cmp	r3, r2
 8024ca4:	f040 80b0 	bne.w	8024e08 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3cc>
 8024ca8:	7b00      	ldrb	r0, [r0, #12]
 8024caa:	2801      	cmp	r0, #1
 8024cac:	f000 80a5 	beq.w	8024dfa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3be>
 8024cb0:	f0c0 809e 	bcc.w	8024df0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b4>
 8024cb4:	2802      	cmp	r0, #2
 8024cb6:	f040 80d2 	bne.w	8024e5e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x422>
 8024cba:	f04f 0810 	mov.w	r8, #16
 8024cbe:	f04f 0a04 	mov.w	sl, #4
 8024cc2:	6823      	ldr	r3, [r4, #0]
 8024cc4:	4a6d      	ldr	r2, [pc, #436]	@ (8024e7c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x440>)
 8024cc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024cc8:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 8024ccc:	4293      	cmp	r3, r2
 8024cce:	fb0a f707 	mul.w	r7, sl, r7
 8024cd2:	f040 809b 	bne.w	8024e0c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d0>
 8024cd6:	4b6a      	ldr	r3, [pc, #424]	@ (8024e80 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x444>)
 8024cd8:	881b      	ldrh	r3, [r3, #0]
 8024cda:	2b00      	cmp	r3, #0
 8024cdc:	f000 80b8 	beq.w	8024e50 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x414>
 8024ce0:	7b22      	ldrb	r2, [r4, #12]
 8024ce2:	2a02      	cmp	r2, #2
 8024ce4:	f000 808e 	beq.w	8024e04 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3c8>
 8024ce8:	2a01      	cmp	r2, #1
 8024cea:	bf14      	ite	ne
 8024cec:	2402      	movne	r4, #2
 8024cee:	2403      	moveq	r4, #3
 8024cf0:	fb13 f404 	smulbb	r4, r3, r4
 8024cf4:	b2a4      	uxth	r4, r4
 8024cf6:	4a5f      	ldr	r2, [pc, #380]	@ (8024e74 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024cf8:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8024cfc:	f9bd 903a 	ldrsh.w	r9, [sp, #58]	@ 0x3a
 8024d00:	6810      	ldr	r0, [r2, #0]
 8024d02:	fb07 3909 	mla	r9, r7, r9, r3
 8024d06:	6803      	ldr	r3, [r0, #0]
 8024d08:	4e5e      	ldr	r6, [pc, #376]	@ (8024e84 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x448>)
 8024d0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024d0c:	4798      	blx	r3
 8024d0e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8024d12:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 8024d16:	fb04 f303 	mul.w	r3, r4, r3
 8024d1a:	fb0a 3505 	mla	r5, sl, r5, r3
 8024d1e:	4405      	add	r5, r0
 8024d20:	6830      	ldr	r0, [r6, #0]
 8024d22:	44d9      	add	r9, fp
 8024d24:	2800      	cmp	r0, #0
 8024d26:	d075      	beq.n	8024e14 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d28:	f7fb ff5e 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024d2c:	9700      	str	r7, [sp, #0]
 8024d2e:	2700      	movs	r7, #0
 8024d30:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 8024d34:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8024d38:	4648      	mov	r0, r9
 8024d3a:	4643      	mov	r3, r8
 8024d3c:	f7ec f946 	bl	8010fcc <nema_bind_dst_tex>
 8024d40:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8024d44:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8024d48:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024d4c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024d50:	f7eb ffd2 	bl	8010cf8 <nema_set_clip>
 8024d54:	f04f 33ff 	mov.w	r3, #4294967295
 8024d58:	2201      	movs	r2, #1
 8024d5a:	2100      	movs	r1, #0
 8024d5c:	f240 5004 	movw	r0, #1284	@ 0x504
 8024d60:	f7f9 f966 	bl	801e030 <nema_set_blend>
 8024d64:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 8024d68:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024d6c:	4643      	mov	r3, r8
 8024d6e:	4628      	mov	r0, r5
 8024d70:	9400      	str	r4, [sp, #0]
 8024d72:	9701      	str	r7, [sp, #4]
 8024d74:	f7ec f8a6 	bl	8010ec4 <nema_bind_src_tex>
 8024d78:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024d7c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024d80:	f7ec fafa 	bl	8011378 <nema_blit>
 8024d84:	6830      	ldr	r0, [r6, #0]
 8024d86:	2800      	cmp	r0, #0
 8024d88:	d044      	beq.n	8024e14 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d8a:	f7fb ff4d 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024d8e:	6830      	ldr	r0, [r6, #0]
 8024d90:	2800      	cmp	r0, #0
 8024d92:	d03f      	beq.n	8024e14 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d94:	6803      	ldr	r3, [r0, #0]
 8024d96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024d98:	4798      	blx	r3
 8024d9a:	6830      	ldr	r0, [r6, #0]
 8024d9c:	2800      	cmp	r0, #0
 8024d9e:	d039      	beq.n	8024e14 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024da0:	6803      	ldr	r3, [r0, #0]
 8024da2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024da4:	4798      	blx	r3
 8024da6:	4658      	mov	r0, fp
 8024da8:	b013      	add	sp, #76	@ 0x4c
 8024daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024dae:	2000      	movs	r0, #0
 8024db0:	4463      	add	r3, ip
 8024db2:	b21b      	sxth	r3, r3
 8024db4:	4684      	mov	ip, r0
 8024db6:	4601      	mov	r1, r0
 8024db8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024dbc:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8024dc0:	e734      	b.n	8024c2c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f0>
 8024dc2:	9b05      	ldr	r3, [sp, #20]
 8024dc4:	9002      	str	r0, [sp, #8]
 8024dc6:	e9cd b300 	strd	fp, r3, [sp]
 8024dca:	a810      	add	r0, sp, #64	@ 0x40
 8024dcc:	462b      	mov	r3, r5
 8024dce:	463a      	mov	r2, r7
 8024dd0:	4621      	mov	r1, r4
 8024dd2:	47c0      	blx	r8
 8024dd4:	4658      	mov	r0, fp
 8024dd6:	b013      	add	sp, #76	@ 0x4c
 8024dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ddc:	4620      	mov	r0, r4
 8024dde:	4798      	blx	r3
 8024de0:	e648      	b.n	8024a74 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x38>
 8024de2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024de4:	2800      	cmp	r0, #0
 8024de6:	f47f af59 	bne.w	8024c9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8024dea:	e756      	b.n	8024c9a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>
 8024dec:	4639      	mov	r1, r7
 8024dee:	e70f      	b.n	8024c10 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024df0:	f04f 0804 	mov.w	r8, #4
 8024df4:	f04f 0a02 	mov.w	sl, #2
 8024df8:	e763      	b.n	8024cc2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024dfa:	f04f 0839 	mov.w	r8, #57	@ 0x39
 8024dfe:	f04f 0a03 	mov.w	sl, #3
 8024e02:	e75e      	b.n	8024cc2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024e04:	2404      	movs	r4, #4
 8024e06:	e773      	b.n	8024cf0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2b4>
 8024e08:	4798      	blx	r3
 8024e0a:	e74e      	b.n	8024caa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26e>
 8024e0c:	4620      	mov	r0, r4
 8024e0e:	4798      	blx	r3
 8024e10:	4604      	mov	r4, r0
 8024e12:	e770      	b.n	8024cf6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2ba>
 8024e14:	4b1c      	ldr	r3, [pc, #112]	@ (8024e88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x44c>)
 8024e16:	4a1d      	ldr	r2, [pc, #116]	@ (8024e8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x450>)
 8024e18:	217c      	movs	r1, #124	@ 0x7c
 8024e1a:	481d      	ldr	r0, [pc, #116]	@ (8024e90 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x454>)
 8024e1c:	f00d fb74 	bl	8032508 <__assert_func>
 8024e20:	4b1c      	ldr	r3, [pc, #112]	@ (8024e94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x458>)
 8024e22:	4a1d      	ldr	r2, [pc, #116]	@ (8024e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024e24:	21f1      	movs	r1, #241	@ 0xf1
 8024e26:	481d      	ldr	r0, [pc, #116]	@ (8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e28:	f00d fb6e 	bl	8032508 <__assert_func>
 8024e2c:	4b1c      	ldr	r3, [pc, #112]	@ (8024ea0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x464>)
 8024e2e:	4a1a      	ldr	r2, [pc, #104]	@ (8024e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024e30:	21ef      	movs	r1, #239	@ 0xef
 8024e32:	481a      	ldr	r0, [pc, #104]	@ (8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e34:	f00d fb68 	bl	8032508 <__assert_func>
 8024e38:	4b1a      	ldr	r3, [pc, #104]	@ (8024ea4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024e3a:	4a17      	ldr	r2, [pc, #92]	@ (8024e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024e3c:	21ed      	movs	r1, #237	@ 0xed
 8024e3e:	4817      	ldr	r0, [pc, #92]	@ (8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e40:	f00d fb62 	bl	8032508 <__assert_func>
 8024e44:	4b17      	ldr	r3, [pc, #92]	@ (8024ea4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024e46:	4a18      	ldr	r2, [pc, #96]	@ (8024ea8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024e48:	21f8      	movs	r1, #248	@ 0xf8
 8024e4a:	4814      	ldr	r0, [pc, #80]	@ (8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e4c:	f00d fb5c 	bl	8032508 <__assert_func>
 8024e50:	4b16      	ldr	r3, [pc, #88]	@ (8024eac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x470>)
 8024e52:	4a17      	ldr	r2, [pc, #92]	@ (8024eb0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x474>)
 8024e54:	f240 110f 	movw	r1, #271	@ 0x10f
 8024e58:	4816      	ldr	r0, [pc, #88]	@ (8024eb4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x478>)
 8024e5a:	f00d fb55 	bl	8032508 <__assert_func>
 8024e5e:	4b16      	ldr	r3, [pc, #88]	@ (8024eb8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x47c>)
 8024e60:	4a11      	ldr	r2, [pc, #68]	@ (8024ea8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024e62:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024e66:	480d      	ldr	r0, [pc, #52]	@ (8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e68:	f00d fb4e 	bl	8032508 <__assert_func>
 8024e6c:	20082efc 	.word	0x20082efc
 8024e70:	20082efe 	.word	0x20082efe
 8024e74:	20082f08 	.word	0x20082f08
 8024e78:	08020ccd 	.word	0x08020ccd
 8024e7c:	080228ad 	.word	0x080228ad
 8024e80:	20082f02 	.word	0x20082f02
 8024e84:	200833a8 	.word	0x200833a8
 8024e88:	0803624c 	.word	0x0803624c
 8024e8c:	08036ab8 	.word	0x08036ab8
 8024e90:	08036274 	.word	0x08036274
 8024e94:	080366a4 	.word	0x080366a4
 8024e98:	08037c24 	.word	0x08037c24
 8024e9c:	080362f0 	.word	0x080362f0
 8024ea0:	0803664c 	.word	0x0803664c
 8024ea4:	080364f4 	.word	0x080364f4
 8024ea8:	08037b90 	.word	0x08037b90
 8024eac:	08036828 	.word	0x08036828
 8024eb0:	08037fec 	.word	0x08037fec
 8024eb4:	0803686c 	.word	0x0803686c
 8024eb8:	080365f8 	.word	0x080365f8

08024ebc <_ZN8touchgfx8LCDGPU2DC1Ev>:
 8024ebc:	b410      	push	{r4}
 8024ebe:	240d      	movs	r4, #13
 8024ec0:	2200      	movs	r2, #0
 8024ec2:	4904      	ldr	r1, [pc, #16]	@ (8024ed4 <_ZN8touchgfx8LCDGPU2DC1Ev+0x18>)
 8024ec4:	7304      	strb	r4, [r0, #12]
 8024ec6:	e9c0 1200 	strd	r1, r2, [r0]
 8024eca:	6082      	str	r2, [r0, #8]
 8024ecc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024ed0:	4770      	bx	lr
 8024ed2:	bf00      	nop
 8024ed4:	08036a60 	.word	0x08036a60

08024ed8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8024ed8:	2902      	cmp	r1, #2
 8024eda:	d906      	bls.n	8024eea <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x12>
 8024edc:	b508      	push	{r3, lr}
 8024ede:	4a04      	ldr	r2, [pc, #16]	@ (8024ef0 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x18>)
 8024ee0:	4b04      	ldr	r3, [pc, #16]	@ (8024ef4 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x1c>)
 8024ee2:	212b      	movs	r1, #43	@ 0x2b
 8024ee4:	4804      	ldr	r0, [pc, #16]	@ (8024ef8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x20>)
 8024ee6:	f00d fb0f 	bl	8032508 <__assert_func>
 8024eea:	7301      	strb	r1, [r0, #12]
 8024eec:	4770      	bx	lr
 8024eee:	bf00      	nop
 8024ef0:	08036dd0 	.word	0x08036dd0
 8024ef4:	08036184 	.word	0x08036184
 8024ef8:	080362f0 	.word	0x080362f0

08024efc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8024efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f00:	b093      	sub	sp, #76	@ 0x4c
 8024f02:	4691      	mov	r9, r2
 8024f04:	468a      	mov	sl, r1
 8024f06:	8812      	ldrh	r2, [r2, #0]
 8024f08:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8024f0c:	461c      	mov	r4, r3
 8024f0e:	910a      	str	r1, [sp, #40]	@ 0x28
 8024f10:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024f12:	2a00      	cmp	r2, #0
 8024f14:	f040 8109 	bne.w	802512a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 8024f18:	6820      	ldr	r0, [r4, #0]
 8024f1a:	6861      	ldr	r1, [r4, #4]
 8024f1c:	aa0e      	add	r2, sp, #56	@ 0x38
 8024f1e:	c203      	stmia	r2!, {r0, r1}
 8024f20:	6818      	ldr	r0, [r3, #0]
 8024f22:	6859      	ldr	r1, [r3, #4]
 8024f24:	aa10      	add	r2, sp, #64	@ 0x40
 8024f26:	c203      	stmia	r2!, {r0, r1}
 8024f28:	a80e      	add	r0, sp, #56	@ 0x38
 8024f2a:	f7e7 ff11 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024f2e:	4621      	mov	r1, r4
 8024f30:	a810      	add	r0, sp, #64	@ 0x40
 8024f32:	f7e7 ff35 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024f36:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8024f3a:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8024f3e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8024f42:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8024f46:	487c      	ldr	r0, [pc, #496]	@ (8025138 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8024f48:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8024f4c:	4422      	add	r2, r4
 8024f4e:	442b      	add	r3, r5
 8024f50:	6800      	ldr	r0, [r0, #0]
 8024f52:	fb11 4105 	smlabb	r1, r1, r5, r4
 8024f56:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8024f5a:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8024f5e:	6802      	ldr	r2, [r0, #0]
 8024f60:	4d76      	ldr	r5, [pc, #472]	@ (802513c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8024f62:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8024f66:	448a      	add	sl, r1
 8024f68:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8024f6c:	42ab      	cmp	r3, r5
 8024f6e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024f70:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 8024f74:	f040 80a6 	bne.w	80250c4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 8024f78:	6841      	ldr	r1, [r0, #4]
 8024f7a:	4d71      	ldr	r5, [pc, #452]	@ (8025140 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8024f7c:	680b      	ldr	r3, [r1, #0]
 8024f7e:	699b      	ldr	r3, [r3, #24]
 8024f80:	42ab      	cmp	r3, r5
 8024f82:	f040 80c4 	bne.w	802510e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8024f86:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8024f88:	4798      	blx	r3
 8024f8a:	4b6e      	ldr	r3, [pc, #440]	@ (8025144 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8024f8c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8024f90:	881b      	ldrh	r3, [r3, #0]
 8024f92:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8024f96:	fb03 f404 	mul.w	r4, r3, r4
 8024f9a:	fb03 1202 	mla	r2, r3, r2, r1
 8024f9e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024fa2:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8024fa6:	4290      	cmp	r0, r2
 8024fa8:	920c      	str	r2, [sp, #48]	@ 0x30
 8024faa:	f080 8083 	bcs.w	80250b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8024fae:	f04f 0b04 	mov.w	fp, #4
 8024fb2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024fb4:	0052      	lsls	r2, r2, #1
 8024fb6:	920d      	str	r2, [sp, #52]	@ 0x34
 8024fb8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024fba:	eb00 0802 	add.w	r8, r0, r2
 8024fbe:	4580      	cmp	r8, r0
 8024fc0:	d96d      	bls.n	802509e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8024fc2:	4684      	mov	ip, r0
 8024fc4:	f10a 3eff 	add.w	lr, sl, #4294967295
 8024fc8:	e03e      	b.n	8025048 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8024fca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024fcc:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8024fd0:	fb02 f303 	mul.w	r3, r2, r3
 8024fd4:	1c59      	adds	r1, r3, #1
 8024fd6:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8024fda:	121b      	asrs	r3, r3, #8
 8024fdc:	43da      	mvns	r2, r3
 8024fde:	b299      	uxth	r1, r3
 8024fe0:	b2f6      	uxtb	r6, r6
 8024fe2:	b2eb      	uxtb	r3, r5
 8024fe4:	fb17 f701 	smulbb	r7, r7, r1
 8024fe8:	f8bc 5000 	ldrh.w	r5, [ip]
 8024fec:	fb13 f301 	smulbb	r3, r3, r1
 8024ff0:	fb16 f601 	smulbb	r6, r6, r1
 8024ff4:	122c      	asrs	r4, r5, #8
 8024ff6:	10e9      	asrs	r1, r5, #3
 8024ff8:	00ed      	lsls	r5, r5, #3
 8024ffa:	b2d2      	uxtb	r2, r2
 8024ffc:	b2ed      	uxtb	r5, r5
 8024ffe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025002:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025006:	fb04 7402 	mla	r4, r4, r2, r7
 802500a:	fb01 6102 	mla	r1, r1, r2, r6
 802500e:	fb05 3202 	mla	r2, r5, r2, r3
 8025012:	b2a4      	uxth	r4, r4
 8025014:	b292      	uxth	r2, r2
 8025016:	b289      	uxth	r1, r1
 8025018:	1c55      	adds	r5, r2, #1
 802501a:	1c67      	adds	r7, r4, #1
 802501c:	1c4b      	adds	r3, r1, #1
 802501e:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 8025022:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8025026:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802502a:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 802502e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8025032:	095b      	lsrs	r3, r3, #5
 8025034:	432a      	orrs	r2, r5
 8025036:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802503a:	431a      	orrs	r2, r3
 802503c:	f8ac 2000 	strh.w	r2, [ip]
 8025040:	f10c 0c02 	add.w	ip, ip, #2
 8025044:	45e0      	cmp	r8, ip
 8025046:	d91f      	bls.n	8025088 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8025048:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 802504c:	fb1b b303 	smlabb	r3, fp, r3, fp
 8025050:	f859 5003 	ldr.w	r5, [r9, r3]
 8025054:	0e2b      	lsrs	r3, r5, #24
 8025056:	d0f3      	beq.n	8025040 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 8025058:	2bff      	cmp	r3, #255	@ 0xff
 802505a:	ea4f 2615 	mov.w	r6, r5, lsr #8
 802505e:	d1b4      	bne.n	8024fca <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8025060:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025062:	2aff      	cmp	r2, #255	@ 0xff
 8025064:	d1b1      	bne.n	8024fca <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8025066:	096b      	lsrs	r3, r5, #5
 8025068:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 802506c:	f026 0607 	bic.w	r6, r6, #7
 8025070:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025074:	431e      	orrs	r6, r3
 8025076:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802507a:	4335      	orrs	r5, r6
 802507c:	f8ac 5000 	strh.w	r5, [ip]
 8025080:	f10c 0c02 	add.w	ip, ip, #2
 8025084:	45e0      	cmp	r8, ip
 8025086:	d8df      	bhi.n	8025048 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8025088:	43c3      	mvns	r3, r0
 802508a:	4498      	add	r8, r3
 802508c:	4b2d      	ldr	r3, [pc, #180]	@ (8025144 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 802508e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025092:	f108 0801 	add.w	r8, r8, #1
 8025096:	881b      	ldrh	r3, [r3, #0]
 8025098:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802509c:	44c2      	add	sl, r8
 802509e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80250a0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80250a4:	1b19      	subs	r1, r3, r4
 80250a6:	1b12      	subs	r2, r2, r4
 80250a8:	4492      	add	sl, r2
 80250aa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80250ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80250b0:	4282      	cmp	r2, r0
 80250b2:	d881      	bhi.n	8024fb8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 80250b4:	4b20      	ldr	r3, [pc, #128]	@ (8025138 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80250b6:	6818      	ldr	r0, [r3, #0]
 80250b8:	6803      	ldr	r3, [r0, #0]
 80250ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80250bc:	4798      	blx	r3
 80250be:	b013      	add	sp, #76	@ 0x4c
 80250c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250c4:	4798      	blx	r3
 80250c6:	4603      	mov	r3, r0
 80250c8:	2b01      	cmp	r3, #1
 80250ca:	d124      	bne.n	8025116 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 80250cc:	4a1e      	ldr	r2, [pc, #120]	@ (8025148 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80250ce:	6810      	ldr	r0, [r2, #0]
 80250d0:	b328      	cbz	r0, 802511e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 80250d2:	2700      	movs	r7, #0
 80250d4:	260b      	movs	r6, #11
 80250d6:	4a1b      	ldr	r2, [pc, #108]	@ (8025144 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 80250d8:	b2a1      	uxth	r1, r4
 80250da:	8814      	ldrh	r4, [r2, #0]
 80250dc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80250e0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 80250e4:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80250e8:	9406      	str	r4, [sp, #24]
 80250ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80250ec:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 80250f0:	9305      	str	r3, [sp, #20]
 80250f2:	9204      	str	r2, [sp, #16]
 80250f4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80250f8:	464a      	mov	r2, r9
 80250fa:	4651      	mov	r1, sl
 80250fc:	e9cd 6707 	strd	r6, r7, [sp, #28]
 8025100:	9503      	str	r5, [sp, #12]
 8025102:	9400      	str	r4, [sp, #0]
 8025104:	f7fb fd98 	bl	8020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8025108:	b013      	add	sp, #76	@ 0x4c
 802510a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802510e:	4608      	mov	r0, r1
 8025110:	4798      	blx	r3
 8025112:	4603      	mov	r3, r0
 8025114:	e7d8      	b.n	80250c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8025116:	4b08      	ldr	r3, [pc, #32]	@ (8025138 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025118:	6818      	ldr	r0, [r3, #0]
 802511a:	6802      	ldr	r2, [r0, #0]
 802511c:	e733      	b.n	8024f86 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802511e:	4b0b      	ldr	r3, [pc, #44]	@ (802514c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8025120:	4a0b      	ldr	r2, [pc, #44]	@ (8025150 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8025122:	217c      	movs	r1, #124	@ 0x7c
 8025124:	480b      	ldr	r0, [pc, #44]	@ (8025154 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8025126:	f00d f9ef 	bl	8032508 <__assert_func>
 802512a:	4b0b      	ldr	r3, [pc, #44]	@ (8025158 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 802512c:	4a0b      	ldr	r2, [pc, #44]	@ (802515c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 802512e:	f240 4182 	movw	r1, #1154	@ 0x482
 8025132:	480b      	ldr	r0, [pc, #44]	@ (8025160 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 8025134:	f00d f9e8 	bl	8032508 <__assert_func>
 8025138:	20082f08 	.word	0x20082f08
 802513c:	0800121d 	.word	0x0800121d
 8025140:	0800baf5 	.word	0x0800baf5
 8025144:	20082f02 	.word	0x20082f02
 8025148:	200833a8 	.word	0x200833a8
 802514c:	0803624c 	.word	0x0803624c
 8025150:	08036ab8 	.word	0x08036ab8
 8025154:	08036274 	.word	0x08036274
 8025158:	08036364 	.word	0x08036364
 802515c:	080370e8 	.word	0x080370e8
 8025160:	080362f0 	.word	0x080362f0

08025164 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 8025164:	b4f0      	push	{r4, r5, r6, r7}
 8025166:	7b05      	ldrb	r5, [r0, #12]
 8025168:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802516c:	3d01      	subs	r5, #1
 802516e:	2eff      	cmp	r6, #255	@ 0xff
 8025170:	fa5f fc81 	uxtb.w	ip, r1
 8025174:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025178:	b2ed      	uxtb	r5, r5
 802517a:	ea4f 4111 	mov.w	r1, r1, lsr #16
 802517e:	d041      	beq.n	8025204 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 8025180:	fb16 f603 	smulbb	r6, r6, r3
 8025184:	b2b6      	uxth	r6, r6
 8025186:	1c74      	adds	r4, r6, #1
 8025188:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 802518c:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8025190:	43e6      	mvns	r6, r4
 8025192:	b2a4      	uxth	r4, r4
 8025194:	fb1c fc04 	smulbb	ip, ip, r4
 8025198:	b2ff      	uxtb	r7, r7
 802519a:	fb17 f704 	smulbb	r7, r7, r4
 802519e:	00d0      	lsls	r0, r2, #3
 80251a0:	b2c0      	uxtb	r0, r0
 80251a2:	10d3      	asrs	r3, r2, #3
 80251a4:	b2f6      	uxtb	r6, r6
 80251a6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80251aa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80251ae:	fb00 c006 	mla	r0, r0, r6, ip
 80251b2:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 80251b6:	fb03 7306 	mla	r3, r3, r6, r7
 80251ba:	b280      	uxth	r0, r0
 80251bc:	b29b      	uxth	r3, r3
 80251be:	1c47      	adds	r7, r0, #1
 80251c0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80251c4:	f103 0c01 	add.w	ip, r3, #1
 80251c8:	2d01      	cmp	r5, #1
 80251ca:	f3c0 2707 	ubfx	r7, r0, #8, #8
 80251ce:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80251d2:	d926      	bls.n	8025222 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 80251d4:	b2c9      	uxtb	r1, r1
 80251d6:	fb11 f404 	smulbb	r4, r1, r4
 80251da:	1212      	asrs	r2, r2, #8
 80251dc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80251e0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80251e4:	fb02 4206 	mla	r2, r2, r6, r4
 80251e8:	b292      	uxth	r2, r2
 80251ea:	1c50      	adds	r0, r2, #1
 80251ec:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80251f0:	095b      	lsrs	r3, r3, #5
 80251f2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80251f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80251fa:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 80251fe:	4318      	orrs	r0, r3
 8025200:	bcf0      	pop	{r4, r5, r6, r7}
 8025202:	4770      	bx	lr
 8025204:	2bff      	cmp	r3, #255	@ 0xff
 8025206:	d1bb      	bne.n	8025180 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 8025208:	2d01      	cmp	r5, #1
 802520a:	d910      	bls.n	802522e <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 802520c:	4a0a      	ldr	r2, [pc, #40]	@ (8025238 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 802520e:	00f8      	lsls	r0, r7, #3
 8025210:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025214:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 8025218:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 802521c:	4338      	orrs	r0, r7
 802521e:	b280      	uxth	r0, r0
 8025220:	e7ee      	b.n	8025200 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 8025222:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025226:	ea43 0007 	orr.w	r0, r3, r7
 802522a:	bcf0      	pop	{r4, r5, r6, r7}
 802522c:	4770      	bx	lr
 802522e:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 8025232:	b280      	uxth	r0, r0
 8025234:	e7e4      	b.n	8025200 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 8025236:	bf00      	nop
 8025238:	fffff800 	.word	0xfffff800

0802523c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 802523c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025240:	b093      	sub	sp, #76	@ 0x4c
 8025242:	4614      	mov	r4, r2
 8025244:	460d      	mov	r5, r1
 8025246:	7812      	ldrb	r2, [r2, #0]
 8025248:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 802524c:	461e      	mov	r6, r3
 802524e:	9002      	str	r0, [sp, #8]
 8025250:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025252:	9109      	str	r1, [sp, #36]	@ 0x24
 8025254:	2a00      	cmp	r2, #0
 8025256:	f040 81c9 	bne.w	80255ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 802525a:	6830      	ldr	r0, [r6, #0]
 802525c:	6871      	ldr	r1, [r6, #4]
 802525e:	aa0e      	add	r2, sp, #56	@ 0x38
 8025260:	c203      	stmia	r2!, {r0, r1}
 8025262:	6818      	ldr	r0, [r3, #0]
 8025264:	6859      	ldr	r1, [r3, #4]
 8025266:	aa10      	add	r2, sp, #64	@ 0x40
 8025268:	c203      	stmia	r2!, {r0, r1}
 802526a:	a80e      	add	r0, sp, #56	@ 0x38
 802526c:	f7e7 fd70 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025270:	4631      	mov	r1, r6
 8025272:	a810      	add	r0, sp, #64	@ 0x40
 8025274:	f7e7 fd94 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025278:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 802527c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025280:	f003 0201 	and.w	r2, r3, #1
 8025284:	4617      	mov	r7, r2
 8025286:	920a      	str	r2, [sp, #40]	@ 0x28
 8025288:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802528c:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 8025290:	443b      	add	r3, r7
 8025292:	fb02 1303 	mla	r3, r2, r3, r1
 8025296:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 802529a:	4402      	add	r2, r0
 802529c:	48d0      	ldr	r0, [pc, #832]	@ (80255e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802529e:	440e      	add	r6, r1
 80252a0:	6800      	ldr	r0, [r0, #0]
 80252a2:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 80252a6:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80252aa:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80252ae:	eb05 0363 	add.w	r3, r5, r3, asr #1
 80252b2:	6802      	ldr	r2, [r0, #0]
 80252b4:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 80252b8:	9304      	str	r3, [sp, #16]
 80252ba:	f001 0301 	and.w	r3, r1, #1
 80252be:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80252c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80252c2:	9608      	str	r6, [sp, #32]
 80252c4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80252c8:	4790      	blx	r2
 80252ca:	4ac6      	ldr	r2, [pc, #792]	@ (80255e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 80252cc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80252d0:	8812      	ldrh	r2, [r2, #0]
 80252d2:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80252d6:	fb05 f502 	mul.w	r5, r5, r2
 80252da:	fb02 1303 	mla	r3, r2, r3, r1
 80252de:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 80252e2:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 80252e6:	4598      	cmp	r8, r3
 80252e8:	930c      	str	r3, [sp, #48]	@ 0x30
 80252ea:	f104 0404 	add.w	r4, r4, #4
 80252ee:	f080 8144 	bcs.w	802557a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 80252f2:	1e73      	subs	r3, r6, #1
 80252f4:	930d      	str	r3, [sp, #52]	@ 0x34
 80252f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80252f8:	2b00      	cmp	r3, #0
 80252fa:	f000 8164 	beq.w	80255c6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38a>
 80252fe:	9a04      	ldr	r2, [sp, #16]
 8025300:	7813      	ldrb	r3, [r2, #0]
 8025302:	3201      	adds	r2, #1
 8025304:	f003 030f 	and.w	r3, r3, #15
 8025308:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 802530c:	9203      	str	r2, [sp, #12]
 802530e:	0e0b      	lsrs	r3, r1, #24
 8025310:	d008      	beq.n	8025324 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 8025312:	f8b8 2000 	ldrh.w	r2, [r8]
 8025316:	9802      	ldr	r0, [sp, #8]
 8025318:	9300      	str	r3, [sp, #0]
 802531a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802531c:	f7ff ff22 	bl	8025164 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 8025320:	f8a8 0000 	strh.w	r0, [r8]
 8025324:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025326:	f108 0802 	add.w	r8, r8, #2
 802532a:	2b01      	cmp	r3, #1
 802532c:	f340 80fd 	ble.w	802552a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ee>
 8025330:	3b02      	subs	r3, #2
 8025332:	9a03      	ldr	r2, [sp, #12]
 8025334:	9306      	str	r3, [sp, #24]
 8025336:	085b      	lsrs	r3, r3, #1
 8025338:	9305      	str	r3, [sp, #20]
 802533a:	eb02 0e03 	add.w	lr, r2, r3
 802533e:	f108 0704 	add.w	r7, r8, #4
 8025342:	f102 3cff 	add.w	ip, r2, #4294967295
 8025346:	f8cd 801c 	str.w	r8, [sp, #28]
 802534a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802534e:	e0b2      	b.n	80254b6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27a>
 8025350:	fb05 f50a 	mul.w	r5, r5, sl
 8025354:	1c6a      	adds	r2, r5, #1
 8025356:	eb02 2525 	add.w	r5, r2, r5, asr #8
 802535a:	122d      	asrs	r5, r5, #8
 802535c:	43ee      	mvns	r6, r5
 802535e:	b2ad      	uxth	r5, r5
 8025360:	fa5f fb8b 	uxtb.w	fp, fp
 8025364:	fb13 f305 	smulbb	r3, r3, r5
 8025368:	fb1b fb05 	smulbb	fp, fp, r5
 802536c:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 8025370:	b2c0      	uxtb	r0, r0
 8025372:	ea4f 02e8 	mov.w	r2, r8, asr #3
 8025376:	b2f6      	uxtb	r6, r6
 8025378:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802537c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025380:	fb00 3306 	mla	r3, r0, r6, r3
 8025384:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025388:	fb02 bb06 	mla	fp, r2, r6, fp
 802538c:	b29b      	uxth	r3, r3
 802538e:	fa1f fb8b 	uxth.w	fp, fp
 8025392:	1c58      	adds	r0, r3, #1
 8025394:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025398:	f10b 0201 	add.w	r2, fp, #1
 802539c:	f1b9 0f01 	cmp.w	r9, #1
 80253a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80253a4:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80253a8:	f240 8108 	bls.w	80255bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 80253ac:	b2c9      	uxtb	r1, r1
 80253ae:	fb11 f505 	smulbb	r5, r1, r5
 80253b2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80253b6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80253ba:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80253be:	fb08 5806 	mla	r8, r8, r6, r5
 80253c2:	fa1f f888 	uxth.w	r8, r8
 80253c6:	f108 0101 	add.w	r1, r8, #1
 80253ca:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 80253ce:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80253d2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80253d6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80253da:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80253de:	ea43 030b 	orr.w	r3, r3, fp
 80253e2:	f827 3c04 	strh.w	r3, [r7, #-4]
 80253e6:	f89c 2000 	ldrb.w	r2, [ip]
 80253ea:	f002 020f 	and.w	r2, r2, #15
 80253ee:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 80253f2:	0e1d      	lsrs	r5, r3, #24
 80253f4:	d05b      	beq.n	80254ae <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x272>
 80253f6:	9a02      	ldr	r2, [sp, #8]
 80253f8:	2dff      	cmp	r5, #255	@ 0xff
 80253fa:	f892 900c 	ldrb.w	r9, [r2, #12]
 80253fe:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8025402:	f109 39ff 	add.w	r9, r9, #4294967295
 8025406:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802540a:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 802540e:	fa5f f989 	uxtb.w	r9, r9
 8025412:	b2db      	uxtb	r3, r3
 8025414:	f000 80b9 	beq.w	802558a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x34e>
 8025418:	fb05 f50a 	mul.w	r5, r5, sl
 802541c:	1c6a      	adds	r2, r5, #1
 802541e:	eb02 2525 	add.w	r5, r2, r5, asr #8
 8025422:	122d      	asrs	r5, r5, #8
 8025424:	43ee      	mvns	r6, r5
 8025426:	b2ad      	uxth	r5, r5
 8025428:	fa5f fb8b 	uxtb.w	fp, fp
 802542c:	fb13 f305 	smulbb	r3, r3, r5
 8025430:	fb1b fb05 	smulbb	fp, fp, r5
 8025434:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 8025438:	b2c0      	uxtb	r0, r0
 802543a:	ea4f 02e8 	mov.w	r2, r8, asr #3
 802543e:	b2f6      	uxtb	r6, r6
 8025440:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8025444:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025448:	fb00 3306 	mla	r3, r0, r6, r3
 802544c:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025450:	fb02 bb06 	mla	fp, r2, r6, fp
 8025454:	b29b      	uxth	r3, r3
 8025456:	fa1f fb8b 	uxth.w	fp, fp
 802545a:	1c58      	adds	r0, r3, #1
 802545c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025460:	f10b 0201 	add.w	r2, fp, #1
 8025464:	f1b9 0f01 	cmp.w	r9, #1
 8025468:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802546c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025470:	f240 809f 	bls.w	80255b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8025474:	b2c9      	uxtb	r1, r1
 8025476:	fb11 f505 	smulbb	r5, r1, r5
 802547a:	ea4f 2828 	mov.w	r8, r8, asr #8
 802547e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8025482:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8025486:	fb08 5806 	mla	r8, r8, r6, r5
 802548a:	fa1f f888 	uxth.w	r8, r8
 802548e:	f108 0101 	add.w	r1, r8, #1
 8025492:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025496:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 802549a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802549e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80254a2:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80254a6:	ea43 030b 	orr.w	r3, r3, fp
 80254aa:	f827 3c02 	strh.w	r3, [r7, #-2]
 80254ae:	45e6      	cmp	lr, ip
 80254b0:	f107 0704 	add.w	r7, r7, #4
 80254b4:	d02b      	beq.n	802550e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 80254b6:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 80254ba:	0913      	lsrs	r3, r2, #4
 80254bc:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80254c0:	0e1d      	lsrs	r5, r3, #24
 80254c2:	d092      	beq.n	80253ea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ae>
 80254c4:	9a02      	ldr	r2, [sp, #8]
 80254c6:	2dff      	cmp	r5, #255	@ 0xff
 80254c8:	f892 900c 	ldrb.w	r9, [r2, #12]
 80254cc:	ea4f 4113 	mov.w	r1, r3, lsr #16
 80254d0:	f109 39ff 	add.w	r9, r9, #4294967295
 80254d4:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 80254d8:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 80254dc:	fa5f f989 	uxtb.w	r9, r9
 80254e0:	b2db      	uxtb	r3, r3
 80254e2:	f47f af35 	bne.w	8025350 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80254e6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80254ea:	f47f af31 	bne.w	8025350 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80254ee:	f1b9 0f01 	cmp.w	r9, #1
 80254f2:	d970      	bls.n	80255d6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39a>
 80254f4:	4a3c      	ldr	r2, [pc, #240]	@ (80255e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 80254f6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80254fa:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80254fe:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025502:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025506:	ea43 030b 	orr.w	r3, r3, fp
 802550a:	b29b      	uxth	r3, r3
 802550c:	e769      	b.n	80253e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802550e:	9b05      	ldr	r3, [sp, #20]
 8025510:	9903      	ldr	r1, [sp, #12]
 8025512:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025516:	1c5a      	adds	r2, r3, #1
 8025518:	4411      	add	r1, r2
 802551a:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 802551e:	9a06      	ldr	r2, [sp, #24]
 8025520:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8025524:	9103      	str	r1, [sp, #12]
 8025526:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802552a:	2b01      	cmp	r3, #1
 802552c:	d111      	bne.n	8025552 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x316>
 802552e:	9b03      	ldr	r3, [sp, #12]
 8025530:	781b      	ldrb	r3, [r3, #0]
 8025532:	091b      	lsrs	r3, r3, #4
 8025534:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8025538:	0e0b      	lsrs	r3, r1, #24
 802553a:	d008      	beq.n	802554e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x312>
 802553c:	f8b8 2000 	ldrh.w	r2, [r8]
 8025540:	9802      	ldr	r0, [sp, #8]
 8025542:	9300      	str	r3, [sp, #0]
 8025544:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025546:	f7ff fe0d 	bl	8025164 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 802554a:	f8a8 0000 	strh.w	r0, [r8]
 802554e:	f108 0802 	add.w	r8, r8, #2
 8025552:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025554:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8025558:	4a22      	ldr	r2, [pc, #136]	@ (80255e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 802555a:	440b      	add	r3, r1
 802555c:	8812      	ldrh	r2, [r2, #0]
 802555e:	9908      	ldr	r1, [sp, #32]
 8025560:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8025564:	1a52      	subs	r2, r2, r1
 8025566:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 802556a:	9a04      	ldr	r2, [sp, #16]
 802556c:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8025570:	9304      	str	r3, [sp, #16]
 8025572:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025574:	4543      	cmp	r3, r8
 8025576:	f63f aebe 	bhi.w	80252f6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xba>
 802557a:	4b19      	ldr	r3, [pc, #100]	@ (80255e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802557c:	6818      	ldr	r0, [r3, #0]
 802557e:	6803      	ldr	r3, [r0, #0]
 8025580:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025582:	4798      	blx	r3
 8025584:	b013      	add	sp, #76	@ 0x4c
 8025586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802558a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802558e:	f47f af43 	bne.w	8025418 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1dc>
 8025592:	f1b9 0f01 	cmp.w	r9, #1
 8025596:	d91a      	bls.n	80255ce <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8025598:	4a13      	ldr	r2, [pc, #76]	@ (80255e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 802559a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802559e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80255a2:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80255a6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80255aa:	ea43 030b 	orr.w	r3, r3, fp
 80255ae:	b29b      	uxth	r3, r3
 80255b0:	e77b      	b.n	80254aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 80255b2:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80255b6:	ea4b 0303 	orr.w	r3, fp, r3
 80255ba:	e776      	b.n	80254aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 80255bc:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80255c0:	ea4b 0303 	orr.w	r3, fp, r3
 80255c4:	e70d      	b.n	80253e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 80255c6:	9b04      	ldr	r3, [sp, #16]
 80255c8:	9303      	str	r3, [sp, #12]
 80255ca:	9b08      	ldr	r3, [sp, #32]
 80255cc:	e6ad      	b.n	802532a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 80255ce:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 80255d2:	b29b      	uxth	r3, r3
 80255d4:	e769      	b.n	80254aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 80255d6:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 80255da:	b29b      	uxth	r3, r3
 80255dc:	e701      	b.n	80253e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 80255de:	bf00      	nop
 80255e0:	20082f08 	.word	0x20082f08
 80255e4:	20082f02 	.word	0x20082f02
 80255e8:	fffff800 	.word	0xfffff800
 80255ec:	4b03      	ldr	r3, [pc, #12]	@ (80255fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c0>)
 80255ee:	4a04      	ldr	r2, [pc, #16]	@ (8025600 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>)
 80255f0:	f240 41f5 	movw	r1, #1269	@ 0x4f5
 80255f4:	4803      	ldr	r0, [pc, #12]	@ (8025604 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c8>)
 80255f6:	f00c ff87 	bl	8032508 <__assert_func>
 80255fa:	bf00      	nop
 80255fc:	080363e4 	.word	0x080363e4
 8025600:	080375d4 	.word	0x080375d4
 8025604:	080362f0 	.word	0x080362f0

08025608 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802560c:	b08f      	sub	sp, #60	@ 0x3c
 802560e:	9206      	str	r2, [sp, #24]
 8025610:	461c      	mov	r4, r3
 8025612:	7812      	ldrb	r2, [r2, #0]
 8025614:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8025618:	e9cd 1000 	strd	r1, r0, [sp]
 802561c:	9305      	str	r3, [sp, #20]
 802561e:	2a00      	cmp	r2, #0
 8025620:	f040 81ad 	bne.w	802597e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8025624:	b913      	cbnz	r3, 802562c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24>
 8025626:	b00f      	add	sp, #60	@ 0x3c
 8025628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802562c:	6820      	ldr	r0, [r4, #0]
 802562e:	6861      	ldr	r1, [r4, #4]
 8025630:	ab0a      	add	r3, sp, #40	@ 0x28
 8025632:	c303      	stmia	r3!, {r0, r1}
 8025634:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025636:	6818      	ldr	r0, [r3, #0]
 8025638:	6859      	ldr	r1, [r3, #4]
 802563a:	ab0c      	add	r3, sp, #48	@ 0x30
 802563c:	c303      	stmia	r3!, {r0, r1}
 802563e:	a80a      	add	r0, sp, #40	@ 0x28
 8025640:	f7e7 fb86 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025644:	4621      	mov	r1, r4
 8025646:	a80c      	add	r0, sp, #48	@ 0x30
 8025648:	f7e7 fbaa 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802564c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025650:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8025654:	dd71      	ble.n	802573a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x132>
 8025656:	2201      	movs	r2, #1
 8025658:	b299      	uxth	r1, r3
 802565a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 802565e:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8025662:	fb93 f6f2 	sdiv	r6, r3, r2
 8025666:	b2b5      	uxth	r5, r6
 8025668:	fb02 3415 	mls	r4, r2, r5, r3
 802566c:	fb14 0101 	smlabb	r1, r4, r1, r0
 8025670:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8025674:	fa1f fb81 	uxth.w	fp, r1
 8025678:	4414      	add	r4, r2
 802567a:	3c01      	subs	r4, #1
 802567c:	fb94 f4f2 	sdiv	r4, r4, r2
 8025680:	b135      	cbz	r5, 8025690 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 8025682:	9a06      	ldr	r2, [sp, #24]
 8025684:	9900      	ldr	r1, [sp, #0]
 8025686:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 802568a:	ba12      	rev	r2, r2
 802568c:	4411      	add	r1, r2
 802568e:	9100      	str	r1, [sp, #0]
 8025690:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8025694:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8025698:	4402      	add	r2, r0
 802569a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802569e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80256a2:	440b      	add	r3, r1
 80256a4:	4616      	mov	r6, r2
 80256a6:	49b9      	ldr	r1, [pc, #740]	@ (802598c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 80256a8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80256ac:	6808      	ldr	r0, [r1, #0]
 80256ae:	9209      	str	r2, [sp, #36]	@ 0x24
 80256b0:	6803      	ldr	r3, [r0, #0]
 80256b2:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80256b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80256b8:	4798      	blx	r3
 80256ba:	f1bb 0f00 	cmp.w	fp, #0
 80256be:	bf0c      	ite	eq
 80256c0:	4633      	moveq	r3, r6
 80256c2:	2300      	movne	r3, #0
 80256c4:	49b2      	ldr	r1, [pc, #712]	@ (8025990 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 80256c6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80256ca:	8809      	ldrh	r1, [r1, #0]
 80256cc:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 80256d0:	fb01 f505 	mul.w	r5, r1, r5
 80256d4:	fb01 6202 	mla	r2, r1, r2, r6
 80256d8:	b2a4      	uxth	r4, r4
 80256da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80256de:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80256e2:	00a4      	lsls	r4, r4, #2
 80256e4:	1d21      	adds	r1, r4, #4
 80256e6:	4290      	cmp	r0, r2
 80256e8:	9202      	str	r2, [sp, #8]
 80256ea:	9108      	str	r1, [sp, #32]
 80256ec:	fa1f fa83 	uxth.w	sl, r3
 80256f0:	d21b      	bcs.n	802572a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x122>
 80256f2:	2300      	movs	r3, #0
 80256f4:	465e      	mov	r6, fp
 80256f6:	461d      	mov	r5, r3
 80256f8:	9303      	str	r3, [sp, #12]
 80256fa:	b965      	cbnz	r5, 8025716 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 80256fc:	9900      	ldr	r1, [sp, #0]
 80256fe:	780b      	ldrb	r3, [r1, #0]
 8025700:	099d      	lsrs	r5, r3, #6
 8025702:	1e6a      	subs	r2, r5, #1
 8025704:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8025708:	2a02      	cmp	r2, #2
 802570a:	9303      	str	r3, [sp, #12]
 802570c:	f200 80ce 	bhi.w	80258ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8025710:	3101      	adds	r1, #1
 8025712:	9100      	str	r1, [sp, #0]
 8025714:	b2ad      	uxth	r5, r5
 8025716:	b1b6      	cbz	r6, 8025746 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8025718:	42b5      	cmp	r5, r6
 802571a:	f080 80c1 	bcs.w	80258a0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 802571e:	1b75      	subs	r5, r6, r5
 8025720:	b2ae      	uxth	r6, r5
 8025722:	2500      	movs	r5, #0
 8025724:	9b02      	ldr	r3, [sp, #8]
 8025726:	4283      	cmp	r3, r0
 8025728:	d8e7      	bhi.n	80256fa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 802572a:	4b98      	ldr	r3, [pc, #608]	@ (802598c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 802572c:	6818      	ldr	r0, [r3, #0]
 802572e:	6803      	ldr	r3, [r0, #0]
 8025730:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025732:	4798      	blx	r3
 8025734:	b00f      	add	sp, #60	@ 0x3c
 8025736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802573a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802573e:	b299      	uxth	r1, r3
 8025740:	fb94 f2f1 	sdiv	r2, r4, r1
 8025744:	e789      	b.n	802565a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x52>
 8025746:	2304      	movs	r3, #4
 8025748:	4619      	mov	r1, r3
 802574a:	9a08      	ldr	r2, [sp, #32]
 802574c:	9b03      	ldr	r3, [sp, #12]
 802574e:	4555      	cmp	r5, sl
 8025750:	fb11 2303 	smlabb	r3, r1, r3, r2
 8025754:	9a06      	ldr	r2, [sp, #24]
 8025756:	58d1      	ldr	r1, [r2, r3]
 8025758:	ea4f 6211 	mov.w	r2, r1, lsr #24
 802575c:	f0c0 8099 	bcc.w	8025892 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 8025760:	eba5 030a 	sub.w	r3, r5, sl
 8025764:	b29b      	uxth	r3, r3
 8025766:	9304      	str	r3, [sp, #16]
 8025768:	4653      	mov	r3, sl
 802576a:	9607      	str	r6, [sp, #28]
 802576c:	2a00      	cmp	r2, #0
 802576e:	f000 808d 	beq.w	802588c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>
 8025772:	2aff      	cmp	r2, #255	@ 0xff
 8025774:	ea4f 4b11 	mov.w	fp, r1, lsr #16
 8025778:	ea4f 2911 	mov.w	r9, r1, lsr #8
 802577c:	fa5f f881 	uxtb.w	r8, r1
 8025780:	d103      	bne.n	802578a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8025782:	9905      	ldr	r1, [sp, #20]
 8025784:	29ff      	cmp	r1, #255	@ 0xff
 8025786:	f000 8096 	beq.w	80258b6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 802578a:	9905      	ldr	r1, [sp, #20]
 802578c:	fa5f fb8b 	uxtb.w	fp, fp
 8025790:	fb01 f202 	mul.w	r2, r1, r2
 8025794:	1c51      	adds	r1, r2, #1
 8025796:	eb01 2222 	add.w	r2, r1, r2, asr #8
 802579a:	1212      	asrs	r2, r2, #8
 802579c:	ea6f 0c02 	mvn.w	ip, r2
 80257a0:	fa5f f989 	uxtb.w	r9, r9
 80257a4:	fa5f fc8c 	uxtb.w	ip, ip
 80257a8:	2b00      	cmp	r3, #0
 80257aa:	d04d      	beq.n	8025848 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 80257ac:	b292      	uxth	r2, r2
 80257ae:	fb1b fb02 	smulbb	fp, fp, r2
 80257b2:	fb19 f902 	smulbb	r9, r9, r2
 80257b6:	fb18 f802 	smulbb	r8, r8, r2
 80257ba:	f103 3eff 	add.w	lr, r3, #4294967295
 80257be:	fa1f fe8e 	uxth.w	lr, lr
 80257c2:	f10e 0e01 	add.w	lr, lr, #1
 80257c6:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 80257ca:	fa1f fb8b 	uxth.w	fp, fp
 80257ce:	fa1f f989 	uxth.w	r9, r9
 80257d2:	fa1f f888 	uxth.w	r8, r8
 80257d6:	fa1f fc8c 	uxth.w	ip, ip
 80257da:	f830 1b02 	ldrh.w	r1, [r0], #2
 80257de:	9b01      	ldr	r3, [sp, #4]
 80257e0:	00ca      	lsls	r2, r1, #3
 80257e2:	7b1f      	ldrb	r7, [r3, #12]
 80257e4:	b2d2      	uxtb	r2, r2
 80257e6:	10cb      	asrs	r3, r1, #3
 80257e8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80257ec:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80257f0:	fb02 820c 	mla	r2, r2, ip, r8
 80257f4:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 80257f8:	fb03 930c 	mla	r3, r3, ip, r9
 80257fc:	b292      	uxth	r2, r2
 80257fe:	1c54      	adds	r4, r2, #1
 8025800:	b29b      	uxth	r3, r3
 8025802:	3f01      	subs	r7, #1
 8025804:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 8025808:	2f01      	cmp	r7, #1
 802580a:	f103 0401 	add.w	r4, r3, #1
 802580e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025812:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8025816:	d92d      	bls.n	8025874 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8025818:	1209      	asrs	r1, r1, #8
 802581a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802581e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025822:	fb01 b10c 	mla	r1, r1, ip, fp
 8025826:	b289      	uxth	r1, r1
 8025828:	1c4c      	adds	r4, r1, #1
 802582a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802582e:	095b      	lsrs	r3, r3, #5
 8025830:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025834:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025838:	ea41 02d2 	orr.w	r2, r1, r2, lsr #3
 802583c:	431a      	orrs	r2, r3
 802583e:	4586      	cmp	lr, r0
 8025840:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025844:	d1c9      	bne.n	80257da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025846:	4670      	mov	r0, lr
 8025848:	4555      	cmp	r5, sl
 802584a:	d31b      	bcc.n	8025884 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 802584c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802584e:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 8025852:	4b4f      	ldr	r3, [pc, #316]	@ (8025990 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025854:	fa1f fa82 	uxth.w	sl, r2
 8025858:	eba6 060a 	sub.w	r6, r6, sl
 802585c:	881b      	ldrh	r3, [r3, #0]
 802585e:	b2b6      	uxth	r6, r6
 8025860:	2e00      	cmp	r6, #0
 8025862:	eba3 0302 	sub.w	r3, r3, r2
 8025866:	9d04      	ldr	r5, [sp, #16]
 8025868:	bf18      	it	ne
 802586a:	f04f 0a00 	movne.w	sl, #0
 802586e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025872:	e757      	b.n	8025724 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8025874:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025878:	431a      	orrs	r2, r3
 802587a:	4586      	cmp	lr, r0
 802587c:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025880:	d1ab      	bne.n	80257da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025882:	e7e0      	b.n	8025846 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8025884:	9d04      	ldr	r5, [sp, #16]
 8025886:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802588a:	e74b      	b.n	8025724 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802588c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025890:	e7da      	b.n	8025848 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025892:	ebaa 0405 	sub.w	r4, sl, r5
 8025896:	b2a4      	uxth	r4, r4
 8025898:	462b      	mov	r3, r5
 802589a:	9604      	str	r6, [sp, #16]
 802589c:	9407      	str	r4, [sp, #28]
 802589e:	e765      	b.n	802576c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x164>
 80258a0:	1bad      	subs	r5, r5, r6
 80258a2:	b2ad      	uxth	r5, r5
 80258a4:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 80258a8:	2600      	movs	r6, #0
 80258aa:	e73b      	b.n	8025724 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 80258ac:	460b      	mov	r3, r1
 80258ae:	3302      	adds	r3, #2
 80258b0:	784d      	ldrb	r5, [r1, #1]
 80258b2:	9300      	str	r3, [sp, #0]
 80258b4:	e72f      	b.n	8025716 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 80258b6:	9a01      	ldr	r2, [sp, #4]
 80258b8:	7b12      	ldrb	r2, [r2, #12]
 80258ba:	3a01      	subs	r2, #1
 80258bc:	2a01      	cmp	r2, #1
 80258be:	d954      	bls.n	802596a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x362>
 80258c0:	4a34      	ldr	r2, [pc, #208]	@ (8025994 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38c>)
 80258c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80258c6:	ea02 2b0b 	and.w	fp, r2, fp, lsl #8
 80258ca:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 80258ce:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80258d2:	ea48 0809 	orr.w	r8, r8, r9
 80258d6:	fa1f fe88 	uxth.w	lr, r8
 80258da:	2b00      	cmp	r3, #0
 80258dc:	d0b4      	beq.n	8025848 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 80258de:	1e5a      	subs	r2, r3, #1
 80258e0:	fa1f fb82 	uxth.w	fp, r2
 80258e4:	f1bb 0f04 	cmp.w	fp, #4
 80258e8:	f3c0 0140 	ubfx	r1, r0, #1, #1
 80258ec:	d945      	bls.n	802597a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 80258ee:	2900      	cmp	r1, #0
 80258f0:	d040      	beq.n	8025974 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 80258f2:	46d8      	mov	r8, fp
 80258f4:	f8a0 e000 	strh.w	lr, [r0]
 80258f8:	f100 0902 	add.w	r9, r0, #2
 80258fc:	2700      	movs	r7, #0
 80258fe:	1a5b      	subs	r3, r3, r1
 8025900:	463a      	mov	r2, r7
 8025902:	fa1f fc83 	uxth.w	ip, r3
 8025906:	f36e 070f 	bfi	r7, lr, #0, #16
 802590a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 802590e:	ea4f 035c 	mov.w	r3, ip, lsr #1
 8025912:	f36e 471f 	bfi	r7, lr, #16, #16
 8025916:	3201      	adds	r2, #1
 8025918:	b294      	uxth	r4, r2
 802591a:	42a3      	cmp	r3, r4
 802591c:	f841 7b04 	str.w	r7, [r1], #4
 8025920:	d8f9      	bhi.n	8025916 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 8025922:	f02c 0201 	bic.w	r2, ip, #1
 8025926:	b292      	uxth	r2, r2
 8025928:	eba8 0302 	sub.w	r3, r8, r2
 802592c:	4562      	cmp	r2, ip
 802592e:	b29b      	uxth	r3, r3
 8025930:	eb09 0142 	add.w	r1, r9, r2, lsl #1
 8025934:	d014      	beq.n	8025960 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025936:	1e5a      	subs	r2, r3, #1
 8025938:	b292      	uxth	r2, r2
 802593a:	f8a1 e000 	strh.w	lr, [r1]
 802593e:	b17a      	cbz	r2, 8025960 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025940:	1e9a      	subs	r2, r3, #2
 8025942:	b292      	uxth	r2, r2
 8025944:	f8a1 e002 	strh.w	lr, [r1, #2]
 8025948:	b152      	cbz	r2, 8025960 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802594a:	1eda      	subs	r2, r3, #3
 802594c:	b292      	uxth	r2, r2
 802594e:	f8a1 e004 	strh.w	lr, [r1, #4]
 8025952:	b12a      	cbz	r2, 8025960 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025954:	2b04      	cmp	r3, #4
 8025956:	f8a1 e006 	strh.w	lr, [r1, #6]
 802595a:	d001      	beq.n	8025960 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802595c:	f8a1 e008 	strh.w	lr, [r1, #8]
 8025960:	f10b 0b01 	add.w	fp, fp, #1
 8025964:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025968:	e76e      	b.n	8025848 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802596a:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 802596e:	fa1f fe88 	uxth.w	lr, r8
 8025972:	e7b2      	b.n	80258da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025974:	4681      	mov	r9, r0
 8025976:	4698      	mov	r8, r3
 8025978:	e7c0      	b.n	80258fc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 802597a:	4601      	mov	r1, r0
 802597c:	e7dc      	b.n	8025938 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802597e:	4b06      	ldr	r3, [pc, #24]	@ (8025998 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>)
 8025980:	4a06      	ldr	r2, [pc, #24]	@ (802599c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 8025982:	f44f 61aa 	mov.w	r1, #1360	@ 0x550
 8025986:	4806      	ldr	r0, [pc, #24]	@ (80259a0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 8025988:	f00c fdbe 	bl	8032508 <__assert_func>
 802598c:	20082f08 	.word	0x20082f08
 8025990:	20082f02 	.word	0x20082f02
 8025994:	fffff800 	.word	0xfffff800
 8025998:	080363e4 	.word	0x080363e4
 802599c:	080379e0 	.word	0x080379e0
 80259a0:	080362f0 	.word	0x080362f0

080259a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80259a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80259a8:	b09f      	sub	sp, #124	@ 0x7c
 80259aa:	9201      	str	r2, [sp, #4]
 80259ac:	461c      	mov	r4, r3
 80259ae:	7812      	ldrb	r2, [r2, #0]
 80259b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80259b4:	9116      	str	r1, [sp, #88]	@ 0x58
 80259b6:	9305      	str	r3, [sp, #20]
 80259b8:	2a00      	cmp	r2, #0
 80259ba:	f040 823c 	bne.w	8025e36 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x492>
 80259be:	b913      	cbnz	r3, 80259c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80259c0:	b01f      	add	sp, #124	@ 0x7c
 80259c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259c6:	6861      	ldr	r1, [r4, #4]
 80259c8:	4683      	mov	fp, r0
 80259ca:	6820      	ldr	r0, [r4, #0]
 80259cc:	ab1a      	add	r3, sp, #104	@ 0x68
 80259ce:	c303      	stmia	r3!, {r0, r1}
 80259d0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80259d2:	6818      	ldr	r0, [r3, #0]
 80259d4:	6859      	ldr	r1, [r3, #4]
 80259d6:	ab1c      	add	r3, sp, #112	@ 0x70
 80259d8:	c303      	stmia	r3!, {r0, r1}
 80259da:	a81a      	add	r0, sp, #104	@ 0x68
 80259dc:	f7e7 f9b8 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80259e0:	4621      	mov	r1, r4
 80259e2:	a81c      	add	r0, sp, #112	@ 0x70
 80259e4:	f7e7 f9dc 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80259e8:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 80259ec:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80259f0:	f340 8152 	ble.w	8025c98 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 80259f4:	2301      	movs	r3, #1
 80259f6:	b289      	uxth	r1, r1
 80259f8:	9318      	str	r3, [sp, #96]	@ 0x60
 80259fa:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80259fe:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 8025a02:	fb90 f4f3 	sdiv	r4, r0, r3
 8025a06:	441a      	add	r2, r3
 8025a08:	3a01      	subs	r2, #1
 8025a0a:	fb92 f2f3 	sdiv	r2, r2, r3
 8025a0e:	b2a4      	uxth	r4, r4
 8025a10:	fb03 0314 	mls	r3, r3, r4, r0
 8025a14:	9417      	str	r4, [sp, #92]	@ 0x5c
 8025a16:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8025a1a:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8025a1e:	fb13 4101 	smlabb	r1, r3, r1, r4
 8025a22:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 8025a26:	4bbb      	ldr	r3, [pc, #748]	@ (8025d14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025a28:	4434      	add	r4, r6
 8025a2a:	4405      	add	r5, r0
 8025a2c:	6818      	ldr	r0, [r3, #0]
 8025a2e:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8025a32:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 8025a36:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 8025a3a:	6803      	ldr	r3, [r0, #0]
 8025a3c:	3201      	adds	r2, #1
 8025a3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025a40:	960b      	str	r6, [sp, #44]	@ 0x2c
 8025a42:	fa1f fa81 	uxth.w	sl, r1
 8025a46:	b294      	uxth	r4, r2
 8025a48:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8025a4c:	4798      	blx	r3
 8025a4e:	2300      	movs	r3, #0
 8025a50:	f1ba 0f00 	cmp.w	sl, #0
 8025a54:	bf0c      	ite	eq
 8025a56:	4632      	moveq	r2, r6
 8025a58:	2200      	movne	r2, #0
 8025a5a:	49af      	ldr	r1, [pc, #700]	@ (8025d18 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8025a5c:	9315      	str	r3, [sp, #84]	@ 0x54
 8025a5e:	8809      	ldrh	r1, [r1, #0]
 8025a60:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8025a64:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 8025a68:	fb01 f505 	mul.w	r5, r1, r5
 8025a6c:	fb01 6303 	mla	r3, r1, r3, r6
 8025a70:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8025a74:	9300      	str	r3, [sp, #0]
 8025a76:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025a7a:	9307      	str	r3, [sp, #28]
 8025a7c:	b293      	uxth	r3, r2
 8025a7e:	9302      	str	r3, [sp, #8]
 8025a80:	f10b 030e 	add.w	r3, fp, #14
 8025a84:	9319      	str	r3, [sp, #100]	@ 0x64
 8025a86:	465b      	mov	r3, fp
 8025a88:	46d3      	mov	fp, sl
 8025a8a:	469a      	mov	sl, r3
 8025a8c:	00a4      	lsls	r4, r4, #2
 8025a8e:	1d21      	adds	r1, r4, #4
 8025a90:	9113      	str	r1, [sp, #76]	@ 0x4c
 8025a92:	9b07      	ldr	r3, [sp, #28]
 8025a94:	9a00      	ldr	r2, [sp, #0]
 8025a96:	4293      	cmp	r3, r2
 8025a98:	f240 8134 	bls.w	8025d04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025a9c:	2601      	movs	r6, #1
 8025a9e:	2700      	movs	r7, #0
 8025aa0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025aa2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8025aa4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8025aa8:	fa11 f482 	uxtah	r4, r1, r2
 8025aac:	00a4      	lsls	r4, r4, #2
 8025aae:	9a01      	ldr	r2, [sp, #4]
 8025ab0:	3404      	adds	r4, #4
 8025ab2:	1911      	adds	r1, r2, r4
 8025ab4:	788a      	ldrb	r2, [r1, #2]
 8025ab6:	784d      	ldrb	r5, [r1, #1]
 8025ab8:	0212      	lsls	r2, r2, #8
 8025aba:	78c9      	ldrb	r1, [r1, #3]
 8025abc:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8025ac0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025ac2:	4308      	orrs	r0, r1
 8025ac4:	4629      	mov	r1, r5
 8025ac6:	fbbb f3f3 	udiv	r3, fp, r3
 8025aca:	46bc      	mov	ip, r7
 8025acc:	46b1      	mov	r9, r6
 8025ace:	4401      	add	r1, r0
 8025ad0:	784a      	ldrb	r2, [r1, #1]
 8025ad2:	5c28      	ldrb	r0, [r5, r0]
 8025ad4:	0212      	lsls	r2, r2, #8
 8025ad6:	9d01      	ldr	r5, [sp, #4]
 8025ad8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025adc:	4302      	orrs	r2, r0
 8025ade:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8025ae0:	5d2c      	ldrb	r4, [r5, r4]
 8025ae2:	f88a 200d 	strb.w	r2, [sl, #13]
 8025ae6:	b292      	uxth	r2, r2
 8025ae8:	1ac3      	subs	r3, r0, r3
 8025aea:	9209      	str	r2, [sp, #36]	@ 0x24
 8025aec:	198a      	adds	r2, r1, r6
 8025aee:	9203      	str	r2, [sp, #12]
 8025af0:	b29b      	uxth	r3, r3
 8025af2:	19a2      	adds	r2, r4, r6
 8025af4:	9712      	str	r7, [sp, #72]	@ 0x48
 8025af6:	960a      	str	r6, [sp, #40]	@ 0x28
 8025af8:	940e      	str	r4, [sp, #56]	@ 0x38
 8025afa:	9206      	str	r2, [sp, #24]
 8025afc:	9314      	str	r3, [sp, #80]	@ 0x50
 8025afe:	9604      	str	r6, [sp, #16]
 8025b00:	f1bb 0f00 	cmp.w	fp, #0
 8025b04:	d037      	beq.n	8025b76 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025b06:	45d9      	cmp	r9, fp
 8025b08:	f080 80ce 	bcs.w	8025ca8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8025b0c:	ebab 0b09 	sub.w	fp, fp, r9
 8025b10:	fa1f fb8b 	uxth.w	fp, fp
 8025b14:	9b07      	ldr	r3, [sp, #28]
 8025b16:	9a00      	ldr	r2, [sp, #0]
 8025b18:	4293      	cmp	r3, r2
 8025b1a:	f240 80f3 	bls.w	8025d04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025b1e:	9803      	ldr	r0, [sp, #12]
 8025b20:	9c04      	ldr	r4, [sp, #16]
 8025b22:	7842      	ldrb	r2, [r0, #1]
 8025b24:	f1c4 0107 	rsb	r1, r4, #7
 8025b28:	7803      	ldrb	r3, [r0, #0]
 8025b2a:	408a      	lsls	r2, r1
 8025b2c:	0052      	lsls	r2, r2, #1
 8025b2e:	4123      	asrs	r3, r4
 8025b30:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025b34:	1c61      	adds	r1, r4, #1
 8025b36:	b2db      	uxtb	r3, r3
 8025b38:	4313      	orrs	r3, r2
 8025b3a:	b2ca      	uxtb	r2, r1
 8025b3c:	4611      	mov	r1, r2
 8025b3e:	2908      	cmp	r1, #8
 8025b40:	9204      	str	r2, [sp, #16]
 8025b42:	b29a      	uxth	r2, r3
 8025b44:	f000 811a 	beq.w	8025d7c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8025b48:	3001      	adds	r0, #1
 8025b4a:	9003      	str	r0, [sp, #12]
 8025b4c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8025b4e:	4291      	cmp	r1, r2
 8025b50:	f0c0 80e6 	bcc.w	8025d20 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 8025b54:	f04f 0901 	mov.w	r9, #1
 8025b58:	b2db      	uxtb	r3, r3
 8025b5a:	f88a 300d 	strb.w	r3, [sl, #13]
 8025b5e:	9906      	ldr	r1, [sp, #24]
 8025b60:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8025b64:	f0c0 8132 	bcc.w	8025dcc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8025b68:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025b6c:	f04f 0c00 	mov.w	ip, #0
 8025b70:	f1bb 0f00 	cmp.w	fp, #0
 8025b74:	d1c7      	bne.n	8025b06 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x162>
 8025b76:	9b02      	ldr	r3, [sp, #8]
 8025b78:	4599      	cmp	r9, r3
 8025b7a:	461a      	mov	r2, r3
 8025b7c:	f0c0 80f0 	bcc.w	8025d60 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3bc>
 8025b80:	eba9 0303 	sub.w	r3, r9, r3
 8025b84:	b29b      	uxth	r3, r3
 8025b86:	930c      	str	r3, [sp, #48]	@ 0x30
 8025b88:	2a00      	cmp	r2, #0
 8025b8a:	f000 80fd 	beq.w	8025d88 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e4>
 8025b8e:	4613      	mov	r3, r2
 8025b90:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 8025b94:	9208      	str	r2, [sp, #32]
 8025b96:	4463      	add	r3, ip
 8025b98:	b29b      	uxth	r3, r3
 8025b9a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 8025b9e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8025ba2:	f8dd e000 	ldr.w	lr, [sp]
 8025ba6:	930d      	str	r3, [sp, #52]	@ 0x34
 8025ba8:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 8025bac:	469b      	mov	fp, r3
 8025bae:	e048      	b.n	8025c42 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8025bb0:	9905      	ldr	r1, [sp, #20]
 8025bb2:	f8be 5000 	ldrh.w	r5, [lr]
 8025bb6:	fb01 f202 	mul.w	r2, r1, r2
 8025bba:	1c50      	adds	r0, r2, #1
 8025bbc:	eb00 2022 	add.w	r0, r0, r2, asr #8
 8025bc0:	1200      	asrs	r0, r0, #8
 8025bc2:	43c4      	mvns	r4, r0
 8025bc4:	b280      	uxth	r0, r0
 8025bc6:	b2ff      	uxtb	r7, r7
 8025bc8:	fb13 f300 	smulbb	r3, r3, r0
 8025bcc:	fb17 f700 	smulbb	r7, r7, r0
 8025bd0:	00e9      	lsls	r1, r5, #3
 8025bd2:	b2c9      	uxtb	r1, r1
 8025bd4:	10ea      	asrs	r2, r5, #3
 8025bd6:	b2e4      	uxtb	r4, r4
 8025bd8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025bdc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025be0:	fb01 3304 	mla	r3, r1, r4, r3
 8025be4:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025be8:	fb02 7704 	mla	r7, r2, r4, r7
 8025bec:	b29b      	uxth	r3, r3
 8025bee:	b2bf      	uxth	r7, r7
 8025bf0:	1c59      	adds	r1, r3, #1
 8025bf2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025bf6:	1c7a      	adds	r2, r7, #1
 8025bf8:	2e01      	cmp	r6, #1
 8025bfa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025bfe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8025c02:	d966      	bls.n	8025cd2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x32e>
 8025c04:	fa5f f888 	uxtb.w	r8, r8
 8025c08:	fb18 f800 	smulbb	r8, r8, r0
 8025c0c:	122d      	asrs	r5, r5, #8
 8025c0e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025c12:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8025c16:	fb05 8804 	mla	r8, r5, r4, r8
 8025c1a:	fa1f f888 	uxth.w	r8, r8
 8025c1e:	f108 0101 	add.w	r1, r8, #1
 8025c22:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025c26:	097f      	lsrs	r7, r7, #5
 8025c28:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025c2c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025c30:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025c34:	433b      	orrs	r3, r7
 8025c36:	f8ae 3000 	strh.w	r3, [lr]
 8025c3a:	45dc      	cmp	ip, fp
 8025c3c:	f10e 0e02 	add.w	lr, lr, #2
 8025c40:	d04b      	beq.n	8025cda <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x336>
 8025c42:	2204      	movs	r2, #4
 8025c44:	eb0a 030c 	add.w	r3, sl, ip
 8025c48:	7b5b      	ldrb	r3, [r3, #13]
 8025c4a:	f10c 0c01 	add.w	ip, ip, #1
 8025c4e:	fb12 9303 	smlabb	r3, r2, r3, r9
 8025c52:	9a01      	ldr	r2, [sp, #4]
 8025c54:	fa1f fc8c 	uxth.w	ip, ip
 8025c58:	58d3      	ldr	r3, [r2, r3]
 8025c5a:	0e1a      	lsrs	r2, r3, #24
 8025c5c:	d0ed      	beq.n	8025c3a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x296>
 8025c5e:	f89a 600c 	ldrb.w	r6, [sl, #12]
 8025c62:	2aff      	cmp	r2, #255	@ 0xff
 8025c64:	f106 36ff 	add.w	r6, r6, #4294967295
 8025c68:	ea4f 4813 	mov.w	r8, r3, lsr #16
 8025c6c:	ea4f 2713 	mov.w	r7, r3, lsr #8
 8025c70:	b2f6      	uxtb	r6, r6
 8025c72:	b2db      	uxtb	r3, r3
 8025c74:	d19c      	bne.n	8025bb0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025c76:	9905      	ldr	r1, [sp, #20]
 8025c78:	29ff      	cmp	r1, #255	@ 0xff
 8025c7a:	d199      	bne.n	8025bb0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025c7c:	2e01      	cmp	r6, #1
 8025c7e:	f240 80c4 	bls.w	8025e0a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x466>
 8025c82:	4a26      	ldr	r2, [pc, #152]	@ (8025d1c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8025c84:	00ff      	lsls	r7, r7, #3
 8025c86:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 8025c8a:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 8025c8e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025c92:	433b      	orrs	r3, r7
 8025c94:	b29b      	uxth	r3, r3
 8025c96:	e7ce      	b.n	8025c36 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025c98:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025c9c:	b289      	uxth	r1, r1
 8025c9e:	fb93 f3f1 	sdiv	r3, r3, r1
 8025ca2:	b29a      	uxth	r2, r3
 8025ca4:	9218      	str	r2, [sp, #96]	@ 0x60
 8025ca6:	e6a8      	b.n	80259fa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8025ca8:	eba9 090b 	sub.w	r9, r9, fp
 8025cac:	44dc      	add	ip, fp
 8025cae:	f04f 0b00 	mov.w	fp, #0
 8025cb2:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025cb6:	fa1f f989 	uxth.w	r9, r9
 8025cba:	fa1f fc8c 	uxth.w	ip, ip
 8025cbe:	9302      	str	r3, [sp, #8]
 8025cc0:	9b07      	ldr	r3, [sp, #28]
 8025cc2:	9a00      	ldr	r2, [sp, #0]
 8025cc4:	4293      	cmp	r3, r2
 8025cc6:	d91d      	bls.n	8025d04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025cc8:	f1b9 0f00 	cmp.w	r9, #0
 8025ccc:	f47f af18 	bne.w	8025b00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025cd0:	e725      	b.n	8025b1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8025cd2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025cd6:	433b      	orrs	r3, r7
 8025cd8:	e7ad      	b.n	8025c36 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025cda:	9b08      	ldr	r3, [sp, #32]
 8025cdc:	9a00      	ldr	r2, [sp, #0]
 8025cde:	3b01      	subs	r3, #1
 8025ce0:	b29b      	uxth	r3, r3
 8025ce2:	3301      	adds	r3, #1
 8025ce4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025ce8:	9300      	str	r3, [sp, #0]
 8025cea:	9b02      	ldr	r3, [sp, #8]
 8025cec:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 8025cf0:	4599      	cmp	r9, r3
 8025cf2:	d24b      	bcs.n	8025d8c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 8025cf4:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025cf8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025cfa:	9a00      	ldr	r2, [sp, #0]
 8025cfc:	9302      	str	r3, [sp, #8]
 8025cfe:	9b07      	ldr	r3, [sp, #28]
 8025d00:	4293      	cmp	r3, r2
 8025d02:	d8e1      	bhi.n	8025cc8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8025d04:	4b03      	ldr	r3, [pc, #12]	@ (8025d14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025d06:	6818      	ldr	r0, [r3, #0]
 8025d08:	6803      	ldr	r3, [r0, #0]
 8025d0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025d0c:	4798      	blx	r3
 8025d0e:	b01f      	add	sp, #124	@ 0x7c
 8025d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d14:	20082f08 	.word	0x20082f08
 8025d18:	20082f02 	.word	0x20082f02
 8025d1c:	fffff800 	.word	0xfffff800
 8025d20:	9b06      	ldr	r3, [sp, #24]
 8025d22:	429a      	cmp	r2, r3
 8025d24:	d355      	bcc.n	8025dd2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 8025d26:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8025d28:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8025d2c:	eb0a 0300 	add.w	r3, sl, r0
 8025d30:	7359      	strb	r1, [r3, #13]
 8025d32:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8025d36:	1c41      	adds	r1, r0, #1
 8025d38:	fa1f f981 	uxth.w	r9, r1
 8025d3c:	9c06      	ldr	r4, [sp, #24]
 8025d3e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025d40:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8025d44:	3401      	adds	r4, #1
 8025d46:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8025d4a:	b2a3      	uxth	r3, r4
 8025d4c:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8025d50:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8025d54:	9306      	str	r3, [sp, #24]
 8025d56:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025d5a:	f04f 0c00 	mov.w	ip, #0
 8025d5e:	e6cf      	b.n	8025b00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025d60:	eba3 0309 	sub.w	r3, r3, r9
 8025d64:	b29b      	uxth	r3, r3
 8025d66:	9311      	str	r3, [sp, #68]	@ 0x44
 8025d68:	f1b9 0f00 	cmp.w	r9, #0
 8025d6c:	f43f aed2 	beq.w	8025b14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8025d70:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8025d74:	f8cd 9020 	str.w	r9, [sp, #32]
 8025d78:	464b      	mov	r3, r9
 8025d7a:	e70c      	b.n	8025b96 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8025d7c:	2100      	movs	r1, #0
 8025d7e:	9104      	str	r1, [sp, #16]
 8025d80:	9903      	ldr	r1, [sp, #12]
 8025d82:	3102      	adds	r1, #2
 8025d84:	9103      	str	r1, [sp, #12]
 8025d86:	e6e1      	b.n	8025b4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8025d88:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8025d8c:	4b2d      	ldr	r3, [pc, #180]	@ (8025e44 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a0>)
 8025d8e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025d90:	881b      	ldrh	r3, [r3, #0]
 8025d92:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8025d94:	1a5b      	subs	r3, r3, r1
 8025d96:	9900      	ldr	r1, [sp, #0]
 8025d98:	3201      	adds	r2, #1
 8025d9a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8025d9e:	9300      	str	r3, [sp, #0]
 8025da0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025da2:	9212      	str	r2, [sp, #72]	@ 0x48
 8025da4:	429a      	cmp	r2, r3
 8025da6:	d034      	beq.n	8025e12 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 8025da8:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025dac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025db0:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 8025db4:	ebab 0b03 	sub.w	fp, fp, r3
 8025db8:	fa1f fb8b 	uxth.w	fp, fp
 8025dbc:	f1bb 0f00 	cmp.w	fp, #0
 8025dc0:	bf14      	ite	ne
 8025dc2:	2300      	movne	r3, #0
 8025dc4:	f04f 0b00 	moveq.w	fp, #0
 8025dc8:	9302      	str	r3, [sp, #8]
 8025dca:	e779      	b.n	8025cc0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8025dcc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025dce:	3101      	adds	r1, #1
 8025dd0:	e7b4      	b.n	8025d3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>
 8025dd2:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 8025dd6:	f893 904f 	ldrb.w	r9, [r3, #79]	@ 0x4f
 8025dda:	4613      	mov	r3, r2
 8025ddc:	f1b9 0f01 	cmp.w	r9, #1
 8025de0:	d90d      	bls.n	8025dfe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x45a>
 8025de2:	f109 010d 	add.w	r1, r9, #13
 8025de6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8025de8:	4451      	add	r1, sl
 8025dea:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8025dee:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8025df2:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8025df6:	428c      	cmp	r4, r1
 8025df8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8025dfc:	d1f5      	bne.n	8025dea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x446>
 8025dfe:	b2db      	uxtb	r3, r3
 8025e00:	f88a 300d 	strb.w	r3, [sl, #13]
 8025e04:	fa1f f989 	uxth.w	r9, r9
 8025e08:	e6a9      	b.n	8025b5e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8025e0a:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8025e0e:	b29b      	uxth	r3, r3
 8025e10:	e711      	b.n	8025c36 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025e12:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8025e16:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8025e1a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025e1c:	1a9b      	subs	r3, r3, r2
 8025e1e:	fa1f fb83 	uxth.w	fp, r3
 8025e22:	f1bb 0f00 	cmp.w	fp, #0
 8025e26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025e28:	bf18      	it	ne
 8025e2a:	2300      	movne	r3, #0
 8025e2c:	3101      	adds	r1, #1
 8025e2e:	b29b      	uxth	r3, r3
 8025e30:	9115      	str	r1, [sp, #84]	@ 0x54
 8025e32:	9302      	str	r3, [sp, #8]
 8025e34:	e62d      	b.n	8025a92 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8025e36:	4b04      	ldr	r3, [pc, #16]	@ (8025e48 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a4>)
 8025e38:	4a04      	ldr	r2, [pc, #16]	@ (8025e4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a8>)
 8025e3a:	f240 51f3 	movw	r1, #1523	@ 0x5f3
 8025e3e:	4804      	ldr	r0, [pc, #16]	@ (8025e50 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4ac>)
 8025e40:	f00c fb62 	bl	8032508 <__assert_func>
 8025e44:	20082f02 	.word	0x20082f02
 8025e48:	080363e4 	.word	0x080363e4
 8025e4c:	08037cac 	.word	0x08037cac
 8025e50:	080362f0 	.word	0x080362f0

08025e54 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e58:	4691      	mov	r9, r2
 8025e5a:	8812      	ldrh	r2, [r2, #0]
 8025e5c:	b093      	sub	sp, #76	@ 0x4c
 8025e5e:	2a01      	cmp	r2, #1
 8025e60:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 8025e64:	f040 8129 	bne.w	80260ba <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x266>
 8025e68:	b914      	cbnz	r4, 8025e70 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 8025e6a:	b013      	add	sp, #76	@ 0x4c
 8025e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e70:	461d      	mov	r5, r3
 8025e72:	468a      	mov	sl, r1
 8025e74:	6818      	ldr	r0, [r3, #0]
 8025e76:	6859      	ldr	r1, [r3, #4]
 8025e78:	ab0e      	add	r3, sp, #56	@ 0x38
 8025e7a:	c303      	stmia	r3!, {r0, r1}
 8025e7c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025e7e:	6818      	ldr	r0, [r3, #0]
 8025e80:	6859      	ldr	r1, [r3, #4]
 8025e82:	ab10      	add	r3, sp, #64	@ 0x40
 8025e84:	c303      	stmia	r3!, {r0, r1}
 8025e86:	a80e      	add	r0, sp, #56	@ 0x38
 8025e88:	f7e6 ff62 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e8c:	4629      	mov	r1, r5
 8025e8e:	a810      	add	r0, sp, #64	@ 0x40
 8025e90:	f7e6 ff86 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e94:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8025e98:	f9bd 6042 	ldrsh.w	r6, [sp, #66]	@ 0x42
 8025e9c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8025ea0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8025ea4:	488b      	ldr	r0, [pc, #556]	@ (80260d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025ea6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8025eaa:	442a      	add	r2, r5
 8025eac:	4433      	add	r3, r6
 8025eae:	6800      	ldr	r0, [r0, #0]
 8025eb0:	fb11 5106 	smlabb	r1, r1, r6, r5
 8025eb4:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8025eb8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8025ebc:	6802      	ldr	r2, [r0, #0]
 8025ebe:	4e86      	ldr	r6, [pc, #536]	@ (80260d8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>)
 8025ec0:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8025ec4:	448a      	add	sl, r1
 8025ec6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8025eca:	42b3      	cmp	r3, r6
 8025ecc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025ece:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025ed2:	f040 80c8 	bne.w	8026066 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8025ed6:	6841      	ldr	r1, [r0, #4]
 8025ed8:	4e80      	ldr	r6, [pc, #512]	@ (80260dc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>)
 8025eda:	680b      	ldr	r3, [r1, #0]
 8025edc:	699b      	ldr	r3, [r3, #24]
 8025ede:	42b3      	cmp	r3, r6
 8025ee0:	f040 80e4 	bne.w	80260ac <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>
 8025ee4:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8025ee6:	4798      	blx	r3
 8025ee8:	4b7d      	ldr	r3, [pc, #500]	@ (80260e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025eea:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025eee:	881b      	ldrh	r3, [r3, #0]
 8025ef0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025ef4:	2cff      	cmp	r4, #255	@ 0xff
 8025ef6:	fb03 1202 	mla	r2, r3, r2, r1
 8025efa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025efe:	d06f      	beq.n	8025fe0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8025f00:	43e2      	mvns	r2, r4
 8025f02:	fb05 f503 	mul.w	r5, r5, r3
 8025f06:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 8025f0a:	4288      	cmp	r0, r1
 8025f0c:	910c      	str	r1, [sp, #48]	@ 0x30
 8025f0e:	b2d2      	uxtb	r2, r2
 8025f10:	d25e      	bcs.n	8025fd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025f12:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025f14:	fa1f f884 	uxth.w	r8, r4
 8025f18:	0049      	lsls	r1, r1, #1
 8025f1a:	b292      	uxth	r2, r2
 8025f1c:	910d      	str	r1, [sp, #52]	@ 0x34
 8025f1e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8025f20:	eb00 0b01 	add.w	fp, r0, r1
 8025f24:	4583      	cmp	fp, r0
 8025f26:	d948      	bls.n	8025fba <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8025f28:	4684      	mov	ip, r0
 8025f2a:	f10a 3eff 	add.w	lr, sl, #4294967295
 8025f2e:	2103      	movs	r1, #3
 8025f30:	2404      	movs	r4, #4
 8025f32:	f81e 6f01 	ldrb.w	r6, [lr, #1]!
 8025f36:	f8bc 3000 	ldrh.w	r3, [ip]
 8025f3a:	fb11 4606 	smlabb	r6, r1, r6, r4
 8025f3e:	eb09 0106 	add.w	r1, r9, r6
 8025f42:	788d      	ldrb	r5, [r1, #2]
 8025f44:	784f      	ldrb	r7, [r1, #1]
 8025f46:	00dc      	lsls	r4, r3, #3
 8025f48:	b2e4      	uxtb	r4, r4
 8025f4a:	fb14 f402 	smulbb	r4, r4, r2
 8025f4e:	fb15 f508 	smulbb	r5, r5, r8
 8025f52:	fb17 f708 	smulbb	r7, r7, r8
 8025f56:	f819 6006 	ldrb.w	r6, [r9, r6]
 8025f5a:	1219      	asrs	r1, r3, #8
 8025f5c:	10db      	asrs	r3, r3, #3
 8025f5e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025f62:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025f66:	fb06 4608 	mla	r6, r6, r8, r4
 8025f6a:	fb01 5102 	mla	r1, r1, r2, r5
 8025f6e:	fb03 7302 	mla	r3, r3, r2, r7
 8025f72:	b2b6      	uxth	r6, r6
 8025f74:	b29b      	uxth	r3, r3
 8025f76:	b28d      	uxth	r5, r1
 8025f78:	1c5c      	adds	r4, r3, #1
 8025f7a:	1c69      	adds	r1, r5, #1
 8025f7c:	1c77      	adds	r7, r6, #1
 8025f7e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025f82:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8025f86:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8025f8a:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 8025f8e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8025f92:	0961      	lsrs	r1, r4, #5
 8025f94:	4333      	orrs	r3, r6
 8025f96:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025f9a:	430b      	orrs	r3, r1
 8025f9c:	f82c 3b02 	strh.w	r3, [ip], #2
 8025fa0:	45e3      	cmp	fp, ip
 8025fa2:	d8c4      	bhi.n	8025f2e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8025fa4:	43c3      	mvns	r3, r0
 8025fa6:	449b      	add	fp, r3
 8025fa8:	4b4d      	ldr	r3, [pc, #308]	@ (80260e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025faa:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 8025fae:	f10b 0b01 	add.w	fp, fp, #1
 8025fb2:	881b      	ldrh	r3, [r3, #0]
 8025fb4:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025fb8:	44da      	add	sl, fp
 8025fba:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025fbc:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8025fc0:	1b5c      	subs	r4, r3, r5
 8025fc2:	1b49      	subs	r1, r1, r5
 8025fc4:	448a      	add	sl, r1
 8025fc6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025fc8:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 8025fcc:	4281      	cmp	r1, r0
 8025fce:	d8a6      	bhi.n	8025f1e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xca>
 8025fd0:	4b40      	ldr	r3, [pc, #256]	@ (80260d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025fd2:	6818      	ldr	r0, [r3, #0]
 8025fd4:	6803      	ldr	r3, [r0, #0]
 8025fd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025fd8:	4798      	blx	r3
 8025fda:	b013      	add	sp, #76	@ 0x4c
 8025fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025fe0:	fb05 f503 	mul.w	r5, r5, r3
 8025fe4:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 8025fe8:	4570      	cmp	r0, lr
 8025fea:	d2f1      	bcs.n	8025fd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025fec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025fee:	f04f 0c03 	mov.w	ip, #3
 8025ff2:	2704      	movs	r7, #4
 8025ff4:	4693      	mov	fp, r2
 8025ff6:	0051      	lsls	r1, r2, #1
 8025ff8:	4e3a      	ldr	r6, [pc, #232]	@ (80260e4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8025ffa:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025ffc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025ffe:	eb00 0802 	add.w	r8, r0, r2
 8026002:	4580      	cmp	r8, r0
 8026004:	d923      	bls.n	802604e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8026006:	4604      	mov	r4, r0
 8026008:	f10a 35ff 	add.w	r5, sl, #4294967295
 802600c:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8026010:	fb1c 7202 	smlabb	r2, ip, r2, r7
 8026014:	eb09 0302 	add.w	r3, r9, r2
 8026018:	7859      	ldrb	r1, [r3, #1]
 802601a:	789b      	ldrb	r3, [r3, #2]
 802601c:	00c9      	lsls	r1, r1, #3
 802601e:	f819 2002 	ldrb.w	r2, [r9, r2]
 8026022:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026026:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 802602a:	430b      	orrs	r3, r1
 802602c:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8026030:	f824 3b02 	strh.w	r3, [r4], #2
 8026034:	45a0      	cmp	r8, r4
 8026036:	d8e9      	bhi.n	802600c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8026038:	43c3      	mvns	r3, r0
 802603a:	4498      	add	r8, r3
 802603c:	4b28      	ldr	r3, [pc, #160]	@ (80260e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 802603e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8026042:	f108 0801 	add.w	r8, r8, #1
 8026046:	881b      	ldrh	r3, [r3, #0]
 8026048:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802604c:	44c2      	add	sl, r8
 802604e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026052:	eba3 010b 	sub.w	r1, r3, fp
 8026056:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802605a:	eba2 020b 	sub.w	r2, r2, fp
 802605e:	4586      	cmp	lr, r0
 8026060:	4492      	add	sl, r2
 8026062:	d8cb      	bhi.n	8025ffc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026064:	e7b4      	b.n	8025fd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8026066:	4798      	blx	r3
 8026068:	2801      	cmp	r0, #1
 802606a:	d122      	bne.n	80260b2 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 802606c:	4b1e      	ldr	r3, [pc, #120]	@ (80260e8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 802606e:	6818      	ldr	r0, [r3, #0]
 8026070:	b350      	cbz	r0, 80260c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8026072:	2600      	movs	r6, #0
 8026074:	270b      	movs	r7, #11
 8026076:	4b1a      	ldr	r3, [pc, #104]	@ (80260e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8026078:	b2aa      	uxth	r2, r5
 802607a:	881d      	ldrh	r5, [r3, #0]
 802607c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026080:	9404      	str	r4, [sp, #16]
 8026082:	9506      	str	r5, [sp, #24]
 8026084:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026088:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 802608c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8026090:	4651      	mov	r1, sl
 8026092:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026096:	464a      	mov	r2, r9
 8026098:	9608      	str	r6, [sp, #32]
 802609a:	9605      	str	r6, [sp, #20]
 802609c:	9707      	str	r7, [sp, #28]
 802609e:	9503      	str	r5, [sp, #12]
 80260a0:	9400      	str	r4, [sp, #0]
 80260a2:	f7fa fdc9 	bl	8020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80260a6:	b013      	add	sp, #76	@ 0x4c
 80260a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260ac:	4608      	mov	r0, r1
 80260ae:	4798      	blx	r3
 80260b0:	e7da      	b.n	8026068 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x214>
 80260b2:	4b08      	ldr	r3, [pc, #32]	@ (80260d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 80260b4:	6818      	ldr	r0, [r3, #0]
 80260b6:	6802      	ldr	r2, [r0, #0]
 80260b8:	e714      	b.n	8025ee4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x90>
 80260ba:	4b0c      	ldr	r3, [pc, #48]	@ (80260ec <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 80260bc:	4a0c      	ldr	r2, [pc, #48]	@ (80260f0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 80260be:	f240 61d9 	movw	r1, #1753	@ 0x6d9
 80260c2:	480c      	ldr	r0, [pc, #48]	@ (80260f4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a0>)
 80260c4:	f00c fa20 	bl	8032508 <__assert_func>
 80260c8:	4b0b      	ldr	r3, [pc, #44]	@ (80260f8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>)
 80260ca:	4a0c      	ldr	r2, [pc, #48]	@ (80260fc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a8>)
 80260cc:	217c      	movs	r1, #124	@ 0x7c
 80260ce:	480c      	ldr	r0, [pc, #48]	@ (8026100 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 80260d0:	f00c fa1a 	bl	8032508 <__assert_func>
 80260d4:	20082f08 	.word	0x20082f08
 80260d8:	0800121d 	.word	0x0800121d
 80260dc:	0800baf5 	.word	0x0800baf5
 80260e0:	20082f02 	.word	0x20082f02
 80260e4:	fffff800 	.word	0xfffff800
 80260e8:	200833a8 	.word	0x200833a8
 80260ec:	08036314 	.word	0x08036314
 80260f0:	08036f50 	.word	0x08036f50
 80260f4:	080362f0 	.word	0x080362f0
 80260f8:	0803624c 	.word	0x0803624c
 80260fc:	08036ab8 	.word	0x08036ab8
 8026100:	08036274 	.word	0x08036274

08026104 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026108:	4693      	mov	fp, r2
 802610a:	7812      	ldrb	r2, [r2, #0]
 802610c:	b08d      	sub	sp, #52	@ 0x34
 802610e:	2a01      	cmp	r2, #1
 8026110:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 8026114:	f040 8252 	bne.w	80265bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4b8>
 8026118:	b917      	cbnz	r7, 8026120 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 802611a:	b00d      	add	sp, #52	@ 0x34
 802611c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026120:	461e      	mov	r6, r3
 8026122:	6818      	ldr	r0, [r3, #0]
 8026124:	460c      	mov	r4, r1
 8026126:	6859      	ldr	r1, [r3, #4]
 8026128:	ab08      	add	r3, sp, #32
 802612a:	c303      	stmia	r3!, {r0, r1}
 802612c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802612e:	f10b 0b04 	add.w	fp, fp, #4
 8026132:	6818      	ldr	r0, [r3, #0]
 8026134:	6859      	ldr	r1, [r3, #4]
 8026136:	ab0a      	add	r3, sp, #40	@ 0x28
 8026138:	c303      	stmia	r3!, {r0, r1}
 802613a:	a808      	add	r0, sp, #32
 802613c:	f7e6 fe08 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026140:	4631      	mov	r1, r6
 8026142:	a80a      	add	r0, sp, #40	@ 0x28
 8026144:	f7e6 fe2c 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026148:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802614c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026150:	f003 0201 	and.w	r2, r3, #1
 8026154:	4615      	mov	r5, r2
 8026156:	9204      	str	r2, [sp, #16]
 8026158:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802615c:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026160:	442b      	add	r3, r5
 8026162:	fb02 1303 	mla	r3, r2, r3, r1
 8026166:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 802616a:	4402      	add	r2, r0
 802616c:	48b9      	ldr	r0, [pc, #740]	@ (8026454 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 802616e:	440e      	add	r6, r1
 8026170:	6800      	ldr	r0, [r0, #0]
 8026172:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026176:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 802617a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802617e:	eb04 0363 	add.w	r3, r4, r3, asr #1
 8026182:	6802      	ldr	r2, [r0, #0]
 8026184:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 8026188:	9301      	str	r3, [sp, #4]
 802618a:	f001 0301 	and.w	r3, r1, #1
 802618e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026190:	9303      	str	r3, [sp, #12]
 8026192:	9502      	str	r5, [sp, #8]
 8026194:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8026198:	4790      	blx	r2
 802619a:	4baf      	ldr	r3, [pc, #700]	@ (8026458 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802619c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80261a0:	881b      	ldrh	r3, [r3, #0]
 80261a2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80261a6:	2fff      	cmp	r7, #255	@ 0xff
 80261a8:	fb03 1202 	mla	r2, r3, r2, r1
 80261ac:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 80261b0:	f000 8154 	beq.w	802645c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80261b4:	ea6f 0c07 	mvn.w	ip, r7
 80261b8:	fb03 f404 	mul.w	r4, r3, r4
 80261bc:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 80261c0:	459a      	cmp	sl, r3
 80261c2:	9306      	str	r3, [sp, #24]
 80261c4:	fa5f fc8c 	uxtb.w	ip, ip
 80261c8:	f080 80b6 	bcs.w	8026338 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80261cc:	1e6b      	subs	r3, r5, #1
 80261ce:	b2bf      	uxth	r7, r7
 80261d0:	fa1f fc8c 	uxth.w	ip, ip
 80261d4:	9307      	str	r3, [sp, #28]
 80261d6:	9b03      	ldr	r3, [sp, #12]
 80261d8:	2b00      	cmp	r3, #0
 80261da:	f040 80fc 	bne.w	80263d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 80261de:	9b01      	ldr	r3, [sp, #4]
 80261e0:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80261e4:	9300      	str	r3, [sp, #0]
 80261e6:	f1b9 0f01 	cmp.w	r9, #1
 80261ea:	f340 808e 	ble.w	802630a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x206>
 80261ee:	f1a9 0302 	sub.w	r3, r9, #2
 80261f2:	ea4f 0953 	mov.w	r9, r3, lsr #1
 80261f6:	9305      	str	r3, [sp, #20]
 80261f8:	9b00      	ldr	r3, [sp, #0]
 80261fa:	f10a 0808 	add.w	r8, sl, #8
 80261fe:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 8026202:	f10a 0604 	add.w	r6, sl, #4
 8026206:	f103 3eff 	add.w	lr, r3, #4294967295
 802620a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 802620e:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 8026212:	0909      	lsrs	r1, r1, #4
 8026214:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026218:	eb0b 0001 	add.w	r0, fp, r1
 802621c:	7882      	ldrb	r2, [r0, #2]
 802621e:	7844      	ldrb	r4, [r0, #1]
 8026220:	00dd      	lsls	r5, r3, #3
 8026222:	b2ed      	uxtb	r5, r5
 8026224:	fb12 f207 	smulbb	r2, r2, r7
 8026228:	fb15 f50c 	smulbb	r5, r5, ip
 802622c:	fb14 f407 	smulbb	r4, r4, r7
 8026230:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026234:	1218      	asrs	r0, r3, #8
 8026236:	10db      	asrs	r3, r3, #3
 8026238:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802623c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8026240:	fb00 200c 	mla	r0, r0, ip, r2
 8026244:	fb01 5507 	mla	r5, r1, r7, r5
 8026248:	fb03 440c 	mla	r4, r3, ip, r4
 802624c:	b281      	uxth	r1, r0
 802624e:	b2ad      	uxth	r5, r5
 8026250:	b2a4      	uxth	r4, r4
 8026252:	1c68      	adds	r0, r5, #1
 8026254:	1c4b      	adds	r3, r1, #1
 8026256:	1c62      	adds	r2, r4, #1
 8026258:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802625c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8026260:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 8026264:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026268:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802626c:	0952      	lsrs	r2, r2, #5
 802626e:	430b      	orrs	r3, r1
 8026270:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026274:	4313      	orrs	r3, r2
 8026276:	f826 3c04 	strh.w	r3, [r6, #-4]
 802627a:	f89e 1000 	ldrb.w	r1, [lr]
 802627e:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 8026282:	f001 010f 	and.w	r1, r1, #15
 8026286:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802628a:	eb0b 0001 	add.w	r0, fp, r1
 802628e:	7882      	ldrb	r2, [r0, #2]
 8026290:	00dd      	lsls	r5, r3, #3
 8026292:	7840      	ldrb	r0, [r0, #1]
 8026294:	b2ed      	uxtb	r5, r5
 8026296:	fb12 f207 	smulbb	r2, r2, r7
 802629a:	fb10 f007 	smulbb	r0, r0, r7
 802629e:	fb15 f50c 	smulbb	r5, r5, ip
 80262a2:	f81b 1001 	ldrb.w	r1, [fp, r1]
 80262a6:	121c      	asrs	r4, r3, #8
 80262a8:	10db      	asrs	r3, r3, #3
 80262aa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80262ae:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80262b2:	fb04 240c 	mla	r4, r4, ip, r2
 80262b6:	fb01 5507 	mla	r5, r1, r7, r5
 80262ba:	fb03 020c 	mla	r2, r3, ip, r0
 80262be:	b2a1      	uxth	r1, r4
 80262c0:	b2ad      	uxth	r5, r5
 80262c2:	b290      	uxth	r0, r2
 80262c4:	1c4b      	adds	r3, r1, #1
 80262c6:	1c6c      	adds	r4, r5, #1
 80262c8:	1c42      	adds	r2, r0, #1
 80262ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80262ce:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80262d2:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 80262d6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80262da:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80262de:	0952      	lsrs	r2, r2, #5
 80262e0:	430b      	orrs	r3, r1
 80262e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80262e6:	4313      	orrs	r3, r2
 80262e8:	f826 3c02 	strh.w	r3, [r6, #-2]
 80262ec:	3604      	adds	r6, #4
 80262ee:	45b0      	cmp	r8, r6
 80262f0:	d18b      	bne.n	802620a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80262f2:	9a00      	ldr	r2, [sp, #0]
 80262f4:	f109 0301 	add.w	r3, r9, #1
 80262f8:	441a      	add	r2, r3
 80262fa:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80262fe:	9b05      	ldr	r3, [sp, #20]
 8026300:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 8026304:	9200      	str	r2, [sp, #0]
 8026306:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 802630a:	f1b9 0f01 	cmp.w	r9, #1
 802630e:	d01b      	beq.n	8026348 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8026310:	9904      	ldr	r1, [sp, #16]
 8026312:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026316:	4a50      	ldr	r2, [pc, #320]	@ (8026458 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 8026318:	440b      	add	r3, r1
 802631a:	8812      	ldrh	r2, [r2, #0]
 802631c:	9902      	ldr	r1, [sp, #8]
 802631e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026322:	1a52      	subs	r2, r2, r1
 8026324:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026328:	9a01      	ldr	r2, [sp, #4]
 802632a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 802632e:	9301      	str	r3, [sp, #4]
 8026330:	9b06      	ldr	r3, [sp, #24]
 8026332:	4553      	cmp	r3, sl
 8026334:	f63f af4f 	bhi.w	80261d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 8026338:	4b46      	ldr	r3, [pc, #280]	@ (8026454 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 802633a:	6818      	ldr	r0, [r3, #0]
 802633c:	6803      	ldr	r3, [r0, #0]
 802633e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026340:	4798      	blx	r3
 8026342:	b00d      	add	sp, #52	@ 0x34
 8026344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026348:	9b00      	ldr	r3, [sp, #0]
 802634a:	781e      	ldrb	r6, [r3, #0]
 802634c:	f8ba 3000 	ldrh.w	r3, [sl]
 8026350:	0936      	lsrs	r6, r6, #4
 8026352:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026356:	eb0b 0006 	add.w	r0, fp, r6
 802635a:	7881      	ldrb	r1, [r0, #2]
 802635c:	7845      	ldrb	r5, [r0, #1]
 802635e:	00dc      	lsls	r4, r3, #3
 8026360:	b2e4      	uxtb	r4, r4
 8026362:	fb14 f40c 	smulbb	r4, r4, ip
 8026366:	fb11 f107 	smulbb	r1, r1, r7
 802636a:	fb15 f507 	smulbb	r5, r5, r7
 802636e:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8026372:	121a      	asrs	r2, r3, #8
 8026374:	10db      	asrs	r3, r3, #3
 8026376:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802637a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802637e:	fb00 4007 	mla	r0, r0, r7, r4
 8026382:	fb02 120c 	mla	r2, r2, ip, r1
 8026386:	fb03 530c 	mla	r3, r3, ip, r5
 802638a:	b291      	uxth	r1, r2
 802638c:	b29b      	uxth	r3, r3
 802638e:	b280      	uxth	r0, r0
 8026390:	1c4a      	adds	r2, r1, #1
 8026392:	1c5d      	adds	r5, r3, #1
 8026394:	1c44      	adds	r4, r0, #1
 8026396:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802639a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802639e:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 80263a2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80263a6:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 80263aa:	094a      	lsrs	r2, r1, #5
 80263ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80263b0:	4303      	orrs	r3, r0
 80263b2:	4313      	orrs	r3, r2
 80263b4:	f8aa 3000 	strh.w	r3, [sl]
 80263b8:	4b27      	ldr	r3, [pc, #156]	@ (8026458 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 80263ba:	9902      	ldr	r1, [sp, #8]
 80263bc:	881a      	ldrh	r2, [r3, #0]
 80263be:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80263c2:	1a52      	subs	r2, r2, r1
 80263c4:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80263c8:	9a04      	ldr	r2, [sp, #16]
 80263ca:	f10a 0a02 	add.w	sl, sl, #2
 80263ce:	4413      	add	r3, r2
 80263d0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80263d4:	e7a8      	b.n	8026328 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>
 80263d6:	9b01      	ldr	r3, [sp, #4]
 80263d8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80263dc:	781e      	ldrb	r6, [r3, #0]
 80263de:	f8ba 3000 	ldrh.w	r3, [sl]
 80263e2:	f006 060f 	and.w	r6, r6, #15
 80263e6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80263ea:	eb0b 0006 	add.w	r0, fp, r6
 80263ee:	7881      	ldrb	r1, [r0, #2]
 80263f0:	7845      	ldrb	r5, [r0, #1]
 80263f2:	00dc      	lsls	r4, r3, #3
 80263f4:	b2e4      	uxtb	r4, r4
 80263f6:	fb14 f40c 	smulbb	r4, r4, ip
 80263fa:	fb11 f107 	smulbb	r1, r1, r7
 80263fe:	fb15 f507 	smulbb	r5, r5, r7
 8026402:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8026406:	121a      	asrs	r2, r3, #8
 8026408:	10db      	asrs	r3, r3, #3
 802640a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802640e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026412:	fb00 4007 	mla	r0, r0, r7, r4
 8026416:	fb02 120c 	mla	r2, r2, ip, r1
 802641a:	fb03 530c 	mla	r3, r3, ip, r5
 802641e:	b291      	uxth	r1, r2
 8026420:	b29b      	uxth	r3, r3
 8026422:	b280      	uxth	r0, r0
 8026424:	1c4a      	adds	r2, r1, #1
 8026426:	1c5d      	adds	r5, r3, #1
 8026428:	1c44      	adds	r4, r0, #1
 802642a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802642e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8026432:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 8026436:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802643a:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802643e:	094a      	lsrs	r2, r1, #5
 8026440:	4303      	orrs	r3, r0
 8026442:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026446:	4313      	orrs	r3, r2
 8026448:	f82a 3b02 	strh.w	r3, [sl], #2
 802644c:	9b01      	ldr	r3, [sp, #4]
 802644e:	3301      	adds	r3, #1
 8026450:	9300      	str	r3, [sp, #0]
 8026452:	e6c8      	b.n	80261e6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 8026454:	20082f08 	.word	0x20082f08
 8026458:	20082f02 	.word	0x20082f02
 802645c:	fb03 f304 	mul.w	r3, r3, r4
 8026460:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 8026464:	45c2      	cmp	sl, r8
 8026466:	f4bf af67 	bcs.w	8026338 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802646a:	9b02      	ldr	r3, [sp, #8]
 802646c:	4f57      	ldr	r7, [pc, #348]	@ (80265cc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4c8>)
 802646e:	3b01      	subs	r3, #1
 8026470:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8026474:	9300      	str	r3, [sp, #0]
 8026476:	9b03      	ldr	r3, [sp, #12]
 8026478:	2b00      	cmp	r3, #0
 802647a:	f000 808a 	beq.w	8026592 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x48e>
 802647e:	f899 2000 	ldrb.w	r2, [r9]
 8026482:	9e00      	ldr	r6, [sp, #0]
 8026484:	f002 020f 	and.w	r2, r2, #15
 8026488:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802648c:	eb0b 0302 	add.w	r3, fp, r2
 8026490:	7859      	ldrb	r1, [r3, #1]
 8026492:	789b      	ldrb	r3, [r3, #2]
 8026494:	00c9      	lsls	r1, r1, #3
 8026496:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802649a:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802649e:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 80264a2:	4313      	orrs	r3, r2
 80264a4:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 80264a8:	f109 0e01 	add.w	lr, r9, #1
 80264ac:	f82a 3b02 	strh.w	r3, [sl], #2
 80264b0:	2e01      	cmp	r6, #1
 80264b2:	dd40      	ble.n	8026536 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x432>
 80264b4:	3e02      	subs	r6, #2
 80264b6:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 80264ba:	f10a 0508 	add.w	r5, sl, #8
 80264be:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 80264c2:	f10a 0004 	add.w	r0, sl, #4
 80264c6:	f10e 34ff 	add.w	r4, lr, #4294967295
 80264ca:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 80264ce:	3004      	adds	r0, #4
 80264d0:	0912      	lsrs	r2, r2, #4
 80264d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80264d6:	eb0b 0302 	add.w	r3, fp, r2
 80264da:	7859      	ldrb	r1, [r3, #1]
 80264dc:	789b      	ldrb	r3, [r3, #2]
 80264de:	00c9      	lsls	r1, r1, #3
 80264e0:	f81b 2002 	ldrb.w	r2, [fp, r2]
 80264e4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80264e8:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80264ec:	430b      	orrs	r3, r1
 80264ee:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80264f2:	f820 3c08 	strh.w	r3, [r0, #-8]
 80264f6:	7822      	ldrb	r2, [r4, #0]
 80264f8:	f002 020f 	and.w	r2, r2, #15
 80264fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026500:	eb0b 0302 	add.w	r3, fp, r2
 8026504:	7859      	ldrb	r1, [r3, #1]
 8026506:	789b      	ldrb	r3, [r3, #2]
 8026508:	00c9      	lsls	r1, r1, #3
 802650a:	f81b 2002 	ldrb.w	r2, [fp, r2]
 802650e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026512:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026516:	430b      	orrs	r3, r1
 8026518:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 802651c:	f820 3c06 	strh.w	r3, [r0, #-6]
 8026520:	4285      	cmp	r5, r0
 8026522:	d1d2      	bne.n	80264ca <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c6>
 8026524:	f10c 0301 	add.w	r3, ip, #1
 8026528:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802652c:	449e      	add	lr, r3
 802652e:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 8026532:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8026536:	2e01      	cmp	r6, #1
 8026538:	d12e      	bne.n	8026598 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x494>
 802653a:	f89e 2000 	ldrb.w	r2, [lr]
 802653e:	0912      	lsrs	r2, r2, #4
 8026540:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026544:	eb0b 0302 	add.w	r3, fp, r2
 8026548:	7859      	ldrb	r1, [r3, #1]
 802654a:	789b      	ldrb	r3, [r3, #2]
 802654c:	00c9      	lsls	r1, r1, #3
 802654e:	f81b 0002 	ldrb.w	r0, [fp, r2]
 8026552:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026556:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802655a:	4313      	orrs	r3, r2
 802655c:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026560:	f8aa 3000 	strh.w	r3, [sl]
 8026564:	4b1a      	ldr	r3, [pc, #104]	@ (80265d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026566:	9902      	ldr	r1, [sp, #8]
 8026568:	881a      	ldrh	r2, [r3, #0]
 802656a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802656e:	1a52      	subs	r2, r2, r1
 8026570:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026574:	9a04      	ldr	r2, [sp, #16]
 8026576:	f10a 0a02 	add.w	sl, sl, #2
 802657a:	4413      	add	r3, r2
 802657c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026580:	45d0      	cmp	r8, sl
 8026582:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026586:	f67f aed7 	bls.w	8026338 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802658a:	9b03      	ldr	r3, [sp, #12]
 802658c:	2b00      	cmp	r3, #0
 802658e:	f47f af76 	bne.w	802647e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x37a>
 8026592:	46ce      	mov	lr, r9
 8026594:	9e02      	ldr	r6, [sp, #8]
 8026596:	e78b      	b.n	80264b0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>
 8026598:	9904      	ldr	r1, [sp, #16]
 802659a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802659e:	4a0c      	ldr	r2, [pc, #48]	@ (80265d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 80265a0:	440b      	add	r3, r1
 80265a2:	8812      	ldrh	r2, [r2, #0]
 80265a4:	9902      	ldr	r1, [sp, #8]
 80265a6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80265aa:	1a52      	subs	r2, r2, r1
 80265ac:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80265b0:	45d0      	cmp	r8, sl
 80265b2:	eb09 0963 	add.w	r9, r9, r3, asr #1
 80265b6:	f63f af5e 	bhi.w	8026476 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 80265ba:	e6bd      	b.n	8026338 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80265bc:	4b05      	ldr	r3, [pc, #20]	@ (80265d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d0>)
 80265be:	4a06      	ldr	r2, [pc, #24]	@ (80265d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d4>)
 80265c0:	f44f 61e9 	mov.w	r1, #1864	@ 0x748
 80265c4:	4805      	ldr	r0, [pc, #20]	@ (80265dc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d8>)
 80265c6:	f00b ff9f 	bl	8032508 <__assert_func>
 80265ca:	bf00      	nop
 80265cc:	fffff800 	.word	0xfffff800
 80265d0:	20082f02 	.word	0x20082f02
 80265d4:	080363b4 	.word	0x080363b4
 80265d8:	0803728c 	.word	0x0803728c
 80265dc:	080362f0 	.word	0x080362f0

080265e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80265e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265e4:	b08f      	sub	sp, #60	@ 0x3c
 80265e6:	7814      	ldrb	r4, [r2, #0]
 80265e8:	461d      	mov	r5, r3
 80265ea:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 80265ee:	2c01      	cmp	r4, #1
 80265f0:	9206      	str	r2, [sp, #24]
 80265f2:	9101      	str	r1, [sp, #4]
 80265f4:	9304      	str	r3, [sp, #16]
 80265f6:	f040 8142 	bne.w	802687e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 80265fa:	b913      	cbnz	r3, 8026602 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80265fc:	b00f      	add	sp, #60	@ 0x3c
 80265fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026602:	6828      	ldr	r0, [r5, #0]
 8026604:	6869      	ldr	r1, [r5, #4]
 8026606:	ab0a      	add	r3, sp, #40	@ 0x28
 8026608:	c303      	stmia	r3!, {r0, r1}
 802660a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802660c:	6818      	ldr	r0, [r3, #0]
 802660e:	6859      	ldr	r1, [r3, #4]
 8026610:	ab0c      	add	r3, sp, #48	@ 0x30
 8026612:	c303      	stmia	r3!, {r0, r1}
 8026614:	a80a      	add	r0, sp, #40	@ 0x28
 8026616:	f7e6 fb9b 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802661a:	4629      	mov	r1, r5
 802661c:	a80c      	add	r0, sp, #48	@ 0x30
 802661e:	f7e6 fbbf 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026622:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026626:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 802662a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802662e:	bfdd      	ittte	le
 8026630:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 8026634:	b29a      	uxthle	r2, r3
 8026636:	fb94 f4f2 	sdivle	r4, r4, r2
 802663a:	b29a      	uxthgt	r2, r3
 802663c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8026640:	fb93 f0f4 	sdiv	r0, r3, r4
 8026644:	b285      	uxth	r5, r0
 8026646:	fb04 3c15 	mls	ip, r4, r5, r3
 802664a:	fb1c 1c02 	smlabb	ip, ip, r2, r1
 802664e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8026652:	fa1f fb8c 	uxth.w	fp, ip
 8026656:	4422      	add	r2, r4
 8026658:	3a01      	subs	r2, #1
 802665a:	fb92 f4f4 	sdiv	r4, r2, r4
 802665e:	2d00      	cmp	r5, #0
 8026660:	f040 8105 	bne.w	802686e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 8026664:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8026668:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 802666c:	4413      	add	r3, r2
 802666e:	4a87      	ldr	r2, [pc, #540]	@ (802688c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026670:	4401      	add	r1, r0
 8026672:	6810      	ldr	r0, [r2, #0]
 8026674:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8026678:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 802667c:	4616      	mov	r6, r2
 802667e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8026682:	6803      	ldr	r3, [r0, #0]
 8026684:	9209      	str	r2, [sp, #36]	@ 0x24
 8026686:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026688:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 802668c:	4798      	blx	r3
 802668e:	9f04      	ldr	r7, [sp, #16]
 8026690:	f1bb 0f00 	cmp.w	fp, #0
 8026694:	bf0c      	ite	eq
 8026696:	4633      	moveq	r3, r6
 8026698:	2300      	movne	r3, #0
 802669a:	ea6f 0807 	mvn.w	r8, r7
 802669e:	497c      	ldr	r1, [pc, #496]	@ (8026890 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 80266a0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80266a4:	8809      	ldrh	r1, [r1, #0]
 80266a6:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 80266aa:	fb01 f505 	mul.w	r5, r1, r5
 80266ae:	fb01 6202 	mla	r2, r1, r2, r6
 80266b2:	b2a4      	uxth	r4, r4
 80266b4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80266b8:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80266bc:	00a4      	lsls	r4, r4, #2
 80266be:	1d21      	adds	r1, r4, #4
 80266c0:	4290      	cmp	r0, r2
 80266c2:	9202      	str	r2, [sp, #8]
 80266c4:	9108      	str	r1, [sp, #32]
 80266c6:	fa1f fa83 	uxth.w	sl, r3
 80266ca:	fa5f f888 	uxtb.w	r8, r8
 80266ce:	d228      	bcs.n	8026722 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x142>
 80266d0:	2300      	movs	r3, #0
 80266d2:	469c      	mov	ip, r3
 80266d4:	9303      	str	r3, [sp, #12]
 80266d6:	fa1f f888 	uxth.w	r8, r8
 80266da:	fa1f f987 	uxth.w	r9, r7
 80266de:	f1bc 0f00 	cmp.w	ip, #0
 80266e2:	d10f      	bne.n	8026704 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 80266e4:	9901      	ldr	r1, [sp, #4]
 80266e6:	780a      	ldrb	r2, [r1, #0]
 80266e8:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 80266ec:	f10c 33ff 	add.w	r3, ip, #4294967295
 80266f0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80266f4:	2b02      	cmp	r3, #2
 80266f6:	9203      	str	r2, [sp, #12]
 80266f8:	f200 80b3 	bhi.w	8026862 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x282>
 80266fc:	3101      	adds	r1, #1
 80266fe:	9101      	str	r1, [sp, #4]
 8026700:	fa1f fc8c 	uxth.w	ip, ip
 8026704:	f1bb 0f00 	cmp.w	fp, #0
 8026708:	d013      	beq.n	8026732 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802670a:	45dc      	cmp	ip, fp
 802670c:	f080 80a0 	bcs.w	8026850 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8026710:	ebab 0c0c 	sub.w	ip, fp, ip
 8026714:	fa1f fb8c 	uxth.w	fp, ip
 8026718:	f04f 0c00 	mov.w	ip, #0
 802671c:	9b02      	ldr	r3, [sp, #8]
 802671e:	4283      	cmp	r3, r0
 8026720:	d8dd      	bhi.n	80266de <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8026722:	4b5a      	ldr	r3, [pc, #360]	@ (802688c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026724:	6818      	ldr	r0, [r3, #0]
 8026726:	6803      	ldr	r3, [r0, #0]
 8026728:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802672a:	4798      	blx	r3
 802672c:	b00f      	add	sp, #60	@ 0x3c
 802672e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026732:	2303      	movs	r3, #3
 8026734:	4619      	mov	r1, r3
 8026736:	9a08      	ldr	r2, [sp, #32]
 8026738:	9b03      	ldr	r3, [sp, #12]
 802673a:	45d4      	cmp	ip, sl
 802673c:	fb11 2703 	smlabb	r7, r1, r3, r2
 8026740:	9b06      	ldr	r3, [sp, #24]
 8026742:	441f      	add	r7, r3
 8026744:	d362      	bcc.n	802680c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 8026746:	ebac 030a 	sub.w	r3, ip, sl
 802674a:	b29b      	uxth	r3, r3
 802674c:	9305      	str	r3, [sp, #20]
 802674e:	9b04      	ldr	r3, [sp, #16]
 8026750:	4654      	mov	r4, sl
 8026752:	2bff      	cmp	r3, #255	@ 0xff
 8026754:	f8cd b01c 	str.w	fp, [sp, #28]
 8026758:	d062      	beq.n	8026820 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802675a:	2c00      	cmp	r4, #0
 802675c:	d038      	beq.n	80267d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 802675e:	f104 3eff 	add.w	lr, r4, #4294967295
 8026762:	fa1f fe8e 	uxth.w	lr, lr
 8026766:	f10e 0e01 	add.w	lr, lr, #1
 802676a:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 802676e:	8802      	ldrh	r2, [r0, #0]
 8026770:	78bd      	ldrb	r5, [r7, #2]
 8026772:	00d4      	lsls	r4, r2, #3
 8026774:	7879      	ldrb	r1, [r7, #1]
 8026776:	b2e4      	uxtb	r4, r4
 8026778:	fb14 f408 	smulbb	r4, r4, r8
 802677c:	fb15 f509 	smulbb	r5, r5, r9
 8026780:	fb11 f109 	smulbb	r1, r1, r9
 8026784:	783e      	ldrb	r6, [r7, #0]
 8026786:	1213      	asrs	r3, r2, #8
 8026788:	10d2      	asrs	r2, r2, #3
 802678a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802678e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026792:	fb06 4409 	mla	r4, r6, r9, r4
 8026796:	fb03 5308 	mla	r3, r3, r8, r5
 802679a:	fb02 1208 	mla	r2, r2, r8, r1
 802679e:	b2a4      	uxth	r4, r4
 80267a0:	b291      	uxth	r1, r2
 80267a2:	b29d      	uxth	r5, r3
 80267a4:	1c62      	adds	r2, r4, #1
 80267a6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80267aa:	1c6b      	adds	r3, r5, #1
 80267ac:	1c4a      	adds	r2, r1, #1
 80267ae:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80267b2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80267b6:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 80267ba:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80267be:	0952      	lsrs	r2, r2, #5
 80267c0:	430b      	orrs	r3, r1
 80267c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80267c6:	4313      	orrs	r3, r2
 80267c8:	f820 3b02 	strh.w	r3, [r0], #2
 80267cc:	4570      	cmp	r0, lr
 80267ce:	d1ce      	bne.n	802676e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 80267d0:	45d4      	cmp	ip, sl
 80267d2:	d316      	bcc.n	8026802 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 80267d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80267d6:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 80267da:	4b2d      	ldr	r3, [pc, #180]	@ (8026890 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 80267dc:	fa1f fa82 	uxth.w	sl, r2
 80267e0:	ebab 0b0a 	sub.w	fp, fp, sl
 80267e4:	881b      	ldrh	r3, [r3, #0]
 80267e6:	fa1f fb8b 	uxth.w	fp, fp
 80267ea:	f1bb 0f00 	cmp.w	fp, #0
 80267ee:	eba3 0302 	sub.w	r3, r3, r2
 80267f2:	f8dd c014 	ldr.w	ip, [sp, #20]
 80267f6:	bf18      	it	ne
 80267f8:	f04f 0a00 	movne.w	sl, #0
 80267fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8026800:	e78c      	b.n	802671c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026802:	f8dd c014 	ldr.w	ip, [sp, #20]
 8026806:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802680a:	e787      	b.n	802671c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 802680c:	ebaa 020c 	sub.w	r2, sl, ip
 8026810:	b293      	uxth	r3, r2
 8026812:	9307      	str	r3, [sp, #28]
 8026814:	9b04      	ldr	r3, [sp, #16]
 8026816:	4664      	mov	r4, ip
 8026818:	2bff      	cmp	r3, #255	@ 0xff
 802681a:	f8cd b014 	str.w	fp, [sp, #20]
 802681e:	d19c      	bne.n	802675a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8026820:	2c00      	cmp	r4, #0
 8026822:	d0d5      	beq.n	80267d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026824:	3c01      	subs	r4, #1
 8026826:	b2a4      	uxth	r4, r4
 8026828:	3401      	adds	r4, #1
 802682a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802682e:	787a      	ldrb	r2, [r7, #1]
 8026830:	78bb      	ldrb	r3, [r7, #2]
 8026832:	4918      	ldr	r1, [pc, #96]	@ (8026894 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b4>)
 8026834:	00d2      	lsls	r2, r2, #3
 8026836:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802683a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802683e:	7839      	ldrb	r1, [r7, #0]
 8026840:	4313      	orrs	r3, r2
 8026842:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026846:	f820 3b02 	strh.w	r3, [r0], #2
 802684a:	42a0      	cmp	r0, r4
 802684c:	d1ef      	bne.n	802682e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 802684e:	e7bf      	b.n	80267d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026850:	ebac 0c0b 	sub.w	ip, ip, fp
 8026854:	fa1f fc8c 	uxth.w	ip, ip
 8026858:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 802685c:	f04f 0b00 	mov.w	fp, #0
 8026860:	e75c      	b.n	802671c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026862:	460b      	mov	r3, r1
 8026864:	3302      	adds	r3, #2
 8026866:	f891 c001 	ldrb.w	ip, [r1, #1]
 802686a:	9301      	str	r3, [sp, #4]
 802686c:	e74a      	b.n	8026704 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 802686e:	9a06      	ldr	r2, [sp, #24]
 8026870:	9801      	ldr	r0, [sp, #4]
 8026872:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 8026876:	ba12      	rev	r2, r2
 8026878:	4410      	add	r0, r2
 802687a:	9001      	str	r0, [sp, #4]
 802687c:	e6f2      	b.n	8026664 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x84>
 802687e:	4b06      	ldr	r3, [pc, #24]	@ (8026898 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b8>)
 8026880:	4a06      	ldr	r2, [pc, #24]	@ (802689c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2bc>)
 8026882:	f240 71c2 	movw	r1, #1986	@ 0x7c2
 8026886:	4806      	ldr	r0, [pc, #24]	@ (80268a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8026888:	f00b fe3e 	bl	8032508 <__assert_func>
 802688c:	20082f08 	.word	0x20082f08
 8026890:	20082f02 	.word	0x20082f02
 8026894:	fffff800 	.word	0xfffff800
 8026898:	080363b4 	.word	0x080363b4
 802689c:	08037430 	.word	0x08037430
 80268a0:	080362f0 	.word	0x080362f0

080268a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80268a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80268a8:	b09d      	sub	sp, #116	@ 0x74
 80268aa:	7814      	ldrb	r4, [r2, #0]
 80268ac:	461d      	mov	r5, r3
 80268ae:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 80268b2:	2c01      	cmp	r4, #1
 80268b4:	9211      	str	r2, [sp, #68]	@ 0x44
 80268b6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80268b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80268ba:	f040 820a 	bne.w	8026cd2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 80268be:	b913      	cbnz	r3, 80268c6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80268c0:	b01d      	add	sp, #116	@ 0x74
 80268c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268c6:	6869      	ldr	r1, [r5, #4]
 80268c8:	4683      	mov	fp, r0
 80268ca:	6828      	ldr	r0, [r5, #0]
 80268cc:	ab18      	add	r3, sp, #96	@ 0x60
 80268ce:	c303      	stmia	r3!, {r0, r1}
 80268d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80268d2:	6818      	ldr	r0, [r3, #0]
 80268d4:	6859      	ldr	r1, [r3, #4]
 80268d6:	ab1a      	add	r3, sp, #104	@ 0x68
 80268d8:	c303      	stmia	r3!, {r0, r1}
 80268da:	a818      	add	r0, sp, #96	@ 0x60
 80268dc:	f7e6 fa38 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80268e0:	4629      	mov	r1, r5
 80268e2:	a81a      	add	r0, sp, #104	@ 0x68
 80268e4:	f7e6 fa5c 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80268e8:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 80268ec:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80268f0:	f340 814b 	ble.w	8026b8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e6>
 80268f4:	b2b0      	uxth	r0, r6
 80268f6:	9416      	str	r4, [sp, #88]	@ 0x58
 80268f8:	f9bd 306a 	ldrsh.w	r3, [sp, #106]	@ 0x6a
 80268fc:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 8026900:	fb93 f1f4 	sdiv	r1, r3, r4
 8026904:	4422      	add	r2, r4
 8026906:	3a01      	subs	r2, #1
 8026908:	fb92 f2f4 	sdiv	r2, r2, r4
 802690c:	b289      	uxth	r1, r1
 802690e:	fb04 3411 	mls	r4, r4, r1, r3
 8026912:	9114      	str	r1, [sp, #80]	@ 0x50
 8026914:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8026918:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 802691c:	fb14 1600 	smlabb	r6, r4, r0, r1
 8026920:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 8026924:	48a4      	ldr	r0, [pc, #656]	@ (8026bb8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026926:	4439      	add	r1, r7
 8026928:	442b      	add	r3, r5
 802692a:	6800      	ldr	r0, [r0, #0]
 802692c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8026930:	f8ad 306a 	strh.w	r3, [sp, #106]	@ 0x6a
 8026934:	f9bd 706c 	ldrsh.w	r7, [sp, #108]	@ 0x6c
 8026938:	6803      	ldr	r3, [r0, #0]
 802693a:	b2b5      	uxth	r5, r6
 802693c:	3201      	adds	r2, #1
 802693e:	9501      	str	r5, [sp, #4]
 8026940:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026942:	970b      	str	r7, [sp, #44]	@ 0x2c
 8026944:	b294      	uxth	r4, r2
 8026946:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 802694a:	4798      	blx	r3
 802694c:	2100      	movs	r1, #0
 802694e:	2d00      	cmp	r5, #0
 8026950:	4d9a      	ldr	r5, [pc, #616]	@ (8026bbc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026952:	bf08      	it	eq
 8026954:	463a      	moveq	r2, r7
 8026956:	882d      	ldrh	r5, [r5, #0]
 8026958:	9112      	str	r1, [sp, #72]	@ 0x48
 802695a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 802695e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8026962:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026964:	fb05 7101 	mla	r1, r5, r1, r7
 8026968:	ea6f 0c03 	mvn.w	ip, r3
 802696c:	fb05 f306 	mul.w	r3, r5, r6
 8026970:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8026974:	9100      	str	r1, [sp, #0]
 8026976:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 802697a:	f10b 030e 	add.w	r3, fp, #14
 802697e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026980:	465b      	mov	r3, fp
 8026982:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026984:	bf18      	it	ne
 8026986:	2200      	movne	r2, #0
 8026988:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 802698c:	f104 0904 	add.w	r9, r4, #4
 8026990:	46cb      	mov	fp, r9
 8026992:	4699      	mov	r9, r3
 8026994:	460b      	mov	r3, r1
 8026996:	b292      	uxth	r2, r2
 8026998:	9202      	str	r2, [sp, #8]
 802699a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 802699e:	fa5f f28c 	uxtb.w	r2, ip
 80269a2:	9107      	str	r1, [sp, #28]
 80269a4:	9215      	str	r2, [sp, #84]	@ 0x54
 80269a6:	9a00      	ldr	r2, [sp, #0]
 80269a8:	4293      	cmp	r3, r2
 80269aa:	f240 80fd 	bls.w	8026ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 80269ae:	9a01      	ldr	r2, [sp, #4]
 80269b0:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80269b4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80269b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80269ba:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80269bc:	2701      	movs	r7, #1
 80269be:	fa11 f482 	uxtah	r4, r1, r2
 80269c2:	00a4      	lsls	r4, r4, #2
 80269c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80269c6:	3404      	adds	r4, #4
 80269c8:	1911      	adds	r1, r2, r4
 80269ca:	788a      	ldrb	r2, [r1, #2]
 80269cc:	784d      	ldrb	r5, [r1, #1]
 80269ce:	0212      	lsls	r2, r2, #8
 80269d0:	78c9      	ldrb	r1, [r1, #3]
 80269d2:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 80269d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80269d8:	4308      	orrs	r0, r1
 80269da:	4629      	mov	r1, r5
 80269dc:	2600      	movs	r6, #0
 80269de:	4401      	add	r1, r0
 80269e0:	784a      	ldrb	r2, [r1, #1]
 80269e2:	5c28      	ldrb	r0, [r5, r0]
 80269e4:	0212      	lsls	r2, r2, #8
 80269e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80269e8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80269ec:	4302      	orrs	r2, r0
 80269ee:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80269f0:	5d2c      	ldrb	r4, [r5, r4]
 80269f2:	f889 200d 	strb.w	r2, [r9, #13]
 80269f6:	b292      	uxth	r2, r2
 80269f8:	1ac3      	subs	r3, r0, r3
 80269fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80269fc:	19ca      	adds	r2, r1, r7
 80269fe:	9205      	str	r2, [sp, #20]
 8026a00:	b29b      	uxth	r3, r3
 8026a02:	19e2      	adds	r2, r4, r7
 8026a04:	f8bd e054 	ldrh.w	lr, [sp, #84]	@ 0x54
 8026a08:	960e      	str	r6, [sp, #56]	@ 0x38
 8026a0a:	970a      	str	r7, [sp, #40]	@ 0x28
 8026a0c:	940d      	str	r4, [sp, #52]	@ 0x34
 8026a0e:	9206      	str	r2, [sp, #24]
 8026a10:	9310      	str	r3, [sp, #64]	@ 0x40
 8026a12:	9704      	str	r7, [sp, #16]
 8026a14:	9b01      	ldr	r3, [sp, #4]
 8026a16:	2b00      	cmp	r3, #0
 8026a18:	d034      	beq.n	8026a84 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1e0>
 8026a1a:	42bb      	cmp	r3, r7
 8026a1c:	f240 811a 	bls.w	8026c54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 8026a20:	1bdf      	subs	r7, r3, r7
 8026a22:	b2bb      	uxth	r3, r7
 8026a24:	9301      	str	r3, [sp, #4]
 8026a26:	9a00      	ldr	r2, [sp, #0]
 8026a28:	9b07      	ldr	r3, [sp, #28]
 8026a2a:	4293      	cmp	r3, r2
 8026a2c:	f240 80bc 	bls.w	8026ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026a30:	9805      	ldr	r0, [sp, #20]
 8026a32:	9c04      	ldr	r4, [sp, #16]
 8026a34:	7842      	ldrb	r2, [r0, #1]
 8026a36:	f1c4 0107 	rsb	r1, r4, #7
 8026a3a:	7803      	ldrb	r3, [r0, #0]
 8026a3c:	408a      	lsls	r2, r1
 8026a3e:	0052      	lsls	r2, r2, #1
 8026a40:	4123      	asrs	r3, r4
 8026a42:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8026a46:	1c61      	adds	r1, r4, #1
 8026a48:	b2db      	uxtb	r3, r3
 8026a4a:	4313      	orrs	r3, r2
 8026a4c:	b2ca      	uxtb	r2, r1
 8026a4e:	4611      	mov	r1, r2
 8026a50:	2908      	cmp	r1, #8
 8026a52:	9204      	str	r2, [sp, #16]
 8026a54:	b29a      	uxth	r2, r3
 8026a56:	f000 8107 	beq.w	8026c68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8026a5a:	3001      	adds	r0, #1
 8026a5c:	9005      	str	r0, [sp, #20]
 8026a5e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8026a60:	4291      	cmp	r1, r2
 8026a62:	f0c0 80d9 	bcc.w	8026c18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>
 8026a66:	2701      	movs	r7, #1
 8026a68:	b2db      	uxtb	r3, r3
 8026a6a:	f889 300d 	strb.w	r3, [r9, #13]
 8026a6e:	9906      	ldr	r1, [sp, #24]
 8026a70:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8026a74:	f0c0 80fe 	bcc.w	8026c74 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 8026a78:	9b01      	ldr	r3, [sp, #4]
 8026a7a:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026a7e:	2600      	movs	r6, #0
 8026a80:	2b00      	cmp	r3, #0
 8026a82:	d1ca      	bne.n	8026a1a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8026a84:	9b02      	ldr	r3, [sp, #8]
 8026a86:	429f      	cmp	r7, r3
 8026a88:	461a      	mov	r2, r3
 8026a8a:	f0c0 8099 	bcc.w	8026bc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8026a8e:	1afb      	subs	r3, r7, r3
 8026a90:	b29b      	uxth	r3, r3
 8026a92:	9308      	str	r3, [sp, #32]
 8026a94:	9b01      	ldr	r3, [sp, #4]
 8026a96:	9203      	str	r2, [sp, #12]
 8026a98:	930c      	str	r3, [sp, #48]	@ 0x30
 8026a9a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026a9c:	2bff      	cmp	r3, #255	@ 0xff
 8026a9e:	9b03      	ldr	r3, [sp, #12]
 8026aa0:	f000 809a 	beq.w	8026bd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8026aa4:	2b00      	cmp	r3, #0
 8026aa6:	d049      	beq.n	8026b3c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026aa8:	eb06 0803 	add.w	r8, r6, r3
 8026aac:	f8dd c000 	ldr.w	ip, [sp]
 8026ab0:	fa1f f888 	uxth.w	r8, r8
 8026ab4:	eb09 0306 	add.w	r3, r9, r6
 8026ab8:	7b5c      	ldrb	r4, [r3, #13]
 8026aba:	f8bc 3000 	ldrh.w	r3, [ip]
 8026abe:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026ac2:	eb0b 0204 	add.w	r2, fp, r4
 8026ac6:	7890      	ldrb	r0, [r2, #2]
 8026ac8:	7855      	ldrb	r5, [r2, #1]
 8026aca:	00d9      	lsls	r1, r3, #3
 8026acc:	b2c9      	uxtb	r1, r1
 8026ace:	fb11 f10e 	smulbb	r1, r1, lr
 8026ad2:	fb10 f00a 	smulbb	r0, r0, sl
 8026ad6:	fb15 f50a 	smulbb	r5, r5, sl
 8026ada:	f81b 4004 	ldrb.w	r4, [fp, r4]
 8026ade:	121a      	asrs	r2, r3, #8
 8026ae0:	10db      	asrs	r3, r3, #3
 8026ae2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8026ae6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026aea:	fb04 140a 	mla	r4, r4, sl, r1
 8026aee:	fb02 020e 	mla	r2, r2, lr, r0
 8026af2:	fb03 530e 	mla	r3, r3, lr, r5
 8026af6:	b2a4      	uxth	r4, r4
 8026af8:	b29b      	uxth	r3, r3
 8026afa:	b290      	uxth	r0, r2
 8026afc:	1c59      	adds	r1, r3, #1
 8026afe:	1c42      	adds	r2, r0, #1
 8026b00:	1c65      	adds	r5, r4, #1
 8026b02:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026b06:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026b0a:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8026b0e:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8026b12:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8026b16:	094a      	lsrs	r2, r1, #5
 8026b18:	3601      	adds	r6, #1
 8026b1a:	4323      	orrs	r3, r4
 8026b1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026b20:	b2b6      	uxth	r6, r6
 8026b22:	4313      	orrs	r3, r2
 8026b24:	4546      	cmp	r6, r8
 8026b26:	f82c 3b02 	strh.w	r3, [ip], #2
 8026b2a:	d1c3      	bne.n	8026ab4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8026b2c:	9b03      	ldr	r3, [sp, #12]
 8026b2e:	9a00      	ldr	r2, [sp, #0]
 8026b30:	3b01      	subs	r3, #1
 8026b32:	b29b      	uxth	r3, r3
 8026b34:	3301      	adds	r3, #1
 8026b36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026b3a:	9300      	str	r3, [sp, #0]
 8026b3c:	9b02      	ldr	r3, [sp, #8]
 8026b3e:	429f      	cmp	r7, r3
 8026b40:	d32b      	bcc.n	8026b9a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8026b42:	4b1e      	ldr	r3, [pc, #120]	@ (8026bbc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026b44:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026b46:	881b      	ldrh	r3, [r3, #0]
 8026b48:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8026b4a:	1a5b      	subs	r3, r3, r1
 8026b4c:	9900      	ldr	r1, [sp, #0]
 8026b4e:	3201      	adds	r2, #1
 8026b50:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8026b54:	9300      	str	r3, [sp, #0]
 8026b56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026b58:	920e      	str	r2, [sp, #56]	@ 0x38
 8026b5a:	429a      	cmp	r2, r3
 8026b5c:	f000 80a7 	beq.w	8026cae <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 8026b60:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8026b64:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026b68:	9f08      	ldr	r7, [sp, #32]
 8026b6a:	1a9b      	subs	r3, r3, r2
 8026b6c:	b29b      	uxth	r3, r3
 8026b6e:	2b00      	cmp	r3, #0
 8026b70:	bf14      	ite	ne
 8026b72:	2200      	movne	r2, #0
 8026b74:	2300      	moveq	r3, #0
 8026b76:	9202      	str	r2, [sp, #8]
 8026b78:	9301      	str	r3, [sp, #4]
 8026b7a:	9b07      	ldr	r3, [sp, #28]
 8026b7c:	9a00      	ldr	r2, [sp, #0]
 8026b7e:	4293      	cmp	r3, r2
 8026b80:	d912      	bls.n	8026ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026b82:	2f00      	cmp	r7, #0
 8026b84:	f47f af46 	bne.w	8026a14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026b88:	e752      	b.n	8026a30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8026b8a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8026b8e:	b2b0      	uxth	r0, r6
 8026b90:	fb94 f4f0 	sdiv	r4, r4, r0
 8026b94:	b2a3      	uxth	r3, r4
 8026b96:	9316      	str	r3, [sp, #88]	@ 0x58
 8026b98:	e6ae      	b.n	80268f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x54>
 8026b9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026b9c:	9a00      	ldr	r2, [sp, #0]
 8026b9e:	9302      	str	r3, [sp, #8]
 8026ba0:	9b07      	ldr	r3, [sp, #28]
 8026ba2:	9f08      	ldr	r7, [sp, #32]
 8026ba4:	4293      	cmp	r3, r2
 8026ba6:	d8ec      	bhi.n	8026b82 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2de>
 8026ba8:	4b03      	ldr	r3, [pc, #12]	@ (8026bb8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026baa:	6818      	ldr	r0, [r3, #0]
 8026bac:	6803      	ldr	r3, [r0, #0]
 8026bae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026bb0:	4798      	blx	r3
 8026bb2:	b01d      	add	sp, #116	@ 0x74
 8026bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bb8:	20082f08 	.word	0x20082f08
 8026bbc:	20082f02 	.word	0x20082f02
 8026bc0:	9b01      	ldr	r3, [sp, #4]
 8026bc2:	9703      	str	r7, [sp, #12]
 8026bc4:	9308      	str	r3, [sp, #32]
 8026bc6:	9b02      	ldr	r3, [sp, #8]
 8026bc8:	1bdb      	subs	r3, r3, r7
 8026bca:	b29b      	uxth	r3, r3
 8026bcc:	930c      	str	r3, [sp, #48]	@ 0x30
 8026bce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026bd0:	2bff      	cmp	r3, #255	@ 0xff
 8026bd2:	9b03      	ldr	r3, [sp, #12]
 8026bd4:	f47f af66 	bne.w	8026aa4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8026bd8:	2b00      	cmp	r3, #0
 8026bda:	d0af      	beq.n	8026b3c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026bdc:	18f4      	adds	r4, r6, r3
 8026bde:	9800      	ldr	r0, [sp, #0]
 8026be0:	b2a4      	uxth	r4, r4
 8026be2:	eb09 0306 	add.w	r3, r9, r6
 8026be6:	7b59      	ldrb	r1, [r3, #13]
 8026be8:	4d3d      	ldr	r5, [pc, #244]	@ (8026ce0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8026bea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026bee:	eb0b 0301 	add.w	r3, fp, r1
 8026bf2:	785a      	ldrb	r2, [r3, #1]
 8026bf4:	789b      	ldrb	r3, [r3, #2]
 8026bf6:	00d2      	lsls	r2, r2, #3
 8026bf8:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026bfc:	3601      	adds	r6, #1
 8026bfe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026c02:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8026c06:	4313      	orrs	r3, r2
 8026c08:	b2b6      	uxth	r6, r6
 8026c0a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026c0e:	42a6      	cmp	r6, r4
 8026c10:	f820 3b02 	strh.w	r3, [r0], #2
 8026c14:	d1e5      	bne.n	8026be2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8026c16:	e789      	b.n	8026b2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>
 8026c18:	9b06      	ldr	r3, [sp, #24]
 8026c1a:	429a      	cmp	r2, r3
 8026c1c:	d32d      	bcc.n	8026c7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 8026c1e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8026c20:	f899 100d 	ldrb.w	r1, [r9, #13]
 8026c24:	eb09 0300 	add.w	r3, r9, r0
 8026c28:	7359      	strb	r1, [r3, #13]
 8026c2a:	f899 300d 	ldrb.w	r3, [r9, #13]
 8026c2e:	1c41      	adds	r1, r0, #1
 8026c30:	b28f      	uxth	r7, r1
 8026c32:	9c06      	ldr	r4, [sp, #24]
 8026c34:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026c36:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8026c3a:	3401      	adds	r4, #1
 8026c3c:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8026c40:	b2a3      	uxth	r3, r4
 8026c42:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8026c46:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8026c4a:	9306      	str	r3, [sp, #24]
 8026c4c:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026c50:	2600      	movs	r6, #0
 8026c52:	e6df      	b.n	8026a14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026c54:	1aff      	subs	r7, r7, r3
 8026c56:	441e      	add	r6, r3
 8026c58:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026c5c:	b2bf      	uxth	r7, r7
 8026c5e:	9302      	str	r3, [sp, #8]
 8026c60:	2300      	movs	r3, #0
 8026c62:	b2b6      	uxth	r6, r6
 8026c64:	9301      	str	r3, [sp, #4]
 8026c66:	e788      	b.n	8026b7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 8026c68:	2100      	movs	r1, #0
 8026c6a:	9104      	str	r1, [sp, #16]
 8026c6c:	9905      	ldr	r1, [sp, #20]
 8026c6e:	3102      	adds	r1, #2
 8026c70:	9105      	str	r1, [sp, #20]
 8026c72:	e6f4      	b.n	8026a5e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8026c74:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8026c76:	3101      	adds	r1, #1
 8026c78:	e7db      	b.n	8026c32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x38e>
 8026c7a:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8026c7e:	f893 704f 	ldrb.w	r7, [r3, #79]	@ 0x4f
 8026c82:	4613      	mov	r3, r2
 8026c84:	2f01      	cmp	r7, #1
 8026c86:	d90d      	bls.n	8026ca4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x400>
 8026c88:	f107 010d 	add.w	r1, r7, #13
 8026c8c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8026c8e:	4449      	add	r1, r9
 8026c90:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8026c94:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026c98:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8026c9c:	428c      	cmp	r4, r1
 8026c9e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8026ca2:	d1f5      	bne.n	8026c90 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ec>
 8026ca4:	b2db      	uxtb	r3, r3
 8026ca6:	f889 300d 	strb.w	r3, [r9, #13]
 8026caa:	b2bf      	uxth	r7, r7
 8026cac:	e6df      	b.n	8026a6e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8026cae:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8026cb2:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 8026cb6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8026cb8:	1a9b      	subs	r3, r3, r2
 8026cba:	b29b      	uxth	r3, r3
 8026cbc:	2b00      	cmp	r3, #0
 8026cbe:	9301      	str	r3, [sp, #4]
 8026cc0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026cc2:	bf18      	it	ne
 8026cc4:	2300      	movne	r3, #0
 8026cc6:	3101      	adds	r1, #1
 8026cc8:	b29b      	uxth	r3, r3
 8026cca:	9302      	str	r3, [sp, #8]
 8026ccc:	9112      	str	r1, [sp, #72]	@ 0x48
 8026cce:	9b07      	ldr	r3, [sp, #28]
 8026cd0:	e669      	b.n	80269a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8026cd2:	4b04      	ldr	r3, [pc, #16]	@ (8026ce4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8026cd4:	4a04      	ldr	r2, [pc, #16]	@ (8026ce8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8026cd6:	f640 0167 	movw	r1, #2151	@ 0x867
 8026cda:	4804      	ldr	r0, [pc, #16]	@ (8026cec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 8026cdc:	f00b fc14 	bl	8032508 <__assert_func>
 8026ce0:	fffff800 	.word	0xfffff800
 8026ce4:	080363b4 	.word	0x080363b4
 8026ce8:	08037784 	.word	0x08037784
 8026cec:	080362f0 	.word	0x080362f0

08026cf0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026cf4:	4690      	mov	r8, r2
 8026cf6:	8812      	ldrh	r2, [r2, #0]
 8026cf8:	b093      	sub	sp, #76	@ 0x4c
 8026cfa:	461c      	mov	r4, r3
 8026cfc:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 8026d00:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026d02:	2a00      	cmp	r2, #0
 8026d04:	f040 80fb 	bne.w	8026efe <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8026d08:	4689      	mov	r9, r1
 8026d0a:	6820      	ldr	r0, [r4, #0]
 8026d0c:	6861      	ldr	r1, [r4, #4]
 8026d0e:	aa0e      	add	r2, sp, #56	@ 0x38
 8026d10:	c203      	stmia	r2!, {r0, r1}
 8026d12:	6818      	ldr	r0, [r3, #0]
 8026d14:	6859      	ldr	r1, [r3, #4]
 8026d16:	aa10      	add	r2, sp, #64	@ 0x40
 8026d18:	c203      	stmia	r2!, {r0, r1}
 8026d1a:	a80e      	add	r0, sp, #56	@ 0x38
 8026d1c:	f7e6 f818 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026d20:	4621      	mov	r1, r4
 8026d22:	a810      	add	r0, sp, #64	@ 0x40
 8026d24:	f7e6 f83c 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026d28:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8026d2c:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8026d30:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8026d34:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8026d38:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8026d3c:	4873      	ldr	r0, [pc, #460]	@ (8026f0c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026d3e:	fb11 4105 	smlabb	r1, r1, r5, r4
 8026d42:	4422      	add	r2, r4
 8026d44:	442b      	add	r3, r5
 8026d46:	6800      	ldr	r0, [r0, #0]
 8026d48:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8026d4c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8026d50:	6802      	ldr	r2, [r0, #0]
 8026d52:	4489      	add	r9, r1
 8026d54:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8026d58:	4c6d      	ldr	r4, [pc, #436]	@ (8026f10 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8026d5a:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8026d5e:	910a      	str	r1, [sp, #40]	@ 0x28
 8026d60:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 8026d64:	42a3      	cmp	r3, r4
 8026d66:	910c      	str	r1, [sp, #48]	@ 0x30
 8026d68:	f040 8096 	bne.w	8026e98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026d6c:	6841      	ldr	r1, [r0, #4]
 8026d6e:	4c69      	ldr	r4, [pc, #420]	@ (8026f14 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 8026d70:	680b      	ldr	r3, [r1, #0]
 8026d72:	699b      	ldr	r3, [r3, #24]
 8026d74:	42a3      	cmp	r3, r4
 8026d76:	f040 80b4 	bne.w	8026ee2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8026d7a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026d7c:	4798      	blx	r3
 8026d7e:	4b66      	ldr	r3, [pc, #408]	@ (8026f18 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026d80:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8026d84:	881b      	ldrh	r3, [r3, #0]
 8026d86:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8026d8a:	fb01 2303 	mla	r3, r1, r3, r2
 8026d8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d92:	4418      	add	r0, r3
 8026d94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026d96:	2b00      	cmp	r3, #0
 8026d98:	dd76      	ble.n	8026e88 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d9c:	2b00      	cmp	r3, #0
 8026d9e:	dd73      	ble.n	8026e88 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026da0:	2200      	movs	r2, #0
 8026da2:	2104      	movs	r1, #4
 8026da4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026da8:	920b      	str	r2, [sp, #44]	@ 0x2c
 8026daa:	930d      	str	r3, [sp, #52]	@ 0x34
 8026dac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026dae:	464e      	mov	r6, r9
 8026db0:	1cc5      	adds	r5, r0, #3
 8026db2:	eb09 0c03 	add.w	ip, r9, r3
 8026db6:	e039      	b.n	8026e2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026db8:	fb0a f303 	mul.w	r3, sl, r3
 8026dbc:	1c5a      	adds	r2, r3, #1
 8026dbe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026dc2:	121b      	asrs	r3, r3, #8
 8026dc4:	43df      	mvns	r7, r3
 8026dc6:	b29b      	uxth	r3, r3
 8026dc8:	fb1e f203 	smulbb	r2, lr, r3
 8026dcc:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 8026dd0:	b2ff      	uxtb	r7, r7
 8026dd2:	fb0e 2e07 	mla	lr, lr, r7, r2
 8026dd6:	fa1f fe8e 	uxth.w	lr, lr
 8026dda:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 8026dde:	f10e 0b01 	add.w	fp, lr, #1
 8026de2:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8026de6:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8026dea:	fb12 fb07 	smulbb	fp, r2, r7
 8026dee:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026df2:	7862      	ldrb	r2, [r4, #1]
 8026df4:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 8026df8:	fb02 b203 	mla	r2, r2, r3, fp
 8026dfc:	b292      	uxth	r2, r2
 8026dfe:	f102 0b01 	add.w	fp, r2, #1
 8026e02:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026e06:	1212      	asrs	r2, r2, #8
 8026e08:	fb1e f707 	smulbb	r7, lr, r7
 8026e0c:	f805 2c02 	strb.w	r2, [r5, #-2]
 8026e10:	78a2      	ldrb	r2, [r4, #2]
 8026e12:	fb02 7303 	mla	r3, r2, r3, r7
 8026e16:	b29b      	uxth	r3, r3
 8026e18:	1c5a      	adds	r2, r3, #1
 8026e1a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026e1e:	121b      	asrs	r3, r3, #8
 8026e20:	f805 3c01 	strb.w	r3, [r5, #-1]
 8026e24:	45b4      	cmp	ip, r6
 8026e26:	f105 0503 	add.w	r5, r5, #3
 8026e2a:	d01b      	beq.n	8026e64 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x174>
 8026e2c:	f816 2b01 	ldrb.w	r2, [r6], #1
 8026e30:	fb11 1202 	smlabb	r2, r1, r2, r1
 8026e34:	eb08 0402 	add.w	r4, r8, r2
 8026e38:	78e3      	ldrb	r3, [r4, #3]
 8026e3a:	2b00      	cmp	r3, #0
 8026e3c:	d0f2      	beq.n	8026e24 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 8026e3e:	2bff      	cmp	r3, #255	@ 0xff
 8026e40:	f818 e002 	ldrb.w	lr, [r8, r2]
 8026e44:	d1b8      	bne.n	8026db8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026e46:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8026e4a:	d1b5      	bne.n	8026db8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026e4c:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026e50:	7863      	ldrb	r3, [r4, #1]
 8026e52:	45b4      	cmp	ip, r6
 8026e54:	f805 3c02 	strb.w	r3, [r5, #-2]
 8026e58:	78a3      	ldrb	r3, [r4, #2]
 8026e5a:	f105 0503 	add.w	r5, r5, #3
 8026e5e:	f805 3c04 	strb.w	r3, [r5, #-4]
 8026e62:	d1e3      	bne.n	8026e2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026e64:	4b2c      	ldr	r3, [pc, #176]	@ (8026f18 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026e66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026e68:	881b      	ldrh	r3, [r3, #0]
 8026e6a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026e6c:	1a9b      	subs	r3, r3, r2
 8026e6e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026e72:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8026e74:	442b      	add	r3, r5
 8026e76:	4418      	add	r0, r3
 8026e78:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026e7a:	3401      	adds	r4, #1
 8026e7c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026e80:	42a3      	cmp	r3, r4
 8026e82:	940b      	str	r4, [sp, #44]	@ 0x2c
 8026e84:	4491      	add	r9, r2
 8026e86:	d191      	bne.n	8026dac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8026e88:	4b20      	ldr	r3, [pc, #128]	@ (8026f0c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026e8a:	6818      	ldr	r0, [r3, #0]
 8026e8c:	6803      	ldr	r3, [r0, #0]
 8026e8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026e90:	4798      	blx	r3
 8026e92:	b013      	add	sp, #76	@ 0x4c
 8026e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e98:	4798      	blx	r3
 8026e9a:	4602      	mov	r2, r0
 8026e9c:	2a01      	cmp	r2, #1
 8026e9e:	d124      	bne.n	8026eea <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8026ea0:	4b1e      	ldr	r3, [pc, #120]	@ (8026f1c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 8026ea2:	6818      	ldr	r0, [r3, #0]
 8026ea4:	b328      	cbz	r0, 8026ef2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8026ea6:	260b      	movs	r6, #11
 8026ea8:	4b1b      	ldr	r3, [pc, #108]	@ (8026f18 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026eaa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8026eae:	881f      	ldrh	r7, [r3, #0]
 8026eb0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8026eb4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026eb8:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026ebc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8026ec0:	9208      	str	r2, [sp, #32]
 8026ec2:	9205      	str	r2, [sp, #20]
 8026ec4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026ec8:	f8cd a010 	str.w	sl, [sp, #16]
 8026ecc:	4642      	mov	r2, r8
 8026ece:	4649      	mov	r1, r9
 8026ed0:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8026ed4:	9503      	str	r5, [sp, #12]
 8026ed6:	9400      	str	r4, [sp, #0]
 8026ed8:	f7f9 feae 	bl	8020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026edc:	b013      	add	sp, #76	@ 0x4c
 8026ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026ee2:	4608      	mov	r0, r1
 8026ee4:	4798      	blx	r3
 8026ee6:	4602      	mov	r2, r0
 8026ee8:	e7d8      	b.n	8026e9c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8026eea:	4b08      	ldr	r3, [pc, #32]	@ (8026f0c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026eec:	6818      	ldr	r0, [r3, #0]
 8026eee:	6802      	ldr	r2, [r0, #0]
 8026ef0:	e743      	b.n	8026d7a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8026ef2:	4b0b      	ldr	r3, [pc, #44]	@ (8026f20 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 8026ef4:	4a0b      	ldr	r2, [pc, #44]	@ (8026f24 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8026ef6:	217c      	movs	r1, #124	@ 0x7c
 8026ef8:	480b      	ldr	r0, [pc, #44]	@ (8026f28 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8026efa:	f00b fb05 	bl	8032508 <__assert_func>
 8026efe:	4b0b      	ldr	r3, [pc, #44]	@ (8026f2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8026f00:	4a0b      	ldr	r2, [pc, #44]	@ (8026f30 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8026f02:	f640 1155 	movw	r1, #2389	@ 0x955
 8026f06:	480b      	ldr	r0, [pc, #44]	@ (8026f34 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8026f08:	f00b fafe 	bl	8032508 <__assert_func>
 8026f0c:	20082f08 	.word	0x20082f08
 8026f10:	0800121d 	.word	0x0800121d
 8026f14:	0800baf5 	.word	0x0800baf5
 8026f18:	20082f02 	.word	0x20082f02
 8026f1c:	200833a8 	.word	0x200833a8
 8026f20:	0803624c 	.word	0x0803624c
 8026f24:	08036ab8 	.word	0x08036ab8
 8026f28:	08036274 	.word	0x08036274
 8026f2c:	08036364 	.word	0x08036364
 8026f30:	08037174 	.word	0x08037174
 8026f34:	080362f0 	.word	0x080362f0

08026f38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f3c:	4614      	mov	r4, r2
 8026f3e:	7812      	ldrb	r2, [r2, #0]
 8026f40:	b08d      	sub	sp, #52	@ 0x34
 8026f42:	461e      	mov	r6, r3
 8026f44:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 8026f48:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026f4a:	2a00      	cmp	r2, #0
 8026f4c:	f040 81e0 	bne.w	8027310 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8026f50:	6830      	ldr	r0, [r6, #0]
 8026f52:	460d      	mov	r5, r1
 8026f54:	6871      	ldr	r1, [r6, #4]
 8026f56:	aa08      	add	r2, sp, #32
 8026f58:	c203      	stmia	r2!, {r0, r1}
 8026f5a:	6818      	ldr	r0, [r3, #0]
 8026f5c:	6859      	ldr	r1, [r3, #4]
 8026f5e:	aa0a      	add	r2, sp, #40	@ 0x28
 8026f60:	c203      	stmia	r2!, {r0, r1}
 8026f62:	a808      	add	r0, sp, #32
 8026f64:	f7e5 fef4 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f68:	4631      	mov	r1, r6
 8026f6a:	a80a      	add	r0, sp, #40	@ 0x28
 8026f6c:	f7e5 ff18 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f70:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026f74:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026f78:	f003 0201 	and.w	r2, r3, #1
 8026f7c:	4617      	mov	r7, r2
 8026f7e:	9204      	str	r2, [sp, #16]
 8026f80:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026f84:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026f88:	443b      	add	r3, r7
 8026f8a:	fb02 1303 	mla	r3, r2, r3, r1
 8026f8e:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 8026f92:	4402      	add	r2, r0
 8026f94:	48d6      	ldr	r0, [pc, #856]	@ (80272f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8026f96:	440e      	add	r6, r1
 8026f98:	6800      	ldr	r0, [r0, #0]
 8026f9a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8026f9e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026fa2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026fa6:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8026faa:	6802      	ldr	r2, [r0, #0]
 8026fac:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 8026fb0:	9301      	str	r3, [sp, #4]
 8026fb2:	f001 0301 	and.w	r3, r1, #1
 8026fb6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026fb8:	9305      	str	r3, [sp, #20]
 8026fba:	9703      	str	r7, [sp, #12]
 8026fbc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8026fc0:	4790      	blx	r2
 8026fc2:	4acc      	ldr	r2, [pc, #816]	@ (80272f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8026fc4:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8026fc8:	8811      	ldrh	r1, [r2, #0]
 8026fca:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8026fce:	fb05 f201 	mul.w	r2, r5, r1
 8026fd2:	fb01 6303 	mla	r3, r1, r3, r6
 8026fd6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026fda:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026fde:	4418      	add	r0, r3
 8026fe0:	1883      	adds	r3, r0, r2
 8026fe2:	4298      	cmp	r0, r3
 8026fe4:	9306      	str	r3, [sp, #24]
 8026fe6:	f104 0204 	add.w	r2, r4, #4
 8026fea:	f080 80f1 	bcs.w	80271d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026fee:	1e7b      	subs	r3, r7, #1
 8026ff0:	4647      	mov	r7, r8
 8026ff2:	9307      	str	r3, [sp, #28]
 8026ff4:	9b05      	ldr	r3, [sp, #20]
 8026ff6:	2b00      	cmp	r3, #0
 8026ff8:	f000 8106 	beq.w	8027208 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 8026ffc:	9901      	ldr	r1, [sp, #4]
 8026ffe:	780b      	ldrb	r3, [r1, #0]
 8027000:	1c4d      	adds	r5, r1, #1
 8027002:	f003 030f 	and.w	r3, r3, #15
 8027006:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802700a:	0e19      	lsrs	r1, r3, #24
 802700c:	f040 8136 	bne.w	802727c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x344>
 8027010:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8027014:	3003      	adds	r0, #3
 8027016:	f1bc 0f01 	cmp.w	ip, #1
 802701a:	f340 80ba 	ble.w	8027192 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 802701e:	f1ac 0302 	sub.w	r3, ip, #2
 8027022:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027026:	f10c 0e01 	add.w	lr, ip, #1
 802702a:	9302      	str	r3, [sp, #8]
 802702c:	eb05 060e 	add.w	r6, r5, lr
 8027030:	1d84      	adds	r4, r0, #6
 8027032:	e00b      	b.n	802704c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027034:	f003 030f 	and.w	r3, r3, #15
 8027038:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802703c:	3501      	adds	r5, #1
 802703e:	0e19      	lsrs	r1, r3, #24
 8027040:	d155      	bne.n	80270ee <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8027042:	42b5      	cmp	r5, r6
 8027044:	f104 0406 	add.w	r4, r4, #6
 8027048:	f000 809a 	beq.w	8027180 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>
 802704c:	782b      	ldrb	r3, [r5, #0]
 802704e:	0919      	lsrs	r1, r3, #4
 8027050:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8027054:	ea5f 6811 	movs.w	r8, r1, lsr #24
 8027058:	d0ec      	beq.n	8027034 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 802705a:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 802705e:	f3c1 4907 	ubfx	r9, r1, #16, #8
 8027062:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027066:	fa5f f38a 	uxtb.w	r3, sl
 802706a:	b2c9      	uxtb	r1, r1
 802706c:	fa5f fb89 	uxtb.w	fp, r9
 8027070:	f000 80bf 	beq.w	80271f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ba>
 8027074:	fb08 f807 	mul.w	r8, r8, r7
 8027078:	f108 0901 	add.w	r9, r8, #1
 802707c:	eb09 2828 	add.w	r8, r9, r8, asr #8
 8027080:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027084:	ea6f 0908 	mvn.w	r9, r8
 8027088:	fa1f f888 	uxth.w	r8, r8
 802708c:	fb11 f108 	smulbb	r1, r1, r8
 8027090:	fb13 f308 	smulbb	r3, r3, r8
 8027094:	fb1b f808 	smulbb	r8, fp, r8
 8027098:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 802709c:	fa5f f989 	uxtb.w	r9, r9
 80270a0:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 80270a4:	fb0b 1109 	mla	r1, fp, r9, r1
 80270a8:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 80270ac:	fb0a 3309 	mla	r3, sl, r9, r3
 80270b0:	fb0b 8809 	mla	r8, fp, r9, r8
 80270b4:	b289      	uxth	r1, r1
 80270b6:	fa1f fa83 	uxth.w	sl, r3
 80270ba:	fa1f f888 	uxth.w	r8, r8
 80270be:	f101 0b01 	add.w	fp, r1, #1
 80270c2:	f10a 0301 	add.w	r3, sl, #1
 80270c6:	f108 0901 	add.w	r9, r8, #1
 80270ca:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80270ce:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80270d2:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 80270d6:	121b      	asrs	r3, r3, #8
 80270d8:	1209      	asrs	r1, r1, #8
 80270da:	ea4f 2828 	mov.w	r8, r8, asr #8
 80270de:	f804 1c06 	strb.w	r1, [r4, #-6]
 80270e2:	f804 3c05 	strb.w	r3, [r4, #-5]
 80270e6:	f804 8c04 	strb.w	r8, [r4, #-4]
 80270ea:	782b      	ldrb	r3, [r5, #0]
 80270ec:	e7a2      	b.n	8027034 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 80270ee:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 80270f2:	f3c3 4907 	ubfx	r9, r3, #16, #8
 80270f6:	29ff      	cmp	r1, #255	@ 0xff
 80270f8:	fa5f f88a 	uxtb.w	r8, sl
 80270fc:	b2db      	uxtb	r3, r3
 80270fe:	fa5f fb89 	uxtb.w	fp, r9
 8027102:	d06d      	beq.n	80271e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8027104:	fb01 f107 	mul.w	r1, r1, r7
 8027108:	f101 0901 	add.w	r9, r1, #1
 802710c:	eb09 2121 	add.w	r1, r9, r1, asr #8
 8027110:	1209      	asrs	r1, r1, #8
 8027112:	ea6f 0901 	mvn.w	r9, r1
 8027116:	b289      	uxth	r1, r1
 8027118:	fb13 f301 	smulbb	r3, r3, r1
 802711c:	fb18 f801 	smulbb	r8, r8, r1
 8027120:	fb1b f101 	smulbb	r1, fp, r1
 8027124:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 8027128:	fa5f f989 	uxtb.w	r9, r9
 802712c:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 8027130:	fb0b 3309 	mla	r3, fp, r9, r3
 8027134:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 8027138:	fb0a 8809 	mla	r8, sl, r9, r8
 802713c:	fb0b 1109 	mla	r1, fp, r9, r1
 8027140:	fa1f fa88 	uxth.w	sl, r8
 8027144:	fa1f fb83 	uxth.w	fp, r3
 8027148:	b289      	uxth	r1, r1
 802714a:	f10b 0801 	add.w	r8, fp, #1
 802714e:	f10a 0301 	add.w	r3, sl, #1
 8027152:	f101 0901 	add.w	r9, r1, #1
 8027156:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 802715a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 802715e:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8027162:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 8027166:	121b      	asrs	r3, r3, #8
 8027168:	1209      	asrs	r1, r1, #8
 802716a:	42b5      	cmp	r5, r6
 802716c:	f804 bc03 	strb.w	fp, [r4, #-3]
 8027170:	f804 3c02 	strb.w	r3, [r4, #-2]
 8027174:	f804 1c01 	strb.w	r1, [r4, #-1]
 8027178:	f104 0406 	add.w	r4, r4, #6
 802717c:	f47f af66 	bne.w	802704c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027180:	9b02      	ldr	r3, [sp, #8]
 8027182:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8027186:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802718a:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 802718e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027192:	f1bc 0f01 	cmp.w	ip, #1
 8027196:	d106      	bne.n	80271a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8027198:	782b      	ldrb	r3, [r5, #0]
 802719a:	091b      	lsrs	r3, r3, #4
 802719c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80271a0:	0e19      	lsrs	r1, r3, #24
 80271a2:	d135      	bne.n	8027210 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 80271a4:	3003      	adds	r0, #3
 80271a6:	4b53      	ldr	r3, [pc, #332]	@ (80272f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 80271a8:	9c03      	ldr	r4, [sp, #12]
 80271aa:	8819      	ldrh	r1, [r3, #0]
 80271ac:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80271b0:	1b09      	subs	r1, r1, r4
 80271b2:	9c04      	ldr	r4, [sp, #16]
 80271b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80271b8:	4408      	add	r0, r1
 80271ba:	4423      	add	r3, r4
 80271bc:	9901      	ldr	r1, [sp, #4]
 80271be:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80271c2:	eb01 0363 	add.w	r3, r1, r3, asr #1
 80271c6:	9301      	str	r3, [sp, #4]
 80271c8:	9b06      	ldr	r3, [sp, #24]
 80271ca:	4283      	cmp	r3, r0
 80271cc:	f63f af12 	bhi.w	8026ff4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 80271d0:	4b47      	ldr	r3, [pc, #284]	@ (80272f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 80271d2:	6818      	ldr	r0, [r3, #0]
 80271d4:	6803      	ldr	r3, [r0, #0]
 80271d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80271d8:	4798      	blx	r3
 80271da:	b00d      	add	sp, #52	@ 0x34
 80271dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271e0:	2fff      	cmp	r7, #255	@ 0xff
 80271e2:	d18f      	bne.n	8027104 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 80271e4:	f804 3c03 	strb.w	r3, [r4, #-3]
 80271e8:	f804 ac02 	strb.w	sl, [r4, #-2]
 80271ec:	f804 9c01 	strb.w	r9, [r4, #-1]
 80271f0:	e727      	b.n	8027042 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 80271f2:	2fff      	cmp	r7, #255	@ 0xff
 80271f4:	f47f af3e 	bne.w	8027074 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80271f8:	f804 1c06 	strb.w	r1, [r4, #-6]
 80271fc:	f804 ac05 	strb.w	sl, [r4, #-5]
 8027200:	f804 9c04 	strb.w	r9, [r4, #-4]
 8027204:	782b      	ldrb	r3, [r5, #0]
 8027206:	e715      	b.n	8027034 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 8027208:	9d01      	ldr	r5, [sp, #4]
 802720a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 802720e:	e702      	b.n	8027016 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8027210:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8027214:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027218:	29ff      	cmp	r1, #255	@ 0xff
 802721a:	fa5f fc85 	uxtb.w	ip, r5
 802721e:	b2db      	uxtb	r3, r3
 8027220:	b2e6      	uxtb	r6, r4
 8027222:	d069      	beq.n	80272f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027224:	fb01 f107 	mul.w	r1, r1, r7
 8027228:	1c4c      	adds	r4, r1, #1
 802722a:	eb04 2121 	add.w	r1, r4, r1, asr #8
 802722e:	120c      	asrs	r4, r1, #8
 8027230:	43e1      	mvns	r1, r4
 8027232:	b2a4      	uxth	r4, r4
 8027234:	fb13 f304 	smulbb	r3, r3, r4
 8027238:	fb1c fc04 	smulbb	ip, ip, r4
 802723c:	fb16 f404 	smulbb	r4, r6, r4
 8027240:	7806      	ldrb	r6, [r0, #0]
 8027242:	b2c9      	uxtb	r1, r1
 8027244:	fb06 3301 	mla	r3, r6, r1, r3
 8027248:	7845      	ldrb	r5, [r0, #1]
 802724a:	7886      	ldrb	r6, [r0, #2]
 802724c:	fb05 c501 	mla	r5, r5, r1, ip
 8027250:	fb06 4401 	mla	r4, r6, r1, r4
 8027254:	b29b      	uxth	r3, r3
 8027256:	b2ad      	uxth	r5, r5
 8027258:	b2a4      	uxth	r4, r4
 802725a:	1c5e      	adds	r6, r3, #1
 802725c:	f105 0c01 	add.w	ip, r5, #1
 8027260:	1c61      	adds	r1, r4, #1
 8027262:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8027266:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802726a:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 802726e:	121b      	asrs	r3, r3, #8
 8027270:	122d      	asrs	r5, r5, #8
 8027272:	1209      	asrs	r1, r1, #8
 8027274:	7003      	strb	r3, [r0, #0]
 8027276:	7045      	strb	r5, [r0, #1]
 8027278:	7081      	strb	r1, [r0, #2]
 802727a:	e793      	b.n	80271a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 802727c:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8027280:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027284:	29ff      	cmp	r1, #255	@ 0xff
 8027286:	fa5f fe86 	uxtb.w	lr, r6
 802728a:	b2db      	uxtb	r3, r3
 802728c:	fa5f fc84 	uxtb.w	ip, r4
 8027290:	d038      	beq.n	8027304 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 8027292:	fb01 f107 	mul.w	r1, r1, r7
 8027296:	1c4c      	adds	r4, r1, #1
 8027298:	eb04 2421 	add.w	r4, r4, r1, asr #8
 802729c:	1224      	asrs	r4, r4, #8
 802729e:	43e1      	mvns	r1, r4
 80272a0:	b2a4      	uxth	r4, r4
 80272a2:	fb13 f304 	smulbb	r3, r3, r4
 80272a6:	fb1e fe04 	smulbb	lr, lr, r4
 80272aa:	fb1c f404 	smulbb	r4, ip, r4
 80272ae:	f890 c000 	ldrb.w	ip, [r0]
 80272b2:	b2c9      	uxtb	r1, r1
 80272b4:	fb0c 3301 	mla	r3, ip, r1, r3
 80272b8:	7846      	ldrb	r6, [r0, #1]
 80272ba:	f890 c002 	ldrb.w	ip, [r0, #2]
 80272be:	fb06 e601 	mla	r6, r6, r1, lr
 80272c2:	fb0c 4401 	mla	r4, ip, r1, r4
 80272c6:	b29b      	uxth	r3, r3
 80272c8:	b2b6      	uxth	r6, r6
 80272ca:	b2a4      	uxth	r4, r4
 80272cc:	f103 0c01 	add.w	ip, r3, #1
 80272d0:	f106 0e01 	add.w	lr, r6, #1
 80272d4:	1c61      	adds	r1, r4, #1
 80272d6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80272da:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80272de:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 80272e2:	121b      	asrs	r3, r3, #8
 80272e4:	1236      	asrs	r6, r6, #8
 80272e6:	1209      	asrs	r1, r1, #8
 80272e8:	7003      	strb	r3, [r0, #0]
 80272ea:	7046      	strb	r6, [r0, #1]
 80272ec:	7081      	strb	r1, [r0, #2]
 80272ee:	e68f      	b.n	8027010 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 80272f0:	20082f08 	.word	0x20082f08
 80272f4:	20082f02 	.word	0x20082f02
 80272f8:	2fff      	cmp	r7, #255	@ 0xff
 80272fa:	d193      	bne.n	8027224 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 80272fc:	7003      	strb	r3, [r0, #0]
 80272fe:	7045      	strb	r5, [r0, #1]
 8027300:	7084      	strb	r4, [r0, #2]
 8027302:	e74f      	b.n	80271a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8027304:	2fff      	cmp	r7, #255	@ 0xff
 8027306:	d1c4      	bne.n	8027292 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35a>
 8027308:	7003      	strb	r3, [r0, #0]
 802730a:	7046      	strb	r6, [r0, #1]
 802730c:	7084      	strb	r4, [r0, #2]
 802730e:	e67f      	b.n	8027010 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 8027310:	4b03      	ldr	r3, [pc, #12]	@ (8027320 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e8>)
 8027312:	4a04      	ldr	r2, [pc, #16]	@ (8027324 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ec>)
 8027314:	f640 11b5 	movw	r1, #2485	@ 0x9b5
 8027318:	4803      	ldr	r0, [pc, #12]	@ (8027328 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f0>)
 802731a:	f00b f8f5 	bl	8032508 <__assert_func>
 802731e:	bf00      	nop
 8027320:	080363e4 	.word	0x080363e4
 8027324:	08037664 	.word	0x08037664
 8027328:	080362f0 	.word	0x080362f0

0802732c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802732c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027330:	b091      	sub	sp, #68	@ 0x44
 8027332:	9208      	str	r2, [sp, #32]
 8027334:	9100      	str	r1, [sp, #0]
 8027336:	7812      	ldrb	r2, [r2, #0]
 8027338:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 802733c:	461c      	mov	r4, r3
 802733e:	9106      	str	r1, [sp, #24]
 8027340:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8027342:	2a00      	cmp	r2, #0
 8027344:	f040 8211 	bne.w	802776a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 8027348:	6820      	ldr	r0, [r4, #0]
 802734a:	6861      	ldr	r1, [r4, #4]
 802734c:	aa0c      	add	r2, sp, #48	@ 0x30
 802734e:	c203      	stmia	r2!, {r0, r1}
 8027350:	6818      	ldr	r0, [r3, #0]
 8027352:	6859      	ldr	r1, [r3, #4]
 8027354:	aa0e      	add	r2, sp, #56	@ 0x38
 8027356:	c203      	stmia	r2!, {r0, r1}
 8027358:	a80c      	add	r0, sp, #48	@ 0x30
 802735a:	f7e5 fcf9 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802735e:	4621      	mov	r1, r4
 8027360:	a80e      	add	r0, sp, #56	@ 0x38
 8027362:	f7e5 fd1d 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027366:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802736a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802736e:	f340 815b 	ble.w	8027628 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>
 8027372:	2201      	movs	r2, #1
 8027374:	b299      	uxth	r1, r3
 8027376:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 802737a:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 802737e:	fb93 f5f2 	sdiv	r5, r3, r2
 8027382:	b2ae      	uxth	r6, r5
 8027384:	fb02 3416 	mls	r4, r2, r6, r3
 8027388:	fb14 0101 	smlabb	r1, r4, r1, r0
 802738c:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8027390:	fa1f f881 	uxth.w	r8, r1
 8027394:	4414      	add	r4, r2
 8027396:	3c01      	subs	r4, #1
 8027398:	fb94 f4f2 	sdiv	r4, r4, r2
 802739c:	b136      	cbz	r6, 80273ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x80>
 802739e:	9a08      	ldr	r2, [sp, #32]
 80273a0:	9900      	ldr	r1, [sp, #0]
 80273a2:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80273a6:	ba12      	rev	r2, r2
 80273a8:	4411      	add	r1, r2
 80273aa:	9100      	str	r1, [sp, #0]
 80273ac:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80273b0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80273b4:	4402      	add	r2, r0
 80273b6:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80273ba:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80273be:	440b      	add	r3, r1
 80273c0:	4616      	mov	r6, r2
 80273c2:	499c      	ldr	r1, [pc, #624]	@ (8027634 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 80273c4:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80273c8:	6808      	ldr	r0, [r1, #0]
 80273ca:	9205      	str	r2, [sp, #20]
 80273cc:	6803      	ldr	r3, [r0, #0]
 80273ce:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80273d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80273d4:	4798      	blx	r3
 80273d6:	f1b8 0f00 	cmp.w	r8, #0
 80273da:	bf0c      	ite	eq
 80273dc:	4633      	moveq	r3, r6
 80273de:	2300      	movne	r3, #0
 80273e0:	4995      	ldr	r1, [pc, #596]	@ (8027638 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 80273e2:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 80273e6:	8809      	ldrh	r1, [r1, #0]
 80273e8:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80273ec:	fb05 f501 	mul.w	r5, r5, r1
 80273f0:	fb01 6202 	mla	r2, r1, r2, r6
 80273f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80273f8:	4410      	add	r0, r2
 80273fa:	b2a4      	uxth	r4, r4
 80273fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027400:	1942      	adds	r2, r0, r5
 8027402:	00a4      	lsls	r4, r4, #2
 8027404:	1d21      	adds	r1, r4, #4
 8027406:	4290      	cmp	r0, r2
 8027408:	9201      	str	r2, [sp, #4]
 802740a:	9109      	str	r1, [sp, #36]	@ 0x24
 802740c:	b29f      	uxth	r7, r3
 802740e:	d21a      	bcs.n	8027446 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8027410:	2300      	movs	r3, #0
 8027412:	4641      	mov	r1, r8
 8027414:	9302      	str	r3, [sp, #8]
 8027416:	b963      	cbnz	r3, 8027432 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027418:	9d00      	ldr	r5, [sp, #0]
 802741a:	782a      	ldrb	r2, [r5, #0]
 802741c:	0993      	lsrs	r3, r2, #6
 802741e:	1e5c      	subs	r4, r3, #1
 8027420:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8027424:	2c02      	cmp	r4, #2
 8027426:	9202      	str	r2, [sp, #8]
 8027428:	f200 8099 	bhi.w	802755e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x232>
 802742c:	3501      	adds	r5, #1
 802742e:	9500      	str	r5, [sp, #0]
 8027430:	b29b      	uxth	r3, r3
 8027432:	b181      	cbz	r1, 8027456 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8027434:	428b      	cmp	r3, r1
 8027436:	f080 808c 	bcs.w	8027552 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 802743a:	1acb      	subs	r3, r1, r3
 802743c:	b299      	uxth	r1, r3
 802743e:	2300      	movs	r3, #0
 8027440:	9a01      	ldr	r2, [sp, #4]
 8027442:	4290      	cmp	r0, r2
 8027444:	d3e7      	bcc.n	8027416 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xea>
 8027446:	4b7b      	ldr	r3, [pc, #492]	@ (8027634 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027448:	6818      	ldr	r0, [r3, #0]
 802744a:	6803      	ldr	r3, [r0, #0]
 802744c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802744e:	4798      	blx	r3
 8027450:	b011      	add	sp, #68	@ 0x44
 8027452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027456:	2204      	movs	r2, #4
 8027458:	4615      	mov	r5, r2
 802745a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802745c:	9a02      	ldr	r2, [sp, #8]
 802745e:	42bb      	cmp	r3, r7
 8027460:	fb15 4202 	smlabb	r2, r5, r2, r4
 8027464:	9c08      	ldr	r4, [sp, #32]
 8027466:	58a5      	ldr	r5, [r4, r2]
 8027468:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802746c:	f0c0 808d 	bcc.w	802758a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 8027470:	1bda      	subs	r2, r3, r7
 8027472:	b292      	uxth	r2, r2
 8027474:	9203      	str	r2, [sp, #12]
 8027476:	2f00      	cmp	r7, #0
 8027478:	d076      	beq.n	8027568 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802747a:	9704      	str	r7, [sp, #16]
 802747c:	9107      	str	r1, [sp, #28]
 802747e:	9a06      	ldr	r2, [sp, #24]
 8027480:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8027484:	fb02 f408 	mul.w	r4, r2, r8
 8027488:	1c62      	adds	r2, r4, #1
 802748a:	eb02 2224 	add.w	r2, r2, r4, asr #8
 802748e:	1212      	asrs	r2, r2, #8
 8027490:	43d4      	mvns	r4, r2
 8027492:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8027496:	b292      	uxth	r2, r2
 8027498:	b2ed      	uxtb	r5, r5
 802749a:	fa5f f98b 	uxtb.w	r9, fp
 802749e:	fa5f fa86 	uxtb.w	sl, r6
 80274a2:	fb15 fc02 	smulbb	ip, r5, r2
 80274a6:	fb19 fe02 	smulbb	lr, r9, r2
 80274aa:	fb1a f202 	smulbb	r2, sl, r2
 80274ae:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 80274b2:	b2e4      	uxtb	r4, r4
 80274b4:	fa1f fc8c 	uxth.w	ip, ip
 80274b8:	fa1f fe8e 	uxth.w	lr, lr
 80274bc:	b292      	uxth	r2, r2
 80274be:	f1b8 0f00 	cmp.w	r8, #0
 80274c2:	d06b      	beq.n	802759c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x270>
 80274c4:	9e06      	ldr	r6, [sp, #24]
 80274c6:	2eff      	cmp	r6, #255	@ 0xff
 80274c8:	d070      	beq.n	80275ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x280>
 80274ca:	9d04      	ldr	r5, [sp, #16]
 80274cc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80274d0:	f105 36ff 	add.w	r6, r5, #4294967295
 80274d4:	b2b5      	uxth	r5, r6
 80274d6:	9504      	str	r5, [sp, #16]
 80274d8:	f000 810e 	beq.w	80276f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 80274dc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80274e0:	f100 0a06 	add.w	sl, r0, #6
 80274e4:	44aa      	add	sl, r5
 80274e6:	f100 0903 	add.w	r9, r0, #3
 80274ea:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 80274ee:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80274f2:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 80274f6:	fb08 c804 	mla	r8, r8, r4, ip
 80274fa:	fb06 e604 	mla	r6, r6, r4, lr
 80274fe:	fb05 2504 	mla	r5, r5, r4, r2
 8027502:	fa1f f888 	uxth.w	r8, r8
 8027506:	b2b6      	uxth	r6, r6
 8027508:	f108 0b01 	add.w	fp, r8, #1
 802750c:	b2ad      	uxth	r5, r5
 802750e:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8027512:	f106 0b01 	add.w	fp, r6, #1
 8027516:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 802751a:	f105 0b01 	add.w	fp, r5, #1
 802751e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027522:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027526:	1236      	asrs	r6, r6, #8
 8027528:	122d      	asrs	r5, r5, #8
 802752a:	f809 8c03 	strb.w	r8, [r9, #-3]
 802752e:	f809 6c02 	strb.w	r6, [r9, #-2]
 8027532:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027536:	f109 0903 	add.w	r9, r9, #3
 802753a:	45ca      	cmp	sl, r9
 802753c:	d1d5      	bne.n	80274ea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 802753e:	9e04      	ldr	r6, [sp, #16]
 8027540:	3601      	adds	r6, #1
 8027542:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8027546:	4430      	add	r0, r6
 8027548:	42bb      	cmp	r3, r7
 802754a:	d20d      	bcs.n	8027568 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802754c:	9b03      	ldr	r3, [sp, #12]
 802754e:	9f07      	ldr	r7, [sp, #28]
 8027550:	e776      	b.n	8027440 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027552:	1a5b      	subs	r3, r3, r1
 8027554:	b29b      	uxth	r3, r3
 8027556:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 802755a:	2100      	movs	r1, #0
 802755c:	e770      	b.n	8027440 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802755e:	462a      	mov	r2, r5
 8027560:	3202      	adds	r2, #2
 8027562:	786b      	ldrb	r3, [r5, #1]
 8027564:	9200      	str	r2, [sp, #0]
 8027566:	e764      	b.n	8027432 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027568:	9c05      	ldr	r4, [sp, #20]
 802756a:	4b33      	ldr	r3, [pc, #204]	@ (8027638 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 802756c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8027570:	b2a7      	uxth	r7, r4
 8027572:	881a      	ldrh	r2, [r3, #0]
 8027574:	1bc9      	subs	r1, r1, r7
 8027576:	b289      	uxth	r1, r1
 8027578:	1b12      	subs	r2, r2, r4
 802757a:	2900      	cmp	r1, #0
 802757c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027580:	9b03      	ldr	r3, [sp, #12]
 8027582:	bf18      	it	ne
 8027584:	2700      	movne	r7, #0
 8027586:	4410      	add	r0, r2
 8027588:	e75a      	b.n	8027440 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802758a:	1afa      	subs	r2, r7, r3
 802758c:	b292      	uxth	r2, r2
 802758e:	9207      	str	r2, [sp, #28]
 8027590:	2b00      	cmp	r3, #0
 8027592:	f000 80f1 	beq.w	8027778 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8027596:	e9cd 1303 	strd	r1, r3, [sp, #12]
 802759a:	e770      	b.n	802747e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802759c:	9a04      	ldr	r2, [sp, #16]
 802759e:	3a01      	subs	r2, #1
 80275a0:	b292      	uxth	r2, r2
 80275a2:	3201      	adds	r2, #1
 80275a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80275a8:	4410      	add	r0, r2
 80275aa:	e7cd      	b.n	8027548 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80275ac:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80275b0:	d044      	beq.n	802763c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x310>
 80275b2:	9d04      	ldr	r5, [sp, #16]
 80275b4:	f100 0a06 	add.w	sl, r0, #6
 80275b8:	1e6e      	subs	r6, r5, #1
 80275ba:	b2b5      	uxth	r5, r6
 80275bc:	9504      	str	r5, [sp, #16]
 80275be:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80275c2:	44aa      	add	sl, r5
 80275c4:	f100 0903 	add.w	r9, r0, #3
 80275c8:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 80275cc:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80275d0:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 80275d4:	fb08 c804 	mla	r8, r8, r4, ip
 80275d8:	fb06 e604 	mla	r6, r6, r4, lr
 80275dc:	fb05 2504 	mla	r5, r5, r4, r2
 80275e0:	fa1f f888 	uxth.w	r8, r8
 80275e4:	b2b6      	uxth	r6, r6
 80275e6:	f108 0b01 	add.w	fp, r8, #1
 80275ea:	b2ad      	uxth	r5, r5
 80275ec:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80275f0:	f106 0b01 	add.w	fp, r6, #1
 80275f4:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80275f8:	f105 0b01 	add.w	fp, r5, #1
 80275fc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027600:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027604:	1236      	asrs	r6, r6, #8
 8027606:	122d      	asrs	r5, r5, #8
 8027608:	f809 8c03 	strb.w	r8, [r9, #-3]
 802760c:	f809 6c02 	strb.w	r6, [r9, #-2]
 8027610:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027614:	f109 0903 	add.w	r9, r9, #3
 8027618:	45ca      	cmp	sl, r9
 802761a:	d1d5      	bne.n	80275c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>
 802761c:	9a04      	ldr	r2, [sp, #16]
 802761e:	3201      	adds	r2, #1
 8027620:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027624:	4410      	add	r0, r2
 8027626:	e78f      	b.n	8027548 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027628:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802762c:	b299      	uxth	r1, r3
 802762e:	fb94 f2f1 	sdiv	r2, r4, r1
 8027632:	e6a0      	b.n	8027376 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 8027634:	20082f08 	.word	0x20082f08
 8027638:	20082f02 	.word	0x20082f02
 802763c:	9e04      	ldr	r6, [sp, #16]
 802763e:	1e72      	subs	r2, r6, #1
 8027640:	b292      	uxth	r2, r2
 8027642:	2a02      	cmp	r2, #2
 8027644:	920b      	str	r2, [sp, #44]	@ 0x2c
 8027646:	f240 808d 	bls.w	8027764 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 802764a:	f04f 0800 	mov.w	r8, #0
 802764e:	46c6      	mov	lr, r8
 8027650:	46c4      	mov	ip, r8
 8027652:	4602      	mov	r2, r0
 8027654:	4644      	mov	r4, r8
 8027656:	f369 0e07 	bfi	lr, r9, #0, #8
 802765a:	f36a 0807 	bfi	r8, sl, #0, #8
 802765e:	f365 0c07 	bfi	ip, r5, #0, #8
 8027662:	f36a 2e0f 	bfi	lr, sl, #8, #8
 8027666:	f365 280f 	bfi	r8, r5, #8, #8
 802766a:	f369 2c0f 	bfi	ip, r9, #8, #8
 802766e:	f36a 4c17 	bfi	ip, sl, #16, #8
 8027672:	f369 4817 	bfi	r8, r9, #16, #8
 8027676:	f365 4e17 	bfi	lr, r5, #16, #8
 802767a:	f36a 681f 	bfi	r8, sl, #24, #8
 802767e:	9004      	str	r0, [sp, #16]
 8027680:	f369 6e1f 	bfi	lr, r9, #24, #8
 8027684:	f365 6c1f 	bfi	ip, r5, #24, #8
 8027688:	f3c6 0a8f 	ubfx	sl, r6, #2, #16
 802768c:	3401      	adds	r4, #1
 802768e:	fa1f f984 	uxth.w	r9, r4
 8027692:	45d1      	cmp	r9, sl
 8027694:	f8c2 c000 	str.w	ip, [r2]
 8027698:	f8c2 e004 	str.w	lr, [r2, #4]
 802769c:	f8c2 8008 	str.w	r8, [r2, #8]
 80276a0:	f102 020c 	add.w	r2, r2, #12
 80276a4:	d3f2      	bcc.n	802768c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x360>
 80276a6:	f026 0403 	bic.w	r4, r6, #3
 80276aa:	b2a4      	uxth	r4, r4
 80276ac:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 80276b0:	eba6 0c04 	sub.w	ip, r6, r4
 80276b4:	42a6      	cmp	r6, r4
 80276b6:	9604      	str	r6, [sp, #16]
 80276b8:	eb0e 0200 	add.w	r2, lr, r0
 80276bc:	fa1f fc8c 	uxth.w	ip, ip
 80276c0:	d014      	beq.n	80276ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80276c2:	f10c 34ff 	add.w	r4, ip, #4294967295
 80276c6:	f89d 602b 	ldrb.w	r6, [sp, #43]	@ 0x2b
 80276ca:	b2a4      	uxth	r4, r4
 80276cc:	7015      	strb	r5, [r2, #0]
 80276ce:	f882 b001 	strb.w	fp, [r2, #1]
 80276d2:	7096      	strb	r6, [r2, #2]
 80276d4:	b154      	cbz	r4, 80276ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80276d6:	f1bc 0f02 	cmp.w	ip, #2
 80276da:	70d5      	strb	r5, [r2, #3]
 80276dc:	f882 b004 	strb.w	fp, [r2, #4]
 80276e0:	7156      	strb	r6, [r2, #5]
 80276e2:	d003      	beq.n	80276ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80276e4:	7195      	strb	r5, [r2, #6]
 80276e6:	f882 b007 	strb.w	fp, [r2, #7]
 80276ea:	7216      	strb	r6, [r2, #8]
 80276ec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80276ee:	3201      	adds	r2, #1
 80276f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80276f4:	4410      	add	r0, r2
 80276f6:	e727      	b.n	8027548 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80276f8:	eb05 0a45 	add.w	sl, r5, r5, lsl #1
 80276fc:	1d85      	adds	r5, r0, #6
 80276fe:	44aa      	add	sl, r5
 8027700:	f100 0903 	add.w	r9, r0, #3
 8027704:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 8027708:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 802770c:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027710:	fb08 c804 	mla	r8, r8, r4, ip
 8027714:	fb06 e604 	mla	r6, r6, r4, lr
 8027718:	fb05 2504 	mla	r5, r5, r4, r2
 802771c:	fa1f f888 	uxth.w	r8, r8
 8027720:	b2b6      	uxth	r6, r6
 8027722:	f108 0b01 	add.w	fp, r8, #1
 8027726:	b2ad      	uxth	r5, r5
 8027728:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 802772c:	f106 0b01 	add.w	fp, r6, #1
 8027730:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027734:	f105 0b01 	add.w	fp, r5, #1
 8027738:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802773c:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027740:	1236      	asrs	r6, r6, #8
 8027742:	122d      	asrs	r5, r5, #8
 8027744:	f809 8c03 	strb.w	r8, [r9, #-3]
 8027748:	f809 6c02 	strb.w	r6, [r9, #-2]
 802774c:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027750:	f109 0903 	add.w	r9, r9, #3
 8027754:	45d1      	cmp	r9, sl
 8027756:	d1d5      	bne.n	8027704 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8027758:	9a04      	ldr	r2, [sp, #16]
 802775a:	3201      	adds	r2, #1
 802775c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027760:	4410      	add	r0, r2
 8027762:	e6f1      	b.n	8027548 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027764:	46b4      	mov	ip, r6
 8027766:	4602      	mov	r2, r0
 8027768:	e7ab      	b.n	80276c2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x396>
 802776a:	4b05      	ldr	r3, [pc, #20]	@ (8027780 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 802776c:	4a05      	ldr	r2, [pc, #20]	@ (8027784 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 802776e:	f640 2118 	movw	r1, #2584	@ 0xa18
 8027772:	4805      	ldr	r0, [pc, #20]	@ (8027788 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x45c>)
 8027774:	f00a fec8 	bl	8032508 <__assert_func>
 8027778:	9f07      	ldr	r7, [sp, #28]
 802777a:	4619      	mov	r1, r3
 802777c:	e660      	b.n	8027440 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802777e:	bf00      	nop
 8027780:	080363e4 	.word	0x080363e4
 8027784:	08037a70 	.word	0x08037a70
 8027788:	080362f0 	.word	0x080362f0

0802778c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802778c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027790:	b09d      	sub	sp, #116	@ 0x74
 8027792:	920e      	str	r2, [sp, #56]	@ 0x38
 8027794:	461c      	mov	r4, r3
 8027796:	7812      	ldrb	r2, [r2, #0]
 8027798:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802779c:	9114      	str	r1, [sp, #80]	@ 0x50
 802779e:	9304      	str	r3, [sp, #16]
 80277a0:	2a00      	cmp	r2, #0
 80277a2:	f040 8207 	bne.w	8027bb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x428>
 80277a6:	b913      	cbnz	r3, 80277ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80277a8:	b01d      	add	sp, #116	@ 0x74
 80277aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277ae:	6861      	ldr	r1, [r4, #4]
 80277b0:	4681      	mov	r9, r0
 80277b2:	6820      	ldr	r0, [r4, #0]
 80277b4:	ab18      	add	r3, sp, #96	@ 0x60
 80277b6:	c303      	stmia	r3!, {r0, r1}
 80277b8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80277ba:	6818      	ldr	r0, [r3, #0]
 80277bc:	6859      	ldr	r1, [r3, #4]
 80277be:	ab1a      	add	r3, sp, #104	@ 0x68
 80277c0:	c303      	stmia	r3!, {r0, r1}
 80277c2:	a818      	add	r0, sp, #96	@ 0x60
 80277c4:	f7e5 fac4 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80277c8:	4621      	mov	r1, r4
 80277ca:	a81a      	add	r0, sp, #104	@ 0x68
 80277cc:	f7e5 fae8 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80277d0:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 80277d4:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80277d8:	f340 8151 	ble.w	8027a7e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 80277dc:	2301      	movs	r3, #1
 80277de:	b289      	uxth	r1, r1
 80277e0:	9316      	str	r3, [sp, #88]	@ 0x58
 80277e2:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 80277e6:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 80277ea:	fb90 f4f3 	sdiv	r4, r0, r3
 80277ee:	441a      	add	r2, r3
 80277f0:	3a01      	subs	r2, #1
 80277f2:	fb92 f2f3 	sdiv	r2, r2, r3
 80277f6:	b2a4      	uxth	r4, r4
 80277f8:	fb03 0314 	mls	r3, r3, r4, r0
 80277fc:	9415      	str	r4, [sp, #84]	@ 0x54
 80277fe:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 8027802:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 8027806:	fb13 4101 	smlabb	r1, r3, r1, r4
 802780a:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 802780e:	4bba      	ldr	r3, [pc, #744]	@ (8027af8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027810:	4434      	add	r4, r6
 8027812:	4405      	add	r5, r0
 8027814:	6818      	ldr	r0, [r3, #0]
 8027816:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 802781a:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 802781e:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 8027822:	6803      	ldr	r3, [r0, #0]
 8027824:	3201      	adds	r2, #1
 8027826:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027828:	9609      	str	r6, [sp, #36]	@ 0x24
 802782a:	fa1f f881 	uxth.w	r8, r1
 802782e:	b294      	uxth	r4, r2
 8027830:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 8027834:	4798      	blx	r3
 8027836:	2200      	movs	r2, #0
 8027838:	f1b8 0f00 	cmp.w	r8, #0
 802783c:	bf0c      	ite	eq
 802783e:	4633      	moveq	r3, r6
 8027840:	2300      	movne	r3, #0
 8027842:	49ae      	ldr	r1, [pc, #696]	@ (8027afc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8027844:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027846:	8809      	ldrh	r1, [r1, #0]
 8027848:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 802784c:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 8027850:	fb01 f505 	mul.w	r5, r1, r5
 8027854:	fb01 6202 	mla	r2, r1, r2, r6
 8027858:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802785c:	1882      	adds	r2, r0, r2
 802785e:	b29b      	uxth	r3, r3
 8027860:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027864:	9200      	str	r2, [sp, #0]
 8027866:	9302      	str	r3, [sp, #8]
 8027868:	442a      	add	r2, r5
 802786a:	f109 030e 	add.w	r3, r9, #14
 802786e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027870:	4647      	mov	r7, r8
 8027872:	4613      	mov	r3, r2
 8027874:	00a4      	lsls	r4, r4, #2
 8027876:	1d21      	adds	r1, r4, #4
 8027878:	9111      	str	r1, [sp, #68]	@ 0x44
 802787a:	9206      	str	r2, [sp, #24]
 802787c:	9a00      	ldr	r2, [sp, #0]
 802787e:	4293      	cmp	r3, r2
 8027880:	f240 80f5 	bls.w	8027a6e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027884:	2301      	movs	r3, #1
 8027886:	2600      	movs	r6, #0
 8027888:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802788a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802788c:	9307      	str	r3, [sp, #28]
 802788e:	fa10 f282 	uxtah	r2, r0, r2
 8027892:	0092      	lsls	r2, r2, #2
 8027894:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8027896:	3204      	adds	r2, #4
 8027898:	4410      	add	r0, r2
 802789a:	7883      	ldrb	r3, [r0, #2]
 802789c:	7845      	ldrb	r5, [r0, #1]
 802789e:	021b      	lsls	r3, r3, #8
 80278a0:	78c0      	ldrb	r0, [r0, #3]
 80278a2:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 80278a6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80278a8:	4304      	orrs	r4, r0
 80278aa:	1928      	adds	r0, r5, r4
 80278ac:	7843      	ldrb	r3, [r0, #1]
 80278ae:	3001      	adds	r0, #1
 80278b0:	9610      	str	r6, [sp, #64]	@ 0x40
 80278b2:	9003      	str	r0, [sp, #12]
 80278b4:	4630      	mov	r0, r6
 80278b6:	2601      	movs	r6, #1
 80278b8:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 80278bc:	46b0      	mov	r8, r6
 80278be:	fbb7 f1f1 	udiv	r1, r7, r1
 80278c2:	5d2c      	ldrb	r4, [r5, r4]
 80278c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80278c6:	021b      	lsls	r3, r3, #8
 80278c8:	5caa      	ldrb	r2, [r5, r2]
 80278ca:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80278cc:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 80278d0:	431c      	orrs	r4, r3
 80278d2:	920b      	str	r2, [sp, #44]	@ 0x2c
 80278d4:	1a69      	subs	r1, r5, r1
 80278d6:	3201      	adds	r2, #1
 80278d8:	f889 400d 	strb.w	r4, [r9, #13]
 80278dc:	9205      	str	r2, [sp, #20]
 80278de:	b2a4      	uxth	r4, r4
 80278e0:	b28a      	uxth	r2, r1
 80278e2:	9408      	str	r4, [sp, #32]
 80278e4:	9212      	str	r2, [sp, #72]	@ 0x48
 80278e6:	2f00      	cmp	r7, #0
 80278e8:	d034      	beq.n	8027954 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 80278ea:	42be      	cmp	r6, r7
 80278ec:	f080 80cf 	bcs.w	8027a8e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x302>
 80278f0:	1bbf      	subs	r7, r7, r6
 80278f2:	b2bf      	uxth	r7, r7
 80278f4:	9b06      	ldr	r3, [sp, #24]
 80278f6:	9a00      	ldr	r2, [sp, #0]
 80278f8:	4293      	cmp	r3, r2
 80278fa:	f240 80b8 	bls.w	8027a6e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 80278fe:	9803      	ldr	r0, [sp, #12]
 8027900:	f1c8 0107 	rsb	r1, r8, #7
 8027904:	7842      	ldrb	r2, [r0, #1]
 8027906:	7803      	ldrb	r3, [r0, #0]
 8027908:	408a      	lsls	r2, r1
 802790a:	fa43 f308 	asr.w	r3, r3, r8
 802790e:	0052      	lsls	r2, r2, #1
 8027910:	f108 0801 	add.w	r8, r8, #1
 8027914:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8027918:	b2db      	uxtb	r3, r3
 802791a:	fa5f f888 	uxtb.w	r8, r8
 802791e:	4313      	orrs	r3, r2
 8027920:	f1b8 0f08 	cmp.w	r8, #8
 8027924:	b29a      	uxth	r2, r3
 8027926:	f000 80e0 	beq.w	8027aea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 802792a:	3001      	adds	r0, #1
 802792c:	9003      	str	r0, [sp, #12]
 802792e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8027930:	4291      	cmp	r1, r2
 8027932:	f0c0 80bc 	bcc.w	8027aae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x322>
 8027936:	9905      	ldr	r1, [sp, #20]
 8027938:	b2db      	uxtb	r3, r3
 802793a:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802793e:	f889 300d 	strb.w	r3, [r9, #13]
 8027942:	f04f 0601 	mov.w	r6, #1
 8027946:	f0c0 8121 	bcc.w	8027b8c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x400>
 802794a:	e9cd 6207 	strd	r6, r2, [sp, #28]
 802794e:	2000      	movs	r0, #0
 8027950:	2f00      	cmp	r7, #0
 8027952:	d1ca      	bne.n	80278ea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8027954:	9b02      	ldr	r3, [sp, #8]
 8027956:	429e      	cmp	r6, r3
 8027958:	461a      	mov	r2, r3
 802795a:	f0c0 80f0 	bcc.w	8027b3e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b2>
 802795e:	1af3      	subs	r3, r6, r3
 8027960:	b29b      	uxth	r3, r3
 8027962:	930a      	str	r3, [sp, #40]	@ 0x28
 8027964:	2a00      	cmp	r2, #0
 8027966:	f000 80cb 	beq.w	8027b00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>
 802796a:	4694      	mov	ip, r2
 802796c:	970f      	str	r7, [sp, #60]	@ 0x3c
 802796e:	9b00      	ldr	r3, [sp, #0]
 8027970:	eb00 0e0c 	add.w	lr, r0, ip
 8027974:	960c      	str	r6, [sp, #48]	@ 0x30
 8027976:	970d      	str	r7, [sp, #52]	@ 0x34
 8027978:	fa1f fe8e 	uxth.w	lr, lr
 802797c:	1cdd      	adds	r5, r3, #3
 802797e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8027980:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8027982:	e037      	b.n	80279f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027984:	9a04      	ldr	r2, [sp, #16]
 8027986:	9b01      	ldr	r3, [sp, #4]
 8027988:	fb02 f101 	mul.w	r1, r2, r1
 802798c:	1c4a      	adds	r2, r1, #1
 802798e:	eb02 2121 	add.w	r1, r2, r1, asr #8
 8027992:	1209      	asrs	r1, r1, #8
 8027994:	43ca      	mvns	r2, r1
 8027996:	b289      	uxth	r1, r1
 8027998:	fb13 f301 	smulbb	r3, r3, r1
 802799c:	fb1b fb01 	smulbb	fp, fp, r1
 80279a0:	fb1a f101 	smulbb	r1, sl, r1
 80279a4:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 80279a8:	b2d2      	uxtb	r2, r2
 80279aa:	fb0a 3302 	mla	r3, sl, r2, r3
 80279ae:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 80279b2:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 80279b6:	fb04 b402 	mla	r4, r4, r2, fp
 80279ba:	fb0a 1102 	mla	r1, sl, r2, r1
 80279be:	b29b      	uxth	r3, r3
 80279c0:	b2a4      	uxth	r4, r4
 80279c2:	b289      	uxth	r1, r1
 80279c4:	f103 0a01 	add.w	sl, r3, #1
 80279c8:	f104 0b01 	add.w	fp, r4, #1
 80279cc:	1c4a      	adds	r2, r1, #1
 80279ce:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 80279d2:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80279d6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80279da:	121b      	asrs	r3, r3, #8
 80279dc:	1224      	asrs	r4, r4, #8
 80279de:	1209      	asrs	r1, r1, #8
 80279e0:	f805 3c03 	strb.w	r3, [r5, #-3]
 80279e4:	f805 4c02 	strb.w	r4, [r5, #-2]
 80279e8:	f805 1c01 	strb.w	r1, [r5, #-1]
 80279ec:	4570      	cmp	r0, lr
 80279ee:	f105 0503 	add.w	r5, r5, #3
 80279f2:	d024      	beq.n	8027a3e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 80279f4:	2204      	movs	r2, #4
 80279f6:	eb09 0300 	add.w	r3, r9, r0
 80279fa:	7b5b      	ldrb	r3, [r3, #13]
 80279fc:	3001      	adds	r0, #1
 80279fe:	fb12 6303 	smlabb	r3, r2, r3, r6
 8027a02:	58fb      	ldr	r3, [r7, r3]
 8027a04:	b280      	uxth	r0, r0
 8027a06:	0e19      	lsrs	r1, r3, #24
 8027a08:	d0f0      	beq.n	80279ec <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8027a0a:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8027a0e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8027a12:	29ff      	cmp	r1, #255	@ 0xff
 8027a14:	b2db      	uxtb	r3, r3
 8027a16:	fa5f fb84 	uxtb.w	fp, r4
 8027a1a:	9301      	str	r3, [sp, #4]
 8027a1c:	fa5f fa82 	uxtb.w	sl, r2
 8027a20:	d1b0      	bne.n	8027984 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 8027a22:	9b04      	ldr	r3, [sp, #16]
 8027a24:	2bff      	cmp	r3, #255	@ 0xff
 8027a26:	d1ad      	bne.n	8027984 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 8027a28:	9b01      	ldr	r3, [sp, #4]
 8027a2a:	4570      	cmp	r0, lr
 8027a2c:	f805 3c03 	strb.w	r3, [r5, #-3]
 8027a30:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027a34:	f805 2c01 	strb.w	r2, [r5, #-1]
 8027a38:	f105 0503 	add.w	r5, r5, #3
 8027a3c:	d1da      	bne.n	80279f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027a3e:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 8027a42:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027a46:	fa1f fc8c 	uxth.w	ip, ip
 8027a4a:	9b00      	ldr	r3, [sp, #0]
 8027a4c:	f10c 0c01 	add.w	ip, ip, #1
 8027a50:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8027a54:	4463      	add	r3, ip
 8027a56:	9300      	str	r3, [sp, #0]
 8027a58:	9b02      	ldr	r3, [sp, #8]
 8027a5a:	429e      	cmp	r6, r3
 8027a5c:	d251      	bcs.n	8027b02 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8027a5e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027a60:	9a00      	ldr	r2, [sp, #0]
 8027a62:	9302      	str	r3, [sp, #8]
 8027a64:	9b06      	ldr	r3, [sp, #24]
 8027a66:	4670      	mov	r0, lr
 8027a68:	4293      	cmp	r3, r2
 8027a6a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027a6c:	d81b      	bhi.n	8027aa6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x31a>
 8027a6e:	4b22      	ldr	r3, [pc, #136]	@ (8027af8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027a70:	6818      	ldr	r0, [r3, #0]
 8027a72:	6803      	ldr	r3, [r0, #0]
 8027a74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027a76:	4798      	blx	r3
 8027a78:	b01d      	add	sp, #116	@ 0x74
 8027a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a7e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8027a82:	b289      	uxth	r1, r1
 8027a84:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a88:	b29a      	uxth	r2, r3
 8027a8a:	9216      	str	r2, [sp, #88]	@ 0x58
 8027a8c:	e6a9      	b.n	80277e2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8027a8e:	1bf6      	subs	r6, r6, r7
 8027a90:	4438      	add	r0, r7
 8027a92:	2700      	movs	r7, #0
 8027a94:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027a98:	b2b6      	uxth	r6, r6
 8027a9a:	b280      	uxth	r0, r0
 8027a9c:	9302      	str	r3, [sp, #8]
 8027a9e:	9b06      	ldr	r3, [sp, #24]
 8027aa0:	9a00      	ldr	r2, [sp, #0]
 8027aa2:	4293      	cmp	r3, r2
 8027aa4:	d9e3      	bls.n	8027a6e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027aa6:	2e00      	cmp	r6, #0
 8027aa8:	f47f af1d 	bne.w	80278e6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027aac:	e727      	b.n	80278fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8027aae:	9b05      	ldr	r3, [sp, #20]
 8027ab0:	429a      	cmp	r2, r3
 8027ab2:	d34d      	bcc.n	8027b50 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8027ab4:	9807      	ldr	r0, [sp, #28]
 8027ab6:	f899 100d 	ldrb.w	r1, [r9, #13]
 8027aba:	eb09 0300 	add.w	r3, r9, r0
 8027abe:	7359      	strb	r1, [r3, #13]
 8027ac0:	f899 300d 	ldrb.w	r3, [r9, #13]
 8027ac4:	1c41      	adds	r1, r0, #1
 8027ac6:	b28e      	uxth	r6, r1
 8027ac8:	9c05      	ldr	r4, [sp, #20]
 8027aca:	9d08      	ldr	r5, [sp, #32]
 8027acc:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8027ad0:	3401      	adds	r4, #1
 8027ad2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8027ad6:	b2a3      	uxth	r3, r4
 8027ad8:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8027adc:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8027ae0:	9305      	str	r3, [sp, #20]
 8027ae2:	e9cd 6207 	strd	r6, r2, [sp, #28]
 8027ae6:	2000      	movs	r0, #0
 8027ae8:	e6fd      	b.n	80278e6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027aea:	4601      	mov	r1, r0
 8027aec:	3102      	adds	r1, #2
 8027aee:	f04f 0800 	mov.w	r8, #0
 8027af2:	9103      	str	r1, [sp, #12]
 8027af4:	e71b      	b.n	802792e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8027af6:	bf00      	nop
 8027af8:	20082f08 	.word	0x20082f08
 8027afc:	20082f02 	.word	0x20082f02
 8027b00:	4686      	mov	lr, r0
 8027b02:	4b30      	ldr	r3, [pc, #192]	@ (8027bc4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8027b04:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027b06:	881b      	ldrh	r3, [r3, #0]
 8027b08:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027b0a:	1a5b      	subs	r3, r3, r1
 8027b0c:	9900      	ldr	r1, [sp, #0]
 8027b0e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027b12:	4419      	add	r1, r3
 8027b14:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027b16:	3201      	adds	r2, #1
 8027b18:	429a      	cmp	r2, r3
 8027b1a:	9210      	str	r2, [sp, #64]	@ 0x40
 8027b1c:	9100      	str	r1, [sp, #0]
 8027b1e:	d038      	beq.n	8027b92 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x406>
 8027b20:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027b24:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 8027b28:	4670      	mov	r0, lr
 8027b2a:	1aff      	subs	r7, r7, r3
 8027b2c:	b2bf      	uxth	r7, r7
 8027b2e:	2f00      	cmp	r7, #0
 8027b30:	bf18      	it	ne
 8027b32:	2300      	movne	r3, #0
 8027b34:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027b36:	9302      	str	r3, [sp, #8]
 8027b38:	bf08      	it	eq
 8027b3a:	2700      	moveq	r7, #0
 8027b3c:	e7af      	b.n	8027a9e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x312>
 8027b3e:	1b9b      	subs	r3, r3, r6
 8027b40:	b29b      	uxth	r3, r3
 8027b42:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027b44:	2e00      	cmp	r6, #0
 8027b46:	f43f aed5 	beq.w	80278f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x168>
 8027b4a:	970a      	str	r7, [sp, #40]	@ 0x28
 8027b4c:	46b4      	mov	ip, r6
 8027b4e:	e70e      	b.n	802796e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027b50:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8027b54:	f893 604f 	ldrb.w	r6, [r3, #79]	@ 0x4f
 8027b58:	4613      	mov	r3, r2
 8027b5a:	2e01      	cmp	r6, #1
 8027b5c:	d90d      	bls.n	8027b7a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ee>
 8027b5e:	f106 010d 	add.w	r1, r6, #13
 8027b62:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027b64:	4449      	add	r1, r9
 8027b66:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8027b6a:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8027b6e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8027b72:	428c      	cmp	r4, r1
 8027b74:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8027b78:	d1f5      	bne.n	8027b66 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8027b7a:	9905      	ldr	r1, [sp, #20]
 8027b7c:	b2db      	uxtb	r3, r3
 8027b7e:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027b82:	f889 300d 	strb.w	r3, [r9, #13]
 8027b86:	b2b6      	uxth	r6, r6
 8027b88:	f4bf aedf 	bcs.w	802794a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027b8c:	9907      	ldr	r1, [sp, #28]
 8027b8e:	3101      	adds	r1, #1
 8027b90:	e79a      	b.n	8027ac8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8027b92:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8027b96:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8027b9a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027b9c:	1aff      	subs	r7, r7, r3
 8027b9e:	b2bf      	uxth	r7, r7
 8027ba0:	2f00      	cmp	r7, #0
 8027ba2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027ba4:	bf18      	it	ne
 8027ba6:	2300      	movne	r3, #0
 8027ba8:	3201      	adds	r2, #1
 8027baa:	b29b      	uxth	r3, r3
 8027bac:	9302      	str	r3, [sp, #8]
 8027bae:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027bb0:	9b06      	ldr	r3, [sp, #24]
 8027bb2:	e663      	b.n	802787c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf0>
 8027bb4:	4b04      	ldr	r3, [pc, #16]	@ (8027bc8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8027bb6:	4a05      	ldr	r2, [pc, #20]	@ (8027bcc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8027bb8:	f640 21ae 	movw	r1, #2734	@ 0xaae
 8027bbc:	4804      	ldr	r0, [pc, #16]	@ (8027bd0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8027bbe:	f00a fca3 	bl	8032508 <__assert_func>
 8027bc2:	bf00      	nop
 8027bc4:	20082f02 	.word	0x20082f02
 8027bc8:	080363e4 	.word	0x080363e4
 8027bcc:	08037d3c 	.word	0x08037d3c
 8027bd0:	080362f0 	.word	0x080362f0

08027bd4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bd8:	4617      	mov	r7, r2
 8027bda:	b095      	sub	sp, #84	@ 0x54
 8027bdc:	8812      	ldrh	r2, [r2, #0]
 8027bde:	4688      	mov	r8, r1
 8027be0:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8027be4:	2a01      	cmp	r2, #1
 8027be6:	461c      	mov	r4, r3
 8027be8:	910d      	str	r1, [sp, #52]	@ 0x34
 8027bea:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8027bec:	f040 8105 	bne.w	8027dfa <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8027bf0:	6820      	ldr	r0, [r4, #0]
 8027bf2:	6861      	ldr	r1, [r4, #4]
 8027bf4:	aa10      	add	r2, sp, #64	@ 0x40
 8027bf6:	c203      	stmia	r2!, {r0, r1}
 8027bf8:	6818      	ldr	r0, [r3, #0]
 8027bfa:	6859      	ldr	r1, [r3, #4]
 8027bfc:	aa12      	add	r2, sp, #72	@ 0x48
 8027bfe:	c203      	stmia	r2!, {r0, r1}
 8027c00:	a810      	add	r0, sp, #64	@ 0x40
 8027c02:	f7e5 f8a5 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027c06:	4621      	mov	r1, r4
 8027c08:	a812      	add	r0, sp, #72	@ 0x48
 8027c0a:	f7e5 f8c9 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027c0e:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8027c12:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8027c16:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8027c1a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8027c1e:	487a      	ldr	r0, [pc, #488]	@ (8027e08 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027c20:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8027c24:	4422      	add	r2, r4
 8027c26:	442b      	add	r3, r5
 8027c28:	6800      	ldr	r0, [r0, #0]
 8027c2a:	fb11 4105 	smlabb	r1, r1, r5, r4
 8027c2e:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8027c32:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8027c36:	6802      	ldr	r2, [r0, #0]
 8027c38:	4c74      	ldr	r4, [pc, #464]	@ (8027e0c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8027c3a:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8027c3e:	4488      	add	r8, r1
 8027c40:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8027c44:	42a3      	cmp	r3, r4
 8027c46:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 8027c4a:	910c      	str	r1, [sp, #48]	@ 0x30
 8027c4c:	f040 809f 	bne.w	8027d8e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8027c50:	6841      	ldr	r1, [r0, #4]
 8027c52:	4c6f      	ldr	r4, [pc, #444]	@ (8027e10 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8027c54:	680b      	ldr	r3, [r1, #0]
 8027c56:	699b      	ldr	r3, [r3, #24]
 8027c58:	42a3      	cmp	r3, r4
 8027c5a:	f040 80c0 	bne.w	8027dde <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 8027c5e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8027c60:	4798      	blx	r3
 8027c62:	4a6c      	ldr	r2, [pc, #432]	@ (8027e14 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027c64:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8027c68:	8814      	ldrh	r4, [r2, #0]
 8027c6a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8027c6e:	fb04 2303 	mla	r3, r4, r3, r2
 8027c72:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027c76:	4418      	add	r0, r3
 8027c78:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027c7a:	2b00      	cmp	r3, #0
 8027c7c:	dd67      	ble.n	8027d4e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8027c7e:	2300      	movs	r3, #0
 8027c80:	f04f 0903 	mov.w	r9, #3
 8027c84:	2104      	movs	r1, #4
 8027c86:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027c88:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027c8a:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 8027c8e:	930e      	str	r3, [sp, #56]	@ 0x38
 8027c90:	f1c5 02ff 	rsb	r2, r5, #255	@ 0xff
 8027c94:	444b      	add	r3, r9
 8027c96:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027c98:	b292      	uxth	r2, r2
 8027c9a:	fa1f fc85 	uxth.w	ip, r5
 8027c9e:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8027ca2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027ca4:	2b00      	cmp	r3, #0
 8027ca6:	dd43      	ble.n	8027d30 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8027ca8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027caa:	2bff      	cmp	r3, #255	@ 0xff
 8027cac:	d057      	beq.n	8027d5e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8027cae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027cb0:	1cc5      	adds	r5, r0, #3
 8027cb2:	f108 3eff 	add.w	lr, r8, #4294967295
 8027cb6:	eb00 0a03 	add.w	sl, r0, r3
 8027cba:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8027cbe:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 8027cc2:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027cc6:	fb16 f402 	smulbb	r4, r6, r2
 8027cca:	5cfe      	ldrb	r6, [r7, r3]
 8027ccc:	443b      	add	r3, r7
 8027cce:	fb06 460c 	mla	r6, r6, ip, r4
 8027cd2:	b2b6      	uxth	r6, r6
 8027cd4:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027cd8:	f106 0b01 	add.w	fp, r6, #1
 8027cdc:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027ce0:	1236      	asrs	r6, r6, #8
 8027ce2:	fb14 fb02 	smulbb	fp, r4, r2
 8027ce6:	f805 6c03 	strb.w	r6, [r5, #-3]
 8027cea:	785c      	ldrb	r4, [r3, #1]
 8027cec:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 8027cf0:	fb04 b40c 	mla	r4, r4, ip, fp
 8027cf4:	b2a4      	uxth	r4, r4
 8027cf6:	f104 0b01 	add.w	fp, r4, #1
 8027cfa:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027cfe:	1224      	asrs	r4, r4, #8
 8027d00:	fb16 f602 	smulbb	r6, r6, r2
 8027d04:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027d08:	789b      	ldrb	r3, [r3, #2]
 8027d0a:	3503      	adds	r5, #3
 8027d0c:	fb03 630c 	mla	r3, r3, ip, r6
 8027d10:	b29b      	uxth	r3, r3
 8027d12:	1c5c      	adds	r4, r3, #1
 8027d14:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8027d18:	121b      	asrs	r3, r3, #8
 8027d1a:	f805 3c04 	strb.w	r3, [r5, #-4]
 8027d1e:	45aa      	cmp	sl, r5
 8027d20:	d1cb      	bne.n	8027cba <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8027d22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027d24:	4418      	add	r0, r3
 8027d26:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027d28:	4498      	add	r8, r3
 8027d2a:	4b3a      	ldr	r3, [pc, #232]	@ (8027e14 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027d2c:	881c      	ldrh	r4, [r3, #0]
 8027d2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027d30:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 8027d34:	eba4 0e03 	sub.w	lr, r4, r3
 8027d38:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8027d3a:	1aed      	subs	r5, r5, r3
 8027d3c:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 8027d40:	4418      	add	r0, r3
 8027d42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027d44:	3601      	adds	r6, #1
 8027d46:	42b3      	cmp	r3, r6
 8027d48:	960b      	str	r6, [sp, #44]	@ 0x2c
 8027d4a:	44a8      	add	r8, r5
 8027d4c:	d1a9      	bne.n	8027ca2 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8027d4e:	4b2e      	ldr	r3, [pc, #184]	@ (8027e08 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027d50:	6818      	ldr	r0, [r3, #0]
 8027d52:	6803      	ldr	r3, [r0, #0]
 8027d54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027d56:	4798      	blx	r3
 8027d58:	b015      	add	sp, #84	@ 0x54
 8027d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d5e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027d60:	1cc4      	adds	r4, r0, #3
 8027d62:	f108 35ff 	add.w	r5, r8, #4294967295
 8027d66:	eb00 0e03 	add.w	lr, r0, r3
 8027d6a:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8027d6e:	3403      	adds	r4, #3
 8027d70:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027d74:	5cfe      	ldrb	r6, [r7, r3]
 8027d76:	443b      	add	r3, r7
 8027d78:	f804 6c06 	strb.w	r6, [r4, #-6]
 8027d7c:	785e      	ldrb	r6, [r3, #1]
 8027d7e:	f804 6c05 	strb.w	r6, [r4, #-5]
 8027d82:	789b      	ldrb	r3, [r3, #2]
 8027d84:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027d88:	45a6      	cmp	lr, r4
 8027d8a:	d1ee      	bne.n	8027d6a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x196>
 8027d8c:	e7c9      	b.n	8027d22 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 8027d8e:	4798      	blx	r3
 8027d90:	4603      	mov	r3, r0
 8027d92:	2b01      	cmp	r3, #1
 8027d94:	d127      	bne.n	8027de6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8027d96:	4a20      	ldr	r2, [pc, #128]	@ (8027e18 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8027d98:	6810      	ldr	r0, [r2, #0]
 8027d9a:	b340      	cbz	r0, 8027dee <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8027d9c:	f04f 0c0b 	mov.w	ip, #11
 8027da0:	2600      	movs	r6, #0
 8027da2:	4a1c      	ldr	r2, [pc, #112]	@ (8027e14 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027da4:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8027da8:	8814      	ldrh	r4, [r2, #0]
 8027daa:	fa1f f28a 	uxth.w	r2, sl
 8027dae:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8027db2:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8027db6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8027db8:	9406      	str	r4, [sp, #24]
 8027dba:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8027dbe:	9308      	str	r3, [sp, #32]
 8027dc0:	9204      	str	r2, [sp, #16]
 8027dc2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8027dc6:	463a      	mov	r2, r7
 8027dc8:	4641      	mov	r1, r8
 8027dca:	f8cd c01c 	str.w	ip, [sp, #28]
 8027dce:	9605      	str	r6, [sp, #20]
 8027dd0:	9503      	str	r5, [sp, #12]
 8027dd2:	9400      	str	r4, [sp, #0]
 8027dd4:	f7f8 ff30 	bl	8020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8027dd8:	b015      	add	sp, #84	@ 0x54
 8027dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027dde:	4608      	mov	r0, r1
 8027de0:	4798      	blx	r3
 8027de2:	4603      	mov	r3, r0
 8027de4:	e7d5      	b.n	8027d92 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027de6:	4b08      	ldr	r3, [pc, #32]	@ (8027e08 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027de8:	6818      	ldr	r0, [r3, #0]
 8027dea:	6802      	ldr	r2, [r0, #0]
 8027dec:	e737      	b.n	8027c5e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8027dee:	4b0b      	ldr	r3, [pc, #44]	@ (8027e1c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8027df0:	4a0b      	ldr	r2, [pc, #44]	@ (8027e20 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8027df2:	217c      	movs	r1, #124	@ 0x7c
 8027df4:	480b      	ldr	r0, [pc, #44]	@ (8027e24 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8027df6:	f00a fb87 	bl	8032508 <__assert_func>
 8027dfa:	4b0b      	ldr	r3, [pc, #44]	@ (8027e28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8027dfc:	4a0b      	ldr	r2, [pc, #44]	@ (8027e2c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8027dfe:	f640 3191 	movw	r1, #2961	@ 0xb91
 8027e02:	480b      	ldr	r0, [pc, #44]	@ (8027e30 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8027e04:	f00a fb80 	bl	8032508 <__assert_func>
 8027e08:	20082f08 	.word	0x20082f08
 8027e0c:	0800121d 	.word	0x0800121d
 8027e10:	0800baf5 	.word	0x0800baf5
 8027e14:	20082f02 	.word	0x20082f02
 8027e18:	200833a8 	.word	0x200833a8
 8027e1c:	0803624c 	.word	0x0803624c
 8027e20:	08036ab8 	.word	0x08036ab8
 8027e24:	08036274 	.word	0x08036274
 8027e28:	08036314 	.word	0x08036314
 8027e2c:	08036fd8 	.word	0x08036fd8
 8027e30:	080362f0 	.word	0x080362f0

08027e34 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e38:	4615      	mov	r5, r2
 8027e3a:	7812      	ldrb	r2, [r2, #0]
 8027e3c:	b08b      	sub	sp, #44	@ 0x2c
 8027e3e:	2a01      	cmp	r2, #1
 8027e40:	461f      	mov	r7, r3
 8027e42:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 8027e46:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027e48:	f040 8213 	bne.w	8028272 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 8027e4c:	6838      	ldr	r0, [r7, #0]
 8027e4e:	468a      	mov	sl, r1
 8027e50:	6879      	ldr	r1, [r7, #4]
 8027e52:	aa06      	add	r2, sp, #24
 8027e54:	c203      	stmia	r2!, {r0, r1}
 8027e56:	6818      	ldr	r0, [r3, #0]
 8027e58:	6859      	ldr	r1, [r3, #4]
 8027e5a:	aa08      	add	r2, sp, #32
 8027e5c:	c203      	stmia	r2!, {r0, r1}
 8027e5e:	a806      	add	r0, sp, #24
 8027e60:	f7e4 ff76 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027e64:	4639      	mov	r1, r7
 8027e66:	a808      	add	r0, sp, #32
 8027e68:	f7e4 ff9a 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027e6c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8027e70:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8027e74:	f003 0201 	and.w	r2, r3, #1
 8027e78:	4614      	mov	r4, r2
 8027e7a:	9202      	str	r2, [sp, #8]
 8027e7c:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 8027e80:	4423      	add	r3, r4
 8027e82:	fb02 1303 	mla	r3, r2, r3, r1
 8027e86:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8027e8a:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8027e8e:	4402      	add	r2, r0
 8027e90:	48a9      	ldr	r0, [pc, #676]	@ (8028138 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8027e92:	440f      	add	r7, r1
 8027e94:	6800      	ldr	r0, [r0, #0]
 8027e96:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027e9a:	f8ad 7020 	strh.w	r7, [sp, #32]
 8027e9e:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8027ea2:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8027ea6:	f001 0301 	and.w	r3, r1, #1
 8027eaa:	6802      	ldr	r2, [r0, #0]
 8027eac:	9301      	str	r3, [sp, #4]
 8027eae:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027eb2:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8027eb4:	9300      	str	r3, [sp, #0]
 8027eb6:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 8027eba:	4790      	blx	r2
 8027ebc:	4a9f      	ldr	r2, [pc, #636]	@ (802813c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027ebe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8027ec2:	8811      	ldrh	r1, [r2, #0]
 8027ec4:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 8027ec8:	2eff      	cmp	r6, #255	@ 0xff
 8027eca:	fb01 7303 	mla	r3, r1, r3, r7
 8027ece:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027ed2:	f105 0204 	add.w	r2, r5, #4
 8027ed6:	4418      	add	r0, r3
 8027ed8:	f000 8132 	beq.w	8028140 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8027edc:	fb04 f401 	mul.w	r4, r4, r1
 8027ee0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8027ee4:	1901      	adds	r1, r0, r4
 8027ee6:	4288      	cmp	r0, r1
 8027ee8:	9104      	str	r1, [sp, #16]
 8027eea:	f080 80aa 	bcs.w	8028042 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8027eee:	9b00      	ldr	r3, [sp, #0]
 8027ef0:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 8027ef4:	3b01      	subs	r3, #1
 8027ef6:	b2bf      	uxth	r7, r7
 8027ef8:	b2b6      	uxth	r6, r6
 8027efa:	9305      	str	r3, [sp, #20]
 8027efc:	9b01      	ldr	r3, [sp, #4]
 8027efe:	2b00      	cmp	r3, #0
 8027f00:	f040 80e8 	bne.w	80280d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8027f04:	46d1      	mov	r9, sl
 8027f06:	f8dd 8000 	ldr.w	r8, [sp]
 8027f0a:	f1b8 0f01 	cmp.w	r8, #1
 8027f0e:	f340 8082 	ble.w	8028016 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027f12:	f1a8 0302 	sub.w	r3, r8, #2
 8027f16:	ea4f 0853 	mov.w	r8, r3, lsr #1
 8027f1a:	9303      	str	r3, [sp, #12]
 8027f1c:	f100 0e0c 	add.w	lr, r0, #12
 8027f20:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8027f24:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8027f28:	1d84      	adds	r4, r0, #6
 8027f2a:	f109 3cff 	add.w	ip, r9, #4294967295
 8027f2e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8027f32:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 8027f36:	091b      	lsrs	r3, r3, #4
 8027f38:	fb15 f507 	smulbb	r5, r5, r7
 8027f3c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027f40:	5cd1      	ldrb	r1, [r2, r3]
 8027f42:	4413      	add	r3, r2
 8027f44:	fb01 5506 	mla	r5, r1, r6, r5
 8027f48:	b2ad      	uxth	r5, r5
 8027f4a:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 8027f4e:	f105 0b01 	add.w	fp, r5, #1
 8027f52:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027f56:	122d      	asrs	r5, r5, #8
 8027f58:	fb11 fb07 	smulbb	fp, r1, r7
 8027f5c:	f804 5c06 	strb.w	r5, [r4, #-6]
 8027f60:	7859      	ldrb	r1, [r3, #1]
 8027f62:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 8027f66:	fb01 b106 	mla	r1, r1, r6, fp
 8027f6a:	b289      	uxth	r1, r1
 8027f6c:	f101 0b01 	add.w	fp, r1, #1
 8027f70:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027f74:	1209      	asrs	r1, r1, #8
 8027f76:	fb15 f507 	smulbb	r5, r5, r7
 8027f7a:	f804 1c05 	strb.w	r1, [r4, #-5]
 8027f7e:	789b      	ldrb	r3, [r3, #2]
 8027f80:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8027f84:	fb03 5306 	mla	r3, r3, r6, r5
 8027f88:	b29b      	uxth	r3, r3
 8027f8a:	1c5d      	adds	r5, r3, #1
 8027f8c:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8027f90:	121b      	asrs	r3, r3, #8
 8027f92:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027f96:	f89c 3000 	ldrb.w	r3, [ip]
 8027f9a:	fb11 f107 	smulbb	r1, r1, r7
 8027f9e:	f003 030f 	and.w	r3, r3, #15
 8027fa2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027fa6:	5cd5      	ldrb	r5, [r2, r3]
 8027fa8:	4413      	add	r3, r2
 8027faa:	fb05 1106 	mla	r1, r5, r6, r1
 8027fae:	b28d      	uxth	r5, r1
 8027fb0:	f105 0b01 	add.w	fp, r5, #1
 8027fb4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8027fb8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027fbc:	122d      	asrs	r5, r5, #8
 8027fbe:	fb11 fb07 	smulbb	fp, r1, r7
 8027fc2:	f804 5c03 	strb.w	r5, [r4, #-3]
 8027fc6:	7859      	ldrb	r1, [r3, #1]
 8027fc8:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8027fcc:	fb01 b106 	mla	r1, r1, r6, fp
 8027fd0:	b289      	uxth	r1, r1
 8027fd2:	f101 0b01 	add.w	fp, r1, #1
 8027fd6:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027fda:	1209      	asrs	r1, r1, #8
 8027fdc:	fb15 f507 	smulbb	r5, r5, r7
 8027fe0:	f804 1c02 	strb.w	r1, [r4, #-2]
 8027fe4:	789b      	ldrb	r3, [r3, #2]
 8027fe6:	3406      	adds	r4, #6
 8027fe8:	fb03 5306 	mla	r3, r3, r6, r5
 8027fec:	b29b      	uxth	r3, r3
 8027fee:	1c59      	adds	r1, r3, #1
 8027ff0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027ff4:	121b      	asrs	r3, r3, #8
 8027ff6:	f804 3c07 	strb.w	r3, [r4, #-7]
 8027ffa:	45a6      	cmp	lr, r4
 8027ffc:	d197      	bne.n	8027f2e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8027ffe:	f108 0301 	add.w	r3, r8, #1
 8028002:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8028006:	4499      	add	r9, r3
 8028008:	9b03      	ldr	r3, [sp, #12]
 802800a:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 802800e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8028012:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 8028016:	f1b8 0f01 	cmp.w	r8, #1
 802801a:	d01a      	beq.n	8028052 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 802801c:	4b47      	ldr	r3, [pc, #284]	@ (802813c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 802801e:	9c00      	ldr	r4, [sp, #0]
 8028020:	8819      	ldrh	r1, [r3, #0]
 8028022:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8028026:	1b09      	subs	r1, r1, r4
 8028028:	9c02      	ldr	r4, [sp, #8]
 802802a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802802e:	4423      	add	r3, r4
 8028030:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028034:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8028038:	9b04      	ldr	r3, [sp, #16]
 802803a:	4408      	add	r0, r1
 802803c:	4283      	cmp	r3, r0
 802803e:	f63f af5d 	bhi.w	8027efc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8028042:	4b3d      	ldr	r3, [pc, #244]	@ (8028138 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8028044:	6818      	ldr	r0, [r3, #0]
 8028046:	6803      	ldr	r3, [r0, #0]
 8028048:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802804a:	4798      	blx	r3
 802804c:	b00b      	add	sp, #44	@ 0x2c
 802804e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028052:	f899 3000 	ldrb.w	r3, [r9]
 8028056:	7801      	ldrb	r1, [r0, #0]
 8028058:	091b      	lsrs	r3, r3, #4
 802805a:	fb11 f407 	smulbb	r4, r1, r7
 802805e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028062:	5cd1      	ldrb	r1, [r2, r3]
 8028064:	4413      	add	r3, r2
 8028066:	fb01 4106 	mla	r1, r1, r6, r4
 802806a:	b289      	uxth	r1, r1
 802806c:	7844      	ldrb	r4, [r0, #1]
 802806e:	1c4d      	adds	r5, r1, #1
 8028070:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8028074:	1209      	asrs	r1, r1, #8
 8028076:	fb14 f507 	smulbb	r5, r4, r7
 802807a:	7001      	strb	r1, [r0, #0]
 802807c:	785c      	ldrb	r4, [r3, #1]
 802807e:	7881      	ldrb	r1, [r0, #2]
 8028080:	fb04 5406 	mla	r4, r4, r6, r5
 8028084:	b2a4      	uxth	r4, r4
 8028086:	1c65      	adds	r5, r4, #1
 8028088:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802808c:	1224      	asrs	r4, r4, #8
 802808e:	fb11 f507 	smulbb	r5, r1, r7
 8028092:	7044      	strb	r4, [r0, #1]
 8028094:	7899      	ldrb	r1, [r3, #2]
 8028096:	4b29      	ldr	r3, [pc, #164]	@ (802813c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8028098:	fb01 5106 	mla	r1, r1, r6, r5
 802809c:	b289      	uxth	r1, r1
 802809e:	1c4c      	adds	r4, r1, #1
 80280a0:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80280a4:	881b      	ldrh	r3, [r3, #0]
 80280a6:	9c00      	ldr	r4, [sp, #0]
 80280a8:	1209      	asrs	r1, r1, #8
 80280aa:	1b1b      	subs	r3, r3, r4
 80280ac:	7081      	strb	r1, [r0, #2]
 80280ae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80280b2:	3303      	adds	r3, #3
 80280b4:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 80280b8:	9c02      	ldr	r4, [sp, #8]
 80280ba:	4418      	add	r0, r3
 80280bc:	9b04      	ldr	r3, [sp, #16]
 80280be:	4421      	add	r1, r4
 80280c0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80280c4:	4283      	cmp	r3, r0
 80280c6:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 80280ca:	d9ba      	bls.n	8028042 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80280cc:	9b01      	ldr	r3, [sp, #4]
 80280ce:	2b00      	cmp	r3, #0
 80280d0:	f43f af18 	beq.w	8027f04 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 80280d4:	f89a 3000 	ldrb.w	r3, [sl]
 80280d8:	7804      	ldrb	r4, [r0, #0]
 80280da:	f003 030f 	and.w	r3, r3, #15
 80280de:	fb14 f107 	smulbb	r1, r4, r7
 80280e2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80280e6:	5cd4      	ldrb	r4, [r2, r3]
 80280e8:	4413      	add	r3, r2
 80280ea:	fb04 1406 	mla	r4, r4, r6, r1
 80280ee:	b2a4      	uxth	r4, r4
 80280f0:	7841      	ldrb	r1, [r0, #1]
 80280f2:	1c65      	adds	r5, r4, #1
 80280f4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80280f8:	1224      	asrs	r4, r4, #8
 80280fa:	fb11 fc07 	smulbb	ip, r1, r7
 80280fe:	7004      	strb	r4, [r0, #0]
 8028100:	7859      	ldrb	r1, [r3, #1]
 8028102:	7885      	ldrb	r5, [r0, #2]
 8028104:	fb01 c106 	mla	r1, r1, r6, ip
 8028108:	b289      	uxth	r1, r1
 802810a:	1c4c      	adds	r4, r1, #1
 802810c:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028110:	1209      	asrs	r1, r1, #8
 8028112:	fb15 f407 	smulbb	r4, r5, r7
 8028116:	7041      	strb	r1, [r0, #1]
 8028118:	789b      	ldrb	r3, [r3, #2]
 802811a:	f10a 0901 	add.w	r9, sl, #1
 802811e:	fb03 4306 	mla	r3, r3, r6, r4
 8028122:	b29b      	uxth	r3, r3
 8028124:	1c59      	adds	r1, r3, #1
 8028126:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802812a:	121b      	asrs	r3, r3, #8
 802812c:	7083      	strb	r3, [r0, #2]
 802812e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8028132:	3003      	adds	r0, #3
 8028134:	e6e9      	b.n	8027f0a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd6>
 8028136:	bf00      	nop
 8028138:	20082f08 	.word	0x20082f08
 802813c:	20082f02 	.word	0x20082f02
 8028140:	fb04 f101 	mul.w	r1, r4, r1
 8028144:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028148:	eb00 0e01 	add.w	lr, r0, r1
 802814c:	4570      	cmp	r0, lr
 802814e:	f4bf af78 	bcs.w	8028042 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028152:	9b00      	ldr	r3, [sp, #0]
 8028154:	4698      	mov	r8, r3
 8028156:	f103 39ff 	add.w	r9, r3, #4294967295
 802815a:	9b01      	ldr	r3, [sp, #4]
 802815c:	2b00      	cmp	r3, #0
 802815e:	d072      	beq.n	8028246 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 8028160:	464e      	mov	r6, r9
 8028162:	f89a 3000 	ldrb.w	r3, [sl]
 8028166:	f10a 0c01 	add.w	ip, sl, #1
 802816a:	f003 030f 	and.w	r3, r3, #15
 802816e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028172:	5cd1      	ldrb	r1, [r2, r3]
 8028174:	4413      	add	r3, r2
 8028176:	7001      	strb	r1, [r0, #0]
 8028178:	7859      	ldrb	r1, [r3, #1]
 802817a:	3003      	adds	r0, #3
 802817c:	f800 1c02 	strb.w	r1, [r0, #-2]
 8028180:	789b      	ldrb	r3, [r3, #2]
 8028182:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028186:	2e01      	cmp	r6, #1
 8028188:	dd39      	ble.n	80281fe <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 802818a:	3e02      	subs	r6, #2
 802818c:	0877      	lsrs	r7, r6, #1
 802818e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8028192:	f100 050c 	add.w	r5, r0, #12
 8028196:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802819a:	1d81      	adds	r1, r0, #6
 802819c:	f10c 34ff 	add.w	r4, ip, #4294967295
 80281a0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80281a4:	3106      	adds	r1, #6
 80281a6:	091b      	lsrs	r3, r3, #4
 80281a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281ac:	f812 b003 	ldrb.w	fp, [r2, r3]
 80281b0:	4413      	add	r3, r2
 80281b2:	f801 bc0c 	strb.w	fp, [r1, #-12]
 80281b6:	f893 b001 	ldrb.w	fp, [r3, #1]
 80281ba:	f801 bc0b 	strb.w	fp, [r1, #-11]
 80281be:	789b      	ldrb	r3, [r3, #2]
 80281c0:	f801 3c0a 	strb.w	r3, [r1, #-10]
 80281c4:	7823      	ldrb	r3, [r4, #0]
 80281c6:	f003 030f 	and.w	r3, r3, #15
 80281ca:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281ce:	f812 b003 	ldrb.w	fp, [r2, r3]
 80281d2:	4413      	add	r3, r2
 80281d4:	f801 bc09 	strb.w	fp, [r1, #-9]
 80281d8:	f893 b001 	ldrb.w	fp, [r3, #1]
 80281dc:	f801 bc08 	strb.w	fp, [r1, #-8]
 80281e0:	789b      	ldrb	r3, [r3, #2]
 80281e2:	f801 3c07 	strb.w	r3, [r1, #-7]
 80281e6:	428d      	cmp	r5, r1
 80281e8:	d1da      	bne.n	80281a0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 80281ea:	1c7b      	adds	r3, r7, #1
 80281ec:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 80281f0:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 80281f4:	449c      	add	ip, r3
 80281f6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80281fa:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 80281fe:	2e01      	cmp	r6, #1
 8028200:	d124      	bne.n	802824c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x418>
 8028202:	f89c 3000 	ldrb.w	r3, [ip]
 8028206:	9c02      	ldr	r4, [sp, #8]
 8028208:	091b      	lsrs	r3, r3, #4
 802820a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802820e:	5cd1      	ldrb	r1, [r2, r3]
 8028210:	4413      	add	r3, r2
 8028212:	7001      	strb	r1, [r0, #0]
 8028214:	7859      	ldrb	r1, [r3, #1]
 8028216:	7041      	strb	r1, [r0, #1]
 8028218:	7899      	ldrb	r1, [r3, #2]
 802821a:	4b19      	ldr	r3, [pc, #100]	@ (8028280 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802821c:	7081      	strb	r1, [r0, #2]
 802821e:	881b      	ldrh	r3, [r3, #0]
 8028220:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8028224:	eba3 0308 	sub.w	r3, r3, r8
 8028228:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802822c:	3303      	adds	r3, #3
 802822e:	4421      	add	r1, r4
 8028230:	4418      	add	r0, r3
 8028232:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8028236:	4586      	cmp	lr, r0
 8028238:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 802823c:	f67f af01 	bls.w	8028042 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028240:	9b01      	ldr	r3, [sp, #4]
 8028242:	2b00      	cmp	r3, #0
 8028244:	d18c      	bne.n	8028160 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x32c>
 8028246:	46d4      	mov	ip, sl
 8028248:	4646      	mov	r6, r8
 802824a:	e79c      	b.n	8028186 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x352>
 802824c:	4b0c      	ldr	r3, [pc, #48]	@ (8028280 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802824e:	9c02      	ldr	r4, [sp, #8]
 8028250:	8819      	ldrh	r1, [r3, #0]
 8028252:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8028256:	eba1 0108 	sub.w	r1, r1, r8
 802825a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802825e:	4423      	add	r3, r4
 8028260:	4408      	add	r0, r1
 8028262:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028266:	4586      	cmp	lr, r0
 8028268:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 802826c:	f63f af75 	bhi.w	802815a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x326>
 8028270:	e6e7      	b.n	8028042 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028272:	4b04      	ldr	r3, [pc, #16]	@ (8028284 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028274:	4a04      	ldr	r2, [pc, #16]	@ (8028288 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 8028276:	f640 31da 	movw	r1, #3034	@ 0xbda
 802827a:	4804      	ldr	r0, [pc, #16]	@ (802828c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 802827c:	f00a f944 	bl	8032508 <__assert_func>
 8028280:	20082f02 	.word	0x20082f02
 8028284:	080363b4 	.word	0x080363b4
 8028288:	08037318 	.word	0x08037318
 802828c:	080362f0 	.word	0x080362f0

08028290 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028294:	b08d      	sub	sp, #52	@ 0x34
 8028296:	7814      	ldrb	r4, [r2, #0]
 8028298:	461d      	mov	r5, r3
 802829a:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
 802829e:	2c01      	cmp	r4, #1
 80282a0:	9204      	str	r2, [sp, #16]
 80282a2:	9302      	str	r3, [sp, #8]
 80282a4:	f040 8133 	bne.w	802850e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 80282a8:	b913      	cbnz	r3, 80282b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20>
 80282aa:	b00d      	add	sp, #52	@ 0x34
 80282ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282b0:	6828      	ldr	r0, [r5, #0]
 80282b2:	4689      	mov	r9, r1
 80282b4:	6869      	ldr	r1, [r5, #4]
 80282b6:	ab08      	add	r3, sp, #32
 80282b8:	c303      	stmia	r3!, {r0, r1}
 80282ba:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80282bc:	6818      	ldr	r0, [r3, #0]
 80282be:	6859      	ldr	r1, [r3, #4]
 80282c0:	ab0a      	add	r3, sp, #40	@ 0x28
 80282c2:	c303      	stmia	r3!, {r0, r1}
 80282c4:	a808      	add	r0, sp, #32
 80282c6:	f7e4 fd43 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80282ca:	4629      	mov	r1, r5
 80282cc:	a80a      	add	r0, sp, #40	@ 0x28
 80282ce:	f7e4 fd67 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80282d2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80282d6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80282da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80282de:	bfdd      	ittte	le
 80282e0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 80282e4:	b29a      	uxthle	r2, r3
 80282e6:	fb94 f4f2 	sdivle	r4, r4, r2
 80282ea:	b29a      	uxthgt	r2, r3
 80282ec:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80282f0:	fb93 f0f4 	sdiv	r0, r3, r4
 80282f4:	b286      	uxth	r6, r0
 80282f6:	fb04 3816 	mls	r8, r4, r6, r3
 80282fa:	fb18 1802 	smlabb	r8, r8, r2, r1
 80282fe:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8028302:	fa1f f888 	uxth.w	r8, r8
 8028306:	4422      	add	r2, r4
 8028308:	3a01      	subs	r2, #1
 802830a:	fb92 f4f4 	sdiv	r4, r2, r4
 802830e:	2e00      	cmp	r6, #0
 8028310:	f040 80f7 	bne.w	8028502 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x272>
 8028314:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8028318:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 802831c:	4413      	add	r3, r2
 802831e:	4a7f      	ldr	r2, [pc, #508]	@ (802851c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8028320:	4401      	add	r1, r0
 8028322:	6810      	ldr	r0, [r2, #0]
 8028324:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8028328:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 802832c:	4616      	mov	r6, r2
 802832e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8028332:	6803      	ldr	r3, [r0, #0]
 8028334:	9207      	str	r2, [sp, #28]
 8028336:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8028338:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 802833c:	4798      	blx	r3
 802833e:	f1b8 0f00 	cmp.w	r8, #0
 8028342:	bf0c      	ite	eq
 8028344:	4633      	moveq	r3, r6
 8028346:	2300      	movne	r3, #0
 8028348:	4975      	ldr	r1, [pc, #468]	@ (8028520 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 802834a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802834e:	8809      	ldrh	r1, [r1, #0]
 8028350:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8028354:	fb01 f505 	mul.w	r5, r1, r5
 8028358:	fb01 6202 	mla	r2, r1, r2, r6
 802835c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028360:	4410      	add	r0, r2
 8028362:	b2a4      	uxth	r4, r4
 8028364:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8028368:	1942      	adds	r2, r0, r5
 802836a:	00a4      	lsls	r4, r4, #2
 802836c:	1d21      	adds	r1, r4, #4
 802836e:	4290      	cmp	r0, r2
 8028370:	9200      	str	r2, [sp, #0]
 8028372:	9106      	str	r1, [sp, #24]
 8028374:	fa1f fa83 	uxth.w	sl, r3
 8028378:	d225      	bcs.n	80283c6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x136>
 802837a:	2500      	movs	r5, #0
 802837c:	4686      	mov	lr, r0
 802837e:	4640      	mov	r0, r8
 8028380:	9b02      	ldr	r3, [sp, #8]
 8028382:	9501      	str	r5, [sp, #4]
 8028384:	f1c3 07ff 	rsb	r7, r3, #255	@ 0xff
 8028388:	b2bf      	uxth	r7, r7
 802838a:	fa1f fc83 	uxth.w	ip, r3
 802838e:	b985      	cbnz	r5, 80283b2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8028390:	f899 2000 	ldrb.w	r2, [r9]
 8028394:	0995      	lsrs	r5, r2, #6
 8028396:	1e6b      	subs	r3, r5, #1
 8028398:	2b02      	cmp	r3, #2
 802839a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802839e:	bf88      	it	hi
 80283a0:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 80283a4:	9201      	str	r2, [sp, #4]
 80283a6:	bf9a      	itte	ls
 80283a8:	f109 0901 	addls.w	r9, r9, #1
 80283ac:	b2ad      	uxthls	r5, r5
 80283ae:	f109 0902 	addhi.w	r9, r9, #2
 80283b2:	b180      	cbz	r0, 80283d6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 80283b4:	4285      	cmp	r5, r0
 80283b6:	f080 809e 	bcs.w	80284f6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 80283ba:	1b40      	subs	r0, r0, r5
 80283bc:	2500      	movs	r5, #0
 80283be:	b280      	uxth	r0, r0
 80283c0:	9b00      	ldr	r3, [sp, #0]
 80283c2:	4573      	cmp	r3, lr
 80283c4:	d8e3      	bhi.n	802838e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 80283c6:	4b55      	ldr	r3, [pc, #340]	@ (802851c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 80283c8:	6818      	ldr	r0, [r3, #0]
 80283ca:	6803      	ldr	r3, [r0, #0]
 80283cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80283ce:	4798      	blx	r3
 80283d0:	b00d      	add	sp, #52	@ 0x34
 80283d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80283d6:	2303      	movs	r3, #3
 80283d8:	4619      	mov	r1, r3
 80283da:	9a06      	ldr	r2, [sp, #24]
 80283dc:	9b01      	ldr	r3, [sp, #4]
 80283de:	4555      	cmp	r5, sl
 80283e0:	fb11 2403 	smlabb	r4, r1, r3, r2
 80283e4:	9b04      	ldr	r3, [sp, #16]
 80283e6:	441c      	add	r4, r3
 80283e8:	d360      	bcc.n	80284ac <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80283ea:	eba5 030a 	sub.w	r3, r5, sl
 80283ee:	b29b      	uxth	r3, r3
 80283f0:	9303      	str	r3, [sp, #12]
 80283f2:	9b02      	ldr	r3, [sp, #8]
 80283f4:	4656      	mov	r6, sl
 80283f6:	2bff      	cmp	r3, #255	@ 0xff
 80283f8:	9005      	str	r0, [sp, #20]
 80283fa:	d060      	beq.n	80284be <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 80283fc:	2e00      	cmp	r6, #0
 80283fe:	d03b      	beq.n	8028478 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028400:	3e01      	subs	r6, #1
 8028402:	b2b6      	uxth	r6, r6
 8028404:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 8028408:	f10e 0806 	add.w	r8, lr, #6
 802840c:	4498      	add	r8, r3
 802840e:	f10e 0103 	add.w	r1, lr, #3
 8028412:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 8028416:	7823      	ldrb	r3, [r4, #0]
 8028418:	fb12 f207 	smulbb	r2, r2, r7
 802841c:	fb03 230c 	mla	r3, r3, ip, r2
 8028420:	b29b      	uxth	r3, r3
 8028422:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 8028426:	f103 0b01 	add.w	fp, r3, #1
 802842a:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 802842e:	121b      	asrs	r3, r3, #8
 8028430:	fb12 fb07 	smulbb	fp, r2, r7
 8028434:	f801 3c03 	strb.w	r3, [r1, #-3]
 8028438:	7862      	ldrb	r2, [r4, #1]
 802843a:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 802843e:	fb02 b20c 	mla	r2, r2, ip, fp
 8028442:	b292      	uxth	r2, r2
 8028444:	f102 0b01 	add.w	fp, r2, #1
 8028448:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802844c:	1212      	asrs	r2, r2, #8
 802844e:	fb13 fb07 	smulbb	fp, r3, r7
 8028452:	f801 2c02 	strb.w	r2, [r1, #-2]
 8028456:	78a3      	ldrb	r3, [r4, #2]
 8028458:	3103      	adds	r1, #3
 802845a:	fb03 b30c 	mla	r3, r3, ip, fp
 802845e:	b29b      	uxth	r3, r3
 8028460:	1c5a      	adds	r2, r3, #1
 8028462:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028466:	121b      	asrs	r3, r3, #8
 8028468:	f801 3c04 	strb.w	r3, [r1, #-4]
 802846c:	4541      	cmp	r1, r8
 802846e:	d1d0      	bne.n	8028412 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8028470:	3601      	adds	r6, #1
 8028472:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8028476:	44b6      	add	lr, r6
 8028478:	4555      	cmp	r5, sl
 802847a:	d313      	bcc.n	80284a4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>
 802847c:	9a07      	ldr	r2, [sp, #28]
 802847e:	4b28      	ldr	r3, [pc, #160]	@ (8028520 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8028480:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 8028484:	fa1f fa82 	uxth.w	sl, r2
 8028488:	881b      	ldrh	r3, [r3, #0]
 802848a:	eba0 000a 	sub.w	r0, r0, sl
 802848e:	b280      	uxth	r0, r0
 8028490:	1a9b      	subs	r3, r3, r2
 8028492:	2800      	cmp	r0, #0
 8028494:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028498:	9d03      	ldr	r5, [sp, #12]
 802849a:	bf18      	it	ne
 802849c:	f04f 0a00 	movne.w	sl, #0
 80284a0:	449e      	add	lr, r3
 80284a2:	e78d      	b.n	80283c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 80284a4:	9d03      	ldr	r5, [sp, #12]
 80284a6:	f8dd a014 	ldr.w	sl, [sp, #20]
 80284aa:	e789      	b.n	80283c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 80284ac:	ebaa 0305 	sub.w	r3, sl, r5
 80284b0:	b29b      	uxth	r3, r3
 80284b2:	9305      	str	r3, [sp, #20]
 80284b4:	9b02      	ldr	r3, [sp, #8]
 80284b6:	462e      	mov	r6, r5
 80284b8:	2bff      	cmp	r3, #255	@ 0xff
 80284ba:	9003      	str	r0, [sp, #12]
 80284bc:	d19e      	bne.n	80283fc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 80284be:	2e00      	cmp	r6, #0
 80284c0:	d0da      	beq.n	8028478 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80284c2:	3e01      	subs	r6, #1
 80284c4:	b2b2      	uxth	r2, r6
 80284c6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80284ca:	f10e 0606 	add.w	r6, lr, #6
 80284ce:	441e      	add	r6, r3
 80284d0:	f10e 0303 	add.w	r3, lr, #3
 80284d4:	7821      	ldrb	r1, [r4, #0]
 80284d6:	3303      	adds	r3, #3
 80284d8:	f803 1c06 	strb.w	r1, [r3, #-6]
 80284dc:	7861      	ldrb	r1, [r4, #1]
 80284de:	f803 1c05 	strb.w	r1, [r3, #-5]
 80284e2:	78a1      	ldrb	r1, [r4, #2]
 80284e4:	f803 1c04 	strb.w	r1, [r3, #-4]
 80284e8:	429e      	cmp	r6, r3
 80284ea:	d1f3      	bne.n	80284d4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>
 80284ec:	3201      	adds	r2, #1
 80284ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80284f2:	4496      	add	lr, r2
 80284f4:	e7c0      	b.n	8028478 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80284f6:	1a2d      	subs	r5, r5, r0
 80284f8:	b2ad      	uxth	r5, r5
 80284fa:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 80284fe:	2000      	movs	r0, #0
 8028500:	e75e      	b.n	80283c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028502:	9a04      	ldr	r2, [sp, #16]
 8028504:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8028508:	ba12      	rev	r2, r2
 802850a:	4491      	add	r9, r2
 802850c:	e702      	b.n	8028314 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x84>
 802850e:	4b05      	ldr	r3, [pc, #20]	@ (8028524 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 8028510:	4a05      	ldr	r2, [pc, #20]	@ (8028528 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 8028512:	f44f 6146 	mov.w	r1, #3168	@ 0xc60
 8028516:	4805      	ldr	r0, [pc, #20]	@ (802852c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 8028518:	f009 fff6 	bl	8032508 <__assert_func>
 802851c:	20082f08 	.word	0x20082f08
 8028520:	20082f02 	.word	0x20082f02
 8028524:	080363b4 	.word	0x080363b4
 8028528:	080374bc 	.word	0x080374bc
 802852c:	080362f0 	.word	0x080362f0

08028530 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028534:	b09b      	sub	sp, #108	@ 0x6c
 8028536:	7814      	ldrb	r4, [r2, #0]
 8028538:	461d      	mov	r5, r3
 802853a:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 802853e:	2c01      	cmp	r4, #1
 8028540:	9210      	str	r2, [sp, #64]	@ 0x40
 8028542:	9112      	str	r1, [sp, #72]	@ 0x48
 8028544:	930d      	str	r3, [sp, #52]	@ 0x34
 8028546:	f040 820f 	bne.w	8028968 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 802854a:	b913      	cbnz	r3, 8028552 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 802854c:	b01b      	add	sp, #108	@ 0x6c
 802854e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028552:	6869      	ldr	r1, [r5, #4]
 8028554:	4681      	mov	r9, r0
 8028556:	6828      	ldr	r0, [r5, #0]
 8028558:	ab16      	add	r3, sp, #88	@ 0x58
 802855a:	c303      	stmia	r3!, {r0, r1}
 802855c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802855e:	6818      	ldr	r0, [r3, #0]
 8028560:	6859      	ldr	r1, [r3, #4]
 8028562:	ab18      	add	r3, sp, #96	@ 0x60
 8028564:	c303      	stmia	r3!, {r0, r1}
 8028566:	a816      	add	r0, sp, #88	@ 0x58
 8028568:	f7e4 fbf2 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802856c:	4629      	mov	r1, r5
 802856e:	a818      	add	r0, sp, #96	@ 0x60
 8028570:	f7e4 fc16 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028574:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 8028578:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 802857c:	f340 814e 	ble.w	802881c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 8028580:	fa1f f08a 	uxth.w	r0, sl
 8028584:	9414      	str	r4, [sp, #80]	@ 0x50
 8028586:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	@ 0x62
 802858a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 802858e:	fb93 f1f4 	sdiv	r1, r3, r4
 8028592:	4422      	add	r2, r4
 8028594:	3a01      	subs	r2, #1
 8028596:	fb92 f2f4 	sdiv	r2, r2, r4
 802859a:	b289      	uxth	r1, r1
 802859c:	fb04 3411 	mls	r4, r4, r1, r3
 80285a0:	9113      	str	r1, [sp, #76]	@ 0x4c
 80285a2:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 80285a6:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 80285aa:	fb14 1a00 	smlabb	sl, r4, r0, r1
 80285ae:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 80285b2:	48bc      	ldr	r0, [pc, #752]	@ (80288a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 80285b4:	4431      	add	r1, r6
 80285b6:	442b      	add	r3, r5
 80285b8:	6800      	ldr	r0, [r0, #0]
 80285ba:	f8ad 1060 	strh.w	r1, [sp, #96]	@ 0x60
 80285be:	f8ad 3062 	strh.w	r3, [sp, #98]	@ 0x62
 80285c2:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 80285c6:	6803      	ldr	r3, [r0, #0]
 80285c8:	3201      	adds	r2, #1
 80285ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80285cc:	970a      	str	r7, [sp, #40]	@ 0x28
 80285ce:	b294      	uxth	r4, r2
 80285d0:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 80285d4:	4798      	blx	r3
 80285d6:	2200      	movs	r2, #0
 80285d8:	fa1f f68a 	uxth.w	r6, sl
 80285dc:	2e00      	cmp	r6, #0
 80285de:	bf0c      	ite	eq
 80285e0:	463b      	moveq	r3, r7
 80285e2:	2300      	movne	r3, #0
 80285e4:	49b0      	ldr	r1, [pc, #704]	@ (80288a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 80285e6:	9602      	str	r6, [sp, #8]
 80285e8:	8809      	ldrh	r1, [r1, #0]
 80285ea:	9211      	str	r2, [sp, #68]	@ 0x44
 80285ec:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 80285f0:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 80285f4:	fb01 f505 	mul.w	r5, r1, r5
 80285f8:	fb01 6202 	mla	r2, r1, r2, r6
 80285fc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80285fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028602:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8028606:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802860a:	1881      	adds	r1, r0, r2
 802860c:	9101      	str	r1, [sp, #4]
 802860e:	fa1f fe83 	uxth.w	lr, r3
 8028612:	4429      	add	r1, r5
 8028614:	f109 030e 	add.w	r3, r9, #14
 8028618:	9315      	str	r3, [sp, #84]	@ 0x54
 802861a:	460b      	mov	r3, r1
 802861c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802861e:	464f      	mov	r7, r9
 8028620:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8028624:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028628:	f104 0c04 	add.w	ip, r4, #4
 802862c:	9106      	str	r1, [sp, #24]
 802862e:	fa1f f882 	uxth.w	r8, r2
 8028632:	9a01      	ldr	r2, [sp, #4]
 8028634:	4293      	cmp	r3, r2
 8028636:	f240 8101 	bls.w	802883c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 802863a:	2200      	movs	r2, #0
 802863c:	2601      	movs	r6, #1
 802863e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8028640:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8028642:	920c      	str	r2, [sp, #48]	@ 0x30
 8028644:	fa10 f481 	uxtah	r4, r0, r1
 8028648:	00a4      	lsls	r4, r4, #2
 802864a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802864c:	3404      	adds	r4, #4
 802864e:	4421      	add	r1, r4
 8028650:	788a      	ldrb	r2, [r1, #2]
 8028652:	784d      	ldrb	r5, [r1, #1]
 8028654:	0212      	lsls	r2, r2, #8
 8028656:	78c9      	ldrb	r1, [r1, #3]
 8028658:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 802865c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802865e:	4308      	orrs	r0, r1
 8028660:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 8028664:	1829      	adds	r1, r5, r0
 8028666:	5c28      	ldrb	r0, [r5, r0]
 8028668:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802866a:	fbb9 f3f3 	udiv	r3, r9, r3
 802866e:	5d2c      	ldrb	r4, [r5, r4]
 8028670:	784a      	ldrb	r2, [r1, #1]
 8028672:	4431      	add	r1, r6
 8028674:	940e      	str	r4, [sp, #56]	@ 0x38
 8028676:	9104      	str	r1, [sp, #16]
 8028678:	f04f 0a00 	mov.w	sl, #0
 802867c:	19a1      	adds	r1, r4, r6
 802867e:	4634      	mov	r4, r6
 8028680:	0212      	lsls	r2, r2, #8
 8028682:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028686:	4302      	orrs	r2, r0
 8028688:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802868a:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 802868e:	1ac3      	subs	r3, r0, r3
 8028690:	b29b      	uxth	r3, r3
 8028692:	b290      	uxth	r0, r2
 8028694:	9609      	str	r6, [sp, #36]	@ 0x24
 8028696:	737a      	strb	r2, [r7, #13]
 8028698:	9008      	str	r0, [sp, #32]
 802869a:	9105      	str	r1, [sp, #20]
 802869c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802869e:	9603      	str	r6, [sp, #12]
 80286a0:	f1b9 0f00 	cmp.w	r9, #0
 80286a4:	d035      	beq.n	8028712 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 80286a6:	45a1      	cmp	r9, r4
 80286a8:	f240 8100 	bls.w	80288ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 80286ac:	9b06      	ldr	r3, [sp, #24]
 80286ae:	9a01      	ldr	r2, [sp, #4]
 80286b0:	eba9 0904 	sub.w	r9, r9, r4
 80286b4:	4293      	cmp	r3, r2
 80286b6:	fa1f f989 	uxth.w	r9, r9
 80286ba:	f240 80bf 	bls.w	802883c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80286be:	9804      	ldr	r0, [sp, #16]
 80286c0:	9c03      	ldr	r4, [sp, #12]
 80286c2:	7842      	ldrb	r2, [r0, #1]
 80286c4:	f1c4 0107 	rsb	r1, r4, #7
 80286c8:	7803      	ldrb	r3, [r0, #0]
 80286ca:	408a      	lsls	r2, r1
 80286cc:	0052      	lsls	r2, r2, #1
 80286ce:	4123      	asrs	r3, r4
 80286d0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80286d4:	1c61      	adds	r1, r4, #1
 80286d6:	b2db      	uxtb	r3, r3
 80286d8:	4313      	orrs	r3, r2
 80286da:	b2ca      	uxtb	r2, r1
 80286dc:	4611      	mov	r1, r2
 80286de:	2908      	cmp	r1, #8
 80286e0:	9203      	str	r2, [sp, #12]
 80286e2:	b29a      	uxth	r2, r3
 80286e4:	f000 810b 	beq.w	80288fe <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ce>
 80286e8:	3001      	adds	r0, #1
 80286ea:	9004      	str	r0, [sp, #16]
 80286ec:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80286ee:	4291      	cmp	r1, r2
 80286f0:	f0c0 80e7 	bcc.w	80288c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x392>
 80286f4:	2401      	movs	r4, #1
 80286f6:	b2db      	uxtb	r3, r3
 80286f8:	737b      	strb	r3, [r7, #13]
 80286fa:	9905      	ldr	r1, [sp, #20]
 80286fc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8028700:	f0c0 8103 	bcc.w	802890a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8028704:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8028708:	f04f 0a00 	mov.w	sl, #0
 802870c:	f1b9 0f00 	cmp.w	r9, #0
 8028710:	d1c9      	bne.n	80286a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8028712:	4574      	cmp	r4, lr
 8028714:	f0c0 809a 	bcc.w	802884c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8028718:	eba4 030e 	sub.w	r3, r4, lr
 802871c:	b29b      	uxth	r3, r3
 802871e:	9307      	str	r3, [sp, #28]
 8028720:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028722:	f8cd e008 	str.w	lr, [sp, #8]
 8028726:	2bff      	cmp	r3, #255	@ 0xff
 8028728:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 802872c:	9b02      	ldr	r3, [sp, #8]
 802872e:	f000 8099 	beq.w	8028864 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8028732:	2b00      	cmp	r3, #0
 8028734:	d048      	beq.n	80287c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8028736:	eb0a 0603 	add.w	r6, sl, r3
 802873a:	9b01      	ldr	r3, [sp, #4]
 802873c:	b2b6      	uxth	r6, r6
 802873e:	1cd8      	adds	r0, r3, #3
 8028740:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 8028744:	eb07 030a 	add.w	r3, r7, sl
 8028748:	7b5b      	ldrb	r3, [r3, #13]
 802874a:	fb11 f208 	smulbb	r2, r1, r8
 802874e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028752:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028756:	4463      	add	r3, ip
 8028758:	fb01 2105 	mla	r1, r1, r5, r2
 802875c:	b289      	uxth	r1, r1
 802875e:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 8028762:	f101 0b01 	add.w	fp, r1, #1
 8028766:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802876a:	1209      	asrs	r1, r1, #8
 802876c:	fb12 fb08 	smulbb	fp, r2, r8
 8028770:	f800 1c03 	strb.w	r1, [r0, #-3]
 8028774:	785a      	ldrb	r2, [r3, #1]
 8028776:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 802877a:	fb02 b205 	mla	r2, r2, r5, fp
 802877e:	b292      	uxth	r2, r2
 8028780:	f102 0b01 	add.w	fp, r2, #1
 8028784:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028788:	1212      	asrs	r2, r2, #8
 802878a:	fb11 f108 	smulbb	r1, r1, r8
 802878e:	f800 2c02 	strb.w	r2, [r0, #-2]
 8028792:	789b      	ldrb	r3, [r3, #2]
 8028794:	f10a 0a01 	add.w	sl, sl, #1
 8028798:	fb03 1305 	mla	r3, r3, r5, r1
 802879c:	b29b      	uxth	r3, r3
 802879e:	1c5a      	adds	r2, r3, #1
 80287a0:	fa1f fa8a 	uxth.w	sl, sl
 80287a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80287a8:	121b      	asrs	r3, r3, #8
 80287aa:	45b2      	cmp	sl, r6
 80287ac:	f800 3c01 	strb.w	r3, [r0, #-1]
 80287b0:	f100 0003 	add.w	r0, r0, #3
 80287b4:	d1c4      	bne.n	8028740 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>
 80287b6:	9b02      	ldr	r3, [sp, #8]
 80287b8:	9a01      	ldr	r2, [sp, #4]
 80287ba:	3b01      	subs	r3, #1
 80287bc:	b29b      	uxth	r3, r3
 80287be:	3301      	adds	r3, #1
 80287c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80287c4:	441a      	add	r2, r3
 80287c6:	9201      	str	r2, [sp, #4]
 80287c8:	4574      	cmp	r4, lr
 80287ca:	d330      	bcc.n	802882e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 80287cc:	4b36      	ldr	r3, [pc, #216]	@ (80288a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 80287ce:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80287d0:	881b      	ldrh	r3, [r3, #0]
 80287d2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80287d4:	1a5b      	subs	r3, r3, r1
 80287d6:	9901      	ldr	r1, [sp, #4]
 80287d8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80287dc:	4419      	add	r1, r3
 80287de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80287e0:	3201      	adds	r2, #1
 80287e2:	429a      	cmp	r2, r3
 80287e4:	920c      	str	r2, [sp, #48]	@ 0x30
 80287e6:	9101      	str	r1, [sp, #4]
 80287e8:	f000 80ab 	beq.w	8028942 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 80287ec:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 80287f0:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 80287f4:	9c07      	ldr	r4, [sp, #28]
 80287f6:	eba9 090e 	sub.w	r9, r9, lr
 80287fa:	fa1f f989 	uxth.w	r9, r9
 80287fe:	f1b9 0f00 	cmp.w	r9, #0
 8028802:	bf14      	ite	ne
 8028804:	f04f 0e00 	movne.w	lr, #0
 8028808:	f04f 0900 	moveq.w	r9, #0
 802880c:	9b06      	ldr	r3, [sp, #24]
 802880e:	9a01      	ldr	r2, [sp, #4]
 8028810:	4293      	cmp	r3, r2
 8028812:	d913      	bls.n	802883c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8028814:	2c00      	cmp	r4, #0
 8028816:	f47f af43 	bne.w	80286a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 802881a:	e750      	b.n	80286be <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 802881c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8028820:	fa1f f08a 	uxth.w	r0, sl
 8028824:	fb94 f4f0 	sdiv	r4, r4, r0
 8028828:	b2a3      	uxth	r3, r4
 802882a:	9314      	str	r3, [sp, #80]	@ 0x50
 802882c:	e6ab      	b.n	8028586 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 802882e:	9b06      	ldr	r3, [sp, #24]
 8028830:	9a01      	ldr	r2, [sp, #4]
 8028832:	9c07      	ldr	r4, [sp, #28]
 8028834:	4293      	cmp	r3, r2
 8028836:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 802883a:	d8eb      	bhi.n	8028814 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 802883c:	4b19      	ldr	r3, [pc, #100]	@ (80288a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 802883e:	6818      	ldr	r0, [r3, #0]
 8028840:	6803      	ldr	r3, [r0, #0]
 8028842:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028844:	4798      	blx	r3
 8028846:	b01b      	add	sp, #108	@ 0x6c
 8028848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802884c:	ebae 0304 	sub.w	r3, lr, r4
 8028850:	b29b      	uxth	r3, r3
 8028852:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028854:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028856:	9402      	str	r4, [sp, #8]
 8028858:	2bff      	cmp	r3, #255	@ 0xff
 802885a:	f8cd 901c 	str.w	r9, [sp, #28]
 802885e:	9b02      	ldr	r3, [sp, #8]
 8028860:	f47f af67 	bne.w	8028732 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8028864:	2b00      	cmp	r3, #0
 8028866:	d0af      	beq.n	80287c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8028868:	eb0a 0003 	add.w	r0, sl, r3
 802886c:	9b01      	ldr	r3, [sp, #4]
 802886e:	b280      	uxth	r0, r0
 8028870:	1cda      	adds	r2, r3, #3
 8028872:	eb07 030a 	add.w	r3, r7, sl
 8028876:	7b5b      	ldrb	r3, [r3, #13]
 8028878:	f10a 0a01 	add.w	sl, sl, #1
 802887c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028880:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028884:	4463      	add	r3, ip
 8028886:	f802 1c03 	strb.w	r1, [r2, #-3]
 802888a:	7859      	ldrb	r1, [r3, #1]
 802888c:	fa1f fa8a 	uxth.w	sl, sl
 8028890:	f802 1c02 	strb.w	r1, [r2, #-2]
 8028894:	789b      	ldrb	r3, [r3, #2]
 8028896:	4582      	cmp	sl, r0
 8028898:	f802 3c01 	strb.w	r3, [r2, #-1]
 802889c:	f102 0203 	add.w	r2, r2, #3
 80288a0:	d1e7      	bne.n	8028872 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x342>
 80288a2:	e788      	b.n	80287b6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x286>
 80288a4:	20082f08 	.word	0x20082f08
 80288a8:	20082f02 	.word	0x20082f02
 80288ac:	eba4 0409 	sub.w	r4, r4, r9
 80288b0:	44ca      	add	sl, r9
 80288b2:	b2a4      	uxth	r4, r4
 80288b4:	fa1f fa8a 	uxth.w	sl, sl
 80288b8:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 80288bc:	f04f 0900 	mov.w	r9, #0
 80288c0:	e7a4      	b.n	802880c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 80288c2:	9b05      	ldr	r3, [sp, #20]
 80288c4:	429a      	cmp	r2, r3
 80288c6:	d323      	bcc.n	8028910 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e0>
 80288c8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80288ca:	7b79      	ldrb	r1, [r7, #13]
 80288cc:	183b      	adds	r3, r7, r0
 80288ce:	7359      	strb	r1, [r3, #13]
 80288d0:	7b7b      	ldrb	r3, [r7, #13]
 80288d2:	1c41      	adds	r1, r0, #1
 80288d4:	b28c      	uxth	r4, r1
 80288d6:	9e05      	ldr	r6, [sp, #20]
 80288d8:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80288dc:	f106 0a01 	add.w	sl, r6, #1
 80288e0:	9e08      	ldr	r6, [sp, #32]
 80288e2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 80288e6:	fa1f f38a 	uxth.w	r3, sl
 80288ea:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 80288ee:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 80288f2:	9305      	str	r3, [sp, #20]
 80288f4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 80288f8:	f04f 0a00 	mov.w	sl, #0
 80288fc:	e6d0      	b.n	80286a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 80288fe:	2100      	movs	r1, #0
 8028900:	9103      	str	r1, [sp, #12]
 8028902:	9904      	ldr	r1, [sp, #16]
 8028904:	3102      	adds	r1, #2
 8028906:	9104      	str	r1, [sp, #16]
 8028908:	e6f0      	b.n	80286ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1bc>
 802890a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802890c:	3101      	adds	r1, #1
 802890e:	e7e2      	b.n	80288d6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3a6>
 8028910:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 8028914:	f893 404f 	ldrb.w	r4, [r3, #79]	@ 0x4f
 8028918:	4613      	mov	r3, r2
 802891a:	2c01      	cmp	r4, #1
 802891c:	d90d      	bls.n	802893a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 802891e:	f104 010d 	add.w	r1, r4, #13
 8028922:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8028924:	4439      	add	r1, r7
 8028926:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 802892a:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802892e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8028932:	428e      	cmp	r6, r1
 8028934:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8028938:	d1f5      	bne.n	8028926 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 802893a:	b2db      	uxtb	r3, r3
 802893c:	737b      	strb	r3, [r7, #13]
 802893e:	b2a4      	uxth	r4, r4
 8028940:	e6db      	b.n	80286fa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8028942:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8028946:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 802894a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802894c:	1a9b      	subs	r3, r3, r2
 802894e:	fa1f f983 	uxth.w	r9, r3
 8028952:	f1b9 0f00 	cmp.w	r9, #0
 8028956:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028958:	bf18      	it	ne
 802895a:	2300      	movne	r3, #0
 802895c:	3101      	adds	r1, #1
 802895e:	fa1f fe83 	uxth.w	lr, r3
 8028962:	9111      	str	r1, [sp, #68]	@ 0x44
 8028964:	9b06      	ldr	r3, [sp, #24]
 8028966:	e664      	b.n	8028632 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8028968:	4b03      	ldr	r3, [pc, #12]	@ (8028978 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 802896a:	4a04      	ldr	r2, [pc, #16]	@ (802897c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802896c:	f640 41f6 	movw	r1, #3318	@ 0xcf6
 8028970:	4803      	ldr	r0, [pc, #12]	@ (8028980 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028972:	f009 fdc9 	bl	8032508 <__assert_func>
 8028976:	bf00      	nop
 8028978:	080363b4 	.word	0x080363b4
 802897c:	08037814 	.word	0x08037814
 8028980:	080362f0 	.word	0x080362f0

08028984 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028988:	4690      	mov	r8, r2
 802898a:	8812      	ldrh	r2, [r2, #0]
 802898c:	b095      	sub	sp, #84	@ 0x54
 802898e:	2a01      	cmp	r2, #1
 8028990:	461c      	mov	r4, r3
 8028992:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8028996:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028998:	f040 8107 	bne.w	8028baa <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 802899c:	468a      	mov	sl, r1
 802899e:	6820      	ldr	r0, [r4, #0]
 80289a0:	6861      	ldr	r1, [r4, #4]
 80289a2:	aa10      	add	r2, sp, #64	@ 0x40
 80289a4:	c203      	stmia	r2!, {r0, r1}
 80289a6:	6818      	ldr	r0, [r3, #0]
 80289a8:	6859      	ldr	r1, [r3, #4]
 80289aa:	aa12      	add	r2, sp, #72	@ 0x48
 80289ac:	c203      	stmia	r2!, {r0, r1}
 80289ae:	a810      	add	r0, sp, #64	@ 0x40
 80289b0:	f7e4 f9ce 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80289b4:	4621      	mov	r1, r4
 80289b6:	a812      	add	r0, sp, #72	@ 0x48
 80289b8:	f7e4 f9f2 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80289bc:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 80289c0:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 80289c4:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 80289c8:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80289cc:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 80289d0:	4879      	ldr	r0, [pc, #484]	@ (8028bb8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 80289d2:	fb11 4105 	smlabb	r1, r1, r5, r4
 80289d6:	4422      	add	r2, r4
 80289d8:	442b      	add	r3, r5
 80289da:	6800      	ldr	r0, [r0, #0]
 80289dc:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 80289e0:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 80289e4:	6802      	ldr	r2, [r0, #0]
 80289e6:	448a      	add	sl, r1
 80289e8:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 80289ec:	4c73      	ldr	r4, [pc, #460]	@ (8028bbc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 80289ee:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80289f2:	910c      	str	r1, [sp, #48]	@ 0x30
 80289f4:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 80289f8:	42a3      	cmp	r3, r4
 80289fa:	910e      	str	r1, [sp, #56]	@ 0x38
 80289fc:	f040 80a2 	bne.w	8028b44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 8028a00:	6841      	ldr	r1, [r0, #4]
 8028a02:	4c6f      	ldr	r4, [pc, #444]	@ (8028bc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8028a04:	680b      	ldr	r3, [r1, #0]
 8028a06:	699b      	ldr	r3, [r3, #24]
 8028a08:	42a3      	cmp	r3, r4
 8028a0a:	f040 80c1 	bne.w	8028b90 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8028a0e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8028a10:	4798      	blx	r3
 8028a12:	4b6c      	ldr	r3, [pc, #432]	@ (8028bc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028a14:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8028a18:	881b      	ldrh	r3, [r3, #0]
 8028a1a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8028a1e:	fb01 2303 	mla	r3, r1, r3, r2
 8028a22:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028a26:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028a28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028a2a:	2b00      	cmp	r3, #0
 8028a2c:	f340 8082 	ble.w	8028b34 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8028a30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028a32:	2b00      	cmp	r3, #0
 8028a34:	dd7e      	ble.n	8028b34 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8028a36:	2200      	movs	r2, #0
 8028a38:	f04f 0e03 	mov.w	lr, #3
 8028a3c:	f04f 0c04 	mov.w	ip, #4
 8028a40:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 8028a44:	009b      	lsls	r3, r3, #2
 8028a46:	920d      	str	r2, [sp, #52]	@ 0x34
 8028a48:	b2bf      	uxth	r7, r7
 8028a4a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8028a4c:	fa1f f289 	uxth.w	r2, r9
 8028a50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8028a52:	4655      	mov	r5, sl
 8028a54:	1d18      	adds	r0, r3, #4
 8028a56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028a58:	eb0a 0603 	add.w	r6, sl, r3
 8028a5c:	e03e      	b.n	8028adc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028a5e:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 8028a62:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 8028a66:	fb13 f307 	smulbb	r3, r3, r7
 8028a6a:	fb0b 3302 	mla	r3, fp, r2, r3
 8028a6e:	b29b      	uxth	r3, r3
 8028a70:	f103 0b01 	add.w	fp, r3, #1
 8028a74:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 8028a78:	121b      	asrs	r3, r3, #8
 8028a7a:	fb14 f407 	smulbb	r4, r4, r7
 8028a7e:	f800 3c04 	strb.w	r3, [r0, #-4]
 8028a82:	784b      	ldrb	r3, [r1, #1]
 8028a84:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 8028a88:	fb03 4302 	mla	r3, r3, r2, r4
 8028a8c:	b29b      	uxth	r3, r3
 8028a8e:	1c5c      	adds	r4, r3, #1
 8028a90:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8028a94:	121b      	asrs	r3, r3, #8
 8028a96:	fb1b fb07 	smulbb	fp, fp, r7
 8028a9a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028a9e:	788c      	ldrb	r4, [r1, #2]
 8028aa0:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8028aa4:	fb04 b402 	mla	r4, r4, r2, fp
 8028aa8:	b2a4      	uxth	r4, r4
 8028aaa:	f104 0b01 	add.w	fp, r4, #1
 8028aae:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8028ab2:	1224      	asrs	r4, r4, #8
 8028ab4:	fb13 fb07 	smulbb	fp, r3, r7
 8028ab8:	f800 4c02 	strb.w	r4, [r0, #-2]
 8028abc:	78cb      	ldrb	r3, [r1, #3]
 8028abe:	42ae      	cmp	r6, r5
 8028ac0:	fb03 b302 	mla	r3, r3, r2, fp
 8028ac4:	b29b      	uxth	r3, r3
 8028ac6:	f103 0101 	add.w	r1, r3, #1
 8028aca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028ace:	ea4f 2323 	mov.w	r3, r3, asr #8
 8028ad2:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028ad6:	f100 0004 	add.w	r0, r0, #4
 8028ada:	d018      	beq.n	8028b0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8028adc:	f815 3b01 	ldrb.w	r3, [r5], #1
 8028ae0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028ae4:	fb1e c303 	smlabb	r3, lr, r3, ip
 8028ae8:	eb08 0103 	add.w	r1, r8, r3
 8028aec:	f818 b003 	ldrb.w	fp, [r8, r3]
 8028af0:	d1b5      	bne.n	8028a5e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028af2:	f800 bc04 	strb.w	fp, [r0, #-4]
 8028af6:	784b      	ldrb	r3, [r1, #1]
 8028af8:	42ae      	cmp	r6, r5
 8028afa:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028afe:	788b      	ldrb	r3, [r1, #2]
 8028b00:	f100 0004 	add.w	r0, r0, #4
 8028b04:	f800 9c05 	strb.w	r9, [r0, #-5]
 8028b08:	f800 3c06 	strb.w	r3, [r0, #-6]
 8028b0c:	d1e6      	bne.n	8028adc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028b0e:	4b2d      	ldr	r3, [pc, #180]	@ (8028bc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028b10:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8028b12:	881b      	ldrh	r3, [r3, #0]
 8028b14:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028b16:	1a1b      	subs	r3, r3, r0
 8028b18:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8028b1c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028b1e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028b20:	441c      	add	r4, r3
 8028b22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028b24:	3001      	adds	r0, #1
 8028b26:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8028b2a:	4283      	cmp	r3, r0
 8028b2c:	900d      	str	r0, [sp, #52]	@ 0x34
 8028b2e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8028b30:	448a      	add	sl, r1
 8028b32:	d18d      	bne.n	8028a50 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028b34:	4b20      	ldr	r3, [pc, #128]	@ (8028bb8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028b36:	6818      	ldr	r0, [r3, #0]
 8028b38:	6803      	ldr	r3, [r0, #0]
 8028b3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028b3c:	4798      	blx	r3
 8028b3e:	b015      	add	sp, #84	@ 0x54
 8028b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b44:	4798      	blx	r3
 8028b46:	2801      	cmp	r0, #1
 8028b48:	d125      	bne.n	8028b96 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8028b4a:	4b1f      	ldr	r3, [pc, #124]	@ (8028bc8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8028b4c:	6818      	ldr	r0, [r3, #0]
 8028b4e:	b330      	cbz	r0, 8028b9e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8028b50:	2502      	movs	r5, #2
 8028b52:	240b      	movs	r4, #11
 8028b54:	2600      	movs	r6, #0
 8028b56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8028b5a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8028b5e:	9302      	str	r3, [sp, #8]
 8028b60:	4b18      	ldr	r3, [pc, #96]	@ (8028bc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028b62:	9201      	str	r2, [sp, #4]
 8028b64:	881b      	ldrh	r3, [r3, #0]
 8028b66:	9508      	str	r5, [sp, #32]
 8028b68:	9407      	str	r4, [sp, #28]
 8028b6a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8028b6e:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8028b72:	9306      	str	r3, [sp, #24]
 8028b74:	f8cd 9010 	str.w	r9, [sp, #16]
 8028b78:	4642      	mov	r2, r8
 8028b7a:	4651      	mov	r1, sl
 8028b7c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028b80:	9605      	str	r6, [sp, #20]
 8028b82:	9503      	str	r5, [sp, #12]
 8028b84:	9400      	str	r4, [sp, #0]
 8028b86:	f7f8 f857 	bl	8020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8028b8a:	b015      	add	sp, #84	@ 0x54
 8028b8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b90:	4608      	mov	r0, r1
 8028b92:	4798      	blx	r3
 8028b94:	e7d7      	b.n	8028b46 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8028b96:	4b08      	ldr	r3, [pc, #32]	@ (8028bb8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028b98:	6818      	ldr	r0, [r3, #0]
 8028b9a:	6802      	ldr	r2, [r0, #0]
 8028b9c:	e737      	b.n	8028a0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8028b9e:	4b0b      	ldr	r3, [pc, #44]	@ (8028bcc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8028ba0:	4a0b      	ldr	r2, [pc, #44]	@ (8028bd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8028ba2:	217c      	movs	r1, #124	@ 0x7c
 8028ba4:	480b      	ldr	r0, [pc, #44]	@ (8028bd4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8028ba6:	f009 fcaf 	bl	8032508 <__assert_func>
 8028baa:	4b0b      	ldr	r3, [pc, #44]	@ (8028bd8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8028bac:	4a0b      	ldr	r2, [pc, #44]	@ (8028bdc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8028bae:	f640 51d3 	movw	r1, #3539	@ 0xdd3
 8028bb2:	480b      	ldr	r0, [pc, #44]	@ (8028be0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8028bb4:	f009 fca8 	bl	8032508 <__assert_func>
 8028bb8:	20082f08 	.word	0x20082f08
 8028bbc:	0800121d 	.word	0x0800121d
 8028bc0:	0800baf5 	.word	0x0800baf5
 8028bc4:	20082f02 	.word	0x20082f02
 8028bc8:	200833a8 	.word	0x200833a8
 8028bcc:	0803624c 	.word	0x0803624c
 8028bd0:	08036ab8 	.word	0x08036ab8
 8028bd4:	08036274 	.word	0x08036274
 8028bd8:	08036314 	.word	0x08036314
 8028bdc:	08037060 	.word	0x08037060
 8028be0:	080362f0 	.word	0x080362f0

08028be4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028be8:	4617      	mov	r7, r2
 8028bea:	7812      	ldrb	r2, [r2, #0]
 8028bec:	b08f      	sub	sp, #60	@ 0x3c
 8028bee:	2a01      	cmp	r2, #1
 8028bf0:	461e      	mov	r6, r3
 8028bf2:	f89d 8064 	ldrb.w	r8, [sp, #100]	@ 0x64
 8028bf6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028bf8:	f040 8203 	bne.w	8029002 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41e>
 8028bfc:	6830      	ldr	r0, [r6, #0]
 8028bfe:	460d      	mov	r5, r1
 8028c00:	6871      	ldr	r1, [r6, #4]
 8028c02:	aa0a      	add	r2, sp, #40	@ 0x28
 8028c04:	c203      	stmia	r2!, {r0, r1}
 8028c06:	6818      	ldr	r0, [r3, #0]
 8028c08:	6859      	ldr	r1, [r3, #4]
 8028c0a:	aa0c      	add	r2, sp, #48	@ 0x30
 8028c0c:	c203      	stmia	r2!, {r0, r1}
 8028c0e:	a80a      	add	r0, sp, #40	@ 0x28
 8028c10:	f7e4 f89e 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028c14:	4631      	mov	r1, r6
 8028c16:	a80c      	add	r0, sp, #48	@ 0x30
 8028c18:	f7e4 f8c2 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028c1c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028c20:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028c24:	f003 0201 	and.w	r2, r3, #1
 8028c28:	4614      	mov	r4, r2
 8028c2a:	9206      	str	r2, [sp, #24]
 8028c2c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8028c30:	4423      	add	r3, r4
 8028c32:	fb02 1303 	mla	r3, r2, r3, r1
 8028c36:	f8bd 002a 	ldrh.w	r0, [sp, #42]	@ 0x2a
 8028c3a:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8028c3e:	4402      	add	r2, r0
 8028c40:	489d      	ldr	r0, [pc, #628]	@ (8028eb8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028c42:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028c46:	440e      	add	r6, r1
 8028c48:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8028c4c:	6800      	ldr	r0, [r0, #0]
 8028c4e:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8028c52:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8028c56:	9302      	str	r3, [sp, #8]
 8028c58:	f001 0301 	and.w	r3, r1, #1
 8028c5c:	6802      	ldr	r2, [r0, #0]
 8028c5e:	9305      	str	r3, [sp, #20]
 8028c60:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8028c64:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8028c66:	9303      	str	r3, [sp, #12]
 8028c68:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8028c6c:	4790      	blx	r2
 8028c6e:	4a93      	ldr	r2, [pc, #588]	@ (8028ebc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028c70:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8028c74:	8812      	ldrh	r2, [r2, #0]
 8028c76:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028c7a:	fb05 f502 	mul.w	r5, r5, r2
 8028c7e:	fb02 1303 	mla	r3, r2, r3, r1
 8028c82:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028c86:	461a      	mov	r2, r3
 8028c88:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028c8c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8028c90:	f107 0704 	add.w	r7, r7, #4
 8028c94:	9304      	str	r3, [sp, #16]
 8028c96:	f000 8113 	beq.w	8028ec0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028c9a:	4614      	mov	r4, r2
 8028c9c:	9a04      	ldr	r2, [sp, #16]
 8028c9e:	4294      	cmp	r4, r2
 8028ca0:	f080 80c2 	bcs.w	8028e28 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028ca4:	ea4f 6308 	mov.w	r3, r8, lsl #24
 8028ca8:	9300      	str	r3, [sp, #0]
 8028caa:	9b03      	ldr	r3, [sp, #12]
 8028cac:	3b01      	subs	r3, #1
 8028cae:	9309      	str	r3, [sp, #36]	@ 0x24
 8028cb0:	9b05      	ldr	r3, [sp, #20]
 8028cb2:	2b00      	cmp	r3, #0
 8028cb4:	f040 80ef 	bne.w	8028e96 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8028cb8:	9b02      	ldr	r3, [sp, #8]
 8028cba:	9301      	str	r3, [sp, #4]
 8028cbc:	9b03      	ldr	r3, [sp, #12]
 8028cbe:	2b01      	cmp	r3, #1
 8028cc0:	f340 809c 	ble.w	8028dfc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>
 8028cc4:	3b02      	subs	r3, #2
 8028cc6:	9308      	str	r3, [sp, #32]
 8028cc8:	f104 0e10 	add.w	lr, r4, #16
 8028ccc:	085b      	lsrs	r3, r3, #1
 8028cce:	9307      	str	r3, [sp, #28]
 8028cd0:	eb0e 0ec3 	add.w	lr, lr, r3, lsl #3
 8028cd4:	9b01      	ldr	r3, [sp, #4]
 8028cd6:	f104 0608 	add.w	r6, r4, #8
 8028cda:	f103 3cff 	add.w	ip, r3, #4294967295
 8028cde:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8028ce2:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8028ce6:	091b      	lsrs	r3, r3, #4
 8028ce8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028cec:	18f8      	adds	r0, r7, r3
 8028cee:	5cfa      	ldrb	r2, [r7, r3]
 8028cf0:	f890 9001 	ldrb.w	r9, [r0, #1]
 8028cf4:	7883      	ldrb	r3, [r0, #2]
 8028cf6:	0e08      	lsrs	r0, r1, #24
 8028cf8:	f000 80ae 	beq.w	8028e58 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8028cfc:	fb08 f500 	mul.w	r5, r8, r0
 8028d00:	fb18 fb03 	smulbb	fp, r8, r3
 8028d04:	1c6b      	adds	r3, r5, #1
 8028d06:	eb03 2525 	add.w	r5, r3, r5, asr #8
 8028d0a:	fb18 f202 	smulbb	r2, r8, r2
 8028d0e:	122d      	asrs	r5, r5, #8
 8028d10:	fb18 f909 	smulbb	r9, r8, r9
 8028d14:	eba0 0a05 	sub.w	sl, r0, r5
 8028d18:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8028d1c:	fb0a b303 	mla	r3, sl, r3, fp
 8028d20:	fa5f fb81 	uxtb.w	fp, r1
 8028d24:	fb0a 220b 	mla	r2, sl, fp, r2
 8028d28:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028d2c:	4440      	add	r0, r8
 8028d2e:	fb0a 9101 	mla	r1, sl, r1, r9
 8028d32:	1b40      	subs	r0, r0, r5
 8028d34:	b2c0      	uxtb	r0, r0
 8028d36:	fbb3 f3f0 	udiv	r3, r3, r0
 8028d3a:	fbb2 f2f0 	udiv	r2, r2, r0
 8028d3e:	fbb1 f1f0 	udiv	r1, r1, r0
 8028d42:	041b      	lsls	r3, r3, #16
 8028d44:	b2d2      	uxtb	r2, r2
 8028d46:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8028d4a:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8028d4e:	0209      	lsls	r1, r1, #8
 8028d50:	4303      	orrs	r3, r0
 8028d52:	b289      	uxth	r1, r1
 8028d54:	430b      	orrs	r3, r1
 8028d56:	f846 3c08 	str.w	r3, [r6, #-8]
 8028d5a:	f89c 2000 	ldrb.w	r2, [ip]
 8028d5e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8028d62:	f002 020f 	and.w	r2, r2, #15
 8028d66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028d6a:	0e18      	lsrs	r0, r3, #24
 8028d6c:	eb07 0102 	add.w	r1, r7, r2
 8028d70:	d062      	beq.n	8028e38 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>
 8028d72:	fb08 f500 	mul.w	r5, r8, r0
 8028d76:	f105 0901 	add.w	r9, r5, #1
 8028d7a:	eb09 2925 	add.w	r9, r9, r5, asr #8
 8028d7e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028d82:	eba0 0b09 	sub.w	fp, r0, r9
 8028d86:	788d      	ldrb	r5, [r1, #2]
 8028d88:	f891 a001 	ldrb.w	sl, [r1, #1]
 8028d8c:	b2d9      	uxtb	r1, r3
 8028d8e:	fb0b f101 	mul.w	r1, fp, r1
 8028d92:	fb15 f508 	smulbb	r5, r5, r8
 8028d96:	5cba      	ldrb	r2, [r7, r2]
 8028d98:	fb1a fa08 	smulbb	sl, sl, r8
 8028d9c:	fb02 1108 	mla	r1, r2, r8, r1
 8028da0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8028da4:	fb0b 5502 	mla	r5, fp, r2, r5
 8028da8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8028dac:	4440      	add	r0, r8
 8028dae:	fb0b a202 	mla	r2, fp, r2, sl
 8028db2:	eba0 0009 	sub.w	r0, r0, r9
 8028db6:	b2c0      	uxtb	r0, r0
 8028db8:	fbb1 f3f0 	udiv	r3, r1, r0
 8028dbc:	fbb5 f5f0 	udiv	r5, r5, r0
 8028dc0:	fbb2 f2f0 	udiv	r2, r2, r0
 8028dc4:	b2db      	uxtb	r3, r3
 8028dc6:	042d      	lsls	r5, r5, #16
 8028dc8:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8028dcc:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
 8028dd0:	0212      	lsls	r2, r2, #8
 8028dd2:	432b      	orrs	r3, r5
 8028dd4:	b292      	uxth	r2, r2
 8028dd6:	4313      	orrs	r3, r2
 8028dd8:	f846 3c04 	str.w	r3, [r6, #-4]
 8028ddc:	3608      	adds	r6, #8
 8028dde:	4576      	cmp	r6, lr
 8028de0:	f47f af7d 	bne.w	8028cde <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028de4:	9b07      	ldr	r3, [sp, #28]
 8028de6:	9901      	ldr	r1, [sp, #4]
 8028de8:	1c5a      	adds	r2, r3, #1
 8028dea:	4411      	add	r1, r2
 8028dec:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
 8028df0:	9a08      	ldr	r2, [sp, #32]
 8028df2:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8028df6:	9101      	str	r1, [sp, #4]
 8028df8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028dfc:	2b01      	cmp	r3, #1
 8028dfe:	d032      	beq.n	8028e66 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x282>
 8028e00:	9906      	ldr	r1, [sp, #24]
 8028e02:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e06:	4a2d      	ldr	r2, [pc, #180]	@ (8028ebc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028e08:	440b      	add	r3, r1
 8028e0a:	8812      	ldrh	r2, [r2, #0]
 8028e0c:	9903      	ldr	r1, [sp, #12]
 8028e0e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028e12:	1a52      	subs	r2, r2, r1
 8028e14:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028e18:	9a02      	ldr	r2, [sp, #8]
 8028e1a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8028e1e:	9302      	str	r3, [sp, #8]
 8028e20:	9b04      	ldr	r3, [sp, #16]
 8028e22:	42a3      	cmp	r3, r4
 8028e24:	f63f af44 	bhi.w	8028cb0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028e28:	4b23      	ldr	r3, [pc, #140]	@ (8028eb8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028e2a:	6818      	ldr	r0, [r3, #0]
 8028e2c:	6803      	ldr	r3, [r0, #0]
 8028e2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028e30:	4798      	blx	r3
 8028e32:	b00f      	add	sp, #60	@ 0x3c
 8028e34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028e38:	5cbb      	ldrb	r3, [r7, r2]
 8028e3a:	9a00      	ldr	r2, [sp, #0]
 8028e3c:	7888      	ldrb	r0, [r1, #2]
 8028e3e:	4313      	orrs	r3, r2
 8028e40:	784a      	ldrb	r2, [r1, #1]
 8028e42:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8028e46:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028e4a:	f846 3c04 	str.w	r3, [r6, #-4]
 8028e4e:	3608      	adds	r6, #8
 8028e50:	45b6      	cmp	lr, r6
 8028e52:	f47f af44 	bne.w	8028cde <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028e56:	e7c5      	b.n	8028de4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8028e58:	9900      	ldr	r1, [sp, #0]
 8028e5a:	430a      	orrs	r2, r1
 8028e5c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028e60:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
 8028e64:	e777      	b.n	8028d56 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8028e66:	9b01      	ldr	r3, [sp, #4]
 8028e68:	4621      	mov	r1, r4
 8028e6a:	7818      	ldrb	r0, [r3, #0]
 8028e6c:	4642      	mov	r2, r8
 8028e6e:	0900      	lsrs	r0, r0, #4
 8028e70:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028e74:	4438      	add	r0, r7
 8028e76:	f7fb f86d 	bl	8023f54 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028e7a:	4b10      	ldr	r3, [pc, #64]	@ (8028ebc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028e7c:	9903      	ldr	r1, [sp, #12]
 8028e7e:	881a      	ldrh	r2, [r3, #0]
 8028e80:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e84:	1a52      	subs	r2, r2, r1
 8028e86:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028e8a:	9a06      	ldr	r2, [sp, #24]
 8028e8c:	3404      	adds	r4, #4
 8028e8e:	4413      	add	r3, r2
 8028e90:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028e94:	e7c0      	b.n	8028e18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>
 8028e96:	9d02      	ldr	r5, [sp, #8]
 8028e98:	4621      	mov	r1, r4
 8028e9a:	7828      	ldrb	r0, [r5, #0]
 8028e9c:	4642      	mov	r2, r8
 8028e9e:	f000 000f 	and.w	r0, r0, #15
 8028ea2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028ea6:	4438      	add	r0, r7
 8028ea8:	f7fb f854 	bl	8023f54 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028eac:	1c6b      	adds	r3, r5, #1
 8028eae:	9301      	str	r3, [sp, #4]
 8028eb0:	3404      	adds	r4, #4
 8028eb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028eb4:	e703      	b.n	8028cbe <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028eb6:	bf00      	nop
 8028eb8:	20082f08 	.word	0x20082f08
 8028ebc:	20082f02 	.word	0x20082f02
 8028ec0:	4615      	mov	r5, r2
 8028ec2:	9a04      	ldr	r2, [sp, #16]
 8028ec4:	4295      	cmp	r5, r2
 8028ec6:	d2af      	bcs.n	8028e28 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028ec8:	9b03      	ldr	r3, [sp, #12]
 8028eca:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028ece:	469a      	mov	sl, r3
 8028ed0:	f103 38ff 	add.w	r8, r3, #4294967295
 8028ed4:	9b05      	ldr	r3, [sp, #20]
 8028ed6:	2b00      	cmp	r3, #0
 8028ed8:	d07d      	beq.n	8028fd6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f2>
 8028eda:	4646      	mov	r6, r8
 8028edc:	f899 3000 	ldrb.w	r3, [r9]
 8028ee0:	f109 0e01 	add.w	lr, r9, #1
 8028ee4:	f003 030f 	and.w	r3, r3, #15
 8028ee8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028eec:	18fa      	adds	r2, r7, r3
 8028eee:	5cfb      	ldrb	r3, [r7, r3]
 8028ef0:	7891      	ldrb	r1, [r2, #2]
 8028ef2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028ef6:	7852      	ldrb	r2, [r2, #1]
 8028ef8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028efc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028f00:	f845 3b04 	str.w	r3, [r5], #4
 8028f04:	2e01      	cmp	r6, #1
 8028f06:	dd3e      	ble.n	8028f86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 8028f08:	3e02      	subs	r6, #2
 8028f0a:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 8028f0e:	f105 0410 	add.w	r4, r5, #16
 8028f12:	eb04 04cc 	add.w	r4, r4, ip, lsl #3
 8028f16:	f105 0108 	add.w	r1, r5, #8
 8028f1a:	f10e 30ff 	add.w	r0, lr, #4294967295
 8028f1e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8028f22:	3108      	adds	r1, #8
 8028f24:	091b      	lsrs	r3, r3, #4
 8028f26:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f2a:	5cfa      	ldrb	r2, [r7, r3]
 8028f2c:	eb07 0b03 	add.w	fp, r7, r3
 8028f30:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028f34:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028f38:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028f3c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028f40:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028f44:	f841 3c10 	str.w	r3, [r1, #-16]
 8028f48:	7803      	ldrb	r3, [r0, #0]
 8028f4a:	f003 030f 	and.w	r3, r3, #15
 8028f4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f52:	5cfa      	ldrb	r2, [r7, r3]
 8028f54:	eb07 0b03 	add.w	fp, r7, r3
 8028f58:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028f5c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028f60:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028f64:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028f68:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028f6c:	f841 3c0c 	str.w	r3, [r1, #-12]
 8028f70:	428c      	cmp	r4, r1
 8028f72:	d1d4      	bne.n	8028f1e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 8028f74:	f10c 0301 	add.w	r3, ip, #1
 8028f78:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 8028f7c:	449e      	add	lr, r3
 8028f7e:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8028f82:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8028f86:	2e01      	cmp	r6, #1
 8028f88:	d128      	bne.n	8028fdc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f8>
 8028f8a:	f89e 3000 	ldrb.w	r3, [lr]
 8028f8e:	091b      	lsrs	r3, r3, #4
 8028f90:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f94:	18fa      	adds	r2, r7, r3
 8028f96:	5cfb      	ldrb	r3, [r7, r3]
 8028f98:	7891      	ldrb	r1, [r2, #2]
 8028f9a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028f9e:	7852      	ldrb	r2, [r2, #1]
 8028fa0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028fa4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028fa8:	602b      	str	r3, [r5, #0]
 8028faa:	4b19      	ldr	r3, [pc, #100]	@ (8029010 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028fac:	881a      	ldrh	r2, [r3, #0]
 8028fae:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028fb2:	eba2 020a 	sub.w	r2, r2, sl
 8028fb6:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028fba:	9a06      	ldr	r2, [sp, #24]
 8028fbc:	3504      	adds	r5, #4
 8028fbe:	4413      	add	r3, r2
 8028fc0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028fc4:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028fc8:	9b04      	ldr	r3, [sp, #16]
 8028fca:	42ab      	cmp	r3, r5
 8028fcc:	f67f af2c 	bls.w	8028e28 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028fd0:	9b05      	ldr	r3, [sp, #20]
 8028fd2:	2b00      	cmp	r3, #0
 8028fd4:	d181      	bne.n	8028eda <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8028fd6:	46ce      	mov	lr, r9
 8028fd8:	4656      	mov	r6, sl
 8028fda:	e793      	b.n	8028f04 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 8028fdc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028fe0:	4a0b      	ldr	r2, [pc, #44]	@ (8029010 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028fe2:	9906      	ldr	r1, [sp, #24]
 8028fe4:	8812      	ldrh	r2, [r2, #0]
 8028fe6:	440b      	add	r3, r1
 8028fe8:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028fec:	eba2 020a 	sub.w	r2, r2, sl
 8028ff0:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028ff4:	9b04      	ldr	r3, [sp, #16]
 8028ff6:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028ffa:	42ab      	cmp	r3, r5
 8028ffc:	f63f af6a 	bhi.w	8028ed4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>
 8029000:	e712      	b.n	8028e28 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8029002:	4b04      	ldr	r3, [pc, #16]	@ (8029014 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x430>)
 8029004:	4a04      	ldr	r2, [pc, #16]	@ (8029018 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x434>)
 8029006:	f640 612c 	movw	r1, #3628	@ 0xe2c
 802900a:	4804      	ldr	r0, [pc, #16]	@ (802901c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 802900c:	f009 fa7c 	bl	8032508 <__assert_func>
 8029010:	20082f02 	.word	0x20082f02
 8029014:	080363b4 	.word	0x080363b4
 8029018:	080373a4 	.word	0x080373a4
 802901c:	080362f0 	.word	0x080362f0

08029020 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029024:	7814      	ldrb	r4, [r2, #0]
 8029026:	b091      	sub	sp, #68	@ 0x44
 8029028:	2c01      	cmp	r4, #1
 802902a:	461d      	mov	r5, r3
 802902c:	9208      	str	r2, [sp, #32]
 802902e:	9102      	str	r1, [sp, #8]
 8029030:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8029032:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 8029036:	f040 814b 	bne.w	80292d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 802903a:	6828      	ldr	r0, [r5, #0]
 802903c:	6869      	ldr	r1, [r5, #4]
 802903e:	aa0c      	add	r2, sp, #48	@ 0x30
 8029040:	c203      	stmia	r2!, {r0, r1}
 8029042:	6818      	ldr	r0, [r3, #0]
 8029044:	6859      	ldr	r1, [r3, #4]
 8029046:	aa0e      	add	r2, sp, #56	@ 0x38
 8029048:	c203      	stmia	r2!, {r0, r1}
 802904a:	a80c      	add	r0, sp, #48	@ 0x30
 802904c:	f7e3 fe80 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029050:	4629      	mov	r1, r5
 8029052:	a80e      	add	r0, sp, #56	@ 0x38
 8029054:	f7e3 fea4 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029058:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 802905c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8029060:	f340 8130 	ble.w	80292c4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8029064:	4623      	mov	r3, r4
 8029066:	b291      	uxth	r1, r2
 8029068:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 802906c:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 8029070:	fb92 f5f3 	sdiv	r5, r2, r3
 8029074:	b2ae      	uxth	r6, r5
 8029076:	fb03 2416 	mls	r4, r3, r6, r2
 802907a:	fb14 0101 	smlabb	r1, r4, r1, r0
 802907e:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8029082:	b289      	uxth	r1, r1
 8029084:	441c      	add	r4, r3
 8029086:	3c01      	subs	r4, #1
 8029088:	9100      	str	r1, [sp, #0]
 802908a:	fb94 f4f3 	sdiv	r4, r4, r3
 802908e:	b136      	cbz	r6, 802909e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x7e>
 8029090:	9b08      	ldr	r3, [sp, #32]
 8029092:	9902      	ldr	r1, [sp, #8]
 8029094:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 8029098:	ba1b      	rev	r3, r3
 802909a:	4419      	add	r1, r3
 802909c:	9102      	str	r1, [sp, #8]
 802909e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80290a2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 80290a6:	440a      	add	r2, r1
 80290a8:	498d      	ldr	r1, [pc, #564]	@ (80292e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 80290aa:	4403      	add	r3, r0
 80290ac:	6808      	ldr	r0, [r1, #0]
 80290ae:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 80290b2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80290b6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80290ba:	6803      	ldr	r3, [r0, #0]
 80290bc:	960a      	str	r6, [sp, #40]	@ 0x28
 80290be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80290c0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80290c4:	4798      	blx	r3
 80290c6:	9b00      	ldr	r3, [sp, #0]
 80290c8:	4986      	ldr	r1, [pc, #536]	@ (80292e4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 80290ca:	2b00      	cmp	r3, #0
 80290cc:	bf0c      	ite	eq
 80290ce:	4633      	moveq	r3, r6
 80290d0:	2300      	movne	r3, #0
 80290d2:	8809      	ldrh	r1, [r1, #0]
 80290d4:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 80290d8:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80290dc:	fb05 f501 	mul.w	r5, r5, r1
 80290e0:	fb01 6202 	mla	r2, r1, r2, r6
 80290e4:	b2a4      	uxth	r4, r4
 80290e6:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 80290ea:	eb08 0285 	add.w	r2, r8, r5, lsl #2
 80290ee:	00a4      	lsls	r4, r4, #2
 80290f0:	1d21      	adds	r1, r4, #4
 80290f2:	4590      	cmp	r8, r2
 80290f4:	9203      	str	r2, [sp, #12]
 80290f6:	9109      	str	r1, [sp, #36]	@ 0x24
 80290f8:	fa1f f983 	uxth.w	r9, r3
 80290fc:	d227      	bcs.n	802914e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x12e>
 80290fe:	2300      	movs	r3, #0
 8029100:	469b      	mov	fp, r3
 8029102:	ea4f 620a 	mov.w	r2, sl, lsl #24
 8029106:	9304      	str	r3, [sp, #16]
 8029108:	9205      	str	r2, [sp, #20]
 802910a:	f1bb 0f00 	cmp.w	fp, #0
 802910e:	d10f      	bne.n	8029130 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029110:	9902      	ldr	r1, [sp, #8]
 8029112:	780b      	ldrb	r3, [r1, #0]
 8029114:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 8029118:	f10b 32ff 	add.w	r2, fp, #4294967295
 802911c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8029120:	2a02      	cmp	r2, #2
 8029122:	9304      	str	r3, [sp, #16]
 8029124:	f200 80c8 	bhi.w	80292b8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8029128:	3101      	adds	r1, #1
 802912a:	9102      	str	r1, [sp, #8]
 802912c:	fa1f fb8b 	uxth.w	fp, fp
 8029130:	9b00      	ldr	r3, [sp, #0]
 8029132:	b1a3      	cbz	r3, 802915e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8029134:	459b      	cmp	fp, r3
 8029136:	f080 80b6 	bcs.w	80292a6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x286>
 802913a:	eba3 0b0b 	sub.w	fp, r3, fp
 802913e:	fa1f f38b 	uxth.w	r3, fp
 8029142:	f04f 0b00 	mov.w	fp, #0
 8029146:	9300      	str	r3, [sp, #0]
 8029148:	9b03      	ldr	r3, [sp, #12]
 802914a:	4543      	cmp	r3, r8
 802914c:	d8dd      	bhi.n	802910a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xea>
 802914e:	4b64      	ldr	r3, [pc, #400]	@ (80292e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8029150:	6818      	ldr	r0, [r3, #0]
 8029152:	6803      	ldr	r3, [r0, #0]
 8029154:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029156:	4798      	blx	r3
 8029158:	b011      	add	sp, #68	@ 0x44
 802915a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802915e:	2303      	movs	r3, #3
 8029160:	4619      	mov	r1, r3
 8029162:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029164:	9b04      	ldr	r3, [sp, #16]
 8029166:	45cb      	cmp	fp, r9
 8029168:	fb11 2c03 	smlabb	ip, r1, r3, r2
 802916c:	9b08      	ldr	r3, [sp, #32]
 802916e:	449c      	add	ip, r3
 8029170:	d377      	bcc.n	8029262 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x242>
 8029172:	ebab 0309 	sub.w	r3, fp, r9
 8029176:	9a00      	ldr	r2, [sp, #0]
 8029178:	b29b      	uxth	r3, r3
 802917a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802917e:	9306      	str	r3, [sp, #24]
 8029180:	9207      	str	r2, [sp, #28]
 8029182:	464b      	mov	r3, r9
 8029184:	d077      	beq.n	8029276 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8029186:	b303      	cbz	r3, 80291ca <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029188:	3b01      	subs	r3, #1
 802918a:	b29b      	uxth	r3, r3
 802918c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802918e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8029192:	9301      	str	r3, [sp, #4]
 8029194:	f1a8 0e04 	sub.w	lr, r8, #4
 8029198:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802919c:	f89c 4000 	ldrb.w	r4, [ip]
 80291a0:	0e18      	lsrs	r0, r3, #24
 80291a2:	f89c 6001 	ldrb.w	r6, [ip, #1]
 80291a6:	f89c 1002 	ldrb.w	r1, [ip, #2]
 80291aa:	d126      	bne.n	80291fa <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 80291ac:	9b05      	ldr	r3, [sp, #20]
 80291ae:	431c      	orrs	r4, r3
 80291b0:	9b01      	ldr	r3, [sp, #4]
 80291b2:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80291b6:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 80291ba:	459e      	cmp	lr, r3
 80291bc:	f8ce 6000 	str.w	r6, [lr]
 80291c0:	d1ea      	bne.n	8029198 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 80291c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80291c4:	3301      	adds	r3, #1
 80291c6:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 80291ca:	45cb      	cmp	fp, r9
 80291cc:	d346      	bcc.n	802925c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80291ce:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80291d0:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80291d4:	4b43      	ldr	r3, [pc, #268]	@ (80292e4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 80291d6:	fa1f f981 	uxth.w	r9, r1
 80291da:	eba2 0209 	sub.w	r2, r2, r9
 80291de:	881b      	ldrh	r3, [r3, #0]
 80291e0:	b292      	uxth	r2, r2
 80291e2:	2a00      	cmp	r2, #0
 80291e4:	eba3 0301 	sub.w	r3, r3, r1
 80291e8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80291ec:	bf18      	it	ne
 80291ee:	f04f 0900 	movne.w	r9, #0
 80291f2:	9200      	str	r2, [sp, #0]
 80291f4:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 80291f8:	e7a6      	b.n	8029148 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80291fa:	fb0a f200 	mul.w	r2, sl, r0
 80291fe:	fb1a f101 	smulbb	r1, sl, r1
 8029202:	1c55      	adds	r5, r2, #1
 8029204:	eb05 2522 	add.w	r5, r5, r2, asr #8
 8029208:	fb1a f404 	smulbb	r4, sl, r4
 802920c:	122d      	asrs	r5, r5, #8
 802920e:	fb1a f606 	smulbb	r6, sl, r6
 8029212:	1b47      	subs	r7, r0, r5
 8029214:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029218:	fb07 1102 	mla	r1, r7, r2, r1
 802921c:	b2da      	uxtb	r2, r3
 802921e:	fb07 4402 	mla	r4, r7, r2, r4
 8029222:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8029226:	4450      	add	r0, sl
 8029228:	fb07 6202 	mla	r2, r7, r2, r6
 802922c:	1b45      	subs	r5, r0, r5
 802922e:	b2ed      	uxtb	r5, r5
 8029230:	fbb1 f3f5 	udiv	r3, r1, r5
 8029234:	fbb4 f4f5 	udiv	r4, r4, r5
 8029238:	fbb2 f2f5 	udiv	r2, r2, r5
 802923c:	041b      	lsls	r3, r3, #16
 802923e:	b2e4      	uxtb	r4, r4
 8029240:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8029244:	ea44 6505 	orr.w	r5, r4, r5, lsl #24
 8029248:	0212      	lsls	r2, r2, #8
 802924a:	432b      	orrs	r3, r5
 802924c:	b292      	uxth	r2, r2
 802924e:	4313      	orrs	r3, r2
 8029250:	f8ce 3000 	str.w	r3, [lr]
 8029254:	9b01      	ldr	r3, [sp, #4]
 8029256:	459e      	cmp	lr, r3
 8029258:	d19e      	bne.n	8029198 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802925a:	e7b2      	b.n	80291c2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 802925c:	e9dd b906 	ldrd	fp, r9, [sp, #24]
 8029260:	e772      	b.n	8029148 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 8029262:	9a00      	ldr	r2, [sp, #0]
 8029264:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8029268:	9206      	str	r2, [sp, #24]
 802926a:	eba9 020b 	sub.w	r2, r9, fp
 802926e:	b292      	uxth	r2, r2
 8029270:	465b      	mov	r3, fp
 8029272:	9207      	str	r2, [sp, #28]
 8029274:	d187      	bne.n	8029186 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8029276:	2b00      	cmp	r3, #0
 8029278:	d0a7      	beq.n	80291ca <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 802927a:	1e58      	subs	r0, r3, #1
 802927c:	b280      	uxth	r0, r0
 802927e:	3001      	adds	r0, #1
 8029280:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8029284:	f89c 3000 	ldrb.w	r3, [ip]
 8029288:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802928c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8029290:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029294:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8029298:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 802929c:	f848 3b04 	str.w	r3, [r8], #4
 80292a0:	4540      	cmp	r0, r8
 80292a2:	d1ef      	bne.n	8029284 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>
 80292a4:	e791      	b.n	80291ca <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 80292a6:	ebab 0b03 	sub.w	fp, fp, r3
 80292aa:	2300      	movs	r3, #0
 80292ac:	fa1f fb8b 	uxth.w	fp, fp
 80292b0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 80292b4:	9300      	str	r3, [sp, #0]
 80292b6:	e747      	b.n	8029148 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80292b8:	460b      	mov	r3, r1
 80292ba:	3302      	adds	r3, #2
 80292bc:	f891 b001 	ldrb.w	fp, [r1, #1]
 80292c0:	9302      	str	r3, [sp, #8]
 80292c2:	e735      	b.n	8029130 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 80292c4:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80292c8:	b291      	uxth	r1, r2
 80292ca:	fb94 f3f1 	sdiv	r3, r4, r1
 80292ce:	e6cb      	b.n	8029068 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48>
 80292d0:	4b05      	ldr	r3, [pc, #20]	@ (80292e8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 80292d2:	4a06      	ldr	r2, [pc, #24]	@ (80292ec <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>)
 80292d4:	f640 61a3 	movw	r1, #3747	@ 0xea3
 80292d8:	4805      	ldr	r0, [pc, #20]	@ (80292f0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>)
 80292da:	f009 f915 	bl	8032508 <__assert_func>
 80292de:	bf00      	nop
 80292e0:	20082f08 	.word	0x20082f08
 80292e4:	20082f02 	.word	0x20082f02
 80292e8:	080363b4 	.word	0x080363b4
 80292ec:	08037548 	.word	0x08037548
 80292f0:	080362f0 	.word	0x080362f0

080292f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 80292f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80292f8:	7814      	ldrb	r4, [r2, #0]
 80292fa:	b09f      	sub	sp, #124	@ 0x7c
 80292fc:	2c01      	cmp	r4, #1
 80292fe:	461d      	mov	r5, r3
 8029300:	9214      	str	r2, [sp, #80]	@ 0x50
 8029302:	9117      	str	r1, [sp, #92]	@ 0x5c
 8029304:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8029306:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 802930a:	f040 8232 	bne.w	8029772 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x47e>
 802930e:	6869      	ldr	r1, [r5, #4]
 8029310:	4683      	mov	fp, r0
 8029312:	6828      	ldr	r0, [r5, #0]
 8029314:	aa1a      	add	r2, sp, #104	@ 0x68
 8029316:	c203      	stmia	r2!, {r0, r1}
 8029318:	6818      	ldr	r0, [r3, #0]
 802931a:	6859      	ldr	r1, [r3, #4]
 802931c:	aa1c      	add	r2, sp, #112	@ 0x70
 802931e:	c203      	stmia	r2!, {r0, r1}
 8029320:	a81a      	add	r0, sp, #104	@ 0x68
 8029322:	f7e3 fd15 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029326:	4629      	mov	r1, r5
 8029328:	a81c      	add	r0, sp, #112	@ 0x70
 802932a:	f7e3 fd39 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802932e:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	@ 0x6c
 8029332:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8029336:	f340 8214 	ble.w	8029762 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 802933a:	4623      	mov	r3, r4
 802933c:	b292      	uxth	r2, r2
 802933e:	9418      	str	r4, [sp, #96]	@ 0x60
 8029340:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 8029344:	f9bd 106e 	ldrsh.w	r1, [sp, #110]	@ 0x6e
 8029348:	fb90 f4f3 	sdiv	r4, r0, r3
 802934c:	4419      	add	r1, r3
 802934e:	3901      	subs	r1, #1
 8029350:	fb91 f1f3 	sdiv	r1, r1, r3
 8029354:	b2a4      	uxth	r4, r4
 8029356:	fb03 0314 	mls	r3, r3, r4, r0
 802935a:	9416      	str	r4, [sp, #88]	@ 0x58
 802935c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8029360:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8029364:	fb13 4202 	smlabb	r2, r3, r2, r4
 8029368:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 802936c:	4bae      	ldr	r3, [pc, #696]	@ (8029628 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802936e:	4434      	add	r4, r6
 8029370:	4405      	add	r5, r0
 8029372:	6818      	ldr	r0, [r3, #0]
 8029374:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8029378:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 802937c:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 8029380:	6803      	ldr	r3, [r0, #0]
 8029382:	b296      	uxth	r6, r2
 8029384:	3101      	adds	r1, #1
 8029386:	9602      	str	r6, [sp, #8]
 8029388:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802938a:	970d      	str	r7, [sp, #52]	@ 0x34
 802938c:	b28c      	uxth	r4, r1
 802938e:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8029392:	4798      	blx	r3
 8029394:	2300      	movs	r3, #0
 8029396:	2e00      	cmp	r6, #0
 8029398:	bf0c      	ite	eq
 802939a:	463a      	moveq	r2, r7
 802939c:	2200      	movne	r2, #0
 802939e:	49a3      	ldr	r1, [pc, #652]	@ (802962c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 80293a0:	9315      	str	r3, [sp, #84]	@ 0x54
 80293a2:	8809      	ldrh	r1, [r1, #0]
 80293a4:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 80293a8:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 80293ac:	fb05 f501 	mul.w	r5, r5, r1
 80293b0:	fb01 6303 	mla	r3, r1, r3, r6
 80293b4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80293b8:	9301      	str	r3, [sp, #4]
 80293ba:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 80293be:	9308      	str	r3, [sp, #32]
 80293c0:	b293      	uxth	r3, r2
 80293c2:	9303      	str	r3, [sp, #12]
 80293c4:	ea4f 630a 	mov.w	r3, sl, lsl #24
 80293c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80293ca:	f10b 030e 	add.w	r3, fp, #14
 80293ce:	9319      	str	r3, [sp, #100]	@ 0x64
 80293d0:	4653      	mov	r3, sl
 80293d2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80293d4:	46da      	mov	sl, fp
 80293d6:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80293da:	f104 0904 	add.w	r9, r4, #4
 80293de:	46cb      	mov	fp, r9
 80293e0:	4699      	mov	r9, r3
 80293e2:	9b01      	ldr	r3, [sp, #4]
 80293e4:	9a08      	ldr	r2, [sp, #32]
 80293e6:	4293      	cmp	r3, r2
 80293e8:	f080 8116 	bcs.w	8029618 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 80293ec:	2601      	movs	r6, #1
 80293ee:	2700      	movs	r7, #0
 80293f0:	9b02      	ldr	r3, [sp, #8]
 80293f2:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 80293f6:	46bc      	mov	ip, r7
 80293f8:	fbb3 f1f1 	udiv	r1, r3, r1
 80293fc:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 8029400:	fa12 f283 	uxtah	r2, r2, r3
 8029404:	0092      	lsls	r2, r2, #2
 8029406:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8029408:	3204      	adds	r2, #4
 802940a:	1898      	adds	r0, r3, r2
 802940c:	7883      	ldrb	r3, [r0, #2]
 802940e:	7845      	ldrb	r5, [r0, #1]
 8029410:	021b      	lsls	r3, r3, #8
 8029412:	78c0      	ldrb	r0, [r0, #3]
 8029414:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8029418:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 802941a:	4304      	orrs	r4, r0
 802941c:	4628      	mov	r0, r5
 802941e:	46b0      	mov	r8, r6
 8029420:	4420      	add	r0, r4
 8029422:	7843      	ldrb	r3, [r0, #1]
 8029424:	5d2c      	ldrb	r4, [r5, r4]
 8029426:	021b      	lsls	r3, r3, #8
 8029428:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802942c:	431c      	orrs	r4, r3
 802942e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8029430:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8029432:	5caa      	ldrb	r2, [r5, r2]
 8029434:	1a59      	subs	r1, r3, r1
 8029436:	b2a3      	uxth	r3, r4
 8029438:	930b      	str	r3, [sp, #44]	@ 0x2c
 802943a:	1983      	adds	r3, r0, r6
 802943c:	9306      	str	r3, [sp, #24]
 802943e:	1993      	adds	r3, r2, r6
 8029440:	9307      	str	r3, [sp, #28]
 8029442:	b28b      	uxth	r3, r1
 8029444:	9710      	str	r7, [sp, #64]	@ 0x40
 8029446:	960c      	str	r6, [sp, #48]	@ 0x30
 8029448:	920f      	str	r2, [sp, #60]	@ 0x3c
 802944a:	f88a 400d 	strb.w	r4, [sl, #13]
 802944e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8029450:	9605      	str	r6, [sp, #20]
 8029452:	9b02      	ldr	r3, [sp, #8]
 8029454:	2b00      	cmp	r3, #0
 8029456:	d038      	beq.n	80294ca <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 8029458:	4598      	cmp	r8, r3
 802945a:	f080 813f 	bcs.w	80296dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 802945e:	eba3 0808 	sub.w	r8, r3, r8
 8029462:	fa1f f388 	uxth.w	r3, r8
 8029466:	9302      	str	r3, [sp, #8]
 8029468:	9a08      	ldr	r2, [sp, #32]
 802946a:	9b01      	ldr	r3, [sp, #4]
 802946c:	4293      	cmp	r3, r2
 802946e:	f080 80d3 	bcs.w	8029618 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8029472:	9806      	ldr	r0, [sp, #24]
 8029474:	9c05      	ldr	r4, [sp, #20]
 8029476:	7842      	ldrb	r2, [r0, #1]
 8029478:	f1c4 0107 	rsb	r1, r4, #7
 802947c:	7803      	ldrb	r3, [r0, #0]
 802947e:	408a      	lsls	r2, r1
 8029480:	0052      	lsls	r2, r2, #1
 8029482:	4123      	asrs	r3, r4
 8029484:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8029488:	1c61      	adds	r1, r4, #1
 802948a:	b2db      	uxtb	r3, r3
 802948c:	4313      	orrs	r3, r2
 802948e:	b2ca      	uxtb	r2, r1
 8029490:	4611      	mov	r1, r2
 8029492:	2908      	cmp	r1, #8
 8029494:	9205      	str	r2, [sp, #20]
 8029496:	b29a      	uxth	r2, r3
 8029498:	f000 812d 	beq.w	80296f6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 802949c:	3001      	adds	r0, #1
 802949e:	9006      	str	r0, [sp, #24]
 80294a0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80294a2:	4291      	cmp	r1, r2
 80294a4:	f0c0 80fa 	bcc.w	802969c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a8>
 80294a8:	f04f 0801 	mov.w	r8, #1
 80294ac:	b2db      	uxtb	r3, r3
 80294ae:	f88a 300d 	strb.w	r3, [sl, #13]
 80294b2:	9907      	ldr	r1, [sp, #28]
 80294b4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80294b8:	f0c0 8123 	bcc.w	8029702 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40e>
 80294bc:	9b02      	ldr	r3, [sp, #8]
 80294be:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 80294c2:	f04f 0c00 	mov.w	ip, #0
 80294c6:	2b00      	cmp	r3, #0
 80294c8:	d1c6      	bne.n	8029458 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 80294ca:	9b03      	ldr	r3, [sp, #12]
 80294cc:	4598      	cmp	r8, r3
 80294ce:	461a      	mov	r2, r3
 80294d0:	f0c0 80ae 	bcc.w	8029630 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 80294d4:	eba8 0303 	sub.w	r3, r8, r3
 80294d8:	b29b      	uxth	r3, r3
 80294da:	9309      	str	r3, [sp, #36]	@ 0x24
 80294dc:	9b02      	ldr	r3, [sp, #8]
 80294de:	9204      	str	r2, [sp, #16]
 80294e0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80294e4:	930e      	str	r3, [sp, #56]	@ 0x38
 80294e6:	9b04      	ldr	r3, [sp, #16]
 80294e8:	f000 80b0 	beq.w	802964c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80294ec:	b393      	cbz	r3, 8029554 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 80294ee:	4463      	add	r3, ip
 80294f0:	b29b      	uxth	r3, r3
 80294f2:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80294f6:	4698      	mov	r8, r3
 80294f8:	9a01      	ldr	r2, [sp, #4]
 80294fa:	9311      	str	r3, [sp, #68]	@ 0x44
 80294fc:	f1a2 0e04 	sub.w	lr, r2, #4
 8029500:	eb0a 030c 	add.w	r3, sl, ip
 8029504:	7b5a      	ldrb	r2, [r3, #13]
 8029506:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802950a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802950e:	eb0b 0102 	add.w	r1, fp, r2
 8029512:	f10c 0c01 	add.w	ip, ip, #1
 8029516:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802951a:	784d      	ldrb	r5, [r1, #1]
 802951c:	788a      	ldrb	r2, [r1, #2]
 802951e:	0e19      	lsrs	r1, r3, #24
 8029520:	fa1f fc8c 	uxth.w	ip, ip
 8029524:	d13f      	bne.n	80295a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8029526:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029528:	45c4      	cmp	ip, r8
 802952a:	ea40 0003 	orr.w	r0, r0, r3
 802952e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8029532:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 8029536:	f8ce 5000 	str.w	r5, [lr]
 802953a:	d1e1      	bne.n	8029500 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 802953c:	9b04      	ldr	r3, [sp, #16]
 802953e:	9a01      	ldr	r2, [sp, #4]
 8029540:	3b01      	subs	r3, #1
 8029542:	b29b      	uxth	r3, r3
 8029544:	3301      	adds	r3, #1
 8029546:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802954a:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 802954e:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8029552:	9301      	str	r3, [sp, #4]
 8029554:	9b03      	ldr	r3, [sp, #12]
 8029556:	4598      	cmp	r8, r3
 8029558:	d356      	bcc.n	8029608 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x314>
 802955a:	4b34      	ldr	r3, [pc, #208]	@ (802962c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 802955c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802955e:	881b      	ldrh	r3, [r3, #0]
 8029560:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029562:	1a5b      	subs	r3, r3, r1
 8029564:	9901      	ldr	r1, [sp, #4]
 8029566:	3201      	adds	r2, #1
 8029568:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802956c:	9301      	str	r3, [sp, #4]
 802956e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8029570:	9210      	str	r2, [sp, #64]	@ 0x40
 8029572:	4293      	cmp	r3, r2
 8029574:	f000 80e4 	beq.w	8029740 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8029578:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 802957c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8029580:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029584:	1a9b      	subs	r3, r3, r2
 8029586:	b29b      	uxth	r3, r3
 8029588:	2b00      	cmp	r3, #0
 802958a:	bf14      	ite	ne
 802958c:	2200      	movne	r2, #0
 802958e:	2300      	moveq	r3, #0
 8029590:	9203      	str	r2, [sp, #12]
 8029592:	9302      	str	r3, [sp, #8]
 8029594:	9b01      	ldr	r3, [sp, #4]
 8029596:	9a08      	ldr	r2, [sp, #32]
 8029598:	4293      	cmp	r3, r2
 802959a:	d23d      	bcs.n	8029618 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802959c:	f1b8 0f00 	cmp.w	r8, #0
 80295a0:	f47f af57 	bne.w	8029452 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 80295a4:	e765      	b.n	8029472 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17e>
 80295a6:	fb09 f601 	mul.w	r6, r9, r1
 80295aa:	fb19 f702 	smulbb	r7, r9, r2
 80295ae:	1c74      	adds	r4, r6, #1
 80295b0:	eb04 2426 	add.w	r4, r4, r6, asr #8
 80295b4:	fb19 f000 	smulbb	r0, r9, r0
 80295b8:	1224      	asrs	r4, r4, #8
 80295ba:	fb19 f505 	smulbb	r5, r9, r5
 80295be:	1b0e      	subs	r6, r1, r4
 80295c0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80295c4:	fb06 7202 	mla	r2, r6, r2, r7
 80295c8:	b2df      	uxtb	r7, r3
 80295ca:	fb06 0007 	mla	r0, r6, r7, r0
 80295ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80295d2:	fb06 5503 	mla	r5, r6, r3, r5
 80295d6:	4449      	add	r1, r9
 80295d8:	1b09      	subs	r1, r1, r4
 80295da:	b2c9      	uxtb	r1, r1
 80295dc:	fbb2 f2f1 	udiv	r2, r2, r1
 80295e0:	fbb0 f0f1 	udiv	r0, r0, r1
 80295e4:	fbb5 f5f1 	udiv	r5, r5, r1
 80295e8:	0413      	lsls	r3, r2, #16
 80295ea:	b2c0      	uxtb	r0, r0
 80295ec:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80295f0:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
 80295f4:	022d      	lsls	r5, r5, #8
 80295f6:	430b      	orrs	r3, r1
 80295f8:	b2ad      	uxth	r5, r5
 80295fa:	432b      	orrs	r3, r5
 80295fc:	45c4      	cmp	ip, r8
 80295fe:	f8ce 3000 	str.w	r3, [lr]
 8029602:	f47f af7d 	bne.w	8029500 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8029606:	e799      	b.n	802953c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>
 8029608:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802960a:	9a08      	ldr	r2, [sp, #32]
 802960c:	9303      	str	r3, [sp, #12]
 802960e:	9b01      	ldr	r3, [sp, #4]
 8029610:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029614:	4293      	cmp	r3, r2
 8029616:	d3c1      	bcc.n	802959c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8029618:	4b03      	ldr	r3, [pc, #12]	@ (8029628 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802961a:	6818      	ldr	r0, [r3, #0]
 802961c:	6803      	ldr	r3, [r0, #0]
 802961e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029620:	4798      	blx	r3
 8029622:	b01f      	add	sp, #124	@ 0x7c
 8029624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029628:	20082f08 	.word	0x20082f08
 802962c:	20082f02 	.word	0x20082f02
 8029630:	9b02      	ldr	r3, [sp, #8]
 8029632:	f8cd 8010 	str.w	r8, [sp, #16]
 8029636:	9309      	str	r3, [sp, #36]	@ 0x24
 8029638:	9b03      	ldr	r3, [sp, #12]
 802963a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802963e:	eba3 0308 	sub.w	r3, r3, r8
 8029642:	b29b      	uxth	r3, r3
 8029644:	930e      	str	r3, [sp, #56]	@ 0x38
 8029646:	9b04      	ldr	r3, [sp, #16]
 8029648:	f47f af50 	bne.w	80294ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 802964c:	2b00      	cmp	r3, #0
 802964e:	d081      	beq.n	8029554 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8029650:	eb0c 0003 	add.w	r0, ip, r3
 8029654:	9901      	ldr	r1, [sp, #4]
 8029656:	b280      	uxth	r0, r0
 8029658:	eb0a 030c 	add.w	r3, sl, ip
 802965c:	7b5b      	ldrb	r3, [r3, #13]
 802965e:	f10c 0c01 	add.w	ip, ip, #1
 8029662:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8029666:	eb0b 0203 	add.w	r2, fp, r3
 802966a:	f81b 3003 	ldrb.w	r3, [fp, r3]
 802966e:	7894      	ldrb	r4, [r2, #2]
 8029670:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029674:	7852      	ldrb	r2, [r2, #1]
 8029676:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 802967a:	fa1f fc8c 	uxth.w	ip, ip
 802967e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8029682:	4584      	cmp	ip, r0
 8029684:	f841 3b04 	str.w	r3, [r1], #4
 8029688:	d1e6      	bne.n	8029658 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>
 802968a:	9b04      	ldr	r3, [sp, #16]
 802968c:	9a01      	ldr	r2, [sp, #4]
 802968e:	3b01      	subs	r3, #1
 8029690:	b29b      	uxth	r3, r3
 8029692:	3301      	adds	r3, #1
 8029694:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8029698:	9301      	str	r3, [sp, #4]
 802969a:	e75b      	b.n	8029554 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802969c:	9b07      	ldr	r3, [sp, #28]
 802969e:	4293      	cmp	r3, r2
 80296a0:	d832      	bhi.n	8029708 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 80296a2:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80296a4:	f89a 100d 	ldrb.w	r1, [sl, #13]
 80296a8:	eb0a 0300 	add.w	r3, sl, r0
 80296ac:	7359      	strb	r1, [r3, #13]
 80296ae:	f89a 300d 	ldrb.w	r3, [sl, #13]
 80296b2:	1c41      	adds	r1, r0, #1
 80296b4:	fa1f f881 	uxth.w	r8, r1
 80296b8:	9c07      	ldr	r4, [sp, #28]
 80296ba:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80296bc:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 80296c0:	3401      	adds	r4, #1
 80296c2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 80296c6:	b2a3      	uxth	r3, r4
 80296c8:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 80296cc:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 80296d0:	9307      	str	r3, [sp, #28]
 80296d2:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 80296d6:	f04f 0c00 	mov.w	ip, #0
 80296da:	e6ba      	b.n	8029452 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 80296dc:	eba8 0803 	sub.w	r8, r8, r3
 80296e0:	449c      	add	ip, r3
 80296e2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80296e6:	fa1f f888 	uxth.w	r8, r8
 80296ea:	9303      	str	r3, [sp, #12]
 80296ec:	2300      	movs	r3, #0
 80296ee:	fa1f fc8c 	uxth.w	ip, ip
 80296f2:	9302      	str	r3, [sp, #8]
 80296f4:	e74e      	b.n	8029594 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 80296f6:	2100      	movs	r1, #0
 80296f8:	9105      	str	r1, [sp, #20]
 80296fa:	9906      	ldr	r1, [sp, #24]
 80296fc:	3102      	adds	r1, #2
 80296fe:	9106      	str	r1, [sp, #24]
 8029700:	e6ce      	b.n	80294a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8029702:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8029704:	3101      	adds	r1, #1
 8029706:	e7d7      	b.n	80296b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8029708:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 802970c:	f893 804f 	ldrb.w	r8, [r3, #79]	@ 0x4f
 8029710:	4613      	mov	r3, r2
 8029712:	f1b8 0f01 	cmp.w	r8, #1
 8029716:	d90d      	bls.n	8029734 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>
 8029718:	f108 010d 	add.w	r1, r8, #13
 802971c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 802971e:	4451      	add	r1, sl
 8029720:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8029724:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8029728:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802972c:	428c      	cmp	r4, r1
 802972e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8029732:	d1f5      	bne.n	8029720 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 8029734:	b2db      	uxtb	r3, r3
 8029736:	f88a 300d 	strb.w	r3, [sl, #13]
 802973a:	fa1f f888 	uxth.w	r8, r8
 802973e:	e6b8      	b.n	80294b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8029740:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8029744:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8029748:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802974a:	1a9b      	subs	r3, r3, r2
 802974c:	b29b      	uxth	r3, r3
 802974e:	2b00      	cmp	r3, #0
 8029750:	9302      	str	r3, [sp, #8]
 8029752:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8029754:	bf18      	it	ne
 8029756:	2300      	movne	r3, #0
 8029758:	3101      	adds	r1, #1
 802975a:	b29b      	uxth	r3, r3
 802975c:	9115      	str	r1, [sp, #84]	@ 0x54
 802975e:	9303      	str	r3, [sp, #12]
 8029760:	e63f      	b.n	80293e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8029762:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8029766:	b292      	uxth	r2, r2
 8029768:	fb93 f3f2 	sdiv	r3, r3, r2
 802976c:	b299      	uxth	r1, r3
 802976e:	9118      	str	r1, [sp, #96]	@ 0x60
 8029770:	e5e6      	b.n	8029340 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x4c>
 8029772:	4b03      	ldr	r3, [pc, #12]	@ (8029780 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48c>)
 8029774:	4a03      	ldr	r2, [pc, #12]	@ (8029784 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x490>)
 8029776:	f640 7142 	movw	r1, #3906	@ 0xf42
 802977a:	4803      	ldr	r0, [pc, #12]	@ (8029788 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x494>)
 802977c:	f008 fec4 	bl	8032508 <__assert_func>
 8029780:	080363b4 	.word	0x080363b4
 8029784:	080378a4 	.word	0x080378a4
 8029788:	080362f0 	.word	0x080362f0

0802978c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802978c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029790:	4617      	mov	r7, r2
 8029792:	8812      	ldrh	r2, [r2, #0]
 8029794:	b095      	sub	sp, #84	@ 0x54
 8029796:	461c      	mov	r4, r3
 8029798:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 802979c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802979e:	2a00      	cmp	r2, #0
 80297a0:	f040 8112 	bne.w	80299c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80297a4:	4688      	mov	r8, r1
 80297a6:	6820      	ldr	r0, [r4, #0]
 80297a8:	6861      	ldr	r1, [r4, #4]
 80297aa:	aa10      	add	r2, sp, #64	@ 0x40
 80297ac:	c203      	stmia	r2!, {r0, r1}
 80297ae:	6818      	ldr	r0, [r3, #0]
 80297b0:	6859      	ldr	r1, [r3, #4]
 80297b2:	aa12      	add	r2, sp, #72	@ 0x48
 80297b4:	c203      	stmia	r2!, {r0, r1}
 80297b6:	a810      	add	r0, sp, #64	@ 0x40
 80297b8:	f7e3 faca 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80297bc:	4621      	mov	r1, r4
 80297be:	a812      	add	r0, sp, #72	@ 0x48
 80297c0:	f7e3 faee 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80297c4:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 80297c8:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 80297cc:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 80297d0:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80297d4:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 80297d8:	487f      	ldr	r0, [pc, #508]	@ (80299d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80297da:	fb11 4105 	smlabb	r1, r1, r5, r4
 80297de:	4422      	add	r2, r4
 80297e0:	442b      	add	r3, r5
 80297e2:	6800      	ldr	r0, [r0, #0]
 80297e4:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 80297e8:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 80297ec:	6802      	ldr	r2, [r0, #0]
 80297ee:	4488      	add	r8, r1
 80297f0:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 80297f4:	4c79      	ldr	r4, [pc, #484]	@ (80299dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 80297f6:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80297fa:	910c      	str	r1, [sp, #48]	@ 0x30
 80297fc:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8029800:	42a3      	cmp	r3, r4
 8029802:	910e      	str	r1, [sp, #56]	@ 0x38
 8029804:	f040 80ab 	bne.w	802995e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8029808:	6841      	ldr	r1, [r0, #4]
 802980a:	4c75      	ldr	r4, [pc, #468]	@ (80299e0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 802980c:	680b      	ldr	r3, [r1, #0]
 802980e:	699b      	ldr	r3, [r3, #24]
 8029810:	42a3      	cmp	r3, r4
 8029812:	f040 80cb 	bne.w	80299ac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>
 8029816:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8029818:	4798      	blx	r3
 802981a:	4b72      	ldr	r3, [pc, #456]	@ (80299e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 802981c:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8029820:	881b      	ldrh	r3, [r3, #0]
 8029822:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8029826:	fb01 2303 	mla	r3, r1, r3, r2
 802982a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 802982e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8029830:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029832:	2b00      	cmp	r3, #0
 8029834:	f340 808b 	ble.w	802994e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8029838:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802983a:	2b00      	cmp	r3, #0
 802983c:	f340 8087 	ble.w	802994e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8029840:	2200      	movs	r2, #0
 8029842:	f04f 0c04 	mov.w	ip, #4
 8029846:	009b      	lsls	r3, r3, #2
 8029848:	920d      	str	r2, [sp, #52]	@ 0x34
 802984a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802984c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802984e:	4645      	mov	r5, r8
 8029850:	1d1c      	adds	r4, r3, #4
 8029852:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029854:	eb08 0e03 	add.w	lr, r8, r3
 8029858:	e048      	b.n	80298ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802985a:	fb09 f303 	mul.w	r3, r9, r3
 802985e:	1c5a      	adds	r2, r3, #1
 8029860:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029864:	121b      	asrs	r3, r3, #8
 8029866:	b2d8      	uxtb	r0, r3
 8029868:	43c1      	mvns	r1, r0
 802986a:	b29b      	uxth	r3, r3
 802986c:	fb1a f203 	smulbb	r2, sl, r3
 8029870:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 8029874:	b2c9      	uxtb	r1, r1
 8029876:	fb0a 2a01 	mla	sl, sl, r1, r2
 802987a:	fa1f fa8a 	uxth.w	sl, sl
 802987e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8029882:	f10a 0b01 	add.w	fp, sl, #1
 8029886:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802988a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802988e:	fb12 fb01 	smulbb	fp, r2, r1
 8029892:	f804 ac04 	strb.w	sl, [r4, #-4]
 8029896:	7872      	ldrb	r2, [r6, #1]
 8029898:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 802989c:	fb02 b203 	mla	r2, r2, r3, fp
 80298a0:	b292      	uxth	r2, r2
 80298a2:	f102 0b01 	add.w	fp, r2, #1
 80298a6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80298aa:	fb1a fa01 	smulbb	sl, sl, r1
 80298ae:	1212      	asrs	r2, r2, #8
 80298b0:	f804 2c03 	strb.w	r2, [r4, #-3]
 80298b4:	78b1      	ldrb	r1, [r6, #2]
 80298b6:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 80298ba:	fb01 a103 	mla	r1, r1, r3, sl
 80298be:	fb12 f303 	smulbb	r3, r2, r3
 80298c2:	b289      	uxth	r1, r1
 80298c4:	b29b      	uxth	r3, r3
 80298c6:	f101 0a01 	add.w	sl, r1, #1
 80298ca:	1c5e      	adds	r6, r3, #1
 80298cc:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80298d0:	4402      	add	r2, r0
 80298d2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80298d6:	1209      	asrs	r1, r1, #8
 80298d8:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 80298dc:	f804 1c02 	strb.w	r1, [r4, #-2]
 80298e0:	f804 3c01 	strb.w	r3, [r4, #-1]
 80298e4:	45ae      	cmp	lr, r5
 80298e6:	f104 0404 	add.w	r4, r4, #4
 80298ea:	d01c      	beq.n	8029926 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 80298ec:	f815 2b01 	ldrb.w	r2, [r5], #1
 80298f0:	fb1c c202 	smlabb	r2, ip, r2, ip
 80298f4:	18be      	adds	r6, r7, r2
 80298f6:	78f3      	ldrb	r3, [r6, #3]
 80298f8:	2b00      	cmp	r3, #0
 80298fa:	d0f3      	beq.n	80298e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 80298fc:	2bff      	cmp	r3, #255	@ 0xff
 80298fe:	f817 a002 	ldrb.w	sl, [r7, r2]
 8029902:	d1aa      	bne.n	802985a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8029904:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029908:	d1a7      	bne.n	802985a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 802990a:	f804 ac04 	strb.w	sl, [r4, #-4]
 802990e:	7873      	ldrb	r3, [r6, #1]
 8029910:	45ae      	cmp	lr, r5
 8029912:	f804 3c03 	strb.w	r3, [r4, #-3]
 8029916:	78b3      	ldrb	r3, [r6, #2]
 8029918:	f104 0404 	add.w	r4, r4, #4
 802991c:	f804 9c05 	strb.w	r9, [r4, #-5]
 8029920:	f804 3c06 	strb.w	r3, [r4, #-6]
 8029924:	d1e2      	bne.n	80298ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 8029926:	4b2f      	ldr	r3, [pc, #188]	@ (80299e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029928:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802992a:	881b      	ldrh	r3, [r3, #0]
 802992c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802992e:	1a5b      	subs	r3, r3, r1
 8029930:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029934:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8029936:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8029938:	4418      	add	r0, r3
 802993a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802993c:	3101      	adds	r1, #1
 802993e:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029942:	428b      	cmp	r3, r1
 8029944:	910d      	str	r1, [sp, #52]	@ 0x34
 8029946:	900b      	str	r0, [sp, #44]	@ 0x2c
 8029948:	4490      	add	r8, r2
 802994a:	f47f af7f 	bne.w	802984c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 802994e:	4b22      	ldr	r3, [pc, #136]	@ (80299d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029950:	6818      	ldr	r0, [r3, #0]
 8029952:	6803      	ldr	r3, [r0, #0]
 8029954:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029956:	4798      	blx	r3
 8029958:	b015      	add	sp, #84	@ 0x54
 802995a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802995e:	4798      	blx	r3
 8029960:	4603      	mov	r3, r0
 8029962:	2b01      	cmp	r3, #1
 8029964:	d126      	bne.n	80299b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>
 8029966:	4a20      	ldr	r2, [pc, #128]	@ (80299e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8029968:	6810      	ldr	r0, [r2, #0]
 802996a:	b338      	cbz	r0, 80299bc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>
 802996c:	f04f 0c02 	mov.w	ip, #2
 8029970:	260b      	movs	r6, #11
 8029972:	4a1c      	ldr	r2, [pc, #112]	@ (80299e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029974:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8029978:	8814      	ldrh	r4, [r2, #0]
 802997a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 802997e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8029982:	9406      	str	r4, [sp, #24]
 8029984:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8029988:	e9cd 2101 	strd	r2, r1, [sp, #4]
 802998c:	9305      	str	r3, [sp, #20]
 802998e:	f8cd 9010 	str.w	r9, [sp, #16]
 8029992:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8029996:	463a      	mov	r2, r7
 8029998:	4641      	mov	r1, r8
 802999a:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 802999e:	9503      	str	r5, [sp, #12]
 80299a0:	9400      	str	r4, [sp, #0]
 80299a2:	f7f7 f949 	bl	8020c38 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80299a6:	b015      	add	sp, #84	@ 0x54
 80299a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80299ac:	4608      	mov	r0, r1
 80299ae:	4798      	blx	r3
 80299b0:	4603      	mov	r3, r0
 80299b2:	e7d6      	b.n	8029962 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 80299b4:	4b08      	ldr	r3, [pc, #32]	@ (80299d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80299b6:	6818      	ldr	r0, [r3, #0]
 80299b8:	6802      	ldr	r2, [r0, #0]
 80299ba:	e72c      	b.n	8029816 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 80299bc:	4b0b      	ldr	r3, [pc, #44]	@ (80299ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 80299be:	4a0c      	ldr	r2, [pc, #48]	@ (80299f0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80299c0:	217c      	movs	r1, #124	@ 0x7c
 80299c2:	480c      	ldr	r0, [pc, #48]	@ (80299f4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 80299c4:	f008 fda0 	bl	8032508 <__assert_func>
 80299c8:	4b0b      	ldr	r3, [pc, #44]	@ (80299f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 80299ca:	4a0c      	ldr	r2, [pc, #48]	@ (80299fc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x270>)
 80299cc:	f241 012a 	movw	r1, #4138	@ 0x102a
 80299d0:	480b      	ldr	r0, [pc, #44]	@ (8029a00 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>)
 80299d2:	f008 fd99 	bl	8032508 <__assert_func>
 80299d6:	bf00      	nop
 80299d8:	20082f08 	.word	0x20082f08
 80299dc:	0800121d 	.word	0x0800121d
 80299e0:	0800baf5 	.word	0x0800baf5
 80299e4:	20082f02 	.word	0x20082f02
 80299e8:	200833a8 	.word	0x200833a8
 80299ec:	0803624c 	.word	0x0803624c
 80299f0:	08036ab8 	.word	0x08036ab8
 80299f4:	08036274 	.word	0x08036274
 80299f8:	08036364 	.word	0x08036364
 80299fc:	08037200 	.word	0x08037200
 8029a00:	080362f0 	.word	0x080362f0

08029a04 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 8029a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029a08:	f89d 0018 	ldrb.w	r0, [sp, #24]
 8029a0c:	fb03 f300 	mul.w	r3, r3, r0
 8029a10:	1c58      	adds	r0, r3, #1
 8029a12:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8029a16:	121b      	asrs	r3, r3, #8
 8029a18:	2bff      	cmp	r3, #255	@ 0xff
 8029a1a:	d039      	beq.n	8029a90 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8029a1c:	6810      	ldr	r0, [r2, #0]
 8029a1e:	0e07      	lsrs	r7, r0, #24
 8029a20:	d036      	beq.n	8029a90 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8029a22:	b2dc      	uxtb	r4, r3
 8029a24:	2b00      	cmp	r3, #0
 8029a26:	d03d      	beq.n	8029aa4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 8029a28:	fb04 f507 	mul.w	r5, r4, r7
 8029a2c:	1c6e      	adds	r6, r5, #1
 8029a2e:	eb06 2625 	add.w	r6, r6, r5, asr #8
 8029a32:	1236      	asrs	r6, r6, #8
 8029a34:	f891 8002 	ldrb.w	r8, [r1, #2]
 8029a38:	eba7 0e06 	sub.w	lr, r7, r6
 8029a3c:	b2c5      	uxtb	r5, r0
 8029a3e:	f891 c001 	ldrb.w	ip, [r1, #1]
 8029a42:	fb0e f505 	mul.w	r5, lr, r5
 8029a46:	fb03 f808 	mul.w	r8, r3, r8
 8029a4a:	7809      	ldrb	r1, [r1, #0]
 8029a4c:	fb03 fc0c 	mul.w	ip, r3, ip
 8029a50:	fb03 5501 	mla	r5, r3, r1, r5
 8029a54:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8029a58:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8029a5c:	fb0e 8101 	mla	r1, lr, r1, r8
 8029a60:	19e0      	adds	r0, r4, r7
 8029a62:	fb0e c303 	mla	r3, lr, r3, ip
 8029a66:	1b80      	subs	r0, r0, r6
 8029a68:	b2c0      	uxtb	r0, r0
 8029a6a:	fbb1 f1f0 	udiv	r1, r1, r0
 8029a6e:	fbb5 f4f0 	udiv	r4, r5, r0
 8029a72:	fbb3 f3f0 	udiv	r3, r3, r0
 8029a76:	0409      	lsls	r1, r1, #16
 8029a78:	b2e4      	uxtb	r4, r4
 8029a7a:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8029a7e:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8029a82:	021b      	lsls	r3, r3, #8
 8029a84:	4301      	orrs	r1, r0
 8029a86:	b29b      	uxth	r3, r3
 8029a88:	430b      	orrs	r3, r1
 8029a8a:	6013      	str	r3, [r2, #0]
 8029a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a90:	7848      	ldrb	r0, [r1, #1]
 8029a92:	788d      	ldrb	r5, [r1, #2]
 8029a94:	780c      	ldrb	r4, [r1, #0]
 8029a96:	0200      	lsls	r0, r0, #8
 8029a98:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 8029a9c:	4321      	orrs	r1, r4
 8029a9e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8029aa2:	6013      	str	r3, [r2, #0]
 8029aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08029aa8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029aac:	4692      	mov	sl, r2
 8029aae:	7812      	ldrb	r2, [r2, #0]
 8029ab0:	b095      	sub	sp, #84	@ 0x54
 8029ab2:	460d      	mov	r5, r1
 8029ab4:	461e      	mov	r6, r3
 8029ab6:	900d      	str	r0, [sp, #52]	@ 0x34
 8029ab8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029aba:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8029abe:	2a00      	cmp	r2, #0
 8029ac0:	f040 816b 	bne.w	8029d9a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 8029ac4:	6830      	ldr	r0, [r6, #0]
 8029ac6:	460f      	mov	r7, r1
 8029ac8:	6871      	ldr	r1, [r6, #4]
 8029aca:	aa10      	add	r2, sp, #64	@ 0x40
 8029acc:	c203      	stmia	r2!, {r0, r1}
 8029ace:	6818      	ldr	r0, [r3, #0]
 8029ad0:	6859      	ldr	r1, [r3, #4]
 8029ad2:	aa12      	add	r2, sp, #72	@ 0x48
 8029ad4:	c203      	stmia	r2!, {r0, r1}
 8029ad6:	a810      	add	r0, sp, #64	@ 0x40
 8029ad8:	f7e3 f93a 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029adc:	4631      	mov	r1, r6
 8029ade:	a812      	add	r0, sp, #72	@ 0x48
 8029ae0:	f7e3 f95e 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029ae4:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029ae8:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029aec:	f003 0201 	and.w	r2, r3, #1
 8029af0:	4614      	mov	r4, r2
 8029af2:	9208      	str	r2, [sp, #32]
 8029af4:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 8029af8:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 8029afc:	4423      	add	r3, r4
 8029afe:	fb02 1303 	mla	r3, r2, r3, r1
 8029b02:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 8029b06:	4402      	add	r2, r0
 8029b08:	48a7      	ldr	r0, [pc, #668]	@ (8029da8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029b0a:	440e      	add	r6, r1
 8029b0c:	6800      	ldr	r0, [r0, #0]
 8029b0e:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8029b12:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 8029b16:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029b1a:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8029b1e:	6802      	ldr	r2, [r0, #0]
 8029b20:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8029b24:	9302      	str	r3, [sp, #8]
 8029b26:	f001 0301 	and.w	r3, r1, #1
 8029b2a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8029b2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8029b2e:	9607      	str	r6, [sp, #28]
 8029b30:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 8029b34:	4790      	blx	r2
 8029b36:	4a9d      	ldr	r2, [pc, #628]	@ (8029dac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029b38:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8029b3c:	8812      	ldrh	r2, [r2, #0]
 8029b3e:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029b42:	fb04 f402 	mul.w	r4, r4, r2
 8029b46:	fb02 1303 	mla	r3, r2, r3, r1
 8029b4a:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8029b4e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8029b52:	429d      	cmp	r5, r3
 8029b54:	930a      	str	r3, [sp, #40]	@ 0x28
 8029b56:	f10a 0a04 	add.w	sl, sl, #4
 8029b5a:	f080 80f4 	bcs.w	8029d46 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8029b5e:	46bb      	mov	fp, r7
 8029b60:	1e73      	subs	r3, r6, #1
 8029b62:	930c      	str	r3, [sp, #48]	@ 0x30
 8029b64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029b66:	2b00      	cmp	r3, #0
 8029b68:	f000 8104 	beq.w	8029d74 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 8029b6c:	9a02      	ldr	r2, [sp, #8]
 8029b6e:	7813      	ldrb	r3, [r2, #0]
 8029b70:	1c54      	adds	r4, r2, #1
 8029b72:	f003 030f 	and.w	r3, r3, #15
 8029b76:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029b7a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029b7c:	0e1b      	lsrs	r3, r3, #24
 8029b7e:	f040 8104 	bne.w	8029d8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8029b82:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029b84:	3504      	adds	r5, #4
 8029b86:	2b01      	cmp	r3, #1
 8029b88:	f340 80bf 	ble.w	8029d0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8029b8c:	3b02      	subs	r3, #2
 8029b8e:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 8029b92:	9304      	str	r3, [sp, #16]
 8029b94:	f10e 0301 	add.w	r3, lr, #1
 8029b98:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 8029b9c:	9303      	str	r3, [sp, #12]
 8029b9e:	18e7      	adds	r7, r4, r3
 8029ba0:	f105 0808 	add.w	r8, r5, #8
 8029ba4:	46de      	mov	lr, fp
 8029ba6:	e00b      	b.n	8029bc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029ba8:	f005 050f 	and.w	r5, r5, #15
 8029bac:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 8029bb0:	3401      	adds	r4, #1
 8029bb2:	0e1a      	lsrs	r2, r3, #24
 8029bb4:	d153      	bne.n	8029c5e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8029bb6:	42bc      	cmp	r4, r7
 8029bb8:	f108 0808 	add.w	r8, r8, #8
 8029bbc:	f000 8099 	beq.w	8029cf2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 8029bc0:	7825      	ldrb	r5, [r4, #0]
 8029bc2:	092b      	lsrs	r3, r5, #4
 8029bc4:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029bc8:	0e1a      	lsrs	r2, r3, #24
 8029bca:	d0ed      	beq.n	8029ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029bcc:	fb0e f202 	mul.w	r2, lr, r2
 8029bd0:	1c51      	adds	r1, r2, #1
 8029bd2:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029bd6:	1212      	asrs	r2, r2, #8
 8029bd8:	2aff      	cmp	r2, #255	@ 0xff
 8029bda:	f000 80bc 	beq.w	8029d56 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029bde:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8029be2:	0e0e      	lsrs	r6, r1, #24
 8029be4:	f000 80b7 	beq.w	8029d56 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029be8:	b2d0      	uxtb	r0, r2
 8029bea:	2a00      	cmp	r2, #0
 8029bec:	d0dc      	beq.n	8029ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029bee:	fb00 fc06 	mul.w	ip, r0, r6
 8029bf2:	f10c 0501 	add.w	r5, ip, #1
 8029bf6:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029bfa:	122d      	asrs	r5, r5, #8
 8029bfc:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029bfe:	fa5f fb81 	uxtb.w	fp, r1
 8029c02:	1b75      	subs	r5, r6, r5
 8029c04:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029c08:	fb05 fb0b 	mul.w	fp, r5, fp
 8029c0c:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029c10:	fb02 f909 	mul.w	r9, r2, r9
 8029c14:	fb02 fc0c 	mul.w	ip, r2, ip
 8029c18:	b2db      	uxtb	r3, r3
 8029c1a:	fb02 b303 	mla	r3, r2, r3, fp
 8029c1e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029c22:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029c26:	fb05 9902 	mla	r9, r5, r2, r9
 8029c2a:	fb05 c101 	mla	r1, r5, r1, ip
 8029c2e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029c30:	4430      	add	r0, r6
 8029c32:	1b45      	subs	r5, r0, r5
 8029c34:	b2ed      	uxtb	r5, r5
 8029c36:	fbb9 f2f5 	udiv	r2, r9, r5
 8029c3a:	fbb3 f3f5 	udiv	r3, r3, r5
 8029c3e:	fbb1 f1f5 	udiv	r1, r1, r5
 8029c42:	0412      	lsls	r2, r2, #16
 8029c44:	b2db      	uxtb	r3, r3
 8029c46:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029c4a:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029c4e:	0209      	lsls	r1, r1, #8
 8029c50:	4313      	orrs	r3, r2
 8029c52:	b289      	uxth	r1, r1
 8029c54:	430b      	orrs	r3, r1
 8029c56:	f848 3c08 	str.w	r3, [r8, #-8]
 8029c5a:	7825      	ldrb	r5, [r4, #0]
 8029c5c:	e7a4      	b.n	8029ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029c5e:	fb0e f202 	mul.w	r2, lr, r2
 8029c62:	1c51      	adds	r1, r2, #1
 8029c64:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029c68:	1212      	asrs	r2, r2, #8
 8029c6a:	2aff      	cmp	r2, #255	@ 0xff
 8029c6c:	d07b      	beq.n	8029d66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029c6e:	f858 1c04 	ldr.w	r1, [r8, #-4]
 8029c72:	0e0e      	lsrs	r6, r1, #24
 8029c74:	d077      	beq.n	8029d66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029c76:	b2d0      	uxtb	r0, r2
 8029c78:	2a00      	cmp	r2, #0
 8029c7a:	d09c      	beq.n	8029bb6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029c7c:	fb00 fc06 	mul.w	ip, r0, r6
 8029c80:	f10c 0501 	add.w	r5, ip, #1
 8029c84:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029c88:	122d      	asrs	r5, r5, #8
 8029c8a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029c8c:	fa5f fb81 	uxtb.w	fp, r1
 8029c90:	1b75      	subs	r5, r6, r5
 8029c92:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029c96:	fb05 fb0b 	mul.w	fp, r5, fp
 8029c9a:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029c9e:	fb02 f909 	mul.w	r9, r2, r9
 8029ca2:	fb02 fc0c 	mul.w	ip, r2, ip
 8029ca6:	b2db      	uxtb	r3, r3
 8029ca8:	fb02 b303 	mla	r3, r2, r3, fp
 8029cac:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029cb0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029cb4:	fb05 9902 	mla	r9, r5, r2, r9
 8029cb8:	fb05 c101 	mla	r1, r5, r1, ip
 8029cbc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029cbe:	4430      	add	r0, r6
 8029cc0:	1b45      	subs	r5, r0, r5
 8029cc2:	b2ed      	uxtb	r5, r5
 8029cc4:	fbb9 f2f5 	udiv	r2, r9, r5
 8029cc8:	fbb3 f3f5 	udiv	r3, r3, r5
 8029ccc:	fbb1 f1f5 	udiv	r1, r1, r5
 8029cd0:	0412      	lsls	r2, r2, #16
 8029cd2:	b2db      	uxtb	r3, r3
 8029cd4:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029cd8:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029cdc:	0209      	lsls	r1, r1, #8
 8029cde:	4313      	orrs	r3, r2
 8029ce0:	b289      	uxth	r1, r1
 8029ce2:	430b      	orrs	r3, r1
 8029ce4:	42bc      	cmp	r4, r7
 8029ce6:	f848 3c04 	str.w	r3, [r8, #-4]
 8029cea:	f108 0808 	add.w	r8, r8, #8
 8029cee:	f47f af67 	bne.w	8029bc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029cf2:	46f3      	mov	fp, lr
 8029cf4:	f8dd e018 	ldr.w	lr, [sp, #24]
 8029cf8:	9a04      	ldr	r2, [sp, #16]
 8029cfa:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 8029cfe:	9d05      	ldr	r5, [sp, #20]
 8029d00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029d04:	9a03      	ldr	r2, [sp, #12]
 8029d06:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8029d0a:	2b01      	cmp	r3, #1
 8029d0c:	d107      	bne.n	8029d1e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 8029d0e:	7823      	ldrb	r3, [r4, #0]
 8029d10:	091b      	lsrs	r3, r3, #4
 8029d12:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029d16:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029d18:	0e1b      	lsrs	r3, r3, #24
 8029d1a:	d12e      	bne.n	8029d7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8029d1c:	3504      	adds	r5, #4
 8029d1e:	9908      	ldr	r1, [sp, #32]
 8029d20:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029d24:	4a21      	ldr	r2, [pc, #132]	@ (8029dac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029d26:	440b      	add	r3, r1
 8029d28:	8812      	ldrh	r2, [r2, #0]
 8029d2a:	9907      	ldr	r1, [sp, #28]
 8029d2c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029d30:	1a52      	subs	r2, r2, r1
 8029d32:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8029d36:	9a02      	ldr	r2, [sp, #8]
 8029d38:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8029d3c:	9302      	str	r3, [sp, #8]
 8029d3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029d40:	42ab      	cmp	r3, r5
 8029d42:	f63f af0f 	bhi.w	8029b64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8029d46:	4b18      	ldr	r3, [pc, #96]	@ (8029da8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029d48:	6818      	ldr	r0, [r3, #0]
 8029d4a:	6803      	ldr	r3, [r0, #0]
 8029d4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029d4e:	4798      	blx	r3
 8029d50:	b015      	add	sp, #84	@ 0x54
 8029d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029d56:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029d5a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029d5e:	f848 2c08 	str.w	r2, [r8, #-8]
 8029d62:	7825      	ldrb	r5, [r4, #0]
 8029d64:	e720      	b.n	8029ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029d66:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029d6a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029d6e:	f848 2c04 	str.w	r2, [r8, #-4]
 8029d72:	e720      	b.n	8029bb6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029d74:	9c02      	ldr	r4, [sp, #8]
 8029d76:	9b07      	ldr	r3, [sp, #28]
 8029d78:	e705      	b.n	8029b86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8029d7a:	9300      	str	r3, [sp, #0]
 8029d7c:	462a      	mov	r2, r5
 8029d7e:	465b      	mov	r3, fp
 8029d80:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d82:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d84:	f7ff fe3e 	bl	8029a04 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d88:	e7c8      	b.n	8029d1c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8029d8a:	9300      	str	r3, [sp, #0]
 8029d8c:	462a      	mov	r2, r5
 8029d8e:	465b      	mov	r3, fp
 8029d90:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d92:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d94:	f7ff fe36 	bl	8029a04 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d98:	e6f3      	b.n	8029b82 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8029d9a:	4b05      	ldr	r3, [pc, #20]	@ (8029db0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8029d9c:	4a05      	ldr	r2, [pc, #20]	@ (8029db4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8029d9e:	f241 018c 	movw	r1, #4236	@ 0x108c
 8029da2:	4805      	ldr	r0, [pc, #20]	@ (8029db8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x310>)
 8029da4:	f008 fbb0 	bl	8032508 <__assert_func>
 8029da8:	20082f08 	.word	0x20082f08
 8029dac:	20082f02 	.word	0x20082f02
 8029db0:	080363e4 	.word	0x080363e4
 8029db4:	080376f4 	.word	0x080376f4
 8029db8:	080362f0 	.word	0x080362f0

08029dbc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029dc0:	b093      	sub	sp, #76	@ 0x4c
 8029dc2:	9206      	str	r2, [sp, #24]
 8029dc4:	468b      	mov	fp, r1
 8029dc6:	7812      	ldrb	r2, [r2, #0]
 8029dc8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8029dcc:	461c      	mov	r4, r3
 8029dce:	9108      	str	r1, [sp, #32]
 8029dd0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029dd2:	2a00      	cmp	r2, #0
 8029dd4:	f040 815f 	bne.w	802a096 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2da>
 8029dd8:	6820      	ldr	r0, [r4, #0]
 8029dda:	6861      	ldr	r1, [r4, #4]
 8029ddc:	aa0e      	add	r2, sp, #56	@ 0x38
 8029dde:	c203      	stmia	r2!, {r0, r1}
 8029de0:	6818      	ldr	r0, [r3, #0]
 8029de2:	6859      	ldr	r1, [r3, #4]
 8029de4:	aa10      	add	r2, sp, #64	@ 0x40
 8029de6:	c203      	stmia	r2!, {r0, r1}
 8029de8:	a80e      	add	r0, sp, #56	@ 0x38
 8029dea:	f7e2 ffb1 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029dee:	4621      	mov	r1, r4
 8029df0:	a810      	add	r0, sp, #64	@ 0x40
 8029df2:	f7e2 ffd5 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029df6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8029dfa:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8029dfe:	f340 8137 	ble.w	802a070 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 8029e02:	2201      	movs	r2, #1
 8029e04:	b299      	uxth	r1, r3
 8029e06:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8029e0a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8029e0e:	fb93 f5f2 	sdiv	r5, r3, r2
 8029e12:	b2ae      	uxth	r6, r5
 8029e14:	fb02 3416 	mls	r4, r2, r6, r3
 8029e18:	fb14 0101 	smlabb	r1, r4, r1, r0
 8029e1c:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 8029e20:	fa1f fa81 	uxth.w	sl, r1
 8029e24:	4414      	add	r4, r2
 8029e26:	3c01      	subs	r4, #1
 8029e28:	fb94 f4f2 	sdiv	r4, r4, r2
 8029e2c:	b126      	cbz	r6, 8029e38 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x7c>
 8029e2e:	9a06      	ldr	r2, [sp, #24]
 8029e30:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8029e34:	ba12      	rev	r2, r2
 8029e36:	4493      	add	fp, r2
 8029e38:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8029e3c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8029e40:	4402      	add	r2, r0
 8029e42:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8029e46:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029e4a:	440b      	add	r3, r1
 8029e4c:	4616      	mov	r6, r2
 8029e4e:	4995      	ldr	r1, [pc, #596]	@ (802a0a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029e50:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8029e54:	6808      	ldr	r0, [r1, #0]
 8029e56:	9203      	str	r2, [sp, #12]
 8029e58:	6803      	ldr	r3, [r0, #0]
 8029e5a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8029e5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029e60:	4798      	blx	r3
 8029e62:	f1ba 0f00 	cmp.w	sl, #0
 8029e66:	bf0c      	ite	eq
 8029e68:	4633      	moveq	r3, r6
 8029e6a:	2300      	movne	r3, #0
 8029e6c:	498e      	ldr	r1, [pc, #568]	@ (802a0a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029e6e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8029e72:	8809      	ldrh	r1, [r1, #0]
 8029e74:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 8029e78:	fb05 f501 	mul.w	r5, r5, r1
 8029e7c:	fb01 6202 	mla	r2, r1, r2, r6
 8029e80:	b2a4      	uxth	r4, r4
 8029e82:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 8029e86:	00a2      	lsls	r2, r4, #2
 8029e88:	eb08 0485 	add.w	r4, r8, r5, lsl #2
 8029e8c:	3204      	adds	r2, #4
 8029e8e:	45a0      	cmp	r8, r4
 8029e90:	9207      	str	r2, [sp, #28]
 8029e92:	fa1f f983 	uxth.w	r9, r3
 8029e96:	d21e      	bcs.n	8029ed6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8029e98:	2300      	movs	r3, #0
 8029e9a:	4648      	mov	r0, r9
 8029e9c:	9301      	str	r3, [sp, #4]
 8029e9e:	461d      	mov	r5, r3
 8029ea0:	4653      	mov	r3, sl
 8029ea2:	b985      	cbnz	r5, 8029ec6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8029ea4:	f89b 2000 	ldrb.w	r2, [fp]
 8029ea8:	0995      	lsrs	r5, r2, #6
 8029eaa:	1e69      	subs	r1, r5, #1
 8029eac:	2902      	cmp	r1, #2
 8029eae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8029eb2:	bf88      	it	hi
 8029eb4:	f89b 5001 	ldrbhi.w	r5, [fp, #1]
 8029eb8:	9201      	str	r2, [sp, #4]
 8029eba:	bf9a      	itte	ls
 8029ebc:	f10b 0b01 	addls.w	fp, fp, #1
 8029ec0:	b2ad      	uxthls	r5, r5
 8029ec2:	f10b 0b02 	addhi.w	fp, fp, #2
 8029ec6:	b173      	cbz	r3, 8029ee6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8029ec8:	429d      	cmp	r5, r3
 8029eca:	d259      	bcs.n	8029f80 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c4>
 8029ecc:	1b5b      	subs	r3, r3, r5
 8029ece:	2500      	movs	r5, #0
 8029ed0:	b29b      	uxth	r3, r3
 8029ed2:	45a0      	cmp	r8, r4
 8029ed4:	d3e5      	bcc.n	8029ea2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8029ed6:	4b73      	ldr	r3, [pc, #460]	@ (802a0a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029ed8:	6818      	ldr	r0, [r3, #0]
 8029eda:	6803      	ldr	r3, [r0, #0]
 8029edc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029ede:	4798      	blx	r3
 8029ee0:	b013      	add	sp, #76	@ 0x4c
 8029ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029ee6:	2204      	movs	r2, #4
 8029ee8:	4616      	mov	r6, r2
 8029eea:	9907      	ldr	r1, [sp, #28]
 8029eec:	9a01      	ldr	r2, [sp, #4]
 8029eee:	4285      	cmp	r5, r0
 8029ef0:	fb16 1202 	smlabb	r2, r6, r2, r1
 8029ef4:	9906      	ldr	r1, [sp, #24]
 8029ef6:	588e      	ldr	r6, [r1, r2]
 8029ef8:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 8029efc:	d357      	bcc.n	8029fae <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8029efe:	1a2a      	subs	r2, r5, r0
 8029f00:	b292      	uxth	r2, r2
 8029f02:	9202      	str	r2, [sp, #8]
 8029f04:	2800      	cmp	r0, #0
 8029f06:	d041      	beq.n	8029f8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029f08:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8029f0c:	9a08      	ldr	r2, [sp, #32]
 8029f0e:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8029f12:	fb02 f20c 	mul.w	r2, r2, ip
 8029f16:	f102 0a01 	add.w	sl, r2, #1
 8029f1a:	eb0a 2222 	add.w	r2, sl, r2, asr #8
 8029f1e:	1212      	asrs	r2, r2, #8
 8029f20:	b2d1      	uxtb	r1, r2
 8029f22:	910a      	str	r1, [sp, #40]	@ 0x28
 8029f24:	b291      	uxth	r1, r2
 8029f26:	9109      	str	r1, [sp, #36]	@ 0x24
 8029f28:	fb02 f109 	mul.w	r1, r2, r9
 8029f2c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8029f30:	ea4f 2709 	mov.w	r7, r9, lsl #8
 8029f34:	b2f6      	uxtb	r6, r6
 8029f36:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 8029f3a:	4337      	orrs	r7, r6
 8029f3c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8029f3e:	fb06 f602 	mul.w	r6, r6, r2
 8029f42:	fb02 fe0e 	mul.w	lr, r2, lr
 8029f46:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 8029f4a:	f1bc 0f00 	cmp.w	ip, #0
 8029f4e:	d036      	beq.n	8029fbe <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8029f50:	2a00      	cmp	r2, #0
 8029f52:	d13b      	bne.n	8029fcc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8029f54:	9a04      	ldr	r2, [sp, #16]
 8029f56:	1e51      	subs	r1, r2, #1
 8029f58:	b289      	uxth	r1, r1
 8029f5a:	eb08 0c81 	add.w	ip, r8, r1, lsl #2
 8029f5e:	f1a8 0204 	sub.w	r2, r8, #4
 8029f62:	f852 6f04 	ldr.w	r6, [r2, #4]!
 8029f66:	0e36      	lsrs	r6, r6, #24
 8029f68:	bf08      	it	eq
 8029f6a:	6017      	streq	r7, [r2, #0]
 8029f6c:	4594      	cmp	ip, r2
 8029f6e:	d1f8      	bne.n	8029f62 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8029f70:	3101      	adds	r1, #1
 8029f72:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 8029f76:	4285      	cmp	r5, r0
 8029f78:	d208      	bcs.n	8029f8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029f7a:	9d02      	ldr	r5, [sp, #8]
 8029f7c:	9805      	ldr	r0, [sp, #20]
 8029f7e:	e7a8      	b.n	8029ed2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f80:	1aed      	subs	r5, r5, r3
 8029f82:	b2ad      	uxth	r5, r5
 8029f84:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 8029f88:	2300      	movs	r3, #0
 8029f8a:	e7a2      	b.n	8029ed2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f8c:	9903      	ldr	r1, [sp, #12]
 8029f8e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8029f92:	4a45      	ldr	r2, [pc, #276]	@ (802a0a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029f94:	b288      	uxth	r0, r1
 8029f96:	1a1b      	subs	r3, r3, r0
 8029f98:	8812      	ldrh	r2, [r2, #0]
 8029f9a:	b29b      	uxth	r3, r3
 8029f9c:	2b00      	cmp	r3, #0
 8029f9e:	eba2 0201 	sub.w	r2, r2, r1
 8029fa2:	9d02      	ldr	r5, [sp, #8]
 8029fa4:	bf18      	it	ne
 8029fa6:	2000      	movne	r0, #0
 8029fa8:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029fac:	e791      	b.n	8029ed2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029fae:	1b42      	subs	r2, r0, r5
 8029fb0:	b292      	uxth	r2, r2
 8029fb2:	9205      	str	r2, [sp, #20]
 8029fb4:	2d00      	cmp	r5, #0
 8029fb6:	d06b      	beq.n	802a090 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>
 8029fb8:	9504      	str	r5, [sp, #16]
 8029fba:	9302      	str	r3, [sp, #8]
 8029fbc:	e7a6      	b.n	8029f0c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 8029fbe:	9a04      	ldr	r2, [sp, #16]
 8029fc0:	3a01      	subs	r2, #1
 8029fc2:	b292      	uxth	r2, r2
 8029fc4:	3201      	adds	r2, #1
 8029fc6:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029fca:	e7d4      	b.n	8029f76 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8029fcc:	2aff      	cmp	r2, #255	@ 0xff
 8029fce:	9a04      	ldr	r2, [sp, #16]
 8029fd0:	d054      	beq.n	802a07c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 8029fd2:	f102 3aff 	add.w	sl, r2, #4294967295
 8029fd6:	fa1f fa8a 	uxth.w	sl, sl
 8029fda:	e9cd 6e0c 	strd	r6, lr, [sp, #48]	@ 0x30
 8029fde:	f10a 0a01 	add.w	sl, sl, #1
 8029fe2:	eb08 0a8a 	add.w	sl, r8, sl, lsl #2
 8029fe6:	9304      	str	r3, [sp, #16]
 8029fe8:	f8d8 2000 	ldr.w	r2, [r8]
 8029fec:	0e11      	lsrs	r1, r2, #24
 8029fee:	d038      	beq.n	802a062 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 8029ff0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8029ff2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029ff4:	fb11 f606 	smulbb	r6, r1, r6
 8029ff8:	b2b6      	uxth	r6, r6
 8029ffa:	f106 0e01 	add.w	lr, r6, #1
 8029ffe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802a002:	ea4f 2e26 	mov.w	lr, r6, asr #8
 802a006:	eba1 090e 	sub.w	r9, r1, lr
 802a00a:	b2d6      	uxtb	r6, r2
 802a00c:	fb09 3606 	mla	r6, r9, r6, r3
 802a010:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a012:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 802a016:	fb09 3c0c 	mla	ip, r9, ip, r3
 802a01a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a01c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802a020:	4419      	add	r1, r3
 802a022:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802a024:	eba1 010e 	sub.w	r1, r1, lr
 802a028:	fb09 3202 	mla	r2, r9, r2, r3
 802a02c:	b2c9      	uxtb	r1, r1
 802a02e:	fbb6 f6f1 	udiv	r6, r6, r1
 802a032:	fbbc fcf1 	udiv	ip, ip, r1
 802a036:	fbb2 f9f1 	udiv	r9, r2, r1
 802a03a:	b2f6      	uxtb	r6, r6
 802a03c:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 802a040:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 802a044:	f40c 027f 	and.w	r2, ip, #16711680	@ 0xff0000
 802a048:	ea4f 2109 	mov.w	r1, r9, lsl #8
 802a04c:	4332      	orrs	r2, r6
 802a04e:	b289      	uxth	r1, r1
 802a050:	430a      	orrs	r2, r1
 802a052:	f8c8 2000 	str.w	r2, [r8]
 802a056:	f108 0804 	add.w	r8, r8, #4
 802a05a:	45d0      	cmp	r8, sl
 802a05c:	d1c4      	bne.n	8029fe8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a05e:	9b04      	ldr	r3, [sp, #16]
 802a060:	e789      	b.n	8029f76 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a062:	f8c8 7000 	str.w	r7, [r8]
 802a066:	f108 0804 	add.w	r8, r8, #4
 802a06a:	45d0      	cmp	r8, sl
 802a06c:	d1bc      	bne.n	8029fe8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a06e:	e7f6      	b.n	802a05e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a2>
 802a070:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802a074:	b299      	uxth	r1, r3
 802a076:	fb94 f2f1 	sdiv	r2, r4, r1
 802a07a:	e6c4      	b.n	8029e06 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 802a07c:	3a01      	subs	r2, #1
 802a07e:	b292      	uxth	r2, r2
 802a080:	3201      	adds	r2, #1
 802a082:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 802a086:	f848 7b04 	str.w	r7, [r8], #4
 802a08a:	4590      	cmp	r8, r2
 802a08c:	d1fb      	bne.n	802a086 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ca>
 802a08e:	e772      	b.n	8029f76 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a090:	9805      	ldr	r0, [sp, #20]
 802a092:	462b      	mov	r3, r5
 802a094:	e71d      	b.n	8029ed2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a096:	4b05      	ldr	r3, [pc, #20]	@ (802a0ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 802a098:	4a05      	ldr	r2, [pc, #20]	@ (802a0b0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>)
 802a09a:	f241 01eb 	movw	r1, #4331	@ 0x10eb
 802a09e:	4805      	ldr	r0, [pc, #20]	@ (802a0b4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f8>)
 802a0a0:	f008 fa32 	bl	8032508 <__assert_func>
 802a0a4:	20082f08 	.word	0x20082f08
 802a0a8:	20082f02 	.word	0x20082f02
 802a0ac:	080363e4 	.word	0x080363e4
 802a0b0:	08037b00 	.word	0x08037b00
 802a0b4:	080362f0 	.word	0x080362f0

0802a0b8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802a0b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0bc:	b0a1      	sub	sp, #132	@ 0x84
 802a0be:	9210      	str	r2, [sp, #64]	@ 0x40
 802a0c0:	9119      	str	r1, [sp, #100]	@ 0x64
 802a0c2:	7812      	ldrb	r2, [r2, #0]
 802a0c4:	f89d 10ac 	ldrb.w	r1, [sp, #172]	@ 0xac
 802a0c8:	461c      	mov	r4, r3
 802a0ca:	9104      	str	r1, [sp, #16]
 802a0cc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a0ce:	2a00      	cmp	r2, #0
 802a0d0:	f040 8215 	bne.w	802a4fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 802a0d4:	6861      	ldr	r1, [r4, #4]
 802a0d6:	4683      	mov	fp, r0
 802a0d8:	6820      	ldr	r0, [r4, #0]
 802a0da:	aa1c      	add	r2, sp, #112	@ 0x70
 802a0dc:	c203      	stmia	r2!, {r0, r1}
 802a0de:	6818      	ldr	r0, [r3, #0]
 802a0e0:	6859      	ldr	r1, [r3, #4]
 802a0e2:	aa1e      	add	r2, sp, #120	@ 0x78
 802a0e4:	c203      	stmia	r2!, {r0, r1}
 802a0e6:	a81c      	add	r0, sp, #112	@ 0x70
 802a0e8:	f7e2 fe32 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a0ec:	4621      	mov	r1, r4
 802a0ee:	a81e      	add	r0, sp, #120	@ 0x78
 802a0f0:	f7e2 fe56 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a0f4:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 802a0f8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 802a0fc:	f340 81f7 	ble.w	802a4ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 802a100:	2301      	movs	r3, #1
 802a102:	b289      	uxth	r1, r1
 802a104:	931a      	str	r3, [sp, #104]	@ 0x68
 802a106:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 802a10a:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 802a10e:	fb90 f4f3 	sdiv	r4, r0, r3
 802a112:	441a      	add	r2, r3
 802a114:	3a01      	subs	r2, #1
 802a116:	fb92 f2f3 	sdiv	r2, r2, r3
 802a11a:	b2a4      	uxth	r4, r4
 802a11c:	fb03 0314 	mls	r3, r3, r4, r0
 802a120:	9418      	str	r4, [sp, #96]	@ 0x60
 802a122:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 802a126:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 802a12a:	fb13 4101 	smlabb	r1, r3, r1, r4
 802a12e:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 802a132:	4bc6      	ldr	r3, [pc, #792]	@ (802a44c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a134:	4434      	add	r4, r6
 802a136:	4405      	add	r5, r0
 802a138:	6818      	ldr	r0, [r3, #0]
 802a13a:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 802a13e:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 802a142:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 802a146:	6803      	ldr	r3, [r0, #0]
 802a148:	3201      	adds	r2, #1
 802a14a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802a14c:	9608      	str	r6, [sp, #32]
 802a14e:	fa1f f881 	uxth.w	r8, r1
 802a152:	b294      	uxth	r4, r2
 802a154:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 802a158:	4798      	blx	r3
 802a15a:	2300      	movs	r3, #0
 802a15c:	49bc      	ldr	r1, [pc, #752]	@ (802a450 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 802a15e:	f1b8 0f00 	cmp.w	r8, #0
 802a162:	bf08      	it	eq
 802a164:	4632      	moveq	r2, r6
 802a166:	8809      	ldrh	r1, [r1, #0]
 802a168:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 802a16c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a16e:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 802a172:	fb05 f501 	mul.w	r5, r5, r1
 802a176:	fb01 6303 	mla	r3, r1, r3, r6
 802a17a:	ea4f 0484 	mov.w	r4, r4, lsl #2
 802a17e:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 802a182:	f104 0304 	add.w	r3, r4, #4
 802a186:	9315      	str	r3, [sp, #84]	@ 0x54
 802a188:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 802a18c:	bf18      	it	ne
 802a18e:	2200      	movne	r2, #0
 802a190:	9303      	str	r3, [sp, #12]
 802a192:	f10b 030e 	add.w	r3, fp, #14
 802a196:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a198:	465b      	mov	r3, fp
 802a19a:	fa1f f982 	uxth.w	r9, r2
 802a19e:	46cb      	mov	fp, r9
 802a1a0:	46b4      	mov	ip, r6
 802a1a2:	4647      	mov	r7, r8
 802a1a4:	4699      	mov	r9, r3
 802a1a6:	9b03      	ldr	r3, [sp, #12]
 802a1a8:	459c      	cmp	ip, r3
 802a1aa:	f080 8104 	bcs.w	802a3b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a1ae:	e9dd 2017 	ldrd	r2, r0, [sp, #92]	@ 0x5c
 802a1b2:	2301      	movs	r3, #1
 802a1b4:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 802a1b8:	2500      	movs	r5, #0
 802a1ba:	fbb7 f1f1 	udiv	r1, r7, r1
 802a1be:	f04f 0a01 	mov.w	sl, #1
 802a1c2:	fa10 f282 	uxtah	r2, r0, r2
 802a1c6:	0092      	lsls	r2, r2, #2
 802a1c8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802a1ca:	3204      	adds	r2, #4
 802a1cc:	4410      	add	r0, r2
 802a1ce:	9305      	str	r3, [sp, #20]
 802a1d0:	7883      	ldrb	r3, [r0, #2]
 802a1d2:	7844      	ldrb	r4, [r0, #1]
 802a1d4:	021b      	lsls	r3, r3, #8
 802a1d6:	78c0      	ldrb	r0, [r0, #3]
 802a1d8:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802a1da:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 802a1de:	4304      	orrs	r4, r0
 802a1e0:	1930      	adds	r0, r6, r4
 802a1e2:	7843      	ldrb	r3, [r0, #1]
 802a1e4:	5d34      	ldrb	r4, [r6, r4]
 802a1e6:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802a1e8:	021b      	lsls	r3, r3, #8
 802a1ea:	5cb2      	ldrb	r2, [r6, r2]
 802a1ec:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802a1ee:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802a1f2:	1a71      	subs	r1, r6, r1
 802a1f4:	431c      	orrs	r4, r3
 802a1f6:	920a      	str	r2, [sp, #40]	@ 0x28
 802a1f8:	3201      	adds	r2, #1
 802a1fa:	f889 400d 	strb.w	r4, [r9, #13]
 802a1fe:	9512      	str	r5, [sp, #72]	@ 0x48
 802a200:	9202      	str	r2, [sp, #8]
 802a202:	4666      	mov	r6, ip
 802a204:	b28a      	uxth	r2, r1
 802a206:	46d6      	mov	lr, sl
 802a208:	4629      	mov	r1, r5
 802a20a:	464d      	mov	r5, r9
 802a20c:	46d9      	mov	r9, fp
 802a20e:	b2a4      	uxth	r4, r4
 802a210:	3001      	adds	r0, #1
 802a212:	9407      	str	r4, [sp, #28]
 802a214:	9001      	str	r0, [sp, #4]
 802a216:	9216      	str	r2, [sp, #88]	@ 0x58
 802a218:	2f00      	cmp	r7, #0
 802a21a:	d034      	beq.n	802a286 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ce>
 802a21c:	45ba      	cmp	sl, r7
 802a21e:	f080 80d2 	bcs.w	802a3c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 802a222:	9b03      	ldr	r3, [sp, #12]
 802a224:	eba7 070a 	sub.w	r7, r7, sl
 802a228:	429e      	cmp	r6, r3
 802a22a:	b2bf      	uxth	r7, r7
 802a22c:	f080 80c3 	bcs.w	802a3b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a230:	9801      	ldr	r0, [sp, #4]
 802a232:	f1ce 0107 	rsb	r1, lr, #7
 802a236:	7842      	ldrb	r2, [r0, #1]
 802a238:	7803      	ldrb	r3, [r0, #0]
 802a23a:	408a      	lsls	r2, r1
 802a23c:	fa43 f30e 	asr.w	r3, r3, lr
 802a240:	0052      	lsls	r2, r2, #1
 802a242:	f10e 0101 	add.w	r1, lr, #1
 802a246:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802a24a:	b2db      	uxtb	r3, r3
 802a24c:	fa5f fe81 	uxtb.w	lr, r1
 802a250:	4313      	orrs	r3, r2
 802a252:	f1be 0f08 	cmp.w	lr, #8
 802a256:	b29a      	uxth	r2, r3
 802a258:	f000 80f1 	beq.w	802a43e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x386>
 802a25c:	3001      	adds	r0, #1
 802a25e:	9001      	str	r0, [sp, #4]
 802a260:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a262:	4291      	cmp	r1, r2
 802a264:	f0c0 80c0 	bcc.w	802a3e8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802a268:	f04f 0a01 	mov.w	sl, #1
 802a26c:	b2db      	uxtb	r3, r3
 802a26e:	736b      	strb	r3, [r5, #13]
 802a270:	9902      	ldr	r1, [sp, #8]
 802a272:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802a276:	f0c0 810a 	bcc.w	802a48e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 802a27a:	9207      	str	r2, [sp, #28]
 802a27c:	f8cd a014 	str.w	sl, [sp, #20]
 802a280:	2100      	movs	r1, #0
 802a282:	2f00      	cmp	r7, #0
 802a284:	d1ca      	bne.n	802a21c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802a286:	45ca      	cmp	sl, r9
 802a288:	f0c0 80cd 	bcc.w	802a426 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36e>
 802a28c:	ebaa 0309 	sub.w	r3, sl, r9
 802a290:	b29b      	uxth	r3, r3
 802a292:	9309      	str	r3, [sp, #36]	@ 0x24
 802a294:	f1b9 0f00 	cmp.w	r9, #0
 802a298:	f000 80dc 	beq.w	802a454 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39c>
 802a29c:	464b      	mov	r3, r9
 802a29e:	f8cd 9018 	str.w	r9, [sp, #24]
 802a2a2:	9711      	str	r7, [sp, #68]	@ 0x44
 802a2a4:	18cb      	adds	r3, r1, r3
 802a2a6:	e9cd ea0d 	strd	lr, sl, [sp, #52]	@ 0x34
 802a2aa:	46b3      	mov	fp, r6
 802a2ac:	fa1f fc83 	uxth.w	ip, r3
 802a2b0:	e9cd 690b 	strd	r6, r9, [sp, #44]	@ 0x2c
 802a2b4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 802a2b8:	970f      	str	r7, [sp, #60]	@ 0x3c
 802a2ba:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 802a2be:	e045      	b.n	802a34c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a2c0:	f8db 0000 	ldr.w	r0, [fp]
 802a2c4:	0e07      	lsrs	r7, r0, #24
 802a2c6:	d055      	beq.n	802a374 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2bc>
 802a2c8:	b2d4      	uxtb	r4, r2
 802a2ca:	2a00      	cmp	r2, #0
 802a2cc:	d03a      	beq.n	802a344 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a2ce:	fb04 fe07 	mul.w	lr, r4, r7
 802a2d2:	f10e 0601 	add.w	r6, lr, #1
 802a2d6:	eb06 262e 	add.w	r6, r6, lr, asr #8
 802a2da:	1236      	asrs	r6, r6, #8
 802a2dc:	fa5f fe80 	uxtb.w	lr, r0
 802a2e0:	9614      	str	r6, [sp, #80]	@ 0x50
 802a2e2:	1bbe      	subs	r6, r7, r6
 802a2e4:	9413      	str	r4, [sp, #76]	@ 0x4c
 802a2e6:	f3c3 4907 	ubfx	r9, r3, #16, #8
 802a2ea:	fb06 f40e 	mul.w	r4, r6, lr
 802a2ee:	fb02 f909 	mul.w	r9, r2, r9
 802a2f2:	f3c3 2e07 	ubfx	lr, r3, #8, #8
 802a2f6:	fb02 fe0e 	mul.w	lr, r2, lr
 802a2fa:	b2db      	uxtb	r3, r3
 802a2fc:	fb02 4303 	mla	r3, r2, r3, r4
 802a300:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802a304:	fb06 9902 	mla	r9, r6, r2, r9
 802a308:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a30c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a30e:	fb06 e000 	mla	r0, r6, r0, lr
 802a312:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a314:	443a      	add	r2, r7
 802a316:	1b94      	subs	r4, r2, r6
 802a318:	b2e4      	uxtb	r4, r4
 802a31a:	fbb9 f9f4 	udiv	r9, r9, r4
 802a31e:	fbb3 f3f4 	udiv	r3, r3, r4
 802a322:	fbb0 f0f4 	udiv	r0, r0, r4
 802a326:	ea4f 4909 	mov.w	r9, r9, lsl #16
 802a32a:	b2db      	uxtb	r3, r3
 802a32c:	f409 097f 	and.w	r9, r9, #16711680	@ 0xff0000
 802a330:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 802a334:	0200      	lsls	r0, r0, #8
 802a336:	ea43 0909 	orr.w	r9, r3, r9
 802a33a:	b280      	uxth	r0, r0
 802a33c:	ea49 0000 	orr.w	r0, r9, r0
 802a340:	f8cb 0000 	str.w	r0, [fp]
 802a344:	4561      	cmp	r1, ip
 802a346:	f10b 0b04 	add.w	fp, fp, #4
 802a34a:	d01d      	beq.n	802a388 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 802a34c:	2204      	movs	r2, #4
 802a34e:	186b      	adds	r3, r5, r1
 802a350:	7b5b      	ldrb	r3, [r3, #13]
 802a352:	3101      	adds	r1, #1
 802a354:	fb12 a303 	smlabb	r3, r2, r3, sl
 802a358:	f858 3003 	ldr.w	r3, [r8, r3]
 802a35c:	b289      	uxth	r1, r1
 802a35e:	0e1a      	lsrs	r2, r3, #24
 802a360:	d0f0      	beq.n	802a344 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a362:	9804      	ldr	r0, [sp, #16]
 802a364:	fb00 f202 	mul.w	r2, r0, r2
 802a368:	1c50      	adds	r0, r2, #1
 802a36a:	eb00 2222 	add.w	r2, r0, r2, asr #8
 802a36e:	1212      	asrs	r2, r2, #8
 802a370:	2aff      	cmp	r2, #255	@ 0xff
 802a372:	d1a5      	bne.n	802a2c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x208>
 802a374:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 802a378:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 802a37c:	4561      	cmp	r1, ip
 802a37e:	f8cb 2000 	str.w	r2, [fp]
 802a382:	f10b 0b04 	add.w	fp, fp, #4
 802a386:	d1e1      	bne.n	802a34c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a388:	e9dd 690b 	ldrd	r6, r9, [sp, #44]	@ 0x2c
 802a38c:	e9dd ea0d 	ldrd	lr, sl, [sp, #52]	@ 0x34
 802a390:	9b06      	ldr	r3, [sp, #24]
 802a392:	45ca      	cmp	sl, r9
 802a394:	f103 33ff 	add.w	r3, r3, #4294967295
 802a398:	b29b      	uxth	r3, r3
 802a39a:	f103 0301 	add.w	r3, r3, #1
 802a39e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802a3a0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a3a4:	d257      	bcs.n	802a456 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39e>
 802a3a6:	9b03      	ldr	r3, [sp, #12]
 802a3a8:	4661      	mov	r1, ip
 802a3aa:	429e      	cmp	r6, r3
 802a3ac:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a3b0:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a3b4:	d313      	bcc.n	802a3de <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x326>
 802a3b6:	4b25      	ldr	r3, [pc, #148]	@ (802a44c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a3b8:	6818      	ldr	r0, [r3, #0]
 802a3ba:	6803      	ldr	r3, [r0, #0]
 802a3bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802a3be:	4798      	blx	r3
 802a3c0:	b021      	add	sp, #132	@ 0x84
 802a3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a3c6:	ebaa 0a07 	sub.w	sl, sl, r7
 802a3ca:	4439      	add	r1, r7
 802a3cc:	2700      	movs	r7, #0
 802a3ce:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a3d2:	fa1f fa8a 	uxth.w	sl, sl
 802a3d6:	b289      	uxth	r1, r1
 802a3d8:	9b03      	ldr	r3, [sp, #12]
 802a3da:	429e      	cmp	r6, r3
 802a3dc:	d2eb      	bcs.n	802a3b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a3de:	f1ba 0f00 	cmp.w	sl, #0
 802a3e2:	f47f af19 	bne.w	802a218 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a3e6:	e723      	b.n	802a230 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a3e8:	9b02      	ldr	r3, [sp, #8]
 802a3ea:	4293      	cmp	r3, r2
 802a3ec:	d852      	bhi.n	802a494 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3dc>
 802a3ee:	9805      	ldr	r0, [sp, #20]
 802a3f0:	7b69      	ldrb	r1, [r5, #13]
 802a3f2:	182b      	adds	r3, r5, r0
 802a3f4:	7359      	strb	r1, [r3, #13]
 802a3f6:	7b6b      	ldrb	r3, [r5, #13]
 802a3f8:	1c41      	adds	r1, r0, #1
 802a3fa:	fa1f fa81 	uxth.w	sl, r1
 802a3fe:	9c02      	ldr	r4, [sp, #8]
 802a400:	f8cd a014 	str.w	sl, [sp, #20]
 802a404:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 802a408:	f104 0c01 	add.w	ip, r4, #1
 802a40c:	9c07      	ldr	r4, [sp, #28]
 802a40e:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 802a412:	fa1f f38c 	uxth.w	r3, ip
 802a416:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 802a41a:	f8a0 4050 	strh.w	r4, [r0, #80]	@ 0x50
 802a41e:	9302      	str	r3, [sp, #8]
 802a420:	9207      	str	r2, [sp, #28]
 802a422:	2100      	movs	r1, #0
 802a424:	e6f8      	b.n	802a218 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a426:	eba9 030a 	sub.w	r3, r9, sl
 802a42a:	b29b      	uxth	r3, r3
 802a42c:	9311      	str	r3, [sp, #68]	@ 0x44
 802a42e:	f1ba 0f00 	cmp.w	sl, #0
 802a432:	d06b      	beq.n	802a50c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x454>
 802a434:	f8cd a018 	str.w	sl, [sp, #24]
 802a438:	9709      	str	r7, [sp, #36]	@ 0x24
 802a43a:	4653      	mov	r3, sl
 802a43c:	e732      	b.n	802a2a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 802a43e:	4601      	mov	r1, r0
 802a440:	3102      	adds	r1, #2
 802a442:	f04f 0e00 	mov.w	lr, #0
 802a446:	9101      	str	r1, [sp, #4]
 802a448:	e70a      	b.n	802a260 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 802a44a:	bf00      	nop
 802a44c:	20082f08 	.word	0x20082f08
 802a450:	20082f02 	.word	0x20082f02
 802a454:	468c      	mov	ip, r1
 802a456:	4b31      	ldr	r3, [pc, #196]	@ (802a51c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x464>)
 802a458:	9908      	ldr	r1, [sp, #32]
 802a45a:	881b      	ldrh	r3, [r3, #0]
 802a45c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802a45e:	1a5b      	subs	r3, r3, r1
 802a460:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a464:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802a466:	3201      	adds	r2, #1
 802a468:	4293      	cmp	r3, r2
 802a46a:	9212      	str	r2, [sp, #72]	@ 0x48
 802a46c:	d02d      	beq.n	802a4ca <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802a46e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a472:	f8bd 7074 	ldrh.w	r7, [sp, #116]	@ 0x74
 802a476:	4661      	mov	r1, ip
 802a478:	eba7 0709 	sub.w	r7, r7, r9
 802a47c:	b2bf      	uxth	r7, r7
 802a47e:	2f00      	cmp	r7, #0
 802a480:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a484:	bf14      	ite	ne
 802a486:	f04f 0900 	movne.w	r9, #0
 802a48a:	2700      	moveq	r7, #0
 802a48c:	e7a4      	b.n	802a3d8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 802a48e:	9905      	ldr	r1, [sp, #20]
 802a490:	3101      	adds	r1, #1
 802a492:	e7b4      	b.n	802a3fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x346>
 802a494:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 802a498:	f893 a04f 	ldrb.w	sl, [r3, #79]	@ 0x4f
 802a49c:	4613      	mov	r3, r2
 802a49e:	f1ba 0f01 	cmp.w	sl, #1
 802a4a2:	d90d      	bls.n	802a4c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x408>
 802a4a4:	f10a 010d 	add.w	r1, sl, #13
 802a4a8:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 802a4aa:	4429      	add	r1, r5
 802a4ac:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 802a4b0:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802a4b4:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802a4b8:	428c      	cmp	r4, r1
 802a4ba:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802a4be:	d1f5      	bne.n	802a4ac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f4>
 802a4c0:	b2db      	uxtb	r3, r3
 802a4c2:	736b      	strb	r3, [r5, #13]
 802a4c4:	fa1f fa8a 	uxth.w	sl, sl
 802a4c8:	e6d2      	b.n	802a270 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 802a4ca:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 802a4ce:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 802a4d2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802a4d4:	1a9b      	subs	r3, r3, r2
 802a4d6:	b29f      	uxth	r7, r3
 802a4d8:	2f00      	cmp	r7, #0
 802a4da:	9b08      	ldr	r3, [sp, #32]
 802a4dc:	bf18      	it	ne
 802a4de:	2300      	movne	r3, #0
 802a4e0:	3101      	adds	r1, #1
 802a4e2:	46b4      	mov	ip, r6
 802a4e4:	46a9      	mov	r9, r5
 802a4e6:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a4e8:	fa1f fb83 	uxth.w	fp, r3
 802a4ec:	e65b      	b.n	802a1a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802a4ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802a4f2:	b289      	uxth	r1, r1
 802a4f4:	fb93 f3f1 	sdiv	r3, r3, r1
 802a4f8:	b29a      	uxth	r2, r3
 802a4fa:	921a      	str	r2, [sp, #104]	@ 0x68
 802a4fc:	e603      	b.n	802a106 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4e>
 802a4fe:	4b08      	ldr	r3, [pc, #32]	@ (802a520 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x468>)
 802a500:	4a08      	ldr	r2, [pc, #32]	@ (802a524 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46c>)
 802a502:	f241 1181 	movw	r1, #4481	@ 0x1181
 802a506:	4808      	ldr	r0, [pc, #32]	@ (802a528 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x470>)
 802a508:	f007 fffe 	bl	8032508 <__assert_func>
 802a50c:	9b03      	ldr	r3, [sp, #12]
 802a50e:	429e      	cmp	r6, r3
 802a510:	f4bf af51 	bcs.w	802a3b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a514:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a518:	e68a      	b.n	802a230 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a51a:	bf00      	nop
 802a51c:	20082f02 	.word	0x20082f02
 802a520:	080363e4 	.word	0x080363e4
 802a524:	08037dcc 	.word	0x08037dcc
 802a528:	080362f0 	.word	0x080362f0

0802a52c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802a52c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a530:	7814      	ldrb	r4, [r2, #0]
 802a532:	7855      	ldrb	r5, [r2, #1]
 802a534:	2c01      	cmp	r4, #1
 802a536:	9e06      	ldr	r6, [sp, #24]
 802a538:	f89d 701c 	ldrb.w	r7, [sp, #28]
 802a53c:	d013      	beq.n	802a566 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3a>
 802a53e:	d304      	bcc.n	802a54a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 802a540:	2c02      	cmp	r4, #2
 802a542:	f000 80ca 	beq.w	802a6da <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ae>
 802a546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a54a:	7b04      	ldrb	r4, [r0, #12]
 802a54c:	2c01      	cmp	r4, #1
 802a54e:	d02d      	beq.n	802a5ac <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x80>
 802a550:	d317      	bcc.n	802a582 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802a552:	2c02      	cmp	r4, #2
 802a554:	f040 80cf 	bne.w	802a6f6 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ca>
 802a558:	2d03      	cmp	r5, #3
 802a55a:	f200 80da 	bhi.w	802a712 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e6>
 802a55e:	e8df f005 	tbb	[pc, r5]
 802a562:	989e      	.short	0x989e
 802a564:	8c92      	.short	0x8c92
 802a566:	7b04      	ldrb	r4, [r0, #12]
 802a568:	2c01      	cmp	r4, #1
 802a56a:	d018      	beq.n	802a59e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x72>
 802a56c:	d310      	bcc.n	802a590 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x64>
 802a56e:	2c02      	cmp	r4, #2
 802a570:	f040 80ba 	bne.w	802a6e8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1bc>
 802a574:	2d03      	cmp	r5, #3
 802a576:	f200 80c5 	bhi.w	802a704 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1d8>
 802a57a:	e8df f005 	tbb	[pc, r5]
 802a57e:	a2a8      	.short	0xa2a8
 802a580:	969c      	.short	0x969c
 802a582:	2d03      	cmp	r5, #3
 802a584:	f200 80d3 	bhi.w	802a72e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x202>
 802a588:	e8df f005 	tbb	[pc, r5]
 802a58c:	5f656b71 	.word	0x5f656b71
 802a590:	2d03      	cmp	r5, #3
 802a592:	f200 80c5 	bhi.w	802a720 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1f4>
 802a596:	e8df f005 	tbb	[pc, r5]
 802a59a:	4c52      	.short	0x4c52
 802a59c:	4046      	.short	0x4046
 802a59e:	2d03      	cmp	r5, #3
 802a5a0:	f200 80d3 	bhi.w	802a74a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x21e>
 802a5a4:	e8df f005 	tbb	[pc, r5]
 802a5a8:	21272d33 	.word	0x21272d33
 802a5ac:	2d03      	cmp	r5, #3
 802a5ae:	f200 80c5 	bhi.w	802a73c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x210>
 802a5b2:	e8df f005 	tbb	[pc, r5]
 802a5b6:	0e14      	.short	0x0e14
 802a5b8:	0208      	.short	0x0208
 802a5ba:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5c2:	f7fd b8e3 	b.w	802778c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5c6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ce:	f7fc bead 	b.w	802732c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5d2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5da:	f7fc bcad 	b.w	8026f38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5de:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5e6:	f7fc bb83 	b.w	8026cf0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5ea:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5f2:	f7fd bf9d 	b.w	8028530 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5f6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5fe:	f7fd be47 	b.w	8028290 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a602:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a606:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a60a:	f7fd bc13 	b.w	8027e34 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a60e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a612:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a616:	f7fd badd 	b.w	8027bd4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a61a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a61e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a622:	f7fc b93f 	b.w	80268a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a626:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a62a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a62e:	f7fb bfd7 	b.w	80265e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a632:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a636:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a63a:	f7fb bd63 	b.w	8026104 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a63e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a642:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a646:	f7fb bc05 	b.w	8025e54 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a64a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a64e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a652:	f7fb b9a7 	b.w	80259a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a656:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a65a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a65e:	f7fa bfd3 	b.w	8025608 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a662:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a666:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a66a:	f7fa bde7 	b.w	802523c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a66e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a672:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a676:	f7fa bc41 	b.w	8024efc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a67a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a67e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a682:	f7ff bd19 	b.w	802a0b8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a686:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a68a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a68e:	f7ff bb95 	b.w	8029dbc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a692:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a696:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a69a:	f7ff ba05 	b.w	8029aa8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a69e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6a6:	f7ff b871 	b.w	802978c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6aa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6b2:	f7fe be1f 	b.w	80292f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6b6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6be:	f7fe bcaf 	b.w	8029020 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6c2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6ca:	f7fe ba8b 	b.w	8028be4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6ce:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6d6:	f7fe b955 	b.w	8028984 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6da:	4b1f      	ldr	r3, [pc, #124]	@ (802a758 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22c>)
 802a6dc:	4a1f      	ldr	r2, [pc, #124]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6de:	f240 31f3 	movw	r1, #1011	@ 0x3f3
 802a6e2:	481f      	ldr	r0, [pc, #124]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6e4:	f007 ff10 	bl	8032508 <__assert_func>
 802a6e8:	4b1e      	ldr	r3, [pc, #120]	@ (802a764 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a6ea:	4a1c      	ldr	r2, [pc, #112]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6ec:	f240 4179 	movw	r1, #1145	@ 0x479
 802a6f0:	481b      	ldr	r0, [pc, #108]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6f2:	f007 ff09 	bl	8032508 <__assert_func>
 802a6f6:	4b1b      	ldr	r3, [pc, #108]	@ (802a764 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a6f8:	4a18      	ldr	r2, [pc, #96]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6fa:	f240 4135 	movw	r1, #1077	@ 0x435
 802a6fe:	4818      	ldr	r0, [pc, #96]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a700:	f007 ff02 	bl	8032508 <__assert_func>
 802a704:	4b18      	ldr	r3, [pc, #96]	@ (802a768 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a706:	4a15      	ldr	r2, [pc, #84]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a708:	f240 4174 	movw	r1, #1140	@ 0x474
 802a70c:	4814      	ldr	r0, [pc, #80]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a70e:	f007 fefb 	bl	8032508 <__assert_func>
 802a712:	4b15      	ldr	r3, [pc, #84]	@ (802a768 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a714:	4a11      	ldr	r2, [pc, #68]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a716:	f44f 6186 	mov.w	r1, #1072	@ 0x430
 802a71a:	4811      	ldr	r0, [pc, #68]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a71c:	f007 fef4 	bl	8032508 <__assert_func>
 802a720:	4b12      	ldr	r3, [pc, #72]	@ (802a76c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a722:	4a0e      	ldr	r2, [pc, #56]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a724:	f240 414c 	movw	r1, #1100	@ 0x44c
 802a728:	480d      	ldr	r0, [pc, #52]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a72a:	f007 feed 	bl	8032508 <__assert_func>
 802a72e:	4b0f      	ldr	r3, [pc, #60]	@ (802a76c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a730:	4a0a      	ldr	r2, [pc, #40]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a732:	f44f 6181 	mov.w	r1, #1032	@ 0x408
 802a736:	480a      	ldr	r0, [pc, #40]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a738:	f007 fee6 	bl	8032508 <__assert_func>
 802a73c:	4b0c      	ldr	r3, [pc, #48]	@ (802a770 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a73e:	4a07      	ldr	r2, [pc, #28]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a740:	f240 411c 	movw	r1, #1052	@ 0x41c
 802a744:	4806      	ldr	r0, [pc, #24]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a746:	f007 fedf 	bl	8032508 <__assert_func>
 802a74a:	4b09      	ldr	r3, [pc, #36]	@ (802a770 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a74c:	4a03      	ldr	r2, [pc, #12]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a74e:	f44f 618c 	mov.w	r1, #1120	@ 0x460
 802a752:	4803      	ldr	r0, [pc, #12]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a754:	f007 fed8 	bl	8032508 <__assert_func>
 802a758:	08035fa8 	.word	0x08035fa8
 802a75c:	08036af8 	.word	0x08036af8
 802a760:	080362f0 	.word	0x080362f0
 802a764:	08036108 	.word	0x08036108
 802a768:	080360a4 	.word	0x080360a4
 802a76c:	08035fe4 	.word	0x08035fe4
 802a770:	08036044 	.word	0x08036044

0802a774 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802a774:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802a778:	b089      	sub	sp, #36	@ 0x24
 802a77a:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 802a77e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a780:	b13c      	cbz	r4, 802a792 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a782:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 802a786:	2e00      	cmp	r6, #0
 802a788:	dd03      	ble.n	802a792 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a78a:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 802a78e:	2e00      	cmp	r6, #0
 802a790:	dc02      	bgt.n	802a798 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 802a792:	b009      	add	sp, #36	@ 0x24
 802a794:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802a798:	f04f 0800 	mov.w	r8, #0
 802a79c:	4606      	mov	r6, r0
 802a79e:	f362 080f 	bfi	r8, r2, #0, #16
 802a7a2:	4608      	mov	r0, r1
 802a7a4:	460f      	mov	r7, r1
 802a7a6:	f363 481f 	bfi	r8, r3, #16, #16
 802a7aa:	f7e5 fc0b 	bl	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a7ae:	4681      	mov	r9, r0
 802a7b0:	4638      	mov	r0, r7
 802a7b2:	f7e5 fc3b 	bl	801002c <_ZNK8touchgfx6Bitmap9getHeightEv>
 802a7b6:	2300      	movs	r3, #0
 802a7b8:	f369 030f 	bfi	r3, r9, #0, #16
 802a7bc:	f360 431f 	bfi	r3, r0, #16, #16
 802a7c0:	4638      	mov	r0, r7
 802a7c2:	e9cd 8302 	strd	r8, r3, [sp, #8]
 802a7c6:	f7e5 fd3b 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a7ca:	280b      	cmp	r0, #11
 802a7cc:	d024      	beq.n	802a818 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa4>
 802a7ce:	aa04      	add	r2, sp, #16
 802a7d0:	f10d 0808 	add.w	r8, sp, #8
 802a7d4:	e898 0003 	ldmia.w	r8, {r0, r1}
 802a7d8:	e882 0003 	stmia.w	r2, {r0, r1}
 802a7dc:	6828      	ldr	r0, [r5, #0]
 802a7de:	6869      	ldr	r1, [r5, #4]
 802a7e0:	ab06      	add	r3, sp, #24
 802a7e2:	c303      	stmia	r3!, {r0, r1}
 802a7e4:	4610      	mov	r0, r2
 802a7e6:	f7e2 fab3 	bl	800cd50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a7ea:	4641      	mov	r1, r8
 802a7ec:	a806      	add	r0, sp, #24
 802a7ee:	f7e2 fad7 	bl	800cda0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a7f2:	4638      	mov	r0, r7
 802a7f4:	f7e5 fca0 	bl	8010138 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a7f8:	4680      	mov	r8, r0
 802a7fa:	4638      	mov	r0, r7
 802a7fc:	f7e5 fd20 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a800:	280d      	cmp	r0, #13
 802a802:	f200 8083 	bhi.w	802a90c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x198>
 802a806:	e8df f000 	tbb	[pc, r0]
 802a80a:	6467      	.short	0x6467
 802a80c:	81818117 	.word	0x81818117
 802a810:	81818181 	.word	0x81818181
 802a814:	6a818181 	.word	0x6a818181
 802a818:	4638      	mov	r0, r7
 802a81a:	f7e5 fc8d 	bl	8010138 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a81e:	4680      	mov	r8, r0
 802a820:	4638      	mov	r0, r7
 802a822:	f7e5 fcb9 	bl	8010198 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a826:	4641      	mov	r1, r8
 802a828:	4602      	mov	r2, r0
 802a82a:	e9cd 5400 	strd	r5, r4, [sp]
 802a82e:	4630      	mov	r0, r6
 802a830:	ab02      	add	r3, sp, #8
 802a832:	f7ff fe7b 	bl	802a52c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802a836:	e7ac      	b.n	802a792 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a838:	f04f 0910 	mov.w	r9, #16
 802a83c:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 802a840:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 802a844:	4d37      	ldr	r5, [pc, #220]	@ (802a924 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b0>)
 802a846:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 802a84a:	440a      	add	r2, r1
 802a84c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 802a850:	6828      	ldr	r0, [r5, #0]
 802a852:	440b      	add	r3, r1
 802a854:	f8ad 2018 	strh.w	r2, [sp, #24]
 802a858:	f8ad 301a 	strh.w	r3, [sp, #26]
 802a85c:	2800      	cmp	r0, #0
 802a85e:	d05b      	beq.n	802a918 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a860:	f7f6 f9c2 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802a864:	6833      	ldr	r3, [r6, #0]
 802a866:	4630      	mov	r0, r6
 802a868:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 802a86a:	4798      	blx	r3
 802a86c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 802a870:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 802a874:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 802a878:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 802a87c:	f7e6 fa3c 	bl	8010cf8 <nema_set_clip>
 802a880:	2200      	movs	r2, #0
 802a882:	4623      	mov	r3, r4
 802a884:	4611      	mov	r1, r2
 802a886:	4610      	mov	r0, r2
 802a888:	f7e6 fb14 	bl	8010eb4 <nema_rgba>
 802a88c:	f7f3 ff96 	bl	801e7bc <nema_set_const_color>
 802a890:	2cff      	cmp	r4, #255	@ 0xff
 802a892:	d02a      	beq.n	802a8ea <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x176>
 802a894:	f04f 33ff 	mov.w	r3, #4294967295
 802a898:	2201      	movs	r2, #1
 802a89a:	2100      	movs	r1, #0
 802a89c:	4822      	ldr	r0, [pc, #136]	@ (802a928 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b4>)
 802a89e:	f7f3 fbc7 	bl	801e030 <nema_set_blend>
 802a8a2:	2100      	movs	r1, #0
 802a8a4:	f04f 34ff 	mov.w	r4, #4294967295
 802a8a8:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802a8ac:	464b      	mov	r3, r9
 802a8ae:	4640      	mov	r0, r8
 802a8b0:	9101      	str	r1, [sp, #4]
 802a8b2:	9400      	str	r4, [sp, #0]
 802a8b4:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802a8b8:	f7e6 fb04 	bl	8010ec4 <nema_bind_src_tex>
 802a8bc:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802a8c0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802a8c4:	f7e6 fd58 	bl	8011378 <nema_blit>
 802a8c8:	6828      	ldr	r0, [r5, #0]
 802a8ca:	b328      	cbz	r0, 802a918 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a8cc:	f7f6 f9ac 	bl	8020c28 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802a8d0:	e75f      	b.n	802a792 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a8d2:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802a8d6:	e7b1      	b.n	802a83c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a8d8:	f04f 0904 	mov.w	r9, #4
 802a8dc:	e7ae      	b.n	802a83c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a8de:	4638      	mov	r0, r7
 802a8e0:	f7e5 fc5a 	bl	8010198 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a8e4:	f890 9000 	ldrb.w	r9, [r0]
 802a8e8:	e7a8      	b.n	802a83c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a8ea:	4638      	mov	r0, r7
 802a8ec:	f7e5 fca8 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a8f0:	b120      	cbz	r0, 802a8fc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x188>
 802a8f2:	4638      	mov	r0, r7
 802a8f4:	f7e5 fca4 	bl	8010240 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a8f8:	2801      	cmp	r0, #1
 802a8fa:	d1cb      	bne.n	802a894 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x120>
 802a8fc:	2201      	movs	r2, #1
 802a8fe:	f04f 33ff 	mov.w	r3, #4294967295
 802a902:	4610      	mov	r0, r2
 802a904:	2100      	movs	r1, #0
 802a906:	f7f3 fb93 	bl	801e030 <nema_set_blend>
 802a90a:	e7ca      	b.n	802a8a2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 802a90c:	4b07      	ldr	r3, [pc, #28]	@ (802a92c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>)
 802a90e:	4a08      	ldr	r2, [pc, #32]	@ (802a930 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1bc>)
 802a910:	2175      	movs	r1, #117	@ 0x75
 802a912:	4808      	ldr	r0, [pc, #32]	@ (802a934 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c0>)
 802a914:	f007 fdf8 	bl	8032508 <__assert_func>
 802a918:	4b07      	ldr	r3, [pc, #28]	@ (802a938 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c4>)
 802a91a:	4a08      	ldr	r2, [pc, #32]	@ (802a93c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c8>)
 802a91c:	217c      	movs	r1, #124	@ 0x7c
 802a91e:	4808      	ldr	r0, [pc, #32]	@ (802a940 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1cc>)
 802a920:	f007 fdf2 	bl	8032508 <__assert_func>
 802a924:	200833a8 	.word	0x200833a8
 802a928:	08000504 	.word	0x08000504
 802a92c:	08036144 	.word	0x08036144
 802a930:	08036bec 	.word	0x08036bec
 802a934:	080362f0 	.word	0x080362f0
 802a938:	0803624c 	.word	0x0803624c
 802a93c:	08036ab8 	.word	0x08036ab8
 802a940:	08036274 	.word	0x08036274

0802a944 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802a944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a948:	b089      	sub	sp, #36	@ 0x24
 802a94a:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 802a94c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a94e:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 802a952:	9104      	str	r1, [sp, #16]
 802a954:	8809      	ldrh	r1, [r1, #0]
 802a956:	fb07 6c04 	mla	ip, r7, r4, r6
 802a95a:	10c8      	asrs	r0, r1, #3
 802a95c:	120d      	asrs	r5, r1, #8
 802a95e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802a962:	f005 0af8 	and.w	sl, r5, #248	@ 0xf8
 802a966:	9002      	str	r0, [sp, #8]
 802a968:	00c9      	lsls	r1, r1, #3
 802a96a:	0200      	lsls	r0, r0, #8
 802a96c:	b2c9      	uxtb	r1, r1
 802a96e:	4690      	mov	r8, r2
 802a970:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 802a974:	469e      	mov	lr, r3
 802a976:	eb02 030c 	add.w	r3, r2, ip
 802a97a:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 802a97e:	4308      	orrs	r0, r1
 802a980:	2f00      	cmp	r7, #0
 802a982:	9103      	str	r1, [sp, #12]
 802a984:	9305      	str	r3, [sp, #20]
 802a986:	9007      	str	r0, [sp, #28]
 802a988:	f107 0501 	add.w	r5, r7, #1
 802a98c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 802a990:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 802a994:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802a998:	9200      	str	r2, [sp, #0]
 802a99a:	db02      	blt.n	802a9a2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 802a99c:	42be      	cmp	r6, r7
 802a99e:	f300 80a3 	bgt.w	802aae8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1a4>
 802a9a2:	fa5f fb80 	uxtb.w	fp, r0
 802a9a6:	af07      	add	r7, sp, #28
 802a9a8:	465a      	mov	r2, fp
 802a9aa:	46b8      	mov	r8, r7
 802a9ac:	2d00      	cmp	r5, #0
 802a9ae:	db01      	blt.n	802a9b4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x70>
 802a9b0:	42ae      	cmp	r6, r5
 802a9b2:	dc79      	bgt.n	802aaa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x164>
 802a9b4:	f10d 0e1c 	add.w	lr, sp, #28
 802a9b8:	46f1      	mov	r9, lr
 802a9ba:	b2c0      	uxtb	r0, r0
 802a9bc:	9001      	str	r0, [sp, #4]
 802a9be:	2b0f      	cmp	r3, #15
 802a9c0:	f200 80ce 	bhi.w	802ab60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a9c4:	290f      	cmp	r1, #15
 802a9c6:	f200 80cb 	bhi.w	802ab60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a9ca:	9c00      	ldr	r4, [sp, #0]
 802a9cc:	b29b      	uxth	r3, r3
 802a9ce:	43e4      	mvns	r4, r4
 802a9d0:	b289      	uxth	r1, r1
 802a9d2:	fb03 f501 	mul.w	r5, r3, r1
 802a9d6:	011b      	lsls	r3, r3, #4
 802a9d8:	1b5e      	subs	r6, r3, r5
 802a9da:	b2b6      	uxth	r6, r6
 802a9dc:	f897 c002 	ldrb.w	ip, [r7, #2]
 802a9e0:	ebc5 1101 	rsb	r1, r5, r1, lsl #4
 802a9e4:	787f      	ldrb	r7, [r7, #1]
 802a9e6:	fb06 f202 	mul.w	r2, r6, r2
 802a9ea:	b289      	uxth	r1, r1
 802a9ec:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802a9f0:	fb06 fc0c 	mul.w	ip, r6, ip
 802a9f4:	1a5b      	subs	r3, r3, r1
 802a9f6:	fb06 f607 	mul.w	r6, r6, r7
 802a9fa:	b29b      	uxth	r3, r3
 802a9fc:	f898 7001 	ldrb.w	r7, [r8, #1]
 802aa00:	fb03 220b 	mla	r2, r3, fp, r2
 802aa04:	f898 b002 	ldrb.w	fp, [r8, #2]
 802aa08:	fb03 6607 	mla	r6, r3, r7, r6
 802aa0c:	fb03 cc0b 	mla	ip, r3, fp, ip
 802aa10:	f899 8002 	ldrb.w	r8, [r9, #2]
 802aa14:	f899 7001 	ldrb.w	r7, [r9, #1]
 802aa18:	9b01      	ldr	r3, [sp, #4]
 802aa1a:	fb01 cc08 	mla	ip, r1, r8, ip
 802aa1e:	fb01 2203 	mla	r2, r1, r3, r2
 802aa22:	fb01 6607 	mla	r6, r1, r7, r6
 802aa26:	f89e 8002 	ldrb.w	r8, [lr, #2]
 802aa2a:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802aa2e:	9b03      	ldr	r3, [sp, #12]
 802aa30:	9902      	ldr	r1, [sp, #8]
 802aa32:	fb05 2200 	mla	r2, r5, r0, r2
 802aa36:	b2e4      	uxtb	r4, r4
 802aa38:	fb05 cc08 	mla	ip, r5, r8, ip
 802aa3c:	fb05 6607 	mla	r6, r5, r7, r6
 802aa40:	fb13 f004 	smulbb	r0, r3, r4
 802aa44:	fb1a f304 	smulbb	r3, sl, r4
 802aa48:	fb11 f404 	smulbb	r4, r1, r4
 802aa4c:	f8bd e000 	ldrh.w	lr, [sp]
 802aa50:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802aa54:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802aa58:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802aa5c:	fb02 020e 	mla	r2, r2, lr, r0
 802aa60:	fb0c 330e 	mla	r3, ip, lr, r3
 802aa64:	fb06 4e0e 	mla	lr, r6, lr, r4
 802aa68:	fa1f fc83 	uxth.w	ip, r3
 802aa6c:	b292      	uxth	r2, r2
 802aa6e:	fa1f fe8e 	uxth.w	lr, lr
 802aa72:	f10c 0301 	add.w	r3, ip, #1
 802aa76:	1c50      	adds	r0, r2, #1
 802aa78:	f10e 0101 	add.w	r1, lr, #1
 802aa7c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802aa80:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802aa84:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802aa88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802aa8c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802aa90:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802aa94:	4313      	orrs	r3, r2
 802aa96:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802aa9a:	9a04      	ldr	r2, [sp, #16]
 802aa9c:	ea43 030e 	orr.w	r3, r3, lr
 802aaa0:	8013      	strh	r3, [r2, #0]
 802aaa2:	b009      	add	sp, #36	@ 0x24
 802aaa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aaa8:	2900      	cmp	r1, #0
 802aaaa:	d036      	beq.n	802ab1a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d6>
 802aaac:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aaae:	2d00      	cmp	r5, #0
 802aab0:	db45      	blt.n	802ab3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aab2:	42ac      	cmp	r4, r5
 802aab4:	dd43      	ble.n	802ab3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aab6:	9d05      	ldr	r5, [sp, #20]
 802aab8:	f815 9004 	ldrb.w	r9, [r5, r4]
 802aabc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802aac0:	44f1      	add	r9, lr
 802aac2:	f899 5000 	ldrb.w	r5, [r9]
 802aac6:	9501      	str	r5, [sp, #4]
 802aac8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aaca:	3501      	adds	r5, #1
 802aacc:	d433      	bmi.n	802ab36 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aace:	42ac      	cmp	r4, r5
 802aad0:	dd31      	ble.n	802ab36 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aad2:	2b00      	cmp	r3, #0
 802aad4:	d040      	beq.n	802ab58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x214>
 802aad6:	9805      	ldr	r0, [sp, #20]
 802aad8:	4420      	add	r0, r4
 802aada:	7840      	ldrb	r0, [r0, #1]
 802aadc:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 802aae0:	f81e 0004 	ldrb.w	r0, [lr, r4]
 802aae4:	44a6      	add	lr, r4
 802aae6:	e76a      	b.n	802a9be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802aae8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802aaea:	2a00      	cmp	r2, #0
 802aaec:	db01      	blt.n	802aaf2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ae>
 802aaee:	4294      	cmp	r4, r2
 802aaf0:	dc1b      	bgt.n	802ab2a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1e6>
 802aaf2:	f10d 081c 	add.w	r8, sp, #28
 802aaf6:	3201      	adds	r2, #1
 802aaf8:	f898 b000 	ldrb.w	fp, [r8]
 802aafc:	d40a      	bmi.n	802ab14 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aafe:	4294      	cmp	r4, r2
 802ab00:	dd08      	ble.n	802ab14 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802ab02:	b1fb      	cbz	r3, 802ab44 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x200>
 802ab04:	9a05      	ldr	r2, [sp, #20]
 802ab06:	7857      	ldrb	r7, [r2, #1]
 802ab08:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802ab0c:	f81e 2007 	ldrb.w	r2, [lr, r7]
 802ab10:	4477      	add	r7, lr
 802ab12:	e74b      	b.n	802a9ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802ab14:	b2c2      	uxtb	r2, r0
 802ab16:	af07      	add	r7, sp, #28
 802ab18:	e748      	b.n	802a9ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802ab1a:	b2c0      	uxtb	r0, r0
 802ab1c:	2b0f      	cmp	r3, #15
 802ab1e:	9001      	str	r0, [sp, #4]
 802ab20:	d81e      	bhi.n	802ab60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802ab22:	f10d 0e1c 	add.w	lr, sp, #28
 802ab26:	46f1      	mov	r9, lr
 802ab28:	e74f      	b.n	802a9ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x86>
 802ab2a:	f818 800c 	ldrb.w	r8, [r8, ip]
 802ab2e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802ab32:	44f0      	add	r8, lr
 802ab34:	e7df      	b.n	802aaf6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b2>
 802ab36:	b2c0      	uxtb	r0, r0
 802ab38:	f10d 0e1c 	add.w	lr, sp, #28
 802ab3c:	e73f      	b.n	802a9be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802ab3e:	f10d 091c 	add.w	r9, sp, #28
 802ab42:	e7be      	b.n	802aac2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x17e>
 802ab44:	2d00      	cmp	r5, #0
 802ab46:	b2c2      	uxtb	r2, r0
 802ab48:	af07      	add	r7, sp, #28
 802ab4a:	f6bf af31 	bge.w	802a9b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 802ab4e:	46be      	mov	lr, r7
 802ab50:	46b9      	mov	r9, r7
 802ab52:	4610      	mov	r0, r2
 802ab54:	9201      	str	r2, [sp, #4]
 802ab56:	e735      	b.n	802a9c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802ab58:	b2c0      	uxtb	r0, r0
 802ab5a:	f10d 0e1c 	add.w	lr, sp, #28
 802ab5e:	e731      	b.n	802a9c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802ab60:	4b03      	ldr	r3, [pc, #12]	@ (802ab70 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x22c>)
 802ab62:	4a04      	ldr	r2, [pc, #16]	@ (802ab74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x230>)
 802ab64:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ab68:	4803      	ldr	r0, [pc, #12]	@ (802ab78 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x234>)
 802ab6a:	f007 fccd 	bl	8032508 <__assert_func>
 802ab6e:	bf00      	nop
 802ab70:	080366e4 	.word	0x080366e4
 802ab74:	08036d60 	.word	0x08036d60
 802ab78:	0803686c 	.word	0x0803686c

0802ab7c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ab7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab80:	ed2d 8b08 	vpush	{d8-d11}
 802ab84:	b095      	sub	sp, #84	@ 0x54
 802ab86:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ab8a:	e9dd 512b 	ldrd	r5, r1, [sp, #172]	@ 0xac
 802ab8e:	e9dd b827 	ldrd	fp, r8, [sp, #156]	@ 0x9c
 802ab92:	686c      	ldr	r4, [r5, #4]
 802ab94:	461a      	mov	r2, r3
 802ab96:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802ab98:	f89d 60bc 	ldrb.w	r6, [sp, #188]	@ 0xbc
 802ab9c:	fb04 1303 	mla	r3, r4, r3, r1
 802aba0:	682c      	ldr	r4, [r5, #0]
 802aba2:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 802aba6:	43f0      	mvns	r0, r6
 802aba8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802abac:	eeb0 aa40 	vmov.f32	s20, s0
 802abb0:	eef0 9a60 	vmov.f32	s19, s1
 802abb4:	eeb0 9a41 	vmov.f32	s18, s2
 802abb8:	eef0 8a62 	vmov.f32	s17, s5
 802abbc:	eeb0 8a43 	vmov.f32	s16, s6
 802abc0:	eef0 ba44 	vmov.f32	s23, s8
 802abc4:	eeb0 ba64 	vmov.f32	s22, s9
 802abc8:	eef0 aa45 	vmov.f32	s21, s10
 802abcc:	469a      	mov	sl, r3
 802abce:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802abd0:	9d2e      	ldr	r5, [sp, #184]	@ 0xb8
 802abd2:	6849      	ldr	r1, [r1, #4]
 802abd4:	682d      	ldr	r5, [r5, #0]
 802abd6:	3104      	adds	r1, #4
 802abd8:	b2c0      	uxtb	r0, r0
 802abda:	9108      	str	r1, [sp, #32]
 802abdc:	b2b1      	uxth	r1, r6
 802abde:	950b      	str	r5, [sp, #44]	@ 0x2c
 802abe0:	900c      	str	r0, [sp, #48]	@ 0x30
 802abe2:	910d      	str	r1, [sp, #52]	@ 0x34
 802abe4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802abe6:	2b00      	cmp	r3, #0
 802abe8:	dc02      	bgt.n	802abf0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802abea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802abec:	2b00      	cmp	r3, #0
 802abee:	dd65      	ble.n	802acbc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802abf0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802abf2:	2a00      	cmp	r2, #0
 802abf4:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802abf8:	b225      	sxth	r5, r4
 802abfa:	fa0f f78e 	sxth.w	r7, lr
 802abfe:	f340 8233 	ble.w	802b068 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 802ac02:	1e6e      	subs	r6, r5, #1
 802ac04:	f107 3cff 	add.w	ip, r7, #4294967295
 802ac08:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802ac0c:	e9dd e929 	ldrd	lr, r9, [sp, #164]	@ 0xa4
 802ac10:	ea5f 432b 	movs.w	r3, fp, asr #16
 802ac14:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ac18:	d405      	bmi.n	802ac26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ac1a:	42b3      	cmp	r3, r6
 802ac1c:	da03      	bge.n	802ac26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ac1e:	2900      	cmp	r1, #0
 802ac20:	db01      	blt.n	802ac26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ac22:	4561      	cmp	r1, ip
 802ac24:	db4f      	blt.n	802acc6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802ac26:	1c58      	adds	r0, r3, #1
 802ac28:	d406      	bmi.n	802ac38 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ac2a:	42a8      	cmp	r0, r5
 802ac2c:	dc04      	bgt.n	802ac38 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ac2e:	1c48      	adds	r0, r1, #1
 802ac30:	d402      	bmi.n	802ac38 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ac32:	42b8      	cmp	r0, r7
 802ac34:	f340 817e 	ble.w	802af34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 802ac38:	3a01      	subs	r2, #1
 802ac3a:	44f3      	add	fp, lr
 802ac3c:	44c8      	add	r8, r9
 802ac3e:	f10a 0a02 	add.w	sl, sl, #2
 802ac42:	d1e5      	bne.n	802ac10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802ac44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ac46:	2b00      	cmp	r3, #0
 802ac48:	dd38      	ble.n	802acbc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ac4a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ac4e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ac52:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ac56:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ac5a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ac5e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ac62:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ac66:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ac6a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ac6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ac72:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac76:	ee16 2a90 	vmov	r2, s13
 802ac7a:	3b01      	subs	r3, #1
 802ac7c:	930e      	str	r3, [sp, #56]	@ 0x38
 802ac7e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac80:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac84:	ee17 2a10 	vmov	r2, s14
 802ac88:	eeb0 7a48 	vmov.f32	s14, s16
 802ac8c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac90:	ee17 8a10 	vmov	r8, s14
 802ac94:	eeb0 7a68 	vmov.f32	s14, s17
 802ac98:	9329      	str	r3, [sp, #164]	@ 0xa4
 802ac9a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac9c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802aca0:	fb92 f3f3 	sdiv	r3, r2, r3
 802aca4:	932a      	str	r3, [sp, #168]	@ 0xa8
 802aca6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802aca8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802acaa:	ee17 ba10 	vmov	fp, s14
 802acae:	eeb0 8a67 	vmov.f32	s16, s15
 802acb2:	eef0 8a46 	vmov.f32	s17, s12
 802acb6:	bf18      	it	ne
 802acb8:	461a      	movne	r2, r3
 802acba:	e793      	b.n	802abe4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802acbc:	b015      	add	sp, #84	@ 0x54
 802acbe:	ecbd 8b08 	vpop	{d8-d11}
 802acc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802acc6:	46d4      	mov	ip, sl
 802acc8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802accc:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802acce:	1e51      	subs	r1, r2, #1
 802acd0:	fb00 b301 	mla	r3, r0, r1, fp
 802acd4:	141b      	asrs	r3, r3, #16
 802acd6:	910a      	str	r1, [sp, #40]	@ 0x28
 802acd8:	f100 80cc 	bmi.w	802ae74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802acdc:	42b3      	cmp	r3, r6
 802acde:	f280 80c9 	bge.w	802ae74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ace2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ace4:	fb03 8301 	mla	r3, r3, r1, r8
 802ace8:	141b      	asrs	r3, r3, #16
 802acea:	f100 80c3 	bmi.w	802ae74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802acee:	3f01      	subs	r7, #1
 802acf0:	42bb      	cmp	r3, r7
 802acf2:	f280 80bf 	bge.w	802ae74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802acf6:	2a00      	cmp	r2, #0
 802acf8:	dda4      	ble.n	802ac44 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802acfa:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 802acfe:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 802ad02:	e08e      	b.n	802ae22 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802ad04:	f891 c001 	ldrb.w	ip, [r1, #1]
 802ad08:	194c      	adds	r4, r1, r5
 802ad0a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802ad0e:	44bc      	add	ip, r7
 802ad10:	2a00      	cmp	r2, #0
 802ad12:	f000 80a6 	beq.w	802ae62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 802ad16:	5d48      	ldrb	r0, [r1, r5]
 802ad18:	7865      	ldrb	r5, [r4, #1]
 802ad1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ad1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802ad22:	4438      	add	r0, r7
 802ad24:	443d      	add	r5, r7
 802ad26:	b29b      	uxth	r3, r3
 802ad28:	b292      	uxth	r2, r2
 802ad2a:	fb03 f402 	mul.w	r4, r3, r2
 802ad2e:	011b      	lsls	r3, r3, #4
 802ad30:	1b19      	subs	r1, r3, r4
 802ad32:	f89c 9000 	ldrb.w	r9, [ip]
 802ad36:	f89c e002 	ldrb.w	lr, [ip, #2]
 802ad3a:	b289      	uxth	r1, r1
 802ad3c:	f89c c001 	ldrb.w	ip, [ip, #1]
 802ad40:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802ad44:	fb01 f909 	mul.w	r9, r1, r9
 802ad48:	b292      	uxth	r2, r2
 802ad4a:	fb01 fe0e 	mul.w	lr, r1, lr
 802ad4e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802ad52:	fb01 f10c 	mul.w	r1, r1, ip
 802ad56:	f817 a00a 	ldrb.w	sl, [r7, sl]
 802ad5a:	1a9b      	subs	r3, r3, r2
 802ad5c:	f896 c002 	ldrb.w	ip, [r6, #2]
 802ad60:	b29b      	uxth	r3, r3
 802ad62:	7876      	ldrb	r6, [r6, #1]
 802ad64:	fb03 990a 	mla	r9, r3, sl, r9
 802ad68:	fb03 ec0c 	mla	ip, r3, ip, lr
 802ad6c:	fb03 1306 	mla	r3, r3, r6, r1
 802ad70:	7801      	ldrb	r1, [r0, #0]
 802ad72:	f890 e002 	ldrb.w	lr, [r0, #2]
 802ad76:	fb02 9901 	mla	r9, r2, r1, r9
 802ad7a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802ad7c:	fb02 ce0e 	mla	lr, r2, lr, ip
 802ad80:	7829      	ldrb	r1, [r5, #0]
 802ad82:	f8b7 c000 	ldrh.w	ip, [r7]
 802ad86:	7840      	ldrb	r0, [r0, #1]
 802ad88:	78ae      	ldrb	r6, [r5, #2]
 802ad8a:	fb02 3200 	mla	r2, r2, r0, r3
 802ad8e:	fb04 9901 	mla	r9, r4, r1, r9
 802ad92:	7868      	ldrb	r0, [r5, #1]
 802ad94:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ad96:	ea4f 252c 	mov.w	r5, ip, asr #8
 802ad9a:	fb04 ee06 	mla	lr, r4, r6, lr
 802ad9e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802ada2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802ada6:	fb15 f501 	smulbb	r5, r5, r1
 802adaa:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802adae:	b2db      	uxtb	r3, r3
 802adb0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802adb4:	fb13 f301 	smulbb	r3, r3, r1
 802adb8:	fb1c fc01 	smulbb	ip, ip, r1
 802adbc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802adbe:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802adc2:	fb04 2200 	mla	r2, r4, r0, r2
 802adc6:	fb0e 5501 	mla	r5, lr, r1, r5
 802adca:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802adce:	b2ad      	uxth	r5, r5
 802add0:	fb02 cc01 	mla	ip, r2, r1, ip
 802add4:	1c6a      	adds	r2, r5, #1
 802add6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802adda:	463a      	mov	r2, r7
 802addc:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802ade0:	fb09 3301 	mla	r3, r9, r1, r3
 802ade4:	fa1f f18c 	uxth.w	r1, ip
 802ade8:	b29b      	uxth	r3, r3
 802adea:	1c5c      	adds	r4, r3, #1
 802adec:	1c48      	adds	r0, r1, #1
 802adee:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802adf2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802adf6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802adfa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802adfe:	0949      	lsrs	r1, r1, #5
 802ae00:	432b      	orrs	r3, r5
 802ae02:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802ae06:	430b      	orrs	r3, r1
 802ae08:	f822 3b02 	strh.w	r3, [r2], #2
 802ae0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802ae0e:	9209      	str	r2, [sp, #36]	@ 0x24
 802ae10:	449b      	add	fp, r3
 802ae12:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ae14:	4498      	add	r8, r3
 802ae16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ae18:	429a      	cmp	r2, r3
 802ae1a:	d029      	beq.n	802ae70 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ae1c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802ae1e:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802ae22:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ae26:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae2a:	fb05 3101 	mla	r1, r5, r1, r3
 802ae2e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802ae30:	9f08      	ldr	r7, [sp, #32]
 802ae32:	f812 a001 	ldrb.w	sl, [r2, r1]
 802ae36:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802ae3a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802ae3e:	4411      	add	r1, r2
 802ae40:	eb07 060a 	add.w	r6, r7, sl
 802ae44:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802ae48:	2b00      	cmp	r3, #0
 802ae4a:	f47f af5b 	bne.w	802ad04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802ae4e:	b15a      	cbz	r2, 802ae68 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>
 802ae50:	5d48      	ldrb	r0, [r1, r5]
 802ae52:	9908      	ldr	r1, [sp, #32]
 802ae54:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ae58:	4635      	mov	r5, r6
 802ae5a:	4408      	add	r0, r1
 802ae5c:	46b4      	mov	ip, r6
 802ae5e:	460f      	mov	r7, r1
 802ae60:	e761      	b.n	802ad26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae62:	4635      	mov	r5, r6
 802ae64:	4630      	mov	r0, r6
 802ae66:	e75e      	b.n	802ad26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae68:	4635      	mov	r5, r6
 802ae6a:	4630      	mov	r0, r6
 802ae6c:	46b4      	mov	ip, r6
 802ae6e:	e75a      	b.n	802ad26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae70:	469a      	mov	sl, r3
 802ae72:	e6e7      	b.n	802ac44 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ae74:	2a00      	cmp	r2, #0
 802ae76:	f77f aee5 	ble.w	802ac44 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ae7a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802ae7c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ae80:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae84:	4675      	mov	r5, lr
 802ae86:	46d1      	mov	r9, sl
 802ae88:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 802ae8c:	f8dd a0b8 	ldr.w	sl, [sp, #184]	@ 0xb8
 802ae90:	9609      	str	r6, [sp, #36]	@ 0x24
 802ae92:	2b00      	cmp	r3, #0
 802ae94:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802ae98:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802ae9c:	db27      	blt.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae9e:	1e60      	subs	r0, r4, #1
 802aea0:	4283      	cmp	r3, r0
 802aea2:	da24      	bge.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802aea4:	2900      	cmp	r1, #0
 802aea6:	db22      	blt.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802aea8:	1e68      	subs	r0, r5, #1
 802aeaa:	4281      	cmp	r1, r0
 802aeac:	da1f      	bge.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802aeae:	b220      	sxth	r0, r4
 802aeb0:	fb01 3300 	mla	r3, r1, r0, r3
 802aeb4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802aeb6:	5ccd      	ldrb	r5, [r1, r3]
 802aeb8:	440b      	add	r3, r1
 802aeba:	9908      	ldr	r1, [sp, #32]
 802aebc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802aec0:	460e      	mov	r6, r1
 802aec2:	eb01 0c05 	add.w	ip, r1, r5
 802aec6:	2f00      	cmp	r7, #0
 802aec8:	d04b      	beq.n	802af62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802aeca:	785c      	ldrb	r4, [r3, #1]
 802aecc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802aed0:	440c      	add	r4, r1
 802aed2:	2a00      	cmp	r2, #0
 802aed4:	f000 80c4 	beq.w	802b060 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802aed8:	1819      	adds	r1, r3, r0
 802aeda:	7849      	ldrb	r1, [r1, #1]
 802aedc:	5c18      	ldrb	r0, [r3, r0]
 802aede:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802aee2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802aee6:	1873      	adds	r3, r6, r1
 802aee8:	9311      	str	r3, [sp, #68]	@ 0x44
 802aeea:	4430      	add	r0, r6
 802aeec:	e03f      	b.n	802af6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802aeee:	1c58      	adds	r0, r3, #1
 802aef0:	d405      	bmi.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aef2:	42a0      	cmp	r0, r4
 802aef4:	dc03      	bgt.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aef6:	1c48      	adds	r0, r1, #1
 802aef8:	d401      	bmi.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aefa:	42a8      	cmp	r0, r5
 802aefc:	dd20      	ble.n	802af40 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802aefe:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802af00:	f109 0902 	add.w	r9, r9, #2
 802af04:	449b      	add	fp, r3
 802af06:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802af08:	4498      	add	r8, r3
 802af0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802af0c:	2b00      	cmp	r3, #0
 802af0e:	dd08      	ble.n	802af22 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802af10:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 802af14:	3b01      	subs	r3, #1
 802af16:	9309      	str	r3, [sp, #36]	@ 0x24
 802af18:	ea4f 4128 	mov.w	r1, r8, asr #16
 802af1c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802af20:	e7b7      	b.n	802ae92 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802af22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802af24:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 802af28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802af2c:	3301      	adds	r3, #1
 802af2e:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 802af32:	e687      	b.n	802ac44 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802af34:	3a01      	subs	r2, #1
 802af36:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802af3a:	920a      	str	r2, [sp, #40]	@ 0x28
 802af3c:	4616      	mov	r6, r2
 802af3e:	e7a1      	b.n	802ae84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 802af40:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802af42:	b22d      	sxth	r5, r5
 802af44:	b224      	sxth	r4, r4
 802af46:	e9cd 2005 	strd	r2, r0, [sp, #20]
 802af4a:	e9cd 1703 	strd	r1, r7, [sp, #12]
 802af4e:	9302      	str	r3, [sp, #8]
 802af50:	e9cd 4500 	strd	r4, r5, [sp]
 802af54:	9b08      	ldr	r3, [sp, #32]
 802af56:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802af58:	4649      	mov	r1, r9
 802af5a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802af5c:	f7ff fcf2 	bl	802a944 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802af60:	e7cd      	b.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802af62:	2a00      	cmp	r2, #0
 802af64:	d173      	bne.n	802b04e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d2>
 802af66:	4660      	mov	r0, ip
 802af68:	4664      	mov	r4, ip
 802af6a:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802af6e:	b2bb      	uxth	r3, r7
 802af70:	b292      	uxth	r2, r2
 802af72:	fb03 f702 	mul.w	r7, r3, r2
 802af76:	011b      	lsls	r3, r3, #4
 802af78:	1bd9      	subs	r1, r3, r7
 802af7a:	7826      	ldrb	r6, [r4, #0]
 802af7c:	f894 e002 	ldrb.w	lr, [r4, #2]
 802af80:	7864      	ldrb	r4, [r4, #1]
 802af82:	b289      	uxth	r1, r1
 802af84:	fb01 f606 	mul.w	r6, r1, r6
 802af88:	fb01 fe0e 	mul.w	lr, r1, lr
 802af8c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802af90:	fb01 f104 	mul.w	r1, r1, r4
 802af94:	9c08      	ldr	r4, [sp, #32]
 802af96:	b292      	uxth	r2, r2
 802af98:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802af9c:	5d65      	ldrb	r5, [r4, r5]
 802af9e:	1a9b      	subs	r3, r3, r2
 802afa0:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802afa4:	f89c c001 	ldrb.w	ip, [ip, #1]
 802afa8:	b29b      	uxth	r3, r3
 802afaa:	fb03 e404 	mla	r4, r3, r4, lr
 802afae:	fb03 6505 	mla	r5, r3, r5, r6
 802afb2:	fb03 130c 	mla	r3, r3, ip, r1
 802afb6:	f890 c001 	ldrb.w	ip, [r0, #1]
 802afba:	7801      	ldrb	r1, [r0, #0]
 802afbc:	f890 e002 	ldrb.w	lr, [r0, #2]
 802afc0:	fb02 3c0c 	mla	ip, r2, ip, r3
 802afc4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802afc6:	fb02 5601 	mla	r6, r2, r1, r5
 802afca:	fb02 4e0e 	mla	lr, r2, lr, r4
 802afce:	7899      	ldrb	r1, [r3, #2]
 802afd0:	781a      	ldrb	r2, [r3, #0]
 802afd2:	785b      	ldrb	r3, [r3, #1]
 802afd4:	f8b9 0000 	ldrh.w	r0, [r9]
 802afd8:	fb07 c303 	mla	r3, r7, r3, ip
 802afdc:	fb07 6202 	mla	r2, r7, r2, r6
 802afe0:	00c5      	lsls	r5, r0, #3
 802afe2:	1204      	asrs	r4, r0, #8
 802afe4:	fb07 e101 	mla	r1, r7, r1, lr
 802afe8:	10c0      	asrs	r0, r0, #3
 802afea:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 802afec:	b2ed      	uxtb	r5, r5
 802afee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802aff2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802aff6:	fb15 f507 	smulbb	r5, r5, r7
 802affa:	fb14 f407 	smulbb	r4, r4, r7
 802affe:	fb10 f007 	smulbb	r0, r0, r7
 802b002:	f3c3 2707 	ubfx	r7, r3, #8, #8
 802b006:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b008:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802b00c:	461e      	mov	r6, r3
 802b00e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b012:	fb02 5203 	mla	r2, r2, r3, r5
 802b016:	fb07 0006 	mla	r0, r7, r6, r0
 802b01a:	fb01 4303 	mla	r3, r1, r3, r4
 802b01e:	b281      	uxth	r1, r0
 802b020:	b294      	uxth	r4, r2
 802b022:	b29b      	uxth	r3, r3
 802b024:	1c4a      	adds	r2, r1, #1
 802b026:	1c5d      	adds	r5, r3, #1
 802b028:	1c60      	adds	r0, r4, #1
 802b02a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b02e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802b032:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802b036:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b03a:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 802b03e:	0952      	lsrs	r2, r2, #5
 802b040:	430b      	orrs	r3, r1
 802b042:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b046:	4313      	orrs	r3, r2
 802b048:	f8a9 3000 	strh.w	r3, [r9]
 802b04c:	e757      	b.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b04e:	5c18      	ldrb	r0, [r3, r0]
 802b050:	9b08      	ldr	r3, [sp, #32]
 802b052:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b056:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b05a:	4418      	add	r0, r3
 802b05c:	4664      	mov	r4, ip
 802b05e:	e786      	b.n	802af6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b060:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b064:	4660      	mov	r0, ip
 802b066:	e782      	b.n	802af6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b068:	f43f adec 	beq.w	802ac44 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b06c:	1e6e      	subs	r6, r5, #1
 802b06e:	46d4      	mov	ip, sl
 802b070:	e62c      	b.n	802accc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 802b072:	bf00      	nop

0802b074 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802b074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b078:	4692      	mov	sl, r2
 802b07a:	b083      	sub	sp, #12
 802b07c:	880a      	ldrh	r2, [r1, #0]
 802b07e:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 802b082:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 802b086:	0215      	lsls	r5, r2, #8
 802b088:	0150      	lsls	r0, r2, #5
 802b08a:	fb04 7e0c 	mla	lr, r4, ip, r7
 802b08e:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 802b092:	f405 0578 	and.w	r5, r5, #16252928	@ 0xf80000
 802b096:	00d2      	lsls	r2, r2, #3
 802b098:	4305      	orrs	r5, r0
 802b09a:	b2d2      	uxtb	r2, r2
 802b09c:	4315      	orrs	r5, r2
 802b09e:	2c00      	cmp	r4, #0
 802b0a0:	9501      	str	r5, [sp, #4]
 802b0a2:	eb0a 020e 	add.w	r2, sl, lr
 802b0a6:	f104 0801 	add.w	r8, r4, #1
 802b0aa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802b0ae:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 802b0b2:	f89d 0044 	ldrb.w	r0, [sp, #68]	@ 0x44
 802b0b6:	db01      	blt.n	802b0bc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 802b0b8:	45a1      	cmp	r9, r4
 802b0ba:	dc71      	bgt.n	802b1a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x12c>
 802b0bc:	fa5f fa85 	uxtb.w	sl, r5
 802b0c0:	f10d 0b04 	add.w	fp, sp, #4
 802b0c4:	4654      	mov	r4, sl
 802b0c6:	46de      	mov	lr, fp
 802b0c8:	f1b8 0f00 	cmp.w	r8, #0
 802b0cc:	db01      	blt.n	802b0d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5e>
 802b0ce:	45c1      	cmp	r9, r8
 802b0d0:	dc4c      	bgt.n	802b16c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xf8>
 802b0d2:	fa5f f985 	uxtb.w	r9, r5
 802b0d6:	ab01      	add	r3, sp, #4
 802b0d8:	464d      	mov	r5, r9
 802b0da:	4698      	mov	r8, r3
 802b0dc:	2e0f      	cmp	r6, #15
 802b0de:	f200 809b 	bhi.w	802b218 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b0e2:	280f      	cmp	r0, #15
 802b0e4:	f200 8098 	bhi.w	802b218 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b0e8:	b2b2      	uxth	r2, r6
 802b0ea:	b280      	uxth	r0, r0
 802b0ec:	fb02 f700 	mul.w	r7, r2, r0
 802b0f0:	0112      	lsls	r2, r2, #4
 802b0f2:	f89b c002 	ldrb.w	ip, [fp, #2]
 802b0f6:	1bd6      	subs	r6, r2, r7
 802b0f8:	f89b b001 	ldrb.w	fp, [fp, #1]
 802b0fc:	b2b6      	uxth	r6, r6
 802b0fe:	ebc7 1000 	rsb	r0, r7, r0, lsl #4
 802b102:	fb06 f404 	mul.w	r4, r6, r4
 802b106:	fb06 fc0c 	mul.w	ip, r6, ip
 802b10a:	fb06 f60b 	mul.w	r6, r6, fp
 802b10e:	b280      	uxth	r0, r0
 802b110:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802b114:	f89e b002 	ldrb.w	fp, [lr, #2]
 802b118:	1a12      	subs	r2, r2, r0
 802b11a:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b11e:	b292      	uxth	r2, r2
 802b120:	fb02 440a 	mla	r4, r2, sl, r4
 802b124:	fb02 660e 	mla	r6, r2, lr, r6
 802b128:	fb02 cc0b 	mla	ip, r2, fp, ip
 802b12c:	f898 a002 	ldrb.w	sl, [r8, #2]
 802b130:	f898 8001 	ldrb.w	r8, [r8, #1]
 802b134:	fb00 4909 	mla	r9, r0, r9, r4
 802b138:	fb00 cc0a 	mla	ip, r0, sl, ip
 802b13c:	fb00 6008 	mla	r0, r0, r8, r6
 802b140:	789e      	ldrb	r6, [r3, #2]
 802b142:	785b      	ldrb	r3, [r3, #1]
 802b144:	fb07 9905 	mla	r9, r7, r5, r9
 802b148:	fb07 c506 	mla	r5, r7, r6, ip
 802b14c:	fb07 0703 	mla	r7, r7, r3, r0
 802b150:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 802b154:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802b158:	097f      	lsrs	r7, r7, #5
 802b15a:	ea45 0509 	orr.w	r5, r5, r9
 802b15e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802b162:	433d      	orrs	r5, r7
 802b164:	800d      	strh	r5, [r1, #0]
 802b166:	b003      	add	sp, #12
 802b168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b16c:	b388      	cbz	r0, 802b1d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x15e>
 802b16e:	2f00      	cmp	r7, #0
 802b170:	db40      	blt.n	802b1f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b172:	45bc      	cmp	ip, r7
 802b174:	dd3e      	ble.n	802b1f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b176:	f812 800c 	ldrb.w	r8, [r2, ip]
 802b17a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802b17e:	4498      	add	r8, r3
 802b180:	3701      	adds	r7, #1
 802b182:	f898 9000 	ldrb.w	r9, [r8]
 802b186:	d432      	bmi.n	802b1ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b188:	45bc      	cmp	ip, r7
 802b18a:	dd30      	ble.n	802b1ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b18c:	2e00      	cmp	r6, #0
 802b18e:	d040      	beq.n	802b212 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x19e>
 802b190:	4494      	add	ip, r2
 802b192:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802b196:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802b19a:	5c9d      	ldrb	r5, [r3, r2]
 802b19c:	4413      	add	r3, r2
 802b19e:	e79d      	b.n	802b0dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b1a0:	2f00      	cmp	r7, #0
 802b1a2:	db01      	blt.n	802b1a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 802b1a4:	45bc      	cmp	ip, r7
 802b1a6:	dc1c      	bgt.n	802b1e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16e>
 802b1a8:	f10d 0e04 	add.w	lr, sp, #4
 802b1ac:	1c7c      	adds	r4, r7, #1
 802b1ae:	f89e a000 	ldrb.w	sl, [lr]
 802b1b2:	d40a      	bmi.n	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b1b4:	45a4      	cmp	ip, r4
 802b1b6:	dd08      	ble.n	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b1b8:	b1fe      	cbz	r6, 802b1fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x186>
 802b1ba:	f892 b001 	ldrb.w	fp, [r2, #1]
 802b1be:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b1c2:	f813 400b 	ldrb.w	r4, [r3, fp]
 802b1c6:	449b      	add	fp, r3
 802b1c8:	e77e      	b.n	802b0c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b1ca:	b2ec      	uxtb	r4, r5
 802b1cc:	f10d 0b04 	add.w	fp, sp, #4
 802b1d0:	e77a      	b.n	802b0c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b1d2:	2e0f      	cmp	r6, #15
 802b1d4:	fa5f f985 	uxtb.w	r9, r5
 802b1d8:	d81e      	bhi.n	802b218 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b1da:	ab01      	add	r3, sp, #4
 802b1dc:	4698      	mov	r8, r3
 802b1de:	464d      	mov	r5, r9
 802b1e0:	e782      	b.n	802b0e8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x74>
 802b1e2:	f81a e00e 	ldrb.w	lr, [sl, lr]
 802b1e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802b1ea:	449e      	add	lr, r3
 802b1ec:	e7de      	b.n	802b1ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802b1ee:	b2ed      	uxtb	r5, r5
 802b1f0:	ab01      	add	r3, sp, #4
 802b1f2:	e773      	b.n	802b0dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b1f4:	f10d 0804 	add.w	r8, sp, #4
 802b1f8:	e7c2      	b.n	802b180 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x10c>
 802b1fa:	f1b8 0f00 	cmp.w	r8, #0
 802b1fe:	b2ec      	uxtb	r4, r5
 802b200:	f10d 0b04 	add.w	fp, sp, #4
 802b204:	f6bf af63 	bge.w	802b0ce <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 802b208:	465b      	mov	r3, fp
 802b20a:	46d8      	mov	r8, fp
 802b20c:	4625      	mov	r5, r4
 802b20e:	46a1      	mov	r9, r4
 802b210:	e767      	b.n	802b0e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b212:	b2ed      	uxtb	r5, r5
 802b214:	ab01      	add	r3, sp, #4
 802b216:	e764      	b.n	802b0e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b218:	4b03      	ldr	r3, [pc, #12]	@ (802b228 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b4>)
 802b21a:	4a04      	ldr	r2, [pc, #16]	@ (802b22c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b8>)
 802b21c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b220:	4803      	ldr	r0, [pc, #12]	@ (802b230 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1bc>)
 802b222:	f007 f971 	bl	8032508 <__assert_func>
 802b226:	bf00      	nop
 802b228:	080366e4 	.word	0x080366e4
 802b22c:	08036d60 	.word	0x08036d60
 802b230:	0803686c 	.word	0x0803686c

0802b234 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b238:	ed2d 8b0a 	vpush	{d8-d12}
 802b23c:	eeb0 aa40 	vmov.f32	s20, s0
 802b240:	eef0 9a60 	vmov.f32	s19, s1
 802b244:	eeb0 9a41 	vmov.f32	s18, s2
 802b248:	eef0 8a62 	vmov.f32	s17, s5
 802b24c:	eeb0 8a43 	vmov.f32	s16, s6
 802b250:	eeb0 ca44 	vmov.f32	s24, s8
 802b254:	eef0 ba64 	vmov.f32	s23, s9
 802b258:	eeb0 ba45 	vmov.f32	s22, s10
 802b25c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802b260:	b093      	sub	sp, #76	@ 0x4c
 802b262:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802b266:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802b26a:	e9dd 9827 	ldrd	r9, r8, [sp, #156]	@ 0x9c
 802b26e:	9011      	str	r0, [sp, #68]	@ 0x44
 802b270:	461a      	mov	r2, r3
 802b272:	6860      	ldr	r0, [r4, #4]
 802b274:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802b276:	f8dd a0a4 	ldr.w	sl, [sp, #164]	@ 0xa4
 802b27a:	fb00 1303 	mla	r3, r0, r3, r1
 802b27e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802b280:	6820      	ldr	r0, [r4, #0]
 802b282:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802b284:	6849      	ldr	r1, [r1, #4]
 802b286:	6824      	ldr	r4, [r4, #0]
 802b288:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 802b28c:	1d0b      	adds	r3, r1, #4
 802b28e:	9409      	str	r4, [sp, #36]	@ 0x24
 802b290:	930c      	str	r3, [sp, #48]	@ 0x30
 802b292:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b294:	2b00      	cmp	r3, #0
 802b296:	dc02      	bgt.n	802b29e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802b298:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802b29a:	2b00      	cmp	r3, #0
 802b29c:	dd61      	ble.n	802b362 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b29e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b2a0:	2a00      	cmp	r2, #0
 802b2a2:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802b2a6:	b225      	sxth	r5, r4
 802b2a8:	fa0f f78e 	sxth.w	r7, lr
 802b2ac:	f340 81d9 	ble.w	802b662 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802b2b0:	f8cd e01c 	str.w	lr, [sp, #28]
 802b2b4:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802b2b8:	1e6e      	subs	r6, r5, #1
 802b2ba:	f107 3cff 	add.w	ip, r7, #4294967295
 802b2be:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b2c2:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b2c6:	d405      	bmi.n	802b2d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b2c8:	42b3      	cmp	r3, r6
 802b2ca:	da03      	bge.n	802b2d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b2cc:	2900      	cmp	r1, #0
 802b2ce:	db01      	blt.n	802b2d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b2d0:	4561      	cmp	r1, ip
 802b2d2:	db4b      	blt.n	802b36c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802b2d4:	1c58      	adds	r0, r3, #1
 802b2d6:	d406      	bmi.n	802b2e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b2d8:	42a8      	cmp	r0, r5
 802b2da:	dc04      	bgt.n	802b2e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b2dc:	1c48      	adds	r0, r1, #1
 802b2de:	d402      	bmi.n	802b2e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b2e0:	42b8      	cmp	r0, r7
 802b2e2:	f340 8149 	ble.w	802b578 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802b2e6:	3a01      	subs	r2, #1
 802b2e8:	44d1      	add	r9, sl
 802b2ea:	44f0      	add	r8, lr
 802b2ec:	f10b 0b02 	add.w	fp, fp, #2
 802b2f0:	d1e5      	bne.n	802b2be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802b2f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b2f4:	2b00      	cmp	r3, #0
 802b2f6:	dd34      	ble.n	802b362 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b2f8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802b2fc:	ee79 9aab 	vadd.f32	s19, s19, s23
 802b300:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802b304:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802b308:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802b30c:	ee69 7a27 	vmul.f32	s15, s18, s15
 802b310:	ee76 6a68 	vsub.f32	s13, s12, s17
 802b314:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802b318:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b31c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b320:	ee16 2a90 	vmov	r2, s13
 802b324:	3b01      	subs	r3, #1
 802b326:	930a      	str	r3, [sp, #40]	@ 0x28
 802b328:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b32a:	fb92 faf3 	sdiv	sl, r2, r3
 802b32e:	ee17 2a10 	vmov	r2, s14
 802b332:	eeb0 7a48 	vmov.f32	s14, s16
 802b336:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b33a:	ee17 8a10 	vmov	r8, s14
 802b33e:	eeb0 7a68 	vmov.f32	s14, s17
 802b342:	fb92 f3f3 	sdiv	r3, r2, r3
 802b346:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b34a:	932a      	str	r3, [sp, #168]	@ 0xa8
 802b34c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b34e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b350:	ee17 9a10 	vmov	r9, s14
 802b354:	eeb0 8a67 	vmov.f32	s16, s15
 802b358:	eef0 8a46 	vmov.f32	s17, s12
 802b35c:	bf18      	it	ne
 802b35e:	461a      	movne	r2, r3
 802b360:	e797      	b.n	802b292 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802b362:	b013      	add	sp, #76	@ 0x4c
 802b364:	ecbd 8b0a 	vpop	{d8-d12}
 802b368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b36c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b370:	f8cd b01c 	str.w	fp, [sp, #28]
 802b374:	1e51      	subs	r1, r2, #1
 802b376:	fb0a 9301 	mla	r3, sl, r1, r9
 802b37a:	141b      	asrs	r3, r3, #16
 802b37c:	9108      	str	r1, [sp, #32]
 802b37e:	f100 809e 	bmi.w	802b4be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b382:	42b3      	cmp	r3, r6
 802b384:	f280 809b 	bge.w	802b4be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b388:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b38a:	fb03 8301 	mla	r3, r3, r1, r8
 802b38e:	141b      	asrs	r3, r3, #16
 802b390:	f100 8095 	bmi.w	802b4be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b394:	3f01      	subs	r7, #1
 802b396:	42bb      	cmp	r3, r7
 802b398:	f280 8091 	bge.w	802b4be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b39c:	2a00      	cmp	r2, #0
 802b39e:	dda8      	ble.n	802b2f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b3a0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802b3a4:	f8cd a0a4 	str.w	sl, [sp, #164]	@ 0xa4
 802b3a8:	f8cd b020 	str.w	fp, [sp, #32]
 802b3ac:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802b3b0:	e060      	b.n	802b474 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b3b2:	784f      	ldrb	r7, [r1, #1]
 802b3b4:	194c      	adds	r4, r1, r5
 802b3b6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b3ba:	4457      	add	r7, sl
 802b3bc:	2a00      	cmp	r2, #0
 802b3be:	d075      	beq.n	802b4ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b3c0:	5d48      	ldrb	r0, [r1, r5]
 802b3c2:	7865      	ldrb	r5, [r4, #1]
 802b3c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b3c8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b3cc:	4450      	add	r0, sl
 802b3ce:	4455      	add	r5, sl
 802b3d0:	b29b      	uxth	r3, r3
 802b3d2:	b292      	uxth	r2, r2
 802b3d4:	fb03 f402 	mul.w	r4, r3, r2
 802b3d8:	011b      	lsls	r3, r3, #4
 802b3da:	f897 e000 	ldrb.w	lr, [r7]
 802b3de:	f897 c002 	ldrb.w	ip, [r7, #2]
 802b3e2:	1b19      	subs	r1, r3, r4
 802b3e4:	787f      	ldrb	r7, [r7, #1]
 802b3e6:	b289      	uxth	r1, r1
 802b3e8:	fb01 fc0c 	mul.w	ip, r1, ip
 802b3ec:	fb01 fe0e 	mul.w	lr, r1, lr
 802b3f0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802b3f4:	fb01 f107 	mul.w	r1, r1, r7
 802b3f8:	b292      	uxth	r2, r2
 802b3fa:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b3fe:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802b402:	78b7      	ldrb	r7, [r6, #2]
 802b404:	1a9b      	subs	r3, r3, r2
 802b406:	7876      	ldrb	r6, [r6, #1]
 802b408:	b29b      	uxth	r3, r3
 802b40a:	fb03 ee0b 	mla	lr, r3, fp, lr
 802b40e:	fb03 c707 	mla	r7, r3, r7, ip
 802b412:	fb03 1306 	mla	r3, r3, r6, r1
 802b416:	f890 b000 	ldrb.w	fp, [r0]
 802b41a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802b41e:	7841      	ldrb	r1, [r0, #1]
 802b420:	fb02 ee0b 	mla	lr, r2, fp, lr
 802b424:	fb02 3301 	mla	r3, r2, r1, r3
 802b428:	fb02 770c 	mla	r7, r2, ip, r7
 802b42c:	f895 b000 	ldrb.w	fp, [r5]
 802b430:	f895 c002 	ldrb.w	ip, [r5, #2]
 802b434:	7869      	ldrb	r1, [r5, #1]
 802b436:	fb04 ee0b 	mla	lr, r4, fp, lr
 802b43a:	fb04 3101 	mla	r1, r4, r1, r3
 802b43e:	fb04 7c0c 	mla	ip, r4, ip, r7
 802b442:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802b444:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802b448:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802b44c:	0949      	lsrs	r1, r1, #5
 802b44e:	4491      	add	r9, r2
 802b450:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802b452:	9b07      	ldr	r3, [sp, #28]
 802b454:	ea4c 0e0e 	orr.w	lr, ip, lr
 802b458:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b45c:	ea4e 0e01 	orr.w	lr, lr, r1
 802b460:	4490      	add	r8, r2
 802b462:	9a08      	ldr	r2, [sp, #32]
 802b464:	f823 eb02 	strh.w	lr, [r3], #2
 802b468:	4293      	cmp	r3, r2
 802b46a:	9307      	str	r3, [sp, #28]
 802b46c:	d025      	beq.n	802b4ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 802b46e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b470:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b474:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b478:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b47c:	fb05 3101 	mla	r1, r5, r1, r3
 802b480:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b482:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802b486:	f812 b001 	ldrb.w	fp, [r2, r1]
 802b48a:	4411      	add	r1, r2
 802b48c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b490:	eb0a 060b 	add.w	r6, sl, fp
 802b494:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b498:	2b00      	cmp	r3, #0
 802b49a:	d18a      	bne.n	802b3b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b49c:	b14a      	cbz	r2, 802b4b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 802b49e:	5d48      	ldrb	r0, [r1, r5]
 802b4a0:	4637      	mov	r7, r6
 802b4a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b4a6:	4635      	mov	r5, r6
 802b4a8:	4450      	add	r0, sl
 802b4aa:	e791      	b.n	802b3d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b4ac:	4635      	mov	r5, r6
 802b4ae:	4630      	mov	r0, r6
 802b4b0:	e78e      	b.n	802b3d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b4b2:	4635      	mov	r5, r6
 802b4b4:	4630      	mov	r0, r6
 802b4b6:	4637      	mov	r7, r6
 802b4b8:	e78a      	b.n	802b3d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b4ba:	4693      	mov	fp, r2
 802b4bc:	e719      	b.n	802b2f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b4be:	2a00      	cmp	r2, #0
 802b4c0:	f77f af17 	ble.w	802b2f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b4c4:	9e08      	ldr	r6, [sp, #32]
 802b4c6:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b4ca:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b4ce:	465f      	mov	r7, fp
 802b4d0:	f8cd b01c 	str.w	fp, [sp, #28]
 802b4d4:	f8dd b0b8 	ldr.w	fp, [sp, #184]	@ 0xb8
 802b4d8:	2b00      	cmp	r3, #0
 802b4da:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802b4de:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b4e2:	db2a      	blt.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4e4:	1e65      	subs	r5, r4, #1
 802b4e6:	42ab      	cmp	r3, r5
 802b4e8:	da27      	bge.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4ea:	2900      	cmp	r1, #0
 802b4ec:	db25      	blt.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4ee:	f10e 35ff 	add.w	r5, lr, #4294967295
 802b4f2:	42a9      	cmp	r1, r5
 802b4f4:	da21      	bge.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4f6:	b224      	sxth	r4, r4
 802b4f8:	fb01 3304 	mla	r3, r1, r4, r3
 802b4fc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b4fe:	f811 c003 	ldrb.w	ip, [r1, r3]
 802b502:	440b      	add	r3, r1
 802b504:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b506:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b50a:	eb01 0e0c 	add.w	lr, r1, ip
 802b50e:	2800      	cmp	r0, #0
 802b510:	d048      	beq.n	802b5a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802b512:	785d      	ldrb	r5, [r3, #1]
 802b514:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b518:	440d      	add	r5, r1
 802b51a:	2a00      	cmp	r2, #0
 802b51c:	f000 809e 	beq.w	802b65c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802b520:	1919      	adds	r1, r3, r4
 802b522:	7849      	ldrb	r1, [r1, #1]
 802b524:	5d1c      	ldrb	r4, [r3, r4]
 802b526:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b528:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802b52c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b530:	1859      	adds	r1, r3, r1
 802b532:	18e3      	adds	r3, r4, r3
 802b534:	910f      	str	r1, [sp, #60]	@ 0x3c
 802b536:	9310      	str	r3, [sp, #64]	@ 0x40
 802b538:	e039      	b.n	802b5ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b53a:	1c5d      	adds	r5, r3, #1
 802b53c:	d405      	bmi.n	802b54a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b53e:	42a5      	cmp	r5, r4
 802b540:	dc03      	bgt.n	802b54a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b542:	1c4d      	adds	r5, r1, #1
 802b544:	d401      	bmi.n	802b54a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b546:	4575      	cmp	r5, lr
 802b548:	dd1c      	ble.n	802b584 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802b54a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b54c:	2e00      	cmp	r6, #0
 802b54e:	f107 0702 	add.w	r7, r7, #2
 802b552:	44d1      	add	r9, sl
 802b554:	4498      	add	r8, r3
 802b556:	dd07      	ble.n	802b568 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 802b558:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 802b55c:	3e01      	subs	r6, #1
 802b55e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b562:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b566:	e7b7      	b.n	802b4d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802b568:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 802b56c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b570:	3301      	adds	r3, #1
 802b572:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802b576:	e6bc      	b.n	802b2f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b578:	3a01      	subs	r2, #1
 802b57a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b57e:	9208      	str	r2, [sp, #32]
 802b580:	4616      	mov	r6, r2
 802b582:	e7a4      	b.n	802b4ce <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802b584:	fa0f f58e 	sxth.w	r5, lr
 802b588:	b224      	sxth	r4, r4
 802b58a:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802b58e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802b592:	e9cd 4500 	strd	r4, r5, [sp]
 802b596:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b598:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b59a:	4639      	mov	r1, r7
 802b59c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802b59e:	f7ff fd69 	bl	802b074 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802b5a2:	e7d2      	b.n	802b54a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b5a4:	2a00      	cmp	r2, #0
 802b5a6:	d14f      	bne.n	802b648 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 802b5a8:	4675      	mov	r5, lr
 802b5aa:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b5ae:	b283      	uxth	r3, r0
 802b5b0:	b292      	uxth	r2, r2
 802b5b2:	fb03 f002 	mul.w	r0, r3, r2
 802b5b6:	782c      	ldrb	r4, [r5, #0]
 802b5b8:	011b      	lsls	r3, r3, #4
 802b5ba:	940e      	str	r4, [sp, #56]	@ 0x38
 802b5bc:	78ac      	ldrb	r4, [r5, #2]
 802b5be:	1a19      	subs	r1, r3, r0
 802b5c0:	940d      	str	r4, [sp, #52]	@ 0x34
 802b5c2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b5c4:	b289      	uxth	r1, r1
 802b5c6:	fb01 f404 	mul.w	r4, r1, r4
 802b5ca:	940e      	str	r4, [sp, #56]	@ 0x38
 802b5cc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b5ce:	786d      	ldrb	r5, [r5, #1]
 802b5d0:	fb01 f404 	mul.w	r4, r1, r4
 802b5d4:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802b5d8:	fb01 f105 	mul.w	r1, r1, r5
 802b5dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b5de:	b292      	uxth	r2, r2
 802b5e0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b5e4:	f815 c00c 	ldrb.w	ip, [r5, ip]
 802b5e8:	940d      	str	r4, [sp, #52]	@ 0x34
 802b5ea:	1a9b      	subs	r3, r3, r2
 802b5ec:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b5ee:	b29b      	uxth	r3, r3
 802b5f0:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802b5f4:	fb03 4c0c 	mla	ip, r3, ip, r4
 802b5f8:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b5fc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b5fe:	fb03 4505 	mla	r5, r3, r5, r4
 802b602:	fb03 130e 	mla	r3, r3, lr, r1
 802b606:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802b608:	78a1      	ldrb	r1, [r4, #2]
 802b60a:	f894 e000 	ldrb.w	lr, [r4]
 802b60e:	7864      	ldrb	r4, [r4, #1]
 802b610:	fb02 5501 	mla	r5, r2, r1, r5
 802b614:	fb02 cc0e 	mla	ip, r2, lr, ip
 802b618:	fb02 3104 	mla	r1, r2, r4, r3
 802b61c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802b61e:	7822      	ldrb	r2, [r4, #0]
 802b620:	78a3      	ldrb	r3, [r4, #2]
 802b622:	7864      	ldrb	r4, [r4, #1]
 802b624:	fb00 cc02 	mla	ip, r0, r2, ip
 802b628:	fb00 5303 	mla	r3, r0, r3, r5
 802b62c:	fb00 1204 	mla	r2, r0, r4, r1
 802b630:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802b634:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b638:	0952      	lsrs	r2, r2, #5
 802b63a:	ea43 030c 	orr.w	r3, r3, ip
 802b63e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b642:	4313      	orrs	r3, r2
 802b644:	803b      	strh	r3, [r7, #0]
 802b646:	e780      	b.n	802b54a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b648:	5d1c      	ldrb	r4, [r3, r4]
 802b64a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b64c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b650:	18e3      	adds	r3, r4, r3
 802b652:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 802b656:	9310      	str	r3, [sp, #64]	@ 0x40
 802b658:	4675      	mov	r5, lr
 802b65a:	e7a8      	b.n	802b5ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b65c:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b660:	e7a5      	b.n	802b5ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b662:	f43f ae46 	beq.w	802b2f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b666:	1e6e      	subs	r6, r5, #1
 802b668:	f8cd b01c 	str.w	fp, [sp, #28]
 802b66c:	e682      	b.n	802b374 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802b66e:	bf00      	nop

0802b670 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802b670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b674:	b08b      	sub	sp, #44	@ 0x2c
 802b676:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	@ 0x50
 802b67a:	f8b1 c000 	ldrh.w	ip, [r1]
 802b67e:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 802b682:	fb04 6507 	mla	r5, r4, r7, r6
 802b686:	9107      	str	r1, [sp, #28]
 802b688:	ea4f 01ec 	mov.w	r1, ip, asr #3
 802b68c:	ea4f 202c 	mov.w	r0, ip, asr #8
 802b690:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b694:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802b698:	469a      	mov	sl, r3
 802b69a:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 802b69e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b6a2:	9105      	str	r1, [sp, #20]
 802b6a4:	2c00      	cmp	r4, #0
 802b6a6:	fa5f f18c 	uxtb.w	r1, ip
 802b6aa:	9004      	str	r0, [sp, #16]
 802b6ac:	9106      	str	r1, [sp, #24]
 802b6ae:	eb02 0e05 	add.w	lr, r2, r5
 802b6b2:	f104 0801 	add.w	r8, r4, #1
 802b6b6:	f9bd 9054 	ldrsh.w	r9, [sp, #84]	@ 0x54
 802b6ba:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 802b6be:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802b6c2:	9308      	str	r3, [sp, #32]
 802b6c4:	db02      	blt.n	802b6cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802b6c6:	45a1      	cmp	r9, r4
 802b6c8:	f300 8119 	bgt.w	802b8fe <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28e>
 802b6cc:	f04f 0c00 	mov.w	ip, #0
 802b6d0:	4665      	mov	r5, ip
 802b6d2:	4662      	mov	r2, ip
 802b6d4:	4664      	mov	r4, ip
 802b6d6:	f1b8 0f00 	cmp.w	r8, #0
 802b6da:	db02      	blt.n	802b6e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x72>
 802b6dc:	45c1      	cmp	r9, r8
 802b6de:	f300 8127 	bgt.w	802b930 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>
 802b6e2:	f04f 0e00 	mov.w	lr, #0
 802b6e6:	46f0      	mov	r8, lr
 802b6e8:	4676      	mov	r6, lr
 802b6ea:	46f1      	mov	r9, lr
 802b6ec:	290f      	cmp	r1, #15
 802b6ee:	f200 815e 	bhi.w	802b9ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b6f2:	280f      	cmp	r0, #15
 802b6f4:	f200 815b 	bhi.w	802b9ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b6f8:	b280      	uxth	r0, r0
 802b6fa:	b289      	uxth	r1, r1
 802b6fc:	fb00 fa01 	mul.w	sl, r0, r1
 802b700:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802b704:	b280      	uxth	r0, r0
 802b706:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802b70a:	fb00 fb08 	mul.w	fp, r0, r8
 802b70e:	fb0a f70e 	mul.w	r7, sl, lr
 802b712:	9301      	str	r3, [sp, #4]
 802b714:	f009 13ff 	and.w	r3, r9, #16711935	@ 0xff00ff
 802b718:	9302      	str	r3, [sp, #8]
 802b71a:	f409 437f 	and.w	r3, r9, #65280	@ 0xff00
 802b71e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b722:	9303      	str	r3, [sp, #12]
 802b724:	0109      	lsls	r1, r1, #4
 802b726:	eba1 090a 	sub.w	r9, r1, sl
 802b72a:	fa1f f989 	uxth.w	r9, r9
 802b72e:	fb09 f30c 	mul.w	r3, r9, ip
 802b732:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802b736:	1a09      	subs	r1, r1, r0
 802b738:	b289      	uxth	r1, r1
 802b73a:	fb01 3305 	mla	r3, r1, r5, r3
 802b73e:	445b      	add	r3, fp
 802b740:	443b      	add	r3, r7
 802b742:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b746:	2dff      	cmp	r5, #255	@ 0xff
 802b748:	9309      	str	r3, [sp, #36]	@ 0x24
 802b74a:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b74e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b752:	d019      	beq.n	802b788 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x118>
 802b754:	fb03 f305 	mul.w	r3, r3, r5
 802b758:	fb04 f405 	mul.w	r4, r4, r5
 802b75c:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802b760:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802b764:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802b768:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 802b76c:	445b      	add	r3, fp
 802b76e:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802b772:	0a1b      	lsrs	r3, r3, #8
 802b774:	0a24      	lsrs	r4, r4, #8
 802b776:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b77a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b77e:	431c      	orrs	r4, r3
 802b780:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b784:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b788:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b78c:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b790:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b794:	d018      	beq.n	802b7c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x158>
 802b796:	fb05 f50c 	mul.w	r5, r5, ip
 802b79a:	fb02 f20c 	mul.w	r2, r2, ip
 802b79e:	0a2f      	lsrs	r7, r5, #8
 802b7a0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b7a4:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 802b7a8:	f502 7c80 	add.w	ip, r2, #256	@ 0x100
 802b7ac:	443d      	add	r5, r7
 802b7ae:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802b7b2:	0a2d      	lsrs	r5, r5, #8
 802b7b4:	0a12      	lsrs	r2, r2, #8
 802b7b6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802b7ba:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b7be:	432a      	orrs	r2, r5
 802b7c0:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b7c4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b7c8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802b7cc:	d01f      	beq.n	802b80e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 802b7ce:	9f02      	ldr	r7, [sp, #8]
 802b7d0:	fb07 fb08 	mul.w	fp, r7, r8
 802b7d4:	9f03      	ldr	r7, [sp, #12]
 802b7d6:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802b7da:	fb07 f808 	mul.w	r8, r7, r8
 802b7de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7e2:	f508 7780 	add.w	r7, r8, #256	@ 0x100
 802b7e6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b7ea:	eb07 2718 	add.w	r7, r7, r8, lsr #8
 802b7ee:	44dc      	add	ip, fp
 802b7f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b7f4:	0a3f      	lsrs	r7, r7, #8
 802b7f6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802b7fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7fe:	ea4c 0807 	orr.w	r8, ip, r7
 802b802:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 802b806:	9702      	str	r7, [sp, #8]
 802b808:	f408 477f 	and.w	r7, r8, #65280	@ 0xff00
 802b80c:	9703      	str	r7, [sp, #12]
 802b80e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802b812:	d01d      	beq.n	802b850 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1e0>
 802b814:	9f01      	ldr	r7, [sp, #4]
 802b816:	fb06 f60e 	mul.w	r6, r6, lr
 802b81a:	fb07 f80e 	mul.w	r8, r7, lr
 802b81e:	ea4f 2c18 	mov.w	ip, r8, lsr #8
 802b822:	f506 7780 	add.w	r7, r6, #256	@ 0x100
 802b826:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b82a:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802b82e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 802b832:	44e0      	add	r8, ip
 802b834:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802b838:	0a36      	lsrs	r6, r6, #8
 802b83a:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802b83e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b842:	ea48 0606 	orr.w	r6, r8, r6
 802b846:	f006 17ff 	and.w	r7, r6, #16711935	@ 0xff00ff
 802b84a:	9701      	str	r7, [sp, #4]
 802b84c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b850:	f8bd e020 	ldrh.w	lr, [sp, #32]
 802b854:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802b856:	fb05 f509 	mul.w	r5, r5, r9
 802b85a:	fb07 f70e 	mul.w	r7, r7, lr
 802b85e:	f107 0c01 	add.w	ip, r7, #1
 802b862:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 802b866:	ea6f 2c1c 	mvn.w	ip, ip, lsr #8
 802b86a:	fb02 f209 	mul.w	r2, r2, r9
 802b86e:	fb03 5501 	mla	r5, r3, r1, r5
 802b872:	fb04 2201 	mla	r2, r4, r1, r2
 802b876:	9b02      	ldr	r3, [sp, #8]
 802b878:	fa5f fc8c 	uxtb.w	ip, ip
 802b87c:	fb03 5500 	mla	r5, r3, r0, r5
 802b880:	9b03      	ldr	r3, [sp, #12]
 802b882:	fb03 2200 	mla	r2, r3, r0, r2
 802b886:	9b01      	ldr	r3, [sp, #4]
 802b888:	fb03 550a 	mla	r5, r3, sl, r5
 802b88c:	fb06 2a0a 	mla	sl, r6, sl, r2
 802b890:	9a05      	ldr	r2, [sp, #20]
 802b892:	9b04      	ldr	r3, [sp, #16]
 802b894:	fb12 f10c 	smulbb	r1, r2, ip
 802b898:	9a06      	ldr	r2, [sp, #24]
 802b89a:	0a2e      	lsrs	r6, r5, #8
 802b89c:	fb13 f30c 	smulbb	r3, r3, ip
 802b8a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b8a4:	fb12 fc0c 	smulbb	ip, r2, ip
 802b8a8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b8ac:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802b8b0:	ea46 060a 	orr.w	r6, r6, sl
 802b8b4:	0c30      	lsrs	r0, r6, #16
 802b8b6:	f3c6 2207 	ubfx	r2, r6, #8, #8
 802b8ba:	b2f6      	uxtb	r6, r6
 802b8bc:	fb00 330e 	mla	r3, r0, lr, r3
 802b8c0:	fb02 120e 	mla	r2, r2, lr, r1
 802b8c4:	fb06 c60e 	mla	r6, r6, lr, ip
 802b8c8:	b298      	uxth	r0, r3
 802b8ca:	b291      	uxth	r1, r2
 802b8cc:	b2b6      	uxth	r6, r6
 802b8ce:	1c43      	adds	r3, r0, #1
 802b8d0:	f106 0e01 	add.w	lr, r6, #1
 802b8d4:	1c4a      	adds	r2, r1, #1
 802b8d6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802b8da:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802b8de:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b8e2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802b8e6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b8ea:	0952      	lsrs	r2, r2, #5
 802b8ec:	4333      	orrs	r3, r6
 802b8ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b8f2:	4313      	orrs	r3, r2
 802b8f4:	9a07      	ldr	r2, [sp, #28]
 802b8f6:	8013      	strh	r3, [r2, #0]
 802b8f8:	b00b      	add	sp, #44	@ 0x2c
 802b8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b8fe:	2e00      	cmp	r6, #0
 802b900:	db01      	blt.n	802b906 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x296>
 802b902:	42b7      	cmp	r7, r6
 802b904:	dc3c      	bgt.n	802b980 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x310>
 802b906:	2500      	movs	r5, #0
 802b908:	462c      	mov	r4, r5
 802b90a:	1c72      	adds	r2, r6, #1
 802b90c:	d427      	bmi.n	802b95e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b90e:	4297      	cmp	r7, r2
 802b910:	dd25      	ble.n	802b95e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b912:	b131      	cbz	r1, 802b922 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 802b914:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802b918:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 802b91c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802b920:	e6d9      	b.n	802b6d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b922:	f1b8 0f00 	cmp.w	r8, #0
 802b926:	db3b      	blt.n	802b9a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b928:	45c1      	cmp	r9, r8
 802b92a:	dd39      	ble.n	802b9a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b92c:	468c      	mov	ip, r1
 802b92e:	460a      	mov	r2, r1
 802b930:	b1c8      	cbz	r0, 802b966 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f6>
 802b932:	2e00      	cmp	r6, #0
 802b934:	db2d      	blt.n	802b992 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b936:	42b7      	cmp	r7, r6
 802b938:	dd2b      	ble.n	802b992 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b93a:	f81e 8007 	ldrb.w	r8, [lr, r7]
 802b93e:	f85a 9028 	ldr.w	r9, [sl, r8, lsl #2]
 802b942:	ea4f 6819 	mov.w	r8, r9, lsr #24
 802b946:	3601      	adds	r6, #1
 802b948:	d41f      	bmi.n	802b98a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b94a:	42b7      	cmp	r7, r6
 802b94c:	dd1d      	ble.n	802b98a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b94e:	b321      	cbz	r1, 802b99a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x32a>
 802b950:	4477      	add	r7, lr
 802b952:	787e      	ldrb	r6, [r7, #1]
 802b954:	f85a 6026 	ldr.w	r6, [sl, r6, lsl #2]
 802b958:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 802b95c:	e6c6      	b.n	802b6ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b95e:	f04f 0c00 	mov.w	ip, #0
 802b962:	4662      	mov	r2, ip
 802b964:	e6b7      	b.n	802b6d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b966:	290f      	cmp	r1, #15
 802b968:	d821      	bhi.n	802b9ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b96a:	b289      	uxth	r1, r1
 802b96c:	4682      	mov	sl, r0
 802b96e:	4607      	mov	r7, r0
 802b970:	4683      	mov	fp, r0
 802b972:	e9cd 0002 	strd	r0, r0, [sp, #8]
 802b976:	4606      	mov	r6, r0
 802b978:	9001      	str	r0, [sp, #4]
 802b97a:	4686      	mov	lr, r0
 802b97c:	4680      	mov	r8, r0
 802b97e:	e6d1      	b.n	802b724 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb4>
 802b980:	5d52      	ldrb	r2, [r2, r5]
 802b982:	f85a 4022 	ldr.w	r4, [sl, r2, lsl #2]
 802b986:	0e25      	lsrs	r5, r4, #24
 802b988:	e7bf      	b.n	802b90a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x29a>
 802b98a:	f04f 0e00 	mov.w	lr, #0
 802b98e:	4676      	mov	r6, lr
 802b990:	e6ac      	b.n	802b6ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b992:	f04f 0800 	mov.w	r8, #0
 802b996:	46c1      	mov	r9, r8
 802b998:	e7d5      	b.n	802b946 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d6>
 802b99a:	460e      	mov	r6, r1
 802b99c:	468e      	mov	lr, r1
 802b99e:	e6a8      	b.n	802b6f2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b9a0:	460a      	mov	r2, r1
 802b9a2:	460e      	mov	r6, r1
 802b9a4:	4689      	mov	r9, r1
 802b9a6:	468e      	mov	lr, r1
 802b9a8:	4688      	mov	r8, r1
 802b9aa:	468c      	mov	ip, r1
 802b9ac:	e6a1      	b.n	802b6f2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b9ae:	4b03      	ldr	r3, [pc, #12]	@ (802b9bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x34c>)
 802b9b0:	4a03      	ldr	r2, [pc, #12]	@ (802b9c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x350>)
 802b9b2:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b9b6:	4803      	ldr	r0, [pc, #12]	@ (802b9c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x354>)
 802b9b8:	f006 fda6 	bl	8032508 <__assert_func>
 802b9bc:	080366e4 	.word	0x080366e4
 802b9c0:	08036d60 	.word	0x08036d60
 802b9c4:	0803686c 	.word	0x0803686c

0802b9c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b9c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b9cc:	ed2d 8b08 	vpush	{d8-d11}
 802b9d0:	b0a9      	sub	sp, #164	@ 0xa4
 802b9d2:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802b9d4:	9022      	str	r0, [sp, #136]	@ 0x88
 802b9d6:	9115      	str	r1, [sp, #84]	@ 0x54
 802b9d8:	6860      	ldr	r0, [r4, #4]
 802b9da:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802b9dc:	9219      	str	r2, [sp, #100]	@ 0x64
 802b9de:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802b9e0:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802b9e4:	fb00 1202 	mla	r2, r0, r2, r1
 802b9e8:	6820      	ldr	r0, [r4, #0]
 802b9ea:	46d1      	mov	r9, sl
 802b9ec:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802b9f0:	46da      	mov	sl, fp
 802b9f2:	eeb0 aa40 	vmov.f32	s20, s0
 802b9f6:	eef0 9a60 	vmov.f32	s19, s1
 802b9fa:	eeb0 9a41 	vmov.f32	s18, s2
 802b9fe:	eef0 8a62 	vmov.f32	s17, s5
 802ba02:	eeb0 8a43 	vmov.f32	s16, s6
 802ba06:	eef0 ba44 	vmov.f32	s23, s8
 802ba0a:	eeb0 ba64 	vmov.f32	s22, s9
 802ba0e:	eef0 aa45 	vmov.f32	s21, s10
 802ba12:	4693      	mov	fp, r2
 802ba14:	9942      	ldr	r1, [sp, #264]	@ 0x108
 802ba16:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802ba18:	6849      	ldr	r1, [r1, #4]
 802ba1a:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802ba1e:	3104      	adds	r1, #4
 802ba20:	682d      	ldr	r5, [r5, #0]
 802ba22:	910e      	str	r1, [sp, #56]	@ 0x38
 802ba24:	b2a1      	uxth	r1, r4
 802ba26:	9423      	str	r4, [sp, #140]	@ 0x8c
 802ba28:	9511      	str	r5, [sp, #68]	@ 0x44
 802ba2a:	9112      	str	r1, [sp, #72]	@ 0x48
 802ba2c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802ba2e:	2a00      	cmp	r2, #0
 802ba30:	dc02      	bgt.n	802ba38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802ba32:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802ba34:	2a00      	cmp	r2, #0
 802ba36:	dd65      	ble.n	802bb04 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802ba38:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802ba3a:	2b00      	cmp	r3, #0
 802ba3c:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802ba40:	b234      	sxth	r4, r6
 802ba42:	fa0f f78c 	sxth.w	r7, ip
 802ba46:	f340 8396 	ble.w	802c176 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ae>
 802ba4a:	1e65      	subs	r5, r4, #1
 802ba4c:	f107 3eff 	add.w	lr, r7, #4294967295
 802ba50:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802ba54:	e9dd c83d 	ldrd	ip, r8, [sp, #244]	@ 0xf4
 802ba58:	ea5f 422a 	movs.w	r2, sl, asr #16
 802ba5c:	ea4f 4129 	mov.w	r1, r9, asr #16
 802ba60:	d405      	bmi.n	802ba6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba62:	42aa      	cmp	r2, r5
 802ba64:	da03      	bge.n	802ba6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba66:	2900      	cmp	r1, #0
 802ba68:	db01      	blt.n	802ba6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba6a:	4571      	cmp	r1, lr
 802ba6c:	db4f      	blt.n	802bb0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802ba6e:	1c50      	adds	r0, r2, #1
 802ba70:	d406      	bmi.n	802ba80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba72:	42a0      	cmp	r0, r4
 802ba74:	dc04      	bgt.n	802ba80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba76:	1c48      	adds	r0, r1, #1
 802ba78:	d402      	bmi.n	802ba80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba7a:	42b8      	cmp	r0, r7
 802ba7c:	f340 834f 	ble.w	802c11e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 802ba80:	3b01      	subs	r3, #1
 802ba82:	44e2      	add	sl, ip
 802ba84:	44c1      	add	r9, r8
 802ba86:	f10b 0b02 	add.w	fp, fp, #2
 802ba8a:	d1e5      	bne.n	802ba58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ba8c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ba8e:	2b00      	cmp	r3, #0
 802ba90:	dd38      	ble.n	802bb04 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802ba92:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba96:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ba9a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ba9e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802baa2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802baa6:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802baaa:	ee69 7a27 	vmul.f32	s15, s18, s15
 802baae:	ee76 6a68 	vsub.f32	s13, s12, s17
 802bab2:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802bab6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802baba:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802babe:	ee16 2a90 	vmov	r2, s13
 802bac2:	3b01      	subs	r3, #1
 802bac4:	9315      	str	r3, [sp, #84]	@ 0x54
 802bac6:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bac8:	fb92 f3f3 	sdiv	r3, r2, r3
 802bacc:	ee17 2a10 	vmov	r2, s14
 802bad0:	eeb0 7a48 	vmov.f32	s14, s16
 802bad4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bad8:	ee17 9a10 	vmov	r9, s14
 802badc:	eeb0 7a68 	vmov.f32	s14, s17
 802bae0:	933d      	str	r3, [sp, #244]	@ 0xf4
 802bae2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bae4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bae8:	fb92 f3f3 	sdiv	r3, r2, r3
 802baec:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802baee:	933e      	str	r3, [sp, #248]	@ 0xf8
 802baf0:	ee17 aa10 	vmov	sl, s14
 802baf4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802baf6:	eeb0 8a67 	vmov.f32	s16, s15
 802bafa:	eef0 8a46 	vmov.f32	s17, s12
 802bafe:	bf08      	it	eq
 802bb00:	4613      	moveq	r3, r2
 802bb02:	e793      	b.n	802ba2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802bb04:	b029      	add	sp, #164	@ 0xa4
 802bb06:	ecbd 8b08 	vpop	{d8-d11}
 802bb0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bb0e:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802bb12:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bb16:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802bb18:	1e59      	subs	r1, r3, #1
 802bb1a:	fb00 a201 	mla	r2, r0, r1, sl
 802bb1e:	1412      	asrs	r2, r2, #16
 802bb20:	910d      	str	r1, [sp, #52]	@ 0x34
 802bb22:	f100 8161 	bmi.w	802bde8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb26:	42aa      	cmp	r2, r5
 802bb28:	f280 815e 	bge.w	802bde8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb2c:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bb2e:	fb02 9201 	mla	r2, r2, r1, r9
 802bb32:	1412      	asrs	r2, r2, #16
 802bb34:	f100 8158 	bmi.w	802bde8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb38:	3f01      	subs	r7, #1
 802bb3a:	42ba      	cmp	r2, r7
 802bb3c:	f280 8154 	bge.w	802bde8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb40:	2b00      	cmp	r3, #0
 802bb42:	dda3      	ble.n	802ba8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bb44:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802bb48:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802bb4c:	46d0      	mov	r8, sl
 802bb4e:	4621      	mov	r1, r4
 802bb50:	e129      	b.n	802bda6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 802bb52:	f893 c001 	ldrb.w	ip, [r3, #1]
 802bb56:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802bb5a:	9513      	str	r5, [sp, #76]	@ 0x4c
 802bb5c:	0e2d      	lsrs	r5, r5, #24
 802bb5e:	950a      	str	r5, [sp, #40]	@ 0x28
 802bb60:	b162      	cbz	r2, 802bb7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bb62:	185d      	adds	r5, r3, r1
 802bb64:	786d      	ldrb	r5, [r5, #1]
 802bb66:	5c5b      	ldrb	r3, [r3, r1]
 802bb68:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802bb6c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802bb70:	9116      	str	r1, [sp, #88]	@ 0x58
 802bb72:	9314      	str	r3, [sp, #80]	@ 0x50
 802bb74:	0e09      	lsrs	r1, r1, #24
 802bb76:	0e1b      	lsrs	r3, r3, #24
 802bb78:	910c      	str	r1, [sp, #48]	@ 0x30
 802bb7a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bb7c:	b2a4      	uxth	r4, r4
 802bb7e:	b292      	uxth	r2, r2
 802bb80:	fb04 f502 	mul.w	r5, r4, r2
 802bb84:	0124      	lsls	r4, r4, #4
 802bb86:	1b66      	subs	r6, r4, r5
 802bb88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bb8a:	b2b6      	uxth	r6, r6
 802bb8c:	fb06 f103 	mul.w	r1, r6, r3
 802bb90:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802bb94:	b292      	uxth	r2, r2
 802bb96:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802bb9a:	1a9b      	subs	r3, r3, r2
 802bb9c:	b29b      	uxth	r3, r3
 802bb9e:	fb03 1100 	mla	r1, r3, r0, r1
 802bba2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802bba4:	fb02 1104 	mla	r1, r2, r4, r1
 802bba8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bbaa:	fb05 1104 	mla	r1, r5, r4, r1
 802bbae:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802bbb2:	2900      	cmp	r1, #0
 802bbb4:	f000 80ea 	beq.w	802bd8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802bbb8:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802bbbc:	28ff      	cmp	r0, #255	@ 0xff
 802bbbe:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802bbc2:	940f      	str	r4, [sp, #60]	@ 0x3c
 802bbc4:	970d      	str	r7, [sp, #52]	@ 0x34
 802bbc6:	d01c      	beq.n	802bc02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802bbc8:	fb04 f400 	mul.w	r4, r4, r0
 802bbcc:	4627      	mov	r7, r4
 802bbce:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bbd0:	fb04 fe00 	mul.w	lr, r4, r0
 802bbd4:	0a3c      	lsrs	r4, r7, #8
 802bbd6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bbda:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bbde:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bbe2:	4427      	add	r7, r4
 802bbe4:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802bbe8:	0a3f      	lsrs	r7, r7, #8
 802bbea:	0a00      	lsrs	r0, r0, #8
 802bbec:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802bbf0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bbf4:	4307      	orrs	r7, r0
 802bbf6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802bbfa:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bbfc:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 802bc00:	900d      	str	r0, [sp, #52]	@ 0x34
 802bc02:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802bc04:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802bc08:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 802bc0c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802bc0e:	28ff      	cmp	r0, #255	@ 0xff
 802bc10:	d01c      	beq.n	802bc4c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 802bc12:	fb0c fc00 	mul.w	ip, ip, r0
 802bc16:	fb0e fe00 	mul.w	lr, lr, r0
 802bc1a:	ea4f 241c 	mov.w	r4, ip, lsr #8
 802bc1e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc22:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802bc26:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bc2a:	44a4      	add	ip, r4
 802bc2c:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802bc30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bc34:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802bc38:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bc3c:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bc40:	ea4c 0e0e 	orr.w	lr, ip, lr
 802bc44:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802bc48:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bc4c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802bc4e:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802bc52:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802bc56:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802bc58:	28ff      	cmp	r0, #255	@ 0xff
 802bc5a:	d01a      	beq.n	802bc92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802bc5c:	fb07 f700 	mul.w	r7, r7, r0
 802bc60:	fb0a fa00 	mul.w	sl, sl, r0
 802bc64:	0a3c      	lsrs	r4, r7, #8
 802bc66:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc6a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bc6e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802bc72:	4427      	add	r7, r4
 802bc74:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802bc78:	0a3f      	lsrs	r7, r7, #8
 802bc7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bc7e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bc82:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc86:	ea47 0a0a 	orr.w	sl, r7, sl
 802bc8a:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 802bc8e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc92:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802bc94:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802bc98:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bc9c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bc9e:	2cff      	cmp	r4, #255	@ 0xff
 802bca0:	d01d      	beq.n	802bcde <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802bca2:	fb00 f004 	mul.w	r0, r0, r4
 802bca6:	fb0b fb04 	mul.w	fp, fp, r4
 802bcaa:	0a04      	lsrs	r4, r0, #8
 802bcac:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bcb0:	9418      	str	r4, [sp, #96]	@ 0x60
 802bcb2:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802bcb6:	9417      	str	r4, [sp, #92]	@ 0x5c
 802bcb8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802bcba:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bcbe:	4420      	add	r0, r4
 802bcc0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802bcc2:	0a00      	lsrs	r0, r0, #8
 802bcc4:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802bcc8:	0a24      	lsrs	r4, r4, #8
 802bcca:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bcce:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bcd2:	ea40 0b0b 	orr.w	fp, r0, fp
 802bcd6:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802bcda:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802bcde:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802bce0:	fb0c fc06 	mul.w	ip, ip, r6
 802bce4:	fb01 f104 	mul.w	r1, r1, r4
 802bce8:	1c4c      	adds	r4, r1, #1
 802bcea:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bcee:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bcf2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802bcf4:	fb0e f606 	mul.w	r6, lr, r6
 802bcf8:	fb04 cc03 	mla	ip, r4, r3, ip
 802bcfc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bcfe:	fb07 cc02 	mla	ip, r7, r2, ip
 802bd02:	fb04 6603 	mla	r6, r4, r3, r6
 802bd06:	fb0a 6602 	mla	r6, sl, r2, r6
 802bd0a:	fb00 cc05 	mla	ip, r0, r5, ip
 802bd0e:	fb0b 6605 	mla	r6, fp, r5, r6
 802bd12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bd16:	0a36      	lsrs	r6, r6, #8
 802bd18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bd1c:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802bd20:	ea4c 0303 	orr.w	r3, ip, r3
 802bd24:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bd26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bd28:	0c1f      	lsrs	r7, r3, #16
 802bd2a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bd2e:	b2db      	uxtb	r3, r3
 802bd30:	8805      	ldrh	r5, [r0, #0]
 802bd32:	fb13 f302 	smulbb	r3, r3, r2
 802bd36:	fb17 f702 	smulbb	r7, r7, r2
 802bd3a:	fb16 f602 	smulbb	r6, r6, r2
 802bd3e:	1228      	asrs	r0, r5, #8
 802bd40:	10ea      	asrs	r2, r5, #3
 802bd42:	00ed      	lsls	r5, r5, #3
 802bd44:	b2c9      	uxtb	r1, r1
 802bd46:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bd4a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bd4e:	b2ed      	uxtb	r5, r5
 802bd50:	fb00 7001 	mla	r0, r0, r1, r7
 802bd54:	fb02 6201 	mla	r2, r2, r1, r6
 802bd58:	fb05 3101 	mla	r1, r5, r1, r3
 802bd5c:	b280      	uxth	r0, r0
 802bd5e:	b292      	uxth	r2, r2
 802bd60:	b289      	uxth	r1, r1
 802bd62:	1c43      	adds	r3, r0, #1
 802bd64:	1c4c      	adds	r4, r1, #1
 802bd66:	f102 0c01 	add.w	ip, r2, #1
 802bd6a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bd6e:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bd72:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802bd76:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bd7a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bd7e:	0952      	lsrs	r2, r2, #5
 802bd80:	4308      	orrs	r0, r1
 802bd82:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bd86:	4302      	orrs	r2, r0
 802bd88:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bd8a:	8002      	strh	r2, [r0, #0]
 802bd8c:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802bd8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802bd90:	4490      	add	r8, r2
 802bd92:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bd94:	3302      	adds	r3, #2
 802bd96:	4491      	add	r9, r2
 802bd98:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802bd9a:	9309      	str	r3, [sp, #36]	@ 0x24
 802bd9c:	4293      	cmp	r3, r2
 802bd9e:	d021      	beq.n	802bde4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802bda0:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802bda2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bda6:	ea4f 4228 	mov.w	r2, r8, asr #16
 802bdaa:	ea4f 4329 	mov.w	r3, r9, asr #16
 802bdae:	fb01 2303 	mla	r3, r1, r3, r2
 802bdb2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802bdb4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802bdb6:	5cc2      	ldrb	r2, [r0, r3]
 802bdb8:	f3c8 3403 	ubfx	r4, r8, #12, #4
 802bdbc:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802bdc0:	4403      	add	r3, r0
 802bdc2:	f3c9 3203 	ubfx	r2, r9, #12, #4
 802bdc6:	0e38      	lsrs	r0, r7, #24
 802bdc8:	2c00      	cmp	r4, #0
 802bdca:	f47f aec2 	bne.w	802bb52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802bdce:	2a00      	cmp	r2, #0
 802bdd0:	f43f aed4 	beq.w	802bb7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bdd4:	5c5b      	ldrb	r3, [r3, r1]
 802bdd6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802bdd8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802bddc:	9314      	str	r3, [sp, #80]	@ 0x50
 802bdde:	0e1b      	lsrs	r3, r3, #24
 802bde0:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bde2:	e6cb      	b.n	802bb7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bde4:	4693      	mov	fp, r2
 802bde6:	e651      	b.n	802ba8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bde8:	2b00      	cmp	r3, #0
 802bdea:	f77f ae4f 	ble.w	802ba8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bdee:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 802bdf2:	ea4f 422a 	mov.w	r2, sl, asr #16
 802bdf6:	ea4f 4129 	mov.w	r1, r9, asr #16
 802bdfa:	2a00      	cmp	r2, #0
 802bdfc:	465f      	mov	r7, fp
 802bdfe:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802be02:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802be04:	e9dd 5b3d 	ldrd	r5, fp, [sp, #244]	@ 0xf4
 802be08:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802be0c:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802be10:	f2c0 815c 	blt.w	802c0cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be14:	1e73      	subs	r3, r6, #1
 802be16:	429a      	cmp	r2, r3
 802be18:	f280 8158 	bge.w	802c0cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be1c:	2900      	cmp	r1, #0
 802be1e:	f2c0 8155 	blt.w	802c0cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be22:	f10c 33ff 	add.w	r3, ip, #4294967295
 802be26:	4299      	cmp	r1, r3
 802be28:	f280 8150 	bge.w	802c0cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be2c:	b233      	sxth	r3, r6
 802be2e:	fb01 2203 	mla	r2, r1, r3, r2
 802be32:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802be34:	930f      	str	r3, [sp, #60]	@ 0x3c
 802be36:	5c8b      	ldrb	r3, [r1, r2]
 802be38:	440a      	add	r2, r1
 802be3a:	4616      	mov	r6, r2
 802be3c:	9210      	str	r2, [sp, #64]	@ 0x40
 802be3e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802be40:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 802be44:	0e0b      	lsrs	r3, r1, #24
 802be46:	2800      	cmp	r0, #0
 802be48:	f000 816f 	beq.w	802c12a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x762>
 802be4c:	f896 c001 	ldrb.w	ip, [r6, #1]
 802be50:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802be54:	9224      	str	r2, [sp, #144]	@ 0x90
 802be56:	0e12      	lsrs	r2, r2, #24
 802be58:	921a      	str	r2, [sp, #104]	@ 0x68
 802be5a:	f1be 0f00 	cmp.w	lr, #0
 802be5e:	f040 8172 	bne.w	802c146 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802be62:	b280      	uxth	r0, r0
 802be64:	fa1f fc8e 	uxth.w	ip, lr
 802be68:	fb00 f20c 	mul.w	r2, r0, ip
 802be6c:	0106      	lsls	r6, r0, #4
 802be6e:	1ab0      	subs	r0, r6, r2
 802be70:	b280      	uxth	r0, r0
 802be72:	4686      	mov	lr, r0
 802be74:	900f      	str	r0, [sp, #60]	@ 0x3c
 802be76:	981a      	ldr	r0, [sp, #104]	@ 0x68
 802be78:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802be7c:	fb0e f000 	mul.w	r0, lr, r0
 802be80:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802be84:	fa1f fe8c 	uxth.w	lr, ip
 802be88:	eba6 060e 	sub.w	r6, r6, lr
 802be8c:	b2b6      	uxth	r6, r6
 802be8e:	fb06 0003 	mla	r0, r6, r3, r0
 802be92:	9610      	str	r6, [sp, #64]	@ 0x40
 802be94:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 802be96:	fb0e 0006 	mla	r0, lr, r6, r0
 802be9a:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 802be9c:	fb02 0006 	mla	r0, r2, r6, r0
 802bea0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802bea4:	9017      	str	r0, [sp, #92]	@ 0x5c
 802bea6:	2800      	cmp	r0, #0
 802bea8:	f000 80fa 	beq.w	802c0a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802beac:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802beb0:	2bff      	cmp	r3, #255	@ 0xff
 802beb2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802beb6:	9018      	str	r0, [sp, #96]	@ 0x60
 802beb8:	911d      	str	r1, [sp, #116]	@ 0x74
 802beba:	d01b      	beq.n	802bef4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802bebc:	fb01 f103 	mul.w	r1, r1, r3
 802bec0:	fb00 f003 	mul.w	r0, r0, r3
 802bec4:	460b      	mov	r3, r1
 802bec6:	0a01      	lsrs	r1, r0, #8
 802bec8:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 802becc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bed0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802bed4:	4431      	add	r1, r6
 802bed6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802beda:	0a09      	lsrs	r1, r1, #8
 802bedc:	0a1b      	lsrs	r3, r3, #8
 802bede:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bee2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bee6:	430b      	orrs	r3, r1
 802bee8:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802beec:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bef0:	9118      	str	r1, [sp, #96]	@ 0x60
 802bef2:	931d      	str	r3, [sp, #116]	@ 0x74
 802bef4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802bef6:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802bef8:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802befc:	2eff      	cmp	r6, #255	@ 0xff
 802befe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802bf02:	931e      	str	r3, [sp, #120]	@ 0x78
 802bf04:	911f      	str	r1, [sp, #124]	@ 0x7c
 802bf06:	d01b      	beq.n	802bf40 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x578>
 802bf08:	fb01 f106 	mul.w	r1, r1, r6
 802bf0c:	fb03 f306 	mul.w	r3, r3, r6
 802bf10:	460e      	mov	r6, r1
 802bf12:	0a19      	lsrs	r1, r3, #8
 802bf14:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802bf18:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf1c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802bf20:	4401      	add	r1, r0
 802bf22:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802bf26:	0a09      	lsrs	r1, r1, #8
 802bf28:	0a1b      	lsrs	r3, r3, #8
 802bf2a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bf2e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf32:	4319      	orrs	r1, r3
 802bf34:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bf38:	931e      	str	r3, [sp, #120]	@ 0x78
 802bf3a:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 802bf3e:	931f      	str	r3, [sp, #124]	@ 0x7c
 802bf40:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802bf42:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bf46:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802bf4a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802bf4c:	9120      	str	r1, [sp, #128]	@ 0x80
 802bf4e:	2bff      	cmp	r3, #255	@ 0xff
 802bf50:	d01c      	beq.n	802bf8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802bf52:	fb01 f103 	mul.w	r1, r1, r3
 802bf56:	4608      	mov	r0, r1
 802bf58:	fb0c fc03 	mul.w	ip, ip, r3
 802bf5c:	0a09      	lsrs	r1, r1, #8
 802bf5e:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802bf62:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf66:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bf6a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802bf6e:	4408      	add	r0, r1
 802bf70:	0a00      	lsrs	r0, r0, #8
 802bf72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bf76:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bf7a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf7e:	ea40 0c0c 	orr.w	ip, r0, ip
 802bf82:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802bf86:	9320      	str	r3, [sp, #128]	@ 0x80
 802bf88:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf8c:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802bf8e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bf92:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802bf96:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802bf98:	9321      	str	r3, [sp, #132]	@ 0x84
 802bf9a:	29ff      	cmp	r1, #255	@ 0xff
 802bf9c:	d019      	beq.n	802bfd2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802bf9e:	fb03 f301 	mul.w	r3, r3, r1
 802bfa2:	fb06 f601 	mul.w	r6, r6, r1
 802bfa6:	0a19      	lsrs	r1, r3, #8
 802bfa8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bfac:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802bfb0:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802bfb4:	4419      	add	r1, r3
 802bfb6:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802bfba:	0a09      	lsrs	r1, r1, #8
 802bfbc:	0a36      	lsrs	r6, r6, #8
 802bfbe:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bfc2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bfc6:	430e      	orrs	r6, r1
 802bfc8:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802bfcc:	9321      	str	r3, [sp, #132]	@ 0x84
 802bfce:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bfd2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bfd4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802bfd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802bfd8:	fb00 f001 	mul.w	r0, r0, r1
 802bfdc:	4601      	mov	r1, r0
 802bfde:	3001      	adds	r0, #1
 802bfe0:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802bfe4:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 802bfe8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802bfea:	9025      	str	r0, [sp, #148]	@ 0x94
 802bfec:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802bfee:	fb00 f001 	mul.w	r0, r0, r1
 802bff2:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bff4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802bff6:	fb00 f001 	mul.w	r0, r0, r1
 802bffa:	9017      	str	r0, [sp, #92]	@ 0x5c
 802bffc:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802bffe:	4601      	mov	r1, r0
 802c000:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c002:	fb01 0003 	mla	r0, r1, r3, r0
 802c006:	900f      	str	r0, [sp, #60]	@ 0x3c
 802c008:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802c00a:	4601      	mov	r1, r0
 802c00c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802c00e:	fb01 0103 	mla	r1, r1, r3, r0
 802c012:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c014:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c016:	fb0c 110e 	mla	r1, ip, lr, r1
 802c01a:	fb03 000e 	mla	r0, r3, lr, r0
 802c01e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802c020:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 802c024:	fb03 0002 	mla	r0, r3, r2, r0
 802c028:	fb06 1302 	mla	r3, r6, r2, r1
 802c02c:	0a02      	lsrs	r2, r0, #8
 802c02e:	0a1b      	lsrs	r3, r3, #8
 802c030:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c034:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c038:	4313      	orrs	r3, r2
 802c03a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802c03c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802c040:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802c044:	b2db      	uxtb	r3, r3
 802c046:	8838      	ldrh	r0, [r7, #0]
 802c048:	fb16 f602 	smulbb	r6, r6, r2
 802c04c:	fb1c fc02 	smulbb	ip, ip, r2
 802c050:	fb13 f302 	smulbb	r3, r3, r2
 802c054:	1201      	asrs	r1, r0, #8
 802c056:	10c2      	asrs	r2, r0, #3
 802c058:	00c0      	lsls	r0, r0, #3
 802c05a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c05e:	b2c0      	uxtb	r0, r0
 802c060:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c064:	fb01 cc0e 	mla	ip, r1, lr, ip
 802c068:	fb02 620e 	mla	r2, r2, lr, r6
 802c06c:	fb00 330e 	mla	r3, r0, lr, r3
 802c070:	b296      	uxth	r6, r2
 802c072:	b29b      	uxth	r3, r3
 802c074:	fa1f fc8c 	uxth.w	ip, ip
 802c078:	1c58      	adds	r0, r3, #1
 802c07a:	f10c 0201 	add.w	r2, ip, #1
 802c07e:	1c71      	adds	r1, r6, #1
 802c080:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802c084:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c088:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802c08c:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802c090:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c094:	094a      	lsrs	r2, r1, #5
 802c096:	4303      	orrs	r3, r0
 802c098:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c09c:	4313      	orrs	r3, r2
 802c09e:	803b      	strh	r3, [r7, #0]
 802c0a0:	f1b8 0f00 	cmp.w	r8, #0
 802c0a4:	f107 0702 	add.w	r7, r7, #2
 802c0a8:	44aa      	add	sl, r5
 802c0aa:	44d9      	add	r9, fp
 802c0ac:	dd2e      	ble.n	802c10c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802c0ae:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802c0b2:	ea4f 422a 	mov.w	r2, sl, asr #16
 802c0b6:	2a00      	cmp	r2, #0
 802c0b8:	f108 38ff 	add.w	r8, r8, #4294967295
 802c0bc:	ea4f 4129 	mov.w	r1, r9, asr #16
 802c0c0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802c0c4:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802c0c8:	f6bf aea4 	bge.w	802be14 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802c0cc:	1c53      	adds	r3, r2, #1
 802c0ce:	d4e7      	bmi.n	802c0a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0d0:	42b3      	cmp	r3, r6
 802c0d2:	dce5      	bgt.n	802c0a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0d4:	1c4b      	adds	r3, r1, #1
 802c0d6:	d4e3      	bmi.n	802c0a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0d8:	4563      	cmp	r3, ip
 802c0da:	dce1      	bgt.n	802c0a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0dc:	fa0f f38c 	sxth.w	r3, ip
 802c0e0:	b236      	sxth	r6, r6
 802c0e2:	e9cd 6300 	strd	r6, r3, [sp]
 802c0e6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802c0e8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802c0ec:	e9cd e305 	strd	lr, r3, [sp, #20]
 802c0f0:	9202      	str	r2, [sp, #8]
 802c0f2:	4639      	mov	r1, r7
 802c0f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802c0f6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c0f8:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802c0fa:	f7ff fab9 	bl	802b670 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802c0fe:	f1b8 0f00 	cmp.w	r8, #0
 802c102:	f107 0702 	add.w	r7, r7, #2
 802c106:	44aa      	add	sl, r5
 802c108:	44d9      	add	r9, fp
 802c10a:	dcd0      	bgt.n	802c0ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e6>
 802c10c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c10e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802c112:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802c116:	3301      	adds	r3, #1
 802c118:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c11c:	e4b6      	b.n	802ba8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c11e:	3b01      	subs	r3, #1
 802c120:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802c124:	930d      	str	r3, [sp, #52]	@ 0x34
 802c126:	4698      	mov	r8, r3
 802c128:	e667      	b.n	802bdfa <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802c12a:	f1be 0f00 	cmp.w	lr, #0
 802c12e:	f43f ae98 	beq.w	802be62 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c132:	4632      	mov	r2, r6
 802c134:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c136:	5d92      	ldrb	r2, [r2, r6]
 802c138:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c13a:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802c13e:	9226      	str	r2, [sp, #152]	@ 0x98
 802c140:	0e12      	lsrs	r2, r2, #24
 802c142:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c144:	e68d      	b.n	802be62 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c146:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c148:	eb06 0c02 	add.w	ip, r6, r2
 802c14c:	4632      	mov	r2, r6
 802c14e:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c150:	f89c c001 	ldrb.w	ip, [ip, #1]
 802c154:	5d92      	ldrb	r2, [r2, r6]
 802c156:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c158:	9210      	str	r2, [sp, #64]	@ 0x40
 802c15a:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802c15e:	920f      	str	r2, [sp, #60]	@ 0x3c
 802c160:	9227      	str	r2, [sp, #156]	@ 0x9c
 802c162:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c164:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 802c168:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c16a:	9626      	str	r6, [sp, #152]	@ 0x98
 802c16c:	0e12      	lsrs	r2, r2, #24
 802c16e:	921c      	str	r2, [sp, #112]	@ 0x70
 802c170:	0e32      	lsrs	r2, r6, #24
 802c172:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c174:	e675      	b.n	802be62 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c176:	f43f ac89 	beq.w	802ba8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c17a:	1e65      	subs	r5, r4, #1
 802c17c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802c180:	e4c9      	b.n	802bb16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802c182:	bf00      	nop

0802c184 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802c184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c188:	b089      	sub	sp, #36	@ 0x24
 802c18a:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	@ 0x48
 802c18e:	880f      	ldrh	r7, [r1, #0]
 802c190:	e9dd 5014 	ldrd	r5, r0, [sp, #80]	@ 0x50
 802c194:	fb00 5408 	mla	r4, r0, r8, r5
 802c198:	9106      	str	r1, [sp, #24]
 802c19a:	10f9      	asrs	r1, r7, #3
 802c19c:	123e      	asrs	r6, r7, #8
 802c19e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802c1a2:	00ff      	lsls	r7, r7, #3
 802c1a4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802c1a8:	9104      	str	r1, [sp, #16]
 802c1aa:	2800      	cmp	r0, #0
 802c1ac:	b2f9      	uxtb	r1, r7
 802c1ae:	9105      	str	r1, [sp, #20]
 802c1b0:	9603      	str	r6, [sp, #12]
 802c1b2:	eb02 0704 	add.w	r7, r2, r4
 802c1b6:	f100 0c01 	add.w	ip, r0, #1
 802c1ba:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802c1be:	f89d e058 	ldrb.w	lr, [sp, #88]	@ 0x58
 802c1c2:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802c1c6:	db02      	blt.n	802c1ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x4a>
 802c1c8:	4582      	cmp	sl, r0
 802c1ca:	f300 8113 	bgt.w	802c3f4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802c1ce:	2600      	movs	r6, #0
 802c1d0:	46b1      	mov	r9, r6
 802c1d2:	4630      	mov	r0, r6
 802c1d4:	4634      	mov	r4, r6
 802c1d6:	f1bc 0f00 	cmp.w	ip, #0
 802c1da:	db02      	blt.n	802c1e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5e>
 802c1dc:	45e2      	cmp	sl, ip
 802c1de:	f300 8123 	bgt.w	802c428 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>
 802c1e2:	2700      	movs	r7, #0
 802c1e4:	46bc      	mov	ip, r7
 802c1e6:	463d      	mov	r5, r7
 802c1e8:	9702      	str	r7, [sp, #8]
 802c1ea:	f1be 0f0f 	cmp.w	lr, #15
 802c1ee:	f200 8160 	bhi.w	802c4b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c1f2:	290f      	cmp	r1, #15
 802c1f4:	f200 815d 	bhi.w	802c4b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c1f8:	b289      	uxth	r1, r1
 802c1fa:	fa1f f38e 	uxth.w	r3, lr
 802c1fe:	fb01 f803 	mul.w	r8, r1, r3
 802c202:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 802c206:	9200      	str	r2, [sp, #0]
 802c208:	9a02      	ldr	r2, [sp, #8]
 802c20a:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802c20e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c212:	b289      	uxth	r1, r1
 802c214:	9201      	str	r2, [sp, #4]
 802c216:	fb01 fa0c 	mul.w	sl, r1, ip
 802c21a:	9a02      	ldr	r2, [sp, #8]
 802c21c:	fb08 fb07 	mul.w	fp, r8, r7
 802c220:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c224:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c228:	9202      	str	r2, [sp, #8]
 802c22a:	011b      	lsls	r3, r3, #4
 802c22c:	eba3 0e08 	sub.w	lr, r3, r8
 802c230:	fa1f fe8e 	uxth.w	lr, lr
 802c234:	fb0e f206 	mul.w	r2, lr, r6
 802c238:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802c23c:	1a5b      	subs	r3, r3, r1
 802c23e:	b29b      	uxth	r3, r3
 802c240:	fb03 2209 	mla	r2, r3, r9, r2
 802c244:	4452      	add	r2, sl
 802c246:	445a      	add	r2, fp
 802c248:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802c24c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802c250:	9207      	str	r2, [sp, #28]
 802c252:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c256:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c25a:	d019      	beq.n	802c290 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x10c>
 802c25c:	fb02 f209 	mul.w	r2, r2, r9
 802c260:	fb04 f409 	mul.w	r4, r4, r9
 802c264:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 802c268:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c26c:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802c270:	f504 7a80 	add.w	sl, r4, #256	@ 0x100
 802c274:	445a      	add	r2, fp
 802c276:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802c27a:	0a12      	lsrs	r2, r2, #8
 802c27c:	0a24      	lsrs	r4, r4, #8
 802c27e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c282:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c286:	4314      	orrs	r4, r2
 802c288:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c28c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c290:	2eff      	cmp	r6, #255	@ 0xff
 802c292:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c296:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c29a:	d01b      	beq.n	802c2d4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 802c29c:	fb0a fa06 	mul.w	sl, sl, r6
 802c2a0:	fb00 f006 	mul.w	r0, r0, r6
 802c2a4:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802c2a8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c2ac:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802c2b0:	f500 7980 	add.w	r9, r0, #256	@ 0x100
 802c2b4:	44da      	add	sl, fp
 802c2b6:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 802c2ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c2be:	0a00      	lsrs	r0, r0, #8
 802c2c0:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802c2c4:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c2c8:	ea4a 0000 	orr.w	r0, sl, r0
 802c2cc:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c2d0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c2d4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802c2d8:	d020      	beq.n	802c31c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x198>
 802c2da:	9e01      	ldr	r6, [sp, #4]
 802c2dc:	fb06 fb0c 	mul.w	fp, r6, ip
 802c2e0:	9e02      	ldr	r6, [sp, #8]
 802c2e2:	ea4f 291b 	mov.w	r9, fp, lsr #8
 802c2e6:	fb06 fc0c 	mul.w	ip, r6, ip
 802c2ea:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802c2ee:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
 802c2f2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c2f6:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802c2fa:	44cb      	add	fp, r9
 802c2fc:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c304:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c308:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c30c:	ea4b 0c0c 	orr.w	ip, fp, ip
 802c310:	f00c 16ff 	and.w	r6, ip, #16711935	@ 0xff00ff
 802c314:	9601      	str	r6, [sp, #4]
 802c316:	f40c 467f 	and.w	r6, ip, #65280	@ 0xff00
 802c31a:	9602      	str	r6, [sp, #8]
 802c31c:	2fff      	cmp	r7, #255	@ 0xff
 802c31e:	d01d      	beq.n	802c35c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1d8>
 802c320:	9e00      	ldr	r6, [sp, #0]
 802c322:	fb05 f507 	mul.w	r5, r5, r7
 802c326:	fb06 fb07 	mul.w	fp, r6, r7
 802c32a:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802c32e:	f505 7680 	add.w	r6, r5, #256	@ 0x100
 802c332:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802c336:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c33a:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 802c33e:	44e3      	add	fp, ip
 802c340:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c344:	0a2d      	lsrs	r5, r5, #8
 802c346:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c34a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c34e:	ea4b 0505 	orr.w	r5, fp, r5
 802c352:	f005 16ff 	and.w	r6, r5, #16711935	@ 0xff00ff
 802c356:	9600      	str	r6, [sp, #0]
 802c358:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c35c:	9e07      	ldr	r6, [sp, #28]
 802c35e:	fb0a fa0e 	mul.w	sl, sl, lr
 802c362:	43f7      	mvns	r7, r6
 802c364:	fb00 f00e 	mul.w	r0, r0, lr
 802c368:	fb02 aa03 	mla	sl, r2, r3, sl
 802c36c:	fb04 0003 	mla	r0, r4, r3, r0
 802c370:	9b01      	ldr	r3, [sp, #4]
 802c372:	b2ff      	uxtb	r7, r7
 802c374:	fb03 aa01 	mla	sl, r3, r1, sl
 802c378:	9b02      	ldr	r3, [sp, #8]
 802c37a:	fb03 0c01 	mla	ip, r3, r1, r0
 802c37e:	9b00      	ldr	r3, [sp, #0]
 802c380:	9803      	ldr	r0, [sp, #12]
 802c382:	fb03 aa08 	mla	sl, r3, r8, sl
 802c386:	9b05      	ldr	r3, [sp, #20]
 802c388:	9904      	ldr	r1, [sp, #16]
 802c38a:	fb03 f307 	mul.w	r3, r3, r7
 802c38e:	fb00 f007 	mul.w	r0, r0, r7
 802c392:	fb01 f107 	mul.w	r1, r1, r7
 802c396:	461f      	mov	r7, r3
 802c398:	fb05 c808 	mla	r8, r5, r8, ip
 802c39c:	ea4f 251a 	mov.w	r5, sl, lsr #8
 802c3a0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802c3a4:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802c3a8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802c3ac:	ea45 0508 	orr.w	r5, r5, r8
 802c3b0:	f100 0c01 	add.w	ip, r0, #1
 802c3b4:	1c4e      	adds	r6, r1, #1
 802c3b6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802c3ba:	0c2c      	lsrs	r4, r5, #16
 802c3bc:	f3c5 2207 	ubfx	r2, r5, #8, #8
 802c3c0:	1c78      	adds	r0, r7, #1
 802c3c2:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802c3c6:	4b3e      	ldr	r3, [pc, #248]	@ (802c4c0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x33c>)
 802c3c8:	eb04 241c 	add.w	r4, r4, ip, lsr #8
 802c3cc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 802c3d0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802c3d4:	b2ed      	uxtb	r5, r5
 802c3d6:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802c3da:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 802c3de:	00d2      	lsls	r2, r2, #3
 802c3e0:	ea43 05d5 	orr.w	r5, r3, r5, lsr #3
 802c3e4:	f402 63fc 	and.w	r3, r2, #2016	@ 0x7e0
 802c3e8:	431d      	orrs	r5, r3
 802c3ea:	9b06      	ldr	r3, [sp, #24]
 802c3ec:	801d      	strh	r5, [r3, #0]
 802c3ee:	b009      	add	sp, #36	@ 0x24
 802c3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c3f4:	2d00      	cmp	r5, #0
 802c3f6:	db01      	blt.n	802c3fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x278>
 802c3f8:	45a8      	cmp	r8, r5
 802c3fa:	dc41      	bgt.n	802c480 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2fc>
 802c3fc:	f04f 0900 	mov.w	r9, #0
 802c400:	464c      	mov	r4, r9
 802c402:	1c6a      	adds	r2, r5, #1
 802c404:	d42a      	bmi.n	802c45c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c406:	4590      	cmp	r8, r2
 802c408:	dd28      	ble.n	802c45c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c40a:	f1be 0f00 	cmp.w	lr, #0
 802c40e:	d004      	beq.n	802c41a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x296>
 802c410:	787a      	ldrb	r2, [r7, #1]
 802c412:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802c416:	0e06      	lsrs	r6, r0, #24
 802c418:	e6dd      	b.n	802c1d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c41a:	f1bc 0f00 	cmp.w	ip, #0
 802c41e:	db40      	blt.n	802c4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c420:	45e2      	cmp	sl, ip
 802c422:	dd3e      	ble.n	802c4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c424:	4676      	mov	r6, lr
 802c426:	4670      	mov	r0, lr
 802c428:	b1d9      	cbz	r1, 802c462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 802c42a:	2d00      	cmp	r5, #0
 802c42c:	db31      	blt.n	802c492 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c42e:	45a8      	cmp	r8, r5
 802c430:	dd2f      	ble.n	802c492 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c432:	f817 2008 	ldrb.w	r2, [r7, r8]
 802c436:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802c43a:	9202      	str	r2, [sp, #8]
 802c43c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802c440:	3501      	adds	r5, #1
 802c442:	d423      	bmi.n	802c48c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c444:	45a8      	cmp	r8, r5
 802c446:	dd21      	ble.n	802c48c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c448:	f1be 0f00 	cmp.w	lr, #0
 802c44c:	d026      	beq.n	802c49c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>
 802c44e:	44b8      	add	r8, r7
 802c450:	f898 5001 	ldrb.w	r5, [r8, #1]
 802c454:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 802c458:	0e2f      	lsrs	r7, r5, #24
 802c45a:	e6c6      	b.n	802c1ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c45c:	2600      	movs	r6, #0
 802c45e:	4630      	mov	r0, r6
 802c460:	e6b9      	b.n	802c1d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c462:	f1be 0f0f 	cmp.w	lr, #15
 802c466:	d824      	bhi.n	802c4b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c468:	fa1f f38e 	uxth.w	r3, lr
 802c46c:	4688      	mov	r8, r1
 802c46e:	468b      	mov	fp, r1
 802c470:	468a      	mov	sl, r1
 802c472:	e9cd 1101 	strd	r1, r1, [sp, #4]
 802c476:	460d      	mov	r5, r1
 802c478:	9100      	str	r1, [sp, #0]
 802c47a:	460f      	mov	r7, r1
 802c47c:	468c      	mov	ip, r1
 802c47e:	e6d4      	b.n	802c22a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802c480:	5d12      	ldrb	r2, [r2, r4]
 802c482:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802c486:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802c48a:	e7ba      	b.n	802c402 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27e>
 802c48c:	2700      	movs	r7, #0
 802c48e:	463d      	mov	r5, r7
 802c490:	e6ab      	b.n	802c1ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c492:	f04f 0c00 	mov.w	ip, #0
 802c496:	f8cd c008 	str.w	ip, [sp, #8]
 802c49a:	e7d1      	b.n	802c440 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2bc>
 802c49c:	4675      	mov	r5, lr
 802c49e:	4677      	mov	r7, lr
 802c4a0:	e6a7      	b.n	802c1f2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c4a2:	4670      	mov	r0, lr
 802c4a4:	4675      	mov	r5, lr
 802c4a6:	f8cd e008 	str.w	lr, [sp, #8]
 802c4aa:	4677      	mov	r7, lr
 802c4ac:	46f4      	mov	ip, lr
 802c4ae:	4676      	mov	r6, lr
 802c4b0:	e69f      	b.n	802c1f2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c4b2:	4b04      	ldr	r3, [pc, #16]	@ (802c4c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x340>)
 802c4b4:	4a04      	ldr	r2, [pc, #16]	@ (802c4c8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x344>)
 802c4b6:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802c4ba:	4804      	ldr	r0, [pc, #16]	@ (802c4cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x348>)
 802c4bc:	f006 f824 	bl	8032508 <__assert_func>
 802c4c0:	fffff800 	.word	0xfffff800
 802c4c4:	080366e4 	.word	0x080366e4
 802c4c8:	08036d60 	.word	0x08036d60
 802c4cc:	0803686c 	.word	0x0803686c

0802c4d0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802c4d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c4d4:	ed2d 8b08 	vpush	{d8-d11}
 802c4d8:	b0a3      	sub	sp, #140	@ 0x8c
 802c4da:	901e      	str	r0, [sp, #120]	@ 0x78
 802c4dc:	9111      	str	r1, [sp, #68]	@ 0x44
 802c4de:	9215      	str	r2, [sp, #84]	@ 0x54
 802c4e0:	e9dd 4139 	ldrd	r4, r1, [sp, #228]	@ 0xe4
 802c4e4:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 802c4e6:	6860      	ldr	r0, [r4, #4]
 802c4e8:	e9dd 8b35 	ldrd	r8, fp, [sp, #212]	@ 0xd4
 802c4ec:	fb00 1202 	mla	r2, r0, r2, r1
 802c4f0:	6820      	ldr	r0, [r4, #0]
 802c4f2:	46c1      	mov	r9, r8
 802c4f4:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 802c4f8:	46d8      	mov	r8, fp
 802c4fa:	eeb0 aa40 	vmov.f32	s20, s0
 802c4fe:	eef0 9a60 	vmov.f32	s19, s1
 802c502:	eeb0 9a41 	vmov.f32	s18, s2
 802c506:	eef0 8a62 	vmov.f32	s17, s5
 802c50a:	eeb0 8a43 	vmov.f32	s16, s6
 802c50e:	eef0 ba44 	vmov.f32	s23, s8
 802c512:	eeb0 ba64 	vmov.f32	s22, s9
 802c516:	eef0 aa45 	vmov.f32	s21, s10
 802c51a:	46d3      	mov	fp, sl
 802c51c:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 802c51e:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c520:	6849      	ldr	r1, [r1, #4]
 802c522:	6824      	ldr	r4, [r4, #0]
 802c524:	1d0a      	adds	r2, r1, #4
 802c526:	940e      	str	r4, [sp, #56]	@ 0x38
 802c528:	920b      	str	r2, [sp, #44]	@ 0x2c
 802c52a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c52c:	2a00      	cmp	r2, #0
 802c52e:	dc02      	bgt.n	802c536 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802c530:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c532:	2a00      	cmp	r2, #0
 802c534:	dd65      	ble.n	802c602 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c536:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802c538:	2b00      	cmp	r3, #0
 802c53a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802c53e:	b234      	sxth	r4, r6
 802c540:	fa0f f78c 	sxth.w	r7, ip
 802c544:	f340 836d 	ble.w	802cc22 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802c548:	1e65      	subs	r5, r4, #1
 802c54a:	f107 3eff 	add.w	lr, r7, #4294967295
 802c54e:	f8cd c01c 	str.w	ip, [sp, #28]
 802c552:	e9dd ca37 	ldrd	ip, sl, [sp, #220]	@ 0xdc
 802c556:	ea5f 4229 	movs.w	r2, r9, asr #16
 802c55a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c55e:	d405      	bmi.n	802c56c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c560:	42aa      	cmp	r2, r5
 802c562:	da03      	bge.n	802c56c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c564:	2900      	cmp	r1, #0
 802c566:	db01      	blt.n	802c56c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c568:	4571      	cmp	r1, lr
 802c56a:	db4f      	blt.n	802c60c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802c56c:	1c50      	adds	r0, r2, #1
 802c56e:	d406      	bmi.n	802c57e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c570:	42a0      	cmp	r0, r4
 802c572:	dc04      	bgt.n	802c57e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c574:	1c48      	adds	r0, r1, #1
 802c576:	d402      	bmi.n	802c57e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c578:	42b8      	cmp	r0, r7
 802c57a:	f340 832f 	ble.w	802cbdc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802c57e:	3b01      	subs	r3, #1
 802c580:	44e1      	add	r9, ip
 802c582:	44d0      	add	r8, sl
 802c584:	f10b 0b02 	add.w	fp, fp, #2
 802c588:	d1e5      	bne.n	802c556 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802c58a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802c58c:	2b00      	cmp	r3, #0
 802c58e:	dd38      	ble.n	802c602 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c590:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c594:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802c598:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802c59c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802c5a0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802c5a4:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802c5a8:	ee69 7a27 	vmul.f32	s15, s18, s15
 802c5ac:	ee76 6a68 	vsub.f32	s13, s12, s17
 802c5b0:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802c5b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c5b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c5bc:	ee16 2a90 	vmov	r2, s13
 802c5c0:	3b01      	subs	r3, #1
 802c5c2:	9311      	str	r3, [sp, #68]	@ 0x44
 802c5c4:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5c6:	fb92 f3f3 	sdiv	r3, r2, r3
 802c5ca:	ee17 2a10 	vmov	r2, s14
 802c5ce:	eeb0 7a48 	vmov.f32	s14, s16
 802c5d2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c5d6:	ee17 8a10 	vmov	r8, s14
 802c5da:	eeb0 7a68 	vmov.f32	s14, s17
 802c5de:	9337      	str	r3, [sp, #220]	@ 0xdc
 802c5e0:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5e2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c5e6:	fb92 f3f3 	sdiv	r3, r2, r3
 802c5ea:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c5ec:	9338      	str	r3, [sp, #224]	@ 0xe0
 802c5ee:	ee17 9a10 	vmov	r9, s14
 802c5f2:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5f4:	eeb0 8a67 	vmov.f32	s16, s15
 802c5f8:	eef0 8a46 	vmov.f32	s17, s12
 802c5fc:	bf08      	it	eq
 802c5fe:	4613      	moveq	r3, r2
 802c600:	e793      	b.n	802c52a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802c602:	b023      	add	sp, #140	@ 0x8c
 802c604:	ecbd 8b08 	vpop	{d8-d11}
 802c608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c60c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802c610:	f8cd b01c 	str.w	fp, [sp, #28]
 802c614:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 802c616:	1e59      	subs	r1, r3, #1
 802c618:	fb00 9201 	mla	r2, r0, r1, r9
 802c61c:	1412      	asrs	r2, r2, #16
 802c61e:	910c      	str	r1, [sp, #48]	@ 0x30
 802c620:	f100 815e 	bmi.w	802c8e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c624:	42aa      	cmp	r2, r5
 802c626:	f280 815b 	bge.w	802c8e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c62a:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c62c:	fb02 8201 	mla	r2, r2, r1, r8
 802c630:	1412      	asrs	r2, r2, #16
 802c632:	f100 8155 	bmi.w	802c8e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c636:	3f01      	subs	r7, #1
 802c638:	42ba      	cmp	r2, r7
 802c63a:	f280 8151 	bge.w	802c8e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c63e:	2b00      	cmp	r3, #0
 802c640:	dda3      	ble.n	802c58a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c642:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c646:	4621      	mov	r1, r4
 802c648:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 802c64c:	f8cd 90d4 	str.w	r9, [sp, #212]	@ 0xd4
 802c650:	464a      	mov	r2, r9
 802c652:	464c      	mov	r4, r9
 802c654:	e122      	b.n	802c89c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802c656:	f893 c001 	ldrb.w	ip, [r3, #1]
 802c65a:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802c65e:	950f      	str	r5, [sp, #60]	@ 0x3c
 802c660:	0e2d      	lsrs	r5, r5, #24
 802c662:	9508      	str	r5, [sp, #32]
 802c664:	b162      	cbz	r2, 802c680 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c666:	185d      	adds	r5, r3, r1
 802c668:	786d      	ldrb	r5, [r5, #1]
 802c66a:	5c5b      	ldrb	r3, [r3, r1]
 802c66c:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802c670:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802c674:	9112      	str	r1, [sp, #72]	@ 0x48
 802c676:	9310      	str	r3, [sp, #64]	@ 0x40
 802c678:	0e09      	lsrs	r1, r1, #24
 802c67a:	0e1b      	lsrs	r3, r3, #24
 802c67c:	910a      	str	r1, [sp, #40]	@ 0x28
 802c67e:	9309      	str	r3, [sp, #36]	@ 0x24
 802c680:	b2a4      	uxth	r4, r4
 802c682:	b292      	uxth	r2, r2
 802c684:	fb04 f502 	mul.w	r5, r4, r2
 802c688:	0124      	lsls	r4, r4, #4
 802c68a:	1b66      	subs	r6, r4, r5
 802c68c:	9b08      	ldr	r3, [sp, #32]
 802c68e:	b2b6      	uxth	r6, r6
 802c690:	fb06 f103 	mul.w	r1, r6, r3
 802c694:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802c698:	b292      	uxth	r2, r2
 802c69a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802c69e:	1a9b      	subs	r3, r3, r2
 802c6a0:	b29b      	uxth	r3, r3
 802c6a2:	fb03 1100 	mla	r1, r3, r0, r1
 802c6a6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802c6a8:	fb02 1104 	mla	r1, r2, r4, r1
 802c6ac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c6ae:	fb05 1104 	mla	r1, r5, r4, r1
 802c6b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802c6b6:	2900      	cmp	r1, #0
 802c6b8:	f000 80df 	beq.w	802c87a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802c6bc:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802c6c0:	28ff      	cmp	r0, #255	@ 0xff
 802c6c2:	940c      	str	r4, [sp, #48]	@ 0x30
 802c6c4:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c6c8:	d01a      	beq.n	802c700 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 802c6ca:	fb04 f400 	mul.w	r4, r4, r0
 802c6ce:	4627      	mov	r7, r4
 802c6d0:	fb09 fc00 	mul.w	ip, r9, r0
 802c6d4:	0a24      	lsrs	r4, r4, #8
 802c6d6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c6da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c6de:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c6e2:	4427      	add	r7, r4
 802c6e4:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802c6e8:	0a3f      	lsrs	r7, r7, #8
 802c6ea:	0a00      	lsrs	r0, r0, #8
 802c6ec:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c6f0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c6f4:	4307      	orrs	r7, r0
 802c6f6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802c6fa:	900c      	str	r0, [sp, #48]	@ 0x30
 802c6fc:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c700:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c702:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802c706:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 802c70a:	9808      	ldr	r0, [sp, #32]
 802c70c:	28ff      	cmp	r0, #255	@ 0xff
 802c70e:	d01a      	beq.n	802c746 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802c710:	fb07 f700 	mul.w	r7, r7, r0
 802c714:	fb0c fc00 	mul.w	ip, ip, r0
 802c718:	0a3c      	lsrs	r4, r7, #8
 802c71a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c71e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c722:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c726:	4427      	add	r7, r4
 802c728:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 802c72c:	0a3f      	lsrs	r7, r7, #8
 802c72e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c732:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c736:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c73a:	ea47 0c0c 	orr.w	ip, r7, ip
 802c73e:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802c742:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c746:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802c748:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802c74c:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802c750:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802c752:	28ff      	cmp	r0, #255	@ 0xff
 802c754:	d01c      	beq.n	802c790 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 802c756:	fb0e fe00 	mul.w	lr, lr, r0
 802c75a:	fb0a fa00 	mul.w	sl, sl, r0
 802c75e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 802c762:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c766:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802c76a:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802c76e:	44a6      	add	lr, r4
 802c770:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802c774:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c77c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802c780:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c784:	ea4e 0a0a 	orr.w	sl, lr, sl
 802c788:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 802c78c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c790:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802c792:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802c796:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c79a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c79c:	2cff      	cmp	r4, #255	@ 0xff
 802c79e:	d01d      	beq.n	802c7dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802c7a0:	fb00 f004 	mul.w	r0, r0, r4
 802c7a4:	fb0b fb04 	mul.w	fp, fp, r4
 802c7a8:	0a04      	lsrs	r4, r0, #8
 802c7aa:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c7ae:	9414      	str	r4, [sp, #80]	@ 0x50
 802c7b0:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802c7b4:	9413      	str	r4, [sp, #76]	@ 0x4c
 802c7b6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802c7b8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802c7bc:	4420      	add	r0, r4
 802c7be:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802c7c0:	0a00      	lsrs	r0, r0, #8
 802c7c2:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802c7c6:	0a24      	lsrs	r4, r4, #8
 802c7c8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c7cc:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c7d0:	ea40 0b0b 	orr.w	fp, r0, fp
 802c7d4:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802c7d8:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802c7dc:	43c9      	mvns	r1, r1
 802c7de:	fb07 f706 	mul.w	r7, r7, r6
 802c7e2:	fb0c f606 	mul.w	r6, ip, r6
 802c7e6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802c7e8:	fb09 6603 	mla	r6, r9, r3, r6
 802c7ec:	fb04 7703 	mla	r7, r4, r3, r7
 802c7f0:	9b07      	ldr	r3, [sp, #28]
 802c7f2:	fb0e 7702 	mla	r7, lr, r2, r7
 802c7f6:	fb0a 6602 	mla	r6, sl, r2, r6
 802c7fa:	f8b3 e000 	ldrh.w	lr, [r3]
 802c7fe:	b2c9      	uxtb	r1, r1
 802c800:	ea4f 242e 	mov.w	r4, lr, asr #8
 802c804:	fb00 7005 	mla	r0, r0, r5, r7
 802c808:	fb0b 6605 	mla	r6, fp, r5, r6
 802c80c:	ea4f 09ee 	mov.w	r9, lr, asr #3
 802c810:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c814:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802c818:	fb04 f401 	mul.w	r4, r4, r1
 802c81c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802c820:	fa5f fe8e 	uxtb.w	lr, lr
 802c824:	fb09 f901 	mul.w	r9, r9, r1
 802c828:	fb0e f101 	mul.w	r1, lr, r1
 802c82c:	0a00      	lsrs	r0, r0, #8
 802c82e:	0a36      	lsrs	r6, r6, #8
 802c830:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c834:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802c838:	1c62      	adds	r2, r4, #1
 802c83a:	ea40 0306 	orr.w	r3, r0, r6
 802c83e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c842:	f109 0001 	add.w	r0, r9, #1
 802c846:	1c4a      	adds	r2, r1, #1
 802c848:	0c1e      	lsrs	r6, r3, #16
 802c84a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802c84e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802c852:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 802c856:	4a21      	ldr	r2, [pc, #132]	@ (802c8dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>)
 802c858:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802c85c:	b2db      	uxtb	r3, r3
 802c85e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802c862:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802c866:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 802c86a:	00c0      	lsls	r0, r0, #3
 802c86c:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 802c870:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802c874:	9b07      	ldr	r3, [sp, #28]
 802c876:	4320      	orrs	r0, r4
 802c878:	8018      	strh	r0, [r3, #0]
 802c87a:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c87c:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 802c87e:	9b07      	ldr	r3, [sp, #28]
 802c880:	440a      	add	r2, r1
 802c882:	9235      	str	r2, [sp, #212]	@ 0xd4
 802c884:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c886:	3302      	adds	r3, #2
 802c888:	4490      	add	r8, r2
 802c88a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802c88c:	9307      	str	r3, [sp, #28]
 802c88e:	4293      	cmp	r3, r2
 802c890:	d022      	beq.n	802c8d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 802c892:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802c894:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c896:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802c89a:	9c35      	ldr	r4, [sp, #212]	@ 0xd4
 802c89c:	1412      	asrs	r2, r2, #16
 802c89e:	ea4f 4328 	mov.w	r3, r8, asr #16
 802c8a2:	fb01 2303 	mla	r3, r1, r3, r2
 802c8a6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802c8a8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802c8aa:	5cc2      	ldrb	r2, [r0, r3]
 802c8ac:	f3c4 3403 	ubfx	r4, r4, #12, #4
 802c8b0:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802c8b4:	4403      	add	r3, r0
 802c8b6:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802c8ba:	0e38      	lsrs	r0, r7, #24
 802c8bc:	2c00      	cmp	r4, #0
 802c8be:	f47f aeca 	bne.w	802c656 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802c8c2:	2a00      	cmp	r2, #0
 802c8c4:	f43f aedc 	beq.w	802c680 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c8c8:	5c5b      	ldrb	r3, [r3, r1]
 802c8ca:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c8cc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802c8d0:	9310      	str	r3, [sp, #64]	@ 0x40
 802c8d2:	0e1b      	lsrs	r3, r3, #24
 802c8d4:	9309      	str	r3, [sp, #36]	@ 0x24
 802c8d6:	e6d3      	b.n	802c680 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c8d8:	4693      	mov	fp, r2
 802c8da:	e656      	b.n	802c58a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c8dc:	fffff800 	.word	0xfffff800
 802c8e0:	2b00      	cmp	r3, #0
 802c8e2:	f77f ae52 	ble.w	802c58a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c8e6:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802c8ea:	ea4f 4229 	mov.w	r2, r9, asr #16
 802c8ee:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c8f2:	2a00      	cmp	r2, #0
 802c8f4:	465f      	mov	r7, fp
 802c8f6:	f8cd b01c 	str.w	fp, [sp, #28]
 802c8fa:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c8fc:	e9dd b337 	ldrd	fp, r3, [sp, #220]	@ 0xdc
 802c900:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802c904:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802c908:	f2c0 8147 	blt.w	802cb9a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c90c:	1e73      	subs	r3, r6, #1
 802c90e:	429a      	cmp	r2, r3
 802c910:	f280 8143 	bge.w	802cb9a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c914:	2900      	cmp	r1, #0
 802c916:	f2c0 8140 	blt.w	802cb9a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c91a:	f10c 33ff 	add.w	r3, ip, #4294967295
 802c91e:	4299      	cmp	r1, r3
 802c920:	f280 813b 	bge.w	802cb9a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c924:	b236      	sxth	r6, r6
 802c926:	fb01 2106 	mla	r1, r1, r6, r2
 802c92a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c92c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802c92e:	5c53      	ldrb	r3, [r2, r1]
 802c930:	4411      	add	r1, r2
 802c932:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 802c936:	910d      	str	r1, [sp, #52]	@ 0x34
 802c938:	0e13      	lsrs	r3, r2, #24
 802c93a:	2800      	cmp	r0, #0
 802c93c:	f000 8154 	beq.w	802cbe8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802c940:	f891 c001 	ldrb.w	ip, [r1, #1]
 802c944:	9513      	str	r5, [sp, #76]	@ 0x4c
 802c946:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 802c94a:	911f      	str	r1, [sp, #124]	@ 0x7c
 802c94c:	0e09      	lsrs	r1, r1, #24
 802c94e:	9116      	str	r1, [sp, #88]	@ 0x58
 802c950:	f1be 0f00 	cmp.w	lr, #0
 802c954:	f040 8153 	bne.w	802cbfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 802c958:	b286      	uxth	r6, r0
 802c95a:	fa1f fc8e 	uxth.w	ip, lr
 802c95e:	fb06 f00c 	mul.w	r0, r6, ip
 802c962:	0136      	lsls	r6, r6, #4
 802c964:	1a31      	subs	r1, r6, r0
 802c966:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802c968:	b289      	uxth	r1, r1
 802c96a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802c96e:	9113      	str	r1, [sp, #76]	@ 0x4c
 802c970:	fb01 f105 	mul.w	r1, r1, r5
 802c974:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802c978:	fa1f f58c 	uxth.w	r5, ip
 802c97c:	1b76      	subs	r6, r6, r5
 802c97e:	b2b6      	uxth	r6, r6
 802c980:	fb06 1c03 	mla	ip, r6, r3, r1
 802c984:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802c986:	9514      	str	r5, [sp, #80]	@ 0x50
 802c988:	fb05 cc01 	mla	ip, r5, r1, ip
 802c98c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802c98e:	9619      	str	r6, [sp, #100]	@ 0x64
 802c990:	fb00 cc01 	mla	ip, r0, r1, ip
 802c994:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802c998:	f1bc 0f00 	cmp.w	ip, #0
 802c99c:	f000 80e6 	beq.w	802cb6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802c9a0:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 802c9a4:	2bff      	cmp	r3, #255	@ 0xff
 802c9a6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c9aa:	911a      	str	r1, [sp, #104]	@ 0x68
 802c9ac:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c9ae:	d01b      	beq.n	802c9e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802c9b0:	fb02 f203 	mul.w	r2, r2, r3
 802c9b4:	fb01 f103 	mul.w	r1, r1, r3
 802c9b8:	4613      	mov	r3, r2
 802c9ba:	0a0a      	lsrs	r2, r1, #8
 802c9bc:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 802c9c0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9c4:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 802c9c8:	4432      	add	r2, r6
 802c9ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802c9ce:	0a12      	lsrs	r2, r2, #8
 802c9d0:	0a1b      	lsrs	r3, r3, #8
 802c9d2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9da:	4313      	orrs	r3, r2
 802c9dc:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802c9e0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9e4:	921a      	str	r2, [sp, #104]	@ 0x68
 802c9e6:	931b      	str	r3, [sp, #108]	@ 0x6c
 802c9e8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c9ea:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802c9ec:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802c9f0:	2aff      	cmp	r2, #255	@ 0xff
 802c9f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9f6:	931c      	str	r3, [sp, #112]	@ 0x70
 802c9f8:	d01b      	beq.n	802ca32 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 802c9fa:	fb03 f302 	mul.w	r3, r3, r2
 802c9fe:	461e      	mov	r6, r3
 802ca00:	fb01 f102 	mul.w	r1, r1, r2
 802ca04:	0a0a      	lsrs	r2, r1, #8
 802ca06:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca0a:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 802ca0e:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802ca12:	440a      	add	r2, r1
 802ca14:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ca18:	0a12      	lsrs	r2, r2, #8
 802ca1a:	0a1b      	lsrs	r3, r3, #8
 802ca1c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca20:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca24:	ea42 0603 	orr.w	r6, r2, r3
 802ca28:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802ca2c:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 802ca30:	931c      	str	r3, [sp, #112]	@ 0x70
 802ca32:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802ca34:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802ca36:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802ca3a:	2aff      	cmp	r2, #255	@ 0xff
 802ca3c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca40:	931d      	str	r3, [sp, #116]	@ 0x74
 802ca42:	d01b      	beq.n	802ca7c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 802ca44:	fb03 f302 	mul.w	r3, r3, r2
 802ca48:	fb06 f602 	mul.w	r6, r6, r2
 802ca4c:	461a      	mov	r2, r3
 802ca4e:	0a33      	lsrs	r3, r6, #8
 802ca50:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802ca54:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ca58:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802ca5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802ca60:	4476      	add	r6, lr
 802ca62:	0a36      	lsrs	r6, r6, #8
 802ca64:	0a1b      	lsrs	r3, r3, #8
 802ca66:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802ca6a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca6e:	ea46 0203 	orr.w	r2, r6, r3
 802ca72:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 802ca76:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802ca7a:	931d      	str	r3, [sp, #116]	@ 0x74
 802ca7c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802ca7e:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802ca82:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802ca86:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802ca88:	930d      	str	r3, [sp, #52]	@ 0x34
 802ca8a:	2aff      	cmp	r2, #255	@ 0xff
 802ca8c:	d01b      	beq.n	802cac6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 802ca8e:	fb03 f302 	mul.w	r3, r3, r2
 802ca92:	fb0e fe02 	mul.w	lr, lr, r2
 802ca96:	0a1a      	lsrs	r2, r3, #8
 802ca98:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca9c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802caa0:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 802caa4:	441a      	add	r2, r3
 802caa6:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802caaa:	0a12      	lsrs	r2, r2, #8
 802caac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802cab0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cab4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802cab8:	ea42 0e0e 	orr.w	lr, r2, lr
 802cabc:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802cac0:	930d      	str	r3, [sp, #52]	@ 0x34
 802cac2:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802cac6:	ea6f 0c0c 	mvn.w	ip, ip
 802caca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cacc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802cace:	fb01 f305 	mul.w	r3, r1, r5
 802cad2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802cad4:	fa5f fc8c 	uxtb.w	ip, ip
 802cad8:	fb01 f105 	mul.w	r1, r1, r5
 802cadc:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802cade:	fb02 3305 	mla	r3, r2, r5, r3
 802cae2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802cae4:	fb02 1105 	mla	r1, r2, r5, r1
 802cae8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802caea:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802caec:	fb06 3605 	mla	r6, r6, r5, r3
 802caf0:	fb02 1205 	mla	r2, r2, r5, r1
 802caf4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802caf6:	8839      	ldrh	r1, [r7, #0]
 802caf8:	fb03 6300 	mla	r3, r3, r0, r6
 802cafc:	fb0e 2e00 	mla	lr, lr, r0, r2
 802cb00:	10c8      	asrs	r0, r1, #3
 802cb02:	120a      	asrs	r2, r1, #8
 802cb04:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 802cb08:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802cb0c:	00c9      	lsls	r1, r1, #3
 802cb0e:	fb02 f20c 	mul.w	r2, r2, ip
 802cb12:	fb06 f60c 	mul.w	r6, r6, ip
 802cb16:	b2c9      	uxtb	r1, r1
 802cb18:	fb01 f00c 	mul.w	r0, r1, ip
 802cb1c:	0a1b      	lsrs	r3, r3, #8
 802cb1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802cb22:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802cb26:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802cb2a:	430b      	orrs	r3, r1
 802cb2c:	f106 0e01 	add.w	lr, r6, #1
 802cb30:	1c51      	adds	r1, r2, #1
 802cb32:	0c1d      	lsrs	r5, r3, #16
 802cb34:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802cb38:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802cb3c:	f3c3 2107 	ubfx	r1, r3, #8, #8
 802cb40:	fa5f fe83 	uxtb.w	lr, r3
 802cb44:	f100 0c01 	add.w	ip, r0, #1
 802cb48:	4b39      	ldr	r3, [pc, #228]	@ (802cc30 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>)
 802cb4a:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802cb4e:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802cb52:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802cb56:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802cb5a:	00c9      	lsls	r1, r1, #3
 802cb5c:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 802cb60:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 802cb64:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802cb68:	4313      	orrs	r3, r2
 802cb6a:	803b      	strh	r3, [r7, #0]
 802cb6c:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802cb6e:	f1ba 0f00 	cmp.w	sl, #0
 802cb72:	f107 0702 	add.w	r7, r7, #2
 802cb76:	44d9      	add	r9, fp
 802cb78:	4498      	add	r8, r3
 802cb7a:	dd26      	ble.n	802cbca <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802cb7c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802cb80:	ea4f 4229 	mov.w	r2, r9, asr #16
 802cb84:	2a00      	cmp	r2, #0
 802cb86:	f10a 3aff 	add.w	sl, sl, #4294967295
 802cb8a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802cb8e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802cb92:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802cb96:	f6bf aeb9 	bge.w	802c90c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802cb9a:	1c53      	adds	r3, r2, #1
 802cb9c:	d4e6      	bmi.n	802cb6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb9e:	42b3      	cmp	r3, r6
 802cba0:	dce4      	bgt.n	802cb6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cba2:	1c4b      	adds	r3, r1, #1
 802cba4:	d4e2      	bmi.n	802cb6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cba6:	4563      	cmp	r3, ip
 802cba8:	dce0      	bgt.n	802cb6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cbaa:	fa0f f38c 	sxth.w	r3, ip
 802cbae:	b236      	sxth	r6, r6
 802cbb0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802cbb4:	e9cd 6300 	strd	r6, r3, [sp]
 802cbb8:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802cbbc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802cbbe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802cbc0:	4639      	mov	r1, r7
 802cbc2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802cbc4:	f7ff fade 	bl	802c184 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802cbc8:	e7d0      	b.n	802cb6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cbca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802cbcc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802cbd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802cbd4:	3301      	adds	r3, #1
 802cbd6:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802cbda:	e4d6      	b.n	802c58a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cbdc:	3b01      	subs	r3, #1
 802cbde:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802cbe2:	930c      	str	r3, [sp, #48]	@ 0x30
 802cbe4:	469a      	mov	sl, r3
 802cbe6:	e684      	b.n	802c8f2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x422>
 802cbe8:	f1be 0f00 	cmp.w	lr, #0
 802cbec:	f43f aeb4 	beq.w	802c958 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cbf0:	5d89      	ldrb	r1, [r1, r6]
 802cbf2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cbf6:	9120      	str	r1, [sp, #128]	@ 0x80
 802cbf8:	0e09      	lsrs	r1, r1, #24
 802cbfa:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cbfc:	e6ac      	b.n	802c958 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cbfe:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802cc00:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cc02:	eb01 0c06 	add.w	ip, r1, r6
 802cc06:	f89c c001 	ldrb.w	ip, [ip, #1]
 802cc0a:	5d89      	ldrb	r1, [r1, r6]
 802cc0c:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 802cc10:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cc14:	0e35      	lsrs	r5, r6, #24
 802cc16:	9120      	str	r1, [sp, #128]	@ 0x80
 802cc18:	0e09      	lsrs	r1, r1, #24
 802cc1a:	9621      	str	r6, [sp, #132]	@ 0x84
 802cc1c:	9518      	str	r5, [sp, #96]	@ 0x60
 802cc1e:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cc20:	e69a      	b.n	802c958 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cc22:	f43f acb2 	beq.w	802c58a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cc26:	1e65      	subs	r5, r4, #1
 802cc28:	f8cd b01c 	str.w	fp, [sp, #28]
 802cc2c:	e4f2      	b.n	802c614 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802cc2e:	bf00      	nop
 802cc30:	fffff800 	.word	0xfffff800

0802cc34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 802cc34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cc38:	b08b      	sub	sp, #44	@ 0x2c
 802cc3a:	f89d 0068 	ldrb.w	r0, [sp, #104]	@ 0x68
 802cc3e:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 802cc42:	ea6f 0b00 	mvn.w	fp, r0
 802cc46:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802cc48:	f9bd 5050 	ldrsh.w	r5, [sp, #80]	@ 0x50
 802cc4c:	9005      	str	r0, [sp, #20]
 802cc4e:	fb0c 4805 	mla	r8, ip, r5, r4
 802cc52:	7848      	ldrb	r0, [r1, #1]
 802cc54:	788e      	ldrb	r6, [r1, #2]
 802cc56:	0204      	lsls	r4, r0, #8
 802cc58:	780f      	ldrb	r7, [r1, #0]
 802cc5a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 802cc5e:	9306      	str	r3, [sp, #24]
 802cc60:	fa5f f38b 	uxtb.w	r3, fp
 802cc64:	433c      	orrs	r4, r7
 802cc66:	9304      	str	r3, [sp, #16]
 802cc68:	f1bc 0f00 	cmp.w	ip, #0
 802cc6c:	eb02 0308 	add.w	r3, r2, r8
 802cc70:	9003      	str	r0, [sp, #12]
 802cc72:	9602      	str	r6, [sp, #8]
 802cc74:	9307      	str	r3, [sp, #28]
 802cc76:	9409      	str	r4, [sp, #36]	@ 0x24
 802cc78:	f10c 0601 	add.w	r6, ip, #1
 802cc7c:	f9bd e054 	ldrsh.w	lr, [sp, #84]	@ 0x54
 802cc80:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 802cc84:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802cc88:	db02      	blt.n	802cc90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x5c>
 802cc8a:	45e6      	cmp	lr, ip
 802cc8c:	f300 80a0 	bgt.w	802cdd0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x19c>
 802cc90:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cc94:	46e0      	mov	r8, ip
 802cc96:	fa5f fb84 	uxtb.w	fp, r4
 802cc9a:	f8cd b004 	str.w	fp, [sp, #4]
 802cc9e:	2e00      	cmp	r6, #0
 802cca0:	db01      	blt.n	802cca6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cca2:	45b6      	cmp	lr, r6
 802cca4:	dc73      	bgt.n	802cd8e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x15a>
 802cca6:	fa5f fa84 	uxtb.w	sl, r4
 802ccaa:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802ccae:	4654      	mov	r4, sl
 802ccb0:	46f1      	mov	r9, lr
 802ccb2:	2b0f      	cmp	r3, #15
 802ccb4:	f200 80cb 	bhi.w	802ce4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802ccb8:	280f      	cmp	r0, #15
 802ccba:	f200 80c8 	bhi.w	802ce4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802ccbe:	b29b      	uxth	r3, r3
 802ccc0:	b280      	uxth	r0, r0
 802ccc2:	fb03 f600 	mul.w	r6, r3, r0
 802ccc6:	011b      	lsls	r3, r3, #4
 802ccc8:	1b9d      	subs	r5, r3, r6
 802ccca:	9a01      	ldr	r2, [sp, #4]
 802cccc:	b2ad      	uxth	r5, r5
 802ccce:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802ccd2:	fb05 f202 	mul.w	r2, r5, r2
 802ccd6:	b280      	uxth	r0, r0
 802ccd8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802ccdc:	1a1b      	subs	r3, r3, r0
 802ccde:	b29b      	uxth	r3, r3
 802cce0:	fb03 220b 	mla	r2, r3, fp, r2
 802cce4:	fb00 2a0a 	mla	sl, r0, sl, r2
 802cce8:	f8bd b010 	ldrh.w	fp, [sp, #16]
 802ccec:	fb06 a404 	mla	r4, r6, r4, sl
 802ccf0:	fb17 f70b 	smulbb	r7, r7, fp
 802ccf4:	f8bd a014 	ldrh.w	sl, [sp, #20]
 802ccf8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802ccfc:	fb04 770a 	mla	r7, r4, sl, r7
 802cd00:	b2bf      	uxth	r7, r7
 802cd02:	1c7a      	adds	r2, r7, #1
 802cd04:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802cd08:	123f      	asrs	r7, r7, #8
 802cd0a:	700f      	strb	r7, [r1, #0]
 802cd0c:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802cd10:	f898 7001 	ldrb.w	r7, [r8, #1]
 802cd14:	fb05 f204 	mul.w	r2, r5, r4
 802cd18:	fb03 2407 	mla	r4, r3, r7, r2
 802cd1c:	f899 2001 	ldrb.w	r2, [r9, #1]
 802cd20:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802cd24:	fb00 4202 	mla	r2, r0, r2, r4
 802cd28:	9c03      	ldr	r4, [sp, #12]
 802cd2a:	fb06 2207 	mla	r2, r6, r7, r2
 802cd2e:	fb14 f40b 	smulbb	r4, r4, fp
 802cd32:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802cd36:	fb02 420a 	mla	r2, r2, sl, r4
 802cd3a:	b292      	uxth	r2, r2
 802cd3c:	1c54      	adds	r4, r2, #1
 802cd3e:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802cd42:	1212      	asrs	r2, r2, #8
 802cd44:	704a      	strb	r2, [r1, #1]
 802cd46:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802cd4a:	f898 2002 	ldrb.w	r2, [r8, #2]
 802cd4e:	fb05 f504 	mul.w	r5, r5, r4
 802cd52:	fb03 5502 	mla	r5, r3, r2, r5
 802cd56:	f899 4002 	ldrb.w	r4, [r9, #2]
 802cd5a:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802cd5e:	fb00 5004 	mla	r0, r0, r4, r5
 802cd62:	9b02      	ldr	r3, [sp, #8]
 802cd64:	fb06 0602 	mla	r6, r6, r2, r0
 802cd68:	fb13 fb0b 	smulbb	fp, r3, fp
 802cd6c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802cd70:	fb06 ba0a 	mla	sl, r6, sl, fp
 802cd74:	fa1f fa8a 	uxth.w	sl, sl
 802cd78:	f10a 0b01 	add.w	fp, sl, #1
 802cd7c:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802cd80:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802cd84:	f881 a002 	strb.w	sl, [r1, #2]
 802cd88:	b00b      	add	sp, #44	@ 0x2c
 802cd8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cd8e:	2800      	cmp	r0, #0
 802cd90:	d089      	beq.n	802cca6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cd92:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 802cd94:	2e00      	cmp	r6, #0
 802cd96:	db47      	blt.n	802ce28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd98:	42b5      	cmp	r5, r6
 802cd9a:	dd45      	ble.n	802ce28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd9c:	9a07      	ldr	r2, [sp, #28]
 802cd9e:	f812 9005 	ldrb.w	r9, [r2, r5]
 802cda2:	9a06      	ldr	r2, [sp, #24]
 802cda4:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802cda8:	4491      	add	r9, r2
 802cdaa:	3601      	adds	r6, #1
 802cdac:	f899 a000 	ldrb.w	sl, [r9]
 802cdb0:	d436      	bmi.n	802ce20 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cdb2:	42b5      	cmp	r5, r6
 802cdb4:	dd34      	ble.n	802ce20 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cdb6:	2b00      	cmp	r3, #0
 802cdb8:	d045      	beq.n	802ce46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x212>
 802cdba:	9a07      	ldr	r2, [sp, #28]
 802cdbc:	442a      	add	r2, r5
 802cdbe:	f892 e001 	ldrb.w	lr, [r2, #1]
 802cdc2:	9a06      	ldr	r2, [sp, #24]
 802cdc4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802cdc8:	f812 400e 	ldrb.w	r4, [r2, lr]
 802cdcc:	4496      	add	lr, r2
 802cdce:	e770      	b.n	802ccb2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802cdd0:	4691      	mov	r9, r2
 802cdd2:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cdd4:	2a00      	cmp	r2, #0
 802cdd6:	db01      	blt.n	802cddc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1a8>
 802cdd8:	4295      	cmp	r5, r2
 802cdda:	dc19      	bgt.n	802ce10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1dc>
 802cddc:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 802cde0:	3201      	adds	r2, #1
 802cde2:	f898 b000 	ldrb.w	fp, [r8]
 802cde6:	d40e      	bmi.n	802ce06 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cde8:	4295      	cmp	r5, r2
 802cdea:	dd0c      	ble.n	802ce06 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cdec:	b1fb      	cbz	r3, 802ce2e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1fa>
 802cdee:	9a07      	ldr	r2, [sp, #28]
 802cdf0:	f892 c001 	ldrb.w	ip, [r2, #1]
 802cdf4:	9a06      	ldr	r2, [sp, #24]
 802cdf6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802cdfa:	f812 200c 	ldrb.w	r2, [r2, ip]
 802cdfe:	9201      	str	r2, [sp, #4]
 802ce00:	9a06      	ldr	r2, [sp, #24]
 802ce02:	4494      	add	ip, r2
 802ce04:	e74b      	b.n	802cc9e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802ce06:	b2e2      	uxtb	r2, r4
 802ce08:	9201      	str	r2, [sp, #4]
 802ce0a:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802ce0e:	e746      	b.n	802cc9e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802ce10:	f819 8008 	ldrb.w	r8, [r9, r8]
 802ce14:	9a06      	ldr	r2, [sp, #24]
 802ce16:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802ce1a:	4490      	add	r8, r2
 802ce1c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802ce1e:	e7df      	b.n	802cde0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ac>
 802ce20:	b2e4      	uxtb	r4, r4
 802ce22:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802ce26:	e744      	b.n	802ccb2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802ce28:	f10d 0924 	add.w	r9, sp, #36	@ 0x24
 802ce2c:	e7bd      	b.n	802cdaa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x176>
 802ce2e:	b2e2      	uxtb	r2, r4
 802ce30:	2e00      	cmp	r6, #0
 802ce32:	9201      	str	r2, [sp, #4]
 802ce34:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802ce38:	f6bf af33 	bge.w	802cca2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6e>
 802ce3c:	46e6      	mov	lr, ip
 802ce3e:	46e1      	mov	r9, ip
 802ce40:	4692      	mov	sl, r2
 802ce42:	4614      	mov	r4, r2
 802ce44:	e738      	b.n	802ccb8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802ce46:	b2e4      	uxtb	r4, r4
 802ce48:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802ce4c:	e734      	b.n	802ccb8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802ce4e:	4b03      	ldr	r3, [pc, #12]	@ (802ce5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x228>)
 802ce50:	4a03      	ldr	r2, [pc, #12]	@ (802ce60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x22c>)
 802ce52:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ce56:	4803      	ldr	r0, [pc, #12]	@ (802ce64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x230>)
 802ce58:	f005 fb56 	bl	8032508 <__assert_func>
 802ce5c:	080366e4 	.word	0x080366e4
 802ce60:	08036d60 	.word	0x08036d60
 802ce64:	0803686c 	.word	0x0803686c

0802ce68 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ce68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ce6c:	ed2d 8b08 	vpush	{d8-d11}
 802ce70:	b097      	sub	sp, #92	@ 0x5c
 802ce72:	f89d 60c4 	ldrb.w	r6, [sp, #196]	@ 0xc4
 802ce76:	eeb0 aa40 	vmov.f32	s20, s0
 802ce7a:	e9dd b729 	ldrd	fp, r7, [sp, #164]	@ 0xa4
 802ce7e:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 802ce82:	43f0      	mvns	r0, r6
 802ce84:	eef0 9a60 	vmov.f32	s19, s1
 802ce88:	eeb0 9a41 	vmov.f32	s18, s2
 802ce8c:	eef0 8a62 	vmov.f32	s17, s5
 802ce90:	eeb0 8a43 	vmov.f32	s16, s6
 802ce94:	eef0 ba44 	vmov.f32	s23, s8
 802ce98:	eeb0 ba64 	vmov.f32	s22, s9
 802ce9c:	eef0 aa45 	vmov.f32	s21, s10
 802cea0:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802cea4:	e9dd 512d 	ldrd	r5, r1, [sp, #180]	@ 0xb4
 802cea8:	461a      	mov	r2, r3
 802ceaa:	686c      	ldr	r4, [r5, #4]
 802ceac:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802ceae:	f8dd 90ac 	ldr.w	r9, [sp, #172]	@ 0xac
 802ceb2:	fb04 1303 	mla	r3, r4, r3, r1
 802ceb6:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
 802ceb8:	6829      	ldr	r1, [r5, #0]
 802ceba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802cebe:	6865      	ldr	r5, [r4, #4]
 802cec0:	eb01 0a03 	add.w	sl, r1, r3
 802cec4:	b2c3      	uxtb	r3, r0
 802cec6:	6824      	ldr	r4, [r4, #0]
 802cec8:	9309      	str	r3, [sp, #36]	@ 0x24
 802ceca:	1d2b      	adds	r3, r5, #4
 802cecc:	930a      	str	r3, [sp, #40]	@ 0x28
 802cece:	b2b3      	uxth	r3, r6
 802ced0:	940d      	str	r4, [sp, #52]	@ 0x34
 802ced2:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ced4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ced6:	2b00      	cmp	r3, #0
 802ced8:	dc02      	bgt.n	802cee0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802ceda:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802cedc:	2b00      	cmp	r3, #0
 802cede:	dd63      	ble.n	802cfa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802cee0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802cee2:	2a00      	cmp	r2, #0
 802cee4:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802cee8:	b234      	sxth	r4, r6
 802ceea:	fa0f fc8e 	sxth.w	ip, lr
 802ceee:	f340 825b 	ble.w	802d3a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 802cef2:	f8cd e020 	str.w	lr, [sp, #32]
 802cef6:	f8dd e0b0 	ldr.w	lr, [sp, #176]	@ 0xb0
 802cefa:	1e65      	subs	r5, r4, #1
 802cefc:	f10c 38ff 	add.w	r8, ip, #4294967295
 802cf00:	ea5f 432b 	movs.w	r3, fp, asr #16
 802cf04:	ea4f 4127 	mov.w	r1, r7, asr #16
 802cf08:	d405      	bmi.n	802cf16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cf0a:	42ab      	cmp	r3, r5
 802cf0c:	da03      	bge.n	802cf16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cf0e:	2900      	cmp	r1, #0
 802cf10:	db01      	blt.n	802cf16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cf12:	4541      	cmp	r1, r8
 802cf14:	db4d      	blt.n	802cfb2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802cf16:	1c58      	adds	r0, r3, #1
 802cf18:	d406      	bmi.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cf1a:	42a0      	cmp	r0, r4
 802cf1c:	dc04      	bgt.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cf1e:	1c48      	adds	r0, r1, #1
 802cf20:	d402      	bmi.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cf22:	4560      	cmp	r0, ip
 802cf24:	f340 819b 	ble.w	802d25e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802cf28:	3a01      	subs	r2, #1
 802cf2a:	44cb      	add	fp, r9
 802cf2c:	4477      	add	r7, lr
 802cf2e:	f10a 0a03 	add.w	sl, sl, #3
 802cf32:	d1e5      	bne.n	802cf00 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802cf34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802cf36:	2b00      	cmp	r3, #0
 802cf38:	dd36      	ble.n	802cfa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802cf3a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802cf3e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802cf42:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802cf46:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802cf4a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802cf4e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802cf52:	ee69 7a27 	vmul.f32	s15, s18, s15
 802cf56:	ee76 6a68 	vsub.f32	s13, s12, s17
 802cf5a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802cf5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802cf62:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf66:	ee16 2a90 	vmov	r2, s13
 802cf6a:	3b01      	subs	r3, #1
 802cf6c:	930e      	str	r3, [sp, #56]	@ 0x38
 802cf6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf70:	fb92 f9f3 	sdiv	r9, r2, r3
 802cf74:	ee17 2a10 	vmov	r2, s14
 802cf78:	eeb0 7a48 	vmov.f32	s14, s16
 802cf7c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf80:	ee17 7a10 	vmov	r7, s14
 802cf84:	eeb0 7a68 	vmov.f32	s14, s17
 802cf88:	fb92 f3f3 	sdiv	r3, r2, r3
 802cf8c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf90:	932c      	str	r3, [sp, #176]	@ 0xb0
 802cf92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf94:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802cf96:	ee17 ba10 	vmov	fp, s14
 802cf9a:	eeb0 8a67 	vmov.f32	s16, s15
 802cf9e:	eef0 8a46 	vmov.f32	s17, s12
 802cfa2:	bf18      	it	ne
 802cfa4:	461a      	movne	r2, r3
 802cfa6:	e795      	b.n	802ced4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802cfa8:	b017      	add	sp, #92	@ 0x5c
 802cfaa:	ecbd 8b08 	vpop	{d8-d11}
 802cfae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cfb2:	f8dd e020 	ldr.w	lr, [sp, #32]
 802cfb6:	1e51      	subs	r1, r2, #1
 802cfb8:	fb09 b301 	mla	r3, r9, r1, fp
 802cfbc:	141b      	asrs	r3, r3, #16
 802cfbe:	9108      	str	r1, [sp, #32]
 802cfc0:	f100 80e7 	bmi.w	802d192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfc4:	42ab      	cmp	r3, r5
 802cfc6:	f280 80e4 	bge.w	802d192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfca:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802cfcc:	fb03 7301 	mla	r3, r3, r1, r7
 802cfd0:	141b      	asrs	r3, r3, #16
 802cfd2:	f100 80de 	bmi.w	802d192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfd6:	f10c 3cff 	add.w	ip, ip, #4294967295
 802cfda:	4563      	cmp	r3, ip
 802cfdc:	f280 80d9 	bge.w	802d192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfe0:	2a00      	cmp	r2, #0
 802cfe2:	dda7      	ble.n	802cf34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802cfe4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802cfe8:	eb0a 0302 	add.w	r3, sl, r2
 802cfec:	930c      	str	r3, [sp, #48]	@ 0x30
 802cfee:	f10a 0c03 	add.w	ip, sl, #3
 802cff2:	e9cd 792a 	strd	r7, r9, [sp, #168]	@ 0xa8
 802cff6:	463b      	mov	r3, r7
 802cff8:	e09a      	b.n	802d130 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802cffa:	784d      	ldrb	r5, [r1, #1]
 802cffc:	1908      	adds	r0, r1, r4
 802cffe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802d002:	4435      	add	r5, r6
 802d004:	2a00      	cmp	r2, #0
 802d006:	f000 80b5 	beq.w	802d174 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802d00a:	5d0c      	ldrb	r4, [r1, r4]
 802d00c:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d010:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d014:	19a1      	adds	r1, r4, r6
 802d016:	9108      	str	r1, [sp, #32]
 802d018:	4631      	mov	r1, r6
 802d01a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d01e:	9f08      	ldr	r7, [sp, #32]
 802d020:	44b6      	add	lr, r6
 802d022:	b29b      	uxth	r3, r3
 802d024:	b292      	uxth	r2, r2
 802d026:	fb03 f602 	mul.w	r6, r3, r2
 802d02a:	011b      	lsls	r3, r3, #4
 802d02c:	f895 9000 	ldrb.w	r9, [r5]
 802d030:	1b98      	subs	r0, r3, r6
 802d032:	b280      	uxth	r0, r0
 802d034:	fb00 f909 	mul.w	r9, r0, r9
 802d038:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d03c:	b292      	uxth	r2, r2
 802d03e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d042:	f811 100a 	ldrb.w	r1, [r1, sl]
 802d046:	1a9b      	subs	r3, r3, r2
 802d048:	b29b      	uxth	r3, r3
 802d04a:	fb03 9101 	mla	r1, r3, r1, r9
 802d04e:	f897 9000 	ldrb.w	r9, [r7]
 802d052:	9c2b      	ldr	r4, [sp, #172]	@ 0xac
 802d054:	fb02 1109 	mla	r1, r2, r9, r1
 802d058:	f89e a000 	ldrb.w	sl, [lr]
 802d05c:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 802d060:	44a3      	add	fp, r4
 802d062:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d064:	fb06 110a 	mla	r1, r6, sl, r1
 802d068:	fb19 f904 	smulbb	r9, r9, r4
 802d06c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802d06e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d072:	fb01 9904 	mla	r9, r1, r4, r9
 802d076:	fa1f f989 	uxth.w	r9, r9
 802d07a:	f109 0101 	add.w	r1, r9, #1
 802d07e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d082:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d086:	f80c 9c03 	strb.w	r9, [ip, #-3]
 802d08a:	7869      	ldrb	r1, [r5, #1]
 802d08c:	f898 9001 	ldrb.w	r9, [r8, #1]
 802d090:	fb00 f101 	mul.w	r1, r0, r1
 802d094:	9c08      	ldr	r4, [sp, #32]
 802d096:	fb03 1109 	mla	r1, r3, r9, r1
 802d09a:	f894 9001 	ldrb.w	r9, [r4, #1]
 802d09e:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
 802d0a0:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 802d0a2:	fb02 1109 	mla	r1, r2, r9, r1
 802d0a6:	f89e a001 	ldrb.w	sl, [lr, #1]
 802d0aa:	443c      	add	r4, r7
 802d0ac:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 802d0b0:	942a      	str	r4, [sp, #168]	@ 0xa8
 802d0b2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d0b4:	fb06 110a 	mla	r1, r6, sl, r1
 802d0b8:	fb19 f904 	smulbb	r9, r9, r4
 802d0bc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802d0be:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d0c2:	fb01 9907 	mla	r9, r1, r7, r9
 802d0c6:	fa1f f989 	uxth.w	r9, r9
 802d0ca:	f109 0101 	add.w	r1, r9, #1
 802d0ce:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d0d2:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d0d6:	f80c 9c02 	strb.w	r9, [ip, #-2]
 802d0da:	78a9      	ldrb	r1, [r5, #2]
 802d0dc:	f898 5002 	ldrb.w	r5, [r8, #2]
 802d0e0:	fb00 f001 	mul.w	r0, r0, r1
 802d0e4:	fb03 0005 	mla	r0, r3, r5, r0
 802d0e8:	9b08      	ldr	r3, [sp, #32]
 802d0ea:	f89e 4002 	ldrb.w	r4, [lr, #2]
 802d0ee:	789b      	ldrb	r3, [r3, #2]
 802d0f0:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 802d0f4:	fb02 0003 	mla	r0, r2, r3, r0
 802d0f8:	fb06 0004 	mla	r0, r6, r4, r0
 802d0fc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d0fe:	fb1e f404 	smulbb	r4, lr, r4
 802d102:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 802d106:	fb0e 4e07 	mla	lr, lr, r7, r4
 802d10a:	fa1f fe8e 	uxth.w	lr, lr
 802d10e:	f10e 0301 	add.w	r3, lr, #1
 802d112:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802d116:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d118:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d11c:	4563      	cmp	r3, ip
 802d11e:	f80c ec01 	strb.w	lr, [ip, #-1]
 802d122:	d034      	beq.n	802d18e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802d124:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802d126:	f10c 0c03 	add.w	ip, ip, #3
 802d12a:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 802d12e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d130:	1419      	asrs	r1, r3, #16
 802d132:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d136:	fb04 3101 	mla	r1, r4, r1, r3
 802d13a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d13c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d13e:	f812 a001 	ldrb.w	sl, [r2, r1]
 802d142:	4411      	add	r1, r2
 802d144:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802d146:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802d14a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802d14e:	eb06 080a 	add.w	r8, r6, sl
 802d152:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802d156:	2b00      	cmp	r3, #0
 802d158:	f47f af4f 	bne.w	802cffa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 802d15c:	b182      	cbz	r2, 802d180 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802d15e:	5d0c      	ldrb	r4, [r1, r4]
 802d160:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d162:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d166:	1861      	adds	r1, r4, r1
 802d168:	9108      	str	r1, [sp, #32]
 802d16a:	46c6      	mov	lr, r8
 802d16c:	4645      	mov	r5, r8
 802d16e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d170:	9f08      	ldr	r7, [sp, #32]
 802d172:	e756      	b.n	802d022 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d174:	46c6      	mov	lr, r8
 802d176:	f8cd 8020 	str.w	r8, [sp, #32]
 802d17a:	4631      	mov	r1, r6
 802d17c:	4647      	mov	r7, r8
 802d17e:	e750      	b.n	802d022 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d180:	46c6      	mov	lr, r8
 802d182:	f8cd 8020 	str.w	r8, [sp, #32]
 802d186:	4645      	mov	r5, r8
 802d188:	4631      	mov	r1, r6
 802d18a:	4647      	mov	r7, r8
 802d18c:	e749      	b.n	802d022 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d18e:	469a      	mov	sl, r3
 802d190:	e6d0      	b.n	802cf34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d192:	2a00      	cmp	r2, #0
 802d194:	f77f aece 	ble.w	802cf34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d198:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802d19c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d1a0:	1439      	asrs	r1, r7, #16
 802d1a2:	4654      	mov	r4, sl
 802d1a4:	9d30      	ldr	r5, [sp, #192]	@ 0xc0
 802d1a6:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802d1aa:	2b00      	cmp	r3, #0
 802d1ac:	f3cb 3003 	ubfx	r0, fp, #12, #4
 802d1b0:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802d1b4:	db2f      	blt.n	802d216 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1b6:	f106 3cff 	add.w	ip, r6, #4294967295
 802d1ba:	4563      	cmp	r3, ip
 802d1bc:	da2b      	bge.n	802d216 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1be:	2900      	cmp	r1, #0
 802d1c0:	db29      	blt.n	802d216 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1c2:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d1c6:	4561      	cmp	r1, ip
 802d1c8:	da25      	bge.n	802d216 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1ca:	fa0f fa86 	sxth.w	sl, r6
 802d1ce:	fb01 330a 	mla	r3, r1, sl, r3
 802d1d2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802d1d4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d1d6:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d1da:	440b      	add	r3, r1
 802d1dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d1e0:	eb06 0c0e 	add.w	ip, r6, lr
 802d1e4:	2800      	cmp	r0, #0
 802d1e6:	d052      	beq.n	802d28e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x426>
 802d1e8:	7859      	ldrb	r1, [r3, #1]
 802d1ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d1ee:	1871      	adds	r1, r6, r1
 802d1f0:	910c      	str	r1, [sp, #48]	@ 0x30
 802d1f2:	2a00      	cmp	r2, #0
 802d1f4:	f000 80d5 	beq.w	802d3a2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 802d1f8:	eb03 010a 	add.w	r1, r3, sl
 802d1fc:	7849      	ldrb	r1, [r1, #1]
 802d1fe:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d202:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d206:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d20a:	1871      	adds	r1, r6, r1
 802d20c:	18f3      	adds	r3, r6, r3
 802d20e:	9110      	str	r1, [sp, #64]	@ 0x40
 802d210:	9311      	str	r3, [sp, #68]	@ 0x44
 802d212:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d214:	e042      	b.n	802d29c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d216:	f113 0c01 	adds.w	ip, r3, #1
 802d21a:	d406      	bmi.n	802d22a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d21c:	45b4      	cmp	ip, r6
 802d21e:	dc04      	bgt.n	802d22a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d220:	f111 0c01 	adds.w	ip, r1, #1
 802d224:	d401      	bmi.n	802d22a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d226:	45f4      	cmp	ip, lr
 802d228:	dd1f      	ble.n	802d26a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802d22a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802d22c:	f1b8 0f00 	cmp.w	r8, #0
 802d230:	f104 0403 	add.w	r4, r4, #3
 802d234:	44cb      	add	fp, r9
 802d236:	441f      	add	r7, r3
 802d238:	dd07      	ble.n	802d24a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802d23a:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 802d23e:	f108 38ff 	add.w	r8, r8, #4294967295
 802d242:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d246:	1439      	asrs	r1, r7, #16
 802d248:	e7af      	b.n	802d1aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d24a:	9b08      	ldr	r3, [sp, #32]
 802d24c:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 802d250:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d254:	3301      	adds	r3, #1
 802d256:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d25a:	449a      	add	sl, r3
 802d25c:	e66a      	b.n	802cf34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d25e:	3a01      	subs	r2, #1
 802d260:	f8dd e020 	ldr.w	lr, [sp, #32]
 802d264:	4690      	mov	r8, r2
 802d266:	9208      	str	r2, [sp, #32]
 802d268:	e79b      	b.n	802d1a2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802d26a:	fa0f fe8e 	sxth.w	lr, lr
 802d26e:	b236      	sxth	r6, r6
 802d270:	e9cd 6e00 	strd	r6, lr, [sp]
 802d274:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 802d276:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802d27a:	e9cd 2605 	strd	r2, r6, [sp, #20]
 802d27e:	9302      	str	r3, [sp, #8]
 802d280:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d282:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d284:	4621      	mov	r1, r4
 802d286:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802d288:	f7ff fcd4 	bl	802cc34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 802d28c:	e7cd      	b.n	802d22a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d28e:	2a00      	cmp	r2, #0
 802d290:	d17b      	bne.n	802d38a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x522>
 802d292:	4661      	mov	r1, ip
 802d294:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d298:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d29c:	b283      	uxth	r3, r0
 802d29e:	b292      	uxth	r2, r2
 802d2a0:	fb03 f602 	mul.w	r6, r3, r2
 802d2a4:	011b      	lsls	r3, r3, #4
 802d2a6:	7809      	ldrb	r1, [r1, #0]
 802d2a8:	1b98      	subs	r0, r3, r6
 802d2aa:	b280      	uxth	r0, r0
 802d2ac:	9012      	str	r0, [sp, #72]	@ 0x48
 802d2ae:	fb00 f101 	mul.w	r1, r0, r1
 802d2b2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d2b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802d2b8:	b292      	uxth	r2, r2
 802d2ba:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d2be:	f810 e00e 	ldrb.w	lr, [r0, lr]
 802d2c2:	1a9b      	subs	r3, r3, r2
 802d2c4:	b29b      	uxth	r3, r3
 802d2c6:	fb03 110e 	mla	r1, r3, lr, r1
 802d2ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d2cc:	f890 a000 	ldrb.w	sl, [r0]
 802d2d0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d2d2:	fb02 110a 	mla	r1, r2, sl, r1
 802d2d6:	f890 e000 	ldrb.w	lr, [r0]
 802d2da:	f894 a000 	ldrb.w	sl, [r4]
 802d2de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d2e0:	fb06 110e 	mla	r1, r6, lr, r1
 802d2e4:	fb1a fa00 	smulbb	sl, sl, r0
 802d2e8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d2ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d2ee:	fb01 a100 	mla	r1, r1, r0, sl
 802d2f2:	b289      	uxth	r1, r1
 802d2f4:	f101 0e01 	add.w	lr, r1, #1
 802d2f8:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d2fc:	1209      	asrs	r1, r1, #8
 802d2fe:	7021      	strb	r1, [r4, #0]
 802d300:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d302:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d304:	7849      	ldrb	r1, [r1, #1]
 802d306:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d30a:	fb00 f101 	mul.w	r1, r0, r1
 802d30e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d310:	fb03 110e 	mla	r1, r3, lr, r1
 802d314:	f890 a001 	ldrb.w	sl, [r0, #1]
 802d318:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d31a:	fb02 110a 	mla	r1, r2, sl, r1
 802d31e:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d322:	f894 a001 	ldrb.w	sl, [r4, #1]
 802d326:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d328:	fb06 110e 	mla	r1, r6, lr, r1
 802d32c:	fb1a fa00 	smulbb	sl, sl, r0
 802d330:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d332:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d336:	fb01 a100 	mla	r1, r1, r0, sl
 802d33a:	b289      	uxth	r1, r1
 802d33c:	f101 0e01 	add.w	lr, r1, #1
 802d340:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d344:	1209      	asrs	r1, r1, #8
 802d346:	7061      	strb	r1, [r4, #1]
 802d348:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d34a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d34c:	7889      	ldrb	r1, [r1, #2]
 802d34e:	f89c c002 	ldrb.w	ip, [ip, #2]
 802d352:	fb00 f001 	mul.w	r0, r0, r1
 802d356:	fb03 010c 	mla	r1, r3, ip, r0
 802d35a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d35c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802d35e:	7880      	ldrb	r0, [r0, #2]
 802d360:	789b      	ldrb	r3, [r3, #2]
 802d362:	fb02 1100 	mla	r1, r2, r0, r1
 802d366:	78a2      	ldrb	r2, [r4, #2]
 802d368:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d36a:	fb06 1303 	mla	r3, r6, r3, r1
 802d36e:	fb12 f200 	smulbb	r2, r2, r0
 802d372:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d374:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d378:	fb03 2300 	mla	r3, r3, r0, r2
 802d37c:	b29b      	uxth	r3, r3
 802d37e:	1c5a      	adds	r2, r3, #1
 802d380:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802d384:	121b      	asrs	r3, r3, #8
 802d386:	70a3      	strb	r3, [r4, #2]
 802d388:	e74f      	b.n	802d22a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d38a:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d38e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d392:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d396:	18f3      	adds	r3, r6, r3
 802d398:	9311      	str	r3, [sp, #68]	@ 0x44
 802d39a:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d39e:	4661      	mov	r1, ip
 802d3a0:	e77c      	b.n	802d29c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d3a2:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d3a6:	e779      	b.n	802d29c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d3a8:	f43f adc4 	beq.w	802cf34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d3ac:	1e65      	subs	r5, r4, #1
 802d3ae:	e602      	b.n	802cfb6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>

0802d3b0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 802d3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d3b4:	b083      	sub	sp, #12
 802d3b6:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	@ 0x30
 802d3ba:	f891 9001 	ldrb.w	r9, [r1, #1]
 802d3be:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 802d3c2:	7888      	ldrb	r0, [r1, #2]
 802d3c4:	fb07 6c08 	mla	ip, r7, r8, r6
 802d3c8:	ea4f 2909 	mov.w	r9, r9, lsl #8
 802d3cc:	780c      	ldrb	r4, [r1, #0]
 802d3ce:	ea49 4900 	orr.w	r9, r9, r0, lsl #16
 802d3d2:	ea49 0404 	orr.w	r4, r9, r4
 802d3d6:	2f00      	cmp	r7, #0
 802d3d8:	9401      	str	r4, [sp, #4]
 802d3da:	eb02 090c 	add.w	r9, r2, ip
 802d3de:	f107 0e01 	add.w	lr, r7, #1
 802d3e2:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 802d3e6:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 802d3ea:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 802d3ee:	db01      	blt.n	802d3f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x44>
 802d3f0:	45ba      	cmp	sl, r7
 802d3f2:	dc6e      	bgt.n	802d4d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x122>
 802d3f4:	fa5f fb84 	uxtb.w	fp, r4
 802d3f8:	af01      	add	r7, sp, #4
 802d3fa:	465a      	mov	r2, fp
 802d3fc:	46bc      	mov	ip, r7
 802d3fe:	f1be 0f00 	cmp.w	lr, #0
 802d402:	db01      	blt.n	802d408 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x58>
 802d404:	45f2      	cmp	sl, lr
 802d406:	dc49      	bgt.n	802d49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xec>
 802d408:	fa5f fa84 	uxtb.w	sl, r4
 802d40c:	ab01      	add	r3, sp, #4
 802d40e:	46d1      	mov	r9, sl
 802d410:	469e      	mov	lr, r3
 802d412:	280f      	cmp	r0, #15
 802d414:	f200 8098 	bhi.w	802d548 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d418:	2d0f      	cmp	r5, #15
 802d41a:	f200 8095 	bhi.w	802d548 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d41e:	b280      	uxth	r0, r0
 802d420:	b2ad      	uxth	r5, r5
 802d422:	fb00 f805 	mul.w	r8, r0, r5
 802d426:	0104      	lsls	r4, r0, #4
 802d428:	eba4 0608 	sub.w	r6, r4, r8
 802d42c:	b2b6      	uxth	r6, r6
 802d42e:	fb06 f002 	mul.w	r0, r6, r2
 802d432:	ebc8 1505 	rsb	r5, r8, r5, lsl #4
 802d436:	b2ad      	uxth	r5, r5
 802d438:	f5c4 7280 	rsb	r2, r4, #256	@ 0x100
 802d43c:	1b52      	subs	r2, r2, r5
 802d43e:	b292      	uxth	r2, r2
 802d440:	fb02 000b 	mla	r0, r2, fp, r0
 802d444:	fb05 000a 	mla	r0, r5, sl, r0
 802d448:	fb08 0009 	mla	r0, r8, r9, r0
 802d44c:	1200      	asrs	r0, r0, #8
 802d44e:	7008      	strb	r0, [r1, #0]
 802d450:	f897 9001 	ldrb.w	r9, [r7, #1]
 802d454:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802d458:	fb06 f909 	mul.w	r9, r6, r9
 802d45c:	fb02 9904 	mla	r9, r2, r4, r9
 802d460:	f89e 4001 	ldrb.w	r4, [lr, #1]
 802d464:	7858      	ldrb	r0, [r3, #1]
 802d466:	fb05 9404 	mla	r4, r5, r4, r9
 802d46a:	fb08 4000 	mla	r0, r8, r0, r4
 802d46e:	1200      	asrs	r0, r0, #8
 802d470:	7048      	strb	r0, [r1, #1]
 802d472:	78bc      	ldrb	r4, [r7, #2]
 802d474:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802d478:	fb06 f604 	mul.w	r6, r6, r4
 802d47c:	fb02 6600 	mla	r6, r2, r0, r6
 802d480:	f89e 0002 	ldrb.w	r0, [lr, #2]
 802d484:	789b      	ldrb	r3, [r3, #2]
 802d486:	fb05 6500 	mla	r5, r5, r0, r6
 802d48a:	fb08 5803 	mla	r8, r8, r3, r5
 802d48e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d492:	f881 8002 	strb.w	r8, [r1, #2]
 802d496:	b003      	add	sp, #12
 802d498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d49c:	b385      	cbz	r5, 802d500 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x150>
 802d49e:	2e00      	cmp	r6, #0
 802d4a0:	db40      	blt.n	802d524 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d4a2:	45b0      	cmp	r8, r6
 802d4a4:	dd3e      	ble.n	802d524 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d4a6:	f819 e008 	ldrb.w	lr, [r9, r8]
 802d4aa:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d4ae:	449e      	add	lr, r3
 802d4b0:	3601      	adds	r6, #1
 802d4b2:	f89e a000 	ldrb.w	sl, [lr]
 802d4b6:	d431      	bmi.n	802d51c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d4b8:	45b0      	cmp	r8, r6
 802d4ba:	dd2f      	ble.n	802d51c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d4bc:	2800      	cmp	r0, #0
 802d4be:	d03f      	beq.n	802d540 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x190>
 802d4c0:	44c8      	add	r8, r9
 802d4c2:	f898 4001 	ldrb.w	r4, [r8, #1]
 802d4c6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d4ca:	f813 9004 	ldrb.w	r9, [r3, r4]
 802d4ce:	4423      	add	r3, r4
 802d4d0:	e79f      	b.n	802d412 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d4d2:	2e00      	cmp	r6, #0
 802d4d4:	db01      	blt.n	802d4da <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 802d4d6:	45b0      	cmp	r8, r6
 802d4d8:	dc1a      	bgt.n	802d510 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>
 802d4da:	f10d 0c04 	add.w	ip, sp, #4
 802d4de:	1c72      	adds	r2, r6, #1
 802d4e0:	f89c b000 	ldrb.w	fp, [ip]
 802d4e4:	d409      	bmi.n	802d4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d4e6:	4590      	cmp	r8, r2
 802d4e8:	dd07      	ble.n	802d4fa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d4ea:	b1f0      	cbz	r0, 802d52a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x17a>
 802d4ec:	f899 7001 	ldrb.w	r7, [r9, #1]
 802d4f0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d4f4:	5dda      	ldrb	r2, [r3, r7]
 802d4f6:	441f      	add	r7, r3
 802d4f8:	e781      	b.n	802d3fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d4fa:	b2e2      	uxtb	r2, r4
 802d4fc:	af01      	add	r7, sp, #4
 802d4fe:	e77e      	b.n	802d3fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d500:	280f      	cmp	r0, #15
 802d502:	fa5f fa84 	uxtb.w	sl, r4
 802d506:	d81f      	bhi.n	802d548 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d508:	ab01      	add	r3, sp, #4
 802d50a:	469e      	mov	lr, r3
 802d50c:	46d1      	mov	r9, sl
 802d50e:	e786      	b.n	802d41e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x6e>
 802d510:	f812 c00c 	ldrb.w	ip, [r2, ip]
 802d514:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802d518:	449c      	add	ip, r3
 802d51a:	e7e0      	b.n	802d4de <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 802d51c:	fa5f f984 	uxtb.w	r9, r4
 802d520:	ab01      	add	r3, sp, #4
 802d522:	e776      	b.n	802d412 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d524:	f10d 0e04 	add.w	lr, sp, #4
 802d528:	e7c2      	b.n	802d4b0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x100>
 802d52a:	f1be 0f00 	cmp.w	lr, #0
 802d52e:	b2e2      	uxtb	r2, r4
 802d530:	af01      	add	r7, sp, #4
 802d532:	f6bf af67 	bge.w	802d404 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x54>
 802d536:	463b      	mov	r3, r7
 802d538:	46be      	mov	lr, r7
 802d53a:	4691      	mov	r9, r2
 802d53c:	4692      	mov	sl, r2
 802d53e:	e76b      	b.n	802d418 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d540:	fa5f f984 	uxtb.w	r9, r4
 802d544:	ab01      	add	r3, sp, #4
 802d546:	e767      	b.n	802d418 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d548:	4b03      	ldr	r3, [pc, #12]	@ (802d558 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1a8>)
 802d54a:	4a04      	ldr	r2, [pc, #16]	@ (802d55c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1ac>)
 802d54c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802d550:	4803      	ldr	r0, [pc, #12]	@ (802d560 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1b0>)
 802d552:	f004 ffd9 	bl	8032508 <__assert_func>
 802d556:	bf00      	nop
 802d558:	080366e4 	.word	0x080366e4
 802d55c:	08036d60 	.word	0x08036d60
 802d560:	0803686c 	.word	0x0803686c

0802d564 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802d564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d568:	ed2d 8b0a 	vpush	{d8-d12}
 802d56c:	eeb0 aa40 	vmov.f32	s20, s0
 802d570:	eef0 9a60 	vmov.f32	s19, s1
 802d574:	eeb0 9a41 	vmov.f32	s18, s2
 802d578:	eef0 8a62 	vmov.f32	s17, s5
 802d57c:	eeb0 8a43 	vmov.f32	s16, s6
 802d580:	eeb0 ca44 	vmov.f32	s24, s8
 802d584:	eef0 ba64 	vmov.f32	s23, s9
 802d588:	eeb0 ba45 	vmov.f32	s22, s10
 802d58c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802d590:	b093      	sub	sp, #76	@ 0x4c
 802d592:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802d596:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802d59a:	e9dd 9b27 	ldrd	r9, fp, [sp, #156]	@ 0x9c
 802d59e:	9011      	str	r0, [sp, #68]	@ 0x44
 802d5a0:	461a      	mov	r2, r3
 802d5a2:	6860      	ldr	r0, [r4, #4]
 802d5a4:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802d5a6:	fb00 1803 	mla	r8, r0, r3, r1
 802d5aa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d5ac:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 802d5ae:	6821      	ldr	r1, [r4, #0]
 802d5b0:	685b      	ldr	r3, [r3, #4]
 802d5b2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d5b6:	6800      	ldr	r0, [r0, #0]
 802d5b8:	eb01 0a08 	add.w	sl, r1, r8
 802d5bc:	3304      	adds	r3, #4
 802d5be:	f8dd 80a4 	ldr.w	r8, [sp, #164]	@ 0xa4
 802d5c2:	9009      	str	r0, [sp, #36]	@ 0x24
 802d5c4:	9307      	str	r3, [sp, #28]
 802d5c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d5c8:	2b00      	cmp	r3, #0
 802d5ca:	dc02      	bgt.n	802d5d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802d5cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802d5ce:	2b00      	cmp	r3, #0
 802d5d0:	dd61      	ble.n	802d696 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d5d2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d5d4:	2a00      	cmp	r2, #0
 802d5d6:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802d5da:	b230      	sxth	r0, r6
 802d5dc:	fa0f f78e 	sxth.w	r7, lr
 802d5e0:	f340 81fe 	ble.w	802d9e0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 802d5e4:	f8cd e018 	str.w	lr, [sp, #24]
 802d5e8:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802d5ec:	1e45      	subs	r5, r0, #1
 802d5ee:	f107 3cff 	add.w	ip, r7, #4294967295
 802d5f2:	ea5f 4329 	movs.w	r3, r9, asr #16
 802d5f6:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d5fa:	d405      	bmi.n	802d608 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5fc:	42ab      	cmp	r3, r5
 802d5fe:	da03      	bge.n	802d608 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d600:	2900      	cmp	r1, #0
 802d602:	db01      	blt.n	802d608 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d604:	4561      	cmp	r1, ip
 802d606:	db4b      	blt.n	802d6a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802d608:	1c5c      	adds	r4, r3, #1
 802d60a:	d406      	bmi.n	802d61a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d60c:	4284      	cmp	r4, r0
 802d60e:	dc04      	bgt.n	802d61a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d610:	1c4c      	adds	r4, r1, #1
 802d612:	d402      	bmi.n	802d61a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d614:	42bc      	cmp	r4, r7
 802d616:	f340 815e 	ble.w	802d8d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802d61a:	3a01      	subs	r2, #1
 802d61c:	44c1      	add	r9, r8
 802d61e:	44f3      	add	fp, lr
 802d620:	f10a 0a03 	add.w	sl, sl, #3
 802d624:	d1e5      	bne.n	802d5f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802d626:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d628:	2b00      	cmp	r3, #0
 802d62a:	dd34      	ble.n	802d696 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d62c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802d630:	ee79 9aab 	vadd.f32	s19, s19, s23
 802d634:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802d638:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802d63c:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802d640:	ee69 7a27 	vmul.f32	s15, s18, s15
 802d644:	ee76 6a68 	vsub.f32	s13, s12, s17
 802d648:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802d64c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d650:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d654:	ee16 2a90 	vmov	r2, s13
 802d658:	3b01      	subs	r3, #1
 802d65a:	930a      	str	r3, [sp, #40]	@ 0x28
 802d65c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d65e:	fb92 f8f3 	sdiv	r8, r2, r3
 802d662:	ee17 2a10 	vmov	r2, s14
 802d666:	eeb0 7a48 	vmov.f32	s14, s16
 802d66a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d66e:	ee17 ba10 	vmov	fp, s14
 802d672:	eeb0 7a68 	vmov.f32	s14, s17
 802d676:	fb92 f3f3 	sdiv	r3, r2, r3
 802d67a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d67e:	932a      	str	r3, [sp, #168]	@ 0xa8
 802d680:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d682:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802d684:	ee17 9a10 	vmov	r9, s14
 802d688:	eeb0 8a67 	vmov.f32	s16, s15
 802d68c:	eef0 8a46 	vmov.f32	s17, s12
 802d690:	bf18      	it	ne
 802d692:	461a      	movne	r2, r3
 802d694:	e797      	b.n	802d5c6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802d696:	b013      	add	sp, #76	@ 0x4c
 802d698:	ecbd 8b0a 	vpop	{d8-d12}
 802d69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d6a0:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d6a4:	1e51      	subs	r1, r2, #1
 802d6a6:	fb08 9301 	mla	r3, r8, r1, r9
 802d6aa:	141b      	asrs	r3, r3, #16
 802d6ac:	9106      	str	r1, [sp, #24]
 802d6ae:	f100 80aa 	bmi.w	802d806 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6b2:	42ab      	cmp	r3, r5
 802d6b4:	f280 80a7 	bge.w	802d806 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d6ba:	fb03 b301 	mla	r3, r3, r1, fp
 802d6be:	141b      	asrs	r3, r3, #16
 802d6c0:	f100 80a1 	bmi.w	802d806 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6c4:	3f01      	subs	r7, #1
 802d6c6:	42bb      	cmp	r3, r7
 802d6c8:	f280 809d 	bge.w	802d806 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6cc:	2a00      	cmp	r2, #0
 802d6ce:	ddaa      	ble.n	802d626 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d6d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802d6d4:	eb0a 0302 	add.w	r3, sl, r2
 802d6d8:	9308      	str	r3, [sp, #32]
 802d6da:	f10a 0a03 	add.w	sl, sl, #3
 802d6de:	f8cd 80a4 	str.w	r8, [sp, #164]	@ 0xa4
 802d6e2:	e062      	b.n	802d7aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802d6e4:	784c      	ldrb	r4, [r1, #1]
 802d6e6:	180d      	adds	r5, r1, r0
 802d6e8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d6ec:	4434      	add	r4, r6
 802d6ee:	2a00      	cmp	r2, #0
 802d6f0:	d07c      	beq.n	802d7ec <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802d6f2:	5c08      	ldrb	r0, [r1, r0]
 802d6f4:	786f      	ldrb	r7, [r5, #1]
 802d6f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d6fa:	1981      	adds	r1, r0, r6
 802d6fc:	4608      	mov	r0, r1
 802d6fe:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d702:	9106      	str	r1, [sp, #24]
 802d704:	4437      	add	r7, r6
 802d706:	b29b      	uxth	r3, r3
 802d708:	b292      	uxth	r2, r2
 802d70a:	fb03 f502 	mul.w	r5, r3, r2
 802d70e:	011b      	lsls	r3, r3, #4
 802d710:	f894 e000 	ldrb.w	lr, [r4]
 802d714:	1b59      	subs	r1, r3, r5
 802d716:	b289      	uxth	r1, r1
 802d718:	fb01 fe0e 	mul.w	lr, r1, lr
 802d71c:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802d720:	b292      	uxth	r2, r2
 802d722:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d726:	f816 6008 	ldrb.w	r6, [r6, r8]
 802d72a:	1a9b      	subs	r3, r3, r2
 802d72c:	b29b      	uxth	r3, r3
 802d72e:	fb03 e606 	mla	r6, r3, r6, lr
 802d732:	f890 e000 	ldrb.w	lr, [r0]
 802d736:	f897 8000 	ldrb.w	r8, [r7]
 802d73a:	fb02 660e 	mla	r6, r2, lr, r6
 802d73e:	fb05 6808 	mla	r8, r5, r8, r6
 802d742:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d746:	f80a 8c03 	strb.w	r8, [sl, #-3]
 802d74a:	f894 8001 	ldrb.w	r8, [r4, #1]
 802d74e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802d750:	fb01 f608 	mul.w	r6, r1, r8
 802d754:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d758:	4481      	add	r9, r0
 802d75a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 802d75c:	fb03 680e 	mla	r8, r3, lr, r6
 802d760:	4483      	add	fp, r0
 802d762:	9806      	ldr	r0, [sp, #24]
 802d764:	787e      	ldrb	r6, [r7, #1]
 802d766:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d76a:	fb02 8e0e 	mla	lr, r2, lr, r8
 802d76e:	fb05 ee06 	mla	lr, r5, r6, lr
 802d772:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d776:	f80a ec02 	strb.w	lr, [sl, #-2]
 802d77a:	78a4      	ldrb	r4, [r4, #2]
 802d77c:	f89c 6002 	ldrb.w	r6, [ip, #2]
 802d780:	fb01 f104 	mul.w	r1, r1, r4
 802d784:	fb03 1106 	mla	r1, r3, r6, r1
 802d788:	7883      	ldrb	r3, [r0, #2]
 802d78a:	78b8      	ldrb	r0, [r7, #2]
 802d78c:	fb02 1103 	mla	r1, r2, r3, r1
 802d790:	fb05 1500 	mla	r5, r5, r0, r1
 802d794:	9b08      	ldr	r3, [sp, #32]
 802d796:	122d      	asrs	r5, r5, #8
 802d798:	4553      	cmp	r3, sl
 802d79a:	f80a 5c01 	strb.w	r5, [sl, #-1]
 802d79e:	d030      	beq.n	802d802 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 802d7a0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d7a2:	f10a 0a03 	add.w	sl, sl, #3
 802d7a6:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802d7aa:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d7ae:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d7b2:	fb00 3101 	mla	r1, r0, r1, r3
 802d7b6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d7b8:	9e07      	ldr	r6, [sp, #28]
 802d7ba:	f812 8001 	ldrb.w	r8, [r2, r1]
 802d7be:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802d7c2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d7c6:	4411      	add	r1, r2
 802d7c8:	eb06 0c08 	add.w	ip, r6, r8
 802d7cc:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d7d0:	2b00      	cmp	r3, #0
 802d7d2:	d187      	bne.n	802d6e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x180>
 802d7d4:	b17a      	cbz	r2, 802d7f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 802d7d6:	5c08      	ldrb	r0, [r1, r0]
 802d7d8:	9907      	ldr	r1, [sp, #28]
 802d7da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d7de:	1841      	adds	r1, r0, r1
 802d7e0:	4667      	mov	r7, ip
 802d7e2:	9106      	str	r1, [sp, #24]
 802d7e4:	4664      	mov	r4, ip
 802d7e6:	9e07      	ldr	r6, [sp, #28]
 802d7e8:	4608      	mov	r0, r1
 802d7ea:	e78c      	b.n	802d706 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7ec:	4667      	mov	r7, ip
 802d7ee:	f8cd c018 	str.w	ip, [sp, #24]
 802d7f2:	4660      	mov	r0, ip
 802d7f4:	e787      	b.n	802d706 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7f6:	4667      	mov	r7, ip
 802d7f8:	f8cd c018 	str.w	ip, [sp, #24]
 802d7fc:	4664      	mov	r4, ip
 802d7fe:	4660      	mov	r0, ip
 802d800:	e781      	b.n	802d706 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d802:	469a      	mov	sl, r3
 802d804:	e70f      	b.n	802d626 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d806:	2a00      	cmp	r2, #0
 802d808:	f77f af0d 	ble.w	802d626 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d80c:	9d06      	ldr	r5, [sp, #24]
 802d80e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d812:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d816:	4657      	mov	r7, sl
 802d818:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 802d81c:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802d81e:	f8dd a0a8 	ldr.w	sl, [sp, #168]	@ 0xa8
 802d822:	2b00      	cmp	r3, #0
 802d824:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802d828:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d82c:	db31      	blt.n	802d892 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d82e:	f106 3cff 	add.w	ip, r6, #4294967295
 802d832:	4563      	cmp	r3, ip
 802d834:	da2d      	bge.n	802d892 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d836:	2900      	cmp	r1, #0
 802d838:	db2b      	blt.n	802d892 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d83a:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d83e:	4561      	cmp	r1, ip
 802d840:	da27      	bge.n	802d892 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d842:	fa0f fc86 	sxth.w	ip, r6
 802d846:	fb01 330c 	mla	r3, r1, ip, r3
 802d84a:	9e07      	ldr	r6, [sp, #28]
 802d84c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802d84e:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d852:	440b      	add	r3, r1
 802d854:	4631      	mov	r1, r6
 802d856:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d85a:	4471      	add	r1, lr
 802d85c:	910e      	str	r1, [sp, #56]	@ 0x38
 802d85e:	2800      	cmp	r0, #0
 802d860:	d04f      	beq.n	802d902 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802d862:	7859      	ldrb	r1, [r3, #1]
 802d864:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d868:	1871      	adds	r1, r6, r1
 802d86a:	9108      	str	r1, [sp, #32]
 802d86c:	2a00      	cmp	r2, #0
 802d86e:	f000 80b2 	beq.w	802d9d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802d872:	eb03 010c 	add.w	r1, r3, ip
 802d876:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d87a:	7849      	ldrb	r1, [r1, #1]
 802d87c:	9b07      	ldr	r3, [sp, #28]
 802d87e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d882:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d886:	1859      	adds	r1, r3, r1
 802d888:	18f3      	adds	r3, r6, r3
 802d88a:	910c      	str	r1, [sp, #48]	@ 0x30
 802d88c:	930d      	str	r3, [sp, #52]	@ 0x34
 802d88e:	9e08      	ldr	r6, [sp, #32]
 802d890:	e03d      	b.n	802d90e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d892:	f113 0c01 	adds.w	ip, r3, #1
 802d896:	d406      	bmi.n	802d8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d898:	45b4      	cmp	ip, r6
 802d89a:	dc04      	bgt.n	802d8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d89c:	f111 0c01 	adds.w	ip, r1, #1
 802d8a0:	d401      	bmi.n	802d8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d8a2:	45f4      	cmp	ip, lr
 802d8a4:	dd1d      	ble.n	802d8e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802d8a6:	2d00      	cmp	r5, #0
 802d8a8:	f107 0703 	add.w	r7, r7, #3
 802d8ac:	44c1      	add	r9, r8
 802d8ae:	44d3      	add	fp, sl
 802d8b0:	dd07      	ble.n	802d8c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802d8b2:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 802d8b6:	3d01      	subs	r5, #1
 802d8b8:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d8bc:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d8c0:	e7af      	b.n	802d822 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802d8c2:	9b06      	ldr	r3, [sp, #24]
 802d8c4:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 802d8c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d8cc:	3301      	adds	r3, #1
 802d8ce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d8d2:	449a      	add	sl, r3
 802d8d4:	e6a7      	b.n	802d626 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d8d6:	3a01      	subs	r2, #1
 802d8d8:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d8dc:	4615      	mov	r5, r2
 802d8de:	9206      	str	r2, [sp, #24]
 802d8e0:	e799      	b.n	802d816 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802d8e2:	fa0f fe8e 	sxth.w	lr, lr
 802d8e6:	b236      	sxth	r6, r6
 802d8e8:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802d8ec:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802d8f0:	e9cd 6e00 	strd	r6, lr, [sp]
 802d8f4:	9b07      	ldr	r3, [sp, #28]
 802d8f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d8f8:	4639      	mov	r1, r7
 802d8fa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d8fc:	f7ff fd58 	bl	802d3b0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 802d900:	e7d1      	b.n	802d8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d902:	2a00      	cmp	r2, #0
 802d904:	d15b      	bne.n	802d9be <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45a>
 802d906:	460e      	mov	r6, r1
 802d908:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 802d90c:	9108      	str	r1, [sp, #32]
 802d90e:	b283      	uxth	r3, r0
 802d910:	b292      	uxth	r2, r2
 802d912:	fb03 f002 	mul.w	r0, r3, r2
 802d916:	011b      	lsls	r3, r3, #4
 802d918:	f896 c000 	ldrb.w	ip, [r6]
 802d91c:	1a19      	subs	r1, r3, r0
 802d91e:	b289      	uxth	r1, r1
 802d920:	fb01 fc0c 	mul.w	ip, r1, ip
 802d924:	9e07      	ldr	r6, [sp, #28]
 802d926:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802d92a:	b292      	uxth	r2, r2
 802d92c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d930:	f816 e00e 	ldrb.w	lr, [r6, lr]
 802d934:	1a9b      	subs	r3, r3, r2
 802d936:	b29b      	uxth	r3, r3
 802d938:	fb03 cc0e 	mla	ip, r3, lr, ip
 802d93c:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d93e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d942:	f896 e000 	ldrb.w	lr, [r6]
 802d946:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d948:	f896 c000 	ldrb.w	ip, [r6]
 802d94c:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d94e:	fb02 6e0e 	mla	lr, r2, lr, r6
 802d952:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d956:	9e08      	ldr	r6, [sp, #32]
 802d958:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d95c:	f887 c000 	strb.w	ip, [r7]
 802d960:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d964:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d966:	fb01 fc0c 	mul.w	ip, r1, ip
 802d96a:	f896 e001 	ldrb.w	lr, [r6, #1]
 802d96e:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d970:	fb03 ce0e 	mla	lr, r3, lr, ip
 802d974:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d978:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d97a:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d97e:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d982:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d984:	fb02 ee06 	mla	lr, r2, r6, lr
 802d988:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d98c:	9e08      	ldr	r6, [sp, #32]
 802d98e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d992:	f887 c001 	strb.w	ip, [r7, #1]
 802d996:	f896 c002 	ldrb.w	ip, [r6, #2]
 802d99a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d99c:	fb01 f10c 	mul.w	r1, r1, ip
 802d9a0:	f896 e002 	ldrb.w	lr, [r6, #2]
 802d9a4:	fb03 110e 	mla	r1, r3, lr, r1
 802d9a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802d9aa:	789e      	ldrb	r6, [r3, #2]
 802d9ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d9ae:	fb02 1206 	mla	r2, r2, r6, r1
 802d9b2:	789b      	ldrb	r3, [r3, #2]
 802d9b4:	fb00 2303 	mla	r3, r0, r3, r2
 802d9b8:	121b      	asrs	r3, r3, #8
 802d9ba:	70bb      	strb	r3, [r7, #2]
 802d9bc:	e773      	b.n	802d8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d9be:	4631      	mov	r1, r6
 802d9c0:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d9c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802d9c6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d9ca:	1871      	adds	r1, r6, r1
 802d9cc:	930c      	str	r3, [sp, #48]	@ 0x30
 802d9ce:	910d      	str	r1, [sp, #52]	@ 0x34
 802d9d0:	9308      	str	r3, [sp, #32]
 802d9d2:	461e      	mov	r6, r3
 802d9d4:	e79b      	b.n	802d90e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d9d6:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d9d8:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 802d9dc:	460e      	mov	r6, r1
 802d9de:	e796      	b.n	802d90e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d9e0:	f43f ae21 	beq.w	802d626 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d9e4:	1e45      	subs	r5, r0, #1
 802d9e6:	e65d      	b.n	802d6a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>

0802d9e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 802d9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d9ec:	b087      	sub	sp, #28
 802d9ee:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802d9f2:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 802d9f6:	fb06 080c 	mla	r8, r6, ip, r0
 802d9fa:	2e00      	cmp	r6, #0
 802d9fc:	4696      	mov	lr, r2
 802d9fe:	eb02 0a08 	add.w	sl, r2, r8
 802da02:	f106 0b01 	add.w	fp, r6, #1
 802da06:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 802da0a:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802da0e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 802da12:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 802da16:	db02      	blt.n	802da1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 802da18:	42b2      	cmp	r2, r6
 802da1a:	f300 80f1 	bgt.w	802dc00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x218>
 802da1e:	2600      	movs	r6, #0
 802da20:	46b1      	mov	r9, r6
 802da22:	46b0      	mov	r8, r6
 802da24:	46b6      	mov	lr, r6
 802da26:	f1bb 0f00 	cmp.w	fp, #0
 802da2a:	db02      	blt.n	802da32 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x4a>
 802da2c:	455a      	cmp	r2, fp
 802da2e:	f300 8101 	bgt.w	802dc34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 802da32:	f04f 0c00 	mov.w	ip, #0
 802da36:	e9cd cc02 	strd	ip, ip, [sp, #8]
 802da3a:	f8cd c004 	str.w	ip, [sp, #4]
 802da3e:	2f0f      	cmp	r7, #15
 802da40:	f200 813a 	bhi.w	802dcb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802da44:	2d0f      	cmp	r5, #15
 802da46:	f200 8137 	bhi.w	802dcb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802da4a:	b2a8      	uxth	r0, r5
 802da4c:	b2bb      	uxth	r3, r7
 802da4e:	fb00 f503 	mul.w	r5, r0, r3
 802da52:	9a01      	ldr	r2, [sp, #4]
 802da54:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802da58:	b280      	uxth	r0, r0
 802da5a:	fb00 fa02 	mul.w	sl, r0, r2
 802da5e:	fb05 fb0c 	mul.w	fp, r5, ip
 802da62:	011b      	lsls	r3, r3, #4
 802da64:	1b5f      	subs	r7, r3, r5
 802da66:	b2bf      	uxth	r7, r7
 802da68:	fb07 f206 	mul.w	r2, r7, r6
 802da6c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802da70:	1a1b      	subs	r3, r3, r0
 802da72:	b29b      	uxth	r3, r3
 802da74:	fb03 2209 	mla	r2, r3, r9, r2
 802da78:	4452      	add	r2, sl
 802da7a:	445a      	add	r2, fp
 802da7c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802da80:	2a00      	cmp	r2, #0
 802da82:	f000 80ba 	beq.w	802dbfa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x212>
 802da86:	b2a4      	uxth	r4, r4
 802da88:	fb02 f204 	mul.w	r2, r2, r4
 802da8c:	f102 0a01 	add.w	sl, r2, #1
 802da90:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802da94:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802da98:	9205      	str	r2, [sp, #20]
 802da9a:	f008 12ff 	and.w	r2, r8, #16711935	@ 0xff00ff
 802da9e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802daa2:	fb06 f202 	mul.w	r2, r6, r2
 802daa6:	fb06 f608 	mul.w	r6, r6, r8
 802daaa:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802daae:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802dab2:	fb09 fb0b 	mul.w	fp, r9, fp
 802dab6:	fb09 fe0e 	mul.w	lr, r9, lr
 802daba:	f506 7980 	add.w	r9, r6, #256	@ 0x100
 802dabe:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 802dac2:	0a36      	lsrs	r6, r6, #8
 802dac4:	ea4f 2812 	mov.w	r8, r2, lsr #8
 802dac8:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802dacc:	fb07 f606 	mul.w	r6, r7, r6
 802dad0:	9404      	str	r4, [sp, #16]
 802dad2:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802dad6:	9c03      	ldr	r4, [sp, #12]
 802dad8:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802dadc:	4490      	add	r8, r2
 802dade:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802dae2:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802dae6:	fb0c f202 	mul.w	r2, ip, r2
 802daea:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802daee:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802daf2:	9c02      	ldr	r4, [sp, #8]
 802daf4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802daf8:	fb0c fc09 	mul.w	ip, ip, r9
 802dafc:	fb08 f807 	mul.w	r8, r8, r7
 802db00:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802db04:	9603      	str	r6, [sp, #12]
 802db06:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 802db0a:	9e01      	ldr	r6, [sp, #4]
 802db0c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802db10:	44d3      	add	fp, sl
 802db12:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 802db16:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802db1a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802db1e:	fb06 f707 	mul.w	r7, r6, r7
 802db22:	fb06 f909 	mul.w	r9, r6, r9
 802db26:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802db2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802db2e:	9e03      	ldr	r6, [sp, #12]
 802db30:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802db34:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 802db38:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802db3c:	fb0b 8803 	mla	r8, fp, r3, r8
 802db40:	fb03 660e 	mla	r6, r3, lr, r6
 802db44:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802db48:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802db4c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802db50:	4492      	add	sl, r2
 802db52:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 802db56:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802db5a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 802db5e:	0a3a      	lsrs	r2, r7, #8
 802db60:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802db64:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802db68:	fb0b 8b05 	mla	fp, fp, r5, r8
 802db6c:	fb05 660e 	mla	r6, r5, lr, r6
 802db70:	f002 18ff 	and.w	r8, r2, #16711935	@ 0xff00ff
 802db74:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802db78:	f509 7580 	add.w	r5, r9, #256	@ 0x100
 802db7c:	44b8      	add	r8, r7
 802db7e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802db82:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802db86:	0a2d      	lsrs	r5, r5, #8
 802db88:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802db8c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db90:	fb00 6505 	mla	r5, r0, r5, r6
 802db94:	fb08 b800 	mla	r8, r8, r0, fp
 802db98:	0a2d      	lsrs	r5, r5, #8
 802db9a:	ea4f 2018 	mov.w	r0, r8, lsr #8
 802db9e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802dba2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802dba6:	4328      	orrs	r0, r5
 802dba8:	784b      	ldrb	r3, [r1, #1]
 802dbaa:	f89d 2014 	ldrb.w	r2, [sp, #20]
 802dbae:	9c04      	ldr	r4, [sp, #16]
 802dbb0:	788d      	ldrb	r5, [r1, #2]
 802dbb2:	fa5f fa80 	uxtb.w	sl, r0
 802dbb6:	fb13 f602 	smulbb	r6, r3, r2
 802dbba:	fb15 f502 	smulbb	r5, r5, r2
 802dbbe:	fb1a fa04 	smulbb	sl, sl, r4
 802dbc2:	780f      	ldrb	r7, [r1, #0]
 802dbc4:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 802dbc8:	0c00      	lsrs	r0, r0, #16
 802dbca:	fb0c 6304 	mla	r3, ip, r4, r6
 802dbce:	fb07 a202 	mla	r2, r7, r2, sl
 802dbd2:	fb00 5404 	mla	r4, r0, r4, r5
 802dbd6:	b29b      	uxth	r3, r3
 802dbd8:	b292      	uxth	r2, r2
 802dbda:	b2a4      	uxth	r4, r4
 802dbdc:	1c56      	adds	r6, r2, #1
 802dbde:	1c5d      	adds	r5, r3, #1
 802dbe0:	1c60      	adds	r0, r4, #1
 802dbe2:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802dbe6:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802dbea:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802dbee:	1212      	asrs	r2, r2, #8
 802dbf0:	121b      	asrs	r3, r3, #8
 802dbf2:	1224      	asrs	r4, r4, #8
 802dbf4:	700a      	strb	r2, [r1, #0]
 802dbf6:	704b      	strb	r3, [r1, #1]
 802dbf8:	708c      	strb	r4, [r1, #2]
 802dbfa:	b007      	add	sp, #28
 802dbfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802dc00:	2800      	cmp	r0, #0
 802dc02:	db01      	blt.n	802dc08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x220>
 802dc04:	4584      	cmp	ip, r0
 802dc06:	dc3d      	bgt.n	802dc84 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29c>
 802dc08:	f04f 0900 	mov.w	r9, #0
 802dc0c:	46ce      	mov	lr, r9
 802dc0e:	1c46      	adds	r6, r0, #1
 802dc10:	d42a      	bmi.n	802dc68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802dc12:	45b4      	cmp	ip, r6
 802dc14:	dd28      	ble.n	802dc68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802dc16:	b137      	cbz	r7, 802dc26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x23e>
 802dc18:	f89a 6001 	ldrb.w	r6, [sl, #1]
 802dc1c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 802dc20:	ea4f 6618 	mov.w	r6, r8, lsr #24
 802dc24:	e6ff      	b.n	802da26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dc26:	f1bb 0f00 	cmp.w	fp, #0
 802dc2a:	db3e      	blt.n	802dcaa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dc2c:	455a      	cmp	r2, fp
 802dc2e:	dd3c      	ble.n	802dcaa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dc30:	463e      	mov	r6, r7
 802dc32:	46b8      	mov	r8, r7
 802dc34:	b1dd      	cbz	r5, 802dc6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 802dc36:	2800      	cmp	r0, #0
 802dc38:	db30      	blt.n	802dc9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dc3a:	4584      	cmp	ip, r0
 802dc3c:	dd2e      	ble.n	802dc9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dc3e:	f81a 200c 	ldrb.w	r2, [sl, ip]
 802dc42:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802dc46:	9202      	str	r2, [sp, #8]
 802dc48:	0e12      	lsrs	r2, r2, #24
 802dc4a:	9201      	str	r2, [sp, #4]
 802dc4c:	3001      	adds	r0, #1
 802dc4e:	d420      	bmi.n	802dc92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dc50:	4584      	cmp	ip, r0
 802dc52:	dd1e      	ble.n	802dc92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dc54:	b337      	cbz	r7, 802dca4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2bc>
 802dc56:	44d4      	add	ip, sl
 802dc58:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802dc5c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802dc60:	9303      	str	r3, [sp, #12]
 802dc62:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802dc66:	e6ea      	b.n	802da3e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc68:	2600      	movs	r6, #0
 802dc6a:	46b0      	mov	r8, r6
 802dc6c:	e6db      	b.n	802da26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dc6e:	2f0f      	cmp	r7, #15
 802dc70:	d822      	bhi.n	802dcb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dc72:	b2bb      	uxth	r3, r7
 802dc74:	4628      	mov	r0, r5
 802dc76:	46ab      	mov	fp, r5
 802dc78:	46aa      	mov	sl, r5
 802dc7a:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802dc7e:	46ac      	mov	ip, r5
 802dc80:	9501      	str	r5, [sp, #4]
 802dc82:	e6ee      	b.n	802da62 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 802dc84:	f81e 6008 	ldrb.w	r6, [lr, r8]
 802dc88:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
 802dc8c:	ea4f 691e 	mov.w	r9, lr, lsr #24
 802dc90:	e7bd      	b.n	802dc0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x226>
 802dc92:	f04f 0c00 	mov.w	ip, #0
 802dc96:	f8cd c00c 	str.w	ip, [sp, #12]
 802dc9a:	e6d0      	b.n	802da3e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc9c:	2200      	movs	r2, #0
 802dc9e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 802dca2:	e7d3      	b.n	802dc4c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 802dca4:	9703      	str	r7, [sp, #12]
 802dca6:	46bc      	mov	ip, r7
 802dca8:	e6cc      	b.n	802da44 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dcaa:	46b8      	mov	r8, r7
 802dcac:	e9cd 7702 	strd	r7, r7, [sp, #8]
 802dcb0:	46bc      	mov	ip, r7
 802dcb2:	9701      	str	r7, [sp, #4]
 802dcb4:	463e      	mov	r6, r7
 802dcb6:	e6c5      	b.n	802da44 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dcb8:	4b03      	ldr	r3, [pc, #12]	@ (802dcc8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e0>)
 802dcba:	4a04      	ldr	r2, [pc, #16]	@ (802dccc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e4>)
 802dcbc:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802dcc0:	4803      	ldr	r0, [pc, #12]	@ (802dcd0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e8>)
 802dcc2:	f004 fc21 	bl	8032508 <__assert_func>
 802dcc6:	bf00      	nop
 802dcc8:	080366e4 	.word	0x080366e4
 802dccc:	08036d60 	.word	0x08036d60
 802dcd0:	0803686c 	.word	0x0803686c

0802dcd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802dcd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dcd8:	ed2d 8b08 	vpush	{d8-d11}
 802dcdc:	b0a9      	sub	sp, #164	@ 0xa4
 802dcde:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802dce0:	9022      	str	r0, [sp, #136]	@ 0x88
 802dce2:	9114      	str	r1, [sp, #80]	@ 0x50
 802dce4:	6860      	ldr	r0, [r4, #4]
 802dce6:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802dce8:	9217      	str	r2, [sp, #92]	@ 0x5c
 802dcea:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802dcec:	eeb0 aa40 	vmov.f32	s20, s0
 802dcf0:	fb00 1b02 	mla	fp, r0, r2, r1
 802dcf4:	6821      	ldr	r1, [r4, #0]
 802dcf6:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802dcfa:	eb01 0800 	add.w	r8, r1, r0
 802dcfe:	e9dd ab3b 	ldrd	sl, fp, [sp, #236]	@ 0xec
 802dd02:	eef0 9a60 	vmov.f32	s19, s1
 802dd06:	eeb0 9a41 	vmov.f32	s18, s2
 802dd0a:	eef0 8a62 	vmov.f32	s17, s5
 802dd0e:	eeb0 8a43 	vmov.f32	s16, s6
 802dd12:	eef0 ba44 	vmov.f32	s23, s8
 802dd16:	eeb0 ba64 	vmov.f32	s22, s9
 802dd1a:	eef0 aa45 	vmov.f32	s21, s10
 802dd1e:	46c1      	mov	r9, r8
 802dd20:	465f      	mov	r7, fp
 802dd22:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dd24:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802dd26:	6852      	ldr	r2, [r2, #4]
 802dd28:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802dd2c:	3204      	adds	r2, #4
 802dd2e:	682d      	ldr	r5, [r5, #0]
 802dd30:	920a      	str	r2, [sp, #40]	@ 0x28
 802dd32:	b2a2      	uxth	r2, r4
 802dd34:	9423      	str	r4, [sp, #140]	@ 0x8c
 802dd36:	9511      	str	r5, [sp, #68]	@ 0x44
 802dd38:	9216      	str	r2, [sp, #88]	@ 0x58
 802dd3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802dd3c:	2a00      	cmp	r2, #0
 802dd3e:	dc02      	bgt.n	802dd46 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802dd40:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802dd42:	2a00      	cmp	r2, #0
 802dd44:	dd65      	ble.n	802de12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dd46:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dd48:	2b00      	cmp	r3, #0
 802dd4a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802dd4e:	b235      	sxth	r5, r6
 802dd50:	fa0f f88c 	sxth.w	r8, ip
 802dd54:	f340 838b 	ble.w	802e46e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 802dd58:	1e6c      	subs	r4, r5, #1
 802dd5a:	f108 3eff 	add.w	lr, r8, #4294967295
 802dd5e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802dd62:	e9dd cb3d 	ldrd	ip, fp, [sp, #244]	@ 0xf4
 802dd66:	ea5f 422a 	movs.w	r2, sl, asr #16
 802dd6a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802dd6e:	d405      	bmi.n	802dd7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd70:	42a2      	cmp	r2, r4
 802dd72:	da03      	bge.n	802dd7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd74:	2900      	cmp	r1, #0
 802dd76:	db01      	blt.n	802dd7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd78:	4571      	cmp	r1, lr
 802dd7a:	db4f      	blt.n	802de1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802dd7c:	1c50      	adds	r0, r2, #1
 802dd7e:	d406      	bmi.n	802dd8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd80:	42a8      	cmp	r0, r5
 802dd82:	dc04      	bgt.n	802dd8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd84:	1c48      	adds	r0, r1, #1
 802dd86:	d402      	bmi.n	802dd8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd88:	4540      	cmp	r0, r8
 802dd8a:	f340 834c 	ble.w	802e426 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802dd8e:	3b01      	subs	r3, #1
 802dd90:	44e2      	add	sl, ip
 802dd92:	445f      	add	r7, fp
 802dd94:	f109 0903 	add.w	r9, r9, #3
 802dd98:	d1e5      	bne.n	802dd66 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802dd9a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802dd9c:	2b00      	cmp	r3, #0
 802dd9e:	dd38      	ble.n	802de12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dda0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802dda4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802dda8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ddac:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ddb0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ddb4:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ddb8:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ddbc:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ddc0:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ddc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ddc8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ddcc:	ee16 2a90 	vmov	r2, s13
 802ddd0:	3b01      	subs	r3, #1
 802ddd2:	9314      	str	r3, [sp, #80]	@ 0x50
 802ddd4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ddd6:	fb92 f3f3 	sdiv	r3, r2, r3
 802ddda:	ee17 2a10 	vmov	r2, s14
 802ddde:	eeb0 7a48 	vmov.f32	s14, s16
 802dde2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dde6:	ee17 7a10 	vmov	r7, s14
 802ddea:	eeb0 7a68 	vmov.f32	s14, s17
 802ddee:	933d      	str	r3, [sp, #244]	@ 0xf4
 802ddf0:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ddf2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ddf6:	fb92 f3f3 	sdiv	r3, r2, r3
 802ddfa:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802ddfc:	933e      	str	r3, [sp, #248]	@ 0xf8
 802ddfe:	ee17 aa10 	vmov	sl, s14
 802de02:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802de04:	eeb0 8a67 	vmov.f32	s16, s15
 802de08:	eef0 8a46 	vmov.f32	s17, s12
 802de0c:	bf08      	it	eq
 802de0e:	4613      	moveq	r3, r2
 802de10:	e793      	b.n	802dd3a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802de12:	b029      	add	sp, #164	@ 0xa4
 802de14:	ecbd 8b08 	vpop	{d8-d11}
 802de18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802de1c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802de20:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802de22:	1e59      	subs	r1, r3, #1
 802de24:	fb00 a201 	mla	r2, r0, r1, sl
 802de28:	1412      	asrs	r2, r2, #16
 802de2a:	9109      	str	r1, [sp, #36]	@ 0x24
 802de2c:	f100 8168 	bmi.w	802e100 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de30:	42a2      	cmp	r2, r4
 802de32:	f280 8165 	bge.w	802e100 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de36:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802de38:	fb02 7201 	mla	r2, r2, r1, r7
 802de3c:	1412      	asrs	r2, r2, #16
 802de3e:	f100 815f 	bmi.w	802e100 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de42:	f108 31ff 	add.w	r1, r8, #4294967295
 802de46:	428a      	cmp	r2, r1
 802de48:	f280 815a 	bge.w	802e100 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de4c:	2b00      	cmp	r3, #0
 802de4e:	dda4      	ble.n	802dd9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802de50:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802de54:	444b      	add	r3, r9
 802de56:	9310      	str	r3, [sp, #64]	@ 0x40
 802de58:	f109 0303 	add.w	r3, r9, #3
 802de5c:	9309      	str	r3, [sp, #36]	@ 0x24
 802de5e:	46d1      	mov	r9, sl
 802de60:	973c      	str	r7, [sp, #240]	@ 0xf0
 802de62:	462e      	mov	r6, r5
 802de64:	463b      	mov	r3, r7
 802de66:	e12b      	b.n	802e0c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802de68:	785f      	ldrb	r7, [r3, #1]
 802de6a:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 802de6e:	9712      	str	r7, [sp, #72]	@ 0x48
 802de70:	0e3f      	lsrs	r7, r7, #24
 802de72:	970b      	str	r7, [sp, #44]	@ 0x2c
 802de74:	b16a      	cbz	r2, 802de92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802de76:	199f      	adds	r7, r3, r6
 802de78:	5d9b      	ldrb	r3, [r3, r6]
 802de7a:	4626      	mov	r6, r4
 802de7c:	787f      	ldrb	r7, [r7, #1]
 802de7e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802de82:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 802de86:	9313      	str	r3, [sp, #76]	@ 0x4c
 802de88:	9415      	str	r4, [sp, #84]	@ 0x54
 802de8a:	0e1b      	lsrs	r3, r3, #24
 802de8c:	0e24      	lsrs	r4, r4, #24
 802de8e:	940d      	str	r4, [sp, #52]	@ 0x34
 802de90:	930c      	str	r3, [sp, #48]	@ 0x30
 802de92:	fa1f fc81 	uxth.w	ip, r1
 802de96:	b292      	uxth	r2, r2
 802de98:	fb0c f602 	mul.w	r6, ip, r2
 802de9c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802dea0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802dea2:	ebac 0706 	sub.w	r7, ip, r6
 802dea6:	b2bf      	uxth	r7, r7
 802dea8:	fb07 f103 	mul.w	r1, r7, r3
 802deac:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802deb0:	b292      	uxth	r2, r2
 802deb2:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 802deb6:	1a9b      	subs	r3, r3, r2
 802deb8:	b29b      	uxth	r3, r3
 802deba:	fb03 1100 	mla	r1, r3, r0, r1
 802debe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802dec0:	fb02 1104 	mla	r1, r2, r4, r1
 802dec4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802dec6:	fb06 1104 	mla	r1, r6, r4, r1
 802deca:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802dece:	2900      	cmp	r1, #0
 802ded0:	f000 80e5 	beq.w	802e09e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802ded4:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802ded8:	28ff      	cmp	r0, #255	@ 0xff
 802deda:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802dede:	940e      	str	r4, [sp, #56]	@ 0x38
 802dee0:	950f      	str	r5, [sp, #60]	@ 0x3c
 802dee2:	d01d      	beq.n	802df20 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 802dee4:	fb04 fe00 	mul.w	lr, r4, r0
 802dee8:	fb05 f800 	mul.w	r8, r5, r0
 802deec:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802def0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802def4:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802def8:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802defc:	44ae      	add	lr, r5
 802defe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802df02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802df06:	0a00      	lsrs	r0, r0, #8
 802df08:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802df0c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802df10:	ea4e 0e00 	orr.w	lr, lr, r0
 802df14:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802df18:	900e      	str	r0, [sp, #56]	@ 0x38
 802df1a:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802df1e:	900f      	str	r0, [sp, #60]	@ 0x3c
 802df20:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802df22:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802df26:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 802df2a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802df2c:	28ff      	cmp	r0, #255	@ 0xff
 802df2e:	d01c      	beq.n	802df6a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802df30:	fb0e fe00 	mul.w	lr, lr, r0
 802df34:	fb08 f800 	mul.w	r8, r8, r0
 802df38:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802df3c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802df40:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802df44:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802df48:	44ae      	add	lr, r5
 802df4a:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802df4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802df52:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802df56:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802df5a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802df5e:	ea4e 0808 	orr.w	r8, lr, r8
 802df62:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802df66:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802df6a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802df6c:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802df70:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802df74:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802df76:	28ff      	cmp	r0, #255	@ 0xff
 802df78:	d01c      	beq.n	802dfb4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802df7a:	fb0c fc00 	mul.w	ip, ip, r0
 802df7e:	fb0a fa00 	mul.w	sl, sl, r0
 802df82:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802df86:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802df8a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802df8e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802df92:	44ac      	add	ip, r5
 802df94:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802df98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802df9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802dfa0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802dfa4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802dfa8:	ea4c 0a0a 	orr.w	sl, ip, sl
 802dfac:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 802dfb0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802dfb4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802dfb6:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802dfba:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802dfbe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802dfc0:	2cff      	cmp	r4, #255	@ 0xff
 802dfc2:	d019      	beq.n	802dff8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802dfc4:	fb00 f004 	mul.w	r0, r0, r4
 802dfc8:	fb0b fb04 	mul.w	fp, fp, r4
 802dfcc:	0a05      	lsrs	r5, r0, #8
 802dfce:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802dfd2:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802dfd6:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 802dfda:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 802dfde:	4420      	add	r0, r4
 802dfe0:	0a00      	lsrs	r0, r0, #8
 802dfe2:	0a2d      	lsrs	r5, r5, #8
 802dfe4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802dfe8:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 802dfec:	ea40 0b0b 	orr.w	fp, r0, fp
 802dff0:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802dff4:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802dff8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802dffa:	fb0e fe07 	mul.w	lr, lr, r7
 802dffe:	fb01 f104 	mul.w	r1, r1, r4
 802e002:	1c4d      	adds	r5, r1, #1
 802e004:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802e008:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802e00c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802e00e:	fb08 f707 	mul.w	r7, r8, r7
 802e012:	fb05 ee03 	mla	lr, r5, r3, lr
 802e016:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802e018:	fb0c ee02 	mla	lr, ip, r2, lr
 802e01c:	fb05 7703 	mla	r7, r5, r3, r7
 802e020:	fb0a 7702 	mla	r7, sl, r2, r7
 802e024:	fb00 ee06 	mla	lr, r0, r6, lr
 802e028:	fb0b 7706 	mla	r7, fp, r6, r7
 802e02c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e02e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e032:	0a3f      	lsrs	r7, r7, #8
 802e034:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802e038:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e03c:	ea4e 0307 	orr.w	r3, lr, r7
 802e040:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 802e044:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 802e048:	b2c9      	uxtb	r1, r1
 802e04a:	fa5f fc83 	uxtb.w	ip, r3
 802e04e:	fb16 f601 	smulbb	r6, r6, r1
 802e052:	fb17 f701 	smulbb	r7, r7, r1
 802e056:	fb1c fc04 	smulbb	ip, ip, r4
 802e05a:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 802e05e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802e062:	0c1b      	lsrs	r3, r3, #16
 802e064:	fb00 c101 	mla	r1, r0, r1, ip
 802e068:	fb03 6304 	mla	r3, r3, r4, r6
 802e06c:	fb02 7204 	mla	r2, r2, r4, r7
 802e070:	b289      	uxth	r1, r1
 802e072:	b292      	uxth	r2, r2
 802e074:	b29b      	uxth	r3, r3
 802e076:	f101 0e01 	add.w	lr, r1, #1
 802e07a:	1c56      	adds	r6, r2, #1
 802e07c:	1c5d      	adds	r5, r3, #1
 802e07e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e080:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802e084:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802e088:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802e08c:	1209      	asrs	r1, r1, #8
 802e08e:	1212      	asrs	r2, r2, #8
 802e090:	121b      	asrs	r3, r3, #8
 802e092:	f800 1c03 	strb.w	r1, [r0, #-3]
 802e096:	f800 2c02 	strb.w	r2, [r0, #-2]
 802e09a:	f800 3c01 	strb.w	r3, [r0, #-1]
 802e09e:	9b3d      	ldr	r3, [sp, #244]	@ 0xf4
 802e0a0:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e0a2:	4499      	add	r9, r3
 802e0a4:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e0a6:	4413      	add	r3, r2
 802e0a8:	933c      	str	r3, [sp, #240]	@ 0xf0
 802e0aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802e0ac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802e0ae:	4293      	cmp	r3, r2
 802e0b0:	d024      	beq.n	802e0fc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802e0b2:	4613      	mov	r3, r2
 802e0b4:	3303      	adds	r3, #3
 802e0b6:	9309      	str	r3, [sp, #36]	@ 0x24
 802e0b8:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802e0ba:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802e0be:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e0c0:	ea4f 4229 	mov.w	r2, r9, asr #16
 802e0c4:	141b      	asrs	r3, r3, #16
 802e0c6:	fb06 2303 	mla	r3, r6, r3, r2
 802e0ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802e0cc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802e0ce:	5cc2      	ldrb	r2, [r0, r3]
 802e0d0:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802e0d4:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 802e0d8:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802e0da:	4403      	add	r3, r0
 802e0dc:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802e0e0:	0e28      	lsrs	r0, r5, #24
 802e0e2:	2900      	cmp	r1, #0
 802e0e4:	f47f aec0 	bne.w	802de68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x194>
 802e0e8:	2a00      	cmp	r2, #0
 802e0ea:	f43f aed2 	beq.w	802de92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e0ee:	5d9b      	ldrb	r3, [r3, r6]
 802e0f0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802e0f4:	9313      	str	r3, [sp, #76]	@ 0x4c
 802e0f6:	0e1b      	lsrs	r3, r3, #24
 802e0f8:	930c      	str	r3, [sp, #48]	@ 0x30
 802e0fa:	e6ca      	b.n	802de92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e0fc:	4699      	mov	r9, r3
 802e0fe:	e64c      	b.n	802dd9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e100:	2b00      	cmp	r3, #0
 802e102:	f77f ae4a 	ble.w	802dd9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e106:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 802e10a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e10e:	1439      	asrs	r1, r7, #16
 802e110:	2a00      	cmp	r2, #0
 802e112:	46cb      	mov	fp, r9
 802e114:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 802e118:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802e11a:	e9dd 953d 	ldrd	r9, r5, [sp, #244]	@ 0xf4
 802e11e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e122:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e126:	f2c0 8154 	blt.w	802e3d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e12a:	1e73      	subs	r3, r6, #1
 802e12c:	429a      	cmp	r2, r3
 802e12e:	f280 8150 	bge.w	802e3d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e132:	2900      	cmp	r1, #0
 802e134:	f2c0 814d 	blt.w	802e3d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e138:	f10c 33ff 	add.w	r3, ip, #4294967295
 802e13c:	4299      	cmp	r1, r3
 802e13e:	f280 8148 	bge.w	802e3d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e142:	b236      	sxth	r6, r6
 802e144:	fb01 2206 	mla	r2, r1, r6, r2
 802e148:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802e14a:	5c8b      	ldrb	r3, [r1, r2]
 802e14c:	440a      	add	r2, r1
 802e14e:	9210      	str	r2, [sp, #64]	@ 0x40
 802e150:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802e152:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802e156:	930e      	str	r3, [sp, #56]	@ 0x38
 802e158:	0e1b      	lsrs	r3, r3, #24
 802e15a:	2800      	cmp	r0, #0
 802e15c:	f000 8169 	beq.w	802e432 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 802e160:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e162:	f891 c001 	ldrb.w	ip, [r1, #1]
 802e166:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e16a:	9224      	str	r2, [sp, #144]	@ 0x90
 802e16c:	0e12      	lsrs	r2, r2, #24
 802e16e:	9218      	str	r2, [sp, #96]	@ 0x60
 802e170:	f1be 0f00 	cmp.w	lr, #0
 802e174:	f040 816a 	bne.w	802e44c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802e178:	b280      	uxth	r0, r0
 802e17a:	fa1f fc8e 	uxth.w	ip, lr
 802e17e:	fb00 f20c 	mul.w	r2, r0, ip
 802e182:	4611      	mov	r1, r2
 802e184:	0106      	lsls	r6, r0, #4
 802e186:	1ab0      	subs	r0, r6, r2
 802e188:	9210      	str	r2, [sp, #64]	@ 0x40
 802e18a:	b282      	uxth	r2, r0
 802e18c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802e18e:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 802e192:	fb02 f000 	mul.w	r0, r2, r0
 802e196:	921b      	str	r2, [sp, #108]	@ 0x6c
 802e198:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802e19c:	fa1f f28c 	uxth.w	r2, ip
 802e1a0:	1ab6      	subs	r6, r6, r2
 802e1a2:	b2b6      	uxth	r6, r6
 802e1a4:	fb06 0c03 	mla	ip, r6, r3, r0
 802e1a8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802e1aa:	921c      	str	r2, [sp, #112]	@ 0x70
 802e1ac:	fb02 cc00 	mla	ip, r2, r0, ip
 802e1b0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e1b2:	961d      	str	r6, [sp, #116]	@ 0x74
 802e1b4:	fb01 cc02 	mla	ip, r1, r2, ip
 802e1b8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802e1bc:	f1bc 0f00 	cmp.w	ip, #0
 802e1c0:	f000 80f1 	beq.w	802e3a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e1c4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802e1c6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802e1c8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e1cc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802e1d0:	2bff      	cmp	r3, #255	@ 0xff
 802e1d2:	921e      	str	r2, [sp, #120]	@ 0x78
 802e1d4:	910e      	str	r1, [sp, #56]	@ 0x38
 802e1d6:	d01b      	beq.n	802e210 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 802e1d8:	fb01 f103 	mul.w	r1, r1, r3
 802e1dc:	fb02 f203 	mul.w	r2, r2, r3
 802e1e0:	460b      	mov	r3, r1
 802e1e2:	0a11      	lsrs	r1, r2, #8
 802e1e4:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 802e1e8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1ec:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802e1f0:	4431      	add	r1, r6
 802e1f2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802e1f6:	0a09      	lsrs	r1, r1, #8
 802e1f8:	0a1b      	lsrs	r3, r3, #8
 802e1fa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1fe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e202:	430b      	orrs	r3, r1
 802e204:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802e208:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e20c:	921e      	str	r2, [sp, #120]	@ 0x78
 802e20e:	930e      	str	r3, [sp, #56]	@ 0x38
 802e210:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802e212:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802e214:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e218:	29ff      	cmp	r1, #255	@ 0xff
 802e21a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802e21e:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e220:	9220      	str	r2, [sp, #128]	@ 0x80
 802e222:	d01b      	beq.n	802e25c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 802e224:	fb03 f301 	mul.w	r3, r3, r1
 802e228:	fb02 f201 	mul.w	r2, r2, r1
 802e22c:	0a19      	lsrs	r1, r3, #8
 802e22e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e232:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e236:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802e23a:	4401      	add	r1, r0
 802e23c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802e240:	0a09      	lsrs	r1, r1, #8
 802e242:	0a1b      	lsrs	r3, r3, #8
 802e244:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e248:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e24c:	ea41 0003 	orr.w	r0, r1, r3
 802e250:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802e254:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e256:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802e25a:	9320      	str	r3, [sp, #128]	@ 0x80
 802e25c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802e25e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802e260:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e264:	2aff      	cmp	r2, #255	@ 0xff
 802e266:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e26a:	9321      	str	r3, [sp, #132]	@ 0x84
 802e26c:	d01a      	beq.n	802e2a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d0>
 802e26e:	fb03 f302 	mul.w	r3, r3, r2
 802e272:	4618      	mov	r0, r3
 802e274:	fb06 f602 	mul.w	r6, r6, r2
 802e278:	0a31      	lsrs	r1, r6, #8
 802e27a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e27e:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802e282:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802e286:	440e      	add	r6, r1
 802e288:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802e28c:	0a36      	lsrs	r6, r6, #8
 802e28e:	0a1b      	lsrs	r3, r3, #8
 802e290:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802e294:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e298:	4333      	orrs	r3, r6
 802e29a:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e29e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e2a2:	9321      	str	r3, [sp, #132]	@ 0x84
 802e2a4:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802e2a6:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e2aa:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802e2ae:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e2b0:	2aff      	cmp	r2, #255	@ 0xff
 802e2b2:	d01a      	beq.n	802e2ea <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x616>
 802e2b4:	fb03 f302 	mul.w	r3, r3, r2
 802e2b8:	fb0e fe02 	mul.w	lr, lr, r2
 802e2bc:	0a19      	lsrs	r1, r3, #8
 802e2be:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e2c2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e2c6:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 802e2ca:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802e2ce:	4401      	add	r1, r0
 802e2d0:	0a09      	lsrs	r1, r1, #8
 802e2d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e2d6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e2da:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e2de:	ea41 0e0e 	orr.w	lr, r1, lr
 802e2e2:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802e2e6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e2ea:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e2ec:	fb0c f102 	mul.w	r1, ip, r2
 802e2f0:	1c48      	adds	r0, r1, #1
 802e2f2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802e2f6:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 802e2fa:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802e2fc:	9225      	str	r2, [sp, #148]	@ 0x94
 802e2fe:	4684      	mov	ip, r0
 802e300:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802e302:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802e304:	fb0c fc02 	mul.w	ip, ip, r2
 802e308:	fb00 f002 	mul.w	r0, r0, r2
 802e30c:	4601      	mov	r1, r0
 802e30e:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802e310:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802e312:	fb00 cc02 	mla	ip, r0, r2, ip
 802e316:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802e318:	fb00 1102 	mla	r1, r0, r2, r1
 802e31c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802e31e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 802e320:	fb06 c602 	mla	r6, r6, r2, ip
 802e324:	fb00 1002 	mla	r0, r0, r2, r1
 802e328:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e32a:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 802e32e:	fb03 6602 	mla	r6, r3, r2, r6
 802e332:	fb0e 0302 	mla	r3, lr, r2, r0
 802e336:	0a32      	lsrs	r2, r6, #8
 802e338:	0a1b      	lsrs	r3, r3, #8
 802e33a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 802e33e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e342:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e346:	4313      	orrs	r3, r2
 802e348:	fb16 f001 	smulbb	r0, r6, r1
 802e34c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e34e:	fa5f fe83 	uxtb.w	lr, r3
 802e352:	fb1e fe02 	smulbb	lr, lr, r2
 802e356:	f89b c001 	ldrb.w	ip, [fp, #1]
 802e35a:	900e      	str	r0, [sp, #56]	@ 0x38
 802e35c:	f89b 0000 	ldrb.w	r0, [fp]
 802e360:	fb1c fc01 	smulbb	ip, ip, r1
 802e364:	fb00 e001 	mla	r0, r0, r1, lr
 802e368:	4611      	mov	r1, r2
 802e36a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802e36e:	fb06 c202 	mla	r2, r6, r2, ip
 802e372:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802e374:	0c1b      	lsrs	r3, r3, #16
 802e376:	fb03 6301 	mla	r3, r3, r1, r6
 802e37a:	b280      	uxth	r0, r0
 802e37c:	b296      	uxth	r6, r2
 802e37e:	b29b      	uxth	r3, r3
 802e380:	1c5a      	adds	r2, r3, #1
 802e382:	f100 0c01 	add.w	ip, r0, #1
 802e386:	1c71      	adds	r1, r6, #1
 802e388:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802e38c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802e390:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802e394:	1200      	asrs	r0, r0, #8
 802e396:	120a      	asrs	r2, r1, #8
 802e398:	121b      	asrs	r3, r3, #8
 802e39a:	f88b 0000 	strb.w	r0, [fp]
 802e39e:	f88b 2001 	strb.w	r2, [fp, #1]
 802e3a2:	f88b 3002 	strb.w	r3, [fp, #2]
 802e3a6:	f1b8 0f00 	cmp.w	r8, #0
 802e3aa:	f10b 0b03 	add.w	fp, fp, #3
 802e3ae:	44ca      	add	sl, r9
 802e3b0:	442f      	add	r7, r5
 802e3b2:	dd2e      	ble.n	802e412 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e3b4:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802e3b8:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e3bc:	2a00      	cmp	r2, #0
 802e3be:	f108 38ff 	add.w	r8, r8, #4294967295
 802e3c2:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e3c6:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e3ca:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e3ce:	f6bf aeac 	bge.w	802e12a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802e3d2:	1c53      	adds	r3, r2, #1
 802e3d4:	d4e7      	bmi.n	802e3a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3d6:	42b3      	cmp	r3, r6
 802e3d8:	dce5      	bgt.n	802e3a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3da:	1c4b      	adds	r3, r1, #1
 802e3dc:	d4e3      	bmi.n	802e3a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3de:	4563      	cmp	r3, ip
 802e3e0:	dce1      	bgt.n	802e3a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3e2:	fa0f f38c 	sxth.w	r3, ip
 802e3e6:	b236      	sxth	r6, r6
 802e3e8:	e9cd 6300 	strd	r6, r3, [sp]
 802e3ec:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802e3ee:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802e3f2:	e9cd e305 	strd	lr, r3, [sp, #20]
 802e3f6:	9202      	str	r2, [sp, #8]
 802e3f8:	4659      	mov	r1, fp
 802e3fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802e3fc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e3fe:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802e400:	f7ff faf2 	bl	802d9e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 802e404:	f1b8 0f00 	cmp.w	r8, #0
 802e408:	f10b 0b03 	add.w	fp, fp, #3
 802e40c:	44ca      	add	sl, r9
 802e40e:	442f      	add	r7, r5
 802e410:	dcd0      	bgt.n	802e3b4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802e412:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802e414:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 802e418:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802e41c:	3301      	adds	r3, #1
 802e41e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e422:	4499      	add	r9, r3
 802e424:	e4b9      	b.n	802dd9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e426:	3b01      	subs	r3, #1
 802e428:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e42c:	4698      	mov	r8, r3
 802e42e:	9309      	str	r3, [sp, #36]	@ 0x24
 802e430:	e66e      	b.n	802e110 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802e432:	f1be 0f00 	cmp.w	lr, #0
 802e436:	f43f ae9f 	beq.w	802e178 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e43a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e43c:	5d92      	ldrb	r2, [r2, r6]
 802e43e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e440:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802e444:	9226      	str	r2, [sp, #152]	@ 0x98
 802e446:	0e12      	lsrs	r2, r2, #24
 802e448:	9219      	str	r2, [sp, #100]	@ 0x64
 802e44a:	e695      	b.n	802e178 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e44c:	eb01 0c06 	add.w	ip, r1, r6
 802e450:	f89c c001 	ldrb.w	ip, [ip, #1]
 802e454:	5d89      	ldrb	r1, [r1, r6]
 802e456:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e458:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802e45c:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 802e460:	9227      	str	r2, [sp, #156]	@ 0x9c
 802e462:	0e12      	lsrs	r2, r2, #24
 802e464:	921a      	str	r2, [sp, #104]	@ 0x68
 802e466:	0e32      	lsrs	r2, r6, #24
 802e468:	9626      	str	r6, [sp, #152]	@ 0x98
 802e46a:	9219      	str	r2, [sp, #100]	@ 0x64
 802e46c:	e684      	b.n	802e178 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e46e:	f43f ac94 	beq.w	802dd9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e472:	1e6c      	subs	r4, r5, #1
 802e474:	e4d4      	b.n	802de20 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802e476:	bf00      	nop

0802e478 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 802e478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e47c:	b089      	sub	sp, #36	@ 0x24
 802e47e:	f9bd b048 	ldrsh.w	fp, [sp, #72]	@ 0x48
 802e482:	e9dd 4014 	ldrd	r4, r0, [sp, #80]	@ 0x50
 802e486:	fb00 450b 	mla	r5, r0, fp, r4
 802e48a:	2800      	cmp	r0, #0
 802e48c:	4694      	mov	ip, r2
 802e48e:	f100 0601 	add.w	r6, r0, #1
 802e492:	442a      	add	r2, r5
 802e494:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802e498:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 802e49c:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 802e4a0:	db02      	blt.n	802e4a8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x30>
 802e4a2:	4580      	cmp	r8, r0
 802e4a4:	f300 810a 	bgt.w	802e6bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x244>
 802e4a8:	f04f 0c00 	mov.w	ip, #0
 802e4ac:	46e6      	mov	lr, ip
 802e4ae:	4665      	mov	r5, ip
 802e4b0:	46e1      	mov	r9, ip
 802e4b2:	2e00      	cmp	r6, #0
 802e4b4:	db02      	blt.n	802e4bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x44>
 802e4b6:	45b0      	cmp	r8, r6
 802e4b8:	f300 811a 	bgt.w	802e6f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x278>
 802e4bc:	2400      	movs	r4, #0
 802e4be:	46a0      	mov	r8, r4
 802e4c0:	e9cd 4403 	strd	r4, r4, [sp, #12]
 802e4c4:	f1ba 0f0f 	cmp.w	sl, #15
 802e4c8:	f200 8158 	bhi.w	802e77c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e4cc:	2f0f      	cmp	r7, #15
 802e4ce:	f200 8155 	bhi.w	802e77c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e4d2:	b2ba      	uxth	r2, r7
 802e4d4:	fa1f f38a 	uxth.w	r3, sl
 802e4d8:	fb02 f703 	mul.w	r7, r2, r3
 802e4dc:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802e4e0:	b292      	uxth	r2, r2
 802e4e2:	fb02 fa08 	mul.w	sl, r2, r8
 802e4e6:	fb07 fb04 	mul.w	fp, r7, r4
 802e4ea:	011b      	lsls	r3, r3, #4
 802e4ec:	1bd8      	subs	r0, r3, r7
 802e4ee:	b280      	uxth	r0, r0
 802e4f0:	9001      	str	r0, [sp, #4]
 802e4f2:	fb00 f00c 	mul.w	r0, r0, ip
 802e4f6:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802e4fa:	1a9b      	subs	r3, r3, r2
 802e4fc:	b29b      	uxth	r3, r3
 802e4fe:	fb03 000e 	mla	r0, r3, lr, r0
 802e502:	4450      	add	r0, sl
 802e504:	4458      	add	r0, fp
 802e506:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802e50a:	9002      	str	r0, [sp, #8]
 802e50c:	2800      	cmp	r0, #0
 802e50e:	f000 80d2 	beq.w	802e6b6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 802e512:	f009 10ff 	and.w	r0, r9, #16711935	@ 0xff00ff
 802e516:	f409 467f 	and.w	r6, r9, #65280	@ 0xff00
 802e51a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802e51e:	9005      	str	r0, [sp, #20]
 802e520:	9606      	str	r6, [sp, #24]
 802e522:	d01e      	beq.n	802e562 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xea>
 802e524:	fb00 fb0e 	mul.w	fp, r0, lr
 802e528:	fb06 fe0e 	mul.w	lr, r6, lr
 802e52c:	ea4f 201b 	mov.w	r0, fp, lsr #8
 802e530:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e534:	f50e 7a80 	add.w	sl, lr, #256	@ 0x100
 802e538:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802e53c:	4483      	add	fp, r0
 802e53e:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 802e542:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802e546:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802e54a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802e54e:	f40a 4e7f 	and.w	lr, sl, #65280	@ 0xff00
 802e552:	ea4b 0e0e 	orr.w	lr, fp, lr
 802e556:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e55a:	9005      	str	r0, [sp, #20]
 802e55c:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802e560:	9006      	str	r0, [sp, #24]
 802e562:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e566:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802e56a:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e56e:	9007      	str	r0, [sp, #28]
 802e570:	d01d      	beq.n	802e5ae <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x136>
 802e572:	fb0a fa0c 	mul.w	sl, sl, ip
 802e576:	fb00 f50c 	mul.w	r5, r0, ip
 802e57a:	ea4f 201a 	mov.w	r0, sl, lsr #8
 802e57e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e582:	f505 7b80 	add.w	fp, r5, #256	@ 0x100
 802e586:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802e58a:	4482      	add	sl, r0
 802e58c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802e590:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e594:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802e598:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802e59c:	f40b 457f 	and.w	r5, fp, #65280	@ 0xff00
 802e5a0:	ea4a 0505 	orr.w	r5, sl, r5
 802e5a4:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e5a8:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e5ac:	9007      	str	r0, [sp, #28]
 802e5ae:	9803      	ldr	r0, [sp, #12]
 802e5b0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802e5b4:	f000 19ff 	and.w	r9, r0, #16711935	@ 0xff00ff
 802e5b8:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e5bc:	d01b      	beq.n	802e5f6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x17e>
 802e5be:	fb09 f908 	mul.w	r9, r9, r8
 802e5c2:	fb06 f608 	mul.w	r6, r6, r8
 802e5c6:	ea4f 2c19 	mov.w	ip, r9, lsr #8
 802e5ca:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802e5ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e5d2:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 802e5d6:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802e5da:	44e1      	add	r9, ip
 802e5dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802e5e0:	0a30      	lsrs	r0, r6, #8
 802e5e2:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802e5e6:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e5ea:	ea49 0606 	orr.w	r6, r9, r6
 802e5ee:	f006 19ff 	and.w	r9, r6, #16711935	@ 0xff00ff
 802e5f2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802e5f6:	9d04      	ldr	r5, [sp, #16]
 802e5f8:	2cff      	cmp	r4, #255	@ 0xff
 802e5fa:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802e5fe:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802e602:	d01a      	beq.n	802e63a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1c2>
 802e604:	fb00 f004 	mul.w	r0, r0, r4
 802e608:	fb0e f404 	mul.w	r4, lr, r4
 802e60c:	ea4f 2c10 	mov.w	ip, r0, lsr #8
 802e610:	f504 7e80 	add.w	lr, r4, #256	@ 0x100
 802e614:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e618:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e61c:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
 802e620:	4460      	add	r0, ip
 802e622:	0a00      	lsrs	r0, r0, #8
 802e624:	0a24      	lsrs	r4, r4, #8
 802e626:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e62a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802e62e:	ea40 0e0e 	orr.w	lr, r0, lr
 802e632:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e636:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e63a:	9c02      	ldr	r4, [sp, #8]
 802e63c:	9d07      	ldr	r5, [sp, #28]
 802e63e:	ea6f 0c04 	mvn.w	ip, r4
 802e642:	9c01      	ldr	r4, [sp, #4]
 802e644:	fa5f fc8c 	uxtb.w	ip, ip
 802e648:	fb0a fb04 	mul.w	fp, sl, r4
 802e64c:	fb05 f504 	mul.w	r5, r5, r4
 802e650:	9c05      	ldr	r4, [sp, #20]
 802e652:	fb04 bb03 	mla	fp, r4, r3, fp
 802e656:	9c06      	ldr	r4, [sp, #24]
 802e658:	fb09 b902 	mla	r9, r9, r2, fp
 802e65c:	fb04 5303 	mla	r3, r4, r3, r5
 802e660:	fb06 3602 	mla	r6, r6, r2, r3
 802e664:	780c      	ldrb	r4, [r1, #0]
 802e666:	fb00 9007 	mla	r0, r0, r7, r9
 802e66a:	784a      	ldrb	r2, [r1, #1]
 802e66c:	fb0e 6707 	mla	r7, lr, r7, r6
 802e670:	788b      	ldrb	r3, [r1, #2]
 802e672:	fb02 f20c 	mul.w	r2, r2, ip
 802e676:	fb03 f30c 	mul.w	r3, r3, ip
 802e67a:	fb04 fc0c 	mul.w	ip, r4, ip
 802e67e:	0a00      	lsrs	r0, r0, #8
 802e680:	0a3f      	lsrs	r7, r7, #8
 802e682:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e686:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e68a:	4338      	orrs	r0, r7
 802e68c:	1c54      	adds	r4, r2, #1
 802e68e:	1c5f      	adds	r7, r3, #1
 802e690:	f10c 0601 	add.w	r6, ip, #1
 802e694:	0a05      	lsrs	r5, r0, #8
 802e696:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802e69a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802e69e:	0c04      	lsrs	r4, r0, #16
 802e6a0:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802e6a4:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802e6a8:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802e6ac:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802e6b0:	704a      	strb	r2, [r1, #1]
 802e6b2:	708b      	strb	r3, [r1, #2]
 802e6b4:	7008      	strb	r0, [r1, #0]
 802e6b6:	b009      	add	sp, #36	@ 0x24
 802e6b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e6bc:	2c00      	cmp	r4, #0
 802e6be:	db01      	blt.n	802e6c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24c>
 802e6c0:	45a3      	cmp	fp, r4
 802e6c2:	dc41      	bgt.n	802e748 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2d0>
 802e6c4:	f04f 0e00 	mov.w	lr, #0
 802e6c8:	46f1      	mov	r9, lr
 802e6ca:	1c60      	adds	r0, r4, #1
 802e6cc:	d42b      	bmi.n	802e726 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e6ce:	4583      	cmp	fp, r0
 802e6d0:	dd29      	ble.n	802e726 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e6d2:	f1ba 0f00 	cmp.w	sl, #0
 802e6d6:	d005      	beq.n	802e6e4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x26c>
 802e6d8:	7850      	ldrb	r0, [r2, #1]
 802e6da:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 802e6de:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 802e6e2:	e6e6      	b.n	802e4b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e6e4:	2e00      	cmp	r6, #0
 802e6e6:	db42      	blt.n	802e76e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e6e8:	45b0      	cmp	r8, r6
 802e6ea:	dd40      	ble.n	802e76e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e6ec:	46d4      	mov	ip, sl
 802e6ee:	4655      	mov	r5, sl
 802e6f0:	b1ef      	cbz	r7, 802e72e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 802e6f2:	2c00      	cmp	r4, #0
 802e6f4:	db32      	blt.n	802e75c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e6f6:	45a3      	cmp	fp, r4
 802e6f8:	dd30      	ble.n	802e75c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e6fa:	f812 000b 	ldrb.w	r0, [r2, fp]
 802e6fe:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802e702:	9003      	str	r0, [sp, #12]
 802e704:	ea4f 6810 	mov.w	r8, r0, lsr #24
 802e708:	3401      	adds	r4, #1
 802e70a:	d424      	bmi.n	802e756 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e70c:	45a3      	cmp	fp, r4
 802e70e:	dd22      	ble.n	802e756 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e710:	f1ba 0f00 	cmp.w	sl, #0
 802e714:	d027      	beq.n	802e766 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ee>
 802e716:	4493      	add	fp, r2
 802e718:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802e71c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802e720:	9304      	str	r3, [sp, #16]
 802e722:	0e1c      	lsrs	r4, r3, #24
 802e724:	e6ce      	b.n	802e4c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e726:	f04f 0c00 	mov.w	ip, #0
 802e72a:	4665      	mov	r5, ip
 802e72c:	e6c1      	b.n	802e4b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e72e:	f1ba 0f0f 	cmp.w	sl, #15
 802e732:	d823      	bhi.n	802e77c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e734:	fa1f f38a 	uxth.w	r3, sl
 802e738:	463a      	mov	r2, r7
 802e73a:	46bb      	mov	fp, r7
 802e73c:	46ba      	mov	sl, r7
 802e73e:	e9cd 7703 	strd	r7, r7, [sp, #12]
 802e742:	463c      	mov	r4, r7
 802e744:	46b8      	mov	r8, r7
 802e746:	e6d0      	b.n	802e4ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x72>
 802e748:	f81c 0005 	ldrb.w	r0, [ip, r5]
 802e74c:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 802e750:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802e754:	e7b9      	b.n	802e6ca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 802e756:	2400      	movs	r4, #0
 802e758:	9404      	str	r4, [sp, #16]
 802e75a:	e6b3      	b.n	802e4c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e75c:	f04f 0800 	mov.w	r8, #0
 802e760:	f8cd 800c 	str.w	r8, [sp, #12]
 802e764:	e7d0      	b.n	802e708 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>
 802e766:	f8cd a010 	str.w	sl, [sp, #16]
 802e76a:	4654      	mov	r4, sl
 802e76c:	e6ae      	b.n	802e4cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e76e:	4655      	mov	r5, sl
 802e770:	e9cd aa03 	strd	sl, sl, [sp, #12]
 802e774:	4654      	mov	r4, sl
 802e776:	46d0      	mov	r8, sl
 802e778:	46d4      	mov	ip, sl
 802e77a:	e6a7      	b.n	802e4cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e77c:	4b03      	ldr	r3, [pc, #12]	@ (802e78c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x314>)
 802e77e:	4a04      	ldr	r2, [pc, #16]	@ (802e790 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x318>)
 802e780:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802e784:	4803      	ldr	r0, [pc, #12]	@ (802e794 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x31c>)
 802e786:	f003 febf 	bl	8032508 <__assert_func>
 802e78a:	bf00      	nop
 802e78c:	080366e4 	.word	0x080366e4
 802e790:	08036d60 	.word	0x08036d60
 802e794:	0803686c 	.word	0x0803686c

0802e798 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802e798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e79c:	ed2d 8b0a 	vpush	{d8-d12}
 802e7a0:	eeb0 aa40 	vmov.f32	s20, s0
 802e7a4:	eef0 9a60 	vmov.f32	s19, s1
 802e7a8:	eeb0 9a41 	vmov.f32	s18, s2
 802e7ac:	eef0 8a62 	vmov.f32	s17, s5
 802e7b0:	eeb0 8a43 	vmov.f32	s16, s6
 802e7b4:	eeb0 ca44 	vmov.f32	s24, s8
 802e7b8:	eef0 ba64 	vmov.f32	s23, s9
 802e7bc:	eeb0 ba45 	vmov.f32	s22, s10
 802e7c0:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802e7c4:	b0a3      	sub	sp, #140	@ 0x8c
 802e7c6:	901e      	str	r0, [sp, #120]	@ 0x78
 802e7c8:	9111      	str	r1, [sp, #68]	@ 0x44
 802e7ca:	9213      	str	r2, [sp, #76]	@ 0x4c
 802e7cc:	e9dd 413b 	ldrd	r4, r1, [sp, #236]	@ 0xec
 802e7d0:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802e7d2:	6860      	ldr	r0, [r4, #4]
 802e7d4:	fb00 1b02 	mla	fp, r0, r2, r1
 802e7d8:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e7da:	6821      	ldr	r1, [r4, #0]
 802e7dc:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802e7de:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802e7e2:	6852      	ldr	r2, [r2, #4]
 802e7e4:	eb01 0800 	add.w	r8, r1, r0
 802e7e8:	6824      	ldr	r4, [r4, #0]
 802e7ea:	e9dd 7b37 	ldrd	r7, fp, [sp, #220]	@ 0xdc
 802e7ee:	3204      	adds	r2, #4
 802e7f0:	46c3      	mov	fp, r8
 802e7f2:	46b8      	mov	r8, r7
 802e7f4:	9f38      	ldr	r7, [sp, #224]	@ 0xe0
 802e7f6:	940e      	str	r4, [sp, #56]	@ 0x38
 802e7f8:	920a      	str	r2, [sp, #40]	@ 0x28
 802e7fa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e7fc:	2a00      	cmp	r2, #0
 802e7fe:	dc02      	bgt.n	802e806 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802e800:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e802:	2a00      	cmp	r2, #0
 802e804:	dd63      	ble.n	802e8ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e806:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e808:	2b00      	cmp	r3, #0
 802e80a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802e80e:	b234      	sxth	r4, r6
 802e810:	fa0f f98c 	sxth.w	r9, ip
 802e814:	f340 835f 	ble.w	802eed6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e818:	1e65      	subs	r5, r4, #1
 802e81a:	f109 3eff 	add.w	lr, r9, #4294967295
 802e81e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802e822:	e9dd ca39 	ldrd	ip, sl, [sp, #228]	@ 0xe4
 802e826:	ea5f 4228 	movs.w	r2, r8, asr #16
 802e82a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e82e:	d405      	bmi.n	802e83c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e830:	42aa      	cmp	r2, r5
 802e832:	da03      	bge.n	802e83c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e834:	2900      	cmp	r1, #0
 802e836:	db01      	blt.n	802e83c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e838:	4571      	cmp	r1, lr
 802e83a:	db4d      	blt.n	802e8d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802e83c:	1c50      	adds	r0, r2, #1
 802e83e:	d406      	bmi.n	802e84e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e840:	42a0      	cmp	r0, r4
 802e842:	dc04      	bgt.n	802e84e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e844:	1c48      	adds	r0, r1, #1
 802e846:	d402      	bmi.n	802e84e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e848:	4548      	cmp	r0, r9
 802e84a:	f340 831e 	ble.w	802ee8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 802e84e:	3b01      	subs	r3, #1
 802e850:	44e0      	add	r8, ip
 802e852:	4457      	add	r7, sl
 802e854:	f10b 0b03 	add.w	fp, fp, #3
 802e858:	d1e5      	bne.n	802e826 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802e85a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802e85c:	2b00      	cmp	r3, #0
 802e85e:	dd36      	ble.n	802e8ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e860:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802e864:	ee79 9aab 	vadd.f32	s19, s19, s23
 802e868:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802e86c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802e870:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802e874:	ee69 7a27 	vmul.f32	s15, s18, s15
 802e878:	ee76 6a68 	vsub.f32	s13, s12, s17
 802e87c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802e880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802e884:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e888:	ee16 2a90 	vmov	r2, s13
 802e88c:	3b01      	subs	r3, #1
 802e88e:	9311      	str	r3, [sp, #68]	@ 0x44
 802e890:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e892:	fb92 f3f3 	sdiv	r3, r2, r3
 802e896:	ee17 2a10 	vmov	r2, s14
 802e89a:	eeb0 7a48 	vmov.f32	s14, s16
 802e89e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e8a2:	ee17 7a10 	vmov	r7, s14
 802e8a6:	eeb0 7a68 	vmov.f32	s14, s17
 802e8aa:	9339      	str	r3, [sp, #228]	@ 0xe4
 802e8ac:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e8ae:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e8b2:	fb92 f3f3 	sdiv	r3, r2, r3
 802e8b6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e8b8:	933a      	str	r3, [sp, #232]	@ 0xe8
 802e8ba:	ee17 8a10 	vmov	r8, s14
 802e8be:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e8c0:	eeb0 8a67 	vmov.f32	s16, s15
 802e8c4:	eef0 8a46 	vmov.f32	s17, s12
 802e8c8:	bf08      	it	eq
 802e8ca:	4613      	moveq	r3, r2
 802e8cc:	e795      	b.n	802e7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802e8ce:	b023      	add	sp, #140	@ 0x8c
 802e8d0:	ecbd 8b0a 	vpop	{d8-d12}
 802e8d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e8d8:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e8dc:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 802e8de:	1e59      	subs	r1, r3, #1
 802e8e0:	fb00 8201 	mla	r2, r0, r1, r8
 802e8e4:	1412      	asrs	r2, r2, #16
 802e8e6:	9109      	str	r1, [sp, #36]	@ 0x24
 802e8e8:	f100 8151 	bmi.w	802eb8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8ec:	42aa      	cmp	r2, r5
 802e8ee:	f280 814e 	bge.w	802eb8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8f2:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802e8f4:	fb02 7201 	mla	r2, r2, r1, r7
 802e8f8:	1412      	asrs	r2, r2, #16
 802e8fa:	f100 8148 	bmi.w	802eb8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8fe:	f109 31ff 	add.w	r1, r9, #4294967295
 802e902:	428a      	cmp	r2, r1
 802e904:	f280 8143 	bge.w	802eb8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e908:	2b00      	cmp	r3, #0
 802e90a:	dda6      	ble.n	802e85a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802e90c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e910:	445b      	add	r3, fp
 802e912:	930d      	str	r3, [sp, #52]	@ 0x34
 802e914:	f10b 0c03 	add.w	ip, fp, #3
 802e918:	46c1      	mov	r9, r8
 802e91a:	9738      	str	r7, [sp, #224]	@ 0xe0
 802e91c:	4621      	mov	r1, r4
 802e91e:	463b      	mov	r3, r7
 802e920:	e114      	b.n	802eb4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802e922:	f893 e001 	ldrb.w	lr, [r3, #1]
 802e926:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 802e92a:	950f      	str	r5, [sp, #60]	@ 0x3c
 802e92c:	0e2d      	lsrs	r5, r5, #24
 802e92e:	9506      	str	r5, [sp, #24]
 802e930:	b162      	cbz	r2, 802e94c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802e932:	185d      	adds	r5, r3, r1
 802e934:	786d      	ldrb	r5, [r5, #1]
 802e936:	5c5b      	ldrb	r3, [r3, r1]
 802e938:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802e93c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802e940:	9112      	str	r1, [sp, #72]	@ 0x48
 802e942:	9310      	str	r3, [sp, #64]	@ 0x40
 802e944:	0e09      	lsrs	r1, r1, #24
 802e946:	0e1b      	lsrs	r3, r3, #24
 802e948:	9108      	str	r1, [sp, #32]
 802e94a:	9307      	str	r3, [sp, #28]
 802e94c:	b2a4      	uxth	r4, r4
 802e94e:	b292      	uxth	r2, r2
 802e950:	fb04 f502 	mul.w	r5, r4, r2
 802e954:	0124      	lsls	r4, r4, #4
 802e956:	1b66      	subs	r6, r4, r5
 802e958:	9b06      	ldr	r3, [sp, #24]
 802e95a:	b2b6      	uxth	r6, r6
 802e95c:	fb06 f103 	mul.w	r1, r6, r3
 802e960:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802e964:	b292      	uxth	r2, r2
 802e966:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802e96a:	1a9b      	subs	r3, r3, r2
 802e96c:	b29b      	uxth	r3, r3
 802e96e:	fb03 1100 	mla	r1, r3, r0, r1
 802e972:	9c07      	ldr	r4, [sp, #28]
 802e974:	fb02 1104 	mla	r1, r2, r4, r1
 802e978:	9c08      	ldr	r4, [sp, #32]
 802e97a:	fb05 1104 	mla	r1, r5, r4, r1
 802e97e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802e982:	9109      	str	r1, [sp, #36]	@ 0x24
 802e984:	2900      	cmp	r1, #0
 802e986:	f000 80d2 	beq.w	802eb2e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 802e98a:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802e98e:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e992:	28ff      	cmp	r0, #255	@ 0xff
 802e994:	940b      	str	r4, [sp, #44]	@ 0x2c
 802e996:	910c      	str	r1, [sp, #48]	@ 0x30
 802e998:	d01b      	beq.n	802e9d2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802e99a:	fb04 f400 	mul.w	r4, r4, r0
 802e99e:	4627      	mov	r7, r4
 802e9a0:	fb01 fe00 	mul.w	lr, r1, r0
 802e9a4:	0a24      	lsrs	r4, r4, #8
 802e9a6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e9aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e9ae:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e9b2:	4427      	add	r7, r4
 802e9b4:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802e9b8:	0a3f      	lsrs	r7, r7, #8
 802e9ba:	0a00      	lsrs	r0, r0, #8
 802e9bc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e9c0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802e9c4:	4307      	orrs	r7, r0
 802e9c6:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 802e9ca:	910b      	str	r1, [sp, #44]	@ 0x2c
 802e9cc:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e9d0:	910c      	str	r1, [sp, #48]	@ 0x30
 802e9d2:	9806      	ldr	r0, [sp, #24]
 802e9d4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802e9d6:	28ff      	cmp	r0, #255	@ 0xff
 802e9d8:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802e9dc:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802e9e0:	d01a      	beq.n	802ea18 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 802e9e2:	fb07 f700 	mul.w	r7, r7, r0
 802e9e6:	fb0e fe00 	mul.w	lr, lr, r0
 802e9ea:	0a3c      	lsrs	r4, r7, #8
 802e9ec:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e9f0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e9f4:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e9f8:	4427      	add	r7, r4
 802e9fa:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802e9fe:	0a3f      	lsrs	r7, r7, #8
 802ea00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ea04:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802ea08:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ea0c:	ea47 0e0e 	orr.w	lr, r7, lr
 802ea10:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 802ea14:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ea18:	9c07      	ldr	r4, [sp, #28]
 802ea1a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802ea1c:	2cff      	cmp	r4, #255	@ 0xff
 802ea1e:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802ea22:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802ea26:	d01b      	beq.n	802ea60 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802ea28:	fb00 f004 	mul.w	r0, r0, r4
 802ea2c:	fb0a fa04 	mul.w	sl, sl, r4
 802ea30:	ea4f 2810 	mov.w	r8, r0, lsr #8
 802ea34:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea38:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802ea3c:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 802ea40:	4440      	add	r0, r8
 802ea42:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 802ea46:	0a00      	lsrs	r0, r0, #8
 802ea48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ea4c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ea50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ea54:	ea40 0a0a 	orr.w	sl, r0, sl
 802ea58:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802ea5c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ea60:	9c08      	ldr	r4, [sp, #32]
 802ea62:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ea64:	2cff      	cmp	r4, #255	@ 0xff
 802ea66:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802ea6a:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802ea6e:	d01b      	beq.n	802eaa8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 802ea70:	fb08 f804 	mul.w	r8, r8, r4
 802ea74:	fb0b fb04 	mul.w	fp, fp, r4
 802ea78:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802ea7c:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 802ea80:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802ea84:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802ea88:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802ea8c:	4488      	add	r8, r1
 802ea8e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ea92:	0a24      	lsrs	r4, r4, #8
 802ea94:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea98:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ea9c:	ea48 0b0b 	orr.w	fp, r8, fp
 802eaa0:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 802eaa4:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802eaa8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802eaaa:	fb07 f706 	mul.w	r7, r7, r6
 802eaae:	43c9      	mvns	r1, r1
 802eab0:	fb0e f606 	mul.w	r6, lr, r6
 802eab4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802eab6:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802eaba:	fb04 7703 	mla	r7, r4, r3, r7
 802eabe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802eac0:	fb00 7702 	mla	r7, r0, r2, r7
 802eac4:	fb04 6603 	mla	r6, r4, r3, r6
 802eac8:	fb0a 6602 	mla	r6, sl, r2, r6
 802eacc:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 802ead0:	fb0b 6b05 	mla	fp, fp, r5, r6
 802ead4:	fb08 7805 	mla	r8, r8, r5, r7
 802ead8:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802eadc:	b2c9      	uxtb	r1, r1
 802eade:	fb0e fe01 	mul.w	lr, lr, r1
 802eae2:	fb04 f401 	mul.w	r4, r4, r1
 802eae6:	fb03 f101 	mul.w	r1, r3, r1
 802eaea:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802eaee:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802eaf2:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802eaf6:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802eafa:	ea48 030b 	orr.w	r3, r8, fp
 802eafe:	f10e 0201 	add.w	r2, lr, #1
 802eb02:	1c66      	adds	r6, r4, #1
 802eb04:	1c4d      	adds	r5, r1, #1
 802eb06:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 802eb0a:	0a18      	lsrs	r0, r3, #8
 802eb0c:	0c1a      	lsrs	r2, r3, #16
 802eb0e:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802eb12:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802eb16:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802eb1a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802eb1e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802eb22:	f80c ec02 	strb.w	lr, [ip, #-2]
 802eb26:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802eb2a:	f80c 1c03 	strb.w	r1, [ip, #-3]
 802eb2e:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 802eb30:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802eb32:	4499      	add	r9, r3
 802eb34:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eb36:	4413      	add	r3, r2
 802eb38:	9338      	str	r3, [sp, #224]	@ 0xe0
 802eb3a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802eb3c:	4563      	cmp	r3, ip
 802eb3e:	d024      	beq.n	802eb8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802eb40:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 802eb42:	f10c 0c03 	add.w	ip, ip, #3
 802eb46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802eb4a:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eb4c:	ea4f 4229 	mov.w	r2, r9, asr #16
 802eb50:	141b      	asrs	r3, r3, #16
 802eb52:	fb01 2303 	mla	r3, r1, r3, r2
 802eb56:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802eb58:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802eb5a:	5cc2      	ldrb	r2, [r0, r3]
 802eb5c:	f3c9 3403 	ubfx	r4, r9, #12, #4
 802eb60:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802eb64:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802eb66:	4403      	add	r3, r0
 802eb68:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802eb6c:	0e38      	lsrs	r0, r7, #24
 802eb6e:	2c00      	cmp	r4, #0
 802eb70:	f47f aed7 	bne.w	802e922 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802eb74:	2a00      	cmp	r2, #0
 802eb76:	f43f aee9 	beq.w	802e94c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb7a:	5c5b      	ldrb	r3, [r3, r1]
 802eb7c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eb7e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802eb82:	9310      	str	r3, [sp, #64]	@ 0x40
 802eb84:	0e1b      	lsrs	r3, r3, #24
 802eb86:	9307      	str	r3, [sp, #28]
 802eb88:	e6e0      	b.n	802e94c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb8a:	469b      	mov	fp, r3
 802eb8c:	e665      	b.n	802e85a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb8e:	2b00      	cmp	r3, #0
 802eb90:	f77f ae63 	ble.w	802e85a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb94:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802eb98:	ea4f 4228 	mov.w	r2, r8, asr #16
 802eb9c:	1439      	asrs	r1, r7, #16
 802eb9e:	2a00      	cmp	r2, #0
 802eba0:	46d9      	mov	r9, fp
 802eba2:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 802eba6:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802eba8:	e9dd b539 	ldrd	fp, r5, [sp, #228]	@ 0xe4
 802ebac:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802ebb0:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802ebb4:	f2c0 8141 	blt.w	802ee3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebb8:	1e73      	subs	r3, r6, #1
 802ebba:	429a      	cmp	r2, r3
 802ebbc:	f280 813d 	bge.w	802ee3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebc0:	2900      	cmp	r1, #0
 802ebc2:	f2c0 813a 	blt.w	802ee3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebc6:	f10c 33ff 	add.w	r3, ip, #4294967295
 802ebca:	4299      	cmp	r1, r3
 802ebcc:	f280 8135 	bge.w	802ee3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebd0:	b233      	sxth	r3, r6
 802ebd2:	fb01 2203 	mla	r2, r1, r3, r2
 802ebd6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802ebd8:	930c      	str	r3, [sp, #48]	@ 0x30
 802ebda:	5c8b      	ldrb	r3, [r1, r2]
 802ebdc:	440a      	add	r2, r1
 802ebde:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802ebe0:	4616      	mov	r6, r2
 802ebe2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802ebe6:	930d      	str	r3, [sp, #52]	@ 0x34
 802ebe8:	0e1b      	lsrs	r3, r3, #24
 802ebea:	2800      	cmp	r0, #0
 802ebec:	f000 8153 	beq.w	802ee96 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802ebf0:	f896 c001 	ldrb.w	ip, [r6, #1]
 802ebf4:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 802ebf8:	921f      	str	r2, [sp, #124]	@ 0x7c
 802ebfa:	0e12      	lsrs	r2, r2, #24
 802ebfc:	9214      	str	r2, [sp, #80]	@ 0x50
 802ebfe:	f1be 0f00 	cmp.w	lr, #0
 802ec02:	f040 8155 	bne.w	802eeb0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802ec06:	b280      	uxth	r0, r0
 802ec08:	fa1f fc8e 	uxth.w	ip, lr
 802ec0c:	fb00 f20c 	mul.w	r2, r0, ip
 802ec10:	0106      	lsls	r6, r0, #4
 802ec12:	1ab0      	subs	r0, r6, r2
 802ec14:	b281      	uxth	r1, r0
 802ec16:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802ec18:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802ec1c:	fb01 f000 	mul.w	r0, r1, r0
 802ec20:	9117      	str	r1, [sp, #92]	@ 0x5c
 802ec22:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802ec26:	fa1f f18c 	uxth.w	r1, ip
 802ec2a:	1a76      	subs	r6, r6, r1
 802ec2c:	b2b6      	uxth	r6, r6
 802ec2e:	9619      	str	r6, [sp, #100]	@ 0x64
 802ec30:	fb06 0603 	mla	r6, r6, r3, r0
 802ec34:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802ec36:	9118      	str	r1, [sp, #96]	@ 0x60
 802ec38:	fb01 6600 	mla	r6, r1, r0, r6
 802ec3c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ec3e:	fb02 6601 	mla	r6, r2, r1, r6
 802ec42:	f3c6 2107 	ubfx	r1, r6, #8, #8
 802ec46:	911a      	str	r1, [sp, #104]	@ 0x68
 802ec48:	2900      	cmp	r1, #0
 802ec4a:	f000 80e0 	beq.w	802ee0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ec4e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802ec50:	2bff      	cmp	r3, #255	@ 0xff
 802ec52:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 802ec56:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802ec5a:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec5c:	901b      	str	r0, [sp, #108]	@ 0x6c
 802ec5e:	d01c      	beq.n	802ec9a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 802ec60:	fb01 f103 	mul.w	r1, r1, r3
 802ec64:	fb00 f003 	mul.w	r0, r0, r3
 802ec68:	460e      	mov	r6, r1
 802ec6a:	4603      	mov	r3, r0
 802ec6c:	0a09      	lsrs	r1, r1, #8
 802ec6e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec72:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ec76:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802ec7a:	4431      	add	r1, r6
 802ec7c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802ec80:	0a09      	lsrs	r1, r1, #8
 802ec82:	0a1b      	lsrs	r3, r3, #8
 802ec84:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec88:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec8c:	430b      	orrs	r3, r1
 802ec8e:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802ec92:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec96:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec98:	931b      	str	r3, [sp, #108]	@ 0x6c
 802ec9a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802ec9c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802eca0:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802eca4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802eca6:	931c      	str	r3, [sp, #112]	@ 0x70
 802eca8:	29ff      	cmp	r1, #255	@ 0xff
 802ecaa:	d019      	beq.n	802ece0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802ecac:	fb03 f301 	mul.w	r3, r3, r1
 802ecb0:	fb06 f601 	mul.w	r6, r6, r1
 802ecb4:	0a19      	lsrs	r1, r3, #8
 802ecb6:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ecba:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ecbe:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802ecc2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ecc6:	4401      	add	r1, r0
 802ecc8:	0a09      	lsrs	r1, r1, #8
 802ecca:	0a1b      	lsrs	r3, r3, #8
 802eccc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ecd0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ecd4:	4319      	orrs	r1, r3
 802ecd6:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ecda:	931c      	str	r3, [sp, #112]	@ 0x70
 802ecdc:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ece0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802ece2:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ece6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802ecea:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802ecec:	930c      	str	r3, [sp, #48]	@ 0x30
 802ecee:	29ff      	cmp	r1, #255	@ 0xff
 802ecf0:	901d      	str	r0, [sp, #116]	@ 0x74
 802ecf2:	d01a      	beq.n	802ed2a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x592>
 802ecf4:	fb03 f301 	mul.w	r3, r3, r1
 802ecf8:	fb00 fc01 	mul.w	ip, r0, r1
 802ecfc:	0a19      	lsrs	r1, r3, #8
 802ecfe:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ed02:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ed06:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802ed0a:	4401      	add	r1, r0
 802ed0c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802ed10:	0a09      	lsrs	r1, r1, #8
 802ed12:	0a1b      	lsrs	r3, r3, #8
 802ed14:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ed18:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ed1c:	4319      	orrs	r1, r3
 802ed1e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ed22:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ed26:	930c      	str	r3, [sp, #48]	@ 0x30
 802ed28:	911d      	str	r1, [sp, #116]	@ 0x74
 802ed2a:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ed2c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802ed30:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802ed34:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ed36:	29ff      	cmp	r1, #255	@ 0xff
 802ed38:	d01c      	beq.n	802ed74 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 802ed3a:	fb0c fc01 	mul.w	ip, ip, r1
 802ed3e:	fb0e fe01 	mul.w	lr, lr, r1
 802ed42:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802ed46:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ed4a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ed4e:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 802ed52:	4484      	add	ip, r0
 802ed54:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802ed58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ed5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ed60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ed64:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ed68:	ea4c 0e0e 	orr.w	lr, ip, lr
 802ed6c:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802ed70:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ed74:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802ed76:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802ed78:	43c9      	mvns	r1, r1
 802ed7a:	911a      	str	r1, [sp, #104]	@ 0x68
 802ed7c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802ed7e:	fb00 f001 	mul.w	r0, r0, r1
 802ed82:	fb06 f301 	mul.w	r3, r6, r1
 802ed86:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802ed88:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed8a:	fb01 0006 	mla	r0, r1, r6, r0
 802ed8e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802ed90:	fb01 3106 	mla	r1, r1, r6, r3
 802ed94:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 802ed96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802ed98:	910d      	str	r1, [sp, #52]	@ 0x34
 802ed9a:	fb03 0306 	mla	r3, r3, r6, r0
 802ed9e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802eda0:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802eda2:	fb0c 3302 	mla	r3, ip, r2, r3
 802eda6:	fb00 1106 	mla	r1, r0, r6, r1
 802edaa:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802edae:	f899 0002 	ldrb.w	r0, [r9, #2]
 802edb2:	fb0e 1e02 	mla	lr, lr, r2, r1
 802edb6:	f899 2001 	ldrb.w	r2, [r9, #1]
 802edba:	f899 1000 	ldrb.w	r1, [r9]
 802edbe:	fb00 f006 	mul.w	r0, r0, r6
 802edc2:	fb02 fc06 	mul.w	ip, r2, r6
 802edc6:	fb01 f106 	mul.w	r1, r1, r6
 802edca:	0a1b      	lsrs	r3, r3, #8
 802edcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802edd0:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802edd4:	1c46      	adds	r6, r0, #1
 802edd6:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802edda:	4313      	orrs	r3, r2
 802eddc:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802ede0:	f10c 0201 	add.w	r2, ip, #1
 802ede4:	1c4e      	adds	r6, r1, #1
 802ede6:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 802edea:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802edee:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802edf2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802edf6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802edfa:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802edfe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802ee02:	f889 2001 	strb.w	r2, [r9, #1]
 802ee06:	f889 0002 	strb.w	r0, [r9, #2]
 802ee0a:	f889 3000 	strb.w	r3, [r9]
 802ee0e:	f1ba 0f00 	cmp.w	sl, #0
 802ee12:	f109 0903 	add.w	r9, r9, #3
 802ee16:	44d8      	add	r8, fp
 802ee18:	442f      	add	r7, r5
 802ee1a:	dd2c      	ble.n	802ee76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6de>
 802ee1c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802ee20:	ea4f 4228 	mov.w	r2, r8, asr #16
 802ee24:	2a00      	cmp	r2, #0
 802ee26:	f10a 3aff 	add.w	sl, sl, #4294967295
 802ee2a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802ee2e:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802ee32:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802ee36:	f6bf aebf 	bge.w	802ebb8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802ee3a:	1c53      	adds	r3, r2, #1
 802ee3c:	d4e7      	bmi.n	802ee0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee3e:	42b3      	cmp	r3, r6
 802ee40:	dce5      	bgt.n	802ee0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee42:	1c4b      	adds	r3, r1, #1
 802ee44:	d4e3      	bmi.n	802ee0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee46:	4563      	cmp	r3, ip
 802ee48:	dce1      	bgt.n	802ee0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee4a:	fa0f f38c 	sxth.w	r3, ip
 802ee4e:	b236      	sxth	r6, r6
 802ee50:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802ee54:	e9cd 6300 	strd	r6, r3, [sp]
 802ee58:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802ee5c:	4649      	mov	r1, r9
 802ee5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ee60:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802ee62:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802ee64:	f7ff fb08 	bl	802e478 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 802ee68:	f1ba 0f00 	cmp.w	sl, #0
 802ee6c:	f109 0903 	add.w	r9, r9, #3
 802ee70:	44d8      	add	r8, fp
 802ee72:	442f      	add	r7, r5
 802ee74:	dcd2      	bgt.n	802ee1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x684>
 802ee76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ee78:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802ee7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802ee80:	3301      	adds	r3, #1
 802ee82:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ee86:	449b      	add	fp, r3
 802ee88:	e4e7      	b.n	802e85a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee8a:	3b01      	subs	r3, #1
 802ee8c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802ee90:	469a      	mov	sl, r3
 802ee92:	9309      	str	r3, [sp, #36]	@ 0x24
 802ee94:	e683      	b.n	802eb9e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 802ee96:	f1be 0f00 	cmp.w	lr, #0
 802ee9a:	f43f aeb4 	beq.w	802ec06 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee9e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802eea0:	5c72      	ldrb	r2, [r6, r1]
 802eea2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eea4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802eea8:	9220      	str	r2, [sp, #128]	@ 0x80
 802eeaa:	0e12      	lsrs	r2, r2, #24
 802eeac:	9215      	str	r2, [sp, #84]	@ 0x54
 802eeae:	e6aa      	b.n	802ec06 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802eeb0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802eeb2:	eb06 0c02 	add.w	ip, r6, r2
 802eeb6:	4632      	mov	r2, r6
 802eeb8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802eeba:	f89c c001 	ldrb.w	ip, [ip, #1]
 802eebe:	5d92      	ldrb	r2, [r2, r6]
 802eec0:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802eec4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802eec8:	0e31      	lsrs	r1, r6, #24
 802eeca:	9220      	str	r2, [sp, #128]	@ 0x80
 802eecc:	0e12      	lsrs	r2, r2, #24
 802eece:	9621      	str	r6, [sp, #132]	@ 0x84
 802eed0:	9116      	str	r1, [sp, #88]	@ 0x58
 802eed2:	9215      	str	r2, [sp, #84]	@ 0x54
 802eed4:	e697      	b.n	802ec06 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802eed6:	f43f acc0 	beq.w	802e85a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eeda:	1e65      	subs	r5, r4, #1
 802eedc:	e4fe      	b.n	802e8dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802eede:	bf00      	nop

0802eee0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 802eee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802eee4:	b087      	sub	sp, #28
 802eee6:	f89d b058 	ldrb.w	fp, [sp, #88]	@ 0x58
 802eeea:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 802eeee:	ea6f 000b 	mvn.w	r0, fp
 802eef2:	e9dd 4712 	ldrd	r4, r7, [sp, #72]	@ 0x48
 802eef6:	fb07 4c06 	mla	ip, r7, r6, r4
 802eefa:	b2c0      	uxtb	r0, r0
 802eefc:	2f00      	cmp	r7, #0
 802eefe:	9002      	str	r0, [sp, #8]
 802ef00:	eb02 0e0c 	add.w	lr, r2, ip
 802ef04:	f107 0801 	add.w	r8, r7, #1
 802ef08:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	@ 0x44
 802ef0c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 802ef10:	f89d 0054 	ldrb.w	r0, [sp, #84]	@ 0x54
 802ef14:	db02      	blt.n	802ef1c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3c>
 802ef16:	45b9      	cmp	r9, r7
 802ef18:	f300 80a0 	bgt.w	802f05c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x17c>
 802ef1c:	468c      	mov	ip, r1
 802ef1e:	460f      	mov	r7, r1
 802ef20:	780a      	ldrb	r2, [r1, #0]
 802ef22:	9203      	str	r2, [sp, #12]
 802ef24:	9201      	str	r2, [sp, #4]
 802ef26:	f1b8 0f00 	cmp.w	r8, #0
 802ef2a:	db01      	blt.n	802ef30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x50>
 802ef2c:	45c1      	cmp	r9, r8
 802ef2e:	dc7b      	bgt.n	802f028 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x148>
 802ef30:	460b      	mov	r3, r1
 802ef32:	4689      	mov	r9, r1
 802ef34:	f891 a000 	ldrb.w	sl, [r1]
 802ef38:	f8cd a014 	str.w	sl, [sp, #20]
 802ef3c:	2d0f      	cmp	r5, #15
 802ef3e:	f200 80cd 	bhi.w	802f0dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802ef42:	280f      	cmp	r0, #15
 802ef44:	f200 80ca 	bhi.w	802f0dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802ef48:	780a      	ldrb	r2, [r1, #0]
 802ef4a:	9204      	str	r2, [sp, #16]
 802ef4c:	b2aa      	uxth	r2, r5
 802ef4e:	b280      	uxth	r0, r0
 802ef50:	fb02 f500 	mul.w	r5, r2, r0
 802ef54:	0112      	lsls	r2, r2, #4
 802ef56:	f89c 8001 	ldrb.w	r8, [ip, #1]
 802ef5a:	f89c e002 	ldrb.w	lr, [ip, #2]
 802ef5e:	1b54      	subs	r4, r2, r5
 802ef60:	b2a4      	uxth	r4, r4
 802ef62:	fb04 f808 	mul.w	r8, r4, r8
 802ef66:	fb04 fe0e 	mul.w	lr, r4, lr
 802ef6a:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802ef6e:	b280      	uxth	r0, r0
 802ef70:	9e01      	ldr	r6, [sp, #4]
 802ef72:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802ef76:	f897 c001 	ldrb.w	ip, [r7, #1]
 802ef7a:	1a12      	subs	r2, r2, r0
 802ef7c:	78bf      	ldrb	r7, [r7, #2]
 802ef7e:	b292      	uxth	r2, r2
 802ef80:	fb04 f406 	mul.w	r4, r4, r6
 802ef84:	fb02 8c0c 	mla	ip, r2, ip, r8
 802ef88:	fb02 e707 	mla	r7, r2, r7, lr
 802ef8c:	9e03      	ldr	r6, [sp, #12]
 802ef8e:	f899 8001 	ldrb.w	r8, [r9, #1]
 802ef92:	f899 e002 	ldrb.w	lr, [r9, #2]
 802ef96:	fb02 4206 	mla	r2, r2, r6, r4
 802ef9a:	fb00 cc08 	mla	ip, r0, r8, ip
 802ef9e:	fb00 770e 	mla	r7, r0, lr, r7
 802efa2:	f893 8001 	ldrb.w	r8, [r3, #1]
 802efa6:	f893 e002 	ldrb.w	lr, [r3, #2]
 802efaa:	fb00 220a 	mla	r2, r0, sl, r2
 802efae:	fb05 c808 	mla	r8, r5, r8, ip
 802efb2:	fb05 7e0e 	mla	lr, r5, lr, r7
 802efb6:	9805      	ldr	r0, [sp, #20]
 802efb8:	f8bd 9008 	ldrh.w	r9, [sp, #8]
 802efbc:	fb05 2500 	mla	r5, r5, r0, r2
 802efc0:	9a04      	ldr	r2, [sp, #16]
 802efc2:	fa1f f38b 	uxth.w	r3, fp
 802efc6:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802efca:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802efce:	fb12 f609 	smulbb	r6, r2, r9
 802efd2:	fb1e fe03 	smulbb	lr, lr, r3
 802efd6:	fb18 f803 	smulbb	r8, r8, r3
 802efda:	784a      	ldrb	r2, [r1, #1]
 802efdc:	7888      	ldrb	r0, [r1, #2]
 802efde:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802efe2:	fb05 6503 	mla	r5, r5, r3, r6
 802efe6:	fb02 8809 	mla	r8, r2, r9, r8
 802efea:	fb00 e909 	mla	r9, r0, r9, lr
 802efee:	b2ad      	uxth	r5, r5
 802eff0:	fa1f f888 	uxth.w	r8, r8
 802eff4:	fa1f f989 	uxth.w	r9, r9
 802eff8:	f108 0001 	add.w	r0, r8, #1
 802effc:	f109 0201 	add.w	r2, r9, #1
 802f000:	1c6b      	adds	r3, r5, #1
 802f002:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802f006:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802f00a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802f00e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802f012:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f016:	122d      	asrs	r5, r5, #8
 802f018:	f881 8001 	strb.w	r8, [r1, #1]
 802f01c:	f881 9002 	strb.w	r9, [r1, #2]
 802f020:	700d      	strb	r5, [r1, #0]
 802f022:	b007      	add	sp, #28
 802f024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f028:	b388      	cbz	r0, 802f08e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1ae>
 802f02a:	2c00      	cmp	r4, #0
 802f02c:	db44      	blt.n	802f0b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802f02e:	42a6      	cmp	r6, r4
 802f030:	dd42      	ble.n	802f0b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802f032:	f81e 9006 	ldrb.w	r9, [lr, r6]
 802f036:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802f03a:	4499      	add	r9, r3
 802f03c:	3401      	adds	r4, #1
 802f03e:	f899 a000 	ldrb.w	sl, [r9]
 802f042:	d435      	bmi.n	802f0b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802f044:	42a6      	cmp	r6, r4
 802f046:	dd33      	ble.n	802f0b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802f048:	2d00      	cmp	r5, #0
 802f04a:	d043      	beq.n	802f0d4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1f4>
 802f04c:	4476      	add	r6, lr
 802f04e:	7872      	ldrb	r2, [r6, #1]
 802f050:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f054:	5c9c      	ldrb	r4, [r3, r2]
 802f056:	4413      	add	r3, r2
 802f058:	9405      	str	r4, [sp, #20]
 802f05a:	e76f      	b.n	802ef3c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f05c:	2c00      	cmp	r4, #0
 802f05e:	db01      	blt.n	802f064 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 802f060:	42a6      	cmp	r6, r4
 802f062:	dc1f      	bgt.n	802f0a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1c4>
 802f064:	460f      	mov	r7, r1
 802f066:	783a      	ldrb	r2, [r7, #0]
 802f068:	9203      	str	r2, [sp, #12]
 802f06a:	1c62      	adds	r2, r4, #1
 802f06c:	d40b      	bmi.n	802f086 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f06e:	4296      	cmp	r6, r2
 802f070:	dd09      	ble.n	802f086 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f072:	b31d      	cbz	r5, 802f0bc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1dc>
 802f074:	f89e c001 	ldrb.w	ip, [lr, #1]
 802f078:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f07c:	f813 200c 	ldrb.w	r2, [r3, ip]
 802f080:	449c      	add	ip, r3
 802f082:	9201      	str	r2, [sp, #4]
 802f084:	e74f      	b.n	802ef26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f086:	780a      	ldrb	r2, [r1, #0]
 802f088:	468c      	mov	ip, r1
 802f08a:	9201      	str	r2, [sp, #4]
 802f08c:	e74b      	b.n	802ef26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f08e:	2d0f      	cmp	r5, #15
 802f090:	f891 a000 	ldrb.w	sl, [r1]
 802f094:	d822      	bhi.n	802f0dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f096:	f8cd a010 	str.w	sl, [sp, #16]
 802f09a:	460b      	mov	r3, r1
 802f09c:	4689      	mov	r9, r1
 802f09e:	f8cd a014 	str.w	sl, [sp, #20]
 802f0a2:	e753      	b.n	802ef4c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x6c>
 802f0a4:	f812 700c 	ldrb.w	r7, [r2, ip]
 802f0a8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802f0ac:	441f      	add	r7, r3
 802f0ae:	e7da      	b.n	802f066 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x186>
 802f0b0:	780b      	ldrb	r3, [r1, #0]
 802f0b2:	9305      	str	r3, [sp, #20]
 802f0b4:	460b      	mov	r3, r1
 802f0b6:	e741      	b.n	802ef3c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f0b8:	4689      	mov	r9, r1
 802f0ba:	e7bf      	b.n	802f03c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802f0bc:	780a      	ldrb	r2, [r1, #0]
 802f0be:	f1b8 0f00 	cmp.w	r8, #0
 802f0c2:	9201      	str	r2, [sp, #4]
 802f0c4:	468c      	mov	ip, r1
 802f0c6:	f6bf af31 	bge.w	802ef2c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x4c>
 802f0ca:	460b      	mov	r3, r1
 802f0cc:	4689      	mov	r9, r1
 802f0ce:	9205      	str	r2, [sp, #20]
 802f0d0:	4692      	mov	sl, r2
 802f0d2:	e736      	b.n	802ef42 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f0d4:	780b      	ldrb	r3, [r1, #0]
 802f0d6:	9305      	str	r3, [sp, #20]
 802f0d8:	460b      	mov	r3, r1
 802f0da:	e732      	b.n	802ef42 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f0dc:	4b03      	ldr	r3, [pc, #12]	@ (802f0ec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x20c>)
 802f0de:	4a04      	ldr	r2, [pc, #16]	@ (802f0f0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x210>)
 802f0e0:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f0e4:	4803      	ldr	r0, [pc, #12]	@ (802f0f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x214>)
 802f0e6:	f003 fa0f 	bl	8032508 <__assert_func>
 802f0ea:	bf00      	nop
 802f0ec:	080366e4 	.word	0x080366e4
 802f0f0:	08036d60 	.word	0x08036d60
 802f0f4:	0803686c 	.word	0x0803686c

0802f0f8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f0fc:	ed2d 8b08 	vpush	{d8-d11}
 802f100:	b095      	sub	sp, #84	@ 0x54
 802f102:	f89d 40bc 	ldrb.w	r4, [sp, #188]	@ 0xbc
 802f106:	9013      	str	r0, [sp, #76]	@ 0x4c
 802f108:	43e0      	mvns	r0, r4
 802f10a:	e9dd a727 	ldrd	sl, r7, [sp, #156]	@ 0x9c
 802f10e:	eeb0 aa40 	vmov.f32	s20, s0
 802f112:	eef0 9a60 	vmov.f32	s19, s1
 802f116:	eeb0 9a41 	vmov.f32	s18, s2
 802f11a:	eef0 8a62 	vmov.f32	s17, s5
 802f11e:	eeb0 8a43 	vmov.f32	s16, s6
 802f122:	eef0 ba44 	vmov.f32	s23, s8
 802f126:	eeb0 ba64 	vmov.f32	s22, s9
 802f12a:	eef0 aa45 	vmov.f32	s21, s10
 802f12e:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802f132:	9411      	str	r4, [sp, #68]	@ 0x44
 802f134:	469b      	mov	fp, r3
 802f136:	e9dd 422b 	ldrd	r4, r2, [sp, #172]	@ 0xac
 802f13a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802f13c:	6861      	ldr	r1, [r4, #4]
 802f13e:	fb01 2303 	mla	r3, r1, r3, r2
 802f142:	6821      	ldr	r1, [r4, #0]
 802f144:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802f146:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802f148:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802f14c:	6852      	ldr	r2, [r2, #4]
 802f14e:	6824      	ldr	r4, [r4, #0]
 802f150:	930d      	str	r3, [sp, #52]	@ 0x34
 802f152:	b2c3      	uxtb	r3, r0
 802f154:	930b      	str	r3, [sp, #44]	@ 0x2c
 802f156:	1d13      	adds	r3, r2, #4
 802f158:	940a      	str	r4, [sp, #40]	@ 0x28
 802f15a:	9308      	str	r3, [sp, #32]
 802f15c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f15e:	2b00      	cmp	r3, #0
 802f160:	dc02      	bgt.n	802f168 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802f162:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802f164:	2b00      	cmp	r3, #0
 802f166:	dd6c      	ble.n	802f242 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f168:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f16a:	f1bb 0f00 	cmp.w	fp, #0
 802f16e:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 802f172:	b228      	sxth	r0, r5
 802f174:	fa0f f68e 	sxth.w	r6, lr
 802f178:	f340 8245 	ble.w	802f606 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 802f17c:	e9dd 8929 	ldrd	r8, r9, [sp, #164]	@ 0xa4
 802f180:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f182:	1e44      	subs	r4, r0, #1
 802f184:	f106 3cff 	add.w	ip, r6, #4294967295
 802f188:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802f18c:	ea5f 432a 	movs.w	r3, sl, asr #16
 802f190:	ea4f 4127 	mov.w	r1, r7, asr #16
 802f194:	d405      	bmi.n	802f1a2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f196:	42a3      	cmp	r3, r4
 802f198:	da03      	bge.n	802f1a2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f19a:	2900      	cmp	r1, #0
 802f19c:	db01      	blt.n	802f1a2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f19e:	4561      	cmp	r1, ip
 802f1a0:	db54      	blt.n	802f24c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802f1a2:	f113 0e01 	adds.w	lr, r3, #1
 802f1a6:	d407      	bmi.n	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f1a8:	4586      	cmp	lr, r0
 802f1aa:	dc05      	bgt.n	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f1ac:	f111 0e01 	adds.w	lr, r1, #1
 802f1b0:	d402      	bmi.n	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f1b2:	45b6      	cmp	lr, r6
 802f1b4:	f340 8189 	ble.w	802f4ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802f1b8:	f1bb 0b01 	subs.w	fp, fp, #1
 802f1bc:	44c2      	add	sl, r8
 802f1be:	444f      	add	r7, r9
 802f1c0:	f102 0204 	add.w	r2, r2, #4
 802f1c4:	d1e2      	bne.n	802f18c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802f1c6:	920d      	str	r2, [sp, #52]	@ 0x34
 802f1c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f1ca:	2b00      	cmp	r3, #0
 802f1cc:	dd39      	ble.n	802f242 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f1ce:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802f1d2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802f1d6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802f1da:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802f1de:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802f1e2:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f1e6:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f1ea:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f1ee:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f1f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f1f6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f1fa:	ee16 2a90 	vmov	r2, s13
 802f1fe:	3b01      	subs	r3, #1
 802f200:	930e      	str	r3, [sp, #56]	@ 0x38
 802f202:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f204:	fb92 f3f3 	sdiv	r3, r2, r3
 802f208:	ee17 2a10 	vmov	r2, s14
 802f20c:	eeb0 7a48 	vmov.f32	s14, s16
 802f210:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f214:	ee17 7a10 	vmov	r7, s14
 802f218:	eeb0 7a68 	vmov.f32	s14, s17
 802f21c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802f21e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f220:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f224:	fb92 f3f3 	sdiv	r3, r2, r3
 802f228:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802f22a:	932a      	str	r3, [sp, #168]	@ 0xa8
 802f22c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f22e:	ee17 aa10 	vmov	sl, s14
 802f232:	eeb0 8a67 	vmov.f32	s16, s15
 802f236:	eef0 8a46 	vmov.f32	s17, s12
 802f23a:	bf14      	ite	ne
 802f23c:	469b      	movne	fp, r3
 802f23e:	4693      	moveq	fp, r2
 802f240:	e78c      	b.n	802f15c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802f242:	b015      	add	sp, #84	@ 0x54
 802f244:	ecbd 8b08 	vpop	{d8-d11}
 802f248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f24c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f250:	920d      	str	r2, [sp, #52]	@ 0x34
 802f252:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f254:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f258:	fb01 a302 	mla	r3, r1, r2, sl
 802f25c:	141b      	asrs	r3, r3, #16
 802f25e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f260:	f100 80d3 	bmi.w	802f40a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f264:	42a3      	cmp	r3, r4
 802f266:	f280 80d0 	bge.w	802f40a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f26a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f26c:	fb03 7302 	mla	r3, r3, r2, r7
 802f270:	141b      	asrs	r3, r3, #16
 802f272:	f100 80ca 	bmi.w	802f40a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f276:	3e01      	subs	r6, #1
 802f278:	42b3      	cmp	r3, r6
 802f27a:	f280 80c6 	bge.w	802f40a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f27e:	f1bb 0f00 	cmp.w	fp, #0
 802f282:	dda1      	ble.n	802f1c8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f284:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 802f288:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802f28c:	930c      	str	r3, [sp, #48]	@ 0x30
 802f28e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f290:	f103 0804 	add.w	r8, r3, #4
 802f294:	e08f      	b.n	802f3b6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802f296:	7861      	ldrb	r1, [r4, #1]
 802f298:	eb04 0c00 	add.w	ip, r4, r0
 802f29c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f2a0:	4431      	add	r1, r6
 802f2a2:	2a00      	cmp	r2, #0
 802f2a4:	f000 80a3 	beq.w	802f3ee <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 802f2a8:	5c20      	ldrb	r0, [r4, r0]
 802f2aa:	f89c c001 	ldrb.w	ip, [ip, #1]
 802f2ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f2b2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f2b6:	4430      	add	r0, r6
 802f2b8:	44b4      	add	ip, r6
 802f2ba:	b29b      	uxth	r3, r3
 802f2bc:	b292      	uxth	r2, r2
 802f2be:	fb03 f402 	mul.w	r4, r3, r2
 802f2c2:	011b      	lsls	r3, r3, #4
 802f2c4:	f891 b001 	ldrb.w	fp, [r1, #1]
 802f2c8:	1b1e      	subs	r6, r3, r4
 802f2ca:	f891 9002 	ldrb.w	r9, [r1, #2]
 802f2ce:	b2b6      	uxth	r6, r6
 802f2d0:	7809      	ldrb	r1, [r1, #0]
 802f2d2:	fb06 fb0b 	mul.w	fp, r6, fp
 802f2d6:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f2da:	b292      	uxth	r2, r2
 802f2dc:	fb06 f909 	mul.w	r9, r6, r9
 802f2e0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f2e4:	fb06 f601 	mul.w	r6, r6, r1
 802f2e8:	1a9b      	subs	r3, r3, r2
 802f2ea:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802f2ee:	b29b      	uxth	r3, r3
 802f2f0:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f2f4:	fb03 bb01 	mla	fp, r3, r1, fp
 802f2f8:	9908      	ldr	r1, [sp, #32]
 802f2fa:	fb03 990e 	mla	r9, r3, lr, r9
 802f2fe:	5d49      	ldrb	r1, [r1, r5]
 802f300:	7885      	ldrb	r5, [r0, #2]
 802f302:	fb03 6301 	mla	r3, r3, r1, r6
 802f306:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f30a:	fb02 9905 	mla	r9, r2, r5, r9
 802f30e:	7801      	ldrb	r1, [r0, #0]
 802f310:	fb02 bb0e 	mla	fp, r2, lr, fp
 802f314:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802f318:	fb02 3301 	mla	r3, r2, r1, r3
 802f31c:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f320:	fb04 9900 	mla	r9, r4, r0, r9
 802f324:	f89c 1000 	ldrb.w	r1, [ip]
 802f328:	fb04 bb0e 	mla	fp, r4, lr, fp
 802f32c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802f32e:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 802f332:	fb04 3301 	mla	r3, r4, r1, r3
 802f336:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802f338:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802f33c:	fb19 f902 	smulbb	r9, r9, r2
 802f340:	fb1c fc01 	smulbb	ip, ip, r1
 802f344:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802f348:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802f34c:	fb1b fb02 	smulbb	fp, fp, r2
 802f350:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802f354:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 802f358:	fb05 9901 	mla	r9, r5, r1, r9
 802f35c:	fb03 c302 	mla	r3, r3, r2, ip
 802f360:	fb06 bb01 	mla	fp, r6, r1, fp
 802f364:	fa1f f989 	uxth.w	r9, r9
 802f368:	b29b      	uxth	r3, r3
 802f36a:	f109 0101 	add.w	r1, r9, #1
 802f36e:	1c5a      	adds	r2, r3, #1
 802f370:	fa1f fb8b 	uxth.w	fp, fp
 802f374:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802f378:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802f37c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f37e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f380:	f10b 0001 	add.w	r0, fp, #1
 802f384:	3a01      	subs	r2, #1
 802f386:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802f38a:	448a      	add	sl, r1
 802f38c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802f38e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f390:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 802f394:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f398:	121b      	asrs	r3, r3, #8
 802f39a:	3201      	adds	r2, #1
 802f39c:	f808 bc03 	strb.w	fp, [r8, #-3]
 802f3a0:	f808 9c02 	strb.w	r9, [r8, #-2]
 802f3a4:	f808 3c04 	strb.w	r3, [r8, #-4]
 802f3a8:	440f      	add	r7, r1
 802f3aa:	f108 0804 	add.w	r8, r8, #4
 802f3ae:	d025      	beq.n	802f3fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802f3b0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f3b2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802f3b6:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f3ba:	143c      	asrs	r4, r7, #16
 802f3bc:	fb00 3404 	mla	r4, r0, r4, r3
 802f3c0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f3c2:	9e08      	ldr	r6, [sp, #32]
 802f3c4:	5d15      	ldrb	r5, [r2, r4]
 802f3c6:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802f3ca:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802f3ce:	4414      	add	r4, r2
 802f3d0:	eb06 0e05 	add.w	lr, r6, r5
 802f3d4:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f3d8:	2b00      	cmp	r3, #0
 802f3da:	f47f af5c 	bne.w	802f296 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802f3de:	b14a      	cbz	r2, 802f3f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802f3e0:	5c20      	ldrb	r0, [r4, r0]
 802f3e2:	46f4      	mov	ip, lr
 802f3e4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f3e8:	4430      	add	r0, r6
 802f3ea:	4671      	mov	r1, lr
 802f3ec:	e765      	b.n	802f2ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3ee:	46f4      	mov	ip, lr
 802f3f0:	4670      	mov	r0, lr
 802f3f2:	e762      	b.n	802f2ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3f4:	46f4      	mov	ip, lr
 802f3f6:	4670      	mov	r0, lr
 802f3f8:	4671      	mov	r1, lr
 802f3fa:	e75e      	b.n	802f2ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f3fe:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 802f402:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 802f406:	930d      	str	r3, [sp, #52]	@ 0x34
 802f408:	e6de      	b.n	802f1c8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f40a:	f1bb 0f00 	cmp.w	fp, #0
 802f40e:	f77f aedb 	ble.w	802f1c8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f412:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 802f416:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f41a:	1439      	asrs	r1, r7, #16
 802f41c:	4676      	mov	r6, lr
 802f41e:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 802f422:	f8dd 80b8 	ldr.w	r8, [sp, #184]	@ 0xb8
 802f426:	2b00      	cmp	r3, #0
 802f428:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802f42c:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f430:	db29      	blt.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f432:	1e6c      	subs	r4, r5, #1
 802f434:	42a3      	cmp	r3, r4
 802f436:	da26      	bge.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f438:	2900      	cmp	r1, #0
 802f43a:	db24      	blt.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f43c:	1e74      	subs	r4, r6, #1
 802f43e:	42a1      	cmp	r1, r4
 802f440:	da21      	bge.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f442:	b22c      	sxth	r4, r5
 802f444:	fb01 3304 	mla	r3, r1, r4, r3
 802f448:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802f44a:	5ce9      	ldrb	r1, [r5, r3]
 802f44c:	442b      	add	r3, r5
 802f44e:	9d08      	ldr	r5, [sp, #32]
 802f450:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f454:	9112      	str	r1, [sp, #72]	@ 0x48
 802f456:	eb05 0c01 	add.w	ip, r5, r1
 802f45a:	2800      	cmp	r0, #0
 802f45c:	d04e      	beq.n	802f4fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 802f45e:	f893 e001 	ldrb.w	lr, [r3, #1]
 802f462:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f466:	44ae      	add	lr, r5
 802f468:	2a00      	cmp	r2, #0
 802f46a:	f000 80c7 	beq.w	802f5fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802f46e:	1919      	adds	r1, r3, r4
 802f470:	7849      	ldrb	r1, [r1, #1]
 802f472:	5d1c      	ldrb	r4, [r3, r4]
 802f474:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f478:	186b      	adds	r3, r5, r1
 802f47a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f47e:	930c      	str	r3, [sp, #48]	@ 0x30
 802f480:	1963      	adds	r3, r4, r5
 802f482:	9310      	str	r3, [sp, #64]	@ 0x40
 802f484:	e041      	b.n	802f50a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f486:	1c5c      	adds	r4, r3, #1
 802f488:	d405      	bmi.n	802f496 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f48a:	42ac      	cmp	r4, r5
 802f48c:	dc03      	bgt.n	802f496 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f48e:	1c4c      	adds	r4, r1, #1
 802f490:	d401      	bmi.n	802f496 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f492:	42b4      	cmp	r4, r6
 802f494:	dd21      	ble.n	802f4da <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802f496:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802f498:	f1b9 0f00 	cmp.w	r9, #0
 802f49c:	449a      	add	sl, r3
 802f49e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f4a0:	f10b 0b04 	add.w	fp, fp, #4
 802f4a4:	441f      	add	r7, r3
 802f4a6:	dd07      	ble.n	802f4b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802f4a8:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 802f4ac:	f109 39ff 	add.w	r9, r9, #4294967295
 802f4b0:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f4b4:	1439      	asrs	r1, r7, #16
 802f4b6:	e7b6      	b.n	802f426 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802f4b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f4ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f4bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802f4c0:	3301      	adds	r3, #1
 802f4c2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802f4c6:	930d      	str	r3, [sp, #52]	@ 0x34
 802f4c8:	e67e      	b.n	802f1c8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f4ca:	920d      	str	r2, [sp, #52]	@ 0x34
 802f4cc:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f4d0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f4d4:	4691      	mov	r9, r2
 802f4d6:	9209      	str	r2, [sp, #36]	@ 0x24
 802f4d8:	e7a0      	b.n	802f41c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802f4da:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802f4dc:	b236      	sxth	r6, r6
 802f4de:	b22d      	sxth	r5, r5
 802f4e0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802f4e4:	e9cd 2405 	strd	r2, r4, [sp, #20]
 802f4e8:	9302      	str	r3, [sp, #8]
 802f4ea:	e9cd 5600 	strd	r5, r6, [sp]
 802f4ee:	9b08      	ldr	r3, [sp, #32]
 802f4f0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f4f2:	4659      	mov	r1, fp
 802f4f4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802f4f6:	f7ff fcf3 	bl	802eee0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 802f4fa:	e7cc      	b.n	802f496 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f4fc:	2a00      	cmp	r2, #0
 802f4fe:	d173      	bne.n	802f5e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802f500:	46e6      	mov	lr, ip
 802f502:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f506:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f50a:	b283      	uxth	r3, r0
 802f50c:	b292      	uxth	r2, r2
 802f50e:	fb03 f002 	mul.w	r0, r3, r2
 802f512:	011b      	lsls	r3, r3, #4
 802f514:	f89e 6001 	ldrb.w	r6, [lr, #1]
 802f518:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802f51c:	1a19      	subs	r1, r3, r0
 802f51e:	b289      	uxth	r1, r1
 802f520:	f89e e000 	ldrb.w	lr, [lr]
 802f524:	fb01 f505 	mul.w	r5, r1, r5
 802f528:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802f52c:	fb01 f606 	mul.w	r6, r1, r6
 802f530:	b292      	uxth	r2, r2
 802f532:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f536:	fb01 f40e 	mul.w	r4, r1, lr
 802f53a:	1a9b      	subs	r3, r3, r2
 802f53c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802f540:	f89c e002 	ldrb.w	lr, [ip, #2]
 802f544:	b29b      	uxth	r3, r3
 802f546:	fb03 6601 	mla	r6, r3, r1, r6
 802f54a:	fb03 5e0e 	mla	lr, r3, lr, r5
 802f54e:	9908      	ldr	r1, [sp, #32]
 802f550:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802f552:	5d49      	ldrb	r1, [r1, r5]
 802f554:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802f556:	fb03 4301 	mla	r3, r3, r1, r4
 802f55a:	f895 c001 	ldrb.w	ip, [r5, #1]
 802f55e:	78ad      	ldrb	r5, [r5, #2]
 802f560:	fb02 6c0c 	mla	ip, r2, ip, r6
 802f564:	fb02 e505 	mla	r5, r2, r5, lr
 802f568:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f56a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802f56c:	784e      	ldrb	r6, [r1, #1]
 802f56e:	7824      	ldrb	r4, [r4, #0]
 802f570:	7889      	ldrb	r1, [r1, #2]
 802f572:	fb02 3204 	mla	r2, r2, r4, r3
 802f576:	fb00 cc06 	mla	ip, r0, r6, ip
 802f57a:	fb00 5501 	mla	r5, r0, r1, r5
 802f57e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f580:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802f582:	780b      	ldrb	r3, [r1, #0]
 802f584:	f89b 4000 	ldrb.w	r4, [fp]
 802f588:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 802f58c:	fb00 2003 	mla	r0, r0, r3, r2
 802f590:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802f594:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802f598:	fb15 f501 	smulbb	r5, r5, r1
 802f59c:	fb14 f406 	smulbb	r4, r4, r6
 802f5a0:	fb1c fc01 	smulbb	ip, ip, r1
 802f5a4:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802f5a8:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802f5ac:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802f5b0:	fb00 4001 	mla	r0, r0, r1, r4
 802f5b4:	fb03 5306 	mla	r3, r3, r6, r5
 802f5b8:	fb02 c106 	mla	r1, r2, r6, ip
 802f5bc:	b29b      	uxth	r3, r3
 802f5be:	b280      	uxth	r0, r0
 802f5c0:	b289      	uxth	r1, r1
 802f5c2:	1c5a      	adds	r2, r3, #1
 802f5c4:	1c4d      	adds	r5, r1, #1
 802f5c6:	1c44      	adds	r4, r0, #1
 802f5c8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802f5cc:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802f5d0:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 802f5d4:	1209      	asrs	r1, r1, #8
 802f5d6:	1212      	asrs	r2, r2, #8
 802f5d8:	121b      	asrs	r3, r3, #8
 802f5da:	f88b 1001 	strb.w	r1, [fp, #1]
 802f5de:	f88b 2002 	strb.w	r2, [fp, #2]
 802f5e2:	f88b 3000 	strb.w	r3, [fp]
 802f5e6:	e756      	b.n	802f496 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f5e8:	5d1c      	ldrb	r4, [r3, r4]
 802f5ea:	9b08      	ldr	r3, [sp, #32]
 802f5ec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f5f0:	18e3      	adds	r3, r4, r3
 802f5f2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f5f6:	9310      	str	r3, [sp, #64]	@ 0x40
 802f5f8:	46e6      	mov	lr, ip
 802f5fa:	e786      	b.n	802f50a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f5fc:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f600:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f604:	e781      	b.n	802f50a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f606:	f43f addf 	beq.w	802f1c8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f60a:	1e44      	subs	r4, r0, #1
 802f60c:	e621      	b.n	802f252 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 802f60e:	bf00      	nop

0802f610 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 802f610:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f614:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802f618:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 802f61c:	fb04 6e0c 	mla	lr, r4, ip, r6
 802f620:	2c00      	cmp	r4, #0
 802f622:	461f      	mov	r7, r3
 802f624:	eb02 0a0e 	add.w	sl, r2, lr
 802f628:	f104 0801 	add.w	r8, r4, #1
 802f62c:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 802f630:	f89d 5038 	ldrb.w	r5, [sp, #56]	@ 0x38
 802f634:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
 802f638:	db01      	blt.n	802f63e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2e>
 802f63a:	45a1      	cmp	r9, r4
 802f63c:	dc6f      	bgt.n	802f71e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x10e>
 802f63e:	f891 b000 	ldrb.w	fp, [r1]
 802f642:	460b      	mov	r3, r1
 802f644:	465c      	mov	r4, fp
 802f646:	468e      	mov	lr, r1
 802f648:	f1b8 0f00 	cmp.w	r8, #0
 802f64c:	db01      	blt.n	802f652 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x42>
 802f64e:	45c1      	cmp	r9, r8
 802f650:	dc4a      	bgt.n	802f6e8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xd8>
 802f652:	f891 9000 	ldrb.w	r9, [r1]
 802f656:	460f      	mov	r7, r1
 802f658:	46ca      	mov	sl, r9
 802f65a:	4688      	mov	r8, r1
 802f65c:	2d0f      	cmp	r5, #15
 802f65e:	f200 8097 	bhi.w	802f790 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f662:	280f      	cmp	r0, #15
 802f664:	f200 8094 	bhi.w	802f790 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f668:	b2aa      	uxth	r2, r5
 802f66a:	b280      	uxth	r0, r0
 802f66c:	fb02 f600 	mul.w	r6, r2, r0
 802f670:	0112      	lsls	r2, r2, #4
 802f672:	1b95      	subs	r5, r2, r6
 802f674:	f893 c001 	ldrb.w	ip, [r3, #1]
 802f678:	789b      	ldrb	r3, [r3, #2]
 802f67a:	b2ad      	uxth	r5, r5
 802f67c:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802f680:	fb05 f404 	mul.w	r4, r5, r4
 802f684:	fb05 fc0c 	mul.w	ip, r5, ip
 802f688:	fb05 f503 	mul.w	r5, r5, r3
 802f68c:	b280      	uxth	r0, r0
 802f68e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802f692:	f89e 3001 	ldrb.w	r3, [lr, #1]
 802f696:	1a12      	subs	r2, r2, r0
 802f698:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f69c:	b292      	uxth	r2, r2
 802f69e:	fb02 cc03 	mla	ip, r2, r3, ip
 802f6a2:	fb02 440b 	mla	r4, r2, fp, r4
 802f6a6:	fb02 520e 	mla	r2, r2, lr, r5
 802f6aa:	f898 3001 	ldrb.w	r3, [r8, #1]
 802f6ae:	f898 8002 	ldrb.w	r8, [r8, #2]
 802f6b2:	fb00 cc03 	mla	ip, r0, r3, ip
 802f6b6:	fb00 4909 	mla	r9, r0, r9, r4
 802f6ba:	fb00 2008 	mla	r0, r0, r8, r2
 802f6be:	787b      	ldrb	r3, [r7, #1]
 802f6c0:	78ba      	ldrb	r2, [r7, #2]
 802f6c2:	fb06 9a0a 	mla	sl, r6, sl, r9
 802f6c6:	fb06 c303 	mla	r3, r6, r3, ip
 802f6ca:	fb06 0602 	mla	r6, r6, r2, r0
 802f6ce:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 802f6d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802f6d6:	0236      	lsls	r6, r6, #8
 802f6d8:	ea43 030a 	orr.w	r3, r3, sl
 802f6dc:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 802f6e0:	4333      	orrs	r3, r6
 802f6e2:	600b      	str	r3, [r1, #0]
 802f6e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f6e8:	b378      	cbz	r0, 802f74a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x13a>
 802f6ea:	2e00      	cmp	r6, #0
 802f6ec:	db3f      	blt.n	802f76e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f6ee:	45b4      	cmp	ip, r6
 802f6f0:	dd3d      	ble.n	802f76e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f6f2:	f81a 800c 	ldrb.w	r8, [sl, ip]
 802f6f6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802f6fa:	44b8      	add	r8, r7
 802f6fc:	3601      	adds	r6, #1
 802f6fe:	f898 9000 	ldrb.w	r9, [r8]
 802f702:	d430      	bmi.n	802f766 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f704:	45b4      	cmp	ip, r6
 802f706:	dd2e      	ble.n	802f766 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f708:	2d00      	cmp	r5, #0
 802f70a:	d03d      	beq.n	802f788 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x178>
 802f70c:	44d4      	add	ip, sl
 802f70e:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802f712:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f716:	f817 a002 	ldrb.w	sl, [r7, r2]
 802f71a:	4417      	add	r7, r2
 802f71c:	e79e      	b.n	802f65c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f71e:	2e00      	cmp	r6, #0
 802f720:	db01      	blt.n	802f726 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x116>
 802f722:	45b4      	cmp	ip, r6
 802f724:	dc19      	bgt.n	802f75a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x14a>
 802f726:	468e      	mov	lr, r1
 802f728:	1c73      	adds	r3, r6, #1
 802f72a:	f89e b000 	ldrb.w	fp, [lr]
 802f72e:	d409      	bmi.n	802f744 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f730:	459c      	cmp	ip, r3
 802f732:	dd07      	ble.n	802f744 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f734:	b1ed      	cbz	r5, 802f772 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x162>
 802f736:	f89a 3001 	ldrb.w	r3, [sl, #1]
 802f73a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802f73e:	5cfc      	ldrb	r4, [r7, r3]
 802f740:	443b      	add	r3, r7
 802f742:	e781      	b.n	802f648 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f744:	780c      	ldrb	r4, [r1, #0]
 802f746:	460b      	mov	r3, r1
 802f748:	e77e      	b.n	802f648 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f74a:	2d0f      	cmp	r5, #15
 802f74c:	f891 9000 	ldrb.w	r9, [r1]
 802f750:	d81e      	bhi.n	802f790 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f752:	460f      	mov	r7, r1
 802f754:	4688      	mov	r8, r1
 802f756:	46ca      	mov	sl, r9
 802f758:	e786      	b.n	802f668 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x58>
 802f75a:	f812 e00e 	ldrb.w	lr, [r2, lr]
 802f75e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f762:	449e      	add	lr, r3
 802f764:	e7e0      	b.n	802f728 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 802f766:	f891 a000 	ldrb.w	sl, [r1]
 802f76a:	460f      	mov	r7, r1
 802f76c:	e776      	b.n	802f65c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f76e:	4688      	mov	r8, r1
 802f770:	e7c4      	b.n	802f6fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xec>
 802f772:	f1b8 0f00 	cmp.w	r8, #0
 802f776:	780c      	ldrb	r4, [r1, #0]
 802f778:	460b      	mov	r3, r1
 802f77a:	f6bf af68 	bge.w	802f64e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x3e>
 802f77e:	460f      	mov	r7, r1
 802f780:	4688      	mov	r8, r1
 802f782:	46a2      	mov	sl, r4
 802f784:	46a1      	mov	r9, r4
 802f786:	e76c      	b.n	802f662 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f788:	f891 a000 	ldrb.w	sl, [r1]
 802f78c:	460f      	mov	r7, r1
 802f78e:	e768      	b.n	802f662 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f790:	4b03      	ldr	r3, [pc, #12]	@ (802f7a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x190>)
 802f792:	4a04      	ldr	r2, [pc, #16]	@ (802f7a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x194>)
 802f794:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f798:	4803      	ldr	r0, [pc, #12]	@ (802f7a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x198>)
 802f79a:	f002 feb5 	bl	8032508 <__assert_func>
 802f79e:	bf00      	nop
 802f7a0:	080366e4 	.word	0x080366e4
 802f7a4:	08036d60 	.word	0x08036d60
 802f7a8:	0803686c 	.word	0x0803686c

0802f7ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f7b0:	ed2d 8b0a 	vpush	{d8-d12}
 802f7b4:	eeb0 aa40 	vmov.f32	s20, s0
 802f7b8:	eef0 9a60 	vmov.f32	s19, s1
 802f7bc:	eeb0 9a41 	vmov.f32	s18, s2
 802f7c0:	eef0 8a62 	vmov.f32	s17, s5
 802f7c4:	eeb0 8a43 	vmov.f32	s16, s6
 802f7c8:	eeb0 ca44 	vmov.f32	s24, s8
 802f7cc:	eef0 ba64 	vmov.f32	s23, s9
 802f7d0:	eeb0 ba45 	vmov.f32	s22, s10
 802f7d4:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802f7d8:	b091      	sub	sp, #68	@ 0x44
 802f7da:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802f7de:	e9dd 9525 	ldrd	r9, r5, [sp, #148]	@ 0x94
 802f7e2:	900f      	str	r0, [sp, #60]	@ 0x3c
 802f7e4:	4698      	mov	r8, r3
 802f7e6:	e9dd 0229 	ldrd	r0, r2, [sp, #164]	@ 0xa4
 802f7ea:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802f7ec:	6841      	ldr	r1, [r0, #4]
 802f7ee:	fb01 2303 	mla	r3, r1, r3, r2
 802f7f2:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802f7f4:	6801      	ldr	r1, [r0, #0]
 802f7f6:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 802f7f8:	6852      	ldr	r2, [r2, #4]
 802f7fa:	6800      	ldr	r0, [r0, #0]
 802f7fc:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 802f800:	1d13      	adds	r3, r2, #4
 802f802:	9009      	str	r0, [sp, #36]	@ 0x24
 802f804:	930c      	str	r3, [sp, #48]	@ 0x30
 802f806:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f808:	2b00      	cmp	r3, #0
 802f80a:	dc02      	bgt.n	802f812 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802f80c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802f80e:	2b00      	cmp	r3, #0
 802f810:	dd66      	ble.n	802f8e0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f812:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f814:	f1b8 0f00 	cmp.w	r8, #0
 802f818:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802f81c:	b221      	sxth	r1, r4
 802f81e:	fa0f f78e 	sxth.w	r7, lr
 802f822:	f340 81df 	ble.w	802fbe4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802f826:	1e4e      	subs	r6, r1, #1
 802f828:	f107 3cff 	add.w	ip, r7, #4294967295
 802f82c:	f8cd e01c 	str.w	lr, [sp, #28]
 802f830:	e9dd eb27 	ldrd	lr, fp, [sp, #156]	@ 0x9c
 802f834:	ea5f 4329 	movs.w	r3, r9, asr #16
 802f838:	ea4f 4025 	mov.w	r0, r5, asr #16
 802f83c:	d405      	bmi.n	802f84a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f83e:	42b3      	cmp	r3, r6
 802f840:	da03      	bge.n	802f84a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f842:	2800      	cmp	r0, #0
 802f844:	db01      	blt.n	802f84a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f846:	4560      	cmp	r0, ip
 802f848:	db4f      	blt.n	802f8ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802f84a:	1c5a      	adds	r2, r3, #1
 802f84c:	d406      	bmi.n	802f85c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f84e:	428a      	cmp	r2, r1
 802f850:	dc04      	bgt.n	802f85c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f852:	1c42      	adds	r2, r0, #1
 802f854:	d402      	bmi.n	802f85c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f856:	42ba      	cmp	r2, r7
 802f858:	f340 8157 	ble.w	802fb0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802f85c:	f1b8 0801 	subs.w	r8, r8, #1
 802f860:	44f1      	add	r9, lr
 802f862:	445d      	add	r5, fp
 802f864:	f10a 0a04 	add.w	sl, sl, #4
 802f868:	d1e4      	bne.n	802f834 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802f86a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f86c:	2b00      	cmp	r3, #0
 802f86e:	dd37      	ble.n	802f8e0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f870:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802f874:	ee79 9aab 	vadd.f32	s19, s19, s23
 802f878:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802f87c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802f880:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f884:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f888:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f88c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f890:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f894:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f898:	ee16 2a90 	vmov	r2, s13
 802f89c:	3b01      	subs	r3, #1
 802f89e:	930a      	str	r3, [sp, #40]	@ 0x28
 802f8a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f8a2:	fb92 f3f3 	sdiv	r3, r2, r3
 802f8a6:	ee17 2a10 	vmov	r2, s14
 802f8aa:	eeb0 7a48 	vmov.f32	s14, s16
 802f8ae:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f8b2:	ee17 5a10 	vmov	r5, s14
 802f8b6:	eeb0 7a68 	vmov.f32	s14, s17
 802f8ba:	9327      	str	r3, [sp, #156]	@ 0x9c
 802f8bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f8be:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f8c2:	fb92 f3f3 	sdiv	r3, r2, r3
 802f8c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802f8c8:	9328      	str	r3, [sp, #160]	@ 0xa0
 802f8ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f8cc:	ee17 9a10 	vmov	r9, s14
 802f8d0:	eeb0 8a67 	vmov.f32	s16, s15
 802f8d4:	eef0 8a46 	vmov.f32	s17, s12
 802f8d8:	bf14      	ite	ne
 802f8da:	4698      	movne	r8, r3
 802f8dc:	4690      	moveq	r8, r2
 802f8de:	e792      	b.n	802f806 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802f8e0:	b011      	add	sp, #68	@ 0x44
 802f8e2:	ecbd 8b0a 	vpop	{d8-d12}
 802f8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f8ea:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802f8ee:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802f8f0:	f108 32ff 	add.w	r2, r8, #4294967295
 802f8f4:	fb00 9302 	mla	r3, r0, r2, r9
 802f8f8:	141b      	asrs	r3, r3, #16
 802f8fa:	9207      	str	r2, [sp, #28]
 802f8fc:	f100 80a6 	bmi.w	802fa4c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f900:	42b3      	cmp	r3, r6
 802f902:	f280 80a3 	bge.w	802fa4c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f906:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802f908:	fb03 5302 	mla	r3, r3, r2, r5
 802f90c:	141b      	asrs	r3, r3, #16
 802f90e:	f100 809d 	bmi.w	802fa4c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f912:	3f01      	subs	r7, #1
 802f914:	42bb      	cmp	r3, r7
 802f916:	f280 8099 	bge.w	802fa4c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f91a:	f1b8 0f00 	cmp.w	r8, #0
 802f91e:	dda4      	ble.n	802f86a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f920:	f8cd a020 	str.w	sl, [sp, #32]
 802f924:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802f928:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802f92c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802f930:	e065      	b.n	802f9fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802f932:	f890 c001 	ldrb.w	ip, [r0, #1]
 802f936:	1844      	adds	r4, r0, r1
 802f938:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f93c:	44d4      	add	ip, sl
 802f93e:	2a00      	cmp	r2, #0
 802f940:	d078      	beq.n	802fa34 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802f942:	5c40      	ldrb	r0, [r0, r1]
 802f944:	7866      	ldrb	r6, [r4, #1]
 802f946:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f94a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802f94e:	4450      	add	r0, sl
 802f950:	4456      	add	r6, sl
 802f952:	b29b      	uxth	r3, r3
 802f954:	b292      	uxth	r2, r2
 802f956:	fb03 f402 	mul.w	r4, r3, r2
 802f95a:	011b      	lsls	r3, r3, #4
 802f95c:	f89c 8000 	ldrb.w	r8, [ip]
 802f960:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f964:	1b19      	subs	r1, r3, r4
 802f966:	f89c c002 	ldrb.w	ip, [ip, #2]
 802f96a:	b289      	uxth	r1, r1
 802f96c:	fb01 fe0e 	mul.w	lr, r1, lr
 802f970:	fb01 f808 	mul.w	r8, r1, r8
 802f974:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f978:	fb01 f10c 	mul.w	r1, r1, ip
 802f97c:	b292      	uxth	r2, r2
 802f97e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f982:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802f986:	f897 c001 	ldrb.w	ip, [r7, #1]
 802f98a:	1a9b      	subs	r3, r3, r2
 802f98c:	78bf      	ldrb	r7, [r7, #2]
 802f98e:	b29b      	uxth	r3, r3
 802f990:	fb03 880b 	mla	r8, r3, fp, r8
 802f994:	fb03 ec0c 	mla	ip, r3, ip, lr
 802f998:	fb03 1307 	mla	r3, r3, r7, r1
 802f99c:	7881      	ldrb	r1, [r0, #2]
 802f99e:	f890 b000 	ldrb.w	fp, [r0]
 802f9a2:	fb02 3301 	mla	r3, r2, r1, r3
 802f9a6:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f9aa:	78b1      	ldrb	r1, [r6, #2]
 802f9ac:	fb02 880b 	mla	r8, r2, fp, r8
 802f9b0:	fb02 cc0e 	mla	ip, r2, lr, ip
 802f9b4:	fb04 3301 	mla	r3, r4, r1, r3
 802f9b8:	f896 b000 	ldrb.w	fp, [r6]
 802f9bc:	f896 e001 	ldrb.w	lr, [r6, #1]
 802f9c0:	0219      	lsls	r1, r3, #8
 802f9c2:	fb04 880b 	mla	r8, r4, fp, r8
 802f9c6:	fb04 cc0e 	mla	ip, r4, lr, ip
 802f9ca:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 802f9ce:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802f9d0:	9a07      	ldr	r2, [sp, #28]
 802f9d2:	4489      	add	r9, r1
 802f9d4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802f9d6:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802f9da:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802f9de:	ea48 080c 	orr.w	r8, r8, ip
 802f9e2:	440d      	add	r5, r1
 802f9e4:	9908      	ldr	r1, [sp, #32]
 802f9e6:	3a01      	subs	r2, #1
 802f9e8:	ea48 0303 	orr.w	r3, r8, r3
 802f9ec:	9207      	str	r2, [sp, #28]
 802f9ee:	f841 3b04 	str.w	r3, [r1], #4
 802f9f2:	3201      	adds	r2, #1
 802f9f4:	9108      	str	r1, [sp, #32]
 802f9f6:	d024      	beq.n	802fa42 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802f9f8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f9fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802f9fe:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fa02:	1428      	asrs	r0, r5, #16
 802fa04:	fb01 3000 	mla	r0, r1, r0, r3
 802fa08:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802fa0a:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802fa0e:	f812 b000 	ldrb.w	fp, [r2, r0]
 802fa12:	4410      	add	r0, r2
 802fa14:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802fa18:	eb0a 070b 	add.w	r7, sl, fp
 802fa1c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fa20:	2b00      	cmp	r3, #0
 802fa22:	d186      	bne.n	802f932 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802fa24:	b14a      	cbz	r2, 802fa3a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 802fa26:	5c40      	ldrb	r0, [r0, r1]
 802fa28:	463e      	mov	r6, r7
 802fa2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fa2e:	4450      	add	r0, sl
 802fa30:	46bc      	mov	ip, r7
 802fa32:	e78e      	b.n	802f952 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fa34:	463e      	mov	r6, r7
 802fa36:	4638      	mov	r0, r7
 802fa38:	e78b      	b.n	802f952 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fa3a:	463e      	mov	r6, r7
 802fa3c:	4638      	mov	r0, r7
 802fa3e:	46bc      	mov	ip, r7
 802fa40:	e787      	b.n	802f952 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fa42:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 802fa46:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802fa4a:	e70e      	b.n	802f86a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fa4c:	f1b8 0f00 	cmp.w	r8, #0
 802fa50:	f77f af0b 	ble.w	802f86a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fa54:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802fa58:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fa5c:	1428      	asrs	r0, r5, #16
 802fa5e:	4677      	mov	r7, lr
 802fa60:	46d0      	mov	r8, sl
 802fa62:	f8cd a020 	str.w	sl, [sp, #32]
 802fa66:	f8dd a0b0 	ldr.w	sl, [sp, #176]	@ 0xb0
 802fa6a:	2b00      	cmp	r3, #0
 802fa6c:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802fa70:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fa74:	db28      	blt.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa76:	1e66      	subs	r6, r4, #1
 802fa78:	42b3      	cmp	r3, r6
 802fa7a:	da25      	bge.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa7c:	2800      	cmp	r0, #0
 802fa7e:	db23      	blt.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa80:	1e7e      	subs	r6, r7, #1
 802fa82:	42b0      	cmp	r0, r6
 802fa84:	da20      	bge.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa86:	b224      	sxth	r4, r4
 802fa88:	fb00 3304 	mla	r3, r0, r4, r3
 802fa8c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802fa8e:	5cc7      	ldrb	r7, [r0, r3]
 802fa90:	4403      	add	r3, r0
 802fa92:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802fa94:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802fa98:	eb00 0c07 	add.w	ip, r0, r7
 802fa9c:	2900      	cmp	r1, #0
 802fa9e:	d04a      	beq.n	802fb36 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802faa0:	785e      	ldrb	r6, [r3, #1]
 802faa2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802faa6:	4406      	add	r6, r0
 802faa8:	2a00      	cmp	r2, #0
 802faaa:	f000 8098 	beq.w	802fbde <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802faae:	1918      	adds	r0, r3, r4
 802fab0:	7840      	ldrb	r0, [r0, #1]
 802fab2:	5d1c      	ldrb	r4, [r3, r4]
 802fab4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fab6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802faba:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fabe:	1818      	adds	r0, r3, r0
 802fac0:	18e3      	adds	r3, r4, r3
 802fac2:	900d      	str	r0, [sp, #52]	@ 0x34
 802fac4:	930e      	str	r3, [sp, #56]	@ 0x38
 802fac6:	e03b      	b.n	802fb40 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fac8:	1c5e      	adds	r6, r3, #1
 802faca:	d405      	bmi.n	802fad8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802facc:	42a6      	cmp	r6, r4
 802face:	dc03      	bgt.n	802fad8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fad0:	1c46      	adds	r6, r0, #1
 802fad2:	d401      	bmi.n	802fad8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fad4:	42be      	cmp	r6, r7
 802fad6:	dd1f      	ble.n	802fb18 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802fad8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802fada:	f1bb 0f00 	cmp.w	fp, #0
 802fade:	4499      	add	r9, r3
 802fae0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802fae2:	f108 0804 	add.w	r8, r8, #4
 802fae6:	441d      	add	r5, r3
 802fae8:	dd07      	ble.n	802fafa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802faea:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 802faee:	f10b 3bff 	add.w	fp, fp, #4294967295
 802faf2:	ea4f 4329 	mov.w	r3, r9, asr #16
 802faf6:	1428      	asrs	r0, r5, #16
 802faf8:	e7b7      	b.n	802fa6a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802fafa:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 802fafe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802fb02:	3301      	adds	r3, #1
 802fb04:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802fb08:	e6af      	b.n	802f86a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fb0a:	f108 32ff 	add.w	r2, r8, #4294967295
 802fb0e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802fb12:	4693      	mov	fp, r2
 802fb14:	9207      	str	r2, [sp, #28]
 802fb16:	e7a2      	b.n	802fa5e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802fb18:	b23f      	sxth	r7, r7
 802fb1a:	b224      	sxth	r4, r4
 802fb1c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 802fb20:	e9cd 3002 	strd	r3, r0, [sp, #8]
 802fb24:	e9cd 4700 	strd	r4, r7, [sp]
 802fb28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fb2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802fb2c:	4641      	mov	r1, r8
 802fb2e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802fb30:	f7ff fd6e 	bl	802f610 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 802fb34:	e7d0      	b.n	802fad8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fb36:	2a00      	cmp	r2, #0
 802fb38:	d147      	bne.n	802fbca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 802fb3a:	4666      	mov	r6, ip
 802fb3c:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fb40:	b28b      	uxth	r3, r1
 802fb42:	b292      	uxth	r2, r2
 802fb44:	fb03 f002 	mul.w	r0, r3, r2
 802fb48:	011b      	lsls	r3, r3, #4
 802fb4a:	f896 e000 	ldrb.w	lr, [r6]
 802fb4e:	7874      	ldrb	r4, [r6, #1]
 802fb50:	1a19      	subs	r1, r3, r0
 802fb52:	78b6      	ldrb	r6, [r6, #2]
 802fb54:	b289      	uxth	r1, r1
 802fb56:	fb01 f404 	mul.w	r4, r1, r4
 802fb5a:	fb01 fe0e 	mul.w	lr, r1, lr
 802fb5e:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802fb62:	fb01 f106 	mul.w	r1, r1, r6
 802fb66:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802fb68:	b292      	uxth	r2, r2
 802fb6a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fb6e:	5df7      	ldrb	r7, [r6, r7]
 802fb70:	1a9b      	subs	r3, r3, r2
 802fb72:	f89c 6001 	ldrb.w	r6, [ip, #1]
 802fb76:	f89c c002 	ldrb.w	ip, [ip, #2]
 802fb7a:	b29b      	uxth	r3, r3
 802fb7c:	fb03 4606 	mla	r6, r3, r6, r4
 802fb80:	fb03 e707 	mla	r7, r3, r7, lr
 802fb84:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802fb86:	fb03 130c 	mla	r3, r3, ip, r1
 802fb8a:	7861      	ldrb	r1, [r4, #1]
 802fb8c:	f894 c000 	ldrb.w	ip, [r4]
 802fb90:	78a4      	ldrb	r4, [r4, #2]
 802fb92:	fb02 6601 	mla	r6, r2, r1, r6
 802fb96:	fb02 770c 	mla	r7, r2, ip, r7
 802fb9a:	fb02 3104 	mla	r1, r2, r4, r3
 802fb9e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802fba0:	7862      	ldrb	r2, [r4, #1]
 802fba2:	7823      	ldrb	r3, [r4, #0]
 802fba4:	78a4      	ldrb	r4, [r4, #2]
 802fba6:	fb00 6602 	mla	r6, r0, r2, r6
 802fbaa:	fb00 7303 	mla	r3, r0, r3, r7
 802fbae:	fb00 1204 	mla	r2, r0, r4, r1
 802fbb2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802fbb6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802fbba:	0212      	lsls	r2, r2, #8
 802fbbc:	4333      	orrs	r3, r6
 802fbbe:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802fbc2:	4313      	orrs	r3, r2
 802fbc4:	f8c8 3000 	str.w	r3, [r8]
 802fbc8:	e786      	b.n	802fad8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fbca:	5d1c      	ldrb	r4, [r3, r4]
 802fbcc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fbce:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fbd2:	18e3      	adds	r3, r4, r3
 802fbd4:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 802fbd8:	930e      	str	r3, [sp, #56]	@ 0x38
 802fbda:	4666      	mov	r6, ip
 802fbdc:	e7b0      	b.n	802fb40 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fbde:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fbe2:	e7ad      	b.n	802fb40 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fbe4:	f43f ae41 	beq.w	802f86a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fbe8:	1e4e      	subs	r6, r1, #1
 802fbea:	e680      	b.n	802f8ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>

0802fbec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 802fbec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fbf0:	b087      	sub	sp, #28
 802fbf2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802fbf6:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	@ 0x48
 802fbfa:	fb04 070c 	mla	r7, r4, ip, r0
 802fbfe:	9100      	str	r1, [sp, #0]
 802fc00:	f89d 1058 	ldrb.w	r1, [sp, #88]	@ 0x58
 802fc04:	2c00      	cmp	r4, #0
 802fc06:	eb02 0b07 	add.w	fp, r2, r7
 802fc0a:	f104 0501 	add.w	r5, r4, #1
 802fc0e:	f9bd 8044 	ldrsh.w	r8, [sp, #68]	@ 0x44
 802fc12:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 802fc16:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 802fc1a:	9101      	str	r1, [sp, #4]
 802fc1c:	db02      	blt.n	802fc24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x38>
 802fc1e:	45a0      	cmp	r8, r4
 802fc20:	f300 811a 	bgt.w	802fe58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26c>
 802fc24:	2700      	movs	r7, #0
 802fc26:	46be      	mov	lr, r7
 802fc28:	46b9      	mov	r9, r7
 802fc2a:	463c      	mov	r4, r7
 802fc2c:	2d00      	cmp	r5, #0
 802fc2e:	db02      	blt.n	802fc36 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x4a>
 802fc30:	45a8      	cmp	r8, r5
 802fc32:	f300 812b 	bgt.w	802fe8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a0>
 802fc36:	f04f 0c00 	mov.w	ip, #0
 802fc3a:	46e0      	mov	r8, ip
 802fc3c:	4665      	mov	r5, ip
 802fc3e:	f8cd c010 	str.w	ip, [sp, #16]
 802fc42:	f1ba 0f0f 	cmp.w	sl, #15
 802fc46:	f200 8167 	bhi.w	802ff18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fc4a:	2e0f      	cmp	r6, #15
 802fc4c:	f200 8164 	bhi.w	802ff18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fc50:	b2b2      	uxth	r2, r6
 802fc52:	fa1f f38a 	uxth.w	r3, sl
 802fc56:	fb02 f603 	mul.w	r6, r2, r3
 802fc5a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802fc5e:	b292      	uxth	r2, r2
 802fc60:	fb02 fa08 	mul.w	sl, r2, r8
 802fc64:	fb06 fb0c 	mul.w	fp, r6, ip
 802fc68:	011b      	lsls	r3, r3, #4
 802fc6a:	1b98      	subs	r0, r3, r6
 802fc6c:	b280      	uxth	r0, r0
 802fc6e:	9002      	str	r0, [sp, #8]
 802fc70:	fb00 f007 	mul.w	r0, r0, r7
 802fc74:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fc78:	1a9b      	subs	r3, r3, r2
 802fc7a:	b29b      	uxth	r3, r3
 802fc7c:	fb03 000e 	mla	r0, r3, lr, r0
 802fc80:	4450      	add	r0, sl
 802fc82:	4458      	add	r0, fp
 802fc84:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802fc88:	9003      	str	r0, [sp, #12]
 802fc8a:	2800      	cmp	r0, #0
 802fc8c:	f000 80e1 	beq.w	802fe52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x266>
 802fc90:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802fc94:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802fc98:	f009 1bff 	and.w	fp, r9, #16711935	@ 0xff00ff
 802fc9c:	9105      	str	r1, [sp, #20]
 802fc9e:	d01d      	beq.n	802fcdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xf0>
 802fca0:	fb0b fb0e 	mul.w	fp, fp, lr
 802fca4:	fb01 fe0e 	mul.w	lr, r1, lr
 802fca8:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802fcac:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fcb0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802fcb4:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802fcb8:	44d3      	add	fp, sl
 802fcba:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802fcbe:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802fcc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fcc6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802fcca:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802fcce:	ea4b 0e0e 	orr.w	lr, fp, lr
 802fcd2:	f40e 417f 	and.w	r1, lr, #65280	@ 0xff00
 802fcd6:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802fcda:	9105      	str	r1, [sp, #20]
 802fcdc:	2fff      	cmp	r7, #255	@ 0xff
 802fcde:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fce2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fce6:	d01b      	beq.n	802fd20 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x134>
 802fce8:	fb0e fe07 	mul.w	lr, lr, r7
 802fcec:	fb04 f407 	mul.w	r4, r4, r7
 802fcf0:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802fcf4:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fcf8:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802fcfc:	f504 7080 	add.w	r0, r4, #256	@ 0x100
 802fd00:	44d6      	add	lr, sl
 802fd02:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802fd06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fd0a:	0a24      	lsrs	r4, r4, #8
 802fd0c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802fd10:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fd14:	ea4e 0404 	orr.w	r4, lr, r4
 802fd18:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fd1c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fd20:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802fd24:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fd28:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd2c:	d019      	beq.n	802fd62 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x176>
 802fd2e:	fb00 f008 	mul.w	r0, r0, r8
 802fd32:	fb05 f508 	mul.w	r5, r5, r8
 802fd36:	ea4f 2910 	mov.w	r9, r0, lsr #8
 802fd3a:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802fd3e:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802fd42:	f505 7780 	add.w	r7, r5, #256	@ 0x100
 802fd46:	4448      	add	r0, r9
 802fd48:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 802fd4c:	0a00      	lsrs	r0, r0, #8
 802fd4e:	0a2d      	lsrs	r5, r5, #8
 802fd50:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802fd54:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd58:	4305      	orrs	r5, r0
 802fd5a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fd5e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd62:	9904      	ldr	r1, [sp, #16]
 802fd64:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802fd68:	f001 1aff 	and.w	sl, r1, #16711935	@ 0xff00ff
 802fd6c:	f401 497f 	and.w	r9, r1, #65280	@ 0xff00
 802fd70:	d01c      	beq.n	802fdac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x1c0>
 802fd72:	fb0a fa0c 	mul.w	sl, sl, ip
 802fd76:	fb09 fc0c 	mul.w	ip, r9, ip
 802fd7a:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802fd7e:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802fd82:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802fd86:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802fd8a:	44c2      	add	sl, r8
 802fd8c:	eb07 2c1c 	add.w	ip, r7, ip, lsr #8
 802fd90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802fd94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802fd98:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fd9c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802fda0:	ea4a 090c 	orr.w	r9, sl, ip
 802fda4:	f009 1aff 	and.w	sl, r9, #16711935	@ 0xff00ff
 802fda8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fdac:	f8bd 8004 	ldrh.w	r8, [sp, #4]
 802fdb0:	9903      	ldr	r1, [sp, #12]
 802fdb2:	fb01 fc08 	mul.w	ip, r1, r8
 802fdb6:	f10c 0701 	add.w	r7, ip, #1
 802fdba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802fdbe:	ea6f 2c17 	mvn.w	ip, r7, lsr #8
 802fdc2:	9902      	ldr	r1, [sp, #8]
 802fdc4:	fa5f f78c 	uxtb.w	r7, ip
 802fdc8:	fb04 f401 	mul.w	r4, r4, r1
 802fdcc:	fb0e fe01 	mul.w	lr, lr, r1
 802fdd0:	9905      	ldr	r1, [sp, #20]
 802fdd2:	fb0b ee03 	mla	lr, fp, r3, lr
 802fdd6:	fb01 4303 	mla	r3, r1, r3, r4
 802fdda:	fb00 e002 	mla	r0, r0, r2, lr
 802fdde:	fb05 3502 	mla	r5, r5, r2, r3
 802fde2:	fb0a 0a06 	mla	sl, sl, r6, r0
 802fde6:	fb09 5906 	mla	r9, r9, r6, r5
 802fdea:	ea4f 261a 	mov.w	r6, sl, lsr #8
 802fdee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802fdf2:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802fdf6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fdfa:	ea46 0609 	orr.w	r6, r6, r9
 802fdfe:	b2f2      	uxtb	r2, r6
 802fe00:	f3c6 2307 	ubfx	r3, r6, #8, #8
 802fe04:	0c36      	lsrs	r6, r6, #16
 802fe06:	9900      	ldr	r1, [sp, #0]
 802fe08:	fb12 f408 	smulbb	r4, r2, r8
 802fe0c:	fb13 f008 	smulbb	r0, r3, r8
 802fe10:	fb16 f808 	smulbb	r8, r6, r8
 802fe14:	780a      	ldrb	r2, [r1, #0]
 802fe16:	784b      	ldrb	r3, [r1, #1]
 802fe18:	788e      	ldrb	r6, [r1, #2]
 802fe1a:	fb02 4207 	mla	r2, r2, r7, r4
 802fe1e:	fb03 0307 	mla	r3, r3, r7, r0
 802fe22:	fb06 8807 	mla	r8, r6, r7, r8
 802fe26:	b292      	uxth	r2, r2
 802fe28:	b29b      	uxth	r3, r3
 802fe2a:	fa1f f888 	uxth.w	r8, r8
 802fe2e:	1c54      	adds	r4, r2, #1
 802fe30:	1c58      	adds	r0, r3, #1
 802fe32:	f108 0701 	add.w	r7, r8, #1
 802fe36:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802fe3a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802fe3e:	eb07 2818 	add.w	r8, r7, r8, lsr #8
 802fe42:	1212      	asrs	r2, r2, #8
 802fe44:	121b      	asrs	r3, r3, #8
 802fe46:	ea4f 2828 	mov.w	r8, r8, asr #8
 802fe4a:	700a      	strb	r2, [r1, #0]
 802fe4c:	704b      	strb	r3, [r1, #1]
 802fe4e:	f881 8002 	strb.w	r8, [r1, #2]
 802fe52:	b007      	add	sp, #28
 802fe54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fe58:	2800      	cmp	r0, #0
 802fe5a:	db01      	blt.n	802fe60 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x274>
 802fe5c:	4584      	cmp	ip, r0
 802fe5e:	dc40      	bgt.n	802fee2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f6>
 802fe60:	f04f 0e00 	mov.w	lr, #0
 802fe64:	46f1      	mov	r9, lr
 802fe66:	1c42      	adds	r2, r0, #1
 802fe68:	d42b      	bmi.n	802fec2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fe6a:	4594      	cmp	ip, r2
 802fe6c:	dd29      	ble.n	802fec2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fe6e:	f1ba 0f00 	cmp.w	sl, #0
 802fe72:	d005      	beq.n	802fe80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x294>
 802fe74:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802fe78:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802fe7c:	0e27      	lsrs	r7, r4, #24
 802fe7e:	e6d5      	b.n	802fc2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fe80:	2d00      	cmp	r5, #0
 802fe82:	db41      	blt.n	802ff08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe84:	45a8      	cmp	r8, r5
 802fe86:	dd3f      	ble.n	802ff08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe88:	4657      	mov	r7, sl
 802fe8a:	4654      	mov	r4, sl
 802fe8c:	b1e6      	cbz	r6, 802fec8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2dc>
 802fe8e:	2800      	cmp	r0, #0
 802fe90:	db32      	blt.n	802fef8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe92:	4584      	cmp	ip, r0
 802fe94:	dd30      	ble.n	802fef8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe96:	f81b 200c 	ldrb.w	r2, [fp, ip]
 802fe9a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802fe9e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802fea2:	3001      	adds	r0, #1
 802fea4:	d423      	bmi.n	802feee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fea6:	4584      	cmp	ip, r0
 802fea8:	dd21      	ble.n	802feee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802feaa:	f1ba 0f00 	cmp.w	sl, #0
 802feae:	d027      	beq.n	802ff00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x314>
 802feb0:	44dc      	add	ip, fp
 802feb2:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802feb6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802feba:	9304      	str	r3, [sp, #16]
 802febc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802fec0:	e6bf      	b.n	802fc42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fec2:	2700      	movs	r7, #0
 802fec4:	463c      	mov	r4, r7
 802fec6:	e6b1      	b.n	802fc2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fec8:	f1ba 0f0f 	cmp.w	sl, #15
 802fecc:	d824      	bhi.n	802ff18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fece:	fa1f f38a 	uxth.w	r3, sl
 802fed2:	4632      	mov	r2, r6
 802fed4:	46b3      	mov	fp, r6
 802fed6:	46b2      	mov	sl, r6
 802fed8:	9604      	str	r6, [sp, #16]
 802feda:	4635      	mov	r5, r6
 802fedc:	46b4      	mov	ip, r6
 802fede:	46b0      	mov	r8, r6
 802fee0:	e6c2      	b.n	802fc68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802fee2:	5dd2      	ldrb	r2, [r2, r7]
 802fee4:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 802fee8:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802feec:	e7bb      	b.n	802fe66 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x27a>
 802feee:	f04f 0c00 	mov.w	ip, #0
 802fef2:	f8cd c010 	str.w	ip, [sp, #16]
 802fef6:	e6a4      	b.n	802fc42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fef8:	f04f 0800 	mov.w	r8, #0
 802fefc:	4645      	mov	r5, r8
 802fefe:	e7d0      	b.n	802fea2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2b6>
 802ff00:	f8cd a010 	str.w	sl, [sp, #16]
 802ff04:	46d4      	mov	ip, sl
 802ff06:	e6a0      	b.n	802fc4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802ff08:	4654      	mov	r4, sl
 802ff0a:	f8cd a010 	str.w	sl, [sp, #16]
 802ff0e:	4655      	mov	r5, sl
 802ff10:	46d4      	mov	ip, sl
 802ff12:	46d0      	mov	r8, sl
 802ff14:	4657      	mov	r7, sl
 802ff16:	e698      	b.n	802fc4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802ff18:	4b03      	ldr	r3, [pc, #12]	@ (802ff28 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x33c>)
 802ff1a:	4a04      	ldr	r2, [pc, #16]	@ (802ff2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x340>)
 802ff1c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ff20:	4803      	ldr	r0, [pc, #12]	@ (802ff30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x344>)
 802ff22:	f002 faf1 	bl	8032508 <__assert_func>
 802ff26:	bf00      	nop
 802ff28:	080366e4 	.word	0x080366e4
 802ff2c:	08036d60 	.word	0x08036d60
 802ff30:	0803686c 	.word	0x0803686c

0802ff34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ff34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ff38:	ed2d 8b08 	vpush	{d8-d11}
 802ff3c:	b0a9      	sub	sp, #164	@ 0xa4
 802ff3e:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802ff42:	eeb0 aa40 	vmov.f32	s20, s0
 802ff46:	46d9      	mov	r9, fp
 802ff48:	eef0 9a60 	vmov.f32	s19, s1
 802ff4c:	eeb0 9a41 	vmov.f32	s18, s2
 802ff50:	eef0 8a62 	vmov.f32	s17, s5
 802ff54:	eeb0 8a43 	vmov.f32	s16, s6
 802ff58:	eef0 ba44 	vmov.f32	s23, s8
 802ff5c:	eeb0 ba64 	vmov.f32	s22, s9
 802ff60:	eef0 aa45 	vmov.f32	s21, s10
 802ff64:	46d3      	mov	fp, sl
 802ff66:	9022      	str	r0, [sp, #136]	@ 0x88
 802ff68:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 802ff6a:	9115      	str	r1, [sp, #84]	@ 0x54
 802ff6c:	9218      	str	r2, [sp, #96]	@ 0x60
 802ff6e:	6841      	ldr	r1, [r0, #4]
 802ff70:	9a40      	ldr	r2, [sp, #256]	@ 0x100
 802ff72:	469e      	mov	lr, r3
 802ff74:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 802ff76:	6807      	ldr	r7, [r0, #0]
 802ff78:	fb01 2303 	mla	r3, r1, r3, r2
 802ff7c:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802ff7e:	9842      	ldr	r0, [sp, #264]	@ 0x108
 802ff80:	6852      	ldr	r2, [r2, #4]
 802ff82:	f89d 110c 	ldrb.w	r1, [sp, #268]	@ 0x10c
 802ff86:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 802ff8a:	6800      	ldr	r0, [r0, #0]
 802ff8c:	1d13      	adds	r3, r2, #4
 802ff8e:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ff90:	b28b      	uxth	r3, r1
 802ff92:	9123      	str	r1, [sp, #140]	@ 0x8c
 802ff94:	9011      	str	r0, [sp, #68]	@ 0x44
 802ff96:	9317      	str	r3, [sp, #92]	@ 0x5c
 802ff98:	9712      	str	r7, [sp, #72]	@ 0x48
 802ff9a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ff9c:	2b00      	cmp	r3, #0
 802ff9e:	dc02      	bgt.n	802ffa6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802ffa0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802ffa2:	2b00      	cmp	r3, #0
 802ffa4:	dd68      	ble.n	8030078 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ffa6:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802ffa8:	f1be 0f00 	cmp.w	lr, #0
 802ffac:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 802ffb0:	b228      	sxth	r0, r5
 802ffb2:	b23e      	sxth	r6, r7
 802ffb4:	f340 83a0 	ble.w	80306f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c4>
 802ffb8:	e9dd 8a3d 	ldrd	r8, sl, [sp, #244]	@ 0xf4
 802ffbc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ffbe:	1e44      	subs	r4, r0, #1
 802ffc0:	f106 3cff 	add.w	ip, r6, #4294967295
 802ffc4:	9709      	str	r7, [sp, #36]	@ 0x24
 802ffc6:	ea5f 4329 	movs.w	r3, r9, asr #16
 802ffca:	ea4f 422b 	mov.w	r2, fp, asr #16
 802ffce:	d405      	bmi.n	802ffdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ffd0:	42a3      	cmp	r3, r4
 802ffd2:	da03      	bge.n	802ffdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ffd4:	2a00      	cmp	r2, #0
 802ffd6:	db01      	blt.n	802ffdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ffd8:	4562      	cmp	r2, ip
 802ffda:	db52      	blt.n	8030082 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802ffdc:	1c5f      	adds	r7, r3, #1
 802ffde:	d406      	bmi.n	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ffe0:	4287      	cmp	r7, r0
 802ffe2:	dc04      	bgt.n	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ffe4:	1c57      	adds	r7, r2, #1
 802ffe6:	d402      	bmi.n	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ffe8:	42b7      	cmp	r7, r6
 802ffea:	f340 835f 	ble.w	80306ac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802ffee:	f1be 0e01 	subs.w	lr, lr, #1
 802fff2:	44c1      	add	r9, r8
 802fff4:	44d3      	add	fp, sl
 802fff6:	f101 0104 	add.w	r1, r1, #4
 802fffa:	d1e4      	bne.n	802ffc6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802fffc:	9112      	str	r1, [sp, #72]	@ 0x48
 802fffe:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8030000:	2b00      	cmp	r3, #0
 8030002:	dd39      	ble.n	8030078 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8030004:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8030008:	ee3a aa2b 	vadd.f32	s20, s20, s23
 803000c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8030010:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8030014:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8030018:	ee29 6aa7 	vmul.f32	s12, s19, s15
 803001c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8030020:	ee76 6a68 	vsub.f32	s13, s12, s17
 8030024:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8030028:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 803002c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8030030:	ee16 2a90 	vmov	r2, s13
 8030034:	3b01      	subs	r3, #1
 8030036:	9315      	str	r3, [sp, #84]	@ 0x54
 8030038:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 803003a:	fb92 f3f3 	sdiv	r3, r2, r3
 803003e:	ee17 2a10 	vmov	r2, s14
 8030042:	eeb0 7a48 	vmov.f32	s14, s16
 8030046:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 803004a:	ee17 ba10 	vmov	fp, s14
 803004e:	eeb0 7a68 	vmov.f32	s14, s17
 8030052:	933d      	str	r3, [sp, #244]	@ 0xf4
 8030054:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8030056:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 803005a:	fb92 f3f3 	sdiv	r3, r2, r3
 803005e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8030060:	933e      	str	r3, [sp, #248]	@ 0xf8
 8030062:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8030064:	ee17 9a10 	vmov	r9, s14
 8030068:	eeb0 8a67 	vmov.f32	s16, s15
 803006c:	eef0 8a46 	vmov.f32	s17, s12
 8030070:	bf14      	ite	ne
 8030072:	469e      	movne	lr, r3
 8030074:	4696      	moveq	lr, r2
 8030076:	e790      	b.n	802ff9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8030078:	b029      	add	sp, #164	@ 0xa4
 803007a:	ecbd 8b08 	vpop	{d8-d11}
 803007e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030082:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030084:	9112      	str	r1, [sp, #72]	@ 0x48
 8030086:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8030088:	f10e 32ff 	add.w	r2, lr, #4294967295
 803008c:	fb01 9302 	mla	r3, r1, r2, r9
 8030090:	141b      	asrs	r3, r3, #16
 8030092:	920a      	str	r2, [sp, #40]	@ 0x28
 8030094:	f100 816a 	bmi.w	803036c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030098:	42a3      	cmp	r3, r4
 803009a:	f280 8167 	bge.w	803036c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803009e:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 80300a0:	fb03 b302 	mla	r3, r3, r2, fp
 80300a4:	141b      	asrs	r3, r3, #16
 80300a6:	f100 8161 	bmi.w	803036c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 80300aa:	3e01      	subs	r6, #1
 80300ac:	42b3      	cmp	r3, r6
 80300ae:	f280 815d 	bge.w	803036c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 80300b2:	f1be 0f00 	cmp.w	lr, #0
 80300b6:	dda2      	ble.n	802fffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80300b8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80300ba:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 80300be:	3304      	adds	r3, #4
 80300c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80300c2:	f8cd b0f0 	str.w	fp, [sp, #240]	@ 0xf0
 80300c6:	4606      	mov	r6, r0
 80300c8:	465b      	mov	r3, fp
 80300ca:	e12a      	b.n	8030322 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80300cc:	785f      	ldrb	r7, [r3, #1]
 80300ce:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 80300d2:	9713      	str	r7, [sp, #76]	@ 0x4c
 80300d4:	0e3f      	lsrs	r7, r7, #24
 80300d6:	970c      	str	r7, [sp, #48]	@ 0x30
 80300d8:	b16a      	cbz	r2, 80300f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80300da:	199f      	adds	r7, r3, r6
 80300dc:	5d9b      	ldrb	r3, [r3, r6]
 80300de:	462e      	mov	r6, r5
 80300e0:	787f      	ldrb	r7, [r7, #1]
 80300e2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80300e6:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 80300ea:	9314      	str	r3, [sp, #80]	@ 0x50
 80300ec:	9516      	str	r5, [sp, #88]	@ 0x58
 80300ee:	0e1b      	lsrs	r3, r3, #24
 80300f0:	0e2d      	lsrs	r5, r5, #24
 80300f2:	950e      	str	r5, [sp, #56]	@ 0x38
 80300f4:	930d      	str	r3, [sp, #52]	@ 0x34
 80300f6:	fa1f fc81 	uxth.w	ip, r1
 80300fa:	b292      	uxth	r2, r2
 80300fc:	fb0c f602 	mul.w	r6, ip, r2
 8030100:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8030104:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8030106:	ebac 0706 	sub.w	r7, ip, r6
 803010a:	b2bf      	uxth	r7, r7
 803010c:	fb07 f103 	mul.w	r1, r7, r3
 8030110:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8030114:	b292      	uxth	r2, r2
 8030116:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 803011a:	1a9b      	subs	r3, r3, r2
 803011c:	b29b      	uxth	r3, r3
 803011e:	fb03 1104 	mla	r1, r3, r4, r1
 8030122:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8030124:	fb02 1105 	mla	r1, r2, r5, r1
 8030128:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 803012a:	fb06 1105 	mla	r1, r6, r5, r1
 803012e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8030132:	2900      	cmp	r1, #0
 8030134:	f000 80e3 	beq.w	80302fe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8030138:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 803013c:	2cff      	cmp	r4, #255	@ 0xff
 803013e:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8030142:	950f      	str	r5, [sp, #60]	@ 0x3c
 8030144:	9010      	str	r0, [sp, #64]	@ 0x40
 8030146:	d01e      	beq.n	8030186 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8030148:	fb00 f004 	mul.w	r0, r0, r4
 803014c:	fb05 fe04 	mul.w	lr, r5, r4
 8030150:	4604      	mov	r4, r0
 8030152:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8030156:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 803015a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 803015e:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8030162:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8030166:	44e6      	add	lr, ip
 8030168:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 803016c:	0a24      	lsrs	r4, r4, #8
 803016e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030172:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8030176:	ea4e 0e04 	orr.w	lr, lr, r4
 803017a:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 803017e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8030180:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8030184:	9010      	str	r0, [sp, #64]	@ 0x40
 8030186:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8030188:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 803018c:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8030190:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8030192:	28ff      	cmp	r0, #255	@ 0xff
 8030194:	d01c      	beq.n	80301d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8030196:	fb0e fe00 	mul.w	lr, lr, r0
 803019a:	fb08 f800 	mul.w	r8, r8, r0
 803019e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 80301a2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80301a6:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 80301aa:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 80301ae:	44a6      	add	lr, r4
 80301b0:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 80301b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80301b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80301bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80301c0:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80301c4:	ea4e 0808 	orr.w	r8, lr, r8
 80301c8:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 80301cc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80301d0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80301d2:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 80301d6:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 80301da:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80301dc:	28ff      	cmp	r0, #255	@ 0xff
 80301de:	d01c      	beq.n	803021a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80301e0:	fb0c fc00 	mul.w	ip, ip, r0
 80301e4:	fb0a fa00 	mul.w	sl, sl, r0
 80301e8:	ea4f 241c 	mov.w	r4, ip, lsr #8
 80301ec:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80301f0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80301f4:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 80301f8:	44a4      	add	ip, r4
 80301fa:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80301fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8030202:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8030206:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 803020a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803020e:	ea4c 0a0a 	orr.w	sl, ip, sl
 8030212:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 8030216:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803021a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 803021c:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8030220:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8030224:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8030226:	2cff      	cmp	r4, #255	@ 0xff
 8030228:	d019      	beq.n	803025e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 803022a:	fb00 f004 	mul.w	r0, r0, r4
 803022e:	fb0b fb04 	mul.w	fp, fp, r4
 8030232:	0a04      	lsrs	r4, r0, #8
 8030234:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 8030238:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 803023c:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8030240:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 8030244:	4428      	add	r0, r5
 8030246:	0a00      	lsrs	r0, r0, #8
 8030248:	0a24      	lsrs	r4, r4, #8
 803024a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 803024e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8030252:	ea40 0b0b 	orr.w	fp, r0, fp
 8030256:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 803025a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 803025e:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 8030260:	fb0e fe07 	mul.w	lr, lr, r7
 8030264:	fb01 f105 	mul.w	r1, r1, r5
 8030268:	1c4c      	adds	r4, r1, #1
 803026a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 803026e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8030272:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8030274:	fb08 f707 	mul.w	r7, r8, r7
 8030278:	fb04 ee03 	mla	lr, r4, r3, lr
 803027c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 803027e:	fb0c ee02 	mla	lr, ip, r2, lr
 8030282:	fb04 7703 	mla	r7, r4, r3, r7
 8030286:	fb0a 7702 	mla	r7, sl, r2, r7
 803028a:	fb00 ee06 	mla	lr, r0, r6, lr
 803028e:	fb0b 7706 	mla	r7, fp, r6, r7
 8030292:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030296:	0a3f      	lsrs	r7, r7, #8
 8030298:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 803029c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80302a0:	ea4e 0303 	orr.w	r3, lr, r3
 80302a4:	b2df      	uxtb	r7, r3
 80302a6:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80302aa:	0c1b      	lsrs	r3, r3, #16
 80302ac:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80302ae:	fb17 f705 	smulbb	r7, r7, r5
 80302b2:	fb16 f605 	smulbb	r6, r6, r5
 80302b6:	fb13 f305 	smulbb	r3, r3, r5
 80302ba:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 80302be:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 80302c2:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 80302c6:	b2c9      	uxtb	r1, r1
 80302c8:	fb00 7001 	mla	r0, r0, r1, r7
 80302cc:	fb02 6201 	mla	r2, r2, r1, r6
 80302d0:	fb0c 3101 	mla	r1, ip, r1, r3
 80302d4:	b280      	uxth	r0, r0
 80302d6:	b292      	uxth	r2, r2
 80302d8:	b289      	uxth	r1, r1
 80302da:	1c47      	adds	r7, r0, #1
 80302dc:	1c56      	adds	r6, r2, #1
 80302de:	1c4b      	adds	r3, r1, #1
 80302e0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80302e4:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 80302e8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80302ec:	1200      	asrs	r0, r0, #8
 80302ee:	1212      	asrs	r2, r2, #8
 80302f0:	1209      	asrs	r1, r1, #8
 80302f2:	f804 0c04 	strb.w	r0, [r4, #-4]
 80302f6:	f804 2c03 	strb.w	r2, [r4, #-3]
 80302fa:	f804 1c02 	strb.w	r1, [r4, #-2]
 80302fe:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 8030300:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 8030302:	4491      	add	r9, r2
 8030304:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 8030306:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8030308:	440a      	add	r2, r1
 803030a:	923c      	str	r2, [sp, #240]	@ 0xf0
 803030c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 803030e:	3b01      	subs	r3, #1
 8030310:	930a      	str	r3, [sp, #40]	@ 0x28
 8030312:	3204      	adds	r2, #4
 8030314:	3301      	adds	r3, #1
 8030316:	9209      	str	r2, [sp, #36]	@ 0x24
 8030318:	d021      	beq.n	803035e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 803031a:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 803031c:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 8030320:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8030322:	ea4f 4229 	mov.w	r2, r9, asr #16
 8030326:	141b      	asrs	r3, r3, #16
 8030328:	fb06 2303 	mla	r3, r6, r3, r2
 803032c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 803032e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8030330:	5ce2      	ldrb	r2, [r4, r3]
 8030332:	f3c9 3103 	ubfx	r1, r9, #12, #4
 8030336:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 803033a:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 803033c:	4423      	add	r3, r4
 803033e:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8030342:	0e04      	lsrs	r4, r0, #24
 8030344:	2900      	cmp	r1, #0
 8030346:	f47f aec1 	bne.w	80300cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 803034a:	2a00      	cmp	r2, #0
 803034c:	f43f aed3 	beq.w	80300f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8030350:	5d9b      	ldrb	r3, [r3, r6]
 8030352:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8030356:	9314      	str	r3, [sp, #80]	@ 0x50
 8030358:	0e1b      	lsrs	r3, r3, #24
 803035a:	930d      	str	r3, [sp, #52]	@ 0x34
 803035c:	e6cb      	b.n	80300f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 803035e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8030360:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 8030364:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 8030368:	9312      	str	r3, [sp, #72]	@ 0x48
 803036a:	e648      	b.n	802fffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803036c:	f1be 0f00 	cmp.w	lr, #0
 8030370:	f77f ae45 	ble.w	802fffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8030374:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8030378:	ea4f 4329 	mov.w	r3, r9, asr #16
 803037c:	ea4f 422b 	mov.w	r2, fp, asr #16
 8030380:	2b00      	cmp	r3, #0
 8030382:	46be      	mov	lr, r7
 8030384:	4629      	mov	r1, r5
 8030386:	e9dd 653d 	ldrd	r6, r5, [sp, #244]	@ 0xf4
 803038a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 803038e:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8030390:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8030394:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030398:	f2c0 815d 	blt.w	8030656 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803039c:	f101 3cff 	add.w	ip, r1, #4294967295
 80303a0:	4563      	cmp	r3, ip
 80303a2:	f280 8158 	bge.w	8030656 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 80303a6:	2a00      	cmp	r2, #0
 80303a8:	f2c0 8155 	blt.w	8030656 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 80303ac:	f10e 3cff 	add.w	ip, lr, #4294967295
 80303b0:	4562      	cmp	r2, ip
 80303b2:	f280 8150 	bge.w	8030656 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 80303b6:	fa0f fc81 	sxth.w	ip, r1
 80303ba:	fb02 330c 	mla	r3, r2, ip, r3
 80303be:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80303c0:	5cd1      	ldrb	r1, [r2, r3]
 80303c2:	18d3      	adds	r3, r2, r3
 80303c4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80303c6:	469e      	mov	lr, r3
 80303c8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80303cc:	0e19      	lsrs	r1, r3, #24
 80303ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80303d0:	910f      	str	r1, [sp, #60]	@ 0x3c
 80303d2:	2800      	cmp	r0, #0
 80303d4:	f000 8171 	beq.w	80306ba <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 80303d8:	4671      	mov	r1, lr
 80303da:	f89e e001 	ldrb.w	lr, [lr, #1]
 80303de:	4613      	mov	r3, r2
 80303e0:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 80303e4:	9224      	str	r2, [sp, #144]	@ 0x90
 80303e6:	0e12      	lsrs	r2, r2, #24
 80303e8:	921a      	str	r2, [sp, #104]	@ 0x68
 80303ea:	2f00      	cmp	r7, #0
 80303ec:	f040 8171 	bne.w	80306d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79e>
 80303f0:	b280      	uxth	r0, r0
 80303f2:	b2bf      	uxth	r7, r7
 80303f4:	fb00 f207 	mul.w	r2, r0, r7
 80303f8:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 80303fc:	ebac 0002 	sub.w	r0, ip, r2
 8030400:	b280      	uxth	r0, r0
 8030402:	4603      	mov	r3, r0
 8030404:	9010      	str	r0, [sp, #64]	@ 0x40
 8030406:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8030408:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 803040c:	fb03 f000 	mul.w	r0, r3, r0
 8030410:	fa1f fe87 	uxth.w	lr, r7
 8030414:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 8030418:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 803041a:	eba7 070e 	sub.w	r7, r7, lr
 803041e:	b2bf      	uxth	r7, r7
 8030420:	fb07 0003 	mla	r0, r7, r3, r0
 8030424:	9719      	str	r7, [sp, #100]	@ 0x64
 8030426:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 8030428:	fb0e 0007 	mla	r0, lr, r7, r0
 803042c:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 803042e:	fb02 0007 	mla	r0, r2, r7, r0
 8030432:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8030436:	900f      	str	r0, [sp, #60]	@ 0x3c
 8030438:	2800      	cmp	r0, #0
 803043a:	f000 80f6 	beq.w	803062a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803043e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8030440:	2bff      	cmp	r3, #255	@ 0xff
 8030442:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 8030446:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 803044a:	901d      	str	r0, [sp, #116]	@ 0x74
 803044c:	9109      	str	r1, [sp, #36]	@ 0x24
 803044e:	d01b      	beq.n	8030488 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x554>
 8030450:	fb01 f103 	mul.w	r1, r1, r3
 8030454:	fb00 f003 	mul.w	r0, r0, r3
 8030458:	460b      	mov	r3, r1
 803045a:	0a01      	lsrs	r1, r0, #8
 803045c:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 8030460:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030464:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8030468:	4439      	add	r1, r7
 803046a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 803046e:	0a09      	lsrs	r1, r1, #8
 8030470:	0a1b      	lsrs	r3, r3, #8
 8030472:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030476:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 803047a:	430b      	orrs	r3, r1
 803047c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8030480:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030484:	911d      	str	r1, [sp, #116]	@ 0x74
 8030486:	9309      	str	r3, [sp, #36]	@ 0x24
 8030488:	9924      	ldr	r1, [sp, #144]	@ 0x90
 803048a:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 803048c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8030490:	2fff      	cmp	r7, #255	@ 0xff
 8030492:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8030496:	931e      	str	r3, [sp, #120]	@ 0x78
 8030498:	911f      	str	r1, [sp, #124]	@ 0x7c
 803049a:	d01c      	beq.n	80304d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a2>
 803049c:	fb01 f107 	mul.w	r1, r1, r7
 80304a0:	fb03 f307 	mul.w	r3, r3, r7
 80304a4:	460f      	mov	r7, r1
 80304a6:	0a19      	lsrs	r1, r3, #8
 80304a8:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 80304ac:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80304b0:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80304b4:	4401      	add	r1, r0
 80304b6:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80304ba:	0a09      	lsrs	r1, r1, #8
 80304bc:	0a1b      	lsrs	r3, r3, #8
 80304be:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80304c2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80304c6:	ea41 0003 	orr.w	r0, r1, r3
 80304ca:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 80304ce:	931e      	str	r3, [sp, #120]	@ 0x78
 80304d0:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80304d4:	931f      	str	r3, [sp, #124]	@ 0x7c
 80304d6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80304d8:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80304dc:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 80304e0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80304e2:	9120      	str	r1, [sp, #128]	@ 0x80
 80304e4:	2bff      	cmp	r3, #255	@ 0xff
 80304e6:	d01b      	beq.n	8030520 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80304e8:	fb01 f103 	mul.w	r1, r1, r3
 80304ec:	fb0c fc03 	mul.w	ip, ip, r3
 80304f0:	0a08      	lsrs	r0, r1, #8
 80304f2:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 80304f6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304fa:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 80304fe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8030502:	4401      	add	r1, r0
 8030504:	0a09      	lsrs	r1, r1, #8
 8030506:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 803050a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 803050e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030512:	ea41 0c0c 	orr.w	ip, r1, ip
 8030516:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 803051a:	9320      	str	r3, [sp, #128]	@ 0x80
 803051c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030520:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8030522:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8030526:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 803052a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 803052c:	9321      	str	r3, [sp, #132]	@ 0x84
 803052e:	28ff      	cmp	r0, #255	@ 0xff
 8030530:	d019      	beq.n	8030566 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x632>
 8030532:	fb03 f300 	mul.w	r3, r3, r0
 8030536:	fb07 f700 	mul.w	r7, r7, r0
 803053a:	0a18      	lsrs	r0, r3, #8
 803053c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8030540:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8030544:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 8030548:	4418      	add	r0, r3
 803054a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 803054e:	0a00      	lsrs	r0, r0, #8
 8030550:	0a3f      	lsrs	r7, r7, #8
 8030552:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8030556:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 803055a:	4307      	orrs	r7, r0
 803055c:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 8030560:	9321      	str	r3, [sp, #132]	@ 0x84
 8030562:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8030566:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030568:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 803056a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 803056c:	fb01 f100 	mul.w	r1, r1, r0
 8030570:	4608      	mov	r0, r1
 8030572:	3101      	adds	r1, #1
 8030574:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8030578:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 803057c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 803057e:	9125      	str	r1, [sp, #148]	@ 0x94
 8030580:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8030582:	fb01 f100 	mul.w	r1, r1, r0
 8030586:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030588:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 803058a:	fb01 f100 	mul.w	r1, r1, r0
 803058e:	9110      	str	r1, [sp, #64]	@ 0x40
 8030590:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8030592:	4608      	mov	r0, r1
 8030594:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030596:	fb00 1103 	mla	r1, r0, r3, r1
 803059a:	910f      	str	r1, [sp, #60]	@ 0x3c
 803059c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 803059e:	4608      	mov	r0, r1
 80305a0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80305a2:	fb00 1003 	mla	r0, r0, r3, r1
 80305a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80305a8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80305aa:	fb0c 000e 	mla	r0, ip, lr, r0
 80305ae:	fb03 110e 	mla	r1, r3, lr, r1
 80305b2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80305b4:	f89a c002 	ldrb.w	ip, [sl, #2]
 80305b8:	fb03 1102 	mla	r1, r3, r2, r1
 80305bc:	fb07 0302 	mla	r3, r7, r2, r0
 80305c0:	0a0a      	lsrs	r2, r1, #8
 80305c2:	0a1b      	lsrs	r3, r3, #8
 80305c4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80305c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80305cc:	4313      	orrs	r3, r2
 80305ce:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80305d0:	b2df      	uxtb	r7, r3
 80305d2:	f3c3 2007 	ubfx	r0, r3, #8, #8
 80305d6:	0c1b      	lsrs	r3, r3, #16
 80305d8:	fb17 f702 	smulbb	r7, r7, r2
 80305dc:	fb10 f002 	smulbb	r0, r0, r2
 80305e0:	fb13 f302 	smulbb	r3, r3, r2
 80305e4:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 80305e8:	f89a 1000 	ldrb.w	r1, [sl]
 80305ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80305f0:	fb01 710e 	mla	r1, r1, lr, r7
 80305f4:	fb02 020e 	mla	r2, r2, lr, r0
 80305f8:	fb0c 330e 	mla	r3, ip, lr, r3
 80305fc:	b297      	uxth	r7, r2
 80305fe:	fa1f fc81 	uxth.w	ip, r1
 8030602:	b298      	uxth	r0, r3
 8030604:	f10c 0101 	add.w	r1, ip, #1
 8030608:	1c7a      	adds	r2, r7, #1
 803060a:	1c43      	adds	r3, r0, #1
 803060c:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8030610:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8030614:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8030618:	1209      	asrs	r1, r1, #8
 803061a:	1212      	asrs	r2, r2, #8
 803061c:	121b      	asrs	r3, r3, #8
 803061e:	f88a 1000 	strb.w	r1, [sl]
 8030622:	f88a 2001 	strb.w	r2, [sl, #1]
 8030626:	f88a 3002 	strb.w	r3, [sl, #2]
 803062a:	f1b8 0f00 	cmp.w	r8, #0
 803062e:	f10a 0a04 	add.w	sl, sl, #4
 8030632:	44b1      	add	r9, r6
 8030634:	44ab      	add	fp, r5
 8030636:	dd30      	ble.n	803069a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x766>
 8030638:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 803063c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8030640:	2b00      	cmp	r3, #0
 8030642:	f108 38ff 	add.w	r8, r8, #4294967295
 8030646:	ea4f 422b 	mov.w	r2, fp, asr #16
 803064a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 803064e:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030652:	f6bf aea3 	bge.w	803039c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8030656:	f113 0c01 	adds.w	ip, r3, #1
 803065a:	d4e6      	bmi.n	803062a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803065c:	458c      	cmp	ip, r1
 803065e:	dce4      	bgt.n	803062a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8030660:	f112 0c01 	adds.w	ip, r2, #1
 8030664:	d4e1      	bmi.n	803062a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8030666:	45f4      	cmp	ip, lr
 8030668:	dcdf      	bgt.n	803062a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803066a:	fa0f fe8e 	sxth.w	lr, lr
 803066e:	b209      	sxth	r1, r1
 8030670:	e9cd 1e00 	strd	r1, lr, [sp]
 8030674:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8030676:	e9cd 2003 	strd	r2, r0, [sp, #12]
 803067a:	e9cd 7105 	strd	r7, r1, [sp, #20]
 803067e:	9302      	str	r3, [sp, #8]
 8030680:	4651      	mov	r1, sl
 8030682:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030684:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030686:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8030688:	f7ff fab0 	bl	802fbec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 803068c:	f1b8 0f00 	cmp.w	r8, #0
 8030690:	f10a 0a04 	add.w	sl, sl, #4
 8030694:	44b1      	add	r9, r6
 8030696:	44ab      	add	fp, r5
 8030698:	dcce      	bgt.n	8030638 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 803069a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 803069c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 803069e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80306a2:	3301      	adds	r3, #1
 80306a4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80306a8:	9312      	str	r3, [sp, #72]	@ 0x48
 80306aa:	e4a8      	b.n	802fffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80306ac:	9112      	str	r1, [sp, #72]	@ 0x48
 80306ae:	f10e 31ff 	add.w	r1, lr, #4294967295
 80306b2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80306b4:	910a      	str	r1, [sp, #40]	@ 0x28
 80306b6:	4688      	mov	r8, r1
 80306b8:	e662      	b.n	8030380 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 80306ba:	2f00      	cmp	r7, #0
 80306bc:	f43f ae98 	beq.w	80303f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80306c2:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80306c6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80306ca:	0e13      	lsrs	r3, r2, #24
 80306cc:	9226      	str	r2, [sp, #152]	@ 0x98
 80306ce:	931b      	str	r3, [sp, #108]	@ 0x6c
 80306d0:	e68e      	b.n	80303f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306d2:	eb01 0e0c 	add.w	lr, r1, ip
 80306d6:	f89e e001 	ldrb.w	lr, [lr, #1]
 80306da:	f811 c00c 	ldrb.w	ip, [r1, ip]
 80306de:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 80306e2:	4611      	mov	r1, r2
 80306e4:	9227      	str	r2, [sp, #156]	@ 0x9c
 80306e6:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 80306ea:	4613      	mov	r3, r2
 80306ec:	9226      	str	r2, [sp, #152]	@ 0x98
 80306ee:	0e0a      	lsrs	r2, r1, #24
 80306f0:	921c      	str	r2, [sp, #112]	@ 0x70
 80306f2:	0e1a      	lsrs	r2, r3, #24
 80306f4:	921b      	str	r2, [sp, #108]	@ 0x6c
 80306f6:	e67b      	b.n	80303f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306f8:	f43f ac81 	beq.w	802fffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80306fc:	1e44      	subs	r4, r0, #1
 80306fe:	e4c2      	b.n	8030086 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>

08030700 <_ZN8touchgfx19GPU2DVectorRenderer19setStrokeMiterLimitEf>:
 8030700:	4770      	bx	lr
 8030702:	bf00      	nop

08030704 <_ZN8touchgfx19GPU2DVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:
 8030704:	4770      	bx	lr
 8030706:	bf00      	nop

08030708 <_ZN8touchgfx19GPU2DVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:
 8030708:	4770      	bx	lr
 803070a:	bf00      	nop

0803070c <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 803070c:	680a      	ldr	r2, [r1, #0]
 803070e:	4b09      	ldr	r3, [pc, #36]	@ (8030734 <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E+0x28>)
 8030710:	601a      	str	r2, [r3, #0]
 8030712:	684a      	ldr	r2, [r1, #4]
 8030714:	605a      	str	r2, [r3, #4]
 8030716:	688a      	ldr	r2, [r1, #8]
 8030718:	609a      	str	r2, [r3, #8]
 803071a:	68ca      	ldr	r2, [r1, #12]
 803071c:	60da      	str	r2, [r3, #12]
 803071e:	690a      	ldr	r2, [r1, #16]
 8030720:	611a      	str	r2, [r3, #16]
 8030722:	694a      	ldr	r2, [r1, #20]
 8030724:	615a      	str	r2, [r3, #20]
 8030726:	698a      	ldr	r2, [r1, #24]
 8030728:	619a      	str	r2, [r3, #24]
 803072a:	69ca      	ldr	r2, [r1, #28]
 803072c:	61da      	str	r2, [r3, #28]
 803072e:	6a0a      	ldr	r2, [r1, #32]
 8030730:	621a      	str	r2, [r3, #32]
 8030732:	4770      	bx	lr
 8030734:	20083404 	.word	0x20083404

08030738 <_ZN8touchgfx19GPU2DVectorRendererD1Ev>:
 8030738:	4770      	bx	lr
 803073a:	bf00      	nop

0803073c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 803073c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8030740:	4f58      	ldr	r7, [pc, #352]	@ (80308a4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x168>)
 8030742:	b08c      	sub	sp, #48	@ 0x30
 8030744:	6838      	ldr	r0, [r7, #0]
 8030746:	2800      	cmp	r0, #0
 8030748:	f000 8093 	beq.w	8030872 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 803074c:	460e      	mov	r6, r1
 803074e:	4615      	mov	r5, r2
 8030750:	f7f0 fa4a 	bl	8020be8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8030754:	683c      	ldr	r4, [r7, #0]
 8030756:	2c00      	cmp	r4, #0
 8030758:	f000 808b 	beq.w	8030872 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 803075c:	4b52      	ldr	r3, [pc, #328]	@ (80308a8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x16c>)
 803075e:	781b      	ldrb	r3, [r3, #0]
 8030760:	2b00      	cmp	r3, #0
 8030762:	d178      	bne.n	8030856 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x11a>
 8030764:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030768:	4b50      	ldr	r3, [pc, #320]	@ (80308ac <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x170>)
 803076a:	681b      	ldr	r3, [r3, #0]
 803076c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8030770:	2a00      	cmp	r2, #0
 8030772:	d151      	bne.n	8030818 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xdc>
 8030774:	6898      	ldr	r0, [r3, #8]
 8030776:	6803      	ldr	r3, [r0, #0]
 8030778:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 803077a:	4798      	blx	r3
 803077c:	2801      	cmp	r0, #1
 803077e:	d053      	beq.n	8030828 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xec>
 8030780:	d35e      	bcc.n	8030840 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x104>
 8030782:	2802      	cmp	r0, #2
 8030784:	f040 8087 	bne.w	8030896 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x15a>
 8030788:	4a49      	ldr	r2, [pc, #292]	@ (80308b0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 803078a:	4b4a      	ldr	r3, [pc, #296]	@ (80308b4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 803078c:	8811      	ldrh	r1, [r2, #0]
 803078e:	881a      	ldrh	r2, [r3, #0]
 8030790:	008b      	lsls	r3, r1, #2
 8030792:	9300      	str	r3, [sp, #0]
 8030794:	4640      	mov	r0, r8
 8030796:	2310      	movs	r3, #16
 8030798:	f7e0 fc18 	bl	8010fcc <nema_bind_dst_tex>
 803079c:	4c46      	ldr	r4, [pc, #280]	@ (80308b8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x17c>)
 803079e:	4847      	ldr	r0, [pc, #284]	@ (80308bc <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x180>)
 80307a0:	f7e1 f8be 	bl	8011920 <nema_mat3x3_load_identity>
 80307a4:	6823      	ldr	r3, [r4, #0]
 80307a6:	2b00      	cmp	r3, #0
 80307a8:	d069      	beq.n	803087e <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x142>
 80307aa:	882a      	ldrh	r2, [r5, #0]
 80307ac:	886b      	ldrh	r3, [r5, #2]
 80307ae:	8831      	ldrh	r1, [r6, #0]
 80307b0:	8874      	ldrh	r4, [r6, #2]
 80307b2:	4f43      	ldr	r7, [pc, #268]	@ (80308c0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x184>)
 80307b4:	4411      	add	r1, r2
 80307b6:	441c      	add	r4, r3
 80307b8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80307bc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80307c0:	686d      	ldr	r5, [r5, #4]
 80307c2:	b209      	sxth	r1, r1
 80307c4:	b224      	sxth	r4, r4
 80307c6:	4608      	mov	r0, r1
 80307c8:	8039      	strh	r1, [r7, #0]
 80307ca:	607d      	str	r5, [r7, #4]
 80307cc:	4621      	mov	r1, r4
 80307ce:	807c      	strh	r4, [r7, #2]
 80307d0:	f7e0 fa92 	bl	8010cf8 <nema_set_clip>
 80307d4:	483b      	ldr	r0, [pc, #236]	@ (80308c4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x188>)
 80307d6:	f7ec f95d 	bl	801ca94 <nema_vg_set_blend>
 80307da:	2002      	movs	r0, #2
 80307dc:	f7ec f960 	bl	801caa0 <nema_vg_set_quality>
 80307e0:	f7ed fa34 	bl	801dc4c <nema_cl_get_bound>
 80307e4:	4b38      	ldr	r3, [pc, #224]	@ (80308c8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x18c>)
 80307e6:	6018      	str	r0, [r3, #0]
 80307e8:	a803      	add	r0, sp, #12
 80307ea:	f7e1 f899 	bl	8011920 <nema_mat3x3_load_identity>
 80307ee:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80307f2:	a803      	add	r0, sp, #12
 80307f4:	ee00 3a90 	vmov	s1, r3
 80307f8:	f9b6 3000 	ldrsh.w	r3, [r6]
 80307fc:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8030800:	ee00 3a10 	vmov	s0, r3
 8030804:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8030808:	f7e1 f8ac 	bl	8011964 <nema_mat3x3_translate>
 803080c:	a803      	add	r0, sp, #12
 803080e:	f7ec f957 	bl	801cac0 <nema_vg_set_global_matrix>
 8030812:	b00c      	add	sp, #48	@ 0x30
 8030814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030818:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 803081a:	2800      	cmp	r0, #0
 803081c:	d0aa      	beq.n	8030774 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x38>
 803081e:	6803      	ldr	r3, [r0, #0]
 8030820:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8030822:	4798      	blx	r3
 8030824:	2801      	cmp	r0, #1
 8030826:	d1ab      	bne.n	8030780 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x44>
 8030828:	4a21      	ldr	r2, [pc, #132]	@ (80308b0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 803082a:	4b22      	ldr	r3, [pc, #136]	@ (80308b4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 803082c:	8811      	ldrh	r1, [r2, #0]
 803082e:	881a      	ldrh	r2, [r3, #0]
 8030830:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 8030834:	9300      	str	r3, [sp, #0]
 8030836:	4640      	mov	r0, r8
 8030838:	2339      	movs	r3, #57	@ 0x39
 803083a:	f7e0 fbc7 	bl	8010fcc <nema_bind_dst_tex>
 803083e:	e7ad      	b.n	803079c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030840:	4a1b      	ldr	r2, [pc, #108]	@ (80308b0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 8030842:	4b1c      	ldr	r3, [pc, #112]	@ (80308b4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 8030844:	8811      	ldrh	r1, [r2, #0]
 8030846:	881a      	ldrh	r2, [r3, #0]
 8030848:	004b      	lsls	r3, r1, #1
 803084a:	9300      	str	r3, [sp, #0]
 803084c:	4640      	mov	r0, r8
 803084e:	2304      	movs	r3, #4
 8030850:	f7e0 fbbc 	bl	8010fcc <nema_bind_dst_tex>
 8030854:	e7a2      	b.n	803079c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030856:	6823      	ldr	r3, [r4, #0]
 8030858:	4620      	mov	r0, r4
 803085a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 803085c:	4798      	blx	r3
 803085e:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030862:	683b      	ldr	r3, [r7, #0]
 8030864:	4580      	cmp	r8, r0
 8030866:	bf08      	it	eq
 8030868:	f8d4 8040 	ldreq.w	r8, [r4, #64]	@ 0x40
 803086c:	2b00      	cmp	r3, #0
 803086e:	f47f af7b 	bne.w	8030768 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x2c>
 8030872:	4b16      	ldr	r3, [pc, #88]	@ (80308cc <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x190>)
 8030874:	4a16      	ldr	r2, [pc, #88]	@ (80308d0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x194>)
 8030876:	217c      	movs	r1, #124	@ 0x7c
 8030878:	4816      	ldr	r0, [pc, #88]	@ (80308d4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x198>)
 803087a:	f001 fe45 	bl	8032508 <__assert_func>
 803087e:	f7ec f975 	bl	801cb6c <nema_vg_paint_create>
 8030882:	6020      	str	r0, [r4, #0]
 8030884:	f7ec fdc4 	bl	801d410 <nema_vg_path_create>
 8030888:	4b13      	ldr	r3, [pc, #76]	@ (80308d8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x19c>)
 803088a:	2101      	movs	r1, #1
 803088c:	6018      	str	r0, [r3, #0]
 803088e:	6820      	ldr	r0, [r4, #0]
 8030890:	f7ec f9a2 	bl	801cbd8 <nema_vg_paint_lock_tran_to_path>
 8030894:	e789      	b.n	80307aa <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x6e>
 8030896:	4b11      	ldr	r3, [pc, #68]	@ (80308dc <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a0>)
 8030898:	4a11      	ldr	r2, [pc, #68]	@ (80308e0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a4>)
 803089a:	212c      	movs	r1, #44	@ 0x2c
 803089c:	4811      	ldr	r0, [pc, #68]	@ (80308e4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a8>)
 803089e:	f001 fe33 	bl	8032508 <__assert_func>
 80308a2:	bf00      	nop
 80308a4:	200833a8 	.word	0x200833a8
 80308a8:	20082f06 	.word	0x20082f06
 80308ac:	20082f08 	.word	0x20082f08
 80308b0:	20082f02 	.word	0x20082f02
 80308b4:	20082f04 	.word	0x20082f04
 80308b8:	20083434 	.word	0x20083434
 80308bc:	20083404 	.word	0x20083404
 80308c0:	20083438 	.word	0x20083438
 80308c4:	04000501 	.word	0x04000501
 80308c8:	20083428 	.word	0x20083428
 80308cc:	0803624c 	.word	0x0803624c
 80308d0:	08038244 	.word	0x08038244
 80308d4:	08036274 	.word	0x08036274
 80308d8:	20083430 	.word	0x20083430
 80308dc:	080362a8 	.word	0x080362a8
 80308e0:	080381e4 	.word	0x080381e4
 80308e4:	08038040 	.word	0x08038040

080308e8 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
 80308e8:	2901      	cmp	r1, #1
 80308ea:	d002      	beq.n	80308f2 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0xa>
 80308ec:	d305      	bcc.n	80308fa <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x12>
 80308ee:	2902      	cmp	r1, #2
 80308f0:	d102      	bne.n	80308f8 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x10>
 80308f2:	4608      	mov	r0, r1
 80308f4:	f7ec b8c0 	b.w	801ca78 <nema_vg_set_fill_rule>
 80308f8:	4770      	bx	lr
 80308fa:	2000      	movs	r0, #0
 80308fc:	f7ec b8bc 	b.w	801ca78 <nema_vg_set_fill_rule>

08030900 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv>:
 8030900:	b510      	push	{r4, lr}
 8030902:	4b06      	ldr	r3, [pc, #24]	@ (803091c <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x1c>)
 8030904:	4c06      	ldr	r4, [pc, #24]	@ (8030920 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x20>)
 8030906:	6818      	ldr	r0, [r3, #0]
 8030908:	f7ed fad2 	bl	801deb0 <nema_cl_submit>
 803090c:	6820      	ldr	r0, [r4, #0]
 803090e:	b118      	cbz	r0, 8030918 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x18>
 8030910:	f7ec f988 	bl	801cc24 <nema_vg_grad_destroy>
 8030914:	2300      	movs	r3, #0
 8030916:	6023      	str	r3, [r4, #0]
 8030918:	bd10      	pop	{r4, pc}
 803091a:	bf00      	nop
 803091c:	20083428 	.word	0x20083428
 8030920:	2008342c 	.word	0x2008342c

08030924 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_>:
 8030924:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030928:	4c13      	ldr	r4, [pc, #76]	@ (8030978 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x54>)
 803092a:	b083      	sub	sp, #12
 803092c:	6820      	ldr	r0, [r4, #0]
 803092e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8030930:	460f      	mov	r7, r1
 8030932:	4616      	mov	r6, r2
 8030934:	4699      	mov	r9, r3
 8030936:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 803093a:	f7ec fd61 	bl	801d400 <nema_vg_path_clear>
 803093e:	6820      	ldr	r0, [r4, #0]
 8030940:	490e      	ldr	r1, [pc, #56]	@ (803097c <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x58>)
 8030942:	f7ec fdeb 	bl	801d51c <nema_vg_path_set_matrix>
 8030946:	6820      	ldr	r0, [r4, #0]
 8030948:	b175      	cbz	r5, 8030968 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x44>
 803094a:	e9cd 9500 	strd	r9, r5, [sp]
 803094e:	4643      	mov	r3, r8
 8030950:	463a      	mov	r2, r7
 8030952:	4631      	mov	r1, r6
 8030954:	f7ec fd64 	bl	801d420 <nema_vg_path_set_shape_and_bbox>
 8030958:	4b09      	ldr	r3, [pc, #36]	@ (8030980 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x5c>)
 803095a:	6820      	ldr	r0, [r4, #0]
 803095c:	6819      	ldr	r1, [r3, #0]
 803095e:	b003      	add	sp, #12
 8030960:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030964:	f7e7 bd64 	b.w	8018430 <nema_vg_draw_path>
 8030968:	f8cd 9000 	str.w	r9, [sp]
 803096c:	4643      	mov	r3, r8
 803096e:	463a      	mov	r2, r7
 8030970:	4631      	mov	r1, r6
 8030972:	f7ec fdc5 	bl	801d500 <nema_vg_path_set_shape>
 8030976:	e7ef      	b.n	8030958 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8030978:	20083430 	.word	0x20083430
 803097c:	20083404 	.word	0x20083404
 8030980:	20083434 	.word	0x20083434

08030984 <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf>:
 8030984:	b510      	push	{r4, lr}
 8030986:	ed2d 8b02 	vpush	{d8}
 803098a:	eeb0 8a40 	vmov.f32	s16, s0
 803098e:	4c07      	ldr	r4, [pc, #28]	@ (80309ac <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf+0x28>)
 8030990:	2100      	movs	r1, #0
 8030992:	6820      	ldr	r0, [r4, #0]
 8030994:	f7ec f914 	bl	801cbc0 <nema_vg_paint_set_type>
 8030998:	eeb0 0a48 	vmov.f32	s0, s16
 803099c:	ecbd 8b02 	vpop	{d8}
 80309a0:	6820      	ldr	r0, [r4, #0]
 80309a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80309a6:	f7ec bcbd 	b.w	801d324 <nema_vg_paint_set_stroke_width>
 80309aa:	bf00      	nop
 80309ac:	20083434 	.word	0x20083434

080309b0 <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE>:
 80309b0:	b538      	push	{r3, r4, r5, lr}
 80309b2:	460c      	mov	r4, r1
 80309b4:	4d09      	ldr	r5, [pc, #36]	@ (80309dc <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE+0x2c>)
 80309b6:	2100      	movs	r1, #0
 80309b8:	6828      	ldr	r0, [r5, #0]
 80309ba:	f7ec f901 	bl	801cbc0 <nema_vg_paint_set_type>
 80309be:	f3c4 2107 	ubfx	r1, r4, #8, #8
 80309c2:	0e23      	lsrs	r3, r4, #24
 80309c4:	b2e2      	uxtb	r2, r4
 80309c6:	f3c4 4007 	ubfx	r0, r4, #16, #8
 80309ca:	682d      	ldr	r5, [r5, #0]
 80309cc:	f7e0 fa72 	bl	8010eb4 <nema_rgba>
 80309d0:	4601      	mov	r1, r0
 80309d2:	4628      	mov	r0, r5
 80309d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80309d8:	f7ec bc96 	b.w	801d308 <nema_vg_paint_set_paint_color>
 80309dc:	20083434 	.word	0x20083434

080309e0 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh>:
 80309e0:	29ff      	cmp	r1, #255	@ 0xff
 80309e2:	d00b      	beq.n	80309fc <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x1c>
 80309e4:	ee07 1a90 	vmov	s15, r1
 80309e8:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8030a08 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x28>
 80309ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80309f0:	4b06      	ldr	r3, [pc, #24]	@ (8030a0c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 80309f2:	ee87 0a87 	vdiv.f32	s0, s15, s14
 80309f6:	6818      	ldr	r0, [r3, #0]
 80309f8:	f7ec bc8c 	b.w	801d314 <nema_vg_paint_set_opacity>
 80309fc:	4b03      	ldr	r3, [pc, #12]	@ (8030a0c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 80309fe:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8030a02:	6818      	ldr	r0, [r3, #0]
 8030a04:	f7ec bc86 	b.w	801d314 <nema_vg_paint_set_opacity>
 8030a08:	437f0000 	.word	0x437f0000
 8030a0c:	20083434 	.word	0x20083434

08030a10 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8030a10:	b570      	push	{r4, r5, r6, lr}
 8030a12:	ed2d 8b08 	vpush	{d8-d11}
 8030a16:	290a      	cmp	r1, #10
 8030a18:	b0c4      	sub	sp, #272	@ 0x110
 8030a1a:	f200 8288 	bhi.w	8030f2e <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x51e>
 8030a1e:	4dd8      	ldr	r5, [pc, #864]	@ (8030d80 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x370>)
 8030a20:	4616      	mov	r6, r2
 8030a22:	682a      	ldr	r2, [r5, #0]
 8030a24:	460c      	mov	r4, r1
 8030a26:	eeb0 9a40 	vmov.f32	s18, s0
 8030a2a:	eef0 8a60 	vmov.f32	s17, s1
 8030a2e:	eef0 aa41 	vmov.f32	s21, s2
 8030a32:	eeb0 8a61 	vmov.f32	s16, s3
 8030a36:	eef0 9a42 	vmov.f32	s19, s4
 8030a3a:	eeb0 aa62 	vmov.f32	s20, s5
 8030a3e:	2a00      	cmp	r2, #0
 8030a40:	f000 8197 	beq.w	8030d72 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x362>
 8030a44:	2c00      	cmp	r4, #0
 8030a46:	f000 8157 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a4a:	681a      	ldr	r2, [r3, #0]
 8030a4c:	2c01      	cmp	r4, #1
 8030a4e:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a52:	ee06 1a10 	vmov	s12, r1
 8030a56:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a5a:	ee06 1a90 	vmov	s13, r1
 8030a5e:	b2d1      	uxtb	r1, r2
 8030a60:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a64:	ee07 1a10 	vmov	s14, r1
 8030a68:	ee07 2a90 	vmov	s15, r2
 8030a6c:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030a70:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030a74:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030a78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030a7c:	ed8d 6a1c 	vstr	s12, [sp, #112]	@ 0x70
 8030a80:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8030a84:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 8030a88:	edcd 7a1f 	vstr	s15, [sp, #124]	@ 0x7c
 8030a8c:	f000 8134 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a90:	685a      	ldr	r2, [r3, #4]
 8030a92:	2c02      	cmp	r4, #2
 8030a94:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a98:	ee06 1a10 	vmov	s12, r1
 8030a9c:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030aa0:	ee06 1a90 	vmov	s13, r1
 8030aa4:	b2d1      	uxtb	r1, r2
 8030aa6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030aaa:	ee07 1a10 	vmov	s14, r1
 8030aae:	ee07 2a90 	vmov	s15, r2
 8030ab2:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030ab6:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030aba:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030abe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ac2:	ed8d 6a20 	vstr	s12, [sp, #128]	@ 0x80
 8030ac6:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8030aca:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
 8030ace:	edcd 7a23 	vstr	s15, [sp, #140]	@ 0x8c
 8030ad2:	f000 8111 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030ad6:	689a      	ldr	r2, [r3, #8]
 8030ad8:	2c03      	cmp	r4, #3
 8030ada:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030ade:	ee06 1a10 	vmov	s12, r1
 8030ae2:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030ae6:	ee06 1a90 	vmov	s13, r1
 8030aea:	b2d1      	uxtb	r1, r2
 8030aec:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030af0:	ee07 1a10 	vmov	s14, r1
 8030af4:	ee07 2a90 	vmov	s15, r2
 8030af8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030afc:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b00:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b08:	ed8d 6a24 	vstr	s12, [sp, #144]	@ 0x90
 8030b0c:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8030b10:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8030b14:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8030b18:	f000 80ee 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b1c:	68da      	ldr	r2, [r3, #12]
 8030b1e:	2c04      	cmp	r4, #4
 8030b20:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b24:	ee06 1a10 	vmov	s12, r1
 8030b28:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b2c:	ee06 1a90 	vmov	s13, r1
 8030b30:	b2d1      	uxtb	r1, r2
 8030b32:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b36:	ee07 1a10 	vmov	s14, r1
 8030b3a:	ee07 2a90 	vmov	s15, r2
 8030b3e:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b42:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b46:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b4e:	ed8d 6a28 	vstr	s12, [sp, #160]	@ 0xa0
 8030b52:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8030b56:	ed8d 7a2a 	vstr	s14, [sp, #168]	@ 0xa8
 8030b5a:	edcd 7a2b 	vstr	s15, [sp, #172]	@ 0xac
 8030b5e:	f000 80cb 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b62:	691a      	ldr	r2, [r3, #16]
 8030b64:	2c05      	cmp	r4, #5
 8030b66:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b6a:	ee06 1a10 	vmov	s12, r1
 8030b6e:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b72:	ee06 1a90 	vmov	s13, r1
 8030b76:	b2d1      	uxtb	r1, r2
 8030b78:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b7c:	ee07 1a10 	vmov	s14, r1
 8030b80:	ee07 2a90 	vmov	s15, r2
 8030b84:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b88:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b8c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b94:	ed8d 6a2c 	vstr	s12, [sp, #176]	@ 0xb0
 8030b98:	edcd 6a2d 	vstr	s13, [sp, #180]	@ 0xb4
 8030b9c:	ed8d 7a2e 	vstr	s14, [sp, #184]	@ 0xb8
 8030ba0:	edcd 7a2f 	vstr	s15, [sp, #188]	@ 0xbc
 8030ba4:	f000 80a8 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030ba8:	695a      	ldr	r2, [r3, #20]
 8030baa:	2c06      	cmp	r4, #6
 8030bac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030bb0:	ee06 1a10 	vmov	s12, r1
 8030bb4:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030bb8:	ee06 1a90 	vmov	s13, r1
 8030bbc:	b2d1      	uxtb	r1, r2
 8030bbe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030bc2:	ee07 1a10 	vmov	s14, r1
 8030bc6:	ee07 2a90 	vmov	s15, r2
 8030bca:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030bce:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030bd2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030bd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030bda:	ed8d 6a30 	vstr	s12, [sp, #192]	@ 0xc0
 8030bde:	edcd 6a31 	vstr	s13, [sp, #196]	@ 0xc4
 8030be2:	ed8d 7a32 	vstr	s14, [sp, #200]	@ 0xc8
 8030be6:	edcd 7a33 	vstr	s15, [sp, #204]	@ 0xcc
 8030bea:	f000 8085 	beq.w	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030bee:	699a      	ldr	r2, [r3, #24]
 8030bf0:	2c07      	cmp	r4, #7
 8030bf2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030bf6:	ee06 1a10 	vmov	s12, r1
 8030bfa:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030bfe:	ee06 1a90 	vmov	s13, r1
 8030c02:	b2d1      	uxtb	r1, r2
 8030c04:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c08:	ee07 1a10 	vmov	s14, r1
 8030c0c:	ee07 2a90 	vmov	s15, r2
 8030c10:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c14:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c18:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c20:	ed8d 6a34 	vstr	s12, [sp, #208]	@ 0xd0
 8030c24:	edcd 6a35 	vstr	s13, [sp, #212]	@ 0xd4
 8030c28:	ed8d 7a36 	vstr	s14, [sp, #216]	@ 0xd8
 8030c2c:	edcd 7a37 	vstr	s15, [sp, #220]	@ 0xdc
 8030c30:	d062      	beq.n	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c32:	69da      	ldr	r2, [r3, #28]
 8030c34:	2c08      	cmp	r4, #8
 8030c36:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030c3a:	ee06 1a10 	vmov	s12, r1
 8030c3e:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030c42:	ee06 1a90 	vmov	s13, r1
 8030c46:	b2d1      	uxtb	r1, r2
 8030c48:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c4c:	ee07 1a10 	vmov	s14, r1
 8030c50:	ee07 2a90 	vmov	s15, r2
 8030c54:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c58:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c5c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c64:	ed8d 6a38 	vstr	s12, [sp, #224]	@ 0xe0
 8030c68:	edcd 6a39 	vstr	s13, [sp, #228]	@ 0xe4
 8030c6c:	ed8d 7a3a 	vstr	s14, [sp, #232]	@ 0xe8
 8030c70:	edcd 7a3b 	vstr	s15, [sp, #236]	@ 0xec
 8030c74:	d040      	beq.n	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c76:	6a1a      	ldr	r2, [r3, #32]
 8030c78:	2c09      	cmp	r4, #9
 8030c7a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030c7e:	ee06 1a10 	vmov	s12, r1
 8030c82:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030c86:	ee06 1a90 	vmov	s13, r1
 8030c8a:	b2d1      	uxtb	r1, r2
 8030c8c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c90:	ee07 1a10 	vmov	s14, r1
 8030c94:	ee07 2a90 	vmov	s15, r2
 8030c98:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c9c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ca0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030ca4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ca8:	ed8d 6a3c 	vstr	s12, [sp, #240]	@ 0xf0
 8030cac:	edcd 6a3d 	vstr	s13, [sp, #244]	@ 0xf4
 8030cb0:	ed8d 7a3e 	vstr	s14, [sp, #248]	@ 0xf8
 8030cb4:	edcd 7a3f 	vstr	s15, [sp, #252]	@ 0xfc
 8030cb8:	d01e      	beq.n	8030cf8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030cba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8030cbc:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8030cc0:	ee06 2a10 	vmov	s12, r2
 8030cc4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8030cc8:	ee06 2a90 	vmov	s13, r2
 8030ccc:	b2da      	uxtb	r2, r3
 8030cce:	0e1b      	lsrs	r3, r3, #24
 8030cd0:	ee07 2a10 	vmov	s14, r2
 8030cd4:	ee07 3a90 	vmov	s15, r3
 8030cd8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030cdc:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ce0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030ce4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ce8:	ed8d 6a40 	vstr	s12, [sp, #256]	@ 0x100
 8030cec:	edcd 6a41 	vstr	s13, [sp, #260]	@ 0x104
 8030cf0:	ed8d 7a42 	vstr	s14, [sp, #264]	@ 0x108
 8030cf4:	edcd 7a43 	vstr	s15, [sp, #268]	@ 0x10c
 8030cf8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8030cfc:	2100      	movs	r1, #0
 8030cfe:	461a      	mov	r2, r3
 8030d00:	4608      	mov	r0, r1
 8030d02:	f7df fff9 	bl	8010cf8 <nema_set_clip>
 8030d06:	4621      	mov	r1, r4
 8030d08:	4632      	mov	r2, r6
 8030d0a:	ab1c      	add	r3, sp, #112	@ 0x70
 8030d0c:	6828      	ldr	r0, [r5, #0]
 8030d0e:	f7eb ff95 	bl	801cc3c <nema_vg_grad_set>
 8030d12:	481c      	ldr	r0, [pc, #112]	@ (8030d84 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x374>)
 8030d14:	4c1c      	ldr	r4, [pc, #112]	@ (8030d88 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x378>)
 8030d16:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8030d1a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8030d1e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8030d22:	f9b0 0000 	ldrsh.w	r0, [r0]
 8030d26:	f7df ffe7 	bl	8010cf8 <nema_set_clip>
 8030d2a:	6820      	ldr	r0, [r4, #0]
 8030d2c:	2101      	movs	r1, #1
 8030d2e:	f7eb ff47 	bl	801cbc0 <nema_vg_paint_set_type>
 8030d32:	eef4 9a4a 	vcmp.f32	s19, s20
 8030d36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030d3a:	d009      	beq.n	8030d50 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030d3c:	eef4 8a48 	vcmp.f32	s17, s16
 8030d40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030d44:	d004      	beq.n	8030d50 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030d46:	eeb4 9a6a 	vcmp.f32	s18, s21
 8030d4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030d4e:	d11f      	bne.n	8030d90 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x380>
 8030d50:	eef0 1a48 	vmov.f32	s3, s16
 8030d54:	eeb0 1a6a 	vmov.f32	s2, s21
 8030d58:	eef0 0a68 	vmov.f32	s1, s17
 8030d5c:	eeb0 0a49 	vmov.f32	s0, s18
 8030d60:	6829      	ldr	r1, [r5, #0]
 8030d62:	6820      	ldr	r0, [r4, #0]
 8030d64:	2201      	movs	r2, #1
 8030d66:	f7ec fa11 	bl	801d18c <nema_vg_paint_set_grad_linear>
 8030d6a:	b044      	add	sp, #272	@ 0x110
 8030d6c:	ecbd 8b08 	vpop	{d8-d11}
 8030d70:	bd70      	pop	{r4, r5, r6, pc}
 8030d72:	9301      	str	r3, [sp, #4]
 8030d74:	f7eb ff42 	bl	801cbfc <nema_vg_grad_create>
 8030d78:	9b01      	ldr	r3, [sp, #4]
 8030d7a:	6028      	str	r0, [r5, #0]
 8030d7c:	e662      	b.n	8030a44 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x34>
 8030d7e:	bf00      	nop
 8030d80:	2008342c 	.word	0x2008342c
 8030d84:	20083438 	.word	0x20083438
 8030d88:	20083434 	.word	0x20083434
 8030d8c:	42c80000 	.word	0x42c80000
 8030d90:	ed1f ba02 	vldr	s22, [pc, #-8]	@ 8030d8c <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x37c>
 8030d94:	a813      	add	r0, sp, #76	@ 0x4c
 8030d96:	f7dd fcfe 	bl	800e796 <_ZN8touchgfx9Matrix3x3C1Ev>
 8030d9a:	a813      	add	r0, sp, #76	@ 0x4c
 8030d9c:	f7dd fcee 	bl	800e77c <_ZN8touchgfx9Matrix3x35resetEv>
 8030da0:	ee8b 0a29 	vdiv.f32	s0, s22, s19
 8030da4:	eecb 0a0a 	vdiv.f32	s1, s22, s20
 8030da8:	a813      	add	r0, sp, #76	@ 0x4c
 8030daa:	f7dd fcf8 	bl	800e79e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030dae:	a813      	add	r0, sp, #76	@ 0x4c
 8030db0:	a903      	add	r1, sp, #12
 8030db2:	edcd aa05 	vstr	s21, [sp, #20]
 8030db6:	ed8d 9a03 	vstr	s18, [sp, #12]
 8030dba:	ed8d 8a06 	vstr	s16, [sp, #24]
 8030dbe:	edcd 8a04 	vstr	s17, [sp, #16]
 8030dc2:	f7dd fd8a 	bl	800e8da <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030dc6:	a905      	add	r1, sp, #20
 8030dc8:	a813      	add	r0, sp, #76	@ 0x4c
 8030dca:	eef0 aa40 	vmov.f32	s21, s0
 8030dce:	eeb0 9a60 	vmov.f32	s18, s1
 8030dd2:	f7dd fd82 	bl	800e8da <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030dd6:	ee30 6ac9 	vsub.f32	s12, s1, s18
 8030dda:	ee70 5a6a 	vsub.f32	s11, s0, s21
 8030dde:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8030de2:	ee86 5a25 	vdiv.f32	s10, s12, s11
 8030de6:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8030dea:	ee87 7a85 	vdiv.f32	s14, s15, s10
 8030dee:	eea6 9a26 	vfma.f32	s18, s12, s13
 8030df2:	ee77 0a20 	vadd.f32	s1, s14, s1
 8030df6:	ee70 7a27 	vadd.f32	s15, s0, s15
 8030dfa:	eee5 aaa6 	vfma.f32	s21, s11, s13
 8030dfe:	a813      	add	r0, sp, #76	@ 0x4c
 8030e00:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8030e04:	ed8d 9a0c 	vstr	s18, [sp, #48]	@ 0x30
 8030e08:	edcd 0a0e 	vstr	s1, [sp, #56]	@ 0x38
 8030e0c:	edcd aa0b 	vstr	s21, [sp, #44]	@ 0x2c
 8030e10:	f7dd fcb4 	bl	800e77c <_ZN8touchgfx9Matrix3x35resetEv>
 8030e14:	ee89 0a8b 	vdiv.f32	s0, s19, s22
 8030e18:	eeca 0a0b 	vdiv.f32	s1, s20, s22
 8030e1c:	a813      	add	r0, sp, #76	@ 0x4c
 8030e1e:	f7dd fcbe 	bl	800e79e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030e22:	a813      	add	r0, sp, #76	@ 0x4c
 8030e24:	a90d      	add	r1, sp, #52	@ 0x34
 8030e26:	f7dd fd58 	bl	800e8da <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030e2a:	a813      	add	r0, sp, #76	@ 0x4c
 8030e2c:	a90b      	add	r1, sp, #44	@ 0x2c
 8030e2e:	ed8d 0a0f 	vstr	s0, [sp, #60]	@ 0x3c
 8030e32:	edcd 0a10 	vstr	s1, [sp, #64]	@ 0x40
 8030e36:	f7dd fd50 	bl	800e8da <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030e3a:	eddd 7a04 	vldr	s15, [sp, #16]
 8030e3e:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030e42:	ed9d 7a03 	vldr	s14, [sp, #12]
 8030e46:	ee76 7a67 	vsub.f32	s15, s12, s15
 8030e4a:	eddd 6a05 	vldr	s13, [sp, #20]
 8030e4e:	eef0 9a40 	vmov.f32	s19, s0
 8030e52:	ee27 0aa7 	vmul.f32	s0, s15, s15
 8030e56:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8030e5a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8030e5e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8030e62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030e66:	eeb0 aa60 	vmov.f32	s20, s1
 8030e6a:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8030e6e:	d457      	bmi.n	8030f20 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x510>
 8030e70:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8030e74:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8030e78:	ee37 7a46 	vsub.f32	s14, s14, s12
 8030e7c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8030e80:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8030e84:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8030e88:	eec6 aa26 	vdiv.f32	s21, s12, s13
 8030e8c:	eeb0 0a6a 	vmov.f32	s0, s21
 8030e90:	f000 f9f4 	bl	803127c <atanf>
 8030e94:	eef0 ba40 	vmov.f32	s23, s0
 8030e98:	f000 fac4 	bl	8031424 <cosf>
 8030e9c:	ee29 ba00 	vmul.f32	s22, s18, s0
 8030ea0:	eeb0 0a6b 	vmov.f32	s0, s23
 8030ea4:	f000 fb0a 	bl	80314bc <sinf>
 8030ea8:	eef5 aac0 	vcmpe.f32	s21, #0.0
 8030eac:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8030eb0:	ee29 9a00 	vmul.f32	s18, s18, s0
 8030eb4:	eef0 0a4a 	vmov.f32	s1, s20
 8030eb8:	eeb0 0a69 	vmov.f32	s0, s19
 8030ebc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030ec0:	eeab 0a27 	vfma.f32	s0, s22, s15
 8030ec4:	eeeb 9a67 	vfms.f32	s19, s22, s15
 8030ec8:	eee9 0a27 	vfma.f32	s1, s18, s15
 8030ecc:	eea9 aa67 	vfms.f32	s20, s18, s15
 8030ed0:	dc0b      	bgt.n	8030eea <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x4da>
 8030ed2:	eeb0 7a4a 	vmov.f32	s14, s20
 8030ed6:	eef0 7a69 	vmov.f32	s15, s19
 8030eda:	eeb0 aa60 	vmov.f32	s20, s1
 8030ede:	eef0 9a40 	vmov.f32	s19, s0
 8030ee2:	eef0 0a47 	vmov.f32	s1, s14
 8030ee6:	eeb0 0a67 	vmov.f32	s0, s15
 8030eea:	eef4 8ac8 	vcmpe.f32	s17, s16
 8030eee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030ef2:	6820      	ldr	r0, [r4, #0]
 8030ef4:	6829      	ldr	r1, [r5, #0]
 8030ef6:	d50b      	bpl.n	8030f10 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x500>
 8030ef8:	eef0 1a60 	vmov.f32	s3, s1
 8030efc:	eeb0 1a40 	vmov.f32	s2, s0
 8030f00:	eef0 0a4a 	vmov.f32	s1, s20
 8030f04:	eeb0 0a69 	vmov.f32	s0, s19
 8030f08:	2201      	movs	r2, #1
 8030f0a:	f7ec f93f 	bl	801d18c <nema_vg_paint_set_grad_linear>
 8030f0e:	e72c      	b.n	8030d6a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030f10:	eef0 1a4a 	vmov.f32	s3, s20
 8030f14:	eeb0 1a69 	vmov.f32	s2, s19
 8030f18:	2201      	movs	r2, #1
 8030f1a:	f7ec f937 	bl	801d18c <nema_vg_paint_set_grad_linear>
 8030f1e:	e724      	b.n	8030d6a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030f20:	f000 f98e 	bl	8031240 <sqrtf>
 8030f24:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030f28:	eddd 6a05 	vldr	s13, [sp, #20]
 8030f2c:	e7a0      	b.n	8030e70 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x460>
 8030f2e:	4b03      	ldr	r3, [pc, #12]	@ (8030f3c <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x52c>)
 8030f30:	4a03      	ldr	r2, [pc, #12]	@ (8030f40 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x530>)
 8030f32:	2194      	movs	r1, #148	@ 0x94
 8030f34:	4803      	ldr	r0, [pc, #12]	@ (8030f44 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x534>)
 8030f36:	f001 fae7 	bl	8032508 <__assert_func>
 8030f3a:	bf00      	nop
 8030f3c:	08038028 	.word	0x08038028
 8030f40:	080380b4 	.word	0x080380b4
 8030f44:	08038040 	.word	0x08038040

08030f48 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE>:
 8030f48:	b530      	push	{r4, r5, lr}
 8030f4a:	ed2d 8b04 	vpush	{d8-d9}
 8030f4e:	2905      	cmp	r1, #5
 8030f50:	b099      	sub	sp, #100	@ 0x64
 8030f52:	f200 80db 	bhi.w	803110c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1c4>
 8030f56:	4d70      	ldr	r5, [pc, #448]	@ (8031118 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d0>)
 8030f58:	eeb0 8a40 	vmov.f32	s16, s0
 8030f5c:	6828      	ldr	r0, [r5, #0]
 8030f5e:	eef0 8a60 	vmov.f32	s17, s1
 8030f62:	eeb0 9a41 	vmov.f32	s18, s2
 8030f66:	2800      	cmp	r0, #0
 8030f68:	f000 80c6 	beq.w	80310f8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1b0>
 8030f6c:	2900      	cmp	r1, #0
 8030f6e:	f000 80ac 	beq.w	80310ca <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030f72:	681c      	ldr	r4, [r3, #0]
 8030f74:	2901      	cmp	r1, #1
 8030f76:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030f7a:	ee06 ca10 	vmov	s12, ip
 8030f7e:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f82:	ee06 ca90 	vmov	s13, ip
 8030f86:	fa5f fc84 	uxtb.w	ip, r4
 8030f8a:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f8e:	ee07 ca10 	vmov	s14, ip
 8030f92:	ee07 4a90 	vmov	s15, r4
 8030f96:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f9a:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f9e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030fa2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030fa6:	ed8d 6a04 	vstr	s12, [sp, #16]
 8030faa:	edcd 6a05 	vstr	s13, [sp, #20]
 8030fae:	ed8d 7a06 	vstr	s14, [sp, #24]
 8030fb2:	edcd 7a07 	vstr	s15, [sp, #28]
 8030fb6:	f000 8088 	beq.w	80310ca <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030fba:	685c      	ldr	r4, [r3, #4]
 8030fbc:	2902      	cmp	r1, #2
 8030fbe:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030fc2:	ee06 ca10 	vmov	s12, ip
 8030fc6:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030fca:	ee06 ca90 	vmov	s13, ip
 8030fce:	fa5f fc84 	uxtb.w	ip, r4
 8030fd2:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030fd6:	ee07 ca10 	vmov	s14, ip
 8030fda:	ee07 4a90 	vmov	s15, r4
 8030fde:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030fe2:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030fe6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030fea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030fee:	ed8d 6a08 	vstr	s12, [sp, #32]
 8030ff2:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8030ff6:	ed8d 7a0a 	vstr	s14, [sp, #40]	@ 0x28
 8030ffa:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8030ffe:	d064      	beq.n	80310ca <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8031000:	689c      	ldr	r4, [r3, #8]
 8031002:	2903      	cmp	r1, #3
 8031004:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8031008:	ee06 ca10 	vmov	s12, ip
 803100c:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8031010:	ee06 ca90 	vmov	s13, ip
 8031014:	fa5f fc84 	uxtb.w	ip, r4
 8031018:	ea4f 6414 	mov.w	r4, r4, lsr #24
 803101c:	ee07 ca10 	vmov	s14, ip
 8031020:	ee07 4a90 	vmov	s15, r4
 8031024:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8031028:	eef8 6a66 	vcvt.f32.u32	s13, s13
 803102c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031030:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031034:	ed8d 6a0c 	vstr	s12, [sp, #48]	@ 0x30
 8031038:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 803103c:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8031040:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8031044:	d041      	beq.n	80310ca <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8031046:	68dc      	ldr	r4, [r3, #12]
 8031048:	2904      	cmp	r1, #4
 803104a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 803104e:	ee06 ca10 	vmov	s12, ip
 8031052:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8031056:	ee06 ca90 	vmov	s13, ip
 803105a:	fa5f fc84 	uxtb.w	ip, r4
 803105e:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8031062:	ee07 ca10 	vmov	s14, ip
 8031066:	ee07 4a90 	vmov	s15, r4
 803106a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803106e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031072:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031076:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803107a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 803107e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8031082:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 8031086:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 803108a:	d01e      	beq.n	80310ca <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 803108c:	691b      	ldr	r3, [r3, #16]
 803108e:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8031092:	ee06 4a10 	vmov	s12, r4
 8031096:	f3c3 2407 	ubfx	r4, r3, #8, #8
 803109a:	ee06 4a90 	vmov	s13, r4
 803109e:	b2dc      	uxtb	r4, r3
 80310a0:	0e1b      	lsrs	r3, r3, #24
 80310a2:	ee07 4a10 	vmov	s14, r4
 80310a6:	ee07 3a90 	vmov	s15, r3
 80310aa:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 80310ae:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80310b2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80310b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80310ba:	ed8d 6a14 	vstr	s12, [sp, #80]	@ 0x50
 80310be:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 80310c2:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 80310c6:	edcd 7a17 	vstr	s15, [sp, #92]	@ 0x5c
 80310ca:	4c14      	ldr	r4, [pc, #80]	@ (803111c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d4>)
 80310cc:	ab04      	add	r3, sp, #16
 80310ce:	f7eb fdb5 	bl	801cc3c <nema_vg_grad_set>
 80310d2:	6820      	ldr	r0, [r4, #0]
 80310d4:	2103      	movs	r1, #3
 80310d6:	f7eb fd73 	bl	801cbc0 <nema_vg_paint_set_type>
 80310da:	6820      	ldr	r0, [r4, #0]
 80310dc:	eeb0 1a49 	vmov.f32	s2, s18
 80310e0:	eef0 0a68 	vmov.f32	s1, s17
 80310e4:	eeb0 0a48 	vmov.f32	s0, s16
 80310e8:	6829      	ldr	r1, [r5, #0]
 80310ea:	2201      	movs	r2, #1
 80310ec:	f7ec f8be 	bl	801d26c <nema_vg_paint_set_grad_radial>
 80310f0:	b019      	add	sp, #100	@ 0x64
 80310f2:	ecbd 8b04 	vpop	{d8-d9}
 80310f6:	bd30      	pop	{r4, r5, pc}
 80310f8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80310fc:	9101      	str	r1, [sp, #4]
 80310fe:	f7eb fd7d 	bl	801cbfc <nema_vg_grad_create>
 8031102:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8031106:	6028      	str	r0, [r5, #0]
 8031108:	9901      	ldr	r1, [sp, #4]
 803110a:	e72f      	b.n	8030f6c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x24>
 803110c:	4b04      	ldr	r3, [pc, #16]	@ (8031120 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d8>)
 803110e:	4a05      	ldr	r2, [pc, #20]	@ (8031124 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1dc>)
 8031110:	21ed      	movs	r1, #237	@ 0xed
 8031112:	4805      	ldr	r0, [pc, #20]	@ (8031128 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1e0>)
 8031114:	f001 f9f8 	bl	8032508 <__assert_func>
 8031118:	2008342c 	.word	0x2008342c
 803111c:	20083434 	.word	0x20083434
 8031120:	08038034 	.word	0x08038034
 8031124:	0803815c 	.word	0x0803815c
 8031128:	08038040 	.word	0x08038040

0803112c <_ZN8touchgfx19GPU2DVectorRendererD0Ev>:
 803112c:	b510      	push	{r4, lr}
 803112e:	4604      	mov	r4, r0
 8031130:	2104      	movs	r1, #4
 8031132:	f000 f810 	bl	8031156 <_ZdlPvj>
 8031136:	4620      	mov	r0, r4
 8031138:	bd10      	pop	{r4, pc}
 803113a:	bf00      	nop

0803113c <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 803113c:	2200      	movs	r2, #0
 803113e:	4b02      	ldr	r3, [pc, #8]	@ (8031148 <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xc>)
 8031140:	e9c3 2200 	strd	r2, r2, [r3]
 8031144:	4770      	bx	lr
 8031146:	bf00      	nop
 8031148:	20083438 	.word	0x20083438

0803114c <__aeabi_atexit>:
 803114c:	460b      	mov	r3, r1
 803114e:	4601      	mov	r1, r0
 8031150:	4618      	mov	r0, r3
 8031152:	f001 babb 	b.w	80326cc <__cxa_atexit>

08031156 <_ZdlPvj>:
 8031156:	f000 b812 	b.w	803117e <_ZdlPv>

0803115a <__cxa_guard_acquire>:
 803115a:	6802      	ldr	r2, [r0, #0]
 803115c:	4603      	mov	r3, r0
 803115e:	07d2      	lsls	r2, r2, #31
 8031160:	d405      	bmi.n	803116e <__cxa_guard_acquire+0x14>
 8031162:	7842      	ldrb	r2, [r0, #1]
 8031164:	b102      	cbz	r2, 8031168 <__cxa_guard_acquire+0xe>
 8031166:	deff      	udf	#255	@ 0xff
 8031168:	2001      	movs	r0, #1
 803116a:	7058      	strb	r0, [r3, #1]
 803116c:	4770      	bx	lr
 803116e:	2000      	movs	r0, #0
 8031170:	4770      	bx	lr

08031172 <__cxa_guard_release>:
 8031172:	2301      	movs	r3, #1
 8031174:	6003      	str	r3, [r0, #0]
 8031176:	4770      	bx	lr

08031178 <__cxa_pure_virtual>:
 8031178:	b508      	push	{r3, lr}
 803117a:	f000 f80d 	bl	8031198 <_ZSt9terminatev>

0803117e <_ZdlPv>:
 803117e:	f001 b9ef 	b.w	8032560 <free>

08031182 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8031182:	b508      	push	{r3, lr}
 8031184:	4780      	blx	r0
 8031186:	f001 f9b8 	bl	80324fa <abort>
	...

0803118c <_ZSt13get_terminatev>:
 803118c:	4b01      	ldr	r3, [pc, #4]	@ (8031194 <_ZSt13get_terminatev+0x8>)
 803118e:	e8d3 0faf 	lda	r0, [r3]
 8031192:	4770      	bx	lr
 8031194:	20000244 	.word	0x20000244

08031198 <_ZSt9terminatev>:
 8031198:	b508      	push	{r3, lr}
 803119a:	f7ff fff7 	bl	803118c <_ZSt13get_terminatev>
 803119e:	f7ff fff0 	bl	8031182 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080311a4 <acosf>:
 80311a4:	b508      	push	{r3, lr}
 80311a6:	ed2d 8b02 	vpush	{d8}
 80311aa:	eeb0 8a40 	vmov.f32	s16, s0
 80311ae:	f000 fb81 	bl	80318b4 <__ieee754_acosf>
 80311b2:	eef0 8a40 	vmov.f32	s17, s0
 80311b6:	eeb4 8a48 	vcmp.f32	s16, s16
 80311ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311be:	d615      	bvs.n	80311ec <acosf+0x48>
 80311c0:	eeb0 0a48 	vmov.f32	s0, s16
 80311c4:	f000 f972 	bl	80314ac <fabsf>
 80311c8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80311cc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80311d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311d4:	dd0a      	ble.n	80311ec <acosf+0x48>
 80311d6:	f001 fc53 	bl	8032a80 <__errno>
 80311da:	2321      	movs	r3, #33	@ 0x21
 80311dc:	ecbd 8b02 	vpop	{d8}
 80311e0:	6003      	str	r3, [r0, #0]
 80311e2:	4805      	ldr	r0, [pc, #20]	@ (80311f8 <acosf+0x54>)
 80311e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80311e8:	f000 b9da 	b.w	80315a0 <nanf>
 80311ec:	eeb0 0a68 	vmov.f32	s0, s17
 80311f0:	ecbd 8b02 	vpop	{d8}
 80311f4:	bd08      	pop	{r3, pc}
 80311f6:	bf00      	nop
 80311f8:	080386cf 	.word	0x080386cf

080311fc <atan2f>:
 80311fc:	f000 bc52 	b.w	8031aa4 <__ieee754_atan2f>

08031200 <fmodf>:
 8031200:	b508      	push	{r3, lr}
 8031202:	ed2d 8b02 	vpush	{d8}
 8031206:	eef0 8a40 	vmov.f32	s17, s0
 803120a:	eeb0 8a60 	vmov.f32	s16, s1
 803120e:	f000 fce7 	bl	8031be0 <__ieee754_fmodf>
 8031212:	eef4 8a48 	vcmp.f32	s17, s16
 8031216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803121a:	d60c      	bvs.n	8031236 <fmodf+0x36>
 803121c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 803123c <fmodf+0x3c>
 8031220:	eeb4 8a68 	vcmp.f32	s16, s17
 8031224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031228:	d105      	bne.n	8031236 <fmodf+0x36>
 803122a:	f001 fc29 	bl	8032a80 <__errno>
 803122e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8031232:	2321      	movs	r3, #33	@ 0x21
 8031234:	6003      	str	r3, [r0, #0]
 8031236:	ecbd 8b02 	vpop	{d8}
 803123a:	bd08      	pop	{r3, pc}
 803123c:	00000000 	.word	0x00000000

08031240 <sqrtf>:
 8031240:	b508      	push	{r3, lr}
 8031242:	ed2d 8b02 	vpush	{d8}
 8031246:	eeb0 8a40 	vmov.f32	s16, s0
 803124a:	f000 f9af 	bl	80315ac <__ieee754_sqrtf>
 803124e:	eeb4 8a48 	vcmp.f32	s16, s16
 8031252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031256:	d60c      	bvs.n	8031272 <sqrtf+0x32>
 8031258:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8031278 <sqrtf+0x38>
 803125c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8031260:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031264:	d505      	bpl.n	8031272 <sqrtf+0x32>
 8031266:	f001 fc0b 	bl	8032a80 <__errno>
 803126a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 803126e:	2321      	movs	r3, #33	@ 0x21
 8031270:	6003      	str	r3, [r0, #0]
 8031272:	ecbd 8b02 	vpop	{d8}
 8031276:	bd08      	pop	{r3, pc}
 8031278:	00000000 	.word	0x00000000

0803127c <atanf>:
 803127c:	b538      	push	{r3, r4, r5, lr}
 803127e:	ee10 5a10 	vmov	r5, s0
 8031282:	eef0 7a40 	vmov.f32	s15, s0
 8031286:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 803128a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 803128e:	d30f      	bcc.n	80312b0 <atanf+0x34>
 8031290:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8031294:	d904      	bls.n	80312a0 <atanf+0x24>
 8031296:	ee70 7a00 	vadd.f32	s15, s0, s0
 803129a:	eeb0 0a67 	vmov.f32	s0, s15
 803129e:	bd38      	pop	{r3, r4, r5, pc}
 80312a0:	2d00      	cmp	r5, #0
 80312a2:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80313d8 <atanf+0x15c>
 80312a6:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 80313dc <atanf+0x160>
 80312aa:	fe77 7a27 	vselgt.f32	s15, s14, s15
 80312ae:	e7f4      	b.n	803129a <atanf+0x1e>
 80312b0:	4b4b      	ldr	r3, [pc, #300]	@ (80313e0 <atanf+0x164>)
 80312b2:	429c      	cmp	r4, r3
 80312b4:	d810      	bhi.n	80312d8 <atanf+0x5c>
 80312b6:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80312ba:	d20a      	bcs.n	80312d2 <atanf+0x56>
 80312bc:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 80313e4 <atanf+0x168>
 80312c0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80312c4:	ee30 7a07 	vadd.f32	s14, s0, s14
 80312c8:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80312cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80312d0:	dce3      	bgt.n	803129a <atanf+0x1e>
 80312d2:	f04f 33ff 	mov.w	r3, #4294967295
 80312d6:	e013      	b.n	8031300 <atanf+0x84>
 80312d8:	f000 f8e8 	bl	80314ac <fabsf>
 80312dc:	4b42      	ldr	r3, [pc, #264]	@ (80313e8 <atanf+0x16c>)
 80312de:	429c      	cmp	r4, r3
 80312e0:	d84f      	bhi.n	8031382 <atanf+0x106>
 80312e2:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 80312e6:	429c      	cmp	r4, r3
 80312e8:	d841      	bhi.n	803136e <atanf+0xf2>
 80312ea:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80312ee:	2300      	movs	r3, #0
 80312f0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80312f4:	eea0 7a27 	vfma.f32	s14, s0, s15
 80312f8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80312fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031300:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 80313ec <atanf+0x170>
 8031304:	1c5a      	adds	r2, r3, #1
 8031306:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80313f0 <atanf+0x174>
 803130a:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 80313f4 <atanf+0x178>
 803130e:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8031312:	ee66 6a06 	vmul.f32	s13, s12, s12
 8031316:	eee6 5a87 	vfma.f32	s11, s13, s14
 803131a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 80313f8 <atanf+0x17c>
 803131e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031322:	eddf 5a36 	vldr	s11, [pc, #216]	@ 80313fc <atanf+0x180>
 8031326:	eee7 5a26 	vfma.f32	s11, s14, s13
 803132a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 8031400 <atanf+0x184>
 803132e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031332:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8031404 <atanf+0x188>
 8031336:	eee7 5a26 	vfma.f32	s11, s14, s13
 803133a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 8031408 <atanf+0x18c>
 803133e:	eea6 5a87 	vfma.f32	s10, s13, s14
 8031342:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 803140c <atanf+0x190>
 8031346:	eea5 7a26 	vfma.f32	s14, s10, s13
 803134a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 8031410 <atanf+0x194>
 803134e:	eea7 5a26 	vfma.f32	s10, s14, s13
 8031352:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031414 <atanf+0x198>
 8031356:	eea5 7a26 	vfma.f32	s14, s10, s13
 803135a:	ee27 7a26 	vmul.f32	s14, s14, s13
 803135e:	eea5 7a86 	vfma.f32	s14, s11, s12
 8031362:	ee27 7a87 	vmul.f32	s14, s15, s14
 8031366:	d121      	bne.n	80313ac <atanf+0x130>
 8031368:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803136c:	e795      	b.n	803129a <atanf+0x1e>
 803136e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8031372:	2301      	movs	r3, #1
 8031374:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031378:	ee30 0a27 	vadd.f32	s0, s0, s15
 803137c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031380:	e7be      	b.n	8031300 <atanf+0x84>
 8031382:	4b25      	ldr	r3, [pc, #148]	@ (8031418 <atanf+0x19c>)
 8031384:	429c      	cmp	r4, r3
 8031386:	d80b      	bhi.n	80313a0 <atanf+0x124>
 8031388:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 803138c:	2302      	movs	r3, #2
 803138e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031392:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031396:	eea0 7a27 	vfma.f32	s14, s0, s15
 803139a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 803139e:	e7af      	b.n	8031300 <atanf+0x84>
 80313a0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80313a4:	2303      	movs	r3, #3
 80313a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80313aa:	e7a9      	b.n	8031300 <atanf+0x84>
 80313ac:	4a1b      	ldr	r2, [pc, #108]	@ (803141c <atanf+0x1a0>)
 80313ae:	2d00      	cmp	r5, #0
 80313b0:	491b      	ldr	r1, [pc, #108]	@ (8031420 <atanf+0x1a4>)
 80313b2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80313b6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80313ba:	edd3 6a00 	vldr	s13, [r3]
 80313be:	ee37 7a66 	vsub.f32	s14, s14, s13
 80313c2:	ee37 7a67 	vsub.f32	s14, s14, s15
 80313c6:	edd2 7a00 	vldr	s15, [r2]
 80313ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80313ce:	bfb8      	it	lt
 80313d0:	eef1 7a67 	vneglt.f32	s15, s15
 80313d4:	e761      	b.n	803129a <atanf+0x1e>
 80313d6:	bf00      	nop
 80313d8:	bfc90fdb 	.word	0xbfc90fdb
 80313dc:	3fc90fdb 	.word	0x3fc90fdb
 80313e0:	3edfffff 	.word	0x3edfffff
 80313e4:	7149f2ca 	.word	0x7149f2ca
 80313e8:	3f97ffff 	.word	0x3f97ffff
 80313ec:	3c8569d7 	.word	0x3c8569d7
 80313f0:	3d4bda59 	.word	0x3d4bda59
 80313f4:	bd6ef16b 	.word	0xbd6ef16b
 80313f8:	3d886b35 	.word	0x3d886b35
 80313fc:	3dba2e6e 	.word	0x3dba2e6e
 8031400:	3e124925 	.word	0x3e124925
 8031404:	3eaaaaab 	.word	0x3eaaaaab
 8031408:	bd15a221 	.word	0xbd15a221
 803140c:	bd9d8795 	.word	0xbd9d8795
 8031410:	bde38e38 	.word	0xbde38e38
 8031414:	be4ccccd 	.word	0xbe4ccccd
 8031418:	401bffff 	.word	0x401bffff
 803141c:	08038294 	.word	0x08038294
 8031420:	08038284 	.word	0x08038284

08031424 <cosf>:
 8031424:	ee10 3a10 	vmov	r3, s0
 8031428:	b507      	push	{r0, r1, r2, lr}
 803142a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 803142e:	4a1d      	ldr	r2, [pc, #116]	@ (80314a4 <cosf+0x80>)
 8031430:	4293      	cmp	r3, r2
 8031432:	d806      	bhi.n	8031442 <cosf+0x1e>
 8031434:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 80314a8 <cosf+0x84>
 8031438:	b003      	add	sp, #12
 803143a:	f85d eb04 	ldr.w	lr, [sp], #4
 803143e:	f000 b8b9 	b.w	80315b4 <__kernel_cosf>
 8031442:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031446:	d304      	bcc.n	8031452 <cosf+0x2e>
 8031448:	ee30 0a40 	vsub.f32	s0, s0, s0
 803144c:	b003      	add	sp, #12
 803144e:	f85d fb04 	ldr.w	pc, [sp], #4
 8031452:	4668      	mov	r0, sp
 8031454:	f000 fc48 	bl	8031ce8 <__ieee754_rem_pio2f>
 8031458:	f000 0003 	and.w	r0, r0, #3
 803145c:	2801      	cmp	r0, #1
 803145e:	d009      	beq.n	8031474 <cosf+0x50>
 8031460:	2802      	cmp	r0, #2
 8031462:	d010      	beq.n	8031486 <cosf+0x62>
 8031464:	b9b0      	cbnz	r0, 8031494 <cosf+0x70>
 8031466:	eddd 0a01 	vldr	s1, [sp, #4]
 803146a:	ed9d 0a00 	vldr	s0, [sp]
 803146e:	f000 f8a1 	bl	80315b4 <__kernel_cosf>
 8031472:	e7eb      	b.n	803144c <cosf+0x28>
 8031474:	eddd 0a01 	vldr	s1, [sp, #4]
 8031478:	ed9d 0a00 	vldr	s0, [sp]
 803147c:	f000 f8f2 	bl	8031664 <__kernel_sinf>
 8031480:	eeb1 0a40 	vneg.f32	s0, s0
 8031484:	e7e2      	b.n	803144c <cosf+0x28>
 8031486:	eddd 0a01 	vldr	s1, [sp, #4]
 803148a:	ed9d 0a00 	vldr	s0, [sp]
 803148e:	f000 f891 	bl	80315b4 <__kernel_cosf>
 8031492:	e7f5      	b.n	8031480 <cosf+0x5c>
 8031494:	2001      	movs	r0, #1
 8031496:	eddd 0a01 	vldr	s1, [sp, #4]
 803149a:	ed9d 0a00 	vldr	s0, [sp]
 803149e:	f000 f8e1 	bl	8031664 <__kernel_sinf>
 80314a2:	e7d3      	b.n	803144c <cosf+0x28>
 80314a4:	3f490fd8 	.word	0x3f490fd8
 80314a8:	00000000 	.word	0x00000000

080314ac <fabsf>:
 80314ac:	ee10 3a10 	vmov	r3, s0
 80314b0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80314b4:	ee00 3a10 	vmov	s0, r3
 80314b8:	4770      	bx	lr
	...

080314bc <sinf>:
 80314bc:	ee10 3a10 	vmov	r3, s0
 80314c0:	b507      	push	{r0, r1, r2, lr}
 80314c2:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80314c6:	4a1e      	ldr	r2, [pc, #120]	@ (8031540 <sinf+0x84>)
 80314c8:	4293      	cmp	r3, r2
 80314ca:	d807      	bhi.n	80314dc <sinf+0x20>
 80314cc:	2000      	movs	r0, #0
 80314ce:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8031544 <sinf+0x88>
 80314d2:	b003      	add	sp, #12
 80314d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80314d8:	f000 b8c4 	b.w	8031664 <__kernel_sinf>
 80314dc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80314e0:	d304      	bcc.n	80314ec <sinf+0x30>
 80314e2:	ee30 0a40 	vsub.f32	s0, s0, s0
 80314e6:	b003      	add	sp, #12
 80314e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80314ec:	4668      	mov	r0, sp
 80314ee:	f000 fbfb 	bl	8031ce8 <__ieee754_rem_pio2f>
 80314f2:	f000 0003 	and.w	r0, r0, #3
 80314f6:	2801      	cmp	r0, #1
 80314f8:	d00a      	beq.n	8031510 <sinf+0x54>
 80314fa:	2802      	cmp	r0, #2
 80314fc:	d00f      	beq.n	803151e <sinf+0x62>
 80314fe:	b9c0      	cbnz	r0, 8031532 <sinf+0x76>
 8031500:	2001      	movs	r0, #1
 8031502:	eddd 0a01 	vldr	s1, [sp, #4]
 8031506:	ed9d 0a00 	vldr	s0, [sp]
 803150a:	f000 f8ab 	bl	8031664 <__kernel_sinf>
 803150e:	e7ea      	b.n	80314e6 <sinf+0x2a>
 8031510:	eddd 0a01 	vldr	s1, [sp, #4]
 8031514:	ed9d 0a00 	vldr	s0, [sp]
 8031518:	f000 f84c 	bl	80315b4 <__kernel_cosf>
 803151c:	e7e3      	b.n	80314e6 <sinf+0x2a>
 803151e:	2001      	movs	r0, #1
 8031520:	eddd 0a01 	vldr	s1, [sp, #4]
 8031524:	ed9d 0a00 	vldr	s0, [sp]
 8031528:	f000 f89c 	bl	8031664 <__kernel_sinf>
 803152c:	eeb1 0a40 	vneg.f32	s0, s0
 8031530:	e7d9      	b.n	80314e6 <sinf+0x2a>
 8031532:	eddd 0a01 	vldr	s1, [sp, #4]
 8031536:	ed9d 0a00 	vldr	s0, [sp]
 803153a:	f000 f83b 	bl	80315b4 <__kernel_cosf>
 803153e:	e7f5      	b.n	803152c <sinf+0x70>
 8031540:	3f490fd8 	.word	0x3f490fd8
 8031544:	00000000 	.word	0x00000000

08031548 <tanf>:
 8031548:	ee10 3a10 	vmov	r3, s0
 803154c:	b507      	push	{r0, r1, r2, lr}
 803154e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031552:	4a11      	ldr	r2, [pc, #68]	@ (8031598 <tanf+0x50>)
 8031554:	4293      	cmp	r3, r2
 8031556:	d807      	bhi.n	8031568 <tanf+0x20>
 8031558:	2001      	movs	r0, #1
 803155a:	eddf 0a10 	vldr	s1, [pc, #64]	@ 803159c <tanf+0x54>
 803155e:	b003      	add	sp, #12
 8031560:	f85d eb04 	ldr.w	lr, [sp], #4
 8031564:	f000 b8c6 	b.w	80316f4 <__kernel_tanf>
 8031568:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 803156c:	d304      	bcc.n	8031578 <tanf+0x30>
 803156e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8031572:	b003      	add	sp, #12
 8031574:	f85d fb04 	ldr.w	pc, [sp], #4
 8031578:	4668      	mov	r0, sp
 803157a:	f000 fbb5 	bl	8031ce8 <__ieee754_rem_pio2f>
 803157e:	eddd 0a01 	vldr	s1, [sp, #4]
 8031582:	0040      	lsls	r0, r0, #1
 8031584:	ed9d 0a00 	vldr	s0, [sp]
 8031588:	f000 0002 	and.w	r0, r0, #2
 803158c:	f1c0 0001 	rsb	r0, r0, #1
 8031590:	f000 f8b0 	bl	80316f4 <__kernel_tanf>
 8031594:	e7ed      	b.n	8031572 <tanf+0x2a>
 8031596:	bf00      	nop
 8031598:	3f490fda 	.word	0x3f490fda
 803159c:	00000000 	.word	0x00000000

080315a0 <nanf>:
 80315a0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80315a8 <nanf+0x8>
 80315a4:	4770      	bx	lr
 80315a6:	bf00      	nop
 80315a8:	7fc00000 	.word	0x7fc00000

080315ac <__ieee754_sqrtf>:
 80315ac:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80315b0:	4770      	bx	lr
	...

080315b4 <__kernel_cosf>:
 80315b4:	ee10 3a10 	vmov	r3, s0
 80315b8:	eef0 6a40 	vmov.f32	s13, s0
 80315bc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80315c0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80315c4:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80315c8:	d204      	bcs.n	80315d4 <__kernel_cosf+0x20>
 80315ca:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80315ce:	ee17 2a90 	vmov	r2, s15
 80315d2:	b342      	cbz	r2, 8031626 <__kernel_cosf+0x72>
 80315d4:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80315d8:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8031644 <__kernel_cosf+0x90>
 80315dc:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8031648 <__kernel_cosf+0x94>
 80315e0:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 80315e4:	4a19      	ldr	r2, [pc, #100]	@ (803164c <__kernel_cosf+0x98>)
 80315e6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80315ea:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8031650 <__kernel_cosf+0x9c>
 80315ee:	4293      	cmp	r3, r2
 80315f0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80315f4:	ed9f 6a17 	vldr	s12, [pc, #92]	@ 8031654 <__kernel_cosf+0xa0>
 80315f8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80315fc:	eddf 7a16 	vldr	s15, [pc, #88]	@ 8031658 <__kernel_cosf+0xa4>
 8031600:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031604:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 803165c <__kernel_cosf+0xa8>
 8031608:	eea7 6a87 	vfma.f32	s12, s15, s14
 803160c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031610:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031614:	ee26 6a07 	vmul.f32	s12, s12, s14
 8031618:	eee7 0a06 	vfma.f32	s1, s14, s12
 803161c:	d804      	bhi.n	8031628 <__kernel_cosf+0x74>
 803161e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8031622:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031626:	4770      	bx	lr
 8031628:	4a0d      	ldr	r2, [pc, #52]	@ (8031660 <__kernel_cosf+0xac>)
 803162a:	4293      	cmp	r3, r2
 803162c:	bf96      	itet	ls
 803162e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8031632:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8031636:	ee07 3a10 	vmovls	s14, r3
 803163a:	ee30 0a47 	vsub.f32	s0, s0, s14
 803163e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031642:	e7ec      	b.n	803161e <__kernel_cosf+0x6a>
 8031644:	ad47d74e 	.word	0xad47d74e
 8031648:	310f74f6 	.word	0x310f74f6
 803164c:	3e999999 	.word	0x3e999999
 8031650:	b493f27c 	.word	0xb493f27c
 8031654:	37d00d01 	.word	0x37d00d01
 8031658:	bab60b61 	.word	0xbab60b61
 803165c:	3d2aaaab 	.word	0x3d2aaaab
 8031660:	3f480000 	.word	0x3f480000

08031664 <__kernel_sinf>:
 8031664:	ee10 3a10 	vmov	r3, s0
 8031668:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 803166c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031670:	d204      	bcs.n	803167c <__kernel_sinf+0x18>
 8031672:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8031676:	ee17 3a90 	vmov	r3, s15
 803167a:	b35b      	cbz	r3, 80316d4 <__kernel_sinf+0x70>
 803167c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8031680:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80316d8 <__kernel_sinf+0x74>
 8031684:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80316dc <__kernel_sinf+0x78>
 8031688:	eea7 6a27 	vfma.f32	s12, s14, s15
 803168c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80316e0 <__kernel_sinf+0x7c>
 8031690:	ee60 6a07 	vmul.f32	s13, s0, s14
 8031694:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031698:	ed9f 6a12 	vldr	s12, [pc, #72]	@ 80316e4 <__kernel_sinf+0x80>
 803169c:	eea7 6a87 	vfma.f32	s12, s15, s14
 80316a0:	eddf 7a11 	vldr	s15, [pc, #68]	@ 80316e8 <__kernel_sinf+0x84>
 80316a4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80316a8:	b930      	cbnz	r0, 80316b8 <__kernel_sinf+0x54>
 80316aa:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80316ec <__kernel_sinf+0x88>
 80316ae:	eea7 6a27 	vfma.f32	s12, s14, s15
 80316b2:	eea6 0a26 	vfma.f32	s0, s12, s13
 80316b6:	4770      	bx	lr
 80316b8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80316bc:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80316c0:	eee0 7a86 	vfma.f32	s15, s1, s12
 80316c4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80316c8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80316f0 <__kernel_sinf+0x8c>
 80316cc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80316d0:	ee30 0a60 	vsub.f32	s0, s0, s1
 80316d4:	4770      	bx	lr
 80316d6:	bf00      	nop
 80316d8:	2f2ec9d3 	.word	0x2f2ec9d3
 80316dc:	b2d72f34 	.word	0xb2d72f34
 80316e0:	3638ef1b 	.word	0x3638ef1b
 80316e4:	b9500d01 	.word	0xb9500d01
 80316e8:	3c088889 	.word	0x3c088889
 80316ec:	be2aaaab 	.word	0xbe2aaaab
 80316f0:	3e2aaaab 	.word	0x3e2aaaab

080316f4 <__kernel_tanf>:
 80316f4:	b508      	push	{r3, lr}
 80316f6:	ee10 3a10 	vmov	r3, s0
 80316fa:	eef0 7a40 	vmov.f32	s15, s0
 80316fe:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8031702:	f1b2 5f46 	cmp.w	r2, #830472192	@ 0x31800000
 8031706:	d217      	bcs.n	8031738 <__kernel_tanf+0x44>
 8031708:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 803170c:	ee17 1a10 	vmov	r1, s14
 8031710:	bb39      	cbnz	r1, 8031762 <__kernel_tanf+0x6e>
 8031712:	1c43      	adds	r3, r0, #1
 8031714:	4313      	orrs	r3, r2
 8031716:	d108      	bne.n	803172a <__kernel_tanf+0x36>
 8031718:	f7ff fec8 	bl	80314ac <fabsf>
 803171c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031720:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031724:	eeb0 0a67 	vmov.f32	s0, s15
 8031728:	bd08      	pop	{r3, pc}
 803172a:	2801      	cmp	r0, #1
 803172c:	d0fa      	beq.n	8031724 <__kernel_tanf+0x30>
 803172e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031732:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031736:	e7f5      	b.n	8031724 <__kernel_tanf+0x30>
 8031738:	494c      	ldr	r1, [pc, #304]	@ (803186c <__kernel_tanf+0x178>)
 803173a:	428a      	cmp	r2, r1
 803173c:	d311      	bcc.n	8031762 <__kernel_tanf+0x6e>
 803173e:	2b00      	cmp	r3, #0
 8031740:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8031870 <__kernel_tanf+0x17c>
 8031744:	bfbc      	itt	lt
 8031746:	eef1 7a40 	vneglt.f32	s15, s0
 803174a:	eef1 0a60 	vneglt.f32	s1, s1
 803174e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031752:	eddf 7a48 	vldr	s15, [pc, #288]	@ 8031874 <__kernel_tanf+0x180>
 8031756:	ee77 7ae0 	vsub.f32	s15, s15, s1
 803175a:	eddf 0a47 	vldr	s1, [pc, #284]	@ 8031878 <__kernel_tanf+0x184>
 803175e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031762:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8031766:	eddf 5a45 	vldr	s11, [pc, #276]	@ 803187c <__kernel_tanf+0x188>
 803176a:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8031880 <__kernel_tanf+0x18c>
 803176e:	ed9f 5a45 	vldr	s10, [pc, #276]	@ 8031884 <__kernel_tanf+0x190>
 8031772:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8031776:	493d      	ldr	r1, [pc, #244]	@ (803186c <__kernel_tanf+0x178>)
 8031778:	428a      	cmp	r2, r1
 803177a:	eea7 6a25 	vfma.f32	s12, s14, s11
 803177e:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8031888 <__kernel_tanf+0x194>
 8031782:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031786:	ed9f 6a41 	vldr	s12, [pc, #260]	@ 803188c <__kernel_tanf+0x198>
 803178a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803178e:	eddf 5a40 	vldr	s11, [pc, #256]	@ 8031890 <__kernel_tanf+0x19c>
 8031792:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031796:	ed9f 6a3f 	vldr	s12, [pc, #252]	@ 8031894 <__kernel_tanf+0x1a0>
 803179a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803179e:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8031898 <__kernel_tanf+0x1a4>
 80317a2:	eee7 5a05 	vfma.f32	s11, s14, s10
 80317a6:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 803189c <__kernel_tanf+0x1a8>
 80317aa:	eea5 5a87 	vfma.f32	s10, s11, s14
 80317ae:	eddf 5a3c 	vldr	s11, [pc, #240]	@ 80318a0 <__kernel_tanf+0x1ac>
 80317b2:	eee5 5a07 	vfma.f32	s11, s10, s14
 80317b6:	ed9f 5a3b 	vldr	s10, [pc, #236]	@ 80318a4 <__kernel_tanf+0x1b0>
 80317ba:	eea5 5a87 	vfma.f32	s10, s11, s14
 80317be:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80318a8 <__kernel_tanf+0x1b4>
 80317c2:	eee5 5a07 	vfma.f32	s11, s10, s14
 80317c6:	eeb0 7a46 	vmov.f32	s14, s12
 80317ca:	ee27 5aa6 	vmul.f32	s10, s15, s13
 80317ce:	eeb0 6a60 	vmov.f32	s12, s1
 80317d2:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80317d6:	eea7 6a05 	vfma.f32	s12, s14, s10
 80317da:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 80318ac <__kernel_tanf+0x1b8>
 80317de:	eee6 0a26 	vfma.f32	s1, s12, s13
 80317e2:	eee5 0a07 	vfma.f32	s1, s10, s14
 80317e6:	ee37 6aa0 	vadd.f32	s12, s15, s1
 80317ea:	d31d      	bcc.n	8031828 <__kernel_tanf+0x134>
 80317ec:	ee07 0a10 	vmov	s14, r0
 80317f0:	ee26 5a06 	vmul.f32	s10, s12, s12
 80317f4:	179b      	asrs	r3, r3, #30
 80317f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80317fa:	f003 0302 	and.w	r3, r3, #2
 80317fe:	ee36 6a07 	vadd.f32	s12, s12, s14
 8031802:	f1c3 0301 	rsb	r3, r3, #1
 8031806:	ee06 3a90 	vmov	s13, r3
 803180a:	eec5 5a06 	vdiv.f32	s11, s10, s12
 803180e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8031812:	ee35 6ae0 	vsub.f32	s12, s11, s1
 8031816:	ee77 7ac6 	vsub.f32	s15, s15, s12
 803181a:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 803181e:	eea7 7ac6 	vfms.f32	s14, s15, s12
 8031822:	ee66 7a87 	vmul.f32	s15, s13, s14
 8031826:	e77d      	b.n	8031724 <__kernel_tanf+0x30>
 8031828:	2801      	cmp	r0, #1
 803182a:	d01b      	beq.n	8031864 <__kernel_tanf+0x170>
 803182c:	4b20      	ldr	r3, [pc, #128]	@ (80318b0 <__kernel_tanf+0x1bc>)
 803182e:	ee16 2a10 	vmov	r2, s12
 8031832:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031836:	401a      	ands	r2, r3
 8031838:	ee05 2a90 	vmov	s11, r2
 803183c:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8031840:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8031844:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 8031848:	eec7 6a86 	vdiv.f32	s13, s15, s12
 803184c:	ee16 2a90 	vmov	r2, s13
 8031850:	4013      	ands	r3, r2
 8031852:	ee07 3a90 	vmov	s15, r3
 8031856:	eea5 7aa7 	vfma.f32	s14, s11, s15
 803185a:	eea0 7aa7 	vfma.f32	s14, s1, s15
 803185e:	eee7 7a26 	vfma.f32	s15, s14, s13
 8031862:	e75f      	b.n	8031724 <__kernel_tanf+0x30>
 8031864:	eef0 7a46 	vmov.f32	s15, s12
 8031868:	e75c      	b.n	8031724 <__kernel_tanf+0x30>
 803186a:	bf00      	nop
 803186c:	3f2ca140 	.word	0x3f2ca140
 8031870:	3f490fda 	.word	0x3f490fda
 8031874:	33222168 	.word	0x33222168
 8031878:	00000000 	.word	0x00000000
 803187c:	b79bae5f 	.word	0xb79bae5f
 8031880:	38a3f445 	.word	0x38a3f445
 8031884:	37d95384 	.word	0x37d95384
 8031888:	3a1a26c8 	.word	0x3a1a26c8
 803188c:	3b6b6916 	.word	0x3b6b6916
 8031890:	3cb327a4 	.word	0x3cb327a4
 8031894:	3e088889 	.word	0x3e088889
 8031898:	3895c07a 	.word	0x3895c07a
 803189c:	398137b9 	.word	0x398137b9
 80318a0:	3abede48 	.word	0x3abede48
 80318a4:	3c11371f 	.word	0x3c11371f
 80318a8:	3d5d0dd1 	.word	0x3d5d0dd1
 80318ac:	3eaaaaab 	.word	0x3eaaaaab
 80318b0:	fffff000 	.word	0xfffff000

080318b4 <__ieee754_acosf>:
 80318b4:	b508      	push	{r3, lr}
 80318b6:	ee10 3a10 	vmov	r3, s0
 80318ba:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80318be:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 80318c2:	ed2d 8b0c 	vpush	{d8-d13}
 80318c6:	d109      	bne.n	80318dc <__ieee754_acosf+0x28>
 80318c8:	2b00      	cmp	r3, #0
 80318ca:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8031a60 <__ieee754_acosf+0x1ac>
 80318ce:	eddf 7a65 	vldr	s15, [pc, #404]	@ 8031a64 <__ieee754_acosf+0x1b0>
 80318d2:	fe37 0a80 	vselgt.f32	s0, s15, s0
 80318d6:	ecbd 8b0c 	vpop	{d8-d13}
 80318da:	bd08      	pop	{r3, pc}
 80318dc:	d904      	bls.n	80318e8 <__ieee754_acosf+0x34>
 80318de:	ee30 8a40 	vsub.f32	s16, s0, s0
 80318e2:	ee88 0a08 	vdiv.f32	s0, s16, s16
 80318e6:	e7f6      	b.n	80318d6 <__ieee754_acosf+0x22>
 80318e8:	f1b2 5f7c 	cmp.w	r2, #1056964608	@ 0x3f000000
 80318ec:	d23c      	bcs.n	8031968 <__ieee754_acosf+0xb4>
 80318ee:	f1b2 5f0c 	cmp.w	r2, #587202560	@ 0x23000000
 80318f2:	f240 80b1 	bls.w	8031a58 <__ieee754_acosf+0x1a4>
 80318f6:	ee60 7a00 	vmul.f32	s15, s0, s0
 80318fa:	eddf 6a5b 	vldr	s13, [pc, #364]	@ 8031a68 <__ieee754_acosf+0x1b4>
 80318fe:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 8031a6c <__ieee754_acosf+0x1b8>
 8031902:	ed9f 6a5b 	vldr	s12, [pc, #364]	@ 8031a70 <__ieee754_acosf+0x1bc>
 8031906:	eea7 7aa6 	vfma.f32	s14, s15, s13
 803190a:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 8031a74 <__ieee754_acosf+0x1c0>
 803190e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031912:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8031a78 <__ieee754_acosf+0x1c4>
 8031916:	eea6 7aa7 	vfma.f32	s14, s13, s15
 803191a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8031a7c <__ieee754_acosf+0x1c8>
 803191e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031922:	ed9f 7a57 	vldr	s14, [pc, #348]	@ 8031a80 <__ieee754_acosf+0x1cc>
 8031926:	eea6 7aa7 	vfma.f32	s14, s13, s15
 803192a:	eddf 6a56 	vldr	s13, [pc, #344]	@ 8031a84 <__ieee754_acosf+0x1d0>
 803192e:	eea7 6aa6 	vfma.f32	s12, s15, s13
 8031932:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8031a88 <__ieee754_acosf+0x1d4>
 8031936:	ee27 7a27 	vmul.f32	s14, s14, s15
 803193a:	eee6 6a27 	vfma.f32	s13, s12, s15
 803193e:	ed9f 6a53 	vldr	s12, [pc, #332]	@ 8031a8c <__ieee754_acosf+0x1d8>
 8031942:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8031946:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 803194a:	eee6 6a27 	vfma.f32	s13, s12, s15
 803194e:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8031a90 <__ieee754_acosf+0x1dc>
 8031952:	ee87 6a26 	vdiv.f32	s12, s14, s13
 8031956:	eee0 7a46 	vfms.f32	s15, s0, s12
 803195a:	ee70 7a67 	vsub.f32	s15, s0, s15
 803195e:	ed9f 0a4d 	vldr	s0, [pc, #308]	@ 8031a94 <__ieee754_acosf+0x1e0>
 8031962:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031966:	e7b6      	b.n	80318d6 <__ieee754_acosf+0x22>
 8031968:	2b00      	cmp	r3, #0
 803196a:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 803196e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031972:	eddf da3d 	vldr	s27, [pc, #244]	@ 8031a68 <__ieee754_acosf+0x1b4>
 8031976:	eddf ca3d 	vldr	s25, [pc, #244]	@ 8031a6c <__ieee754_acosf+0x1b8>
 803197a:	ed9f ca3e 	vldr	s24, [pc, #248]	@ 8031a74 <__ieee754_acosf+0x1c0>
 803197e:	eddf ba3e 	vldr	s23, [pc, #248]	@ 8031a78 <__ieee754_acosf+0x1c4>
 8031982:	ed9f ba3e 	vldr	s22, [pc, #248]	@ 8031a7c <__ieee754_acosf+0x1c8>
 8031986:	eddf 8a3e 	vldr	s17, [pc, #248]	@ 8031a80 <__ieee754_acosf+0x1cc>
 803198a:	ed9f da3e 	vldr	s26, [pc, #248]	@ 8031a84 <__ieee754_acosf+0x1d0>
 803198e:	eddf aa38 	vldr	s21, [pc, #224]	@ 8031a70 <__ieee754_acosf+0x1bc>
 8031992:	ed9f aa3d 	vldr	s20, [pc, #244]	@ 8031a88 <__ieee754_acosf+0x1d4>
 8031996:	eddf 9a3d 	vldr	s19, [pc, #244]	@ 8031a8c <__ieee754_acosf+0x1d8>
 803199a:	da28      	bge.n	80319ee <__ieee754_acosf+0x13a>
 803199c:	ee30 8a09 	vadd.f32	s16, s0, s18
 80319a0:	ee28 0a27 	vmul.f32	s0, s16, s15
 80319a4:	eee0 ca2d 	vfma.f32	s25, s0, s27
 80319a8:	eee0 aa0d 	vfma.f32	s21, s0, s26
 80319ac:	eeac ca80 	vfma.f32	s24, s25, s0
 80319b0:	eeaa aa80 	vfma.f32	s20, s21, s0
 80319b4:	eeec ba00 	vfma.f32	s23, s24, s0
 80319b8:	eeea 9a00 	vfma.f32	s19, s20, s0
 80319bc:	eeab ba80 	vfma.f32	s22, s23, s0
 80319c0:	eea9 9a80 	vfma.f32	s18, s19, s0
 80319c4:	eeeb 8a00 	vfma.f32	s17, s22, s0
 80319c8:	ee68 8a80 	vmul.f32	s17, s17, s0
 80319cc:	f7ff fdee 	bl	80315ac <__ieee754_sqrtf>
 80319d0:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8031a98 <__ieee754_acosf+0x1e4>
 80319d4:	ee88 7a89 	vdiv.f32	s14, s17, s18
 80319d8:	eee0 7a07 	vfma.f32	s15, s0, s14
 80319dc:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 80319e0:	ee77 7a80 	vadd.f32	s15, s15, s0
 80319e4:	ed9f 0a2d 	vldr	s0, [pc, #180]	@ 8031a9c <__ieee754_acosf+0x1e8>
 80319e8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80319ec:	e773      	b.n	80318d6 <__ieee754_acosf+0x22>
 80319ee:	ee39 8a40 	vsub.f32	s16, s18, s0
 80319f2:	ee28 8a27 	vmul.f32	s16, s16, s15
 80319f6:	eeb0 0a48 	vmov.f32	s0, s16
 80319fa:	f7ff fdd7 	bl	80315ac <__ieee754_sqrtf>
 80319fe:	eee8 ca2d 	vfma.f32	s25, s16, s27
 8031a02:	eee8 aa0d 	vfma.f32	s21, s16, s26
 8031a06:	ee10 3a10 	vmov	r3, s0
 8031a0a:	eeb0 6a48 	vmov.f32	s12, s16
 8031a0e:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8031a12:	f023 030f 	bic.w	r3, r3, #15
 8031a16:	eeac ca88 	vfma.f32	s24, s25, s16
 8031a1a:	eeaa aa88 	vfma.f32	s20, s21, s16
 8031a1e:	ee07 3a90 	vmov	s15, r3
 8031a22:	eea7 6ae7 	vfms.f32	s12, s15, s15
 8031a26:	ee70 6a27 	vadd.f32	s13, s0, s15
 8031a2a:	eeec ba08 	vfma.f32	s23, s24, s16
 8031a2e:	eeea 9a08 	vfma.f32	s19, s20, s16
 8031a32:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8031a36:	eeab ba88 	vfma.f32	s22, s23, s16
 8031a3a:	eea9 9a88 	vfma.f32	s18, s19, s16
 8031a3e:	eeeb 8a08 	vfma.f32	s17, s22, s16
 8031a42:	ee68 8a88 	vmul.f32	s17, s17, s16
 8031a46:	eec8 6a89 	vdiv.f32	s13, s17, s18
 8031a4a:	eea0 7a26 	vfma.f32	s14, s0, s13
 8031a4e:	ee37 0a87 	vadd.f32	s0, s15, s14
 8031a52:	ee30 0a00 	vadd.f32	s0, s0, s0
 8031a56:	e73e      	b.n	80318d6 <__ieee754_acosf+0x22>
 8031a58:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8031aa0 <__ieee754_acosf+0x1ec>
 8031a5c:	e73b      	b.n	80318d6 <__ieee754_acosf+0x22>
 8031a5e:	bf00      	nop
 8031a60:	40490fdb 	.word	0x40490fdb
 8031a64:	00000000 	.word	0x00000000
 8031a68:	3811ef08 	.word	0x3811ef08
 8031a6c:	3a4f7f04 	.word	0x3a4f7f04
 8031a70:	bf303361 	.word	0xbf303361
 8031a74:	bd241146 	.word	0xbd241146
 8031a78:	3e4e0aa8 	.word	0x3e4e0aa8
 8031a7c:	bea6b090 	.word	0xbea6b090
 8031a80:	3e2aaaab 	.word	0x3e2aaaab
 8031a84:	3d9dc62e 	.word	0x3d9dc62e
 8031a88:	4001572d 	.word	0x4001572d
 8031a8c:	c019d139 	.word	0xc019d139
 8031a90:	33a22168 	.word	0x33a22168
 8031a94:	3fc90fda 	.word	0x3fc90fda
 8031a98:	b3a22168 	.word	0xb3a22168
 8031a9c:	40490fda 	.word	0x40490fda
 8031aa0:	3fc90fdb 	.word	0x3fc90fdb

08031aa4 <__ieee754_atan2f>:
 8031aa4:	ee10 2a90 	vmov	r2, s1
 8031aa8:	eef0 7a40 	vmov.f32	s15, s0
 8031aac:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8031ab0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031ab4:	b510      	push	{r4, lr}
 8031ab6:	d806      	bhi.n	8031ac6 <__ieee754_atan2f+0x22>
 8031ab8:	ee10 0a10 	vmov	r0, s0
 8031abc:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8031ac0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031ac4:	d904      	bls.n	8031ad0 <__ieee754_atan2f+0x2c>
 8031ac6:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8031aca:	eeb0 0a67 	vmov.f32	s0, s15
 8031ace:	bd10      	pop	{r4, pc}
 8031ad0:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031ad4:	d103      	bne.n	8031ade <__ieee754_atan2f+0x3a>
 8031ad6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031ada:	f7ff bbcf 	b.w	803127c <atanf>
 8031ade:	1794      	asrs	r4, r2, #30
 8031ae0:	f004 0402 	and.w	r4, r4, #2
 8031ae4:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8031ae8:	b93b      	cbnz	r3, 8031afa <__ieee754_atan2f+0x56>
 8031aea:	2c02      	cmp	r4, #2
 8031aec:	d05c      	beq.n	8031ba8 <__ieee754_atan2f+0x104>
 8031aee:	2c03      	cmp	r4, #3
 8031af0:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8031bbc <__ieee754_atan2f+0x118>
 8031af4:	fe47 7a00 	vseleq.f32	s15, s14, s0
 8031af8:	e7e7      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031afa:	b939      	cbnz	r1, 8031b0c <__ieee754_atan2f+0x68>
 8031afc:	2800      	cmp	r0, #0
 8031afe:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8031bc0 <__ieee754_atan2f+0x11c>
 8031b02:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031bc4 <__ieee754_atan2f+0x120>
 8031b06:	fe67 7a87 	vselge.f32	s15, s15, s14
 8031b0a:	e7de      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031b0c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031b10:	d110      	bne.n	8031b34 <__ieee754_atan2f+0x90>
 8031b12:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031b16:	f104 34ff 	add.w	r4, r4, #4294967295
 8031b1a:	d107      	bne.n	8031b2c <__ieee754_atan2f+0x88>
 8031b1c:	2c02      	cmp	r4, #2
 8031b1e:	d846      	bhi.n	8031bae <__ieee754_atan2f+0x10a>
 8031b20:	4b29      	ldr	r3, [pc, #164]	@ (8031bc8 <__ieee754_atan2f+0x124>)
 8031b22:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8031b26:	edd3 7a00 	vldr	s15, [r3]
 8031b2a:	e7ce      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031b2c:	2c02      	cmp	r4, #2
 8031b2e:	d841      	bhi.n	8031bb4 <__ieee754_atan2f+0x110>
 8031b30:	4b26      	ldr	r3, [pc, #152]	@ (8031bcc <__ieee754_atan2f+0x128>)
 8031b32:	e7f6      	b.n	8031b22 <__ieee754_atan2f+0x7e>
 8031b34:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031b38:	d0e0      	beq.n	8031afc <__ieee754_atan2f+0x58>
 8031b3a:	1a5b      	subs	r3, r3, r1
 8031b3c:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8031b40:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8031b44:	da1a      	bge.n	8031b7c <__ieee754_atan2f+0xd8>
 8031b46:	2a00      	cmp	r2, #0
 8031b48:	da01      	bge.n	8031b4e <__ieee754_atan2f+0xaa>
 8031b4a:	313c      	adds	r1, #60	@ 0x3c
 8031b4c:	db19      	blt.n	8031b82 <__ieee754_atan2f+0xde>
 8031b4e:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8031b52:	f7ff fcab 	bl	80314ac <fabsf>
 8031b56:	f7ff fb91 	bl	803127c <atanf>
 8031b5a:	eef0 7a40 	vmov.f32	s15, s0
 8031b5e:	2c01      	cmp	r4, #1
 8031b60:	d012      	beq.n	8031b88 <__ieee754_atan2f+0xe4>
 8031b62:	2c02      	cmp	r4, #2
 8031b64:	d017      	beq.n	8031b96 <__ieee754_atan2f+0xf2>
 8031b66:	2c00      	cmp	r4, #0
 8031b68:	d0af      	beq.n	8031aca <__ieee754_atan2f+0x26>
 8031b6a:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8031bd0 <__ieee754_atan2f+0x12c>
 8031b6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b72:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8031bd4 <__ieee754_atan2f+0x130>
 8031b76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031b7a:	e7a6      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031b7c:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8031bc0 <__ieee754_atan2f+0x11c>
 8031b80:	e7ed      	b.n	8031b5e <__ieee754_atan2f+0xba>
 8031b82:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031bd8 <__ieee754_atan2f+0x134>
 8031b86:	e7ea      	b.n	8031b5e <__ieee754_atan2f+0xba>
 8031b88:	ee17 3a90 	vmov	r3, s15
 8031b8c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8031b90:	ee07 3a90 	vmov	s15, r3
 8031b94:	e799      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031b96:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8031bd0 <__ieee754_atan2f+0x12c>
 8031b9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b9e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8031bd4 <__ieee754_atan2f+0x130>
 8031ba2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8031ba6:	e790      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031ba8:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8031bd4 <__ieee754_atan2f+0x130>
 8031bac:	e78d      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031bae:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8031bdc <__ieee754_atan2f+0x138>
 8031bb2:	e78a      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031bb4:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031bd8 <__ieee754_atan2f+0x134>
 8031bb8:	e787      	b.n	8031aca <__ieee754_atan2f+0x26>
 8031bba:	bf00      	nop
 8031bbc:	c0490fdb 	.word	0xc0490fdb
 8031bc0:	3fc90fdb 	.word	0x3fc90fdb
 8031bc4:	bfc90fdb 	.word	0xbfc90fdb
 8031bc8:	080382b0 	.word	0x080382b0
 8031bcc:	080382a4 	.word	0x080382a4
 8031bd0:	33bbbd2e 	.word	0x33bbbd2e
 8031bd4:	40490fdb 	.word	0x40490fdb
 8031bd8:	00000000 	.word	0x00000000
 8031bdc:	3f490fdb 	.word	0x3f490fdb

08031be0 <__ieee754_fmodf>:
 8031be0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031be2:	ee10 5a90 	vmov	r5, s1
 8031be6:	f025 4000 	bic.w	r0, r5, #2147483648	@ 0x80000000
 8031bea:	1e43      	subs	r3, r0, #1
 8031bec:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031bf0:	d206      	bcs.n	8031c00 <__ieee754_fmodf+0x20>
 8031bf2:	ee10 3a10 	vmov	r3, s0
 8031bf6:	f023 4600 	bic.w	r6, r3, #2147483648	@ 0x80000000
 8031bfa:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8031bfe:	d304      	bcc.n	8031c0a <__ieee754_fmodf+0x2a>
 8031c00:	ee60 0a20 	vmul.f32	s1, s0, s1
 8031c04:	ee80 0aa0 	vdiv.f32	s0, s1, s1
 8031c08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031c0a:	4286      	cmp	r6, r0
 8031c0c:	dbfc      	blt.n	8031c08 <__ieee754_fmodf+0x28>
 8031c0e:	f003 4400 	and.w	r4, r3, #2147483648	@ 0x80000000
 8031c12:	d105      	bne.n	8031c20 <__ieee754_fmodf+0x40>
 8031c14:	4b33      	ldr	r3, [pc, #204]	@ (8031ce4 <__ieee754_fmodf+0x104>)
 8031c16:	eb03 7354 	add.w	r3, r3, r4, lsr #29
 8031c1a:	ed93 0a00 	vldr	s0, [r3]
 8031c1e:	e7f3      	b.n	8031c08 <__ieee754_fmodf+0x28>
 8031c20:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8031c24:	d141      	bne.n	8031caa <__ieee754_fmodf+0xca>
 8031c26:	0232      	lsls	r2, r6, #8
 8031c28:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 8031c2c:	2a00      	cmp	r2, #0
 8031c2e:	dc39      	bgt.n	8031ca4 <__ieee754_fmodf+0xc4>
 8031c30:	f015 4fff 	tst.w	r5, #2139095040	@ 0x7f800000
 8031c34:	d13f      	bne.n	8031cb6 <__ieee754_fmodf+0xd6>
 8031c36:	0207      	lsls	r7, r0, #8
 8031c38:	f06f 027d 	mvn.w	r2, #125	@ 0x7d
 8031c3c:	2f00      	cmp	r7, #0
 8031c3e:	da37      	bge.n	8031cb0 <__ieee754_fmodf+0xd0>
 8031c40:	f111 0f7e 	cmn.w	r1, #126	@ 0x7e
 8031c44:	bfb5      	itete	lt
 8031c46:	f06f 037d 	mvnlt.w	r3, #125	@ 0x7d
 8031c4a:	f3c3 0316 	ubfxge	r3, r3, #0, #23
 8031c4e:	1a5b      	sublt	r3, r3, r1
 8031c50:	f443 0300 	orrge.w	r3, r3, #8388608	@ 0x800000
 8031c54:	eba1 0102 	sub.w	r1, r1, r2
 8031c58:	bfb8      	it	lt
 8031c5a:	fa06 f303 	lsllt.w	r3, r6, r3
 8031c5e:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c62:	bfb5      	itete	lt
 8031c64:	f06f 057d 	mvnlt.w	r5, #125	@ 0x7d
 8031c68:	f3c5 0516 	ubfxge	r5, r5, #0, #23
 8031c6c:	1aad      	sublt	r5, r5, r2
 8031c6e:	f445 0000 	orrge.w	r0, r5, #8388608	@ 0x800000
 8031c72:	bfb8      	it	lt
 8031c74:	40a8      	lsllt	r0, r5
 8031c76:	1a1d      	subs	r5, r3, r0
 8031c78:	bb01      	cbnz	r1, 8031cbc <__ieee754_fmodf+0xdc>
 8031c7a:	ea13 0325 	ands.w	r3, r3, r5, asr #32
 8031c7e:	bf38      	it	cc
 8031c80:	462b      	movcc	r3, r5
 8031c82:	2b00      	cmp	r3, #0
 8031c84:	d0c6      	beq.n	8031c14 <__ieee754_fmodf+0x34>
 8031c86:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031c8a:	db1f      	blt.n	8031ccc <__ieee754_fmodf+0xec>
 8031c8c:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c90:	db1f      	blt.n	8031cd2 <__ieee754_fmodf+0xf2>
 8031c92:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8031c96:	327f      	adds	r2, #127	@ 0x7f
 8031c98:	4323      	orrs	r3, r4
 8031c9a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8031c9e:	ee00 3a10 	vmov	s0, r3
 8031ca2:	e7b1      	b.n	8031c08 <__ieee754_fmodf+0x28>
 8031ca4:	3901      	subs	r1, #1
 8031ca6:	0052      	lsls	r2, r2, #1
 8031ca8:	e7c0      	b.n	8031c2c <__ieee754_fmodf+0x4c>
 8031caa:	15f1      	asrs	r1, r6, #23
 8031cac:	397f      	subs	r1, #127	@ 0x7f
 8031cae:	e7bf      	b.n	8031c30 <__ieee754_fmodf+0x50>
 8031cb0:	3a01      	subs	r2, #1
 8031cb2:	007f      	lsls	r7, r7, #1
 8031cb4:	e7c2      	b.n	8031c3c <__ieee754_fmodf+0x5c>
 8031cb6:	15c2      	asrs	r2, r0, #23
 8031cb8:	3a7f      	subs	r2, #127	@ 0x7f
 8031cba:	e7c1      	b.n	8031c40 <__ieee754_fmodf+0x60>
 8031cbc:	2d00      	cmp	r5, #0
 8031cbe:	da02      	bge.n	8031cc6 <__ieee754_fmodf+0xe6>
 8031cc0:	005b      	lsls	r3, r3, #1
 8031cc2:	3901      	subs	r1, #1
 8031cc4:	e7d7      	b.n	8031c76 <__ieee754_fmodf+0x96>
 8031cc6:	d0a5      	beq.n	8031c14 <__ieee754_fmodf+0x34>
 8031cc8:	006b      	lsls	r3, r5, #1
 8031cca:	e7fa      	b.n	8031cc2 <__ieee754_fmodf+0xe2>
 8031ccc:	005b      	lsls	r3, r3, #1
 8031cce:	3a01      	subs	r2, #1
 8031cd0:	e7d9      	b.n	8031c86 <__ieee754_fmodf+0xa6>
 8031cd2:	f1c2 22ff 	rsb	r2, r2, #4278255360	@ 0xff00ff00
 8031cd6:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 8031cda:	3282      	adds	r2, #130	@ 0x82
 8031cdc:	4113      	asrs	r3, r2
 8031cde:	4323      	orrs	r3, r4
 8031ce0:	e7dd      	b.n	8031c9e <__ieee754_fmodf+0xbe>
 8031ce2:	bf00      	nop
 8031ce4:	080382bc 	.word	0x080382bc

08031ce8 <__ieee754_rem_pio2f>:
 8031ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031cea:	ee10 6a10 	vmov	r6, s0
 8031cee:	4b87      	ldr	r3, [pc, #540]	@ (8031f0c <__ieee754_rem_pio2f+0x224>)
 8031cf0:	b087      	sub	sp, #28
 8031cf2:	4604      	mov	r4, r0
 8031cf4:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8031cf8:	429d      	cmp	r5, r3
 8031cfa:	d805      	bhi.n	8031d08 <__ieee754_rem_pio2f+0x20>
 8031cfc:	2300      	movs	r3, #0
 8031cfe:	ed80 0a00 	vstr	s0, [r0]
 8031d02:	6043      	str	r3, [r0, #4]
 8031d04:	2000      	movs	r0, #0
 8031d06:	e022      	b.n	8031d4e <__ieee754_rem_pio2f+0x66>
 8031d08:	4b81      	ldr	r3, [pc, #516]	@ (8031f10 <__ieee754_rem_pio2f+0x228>)
 8031d0a:	429d      	cmp	r5, r3
 8031d0c:	d83a      	bhi.n	8031d84 <__ieee754_rem_pio2f+0x9c>
 8031d0e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031d12:	2e00      	cmp	r6, #0
 8031d14:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ 8031f14 <__ieee754_rem_pio2f+0x22c>
 8031d18:	f023 030f 	bic.w	r3, r3, #15
 8031d1c:	4a7e      	ldr	r2, [pc, #504]	@ (8031f18 <__ieee754_rem_pio2f+0x230>)
 8031d1e:	dd18      	ble.n	8031d52 <__ieee754_rem_pio2f+0x6a>
 8031d20:	4293      	cmp	r3, r2
 8031d22:	ee70 7a47 	vsub.f32	s15, s0, s14
 8031d26:	bf09      	itett	eq
 8031d28:	ed9f 7a7c 	vldreq	s14, [pc, #496]	@ 8031f1c <__ieee754_rem_pio2f+0x234>
 8031d2c:	eddf 6a7c 	vldrne	s13, [pc, #496]	@ 8031f20 <__ieee754_rem_pio2f+0x238>
 8031d30:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8031d34:	eddf 6a7b 	vldreq	s13, [pc, #492]	@ 8031f24 <__ieee754_rem_pio2f+0x23c>
 8031d38:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8031d3c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031d40:	ed80 7a00 	vstr	s14, [r0]
 8031d44:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8031d48:	edc0 7a01 	vstr	s15, [r0, #4]
 8031d4c:	2001      	movs	r0, #1
 8031d4e:	b007      	add	sp, #28
 8031d50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031d52:	4293      	cmp	r3, r2
 8031d54:	ee70 7a07 	vadd.f32	s15, s0, s14
 8031d58:	bf09      	itett	eq
 8031d5a:	ed9f 7a70 	vldreq	s14, [pc, #448]	@ 8031f1c <__ieee754_rem_pio2f+0x234>
 8031d5e:	eddf 6a70 	vldrne	s13, [pc, #448]	@ 8031f20 <__ieee754_rem_pio2f+0x238>
 8031d62:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8031d66:	eddf 6a6f 	vldreq	s13, [pc, #444]	@ 8031f24 <__ieee754_rem_pio2f+0x23c>
 8031d6a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8031d6e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031d72:	ed80 7a00 	vstr	s14, [r0]
 8031d76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8031d7a:	edc0 7a01 	vstr	s15, [r0, #4]
 8031d7e:	f04f 30ff 	mov.w	r0, #4294967295
 8031d82:	e7e4      	b.n	8031d4e <__ieee754_rem_pio2f+0x66>
 8031d84:	4b68      	ldr	r3, [pc, #416]	@ (8031f28 <__ieee754_rem_pio2f+0x240>)
 8031d86:	429d      	cmp	r5, r3
 8031d88:	d872      	bhi.n	8031e70 <__ieee754_rem_pio2f+0x188>
 8031d8a:	f7ff fb8f 	bl	80314ac <fabsf>
 8031d8e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031d92:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 8031f2c <__ieee754_rem_pio2f+0x244>
 8031d96:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031d9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8031d9e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8031da2:	ee17 0a90 	vmov	r0, s15
 8031da6:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031f14 <__ieee754_rem_pio2f+0x22c>
 8031daa:	281f      	cmp	r0, #31
 8031dac:	eea7 0a67 	vfms.f32	s0, s14, s15
 8031db0:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031f20 <__ieee754_rem_pio2f+0x238>
 8031db4:	eeb1 6a47 	vneg.f32	s12, s14
 8031db8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031dbc:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031dc0:	ee16 1a90 	vmov	r1, s13
 8031dc4:	dc09      	bgt.n	8031dda <__ieee754_rem_pio2f+0xf2>
 8031dc6:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031dca:	1e47      	subs	r7, r0, #1
 8031dcc:	4a58      	ldr	r2, [pc, #352]	@ (8031f30 <__ieee754_rem_pio2f+0x248>)
 8031dce:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8031dd2:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8031dd6:	4293      	cmp	r3, r2
 8031dd8:	d106      	bne.n	8031de8 <__ieee754_rem_pio2f+0x100>
 8031dda:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8031dde:	15eb      	asrs	r3, r5, #23
 8031de0:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8031de4:	2a08      	cmp	r2, #8
 8031de6:	dc14      	bgt.n	8031e12 <__ieee754_rem_pio2f+0x12a>
 8031de8:	6021      	str	r1, [r4, #0]
 8031dea:	ed94 7a00 	vldr	s14, [r4]
 8031dee:	2e00      	cmp	r6, #0
 8031df0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8031df4:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031df8:	ed84 0a01 	vstr	s0, [r4, #4]
 8031dfc:	daa7      	bge.n	8031d4e <__ieee754_rem_pio2f+0x66>
 8031dfe:	eeb1 7a47 	vneg.f32	s14, s14
 8031e02:	eeb1 0a40 	vneg.f32	s0, s0
 8031e06:	ed84 7a00 	vstr	s14, [r4]
 8031e0a:	ed84 0a01 	vstr	s0, [r4, #4]
 8031e0e:	4240      	negs	r0, r0
 8031e10:	e79d      	b.n	8031d4e <__ieee754_rem_pio2f+0x66>
 8031e12:	eef0 6a40 	vmov.f32	s13, s0
 8031e16:	eddf 5a41 	vldr	s11, [pc, #260]	@ 8031f1c <__ieee754_rem_pio2f+0x234>
 8031e1a:	eee6 6a25 	vfma.f32	s13, s12, s11
 8031e1e:	ee70 7a66 	vsub.f32	s15, s0, s13
 8031e22:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031e26:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8031f24 <__ieee754_rem_pio2f+0x23c>
 8031e2a:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8031e2e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8031e32:	ee15 2a90 	vmov	r2, s11
 8031e36:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8031e3a:	1a5b      	subs	r3, r3, r1
 8031e3c:	2b19      	cmp	r3, #25
 8031e3e:	dc04      	bgt.n	8031e4a <__ieee754_rem_pio2f+0x162>
 8031e40:	eeb0 0a66 	vmov.f32	s0, s13
 8031e44:	edc4 5a00 	vstr	s11, [r4]
 8031e48:	e7cf      	b.n	8031dea <__ieee754_rem_pio2f+0x102>
 8031e4a:	eeb0 0a66 	vmov.f32	s0, s13
 8031e4e:	eddf 5a39 	vldr	s11, [pc, #228]	@ 8031f34 <__ieee754_rem_pio2f+0x24c>
 8031e52:	eea6 0a25 	vfma.f32	s0, s12, s11
 8031e56:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8031e5a:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8031f38 <__ieee754_rem_pio2f+0x250>
 8031e5e:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031e62:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8031e66:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031e6a:	ed84 7a00 	vstr	s14, [r4]
 8031e6e:	e7bc      	b.n	8031dea <__ieee754_rem_pio2f+0x102>
 8031e70:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8031e74:	d306      	bcc.n	8031e84 <__ieee754_rem_pio2f+0x19c>
 8031e76:	ee70 7a40 	vsub.f32	s15, s0, s0
 8031e7a:	edc0 7a01 	vstr	s15, [r0, #4]
 8031e7e:	edc0 7a00 	vstr	s15, [r0]
 8031e82:	e73f      	b.n	8031d04 <__ieee754_rem_pio2f+0x1c>
 8031e84:	15ea      	asrs	r2, r5, #23
 8031e86:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 8031f3c <__ieee754_rem_pio2f+0x254>
 8031e8a:	3a86      	subs	r2, #134	@ 0x86
 8031e8c:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8031e90:	ee07 3a90 	vmov	s15, r3
 8031e94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031e9c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031ea0:	ed8d 7a03 	vstr	s14, [sp, #12]
 8031ea4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031ea8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031eac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031eb0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031eb4:	ed8d 7a04 	vstr	s14, [sp, #16]
 8031eb8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031ebc:	eef5 7a40 	vcmp.f32	s15, #0.0
 8031ec0:	edcd 7a05 	vstr	s15, [sp, #20]
 8031ec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031ec8:	d11e      	bne.n	8031f08 <__ieee754_rem_pio2f+0x220>
 8031eca:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8031ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031ed2:	bf0c      	ite	eq
 8031ed4:	2301      	moveq	r3, #1
 8031ed6:	2302      	movne	r3, #2
 8031ed8:	4919      	ldr	r1, [pc, #100]	@ (8031f40 <__ieee754_rem_pio2f+0x258>)
 8031eda:	a803      	add	r0, sp, #12
 8031edc:	9101      	str	r1, [sp, #4]
 8031ede:	2102      	movs	r1, #2
 8031ee0:	9100      	str	r1, [sp, #0]
 8031ee2:	4621      	mov	r1, r4
 8031ee4:	f000 f82e 	bl	8031f44 <__kernel_rem_pio2f>
 8031ee8:	2e00      	cmp	r6, #0
 8031eea:	f6bf af30 	bge.w	8031d4e <__ieee754_rem_pio2f+0x66>
 8031eee:	edd4 7a00 	vldr	s15, [r4]
 8031ef2:	eef1 7a67 	vneg.f32	s15, s15
 8031ef6:	edc4 7a00 	vstr	s15, [r4]
 8031efa:	edd4 7a01 	vldr	s15, [r4, #4]
 8031efe:	eef1 7a67 	vneg.f32	s15, s15
 8031f02:	edc4 7a01 	vstr	s15, [r4, #4]
 8031f06:	e782      	b.n	8031e0e <__ieee754_rem_pio2f+0x126>
 8031f08:	2303      	movs	r3, #3
 8031f0a:	e7e5      	b.n	8031ed8 <__ieee754_rem_pio2f+0x1f0>
 8031f0c:	3f490fd8 	.word	0x3f490fd8
 8031f10:	4016cbe3 	.word	0x4016cbe3
 8031f14:	3fc90f80 	.word	0x3fc90f80
 8031f18:	3fc90fd0 	.word	0x3fc90fd0
 8031f1c:	37354400 	.word	0x37354400
 8031f20:	37354443 	.word	0x37354443
 8031f24:	2e85a308 	.word	0x2e85a308
 8031f28:	43490f80 	.word	0x43490f80
 8031f2c:	3f22f984 	.word	0x3f22f984
 8031f30:	080382c4 	.word	0x080382c4
 8031f34:	2e85a300 	.word	0x2e85a300
 8031f38:	248d3132 	.word	0x248d3132
 8031f3c:	43800000 	.word	0x43800000
 8031f40:	08038344 	.word	0x08038344

08031f44 <__kernel_rem_pio2f>:
 8031f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031f48:	4690      	mov	r8, r2
 8031f4a:	4abc      	ldr	r2, [pc, #752]	@ (803223c <__kernel_rem_pio2f+0x2f8>)
 8031f4c:	460f      	mov	r7, r1
 8031f4e:	f103 3bff 	add.w	fp, r3, #4294967295
 8031f52:	f118 0f04 	cmn.w	r8, #4
 8031f56:	ed2d 8b04 	vpush	{d8-d9}
 8031f5a:	b0d9      	sub	sp, #356	@ 0x164
 8031f5c:	9001      	str	r0, [sp, #4]
 8031f5e:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8031f60:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8031f64:	db27      	blt.n	8031fb6 <__kernel_rem_pio2f+0x72>
 8031f66:	f1b8 0203 	subs.w	r2, r8, #3
 8031f6a:	bf48      	it	mi
 8031f6c:	f108 0204 	addmi.w	r2, r8, #4
 8031f70:	10d2      	asrs	r2, r2, #3
 8031f72:	1c55      	adds	r5, r2, #1
 8031f74:	eba2 060b 	sub.w	r6, r2, fp
 8031f78:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8031f7a:	eb0a 0c0b 	add.w	ip, sl, fp
 8031f7e:	00e8      	lsls	r0, r5, #3
 8031f80:	ac1c      	add	r4, sp, #112	@ 0x70
 8031f82:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8031f86:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 803224c <__kernel_rem_pio2f+0x308>
 8031f8a:	9002      	str	r0, [sp, #8]
 8031f8c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8031f90:	2000      	movs	r0, #0
 8031f92:	4560      	cmp	r0, ip
 8031f94:	dd11      	ble.n	8031fba <__kernel_rem_pio2f+0x76>
 8031f96:	a91c      	add	r1, sp, #112	@ 0x70
 8031f98:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8031f9c:	f04f 0c00 	mov.w	ip, #0
 8031fa0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8031fa4:	45d4      	cmp	ip, sl
 8031fa6:	dc29      	bgt.n	8031ffc <__kernel_rem_pio2f+0xb8>
 8031fa8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8031fac:	4606      	mov	r6, r0
 8031fae:	eddf 7aa7 	vldr	s15, [pc, #668]	@ 803224c <__kernel_rem_pio2f+0x308>
 8031fb2:	2400      	movs	r4, #0
 8031fb4:	e018      	b.n	8031fe8 <__kernel_rem_pio2f+0xa4>
 8031fb6:	2200      	movs	r2, #0
 8031fb8:	e7db      	b.n	8031f72 <__kernel_rem_pio2f+0x2e>
 8031fba:	42c6      	cmn	r6, r0
 8031fbc:	bf54      	ite	pl
 8031fbe:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8031fc2:	eef0 7a47 	vmovmi.f32	s15, s14
 8031fc6:	f100 0001 	add.w	r0, r0, #1
 8031fca:	bf5c      	itt	pl
 8031fcc:	ee07 1a90 	vmovpl	s15, r1
 8031fd0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8031fd4:	ece4 7a01 	vstmia	r4!, {s15}
 8031fd8:	e7db      	b.n	8031f92 <__kernel_rem_pio2f+0x4e>
 8031fda:	ecfe 6a01 	vldmia	lr!, {s13}
 8031fde:	3401      	adds	r4, #1
 8031fe0:	ed96 7a00 	vldr	s14, [r6]
 8031fe4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8031fe8:	455c      	cmp	r4, fp
 8031fea:	f1a6 0604 	sub.w	r6, r6, #4
 8031fee:	ddf4      	ble.n	8031fda <__kernel_rem_pio2f+0x96>
 8031ff0:	f10c 0c01 	add.w	ip, ip, #1
 8031ff4:	3004      	adds	r0, #4
 8031ff6:	ece9 7a01 	vstmia	r9!, {s15}
 8031ffa:	e7d3      	b.n	8031fa4 <__kernel_rem_pio2f+0x60>
 8031ffc:	a908      	add	r1, sp, #32
 8031ffe:	4654      	mov	r4, sl
 8032000:	eddf 8a91 	vldr	s17, [pc, #580]	@ 8032248 <__kernel_rem_pio2f+0x304>
 8032004:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8032008:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 8032244 <__kernel_rem_pio2f+0x300>
 803200c:	9104      	str	r1, [sp, #16]
 803200e:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8032010:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8032014:	9203      	str	r2, [sp, #12]
 8032016:	00a2      	lsls	r2, r4, #2
 8032018:	a944      	add	r1, sp, #272	@ 0x110
 803201a:	4626      	mov	r6, r4
 803201c:	9205      	str	r2, [sp, #20]
 803201e:	aa58      	add	r2, sp, #352	@ 0x160
 8032020:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8032024:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8032028:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 803202c:	aa08      	add	r2, sp, #32
 803202e:	4694      	mov	ip, r2
 8032030:	2e00      	cmp	r6, #0
 8032032:	f1a0 0004 	sub.w	r0, r0, #4
 8032036:	dc4c      	bgt.n	80320d2 <__kernel_rem_pio2f+0x18e>
 8032038:	4628      	mov	r0, r5
 803203a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 803203e:	f000 f9f5 	bl	803242c <scalbnf>
 8032042:	eeb0 8a40 	vmov.f32	s16, s0
 8032046:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 803204a:	ee28 0a00 	vmul.f32	s0, s16, s0
 803204e:	f000 fa51 	bl	80324f4 <floorf>
 8032052:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8032056:	2d00      	cmp	r5, #0
 8032058:	eea0 8a67 	vfms.f32	s16, s0, s15
 803205c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8032060:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8032064:	ee17 9a90 	vmov	r9, s15
 8032068:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803206c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8032070:	dd41      	ble.n	80320f6 <__kernel_rem_pio2f+0x1b2>
 8032072:	f104 3cff 	add.w	ip, r4, #4294967295
 8032076:	a908      	add	r1, sp, #32
 8032078:	f1c5 0e08 	rsb	lr, r5, #8
 803207c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8032080:	fa46 f00e 	asr.w	r0, r6, lr
 8032084:	4481      	add	r9, r0
 8032086:	fa00 f00e 	lsl.w	r0, r0, lr
 803208a:	1a36      	subs	r6, r6, r0
 803208c:	f1c5 0007 	rsb	r0, r5, #7
 8032090:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8032094:	4106      	asrs	r6, r0
 8032096:	2e00      	cmp	r6, #0
 8032098:	dd3c      	ble.n	8032114 <__kernel_rem_pio2f+0x1d0>
 803209a:	f04f 0e00 	mov.w	lr, #0
 803209e:	f109 0901 	add.w	r9, r9, #1
 80320a2:	4670      	mov	r0, lr
 80320a4:	4574      	cmp	r4, lr
 80320a6:	dc68      	bgt.n	803217a <__kernel_rem_pio2f+0x236>
 80320a8:	2d00      	cmp	r5, #0
 80320aa:	dd03      	ble.n	80320b4 <__kernel_rem_pio2f+0x170>
 80320ac:	2d01      	cmp	r5, #1
 80320ae:	d074      	beq.n	803219a <__kernel_rem_pio2f+0x256>
 80320b0:	2d02      	cmp	r5, #2
 80320b2:	d07d      	beq.n	80321b0 <__kernel_rem_pio2f+0x26c>
 80320b4:	2e02      	cmp	r6, #2
 80320b6:	d12d      	bne.n	8032114 <__kernel_rem_pio2f+0x1d0>
 80320b8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80320bc:	ee30 8a48 	vsub.f32	s16, s0, s16
 80320c0:	b340      	cbz	r0, 8032114 <__kernel_rem_pio2f+0x1d0>
 80320c2:	4628      	mov	r0, r5
 80320c4:	9306      	str	r3, [sp, #24]
 80320c6:	f000 f9b1 	bl	803242c <scalbnf>
 80320ca:	9b06      	ldr	r3, [sp, #24]
 80320cc:	ee38 8a40 	vsub.f32	s16, s16, s0
 80320d0:	e020      	b.n	8032114 <__kernel_rem_pio2f+0x1d0>
 80320d2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80320d6:	3e01      	subs	r6, #1
 80320d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80320dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80320e0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80320e4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80320e8:	ecac 0a01 	vstmia	ip!, {s0}
 80320ec:	ed90 0a00 	vldr	s0, [r0]
 80320f0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80320f4:	e79c      	b.n	8032030 <__kernel_rem_pio2f+0xec>
 80320f6:	d105      	bne.n	8032104 <__kernel_rem_pio2f+0x1c0>
 80320f8:	1e60      	subs	r0, r4, #1
 80320fa:	a908      	add	r1, sp, #32
 80320fc:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8032100:	11f6      	asrs	r6, r6, #7
 8032102:	e7c8      	b.n	8032096 <__kernel_rem_pio2f+0x152>
 8032104:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8032108:	eeb4 8ae7 	vcmpe.f32	s16, s15
 803210c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032110:	da31      	bge.n	8032176 <__kernel_rem_pio2f+0x232>
 8032112:	2600      	movs	r6, #0
 8032114:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8032118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803211c:	f040 8098 	bne.w	8032250 <__kernel_rem_pio2f+0x30c>
 8032120:	1e60      	subs	r0, r4, #1
 8032122:	2200      	movs	r2, #0
 8032124:	4550      	cmp	r0, sl
 8032126:	da4b      	bge.n	80321c0 <__kernel_rem_pio2f+0x27c>
 8032128:	2a00      	cmp	r2, #0
 803212a:	d065      	beq.n	80321f8 <__kernel_rem_pio2f+0x2b4>
 803212c:	3c01      	subs	r4, #1
 803212e:	ab08      	add	r3, sp, #32
 8032130:	3d08      	subs	r5, #8
 8032132:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8032136:	2b00      	cmp	r3, #0
 8032138:	d0f8      	beq.n	803212c <__kernel_rem_pio2f+0x1e8>
 803213a:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 803213e:	4628      	mov	r0, r5
 8032140:	f000 f974 	bl	803242c <scalbnf>
 8032144:	1c63      	adds	r3, r4, #1
 8032146:	aa44      	add	r2, sp, #272	@ 0x110
 8032148:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8032248 <__kernel_rem_pio2f+0x304>
 803214c:	0099      	lsls	r1, r3, #2
 803214e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8032152:	4623      	mov	r3, r4
 8032154:	2b00      	cmp	r3, #0
 8032156:	f280 80a9 	bge.w	80322ac <__kernel_rem_pio2f+0x368>
 803215a:	4623      	mov	r3, r4
 803215c:	2b00      	cmp	r3, #0
 803215e:	f2c0 80c7 	blt.w	80322f0 <__kernel_rem_pio2f+0x3ac>
 8032162:	aa44      	add	r2, sp, #272	@ 0x110
 8032164:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 8032240 <__kernel_rem_pio2f+0x2fc>
 8032168:	eddf 7a38 	vldr	s15, [pc, #224]	@ 803224c <__kernel_rem_pio2f+0x308>
 803216c:	2000      	movs	r0, #0
 803216e:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8032172:	1ae2      	subs	r2, r4, r3
 8032174:	e0b1      	b.n	80322da <__kernel_rem_pio2f+0x396>
 8032176:	2602      	movs	r6, #2
 8032178:	e78f      	b.n	803209a <__kernel_rem_pio2f+0x156>
 803217a:	f852 1b04 	ldr.w	r1, [r2], #4
 803217e:	b948      	cbnz	r0, 8032194 <__kernel_rem_pio2f+0x250>
 8032180:	b121      	cbz	r1, 803218c <__kernel_rem_pio2f+0x248>
 8032182:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8032186:	f842 1c04 	str.w	r1, [r2, #-4]
 803218a:	2101      	movs	r1, #1
 803218c:	f10e 0e01 	add.w	lr, lr, #1
 8032190:	4608      	mov	r0, r1
 8032192:	e787      	b.n	80320a4 <__kernel_rem_pio2f+0x160>
 8032194:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8032198:	e7f5      	b.n	8032186 <__kernel_rem_pio2f+0x242>
 803219a:	f104 3cff 	add.w	ip, r4, #4294967295
 803219e:	aa08      	add	r2, sp, #32
 80321a0:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80321a4:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80321a8:	a908      	add	r1, sp, #32
 80321aa:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80321ae:	e781      	b.n	80320b4 <__kernel_rem_pio2f+0x170>
 80321b0:	f104 3cff 	add.w	ip, r4, #4294967295
 80321b4:	aa08      	add	r2, sp, #32
 80321b6:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80321ba:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80321be:	e7f3      	b.n	80321a8 <__kernel_rem_pio2f+0x264>
 80321c0:	a908      	add	r1, sp, #32
 80321c2:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80321c6:	3801      	subs	r0, #1
 80321c8:	430a      	orrs	r2, r1
 80321ca:	e7ab      	b.n	8032124 <__kernel_rem_pio2f+0x1e0>
 80321cc:	3201      	adds	r2, #1
 80321ce:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80321d2:	2e00      	cmp	r6, #0
 80321d4:	d0fa      	beq.n	80321cc <__kernel_rem_pio2f+0x288>
 80321d6:	9905      	ldr	r1, [sp, #20]
 80321d8:	18e6      	adds	r6, r4, r3
 80321da:	f104 0c01 	add.w	ip, r4, #1
 80321de:	4422      	add	r2, r4
 80321e0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80321e4:	eb0d 0001 	add.w	r0, sp, r1
 80321e8:	a91c      	add	r1, sp, #112	@ 0x70
 80321ea:	384c      	subs	r0, #76	@ 0x4c
 80321ec:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80321f0:	4562      	cmp	r2, ip
 80321f2:	da04      	bge.n	80321fe <__kernel_rem_pio2f+0x2ba>
 80321f4:	4614      	mov	r4, r2
 80321f6:	e70e      	b.n	8032016 <__kernel_rem_pio2f+0xd2>
 80321f8:	9804      	ldr	r0, [sp, #16]
 80321fa:	2201      	movs	r2, #1
 80321fc:	e7e7      	b.n	80321ce <__kernel_rem_pio2f+0x28a>
 80321fe:	9903      	ldr	r1, [sp, #12]
 8032200:	2400      	movs	r4, #0
 8032202:	f8dd e004 	ldr.w	lr, [sp, #4]
 8032206:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 803220a:	ee07 1a90 	vmov	s15, r1
 803220e:	9105      	str	r1, [sp, #20]
 8032210:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032214:	ece6 7a01 	vstmia	r6!, {s15}
 8032218:	46b1      	mov	r9, r6
 803221a:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 803224c <__kernel_rem_pio2f+0x308>
 803221e:	455c      	cmp	r4, fp
 8032220:	dd04      	ble.n	803222c <__kernel_rem_pio2f+0x2e8>
 8032222:	f10c 0c01 	add.w	ip, ip, #1
 8032226:	ece0 7a01 	vstmia	r0!, {s15}
 803222a:	e7e1      	b.n	80321f0 <__kernel_rem_pio2f+0x2ac>
 803222c:	ecfe 6a01 	vldmia	lr!, {s13}
 8032230:	3401      	adds	r4, #1
 8032232:	ed39 7a01 	vldmdb	r9!, {s14}
 8032236:	eee6 7a87 	vfma.f32	s15, s13, s14
 803223a:	e7f0      	b.n	803221e <__kernel_rem_pio2f+0x2da>
 803223c:	08038688 	.word	0x08038688
 8032240:	0803865c 	.word	0x0803865c
 8032244:	43800000 	.word	0x43800000
 8032248:	3b800000 	.word	0x3b800000
 803224c:	00000000 	.word	0x00000000
 8032250:	9b02      	ldr	r3, [sp, #8]
 8032252:	eeb0 0a48 	vmov.f32	s0, s16
 8032256:	eba3 0008 	sub.w	r0, r3, r8
 803225a:	f000 f8e7 	bl	803242c <scalbnf>
 803225e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8032244 <__kernel_rem_pio2f+0x300>
 8032262:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8032266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803226a:	db19      	blt.n	80322a0 <__kernel_rem_pio2f+0x35c>
 803226c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8032248 <__kernel_rem_pio2f+0x304>
 8032270:	aa08      	add	r2, sp, #32
 8032272:	3508      	adds	r5, #8
 8032274:	ee60 7a27 	vmul.f32	s15, s0, s15
 8032278:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803227c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032280:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8032284:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8032288:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 803228c:	ee10 3a10 	vmov	r3, s0
 8032290:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8032294:	3401      	adds	r4, #1
 8032296:	ee17 3a90 	vmov	r3, s15
 803229a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 803229e:	e74c      	b.n	803213a <__kernel_rem_pio2f+0x1f6>
 80322a0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80322a4:	aa08      	add	r2, sp, #32
 80322a6:	ee10 3a10 	vmov	r3, s0
 80322aa:	e7f6      	b.n	803229a <__kernel_rem_pio2f+0x356>
 80322ac:	a808      	add	r0, sp, #32
 80322ae:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80322b2:	3b01      	subs	r3, #1
 80322b4:	ee07 0a90 	vmov	s15, r0
 80322b8:	9001      	str	r0, [sp, #4]
 80322ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80322be:	ee67 7a80 	vmul.f32	s15, s15, s0
 80322c2:	ee20 0a07 	vmul.f32	s0, s0, s14
 80322c6:	ed62 7a01 	vstmdb	r2!, {s15}
 80322ca:	e743      	b.n	8032154 <__kernel_rem_pio2f+0x210>
 80322cc:	ecfc 6a01 	vldmia	ip!, {s13}
 80322d0:	3001      	adds	r0, #1
 80322d2:	ecb5 7a01 	vldmia	r5!, {s14}
 80322d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80322da:	4550      	cmp	r0, sl
 80322dc:	dc01      	bgt.n	80322e2 <__kernel_rem_pio2f+0x39e>
 80322de:	4282      	cmp	r2, r0
 80322e0:	daf4      	bge.n	80322cc <__kernel_rem_pio2f+0x388>
 80322e2:	a858      	add	r0, sp, #352	@ 0x160
 80322e4:	3b01      	subs	r3, #1
 80322e6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80322ea:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80322ee:	e735      	b.n	803215c <__kernel_rem_pio2f+0x218>
 80322f0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80322f2:	2b02      	cmp	r3, #2
 80322f4:	dc09      	bgt.n	803230a <__kernel_rem_pio2f+0x3c6>
 80322f6:	2b00      	cmp	r3, #0
 80322f8:	dc2b      	bgt.n	8032352 <__kernel_rem_pio2f+0x40e>
 80322fa:	d044      	beq.n	8032386 <__kernel_rem_pio2f+0x442>
 80322fc:	f009 0007 	and.w	r0, r9, #7
 8032300:	b059      	add	sp, #356	@ 0x164
 8032302:	ecbd 8b04 	vpop	{d8-d9}
 8032306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803230a:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 803230c:	2b03      	cmp	r3, #3
 803230e:	d1f5      	bne.n	80322fc <__kernel_rem_pio2f+0x3b8>
 8032310:	aa30      	add	r2, sp, #192	@ 0xc0
 8032312:	1f0b      	subs	r3, r1, #4
 8032314:	4620      	mov	r0, r4
 8032316:	4413      	add	r3, r2
 8032318:	461a      	mov	r2, r3
 803231a:	2800      	cmp	r0, #0
 803231c:	f1a2 0204 	sub.w	r2, r2, #4
 8032320:	dc52      	bgt.n	80323c8 <__kernel_rem_pio2f+0x484>
 8032322:	4622      	mov	r2, r4
 8032324:	2a01      	cmp	r2, #1
 8032326:	f1a3 0304 	sub.w	r3, r3, #4
 803232a:	dc5d      	bgt.n	80323e8 <__kernel_rem_pio2f+0x4a4>
 803232c:	ab30      	add	r3, sp, #192	@ 0xc0
 803232e:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 803224c <__kernel_rem_pio2f+0x308>
 8032332:	440b      	add	r3, r1
 8032334:	2c01      	cmp	r4, #1
 8032336:	dc67      	bgt.n	8032408 <__kernel_rem_pio2f+0x4c4>
 8032338:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 803233c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8032340:	2e00      	cmp	r6, #0
 8032342:	d167      	bne.n	8032414 <__kernel_rem_pio2f+0x4d0>
 8032344:	edc7 6a00 	vstr	s13, [r7]
 8032348:	ed87 7a01 	vstr	s14, [r7, #4]
 803234c:	edc7 7a02 	vstr	s15, [r7, #8]
 8032350:	e7d4      	b.n	80322fc <__kernel_rem_pio2f+0x3b8>
 8032352:	ab30      	add	r3, sp, #192	@ 0xc0
 8032354:	4622      	mov	r2, r4
 8032356:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 803224c <__kernel_rem_pio2f+0x308>
 803235a:	440b      	add	r3, r1
 803235c:	2a00      	cmp	r2, #0
 803235e:	da24      	bge.n	80323aa <__kernel_rem_pio2f+0x466>
 8032360:	b34e      	cbz	r6, 80323b6 <__kernel_rem_pio2f+0x472>
 8032362:	eef1 7a47 	vneg.f32	s15, s14
 8032366:	edc7 7a00 	vstr	s15, [r7]
 803236a:	aa31      	add	r2, sp, #196	@ 0xc4
 803236c:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8032370:	2301      	movs	r3, #1
 8032372:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032376:	429c      	cmp	r4, r3
 8032378:	da20      	bge.n	80323bc <__kernel_rem_pio2f+0x478>
 803237a:	b10e      	cbz	r6, 8032380 <__kernel_rem_pio2f+0x43c>
 803237c:	eef1 7a67 	vneg.f32	s15, s15
 8032380:	edc7 7a01 	vstr	s15, [r7, #4]
 8032384:	e7ba      	b.n	80322fc <__kernel_rem_pio2f+0x3b8>
 8032386:	ab30      	add	r3, sp, #192	@ 0xc0
 8032388:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 803224c <__kernel_rem_pio2f+0x308>
 803238c:	440b      	add	r3, r1
 803238e:	2c00      	cmp	r4, #0
 8032390:	da05      	bge.n	803239e <__kernel_rem_pio2f+0x45a>
 8032392:	b10e      	cbz	r6, 8032398 <__kernel_rem_pio2f+0x454>
 8032394:	eef1 7a67 	vneg.f32	s15, s15
 8032398:	edc7 7a00 	vstr	s15, [r7]
 803239c:	e7ae      	b.n	80322fc <__kernel_rem_pio2f+0x3b8>
 803239e:	ed33 7a01 	vldmdb	r3!, {s14}
 80323a2:	3c01      	subs	r4, #1
 80323a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80323a8:	e7f1      	b.n	803238e <__kernel_rem_pio2f+0x44a>
 80323aa:	ed73 7a01 	vldmdb	r3!, {s15}
 80323ae:	3a01      	subs	r2, #1
 80323b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80323b4:	e7d2      	b.n	803235c <__kernel_rem_pio2f+0x418>
 80323b6:	eef0 7a47 	vmov.f32	s15, s14
 80323ba:	e7d4      	b.n	8032366 <__kernel_rem_pio2f+0x422>
 80323bc:	ecb2 7a01 	vldmia	r2!, {s14}
 80323c0:	3301      	adds	r3, #1
 80323c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80323c6:	e7d6      	b.n	8032376 <__kernel_rem_pio2f+0x432>
 80323c8:	edd2 7a00 	vldr	s15, [r2]
 80323cc:	3801      	subs	r0, #1
 80323ce:	edd2 6a01 	vldr	s13, [r2, #4]
 80323d2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80323d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80323da:	ed82 7a00 	vstr	s14, [r2]
 80323de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80323e2:	edc2 7a01 	vstr	s15, [r2, #4]
 80323e6:	e798      	b.n	803231a <__kernel_rem_pio2f+0x3d6>
 80323e8:	edd3 7a00 	vldr	s15, [r3]
 80323ec:	3a01      	subs	r2, #1
 80323ee:	edd3 6a01 	vldr	s13, [r3, #4]
 80323f2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80323f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80323fa:	ed83 7a00 	vstr	s14, [r3]
 80323fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8032402:	edc3 7a01 	vstr	s15, [r3, #4]
 8032406:	e78d      	b.n	8032324 <__kernel_rem_pio2f+0x3e0>
 8032408:	ed33 7a01 	vldmdb	r3!, {s14}
 803240c:	3c01      	subs	r4, #1
 803240e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032412:	e78f      	b.n	8032334 <__kernel_rem_pio2f+0x3f0>
 8032414:	eef1 6a66 	vneg.f32	s13, s13
 8032418:	eeb1 7a47 	vneg.f32	s14, s14
 803241c:	eef1 7a67 	vneg.f32	s15, s15
 8032420:	edc7 6a00 	vstr	s13, [r7]
 8032424:	ed87 7a01 	vstr	s14, [r7, #4]
 8032428:	e790      	b.n	803234c <__kernel_rem_pio2f+0x408>
 803242a:	bf00      	nop

0803242c <scalbnf>:
 803242c:	ee10 3a10 	vmov	r3, s0
 8032430:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8032434:	d02a      	beq.n	803248c <scalbnf+0x60>
 8032436:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 803243a:	d302      	bcc.n	8032442 <scalbnf+0x16>
 803243c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8032440:	4770      	bx	lr
 8032442:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8032446:	d122      	bne.n	803248e <scalbnf+0x62>
 8032448:	4b23      	ldr	r3, [pc, #140]	@ (80324d8 <scalbnf+0xac>)
 803244a:	eddf 7a24 	vldr	s15, [pc, #144]	@ 80324dc <scalbnf+0xb0>
 803244e:	4298      	cmp	r0, r3
 8032450:	ee20 0a27 	vmul.f32	s0, s0, s15
 8032454:	db16      	blt.n	8032484 <scalbnf+0x58>
 8032456:	ee10 3a10 	vmov	r3, s0
 803245a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 803245e:	3a19      	subs	r2, #25
 8032460:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8032464:	4288      	cmp	r0, r1
 8032466:	dd14      	ble.n	8032492 <scalbnf+0x66>
 8032468:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 80324e0 <scalbnf+0xb4>
 803246c:	ee10 3a10 	vmov	r3, s0
 8032470:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80324e4 <scalbnf+0xb8>
 8032474:	eeb0 7a67 	vmov.f32	s14, s15
 8032478:	2b00      	cmp	r3, #0
 803247a:	fe67 7aa6 	vselge.f32	s15, s15, s13
 803247e:	ee27 0a87 	vmul.f32	s0, s15, s14
 8032482:	4770      	bx	lr
 8032484:	eddf 7a18 	vldr	s15, [pc, #96]	@ 80324e8 <scalbnf+0xbc>
 8032488:	ee27 0a80 	vmul.f32	s0, s15, s0
 803248c:	4770      	bx	lr
 803248e:	0dd2      	lsrs	r2, r2, #23
 8032490:	e7e6      	b.n	8032460 <scalbnf+0x34>
 8032492:	4410      	add	r0, r2
 8032494:	28fe      	cmp	r0, #254	@ 0xfe
 8032496:	dce7      	bgt.n	8032468 <scalbnf+0x3c>
 8032498:	2800      	cmp	r0, #0
 803249a:	dd06      	ble.n	80324aa <scalbnf+0x7e>
 803249c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80324a0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80324a4:	ee00 3a10 	vmov	s0, r3
 80324a8:	4770      	bx	lr
 80324aa:	f110 0f16 	cmn.w	r0, #22
 80324ae:	da09      	bge.n	80324c4 <scalbnf+0x98>
 80324b0:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80324e8 <scalbnf+0xbc>
 80324b4:	ee10 3a10 	vmov	r3, s0
 80324b8:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 80324ec <scalbnf+0xc0>
 80324bc:	eeb0 7a67 	vmov.f32	s14, s15
 80324c0:	2b00      	cmp	r3, #0
 80324c2:	e7da      	b.n	803247a <scalbnf+0x4e>
 80324c4:	3019      	adds	r0, #25
 80324c6:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80324ca:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 80324f0 <scalbnf+0xc4>
 80324ce:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80324d2:	ee07 3a90 	vmov	s15, r3
 80324d6:	e7d7      	b.n	8032488 <scalbnf+0x5c>
 80324d8:	ffff3cb0 	.word	0xffff3cb0
 80324dc:	4c000000 	.word	0x4c000000
 80324e0:	7149f2ca 	.word	0x7149f2ca
 80324e4:	f149f2ca 	.word	0xf149f2ca
 80324e8:	0da24260 	.word	0x0da24260
 80324ec:	8da24260 	.word	0x8da24260
 80324f0:	33000000 	.word	0x33000000

080324f4 <floorf>:
 80324f4:	febb 0a40 	vrintm.f32	s0, s0
 80324f8:	4770      	bx	lr

080324fa <abort>:
 80324fa:	2006      	movs	r0, #6
 80324fc:	b508      	push	{r3, lr}
 80324fe:	f000 fa4d 	bl	803299c <raise>
 8032502:	2001      	movs	r0, #1
 8032504:	f7ce fcda 	bl	8000ebc <_exit>

08032508 <__assert_func>:
 8032508:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 803250a:	4614      	mov	r4, r2
 803250c:	461a      	mov	r2, r3
 803250e:	4b09      	ldr	r3, [pc, #36]	@ (8032534 <__assert_func+0x2c>)
 8032510:	4605      	mov	r5, r0
 8032512:	681b      	ldr	r3, [r3, #0]
 8032514:	68d8      	ldr	r0, [r3, #12]
 8032516:	b954      	cbnz	r4, 803252e <__assert_func+0x26>
 8032518:	4b07      	ldr	r3, [pc, #28]	@ (8032538 <__assert_func+0x30>)
 803251a:	461c      	mov	r4, r3
 803251c:	9100      	str	r1, [sp, #0]
 803251e:	4907      	ldr	r1, [pc, #28]	@ (803253c <__assert_func+0x34>)
 8032520:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8032524:	462b      	mov	r3, r5
 8032526:	f000 f983 	bl	8032830 <fiprintf>
 803252a:	f7ff ffe6 	bl	80324fa <abort>
 803252e:	4b04      	ldr	r3, [pc, #16]	@ (8032540 <__assert_func+0x38>)
 8032530:	e7f4      	b.n	803251c <__assert_func+0x14>
 8032532:	bf00      	nop
 8032534:	20000254 	.word	0x20000254
 8032538:	080386cf 	.word	0x080386cf
 803253c:	080386a1 	.word	0x080386a1
 8032540:	08038694 	.word	0x08038694

08032544 <atexit>:
 8032544:	2300      	movs	r3, #0
 8032546:	4601      	mov	r1, r0
 8032548:	461a      	mov	r2, r3
 803254a:	4618      	mov	r0, r3
 803254c:	f000 bad2 	b.w	8032af4 <__register_exitproc>

08032550 <malloc>:
 8032550:	4b02      	ldr	r3, [pc, #8]	@ (803255c <malloc+0xc>)
 8032552:	4601      	mov	r1, r0
 8032554:	6818      	ldr	r0, [r3, #0]
 8032556:	f000 b82d 	b.w	80325b4 <_malloc_r>
 803255a:	bf00      	nop
 803255c:	20000254 	.word	0x20000254

08032560 <free>:
 8032560:	4b02      	ldr	r3, [pc, #8]	@ (803256c <free+0xc>)
 8032562:	4601      	mov	r1, r0
 8032564:	6818      	ldr	r0, [r3, #0]
 8032566:	f000 bb23 	b.w	8032bb0 <_free_r>
 803256a:	bf00      	nop
 803256c:	20000254 	.word	0x20000254

08032570 <sbrk_aligned>:
 8032570:	b570      	push	{r4, r5, r6, lr}
 8032572:	4e0f      	ldr	r6, [pc, #60]	@ (80325b0 <sbrk_aligned+0x40>)
 8032574:	460c      	mov	r4, r1
 8032576:	4605      	mov	r5, r0
 8032578:	6831      	ldr	r1, [r6, #0]
 803257a:	b911      	cbnz	r1, 8032582 <sbrk_aligned+0x12>
 803257c:	f000 fa5e 	bl	8032a3c <_sbrk_r>
 8032580:	6030      	str	r0, [r6, #0]
 8032582:	4621      	mov	r1, r4
 8032584:	4628      	mov	r0, r5
 8032586:	f000 fa59 	bl	8032a3c <_sbrk_r>
 803258a:	1c43      	adds	r3, r0, #1
 803258c:	d103      	bne.n	8032596 <sbrk_aligned+0x26>
 803258e:	f04f 34ff 	mov.w	r4, #4294967295
 8032592:	4620      	mov	r0, r4
 8032594:	bd70      	pop	{r4, r5, r6, pc}
 8032596:	1cc4      	adds	r4, r0, #3
 8032598:	f024 0403 	bic.w	r4, r4, #3
 803259c:	42a0      	cmp	r0, r4
 803259e:	d0f8      	beq.n	8032592 <sbrk_aligned+0x22>
 80325a0:	1a21      	subs	r1, r4, r0
 80325a2:	4628      	mov	r0, r5
 80325a4:	f000 fa4a 	bl	8032a3c <_sbrk_r>
 80325a8:	3001      	adds	r0, #1
 80325aa:	d1f2      	bne.n	8032592 <sbrk_aligned+0x22>
 80325ac:	e7ef      	b.n	803258e <sbrk_aligned+0x1e>
 80325ae:	bf00      	nop
 80325b0:	20083440 	.word	0x20083440

080325b4 <_malloc_r>:
 80325b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80325b8:	1ccd      	adds	r5, r1, #3
 80325ba:	4606      	mov	r6, r0
 80325bc:	f025 0503 	bic.w	r5, r5, #3
 80325c0:	3508      	adds	r5, #8
 80325c2:	2d0c      	cmp	r5, #12
 80325c4:	bf38      	it	cc
 80325c6:	250c      	movcc	r5, #12
 80325c8:	2d00      	cmp	r5, #0
 80325ca:	db01      	blt.n	80325d0 <_malloc_r+0x1c>
 80325cc:	42a9      	cmp	r1, r5
 80325ce:	d904      	bls.n	80325da <_malloc_r+0x26>
 80325d0:	230c      	movs	r3, #12
 80325d2:	6033      	str	r3, [r6, #0]
 80325d4:	2000      	movs	r0, #0
 80325d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80325da:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80326b0 <_malloc_r+0xfc>
 80325de:	f000 f869 	bl	80326b4 <__malloc_lock>
 80325e2:	f8d8 3000 	ldr.w	r3, [r8]
 80325e6:	461c      	mov	r4, r3
 80325e8:	bb44      	cbnz	r4, 803263c <_malloc_r+0x88>
 80325ea:	4629      	mov	r1, r5
 80325ec:	4630      	mov	r0, r6
 80325ee:	f7ff ffbf 	bl	8032570 <sbrk_aligned>
 80325f2:	1c43      	adds	r3, r0, #1
 80325f4:	4604      	mov	r4, r0
 80325f6:	d158      	bne.n	80326aa <_malloc_r+0xf6>
 80325f8:	f8d8 4000 	ldr.w	r4, [r8]
 80325fc:	4627      	mov	r7, r4
 80325fe:	2f00      	cmp	r7, #0
 8032600:	d143      	bne.n	803268a <_malloc_r+0xd6>
 8032602:	2c00      	cmp	r4, #0
 8032604:	d04b      	beq.n	803269e <_malloc_r+0xea>
 8032606:	6823      	ldr	r3, [r4, #0]
 8032608:	4639      	mov	r1, r7
 803260a:	4630      	mov	r0, r6
 803260c:	eb04 0903 	add.w	r9, r4, r3
 8032610:	f000 fa14 	bl	8032a3c <_sbrk_r>
 8032614:	4581      	cmp	r9, r0
 8032616:	d142      	bne.n	803269e <_malloc_r+0xea>
 8032618:	6821      	ldr	r1, [r4, #0]
 803261a:	4630      	mov	r0, r6
 803261c:	1a6d      	subs	r5, r5, r1
 803261e:	4629      	mov	r1, r5
 8032620:	f7ff ffa6 	bl	8032570 <sbrk_aligned>
 8032624:	3001      	adds	r0, #1
 8032626:	d03a      	beq.n	803269e <_malloc_r+0xea>
 8032628:	6823      	ldr	r3, [r4, #0]
 803262a:	442b      	add	r3, r5
 803262c:	6023      	str	r3, [r4, #0]
 803262e:	f8d8 3000 	ldr.w	r3, [r8]
 8032632:	685a      	ldr	r2, [r3, #4]
 8032634:	bb62      	cbnz	r2, 8032690 <_malloc_r+0xdc>
 8032636:	f8c8 7000 	str.w	r7, [r8]
 803263a:	e00f      	b.n	803265c <_malloc_r+0xa8>
 803263c:	6822      	ldr	r2, [r4, #0]
 803263e:	1b52      	subs	r2, r2, r5
 8032640:	d420      	bmi.n	8032684 <_malloc_r+0xd0>
 8032642:	2a0b      	cmp	r2, #11
 8032644:	d917      	bls.n	8032676 <_malloc_r+0xc2>
 8032646:	1961      	adds	r1, r4, r5
 8032648:	42a3      	cmp	r3, r4
 803264a:	6025      	str	r5, [r4, #0]
 803264c:	bf18      	it	ne
 803264e:	6059      	strne	r1, [r3, #4]
 8032650:	6863      	ldr	r3, [r4, #4]
 8032652:	bf08      	it	eq
 8032654:	f8c8 1000 	streq.w	r1, [r8]
 8032658:	5162      	str	r2, [r4, r5]
 803265a:	604b      	str	r3, [r1, #4]
 803265c:	4630      	mov	r0, r6
 803265e:	f000 f82f 	bl	80326c0 <__malloc_unlock>
 8032662:	f104 000b 	add.w	r0, r4, #11
 8032666:	1d23      	adds	r3, r4, #4
 8032668:	f020 0007 	bic.w	r0, r0, #7
 803266c:	1ac2      	subs	r2, r0, r3
 803266e:	bf1c      	itt	ne
 8032670:	1a1b      	subne	r3, r3, r0
 8032672:	50a3      	strne	r3, [r4, r2]
 8032674:	e7af      	b.n	80325d6 <_malloc_r+0x22>
 8032676:	6862      	ldr	r2, [r4, #4]
 8032678:	42a3      	cmp	r3, r4
 803267a:	bf0c      	ite	eq
 803267c:	f8c8 2000 	streq.w	r2, [r8]
 8032680:	605a      	strne	r2, [r3, #4]
 8032682:	e7eb      	b.n	803265c <_malloc_r+0xa8>
 8032684:	4623      	mov	r3, r4
 8032686:	6864      	ldr	r4, [r4, #4]
 8032688:	e7ae      	b.n	80325e8 <_malloc_r+0x34>
 803268a:	463c      	mov	r4, r7
 803268c:	687f      	ldr	r7, [r7, #4]
 803268e:	e7b6      	b.n	80325fe <_malloc_r+0x4a>
 8032690:	461a      	mov	r2, r3
 8032692:	685b      	ldr	r3, [r3, #4]
 8032694:	42a3      	cmp	r3, r4
 8032696:	d1fb      	bne.n	8032690 <_malloc_r+0xdc>
 8032698:	2300      	movs	r3, #0
 803269a:	6053      	str	r3, [r2, #4]
 803269c:	e7de      	b.n	803265c <_malloc_r+0xa8>
 803269e:	230c      	movs	r3, #12
 80326a0:	4630      	mov	r0, r6
 80326a2:	6033      	str	r3, [r6, #0]
 80326a4:	f000 f80c 	bl	80326c0 <__malloc_unlock>
 80326a8:	e794      	b.n	80325d4 <_malloc_r+0x20>
 80326aa:	6005      	str	r5, [r0, #0]
 80326ac:	e7d6      	b.n	803265c <_malloc_r+0xa8>
 80326ae:	bf00      	nop
 80326b0:	20083444 	.word	0x20083444

080326b4 <__malloc_lock>:
 80326b4:	4801      	ldr	r0, [pc, #4]	@ (80326bc <__malloc_lock+0x8>)
 80326b6:	f000 ba0e 	b.w	8032ad6 <__retarget_lock_acquire_recursive>
 80326ba:	bf00      	nop
 80326bc:	20083588 	.word	0x20083588

080326c0 <__malloc_unlock>:
 80326c0:	4801      	ldr	r0, [pc, #4]	@ (80326c8 <__malloc_unlock+0x8>)
 80326c2:	f000 ba09 	b.w	8032ad8 <__retarget_lock_release_recursive>
 80326c6:	bf00      	nop
 80326c8:	20083588 	.word	0x20083588

080326cc <__cxa_atexit>:
 80326cc:	b510      	push	{r4, lr}
 80326ce:	4604      	mov	r4, r0
 80326d0:	4804      	ldr	r0, [pc, #16]	@ (80326e4 <__cxa_atexit+0x18>)
 80326d2:	4613      	mov	r3, r2
 80326d4:	b120      	cbz	r0, 80326e0 <__cxa_atexit+0x14>
 80326d6:	460a      	mov	r2, r1
 80326d8:	2002      	movs	r0, #2
 80326da:	4621      	mov	r1, r4
 80326dc:	f000 fa0a 	bl	8032af4 <__register_exitproc>
 80326e0:	bd10      	pop	{r4, pc}
 80326e2:	bf00      	nop
 80326e4:	08032af5 	.word	0x08032af5

080326e8 <std>:
 80326e8:	2300      	movs	r3, #0
 80326ea:	b510      	push	{r4, lr}
 80326ec:	4604      	mov	r4, r0
 80326ee:	6083      	str	r3, [r0, #8]
 80326f0:	8181      	strh	r1, [r0, #12]
 80326f2:	4619      	mov	r1, r3
 80326f4:	6643      	str	r3, [r0, #100]	@ 0x64
 80326f6:	81c2      	strh	r2, [r0, #14]
 80326f8:	2208      	movs	r2, #8
 80326fa:	6183      	str	r3, [r0, #24]
 80326fc:	e9c0 3300 	strd	r3, r3, [r0]
 8032700:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8032704:	305c      	adds	r0, #92	@ 0x5c
 8032706:	f000 f906 	bl	8032916 <memset>
 803270a:	4b0d      	ldr	r3, [pc, #52]	@ (8032740 <std+0x58>)
 803270c:	6224      	str	r4, [r4, #32]
 803270e:	6263      	str	r3, [r4, #36]	@ 0x24
 8032710:	4b0c      	ldr	r3, [pc, #48]	@ (8032744 <std+0x5c>)
 8032712:	62a3      	str	r3, [r4, #40]	@ 0x28
 8032714:	4b0c      	ldr	r3, [pc, #48]	@ (8032748 <std+0x60>)
 8032716:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8032718:	4b0c      	ldr	r3, [pc, #48]	@ (803274c <std+0x64>)
 803271a:	6323      	str	r3, [r4, #48]	@ 0x30
 803271c:	4b0c      	ldr	r3, [pc, #48]	@ (8032750 <std+0x68>)
 803271e:	429c      	cmp	r4, r3
 8032720:	d006      	beq.n	8032730 <std+0x48>
 8032722:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8032726:	4294      	cmp	r4, r2
 8032728:	d002      	beq.n	8032730 <std+0x48>
 803272a:	33d0      	adds	r3, #208	@ 0xd0
 803272c:	429c      	cmp	r4, r3
 803272e:	d105      	bne.n	803273c <std+0x54>
 8032730:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8032734:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032738:	f000 b9cc 	b.w	8032ad4 <__retarget_lock_init_recursive>
 803273c:	bd10      	pop	{r4, pc}
 803273e:	bf00      	nop
 8032740:	08032891 	.word	0x08032891
 8032744:	080328b3 	.word	0x080328b3
 8032748:	080328eb 	.word	0x080328eb
 803274c:	0803290f 	.word	0x0803290f
 8032750:	20083448 	.word	0x20083448

08032754 <stdio_exit_handler>:
 8032754:	4a02      	ldr	r2, [pc, #8]	@ (8032760 <stdio_exit_handler+0xc>)
 8032756:	4903      	ldr	r1, [pc, #12]	@ (8032764 <stdio_exit_handler+0x10>)
 8032758:	4803      	ldr	r0, [pc, #12]	@ (8032768 <stdio_exit_handler+0x14>)
 803275a:	f000 b87b 	b.w	8032854 <_fwalk_sglue>
 803275e:	bf00      	nop
 8032760:	20000248 	.word	0x20000248
 8032764:	080332f5 	.word	0x080332f5
 8032768:	20000258 	.word	0x20000258

0803276c <cleanup_stdio>:
 803276c:	6841      	ldr	r1, [r0, #4]
 803276e:	4b0c      	ldr	r3, [pc, #48]	@ (80327a0 <cleanup_stdio+0x34>)
 8032770:	4299      	cmp	r1, r3
 8032772:	b510      	push	{r4, lr}
 8032774:	4604      	mov	r4, r0
 8032776:	d001      	beq.n	803277c <cleanup_stdio+0x10>
 8032778:	f000 fdbc 	bl	80332f4 <_fflush_r>
 803277c:	68a1      	ldr	r1, [r4, #8]
 803277e:	4b09      	ldr	r3, [pc, #36]	@ (80327a4 <cleanup_stdio+0x38>)
 8032780:	4299      	cmp	r1, r3
 8032782:	d002      	beq.n	803278a <cleanup_stdio+0x1e>
 8032784:	4620      	mov	r0, r4
 8032786:	f000 fdb5 	bl	80332f4 <_fflush_r>
 803278a:	68e1      	ldr	r1, [r4, #12]
 803278c:	4b06      	ldr	r3, [pc, #24]	@ (80327a8 <cleanup_stdio+0x3c>)
 803278e:	4299      	cmp	r1, r3
 8032790:	d004      	beq.n	803279c <cleanup_stdio+0x30>
 8032792:	4620      	mov	r0, r4
 8032794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032798:	f000 bdac 	b.w	80332f4 <_fflush_r>
 803279c:	bd10      	pop	{r4, pc}
 803279e:	bf00      	nop
 80327a0:	20083448 	.word	0x20083448
 80327a4:	200834b0 	.word	0x200834b0
 80327a8:	20083518 	.word	0x20083518

080327ac <global_stdio_init.part.0>:
 80327ac:	b510      	push	{r4, lr}
 80327ae:	4b0b      	ldr	r3, [pc, #44]	@ (80327dc <global_stdio_init.part.0+0x30>)
 80327b0:	2104      	movs	r1, #4
 80327b2:	4c0b      	ldr	r4, [pc, #44]	@ (80327e0 <global_stdio_init.part.0+0x34>)
 80327b4:	4a0b      	ldr	r2, [pc, #44]	@ (80327e4 <global_stdio_init.part.0+0x38>)
 80327b6:	4620      	mov	r0, r4
 80327b8:	601a      	str	r2, [r3, #0]
 80327ba:	2200      	movs	r2, #0
 80327bc:	f7ff ff94 	bl	80326e8 <std>
 80327c0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80327c4:	2201      	movs	r2, #1
 80327c6:	2109      	movs	r1, #9
 80327c8:	f7ff ff8e 	bl	80326e8 <std>
 80327cc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80327d0:	2202      	movs	r2, #2
 80327d2:	2112      	movs	r1, #18
 80327d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80327d8:	f7ff bf86 	b.w	80326e8 <std>
 80327dc:	20083580 	.word	0x20083580
 80327e0:	20083448 	.word	0x20083448
 80327e4:	08032755 	.word	0x08032755

080327e8 <__sfp_lock_acquire>:
 80327e8:	4801      	ldr	r0, [pc, #4]	@ (80327f0 <__sfp_lock_acquire+0x8>)
 80327ea:	f000 b974 	b.w	8032ad6 <__retarget_lock_acquire_recursive>
 80327ee:	bf00      	nop
 80327f0:	2008358a 	.word	0x2008358a

080327f4 <__sfp_lock_release>:
 80327f4:	4801      	ldr	r0, [pc, #4]	@ (80327fc <__sfp_lock_release+0x8>)
 80327f6:	f000 b96f 	b.w	8032ad8 <__retarget_lock_release_recursive>
 80327fa:	bf00      	nop
 80327fc:	2008358a 	.word	0x2008358a

08032800 <__sinit>:
 8032800:	b510      	push	{r4, lr}
 8032802:	4604      	mov	r4, r0
 8032804:	f7ff fff0 	bl	80327e8 <__sfp_lock_acquire>
 8032808:	6a23      	ldr	r3, [r4, #32]
 803280a:	b11b      	cbz	r3, 8032814 <__sinit+0x14>
 803280c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032810:	f7ff bff0 	b.w	80327f4 <__sfp_lock_release>
 8032814:	4b04      	ldr	r3, [pc, #16]	@ (8032828 <__sinit+0x28>)
 8032816:	6223      	str	r3, [r4, #32]
 8032818:	4b04      	ldr	r3, [pc, #16]	@ (803282c <__sinit+0x2c>)
 803281a:	681b      	ldr	r3, [r3, #0]
 803281c:	2b00      	cmp	r3, #0
 803281e:	d1f5      	bne.n	803280c <__sinit+0xc>
 8032820:	f7ff ffc4 	bl	80327ac <global_stdio_init.part.0>
 8032824:	e7f2      	b.n	803280c <__sinit+0xc>
 8032826:	bf00      	nop
 8032828:	0803276d 	.word	0x0803276d
 803282c:	20083580 	.word	0x20083580

08032830 <fiprintf>:
 8032830:	b40e      	push	{r1, r2, r3}
 8032832:	b503      	push	{r0, r1, lr}
 8032834:	ab03      	add	r3, sp, #12
 8032836:	4601      	mov	r1, r0
 8032838:	4805      	ldr	r0, [pc, #20]	@ (8032850 <fiprintf+0x20>)
 803283a:	f853 2b04 	ldr.w	r2, [r3], #4
 803283e:	6800      	ldr	r0, [r0, #0]
 8032840:	9301      	str	r3, [sp, #4]
 8032842:	f000 fa29 	bl	8032c98 <_vfiprintf_r>
 8032846:	b002      	add	sp, #8
 8032848:	f85d eb04 	ldr.w	lr, [sp], #4
 803284c:	b003      	add	sp, #12
 803284e:	4770      	bx	lr
 8032850:	20000254 	.word	0x20000254

08032854 <_fwalk_sglue>:
 8032854:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032858:	4607      	mov	r7, r0
 803285a:	4688      	mov	r8, r1
 803285c:	4614      	mov	r4, r2
 803285e:	2600      	movs	r6, #0
 8032860:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8032864:	f1b9 0901 	subs.w	r9, r9, #1
 8032868:	d505      	bpl.n	8032876 <_fwalk_sglue+0x22>
 803286a:	6824      	ldr	r4, [r4, #0]
 803286c:	2c00      	cmp	r4, #0
 803286e:	d1f7      	bne.n	8032860 <_fwalk_sglue+0xc>
 8032870:	4630      	mov	r0, r6
 8032872:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032876:	89ab      	ldrh	r3, [r5, #12]
 8032878:	2b01      	cmp	r3, #1
 803287a:	d907      	bls.n	803288c <_fwalk_sglue+0x38>
 803287c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8032880:	3301      	adds	r3, #1
 8032882:	d003      	beq.n	803288c <_fwalk_sglue+0x38>
 8032884:	4629      	mov	r1, r5
 8032886:	4638      	mov	r0, r7
 8032888:	47c0      	blx	r8
 803288a:	4306      	orrs	r6, r0
 803288c:	3568      	adds	r5, #104	@ 0x68
 803288e:	e7e9      	b.n	8032864 <_fwalk_sglue+0x10>

08032890 <__sread>:
 8032890:	b510      	push	{r4, lr}
 8032892:	460c      	mov	r4, r1
 8032894:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032898:	f000 f8aa 	bl	80329f0 <_read_r>
 803289c:	2800      	cmp	r0, #0
 803289e:	bfab      	itete	ge
 80328a0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80328a2:	89a3      	ldrhlt	r3, [r4, #12]
 80328a4:	181b      	addge	r3, r3, r0
 80328a6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80328aa:	bfac      	ite	ge
 80328ac:	6563      	strge	r3, [r4, #84]	@ 0x54
 80328ae:	81a3      	strhlt	r3, [r4, #12]
 80328b0:	bd10      	pop	{r4, pc}

080328b2 <__swrite>:
 80328b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80328b6:	461f      	mov	r7, r3
 80328b8:	898b      	ldrh	r3, [r1, #12]
 80328ba:	4605      	mov	r5, r0
 80328bc:	460c      	mov	r4, r1
 80328be:	05db      	lsls	r3, r3, #23
 80328c0:	4616      	mov	r6, r2
 80328c2:	d505      	bpl.n	80328d0 <__swrite+0x1e>
 80328c4:	2302      	movs	r3, #2
 80328c6:	2200      	movs	r2, #0
 80328c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80328cc:	f000 f87e 	bl	80329cc <_lseek_r>
 80328d0:	89a3      	ldrh	r3, [r4, #12]
 80328d2:	4632      	mov	r2, r6
 80328d4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80328d8:	4628      	mov	r0, r5
 80328da:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80328de:	81a3      	strh	r3, [r4, #12]
 80328e0:	463b      	mov	r3, r7
 80328e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80328e6:	f000 b8b9 	b.w	8032a5c <_write_r>

080328ea <__sseek>:
 80328ea:	b510      	push	{r4, lr}
 80328ec:	460c      	mov	r4, r1
 80328ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80328f2:	f000 f86b 	bl	80329cc <_lseek_r>
 80328f6:	1c43      	adds	r3, r0, #1
 80328f8:	89a3      	ldrh	r3, [r4, #12]
 80328fa:	bf15      	itete	ne
 80328fc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80328fe:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8032902:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8032906:	81a3      	strheq	r3, [r4, #12]
 8032908:	bf18      	it	ne
 803290a:	81a3      	strhne	r3, [r4, #12]
 803290c:	bd10      	pop	{r4, pc}

0803290e <__sclose>:
 803290e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032912:	f000 b84b 	b.w	80329ac <_close_r>

08032916 <memset>:
 8032916:	4402      	add	r2, r0
 8032918:	4603      	mov	r3, r0
 803291a:	4293      	cmp	r3, r2
 803291c:	d100      	bne.n	8032920 <memset+0xa>
 803291e:	4770      	bx	lr
 8032920:	f803 1b01 	strb.w	r1, [r3], #1
 8032924:	e7f9      	b.n	803291a <memset+0x4>

08032926 <strncmp>:
 8032926:	b510      	push	{r4, lr}
 8032928:	b16a      	cbz	r2, 8032946 <strncmp+0x20>
 803292a:	3901      	subs	r1, #1
 803292c:	1884      	adds	r4, r0, r2
 803292e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032932:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8032936:	429a      	cmp	r2, r3
 8032938:	d103      	bne.n	8032942 <strncmp+0x1c>
 803293a:	42a0      	cmp	r0, r4
 803293c:	d001      	beq.n	8032942 <strncmp+0x1c>
 803293e:	2a00      	cmp	r2, #0
 8032940:	d1f5      	bne.n	803292e <strncmp+0x8>
 8032942:	1ad0      	subs	r0, r2, r3
 8032944:	bd10      	pop	{r4, pc}
 8032946:	4610      	mov	r0, r2
 8032948:	e7fc      	b.n	8032944 <strncmp+0x1e>

0803294a <_raise_r>:
 803294a:	291f      	cmp	r1, #31
 803294c:	b538      	push	{r3, r4, r5, lr}
 803294e:	4605      	mov	r5, r0
 8032950:	460c      	mov	r4, r1
 8032952:	d904      	bls.n	803295e <_raise_r+0x14>
 8032954:	2316      	movs	r3, #22
 8032956:	6003      	str	r3, [r0, #0]
 8032958:	f04f 30ff 	mov.w	r0, #4294967295
 803295c:	bd38      	pop	{r3, r4, r5, pc}
 803295e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8032960:	b112      	cbz	r2, 8032968 <_raise_r+0x1e>
 8032962:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8032966:	b94b      	cbnz	r3, 803297c <_raise_r+0x32>
 8032968:	4628      	mov	r0, r5
 803296a:	f000 f865 	bl	8032a38 <_getpid_r>
 803296e:	4622      	mov	r2, r4
 8032970:	4601      	mov	r1, r0
 8032972:	4628      	mov	r0, r5
 8032974:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032978:	f000 b84c 	b.w	8032a14 <_kill_r>
 803297c:	2b01      	cmp	r3, #1
 803297e:	d00a      	beq.n	8032996 <_raise_r+0x4c>
 8032980:	1c59      	adds	r1, r3, #1
 8032982:	d103      	bne.n	803298c <_raise_r+0x42>
 8032984:	2316      	movs	r3, #22
 8032986:	6003      	str	r3, [r0, #0]
 8032988:	2001      	movs	r0, #1
 803298a:	e7e7      	b.n	803295c <_raise_r+0x12>
 803298c:	2100      	movs	r1, #0
 803298e:	4620      	mov	r0, r4
 8032990:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8032994:	4798      	blx	r3
 8032996:	2000      	movs	r0, #0
 8032998:	e7e0      	b.n	803295c <_raise_r+0x12>
	...

0803299c <raise>:
 803299c:	4b02      	ldr	r3, [pc, #8]	@ (80329a8 <raise+0xc>)
 803299e:	4601      	mov	r1, r0
 80329a0:	6818      	ldr	r0, [r3, #0]
 80329a2:	f7ff bfd2 	b.w	803294a <_raise_r>
 80329a6:	bf00      	nop
 80329a8:	20000254 	.word	0x20000254

080329ac <_close_r>:
 80329ac:	b538      	push	{r3, r4, r5, lr}
 80329ae:	2300      	movs	r3, #0
 80329b0:	4d05      	ldr	r5, [pc, #20]	@ (80329c8 <_close_r+0x1c>)
 80329b2:	4604      	mov	r4, r0
 80329b4:	4608      	mov	r0, r1
 80329b6:	602b      	str	r3, [r5, #0]
 80329b8:	f7ce faa2 	bl	8000f00 <_close>
 80329bc:	1c43      	adds	r3, r0, #1
 80329be:	d102      	bne.n	80329c6 <_close_r+0x1a>
 80329c0:	682b      	ldr	r3, [r5, #0]
 80329c2:	b103      	cbz	r3, 80329c6 <_close_r+0x1a>
 80329c4:	6023      	str	r3, [r4, #0]
 80329c6:	bd38      	pop	{r3, r4, r5, pc}
 80329c8:	20083584 	.word	0x20083584

080329cc <_lseek_r>:
 80329cc:	b538      	push	{r3, r4, r5, lr}
 80329ce:	4604      	mov	r4, r0
 80329d0:	4d06      	ldr	r5, [pc, #24]	@ (80329ec <_lseek_r+0x20>)
 80329d2:	4608      	mov	r0, r1
 80329d4:	4611      	mov	r1, r2
 80329d6:	2200      	movs	r2, #0
 80329d8:	602a      	str	r2, [r5, #0]
 80329da:	461a      	mov	r2, r3
 80329dc:	f7ce fa9a 	bl	8000f14 <_lseek>
 80329e0:	1c43      	adds	r3, r0, #1
 80329e2:	d102      	bne.n	80329ea <_lseek_r+0x1e>
 80329e4:	682b      	ldr	r3, [r5, #0]
 80329e6:	b103      	cbz	r3, 80329ea <_lseek_r+0x1e>
 80329e8:	6023      	str	r3, [r4, #0]
 80329ea:	bd38      	pop	{r3, r4, r5, pc}
 80329ec:	20083584 	.word	0x20083584

080329f0 <_read_r>:
 80329f0:	b538      	push	{r3, r4, r5, lr}
 80329f2:	4604      	mov	r4, r0
 80329f4:	4d06      	ldr	r5, [pc, #24]	@ (8032a10 <_read_r+0x20>)
 80329f6:	4608      	mov	r0, r1
 80329f8:	4611      	mov	r1, r2
 80329fa:	2200      	movs	r2, #0
 80329fc:	602a      	str	r2, [r5, #0]
 80329fe:	461a      	mov	r2, r3
 8032a00:	f7ce fa62 	bl	8000ec8 <_read>
 8032a04:	1c43      	adds	r3, r0, #1
 8032a06:	d102      	bne.n	8032a0e <_read_r+0x1e>
 8032a08:	682b      	ldr	r3, [r5, #0]
 8032a0a:	b103      	cbz	r3, 8032a0e <_read_r+0x1e>
 8032a0c:	6023      	str	r3, [r4, #0]
 8032a0e:	bd38      	pop	{r3, r4, r5, pc}
 8032a10:	20083584 	.word	0x20083584

08032a14 <_kill_r>:
 8032a14:	b538      	push	{r3, r4, r5, lr}
 8032a16:	2300      	movs	r3, #0
 8032a18:	4d06      	ldr	r5, [pc, #24]	@ (8032a34 <_kill_r+0x20>)
 8032a1a:	4604      	mov	r4, r0
 8032a1c:	4608      	mov	r0, r1
 8032a1e:	4611      	mov	r1, r2
 8032a20:	602b      	str	r3, [r5, #0]
 8032a22:	f7ce fa43 	bl	8000eac <_kill>
 8032a26:	1c43      	adds	r3, r0, #1
 8032a28:	d102      	bne.n	8032a30 <_kill_r+0x1c>
 8032a2a:	682b      	ldr	r3, [r5, #0]
 8032a2c:	b103      	cbz	r3, 8032a30 <_kill_r+0x1c>
 8032a2e:	6023      	str	r3, [r4, #0]
 8032a30:	bd38      	pop	{r3, r4, r5, pc}
 8032a32:	bf00      	nop
 8032a34:	20083584 	.word	0x20083584

08032a38 <_getpid_r>:
 8032a38:	f7ce ba36 	b.w	8000ea8 <_getpid>

08032a3c <_sbrk_r>:
 8032a3c:	b538      	push	{r3, r4, r5, lr}
 8032a3e:	2300      	movs	r3, #0
 8032a40:	4d05      	ldr	r5, [pc, #20]	@ (8032a58 <_sbrk_r+0x1c>)
 8032a42:	4604      	mov	r4, r0
 8032a44:	4608      	mov	r0, r1
 8032a46:	602b      	str	r3, [r5, #0]
 8032a48:	f7ce fa66 	bl	8000f18 <_sbrk>
 8032a4c:	1c43      	adds	r3, r0, #1
 8032a4e:	d102      	bne.n	8032a56 <_sbrk_r+0x1a>
 8032a50:	682b      	ldr	r3, [r5, #0]
 8032a52:	b103      	cbz	r3, 8032a56 <_sbrk_r+0x1a>
 8032a54:	6023      	str	r3, [r4, #0]
 8032a56:	bd38      	pop	{r3, r4, r5, pc}
 8032a58:	20083584 	.word	0x20083584

08032a5c <_write_r>:
 8032a5c:	b538      	push	{r3, r4, r5, lr}
 8032a5e:	4604      	mov	r4, r0
 8032a60:	4d06      	ldr	r5, [pc, #24]	@ (8032a7c <_write_r+0x20>)
 8032a62:	4608      	mov	r0, r1
 8032a64:	4611      	mov	r1, r2
 8032a66:	2200      	movs	r2, #0
 8032a68:	602a      	str	r2, [r5, #0]
 8032a6a:	461a      	mov	r2, r3
 8032a6c:	f7ce fa3a 	bl	8000ee4 <_write>
 8032a70:	1c43      	adds	r3, r0, #1
 8032a72:	d102      	bne.n	8032a7a <_write_r+0x1e>
 8032a74:	682b      	ldr	r3, [r5, #0]
 8032a76:	b103      	cbz	r3, 8032a7a <_write_r+0x1e>
 8032a78:	6023      	str	r3, [r4, #0]
 8032a7a:	bd38      	pop	{r3, r4, r5, pc}
 8032a7c:	20083584 	.word	0x20083584

08032a80 <__errno>:
 8032a80:	4b01      	ldr	r3, [pc, #4]	@ (8032a88 <__errno+0x8>)
 8032a82:	6818      	ldr	r0, [r3, #0]
 8032a84:	4770      	bx	lr
 8032a86:	bf00      	nop
 8032a88:	20000254 	.word	0x20000254

08032a8c <__libc_init_array>:
 8032a8c:	b570      	push	{r4, r5, r6, lr}
 8032a8e:	4d0d      	ldr	r5, [pc, #52]	@ (8032ac4 <__libc_init_array+0x38>)
 8032a90:	2600      	movs	r6, #0
 8032a92:	4c0d      	ldr	r4, [pc, #52]	@ (8032ac8 <__libc_init_array+0x3c>)
 8032a94:	1b64      	subs	r4, r4, r5
 8032a96:	10a4      	asrs	r4, r4, #2
 8032a98:	42a6      	cmp	r6, r4
 8032a9a:	d109      	bne.n	8032ab0 <__libc_init_array+0x24>
 8032a9c:	4d0b      	ldr	r5, [pc, #44]	@ (8032acc <__libc_init_array+0x40>)
 8032a9e:	2600      	movs	r6, #0
 8032aa0:	4c0b      	ldr	r4, [pc, #44]	@ (8032ad0 <__libc_init_array+0x44>)
 8032aa2:	f000 fd75 	bl	8033590 <_init>
 8032aa6:	1b64      	subs	r4, r4, r5
 8032aa8:	10a4      	asrs	r4, r4, #2
 8032aaa:	42a6      	cmp	r6, r4
 8032aac:	d105      	bne.n	8032aba <__libc_init_array+0x2e>
 8032aae:	bd70      	pop	{r4, r5, r6, pc}
 8032ab0:	f855 3b04 	ldr.w	r3, [r5], #4
 8032ab4:	3601      	adds	r6, #1
 8032ab6:	4798      	blx	r3
 8032ab8:	e7ee      	b.n	8032a98 <__libc_init_array+0xc>
 8032aba:	f855 3b04 	ldr.w	r3, [r5], #4
 8032abe:	3601      	adds	r6, #1
 8032ac0:	4798      	blx	r3
 8032ac2:	e7f2      	b.n	8032aaa <__libc_init_array+0x1e>
 8032ac4:	080388d8 	.word	0x080388d8
 8032ac8:	080388d8 	.word	0x080388d8
 8032acc:	080388d8 	.word	0x080388d8
 8032ad0:	080388f8 	.word	0x080388f8

08032ad4 <__retarget_lock_init_recursive>:
 8032ad4:	4770      	bx	lr

08032ad6 <__retarget_lock_acquire_recursive>:
 8032ad6:	4770      	bx	lr

08032ad8 <__retarget_lock_release_recursive>:
 8032ad8:	4770      	bx	lr

08032ada <memcpy>:
 8032ada:	440a      	add	r2, r1
 8032adc:	1e43      	subs	r3, r0, #1
 8032ade:	4291      	cmp	r1, r2
 8032ae0:	d100      	bne.n	8032ae4 <memcpy+0xa>
 8032ae2:	4770      	bx	lr
 8032ae4:	b510      	push	{r4, lr}
 8032ae6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8032aea:	4291      	cmp	r1, r2
 8032aec:	f803 4f01 	strb.w	r4, [r3, #1]!
 8032af0:	d1f9      	bne.n	8032ae6 <memcpy+0xc>
 8032af2:	bd10      	pop	{r4, pc}

08032af4 <__register_exitproc>:
 8032af4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032af8:	4d28      	ldr	r5, [pc, #160]	@ (8032b9c <__register_exitproc+0xa8>)
 8032afa:	4607      	mov	r7, r0
 8032afc:	4691      	mov	r9, r2
 8032afe:	460e      	mov	r6, r1
 8032b00:	6828      	ldr	r0, [r5, #0]
 8032b02:	4698      	mov	r8, r3
 8032b04:	f7ff ffe7 	bl	8032ad6 <__retarget_lock_acquire_recursive>
 8032b08:	4a25      	ldr	r2, [pc, #148]	@ (8032ba0 <__register_exitproc+0xac>)
 8032b0a:	6814      	ldr	r4, [r2, #0]
 8032b0c:	b93c      	cbnz	r4, 8032b1e <__register_exitproc+0x2a>
 8032b0e:	4b25      	ldr	r3, [pc, #148]	@ (8032ba4 <__register_exitproc+0xb0>)
 8032b10:	6013      	str	r3, [r2, #0]
 8032b12:	4a25      	ldr	r2, [pc, #148]	@ (8032ba8 <__register_exitproc+0xb4>)
 8032b14:	b112      	cbz	r2, 8032b1c <__register_exitproc+0x28>
 8032b16:	6812      	ldr	r2, [r2, #0]
 8032b18:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8032b1c:	4c21      	ldr	r4, [pc, #132]	@ (8032ba4 <__register_exitproc+0xb0>)
 8032b1e:	6863      	ldr	r3, [r4, #4]
 8032b20:	2b1f      	cmp	r3, #31
 8032b22:	dd06      	ble.n	8032b32 <__register_exitproc+0x3e>
 8032b24:	6828      	ldr	r0, [r5, #0]
 8032b26:	f7ff ffd7 	bl	8032ad8 <__retarget_lock_release_recursive>
 8032b2a:	f04f 30ff 	mov.w	r0, #4294967295
 8032b2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032b32:	b33f      	cbz	r7, 8032b84 <__register_exitproc+0x90>
 8032b34:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8032b38:	b968      	cbnz	r0, 8032b56 <__register_exitproc+0x62>
 8032b3a:	4b1c      	ldr	r3, [pc, #112]	@ (8032bac <__register_exitproc+0xb8>)
 8032b3c:	2b00      	cmp	r3, #0
 8032b3e:	d0f1      	beq.n	8032b24 <__register_exitproc+0x30>
 8032b40:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8032b44:	f7ff fd04 	bl	8032550 <malloc>
 8032b48:	2800      	cmp	r0, #0
 8032b4a:	d0eb      	beq.n	8032b24 <__register_exitproc+0x30>
 8032b4c:	2300      	movs	r3, #0
 8032b4e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8032b52:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8032b56:	6863      	ldr	r3, [r4, #4]
 8032b58:	2201      	movs	r2, #1
 8032b5a:	2f02      	cmp	r7, #2
 8032b5c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8032b60:	fa02 f203 	lsl.w	r2, r2, r3
 8032b64:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8032b68:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8032b6c:	ea43 0302 	orr.w	r3, r3, r2
 8032b70:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8032b74:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8032b78:	bf02      	ittt	eq
 8032b7a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8032b7e:	4313      	orreq	r3, r2
 8032b80:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8032b84:	6863      	ldr	r3, [r4, #4]
 8032b86:	6828      	ldr	r0, [r5, #0]
 8032b88:	1c5a      	adds	r2, r3, #1
 8032b8a:	3302      	adds	r3, #2
 8032b8c:	6062      	str	r2, [r4, #4]
 8032b8e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8032b92:	f7ff ffa1 	bl	8032ad8 <__retarget_lock_release_recursive>
 8032b96:	2000      	movs	r0, #0
 8032b98:	e7c9      	b.n	8032b2e <__register_exitproc+0x3a>
 8032b9a:	bf00      	nop
 8032b9c:	200002a4 	.word	0x200002a4
 8032ba0:	20083618 	.word	0x20083618
 8032ba4:	2008358c 	.word	0x2008358c
 8032ba8:	080386d0 	.word	0x080386d0
 8032bac:	08032551 	.word	0x08032551

08032bb0 <_free_r>:
 8032bb0:	b538      	push	{r3, r4, r5, lr}
 8032bb2:	4605      	mov	r5, r0
 8032bb4:	2900      	cmp	r1, #0
 8032bb6:	d041      	beq.n	8032c3c <_free_r+0x8c>
 8032bb8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8032bbc:	1f0c      	subs	r4, r1, #4
 8032bbe:	2b00      	cmp	r3, #0
 8032bc0:	bfb8      	it	lt
 8032bc2:	18e4      	addlt	r4, r4, r3
 8032bc4:	f7ff fd76 	bl	80326b4 <__malloc_lock>
 8032bc8:	4a1d      	ldr	r2, [pc, #116]	@ (8032c40 <_free_r+0x90>)
 8032bca:	6813      	ldr	r3, [r2, #0]
 8032bcc:	b933      	cbnz	r3, 8032bdc <_free_r+0x2c>
 8032bce:	6063      	str	r3, [r4, #4]
 8032bd0:	6014      	str	r4, [r2, #0]
 8032bd2:	4628      	mov	r0, r5
 8032bd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032bd8:	f7ff bd72 	b.w	80326c0 <__malloc_unlock>
 8032bdc:	42a3      	cmp	r3, r4
 8032bde:	d908      	bls.n	8032bf2 <_free_r+0x42>
 8032be0:	6820      	ldr	r0, [r4, #0]
 8032be2:	1821      	adds	r1, r4, r0
 8032be4:	428b      	cmp	r3, r1
 8032be6:	bf01      	itttt	eq
 8032be8:	6819      	ldreq	r1, [r3, #0]
 8032bea:	685b      	ldreq	r3, [r3, #4]
 8032bec:	1809      	addeq	r1, r1, r0
 8032bee:	6021      	streq	r1, [r4, #0]
 8032bf0:	e7ed      	b.n	8032bce <_free_r+0x1e>
 8032bf2:	461a      	mov	r2, r3
 8032bf4:	685b      	ldr	r3, [r3, #4]
 8032bf6:	b10b      	cbz	r3, 8032bfc <_free_r+0x4c>
 8032bf8:	42a3      	cmp	r3, r4
 8032bfa:	d9fa      	bls.n	8032bf2 <_free_r+0x42>
 8032bfc:	6811      	ldr	r1, [r2, #0]
 8032bfe:	1850      	adds	r0, r2, r1
 8032c00:	42a0      	cmp	r0, r4
 8032c02:	d10b      	bne.n	8032c1c <_free_r+0x6c>
 8032c04:	6820      	ldr	r0, [r4, #0]
 8032c06:	4401      	add	r1, r0
 8032c08:	1850      	adds	r0, r2, r1
 8032c0a:	6011      	str	r1, [r2, #0]
 8032c0c:	4283      	cmp	r3, r0
 8032c0e:	d1e0      	bne.n	8032bd2 <_free_r+0x22>
 8032c10:	6818      	ldr	r0, [r3, #0]
 8032c12:	685b      	ldr	r3, [r3, #4]
 8032c14:	4408      	add	r0, r1
 8032c16:	6053      	str	r3, [r2, #4]
 8032c18:	6010      	str	r0, [r2, #0]
 8032c1a:	e7da      	b.n	8032bd2 <_free_r+0x22>
 8032c1c:	d902      	bls.n	8032c24 <_free_r+0x74>
 8032c1e:	230c      	movs	r3, #12
 8032c20:	602b      	str	r3, [r5, #0]
 8032c22:	e7d6      	b.n	8032bd2 <_free_r+0x22>
 8032c24:	6820      	ldr	r0, [r4, #0]
 8032c26:	1821      	adds	r1, r4, r0
 8032c28:	428b      	cmp	r3, r1
 8032c2a:	bf02      	ittt	eq
 8032c2c:	6819      	ldreq	r1, [r3, #0]
 8032c2e:	685b      	ldreq	r3, [r3, #4]
 8032c30:	1809      	addeq	r1, r1, r0
 8032c32:	6063      	str	r3, [r4, #4]
 8032c34:	bf08      	it	eq
 8032c36:	6021      	streq	r1, [r4, #0]
 8032c38:	6054      	str	r4, [r2, #4]
 8032c3a:	e7ca      	b.n	8032bd2 <_free_r+0x22>
 8032c3c:	bd38      	pop	{r3, r4, r5, pc}
 8032c3e:	bf00      	nop
 8032c40:	20083444 	.word	0x20083444

08032c44 <__sfputc_r>:
 8032c44:	6893      	ldr	r3, [r2, #8]
 8032c46:	3b01      	subs	r3, #1
 8032c48:	2b00      	cmp	r3, #0
 8032c4a:	6093      	str	r3, [r2, #8]
 8032c4c:	b410      	push	{r4}
 8032c4e:	da08      	bge.n	8032c62 <__sfputc_r+0x1e>
 8032c50:	6994      	ldr	r4, [r2, #24]
 8032c52:	42a3      	cmp	r3, r4
 8032c54:	db01      	blt.n	8032c5a <__sfputc_r+0x16>
 8032c56:	290a      	cmp	r1, #10
 8032c58:	d103      	bne.n	8032c62 <__sfputc_r+0x1e>
 8032c5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032c5e:	f000 bb71 	b.w	8033344 <__swbuf_r>
 8032c62:	6813      	ldr	r3, [r2, #0]
 8032c64:	1c58      	adds	r0, r3, #1
 8032c66:	6010      	str	r0, [r2, #0]
 8032c68:	4608      	mov	r0, r1
 8032c6a:	7019      	strb	r1, [r3, #0]
 8032c6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032c70:	4770      	bx	lr

08032c72 <__sfputs_r>:
 8032c72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8032c74:	4606      	mov	r6, r0
 8032c76:	460f      	mov	r7, r1
 8032c78:	4614      	mov	r4, r2
 8032c7a:	18d5      	adds	r5, r2, r3
 8032c7c:	42ac      	cmp	r4, r5
 8032c7e:	d101      	bne.n	8032c84 <__sfputs_r+0x12>
 8032c80:	2000      	movs	r0, #0
 8032c82:	e007      	b.n	8032c94 <__sfputs_r+0x22>
 8032c84:	463a      	mov	r2, r7
 8032c86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032c8a:	4630      	mov	r0, r6
 8032c8c:	f7ff ffda 	bl	8032c44 <__sfputc_r>
 8032c90:	1c43      	adds	r3, r0, #1
 8032c92:	d1f3      	bne.n	8032c7c <__sfputs_r+0xa>
 8032c94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08032c98 <_vfiprintf_r>:
 8032c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032c9c:	460d      	mov	r5, r1
 8032c9e:	b09d      	sub	sp, #116	@ 0x74
 8032ca0:	4614      	mov	r4, r2
 8032ca2:	4698      	mov	r8, r3
 8032ca4:	4606      	mov	r6, r0
 8032ca6:	b118      	cbz	r0, 8032cb0 <_vfiprintf_r+0x18>
 8032ca8:	6a03      	ldr	r3, [r0, #32]
 8032caa:	b90b      	cbnz	r3, 8032cb0 <_vfiprintf_r+0x18>
 8032cac:	f7ff fda8 	bl	8032800 <__sinit>
 8032cb0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032cb2:	07d9      	lsls	r1, r3, #31
 8032cb4:	d405      	bmi.n	8032cc2 <_vfiprintf_r+0x2a>
 8032cb6:	89ab      	ldrh	r3, [r5, #12]
 8032cb8:	059a      	lsls	r2, r3, #22
 8032cba:	d402      	bmi.n	8032cc2 <_vfiprintf_r+0x2a>
 8032cbc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032cbe:	f7ff ff0a 	bl	8032ad6 <__retarget_lock_acquire_recursive>
 8032cc2:	89ab      	ldrh	r3, [r5, #12]
 8032cc4:	071b      	lsls	r3, r3, #28
 8032cc6:	d501      	bpl.n	8032ccc <_vfiprintf_r+0x34>
 8032cc8:	692b      	ldr	r3, [r5, #16]
 8032cca:	b99b      	cbnz	r3, 8032cf4 <_vfiprintf_r+0x5c>
 8032ccc:	4629      	mov	r1, r5
 8032cce:	4630      	mov	r0, r6
 8032cd0:	f000 fb76 	bl	80333c0 <__swsetup_r>
 8032cd4:	b170      	cbz	r0, 8032cf4 <_vfiprintf_r+0x5c>
 8032cd6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032cd8:	07dc      	lsls	r4, r3, #31
 8032cda:	d504      	bpl.n	8032ce6 <_vfiprintf_r+0x4e>
 8032cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8032ce0:	b01d      	add	sp, #116	@ 0x74
 8032ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8032ce6:	89ab      	ldrh	r3, [r5, #12]
 8032ce8:	0598      	lsls	r0, r3, #22
 8032cea:	d4f7      	bmi.n	8032cdc <_vfiprintf_r+0x44>
 8032cec:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032cee:	f7ff fef3 	bl	8032ad8 <__retarget_lock_release_recursive>
 8032cf2:	e7f3      	b.n	8032cdc <_vfiprintf_r+0x44>
 8032cf4:	2300      	movs	r3, #0
 8032cf6:	f8cd 800c 	str.w	r8, [sp, #12]
 8032cfa:	f04f 0901 	mov.w	r9, #1
 8032cfe:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8032eb4 <_vfiprintf_r+0x21c>
 8032d02:	9309      	str	r3, [sp, #36]	@ 0x24
 8032d04:	2320      	movs	r3, #32
 8032d06:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8032d0a:	2330      	movs	r3, #48	@ 0x30
 8032d0c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8032d10:	4623      	mov	r3, r4
 8032d12:	469a      	mov	sl, r3
 8032d14:	f813 2b01 	ldrb.w	r2, [r3], #1
 8032d18:	b10a      	cbz	r2, 8032d1e <_vfiprintf_r+0x86>
 8032d1a:	2a25      	cmp	r2, #37	@ 0x25
 8032d1c:	d1f9      	bne.n	8032d12 <_vfiprintf_r+0x7a>
 8032d1e:	ebba 0b04 	subs.w	fp, sl, r4
 8032d22:	d00b      	beq.n	8032d3c <_vfiprintf_r+0xa4>
 8032d24:	465b      	mov	r3, fp
 8032d26:	4622      	mov	r2, r4
 8032d28:	4629      	mov	r1, r5
 8032d2a:	4630      	mov	r0, r6
 8032d2c:	f7ff ffa1 	bl	8032c72 <__sfputs_r>
 8032d30:	3001      	adds	r0, #1
 8032d32:	f000 80a7 	beq.w	8032e84 <_vfiprintf_r+0x1ec>
 8032d36:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8032d38:	445a      	add	r2, fp
 8032d3a:	9209      	str	r2, [sp, #36]	@ 0x24
 8032d3c:	f89a 3000 	ldrb.w	r3, [sl]
 8032d40:	2b00      	cmp	r3, #0
 8032d42:	f000 809f 	beq.w	8032e84 <_vfiprintf_r+0x1ec>
 8032d46:	2300      	movs	r3, #0
 8032d48:	f04f 32ff 	mov.w	r2, #4294967295
 8032d4c:	f10a 0a01 	add.w	sl, sl, #1
 8032d50:	9304      	str	r3, [sp, #16]
 8032d52:	9307      	str	r3, [sp, #28]
 8032d54:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8032d58:	931a      	str	r3, [sp, #104]	@ 0x68
 8032d5a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8032d5e:	4654      	mov	r4, sl
 8032d60:	2205      	movs	r2, #5
 8032d62:	4854      	ldr	r0, [pc, #336]	@ (8032eb4 <_vfiprintf_r+0x21c>)
 8032d64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032d68:	f000 fb80 	bl	803346c <memchr>
 8032d6c:	9a04      	ldr	r2, [sp, #16]
 8032d6e:	b9d8      	cbnz	r0, 8032da8 <_vfiprintf_r+0x110>
 8032d70:	06d1      	lsls	r1, r2, #27
 8032d72:	bf44      	itt	mi
 8032d74:	2320      	movmi	r3, #32
 8032d76:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d7a:	0713      	lsls	r3, r2, #28
 8032d7c:	bf44      	itt	mi
 8032d7e:	232b      	movmi	r3, #43	@ 0x2b
 8032d80:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d84:	f89a 3000 	ldrb.w	r3, [sl]
 8032d88:	2b2a      	cmp	r3, #42	@ 0x2a
 8032d8a:	d015      	beq.n	8032db8 <_vfiprintf_r+0x120>
 8032d8c:	9a07      	ldr	r2, [sp, #28]
 8032d8e:	4654      	mov	r4, sl
 8032d90:	2000      	movs	r0, #0
 8032d92:	f04f 0c0a 	mov.w	ip, #10
 8032d96:	4621      	mov	r1, r4
 8032d98:	f811 3b01 	ldrb.w	r3, [r1], #1
 8032d9c:	3b30      	subs	r3, #48	@ 0x30
 8032d9e:	2b09      	cmp	r3, #9
 8032da0:	d94b      	bls.n	8032e3a <_vfiprintf_r+0x1a2>
 8032da2:	b1b0      	cbz	r0, 8032dd2 <_vfiprintf_r+0x13a>
 8032da4:	9207      	str	r2, [sp, #28]
 8032da6:	e014      	b.n	8032dd2 <_vfiprintf_r+0x13a>
 8032da8:	eba0 0308 	sub.w	r3, r0, r8
 8032dac:	46a2      	mov	sl, r4
 8032dae:	fa09 f303 	lsl.w	r3, r9, r3
 8032db2:	4313      	orrs	r3, r2
 8032db4:	9304      	str	r3, [sp, #16]
 8032db6:	e7d2      	b.n	8032d5e <_vfiprintf_r+0xc6>
 8032db8:	9b03      	ldr	r3, [sp, #12]
 8032dba:	1d19      	adds	r1, r3, #4
 8032dbc:	681b      	ldr	r3, [r3, #0]
 8032dbe:	2b00      	cmp	r3, #0
 8032dc0:	9103      	str	r1, [sp, #12]
 8032dc2:	bfbb      	ittet	lt
 8032dc4:	425b      	neglt	r3, r3
 8032dc6:	f042 0202 	orrlt.w	r2, r2, #2
 8032dca:	9307      	strge	r3, [sp, #28]
 8032dcc:	9307      	strlt	r3, [sp, #28]
 8032dce:	bfb8      	it	lt
 8032dd0:	9204      	strlt	r2, [sp, #16]
 8032dd2:	7823      	ldrb	r3, [r4, #0]
 8032dd4:	2b2e      	cmp	r3, #46	@ 0x2e
 8032dd6:	d10a      	bne.n	8032dee <_vfiprintf_r+0x156>
 8032dd8:	7863      	ldrb	r3, [r4, #1]
 8032dda:	2b2a      	cmp	r3, #42	@ 0x2a
 8032ddc:	d132      	bne.n	8032e44 <_vfiprintf_r+0x1ac>
 8032dde:	9b03      	ldr	r3, [sp, #12]
 8032de0:	3402      	adds	r4, #2
 8032de2:	1d1a      	adds	r2, r3, #4
 8032de4:	681b      	ldr	r3, [r3, #0]
 8032de6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8032dea:	9203      	str	r2, [sp, #12]
 8032dec:	9305      	str	r3, [sp, #20]
 8032dee:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8032ec4 <_vfiprintf_r+0x22c>
 8032df2:	2203      	movs	r2, #3
 8032df4:	7821      	ldrb	r1, [r4, #0]
 8032df6:	4650      	mov	r0, sl
 8032df8:	f000 fb38 	bl	803346c <memchr>
 8032dfc:	b138      	cbz	r0, 8032e0e <_vfiprintf_r+0x176>
 8032dfe:	eba0 000a 	sub.w	r0, r0, sl
 8032e02:	2240      	movs	r2, #64	@ 0x40
 8032e04:	9b04      	ldr	r3, [sp, #16]
 8032e06:	3401      	adds	r4, #1
 8032e08:	4082      	lsls	r2, r0
 8032e0a:	4313      	orrs	r3, r2
 8032e0c:	9304      	str	r3, [sp, #16]
 8032e0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032e12:	2206      	movs	r2, #6
 8032e14:	4828      	ldr	r0, [pc, #160]	@ (8032eb8 <_vfiprintf_r+0x220>)
 8032e16:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8032e1a:	f000 fb27 	bl	803346c <memchr>
 8032e1e:	2800      	cmp	r0, #0
 8032e20:	d03f      	beq.n	8032ea2 <_vfiprintf_r+0x20a>
 8032e22:	4b26      	ldr	r3, [pc, #152]	@ (8032ebc <_vfiprintf_r+0x224>)
 8032e24:	bb1b      	cbnz	r3, 8032e6e <_vfiprintf_r+0x1d6>
 8032e26:	9b03      	ldr	r3, [sp, #12]
 8032e28:	3307      	adds	r3, #7
 8032e2a:	f023 0307 	bic.w	r3, r3, #7
 8032e2e:	3308      	adds	r3, #8
 8032e30:	9303      	str	r3, [sp, #12]
 8032e32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8032e34:	443b      	add	r3, r7
 8032e36:	9309      	str	r3, [sp, #36]	@ 0x24
 8032e38:	e76a      	b.n	8032d10 <_vfiprintf_r+0x78>
 8032e3a:	fb0c 3202 	mla	r2, ip, r2, r3
 8032e3e:	460c      	mov	r4, r1
 8032e40:	2001      	movs	r0, #1
 8032e42:	e7a8      	b.n	8032d96 <_vfiprintf_r+0xfe>
 8032e44:	2300      	movs	r3, #0
 8032e46:	3401      	adds	r4, #1
 8032e48:	f04f 0c0a 	mov.w	ip, #10
 8032e4c:	4619      	mov	r1, r3
 8032e4e:	9305      	str	r3, [sp, #20]
 8032e50:	4620      	mov	r0, r4
 8032e52:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032e56:	3a30      	subs	r2, #48	@ 0x30
 8032e58:	2a09      	cmp	r2, #9
 8032e5a:	d903      	bls.n	8032e64 <_vfiprintf_r+0x1cc>
 8032e5c:	2b00      	cmp	r3, #0
 8032e5e:	d0c6      	beq.n	8032dee <_vfiprintf_r+0x156>
 8032e60:	9105      	str	r1, [sp, #20]
 8032e62:	e7c4      	b.n	8032dee <_vfiprintf_r+0x156>
 8032e64:	fb0c 2101 	mla	r1, ip, r1, r2
 8032e68:	4604      	mov	r4, r0
 8032e6a:	2301      	movs	r3, #1
 8032e6c:	e7f0      	b.n	8032e50 <_vfiprintf_r+0x1b8>
 8032e6e:	ab03      	add	r3, sp, #12
 8032e70:	462a      	mov	r2, r5
 8032e72:	a904      	add	r1, sp, #16
 8032e74:	4630      	mov	r0, r6
 8032e76:	9300      	str	r3, [sp, #0]
 8032e78:	4b11      	ldr	r3, [pc, #68]	@ (8032ec0 <_vfiprintf_r+0x228>)
 8032e7a:	f3af 8000 	nop.w
 8032e7e:	4607      	mov	r7, r0
 8032e80:	1c78      	adds	r0, r7, #1
 8032e82:	d1d6      	bne.n	8032e32 <_vfiprintf_r+0x19a>
 8032e84:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032e86:	07d9      	lsls	r1, r3, #31
 8032e88:	d405      	bmi.n	8032e96 <_vfiprintf_r+0x1fe>
 8032e8a:	89ab      	ldrh	r3, [r5, #12]
 8032e8c:	059a      	lsls	r2, r3, #22
 8032e8e:	d402      	bmi.n	8032e96 <_vfiprintf_r+0x1fe>
 8032e90:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032e92:	f7ff fe21 	bl	8032ad8 <__retarget_lock_release_recursive>
 8032e96:	89ab      	ldrh	r3, [r5, #12]
 8032e98:	065b      	lsls	r3, r3, #25
 8032e9a:	f53f af1f 	bmi.w	8032cdc <_vfiprintf_r+0x44>
 8032e9e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8032ea0:	e71e      	b.n	8032ce0 <_vfiprintf_r+0x48>
 8032ea2:	ab03      	add	r3, sp, #12
 8032ea4:	462a      	mov	r2, r5
 8032ea6:	a904      	add	r1, sp, #16
 8032ea8:	4630      	mov	r0, r6
 8032eaa:	9300      	str	r3, [sp, #0]
 8032eac:	4b04      	ldr	r3, [pc, #16]	@ (8032ec0 <_vfiprintf_r+0x228>)
 8032eae:	f000 f87d 	bl	8032fac <_printf_i>
 8032eb2:	e7e4      	b.n	8032e7e <_vfiprintf_r+0x1e6>
 8032eb4:	080386d4 	.word	0x080386d4
 8032eb8:	080386de 	.word	0x080386de
 8032ebc:	00000000 	.word	0x00000000
 8032ec0:	08032c73 	.word	0x08032c73
 8032ec4:	080386da 	.word	0x080386da

08032ec8 <_printf_common>:
 8032ec8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8032ecc:	4616      	mov	r6, r2
 8032ece:	4698      	mov	r8, r3
 8032ed0:	688a      	ldr	r2, [r1, #8]
 8032ed2:	4607      	mov	r7, r0
 8032ed4:	690b      	ldr	r3, [r1, #16]
 8032ed6:	460c      	mov	r4, r1
 8032ed8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8032edc:	4293      	cmp	r3, r2
 8032ede:	bfb8      	it	lt
 8032ee0:	4613      	movlt	r3, r2
 8032ee2:	6033      	str	r3, [r6, #0]
 8032ee4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8032ee8:	b10a      	cbz	r2, 8032eee <_printf_common+0x26>
 8032eea:	3301      	adds	r3, #1
 8032eec:	6033      	str	r3, [r6, #0]
 8032eee:	6823      	ldr	r3, [r4, #0]
 8032ef0:	0699      	lsls	r1, r3, #26
 8032ef2:	bf42      	ittt	mi
 8032ef4:	6833      	ldrmi	r3, [r6, #0]
 8032ef6:	3302      	addmi	r3, #2
 8032ef8:	6033      	strmi	r3, [r6, #0]
 8032efa:	6825      	ldr	r5, [r4, #0]
 8032efc:	f015 0506 	ands.w	r5, r5, #6
 8032f00:	d106      	bne.n	8032f10 <_printf_common+0x48>
 8032f02:	f104 0a19 	add.w	sl, r4, #25
 8032f06:	68e3      	ldr	r3, [r4, #12]
 8032f08:	6832      	ldr	r2, [r6, #0]
 8032f0a:	1a9b      	subs	r3, r3, r2
 8032f0c:	42ab      	cmp	r3, r5
 8032f0e:	dc2b      	bgt.n	8032f68 <_printf_common+0xa0>
 8032f10:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8032f14:	6822      	ldr	r2, [r4, #0]
 8032f16:	3b00      	subs	r3, #0
 8032f18:	bf18      	it	ne
 8032f1a:	2301      	movne	r3, #1
 8032f1c:	0692      	lsls	r2, r2, #26
 8032f1e:	d430      	bmi.n	8032f82 <_printf_common+0xba>
 8032f20:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8032f24:	4641      	mov	r1, r8
 8032f26:	4638      	mov	r0, r7
 8032f28:	47c8      	blx	r9
 8032f2a:	3001      	adds	r0, #1
 8032f2c:	d023      	beq.n	8032f76 <_printf_common+0xae>
 8032f2e:	6823      	ldr	r3, [r4, #0]
 8032f30:	341a      	adds	r4, #26
 8032f32:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8032f36:	f003 0306 	and.w	r3, r3, #6
 8032f3a:	2b04      	cmp	r3, #4
 8032f3c:	bf0a      	itet	eq
 8032f3e:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8032f42:	2500      	movne	r5, #0
 8032f44:	6833      	ldreq	r3, [r6, #0]
 8032f46:	f04f 0600 	mov.w	r6, #0
 8032f4a:	bf08      	it	eq
 8032f4c:	1aed      	subeq	r5, r5, r3
 8032f4e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8032f52:	bf08      	it	eq
 8032f54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8032f58:	4293      	cmp	r3, r2
 8032f5a:	bfc4      	itt	gt
 8032f5c:	1a9b      	subgt	r3, r3, r2
 8032f5e:	18ed      	addgt	r5, r5, r3
 8032f60:	42b5      	cmp	r5, r6
 8032f62:	d11a      	bne.n	8032f9a <_printf_common+0xd2>
 8032f64:	2000      	movs	r0, #0
 8032f66:	e008      	b.n	8032f7a <_printf_common+0xb2>
 8032f68:	2301      	movs	r3, #1
 8032f6a:	4652      	mov	r2, sl
 8032f6c:	4641      	mov	r1, r8
 8032f6e:	4638      	mov	r0, r7
 8032f70:	47c8      	blx	r9
 8032f72:	3001      	adds	r0, #1
 8032f74:	d103      	bne.n	8032f7e <_printf_common+0xb6>
 8032f76:	f04f 30ff 	mov.w	r0, #4294967295
 8032f7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8032f7e:	3501      	adds	r5, #1
 8032f80:	e7c1      	b.n	8032f06 <_printf_common+0x3e>
 8032f82:	18e1      	adds	r1, r4, r3
 8032f84:	1c5a      	adds	r2, r3, #1
 8032f86:	2030      	movs	r0, #48	@ 0x30
 8032f88:	3302      	adds	r3, #2
 8032f8a:	4422      	add	r2, r4
 8032f8c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8032f90:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8032f94:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8032f98:	e7c2      	b.n	8032f20 <_printf_common+0x58>
 8032f9a:	2301      	movs	r3, #1
 8032f9c:	4622      	mov	r2, r4
 8032f9e:	4641      	mov	r1, r8
 8032fa0:	4638      	mov	r0, r7
 8032fa2:	47c8      	blx	r9
 8032fa4:	3001      	adds	r0, #1
 8032fa6:	d0e6      	beq.n	8032f76 <_printf_common+0xae>
 8032fa8:	3601      	adds	r6, #1
 8032faa:	e7d9      	b.n	8032f60 <_printf_common+0x98>

08032fac <_printf_i>:
 8032fac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8032fb0:	7e0f      	ldrb	r7, [r1, #24]
 8032fb2:	4691      	mov	r9, r2
 8032fb4:	4680      	mov	r8, r0
 8032fb6:	460c      	mov	r4, r1
 8032fb8:	2f78      	cmp	r7, #120	@ 0x78
 8032fba:	469a      	mov	sl, r3
 8032fbc:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8032fbe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8032fc2:	d807      	bhi.n	8032fd4 <_printf_i+0x28>
 8032fc4:	2f62      	cmp	r7, #98	@ 0x62
 8032fc6:	d80a      	bhi.n	8032fde <_printf_i+0x32>
 8032fc8:	2f00      	cmp	r7, #0
 8032fca:	f000 80d2 	beq.w	8033172 <_printf_i+0x1c6>
 8032fce:	2f58      	cmp	r7, #88	@ 0x58
 8032fd0:	f000 80b9 	beq.w	8033146 <_printf_i+0x19a>
 8032fd4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8032fd8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8032fdc:	e03a      	b.n	8033054 <_printf_i+0xa8>
 8032fde:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8032fe2:	2b15      	cmp	r3, #21
 8032fe4:	d8f6      	bhi.n	8032fd4 <_printf_i+0x28>
 8032fe6:	a101      	add	r1, pc, #4	@ (adr r1, 8032fec <_printf_i+0x40>)
 8032fe8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8032fec:	08033045 	.word	0x08033045
 8032ff0:	08033059 	.word	0x08033059
 8032ff4:	08032fd5 	.word	0x08032fd5
 8032ff8:	08032fd5 	.word	0x08032fd5
 8032ffc:	08032fd5 	.word	0x08032fd5
 8033000:	08032fd5 	.word	0x08032fd5
 8033004:	08033059 	.word	0x08033059
 8033008:	08032fd5 	.word	0x08032fd5
 803300c:	08032fd5 	.word	0x08032fd5
 8033010:	08032fd5 	.word	0x08032fd5
 8033014:	08032fd5 	.word	0x08032fd5
 8033018:	08033159 	.word	0x08033159
 803301c:	08033083 	.word	0x08033083
 8033020:	08033113 	.word	0x08033113
 8033024:	08032fd5 	.word	0x08032fd5
 8033028:	08032fd5 	.word	0x08032fd5
 803302c:	0803317b 	.word	0x0803317b
 8033030:	08032fd5 	.word	0x08032fd5
 8033034:	08033083 	.word	0x08033083
 8033038:	08032fd5 	.word	0x08032fd5
 803303c:	08032fd5 	.word	0x08032fd5
 8033040:	0803311b 	.word	0x0803311b
 8033044:	6833      	ldr	r3, [r6, #0]
 8033046:	1d1a      	adds	r2, r3, #4
 8033048:	681b      	ldr	r3, [r3, #0]
 803304a:	6032      	str	r2, [r6, #0]
 803304c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8033050:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8033054:	2301      	movs	r3, #1
 8033056:	e09d      	b.n	8033194 <_printf_i+0x1e8>
 8033058:	6833      	ldr	r3, [r6, #0]
 803305a:	6820      	ldr	r0, [r4, #0]
 803305c:	1d19      	adds	r1, r3, #4
 803305e:	6031      	str	r1, [r6, #0]
 8033060:	0606      	lsls	r6, r0, #24
 8033062:	d501      	bpl.n	8033068 <_printf_i+0xbc>
 8033064:	681d      	ldr	r5, [r3, #0]
 8033066:	e003      	b.n	8033070 <_printf_i+0xc4>
 8033068:	0645      	lsls	r5, r0, #25
 803306a:	d5fb      	bpl.n	8033064 <_printf_i+0xb8>
 803306c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8033070:	2d00      	cmp	r5, #0
 8033072:	da03      	bge.n	803307c <_printf_i+0xd0>
 8033074:	232d      	movs	r3, #45	@ 0x2d
 8033076:	426d      	negs	r5, r5
 8033078:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803307c:	4859      	ldr	r0, [pc, #356]	@ (80331e4 <_printf_i+0x238>)
 803307e:	230a      	movs	r3, #10
 8033080:	e011      	b.n	80330a6 <_printf_i+0xfa>
 8033082:	6821      	ldr	r1, [r4, #0]
 8033084:	6833      	ldr	r3, [r6, #0]
 8033086:	0608      	lsls	r0, r1, #24
 8033088:	f853 5b04 	ldr.w	r5, [r3], #4
 803308c:	d402      	bmi.n	8033094 <_printf_i+0xe8>
 803308e:	0649      	lsls	r1, r1, #25
 8033090:	bf48      	it	mi
 8033092:	b2ad      	uxthmi	r5, r5
 8033094:	2f6f      	cmp	r7, #111	@ 0x6f
 8033096:	6033      	str	r3, [r6, #0]
 8033098:	4852      	ldr	r0, [pc, #328]	@ (80331e4 <_printf_i+0x238>)
 803309a:	bf14      	ite	ne
 803309c:	230a      	movne	r3, #10
 803309e:	2308      	moveq	r3, #8
 80330a0:	2100      	movs	r1, #0
 80330a2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80330a6:	6866      	ldr	r6, [r4, #4]
 80330a8:	2e00      	cmp	r6, #0
 80330aa:	60a6      	str	r6, [r4, #8]
 80330ac:	bfa2      	ittt	ge
 80330ae:	6821      	ldrge	r1, [r4, #0]
 80330b0:	f021 0104 	bicge.w	r1, r1, #4
 80330b4:	6021      	strge	r1, [r4, #0]
 80330b6:	b90d      	cbnz	r5, 80330bc <_printf_i+0x110>
 80330b8:	2e00      	cmp	r6, #0
 80330ba:	d04b      	beq.n	8033154 <_printf_i+0x1a8>
 80330bc:	4616      	mov	r6, r2
 80330be:	fbb5 f1f3 	udiv	r1, r5, r3
 80330c2:	fb03 5711 	mls	r7, r3, r1, r5
 80330c6:	5dc7      	ldrb	r7, [r0, r7]
 80330c8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80330cc:	462f      	mov	r7, r5
 80330ce:	460d      	mov	r5, r1
 80330d0:	42bb      	cmp	r3, r7
 80330d2:	d9f4      	bls.n	80330be <_printf_i+0x112>
 80330d4:	2b08      	cmp	r3, #8
 80330d6:	d10b      	bne.n	80330f0 <_printf_i+0x144>
 80330d8:	6823      	ldr	r3, [r4, #0]
 80330da:	07df      	lsls	r7, r3, #31
 80330dc:	d508      	bpl.n	80330f0 <_printf_i+0x144>
 80330de:	6923      	ldr	r3, [r4, #16]
 80330e0:	6861      	ldr	r1, [r4, #4]
 80330e2:	4299      	cmp	r1, r3
 80330e4:	bfde      	ittt	le
 80330e6:	2330      	movle	r3, #48	@ 0x30
 80330e8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80330ec:	f106 36ff 	addle.w	r6, r6, #4294967295
 80330f0:	1b92      	subs	r2, r2, r6
 80330f2:	6122      	str	r2, [r4, #16]
 80330f4:	464b      	mov	r3, r9
 80330f6:	aa03      	add	r2, sp, #12
 80330f8:	4621      	mov	r1, r4
 80330fa:	4640      	mov	r0, r8
 80330fc:	f8cd a000 	str.w	sl, [sp]
 8033100:	f7ff fee2 	bl	8032ec8 <_printf_common>
 8033104:	3001      	adds	r0, #1
 8033106:	d14a      	bne.n	803319e <_printf_i+0x1f2>
 8033108:	f04f 30ff 	mov.w	r0, #4294967295
 803310c:	b004      	add	sp, #16
 803310e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8033112:	6823      	ldr	r3, [r4, #0]
 8033114:	f043 0320 	orr.w	r3, r3, #32
 8033118:	6023      	str	r3, [r4, #0]
 803311a:	2778      	movs	r7, #120	@ 0x78
 803311c:	4832      	ldr	r0, [pc, #200]	@ (80331e8 <_printf_i+0x23c>)
 803311e:	6823      	ldr	r3, [r4, #0]
 8033120:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8033124:	061f      	lsls	r7, r3, #24
 8033126:	6831      	ldr	r1, [r6, #0]
 8033128:	f851 5b04 	ldr.w	r5, [r1], #4
 803312c:	d402      	bmi.n	8033134 <_printf_i+0x188>
 803312e:	065f      	lsls	r7, r3, #25
 8033130:	bf48      	it	mi
 8033132:	b2ad      	uxthmi	r5, r5
 8033134:	6031      	str	r1, [r6, #0]
 8033136:	07d9      	lsls	r1, r3, #31
 8033138:	bf44      	itt	mi
 803313a:	f043 0320 	orrmi.w	r3, r3, #32
 803313e:	6023      	strmi	r3, [r4, #0]
 8033140:	b11d      	cbz	r5, 803314a <_printf_i+0x19e>
 8033142:	2310      	movs	r3, #16
 8033144:	e7ac      	b.n	80330a0 <_printf_i+0xf4>
 8033146:	4827      	ldr	r0, [pc, #156]	@ (80331e4 <_printf_i+0x238>)
 8033148:	e7e9      	b.n	803311e <_printf_i+0x172>
 803314a:	6823      	ldr	r3, [r4, #0]
 803314c:	f023 0320 	bic.w	r3, r3, #32
 8033150:	6023      	str	r3, [r4, #0]
 8033152:	e7f6      	b.n	8033142 <_printf_i+0x196>
 8033154:	4616      	mov	r6, r2
 8033156:	e7bd      	b.n	80330d4 <_printf_i+0x128>
 8033158:	6833      	ldr	r3, [r6, #0]
 803315a:	6825      	ldr	r5, [r4, #0]
 803315c:	1d18      	adds	r0, r3, #4
 803315e:	6961      	ldr	r1, [r4, #20]
 8033160:	6030      	str	r0, [r6, #0]
 8033162:	062e      	lsls	r6, r5, #24
 8033164:	681b      	ldr	r3, [r3, #0]
 8033166:	d501      	bpl.n	803316c <_printf_i+0x1c0>
 8033168:	6019      	str	r1, [r3, #0]
 803316a:	e002      	b.n	8033172 <_printf_i+0x1c6>
 803316c:	0668      	lsls	r0, r5, #25
 803316e:	d5fb      	bpl.n	8033168 <_printf_i+0x1bc>
 8033170:	8019      	strh	r1, [r3, #0]
 8033172:	2300      	movs	r3, #0
 8033174:	4616      	mov	r6, r2
 8033176:	6123      	str	r3, [r4, #16]
 8033178:	e7bc      	b.n	80330f4 <_printf_i+0x148>
 803317a:	6833      	ldr	r3, [r6, #0]
 803317c:	2100      	movs	r1, #0
 803317e:	1d1a      	adds	r2, r3, #4
 8033180:	6032      	str	r2, [r6, #0]
 8033182:	681e      	ldr	r6, [r3, #0]
 8033184:	6862      	ldr	r2, [r4, #4]
 8033186:	4630      	mov	r0, r6
 8033188:	f000 f970 	bl	803346c <memchr>
 803318c:	b108      	cbz	r0, 8033192 <_printf_i+0x1e6>
 803318e:	1b80      	subs	r0, r0, r6
 8033190:	6060      	str	r0, [r4, #4]
 8033192:	6863      	ldr	r3, [r4, #4]
 8033194:	6123      	str	r3, [r4, #16]
 8033196:	2300      	movs	r3, #0
 8033198:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803319c:	e7aa      	b.n	80330f4 <_printf_i+0x148>
 803319e:	6923      	ldr	r3, [r4, #16]
 80331a0:	4632      	mov	r2, r6
 80331a2:	4649      	mov	r1, r9
 80331a4:	4640      	mov	r0, r8
 80331a6:	47d0      	blx	sl
 80331a8:	3001      	adds	r0, #1
 80331aa:	d0ad      	beq.n	8033108 <_printf_i+0x15c>
 80331ac:	6823      	ldr	r3, [r4, #0]
 80331ae:	079b      	lsls	r3, r3, #30
 80331b0:	d413      	bmi.n	80331da <_printf_i+0x22e>
 80331b2:	68e0      	ldr	r0, [r4, #12]
 80331b4:	9b03      	ldr	r3, [sp, #12]
 80331b6:	4298      	cmp	r0, r3
 80331b8:	bfb8      	it	lt
 80331ba:	4618      	movlt	r0, r3
 80331bc:	e7a6      	b.n	803310c <_printf_i+0x160>
 80331be:	2301      	movs	r3, #1
 80331c0:	4632      	mov	r2, r6
 80331c2:	4649      	mov	r1, r9
 80331c4:	4640      	mov	r0, r8
 80331c6:	47d0      	blx	sl
 80331c8:	3001      	adds	r0, #1
 80331ca:	d09d      	beq.n	8033108 <_printf_i+0x15c>
 80331cc:	3501      	adds	r5, #1
 80331ce:	68e3      	ldr	r3, [r4, #12]
 80331d0:	9903      	ldr	r1, [sp, #12]
 80331d2:	1a5b      	subs	r3, r3, r1
 80331d4:	42ab      	cmp	r3, r5
 80331d6:	dcf2      	bgt.n	80331be <_printf_i+0x212>
 80331d8:	e7eb      	b.n	80331b2 <_printf_i+0x206>
 80331da:	2500      	movs	r5, #0
 80331dc:	f104 0619 	add.w	r6, r4, #25
 80331e0:	e7f5      	b.n	80331ce <_printf_i+0x222>
 80331e2:	bf00      	nop
 80331e4:	080386e5 	.word	0x080386e5
 80331e8:	080386f6 	.word	0x080386f6

080331ec <__sflush_r>:
 80331ec:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80331f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80331f4:	0716      	lsls	r6, r2, #28
 80331f6:	4605      	mov	r5, r0
 80331f8:	460c      	mov	r4, r1
 80331fa:	d454      	bmi.n	80332a6 <__sflush_r+0xba>
 80331fc:	684b      	ldr	r3, [r1, #4]
 80331fe:	2b00      	cmp	r3, #0
 8033200:	dc02      	bgt.n	8033208 <__sflush_r+0x1c>
 8033202:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8033204:	2b00      	cmp	r3, #0
 8033206:	dd48      	ble.n	803329a <__sflush_r+0xae>
 8033208:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 803320a:	2e00      	cmp	r6, #0
 803320c:	d045      	beq.n	803329a <__sflush_r+0xae>
 803320e:	2300      	movs	r3, #0
 8033210:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8033214:	682f      	ldr	r7, [r5, #0]
 8033216:	6a21      	ldr	r1, [r4, #32]
 8033218:	602b      	str	r3, [r5, #0]
 803321a:	d030      	beq.n	803327e <__sflush_r+0x92>
 803321c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 803321e:	89a3      	ldrh	r3, [r4, #12]
 8033220:	0759      	lsls	r1, r3, #29
 8033222:	d505      	bpl.n	8033230 <__sflush_r+0x44>
 8033224:	6863      	ldr	r3, [r4, #4]
 8033226:	1ad2      	subs	r2, r2, r3
 8033228:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 803322a:	b10b      	cbz	r3, 8033230 <__sflush_r+0x44>
 803322c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 803322e:	1ad2      	subs	r2, r2, r3
 8033230:	2300      	movs	r3, #0
 8033232:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8033234:	6a21      	ldr	r1, [r4, #32]
 8033236:	4628      	mov	r0, r5
 8033238:	47b0      	blx	r6
 803323a:	1c43      	adds	r3, r0, #1
 803323c:	89a3      	ldrh	r3, [r4, #12]
 803323e:	d106      	bne.n	803324e <__sflush_r+0x62>
 8033240:	6829      	ldr	r1, [r5, #0]
 8033242:	291d      	cmp	r1, #29
 8033244:	d82b      	bhi.n	803329e <__sflush_r+0xb2>
 8033246:	4a2a      	ldr	r2, [pc, #168]	@ (80332f0 <__sflush_r+0x104>)
 8033248:	410a      	asrs	r2, r1
 803324a:	07d6      	lsls	r6, r2, #31
 803324c:	d427      	bmi.n	803329e <__sflush_r+0xb2>
 803324e:	2200      	movs	r2, #0
 8033250:	04d9      	lsls	r1, r3, #19
 8033252:	6062      	str	r2, [r4, #4]
 8033254:	6922      	ldr	r2, [r4, #16]
 8033256:	6022      	str	r2, [r4, #0]
 8033258:	d504      	bpl.n	8033264 <__sflush_r+0x78>
 803325a:	1c42      	adds	r2, r0, #1
 803325c:	d101      	bne.n	8033262 <__sflush_r+0x76>
 803325e:	682b      	ldr	r3, [r5, #0]
 8033260:	b903      	cbnz	r3, 8033264 <__sflush_r+0x78>
 8033262:	6560      	str	r0, [r4, #84]	@ 0x54
 8033264:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8033266:	602f      	str	r7, [r5, #0]
 8033268:	b1b9      	cbz	r1, 803329a <__sflush_r+0xae>
 803326a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 803326e:	4299      	cmp	r1, r3
 8033270:	d002      	beq.n	8033278 <__sflush_r+0x8c>
 8033272:	4628      	mov	r0, r5
 8033274:	f7ff fc9c 	bl	8032bb0 <_free_r>
 8033278:	2300      	movs	r3, #0
 803327a:	6363      	str	r3, [r4, #52]	@ 0x34
 803327c:	e00d      	b.n	803329a <__sflush_r+0xae>
 803327e:	2301      	movs	r3, #1
 8033280:	4628      	mov	r0, r5
 8033282:	47b0      	blx	r6
 8033284:	4602      	mov	r2, r0
 8033286:	1c50      	adds	r0, r2, #1
 8033288:	d1c9      	bne.n	803321e <__sflush_r+0x32>
 803328a:	682b      	ldr	r3, [r5, #0]
 803328c:	2b00      	cmp	r3, #0
 803328e:	d0c6      	beq.n	803321e <__sflush_r+0x32>
 8033290:	2b1d      	cmp	r3, #29
 8033292:	d001      	beq.n	8033298 <__sflush_r+0xac>
 8033294:	2b16      	cmp	r3, #22
 8033296:	d11d      	bne.n	80332d4 <__sflush_r+0xe8>
 8033298:	602f      	str	r7, [r5, #0]
 803329a:	2000      	movs	r0, #0
 803329c:	e021      	b.n	80332e2 <__sflush_r+0xf6>
 803329e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80332a2:	b21b      	sxth	r3, r3
 80332a4:	e01a      	b.n	80332dc <__sflush_r+0xf0>
 80332a6:	690f      	ldr	r7, [r1, #16]
 80332a8:	2f00      	cmp	r7, #0
 80332aa:	d0f6      	beq.n	803329a <__sflush_r+0xae>
 80332ac:	0793      	lsls	r3, r2, #30
 80332ae:	680e      	ldr	r6, [r1, #0]
 80332b0:	600f      	str	r7, [r1, #0]
 80332b2:	bf0c      	ite	eq
 80332b4:	694b      	ldreq	r3, [r1, #20]
 80332b6:	2300      	movne	r3, #0
 80332b8:	eba6 0807 	sub.w	r8, r6, r7
 80332bc:	608b      	str	r3, [r1, #8]
 80332be:	f1b8 0f00 	cmp.w	r8, #0
 80332c2:	ddea      	ble.n	803329a <__sflush_r+0xae>
 80332c4:	4643      	mov	r3, r8
 80332c6:	463a      	mov	r2, r7
 80332c8:	6a21      	ldr	r1, [r4, #32]
 80332ca:	4628      	mov	r0, r5
 80332cc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80332ce:	47b0      	blx	r6
 80332d0:	2800      	cmp	r0, #0
 80332d2:	dc08      	bgt.n	80332e6 <__sflush_r+0xfa>
 80332d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80332d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80332dc:	f04f 30ff 	mov.w	r0, #4294967295
 80332e0:	81a3      	strh	r3, [r4, #12]
 80332e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80332e6:	4407      	add	r7, r0
 80332e8:	eba8 0800 	sub.w	r8, r8, r0
 80332ec:	e7e7      	b.n	80332be <__sflush_r+0xd2>
 80332ee:	bf00      	nop
 80332f0:	dfbffffe 	.word	0xdfbffffe

080332f4 <_fflush_r>:
 80332f4:	b538      	push	{r3, r4, r5, lr}
 80332f6:	690b      	ldr	r3, [r1, #16]
 80332f8:	4605      	mov	r5, r0
 80332fa:	460c      	mov	r4, r1
 80332fc:	b913      	cbnz	r3, 8033304 <_fflush_r+0x10>
 80332fe:	2500      	movs	r5, #0
 8033300:	4628      	mov	r0, r5
 8033302:	bd38      	pop	{r3, r4, r5, pc}
 8033304:	b118      	cbz	r0, 803330e <_fflush_r+0x1a>
 8033306:	6a03      	ldr	r3, [r0, #32]
 8033308:	b90b      	cbnz	r3, 803330e <_fflush_r+0x1a>
 803330a:	f7ff fa79 	bl	8032800 <__sinit>
 803330e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033312:	2b00      	cmp	r3, #0
 8033314:	d0f3      	beq.n	80332fe <_fflush_r+0xa>
 8033316:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8033318:	07d0      	lsls	r0, r2, #31
 803331a:	d404      	bmi.n	8033326 <_fflush_r+0x32>
 803331c:	0599      	lsls	r1, r3, #22
 803331e:	d402      	bmi.n	8033326 <_fflush_r+0x32>
 8033320:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8033322:	f7ff fbd8 	bl	8032ad6 <__retarget_lock_acquire_recursive>
 8033326:	4628      	mov	r0, r5
 8033328:	4621      	mov	r1, r4
 803332a:	f7ff ff5f 	bl	80331ec <__sflush_r>
 803332e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8033330:	4605      	mov	r5, r0
 8033332:	07da      	lsls	r2, r3, #31
 8033334:	d4e4      	bmi.n	8033300 <_fflush_r+0xc>
 8033336:	89a3      	ldrh	r3, [r4, #12]
 8033338:	059b      	lsls	r3, r3, #22
 803333a:	d4e1      	bmi.n	8033300 <_fflush_r+0xc>
 803333c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 803333e:	f7ff fbcb 	bl	8032ad8 <__retarget_lock_release_recursive>
 8033342:	e7dd      	b.n	8033300 <_fflush_r+0xc>

08033344 <__swbuf_r>:
 8033344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033346:	460e      	mov	r6, r1
 8033348:	4614      	mov	r4, r2
 803334a:	4605      	mov	r5, r0
 803334c:	b118      	cbz	r0, 8033356 <__swbuf_r+0x12>
 803334e:	6a03      	ldr	r3, [r0, #32]
 8033350:	b90b      	cbnz	r3, 8033356 <__swbuf_r+0x12>
 8033352:	f7ff fa55 	bl	8032800 <__sinit>
 8033356:	69a3      	ldr	r3, [r4, #24]
 8033358:	60a3      	str	r3, [r4, #8]
 803335a:	89a3      	ldrh	r3, [r4, #12]
 803335c:	071a      	lsls	r2, r3, #28
 803335e:	d501      	bpl.n	8033364 <__swbuf_r+0x20>
 8033360:	6923      	ldr	r3, [r4, #16]
 8033362:	b943      	cbnz	r3, 8033376 <__swbuf_r+0x32>
 8033364:	4621      	mov	r1, r4
 8033366:	4628      	mov	r0, r5
 8033368:	f000 f82a 	bl	80333c0 <__swsetup_r>
 803336c:	b118      	cbz	r0, 8033376 <__swbuf_r+0x32>
 803336e:	f04f 37ff 	mov.w	r7, #4294967295
 8033372:	4638      	mov	r0, r7
 8033374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8033376:	6823      	ldr	r3, [r4, #0]
 8033378:	b2f6      	uxtb	r6, r6
 803337a:	6922      	ldr	r2, [r4, #16]
 803337c:	4637      	mov	r7, r6
 803337e:	1a98      	subs	r0, r3, r2
 8033380:	6963      	ldr	r3, [r4, #20]
 8033382:	4283      	cmp	r3, r0
 8033384:	dc05      	bgt.n	8033392 <__swbuf_r+0x4e>
 8033386:	4621      	mov	r1, r4
 8033388:	4628      	mov	r0, r5
 803338a:	f7ff ffb3 	bl	80332f4 <_fflush_r>
 803338e:	2800      	cmp	r0, #0
 8033390:	d1ed      	bne.n	803336e <__swbuf_r+0x2a>
 8033392:	68a3      	ldr	r3, [r4, #8]
 8033394:	3b01      	subs	r3, #1
 8033396:	60a3      	str	r3, [r4, #8]
 8033398:	6823      	ldr	r3, [r4, #0]
 803339a:	1c5a      	adds	r2, r3, #1
 803339c:	6022      	str	r2, [r4, #0]
 803339e:	701e      	strb	r6, [r3, #0]
 80333a0:	1c43      	adds	r3, r0, #1
 80333a2:	6962      	ldr	r2, [r4, #20]
 80333a4:	429a      	cmp	r2, r3
 80333a6:	d004      	beq.n	80333b2 <__swbuf_r+0x6e>
 80333a8:	89a3      	ldrh	r3, [r4, #12]
 80333aa:	07db      	lsls	r3, r3, #31
 80333ac:	d5e1      	bpl.n	8033372 <__swbuf_r+0x2e>
 80333ae:	2e0a      	cmp	r6, #10
 80333b0:	d1df      	bne.n	8033372 <__swbuf_r+0x2e>
 80333b2:	4621      	mov	r1, r4
 80333b4:	4628      	mov	r0, r5
 80333b6:	f7ff ff9d 	bl	80332f4 <_fflush_r>
 80333ba:	2800      	cmp	r0, #0
 80333bc:	d0d9      	beq.n	8033372 <__swbuf_r+0x2e>
 80333be:	e7d6      	b.n	803336e <__swbuf_r+0x2a>

080333c0 <__swsetup_r>:
 80333c0:	b538      	push	{r3, r4, r5, lr}
 80333c2:	4b29      	ldr	r3, [pc, #164]	@ (8033468 <__swsetup_r+0xa8>)
 80333c4:	4605      	mov	r5, r0
 80333c6:	460c      	mov	r4, r1
 80333c8:	6818      	ldr	r0, [r3, #0]
 80333ca:	b118      	cbz	r0, 80333d4 <__swsetup_r+0x14>
 80333cc:	6a03      	ldr	r3, [r0, #32]
 80333ce:	b90b      	cbnz	r3, 80333d4 <__swsetup_r+0x14>
 80333d0:	f7ff fa16 	bl	8032800 <__sinit>
 80333d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80333d8:	0719      	lsls	r1, r3, #28
 80333da:	d422      	bmi.n	8033422 <__swsetup_r+0x62>
 80333dc:	06da      	lsls	r2, r3, #27
 80333de:	d407      	bmi.n	80333f0 <__swsetup_r+0x30>
 80333e0:	2209      	movs	r2, #9
 80333e2:	602a      	str	r2, [r5, #0]
 80333e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80333e8:	f04f 30ff 	mov.w	r0, #4294967295
 80333ec:	81a3      	strh	r3, [r4, #12]
 80333ee:	e033      	b.n	8033458 <__swsetup_r+0x98>
 80333f0:	0758      	lsls	r0, r3, #29
 80333f2:	d512      	bpl.n	803341a <__swsetup_r+0x5a>
 80333f4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80333f6:	b141      	cbz	r1, 803340a <__swsetup_r+0x4a>
 80333f8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80333fc:	4299      	cmp	r1, r3
 80333fe:	d002      	beq.n	8033406 <__swsetup_r+0x46>
 8033400:	4628      	mov	r0, r5
 8033402:	f7ff fbd5 	bl	8032bb0 <_free_r>
 8033406:	2300      	movs	r3, #0
 8033408:	6363      	str	r3, [r4, #52]	@ 0x34
 803340a:	89a3      	ldrh	r3, [r4, #12]
 803340c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8033410:	81a3      	strh	r3, [r4, #12]
 8033412:	2300      	movs	r3, #0
 8033414:	6063      	str	r3, [r4, #4]
 8033416:	6923      	ldr	r3, [r4, #16]
 8033418:	6023      	str	r3, [r4, #0]
 803341a:	89a3      	ldrh	r3, [r4, #12]
 803341c:	f043 0308 	orr.w	r3, r3, #8
 8033420:	81a3      	strh	r3, [r4, #12]
 8033422:	6923      	ldr	r3, [r4, #16]
 8033424:	b94b      	cbnz	r3, 803343a <__swsetup_r+0x7a>
 8033426:	89a3      	ldrh	r3, [r4, #12]
 8033428:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 803342c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8033430:	d003      	beq.n	803343a <__swsetup_r+0x7a>
 8033432:	4621      	mov	r1, r4
 8033434:	4628      	mov	r0, r5
 8033436:	f000 f84c 	bl	80334d2 <__smakebuf_r>
 803343a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 803343e:	f013 0201 	ands.w	r2, r3, #1
 8033442:	d00a      	beq.n	803345a <__swsetup_r+0x9a>
 8033444:	2200      	movs	r2, #0
 8033446:	60a2      	str	r2, [r4, #8]
 8033448:	6962      	ldr	r2, [r4, #20]
 803344a:	4252      	negs	r2, r2
 803344c:	61a2      	str	r2, [r4, #24]
 803344e:	6922      	ldr	r2, [r4, #16]
 8033450:	b942      	cbnz	r2, 8033464 <__swsetup_r+0xa4>
 8033452:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8033456:	d1c5      	bne.n	80333e4 <__swsetup_r+0x24>
 8033458:	bd38      	pop	{r3, r4, r5, pc}
 803345a:	0799      	lsls	r1, r3, #30
 803345c:	bf58      	it	pl
 803345e:	6962      	ldrpl	r2, [r4, #20]
 8033460:	60a2      	str	r2, [r4, #8]
 8033462:	e7f4      	b.n	803344e <__swsetup_r+0x8e>
 8033464:	2000      	movs	r0, #0
 8033466:	e7f7      	b.n	8033458 <__swsetup_r+0x98>
 8033468:	20000254 	.word	0x20000254

0803346c <memchr>:
 803346c:	b2c9      	uxtb	r1, r1
 803346e:	4603      	mov	r3, r0
 8033470:	4402      	add	r2, r0
 8033472:	b510      	push	{r4, lr}
 8033474:	4293      	cmp	r3, r2
 8033476:	4618      	mov	r0, r3
 8033478:	d101      	bne.n	803347e <memchr+0x12>
 803347a:	2000      	movs	r0, #0
 803347c:	e003      	b.n	8033486 <memchr+0x1a>
 803347e:	7804      	ldrb	r4, [r0, #0]
 8033480:	3301      	adds	r3, #1
 8033482:	428c      	cmp	r4, r1
 8033484:	d1f6      	bne.n	8033474 <memchr+0x8>
 8033486:	bd10      	pop	{r4, pc}

08033488 <__swhatbuf_r>:
 8033488:	b570      	push	{r4, r5, r6, lr}
 803348a:	460c      	mov	r4, r1
 803348c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8033490:	b096      	sub	sp, #88	@ 0x58
 8033492:	4615      	mov	r5, r2
 8033494:	2900      	cmp	r1, #0
 8033496:	461e      	mov	r6, r3
 8033498:	da0c      	bge.n	80334b4 <__swhatbuf_r+0x2c>
 803349a:	89a3      	ldrh	r3, [r4, #12]
 803349c:	2100      	movs	r1, #0
 803349e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80334a2:	bf14      	ite	ne
 80334a4:	2340      	movne	r3, #64	@ 0x40
 80334a6:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80334aa:	2000      	movs	r0, #0
 80334ac:	6031      	str	r1, [r6, #0]
 80334ae:	602b      	str	r3, [r5, #0]
 80334b0:	b016      	add	sp, #88	@ 0x58
 80334b2:	bd70      	pop	{r4, r5, r6, pc}
 80334b4:	466a      	mov	r2, sp
 80334b6:	f000 f849 	bl	803354c <_fstat_r>
 80334ba:	2800      	cmp	r0, #0
 80334bc:	dbed      	blt.n	803349a <__swhatbuf_r+0x12>
 80334be:	9901      	ldr	r1, [sp, #4]
 80334c0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80334c4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80334c8:	4259      	negs	r1, r3
 80334ca:	4159      	adcs	r1, r3
 80334cc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80334d0:	e7eb      	b.n	80334aa <__swhatbuf_r+0x22>

080334d2 <__smakebuf_r>:
 80334d2:	898b      	ldrh	r3, [r1, #12]
 80334d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80334d6:	079d      	lsls	r5, r3, #30
 80334d8:	4606      	mov	r6, r0
 80334da:	460c      	mov	r4, r1
 80334dc:	d507      	bpl.n	80334ee <__smakebuf_r+0x1c>
 80334de:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80334e2:	6023      	str	r3, [r4, #0]
 80334e4:	6123      	str	r3, [r4, #16]
 80334e6:	2301      	movs	r3, #1
 80334e8:	6163      	str	r3, [r4, #20]
 80334ea:	b003      	add	sp, #12
 80334ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80334ee:	ab01      	add	r3, sp, #4
 80334f0:	466a      	mov	r2, sp
 80334f2:	f7ff ffc9 	bl	8033488 <__swhatbuf_r>
 80334f6:	9f00      	ldr	r7, [sp, #0]
 80334f8:	4605      	mov	r5, r0
 80334fa:	4630      	mov	r0, r6
 80334fc:	4639      	mov	r1, r7
 80334fe:	f7ff f859 	bl	80325b4 <_malloc_r>
 8033502:	b948      	cbnz	r0, 8033518 <__smakebuf_r+0x46>
 8033504:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033508:	059a      	lsls	r2, r3, #22
 803350a:	d4ee      	bmi.n	80334ea <__smakebuf_r+0x18>
 803350c:	f023 0303 	bic.w	r3, r3, #3
 8033510:	f043 0302 	orr.w	r3, r3, #2
 8033514:	81a3      	strh	r3, [r4, #12]
 8033516:	e7e2      	b.n	80334de <__smakebuf_r+0xc>
 8033518:	89a3      	ldrh	r3, [r4, #12]
 803351a:	6020      	str	r0, [r4, #0]
 803351c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8033520:	81a3      	strh	r3, [r4, #12]
 8033522:	9b01      	ldr	r3, [sp, #4]
 8033524:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8033528:	b15b      	cbz	r3, 8033542 <__smakebuf_r+0x70>
 803352a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 803352e:	4630      	mov	r0, r6
 8033530:	f000 f81e 	bl	8033570 <_isatty_r>
 8033534:	b128      	cbz	r0, 8033542 <__smakebuf_r+0x70>
 8033536:	89a3      	ldrh	r3, [r4, #12]
 8033538:	f023 0303 	bic.w	r3, r3, #3
 803353c:	f043 0301 	orr.w	r3, r3, #1
 8033540:	81a3      	strh	r3, [r4, #12]
 8033542:	89a3      	ldrh	r3, [r4, #12]
 8033544:	431d      	orrs	r5, r3
 8033546:	81a5      	strh	r5, [r4, #12]
 8033548:	e7cf      	b.n	80334ea <__smakebuf_r+0x18>
	...

0803354c <_fstat_r>:
 803354c:	b538      	push	{r3, r4, r5, lr}
 803354e:	2300      	movs	r3, #0
 8033550:	4d06      	ldr	r5, [pc, #24]	@ (803356c <_fstat_r+0x20>)
 8033552:	4604      	mov	r4, r0
 8033554:	4608      	mov	r0, r1
 8033556:	4611      	mov	r1, r2
 8033558:	602b      	str	r3, [r5, #0]
 803355a:	f7cd fcd4 	bl	8000f06 <_fstat>
 803355e:	1c43      	adds	r3, r0, #1
 8033560:	d102      	bne.n	8033568 <_fstat_r+0x1c>
 8033562:	682b      	ldr	r3, [r5, #0]
 8033564:	b103      	cbz	r3, 8033568 <_fstat_r+0x1c>
 8033566:	6023      	str	r3, [r4, #0]
 8033568:	bd38      	pop	{r3, r4, r5, pc}
 803356a:	bf00      	nop
 803356c:	20083584 	.word	0x20083584

08033570 <_isatty_r>:
 8033570:	b538      	push	{r3, r4, r5, lr}
 8033572:	2300      	movs	r3, #0
 8033574:	4d05      	ldr	r5, [pc, #20]	@ (803358c <_isatty_r+0x1c>)
 8033576:	4604      	mov	r4, r0
 8033578:	4608      	mov	r0, r1
 803357a:	602b      	str	r3, [r5, #0]
 803357c:	f7cd fcc8 	bl	8000f10 <_isatty>
 8033580:	1c43      	adds	r3, r0, #1
 8033582:	d102      	bne.n	803358a <_isatty_r+0x1a>
 8033584:	682b      	ldr	r3, [r5, #0]
 8033586:	b103      	cbz	r3, 803358a <_isatty_r+0x1a>
 8033588:	6023      	str	r3, [r4, #0]
 803358a:	bd38      	pop	{r3, r4, r5, pc}
 803358c:	20083584 	.word	0x20083584

08033590 <_init>:
 8033590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033592:	bf00      	nop
 8033594:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033596:	bc08      	pop	{r3}
 8033598:	469e      	mov	lr, r3
 803359a:	4770      	bx	lr

0803359c <_fini>:
 803359c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803359e:	bf00      	nop
 80335a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80335a2:	bc08      	pop	{r3}
 80335a4:	469e      	mov	lr, r3
 80335a6:	4770      	bx	lr
